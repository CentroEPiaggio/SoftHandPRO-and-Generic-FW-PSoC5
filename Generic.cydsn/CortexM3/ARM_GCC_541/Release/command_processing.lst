ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC81:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 35


 805              	.LC82:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC83:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC84:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC85:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC86:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC87:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC88:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC89:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC90:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC91:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 36


 835              	.LC92:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC93:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC94:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC95:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC96:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC97:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC98:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC99:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC100:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC101:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC102:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC103:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC104:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC105:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC106:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC107:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC108:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC109:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC110:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891 019f 00       		.align	2
 892              	.LC111:
 893 01a0 20414952 		.ascii	" AIR CHAMBERS \000\000"
 893      20434841 
 893      4D424552 
 893      53200000 
 894              		.section	.text.get_param_list,"ax",%progbits
 895              		.align	2
 896              		.global	get_param_list
 897              		.thumb
 898              		.thumb_func
 899              		.type	get_param_list, %function
 900              	get_param_list:
 901              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 38


 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 902              		.loc 1 345 0
 903              		.cfi_startproc
 904              		@ args = 16, pretend = 0, frame = 5208
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 ADF5A25D 		sub	sp, sp, #5184
 914              		.cfi_def_cfa_offset 5204
 915 0006 87B0     		sub	sp, sp, #28
 916              		.cfi_def_cfa_offset 5232
 917 0008 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 000a 07F11804 		add	r4, r7, #24
 920 000e 0C3C     		subs	r4, r4, #12
 921 0010 2060     		str	r0, [r4]
 922 0012 07F11800 		add	r0, r7, #24
 923 0016 1038     		subs	r0, r0, #16
 924 0018 0160     		str	r1, [r0]
 925 001a 07F11801 		add	r1, r7, #24
 926 001e 1439     		subs	r1, r1, #20
 927 0020 0A60     		str	r2, [r1]
 928 0022 07F11802 		add	r2, r7, #24
 929 0026 183A     		subs	r2, r2, #24
 930 0028 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 931              		.loc 1 348 0
 932 002a 07F15803 		add	r3, r7, #88
 933 002e 0022     		movs	r2, #0
 934 0030 1A60     		str	r2, [r3]
 935 0032 0433     		adds	r3, r3, #4
 936 0034 41F2E832 		movw	r2, #5096
 937 0038 0021     		movs	r1, #0
 938 003a 1846     		mov	r0, r3
 939 003c FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 940              		.loc 1 349 0
 941 0040 41F2EC33 		movw	r3, #5100
 942 0044 07F5A252 		add	r2, r7, #5184
 943 0048 02F11002 		add	r2, r2, #16
 944 004c 1380     		strh	r3, [r2]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 945              		.loc 1 353 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 39


 946 004e 0023     		movs	r3, #0
 947 0050 07F5A252 		add	r2, r7, #5184
 948 0054 02F11502 		add	r2, r2, #21
 949 0058 1370     		strb	r3, [r2]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 950              		.loc 1 354 0
 951 005a 0023     		movs	r3, #0
 952 005c 07F5A252 		add	r2, r7, #5184
 953 0060 02F11402 		add	r2, r2, #20
 954 0064 1370     		strb	r3, [r2]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 955              		.loc 1 355 0
 956 0066 0023     		movs	r3, #0
 957 0068 07F5A252 		add	r2, r7, #5184
 958 006c 02F11302 		add	r2, r2, #19
 959 0070 1370     		strb	r3, [r2]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 960              		.loc 1 357 0
 961 0072 07F13803 		add	r3, r7, #56
 962 0076 143B     		subs	r3, r3, #20
 963 0078 0022     		movs	r2, #0
 964 007a 1A60     		str	r2, [r3]
 965 007c 0433     		adds	r3, r3, #4
 966 007e 2E22     		movs	r2, #46
 967 0080 0021     		movs	r1, #0
 968 0082 1846     		mov	r0, r3
 969 0084 FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 970              		.loc 1 364 0
 971 0088 0023     		movs	r3, #0
 972 008a 07F5A252 		add	r2, r7, #5184
 973 008e 02F10F02 		add	r2, r2, #15
 974 0092 1370     		strb	r3, [r2]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 975              		.loc 1 365 0
 976 0094 0123     		movs	r3, #1
 977 0096 07F5A252 		add	r2, r7, #5184
 978 009a 02F10E02 		add	r2, r2, #14
 979 009e 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 980              		.loc 1 367 0
 981 00a0 07F11803 		add	r3, r7, #24
 982 00a4 0C3B     		subs	r3, r3, #12
 983 00a6 1B68     		ldr	r3, [r3]
 984 00a8 1B68     		ldr	r3, [r3]
 985 00aa 07F5A252 		add	r2, r7, #5184
 986 00ae 02F10802 		add	r2, r2, #8
 987 00b2 1360     		str	r3, [r2]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 40


 988              		.loc 1 368 0
 989 00b4 07F5A253 		add	r3, r7, #5184
 990 00b8 03F10803 		add	r3, r3, #8
 991 00bc 1B68     		ldr	r3, [r3]
 992 00be 07F5A252 		add	r2, r7, #5184
 993 00c2 02F10402 		add	r2, r2, #4
 994 00c6 1360     		str	r3, [r2]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 995              		.loc 1 370 0
 996 00c8 07F15803 		add	r3, r7, #88
 997 00cc 0C22     		movs	r2, #12
 998 00ce 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 999              		.loc 1 371 0
 1000 00d0 07F15803 		add	r3, r7, #88
 1001 00d4 4722     		movs	r2, #71
 1002 00d6 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1003              		.loc 1 373 0
 1004 00d8 0023     		movs	r3, #0
 1005 00da 07F5A252 		add	r2, r7, #5184
 1006 00de 02F11502 		add	r2, r2, #21
 1007 00e2 1370     		strb	r3, [r2]
 1008 00e4 02F092BE 		b	.L63
 1009              	.L249:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1010              		.loc 1 376 0
 1011 00e8 07F5A253 		add	r3, r7, #5184
 1012 00ec 03F11503 		add	r3, r3, #21
 1013 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014 00f2 9A00     		lsls	r2, r3, #2
 1015 00f4 07F11803 		add	r3, r7, #24
 1016 00f8 0C3B     		subs	r3, r3, #12
 1017 00fa 1B68     		ldr	r3, [r3]
 1018 00fc 1344     		add	r3, r3, r2
 1019 00fe 1B68     		ldr	r3, [r3]
 1020 0100 07F5A252 		add	r2, r7, #5184
 1021 0104 02F10802 		add	r2, r2, #8
 1022 0108 1360     		str	r3, [r2]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1023              		.loc 1 379 0
 1024 010a 07F5A253 		add	r3, r7, #5184
 1025 010e 03F11503 		add	r3, r3, #21
 1026 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0114 3222     		movs	r2, #50
 1028 0116 02FB03F3 		mul	r3, r2, r3
 1029 011a 9A1C     		adds	r2, r3, #2
 1030 011c 07F5A253 		add	r3, r7, #5184
 1031 0120 03F11503 		add	r3, r3, #21
 1032 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1033 0126 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 41


 1034 012a 103B     		subs	r3, r3, #16
 1035 012c 1B68     		ldr	r3, [r3]
 1036 012e 0B44     		add	r3, r3, r1
 1037 0130 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1038 0132 07F15803 		add	r3, r7, #88
 1039 0136 9954     		strb	r1, [r3, r2]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1040              		.loc 1 380 0
 1041 0138 07F5A253 		add	r3, r7, #5184
 1042 013c 03F11503 		add	r3, r3, #21
 1043 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0142 3222     		movs	r2, #50
 1045 0144 02FB03F3 		mul	r3, r2, r3
 1046 0148 DA1C     		adds	r2, r3, #3
 1047 014a 07F5A253 		add	r3, r7, #5184
 1048 014e 03F11503 		add	r3, r3, #21
 1049 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1050 0154 07F11803 		add	r3, r7, #24
 1051 0158 143B     		subs	r3, r3, #20
 1052 015a 1B68     		ldr	r3, [r3]
 1053 015c 0B44     		add	r3, r3, r1
 1054 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1055 0160 07F15803 		add	r3, r7, #88
 1056 0164 9954     		strb	r1, [r3, r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1057              		.loc 1 383 0
 1058 0166 07F5A253 		add	r3, r7, #5184
 1059 016a 03F11503 		add	r3, r3, #21
 1060 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1061 0170 07F11803 		add	r3, r7, #24
 1062 0174 103B     		subs	r3, r3, #16
 1063 0176 1B68     		ldr	r3, [r3]
 1064 0178 1344     		add	r3, r3, r2
 1065 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 017c 092B     		cmp	r3, #9
 1067 017e 2CD8     		bhi	.L64
 1068 0180 01A2     		adr	r2, .L66
 1069 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1070 0186 00BF     		.p2align 2
 1071              	.L66:
 1072 0188 B1010000 		.word	.L65+1
 1073 018c B1010000 		.word	.L65+1
 1074 0190 B1010000 		.word	.L65+1
 1075 0194 BF010000 		.word	.L67+1
 1076 0198 BF010000 		.word	.L67+1
 1077 019c CD010000 		.word	.L68+1
 1078 01a0 CD010000 		.word	.L68+1
 1079 01a4 CD010000 		.word	.L68+1
 1080 01a8 DB010000 		.word	.L64+1
 1081 01ac B1010000 		.word	.L65+1
 1082              		.p2align 1
 1083              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1084              		.loc 1 385 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 42


 1085 01b0 0123     		movs	r3, #1
 1086 01b2 07F5A252 		add	r2, r7, #5184
 1087 01b6 02F11302 		add	r2, r2, #19
 1088 01ba 1370     		strb	r3, [r2]
 1089 01bc 0DE0     		b	.L64
 1090              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1091              		.loc 1 387 0
 1092 01be 0223     		movs	r3, #2
 1093 01c0 07F5A252 		add	r2, r7, #5184
 1094 01c4 02F11302 		add	r2, r2, #19
 1095 01c8 1370     		strb	r3, [r2]
 1096 01ca 06E0     		b	.L64
 1097              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1098              		.loc 1 389 0
 1099 01cc 0423     		movs	r3, #4
 1100 01ce 07F5A252 		add	r2, r7, #5184
 1101 01d2 02F11302 		add	r2, r2, #19
 1102 01d6 1370     		strb	r3, [r2]
 1103 01d8 00BF     		nop
 1104              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1105              		.loc 1 392 0
 1106 01da 07F5A253 		add	r3, r7, #5184
 1107 01de 03F11503 		add	r3, r3, #21
 1108 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 01e4 07F5A352 		add	r2, r7, #5216
 1110 01e8 02F11802 		add	r2, r2, #24
 1111 01ec 1268     		ldr	r2, [r2]
 1112 01ee 1344     		add	r3, r3, r2
 1113 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 01f2 002B     		cmp	r3, #0
 1115 01f4 40F0D383 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1116              		.loc 1 395 0
 1117 01f8 07F5A253 		add	r3, r7, #5184
 1118 01fc 03F11503 		add	r3, r3, #21
 1119 0200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1120 0202 07F11803 		add	r3, r7, #24
 1121 0206 103B     		subs	r3, r3, #16
 1122 0208 1B68     		ldr	r3, [r3]
 1123 020a 1344     		add	r3, r3, r2
 1124 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 020e 092B     		cmp	r3, #9
 1126 0210 02F2FF80 		bhi	.L103
 1127 0214 01A2     		adr	r2, .L72
 1128 0216 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1129 021a 00BF     		.p2align 2
 1130              	.L72:
 1131 021c 45020000 		.word	.L71+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 43


 1132 0220 FF020000 		.word	.L73+1
 1133 0224 45020000 		.word	.L71+1
 1134 0228 B9030000 		.word	.L74+1
 1135 022c E9040000 		.word	.L75+1
 1136 0230 17060000 		.word	.L76+1
 1137 0234 41070000 		.word	.L77+1
 1138 0238 6F080000 		.word	.L78+1
 1139 023c 13240000 		.word	.L103+1
 1140 0240 45020000 		.word	.L71+1
 1141              		.p2align 1
 1142              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1143              		.loc 1 397 0
 1144 0244 0023     		movs	r3, #0
 1145 0246 07F5A252 		add	r2, r7, #5184
 1146 024a 02F11702 		add	r2, r2, #23
 1147 024e 1370     		strb	r3, [r2]
 1148 0250 41E0     		b	.L79
 1149              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1150              		.loc 1 398 0 discriminator 3
 1151 0252 07F5A253 		add	r3, r7, #5184
 1152 0256 03F11703 		add	r3, r3, #23
 1153 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 025c 07F5A252 		add	r2, r7, #5184
 1155 0260 02F11302 		add	r2, r2, #19
 1156 0264 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1157 0266 02FB03F3 		mul	r3, r2, r3
 1158 026a 1A46     		mov	r2, r3
 1159 026c 07F5A253 		add	r3, r7, #5184
 1160 0270 03F10803 		add	r3, r3, #8
 1161 0274 1B68     		ldr	r3, [r3]
 1162 0276 1344     		add	r3, r3, r2
 1163 0278 07F5A252 		add	r2, r7, #5184
 1164 027c 02F10402 		add	r2, r2, #4
 1165 0280 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1166              		.loc 1 399 0 discriminator 3
 1167 0282 07F5A253 		add	r3, r7, #5184
 1168 0286 03F11503 		add	r3, r3, #21
 1169 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1170 028c 3222     		movs	r2, #50
 1171 028e 02FB03F3 		mul	r3, r2, r3
 1172 0292 1A1D     		adds	r2, r3, #4
 1173 0294 07F5A253 		add	r3, r7, #5184
 1174 0298 03F11703 		add	r3, r3, #23
 1175 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 029e 07F5A251 		add	r1, r7, #5184
 1177 02a2 01F11301 		add	r1, r1, #19
 1178 02a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1179 02a8 01FB03F3 		mul	r3, r1, r3
 1180 02ac 1344     		add	r3, r3, r2
 1181 02ae 07F5A252 		add	r2, r7, #5184
 1182 02b2 02F10402 		add	r2, r2, #4
 1183 02b6 1268     		ldr	r2, [r2]
 1184 02b8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 44


 1185 02ba 07F15802 		add	r2, r7, #88
 1186 02be D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1187              		.loc 1 397 0 discriminator 3
 1188 02c0 07F5A253 		add	r3, r7, #5184
 1189 02c4 03F11703 		add	r3, r3, #23
 1190 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 02ca 0133     		adds	r3, r3, #1
 1192 02cc 07F5A252 		add	r2, r7, #5184
 1193 02d0 02F11702 		add	r2, r2, #23
 1194 02d4 1370     		strb	r3, [r2]
 1195              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1196              		.loc 1 397 0 is_stmt 0 discriminator 1
 1197 02d6 07F5A253 		add	r3, r7, #5184
 1198 02da 03F11503 		add	r3, r3, #21
 1199 02de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1200 02e0 07F11803 		add	r3, r7, #24
 1201 02e4 143B     		subs	r3, r3, #20
 1202 02e6 1B68     		ldr	r3, [r3]
 1203 02e8 1344     		add	r3, r3, r2
 1204 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 02ec 07F5A252 		add	r2, r7, #5184
 1206 02f0 02F11702 		add	r2, r2, #23
 1207 02f4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1208 02f6 9A42     		cmp	r2, r3
 1209 02f8 ABD3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1210              		.loc 1 401 0 is_stmt 1
 1211 02fa 02F08AB8 		b	.L103
 1212              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1213              		.loc 1 403 0
 1214 02fe 0023     		movs	r3, #0
 1215 0300 07F5A252 		add	r2, r7, #5184
 1216 0304 02F11702 		add	r2, r2, #23
 1217 0308 1370     		strb	r3, [r2]
 1218 030a 41E0     		b	.L81
 1219              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1220              		.loc 1 404 0 discriminator 3
 1221 030c 07F5A253 		add	r3, r7, #5184
 1222 0310 03F11703 		add	r3, r3, #23
 1223 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1224 0316 07F5A252 		add	r2, r7, #5184
 1225 031a 02F11302 		add	r2, r2, #19
 1226 031e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1227 0320 02FB03F3 		mul	r3, r2, r3
 1228 0324 1A46     		mov	r2, r3
 1229 0326 07F5A253 		add	r3, r7, #5184
 1230 032a 03F10803 		add	r3, r3, #8
 1231 032e 1B68     		ldr	r3, [r3]
 1232 0330 1344     		add	r3, r3, r2
 1233 0332 07F5A252 		add	r2, r7, #5184
 1234 0336 02F10402 		add	r2, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 45


 1235 033a 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1236              		.loc 1 405 0 discriminator 3
 1237 033c 07F5A253 		add	r3, r7, #5184
 1238 0340 03F11503 		add	r3, r3, #21
 1239 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1240 0346 3222     		movs	r2, #50
 1241 0348 02FB03F3 		mul	r3, r2, r3
 1242 034c 1A1D     		adds	r2, r3, #4
 1243 034e 07F5A253 		add	r3, r7, #5184
 1244 0352 03F11703 		add	r3, r3, #23
 1245 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246 0358 07F5A251 		add	r1, r7, #5184
 1247 035c 01F11301 		add	r1, r1, #19
 1248 0360 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1249 0362 01FB03F3 		mul	r3, r1, r3
 1250 0366 1344     		add	r3, r3, r2
 1251 0368 07F5A252 		add	r2, r7, #5184
 1252 036c 02F10402 		add	r2, r2, #4
 1253 0370 1268     		ldr	r2, [r2]
 1254 0372 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1255 0374 07F15802 		add	r2, r7, #88
 1256 0378 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1257              		.loc 1 403 0 discriminator 3
 1258 037a 07F5A253 		add	r3, r7, #5184
 1259 037e 03F11703 		add	r3, r3, #23
 1260 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0384 0133     		adds	r3, r3, #1
 1262 0386 07F5A252 		add	r2, r7, #5184
 1263 038a 02F11702 		add	r2, r2, #23
 1264 038e 1370     		strb	r3, [r2]
 1265              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1266              		.loc 1 403 0 is_stmt 0 discriminator 1
 1267 0390 07F5A253 		add	r3, r7, #5184
 1268 0394 03F11503 		add	r3, r3, #21
 1269 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1270 039a 07F11803 		add	r3, r7, #24
 1271 039e 143B     		subs	r3, r3, #20
 1272 03a0 1B68     		ldr	r3, [r3]
 1273 03a2 1344     		add	r3, r3, r2
 1274 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1275 03a6 07F5A252 		add	r2, r7, #5184
 1276 03aa 02F11702 		add	r2, r2, #23
 1277 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1278 03b0 9A42     		cmp	r2, r3
 1279 03b2 ABD3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1280              		.loc 1 407 0 is_stmt 1
 1281 03b4 02F02DB8 		b	.L103
 1282              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1283              		.loc 1 409 0
 1284 03b8 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 46


 1285 03ba 07F5A252 		add	r2, r7, #5184
 1286 03be 02F11702 		add	r2, r2, #23
 1287 03c2 1370     		strb	r3, [r2]
 1288 03c4 7BE0     		b	.L83
 1289              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1290              		.loc 1 410 0
 1291 03c6 07F5A253 		add	r3, r7, #5184
 1292 03ca 03F11703 		add	r3, r3, #23
 1293 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 03d0 07F5A252 		add	r2, r7, #5184
 1295 03d4 02F11302 		add	r2, r2, #19
 1296 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1297 03da 02FB03F3 		mul	r3, r2, r3
 1298 03de 1A46     		mov	r2, r3
 1299 03e0 07F5A253 		add	r3, r7, #5184
 1300 03e4 03F10803 		add	r3, r3, #8
 1301 03e8 1B68     		ldr	r3, [r3]
 1302 03ea 1344     		add	r3, r3, r2
 1303 03ec 07F5A252 		add	r2, r7, #5184
 1304 03f0 02F10402 		add	r2, r2, #4
 1305 03f4 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1306              		.loc 1 411 0
 1307 03f6 07F5A253 		add	r3, r7, #5184
 1308 03fa 03F10403 		add	r3, r3, #4
 1309 03fe 1B68     		ldr	r3, [r3]
 1310 0400 B3F90020 		ldrsh	r2, [r3]
 1311 0404 07F13803 		add	r3, r7, #56
 1312 0408 1A3B     		subs	r3, r3, #26
 1313 040a 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1314              		.loc 1 412 0
 1315 040c 0023     		movs	r3, #0
 1316 040e 07F5A252 		add	r2, r7, #5184
 1317 0412 02F11602 		add	r2, r2, #22
 1318 0416 1370     		strb	r3, [r2]
 1319 0418 3AE0     		b	.L84
 1320              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1321              		.loc 1 413 0 discriminator 3
 1322 041a 07F5A253 		add	r3, r7, #5184
 1323 041e 03F11503 		add	r3, r3, #21
 1324 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0424 3222     		movs	r2, #50
 1326 0426 02FB03F3 		mul	r3, r2, r3
 1327 042a 1A1D     		adds	r2, r3, #4
 1328 042c 07F5A253 		add	r3, r7, #5184
 1329 0430 03F11703 		add	r3, r3, #23
 1330 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1331 0436 07F5A251 		add	r1, r7, #5184
 1332 043a 01F11301 		add	r1, r1, #19
 1333 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1334 0440 01FB03F3 		mul	r3, r1, r3
 1335 0444 1A44     		add	r2, r2, r3
 1336 0446 07F5A253 		add	r3, r7, #5184
 1337 044a 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 47


 1338 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 0450 1A44     		add	r2, r2, r3
 1340 0452 07F5A253 		add	r3, r7, #5184
 1341 0456 03F11603 		add	r3, r3, #22
 1342 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 045c D31A     		subs	r3, r2, r3
 1344 045e 5A1E     		subs	r2, r3, #1
 1345 0460 07F5A253 		add	r3, r7, #5184
 1346 0464 03F11603 		add	r3, r3, #22
 1347 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1348 046a 07F13803 		add	r3, r7, #56
 1349 046e 1A3B     		subs	r3, r3, #26
 1350 0470 0B44     		add	r3, r3, r1
 1351 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1352 0474 07F15803 		add	r3, r7, #88
 1353 0478 9954     		strb	r1, [r3, r2]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1354              		.loc 1 412 0 discriminator 3
 1355 047a 07F5A253 		add	r3, r7, #5184
 1356 047e 03F11603 		add	r3, r3, #22
 1357 0482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 0484 0133     		adds	r3, r3, #1
 1359 0486 07F5A252 		add	r2, r7, #5184
 1360 048a 02F11602 		add	r2, r2, #22
 1361 048e 1370     		strb	r3, [r2]
 1362              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1363              		.loc 1 412 0 is_stmt 0 discriminator 1
 1364 0490 07F5A253 		add	r3, r7, #5184
 1365 0494 03F11603 		add	r3, r3, #22
 1366 0498 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1367 049a 07F5A253 		add	r3, r7, #5184
 1368 049e 03F11303 		add	r3, r3, #19
 1369 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 04a4 9A42     		cmp	r2, r3
 1371 04a6 B8D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1372              		.loc 1 409 0 is_stmt 1 discriminator 2
 1373 04a8 07F5A253 		add	r3, r7, #5184
 1374 04ac 03F11703 		add	r3, r3, #23
 1375 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 04b2 0133     		adds	r3, r3, #1
 1377 04b4 07F5A252 		add	r2, r7, #5184
 1378 04b8 02F11702 		add	r2, r2, #23
 1379 04bc 1370     		strb	r3, [r2]
 1380              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 409 0 is_stmt 0 discriminator 1
 1382 04be 07F5A253 		add	r3, r7, #5184
 1383 04c2 03F11503 		add	r3, r3, #21
 1384 04c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1385 04c8 07F11803 		add	r3, r7, #24
 1386 04cc 143B     		subs	r3, r3, #20
 1387 04ce 1B68     		ldr	r3, [r3]
 1388 04d0 1344     		add	r3, r3, r2
 1389 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 04d4 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 48


 1391 04d8 02F11702 		add	r2, r2, #23
 1392 04dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1393 04de 9A42     		cmp	r2, r3
 1394 04e0 FFF471AF 		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1395              		.loc 1 416 0 is_stmt 1
 1396 04e4 01F095BF 		b	.L103
 1397              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1398              		.loc 1 418 0
 1399 04e8 0023     		movs	r3, #0
 1400 04ea 07F5A252 		add	r2, r7, #5184
 1401 04ee 02F11702 		add	r2, r2, #23
 1402 04f2 1370     		strb	r3, [r2]
 1403 04f4 7AE0     		b	.L87
 1404              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1405              		.loc 1 419 0
 1406 04f6 07F5A253 		add	r3, r7, #5184
 1407 04fa 03F11703 		add	r3, r3, #23
 1408 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 0500 07F5A252 		add	r2, r7, #5184
 1410 0504 02F11302 		add	r2, r2, #19
 1411 0508 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1412 050a 02FB03F3 		mul	r3, r2, r3
 1413 050e 1A46     		mov	r2, r3
 1414 0510 07F5A253 		add	r3, r7, #5184
 1415 0514 03F10803 		add	r3, r3, #8
 1416 0518 1B68     		ldr	r3, [r3]
 1417 051a 1344     		add	r3, r3, r2
 1418 051c 07F5A252 		add	r2, r7, #5184
 1419 0520 02F10402 		add	r2, r2, #4
 1420 0524 1360     		str	r3, [r2]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1421              		.loc 1 420 0
 1422 0526 07F5A253 		add	r3, r7, #5184
 1423 052a 03F10403 		add	r3, r3, #4
 1424 052e 1B68     		ldr	r3, [r3]
 1425 0530 1A88     		ldrh	r2, [r3]
 1426 0532 07F13803 		add	r3, r7, #56
 1427 0536 1C3B     		subs	r3, r3, #28
 1428 0538 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1429              		.loc 1 421 0
 1430 053a 0023     		movs	r3, #0
 1431 053c 07F5A252 		add	r2, r7, #5184
 1432 0540 02F11602 		add	r2, r2, #22
 1433 0544 1370     		strb	r3, [r2]
 1434 0546 3AE0     		b	.L88
 1435              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1436              		.loc 1 422 0 discriminator 3
 1437 0548 07F5A253 		add	r3, r7, #5184
 1438 054c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 49


 1439 0550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1440 0552 3222     		movs	r2, #50
 1441 0554 02FB03F3 		mul	r3, r2, r3
 1442 0558 1A1D     		adds	r2, r3, #4
 1443 055a 07F5A253 		add	r3, r7, #5184
 1444 055e 03F11703 		add	r3, r3, #23
 1445 0562 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 0564 07F5A251 		add	r1, r7, #5184
 1447 0568 01F11301 		add	r1, r1, #19
 1448 056c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1449 056e 01FB03F3 		mul	r3, r1, r3
 1450 0572 1A44     		add	r2, r2, r3
 1451 0574 07F5A253 		add	r3, r7, #5184
 1452 0578 03F11303 		add	r3, r3, #19
 1453 057c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 057e 1A44     		add	r2, r2, r3
 1455 0580 07F5A253 		add	r3, r7, #5184
 1456 0584 03F11603 		add	r3, r3, #22
 1457 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 058a D31A     		subs	r3, r2, r3
 1459 058c 5A1E     		subs	r2, r3, #1
 1460 058e 07F5A253 		add	r3, r7, #5184
 1461 0592 03F11603 		add	r3, r3, #22
 1462 0596 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1463 0598 07F13803 		add	r3, r7, #56
 1464 059c 1C3B     		subs	r3, r3, #28
 1465 059e 0B44     		add	r3, r3, r1
 1466 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1467 05a2 07F15803 		add	r3, r7, #88
 1468 05a6 9954     		strb	r1, [r3, r2]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1469              		.loc 1 421 0 discriminator 3
 1470 05a8 07F5A253 		add	r3, r7, #5184
 1471 05ac 03F11603 		add	r3, r3, #22
 1472 05b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 05b2 0133     		adds	r3, r3, #1
 1474 05b4 07F5A252 		add	r2, r7, #5184
 1475 05b8 02F11602 		add	r2, r2, #22
 1476 05bc 1370     		strb	r3, [r2]
 1477              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1478              		.loc 1 421 0 is_stmt 0 discriminator 1
 1479 05be 07F5A253 		add	r3, r7, #5184
 1480 05c2 03F11603 		add	r3, r3, #22
 1481 05c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1482 05c8 07F5A253 		add	r3, r7, #5184
 1483 05cc 03F11303 		add	r3, r3, #19
 1484 05d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 05d2 9A42     		cmp	r2, r3
 1486 05d4 B8D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1487              		.loc 1 418 0 is_stmt 1 discriminator 2
 1488 05d6 07F5A253 		add	r3, r7, #5184
 1489 05da 03F11703 		add	r3, r3, #23
 1490 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 05e0 0133     		adds	r3, r3, #1
 1492 05e2 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 50


 1493 05e6 02F11702 		add	r2, r2, #23
 1494 05ea 1370     		strb	r3, [r2]
 1495              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1496              		.loc 1 418 0 is_stmt 0 discriminator 1
 1497 05ec 07F5A253 		add	r3, r7, #5184
 1498 05f0 03F11503 		add	r3, r3, #21
 1499 05f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1500 05f6 07F11803 		add	r3, r7, #24
 1501 05fa 143B     		subs	r3, r3, #20
 1502 05fc 1B68     		ldr	r3, [r3]
 1503 05fe 1344     		add	r3, r3, r2
 1504 0600 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 0602 07F5A252 		add	r2, r7, #5184
 1506 0606 02F11702 		add	r2, r2, #23
 1507 060a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1508 060c 9A42     		cmp	r2, r3
 1509 060e FFF472AF 		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1510              		.loc 1 425 0 is_stmt 1
 1511 0612 01F0FEBE 		b	.L103
 1512              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1513              		.loc 1 427 0
 1514 0616 0023     		movs	r3, #0
 1515 0618 07F5A252 		add	r2, r7, #5184
 1516 061c 02F11702 		add	r2, r2, #23
 1517 0620 1370     		strb	r3, [r2]
 1518 0622 78E0     		b	.L91
 1519              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1520              		.loc 1 428 0
 1521 0624 07F5A253 		add	r3, r7, #5184
 1522 0628 03F11703 		add	r3, r3, #23
 1523 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 062e 07F5A252 		add	r2, r7, #5184
 1525 0632 02F11302 		add	r2, r2, #19
 1526 0636 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1527 0638 02FB03F3 		mul	r3, r2, r3
 1528 063c 1A46     		mov	r2, r3
 1529 063e 07F5A253 		add	r3, r7, #5184
 1530 0642 03F10803 		add	r3, r3, #8
 1531 0646 1B68     		ldr	r3, [r3]
 1532 0648 1344     		add	r3, r3, r2
 1533 064a 07F5A252 		add	r2, r7, #5184
 1534 064e 02F10402 		add	r2, r2, #4
 1535 0652 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1536              		.loc 1 429 0
 1537 0654 07F5A253 		add	r3, r7, #5184
 1538 0658 03F10403 		add	r3, r3, #4
 1539 065c 1B68     		ldr	r3, [r3]
 1540 065e 1A68     		ldr	r2, [r3]
 1541 0660 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 51


 1542 0664 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1543              		.loc 1 430 0
 1544 0666 0023     		movs	r3, #0
 1545 0668 07F5A252 		add	r2, r7, #5184
 1546 066c 02F11602 		add	r2, r2, #22
 1547 0670 1370     		strb	r3, [r2]
 1548 0672 39E0     		b	.L92
 1549              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1550              		.loc 1 431 0 discriminator 3
 1551 0674 07F5A253 		add	r3, r7, #5184
 1552 0678 03F11503 		add	r3, r3, #21
 1553 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 067e 3222     		movs	r2, #50
 1555 0680 02FB03F3 		mul	r3, r2, r3
 1556 0684 1A1D     		adds	r2, r3, #4
 1557 0686 07F5A253 		add	r3, r7, #5184
 1558 068a 03F11703 		add	r3, r3, #23
 1559 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 0690 07F5A251 		add	r1, r7, #5184
 1561 0694 01F11301 		add	r1, r1, #19
 1562 0698 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1563 069a 01FB03F3 		mul	r3, r1, r3
 1564 069e 1A44     		add	r2, r2, r3
 1565 06a0 07F5A253 		add	r3, r7, #5184
 1566 06a4 03F11303 		add	r3, r3, #19
 1567 06a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 06aa 1A44     		add	r2, r2, r3
 1569 06ac 07F5A253 		add	r3, r7, #5184
 1570 06b0 03F11603 		add	r3, r3, #22
 1571 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 06b6 D31A     		subs	r3, r2, r3
 1573 06b8 013B     		subs	r3, r3, #1
 1574 06ba 07F5A252 		add	r2, r7, #5184
 1575 06be 02F11602 		add	r2, r2, #22
 1576 06c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1577 06c4 07F11801 		add	r1, r7, #24
 1578 06c8 0A44     		add	r2, r2, r1
 1579 06ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1580 06cc 07F15802 		add	r2, r7, #88
 1581 06d0 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1582              		.loc 1 430 0 discriminator 3
 1583 06d2 07F5A253 		add	r3, r7, #5184
 1584 06d6 03F11603 		add	r3, r3, #22
 1585 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 06dc 0133     		adds	r3, r3, #1
 1587 06de 07F5A252 		add	r2, r7, #5184
 1588 06e2 02F11602 		add	r2, r2, #22
 1589 06e6 1370     		strb	r3, [r2]
 1590              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1591              		.loc 1 430 0 is_stmt 0 discriminator 1
 1592 06e8 07F5A253 		add	r3, r7, #5184
 1593 06ec 03F11603 		add	r3, r3, #22
 1594 06f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 52


 1595 06f2 07F5A253 		add	r3, r7, #5184
 1596 06f6 03F11303 		add	r3, r3, #19
 1597 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 06fc 9A42     		cmp	r2, r3
 1599 06fe B9D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1600              		.loc 1 427 0 is_stmt 1 discriminator 2
 1601 0700 07F5A253 		add	r3, r7, #5184
 1602 0704 03F11703 		add	r3, r3, #23
 1603 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 070a 0133     		adds	r3, r3, #1
 1605 070c 07F5A252 		add	r2, r7, #5184
 1606 0710 02F11702 		add	r2, r2, #23
 1607 0714 1370     		strb	r3, [r2]
 1608              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1609              		.loc 1 427 0 is_stmt 0 discriminator 1
 1610 0716 07F5A253 		add	r3, r7, #5184
 1611 071a 03F11503 		add	r3, r3, #21
 1612 071e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1613 0720 07F11803 		add	r3, r7, #24
 1614 0724 143B     		subs	r3, r3, #20
 1615 0726 1B68     		ldr	r3, [r3]
 1616 0728 1344     		add	r3, r3, r2
 1617 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1618 072c 07F5A252 		add	r2, r7, #5184
 1619 0730 02F11702 		add	r2, r2, #23
 1620 0734 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1621 0736 9A42     		cmp	r2, r3
 1622 0738 FFF474AF 		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1623              		.loc 1 434 0 is_stmt 1
 1624 073c 01F069BE 		b	.L103
 1625              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1626              		.loc 1 436 0
 1627 0740 0023     		movs	r3, #0
 1628 0742 07F5A252 		add	r2, r7, #5184
 1629 0746 02F11702 		add	r2, r2, #23
 1630 074a 1370     		strb	r3, [r2]
 1631 074c 7AE0     		b	.L95
 1632              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1633              		.loc 1 437 0
 1634 074e 07F5A253 		add	r3, r7, #5184
 1635 0752 03F11703 		add	r3, r3, #23
 1636 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1637 0758 07F5A252 		add	r2, r7, #5184
 1638 075c 02F11302 		add	r2, r2, #19
 1639 0760 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1640 0762 02FB03F3 		mul	r3, r2, r3
 1641 0766 1A46     		mov	r2, r3
 1642 0768 07F5A253 		add	r3, r7, #5184
 1643 076c 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 53


 1644 0770 1B68     		ldr	r3, [r3]
 1645 0772 1344     		add	r3, r3, r2
 1646 0774 07F5A252 		add	r2, r7, #5184
 1647 0778 02F10402 		add	r2, r2, #4
 1648 077c 1360     		str	r3, [r2]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1649              		.loc 1 438 0
 1650 077e 07F5A253 		add	r3, r7, #5184
 1651 0782 03F10403 		add	r3, r3, #4
 1652 0786 1B68     		ldr	r3, [r3]
 1653 0788 1A68     		ldr	r2, [r3]
 1654 078a 07F11803 		add	r3, r7, #24
 1655 078e 043B     		subs	r3, r3, #4
 1656 0790 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1657              		.loc 1 439 0
 1658 0792 0023     		movs	r3, #0
 1659 0794 07F5A252 		add	r2, r7, #5184
 1660 0798 02F11602 		add	r2, r2, #22
 1661 079c 1370     		strb	r3, [r2]
 1662 079e 3AE0     		b	.L96
 1663              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1664              		.loc 1 440 0 discriminator 3
 1665 07a0 07F5A253 		add	r3, r7, #5184
 1666 07a4 03F11503 		add	r3, r3, #21
 1667 07a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 07aa 3222     		movs	r2, #50
 1669 07ac 02FB03F3 		mul	r3, r2, r3
 1670 07b0 1A1D     		adds	r2, r3, #4
 1671 07b2 07F5A253 		add	r3, r7, #5184
 1672 07b6 03F11703 		add	r3, r3, #23
 1673 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 07bc 07F5A251 		add	r1, r7, #5184
 1675 07c0 01F11301 		add	r1, r1, #19
 1676 07c4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1677 07c6 01FB03F3 		mul	r3, r1, r3
 1678 07ca 1A44     		add	r2, r2, r3
 1679 07cc 07F5A253 		add	r3, r7, #5184
 1680 07d0 03F11303 		add	r3, r3, #19
 1681 07d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 07d6 1A44     		add	r2, r2, r3
 1683 07d8 07F5A253 		add	r3, r7, #5184
 1684 07dc 03F11603 		add	r3, r3, #22
 1685 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 07e2 D31A     		subs	r3, r2, r3
 1687 07e4 5A1E     		subs	r2, r3, #1
 1688 07e6 07F5A253 		add	r3, r7, #5184
 1689 07ea 03F11603 		add	r3, r3, #22
 1690 07ee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1691 07f0 07F11803 		add	r3, r7, #24
 1692 07f4 043B     		subs	r3, r3, #4
 1693 07f6 0B44     		add	r3, r3, r1
 1694 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1695 07fa 07F15803 		add	r3, r7, #88
 1696 07fe 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 54


 1697              		.loc 1 439 0 discriminator 3
 1698 0800 07F5A253 		add	r3, r7, #5184
 1699 0804 03F11603 		add	r3, r3, #22
 1700 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 080a 0133     		adds	r3, r3, #1
 1702 080c 07F5A252 		add	r2, r7, #5184
 1703 0810 02F11602 		add	r2, r2, #22
 1704 0814 1370     		strb	r3, [r2]
 1705              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1706              		.loc 1 439 0 is_stmt 0 discriminator 1
 1707 0816 07F5A253 		add	r3, r7, #5184
 1708 081a 03F11603 		add	r3, r3, #22
 1709 081e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1710 0820 07F5A253 		add	r3, r7, #5184
 1711 0824 03F11303 		add	r3, r3, #19
 1712 0828 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 082a 9A42     		cmp	r2, r3
 1714 082c B8D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1715              		.loc 1 436 0 is_stmt 1 discriminator 2
 1716 082e 07F5A253 		add	r3, r7, #5184
 1717 0832 03F11703 		add	r3, r3, #23
 1718 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 0838 0133     		adds	r3, r3, #1
 1720 083a 07F5A252 		add	r2, r7, #5184
 1721 083e 02F11702 		add	r2, r2, #23
 1722 0842 1370     		strb	r3, [r2]
 1723              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1724              		.loc 1 436 0 is_stmt 0 discriminator 1
 1725 0844 07F5A253 		add	r3, r7, #5184
 1726 0848 03F11503 		add	r3, r3, #21
 1727 084c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1728 084e 07F11803 		add	r3, r7, #24
 1729 0852 143B     		subs	r3, r3, #20
 1730 0854 1B68     		ldr	r3, [r3]
 1731 0856 1344     		add	r3, r3, r2
 1732 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1733 085a 07F5A252 		add	r2, r7, #5184
 1734 085e 02F11702 		add	r2, r2, #23
 1735 0862 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1736 0864 9A42     		cmp	r2, r3
 1737 0866 FFF472AF 		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1738              		.loc 1 443 0 is_stmt 1
 1739 086a 01F0D2BD 		b	.L103
 1740              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1741              		.loc 1 446 0
 1742 086e 0023     		movs	r3, #0
 1743 0870 07F5A252 		add	r2, r7, #5184
 1744 0874 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 55


 1745 0878 1370     		strb	r3, [r2]
 1746 087a 7AE0     		b	.L99
 1747              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1748              		.loc 1 447 0
 1749 087c 07F5A253 		add	r3, r7, #5184
 1750 0880 03F11703 		add	r3, r3, #23
 1751 0884 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 0886 07F5A252 		add	r2, r7, #5184
 1753 088a 02F11302 		add	r2, r2, #19
 1754 088e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1755 0890 02FB03F3 		mul	r3, r2, r3
 1756 0894 1A46     		mov	r2, r3
 1757 0896 07F5A253 		add	r3, r7, #5184
 1758 089a 03F10803 		add	r3, r3, #8
 1759 089e 1B68     		ldr	r3, [r3]
 1760 08a0 1344     		add	r3, r3, r2
 1761 08a2 07F5A252 		add	r2, r7, #5184
 1762 08a6 02F10402 		add	r2, r2, #4
 1763 08aa 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1764              		.loc 1 448 0
 1765 08ac 07F5A253 		add	r3, r7, #5184
 1766 08b0 03F10403 		add	r3, r3, #4
 1767 08b4 1B68     		ldr	r3, [r3]
 1768 08b6 1A68     		ldr	r2, [r3]	@ float
 1769 08b8 07F13803 		add	r3, r7, #56
 1770 08bc 183B     		subs	r3, r3, #24
 1771 08be 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1772              		.loc 1 449 0
 1773 08c0 0023     		movs	r3, #0
 1774 08c2 07F5A252 		add	r2, r7, #5184
 1775 08c6 02F11602 		add	r2, r2, #22
 1776 08ca 1370     		strb	r3, [r2]
 1777 08cc 3AE0     		b	.L100
 1778              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1779              		.loc 1 450 0 discriminator 3
 1780 08ce 07F5A253 		add	r3, r7, #5184
 1781 08d2 03F11503 		add	r3, r3, #21
 1782 08d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 08d8 3222     		movs	r2, #50
 1784 08da 02FB03F3 		mul	r3, r2, r3
 1785 08de 1A1D     		adds	r2, r3, #4
 1786 08e0 07F5A253 		add	r3, r7, #5184
 1787 08e4 03F11703 		add	r3, r3, #23
 1788 08e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 08ea 07F5A251 		add	r1, r7, #5184
 1790 08ee 01F11301 		add	r1, r1, #19
 1791 08f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1792 08f4 01FB03F3 		mul	r3, r1, r3
 1793 08f8 1A44     		add	r2, r2, r3
 1794 08fa 07F5A253 		add	r3, r7, #5184
 1795 08fe 03F11303 		add	r3, r3, #19
 1796 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 0904 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 56


 1798 0906 07F5A253 		add	r3, r7, #5184
 1799 090a 03F11603 		add	r3, r3, #22
 1800 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0910 D31A     		subs	r3, r2, r3
 1802 0912 5A1E     		subs	r2, r3, #1
 1803 0914 07F5A253 		add	r3, r7, #5184
 1804 0918 03F11603 		add	r3, r3, #22
 1805 091c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1806 091e 07F13803 		add	r3, r7, #56
 1807 0922 183B     		subs	r3, r3, #24
 1808 0924 0B44     		add	r3, r3, r1
 1809 0926 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1810 0928 07F15803 		add	r3, r7, #88
 1811 092c 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1812              		.loc 1 449 0 discriminator 3
 1813 092e 07F5A253 		add	r3, r7, #5184
 1814 0932 03F11603 		add	r3, r3, #22
 1815 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1816 0938 0133     		adds	r3, r3, #1
 1817 093a 07F5A252 		add	r2, r7, #5184
 1818 093e 02F11602 		add	r2, r2, #22
 1819 0942 1370     		strb	r3, [r2]
 1820              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1821              		.loc 1 449 0 is_stmt 0 discriminator 1
 1822 0944 07F5A253 		add	r3, r7, #5184
 1823 0948 03F11603 		add	r3, r3, #22
 1824 094c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1825 094e 07F5A253 		add	r3, r7, #5184
 1826 0952 03F11303 		add	r3, r3, #19
 1827 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 0958 9A42     		cmp	r2, r3
 1829 095a B8D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1830              		.loc 1 446 0 is_stmt 1 discriminator 2
 1831 095c 07F5A253 		add	r3, r7, #5184
 1832 0960 03F11703 		add	r3, r3, #23
 1833 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 0966 0133     		adds	r3, r3, #1
 1835 0968 07F5A252 		add	r2, r7, #5184
 1836 096c 02F11702 		add	r2, r2, #23
 1837 0970 1370     		strb	r3, [r2]
 1838              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1839              		.loc 1 446 0 is_stmt 0 discriminator 1
 1840 0972 07F5A253 		add	r3, r7, #5184
 1841 0976 03F11503 		add	r3, r3, #21
 1842 097a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1843 097c 07F11803 		add	r3, r7, #24
 1844 0980 143B     		subs	r3, r3, #20
 1845 0982 1B68     		ldr	r3, [r3]
 1846 0984 1344     		add	r3, r3, r2
 1847 0986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1848 0988 07F5A252 		add	r2, r7, #5184
 1849 098c 02F11702 		add	r2, r2, #23
 1850 0990 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 57


 1851 0992 9A42     		cmp	r2, r3
 1852 0994 FFF472AF 		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1853              		.loc 1 453 0 is_stmt 1 discriminator 7
 1854 0998 00BF     		nop
 1855 099a 01F03ABD 		b	.L103
 1856              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1857              		.loc 1 461 0
 1858 099e 07F5A253 		add	r3, r7, #5184
 1859 09a2 03F11503 		add	r3, r3, #21
 1860 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1861 09a8 0133     		adds	r3, r3, #1
 1862 09aa 023B     		subs	r3, r3, #2
 1863 09ac 332B     		cmp	r3, #51
 1864 09ae 01F22F85 		bhi	.L254
 1865 09b2 01A2     		adr	r2, .L106
 1866 09b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1867              		.p2align 2
 1868              	.L106:
 1869 09b8 890A0000 		.word	.L105+1
 1870 09bc 470F0000 		.word	.L107+1
 1871 09c0 11240000 		.word	.L254+1
 1872 09c4 11240000 		.word	.L254+1
 1873 09c8 11240000 		.word	.L254+1
 1874 09cc 11240000 		.word	.L254+1
 1875 09d0 09140000 		.word	.L108+1
 1876 09d4 11240000 		.word	.L254+1
 1877 09d8 11240000 		.word	.L254+1
 1878 09dc 2D150000 		.word	.L109+1
 1879 09e0 11240000 		.word	.L254+1
 1880 09e4 11240000 		.word	.L254+1
 1881 09e8 11240000 		.word	.L254+1
 1882 09ec 11240000 		.word	.L254+1
 1883 09f0 11240000 		.word	.L254+1
 1884 09f4 11240000 		.word	.L254+1
 1885 09f8 11240000 		.word	.L254+1
 1886 09fc 11240000 		.word	.L254+1
 1887 0a00 11240000 		.word	.L254+1
 1888 0a04 11240000 		.word	.L254+1
 1889 0a08 11240000 		.word	.L254+1
 1890 0a0c E5160000 		.word	.L110+1
 1891 0a10 11240000 		.word	.L254+1
 1892 0a14 11240000 		.word	.L254+1
 1893 0a18 11240000 		.word	.L254+1
 1894 0a1c 11240000 		.word	.L254+1
 1895 0a20 11240000 		.word	.L254+1
 1896 0a24 11240000 		.word	.L254+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 58


 1897 0a28 11240000 		.word	.L254+1
 1898 0a2c 11240000 		.word	.L254+1
 1899 0a30 11240000 		.word	.L254+1
 1900 0a34 11240000 		.word	.L254+1
 1901 0a38 11240000 		.word	.L254+1
 1902 0a3c 11240000 		.word	.L254+1
 1903 0a40 11240000 		.word	.L254+1
 1904 0a44 11240000 		.word	.L254+1
 1905 0a48 11240000 		.word	.L254+1
 1906 0a4c 11240000 		.word	.L254+1
 1907 0a50 11240000 		.word	.L254+1
 1908 0a54 11240000 		.word	.L254+1
 1909 0a58 11240000 		.word	.L254+1
 1910 0a5c 11240000 		.word	.L254+1
 1911 0a60 B3170000 		.word	.L111+1
 1912 0a64 711C0000 		.word	.L112+1
 1913 0a68 11240000 		.word	.L254+1
 1914 0a6c 11240000 		.word	.L254+1
 1915 0a70 11240000 		.word	.L254+1
 1916 0a74 11240000 		.word	.L254+1
 1917 0a78 31210000 		.word	.L113+1
 1918 0a7c 11240000 		.word	.L254+1
 1919 0a80 11240000 		.word	.L254+1
 1920 0a84 53220000 		.word	.L114+1
 1921              		.p2align 1
 1922              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1923              		.loc 1 463 0
 1924 0a88 07F5A253 		add	r3, r7, #5184
 1925 0a8c 03F10F03 		add	r3, r3, #15
 1926 0a90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1927 0a92 AA49     		ldr	r1, .L258
 1928 0a94 1346     		mov	r3, r2
 1929 0a96 DB00     		lsls	r3, r3, #3
 1930 0a98 9B1A     		subs	r3, r3, r2
 1931 0a9a 1B01     		lsls	r3, r3, #4
 1932 0a9c 0B44     		add	r3, r3, r1
 1933 0a9e 03F20F13 		addw	r3, r3, #271
 1934 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1935 0aa4 032B     		cmp	r3, #3
 1936 0aa6 00F02681 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1937              		.loc 1 464 0
 1938 0aaa 07F5A253 		add	r3, r7, #5184
 1939 0aae 03F10F03 		add	r3, r3, #15
 1940 0ab2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1941 0ab4 A149     		ldr	r1, .L258
 1942 0ab6 1346     		mov	r3, r2
 1943 0ab8 DB00     		lsls	r3, r3, #3
 1944 0aba 9B1A     		subs	r3, r3, r2
 1945 0abc 1B01     		lsls	r3, r3, #4
 1946 0abe 0B44     		add	r3, r3, r1
 1947 0ac0 B033     		adds	r3, r3, #176
 1948 0ac2 1B68     		ldr	r3, [r3]
 1949 0ac4 1846     		mov	r0, r3
 1950 0ac6 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 59


 1951 0aca 0346     		mov	r3, r0
 1952 0acc 4FF08F41 		mov	r1, #1199570944
 1953 0ad0 1846     		mov	r0, r3
 1954 0ad2 FFF7FEFF 		bl	__aeabi_fdiv
 1955 0ad6 0346     		mov	r3, r0
 1956 0ad8 1A46     		mov	r2, r3
 1957 0ada 07F13803 		add	r3, r7, #56
 1958 0ade 183B     		subs	r3, r3, #24
 1959 0ae0 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1960              		.loc 1 465 0
 1961 0ae2 0023     		movs	r3, #0
 1962 0ae4 07F5A252 		add	r2, r7, #5184
 1963 0ae8 02F11702 		add	r2, r2, #23
 1964 0aec 1370     		strb	r3, [r2]
 1965 0aee 2DE0     		b	.L116
 1966              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1967              		.loc 1 466 0 discriminator 3
 1968 0af0 07F5A253 		add	r3, r7, #5184
 1969 0af4 03F11503 		add	r3, r3, #21
 1970 0af8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0afa 3222     		movs	r2, #50
 1972 0afc 02FB03F3 		mul	r3, r2, r3
 1973 0b00 1A1D     		adds	r2, r3, #4
 1974 0b02 07F5A253 		add	r3, r7, #5184
 1975 0b06 03F11303 		add	r3, r3, #19
 1976 0b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1977 0b0c 1A44     		add	r2, r2, r3
 1978 0b0e 07F5A253 		add	r3, r7, #5184
 1979 0b12 03F11703 		add	r3, r3, #23
 1980 0b16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1981 0b18 D31A     		subs	r3, r2, r3
 1982 0b1a 5A1E     		subs	r2, r3, #1
 1983 0b1c 07F5A253 		add	r3, r7, #5184
 1984 0b20 03F11703 		add	r3, r3, #23
 1985 0b24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1986 0b26 07F13803 		add	r3, r7, #56
 1987 0b2a 183B     		subs	r3, r3, #24
 1988 0b2c 0B44     		add	r3, r3, r1
 1989 0b2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1990 0b30 07F15803 		add	r3, r7, #88
 1991 0b34 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1992              		.loc 1 465 0 discriminator 3
 1993 0b36 07F5A253 		add	r3, r7, #5184
 1994 0b3a 03F11703 		add	r3, r3, #23
 1995 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0b40 0133     		adds	r3, r3, #1
 1997 0b42 07F5A252 		add	r2, r7, #5184
 1998 0b46 02F11702 		add	r2, r2, #23
 1999 0b4a 1370     		strb	r3, [r2]
 2000              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2001              		.loc 1 465 0 is_stmt 0 discriminator 1
 2002 0b4c 07F5A253 		add	r3, r7, #5184
 2003 0b50 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 60


 2004 0b54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2005 0b56 07F5A253 		add	r3, r7, #5184
 2006 0b5a 03F11303 		add	r3, r3, #19
 2007 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 0b60 9A42     		cmp	r2, r3
 2009 0b62 C5D3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2010              		.loc 1 468 0 is_stmt 1
 2011 0b64 07F5A253 		add	r3, r7, #5184
 2012 0b68 03F10F03 		add	r3, r3, #15
 2013 0b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2014 0b6e 7349     		ldr	r1, .L258
 2015 0b70 1346     		mov	r3, r2
 2016 0b72 DB00     		lsls	r3, r3, #3
 2017 0b74 9B1A     		subs	r3, r3, r2
 2018 0b76 1B01     		lsls	r3, r3, #4
 2019 0b78 0B44     		add	r3, r3, r1
 2020 0b7a B433     		adds	r3, r3, #180
 2021 0b7c 1B68     		ldr	r3, [r3]
 2022 0b7e 1846     		mov	r0, r3
 2023 0b80 FFF7FEFF 		bl	__aeabi_i2f
 2024 0b84 0346     		mov	r3, r0
 2025 0b86 4FF08F41 		mov	r1, #1199570944
 2026 0b8a 1846     		mov	r0, r3
 2027 0b8c FFF7FEFF 		bl	__aeabi_fdiv
 2028 0b90 0346     		mov	r3, r0
 2029 0b92 1A46     		mov	r2, r3
 2030 0b94 07F13803 		add	r3, r7, #56
 2031 0b98 183B     		subs	r3, r3, #24
 2032 0b9a 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2033              		.loc 1 469 0
 2034 0b9c 0023     		movs	r3, #0
 2035 0b9e 07F5A252 		add	r2, r7, #5184
 2036 0ba2 02F11702 		add	r2, r2, #23
 2037 0ba6 1370     		strb	r3, [r2]
 2038 0ba8 33E0     		b	.L118
 2039              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2040              		.loc 1 470 0 discriminator 3
 2041 0baa 07F5A253 		add	r3, r7, #5184
 2042 0bae 03F11503 		add	r3, r3, #21
 2043 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2044 0bb4 3222     		movs	r2, #50
 2045 0bb6 02FB03F3 		mul	r3, r2, r3
 2046 0bba 1A1D     		adds	r2, r3, #4
 2047 0bbc 07F5A253 		add	r3, r7, #5184
 2048 0bc0 03F11303 		add	r3, r3, #19
 2049 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 0bc6 1A44     		add	r2, r2, r3
 2051 0bc8 07F5A253 		add	r3, r7, #5184
 2052 0bcc 03F11303 		add	r3, r3, #19
 2053 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2054 0bd2 1A44     		add	r2, r2, r3
 2055 0bd4 07F5A253 		add	r3, r7, #5184
 2056 0bd8 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 61


 2057 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2058 0bde D31A     		subs	r3, r2, r3
 2059 0be0 5A1E     		subs	r2, r3, #1
 2060 0be2 07F5A253 		add	r3, r7, #5184
 2061 0be6 03F11703 		add	r3, r3, #23
 2062 0bea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2063 0bec 07F13803 		add	r3, r7, #56
 2064 0bf0 183B     		subs	r3, r3, #24
 2065 0bf2 0B44     		add	r3, r3, r1
 2066 0bf4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2067 0bf6 07F15803 		add	r3, r7, #88
 2068 0bfa 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2069              		.loc 1 469 0 discriminator 3
 2070 0bfc 07F5A253 		add	r3, r7, #5184
 2071 0c00 03F11703 		add	r3, r3, #23
 2072 0c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0c06 0133     		adds	r3, r3, #1
 2074 0c08 07F5A252 		add	r2, r7, #5184
 2075 0c0c 02F11702 		add	r2, r2, #23
 2076 0c10 1370     		strb	r3, [r2]
 2077              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2078              		.loc 1 469 0 is_stmt 0 discriminator 1
 2079 0c12 07F5A253 		add	r3, r7, #5184
 2080 0c16 03F11703 		add	r3, r3, #23
 2081 0c1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2082 0c1c 07F5A253 		add	r3, r7, #5184
 2083 0c20 03F11303 		add	r3, r3, #19
 2084 0c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 0c26 9A42     		cmp	r2, r3
 2086 0c28 BFD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2087              		.loc 1 472 0 is_stmt 1
 2088 0c2a 07F5A253 		add	r3, r7, #5184
 2089 0c2e 03F10F03 		add	r3, r3, #15
 2090 0c32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2091 0c34 4149     		ldr	r1, .L258
 2092 0c36 1346     		mov	r3, r2
 2093 0c38 DB00     		lsls	r3, r3, #3
 2094 0c3a 9B1A     		subs	r3, r3, r2
 2095 0c3c 1B01     		lsls	r3, r3, #4
 2096 0c3e 0B44     		add	r3, r3, r1
 2097 0c40 B833     		adds	r3, r3, #184
 2098 0c42 1B68     		ldr	r3, [r3]
 2099 0c44 1846     		mov	r0, r3
 2100 0c46 FFF7FEFF 		bl	__aeabi_i2f
 2101 0c4a 0346     		mov	r3, r0
 2102 0c4c 4FF08F41 		mov	r1, #1199570944
 2103 0c50 1846     		mov	r0, r3
 2104 0c52 FFF7FEFF 		bl	__aeabi_fdiv
 2105 0c56 0346     		mov	r3, r0
 2106 0c58 1A46     		mov	r2, r3
 2107 0c5a 07F13803 		add	r3, r7, #56
 2108 0c5e 183B     		subs	r3, r3, #24
 2109 0c60 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 62


 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2110              		.loc 1 473 0
 2111 0c62 0023     		movs	r3, #0
 2112 0c64 07F5A252 		add	r2, r7, #5184
 2113 0c68 02F11702 		add	r2, r2, #23
 2114 0c6c 1370     		strb	r3, [r2]
 2115 0c6e 34E0     		b	.L120
 2116              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2117              		.loc 1 474 0 discriminator 3
 2118 0c70 07F5A253 		add	r3, r7, #5184
 2119 0c74 03F11503 		add	r3, r3, #21
 2120 0c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2121 0c7a 3222     		movs	r2, #50
 2122 0c7c 02FB03F3 		mul	r3, r2, r3
 2123 0c80 1A1D     		adds	r2, r3, #4
 2124 0c82 07F5A253 		add	r3, r7, #5184
 2125 0c86 03F11303 		add	r3, r3, #19
 2126 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 0c8c 5B00     		lsls	r3, r3, #1
 2128 0c8e 1A44     		add	r2, r2, r3
 2129 0c90 07F5A253 		add	r3, r7, #5184
 2130 0c94 03F11303 		add	r3, r3, #19
 2131 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 0c9a 1A44     		add	r2, r2, r3
 2133 0c9c 07F5A253 		add	r3, r7, #5184
 2134 0ca0 03F11703 		add	r3, r3, #23
 2135 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 0ca6 D31A     		subs	r3, r2, r3
 2137 0ca8 5A1E     		subs	r2, r3, #1
 2138 0caa 07F5A253 		add	r3, r7, #5184
 2139 0cae 03F11703 		add	r3, r3, #23
 2140 0cb2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2141 0cb4 07F13803 		add	r3, r7, #56
 2142 0cb8 183B     		subs	r3, r3, #24
 2143 0cba 0B44     		add	r3, r3, r1
 2144 0cbc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2145 0cbe 07F15803 		add	r3, r7, #88
 2146 0cc2 9954     		strb	r1, [r3, r2]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2147              		.loc 1 473 0 discriminator 3
 2148 0cc4 07F5A253 		add	r3, r7, #5184
 2149 0cc8 03F11703 		add	r3, r3, #23
 2150 0ccc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0cce 0133     		adds	r3, r3, #1
 2152 0cd0 07F5A252 		add	r2, r7, #5184
 2153 0cd4 02F11702 		add	r2, r2, #23
 2154 0cd8 1370     		strb	r3, [r2]
 2155              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2156              		.loc 1 473 0 is_stmt 0 discriminator 1
 2157 0cda 07F5A253 		add	r3, r7, #5184
 2158 0cde 03F11703 		add	r3, r3, #23
 2159 0ce2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2160 0ce4 07F5A253 		add	r3, r7, #5184
 2161 0ce8 03F11303 		add	r3, r3, #19
 2162 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 63


 2163 0cee 9A42     		cmp	r2, r3
 2164 0cf0 BED3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 2165              		.loc 1 491 0 is_stmt 1
 2166 0cf2 01F08EBB 		b	.L103
 2167              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2168              		.loc 1 478 0
 2169 0cf6 07F5A253 		add	r3, r7, #5184
 2170 0cfa 03F10F03 		add	r3, r3, #15
 2171 0cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2172 0d00 0E49     		ldr	r1, .L258
 2173 0d02 1346     		mov	r3, r2
 2174 0d04 DB00     		lsls	r3, r3, #3
 2175 0d06 9B1A     		subs	r3, r3, r2
 2176 0d08 1B01     		lsls	r3, r3, #4
 2177 0d0a 0B44     		add	r3, r3, r1
 2178 0d0c C833     		adds	r3, r3, #200
 2179 0d0e 1B68     		ldr	r3, [r3]
 2180 0d10 1846     		mov	r0, r3
 2181 0d12 FFF7FEFF 		bl	__aeabi_i2f
 2182 0d16 0346     		mov	r3, r0
 2183 0d18 4FF08F41 		mov	r1, #1199570944
 2184 0d1c 1846     		mov	r0, r3
 2185 0d1e FFF7FEFF 		bl	__aeabi_fdiv
 2186 0d22 0346     		mov	r3, r0
 2187 0d24 1A46     		mov	r2, r3
 2188 0d26 07F13803 		add	r3, r7, #56
 2189 0d2a 183B     		subs	r3, r3, #24
 2190 0d2c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2191              		.loc 1 479 0
 2192 0d2e 0023     		movs	r3, #0
 2193 0d30 07F5A252 		add	r2, r7, #5184
 2194 0d34 02F11702 		add	r2, r2, #23
 2195 0d38 1370     		strb	r3, [r2]
 2196 0d3a 2FE0     		b	.L123
 2197              	.L259:
 2198              		.align	2
 2199              	.L258:
 2200 0d3c 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 64


 2201              	.L124:
 480:..\src/command_processing.c ****                             }
 2202              		.loc 1 480 0 discriminator 3
 2203 0d40 07F5A253 		add	r3, r7, #5184
 2204 0d44 03F11503 		add	r3, r3, #21
 2205 0d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0d4a 3222     		movs	r2, #50
 2207 0d4c 02FB03F3 		mul	r3, r2, r3
 2208 0d50 1A1D     		adds	r2, r3, #4
 2209 0d52 07F5A253 		add	r3, r7, #5184
 2210 0d56 03F11303 		add	r3, r3, #19
 2211 0d5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 0d5c 1A44     		add	r2, r2, r3
 2213 0d5e 07F5A253 		add	r3, r7, #5184
 2214 0d62 03F11703 		add	r3, r3, #23
 2215 0d66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 0d68 D31A     		subs	r3, r2, r3
 2217 0d6a 5A1E     		subs	r2, r3, #1
 2218 0d6c 07F5A253 		add	r3, r7, #5184
 2219 0d70 03F11703 		add	r3, r3, #23
 2220 0d74 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2221 0d76 07F13803 		add	r3, r7, #56
 2222 0d7a 183B     		subs	r3, r3, #24
 2223 0d7c 0B44     		add	r3, r3, r1
 2224 0d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2225 0d80 07F15803 		add	r3, r7, #88
 2226 0d84 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2227              		.loc 1 479 0 discriminator 3
 2228 0d86 07F5A253 		add	r3, r7, #5184
 2229 0d8a 03F11703 		add	r3, r3, #23
 2230 0d8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2231 0d90 0133     		adds	r3, r3, #1
 2232 0d92 07F5A252 		add	r2, r7, #5184
 2233 0d96 02F11702 		add	r2, r2, #23
 2234 0d9a 1370     		strb	r3, [r2]
 2235              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2236              		.loc 1 479 0 is_stmt 0 discriminator 1
 2237 0d9c 07F5A253 		add	r3, r7, #5184
 2238 0da0 03F11703 		add	r3, r3, #23
 2239 0da4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2240 0da6 07F5A253 		add	r3, r7, #5184
 2241 0daa 03F11303 		add	r3, r3, #19
 2242 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 0db0 9A42     		cmp	r2, r3
 2244 0db2 C5D3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2245              		.loc 1 482 0 is_stmt 1
 2246 0db4 07F5A253 		add	r3, r7, #5184
 2247 0db8 03F10F03 		add	r3, r3, #15
 2248 0dbc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2249 0dbe AA49     		ldr	r1, .L260
 2250 0dc0 1346     		mov	r3, r2
 2251 0dc2 DB00     		lsls	r3, r3, #3
 2252 0dc4 9B1A     		subs	r3, r3, r2
 2253 0dc6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 65


 2254 0dc8 0B44     		add	r3, r3, r1
 2255 0dca CC33     		adds	r3, r3, #204
 2256 0dcc 1B68     		ldr	r3, [r3]
 2257 0dce 1846     		mov	r0, r3
 2258 0dd0 FFF7FEFF 		bl	__aeabi_i2f
 2259 0dd4 0346     		mov	r3, r0
 2260 0dd6 4FF08F41 		mov	r1, #1199570944
 2261 0dda 1846     		mov	r0, r3
 2262 0ddc FFF7FEFF 		bl	__aeabi_fdiv
 2263 0de0 0346     		mov	r3, r0
 2264 0de2 1A46     		mov	r2, r3
 2265 0de4 07F13803 		add	r3, r7, #56
 2266 0de8 183B     		subs	r3, r3, #24
 2267 0dea 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2268              		.loc 1 483 0
 2269 0dec 0023     		movs	r3, #0
 2270 0dee 07F5A252 		add	r2, r7, #5184
 2271 0df2 02F11702 		add	r2, r2, #23
 2272 0df6 1370     		strb	r3, [r2]
 2273 0df8 33E0     		b	.L125
 2274              	.L126:
 484:..\src/command_processing.c ****                             }
 2275              		.loc 1 484 0 discriminator 3
 2276 0dfa 07F5A253 		add	r3, r7, #5184
 2277 0dfe 03F11503 		add	r3, r3, #21
 2278 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 0e04 3222     		movs	r2, #50
 2280 0e06 02FB03F3 		mul	r3, r2, r3
 2281 0e0a 1A1D     		adds	r2, r3, #4
 2282 0e0c 07F5A253 		add	r3, r7, #5184
 2283 0e10 03F11303 		add	r3, r3, #19
 2284 0e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2285 0e16 1A44     		add	r2, r2, r3
 2286 0e18 07F5A253 		add	r3, r7, #5184
 2287 0e1c 03F11303 		add	r3, r3, #19
 2288 0e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 0e22 1A44     		add	r2, r2, r3
 2290 0e24 07F5A253 		add	r3, r7, #5184
 2291 0e28 03F11703 		add	r3, r3, #23
 2292 0e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2293 0e2e D31A     		subs	r3, r2, r3
 2294 0e30 5A1E     		subs	r2, r3, #1
 2295 0e32 07F5A253 		add	r3, r7, #5184
 2296 0e36 03F11703 		add	r3, r3, #23
 2297 0e3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2298 0e3c 07F13803 		add	r3, r7, #56
 2299 0e40 183B     		subs	r3, r3, #24
 2300 0e42 0B44     		add	r3, r3, r1
 2301 0e44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2302 0e46 07F15803 		add	r3, r7, #88
 2303 0e4a 9954     		strb	r1, [r3, r2]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2304              		.loc 1 483 0 discriminator 3
 2305 0e4c 07F5A253 		add	r3, r7, #5184
 2306 0e50 03F11703 		add	r3, r3, #23
 2307 0e54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 66


 2308 0e56 0133     		adds	r3, r3, #1
 2309 0e58 07F5A252 		add	r2, r7, #5184
 2310 0e5c 02F11702 		add	r2, r2, #23
 2311 0e60 1370     		strb	r3, [r2]
 2312              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2313              		.loc 1 483 0 is_stmt 0 discriminator 1
 2314 0e62 07F5A253 		add	r3, r7, #5184
 2315 0e66 03F11703 		add	r3, r3, #23
 2316 0e6a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2317 0e6c 07F5A253 		add	r3, r7, #5184
 2318 0e70 03F11303 		add	r3, r3, #19
 2319 0e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0e76 9A42     		cmp	r2, r3
 2321 0e78 BFD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2322              		.loc 1 486 0 is_stmt 1
 2323 0e7a 07F5A253 		add	r3, r7, #5184
 2324 0e7e 03F10F03 		add	r3, r3, #15
 2325 0e82 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2326 0e84 7849     		ldr	r1, .L260
 2327 0e86 1346     		mov	r3, r2
 2328 0e88 DB00     		lsls	r3, r3, #3
 2329 0e8a 9B1A     		subs	r3, r3, r2
 2330 0e8c 1B01     		lsls	r3, r3, #4
 2331 0e8e 0B44     		add	r3, r3, r1
 2332 0e90 D033     		adds	r3, r3, #208
 2333 0e92 1B68     		ldr	r3, [r3]
 2334 0e94 1846     		mov	r0, r3
 2335 0e96 FFF7FEFF 		bl	__aeabi_i2f
 2336 0e9a 0346     		mov	r3, r0
 2337 0e9c 4FF08F41 		mov	r1, #1199570944
 2338 0ea0 1846     		mov	r0, r3
 2339 0ea2 FFF7FEFF 		bl	__aeabi_fdiv
 2340 0ea6 0346     		mov	r3, r0
 2341 0ea8 1A46     		mov	r2, r3
 2342 0eaa 07F13803 		add	r3, r7, #56
 2343 0eae 183B     		subs	r3, r3, #24
 2344 0eb0 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2345              		.loc 1 487 0
 2346 0eb2 0023     		movs	r3, #0
 2347 0eb4 07F5A252 		add	r2, r7, #5184
 2348 0eb8 02F11702 		add	r2, r2, #23
 2349 0ebc 1370     		strb	r3, [r2]
 2350 0ebe 34E0     		b	.L127
 2351              	.L128:
 488:..\src/command_processing.c ****                             }
 2352              		.loc 1 488 0 discriminator 3
 2353 0ec0 07F5A253 		add	r3, r7, #5184
 2354 0ec4 03F11503 		add	r3, r3, #21
 2355 0ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 0eca 3222     		movs	r2, #50
 2357 0ecc 02FB03F3 		mul	r3, r2, r3
 2358 0ed0 1A1D     		adds	r2, r3, #4
 2359 0ed2 07F5A253 		add	r3, r7, #5184
 2360 0ed6 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 67


 2361 0eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0edc 5B00     		lsls	r3, r3, #1
 2363 0ede 1A44     		add	r2, r2, r3
 2364 0ee0 07F5A253 		add	r3, r7, #5184
 2365 0ee4 03F11303 		add	r3, r3, #19
 2366 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0eea 1A44     		add	r2, r2, r3
 2368 0eec 07F5A253 		add	r3, r7, #5184
 2369 0ef0 03F11703 		add	r3, r3, #23
 2370 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0ef6 D31A     		subs	r3, r2, r3
 2372 0ef8 5A1E     		subs	r2, r3, #1
 2373 0efa 07F5A253 		add	r3, r7, #5184
 2374 0efe 03F11703 		add	r3, r3, #23
 2375 0f02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2376 0f04 07F13803 		add	r3, r7, #56
 2377 0f08 183B     		subs	r3, r3, #24
 2378 0f0a 0B44     		add	r3, r3, r1
 2379 0f0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2380 0f0e 07F15803 		add	r3, r7, #88
 2381 0f12 9954     		strb	r1, [r3, r2]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2382              		.loc 1 487 0 discriminator 3
 2383 0f14 07F5A253 		add	r3, r7, #5184
 2384 0f18 03F11703 		add	r3, r3, #23
 2385 0f1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2386 0f1e 0133     		adds	r3, r3, #1
 2387 0f20 07F5A252 		add	r2, r7, #5184
 2388 0f24 02F11702 		add	r2, r2, #23
 2389 0f28 1370     		strb	r3, [r2]
 2390              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2391              		.loc 1 487 0 is_stmt 0 discriminator 1
 2392 0f2a 07F5A253 		add	r3, r7, #5184
 2393 0f2e 03F11703 		add	r3, r3, #23
 2394 0f32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2395 0f34 07F5A253 		add	r3, r7, #5184
 2396 0f38 03F11303 		add	r3, r3, #19
 2397 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2398 0f3e 9A42     		cmp	r2, r3
 2399 0f40 BED3     		bcc	.L128
 2400              		.loc 1 491 0 is_stmt 1
 2401 0f42 01F066BA 		b	.L103
 2402              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2403              		.loc 1 494 0
 2404 0f46 07F5A253 		add	r3, r7, #5184
 2405 0f4a 03F10F03 		add	r3, r3, #15
 2406 0f4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2407 0f50 4549     		ldr	r1, .L260
 2408 0f52 1346     		mov	r3, r2
 2409 0f54 DB00     		lsls	r3, r3, #3
 2410 0f56 9B1A     		subs	r3, r3, r2
 2411 0f58 1B01     		lsls	r3, r3, #4
 2412 0f5a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 68


 2413 0f5c 03F20F13 		addw	r3, r3, #271
 2414 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2415 0f62 032B     		cmp	r3, #3
 2416 0f64 00F02881 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2417              		.loc 1 495 0
 2418 0f68 07F5A253 		add	r3, r7, #5184
 2419 0f6c 03F10F03 		add	r3, r3, #15
 2420 0f70 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2421 0f72 3D49     		ldr	r1, .L260
 2422 0f74 1346     		mov	r3, r2
 2423 0f76 DB00     		lsls	r3, r3, #3
 2424 0f78 9B1A     		subs	r3, r3, r2
 2425 0f7a 1B01     		lsls	r3, r3, #4
 2426 0f7c 0B44     		add	r3, r3, r1
 2427 0f7e BC33     		adds	r3, r3, #188
 2428 0f80 1B68     		ldr	r3, [r3]
 2429 0f82 1846     		mov	r0, r3
 2430 0f84 FFF7FEFF 		bl	__aeabi_i2f
 2431 0f88 0346     		mov	r3, r0
 2432 0f8a 4FF08F41 		mov	r1, #1199570944
 2433 0f8e 1846     		mov	r0, r3
 2434 0f90 FFF7FEFF 		bl	__aeabi_fdiv
 2435 0f94 0346     		mov	r3, r0
 2436 0f96 1A46     		mov	r2, r3
 2437 0f98 07F13803 		add	r3, r7, #56
 2438 0f9c 183B     		subs	r3, r3, #24
 2439 0f9e 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2440              		.loc 1 496 0
 2441 0fa0 0023     		movs	r3, #0
 2442 0fa2 07F5A252 		add	r2, r7, #5184
 2443 0fa6 02F11702 		add	r2, r2, #23
 2444 0faa 1370     		strb	r3, [r2]
 2445 0fac 2DE0     		b	.L130
 2446              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2447              		.loc 1 497 0 discriminator 3
 2448 0fae 07F5A253 		add	r3, r7, #5184
 2449 0fb2 03F11503 		add	r3, r3, #21
 2450 0fb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0fb8 3222     		movs	r2, #50
 2452 0fba 02FB03F3 		mul	r3, r2, r3
 2453 0fbe 1A1D     		adds	r2, r3, #4
 2454 0fc0 07F5A253 		add	r3, r7, #5184
 2455 0fc4 03F11303 		add	r3, r3, #19
 2456 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0fca 1A44     		add	r2, r2, r3
 2458 0fcc 07F5A253 		add	r3, r7, #5184
 2459 0fd0 03F11703 		add	r3, r3, #23
 2460 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2461 0fd6 D31A     		subs	r3, r2, r3
 2462 0fd8 5A1E     		subs	r2, r3, #1
 2463 0fda 07F5A253 		add	r3, r7, #5184
 2464 0fde 03F11703 		add	r3, r3, #23
 2465 0fe2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2466 0fe4 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 69


 2467 0fe8 183B     		subs	r3, r3, #24
 2468 0fea 0B44     		add	r3, r3, r1
 2469 0fec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2470 0fee 07F15803 		add	r3, r7, #88
 2471 0ff2 9954     		strb	r1, [r3, r2]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2472              		.loc 1 496 0 discriminator 3
 2473 0ff4 07F5A253 		add	r3, r7, #5184
 2474 0ff8 03F11703 		add	r3, r3, #23
 2475 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2476 0ffe 0133     		adds	r3, r3, #1
 2477 1000 07F5A252 		add	r2, r7, #5184
 2478 1004 02F11702 		add	r2, r2, #23
 2479 1008 1370     		strb	r3, [r2]
 2480              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2481              		.loc 1 496 0 is_stmt 0 discriminator 1
 2482 100a 07F5A253 		add	r3, r7, #5184
 2483 100e 03F11703 		add	r3, r3, #23
 2484 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2485 1014 07F5A253 		add	r3, r7, #5184
 2486 1018 03F11303 		add	r3, r3, #19
 2487 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 101e 9A42     		cmp	r2, r3
 2489 1020 C5D3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2490              		.loc 1 499 0 is_stmt 1
 2491 1022 07F5A253 		add	r3, r7, #5184
 2492 1026 03F10F03 		add	r3, r3, #15
 2493 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2494 102c 0E49     		ldr	r1, .L260
 2495 102e 1346     		mov	r3, r2
 2496 1030 DB00     		lsls	r3, r3, #3
 2497 1032 9B1A     		subs	r3, r3, r2
 2498 1034 1B01     		lsls	r3, r3, #4
 2499 1036 0B44     		add	r3, r3, r1
 2500 1038 C033     		adds	r3, r3, #192
 2501 103a 1B68     		ldr	r3, [r3]
 2502 103c 1846     		mov	r0, r3
 2503 103e FFF7FEFF 		bl	__aeabi_i2f
 2504 1042 0346     		mov	r3, r0
 2505 1044 4FF08F41 		mov	r1, #1199570944
 2506 1048 1846     		mov	r0, r3
 2507 104a FFF7FEFF 		bl	__aeabi_fdiv
 2508 104e 0346     		mov	r3, r0
 2509 1050 1A46     		mov	r2, r3
 2510 1052 07F13803 		add	r3, r7, #56
 2511 1056 183B     		subs	r3, r3, #24
 2512 1058 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2513              		.loc 1 500 0
 2514 105a 0023     		movs	r3, #0
 2515 105c 07F5A252 		add	r2, r7, #5184
 2516 1060 02F11702 		add	r2, r2, #23
 2517 1064 1370     		strb	r3, [r2]
 2518 1066 35E0     		b	.L132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 70


 2519              	.L261:
 2520              		.align	2
 2521              	.L260:
 2522 1068 00000000 		.word	c_mem
 2523              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2524              		.loc 1 501 0 discriminator 3
 2525 106c 07F5A253 		add	r3, r7, #5184
 2526 1070 03F11503 		add	r3, r3, #21
 2527 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2528 1076 3222     		movs	r2, #50
 2529 1078 02FB03F3 		mul	r3, r2, r3
 2530 107c 1A1D     		adds	r2, r3, #4
 2531 107e 07F5A253 		add	r3, r7, #5184
 2532 1082 03F11303 		add	r3, r3, #19
 2533 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2534 1088 1A44     		add	r2, r2, r3
 2535 108a 07F5A253 		add	r3, r7, #5184
 2536 108e 03F11303 		add	r3, r3, #19
 2537 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2538 1094 1A44     		add	r2, r2, r3
 2539 1096 07F5A253 		add	r3, r7, #5184
 2540 109a 03F11703 		add	r3, r3, #23
 2541 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2542 10a0 D31A     		subs	r3, r2, r3
 2543 10a2 5A1E     		subs	r2, r3, #1
 2544 10a4 07F5A253 		add	r3, r7, #5184
 2545 10a8 03F11703 		add	r3, r3, #23
 2546 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2547 10ae 07F13803 		add	r3, r7, #56
 2548 10b2 183B     		subs	r3, r3, #24
 2549 10b4 0B44     		add	r3, r3, r1
 2550 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2551 10b8 07F15803 		add	r3, r7, #88
 2552 10bc 9954     		strb	r1, [r3, r2]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2553              		.loc 1 500 0 discriminator 3
 2554 10be 07F5A253 		add	r3, r7, #5184
 2555 10c2 03F11703 		add	r3, r3, #23
 2556 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2557 10c8 0133     		adds	r3, r3, #1
 2558 10ca 07F5A252 		add	r2, r7, #5184
 2559 10ce 02F11702 		add	r2, r2, #23
 2560 10d2 1370     		strb	r3, [r2]
 2561              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2562              		.loc 1 500 0 is_stmt 0 discriminator 1
 2563 10d4 07F5A253 		add	r3, r7, #5184
 2564 10d8 03F11703 		add	r3, r3, #23
 2565 10dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2566 10de 07F5A253 		add	r3, r7, #5184
 2567 10e2 03F11303 		add	r3, r3, #19
 2568 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2569 10e8 9A42     		cmp	r2, r3
 2570 10ea BFD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 71


 2571              		.loc 1 503 0 is_stmt 1
 2572 10ec 07F5A253 		add	r3, r7, #5184
 2573 10f0 03F10F03 		add	r3, r3, #15
 2574 10f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2575 10f6 C349     		ldr	r1, .L262
 2576 10f8 1346     		mov	r3, r2
 2577 10fa DB00     		lsls	r3, r3, #3
 2578 10fc 9B1A     		subs	r3, r3, r2
 2579 10fe 1B01     		lsls	r3, r3, #4
 2580 1100 0B44     		add	r3, r3, r1
 2581 1102 C433     		adds	r3, r3, #196
 2582 1104 1B68     		ldr	r3, [r3]
 2583 1106 1846     		mov	r0, r3
 2584 1108 FFF7FEFF 		bl	__aeabi_i2f
 2585 110c 0346     		mov	r3, r0
 2586 110e 4FF08F41 		mov	r1, #1199570944
 2587 1112 1846     		mov	r0, r3
 2588 1114 FFF7FEFF 		bl	__aeabi_fdiv
 2589 1118 0346     		mov	r3, r0
 2590 111a 1A46     		mov	r2, r3
 2591 111c 07F13803 		add	r3, r7, #56
 2592 1120 183B     		subs	r3, r3, #24
 2593 1122 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2594              		.loc 1 504 0
 2595 1124 0023     		movs	r3, #0
 2596 1126 07F5A252 		add	r2, r7, #5184
 2597 112a 02F11702 		add	r2, r2, #23
 2598 112e 1370     		strb	r3, [r2]
 2599 1130 34E0     		b	.L134
 2600              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2601              		.loc 1 505 0 discriminator 3
 2602 1132 07F5A253 		add	r3, r7, #5184
 2603 1136 03F11503 		add	r3, r3, #21
 2604 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 113c 3222     		movs	r2, #50
 2606 113e 02FB03F3 		mul	r3, r2, r3
 2607 1142 1A1D     		adds	r2, r3, #4
 2608 1144 07F5A253 		add	r3, r7, #5184
 2609 1148 03F11303 		add	r3, r3, #19
 2610 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2611 114e 5B00     		lsls	r3, r3, #1
 2612 1150 1A44     		add	r2, r2, r3
 2613 1152 07F5A253 		add	r3, r7, #5184
 2614 1156 03F11303 		add	r3, r3, #19
 2615 115a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2616 115c 1A44     		add	r2, r2, r3
 2617 115e 07F5A253 		add	r3, r7, #5184
 2618 1162 03F11703 		add	r3, r3, #23
 2619 1166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2620 1168 D31A     		subs	r3, r2, r3
 2621 116a 5A1E     		subs	r2, r3, #1
 2622 116c 07F5A253 		add	r3, r7, #5184
 2623 1170 03F11703 		add	r3, r3, #23
 2624 1174 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2625 1176 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 72


 2626 117a 183B     		subs	r3, r3, #24
 2627 117c 0B44     		add	r3, r3, r1
 2628 117e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2629 1180 07F15803 		add	r3, r7, #88
 2630 1184 9954     		strb	r1, [r3, r2]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2631              		.loc 1 504 0 discriminator 3
 2632 1186 07F5A253 		add	r3, r7, #5184
 2633 118a 03F11703 		add	r3, r3, #23
 2634 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2635 1190 0133     		adds	r3, r3, #1
 2636 1192 07F5A252 		add	r2, r7, #5184
 2637 1196 02F11702 		add	r2, r2, #23
 2638 119a 1370     		strb	r3, [r2]
 2639              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2640              		.loc 1 504 0 is_stmt 0 discriminator 1
 2641 119c 07F5A253 		add	r3, r7, #5184
 2642 11a0 03F11703 		add	r3, r3, #23
 2643 11a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2644 11a6 07F5A253 		add	r3, r7, #5184
 2645 11aa 03F11303 		add	r3, r3, #19
 2646 11ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 11b0 9A42     		cmp	r2, r3
 2648 11b2 BED3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2649              		.loc 1 522 0 is_stmt 1
 2650 11b4 01F02DB9 		b	.L103
 2651              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2652              		.loc 1 509 0
 2653 11b8 07F5A253 		add	r3, r7, #5184
 2654 11bc 03F10F03 		add	r3, r3, #15
 2655 11c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2656 11c2 9049     		ldr	r1, .L262
 2657 11c4 1346     		mov	r3, r2
 2658 11c6 DB00     		lsls	r3, r3, #3
 2659 11c8 9B1A     		subs	r3, r3, r2
 2660 11ca 1B01     		lsls	r3, r3, #4
 2661 11cc 0B44     		add	r3, r3, r1
 2662 11ce D433     		adds	r3, r3, #212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 73


 2663 11d0 1B68     		ldr	r3, [r3]
 2664 11d2 1846     		mov	r0, r3
 2665 11d4 FFF7FEFF 		bl	__aeabi_i2f
 2666 11d8 0346     		mov	r3, r0
 2667 11da 4FF08F41 		mov	r1, #1199570944
 2668 11de 1846     		mov	r0, r3
 2669 11e0 FFF7FEFF 		bl	__aeabi_fdiv
 2670 11e4 0346     		mov	r3, r0
 2671 11e6 1A46     		mov	r2, r3
 2672 11e8 07F13803 		add	r3, r7, #56
 2673 11ec 183B     		subs	r3, r3, #24
 2674 11ee 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2675              		.loc 1 510 0
 2676 11f0 0023     		movs	r3, #0
 2677 11f2 07F5A252 		add	r2, r7, #5184
 2678 11f6 02F11702 		add	r2, r2, #23
 2679 11fa 1370     		strb	r3, [r2]
 2680 11fc 2DE0     		b	.L137
 2681              	.L138:
 511:..\src/command_processing.c ****                             }
 2682              		.loc 1 511 0 discriminator 3
 2683 11fe 07F5A253 		add	r3, r7, #5184
 2684 1202 03F11503 		add	r3, r3, #21
 2685 1206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2686 1208 3222     		movs	r2, #50
 2687 120a 02FB03F3 		mul	r3, r2, r3
 2688 120e 1A1D     		adds	r2, r3, #4
 2689 1210 07F5A253 		add	r3, r7, #5184
 2690 1214 03F11303 		add	r3, r3, #19
 2691 1218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2692 121a 1A44     		add	r2, r2, r3
 2693 121c 07F5A253 		add	r3, r7, #5184
 2694 1220 03F11703 		add	r3, r3, #23
 2695 1224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 1226 D31A     		subs	r3, r2, r3
 2697 1228 5A1E     		subs	r2, r3, #1
 2698 122a 07F5A253 		add	r3, r7, #5184
 2699 122e 03F11703 		add	r3, r3, #23
 2700 1232 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2701 1234 07F13803 		add	r3, r7, #56
 2702 1238 183B     		subs	r3, r3, #24
 2703 123a 0B44     		add	r3, r3, r1
 2704 123c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2705 123e 07F15803 		add	r3, r7, #88
 2706 1242 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2707              		.loc 1 510 0 discriminator 3
 2708 1244 07F5A253 		add	r3, r7, #5184
 2709 1248 03F11703 		add	r3, r3, #23
 2710 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2711 124e 0133     		adds	r3, r3, #1
 2712 1250 07F5A252 		add	r2, r7, #5184
 2713 1254 02F11702 		add	r2, r2, #23
 2714 1258 1370     		strb	r3, [r2]
 2715              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 74


 2716              		.loc 1 510 0 is_stmt 0 discriminator 1
 2717 125a 07F5A253 		add	r3, r7, #5184
 2718 125e 03F11703 		add	r3, r3, #23
 2719 1262 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2720 1264 07F5A253 		add	r3, r7, #5184
 2721 1268 03F11303 		add	r3, r3, #19
 2722 126c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 126e 9A42     		cmp	r2, r3
 2724 1270 C5D3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2725              		.loc 1 513 0 is_stmt 1
 2726 1272 07F5A253 		add	r3, r7, #5184
 2727 1276 03F10F03 		add	r3, r3, #15
 2728 127a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2729 127c 6149     		ldr	r1, .L262
 2730 127e 1346     		mov	r3, r2
 2731 1280 DB00     		lsls	r3, r3, #3
 2732 1282 9B1A     		subs	r3, r3, r2
 2733 1284 1B01     		lsls	r3, r3, #4
 2734 1286 0B44     		add	r3, r3, r1
 2735 1288 D833     		adds	r3, r3, #216
 2736 128a 1B68     		ldr	r3, [r3]
 2737 128c 1846     		mov	r0, r3
 2738 128e FFF7FEFF 		bl	__aeabi_i2f
 2739 1292 0346     		mov	r3, r0
 2740 1294 4FF08F41 		mov	r1, #1199570944
 2741 1298 1846     		mov	r0, r3
 2742 129a FFF7FEFF 		bl	__aeabi_fdiv
 2743 129e 0346     		mov	r3, r0
 2744 12a0 1A46     		mov	r2, r3
 2745 12a2 07F13803 		add	r3, r7, #56
 2746 12a6 183B     		subs	r3, r3, #24
 2747 12a8 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2748              		.loc 1 514 0
 2749 12aa 0023     		movs	r3, #0
 2750 12ac 07F5A252 		add	r2, r7, #5184
 2751 12b0 02F11702 		add	r2, r2, #23
 2752 12b4 1370     		strb	r3, [r2]
 2753 12b6 33E0     		b	.L139
 2754              	.L140:
 515:..\src/command_processing.c ****                             }
 2755              		.loc 1 515 0 discriminator 3
 2756 12b8 07F5A253 		add	r3, r7, #5184
 2757 12bc 03F11503 		add	r3, r3, #21
 2758 12c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2759 12c2 3222     		movs	r2, #50
 2760 12c4 02FB03F3 		mul	r3, r2, r3
 2761 12c8 1A1D     		adds	r2, r3, #4
 2762 12ca 07F5A253 		add	r3, r7, #5184
 2763 12ce 03F11303 		add	r3, r3, #19
 2764 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2765 12d4 1A44     		add	r2, r2, r3
 2766 12d6 07F5A253 		add	r3, r7, #5184
 2767 12da 03F11303 		add	r3, r3, #19
 2768 12de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2769 12e0 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 75


 2770 12e2 07F5A253 		add	r3, r7, #5184
 2771 12e6 03F11703 		add	r3, r3, #23
 2772 12ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 12ec D31A     		subs	r3, r2, r3
 2774 12ee 5A1E     		subs	r2, r3, #1
 2775 12f0 07F5A253 		add	r3, r7, #5184
 2776 12f4 03F11703 		add	r3, r3, #23
 2777 12f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2778 12fa 07F13803 		add	r3, r7, #56
 2779 12fe 183B     		subs	r3, r3, #24
 2780 1300 0B44     		add	r3, r3, r1
 2781 1302 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2782 1304 07F15803 		add	r3, r7, #88
 2783 1308 9954     		strb	r1, [r3, r2]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2784              		.loc 1 514 0 discriminator 3
 2785 130a 07F5A253 		add	r3, r7, #5184
 2786 130e 03F11703 		add	r3, r3, #23
 2787 1312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2788 1314 0133     		adds	r3, r3, #1
 2789 1316 07F5A252 		add	r2, r7, #5184
 2790 131a 02F11702 		add	r2, r2, #23
 2791 131e 1370     		strb	r3, [r2]
 2792              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2793              		.loc 1 514 0 is_stmt 0 discriminator 1
 2794 1320 07F5A253 		add	r3, r7, #5184
 2795 1324 03F11703 		add	r3, r3, #23
 2796 1328 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2797 132a 07F5A253 		add	r3, r7, #5184
 2798 132e 03F11303 		add	r3, r3, #19
 2799 1332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2800 1334 9A42     		cmp	r2, r3
 2801 1336 BFD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2802              		.loc 1 517 0 is_stmt 1
 2803 1338 07F5A253 		add	r3, r7, #5184
 2804 133c 03F10F03 		add	r3, r3, #15
 2805 1340 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2806 1342 3049     		ldr	r1, .L262
 2807 1344 1346     		mov	r3, r2
 2808 1346 DB00     		lsls	r3, r3, #3
 2809 1348 9B1A     		subs	r3, r3, r2
 2810 134a 1B01     		lsls	r3, r3, #4
 2811 134c 0B44     		add	r3, r3, r1
 2812 134e DC33     		adds	r3, r3, #220
 2813 1350 1B68     		ldr	r3, [r3]
 2814 1352 1846     		mov	r0, r3
 2815 1354 FFF7FEFF 		bl	__aeabi_i2f
 2816 1358 0346     		mov	r3, r0
 2817 135a 4FF08F41 		mov	r1, #1199570944
 2818 135e 1846     		mov	r0, r3
 2819 1360 FFF7FEFF 		bl	__aeabi_fdiv
 2820 1364 0346     		mov	r3, r0
 2821 1366 1A46     		mov	r2, r3
 2822 1368 07F13803 		add	r3, r7, #56
 2823 136c 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 76


 2824 136e 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2825              		.loc 1 518 0
 2826 1370 0023     		movs	r3, #0
 2827 1372 07F5A252 		add	r2, r7, #5184
 2828 1376 02F11702 		add	r2, r2, #23
 2829 137a 1370     		strb	r3, [r2]
 2830 137c 34E0     		b	.L141
 2831              	.L142:
 519:..\src/command_processing.c ****                             }
 2832              		.loc 1 519 0 discriminator 3
 2833 137e 07F5A253 		add	r3, r7, #5184
 2834 1382 03F11503 		add	r3, r3, #21
 2835 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2836 1388 3222     		movs	r2, #50
 2837 138a 02FB03F3 		mul	r3, r2, r3
 2838 138e 1A1D     		adds	r2, r3, #4
 2839 1390 07F5A253 		add	r3, r7, #5184
 2840 1394 03F11303 		add	r3, r3, #19
 2841 1398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2842 139a 5B00     		lsls	r3, r3, #1
 2843 139c 1A44     		add	r2, r2, r3
 2844 139e 07F5A253 		add	r3, r7, #5184
 2845 13a2 03F11303 		add	r3, r3, #19
 2846 13a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2847 13a8 1A44     		add	r2, r2, r3
 2848 13aa 07F5A253 		add	r3, r7, #5184
 2849 13ae 03F11703 		add	r3, r3, #23
 2850 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2851 13b4 D31A     		subs	r3, r2, r3
 2852 13b6 5A1E     		subs	r2, r3, #1
 2853 13b8 07F5A253 		add	r3, r7, #5184
 2854 13bc 03F11703 		add	r3, r3, #23
 2855 13c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2856 13c2 07F13803 		add	r3, r7, #56
 2857 13c6 183B     		subs	r3, r3, #24
 2858 13c8 0B44     		add	r3, r3, r1
 2859 13ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2860 13cc 07F15803 		add	r3, r7, #88
 2861 13d0 9954     		strb	r1, [r3, r2]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2862              		.loc 1 518 0 discriminator 3
 2863 13d2 07F5A253 		add	r3, r7, #5184
 2864 13d6 03F11703 		add	r3, r3, #23
 2865 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2866 13dc 0133     		adds	r3, r3, #1
 2867 13de 07F5A252 		add	r2, r7, #5184
 2868 13e2 02F11702 		add	r2, r2, #23
 2869 13e6 1370     		strb	r3, [r2]
 2870              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2871              		.loc 1 518 0 is_stmt 0 discriminator 1
 2872 13e8 07F5A253 		add	r3, r7, #5184
 2873 13ec 03F11703 		add	r3, r3, #23
 2874 13f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2875 13f2 07F5A253 		add	r3, r7, #5184
 2876 13f6 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 77


 2877 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2878 13fc 9A42     		cmp	r2, r3
 2879 13fe BED3     		bcc	.L142
 2880              		.loc 1 522 0 is_stmt 1
 2881 1400 01F007B8 		b	.L103
 2882              	.L263:
 2883              		.align	2
 2884              	.L262:
 2885 1404 00000000 		.word	c_mem
 2886              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2887              		.loc 1 525 0
 2888 1408 07F5A253 		add	r3, r7, #5184
 2889 140c 03F10F03 		add	r3, r3, #15
 2890 1410 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2891 1412 C849     		ldr	r1, .L264
 2892 1414 1346     		mov	r3, r2
 2893 1416 DB00     		lsls	r3, r3, #3
 2894 1418 9B1A     		subs	r3, r3, r2
 2895 141a 1B01     		lsls	r3, r3, #4
 2896 141c 0B44     		add	r3, r3, r1
 2897 141e 03F58873 		add	r3, r3, #272
 2898 1422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2899 1424 1846     		mov	r0, r3
 2900 1426 07F5A253 		add	r3, r7, #5184
 2901 142a 03F11703 		add	r3, r3, #23
 2902 142e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2903 1430 C149     		ldr	r1, .L264+4
 2904 1432 0346     		mov	r3, r0
 2905 1434 5B00     		lsls	r3, r3, #1
 2906 1436 0344     		add	r3, r3, r0
 2907 1438 9B00     		lsls	r3, r3, #2
 2908 143a 1344     		add	r3, r3, r2
 2909 143c 6633     		adds	r3, r3, #102
 2910 143e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2911 1442 07F5A253 		add	r3, r7, #5184
 2912 1446 03F10F03 		add	r3, r3, #15
 2913 144a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2914 144c B948     		ldr	r0, .L264
 2915 144e 1346     		mov	r3, r2
 2916 1450 DB00     		lsls	r3, r3, #3
 2917 1452 9B1A     		subs	r3, r3, r2
 2918 1454 1B01     		lsls	r3, r3, #4
 2919 1456 0344     		add	r3, r3, r0
 2920 1458 03F58873 		add	r3, r3, #272
 2921 145c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2922 145e 1C46     		mov	r4, r3
 2923 1460 07F5A253 		add	r3, r7, #5184
 2924 1464 03F11703 		add	r3, r3, #23
 2925 1468 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2926 146a B348     		ldr	r0, .L264+4
 2927 146c 2346     		mov	r3, r4
 2928 146e 5B00     		lsls	r3, r3, #1
 2929 1470 2344     		add	r3, r3, r4
 2930 1472 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 78


 2931 1474 0344     		add	r3, r3, r0
 2932 1476 1344     		add	r3, r3, r2
 2933 1478 03F29513 		addw	r3, r3, #405
 2934 147c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2935 147e 41FA03F3 		asr	r3, r1, r3
 2936 1482 1AB2     		sxth	r2, r3
 2937 1484 07F13803 		add	r3, r7, #56
 2938 1488 1A3B     		subs	r3, r3, #26
 2939 148a 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2940              		.loc 1 526 0
 2941 148c 0023     		movs	r3, #0
 2942 148e 07F5A252 		add	r2, r7, #5184
 2943 1492 02F11602 		add	r2, r2, #22
 2944 1496 1370     		strb	r3, [r2]
 2945 1498 3AE0     		b	.L143
 2946              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2947              		.loc 1 527 0 discriminator 3
 2948 149a 07F5A253 		add	r3, r7, #5184
 2949 149e 03F11503 		add	r3, r3, #21
 2950 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2951 14a4 3222     		movs	r2, #50
 2952 14a6 02FB03F3 		mul	r3, r2, r3
 2953 14aa 1A1D     		adds	r2, r3, #4
 2954 14ac 07F5A253 		add	r3, r7, #5184
 2955 14b0 03F11703 		add	r3, r3, #23
 2956 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2957 14b6 07F5A251 		add	r1, r7, #5184
 2958 14ba 01F11301 		add	r1, r1, #19
 2959 14be 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2960 14c0 01FB03F3 		mul	r3, r1, r3
 2961 14c4 1A44     		add	r2, r2, r3
 2962 14c6 07F5A253 		add	r3, r7, #5184
 2963 14ca 03F11303 		add	r3, r3, #19
 2964 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2965 14d0 1A44     		add	r2, r2, r3
 2966 14d2 07F5A253 		add	r3, r7, #5184
 2967 14d6 03F11603 		add	r3, r3, #22
 2968 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2969 14dc D31A     		subs	r3, r2, r3
 2970 14de 5A1E     		subs	r2, r3, #1
 2971 14e0 07F5A253 		add	r3, r7, #5184
 2972 14e4 03F11603 		add	r3, r3, #22
 2973 14e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2974 14ea 07F13803 		add	r3, r7, #56
 2975 14ee 1A3B     		subs	r3, r3, #26
 2976 14f0 0B44     		add	r3, r3, r1
 2977 14f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2978 14f4 07F15803 		add	r3, r7, #88
 2979 14f8 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2980              		.loc 1 526 0 discriminator 3
 2981 14fa 07F5A253 		add	r3, r7, #5184
 2982 14fe 03F11603 		add	r3, r3, #22
 2983 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2984 1504 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 79


 2985 1506 07F5A252 		add	r2, r7, #5184
 2986 150a 02F11602 		add	r2, r2, #22
 2987 150e 1370     		strb	r3, [r2]
 2988              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2989              		.loc 1 526 0 is_stmt 0 discriminator 1
 2990 1510 07F5A253 		add	r3, r7, #5184
 2991 1514 03F11603 		add	r3, r3, #22
 2992 1518 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2993 151a 07F5A253 		add	r3, r7, #5184
 2994 151e 03F11303 		add	r3, r3, #19
 2995 1522 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2996 1524 9A42     		cmp	r2, r3
 2997 1526 B8D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2998              		.loc 1 529 0 is_stmt 1
 2999 1528 00F073BF 		b	.L103
 3000              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3001              		.loc 1 532 0
 3002 152c 07F5A253 		add	r3, r7, #5184
 3003 1530 03F10F03 		add	r3, r3, #15
 3004 1534 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3005 1536 8049     		ldr	r1, .L264+4
 3006 1538 1346     		mov	r3, r2
 3007 153a DB00     		lsls	r3, r3, #3
 3008 153c 9B1A     		subs	r3, r3, r2
 3009 153e 1B01     		lsls	r3, r3, #4
 3010 1540 0B44     		add	r3, r3, r1
 3011 1542 E433     		adds	r3, r3, #228
 3012 1544 1968     		ldr	r1, [r3]
 3013 1546 07F5A253 		add	r3, r7, #5184
 3014 154a 03F10F03 		add	r3, r3, #15
 3015 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3016 1550 7848     		ldr	r0, .L264
 3017 1552 1346     		mov	r3, r2
 3018 1554 DB00     		lsls	r3, r3, #3
 3019 1556 9B1A     		subs	r3, r3, r2
 3020 1558 1B01     		lsls	r3, r3, #4
 3021 155a 0344     		add	r3, r3, r0
 3022 155c 03F58873 		add	r3, r3, #272
 3023 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3024 1562 1846     		mov	r0, r3
 3025 1564 744A     		ldr	r2, .L264+4
 3026 1566 0346     		mov	r3, r0
 3027 1568 5B00     		lsls	r3, r3, #1
 3028 156a 0344     		add	r3, r3, r0
 3029 156c 1B01     		lsls	r3, r3, #4
 3030 156e 1344     		add	r3, r3, r2
 3031 1570 03F29513 		addw	r3, r3, #405
 3032 1574 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3033 1576 41FA03F2 		asr	r2, r1, r3
 3034 157a 07F11803 		add	r3, r7, #24
 3035 157e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 80


 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3036              		.loc 1 533 0
 3037 1580 0023     		movs	r3, #0
 3038 1582 07F5A252 		add	r2, r7, #5184
 3039 1586 02F11602 		add	r2, r2, #22
 3040 158a 1370     		strb	r3, [r2]
 3041 158c 2CE0     		b	.L145
 3042              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3043              		.loc 1 534 0 discriminator 3
 3044 158e 07F5A253 		add	r3, r7, #5184
 3045 1592 03F11503 		add	r3, r3, #21
 3046 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3047 1598 3222     		movs	r2, #50
 3048 159a 02FB03F3 		mul	r3, r2, r3
 3049 159e 1A1D     		adds	r2, r3, #4
 3050 15a0 07F5A253 		add	r3, r7, #5184
 3051 15a4 03F11303 		add	r3, r3, #19
 3052 15a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3053 15aa 1A44     		add	r2, r2, r3
 3054 15ac 07F5A253 		add	r3, r7, #5184
 3055 15b0 03F11603 		add	r3, r3, #22
 3056 15b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3057 15b6 D31A     		subs	r3, r2, r3
 3058 15b8 013B     		subs	r3, r3, #1
 3059 15ba 07F5A252 		add	r2, r7, #5184
 3060 15be 02F11602 		add	r2, r2, #22
 3061 15c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3062 15c4 07F11801 		add	r1, r7, #24
 3063 15c8 0A44     		add	r2, r2, r1
 3064 15ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3065 15cc 07F15802 		add	r2, r7, #88
 3066 15d0 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3067              		.loc 1 533 0 discriminator 3
 3068 15d2 07F5A253 		add	r3, r7, #5184
 3069 15d6 03F11603 		add	r3, r3, #22
 3070 15da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3071 15dc 0133     		adds	r3, r3, #1
 3072 15de 07F5A252 		add	r2, r7, #5184
 3073 15e2 02F11602 		add	r2, r2, #22
 3074 15e6 1370     		strb	r3, [r2]
 3075              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3076              		.loc 1 533 0 is_stmt 0 discriminator 1
 3077 15e8 07F5A253 		add	r3, r7, #5184
 3078 15ec 03F11603 		add	r3, r3, #22
 3079 15f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3080 15f2 07F5A253 		add	r3, r7, #5184
 3081 15f6 03F11303 		add	r3, r3, #19
 3082 15fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3083 15fc 9A42     		cmp	r2, r3
 3084 15fe C6D3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3085              		.loc 1 536 0 is_stmt 1
 3086 1600 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 81


 3087 1604 03F10F03 		add	r3, r3, #15
 3088 1608 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3089 160a 4B49     		ldr	r1, .L264+4
 3090 160c 1346     		mov	r3, r2
 3091 160e DB00     		lsls	r3, r3, #3
 3092 1610 9B1A     		subs	r3, r3, r2
 3093 1612 1B01     		lsls	r3, r3, #4
 3094 1614 0B44     		add	r3, r3, r1
 3095 1616 E833     		adds	r3, r3, #232
 3096 1618 1968     		ldr	r1, [r3]
 3097 161a 07F5A253 		add	r3, r7, #5184
 3098 161e 03F10F03 		add	r3, r3, #15
 3099 1622 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3100 1624 4348     		ldr	r0, .L264
 3101 1626 1346     		mov	r3, r2
 3102 1628 DB00     		lsls	r3, r3, #3
 3103 162a 9B1A     		subs	r3, r3, r2
 3104 162c 1B01     		lsls	r3, r3, #4
 3105 162e 0344     		add	r3, r3, r0
 3106 1630 03F58873 		add	r3, r3, #272
 3107 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3108 1636 1846     		mov	r0, r3
 3109 1638 3F4A     		ldr	r2, .L264+4
 3110 163a 0346     		mov	r3, r0
 3111 163c 5B00     		lsls	r3, r3, #1
 3112 163e 0344     		add	r3, r3, r0
 3113 1640 1B01     		lsls	r3, r3, #4
 3114 1642 1344     		add	r3, r3, r2
 3115 1644 03F29513 		addw	r3, r3, #405
 3116 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3117 164a 41FA03F2 		asr	r2, r1, r3
 3118 164e 07F11803 		add	r3, r7, #24
 3119 1652 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3120              		.loc 1 537 0
 3121 1654 0023     		movs	r3, #0
 3122 1656 07F5A252 		add	r2, r7, #5184
 3123 165a 02F11602 		add	r2, r2, #22
 3124 165e 1370     		strb	r3, [r2]
 3125 1660 32E0     		b	.L147
 3126              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3127              		.loc 1 538 0 discriminator 3
 3128 1662 07F5A253 		add	r3, r7, #5184
 3129 1666 03F11503 		add	r3, r3, #21
 3130 166a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3131 166c 3222     		movs	r2, #50
 3132 166e 02FB03F3 		mul	r3, r2, r3
 3133 1672 1A1D     		adds	r2, r3, #4
 3134 1674 07F5A253 		add	r3, r7, #5184
 3135 1678 03F11303 		add	r3, r3, #19
 3136 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3137 167e 1A44     		add	r2, r2, r3
 3138 1680 07F5A253 		add	r3, r7, #5184
 3139 1684 03F11303 		add	r3, r3, #19
 3140 1688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3141 168a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 82


 3142 168c 07F5A253 		add	r3, r7, #5184
 3143 1690 03F11603 		add	r3, r3, #22
 3144 1694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3145 1696 D31A     		subs	r3, r2, r3
 3146 1698 013B     		subs	r3, r3, #1
 3147 169a 07F5A252 		add	r2, r7, #5184
 3148 169e 02F11602 		add	r2, r2, #22
 3149 16a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3150 16a4 07F11801 		add	r1, r7, #24
 3151 16a8 0A44     		add	r2, r2, r1
 3152 16aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3153 16ac 07F15802 		add	r2, r7, #88
 3154 16b0 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3155              		.loc 1 537 0 discriminator 3
 3156 16b2 07F5A253 		add	r3, r7, #5184
 3157 16b6 03F11603 		add	r3, r3, #22
 3158 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3159 16bc 0133     		adds	r3, r3, #1
 3160 16be 07F5A252 		add	r2, r7, #5184
 3161 16c2 02F11602 		add	r2, r2, #22
 3162 16c6 1370     		strb	r3, [r2]
 3163              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3164              		.loc 1 537 0 is_stmt 0 discriminator 1
 3165 16c8 07F5A253 		add	r3, r7, #5184
 3166 16cc 03F11603 		add	r3, r3, #22
 3167 16d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3168 16d2 07F5A253 		add	r3, r7, #5184
 3169 16d6 03F11303 		add	r3, r3, #19
 3170 16da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3171 16dc 9A42     		cmp	r2, r3
 3172 16de C0D3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 3173              		.loc 1 540 0 is_stmt 1
 3174 16e0 00F097BE 		b	.L103
 3175              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3176              		.loc 1 543 0
 3177 16e4 144B     		ldr	r3, .L264+4
 3178 16e6 D3F8A012 		ldr	r1, [r3, #672]
 3179 16ea 07F5A253 		add	r3, r7, #5184
 3180 16ee 03F10F03 		add	r3, r3, #15
 3181 16f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3182 16f4 0F48     		ldr	r0, .L264
 3183 16f6 1346     		mov	r3, r2
 3184 16f8 DB00     		lsls	r3, r3, #3
 3185 16fa 9B1A     		subs	r3, r3, r2
 3186 16fc 1B01     		lsls	r3, r3, #4
 3187 16fe 0344     		add	r3, r3, r0
 3188 1700 03F58873 		add	r3, r3, #272
 3189 1704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3190 1706 1846     		mov	r0, r3
 3191 1708 0B4A     		ldr	r2, .L264+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 83


 3192 170a 0346     		mov	r3, r0
 3193 170c 5B00     		lsls	r3, r3, #1
 3194 170e 0344     		add	r3, r3, r0
 3195 1710 1B01     		lsls	r3, r3, #4
 3196 1712 1344     		add	r3, r3, r2
 3197 1714 03F29513 		addw	r3, r3, #405
 3198 1718 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3199 171a 41FA03F2 		asr	r2, r1, r3
 3200 171e 07F11803 		add	r3, r7, #24
 3201 1722 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3202              		.loc 1 544 0
 3203 1724 0023     		movs	r3, #0
 3204 1726 07F5A252 		add	r2, r7, #5184
 3205 172a 02F11602 		add	r2, r2, #22
 3206 172e 1370     		strb	r3, [r2]
 3207 1730 31E0     		b	.L149
 3208              	.L265:
 3209 1732 00BF     		.align	2
 3210              	.L264:
 3211 1734 00000000 		.word	g_mem
 3212 1738 00000000 		.word	c_mem
 3213              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3214              		.loc 1 545 0 discriminator 3
 3215 173c 07F5A253 		add	r3, r7, #5184
 3216 1740 03F11503 		add	r3, r3, #21
 3217 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3218 1746 3222     		movs	r2, #50
 3219 1748 02FB03F3 		mul	r3, r2, r3
 3220 174c 1A1D     		adds	r2, r3, #4
 3221 174e 07F5A253 		add	r3, r7, #5184
 3222 1752 03F11303 		add	r3, r3, #19
 3223 1756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3224 1758 1A44     		add	r2, r2, r3
 3225 175a 07F5A253 		add	r3, r7, #5184
 3226 175e 03F11603 		add	r3, r3, #22
 3227 1762 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3228 1764 D31A     		subs	r3, r2, r3
 3229 1766 013B     		subs	r3, r3, #1
 3230 1768 07F5A252 		add	r2, r7, #5184
 3231 176c 02F11602 		add	r2, r2, #22
 3232 1770 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3233 1772 07F11801 		add	r1, r7, #24
 3234 1776 0A44     		add	r2, r2, r1
 3235 1778 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3236 177a 07F15802 		add	r2, r7, #88
 3237 177e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3238              		.loc 1 544 0 discriminator 3
 3239 1780 07F5A253 		add	r3, r7, #5184
 3240 1784 03F11603 		add	r3, r3, #22
 3241 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3242 178a 0133     		adds	r3, r3, #1
 3243 178c 07F5A252 		add	r2, r7, #5184
 3244 1790 02F11602 		add	r2, r2, #22
 3245 1794 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 84


 3246              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3247              		.loc 1 544 0 is_stmt 0 discriminator 1
 3248 1796 07F5A253 		add	r3, r7, #5184
 3249 179a 03F11603 		add	r3, r3, #22
 3250 179e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3251 17a0 07F5A253 		add	r3, r7, #5184
 3252 17a4 03F11303 		add	r3, r3, #19
 3253 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 17aa 9A42     		cmp	r2, r3
 3255 17ac C6D3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 3256              		.loc 1 547 0 is_stmt 1
 3257 17ae 00F030BE 		b	.L103
 3258              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3259              		.loc 1 550 0
 3260 17b2 07F5A253 		add	r3, r7, #5184
 3261 17b6 03F10E03 		add	r3, r3, #14
 3262 17ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3263 17bc AA49     		ldr	r1, .L266
 3264 17be 1346     		mov	r3, r2
 3265 17c0 DB00     		lsls	r3, r3, #3
 3266 17c2 9B1A     		subs	r3, r3, r2
 3267 17c4 1B01     		lsls	r3, r3, #4
 3268 17c6 0B44     		add	r3, r3, r1
 3269 17c8 03F20F13 		addw	r3, r3, #271
 3270 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3271 17ce 032B     		cmp	r3, #3
 3272 17d0 00F02681 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3273              		.loc 1 551 0
 3274 17d4 07F5A253 		add	r3, r7, #5184
 3275 17d8 03F10E03 		add	r3, r3, #14
 3276 17dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3277 17de A249     		ldr	r1, .L266
 3278 17e0 1346     		mov	r3, r2
 3279 17e2 DB00     		lsls	r3, r3, #3
 3280 17e4 9B1A     		subs	r3, r3, r2
 3281 17e6 1B01     		lsls	r3, r3, #4
 3282 17e8 0B44     		add	r3, r3, r1
 3283 17ea B033     		adds	r3, r3, #176
 3284 17ec 1B68     		ldr	r3, [r3]
 3285 17ee 1846     		mov	r0, r3
 3286 17f0 FFF7FEFF 		bl	__aeabi_i2f
 3287 17f4 0346     		mov	r3, r0
 3288 17f6 4FF08F41 		mov	r1, #1199570944
 3289 17fa 1846     		mov	r0, r3
 3290 17fc FFF7FEFF 		bl	__aeabi_fdiv
 3291 1800 0346     		mov	r3, r0
 3292 1802 1A46     		mov	r2, r3
 3293 1804 07F13803 		add	r3, r7, #56
 3294 1808 183B     		subs	r3, r3, #24
 3295 180a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 85


 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3296              		.loc 1 552 0
 3297 180c 0023     		movs	r3, #0
 3298 180e 07F5A252 		add	r2, r7, #5184
 3299 1812 02F11702 		add	r2, r2, #23
 3300 1816 1370     		strb	r3, [r2]
 3301 1818 2DE0     		b	.L152
 3302              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3303              		.loc 1 553 0 discriminator 3
 3304 181a 07F5A253 		add	r3, r7, #5184
 3305 181e 03F11503 		add	r3, r3, #21
 3306 1822 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3307 1824 3222     		movs	r2, #50
 3308 1826 02FB03F3 		mul	r3, r2, r3
 3309 182a 1A1D     		adds	r2, r3, #4
 3310 182c 07F5A253 		add	r3, r7, #5184
 3311 1830 03F11303 		add	r3, r3, #19
 3312 1834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3313 1836 1A44     		add	r2, r2, r3
 3314 1838 07F5A253 		add	r3, r7, #5184
 3315 183c 03F11703 		add	r3, r3, #23
 3316 1840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 1842 D31A     		subs	r3, r2, r3
 3318 1844 5A1E     		subs	r2, r3, #1
 3319 1846 07F5A253 		add	r3, r7, #5184
 3320 184a 03F11703 		add	r3, r3, #23
 3321 184e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3322 1850 07F13803 		add	r3, r7, #56
 3323 1854 183B     		subs	r3, r3, #24
 3324 1856 0B44     		add	r3, r3, r1
 3325 1858 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3326 185a 07F15803 		add	r3, r7, #88
 3327 185e 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3328              		.loc 1 552 0 discriminator 3
 3329 1860 07F5A253 		add	r3, r7, #5184
 3330 1864 03F11703 		add	r3, r3, #23
 3331 1868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3332 186a 0133     		adds	r3, r3, #1
 3333 186c 07F5A252 		add	r2, r7, #5184
 3334 1870 02F11702 		add	r2, r2, #23
 3335 1874 1370     		strb	r3, [r2]
 3336              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3337              		.loc 1 552 0 is_stmt 0 discriminator 1
 3338 1876 07F5A253 		add	r3, r7, #5184
 3339 187a 03F11703 		add	r3, r3, #23
 3340 187e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3341 1880 07F5A253 		add	r3, r7, #5184
 3342 1884 03F11303 		add	r3, r3, #19
 3343 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 188a 9A42     		cmp	r2, r3
 3345 188c C5D3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3346              		.loc 1 555 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 86


 3347 188e 07F5A253 		add	r3, r7, #5184
 3348 1892 03F10E03 		add	r3, r3, #14
 3349 1896 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3350 1898 7349     		ldr	r1, .L266
 3351 189a 1346     		mov	r3, r2
 3352 189c DB00     		lsls	r3, r3, #3
 3353 189e 9B1A     		subs	r3, r3, r2
 3354 18a0 1B01     		lsls	r3, r3, #4
 3355 18a2 0B44     		add	r3, r3, r1
 3356 18a4 B433     		adds	r3, r3, #180
 3357 18a6 1B68     		ldr	r3, [r3]
 3358 18a8 1846     		mov	r0, r3
 3359 18aa FFF7FEFF 		bl	__aeabi_i2f
 3360 18ae 0346     		mov	r3, r0
 3361 18b0 4FF08F41 		mov	r1, #1199570944
 3362 18b4 1846     		mov	r0, r3
 3363 18b6 FFF7FEFF 		bl	__aeabi_fdiv
 3364 18ba 0346     		mov	r3, r0
 3365 18bc 1A46     		mov	r2, r3
 3366 18be 07F13803 		add	r3, r7, #56
 3367 18c2 183B     		subs	r3, r3, #24
 3368 18c4 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3369              		.loc 1 556 0
 3370 18c6 0023     		movs	r3, #0
 3371 18c8 07F5A252 		add	r2, r7, #5184
 3372 18cc 02F11702 		add	r2, r2, #23
 3373 18d0 1370     		strb	r3, [r2]
 3374 18d2 33E0     		b	.L154
 3375              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3376              		.loc 1 557 0 discriminator 3
 3377 18d4 07F5A253 		add	r3, r7, #5184
 3378 18d8 03F11503 		add	r3, r3, #21
 3379 18dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3380 18de 3222     		movs	r2, #50
 3381 18e0 02FB03F3 		mul	r3, r2, r3
 3382 18e4 1A1D     		adds	r2, r3, #4
 3383 18e6 07F5A253 		add	r3, r7, #5184
 3384 18ea 03F11303 		add	r3, r3, #19
 3385 18ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3386 18f0 1A44     		add	r2, r2, r3
 3387 18f2 07F5A253 		add	r3, r7, #5184
 3388 18f6 03F11303 		add	r3, r3, #19
 3389 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 18fc 1A44     		add	r2, r2, r3
 3391 18fe 07F5A253 		add	r3, r7, #5184
 3392 1902 03F11703 		add	r3, r3, #23
 3393 1906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 1908 D31A     		subs	r3, r2, r3
 3395 190a 5A1E     		subs	r2, r3, #1
 3396 190c 07F5A253 		add	r3, r7, #5184
 3397 1910 03F11703 		add	r3, r3, #23
 3398 1914 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3399 1916 07F13803 		add	r3, r7, #56
 3400 191a 183B     		subs	r3, r3, #24
 3401 191c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 87


 3402 191e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3403 1920 07F15803 		add	r3, r7, #88
 3404 1924 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3405              		.loc 1 556 0 discriminator 3
 3406 1926 07F5A253 		add	r3, r7, #5184
 3407 192a 03F11703 		add	r3, r3, #23
 3408 192e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3409 1930 0133     		adds	r3, r3, #1
 3410 1932 07F5A252 		add	r2, r7, #5184
 3411 1936 02F11702 		add	r2, r2, #23
 3412 193a 1370     		strb	r3, [r2]
 3413              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3414              		.loc 1 556 0 is_stmt 0 discriminator 1
 3415 193c 07F5A253 		add	r3, r7, #5184
 3416 1940 03F11703 		add	r3, r3, #23
 3417 1944 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3418 1946 07F5A253 		add	r3, r7, #5184
 3419 194a 03F11303 		add	r3, r3, #19
 3420 194e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 1950 9A42     		cmp	r2, r3
 3422 1952 BFD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3423              		.loc 1 559 0 is_stmt 1
 3424 1954 07F5A253 		add	r3, r7, #5184
 3425 1958 03F10E03 		add	r3, r3, #14
 3426 195c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3427 195e 4249     		ldr	r1, .L266
 3428 1960 1346     		mov	r3, r2
 3429 1962 DB00     		lsls	r3, r3, #3
 3430 1964 9B1A     		subs	r3, r3, r2
 3431 1966 1B01     		lsls	r3, r3, #4
 3432 1968 0B44     		add	r3, r3, r1
 3433 196a B833     		adds	r3, r3, #184
 3434 196c 1B68     		ldr	r3, [r3]
 3435 196e 1846     		mov	r0, r3
 3436 1970 FFF7FEFF 		bl	__aeabi_i2f
 3437 1974 0346     		mov	r3, r0
 3438 1976 4FF08F41 		mov	r1, #1199570944
 3439 197a 1846     		mov	r0, r3
 3440 197c FFF7FEFF 		bl	__aeabi_fdiv
 3441 1980 0346     		mov	r3, r0
 3442 1982 1A46     		mov	r2, r3
 3443 1984 07F13803 		add	r3, r7, #56
 3444 1988 183B     		subs	r3, r3, #24
 3445 198a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3446              		.loc 1 560 0
 3447 198c 0023     		movs	r3, #0
 3448 198e 07F5A252 		add	r2, r7, #5184
 3449 1992 02F11702 		add	r2, r2, #23
 3450 1996 1370     		strb	r3, [r2]
 3451 1998 34E0     		b	.L156
 3452              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 88


 3453              		.loc 1 561 0 discriminator 3
 3454 199a 07F5A253 		add	r3, r7, #5184
 3455 199e 03F11503 		add	r3, r3, #21
 3456 19a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3457 19a4 3222     		movs	r2, #50
 3458 19a6 02FB03F3 		mul	r3, r2, r3
 3459 19aa 1A1D     		adds	r2, r3, #4
 3460 19ac 07F5A253 		add	r3, r7, #5184
 3461 19b0 03F11303 		add	r3, r3, #19
 3462 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3463 19b6 5B00     		lsls	r3, r3, #1
 3464 19b8 1A44     		add	r2, r2, r3
 3465 19ba 07F5A253 		add	r3, r7, #5184
 3466 19be 03F11303 		add	r3, r3, #19
 3467 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3468 19c4 1A44     		add	r2, r2, r3
 3469 19c6 07F5A253 		add	r3, r7, #5184
 3470 19ca 03F11703 		add	r3, r3, #23
 3471 19ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 19d0 D31A     		subs	r3, r2, r3
 3473 19d2 5A1E     		subs	r2, r3, #1
 3474 19d4 07F5A253 		add	r3, r7, #5184
 3475 19d8 03F11703 		add	r3, r3, #23
 3476 19dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3477 19de 07F13803 		add	r3, r7, #56
 3478 19e2 183B     		subs	r3, r3, #24
 3479 19e4 0B44     		add	r3, r3, r1
 3480 19e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3481 19e8 07F15803 		add	r3, r7, #88
 3482 19ec 9954     		strb	r1, [r3, r2]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3483              		.loc 1 560 0 discriminator 3
 3484 19ee 07F5A253 		add	r3, r7, #5184
 3485 19f2 03F11703 		add	r3, r3, #23
 3486 19f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3487 19f8 0133     		adds	r3, r3, #1
 3488 19fa 07F5A252 		add	r2, r7, #5184
 3489 19fe 02F11702 		add	r2, r2, #23
 3490 1a02 1370     		strb	r3, [r2]
 3491              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3492              		.loc 1 560 0 is_stmt 0 discriminator 1
 3493 1a04 07F5A253 		add	r3, r7, #5184
 3494 1a08 03F11703 		add	r3, r3, #23
 3495 1a0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3496 1a0e 07F5A253 		add	r3, r7, #5184
 3497 1a12 03F11303 		add	r3, r3, #19
 3498 1a16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3499 1a18 9A42     		cmp	r2, r3
 3500 1a1a BED3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 89


 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 3501              		.loc 1 578 0 is_stmt 1
 3502 1a1c 00F0F9BC 		b	.L103
 3503              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3504              		.loc 1 565 0
 3505 1a20 07F5A253 		add	r3, r7, #5184
 3506 1a24 03F10E03 		add	r3, r3, #14
 3507 1a28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3508 1a2a 0F49     		ldr	r1, .L266
 3509 1a2c 1346     		mov	r3, r2
 3510 1a2e DB00     		lsls	r3, r3, #3
 3511 1a30 9B1A     		subs	r3, r3, r2
 3512 1a32 1B01     		lsls	r3, r3, #4
 3513 1a34 0B44     		add	r3, r3, r1
 3514 1a36 C833     		adds	r3, r3, #200
 3515 1a38 1B68     		ldr	r3, [r3]
 3516 1a3a 1846     		mov	r0, r3
 3517 1a3c FFF7FEFF 		bl	__aeabi_i2f
 3518 1a40 0346     		mov	r3, r0
 3519 1a42 4FF08F41 		mov	r1, #1199570944
 3520 1a46 1846     		mov	r0, r3
 3521 1a48 FFF7FEFF 		bl	__aeabi_fdiv
 3522 1a4c 0346     		mov	r3, r0
 3523 1a4e 1A46     		mov	r2, r3
 3524 1a50 07F13803 		add	r3, r7, #56
 3525 1a54 183B     		subs	r3, r3, #24
 3526 1a56 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3527              		.loc 1 566 0
 3528 1a58 0023     		movs	r3, #0
 3529 1a5a 07F5A252 		add	r2, r7, #5184
 3530 1a5e 02F11702 		add	r2, r2, #23
 3531 1a62 1370     		strb	r3, [r2]
 3532 1a64 30E0     		b	.L159
 3533              	.L267:
 3534 1a66 00BF     		.align	2
 3535              	.L266:
 3536 1a68 00000000 		.word	c_mem
 3537              	.L160:
 567:..\src/command_processing.c ****                             }
 3538              		.loc 1 567 0 discriminator 3
 3539 1a6c 07F5A253 		add	r3, r7, #5184
 3540 1a70 03F11503 		add	r3, r3, #21
 3541 1a74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3542 1a76 3222     		movs	r2, #50
 3543 1a78 02FB03F3 		mul	r3, r2, r3
 3544 1a7c 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 90


 3545 1a7e 07F5A253 		add	r3, r7, #5184
 3546 1a82 03F11303 		add	r3, r3, #19
 3547 1a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3548 1a88 1A44     		add	r2, r2, r3
 3549 1a8a 07F5A253 		add	r3, r7, #5184
 3550 1a8e 03F11703 		add	r3, r3, #23
 3551 1a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 1a94 D31A     		subs	r3, r2, r3
 3553 1a96 5A1E     		subs	r2, r3, #1
 3554 1a98 07F5A253 		add	r3, r7, #5184
 3555 1a9c 03F11703 		add	r3, r3, #23
 3556 1aa0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3557 1aa2 07F13803 		add	r3, r7, #56
 3558 1aa6 183B     		subs	r3, r3, #24
 3559 1aa8 0B44     		add	r3, r3, r1
 3560 1aaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3561 1aac 07F15803 		add	r3, r7, #88
 3562 1ab0 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3563              		.loc 1 566 0 discriminator 3
 3564 1ab2 07F5A253 		add	r3, r7, #5184
 3565 1ab6 03F11703 		add	r3, r3, #23
 3566 1aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3567 1abc 0133     		adds	r3, r3, #1
 3568 1abe 07F5A252 		add	r2, r7, #5184
 3569 1ac2 02F11702 		add	r2, r2, #23
 3570 1ac6 1370     		strb	r3, [r2]
 3571              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3572              		.loc 1 566 0 is_stmt 0 discriminator 1
 3573 1ac8 07F5A253 		add	r3, r7, #5184
 3574 1acc 03F11703 		add	r3, r3, #23
 3575 1ad0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3576 1ad2 07F5A253 		add	r3, r7, #5184
 3577 1ad6 03F11303 		add	r3, r3, #19
 3578 1ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 1adc 9A42     		cmp	r2, r3
 3580 1ade C5D3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3581              		.loc 1 569 0 is_stmt 1
 3582 1ae0 07F5A253 		add	r3, r7, #5184
 3583 1ae4 03F10E03 		add	r3, r3, #14
 3584 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3585 1aea AA49     		ldr	r1, .L268
 3586 1aec 1346     		mov	r3, r2
 3587 1aee DB00     		lsls	r3, r3, #3
 3588 1af0 9B1A     		subs	r3, r3, r2
 3589 1af2 1B01     		lsls	r3, r3, #4
 3590 1af4 0B44     		add	r3, r3, r1
 3591 1af6 CC33     		adds	r3, r3, #204
 3592 1af8 1B68     		ldr	r3, [r3]
 3593 1afa 1846     		mov	r0, r3
 3594 1afc FFF7FEFF 		bl	__aeabi_i2f
 3595 1b00 0346     		mov	r3, r0
 3596 1b02 4FF08F41 		mov	r1, #1199570944
 3597 1b06 1846     		mov	r0, r3
 3598 1b08 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 91


 3599 1b0c 0346     		mov	r3, r0
 3600 1b0e 1A46     		mov	r2, r3
 3601 1b10 07F13803 		add	r3, r7, #56
 3602 1b14 183B     		subs	r3, r3, #24
 3603 1b16 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3604              		.loc 1 570 0
 3605 1b18 0023     		movs	r3, #0
 3606 1b1a 07F5A252 		add	r2, r7, #5184
 3607 1b1e 02F11702 		add	r2, r2, #23
 3608 1b22 1370     		strb	r3, [r2]
 3609 1b24 33E0     		b	.L161
 3610              	.L162:
 571:..\src/command_processing.c ****                             }
 3611              		.loc 1 571 0 discriminator 3
 3612 1b26 07F5A253 		add	r3, r7, #5184
 3613 1b2a 03F11503 		add	r3, r3, #21
 3614 1b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3615 1b30 3222     		movs	r2, #50
 3616 1b32 02FB03F3 		mul	r3, r2, r3
 3617 1b36 1A1D     		adds	r2, r3, #4
 3618 1b38 07F5A253 		add	r3, r7, #5184
 3619 1b3c 03F11303 		add	r3, r3, #19
 3620 1b40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 1b42 1A44     		add	r2, r2, r3
 3622 1b44 07F5A253 		add	r3, r7, #5184
 3623 1b48 03F11303 		add	r3, r3, #19
 3624 1b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3625 1b4e 1A44     		add	r2, r2, r3
 3626 1b50 07F5A253 		add	r3, r7, #5184
 3627 1b54 03F11703 		add	r3, r3, #23
 3628 1b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3629 1b5a D31A     		subs	r3, r2, r3
 3630 1b5c 5A1E     		subs	r2, r3, #1
 3631 1b5e 07F5A253 		add	r3, r7, #5184
 3632 1b62 03F11703 		add	r3, r3, #23
 3633 1b66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3634 1b68 07F13803 		add	r3, r7, #56
 3635 1b6c 183B     		subs	r3, r3, #24
 3636 1b6e 0B44     		add	r3, r3, r1
 3637 1b70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3638 1b72 07F15803 		add	r3, r7, #88
 3639 1b76 9954     		strb	r1, [r3, r2]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3640              		.loc 1 570 0 discriminator 3
 3641 1b78 07F5A253 		add	r3, r7, #5184
 3642 1b7c 03F11703 		add	r3, r3, #23
 3643 1b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3644 1b82 0133     		adds	r3, r3, #1
 3645 1b84 07F5A252 		add	r2, r7, #5184
 3646 1b88 02F11702 		add	r2, r2, #23
 3647 1b8c 1370     		strb	r3, [r2]
 3648              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3649              		.loc 1 570 0 is_stmt 0 discriminator 1
 3650 1b8e 07F5A253 		add	r3, r7, #5184
 3651 1b92 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 92


 3652 1b96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3653 1b98 07F5A253 		add	r3, r7, #5184
 3654 1b9c 03F11303 		add	r3, r3, #19
 3655 1ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3656 1ba2 9A42     		cmp	r2, r3
 3657 1ba4 BFD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3658              		.loc 1 573 0 is_stmt 1
 3659 1ba6 07F5A253 		add	r3, r7, #5184
 3660 1baa 03F10E03 		add	r3, r3, #14
 3661 1bae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3662 1bb0 7849     		ldr	r1, .L268
 3663 1bb2 1346     		mov	r3, r2
 3664 1bb4 DB00     		lsls	r3, r3, #3
 3665 1bb6 9B1A     		subs	r3, r3, r2
 3666 1bb8 1B01     		lsls	r3, r3, #4
 3667 1bba 0B44     		add	r3, r3, r1
 3668 1bbc D033     		adds	r3, r3, #208
 3669 1bbe 1B68     		ldr	r3, [r3]
 3670 1bc0 1846     		mov	r0, r3
 3671 1bc2 FFF7FEFF 		bl	__aeabi_i2f
 3672 1bc6 0346     		mov	r3, r0
 3673 1bc8 4FF08F41 		mov	r1, #1199570944
 3674 1bcc 1846     		mov	r0, r3
 3675 1bce FFF7FEFF 		bl	__aeabi_fdiv
 3676 1bd2 0346     		mov	r3, r0
 3677 1bd4 1A46     		mov	r2, r3
 3678 1bd6 07F13803 		add	r3, r7, #56
 3679 1bda 183B     		subs	r3, r3, #24
 3680 1bdc 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3681              		.loc 1 574 0
 3682 1bde 0023     		movs	r3, #0
 3683 1be0 07F5A252 		add	r2, r7, #5184
 3684 1be4 02F11702 		add	r2, r2, #23
 3685 1be8 1370     		strb	r3, [r2]
 3686 1bea 34E0     		b	.L163
 3687              	.L164:
 575:..\src/command_processing.c ****                             }
 3688              		.loc 1 575 0 discriminator 3
 3689 1bec 07F5A253 		add	r3, r7, #5184
 3690 1bf0 03F11503 		add	r3, r3, #21
 3691 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3692 1bf6 3222     		movs	r2, #50
 3693 1bf8 02FB03F3 		mul	r3, r2, r3
 3694 1bfc 1A1D     		adds	r2, r3, #4
 3695 1bfe 07F5A253 		add	r3, r7, #5184
 3696 1c02 03F11303 		add	r3, r3, #19
 3697 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 1c08 5B00     		lsls	r3, r3, #1
 3699 1c0a 1A44     		add	r2, r2, r3
 3700 1c0c 07F5A253 		add	r3, r7, #5184
 3701 1c10 03F11303 		add	r3, r3, #19
 3702 1c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3703 1c16 1A44     		add	r2, r2, r3
 3704 1c18 07F5A253 		add	r3, r7, #5184
 3705 1c1c 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 93


 3706 1c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 1c22 D31A     		subs	r3, r2, r3
 3708 1c24 5A1E     		subs	r2, r3, #1
 3709 1c26 07F5A253 		add	r3, r7, #5184
 3710 1c2a 03F11703 		add	r3, r3, #23
 3711 1c2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3712 1c30 07F13803 		add	r3, r7, #56
 3713 1c34 183B     		subs	r3, r3, #24
 3714 1c36 0B44     		add	r3, r3, r1
 3715 1c38 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3716 1c3a 07F15803 		add	r3, r7, #88
 3717 1c3e 9954     		strb	r1, [r3, r2]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3718              		.loc 1 574 0 discriminator 3
 3719 1c40 07F5A253 		add	r3, r7, #5184
 3720 1c44 03F11703 		add	r3, r3, #23
 3721 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3722 1c4a 0133     		adds	r3, r3, #1
 3723 1c4c 07F5A252 		add	r2, r7, #5184
 3724 1c50 02F11702 		add	r2, r2, #23
 3725 1c54 1370     		strb	r3, [r2]
 3726              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3727              		.loc 1 574 0 is_stmt 0 discriminator 1
 3728 1c56 07F5A253 		add	r3, r7, #5184
 3729 1c5a 03F11703 		add	r3, r3, #23
 3730 1c5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3731 1c60 07F5A253 		add	r3, r7, #5184
 3732 1c64 03F11303 		add	r3, r3, #19
 3733 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3734 1c6a 9A42     		cmp	r2, r3
 3735 1c6c BED3     		bcc	.L164
 3736              		.loc 1 578 0 is_stmt 1
 3737 1c6e D0E3     		b	.L103
 3738              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3739              		.loc 1 581 0
 3740 1c70 07F5A253 		add	r3, r7, #5184
 3741 1c74 03F10E03 		add	r3, r3, #14
 3742 1c78 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3743 1c7a 4649     		ldr	r1, .L268
 3744 1c7c 1346     		mov	r3, r2
 3745 1c7e DB00     		lsls	r3, r3, #3
 3746 1c80 9B1A     		subs	r3, r3, r2
 3747 1c82 1B01     		lsls	r3, r3, #4
 3748 1c84 0B44     		add	r3, r3, r1
 3749 1c86 03F20F13 		addw	r3, r3, #271
 3750 1c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 1c8c 032B     		cmp	r3, #3
 3752 1c8e 00F02881 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3753              		.loc 1 582 0
 3754 1c92 07F5A253 		add	r3, r7, #5184
 3755 1c96 03F10E03 		add	r3, r3, #14
 3756 1c9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 94


 3757 1c9c 3D49     		ldr	r1, .L268
 3758 1c9e 1346     		mov	r3, r2
 3759 1ca0 DB00     		lsls	r3, r3, #3
 3760 1ca2 9B1A     		subs	r3, r3, r2
 3761 1ca4 1B01     		lsls	r3, r3, #4
 3762 1ca6 0B44     		add	r3, r3, r1
 3763 1ca8 BC33     		adds	r3, r3, #188
 3764 1caa 1B68     		ldr	r3, [r3]
 3765 1cac 1846     		mov	r0, r3
 3766 1cae FFF7FEFF 		bl	__aeabi_i2f
 3767 1cb2 0346     		mov	r3, r0
 3768 1cb4 4FF08F41 		mov	r1, #1199570944
 3769 1cb8 1846     		mov	r0, r3
 3770 1cba FFF7FEFF 		bl	__aeabi_fdiv
 3771 1cbe 0346     		mov	r3, r0
 3772 1cc0 1A46     		mov	r2, r3
 3773 1cc2 07F13803 		add	r3, r7, #56
 3774 1cc6 183B     		subs	r3, r3, #24
 3775 1cc8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3776              		.loc 1 583 0
 3777 1cca 0023     		movs	r3, #0
 3778 1ccc 07F5A252 		add	r2, r7, #5184
 3779 1cd0 02F11702 		add	r2, r2, #23
 3780 1cd4 1370     		strb	r3, [r2]
 3781 1cd6 2DE0     		b	.L166
 3782              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3783              		.loc 1 584 0 discriminator 3
 3784 1cd8 07F5A253 		add	r3, r7, #5184
 3785 1cdc 03F11503 		add	r3, r3, #21
 3786 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 1ce2 3222     		movs	r2, #50
 3788 1ce4 02FB03F3 		mul	r3, r2, r3
 3789 1ce8 1A1D     		adds	r2, r3, #4
 3790 1cea 07F5A253 		add	r3, r7, #5184
 3791 1cee 03F11303 		add	r3, r3, #19
 3792 1cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3793 1cf4 1A44     		add	r2, r2, r3
 3794 1cf6 07F5A253 		add	r3, r7, #5184
 3795 1cfa 03F11703 		add	r3, r3, #23
 3796 1cfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 1d00 D31A     		subs	r3, r2, r3
 3798 1d02 5A1E     		subs	r2, r3, #1
 3799 1d04 07F5A253 		add	r3, r7, #5184
 3800 1d08 03F11703 		add	r3, r3, #23
 3801 1d0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3802 1d0e 07F13803 		add	r3, r7, #56
 3803 1d12 183B     		subs	r3, r3, #24
 3804 1d14 0B44     		add	r3, r3, r1
 3805 1d16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3806 1d18 07F15803 		add	r3, r7, #88
 3807 1d1c 9954     		strb	r1, [r3, r2]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3808              		.loc 1 583 0 discriminator 3
 3809 1d1e 07F5A253 		add	r3, r7, #5184
 3810 1d22 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 95


 3811 1d26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3812 1d28 0133     		adds	r3, r3, #1
 3813 1d2a 07F5A252 		add	r2, r7, #5184
 3814 1d2e 02F11702 		add	r2, r2, #23
 3815 1d32 1370     		strb	r3, [r2]
 3816              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3817              		.loc 1 583 0 is_stmt 0 discriminator 1
 3818 1d34 07F5A253 		add	r3, r7, #5184
 3819 1d38 03F11703 		add	r3, r3, #23
 3820 1d3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3821 1d3e 07F5A253 		add	r3, r7, #5184
 3822 1d42 03F11303 		add	r3, r3, #19
 3823 1d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3824 1d48 9A42     		cmp	r2, r3
 3825 1d4a C5D3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3826              		.loc 1 586 0 is_stmt 1
 3827 1d4c 07F5A253 		add	r3, r7, #5184
 3828 1d50 03F10E03 		add	r3, r3, #14
 3829 1d54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3830 1d56 0F49     		ldr	r1, .L268
 3831 1d58 1346     		mov	r3, r2
 3832 1d5a DB00     		lsls	r3, r3, #3
 3833 1d5c 9B1A     		subs	r3, r3, r2
 3834 1d5e 1B01     		lsls	r3, r3, #4
 3835 1d60 0B44     		add	r3, r3, r1
 3836 1d62 C033     		adds	r3, r3, #192
 3837 1d64 1B68     		ldr	r3, [r3]
 3838 1d66 1846     		mov	r0, r3
 3839 1d68 FFF7FEFF 		bl	__aeabi_i2f
 3840 1d6c 0346     		mov	r3, r0
 3841 1d6e 4FF08F41 		mov	r1, #1199570944
 3842 1d72 1846     		mov	r0, r3
 3843 1d74 FFF7FEFF 		bl	__aeabi_fdiv
 3844 1d78 0346     		mov	r3, r0
 3845 1d7a 1A46     		mov	r2, r3
 3846 1d7c 07F13803 		add	r3, r7, #56
 3847 1d80 183B     		subs	r3, r3, #24
 3848 1d82 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3849              		.loc 1 587 0
 3850 1d84 0023     		movs	r3, #0
 3851 1d86 07F5A252 		add	r2, r7, #5184
 3852 1d8a 02F11702 		add	r2, r2, #23
 3853 1d8e 1370     		strb	r3, [r2]
 3854 1d90 36E0     		b	.L168
 3855              	.L269:
 3856 1d92 00BF     		.align	2
 3857              	.L268:
 3858 1d94 00000000 		.word	c_mem
 3859              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3860              		.loc 1 588 0 discriminator 3
 3861 1d98 07F5A253 		add	r3, r7, #5184
 3862 1d9c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 96


 3863 1da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3864 1da2 3222     		movs	r2, #50
 3865 1da4 02FB03F3 		mul	r3, r2, r3
 3866 1da8 1A1D     		adds	r2, r3, #4
 3867 1daa 07F5A253 		add	r3, r7, #5184
 3868 1dae 03F11303 		add	r3, r3, #19
 3869 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3870 1db4 1A44     		add	r2, r2, r3
 3871 1db6 07F5A253 		add	r3, r7, #5184
 3872 1dba 03F11303 		add	r3, r3, #19
 3873 1dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3874 1dc0 1A44     		add	r2, r2, r3
 3875 1dc2 07F5A253 		add	r3, r7, #5184
 3876 1dc6 03F11703 		add	r3, r3, #23
 3877 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3878 1dcc D31A     		subs	r3, r2, r3
 3879 1dce 5A1E     		subs	r2, r3, #1
 3880 1dd0 07F5A253 		add	r3, r7, #5184
 3881 1dd4 03F11703 		add	r3, r3, #23
 3882 1dd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3883 1dda 07F13803 		add	r3, r7, #56
 3884 1dde 183B     		subs	r3, r3, #24
 3885 1de0 0B44     		add	r3, r3, r1
 3886 1de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3887 1de4 07F15803 		add	r3, r7, #88
 3888 1de8 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3889              		.loc 1 587 0 discriminator 3
 3890 1dea 07F5A253 		add	r3, r7, #5184
 3891 1dee 03F11703 		add	r3, r3, #23
 3892 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3893 1df4 0133     		adds	r3, r3, #1
 3894 1df6 07F5A252 		add	r2, r7, #5184
 3895 1dfa 02F11702 		add	r2, r2, #23
 3896 1dfe 1370     		strb	r3, [r2]
 3897              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3898              		.loc 1 587 0 is_stmt 0 discriminator 1
 3899 1e00 07F5A253 		add	r3, r7, #5184
 3900 1e04 03F11703 		add	r3, r3, #23
 3901 1e08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3902 1e0a 07F5A253 		add	r3, r7, #5184
 3903 1e0e 03F11303 		add	r3, r3, #19
 3904 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1e14 9A42     		cmp	r2, r3
 3906 1e16 BFD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3907              		.loc 1 590 0 is_stmt 1
 3908 1e18 07F5A253 		add	r3, r7, #5184
 3909 1e1c 03F10E03 		add	r3, r3, #14
 3910 1e20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3911 1e22 C249     		ldr	r1, .L270
 3912 1e24 1346     		mov	r3, r2
 3913 1e26 DB00     		lsls	r3, r3, #3
 3914 1e28 9B1A     		subs	r3, r3, r2
 3915 1e2a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 97


 3916 1e2c 0B44     		add	r3, r3, r1
 3917 1e2e C433     		adds	r3, r3, #196
 3918 1e30 1B68     		ldr	r3, [r3]
 3919 1e32 1846     		mov	r0, r3
 3920 1e34 FFF7FEFF 		bl	__aeabi_i2f
 3921 1e38 0346     		mov	r3, r0
 3922 1e3a 4FF08F41 		mov	r1, #1199570944
 3923 1e3e 1846     		mov	r0, r3
 3924 1e40 FFF7FEFF 		bl	__aeabi_fdiv
 3925 1e44 0346     		mov	r3, r0
 3926 1e46 1A46     		mov	r2, r3
 3927 1e48 07F13803 		add	r3, r7, #56
 3928 1e4c 183B     		subs	r3, r3, #24
 3929 1e4e 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3930              		.loc 1 591 0
 3931 1e50 0023     		movs	r3, #0
 3932 1e52 07F5A252 		add	r2, r7, #5184
 3933 1e56 02F11702 		add	r2, r2, #23
 3934 1e5a 1370     		strb	r3, [r2]
 3935 1e5c 34E0     		b	.L170
 3936              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3937              		.loc 1 592 0 discriminator 3
 3938 1e5e 07F5A253 		add	r3, r7, #5184
 3939 1e62 03F11503 		add	r3, r3, #21
 3940 1e66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3941 1e68 3222     		movs	r2, #50
 3942 1e6a 02FB03F3 		mul	r3, r2, r3
 3943 1e6e 1A1D     		adds	r2, r3, #4
 3944 1e70 07F5A253 		add	r3, r7, #5184
 3945 1e74 03F11303 		add	r3, r3, #19
 3946 1e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 1e7a 5B00     		lsls	r3, r3, #1
 3948 1e7c 1A44     		add	r2, r2, r3
 3949 1e7e 07F5A253 		add	r3, r7, #5184
 3950 1e82 03F11303 		add	r3, r3, #19
 3951 1e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1e88 1A44     		add	r2, r2, r3
 3953 1e8a 07F5A253 		add	r3, r7, #5184
 3954 1e8e 03F11703 		add	r3, r3, #23
 3955 1e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3956 1e94 D31A     		subs	r3, r2, r3
 3957 1e96 5A1E     		subs	r2, r3, #1
 3958 1e98 07F5A253 		add	r3, r7, #5184
 3959 1e9c 03F11703 		add	r3, r3, #23
 3960 1ea0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3961 1ea2 07F13803 		add	r3, r7, #56
 3962 1ea6 183B     		subs	r3, r3, #24
 3963 1ea8 0B44     		add	r3, r3, r1
 3964 1eaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3965 1eac 07F15803 		add	r3, r7, #88
 3966 1eb0 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3967              		.loc 1 591 0 discriminator 3
 3968 1eb2 07F5A253 		add	r3, r7, #5184
 3969 1eb6 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 98


 3970 1eba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3971 1ebc 0133     		adds	r3, r3, #1
 3972 1ebe 07F5A252 		add	r2, r7, #5184
 3973 1ec2 02F11702 		add	r2, r2, #23
 3974 1ec6 1370     		strb	r3, [r2]
 3975              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3976              		.loc 1 591 0 is_stmt 0 discriminator 1
 3977 1ec8 07F5A253 		add	r3, r7, #5184
 3978 1ecc 03F11703 		add	r3, r3, #23
 3979 1ed0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3980 1ed2 07F5A253 		add	r3, r7, #5184
 3981 1ed6 03F11303 		add	r3, r3, #19
 3982 1eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3983 1edc 9A42     		cmp	r2, r3
 3984 1ede BED3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3985              		.loc 1 609 0 is_stmt 1
 3986 1ee0 97E2     		b	.L103
 3987              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3988              		.loc 1 596 0
 3989 1ee2 07F5A253 		add	r3, r7, #5184
 3990 1ee6 03F10E03 		add	r3, r3, #14
 3991 1eea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3992 1eec 8F49     		ldr	r1, .L270
 3993 1eee 1346     		mov	r3, r2
 3994 1ef0 DB00     		lsls	r3, r3, #3
 3995 1ef2 9B1A     		subs	r3, r3, r2
 3996 1ef4 1B01     		lsls	r3, r3, #4
 3997 1ef6 0B44     		add	r3, r3, r1
 3998 1ef8 D433     		adds	r3, r3, #212
 3999 1efa 1B68     		ldr	r3, [r3]
 4000 1efc 1846     		mov	r0, r3
 4001 1efe FFF7FEFF 		bl	__aeabi_i2f
 4002 1f02 0346     		mov	r3, r0
 4003 1f04 4FF08F41 		mov	r1, #1199570944
 4004 1f08 1846     		mov	r0, r3
 4005 1f0a FFF7FEFF 		bl	__aeabi_fdiv
 4006 1f0e 0346     		mov	r3, r0
 4007 1f10 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 99


 4008 1f12 07F13803 		add	r3, r7, #56
 4009 1f16 183B     		subs	r3, r3, #24
 4010 1f18 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4011              		.loc 1 597 0
 4012 1f1a 0023     		movs	r3, #0
 4013 1f1c 07F5A252 		add	r2, r7, #5184
 4014 1f20 02F11702 		add	r2, r2, #23
 4015 1f24 1370     		strb	r3, [r2]
 4016 1f26 2DE0     		b	.L173
 4017              	.L174:
 598:..\src/command_processing.c ****                             }
 4018              		.loc 1 598 0 discriminator 3
 4019 1f28 07F5A253 		add	r3, r7, #5184
 4020 1f2c 03F11503 		add	r3, r3, #21
 4021 1f30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4022 1f32 3222     		movs	r2, #50
 4023 1f34 02FB03F3 		mul	r3, r2, r3
 4024 1f38 1A1D     		adds	r2, r3, #4
 4025 1f3a 07F5A253 		add	r3, r7, #5184
 4026 1f3e 03F11303 		add	r3, r3, #19
 4027 1f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4028 1f44 1A44     		add	r2, r2, r3
 4029 1f46 07F5A253 		add	r3, r7, #5184
 4030 1f4a 03F11703 		add	r3, r3, #23
 4031 1f4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4032 1f50 D31A     		subs	r3, r2, r3
 4033 1f52 5A1E     		subs	r2, r3, #1
 4034 1f54 07F5A253 		add	r3, r7, #5184
 4035 1f58 03F11703 		add	r3, r3, #23
 4036 1f5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4037 1f5e 07F13803 		add	r3, r7, #56
 4038 1f62 183B     		subs	r3, r3, #24
 4039 1f64 0B44     		add	r3, r3, r1
 4040 1f66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4041 1f68 07F15803 		add	r3, r7, #88
 4042 1f6c 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4043              		.loc 1 597 0 discriminator 3
 4044 1f6e 07F5A253 		add	r3, r7, #5184
 4045 1f72 03F11703 		add	r3, r3, #23
 4046 1f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 1f78 0133     		adds	r3, r3, #1
 4048 1f7a 07F5A252 		add	r2, r7, #5184
 4049 1f7e 02F11702 		add	r2, r2, #23
 4050 1f82 1370     		strb	r3, [r2]
 4051              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4052              		.loc 1 597 0 is_stmt 0 discriminator 1
 4053 1f84 07F5A253 		add	r3, r7, #5184
 4054 1f88 03F11703 		add	r3, r3, #23
 4055 1f8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4056 1f8e 07F5A253 		add	r3, r7, #5184
 4057 1f92 03F11303 		add	r3, r3, #19
 4058 1f96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4059 1f98 9A42     		cmp	r2, r3
 4060 1f9a C5D3     		bcc	.L174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 100


 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4061              		.loc 1 600 0 is_stmt 1
 4062 1f9c 07F5A253 		add	r3, r7, #5184
 4063 1fa0 03F10E03 		add	r3, r3, #14
 4064 1fa4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4065 1fa6 6149     		ldr	r1, .L270
 4066 1fa8 1346     		mov	r3, r2
 4067 1faa DB00     		lsls	r3, r3, #3
 4068 1fac 9B1A     		subs	r3, r3, r2
 4069 1fae 1B01     		lsls	r3, r3, #4
 4070 1fb0 0B44     		add	r3, r3, r1
 4071 1fb2 D833     		adds	r3, r3, #216
 4072 1fb4 1B68     		ldr	r3, [r3]
 4073 1fb6 1846     		mov	r0, r3
 4074 1fb8 FFF7FEFF 		bl	__aeabi_i2f
 4075 1fbc 0346     		mov	r3, r0
 4076 1fbe 4FF08F41 		mov	r1, #1199570944
 4077 1fc2 1846     		mov	r0, r3
 4078 1fc4 FFF7FEFF 		bl	__aeabi_fdiv
 4079 1fc8 0346     		mov	r3, r0
 4080 1fca 1A46     		mov	r2, r3
 4081 1fcc 07F13803 		add	r3, r7, #56
 4082 1fd0 183B     		subs	r3, r3, #24
 4083 1fd2 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4084              		.loc 1 601 0
 4085 1fd4 0023     		movs	r3, #0
 4086 1fd6 07F5A252 		add	r2, r7, #5184
 4087 1fda 02F11702 		add	r2, r2, #23
 4088 1fde 1370     		strb	r3, [r2]
 4089 1fe0 33E0     		b	.L175
 4090              	.L176:
 602:..\src/command_processing.c ****                             }
 4091              		.loc 1 602 0 discriminator 3
 4092 1fe2 07F5A253 		add	r3, r7, #5184
 4093 1fe6 03F11503 		add	r3, r3, #21
 4094 1fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095 1fec 3222     		movs	r2, #50
 4096 1fee 02FB03F3 		mul	r3, r2, r3
 4097 1ff2 1A1D     		adds	r2, r3, #4
 4098 1ff4 07F5A253 		add	r3, r7, #5184
 4099 1ff8 03F11303 		add	r3, r3, #19
 4100 1ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 1ffe 1A44     		add	r2, r2, r3
 4102 2000 07F5A253 		add	r3, r7, #5184
 4103 2004 03F11303 		add	r3, r3, #19
 4104 2008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4105 200a 1A44     		add	r2, r2, r3
 4106 200c 07F5A253 		add	r3, r7, #5184
 4107 2010 03F11703 		add	r3, r3, #23
 4108 2014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 2016 D31A     		subs	r3, r2, r3
 4110 2018 5A1E     		subs	r2, r3, #1
 4111 201a 07F5A253 		add	r3, r7, #5184
 4112 201e 03F11703 		add	r3, r3, #23
 4113 2022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4114 2024 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 101


 4115 2028 183B     		subs	r3, r3, #24
 4116 202a 0B44     		add	r3, r3, r1
 4117 202c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4118 202e 07F15803 		add	r3, r7, #88
 4119 2032 9954     		strb	r1, [r3, r2]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4120              		.loc 1 601 0 discriminator 3
 4121 2034 07F5A253 		add	r3, r7, #5184
 4122 2038 03F11703 		add	r3, r3, #23
 4123 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4124 203e 0133     		adds	r3, r3, #1
 4125 2040 07F5A252 		add	r2, r7, #5184
 4126 2044 02F11702 		add	r2, r2, #23
 4127 2048 1370     		strb	r3, [r2]
 4128              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4129              		.loc 1 601 0 is_stmt 0 discriminator 1
 4130 204a 07F5A253 		add	r3, r7, #5184
 4131 204e 03F11703 		add	r3, r3, #23
 4132 2052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4133 2054 07F5A253 		add	r3, r7, #5184
 4134 2058 03F11303 		add	r3, r3, #19
 4135 205c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4136 205e 9A42     		cmp	r2, r3
 4137 2060 BFD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4138              		.loc 1 604 0 is_stmt 1
 4139 2062 07F5A253 		add	r3, r7, #5184
 4140 2066 03F10E03 		add	r3, r3, #14
 4141 206a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4142 206c 2F49     		ldr	r1, .L270
 4143 206e 1346     		mov	r3, r2
 4144 2070 DB00     		lsls	r3, r3, #3
 4145 2072 9B1A     		subs	r3, r3, r2
 4146 2074 1B01     		lsls	r3, r3, #4
 4147 2076 0B44     		add	r3, r3, r1
 4148 2078 DC33     		adds	r3, r3, #220
 4149 207a 1B68     		ldr	r3, [r3]
 4150 207c 1846     		mov	r0, r3
 4151 207e FFF7FEFF 		bl	__aeabi_i2f
 4152 2082 0346     		mov	r3, r0
 4153 2084 4FF08F41 		mov	r1, #1199570944
 4154 2088 1846     		mov	r0, r3
 4155 208a FFF7FEFF 		bl	__aeabi_fdiv
 4156 208e 0346     		mov	r3, r0
 4157 2090 1A46     		mov	r2, r3
 4158 2092 07F13803 		add	r3, r7, #56
 4159 2096 183B     		subs	r3, r3, #24
 4160 2098 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4161              		.loc 1 605 0
 4162 209a 0023     		movs	r3, #0
 4163 209c 07F5A252 		add	r2, r7, #5184
 4164 20a0 02F11702 		add	r2, r2, #23
 4165 20a4 1370     		strb	r3, [r2]
 4166 20a6 34E0     		b	.L177
 4167              	.L178:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 102


 606:..\src/command_processing.c ****                             }
 4168              		.loc 1 606 0 discriminator 3
 4169 20a8 07F5A253 		add	r3, r7, #5184
 4170 20ac 03F11503 		add	r3, r3, #21
 4171 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4172 20b2 3222     		movs	r2, #50
 4173 20b4 02FB03F3 		mul	r3, r2, r3
 4174 20b8 1A1D     		adds	r2, r3, #4
 4175 20ba 07F5A253 		add	r3, r7, #5184
 4176 20be 03F11303 		add	r3, r3, #19
 4177 20c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4178 20c4 5B00     		lsls	r3, r3, #1
 4179 20c6 1A44     		add	r2, r2, r3
 4180 20c8 07F5A253 		add	r3, r7, #5184
 4181 20cc 03F11303 		add	r3, r3, #19
 4182 20d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4183 20d2 1A44     		add	r2, r2, r3
 4184 20d4 07F5A253 		add	r3, r7, #5184
 4185 20d8 03F11703 		add	r3, r3, #23
 4186 20dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 20de D31A     		subs	r3, r2, r3
 4188 20e0 5A1E     		subs	r2, r3, #1
 4189 20e2 07F5A253 		add	r3, r7, #5184
 4190 20e6 03F11703 		add	r3, r3, #23
 4191 20ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4192 20ec 07F13803 		add	r3, r7, #56
 4193 20f0 183B     		subs	r3, r3, #24
 4194 20f2 0B44     		add	r3, r3, r1
 4195 20f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4196 20f6 07F15803 		add	r3, r7, #88
 4197 20fa 9954     		strb	r1, [r3, r2]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4198              		.loc 1 605 0 discriminator 3
 4199 20fc 07F5A253 		add	r3, r7, #5184
 4200 2100 03F11703 		add	r3, r3, #23
 4201 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4202 2106 0133     		adds	r3, r3, #1
 4203 2108 07F5A252 		add	r2, r7, #5184
 4204 210c 02F11702 		add	r2, r2, #23
 4205 2110 1370     		strb	r3, [r2]
 4206              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4207              		.loc 1 605 0 is_stmt 0 discriminator 1
 4208 2112 07F5A253 		add	r3, r7, #5184
 4209 2116 03F11703 		add	r3, r3, #23
 4210 211a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4211 211c 07F5A253 		add	r3, r7, #5184
 4212 2120 03F11303 		add	r3, r3, #19
 4213 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4214 2126 9A42     		cmp	r2, r3
 4215 2128 BED3     		bcc	.L178
 4216              		.loc 1 609 0 is_stmt 1
 4217 212a 72E1     		b	.L103
 4218              	.L271:
 4219              		.align	2
 4220              	.L270:
 4221 212c 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 103


 4222              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4223              		.loc 1 612 0
 4224 2130 07F5A253 		add	r3, r7, #5184
 4225 2134 03F10E03 		add	r3, r3, #14
 4226 2138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4227 213a B349     		ldr	r1, .L272
 4228 213c 1346     		mov	r3, r2
 4229 213e DB00     		lsls	r3, r3, #3
 4230 2140 9B1A     		subs	r3, r3, r2
 4231 2142 1B01     		lsls	r3, r3, #4
 4232 2144 0B44     		add	r3, r3, r1
 4233 2146 03F58873 		add	r3, r3, #272
 4234 214a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4235 214c 1846     		mov	r0, r3
 4236 214e 07F5A253 		add	r3, r7, #5184
 4237 2152 03F11703 		add	r3, r3, #23
 4238 2156 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4239 2158 AC49     		ldr	r1, .L272+4
 4240 215a 0346     		mov	r3, r0
 4241 215c 5B00     		lsls	r3, r3, #1
 4242 215e 0344     		add	r3, r3, r0
 4243 2160 9B00     		lsls	r3, r3, #2
 4244 2162 1344     		add	r3, r3, r2
 4245 2164 6633     		adds	r3, r3, #102
 4246 2166 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4247 216a 07F5A253 		add	r3, r7, #5184
 4248 216e 03F10E03 		add	r3, r3, #14
 4249 2172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4250 2174 A448     		ldr	r0, .L272
 4251 2176 1346     		mov	r3, r2
 4252 2178 DB00     		lsls	r3, r3, #3
 4253 217a 9B1A     		subs	r3, r3, r2
 4254 217c 1B01     		lsls	r3, r3, #4
 4255 217e 0344     		add	r3, r3, r0
 4256 2180 03F58873 		add	r3, r3, #272
 4257 2184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4258 2186 1C46     		mov	r4, r3
 4259 2188 07F5A253 		add	r3, r7, #5184
 4260 218c 03F11703 		add	r3, r3, #23
 4261 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 2192 9E48     		ldr	r0, .L272+4
 4263 2194 2346     		mov	r3, r4
 4264 2196 5B00     		lsls	r3, r3, #1
 4265 2198 2344     		add	r3, r3, r4
 4266 219a 1B01     		lsls	r3, r3, #4
 4267 219c 0344     		add	r3, r3, r0
 4268 219e 1344     		add	r3, r3, r2
 4269 21a0 03F29513 		addw	r3, r3, #405
 4270 21a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 21a6 41FA03F3 		asr	r3, r1, r3
 4272 21aa 1AB2     		sxth	r2, r3
 4273 21ac 07F13803 		add	r3, r7, #56
 4274 21b0 1A3B     		subs	r3, r3, #26
 4275 21b2 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 104


 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4276              		.loc 1 613 0
 4277 21b4 0023     		movs	r3, #0
 4278 21b6 07F5A252 		add	r2, r7, #5184
 4279 21ba 02F11602 		add	r2, r2, #22
 4280 21be 1370     		strb	r3, [r2]
 4281 21c0 3AE0     		b	.L179
 4282              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4283              		.loc 1 614 0 discriminator 3
 4284 21c2 07F5A253 		add	r3, r7, #5184
 4285 21c6 03F11503 		add	r3, r3, #21
 4286 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4287 21cc 3222     		movs	r2, #50
 4288 21ce 02FB03F3 		mul	r3, r2, r3
 4289 21d2 1A1D     		adds	r2, r3, #4
 4290 21d4 07F5A253 		add	r3, r7, #5184
 4291 21d8 03F11703 		add	r3, r3, #23
 4292 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4293 21de 07F5A251 		add	r1, r7, #5184
 4294 21e2 01F11301 		add	r1, r1, #19
 4295 21e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4296 21e8 01FB03F3 		mul	r3, r1, r3
 4297 21ec 1A44     		add	r2, r2, r3
 4298 21ee 07F5A253 		add	r3, r7, #5184
 4299 21f2 03F11303 		add	r3, r3, #19
 4300 21f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4301 21f8 1A44     		add	r2, r2, r3
 4302 21fa 07F5A253 		add	r3, r7, #5184
 4303 21fe 03F11603 		add	r3, r3, #22
 4304 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4305 2204 D31A     		subs	r3, r2, r3
 4306 2206 5A1E     		subs	r2, r3, #1
 4307 2208 07F5A253 		add	r3, r7, #5184
 4308 220c 03F11603 		add	r3, r3, #22
 4309 2210 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4310 2212 07F13803 		add	r3, r7, #56
 4311 2216 1A3B     		subs	r3, r3, #26
 4312 2218 0B44     		add	r3, r3, r1
 4313 221a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4314 221c 07F15803 		add	r3, r7, #88
 4315 2220 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4316              		.loc 1 613 0 discriminator 3
 4317 2222 07F5A253 		add	r3, r7, #5184
 4318 2226 03F11603 		add	r3, r3, #22
 4319 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4320 222c 0133     		adds	r3, r3, #1
 4321 222e 07F5A252 		add	r2, r7, #5184
 4322 2232 02F11602 		add	r2, r2, #22
 4323 2236 1370     		strb	r3, [r2]
 4324              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4325              		.loc 1 613 0 is_stmt 0 discriminator 1
 4326 2238 07F5A253 		add	r3, r7, #5184
 4327 223c 03F11603 		add	r3, r3, #22
 4328 2240 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 105


 4329 2242 07F5A253 		add	r3, r7, #5184
 4330 2246 03F11303 		add	r3, r3, #19
 4331 224a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 224c 9A42     		cmp	r2, r3
 4333 224e B8D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 4334              		.loc 1 616 0 is_stmt 1
 4335 2250 DFE0     		b	.L103
 4336              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4337              		.loc 1 619 0
 4338 2252 07F5A253 		add	r3, r7, #5184
 4339 2256 03F10E03 		add	r3, r3, #14
 4340 225a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4341 225c 6B49     		ldr	r1, .L272+4
 4342 225e 1346     		mov	r3, r2
 4343 2260 DB00     		lsls	r3, r3, #3
 4344 2262 9B1A     		subs	r3, r3, r2
 4345 2264 1B01     		lsls	r3, r3, #4
 4346 2266 0B44     		add	r3, r3, r1
 4347 2268 E433     		adds	r3, r3, #228
 4348 226a 1968     		ldr	r1, [r3]
 4349 226c 07F5A253 		add	r3, r7, #5184
 4350 2270 03F10E03 		add	r3, r3, #14
 4351 2274 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4352 2276 6448     		ldr	r0, .L272
 4353 2278 1346     		mov	r3, r2
 4354 227a DB00     		lsls	r3, r3, #3
 4355 227c 9B1A     		subs	r3, r3, r2
 4356 227e 1B01     		lsls	r3, r3, #4
 4357 2280 0344     		add	r3, r3, r0
 4358 2282 03F58873 		add	r3, r3, #272
 4359 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4360 2288 1846     		mov	r0, r3
 4361 228a 604A     		ldr	r2, .L272+4
 4362 228c 0346     		mov	r3, r0
 4363 228e 5B00     		lsls	r3, r3, #1
 4364 2290 0344     		add	r3, r3, r0
 4365 2292 1B01     		lsls	r3, r3, #4
 4366 2294 1344     		add	r3, r3, r2
 4367 2296 03F29513 		addw	r3, r3, #405
 4368 229a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4369 229c 41FA03F2 		asr	r2, r1, r3
 4370 22a0 07F11803 		add	r3, r7, #24
 4371 22a4 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4372              		.loc 1 620 0
 4373 22a6 0023     		movs	r3, #0
 4374 22a8 07F5A252 		add	r2, r7, #5184
 4375 22ac 02F11602 		add	r2, r2, #22
 4376 22b0 1370     		strb	r3, [r2]
 4377 22b2 2CE0     		b	.L181
 4378              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 106


 4379              		.loc 1 621 0 discriminator 3
 4380 22b4 07F5A253 		add	r3, r7, #5184
 4381 22b8 03F11503 		add	r3, r3, #21
 4382 22bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4383 22be 3222     		movs	r2, #50
 4384 22c0 02FB03F3 		mul	r3, r2, r3
 4385 22c4 1A1D     		adds	r2, r3, #4
 4386 22c6 07F5A253 		add	r3, r7, #5184
 4387 22ca 03F11303 		add	r3, r3, #19
 4388 22ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4389 22d0 1A44     		add	r2, r2, r3
 4390 22d2 07F5A253 		add	r3, r7, #5184
 4391 22d6 03F11603 		add	r3, r3, #22
 4392 22da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4393 22dc D31A     		subs	r3, r2, r3
 4394 22de 013B     		subs	r3, r3, #1
 4395 22e0 07F5A252 		add	r2, r7, #5184
 4396 22e4 02F11602 		add	r2, r2, #22
 4397 22e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4398 22ea 07F11801 		add	r1, r7, #24
 4399 22ee 0A44     		add	r2, r2, r1
 4400 22f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4401 22f2 07F15802 		add	r2, r7, #88
 4402 22f6 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4403              		.loc 1 620 0 discriminator 3
 4404 22f8 07F5A253 		add	r3, r7, #5184
 4405 22fc 03F11603 		add	r3, r3, #22
 4406 2300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4407 2302 0133     		adds	r3, r3, #1
 4408 2304 07F5A252 		add	r2, r7, #5184
 4409 2308 02F11602 		add	r2, r2, #22
 4410 230c 1370     		strb	r3, [r2]
 4411              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4412              		.loc 1 620 0 is_stmt 0 discriminator 1
 4413 230e 07F5A253 		add	r3, r7, #5184
 4414 2312 03F11603 		add	r3, r3, #22
 4415 2316 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4416 2318 07F5A253 		add	r3, r7, #5184
 4417 231c 03F11303 		add	r3, r3, #19
 4418 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4419 2322 9A42     		cmp	r2, r3
 4420 2324 C6D3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4421              		.loc 1 623 0 is_stmt 1
 4422 2326 07F5A253 		add	r3, r7, #5184
 4423 232a 03F10E03 		add	r3, r3, #14
 4424 232e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4425 2330 3649     		ldr	r1, .L272+4
 4426 2332 1346     		mov	r3, r2
 4427 2334 DB00     		lsls	r3, r3, #3
 4428 2336 9B1A     		subs	r3, r3, r2
 4429 2338 1B01     		lsls	r3, r3, #4
 4430 233a 0B44     		add	r3, r3, r1
 4431 233c E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 107


 4432 233e 1968     		ldr	r1, [r3]
 4433 2340 07F5A253 		add	r3, r7, #5184
 4434 2344 03F10E03 		add	r3, r3, #14
 4435 2348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4436 234a 2F48     		ldr	r0, .L272
 4437 234c 1346     		mov	r3, r2
 4438 234e DB00     		lsls	r3, r3, #3
 4439 2350 9B1A     		subs	r3, r3, r2
 4440 2352 1B01     		lsls	r3, r3, #4
 4441 2354 0344     		add	r3, r3, r0
 4442 2356 03F58873 		add	r3, r3, #272
 4443 235a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4444 235c 1846     		mov	r0, r3
 4445 235e 2B4A     		ldr	r2, .L272+4
 4446 2360 0346     		mov	r3, r0
 4447 2362 5B00     		lsls	r3, r3, #1
 4448 2364 0344     		add	r3, r3, r0
 4449 2366 1B01     		lsls	r3, r3, #4
 4450 2368 1344     		add	r3, r3, r2
 4451 236a 03F29513 		addw	r3, r3, #405
 4452 236e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4453 2370 41FA03F2 		asr	r2, r1, r3
 4454 2374 07F11803 		add	r3, r7, #24
 4455 2378 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4456              		.loc 1 624 0
 4457 237a 0023     		movs	r3, #0
 4458 237c 07F5A252 		add	r2, r7, #5184
 4459 2380 02F11602 		add	r2, r2, #22
 4460 2384 1370     		strb	r3, [r2]
 4461 2386 32E0     		b	.L183
 4462              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4463              		.loc 1 625 0 discriminator 3
 4464 2388 07F5A253 		add	r3, r7, #5184
 4465 238c 03F11503 		add	r3, r3, #21
 4466 2390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4467 2392 3222     		movs	r2, #50
 4468 2394 02FB03F3 		mul	r3, r2, r3
 4469 2398 1A1D     		adds	r2, r3, #4
 4470 239a 07F5A253 		add	r3, r7, #5184
 4471 239e 03F11303 		add	r3, r3, #19
 4472 23a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 23a4 1A44     		add	r2, r2, r3
 4474 23a6 07F5A253 		add	r3, r7, #5184
 4475 23aa 03F11303 		add	r3, r3, #19
 4476 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4477 23b0 1A44     		add	r2, r2, r3
 4478 23b2 07F5A253 		add	r3, r7, #5184
 4479 23b6 03F11603 		add	r3, r3, #22
 4480 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4481 23bc D31A     		subs	r3, r2, r3
 4482 23be 013B     		subs	r3, r3, #1
 4483 23c0 07F5A252 		add	r2, r7, #5184
 4484 23c4 02F11602 		add	r2, r2, #22
 4485 23c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4486 23ca 07F11801 		add	r1, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 108


 4487 23ce 0A44     		add	r2, r2, r1
 4488 23d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4489 23d2 07F15802 		add	r2, r7, #88
 4490 23d6 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4491              		.loc 1 624 0 discriminator 3
 4492 23d8 07F5A253 		add	r3, r7, #5184
 4493 23dc 03F11603 		add	r3, r3, #22
 4494 23e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4495 23e2 0133     		adds	r3, r3, #1
 4496 23e4 07F5A252 		add	r2, r7, #5184
 4497 23e8 02F11602 		add	r2, r2, #22
 4498 23ec 1370     		strb	r3, [r2]
 4499              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4500              		.loc 1 624 0 is_stmt 0 discriminator 1
 4501 23ee 07F5A253 		add	r3, r7, #5184
 4502 23f2 03F11603 		add	r3, r3, #22
 4503 23f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4504 23f8 07F5A253 		add	r3, r7, #5184
 4505 23fc 03F11303 		add	r3, r3, #19
 4506 2400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4507 2402 9A42     		cmp	r2, r3
 4508 2404 C0D3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 4509              		.loc 1 627 0 is_stmt 1
 4510 2406 04E0     		b	.L103
 4511              	.L273:
 4512              		.align	2
 4513              	.L272:
 4514 2408 00000000 		.word	g_mem
 4515 240c 00000000 		.word	c_mem
 4516              	.L254:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 4517              		.loc 1 630 0
 4518 2410 00BF     		nop
 4519              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4520              		.loc 1 637 0
 4521 2412 07F5A253 		add	r3, r7, #5184
 4522 2416 03F11503 		add	r3, r3, #21
 4523 241a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4524 241c 9B00     		lsls	r3, r3, #2
 4525 241e 07F5A352 		add	r2, r7, #5216
 4526 2422 02F11402 		add	r2, r2, #20
 4527 2426 1268     		ldr	r2, [r2]
 4528 2428 1344     		add	r3, r3, r2
 4529 242a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 109


 4530 242c 07F13803 		add	r3, r7, #56
 4531 2430 143B     		subs	r3, r3, #20
 4532 2432 1146     		mov	r1, r2
 4533 2434 1846     		mov	r0, r3
 4534 2436 FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4535              		.loc 1 638 0
 4536 243a 07F13803 		add	r3, r7, #56
 4537 243e 143B     		subs	r3, r3, #20
 4538 2440 1846     		mov	r0, r3
 4539 2442 FFF7FEFF 		bl	strlen
 4540 2446 0346     		mov	r3, r0
 4541 2448 07F5A252 		add	r2, r7, #5184
 4542 244c 02F11202 		add	r2, r2, #18
 4543 2450 1370     		strb	r3, [r2]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4544              		.loc 1 641 0
 4545 2452 07F5A253 		add	r3, r7, #5184
 4546 2456 03F11503 		add	r3, r3, #21
 4547 245a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4548 245c 07F11803 		add	r3, r7, #24
 4549 2460 103B     		subs	r3, r3, #16
 4550 2462 1B68     		ldr	r3, [r3]
 4551 2464 1344     		add	r3, r3, r2
 4552 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 2468 002B     		cmp	r3, #0
 4554 246a 40F09783 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4555              		.loc 1 642 0
 4556 246e 07F5A253 		add	r3, r7, #5184
 4557 2472 03F11403 		add	r3, r3, #20
 4558 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4559 2478 07F5A352 		add	r2, r7, #5216
 4560 247c 02F11002 		add	r2, r2, #16
 4561 2480 1268     		ldr	r2, [r2]
 4562 2482 1344     		add	r3, r3, r2
 4563 2484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4564 2486 013B     		subs	r3, r3, #1
 4565 2488 092B     		cmp	r3, #9
 4566 248a 00F27983 		bhi	.L186
 4567 248e 01A2     		adr	r2, .L188
 4568 2490 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4569              		.p2align 2
 4570              	.L188:
 4571 2494 BD240000 		.word	.L187+1
 4572 2498 39260000 		.word	.L189+1
 4573 249c 0D270000 		.word	.L190+1
 4574 24a0 61270000 		.word	.L191+1
 4575 24a4 C5270000 		.word	.L192+1
 4576 24a8 21280000 		.word	.L193+1
 4577 24ac 3D290000 		.word	.L194+1
 4578 24b0 C5290000 		.word	.L195+1
 4579 24b4 592A0000 		.word	.L196+1
 4580 24b8 D12A0000 		.word	.L197+1
 4581              		.p2align 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 110


 4582              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 4583              		.loc 1 644 0
 4584 24bc 07F5A253 		add	r3, r7, #5184
 4585 24c0 03F10803 		add	r3, r3, #8
 4586 24c4 1B68     		ldr	r3, [r3]
 4587 24c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4588 24c8 062B     		cmp	r3, #6
 4589 24ca 00F25483 		bhi	.L255
 4590 24ce 01A2     		adr	r2, .L200
 4591 24d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4592              		.p2align 2
 4593              	.L200:
 4594 24d4 F1240000 		.word	.L199+1
 4595 24d8 15250000 		.word	.L201+1
 4596 24dc 3B250000 		.word	.L202+1
 4597 24e0 69250000 		.word	.L203+1
 4598 24e4 95250000 		.word	.L204+1
 4599 24e8 BF250000 		.word	.L205+1
 4600 24ec F3250000 		.word	.L206+1
 4601              		.p2align 1
 4602              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4603              		.loc 1 646 0
 4604 24f0 07F13803 		add	r3, r7, #56
 4605 24f4 143B     		subs	r3, r3, #20
 4606 24f6 1846     		mov	r0, r3
 4607 24f8 FFF7FEFF 		bl	strlen
 4608 24fc 0346     		mov	r3, r0
 4609 24fe 1A46     		mov	r2, r3
 4610 2500 07F13803 		add	r3, r7, #56
 4611 2504 143B     		subs	r3, r3, #20
 4612 2506 1344     		add	r3, r3, r2
 4613 2508 D84A     		ldr	r2, .L274
 4614 250a 1068     		ldr	r0, [r2]	@ unaligned
 4615 250c 1860     		str	r0, [r3]	@ unaligned
 4616 250e 1279     		ldrb	r2, [r2, #4]
 4617 2510 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 4618              		.loc 1 647 0
 4619 2512 90E0     		b	.L198
 4620              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4621              		.loc 1 649 0
 4622 2514 07F13803 		add	r3, r7, #56
 4623 2518 143B     		subs	r3, r3, #20
 4624 251a 1846     		mov	r0, r3
 4625 251c FFF7FEFF 		bl	strlen
 4626 2520 0346     		mov	r3, r0
 4627 2522 1A46     		mov	r2, r3
 4628 2524 07F13803 		add	r3, r7, #56
 4629 2528 143B     		subs	r3, r3, #20
 4630 252a 1344     		add	r3, r3, r2
 4631 252c D049     		ldr	r1, .L274+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 111


 4632 252e 1A46     		mov	r2, r3
 4633 2530 0B46     		mov	r3, r1
 4634 2532 03CB     		ldmia	r3!, {r0, r1}
 4635 2534 1060     		str	r0, [r2]	@ unaligned
 4636 2536 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 4637              		.loc 1 650 0
 4638 2538 7DE0     		b	.L198
 4639              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4640              		.loc 1 652 0
 4641 253a 07F13803 		add	r3, r7, #56
 4642 253e 143B     		subs	r3, r3, #20
 4643 2540 1846     		mov	r0, r3
 4644 2542 FFF7FEFF 		bl	strlen
 4645 2546 0346     		mov	r3, r0
 4646 2548 1A46     		mov	r2, r3
 4647 254a 07F13803 		add	r3, r7, #56
 4648 254e 143B     		subs	r3, r3, #20
 4649 2550 1344     		add	r3, r3, r2
 4650 2552 C84A     		ldr	r2, .L274+8
 4651 2554 1D46     		mov	r5, r3
 4652 2556 1446     		mov	r4, r2
 4653 2558 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4654 255a 2860     		str	r0, [r5]	@ unaligned
 4655 255c 6960     		str	r1, [r5, #4]	@ unaligned
 4656 255e AA60     		str	r2, [r5, #8]	@ unaligned
 4657 2560 EB60     		str	r3, [r5, #12]	@ unaligned
 4658 2562 2388     		ldrh	r3, [r4]	@ unaligned
 4659 2564 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 4660              		.loc 1 653 0
 4661 2566 66E0     		b	.L198
 4662              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4663              		.loc 1 655 0
 4664 2568 07F13803 		add	r3, r7, #56
 4665 256c 143B     		subs	r3, r3, #20
 4666 256e 1846     		mov	r0, r3
 4667 2570 FFF7FEFF 		bl	strlen
 4668 2574 0346     		mov	r3, r0
 4669 2576 1A46     		mov	r2, r3
 4670 2578 07F13803 		add	r3, r7, #56
 4671 257c 143B     		subs	r3, r3, #20
 4672 257e 1344     		add	r3, r3, r2
 4673 2580 BD4A     		ldr	r2, .L274+12
 4674 2582 1C46     		mov	r4, r3
 4675 2584 1346     		mov	r3, r2
 4676 2586 07CB     		ldmia	r3!, {r0, r1, r2}
 4677 2588 2060     		str	r0, [r4]	@ unaligned
 4678 258a 6160     		str	r1, [r4, #4]	@ unaligned
 4679 258c A260     		str	r2, [r4, #8]	@ unaligned
 4680 258e 1B88     		ldrh	r3, [r3]	@ unaligned
 4681 2590 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 112


 4682              		.loc 1 656 0
 4683 2592 50E0     		b	.L198
 4684              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4685              		.loc 1 658 0
 4686 2594 07F13803 		add	r3, r7, #56
 4687 2598 143B     		subs	r3, r3, #20
 4688 259a 1846     		mov	r0, r3
 4689 259c FFF7FEFF 		bl	strlen
 4690 25a0 0346     		mov	r3, r0
 4691 25a2 1A46     		mov	r2, r3
 4692 25a4 07F13803 		add	r3, r7, #56
 4693 25a8 143B     		subs	r3, r3, #20
 4694 25aa 1344     		add	r3, r3, r2
 4695 25ac B349     		ldr	r1, .L274+16
 4696 25ae 1A46     		mov	r2, r3
 4697 25b0 0B46     		mov	r3, r1
 4698 25b2 03CB     		ldmia	r3!, {r0, r1}
 4699 25b4 1060     		str	r0, [r2]	@ unaligned
 4700 25b6 5160     		str	r1, [r2, #4]	@ unaligned
 4701 25b8 1B88     		ldrh	r3, [r3]	@ unaligned
 4702 25ba 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4703              		.loc 1 659 0
 4704 25bc 3BE0     		b	.L198
 4705              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4706              		.loc 1 661 0
 4707 25be 07F13803 		add	r3, r7, #56
 4708 25c2 143B     		subs	r3, r3, #20
 4709 25c4 1846     		mov	r0, r3
 4710 25c6 FFF7FEFF 		bl	strlen
 4711 25ca 0346     		mov	r3, r0
 4712 25cc 1A46     		mov	r2, r3
 4713 25ce 07F13803 		add	r3, r7, #56
 4714 25d2 143B     		subs	r3, r3, #20
 4715 25d4 1344     		add	r3, r3, r2
 4716 25d6 AA4A     		ldr	r2, .L274+20
 4717 25d8 1D46     		mov	r5, r3
 4718 25da 1446     		mov	r4, r2
 4719 25dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4720 25de 2860     		str	r0, [r5]	@ unaligned
 4721 25e0 6960     		str	r1, [r5, #4]	@ unaligned
 4722 25e2 AA60     		str	r2, [r5, #8]	@ unaligned
 4723 25e4 EB60     		str	r3, [r5, #12]	@ unaligned
 4724 25e6 2388     		ldrh	r3, [r4]	@ unaligned
 4725 25e8 A278     		ldrb	r2, [r4, #2]
 4726 25ea 2B82     		strh	r3, [r5, #16]	@ unaligned
 4727 25ec 1346     		mov	r3, r2
 4728 25ee AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 4729              		.loc 1 662 0
 4730 25f0 21E0     		b	.L198
 4731              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 113


 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4732              		.loc 1 664 0
 4733 25f2 07F13803 		add	r3, r7, #56
 4734 25f6 143B     		subs	r3, r3, #20
 4735 25f8 1846     		mov	r0, r3
 4736 25fa FFF7FEFF 		bl	strlen
 4737 25fe 0346     		mov	r3, r0
 4738 2600 1A46     		mov	r2, r3
 4739 2602 07F13803 		add	r3, r7, #56
 4740 2606 143B     		subs	r3, r3, #20
 4741 2608 1344     		add	r3, r3, r2
 4742 260a 9E4A     		ldr	r2, .L274+24
 4743 260c 1446     		mov	r4, r2
 4744 260e 9E46     		mov	lr, r3
 4745 2610 04F1200C 		add	ip, r4, #32
 4746              	.L207:
 4747 2614 7546     		mov	r5, lr
 4748 2616 2646     		mov	r6, r4
 4749 2618 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4750 261a 2860     		str	r0, [r5]	@ unaligned
 4751 261c 6960     		str	r1, [r5, #4]	@ unaligned
 4752 261e AA60     		str	r2, [r5, #8]	@ unaligned
 4753 2620 EB60     		str	r3, [r5, #12]	@ unaligned
 4754 2622 1034     		adds	r4, r4, #16
 4755 2624 0EF1100E 		add	lr, lr, #16
 4756 2628 6445     		cmp	r4, ip
 4757 262a F3D1     		bne	.L207
 4758 262c 7246     		mov	r2, lr
 4759 262e 2346     		mov	r3, r4
 4760 2630 1B88     		ldrh	r3, [r3]	@ unaligned
 4761 2632 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4762              		.loc 1 665 0
 4763 2634 00BF     		nop
 4764              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 4765              		.loc 1 667 0
 4766 2636 9EE2     		b	.L255
 4767              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
 4768              		.loc 1 669 0
 4769 2638 07F5A253 		add	r3, r7, #5184
 4770 263c 03F10803 		add	r3, r3, #8
 4771 2640 1B68     		ldr	r3, [r3]
 4772 2642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4773 2644 032B     		cmp	r3, #3
 4774 2646 00F29882 		bhi	.L256
 4775 264a 01A2     		adr	r2, .L210
 4776 264c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4777              		.p2align 2
 4778              	.L210:
 4779 2650 61260000 		.word	.L209+1
 4780 2654 8B260000 		.word	.L211+1
 4781 2658 AF260000 		.word	.L212+1
 4782 265c D9260000 		.word	.L213+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 114


 4783              		.p2align 1
 4784              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4785              		.loc 1 671 0
 4786 2660 07F13803 		add	r3, r7, #56
 4787 2664 143B     		subs	r3, r3, #20
 4788 2666 1846     		mov	r0, r3
 4789 2668 FFF7FEFF 		bl	strlen
 4790 266c 0346     		mov	r3, r0
 4791 266e 1A46     		mov	r2, r3
 4792 2670 07F13803 		add	r3, r7, #56
 4793 2674 143B     		subs	r3, r3, #20
 4794 2676 1344     		add	r3, r3, r2
 4795 2678 8349     		ldr	r1, .L274+28
 4796 267a 1A46     		mov	r2, r3
 4797 267c 0B46     		mov	r3, r1
 4798 267e 03CB     		ldmia	r3!, {r0, r1}
 4799 2680 1060     		str	r0, [r2]	@ unaligned
 4800 2682 5160     		str	r1, [r2, #4]	@ unaligned
 4801 2684 1B88     		ldrh	r3, [r3]	@ unaligned
 4802 2686 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4803              		.loc 1 672 0
 4804 2688 3FE0     		b	.L208
 4805              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4806              		.loc 1 674 0
 4807 268a 07F13803 		add	r3, r7, #56
 4808 268e 143B     		subs	r3, r3, #20
 4809 2690 1846     		mov	r0, r3
 4810 2692 FFF7FEFF 		bl	strlen
 4811 2696 0346     		mov	r3, r0
 4812 2698 1A46     		mov	r2, r3
 4813 269a 07F13803 		add	r3, r7, #56
 4814 269e 143B     		subs	r3, r3, #20
 4815 26a0 1344     		add	r3, r3, r2
 4816 26a2 7A4A     		ldr	r2, .L274+32
 4817 26a4 1068     		ldr	r0, [r2]	@ unaligned
 4818 26a6 1860     		str	r0, [r3]	@ unaligned
 4819 26a8 1279     		ldrb	r2, [r2, #4]
 4820 26aa 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 4821              		.loc 1 675 0
 4822 26ac 2DE0     		b	.L208
 4823              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4824              		.loc 1 677 0
 4825 26ae 07F13803 		add	r3, r7, #56
 4826 26b2 143B     		subs	r3, r3, #20
 4827 26b4 1846     		mov	r0, r3
 4828 26b6 FFF7FEFF 		bl	strlen
 4829 26ba 0346     		mov	r3, r0
 4830 26bc 1A46     		mov	r2, r3
 4831 26be 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 115


 4832 26c2 143B     		subs	r3, r3, #20
 4833 26c4 1344     		add	r3, r3, r2
 4834 26c6 7249     		ldr	r1, .L274+36
 4835 26c8 1A46     		mov	r2, r3
 4836 26ca 0B46     		mov	r3, r1
 4837 26cc 03CB     		ldmia	r3!, {r0, r1}
 4838 26ce 1060     		str	r0, [r2]	@ unaligned
 4839 26d0 5160     		str	r1, [r2, #4]	@ unaligned
 4840 26d2 1B78     		ldrb	r3, [r3]
 4841 26d4 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 4842              		.loc 1 678 0
 4843 26d6 18E0     		b	.L208
 4844              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4845              		.loc 1 680 0
 4846 26d8 07F13803 		add	r3, r7, #56
 4847 26dc 143B     		subs	r3, r3, #20
 4848 26de 1846     		mov	r0, r3
 4849 26e0 FFF7FEFF 		bl	strlen
 4850 26e4 0346     		mov	r3, r0
 4851 26e6 1A46     		mov	r2, r3
 4852 26e8 07F13803 		add	r3, r7, #56
 4853 26ec 143B     		subs	r3, r3, #20
 4854 26ee 1344     		add	r3, r3, r2
 4855 26f0 684A     		ldr	r2, .L274+40
 4856 26f2 1D46     		mov	r5, r3
 4857 26f4 1446     		mov	r4, r2
 4858 26f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4859 26f8 2860     		str	r0, [r5]	@ unaligned
 4860 26fa 6960     		str	r1, [r5, #4]	@ unaligned
 4861 26fc AA60     		str	r2, [r5, #8]	@ unaligned
 4862 26fe EB60     		str	r3, [r5, #12]	@ unaligned
 4863 2700 2068     		ldr	r0, [r4]	@ unaligned
 4864 2702 2861     		str	r0, [r5, #16]	@ unaligned
 4865 2704 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4866 2706 AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4867              		.loc 1 681 0
 4868 2708 00BF     		nop
 4869              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 4870              		.loc 1 683 0
 4871 270a 36E2     		b	.L256
 4872              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 4873              		.loc 1 685 0
 4874 270c 07F5A253 		add	r3, r7, #5184
 4875 2710 03F10803 		add	r3, r3, #8
 4876 2714 1B68     		ldr	r3, [r3]
 4877 2716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4878 2718 002B     		cmp	r3, #0
 4879 271a 11D0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 116


 4880              		.loc 1 686 0
 4881 271c 07F13803 		add	r3, r7, #56
 4882 2720 143B     		subs	r3, r3, #20
 4883 2722 1846     		mov	r0, r3
 4884 2724 FFF7FEFF 		bl	strlen
 4885 2728 0346     		mov	r3, r0
 4886 272a 1A46     		mov	r2, r3
 4887 272c 07F13803 		add	r3, r7, #56
 4888 2730 143B     		subs	r3, r3, #20
 4889 2732 1344     		add	r3, r3, r2
 4890 2734 584A     		ldr	r2, .L274+44
 4891 2736 1068     		ldr	r0, [r2]	@ unaligned
 4892 2738 1860     		str	r0, [r3]	@ unaligned
 4893 273a 1279     		ldrb	r2, [r2, #4]
 4894 273c 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 4895              		.loc 1 691 0
 4896 273e 1FE2     		b	.L186
 4897              	.L214:
 689:..\src/command_processing.c ****                     }
 4898              		.loc 1 689 0
 4899 2740 07F13803 		add	r3, r7, #56
 4900 2744 143B     		subs	r3, r3, #20
 4901 2746 1846     		mov	r0, r3
 4902 2748 FFF7FEFF 		bl	strlen
 4903 274c 0346     		mov	r3, r0
 4904 274e 1A46     		mov	r2, r3
 4905 2750 07F13803 		add	r3, r7, #56
 4906 2754 143B     		subs	r3, r3, #20
 4907 2756 1344     		add	r3, r3, r2
 4908 2758 504A     		ldr	r2, .L274+48
 4909 275a 1068     		ldr	r0, [r2]	@ unaligned
 4910 275c 1860     		str	r0, [r3]	@ unaligned
 4911              		.loc 1 691 0
 4912 275e 0FE2     		b	.L186
 4913              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4914              		.loc 1 693 0
 4915 2760 07F5A253 		add	r3, r7, #5184
 4916 2764 03F10803 		add	r3, r3, #8
 4917 2768 1B68     		ldr	r3, [r3]
 4918 276a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4919 276c 002B     		cmp	r3, #0
 4920 276e 02D0     		beq	.L217
 4921 2770 012B     		cmp	r3, #1
 4922 2772 14D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 117


 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 4923              		.loc 1 701 0
 4924 2774 04E2     		b	.L186
 4925              	.L217:
 695:..\src/command_processing.c ****                         break;
 4926              		.loc 1 695 0
 4927 2776 07F13803 		add	r3, r7, #56
 4928 277a 143B     		subs	r3, r3, #20
 4929 277c 1846     		mov	r0, r3
 4930 277e FFF7FEFF 		bl	strlen
 4931 2782 0346     		mov	r3, r0
 4932 2784 1A46     		mov	r2, r3
 4933 2786 07F13803 		add	r3, r7, #56
 4934 278a 143B     		subs	r3, r3, #20
 4935 278c 1344     		add	r3, r3, r2
 4936 278e 444A     		ldr	r2, .L274+52
 4937 2790 1068     		ldr	r0, [r2]	@ unaligned
 4938 2792 1860     		str	r0, [r3]	@ unaligned
 4939 2794 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4940 2796 9279     		ldrb	r2, [r2, #6]
 4941 2798 9980     		strh	r1, [r3, #4]	@ unaligned
 4942 279a 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 4943              		.loc 1 696 0
 4944 279c 11E0     		b	.L216
 4945              	.L218:
 698:..\src/command_processing.c ****                         break;
 4946              		.loc 1 698 0
 4947 279e 07F13803 		add	r3, r7, #56
 4948 27a2 143B     		subs	r3, r3, #20
 4949 27a4 1846     		mov	r0, r3
 4950 27a6 FFF7FEFF 		bl	strlen
 4951 27aa 0346     		mov	r3, r0
 4952 27ac 1A46     		mov	r2, r3
 4953 27ae 07F13803 		add	r3, r7, #56
 4954 27b2 143B     		subs	r3, r3, #20
 4955 27b4 1344     		add	r3, r3, r2
 4956 27b6 3B4A     		ldr	r2, .L274+56
 4957 27b8 1068     		ldr	r0, [r2]	@ unaligned
 4958 27ba 1860     		str	r0, [r3]	@ unaligned
 4959 27bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4960 27be 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 4961              		.loc 1 699 0
 4962 27c0 00BF     		nop
 4963              	.L216:
 4964              		.loc 1 701 0
 4965 27c2 DDE1     		b	.L186
 4966              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 4967              		.loc 1 703 0
 4968 27c4 07F5A253 		add	r3, r7, #5184
 4969 27c8 03F10803 		add	r3, r3, #8
 4970 27cc 1B68     		ldr	r3, [r3]
 4971 27ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 118


 4972 27d0 002B     		cmp	r3, #0
 4973 27d2 02D0     		beq	.L220
 4974 27d4 012B     		cmp	r3, #1
 4975 27d6 12D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 4976              		.loc 1 711 0
 4977 27d8 D2E1     		b	.L186
 4978              	.L220:
 705:..\src/command_processing.c ****                         break;
 4979              		.loc 1 705 0
 4980 27da 07F13803 		add	r3, r7, #56
 4981 27de 143B     		subs	r3, r3, #20
 4982 27e0 1846     		mov	r0, r3
 4983 27e2 FFF7FEFF 		bl	strlen
 4984 27e6 0346     		mov	r3, r0
 4985 27e8 1A46     		mov	r2, r3
 4986 27ea 07F13803 		add	r3, r7, #56
 4987 27ee 143B     		subs	r3, r3, #20
 4988 27f0 1344     		add	r3, r3, r2
 4989 27f2 2D4A     		ldr	r2, .L274+60
 4990 27f4 1068     		ldr	r0, [r2]	@ unaligned
 4991 27f6 1860     		str	r0, [r3]	@ unaligned
 4992 27f8 1279     		ldrb	r2, [r2, #4]
 4993 27fa 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 4994              		.loc 1 706 0
 4995 27fc 0FE0     		b	.L219
 4996              	.L221:
 708:..\src/command_processing.c ****                         break;
 4997              		.loc 1 708 0
 4998 27fe 07F13803 		add	r3, r7, #56
 4999 2802 143B     		subs	r3, r3, #20
 5000 2804 1846     		mov	r0, r3
 5001 2806 FFF7FEFF 		bl	strlen
 5002 280a 0346     		mov	r3, r0
 5003 280c 1A46     		mov	r2, r3
 5004 280e 07F13803 		add	r3, r7, #56
 5005 2812 143B     		subs	r3, r3, #20
 5006 2814 1344     		add	r3, r3, r2
 5007 2816 254A     		ldr	r2, .L274+64
 5008 2818 1068     		ldr	r0, [r2]	@ unaligned
 5009 281a 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 5010              		.loc 1 709 0
 5011 281c 00BF     		nop
 5012              	.L219:
 5013              		.loc 1 711 0
 5014 281e AFE1     		b	.L186
 5015              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 119


 713:..\src/command_processing.c ****                     switch(*m_addr){
 5016              		.loc 1 713 0
 5017 2820 07F5A253 		add	r3, r7, #5184
 5018 2824 03F10803 		add	r3, r3, #8
 5019 2828 1B68     		ldr	r3, [r3]
 5020 282a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5021 282c 032B     		cmp	r3, #3
 5022 282e 00F2A681 		bhi	.L257
 5023 2832 01A2     		adr	r2, .L224
 5024 2834 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5025              		.p2align 2
 5026              	.L224:
 5027 2838 49280000 		.word	.L223+1
 5028 283c B5280000 		.word	.L225+1
 5029 2840 E1280000 		.word	.L226+1
 5030 2844 0F290000 		.word	.L227+1
 5031              		.p2align 1
 5032              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5033              		.loc 1 715 0
 5034 2848 07F13803 		add	r3, r7, #56
 5035 284c 143B     		subs	r3, r3, #20
 5036 284e 1846     		mov	r0, r3
 5037 2850 FFF7FEFF 		bl	strlen
 5038 2854 0346     		mov	r3, r0
 5039 2856 1A46     		mov	r2, r3
 5040 2858 07F13803 		add	r3, r7, #56
 5041 285c 143B     		subs	r3, r3, #20
 5042 285e 1344     		add	r3, r3, r2
 5043 2860 134A     		ldr	r2, .L274+68
 5044 2862 1068     		ldr	r0, [r2]	@ unaligned
 5045 2864 1860     		str	r0, [r3]	@ unaligned
 5046 2866 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5047 2868 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 5048              		.loc 1 716 0
 5049 286a 66E0     		b	.L222
 5050              	.L275:
 5051              		.align	2
 5052              	.L274:
 5053 286c 00000000 		.word	.LC81
 5054 2870 08000000 		.word	.LC82
 5055 2874 10000000 		.word	.LC83
 5056 2878 24000000 		.word	.LC84
 5057 287c 34000000 		.word	.LC85
 5058 2880 40000000 		.word	.LC86
 5059 2884 54000000 		.word	.LC87
 5060 2888 78000000 		.word	.LC88
 5061 288c 84000000 		.word	.LC89
 5062 2890 8C000000 		.word	.LC90
 5063 2894 98000000 		.word	.LC91
 5064 2898 B0000000 		.word	.LC92
 5065 289c B8000000 		.word	.LC93
 5066 28a0 C0000000 		.word	.LC94
 5067 28a4 C8000000 		.word	.LC95
 5068 28a8 D0000000 		.word	.LC96
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 120


 5069 28ac D8000000 		.word	.LC97
 5070 28b0 E0000000 		.word	.LC98
 5071              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5072              		.loc 1 718 0
 5073 28b4 07F13803 		add	r3, r7, #56
 5074 28b8 143B     		subs	r3, r3, #20
 5075 28ba 1846     		mov	r0, r3
 5076 28bc FFF7FEFF 		bl	strlen
 5077 28c0 0346     		mov	r3, r0
 5078 28c2 1A46     		mov	r2, r3
 5079 28c4 07F13803 		add	r3, r7, #56
 5080 28c8 143B     		subs	r3, r3, #20
 5081 28ca 1344     		add	r3, r3, r2
 5082 28cc B94A     		ldr	r2, .L276
 5083 28ce 1C46     		mov	r4, r3
 5084 28d0 1346     		mov	r3, r2
 5085 28d2 07CB     		ldmia	r3!, {r0, r1, r2}
 5086 28d4 2060     		str	r0, [r4]	@ unaligned
 5087 28d6 6160     		str	r1, [r4, #4]	@ unaligned
 5088 28d8 A260     		str	r2, [r4, #8]	@ unaligned
 5089 28da 1B88     		ldrh	r3, [r3]	@ unaligned
 5090 28dc A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 5091              		.loc 1 719 0
 5092 28de 2CE0     		b	.L222
 5093              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5094              		.loc 1 721 0
 5095 28e0 07F13803 		add	r3, r7, #56
 5096 28e4 143B     		subs	r3, r3, #20
 5097 28e6 1846     		mov	r0, r3
 5098 28e8 FFF7FEFF 		bl	strlen
 5099 28ec 0346     		mov	r3, r0
 5100 28ee 1A46     		mov	r2, r3
 5101 28f0 07F13803 		add	r3, r7, #56
 5102 28f4 143B     		subs	r3, r3, #20
 5103 28f6 1344     		add	r3, r3, r2
 5104 28f8 AF4A     		ldr	r2, .L276+4
 5105 28fa 1D46     		mov	r5, r3
 5106 28fc 1446     		mov	r4, r2
 5107 28fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5108 2900 2860     		str	r0, [r5]	@ unaligned
 5109 2902 6960     		str	r1, [r5, #4]	@ unaligned
 5110 2904 AA60     		str	r2, [r5, #8]	@ unaligned
 5111 2906 EB60     		str	r3, [r5, #12]	@ unaligned
 5112 2908 2388     		ldrh	r3, [r4]	@ unaligned
 5113 290a 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 5114              		.loc 1 722 0
 5115 290c 15E0     		b	.L222
 5116              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5117              		.loc 1 724 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 121


 5118 290e 07F13803 		add	r3, r7, #56
 5119 2912 143B     		subs	r3, r3, #20
 5120 2914 1846     		mov	r0, r3
 5121 2916 FFF7FEFF 		bl	strlen
 5122 291a 0346     		mov	r3, r0
 5123 291c 1A46     		mov	r2, r3
 5124 291e 07F13803 		add	r3, r7, #56
 5125 2922 143B     		subs	r3, r3, #20
 5126 2924 1344     		add	r3, r3, r2
 5127 2926 A54A     		ldr	r2, .L276+8
 5128 2928 1C46     		mov	r4, r3
 5129 292a 1346     		mov	r3, r2
 5130 292c 07CB     		ldmia	r3!, {r0, r1, r2}
 5131 292e 2060     		str	r0, [r4]	@ unaligned
 5132 2930 6160     		str	r1, [r4, #4]	@ unaligned
 5133 2932 A260     		str	r2, [r4, #8]	@ unaligned
 5134 2934 1B78     		ldrb	r3, [r3]
 5135 2936 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 5136              		.loc 1 725 0
 5137 2938 00BF     		nop
 5138              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 5139              		.loc 1 727 0
 5140 293a 20E1     		b	.L257
 5141              	.L194:
 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 5142              		.loc 1 729 0
 5143 293c 07F5A253 		add	r3, r7, #5184
 5144 2940 03F10803 		add	r3, r3, #8
 5145 2944 1B68     		ldr	r3, [r3]
 5146 2946 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5147 2948 012B     		cmp	r3, #1
 5148 294a 16D0     		beq	.L229
 5149 294c 022B     		cmp	r3, #2
 5150 294e 26D0     		beq	.L230
 5151 2950 002B     		cmp	r3, #0
 5152 2952 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 5153              		.loc 1 740 0
 5154 2954 35E0     		b	.L232
 5155              	.L231:
 731:..\src/command_processing.c ****                             break;
 5156              		.loc 1 731 0
 5157 2956 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 122


 5158 295a 143B     		subs	r3, r3, #20
 5159 295c 1846     		mov	r0, r3
 5160 295e FFF7FEFF 		bl	strlen
 5161 2962 0346     		mov	r3, r0
 5162 2964 1A46     		mov	r2, r3
 5163 2966 07F13803 		add	r3, r7, #56
 5164 296a 143B     		subs	r3, r3, #20
 5165 296c 1344     		add	r3, r3, r2
 5166 296e 944A     		ldr	r2, .L276+12
 5167 2970 1068     		ldr	r0, [r2]	@ unaligned
 5168 2972 1860     		str	r0, [r3]	@ unaligned
 5169 2974 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5170 2976 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 5171              		.loc 1 732 0
 5172 2978 23E0     		b	.L232
 5173              	.L229:
 734:..\src/command_processing.c ****                             break;
 5174              		.loc 1 734 0
 5175 297a 07F13803 		add	r3, r7, #56
 5176 297e 143B     		subs	r3, r3, #20
 5177 2980 1846     		mov	r0, r3
 5178 2982 FFF7FEFF 		bl	strlen
 5179 2986 0346     		mov	r3, r0
 5180 2988 1A46     		mov	r2, r3
 5181 298a 07F13803 		add	r3, r7, #56
 5182 298e 143B     		subs	r3, r3, #20
 5183 2990 1344     		add	r3, r3, r2
 5184 2992 8C4A     		ldr	r2, .L276+16
 5185 2994 1068     		ldr	r0, [r2]	@ unaligned
 5186 2996 1860     		str	r0, [r3]	@ unaligned
 5187 2998 1279     		ldrb	r2, [r2, #4]
 5188 299a 1A71     		strb	r2, [r3, #4]
 735:..\src/command_processing.c ****                         case 2: 
 5189              		.loc 1 735 0
 5190 299c 11E0     		b	.L232
 5191              	.L230:
 737:..\src/command_processing.c ****                             break;
 5192              		.loc 1 737 0
 5193 299e 07F13803 		add	r3, r7, #56
 5194 29a2 143B     		subs	r3, r3, #20
 5195 29a4 1846     		mov	r0, r3
 5196 29a6 FFF7FEFF 		bl	strlen
 5197 29aa 0346     		mov	r3, r0
 5198 29ac 1A46     		mov	r2, r3
 5199 29ae 07F13803 		add	r3, r7, #56
 5200 29b2 143B     		subs	r3, r3, #20
 5201 29b4 1344     		add	r3, r3, r2
 5202 29b6 844A     		ldr	r2, .L276+20
 5203 29b8 1068     		ldr	r0, [r2]	@ unaligned
 5204 29ba 1860     		str	r0, [r3]	@ unaligned
 5205 29bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5206 29be 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 5207              		.loc 1 738 0
 5208 29c0 00BF     		nop
 5209              	.L232:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 123


 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 5210              		.loc 1 742 0 discriminator 12
 5211 29c2 DDE0     		b	.L186
 5212              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5213              		.loc 1 744 0
 5214 29c4 07F5A253 		add	r3, r7, #5184
 5215 29c8 03F10803 		add	r3, r3, #8
 5216 29cc 1B68     		ldr	r3, [r3]
 5217 29ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5218 29d0 012B     		cmp	r3, #1
 5219 29d2 1AD0     		beq	.L234
 5220 29d4 022B     		cmp	r3, #2
 5221 29d6 2CD0     		beq	.L235
 5222 29d8 002B     		cmp	r3, #0
 5223 29da 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 5224              		.loc 1 755 0
 5225 29dc D0E0     		b	.L186
 5226              	.L236:
 746:..\src/command_processing.c ****                         break;
 5227              		.loc 1 746 0
 5228 29de 07F13803 		add	r3, r7, #56
 5229 29e2 143B     		subs	r3, r3, #20
 5230 29e4 1846     		mov	r0, r3
 5231 29e6 FFF7FEFF 		bl	strlen
 5232 29ea 0346     		mov	r3, r0
 5233 29ec 1A46     		mov	r2, r3
 5234 29ee 07F13803 		add	r3, r7, #56
 5235 29f2 143B     		subs	r3, r3, #20
 5236 29f4 1344     		add	r3, r3, r2
 5237 29f6 754A     		ldr	r2, .L276+24
 5238 29f8 1C46     		mov	r4, r3
 5239 29fa 1346     		mov	r3, r2
 5240 29fc 07CB     		ldmia	r3!, {r0, r1, r2}
 5241 29fe 2060     		str	r0, [r4]	@ unaligned
 5242 2a00 6160     		str	r1, [r4, #4]	@ unaligned
 5243 2a02 A260     		str	r2, [r4, #8]	@ unaligned
 5244 2a04 1B88     		ldrh	r3, [r3]	@ unaligned
 5245 2a06 A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 5246              		.loc 1 747 0
 5247 2a08 25E0     		b	.L233
 5248              	.L234:
 749:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 124


 5249              		.loc 1 749 0
 5250 2a0a 07F13803 		add	r3, r7, #56
 5251 2a0e 143B     		subs	r3, r3, #20
 5252 2a10 1846     		mov	r0, r3
 5253 2a12 FFF7FEFF 		bl	strlen
 5254 2a16 0346     		mov	r3, r0
 5255 2a18 1A46     		mov	r2, r3
 5256 2a1a 07F13803 		add	r3, r7, #56
 5257 2a1e 143B     		subs	r3, r3, #20
 5258 2a20 1344     		add	r3, r3, r2
 5259 2a22 6B4A     		ldr	r2, .L276+28
 5260 2a24 1068     		ldr	r0, [r2]	@ unaligned
 5261 2a26 1860     		str	r0, [r3]	@ unaligned
 5262 2a28 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5263 2a2a 9279     		ldrb	r2, [r2, #6]
 5264 2a2c 9980     		strh	r1, [r3, #4]	@ unaligned
 5265 2a2e 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 5266              		.loc 1 750 0
 5267 2a30 11E0     		b	.L233
 5268              	.L235:
 752:..\src/command_processing.c ****                         break;
 5269              		.loc 1 752 0
 5270 2a32 07F13803 		add	r3, r7, #56
 5271 2a36 143B     		subs	r3, r3, #20
 5272 2a38 1846     		mov	r0, r3
 5273 2a3a FFF7FEFF 		bl	strlen
 5274 2a3e 0346     		mov	r3, r0
 5275 2a40 1A46     		mov	r2, r3
 5276 2a42 07F13803 		add	r3, r7, #56
 5277 2a46 143B     		subs	r3, r3, #20
 5278 2a48 1344     		add	r3, r3, r2
 5279 2a4a 624A     		ldr	r2, .L276+32
 5280 2a4c 1068     		ldr	r0, [r2]	@ unaligned
 5281 2a4e 1860     		str	r0, [r3]	@ unaligned
 5282 2a50 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5283 2a52 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                     }   
 5284              		.loc 1 753 0
 5285 2a54 00BF     		nop
 5286              	.L233:
 5287              		.loc 1 755 0
 5288 2a56 93E0     		b	.L186
 5289              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 5290              		.loc 1 757 0
 5291 2a58 07F5A253 		add	r3, r7, #5184
 5292 2a5c 03F10803 		add	r3, r3, #8
 5293 2a60 1B68     		ldr	r3, [r3]
 5294 2a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5295 2a64 002B     		cmp	r3, #0
 5296 2a66 02D0     		beq	.L238
 5297 2a68 012B     		cmp	r3, #1
 5298 2a6a 17D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 125


 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
 5299              		.loc 1 765 0
 5300 2a6c 88E0     		b	.L186
 5301              	.L238:
 759:..\src/command_processing.c ****                         break;
 5302              		.loc 1 759 0
 5303 2a6e 07F13803 		add	r3, r7, #56
 5304 2a72 143B     		subs	r3, r3, #20
 5305 2a74 1846     		mov	r0, r3
 5306 2a76 FFF7FEFF 		bl	strlen
 5307 2a7a 0346     		mov	r3, r0
 5308 2a7c 1A46     		mov	r2, r3
 5309 2a7e 07F13803 		add	r3, r7, #56
 5310 2a82 143B     		subs	r3, r3, #20
 5311 2a84 1344     		add	r3, r3, r2
 5312 2a86 544A     		ldr	r2, .L276+36
 5313 2a88 1D46     		mov	r5, r3
 5314 2a8a 1446     		mov	r4, r2
 5315 2a8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5316 2a8e 2860     		str	r0, [r5]	@ unaligned
 5317 2a90 6960     		str	r1, [r5, #4]	@ unaligned
 5318 2a92 AA60     		str	r2, [r5, #8]	@ unaligned
 5319 2a94 EB60     		str	r3, [r5, #12]	@ unaligned
 5320 2a96 2068     		ldr	r0, [r4]	@ unaligned
 5321 2a98 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 5322              		.loc 1 760 0
 5323 2a9a 18E0     		b	.L237
 5324              	.L239:
 762:..\src/command_processing.c ****                         break;
 5325              		.loc 1 762 0
 5326 2a9c 07F13803 		add	r3, r7, #56
 5327 2aa0 143B     		subs	r3, r3, #20
 5328 2aa2 1846     		mov	r0, r3
 5329 2aa4 FFF7FEFF 		bl	strlen
 5330 2aa8 0346     		mov	r3, r0
 5331 2aaa 1A46     		mov	r2, r3
 5332 2aac 07F13803 		add	r3, r7, #56
 5333 2ab0 143B     		subs	r3, r3, #20
 5334 2ab2 1344     		add	r3, r3, r2
 5335 2ab4 494A     		ldr	r2, .L276+40
 5336 2ab6 1D46     		mov	r5, r3
 5337 2ab8 1446     		mov	r4, r2
 5338 2aba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5339 2abc 2860     		str	r0, [r5]	@ unaligned
 5340 2abe 6960     		str	r1, [r5, #4]	@ unaligned
 5341 2ac0 AA60     		str	r2, [r5, #8]	@ unaligned
 5342 2ac2 EB60     		str	r3, [r5, #12]	@ unaligned
 5343 2ac4 2068     		ldr	r0, [r4]	@ unaligned
 5344 2ac6 2861     		str	r0, [r5, #16]	@ unaligned
 5345 2ac8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5346 2aca AB82     		strh	r3, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 126


 763:..\src/command_processing.c ****                     }
 5347              		.loc 1 763 0
 5348 2acc 00BF     		nop
 5349              	.L237:
 5350              		.loc 1 765 0
 5351 2ace 57E0     		b	.L186
 5352              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 5353              		.loc 1 767 0
 5354 2ad0 07F5A253 		add	r3, r7, #5184
 5355 2ad4 03F10803 		add	r3, r3, #8
 5356 2ad8 1B68     		ldr	r3, [r3]
 5357 2ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5358 2adc 012B     		cmp	r3, #1
 5359 2ade 1AD0     		beq	.L241
 5360 2ae0 022B     		cmp	r3, #2
 5361 2ae2 2FD0     		beq	.L242
 5362 2ae4 002B     		cmp	r3, #0
 5363 2ae6 00D0     		beq	.L243
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                         case 2:
 775:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS \0");
 776:..\src/command_processing.c ****                     }
 777:..\src/command_processing.c ****                     break;
 5364              		.loc 1 777 0
 5365 2ae8 4AE0     		b	.L186
 5366              	.L243:
 769:..\src/command_processing.c ****                         break;
 5367              		.loc 1 769 0
 5368 2aea 07F13803 		add	r3, r7, #56
 5369 2aee 143B     		subs	r3, r3, #20
 5370 2af0 1846     		mov	r0, r3
 5371 2af2 FFF7FEFF 		bl	strlen
 5372 2af6 0346     		mov	r3, r0
 5373 2af8 1A46     		mov	r2, r3
 5374 2afa 07F13803 		add	r3, r7, #56
 5375 2afe 143B     		subs	r3, r3, #20
 5376 2b00 1344     		add	r3, r3, r2
 5377 2b02 374A     		ldr	r2, .L276+44
 5378 2b04 1C46     		mov	r4, r3
 5379 2b06 1346     		mov	r3, r2
 5380 2b08 07CB     		ldmia	r3!, {r0, r1, r2}
 5381 2b0a 2060     		str	r0, [r4]	@ unaligned
 5382 2b0c 6160     		str	r1, [r4, #4]	@ unaligned
 5383 2b0e A260     		str	r2, [r4, #8]	@ unaligned
 5384 2b10 1B88     		ldrh	r3, [r3]	@ unaligned
 5385 2b12 A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 5386              		.loc 1 770 0
 5387 2b14 2EE0     		b	.L240
 5388              	.L241:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 127


 772:..\src/command_processing.c ****                         break;
 5389              		.loc 1 772 0
 5390 2b16 07F13803 		add	r3, r7, #56
 5391 2b1a 143B     		subs	r3, r3, #20
 5392 2b1c 1846     		mov	r0, r3
 5393 2b1e FFF7FEFF 		bl	strlen
 5394 2b22 0346     		mov	r3, r0
 5395 2b24 1A46     		mov	r2, r3
 5396 2b26 07F13803 		add	r3, r7, #56
 5397 2b2a 143B     		subs	r3, r3, #20
 5398 2b2c 1344     		add	r3, r3, r2
 5399 2b2e 2D4A     		ldr	r2, .L276+48
 5400 2b30 1D46     		mov	r5, r3
 5401 2b32 1446     		mov	r4, r2
 5402 2b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5403 2b36 2860     		str	r0, [r5]	@ unaligned
 5404 2b38 6960     		str	r1, [r5, #4]	@ unaligned
 5405 2b3a AA60     		str	r2, [r5, #8]	@ unaligned
 5406 2b3c EB60     		str	r3, [r5, #12]	@ unaligned
 5407 2b3e 2388     		ldrh	r3, [r4]	@ unaligned
 5408 2b40 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                         case 2:
 5409              		.loc 1 773 0
 5410 2b42 17E0     		b	.L240
 5411              	.L242:
 775:..\src/command_processing.c ****                     }
 5412              		.loc 1 775 0
 5413 2b44 07F13803 		add	r3, r7, #56
 5414 2b48 143B     		subs	r3, r3, #20
 5415 2b4a 1846     		mov	r0, r3
 5416 2b4c FFF7FEFF 		bl	strlen
 5417 2b50 0346     		mov	r3, r0
 5418 2b52 1A46     		mov	r2, r3
 5419 2b54 07F13803 		add	r3, r7, #56
 5420 2b58 143B     		subs	r3, r3, #20
 5421 2b5a 1344     		add	r3, r3, r2
 5422 2b5c 224A     		ldr	r2, .L276+52
 5423 2b5e 1C46     		mov	r4, r3
 5424 2b60 1346     		mov	r3, r2
 5425 2b62 07CB     		ldmia	r3!, {r0, r1, r2}
 5426 2b64 2060     		str	r0, [r4]	@ unaligned
 5427 2b66 6160     		str	r1, [r4, #4]	@ unaligned
 5428 2b68 A260     		str	r2, [r4, #8]	@ unaligned
 5429 2b6a 1A88     		ldrh	r2, [r3]	@ unaligned
 5430 2b6c 9B78     		ldrb	r3, [r3, #2]
 5431 2b6e A281     		strh	r2, [r4, #12]	@ unaligned
 5432 2b70 A373     		strb	r3, [r4, #14]
 5433              		.loc 1 777 0
 5434 2b72 05E0     		b	.L186
 5435              	.L240:
 5436 2b74 04E0     		b	.L186
 5437              	.L255:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 5438              		.loc 1 667 0
 5439 2b76 00BF     		nop
 5440 2b78 02E0     		b	.L186
 5441              	.L256:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 128


 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5442              		.loc 1 683 0
 5443 2b7a 00BF     		nop
 5444 2b7c 00E0     		b	.L186
 5445              	.L257:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5446              		.loc 1 727 0
 5447 2b7e 00BF     		nop
 5448              	.L186:
 778:..\src/command_processing.c ****             }
 779:..\src/command_processing.c ****             //Recomputes string lenght
 780:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5449              		.loc 1 780 0
 5450 2b80 07F13803 		add	r3, r7, #56
 5451 2b84 143B     		subs	r3, r3, #20
 5452 2b86 1846     		mov	r0, r3
 5453 2b88 FFF7FEFF 		bl	strlen
 5454 2b8c 0346     		mov	r3, r0
 5455 2b8e DBB2     		uxtb	r3, r3
 5456 2b90 0133     		adds	r3, r3, #1
 5457 2b92 07F5A252 		add	r2, r7, #5184
 5458 2b96 02F11202 		add	r2, r2, #18
 5459 2b9a 1370     		strb	r3, [r2]
 5460              	.L185:
 781:..\src/command_processing.c ****         }
 782:..\src/command_processing.c **** 
 783:..\src/command_processing.c ****         // Add parameter string to packet
 784:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5461              		.loc 1 784 0
 5462 2b9c 07F5A253 		add	r3, r7, #5184
 5463 2ba0 03F11203 		add	r3, r3, #18
 5464 2ba4 1B78     		ldrb	r3, [r3]
 5465 2ba6 07F5A252 		add	r2, r7, #5184
 5466 2baa 02F11702 		add	r2, r2, #23
 5467 2bae 1370     		strb	r3, [r2]
 5468 2bb0 61E0     		b	.L244
 5469              	.L277:
 5470 2bb2 00BF     		.align	2
 5471              	.L276:
 5472 2bb4 E8000000 		.word	.LC99
 5473 2bb8 F8000000 		.word	.LC100
 5474 2bbc 0C010000 		.word	.LC101
 5475 2bc0 E0000000 		.word	.LC98
 5476 2bc4 1C010000 		.word	.LC102
 5477 2bc8 24010000 		.word	.LC103
 5478 2bcc 2C010000 		.word	.LC104
 5479 2bd0 3C010000 		.word	.LC105
 5480 2bd4 44010000 		.word	.LC106
 5481 2bd8 4C010000 		.word	.LC107
 5482 2bdc 64010000 		.word	.LC108
 5483 2be0 7C010000 		.word	.LC109
 5484 2be4 8C010000 		.word	.LC110
 5485 2be8 A0010000 		.word	.LC111
 5486              	.L245:
 785:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5487              		.loc 1 785 0 discriminator 3
 5488 2bec 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 129


 5489 2bf0 03F11503 		add	r3, r3, #21
 5490 2bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5491 2bf6 3222     		movs	r2, #50
 5492 2bf8 02FB03F3 		mul	r3, r2, r3
 5493 2bfc 1A1D     		adds	r2, r3, #4
 5494 2bfe 07F5A253 		add	r3, r7, #5184
 5495 2c02 03F11303 		add	r3, r3, #19
 5496 2c06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5497 2c08 07F5A253 		add	r3, r7, #5184
 5498 2c0c 03F11503 		add	r3, r3, #21
 5499 2c10 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5500 2c12 07F11803 		add	r3, r7, #24
 5501 2c16 143B     		subs	r3, r3, #20
 5502 2c18 1B68     		ldr	r3, [r3]
 5503 2c1a 0344     		add	r3, r3, r0
 5504 2c1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5505 2c1e 03FB01F3 		mul	r3, r3, r1
 5506 2c22 1A44     		add	r2, r2, r3
 5507 2c24 07F5A253 		add	r3, r7, #5184
 5508 2c28 03F11203 		add	r3, r3, #18
 5509 2c2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5510 2c2e 1A44     		add	r2, r2, r3
 5511 2c30 07F5A253 		add	r3, r7, #5184
 5512 2c34 03F11703 		add	r3, r3, #23
 5513 2c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5514 2c3a D21A     		subs	r2, r2, r3
 5515 2c3c 07F5A253 		add	r3, r7, #5184
 5516 2c40 03F11203 		add	r3, r3, #18
 5517 2c44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5518 2c46 07F5A253 		add	r3, r7, #5184
 5519 2c4a 03F11703 		add	r3, r3, #23
 5520 2c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5521 2c50 C91A     		subs	r1, r1, r3
 5522 2c52 07F13803 		add	r3, r7, #56
 5523 2c56 143B     		subs	r3, r3, #20
 5524 2c58 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5525 2c5a 07F15803 		add	r3, r7, #88
 5526 2c5e 9954     		strb	r1, [r3, r2]
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5527              		.loc 1 784 0 discriminator 3
 5528 2c60 07F5A253 		add	r3, r7, #5184
 5529 2c64 03F11703 		add	r3, r3, #23
 5530 2c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5531 2c6a 013B     		subs	r3, r3, #1
 5532 2c6c 07F5A252 		add	r2, r7, #5184
 5533 2c70 02F11702 		add	r2, r2, #23
 5534 2c74 1370     		strb	r3, [r2]
 5535              	.L244:
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5536              		.loc 1 784 0 is_stmt 0 discriminator 1
 5537 2c76 07F5A253 		add	r3, r7, #5184
 5538 2c7a 03F11703 		add	r3, r3, #23
 5539 2c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5540 2c80 002B     		cmp	r3, #0
 5541 2c82 B3D1     		bne	.L245
 786:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 787:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 130


 5542              		.loc 1 787 0 is_stmt 1
 5543 2c84 07F5A253 		add	r3, r7, #5184
 5544 2c88 03F11503 		add	r3, r3, #21
 5545 2c8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5546 2c8e 07F11803 		add	r3, r7, #24
 5547 2c92 103B     		subs	r3, r3, #16
 5548 2c94 1B68     		ldr	r3, [r3]
 5549 2c96 1344     		add	r3, r3, r2
 5550 2c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5551 2c9a 002B     		cmp	r3, #0
 5552 2c9c 3BD1     		bne	.L246
 788:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5553              		.loc 1 788 0
 5554 2c9e 07F5A253 		add	r3, r7, #5184
 5555 2ca2 03F11503 		add	r3, r3, #21
 5556 2ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5557 2ca8 3222     		movs	r2, #50
 5558 2caa 02FB03F3 		mul	r3, r2, r3
 5559 2cae 1A1D     		adds	r2, r3, #4
 5560 2cb0 07F5A253 		add	r3, r7, #5184
 5561 2cb4 03F11303 		add	r3, r3, #19
 5562 2cb8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5563 2cba 07F5A253 		add	r3, r7, #5184
 5564 2cbe 03F11503 		add	r3, r3, #21
 5565 2cc2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5566 2cc4 07F11803 		add	r3, r7, #24
 5567 2cc8 143B     		subs	r3, r3, #20
 5568 2cca 1B68     		ldr	r3, [r3]
 5569 2ccc 0344     		add	r3, r3, r0
 5570 2cce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5571 2cd0 03FB01F3 		mul	r3, r3, r1
 5572 2cd4 1A44     		add	r2, r2, r3
 5573 2cd6 07F5A253 		add	r3, r7, #5184
 5574 2cda 03F11203 		add	r3, r3, #18
 5575 2cde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5576 2ce0 1344     		add	r3, r3, r2
 5577 2ce2 07F5A252 		add	r2, r7, #5184
 5578 2ce6 02F11402 		add	r2, r2, #20
 5579 2cea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5580 2cec 07F5A351 		add	r1, r7, #5216
 5581 2cf0 01F11001 		add	r1, r1, #16
 5582 2cf4 0968     		ldr	r1, [r1]
 5583 2cf6 0A44     		add	r2, r2, r1
 5584 2cf8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5585 2cfa 07F15802 		add	r2, r7, #88
 5586 2cfe D154     		strb	r1, [r2, r3]
 789:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5587              		.loc 1 789 0
 5588 2d00 07F5A253 		add	r3, r7, #5184
 5589 2d04 03F11403 		add	r3, r3, #20
 5590 2d08 1B78     		ldrb	r3, [r3]
 5591 2d0a 0133     		adds	r3, r3, #1
 5592 2d0c 07F5A252 		add	r2, r7, #5184
 5593 2d10 02F11402 		add	r2, r2, #20
 5594 2d14 1370     		strb	r3, [r2]
 5595              	.L246:
 790:..\src/command_processing.c ****         }      
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 131


 791:..\src/command_processing.c ****         
 792:..\src/command_processing.c ****         // Add struct index after an empty bit
 793:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 794:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5596              		.loc 1 794 0
 5597 2d16 07F5A253 		add	r3, r7, #5184
 5598 2d1a 03F11503 		add	r3, r3, #21
 5599 2d1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5600 2d20 07F11803 		add	r3, r7, #24
 5601 2d24 103B     		subs	r3, r3, #16
 5602 2d26 1B68     		ldr	r3, [r3]
 5603 2d28 1344     		add	r3, r3, r2
 5604 2d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5605 2d2c 002B     		cmp	r3, #0
 5606 2d2e 31D1     		bne	.L247
 795:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5607              		.loc 1 795 0
 5608 2d30 07F5A253 		add	r3, r7, #5184
 5609 2d34 03F11503 		add	r3, r3, #21
 5610 2d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5611 2d3a 3222     		movs	r2, #50
 5612 2d3c 02FB03F3 		mul	r3, r2, r3
 5613 2d40 1A1D     		adds	r2, r3, #4
 5614 2d42 07F5A253 		add	r3, r7, #5184
 5615 2d46 03F11303 		add	r3, r3, #19
 5616 2d4a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5617 2d4c 07F5A253 		add	r3, r7, #5184
 5618 2d50 03F11503 		add	r3, r3, #21
 5619 2d54 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5620 2d56 07F11803 		add	r3, r7, #24
 5621 2d5a 143B     		subs	r3, r3, #20
 5622 2d5c 1B68     		ldr	r3, [r3]
 5623 2d5e 0344     		add	r3, r3, r0
 5624 2d60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5625 2d62 03FB01F3 		mul	r3, r3, r1
 5626 2d66 1A44     		add	r2, r2, r3
 5627 2d68 07F5A253 		add	r3, r7, #5184
 5628 2d6c 03F11203 		add	r3, r3, #18
 5629 2d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5630 2d72 1344     		add	r3, r3, r2
 5631 2d74 9A1C     		adds	r2, r3, #2
 5632 2d76 07F5A253 		add	r3, r7, #5184
 5633 2d7a 03F11503 		add	r3, r3, #21
 5634 2d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5635 2d80 07F11803 		add	r3, r7, #24
 5636 2d84 183B     		subs	r3, r3, #24
 5637 2d86 1B68     		ldr	r3, [r3]
 5638 2d88 0B44     		add	r3, r3, r1
 5639 2d8a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5640 2d8c 07F15803 		add	r3, r7, #88
 5641 2d90 9954     		strb	r1, [r3, r2]
 5642 2d92 30E0     		b	.L248
 5643              	.L247:
 796:..\src/command_processing.c ****         }
 797:..\src/command_processing.c ****         else {
 798:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5644              		.loc 1 798 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 132


 5645 2d94 07F5A253 		add	r3, r7, #5184
 5646 2d98 03F11503 		add	r3, r3, #21
 5647 2d9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5648 2d9e 3222     		movs	r2, #50
 5649 2da0 02FB03F3 		mul	r3, r2, r3
 5650 2da4 1A1D     		adds	r2, r3, #4
 5651 2da6 07F5A253 		add	r3, r7, #5184
 5652 2daa 03F11303 		add	r3, r3, #19
 5653 2dae 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5654 2db0 07F5A253 		add	r3, r7, #5184
 5655 2db4 03F11503 		add	r3, r3, #21
 5656 2db8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5657 2dba 07F11803 		add	r3, r7, #24
 5658 2dbe 143B     		subs	r3, r3, #20
 5659 2dc0 1B68     		ldr	r3, [r3]
 5660 2dc2 0344     		add	r3, r3, r0
 5661 2dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5662 2dc6 03FB01F3 		mul	r3, r3, r1
 5663 2dca 1A44     		add	r2, r2, r3
 5664 2dcc 07F5A253 		add	r3, r7, #5184
 5665 2dd0 03F11203 		add	r3, r3, #18
 5666 2dd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5667 2dd6 1344     		add	r3, r3, r2
 5668 2dd8 5A1C     		adds	r2, r3, #1
 5669 2dda 07F5A253 		add	r3, r7, #5184
 5670 2dde 03F11503 		add	r3, r3, #21
 5671 2de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5672 2de4 07F11803 		add	r3, r7, #24
 5673 2de8 183B     		subs	r3, r3, #24
 5674 2dea 1B68     		ldr	r3, [r3]
 5675 2dec 0B44     		add	r3, r3, r1
 5676 2dee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5677 2df0 07F15803 		add	r3, r7, #88
 5678 2df4 9954     		strb	r1, [r3, r2]
 5679              	.L248:
 373:..\src/command_processing.c ****         
 5680              		.loc 1 373 0 discriminator 2
 5681 2df6 07F5A253 		add	r3, r7, #5184
 5682 2dfa 03F11503 		add	r3, r3, #21
 5683 2dfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5684 2e00 0133     		adds	r3, r3, #1
 5685 2e02 07F5A252 		add	r2, r7, #5184
 5686 2e06 02F11502 		add	r2, r2, #21
 5687 2e0a 1370     		strb	r3, [r2]
 5688              	.L63:
 373:..\src/command_processing.c ****         
 5689              		.loc 1 373 0 is_stmt 0 discriminator 1
 5690 2e0c 07F5A253 		add	r3, r7, #5184
 5691 2e10 03F11503 		add	r3, r3, #21
 5692 2e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5693 2e16 462B     		cmp	r3, #70
 5694 2e18 7DF666A9 		bls	.L249
 799:..\src/command_processing.c ****         }
 800:..\src/command_processing.c ****     }
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c ****     // Add menu
 803:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 133


 5695              		.loc 1 803 0 is_stmt 1
 5696 2e1c 0023     		movs	r3, #0
 5697 2e1e 07F5A252 		add	r2, r7, #5184
 5698 2e22 02F11602 		add	r2, r2, #22
 5699 2e26 1370     		strb	r3, [r2]
 5700 2e28 70E0     		b	.L250
 5701              	.L253:
 804:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5702              		.loc 1 804 0
 5703 2e2a 07F5A253 		add	r3, r7, #5184
 5704 2e2e 03F11603 		add	r3, r3, #22
 5705 2e32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5706 2e34 9B00     		lsls	r3, r3, #2
 5707 2e36 07F5A352 		add	r2, r7, #5216
 5708 2e3a 02F11C02 		add	r2, r2, #28
 5709 2e3e 1268     		ldr	r2, [r2]
 5710 2e40 1344     		add	r3, r3, r2
 5711 2e42 1B68     		ldr	r3, [r3]
 5712 2e44 1846     		mov	r0, r3
 5713 2e46 FFF7FEFF 		bl	strlen
 5714 2e4a 0346     		mov	r3, r0
 5715 2e4c 07F5A252 		add	r2, r7, #5184
 5716 2e50 02F11202 		add	r2, r2, #18
 5717 2e54 1370     		strb	r3, [r2]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5718              		.loc 1 805 0
 5719 2e56 07F5A253 		add	r3, r7, #5184
 5720 2e5a 03F11203 		add	r3, r3, #18
 5721 2e5e 1B78     		ldrb	r3, [r3]
 5722 2e60 07F5A252 		add	r2, r7, #5184
 5723 2e64 02F11702 		add	r2, r2, #23
 5724 2e68 1370     		strb	r3, [r2]
 5725 2e6a 3DE0     		b	.L251
 5726              	.L252:
 806:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 5727              		.loc 1 806 0 discriminator 3
 5728 2e6c 07F5A253 		add	r3, r7, #5184
 5729 2e70 03F11603 		add	r3, r3, #22
 5730 2e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5731 2e76 9622     		movs	r2, #150
 5732 2e78 02FB03F3 		mul	r3, r2, r3
 5733 2e7c 03F55E62 		add	r2, r3, #3552
 5734 2e80 07F5A253 		add	r3, r7, #5184
 5735 2e84 03F11203 		add	r3, r3, #18
 5736 2e88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5737 2e8a 1A44     		add	r2, r2, r3
 5738 2e8c 07F5A253 		add	r3, r7, #5184
 5739 2e90 03F11703 		add	r3, r3, #23
 5740 2e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5741 2e96 D31A     		subs	r3, r2, r3
 5742 2e98 07F5A252 		add	r2, r7, #5184
 5743 2e9c 02F11602 		add	r2, r2, #22
 5744 2ea0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5745 2ea2 9200     		lsls	r2, r2, #2
 5746 2ea4 07F5A351 		add	r1, r7, #5216
 5747 2ea8 01F11C01 		add	r1, r1, #28
 5748 2eac 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 134


 5749 2eae 0A44     		add	r2, r2, r1
 5750 2eb0 1268     		ldr	r2, [r2]
 5751 2eb2 07F5A251 		add	r1, r7, #5184
 5752 2eb6 01F11201 		add	r1, r1, #18
 5753 2eba 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5754 2ebc 07F5A251 		add	r1, r7, #5184
 5755 2ec0 01F11701 		add	r1, r1, #23
 5756 2ec4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5757 2ec6 411A     		subs	r1, r0, r1
 5758 2ec8 0A44     		add	r2, r2, r1
 5759 2eca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5760 2ecc 07F15802 		add	r2, r7, #88
 5761 2ed0 D154     		strb	r1, [r2, r3]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5762              		.loc 1 805 0 discriminator 3
 5763 2ed2 07F5A253 		add	r3, r7, #5184
 5764 2ed6 03F11703 		add	r3, r3, #23
 5765 2eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5766 2edc 013B     		subs	r3, r3, #1
 5767 2ede 07F5A252 		add	r2, r7, #5184
 5768 2ee2 02F11702 		add	r2, r2, #23
 5769 2ee6 1370     		strb	r3, [r2]
 5770              	.L251:
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5771              		.loc 1 805 0 is_stmt 0 discriminator 1
 5772 2ee8 07F5A253 		add	r3, r7, #5184
 5773 2eec 03F11703 		add	r3, r3, #23
 5774 2ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5775 2ef2 002B     		cmp	r3, #0
 5776 2ef4 BAD1     		bne	.L252
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5777              		.loc 1 803 0 is_stmt 1 discriminator 2
 5778 2ef6 07F5A253 		add	r3, r7, #5184
 5779 2efa 03F11603 		add	r3, r3, #22
 5780 2efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5781 2f00 0133     		adds	r3, r3, #1
 5782 2f02 07F5A252 		add	r2, r7, #5184
 5783 2f06 02F11602 		add	r2, r2, #22
 5784 2f0a 1370     		strb	r3, [r2]
 5785              	.L250:
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5786              		.loc 1 803 0 is_stmt 0 discriminator 1
 5787 2f0c 07F5A253 		add	r3, r7, #5184
 5788 2f10 03F11603 		add	r3, r3, #22
 5789 2f14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5790 2f16 092B     		cmp	r3, #9
 5791 2f18 87D9     		bls	.L253
 807:..\src/command_processing.c ****     }
 808:..\src/command_processing.c ****     
 809:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 5792              		.loc 1 809 0 is_stmt 1
 5793 2f1a 07F5A253 		add	r3, r7, #5184
 5794 2f1e 03F11003 		add	r3, r3, #16
 5795 2f22 1B88     		ldrh	r3, [r3]
 5796 2f24 5C1E     		subs	r4, r3, #1
 5797 2f26 07F5A253 		add	r3, r7, #5184
 5798 2f2a 03F11003 		add	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 135


 5799 2f2e 1B88     		ldrh	r3, [r3]	@ movhi
 5800 2f30 DBB2     		uxtb	r3, r3
 5801 2f32 013B     		subs	r3, r3, #1
 5802 2f34 DAB2     		uxtb	r2, r3
 5803 2f36 07F15803 		add	r3, r7, #88
 5804 2f3a 1146     		mov	r1, r2
 5805 2f3c 1846     		mov	r0, r3
 5806 2f3e FFF7FEFF 		bl	LCRChecksum
 5807 2f42 0346     		mov	r3, r0
 5808 2f44 1A46     		mov	r2, r3
 5809 2f46 07F15803 		add	r3, r7, #88
 5810 2f4a 1A55     		strb	r2, [r3, r4]
 810:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 5811              		.loc 1 810 0
 5812 2f4c 07F5A253 		add	r3, r7, #5184
 5813 2f50 03F11003 		add	r3, r3, #16
 5814 2f54 1A88     		ldrh	r2, [r3]
 5815 2f56 07F15803 		add	r3, r7, #88
 5816 2f5a 1146     		mov	r1, r2
 5817 2f5c 1846     		mov	r0, r3
 5818 2f5e FFF7FEFF 		bl	commWrite
 811:..\src/command_processing.c **** }
 5819              		.loc 1 811 0
 5820 2f62 00BF     		nop
 5821 2f64 07F5A257 		add	r7, r7, #5184
 5822 2f68 1C37     		adds	r7, r7, #28
 5823              		.cfi_def_cfa_offset 20
 5824 2f6a BD46     		mov	sp, r7
 5825              		.cfi_def_cfa_register 13
 5826              		@ sp needed
 5827 2f6c F0BD     		pop	{r4, r5, r6, r7, pc}
 5828              		.cfi_endproc
 5829              	.LFE67:
 5830              		.size	get_param_list, .-get_param_list
 5831 2f6e 00BF     		.section	.rodata
 5832              		.align	2
 5833              	.LC113:
 5834 01b0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 5834      204E6F6E 
 5834      650A3120 
 5834      2D3E204C 
 5834      6F772028 
 5835 01e0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 5835      74657220 
 5835      72656164 
 5835      290A3220 
 5835      2D3E2048 
 5836 0210 62697420 		.ascii	"bit register read)\012\000"
 5836      72656769 
 5836      73746572 
 5836      20726561 
 5836      64290A00 
 5837              		.align	2
 5838              	.LC114:
 5839 0224 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 5839      20557362 
 5839      0A31202D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 136


 5839      3E204861 
 5839      6E646C65 
 5840 024f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 5840      20454D47 
 5840      20496E74 
 5840      65677261 
 5840      6C0A3420 
 5841 027c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 5841      616E6365 
 5841      640A3620 
 5841      2D3E2045 
 5841      4D472070 
 5842              		.align	2
 5843              	.LC115:
 5844 02a0 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 5844      20506F73 
 5844      6974696F 
 5844      6E0A3120 
 5844      2D3E2050 
 5845 02ca 6F736974 		.ascii	"osition and Current\012\000"
 5845      696F6E20 
 5845      616E6420 
 5845      43757272 
 5845      656E740A 
 5846 02df 00       		.align	2
 5847              	.LC116:
 5848 02e0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 5848      20446561 
 5848      63746976 
 5848      61746520 
 5848      5B4E4F5D 
 5849 030a 0000     		.align	2
 5850              	.LC117:
 5851 030c 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 5851      20526967 
 5851      68740A31 
 5851      202D3E20 
 5851      4C656674 
 5852 0322 0000     		.align	2
 5853              	.LC118:
 5854 0324 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 5854      204F4646 
 5854      0A31202D 
 5854      3E204F4E 
 5854      0A546865 
 5855 034b 00       		.align	2
 5856              	.LC119:
 5857 034c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 5857      204E6F6E 
 5857      650A3120 
 5857      2D3E2053 
 5857      442F5254 
 5858 0379 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 5858      0A33202D 
 5858      3E204F74 
 5858      68657220 
 5858      5B4E2F41 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 137


 5859 03a4 00       		.ascii	"\000"
 5860 03a5 000000   		.align	2
 5861              	.LC120:
 5862 03a8 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 5862      2047656E 
 5862      65726963 
 5862      20757365 
 5862      720A3120 
 5863 03d2 20626F61 		.ascii	" board will reset\012\000"
 5863      72642077 
 5863      696C6C20 
 5863      72657365 
 5863      740A00
 5864 03e5 000000   		.align	2
 5865              	.LC121:
 5866 03e8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 5866      204D4333 
 5866      33383837 
 5866      20285374 
 5866      616E6461 
 5867 0418 290A5468 		.ascii	")\012The board will reset\012\000"
 5867      6520626F 
 5867      61726420 
 5867      77696C6C 
 5867      20726573 
 5868              		.align	2
 5869              	.LC122:
 5870 0430 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 5870      20534F46 
 5870      5448414E 
 5870      44205052 
 5870      4F0A3120 
 5871 045d 41495220 		.ascii	"AIR CHAMBERS\012The board will reset\012\000"
 5871      4348414D 
 5871      42455253 
 5871      0A546865 
 5871      20626F61 
 5872              		.align	2
 5873              	.LC0:
 5874 0480 02       		.byte	2
 5875 0481 07       		.byte	7
 5876 0482 07       		.byte	7
 5877 0483 00       		.byte	0
 5878 0484 00       		.byte	0
 5879 0485 00       		.byte	0
 5880 0486 02       		.byte	2
 5881 0487 03       		.byte	3
 5882 0488 07       		.byte	7
 5883 0489 00       		.byte	0
 5884 048a 05       		.byte	5
 5885 048b 05       		.byte	5
 5886 048c 03       		.byte	3
 5887 048d 04       		.byte	4
 5888 048e 00       		.byte	0
 5889 048f 06       		.byte	6
 5890 0490 02       		.byte	2
 5891 0491 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 138


 5892 0492 01       		.byte	1
 5893 0493 00       		.byte	0
 5894 0494 07       		.byte	7
 5895 0495 02       		.byte	2
 5896 0496 05       		.byte	5
 5897 0497 05       		.byte	5
 5898 0498 05       		.byte	5
 5899 0499 00       		.byte	0
 5900 049a 00       		.byte	0
 5901 049b 00       		.byte	0
 5902 049c 00       		.byte	0
 5903 049d 00       		.byte	0
 5904 049e 00       		.byte	0
 5905 049f 02       		.byte	2
 5906 04a0 00       		.byte	0
 5907 04a1 02       		.byte	2
 5908 04a2 00       		.byte	0
 5909 04a3 09       		.byte	9
 5910 04a4 02       		.byte	2
 5911 04a5 00       		.byte	0
 5912 04a6 02       		.byte	2
 5913 04a7 00       		.byte	0
 5914 04a8 02       		.byte	2
 5915 04a9 01       		.byte	1
 5916 04aa 00       		.byte	0
 5917 04ab 07       		.byte	7
 5918 04ac 07       		.byte	7
 5919 04ad 00       		.byte	0
 5920 04ae 00       		.byte	0
 5921 04af 00       		.byte	0
 5922 04b0 02       		.byte	2
 5923 04b1 03       		.byte	3
 5924 04b2 07       		.byte	7
 5925 04b3 00       		.byte	0
 5926 04b4 05       		.byte	5
 5927 04b5 05       		.byte	5
 5928 04b6 03       		.byte	3
 5929 04b7 00       		.byte	0
 5930 04b8 01       		.byte	1
 5931 04b9 00       		.byte	0
 5932 04ba 07       		.byte	7
 5933 04bb 02       		.byte	2
 5934 04bc 00       		.byte	0
 5935 04bd 02       		.byte	2
 5936 04be 00       		.byte	0
 5937 04bf 02       		.byte	2
 5938 04c0 01       		.byte	1
 5939 04c1 02       		.byte	2
 5940 04c2 02       		.byte	2
 5941 04c3 00       		.byte	0
 5942 04c4 02       		.byte	2
 5943 04c5 02       		.byte	2
 5944 04c6 00       		.byte	0
 5945 04c7 00       		.byte	0
 5946 04c8 02       		.byte	2
 5947 04c9 05       		.byte	5
 5948 04ca 07       		.byte	7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 139


 5949 04cb 07       		.byte	7
 5950              		.align	2
 5951              	.LC1:
 5952 04cc 31202D20 		.ascii	"1 - Device ID:\000"
 5952      44657669 
 5952      63652049 
 5952      443A00
 5953 04db 00       		.align	2
 5954              	.LC2:
 5955 04dc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5955      506F7369 
 5955      74696F6E 
 5955      20504944 
 5955      205B502C 
 5956              		.align	2
 5957              	.LC3:
 5958 04f8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5958      43757272 
 5958      656E7420 
 5958      50494420 
 5958      5B502C20 
 5959 0513 00       		.align	2
 5960              	.LC4:
 5961 0514 34202D20 		.ascii	"4 - Startup Activation:\000"
 5961      53746172 
 5961      74757020 
 5961      41637469 
 5961      76617469 
 5962              		.align	2
 5963              	.LC5:
 5964 052c 35202D20 		.ascii	"5 - Input mode:\000"
 5964      496E7075 
 5964      74206D6F 
 5964      64653A00 
 5965              		.align	2
 5966              	.LC6:
 5967 053c 36202D20 		.ascii	"6 - Control mode:\000"
 5967      436F6E74 
 5967      726F6C20 
 5967      6D6F6465 
 5967      3A00
 5968 054e 0000     		.align	2
 5969              	.LC7:
 5970 0550 37202D20 		.ascii	"7 - Resolutions:\000"
 5970      5265736F 
 5970      6C757469 
 5970      6F6E733A 
 5970      00
 5971 0561 000000   		.align	2
 5972              	.LC8:
 5973 0564 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5973      4D656173 
 5973      7572656D 
 5973      656E7420 
 5973      4F666673 
 5974 057d 000000   		.align	2
 5975              	.LC9:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 140


 5976 0580 39202D20 		.ascii	"9 - Multipliers:\000"
 5976      4D756C74 
 5976      69706C69 
 5976      6572733A 
 5976      00
 5977 0591 000000   		.align	2
 5978              	.LC10:
 5979 0594 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5979      20506F73 
 5979      2E206C69 
 5979      6D697420 
 5979      61637469 
 5980              		.align	2
 5981              	.LC11:
 5982 05ac 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5982      20506F73 
 5982      2E206C69 
 5982      6D697473 
 5982      205B696E 
 5983 05c9 000000   		.align	2
 5984              	.LC12:
 5985 05cc 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5985      204D6178 
 5985      20737465 
 5985      7073205B 
 5985      6E65672C 
 5986 05e7 00       		.align	2
 5987              	.LC13:
 5988 05e8 3133202D 		.ascii	"13 - Current limit:\000"
 5988      20437572 
 5988      72656E74 
 5988      206C696D 
 5988      69743A00 
 5989              		.align	2
 5990              	.LC14:
 5991 05fc 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5991      20454D47 
 5991      20746872 
 5991      6573686F 
 5991      6C64733A 
 5992 0611 000000   		.align	2
 5993              	.LC15:
 5994 0614 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5994      20454D47 
 5994      2063616C 
 5994      69627261 
 5994      74696F6E 
 5995 0635 000000   		.align	2
 5996              	.LC16:
 5997 0638 3136202D 		.ascii	"16 - EMG max values:\000"
 5997      20454D47 
 5997      206D6178 
 5997      2076616C 
 5997      7565733A 
 5998 064d 000000   		.align	2
 5999              	.LC17:
 6000 0650 3137202D 		.ascii	"17 - EMG max speed:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 141


 6000      20454D47 
 6000      206D6178 
 6000      20737065 
 6000      65643A00 
 6001              		.align	2
 6002              	.LC18:
 6003 0664 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6003      20416273 
 6003      6F6C7574 
 6003      6520656E 
 6003      636F6465 
 6004              		.align	2
 6005              	.LC19:
 6006 0684 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6006      204D6F74 
 6006      6F722068 
 6006      616E646C 
 6006      65207261 
 6007 069d 000000   		.align	2
 6008              	.LC20:
 6009 06a0 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6009      2050574D 
 6009      20726573 
 6009      63616C69 
 6009      6E673A00 
 6010              		.align	2
 6011              	.LC21:
 6012 06b4 3231202D 		.ascii	"21 - Current lookup:\000"
 6012      20437572 
 6012      72656E74 
 6012      206C6F6F 
 6012      6B75703A 
 6013 06c9 000000   		.align	2
 6014              	.LC22:
 6015 06cc 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6015      20446174 
 6015      65206F66 
 6015      206D6169 
 6015      6E74656E 
 6016 06ee 0000     		.align	2
 6017              	.LC23:
 6018 06f0 3233202D 		.ascii	"23 - Rest position:\000"
 6018      20526573 
 6018      7420706F 
 6018      73697469 
 6018      6F6E3A00 
 6019              		.align	2
 6020              	.LC24:
 6021 0704 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6021      20526573 
 6021      7420706F 
 6021      73697469 
 6021      6F6E2074 
 6022              		.align	2
 6023              	.LC25:
 6024 0728 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6024      20526573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 142


 6024      74207665 
 6024      6C20636C 
 6024      6F737572 
 6025 074b 00       		.align	2
 6026              	.LC26:
 6027 074c 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6027      20526573 
 6027      7420706F 
 6027      73697469 
 6027      6F6E2065 
 6028              		.align	2
 6029              	.LC27:
 6030 0768 3237202D 		.ascii	"27 - EMG inversion:\000"
 6030      20454D47 
 6030      20696E76 
 6030      65727369 
 6030      6F6E3A00 
 6031              		.align	2
 6032              	.LC28:
 6033 077c 3238202D 		.ascii	"28 - Hand side:\000"
 6033      2048616E 
 6033      64207369 
 6033      64653A00 
 6034              		.align	2
 6035              	.LC29:
 6036 078c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6036      20456E61 
 6036      626C6520 
 6036      494D5573 
 6036      3A00
 6037 079e 0000     		.align	2
 6038              	.LC30:
 6039 07a0 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6039      20526561 
 6039      64204578 
 6039      70616E73 
 6039      696F6E20 
 6040 07ba 0000     		.align	2
 6041              	.LC31:
 6042 07bc 3331202D 		.ascii	"31 - Reset counters:\000"
 6042      20526573 
 6042      65742063 
 6042      6F756E74 
 6042      6572733A 
 6043 07d1 000000   		.align	2
 6044              	.LC32:
 6045 07d4 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6045      204C6173 
 6045      74206368 
 6045      65636B65 
 6045      64205469 
 6046 07fa 0000     		.align	2
 6047              	.LC33:
 6048 07fc 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6048      20535049 
 6048      20726561 
 6048      64206465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 143


 6048      6C617920 
 6049 0817 00       		.align	2
 6050              	.LC34:
 6051 0818 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6051      204F6E20 
 6051      626F6172 
 6051      6420494D 
 6051      5520636F 
 6052 083d 000000   		.align	2
 6053              	.LC35:
 6054 0840 3335202D 		.ascii	"35 - User ID:\000"
 6054      20557365 
 6054      72204944 
 6054      3A00
 6055 084e 0000     		.align	2
 6056              	.LC36:
 6057 0850 3336202D 		.ascii	"36 - User code:\000"
 6057      20557365 
 6057      7220636F 
 6057      64653A00 
 6058              		.align	2
 6059              	.LC37:
 6060 0860 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6060      20417373 
 6060      6F636961 
 6060      74656420 
 6060      656E636F 
 6061 087e 0000     		.align	2
 6062              	.LC38:
 6063 0880 3338202D 		.ascii	"38 - Driver type:\000"
 6063      20447269 
 6063      76657220 
 6063      74797065 
 6063      3A00
 6064 0892 0000     		.align	2
 6065              	.LC39:
 6066 0894 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6066      2050574D 
 6066      20726174 
 6066      65206C69 
 6066      6D697465 
 6067 08ab 00       		.align	2
 6068              	.LC40:
 6069 08ac 3430202D 		.ascii	"40 - Not reversible:\000"
 6069      204E6F74 
 6069      20726576 
 6069      65727369 
 6069      626C653A 
 6070 08c1 000000   		.align	2
 6071              	.LC41:
 6072 08c4 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6072      20456E63 
 6072      20696478 
 6072      20757365 
 6072      6420666F 
 6073 08e3 00       		.align	2
 6074              	.LC42:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 144


 6075 08e4 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6075      20476561 
 6075      72207061 
 6075      72616D73 
 6075      5B4E312C 
 6076 0902 0000     		.align	2
 6077              	.LC43:
 6078 0904 3433202D 		.ascii	"43 - Use second motor:\000"
 6078      20557365 
 6078      20736563 
 6078      6F6E6420 
 6078      6D6F746F 
 6079 091b 00       		.align	2
 6080              	.LC44:
 6081 091c 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6081      20506F73 
 6081      6974696F 
 6081      6E205049 
 6081      44205B50 
 6082 0939 000000   		.align	2
 6083              	.LC45:
 6084 093c 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6084      20437572 
 6084      72656E74 
 6084      20504944 
 6084      205B502C 
 6085              		.align	2
 6086              	.LC46:
 6087 0958 3436202D 		.ascii	"46 - Startup Activation:\000"
 6087      20537461 
 6087      72747570 
 6087      20416374 
 6087      69766174 
 6088 0971 000000   		.align	2
 6089              	.LC47:
 6090 0974 3437202D 		.ascii	"47 - Input mode:\000"
 6090      20496E70 
 6090      7574206D 
 6090      6F64653A 
 6090      00
 6091 0985 000000   		.align	2
 6092              	.LC48:
 6093 0988 3438202D 		.ascii	"48 - Control mode:\000"
 6093      20436F6E 
 6093      74726F6C 
 6093      206D6F64 
 6093      653A00
 6094 099b 00       		.align	2
 6095              	.LC49:
 6096 099c 3439202D 		.ascii	"49 - Resolutions:\000"
 6096      20526573 
 6096      6F6C7574 
 6096      696F6E73 
 6096      3A00
 6097 09ae 0000     		.align	2
 6098              	.LC50:
 6099 09b0 3530202D 		.ascii	"50 - Measurement Offsets:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 145


 6099      204D6561 
 6099      73757265 
 6099      6D656E74 
 6099      204F6666 
 6100 09ca 0000     		.align	2
 6101              	.LC51:
 6102 09cc 3531202D 		.ascii	"51 - Multipliers:\000"
 6102      204D756C 
 6102      7469706C 
 6102      69657273 
 6102      3A00
 6103 09de 0000     		.align	2
 6104              	.LC52:
 6105 09e0 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6105      20506F73 
 6105      2E206C69 
 6105      6D697420 
 6105      61637469 
 6106              		.align	2
 6107              	.LC53:
 6108 09f8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6108      20506F73 
 6108      2E206C69 
 6108      6D697473 
 6108      205B696E 
 6109 0a15 000000   		.align	2
 6110              	.LC54:
 6111 0a18 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6111      204D6178 
 6111      20737465 
 6111      7073205B 
 6111      6E65672C 
 6112 0a33 00       		.align	2
 6113              	.LC55:
 6114 0a34 3535202D 		.ascii	"55 - Current limit:\000"
 6114      20437572 
 6114      72656E74 
 6114      206C696D 
 6114      69743A00 
 6115              		.align	2
 6116              	.LC56:
 6117 0a48 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6117      20416273 
 6117      6F6C7574 
 6117      6520656E 
 6117      636F6465 
 6118              		.align	2
 6119              	.LC57:
 6120 0a68 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6120      204D6F74 
 6120      6F722068 
 6120      616E646C 
 6120      65207261 
 6121 0a81 000000   		.align	2
 6122              	.LC58:
 6123 0a84 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6123      2050574D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 146


 6123      20726573 
 6123      63616C69 
 6123      6E673A00 
 6124              		.align	2
 6125              	.LC59:
 6126 0a98 3539202D 		.ascii	"59 - Current lookup:\000"
 6126      20437572 
 6126      72656E74 
 6126      206C6F6F 
 6126      6B75703A 
 6127 0aad 000000   		.align	2
 6128              	.LC60:
 6129 0ab0 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6129      20417373 
 6129      6F636961 
 6129      74656420 
 6129      656E636F 
 6130 0ace 0000     		.align	2
 6131              	.LC61:
 6132 0ad0 3631202D 		.ascii	"61 - Driver type:\000"
 6132      20447269 
 6132      76657220 
 6132      74797065 
 6132      3A00
 6133 0ae2 0000     		.align	2
 6134              	.LC62:
 6135 0ae4 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6135      2050574D 
 6135      20726174 
 6135      65206C69 
 6135      6D697465 
 6136 0afb 00       		.align	2
 6137              	.LC63:
 6138 0afc 3633202D 		.ascii	"63 - Not reversible:\000"
 6138      204E6F74 
 6138      20726576 
 6138      65727369 
 6138      626C653A 
 6139 0b11 000000   		.align	2
 6140              	.LC64:
 6141 0b14 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6141      20456E63 
 6141      20696478 
 6141      20757365 
 6141      6420666F 
 6142 0b33 00       		.align	2
 6143              	.LC65:
 6144 0b34 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6144      20476561 
 6144      72207061 
 6144      72616D73 
 6144      5B4E312C 
 6145 0b52 0000     		.align	2
 6146              	.LC66:
 6147 0b54 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6147      20526561 
 6147      6420656E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 147


 6147      63207261 
 6147      77206C69 
 6148 0b6e 0000     		.align	2
 6149              	.LC67:
 6150 0b70 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6150      20526561 
 6150      6420656E 
 6150      63207261 
 6150      77206C69 
 6151 0b8a 0000     		.align	2
 6152              	.LC68:
 6153 0b8c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6153      20526561 
 6153      64206164 
 6153      64697469 
 6153      6F6E616C 
 6154 0bab 00       		.align	2
 6155              	.LC69:
 6156 0bac 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6156      20414443 
 6156      20636861 
 6156      6E6E656C 
 6156      205B312D 
 6157              		.align	2
 6158              	.LC70:
 6159 0bc4 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6159      20414443 
 6159      20636861 
 6159      6E6E656C 
 6159      205B372D 
 6160 0bdd 000000   		.align	2
 6161              	.LC71:
 6162 0be0 3731202D 		.ascii	"71 - Device type:\000"
 6162      20446576 
 6162      69636520 
 6162      74797065 
 6162      3A00
 6163 0bf2 0000     		.align	2
 6164              	.LC72:
 6165 0bf4 3732202D 		.ascii	"72 - Slave communication active:\000"
 6165      20536C61 
 6165      76652063 
 6165      6F6D6D75 
 6165      6E696361 
 6166 0c15 000000   		.align	2
 6167              	.LC73:
 6168 0c18 3733202D 		.ascii	"73 - Slave ID:\000"
 6168      20536C61 
 6168      76652049 
 6168      443A00
 6169 0c27 00       		.align	2
 6170              	.LC74:
 6171 0c28 3734202D 		.ascii	"74 - Maximum slave residual current:\000"
 6171      204D6178 
 6171      696D756D 
 6171      20736C61 
 6171      76652072 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 148


 6172 0c4d 000000   		.align	2
 6173              	.LC75:
 6174 0c50 3735202D 		.ascii	"75 - Maximum pressure feedback (kPa):\000"
 6174      204D6178 
 6174      696D756D 
 6174      20707265 
 6174      73737572 
 6175 0c76 0000     		.align	2
 6176              	.LC76:
 6177 0c78 3736202D 		.ascii	"76 - Proportional pressure error gain:\000"
 6177      2050726F 
 6177      706F7274 
 6177      696F6E61 
 6177      6C207072 
 6178 0c9f 00       		.align	2
 6179              	.LC112:
 6180 0ca0 CC040000 		.word	.LC1
 6181 0ca4 DC040000 		.word	.LC2
 6182 0ca8 F8040000 		.word	.LC3
 6183 0cac 14050000 		.word	.LC4
 6184 0cb0 2C050000 		.word	.LC5
 6185 0cb4 3C050000 		.word	.LC6
 6186 0cb8 50050000 		.word	.LC7
 6187 0cbc 64050000 		.word	.LC8
 6188 0cc0 80050000 		.word	.LC9
 6189 0cc4 94050000 		.word	.LC10
 6190 0cc8 AC050000 		.word	.LC11
 6191 0ccc CC050000 		.word	.LC12
 6192 0cd0 E8050000 		.word	.LC13
 6193 0cd4 FC050000 		.word	.LC14
 6194 0cd8 14060000 		.word	.LC15
 6195 0cdc 38060000 		.word	.LC16
 6196 0ce0 50060000 		.word	.LC17
 6197 0ce4 64060000 		.word	.LC18
 6198 0ce8 84060000 		.word	.LC19
 6199 0cec A0060000 		.word	.LC20
 6200 0cf0 B4060000 		.word	.LC21
 6201 0cf4 CC060000 		.word	.LC22
 6202 0cf8 F0060000 		.word	.LC23
 6203 0cfc 04070000 		.word	.LC24
 6204 0d00 28070000 		.word	.LC25
 6205 0d04 4C070000 		.word	.LC26
 6206 0d08 68070000 		.word	.LC27
 6207 0d0c 7C070000 		.word	.LC28
 6208 0d10 8C070000 		.word	.LC29
 6209 0d14 A0070000 		.word	.LC30
 6210 0d18 BC070000 		.word	.LC31
 6211 0d1c D4070000 		.word	.LC32
 6212 0d20 FC070000 		.word	.LC33
 6213 0d24 18080000 		.word	.LC34
 6214 0d28 40080000 		.word	.LC35
 6215 0d2c 50080000 		.word	.LC36
 6216 0d30 60080000 		.word	.LC37
 6217 0d34 80080000 		.word	.LC38
 6218 0d38 94080000 		.word	.LC39
 6219 0d3c AC080000 		.word	.LC40
 6220 0d40 C4080000 		.word	.LC41
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 149


 6221 0d44 E4080000 		.word	.LC42
 6222 0d48 04090000 		.word	.LC43
 6223 0d4c 1C090000 		.word	.LC44
 6224 0d50 3C090000 		.word	.LC45
 6225 0d54 58090000 		.word	.LC46
 6226 0d58 74090000 		.word	.LC47
 6227 0d5c 88090000 		.word	.LC48
 6228 0d60 9C090000 		.word	.LC49
 6229 0d64 B0090000 		.word	.LC50
 6230 0d68 CC090000 		.word	.LC51
 6231 0d6c E0090000 		.word	.LC52
 6232 0d70 F8090000 		.word	.LC53
 6233 0d74 180A0000 		.word	.LC54
 6234 0d78 340A0000 		.word	.LC55
 6235 0d7c 480A0000 		.word	.LC56
 6236 0d80 680A0000 		.word	.LC57
 6237 0d84 840A0000 		.word	.LC58
 6238 0d88 980A0000 		.word	.LC59
 6239 0d8c B00A0000 		.word	.LC60
 6240 0d90 D00A0000 		.word	.LC61
 6241 0d94 E40A0000 		.word	.LC62
 6242 0d98 FC0A0000 		.word	.LC63
 6243 0d9c 140B0000 		.word	.LC64
 6244 0da0 340B0000 		.word	.LC65
 6245 0da4 540B0000 		.word	.LC66
 6246 0da8 700B0000 		.word	.LC67
 6247 0dac 8C0B0000 		.word	.LC68
 6248 0db0 AC0B0000 		.word	.LC69
 6249 0db4 C40B0000 		.word	.LC70
 6250 0db8 E00B0000 		.word	.LC71
 6251 0dbc F40B0000 		.word	.LC72
 6252 0dc0 180C0000 		.word	.LC73
 6253 0dc4 280C0000 		.word	.LC74
 6254 0dc8 500C0000 		.word	.LC75
 6255 0dcc 780C0000 		.word	.LC76
 6256              		.align	2
 6257              	.LC78:
 6258 0dd0 03       		.byte	3
 6259 0dd1 01       		.byte	1
 6260 0dd2 02       		.byte	2
 6261 0dd3 03       		.byte	3
 6262 0dd4 03       		.byte	3
 6263 0dd5 03       		.byte	3
 6264 0dd6 03       		.byte	3
 6265 0dd7 03       		.byte	3
 6266 0dd8 03       		.byte	3
 6267 0dd9 04       		.byte	4
 6268 0dda 05       		.byte	5
 6269 0ddb 06       		.byte	6
 6270 0ddc 03       		.byte	3
 6271 0ddd 07       		.byte	7
 6272 0dde 08       		.byte	8
 6273 0ddf 09       		.byte	9
 6274 0de0 03       		.byte	3
 6275 0de1 05       		.byte	5
 6276 0de2 03       		.byte	3
 6277 0de3 01       		.byte	1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 150


 6278 0de4 02       		.byte	2
 6279 0de5 03       		.byte	3
 6280 0de6 03       		.byte	3
 6281 0de7 03       		.byte	3
 6282 0de8 09       		.byte	9
 6283 0de9 03       		.byte	3
 6284 0dea 05       		.byte	5
 6285 0deb 0A       		.byte	10
 6286 0dec 03       		.byte	3
 6287 0ded 000000   		.align	2
 6288              	.LC79:
 6289 0df0 02       		.byte	2
 6290 0df1 03       		.byte	3
 6291 0df2 08       		.byte	8
 6292 0df3 0B       		.byte	11
 6293 0df4 17       		.byte	23
 6294 0df5 2C       		.byte	44
 6295 0df6 2D       		.byte	45
 6296 0df7 32       		.byte	50
 6297 0df8 35       		.byte	53
 6298 0df9 000000   		.align	2
 6299              	.LC80:
 6300 0dfc 02       		.byte	2
 6301 0dfd 03       		.byte	3
 6302 0dfe 05       		.byte	5
 6303 0dff 08       		.byte	8
 6304 0e00 0B       		.byte	11
 6305 0e01 17       		.byte	23
 6306 0e02 18       		.byte	24
 6307 0e03 1C       		.byte	28
 6308 0e04 1F       		.byte	31
 6309 0e05 20       		.byte	32
 6310 0e06 26       		.byte	38
 6311 0e07 2C       		.byte	44
 6312 0e08 2D       		.byte	45
 6313 0e09 2F       		.byte	47
 6314 0e0a 32       		.byte	50
 6315 0e0b 35       		.byte	53
 6316 0e0c 3D       		.byte	61
 6317 0e0d 47       		.byte	71
 6318              		.section	.text.manage_param_list,"ax",%progbits
 6319              		.align	2
 6320              		.global	manage_param_list
 6321              		.thumb
 6322              		.thumb_func
 6323              		.type	manage_param_list, %function
 6324              	manage_param_list:
 6325              	.LFB68:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 815:..\src/command_processing.c **** //==============================================================================
 816:..\src/command_processing.c **** 
 817:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6326              		.loc 1 817 0
 6327              		.cfi_startproc
 6328              		@ args = 0, pretend = 0, frame = 1256
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 151


 6329              		@ frame_needed = 1, uses_anonymous_args = 0
 6330 0000 B0B5     		push	{r4, r5, r7, lr}
 6331              		.cfi_def_cfa_offset 16
 6332              		.cfi_offset 4, -16
 6333              		.cfi_offset 5, -12
 6334              		.cfi_offset 7, -8
 6335              		.cfi_offset 14, -4
 6336 0002 ADF59F6D 		sub	sp, sp, #1272
 6337              		.cfi_def_cfa_offset 1288
 6338 0006 04AF     		add	r7, sp, #16
 6339              		.cfi_def_cfa 7, 1272
 6340 0008 0246     		mov	r2, r0
 6341 000a BB1D     		adds	r3, r7, #6
 6342 000c 1A80     		strh	r2, [r3]	@ movhi
 818:..\src/command_processing.c ****     uint8 CYDATA i, j;
 819:..\src/command_processing.c ****     uint8 CYDATA sod;
 820:..\src/command_processing.c ****     uint8 PARAM_IDX;
 821:..\src/command_processing.c ****     int16 aux_int16;
 822:..\src/command_processing.c ****     uint16 aux_uint16;
 823:..\src/command_processing.c ****     int32 aux_int32;
 824:..\src/command_processing.c ****     uint32 aux_uint32;
 825:..\src/command_processing.c ****     float aux_float;
 826:..\src/command_processing.c ****  
 827:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6343              		.loc 1 827 0
 6344 000e 0023     		movs	r3, #0
 6345 0010 87F8DD34 		strb	r3, [r7, #1245]
 828:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6346              		.loc 1 828 0
 6347 0014 0123     		movs	r3, #1
 6348 0016 87F8DC34 		strb	r3, [r7, #1244]
 829:..\src/command_processing.c ****     
 830:..\src/command_processing.c ****     // Arrays
 831:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6349              		.loc 1 831 0
 6350 001a 054B     		ldr	r3, .L340
 6351 001c C7F8E034 		str	r3, [r7, #1248]
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6352              		.loc 1 833 0
 6353 0020 BB1D     		adds	r3, r7, #6
 6354 0022 1B88     		ldrh	r3, [r3]
 6355 0024 002B     		cmp	r3, #0
 6356 0026 07D0     		beq	.L279
 834:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6357              		.loc 1 834 0
 6358 0028 024B     		ldr	r3, .L340+4
 6359 002a C7F8E034 		str	r3, [r7, #1248]
 6360 002e 03E0     		b	.L341
 6361              	.L342:
 6362              		.align	2
 6363              	.L340:
 6364 0030 00000000 		.word	c_mem
 6365 0034 00000000 		.word	g_mem
 6366              	.L341:
 6367              	.L279:
 835:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 152


 836:..\src/command_processing.c ****  
 837:..\src/command_processing.c ****     
 838:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 839:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6368              		.loc 1 840 0
 6369 0038 D7F8E034 		ldr	r3, [r7, #1248]
 6370 003c 03F1A002 		add	r2, r3, #160
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6371              		.loc 1 839 0
 6372 0040 07F56673 		add	r3, r7, #920
 6373 0044 1A60     		str	r2, [r3]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6374              		.loc 1 841 0
 6375 0046 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6376 004a 1346     		mov	r3, r2
 6377 004c DB00     		lsls	r3, r3, #3
 6378 004e 9B1A     		subs	r3, r3, r2
 6379 0050 1B01     		lsls	r3, r3, #4
 6380 0052 B033     		adds	r3, r3, #176
 6381 0054 D7F8E024 		ldr	r2, [r7, #1248]
 6382 0058 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6383              		.loc 1 839 0
 6384 005a 07F56673 		add	r3, r7, #920
 6385 005e 5A60     		str	r2, [r3, #4]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6386              		.loc 1 842 0
 6387 0060 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6388 0064 1346     		mov	r3, r2
 6389 0066 DB00     		lsls	r3, r3, #3
 6390 0068 9B1A     		subs	r3, r3, r2
 6391 006a 1B01     		lsls	r3, r3, #4
 6392 006c B833     		adds	r3, r3, #184
 6393 006e D7F8E024 		ldr	r2, [r7, #1248]
 6394 0072 1344     		add	r3, r3, r2
 6395 0074 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6396              		.loc 1 839 0
 6397 0076 07F56673 		add	r3, r7, #920
 6398 007a 9A60     		str	r2, [r3, #8]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6399              		.loc 1 843 0
 6400 007c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6401 0080 1346     		mov	r3, r2
 6402 0082 DB00     		lsls	r3, r3, #3
 6403 0084 9B1A     		subs	r3, r3, r2
 6404 0086 1B01     		lsls	r3, r3, #4
 6405 0088 E033     		adds	r3, r3, #224
 6406 008a D7F8E024 		ldr	r2, [r7, #1248]
 6407 008e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6408              		.loc 1 839 0
 6409 0090 07F56673 		add	r3, r7, #920
 6410 0094 DA60     		str	r2, [r3, #12]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6411              		.loc 1 844 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 153


 6412 0096 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6413 009a 1346     		mov	r3, r2
 6414 009c DB00     		lsls	r3, r3, #3
 6415 009e 9B1A     		subs	r3, r3, r2
 6416 00a0 1B01     		lsls	r3, r3, #4
 6417 00a2 03F58473 		add	r3, r3, #264
 6418 00a6 D7F8E024 		ldr	r2, [r7, #1248]
 6419 00aa 1344     		add	r3, r3, r2
 6420 00ac 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6421              		.loc 1 839 0
 6422 00ae 07F56673 		add	r3, r7, #920
 6423 00b2 1A61     		str	r2, [r3, #16]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6424              		.loc 1 845 0
 6425 00b4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6426 00b8 1346     		mov	r3, r2
 6427 00ba DB00     		lsls	r3, r3, #3
 6428 00bc 9B1A     		subs	r3, r3, r2
 6429 00be 1B01     		lsls	r3, r3, #4
 6430 00c0 03F58473 		add	r3, r3, #264
 6431 00c4 D7F8E024 		ldr	r2, [r7, #1248]
 6432 00c8 1344     		add	r3, r3, r2
 6433 00ca DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6434              		.loc 1 839 0
 6435 00cc 07F56673 		add	r3, r7, #920
 6436 00d0 5A61     		str	r2, [r3, #20]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6437              		.loc 1 846 0
 6438 00d2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6439 00d6 D7F8E014 		ldr	r1, [r7, #1248]
 6440 00da 1346     		mov	r3, r2
 6441 00dc DB00     		lsls	r3, r3, #3
 6442 00de 9B1A     		subs	r3, r3, r2
 6443 00e0 1B01     		lsls	r3, r3, #4
 6444 00e2 0B44     		add	r3, r3, r1
 6445 00e4 03F58873 		add	r3, r3, #272
 6446 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6447 00ea 1A46     		mov	r2, r3
 6448 00ec 1346     		mov	r3, r2
 6449 00ee 5B00     		lsls	r3, r3, #1
 6450 00f0 1344     		add	r3, r3, r2
 6451 00f2 1B01     		lsls	r3, r3, #4
 6452 00f4 03F5C873 		add	r3, r3, #400
 6453 00f8 D7F8E024 		ldr	r2, [r7, #1248]
 6454 00fc 1344     		add	r3, r3, r2
 6455 00fe 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6456              		.loc 1 839 0
 6457 0100 07F56673 		add	r3, r7, #920
 6458 0104 9A61     		str	r2, [r3, #24]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6459              		.loc 1 847 0
 6460 0106 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6461 010a D7F8E014 		ldr	r1, [r7, #1248]
 6462 010e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 154


 6463 0110 DB00     		lsls	r3, r3, #3
 6464 0112 9B1A     		subs	r3, r3, r2
 6465 0114 1B01     		lsls	r3, r3, #4
 6466 0116 0B44     		add	r3, r3, r1
 6467 0118 03F58873 		add	r3, r3, #272
 6468 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6469 011e 1A46     		mov	r2, r3
 6470 0120 1346     		mov	r3, r2
 6471 0122 5B00     		lsls	r3, r3, #1
 6472 0124 1344     		add	r3, r3, r2
 6473 0126 1B01     		lsls	r3, r3, #4
 6474 0128 03F5CC73 		add	r3, r3, #408
 6475 012c D7F8E024 		ldr	r2, [r7, #1248]
 6476 0130 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6477              		.loc 1 839 0
 6478 0132 07F56673 		add	r3, r7, #920
 6479 0136 DA61     		str	r2, [r3, #28]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6480              		.loc 1 848 0
 6481 0138 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6482 013c D7F8E014 		ldr	r1, [r7, #1248]
 6483 0140 1346     		mov	r3, r2
 6484 0142 DB00     		lsls	r3, r3, #3
 6485 0144 9B1A     		subs	r3, r3, r2
 6486 0146 1B01     		lsls	r3, r3, #4
 6487 0148 0B44     		add	r3, r3, r1
 6488 014a 03F58873 		add	r3, r3, #272
 6489 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6490 0150 1A46     		mov	r2, r3
 6491 0152 1346     		mov	r3, r2
 6492 0154 5B00     		lsls	r3, r3, #1
 6493 0156 1344     		add	r3, r3, r2
 6494 0158 1B01     		lsls	r3, r3, #4
 6495 015a 03F5D073 		add	r3, r3, #416
 6496 015e D7F8E024 		ldr	r2, [r7, #1248]
 6497 0162 1344     		add	r3, r3, r2
 6498 0164 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6499              		.loc 1 839 0
 6500 0166 07F56673 		add	r3, r7, #920
 6501 016a 1A62     		str	r2, [r3, #32]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6502              		.loc 1 849 0
 6503 016c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6504 0170 1346     		mov	r3, r2
 6505 0172 DB00     		lsls	r3, r3, #3
 6506 0174 9B1A     		subs	r3, r3, r2
 6507 0176 1B01     		lsls	r3, r3, #4
 6508 0178 E033     		adds	r3, r3, #224
 6509 017a D7F8E024 		ldr	r2, [r7, #1248]
 6510 017e 1344     		add	r3, r3, r2
 6511 0180 DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6512              		.loc 1 839 0
 6513 0182 07F56673 		add	r3, r7, #920
 6514 0186 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 155


 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6515              		.loc 1 850 0
 6516 0188 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6517 018c 1346     		mov	r3, r2
 6518 018e DB00     		lsls	r3, r3, #3
 6519 0190 9B1A     		subs	r3, r3, r2
 6520 0192 1B01     		lsls	r3, r3, #4
 6521 0194 E033     		adds	r3, r3, #224
 6522 0196 D7F8E024 		ldr	r2, [r7, #1248]
 6523 019a 1344     		add	r3, r3, r2
 6524 019c 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6525              		.loc 1 839 0
 6526 019e 07F56673 		add	r3, r7, #920
 6527 01a2 9A62     		str	r2, [r3, #40]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6528              		.loc 1 851 0
 6529 01a4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6530 01a8 1346     		mov	r3, r2
 6531 01aa DB00     		lsls	r3, r3, #3
 6532 01ac 9B1A     		subs	r3, r3, r2
 6533 01ae 1B01     		lsls	r3, r3, #4
 6534 01b0 E833     		adds	r3, r3, #232
 6535 01b2 D7F8E024 		ldr	r2, [r7, #1248]
 6536 01b6 1344     		add	r3, r3, r2
 6537 01b8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6538              		.loc 1 839 0
 6539 01ba 07F56673 		add	r3, r7, #920
 6540 01be DA62     		str	r2, [r3, #44]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6541              		.loc 1 852 0
 6542 01c0 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6543 01c4 1346     		mov	r3, r2
 6544 01c6 DB00     		lsls	r3, r3, #3
 6545 01c8 9B1A     		subs	r3, r3, r2
 6546 01ca 1B01     		lsls	r3, r3, #4
 6547 01cc 03F58473 		add	r3, r3, #264
 6548 01d0 D7F8E024 		ldr	r2, [r7, #1248]
 6549 01d4 1344     		add	r3, r3, r2
 6550 01d6 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6551              		.loc 1 839 0
 6552 01d8 07F56673 		add	r3, r7, #920
 6553 01dc 1A63     		str	r2, [r3, #48]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6554              		.loc 1 853 0
 6555 01de D7F8E034 		ldr	r3, [r7, #1248]
 6556 01e2 03F5F872 		add	r2, r3, #496
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6557              		.loc 1 839 0
 6558 01e6 07F56673 		add	r3, r7, #920
 6559 01ea 5A63     		str	r2, [r3, #52]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6560              		.loc 1 854 0
 6561 01ec D7F8E034 		ldr	r3, [r7, #1248]
 6562 01f0 03F2FD12 		addw	r2, r3, #509
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 156


 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6563              		.loc 1 839 0
 6564 01f4 07F56673 		add	r3, r7, #920
 6565 01f8 9A63     		str	r2, [r3, #56]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6566              		.loc 1 855 0
 6567 01fa D7F8E034 		ldr	r3, [r7, #1248]
 6568 01fe 03F5FA72 		add	r2, r3, #500
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6569              		.loc 1 839 0
 6570 0202 07F56673 		add	r3, r7, #920
 6571 0206 DA63     		str	r2, [r3, #60]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 6572              		.loc 1 856 0
 6573 0208 D7F8E034 		ldr	r3, [r7, #1248]
 6574 020c 03F5FE72 		add	r2, r3, #508
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6575              		.loc 1 839 0
 6576 0210 07F56673 		add	r3, r7, #920
 6577 0214 1A64     		str	r2, [r3, #64]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6578              		.loc 1 857 0
 6579 0216 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6580 021a D7F8E014 		ldr	r1, [r7, #1248]
 6581 021e 1346     		mov	r3, r2
 6582 0220 DB00     		lsls	r3, r3, #3
 6583 0222 9B1A     		subs	r3, r3, r2
 6584 0224 1B01     		lsls	r3, r3, #4
 6585 0226 0B44     		add	r3, r3, r1
 6586 0228 03F58873 		add	r3, r3, #272
 6587 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6588 022e 1A46     		mov	r2, r3
 6589 0230 1346     		mov	r3, r2
 6590 0232 5B00     		lsls	r3, r3, #1
 6591 0234 1344     		add	r3, r3, r2
 6592 0236 1B01     		lsls	r3, r3, #4
 6593 0238 03F5D873 		add	r3, r3, #432
 6594 023c D7F8E024 		ldr	r2, [r7, #1248]
 6595 0240 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6596              		.loc 1 839 0
 6597 0242 07F56673 		add	r3, r7, #920
 6598 0246 5A64     		str	r2, [r3, #68]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6599              		.loc 1 858 0
 6600 0248 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6601 024c D7F8E014 		ldr	r1, [r7, #1248]
 6602 0250 1346     		mov	r3, r2
 6603 0252 DB00     		lsls	r3, r3, #3
 6604 0254 9B1A     		subs	r3, r3, r2
 6605 0256 1B01     		lsls	r3, r3, #4
 6606 0258 0B44     		add	r3, r3, r1
 6607 025a 03F58873 		add	r3, r3, #272
 6608 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6609 0260 1A46     		mov	r2, r3
 6610 0262 1346     		mov	r3, r2
 6611 0264 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 157


 6612 0266 1344     		add	r3, r3, r2
 6613 0268 1B01     		lsls	r3, r3, #4
 6614 026a 03F5D873 		add	r3, r3, #432
 6615 026e D7F8E024 		ldr	r2, [r7, #1248]
 6616 0272 1344     		add	r3, r3, r2
 6617 0274 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6618              		.loc 1 839 0
 6619 0276 07F56673 		add	r3, r7, #920
 6620 027a 9A64     		str	r2, [r3, #72]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6621              		.loc 1 859 0
 6622 027c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6623 0280 1346     		mov	r3, r2
 6624 0282 DB00     		lsls	r3, r3, #3
 6625 0284 9B1A     		subs	r3, r3, r2
 6626 0286 1B01     		lsls	r3, r3, #4
 6627 0288 E033     		adds	r3, r3, #224
 6628 028a D7F8E024 		ldr	r2, [r7, #1248]
 6629 028e 1344     		add	r3, r3, r2
 6630 0290 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6631              		.loc 1 839 0
 6632 0292 07F56673 		add	r3, r7, #920
 6633 0296 DA64     		str	r2, [r3, #76]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 6634              		.loc 1 860 0
 6635 0298 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6636 029c 1346     		mov	r3, r2
 6637 029e DB00     		lsls	r3, r3, #3
 6638 02a0 9B1A     		subs	r3, r3, r2
 6639 02a2 1B01     		lsls	r3, r3, #4
 6640 02a4 F033     		adds	r3, r3, #240
 6641 02a6 D7F8E024 		ldr	r2, [r7, #1248]
 6642 02aa 1344     		add	r3, r3, r2
 6643 02ac 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6644              		.loc 1 839 0
 6645 02ae 07F56673 		add	r3, r7, #920
 6646 02b2 1A65     		str	r2, [r3, #80]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6647              		.loc 1 861 0
 6648 02b4 D7F8E034 		ldr	r3, [r7, #1248]
 6649 02b8 03F1A102 		add	r2, r3, #161
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6650              		.loc 1 839 0
 6651 02bc 07F56673 		add	r3, r7, #920
 6652 02c0 5A65     		str	r2, [r3, #84]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6653              		.loc 1 862 0
 6654 02c2 D7F8E034 		ldr	r3, [r7, #1248]
 6655 02c6 03F52872 		add	r2, r3, #672
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6656              		.loc 1 839 0
 6657 02ca 07F56673 		add	r3, r7, #920
 6658 02ce 9A65     		str	r2, [r3, #88]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 158


 6659              		.loc 1 863 0
 6660 02d0 D7F8E034 		ldr	r3, [r7, #1248]
 6661 02d4 03F52972 		add	r2, r3, #676
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6662              		.loc 1 839 0
 6663 02d8 07F56673 		add	r3, r7, #920
 6664 02dc DA65     		str	r2, [r3, #92]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6665              		.loc 1 864 0
 6666 02de D7F8E034 		ldr	r3, [r7, #1248]
 6667 02e2 03F52A72 		add	r2, r3, #680
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6668              		.loc 1 839 0
 6669 02e6 07F56673 		add	r3, r7, #920
 6670 02ea 1A66     		str	r2, [r3, #96]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 6671              		.loc 1 865 0
 6672 02ec D7F8E034 		ldr	r3, [r7, #1248]
 6673 02f0 03F52B72 		add	r2, r3, #684
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6674              		.loc 1 839 0
 6675 02f4 07F56673 		add	r3, r7, #920
 6676 02f8 5A66     		str	r2, [r3, #100]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 6677              		.loc 1 866 0
 6678 02fa D7F8E034 		ldr	r3, [r7, #1248]
 6679 02fe 03F5FF72 		add	r2, r3, #510
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6680              		.loc 1 839 0
 6681 0302 07F56673 		add	r3, r7, #920
 6682 0306 9A66     		str	r2, [r3, #104]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 6683              		.loc 1 867 0
 6684 0308 D7F8E034 		ldr	r3, [r7, #1248]
 6685 030c 03F1A702 		add	r2, r3, #167
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6686              		.loc 1 839 0
 6687 0310 07F56673 		add	r3, r7, #920
 6688 0314 DA66     		str	r2, [r3, #108]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 6689              		.loc 1 868 0
 6690 0316 D7F8E034 		ldr	r3, [r7, #1248]
 6691 031a 03F50072 		add	r2, r3, #512
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6692              		.loc 1 839 0
 6693 031e 07F56673 		add	r3, r7, #920
 6694 0322 1A67     		str	r2, [r3, #112]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 6695              		.loc 1 869 0
 6696 0324 D7F8E034 		ldr	r3, [r7, #1248]
 6697 0328 03F22622 		addw	r2, r3, #550
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6698              		.loc 1 839 0
 6699 032c 07F56673 		add	r3, r7, #920
 6700 0330 5A67     		str	r2, [r3, #116]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 6701              		.loc 1 870 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 159


 6702 0332 D7F8E034 		ldr	r3, [r7, #1248]
 6703 0336 03F1A802 		add	r2, r3, #168
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6704              		.loc 1 839 0
 6705 033a 07F56673 		add	r3, r7, #920
 6706 033e 9A67     		str	r2, [r3, #120]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 6707              		.loc 1 871 0
 6708 0340 D7F8E034 		ldr	r3, [r7, #1248]
 6709 0344 03F50872 		add	r2, r3, #544
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6710              		.loc 1 839 0
 6711 0348 07F56673 		add	r3, r7, #920
 6712 034c DA67     		str	r2, [r3, #124]
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 6713              		.loc 1 872 0
 6714 034e D7F8E034 		ldr	r3, [r7, #1248]
 6715 0352 03F20122 		addw	r2, r3, #513
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6716              		.loc 1 839 0
 6717 0356 07F56673 		add	r3, r7, #920
 6718 035a C3F88020 		str	r2, [r3, #128]
 873:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 6719              		.loc 1 873 0
 6720 035e D7F8E034 		ldr	r3, [r7, #1248]
 6721 0362 03F20222 		addw	r2, r3, #514
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6722              		.loc 1 839 0
 6723 0366 07F56673 		add	r3, r7, #920
 6724 036a C3F88420 		str	r2, [r3, #132]
 874:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 6725              		.loc 1 874 0
 6726 036e D7F8E034 		ldr	r3, [r7, #1248]
 6727 0372 03F1AB02 		add	r2, r3, #171
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6728              		.loc 1 839 0
 6729 0376 07F56673 		add	r3, r7, #920
 6730 037a C3F88820 		str	r2, [r3, #136]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 6731              		.loc 1 875 0
 6732 037e D7F8E034 		ldr	r3, [r7, #1248]
 6733 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 6734 0386 1233     		adds	r3, r3, #18
 6735 0388 5B01     		lsls	r3, r3, #5
 6736 038a D7F8E024 		ldr	r2, [r7, #1248]
 6737 038e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6738              		.loc 1 839 0
 6739 0390 07F56673 		add	r3, r7, #920
 6740 0394 C3F88C20 		str	r2, [r3, #140]
 876:..\src/command_processing.c ****         
 877:..\src/command_processing.c ****         // GENERIC PARAMS
 878:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 6741              		.loc 1 878 0
 6742 0398 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6743 039c 1346     		mov	r3, r2
 6744 039e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 160


 6745 03a0 9B1A     		subs	r3, r3, r2
 6746 03a2 1B01     		lsls	r3, r3, #4
 6747 03a4 03F58873 		add	r3, r3, #272
 6748 03a8 D7F8E024 		ldr	r2, [r7, #1248]
 6749 03ac 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6750              		.loc 1 839 0
 6751 03ae 07F56673 		add	r3, r7, #920
 6752 03b2 C3F89020 		str	r2, [r3, #144]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 6753              		.loc 1 879 0
 6754 03b6 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6755 03ba 1346     		mov	r3, r2
 6756 03bc DB00     		lsls	r3, r3, #3
 6757 03be 9B1A     		subs	r3, r3, r2
 6758 03c0 1B01     		lsls	r3, r3, #4
 6759 03c2 E033     		adds	r3, r3, #224
 6760 03c4 D7F8E024 		ldr	r2, [r7, #1248]
 6761 03c8 1344     		add	r3, r3, r2
 6762 03ca 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6763              		.loc 1 839 0
 6764 03cc 07F56673 		add	r3, r7, #920
 6765 03d0 C3F89420 		str	r2, [r3, #148]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 6766              		.loc 1 880 0
 6767 03d4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6768 03d8 1346     		mov	r3, r2
 6769 03da DB00     		lsls	r3, r3, #3
 6770 03dc 9B1A     		subs	r3, r3, r2
 6771 03de 1B01     		lsls	r3, r3, #4
 6772 03e0 03F58873 		add	r3, r3, #272
 6773 03e4 D7F8E024 		ldr	r2, [r7, #1248]
 6774 03e8 1344     		add	r3, r3, r2
 6775 03ea 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6776              		.loc 1 839 0
 6777 03ec 07F56673 		add	r3, r7, #920
 6778 03f0 C3F89820 		str	r2, [r3, #152]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 6779              		.loc 1 881 0
 6780 03f4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6781 03f8 1346     		mov	r3, r2
 6782 03fa DB00     		lsls	r3, r3, #3
 6783 03fc 9B1A     		subs	r3, r3, r2
 6784 03fe 1B01     		lsls	r3, r3, #4
 6785 0400 03F58873 		add	r3, r3, #272
 6786 0404 D7F8E024 		ldr	r2, [r7, #1248]
 6787 0408 1344     		add	r3, r3, r2
 6788 040a 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6789              		.loc 1 839 0
 6790 040c 07F56673 		add	r3, r7, #920
 6791 0410 C3F89C20 		str	r2, [r3, #156]
 882:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6792              		.loc 1 882 0
 6793 0414 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 161


 6794 0418 D7F8E014 		ldr	r1, [r7, #1248]
 6795 041c 1346     		mov	r3, r2
 6796 041e DB00     		lsls	r3, r3, #3
 6797 0420 9B1A     		subs	r3, r3, r2
 6798 0422 1B01     		lsls	r3, r3, #4
 6799 0424 0B44     		add	r3, r3, r1
 6800 0426 03F58873 		add	r3, r3, #272
 6801 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6802 042c 1A46     		mov	r2, r3
 6803 042e 1346     		mov	r3, r2
 6804 0430 5B00     		lsls	r3, r3, #1
 6805 0432 1344     		add	r3, r3, r2
 6806 0434 1B01     		lsls	r3, r3, #4
 6807 0436 03F5D873 		add	r3, r3, #432
 6808 043a D7F8E024 		ldr	r2, [r7, #1248]
 6809 043e 1344     		add	r3, r3, r2
 6810 0440 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6811              		.loc 1 839 0
 6812 0442 07F56673 		add	r3, r7, #920
 6813 0446 C3F8A020 		str	r2, [r3, #160]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 6814              		.loc 1 883 0
 6815 044a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6816 044e D7F8E014 		ldr	r1, [r7, #1248]
 6817 0452 1346     		mov	r3, r2
 6818 0454 DB00     		lsls	r3, r3, #3
 6819 0456 9B1A     		subs	r3, r3, r2
 6820 0458 1B01     		lsls	r3, r3, #4
 6821 045a 0B44     		add	r3, r3, r1
 6822 045c 03F58873 		add	r3, r3, #272
 6823 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6824 0462 1A46     		mov	r2, r3
 6825 0464 1346     		mov	r3, r2
 6826 0466 5B00     		lsls	r3, r3, #1
 6827 0468 1344     		add	r3, r3, r2
 6828 046a 1B01     		lsls	r3, r3, #4
 6829 046c 03F5D873 		add	r3, r3, #432
 6830 0470 D7F8E024 		ldr	r2, [r7, #1248]
 6831 0474 1344     		add	r3, r3, r2
 6832 0476 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6833              		.loc 1 839 0
 6834 0478 07F56673 		add	r3, r7, #920
 6835 047c C3F8A420 		str	r2, [r3, #164]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6836              		.loc 1 884 0
 6837 0480 D7F8E034 		ldr	r3, [r7, #1248]
 6838 0484 03F1A902 		add	r2, r3, #169
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6839              		.loc 1 839 0
 6840 0488 07F56673 		add	r3, r7, #920
 6841 048c C3F8A820 		str	r2, [r3, #168]
 885:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6842              		.loc 1 885 0
 6843 0490 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6844 0494 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 162


 6845 0496 DB00     		lsls	r3, r3, #3
 6846 0498 9B1A     		subs	r3, r3, r2
 6847 049a 1B01     		lsls	r3, r3, #4
 6848 049c B033     		adds	r3, r3, #176
 6849 049e D7F8E024 		ldr	r2, [r7, #1248]
 6850 04a2 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 839 0
 6852 04a4 07F56673 		add	r3, r7, #920
 6853 04a8 C3F8AC20 		str	r2, [r3, #172]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6854              		.loc 1 886 0
 6855 04ac 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6856 04b0 1346     		mov	r3, r2
 6857 04b2 DB00     		lsls	r3, r3, #3
 6858 04b4 9B1A     		subs	r3, r3, r2
 6859 04b6 1B01     		lsls	r3, r3, #4
 6860 04b8 B833     		adds	r3, r3, #184
 6861 04ba D7F8E024 		ldr	r2, [r7, #1248]
 6862 04be 1344     		add	r3, r3, r2
 6863 04c0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6864              		.loc 1 839 0
 6865 04c2 07F56673 		add	r3, r7, #920
 6866 04c6 C3F8B020 		str	r2, [r3, #176]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6867              		.loc 1 887 0
 6868 04ca 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6869 04ce 1346     		mov	r3, r2
 6870 04d0 DB00     		lsls	r3, r3, #3
 6871 04d2 9B1A     		subs	r3, r3, r2
 6872 04d4 1B01     		lsls	r3, r3, #4
 6873 04d6 E033     		adds	r3, r3, #224
 6874 04d8 D7F8E024 		ldr	r2, [r7, #1248]
 6875 04dc 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6876              		.loc 1 839 0
 6877 04de 07F56673 		add	r3, r7, #920
 6878 04e2 C3F8B420 		str	r2, [r3, #180]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6879              		.loc 1 888 0
 6880 04e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6881 04ea 1346     		mov	r3, r2
 6882 04ec DB00     		lsls	r3, r3, #3
 6883 04ee 9B1A     		subs	r3, r3, r2
 6884 04f0 1B01     		lsls	r3, r3, #4
 6885 04f2 03F58473 		add	r3, r3, #264
 6886 04f6 D7F8E024 		ldr	r2, [r7, #1248]
 6887 04fa 1344     		add	r3, r3, r2
 6888 04fc 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6889              		.loc 1 839 0
 6890 04fe 07F56673 		add	r3, r7, #920
 6891 0502 C3F8B820 		str	r2, [r3, #184]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6892              		.loc 1 889 0
 6893 0506 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 163


 6894 050a 1346     		mov	r3, r2
 6895 050c DB00     		lsls	r3, r3, #3
 6896 050e 9B1A     		subs	r3, r3, r2
 6897 0510 1B01     		lsls	r3, r3, #4
 6898 0512 03F58473 		add	r3, r3, #264
 6899 0516 D7F8E024 		ldr	r2, [r7, #1248]
 6900 051a 1344     		add	r3, r3, r2
 6901 051c DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6902              		.loc 1 839 0
 6903 051e 07F56673 		add	r3, r7, #920
 6904 0522 C3F8BC20 		str	r2, [r3, #188]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6905              		.loc 1 890 0
 6906 0526 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6907 052a D7F8E014 		ldr	r1, [r7, #1248]
 6908 052e 1346     		mov	r3, r2
 6909 0530 DB00     		lsls	r3, r3, #3
 6910 0532 9B1A     		subs	r3, r3, r2
 6911 0534 1B01     		lsls	r3, r3, #4
 6912 0536 0B44     		add	r3, r3, r1
 6913 0538 03F58873 		add	r3, r3, #272
 6914 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6915 053e 1A46     		mov	r2, r3
 6916 0540 1346     		mov	r3, r2
 6917 0542 5B00     		lsls	r3, r3, #1
 6918 0544 1344     		add	r3, r3, r2
 6919 0546 1B01     		lsls	r3, r3, #4
 6920 0548 03F5C873 		add	r3, r3, #400
 6921 054c D7F8E024 		ldr	r2, [r7, #1248]
 6922 0550 1344     		add	r3, r3, r2
 6923 0552 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6924              		.loc 1 839 0
 6925 0554 07F56673 		add	r3, r7, #920
 6926 0558 C3F8C020 		str	r2, [r3, #192]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6927              		.loc 1 891 0
 6928 055c 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6929 0560 D7F8E014 		ldr	r1, [r7, #1248]
 6930 0564 1346     		mov	r3, r2
 6931 0566 DB00     		lsls	r3, r3, #3
 6932 0568 9B1A     		subs	r3, r3, r2
 6933 056a 1B01     		lsls	r3, r3, #4
 6934 056c 0B44     		add	r3, r3, r1
 6935 056e 03F58873 		add	r3, r3, #272
 6936 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6937 0574 1A46     		mov	r2, r3
 6938 0576 1346     		mov	r3, r2
 6939 0578 5B00     		lsls	r3, r3, #1
 6940 057a 1344     		add	r3, r3, r2
 6941 057c 1B01     		lsls	r3, r3, #4
 6942 057e 03F5CC73 		add	r3, r3, #408
 6943 0582 D7F8E024 		ldr	r2, [r7, #1248]
 6944 0586 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6945              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 164


 6946 0588 07F56673 		add	r3, r7, #920
 6947 058c C3F8C420 		str	r2, [r3, #196]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6948              		.loc 1 892 0
 6949 0590 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6950 0594 D7F8E014 		ldr	r1, [r7, #1248]
 6951 0598 1346     		mov	r3, r2
 6952 059a DB00     		lsls	r3, r3, #3
 6953 059c 9B1A     		subs	r3, r3, r2
 6954 059e 1B01     		lsls	r3, r3, #4
 6955 05a0 0B44     		add	r3, r3, r1
 6956 05a2 03F58873 		add	r3, r3, #272
 6957 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6958 05a8 1A46     		mov	r2, r3
 6959 05aa 1346     		mov	r3, r2
 6960 05ac 5B00     		lsls	r3, r3, #1
 6961 05ae 1344     		add	r3, r3, r2
 6962 05b0 1B01     		lsls	r3, r3, #4
 6963 05b2 03F5D073 		add	r3, r3, #416
 6964 05b6 D7F8E024 		ldr	r2, [r7, #1248]
 6965 05ba 1344     		add	r3, r3, r2
 6966 05bc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6967              		.loc 1 839 0
 6968 05be 07F56673 		add	r3, r7, #920
 6969 05c2 C3F8C820 		str	r2, [r3, #200]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6970              		.loc 1 893 0
 6971 05c6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6972 05ca 1346     		mov	r3, r2
 6973 05cc DB00     		lsls	r3, r3, #3
 6974 05ce 9B1A     		subs	r3, r3, r2
 6975 05d0 1B01     		lsls	r3, r3, #4
 6976 05d2 E033     		adds	r3, r3, #224
 6977 05d4 D7F8E024 		ldr	r2, [r7, #1248]
 6978 05d8 1344     		add	r3, r3, r2
 6979 05da DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6980              		.loc 1 839 0
 6981 05dc 07F56673 		add	r3, r7, #920
 6982 05e0 C3F8CC20 		str	r2, [r3, #204]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6983              		.loc 1 894 0
 6984 05e4 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6985 05e8 1346     		mov	r3, r2
 6986 05ea DB00     		lsls	r3, r3, #3
 6987 05ec 9B1A     		subs	r3, r3, r2
 6988 05ee 1B01     		lsls	r3, r3, #4
 6989 05f0 E033     		adds	r3, r3, #224
 6990 05f2 D7F8E024 		ldr	r2, [r7, #1248]
 6991 05f6 1344     		add	r3, r3, r2
 6992 05f8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6993              		.loc 1 839 0
 6994 05fa 07F56673 		add	r3, r7, #920
 6995 05fe C3F8D020 		str	r2, [r3, #208]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 165


 6996              		.loc 1 895 0
 6997 0602 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6998 0606 1346     		mov	r3, r2
 6999 0608 DB00     		lsls	r3, r3, #3
 7000 060a 9B1A     		subs	r3, r3, r2
 7001 060c 1B01     		lsls	r3, r3, #4
 7002 060e E833     		adds	r3, r3, #232
 7003 0610 D7F8E024 		ldr	r2, [r7, #1248]
 7004 0614 1344     		add	r3, r3, r2
 7005 0616 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7006              		.loc 1 839 0
 7007 0618 07F56673 		add	r3, r7, #920
 7008 061c C3F8D420 		str	r2, [r3, #212]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7009              		.loc 1 896 0
 7010 0620 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7011 0624 1346     		mov	r3, r2
 7012 0626 DB00     		lsls	r3, r3, #3
 7013 0628 9B1A     		subs	r3, r3, r2
 7014 062a 1B01     		lsls	r3, r3, #4
 7015 062c 03F58473 		add	r3, r3, #264
 7016 0630 D7F8E024 		ldr	r2, [r7, #1248]
 7017 0634 1344     		add	r3, r3, r2
 7018 0636 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7019              		.loc 1 839 0
 7020 0638 07F56673 		add	r3, r7, #920
 7021 063c C3F8D820 		str	r2, [r3, #216]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7022              		.loc 1 897 0
 7023 0640 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7024 0644 D7F8E014 		ldr	r1, [r7, #1248]
 7025 0648 1346     		mov	r3, r2
 7026 064a DB00     		lsls	r3, r3, #3
 7027 064c 9B1A     		subs	r3, r3, r2
 7028 064e 1B01     		lsls	r3, r3, #4
 7029 0650 0B44     		add	r3, r3, r1
 7030 0652 03F58873 		add	r3, r3, #272
 7031 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7032 0658 1A46     		mov	r2, r3
 7033 065a 1346     		mov	r3, r2
 7034 065c 5B00     		lsls	r3, r3, #1
 7035 065e 1344     		add	r3, r3, r2
 7036 0660 1B01     		lsls	r3, r3, #4
 7037 0662 03F5D873 		add	r3, r3, #432
 7038 0666 D7F8E024 		ldr	r2, [r7, #1248]
 7039 066a 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7040              		.loc 1 839 0
 7041 066c 07F56673 		add	r3, r7, #920
 7042 0670 C3F8DC20 		str	r2, [r3, #220]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7043              		.loc 1 898 0
 7044 0674 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7045 0678 D7F8E014 		ldr	r1, [r7, #1248]
 7046 067c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 166


 7047 067e DB00     		lsls	r3, r3, #3
 7048 0680 9B1A     		subs	r3, r3, r2
 7049 0682 1B01     		lsls	r3, r3, #4
 7050 0684 0B44     		add	r3, r3, r1
 7051 0686 03F58873 		add	r3, r3, #272
 7052 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7053 068c 1A46     		mov	r2, r3
 7054 068e 1346     		mov	r3, r2
 7055 0690 5B00     		lsls	r3, r3, #1
 7056 0692 1344     		add	r3, r3, r2
 7057 0694 1B01     		lsls	r3, r3, #4
 7058 0696 03F5D873 		add	r3, r3, #432
 7059 069a D7F8E024 		ldr	r2, [r7, #1248]
 7060 069e 1344     		add	r3, r3, r2
 7061 06a0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7062              		.loc 1 839 0
 7063 06a2 07F56673 		add	r3, r7, #920
 7064 06a6 C3F8E020 		str	r2, [r3, #224]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7065              		.loc 1 899 0
 7066 06aa 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7067 06ae 1346     		mov	r3, r2
 7068 06b0 DB00     		lsls	r3, r3, #3
 7069 06b2 9B1A     		subs	r3, r3, r2
 7070 06b4 1B01     		lsls	r3, r3, #4
 7071 06b6 E033     		adds	r3, r3, #224
 7072 06b8 D7F8E024 		ldr	r2, [r7, #1248]
 7073 06bc 1344     		add	r3, r3, r2
 7074 06be 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7075              		.loc 1 839 0
 7076 06c0 07F56673 		add	r3, r7, #920
 7077 06c4 C3F8E420 		str	r2, [r3, #228]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7078              		.loc 1 900 0
 7079 06c8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7080 06cc 1346     		mov	r3, r2
 7081 06ce DB00     		lsls	r3, r3, #3
 7082 06d0 9B1A     		subs	r3, r3, r2
 7083 06d2 1B01     		lsls	r3, r3, #4
 7084 06d4 F033     		adds	r3, r3, #240
 7085 06d6 D7F8E024 		ldr	r2, [r7, #1248]
 7086 06da 1344     		add	r3, r3, r2
 7087 06dc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7088              		.loc 1 839 0
 7089 06de 07F56673 		add	r3, r7, #920
 7090 06e2 C3F8E820 		str	r2, [r3, #232]
 901:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7091              		.loc 1 901 0
 7092 06e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7093 06ea 1346     		mov	r3, r2
 7094 06ec DB00     		lsls	r3, r3, #3
 7095 06ee 9B1A     		subs	r3, r3, r2
 7096 06f0 1B01     		lsls	r3, r3, #4
 7097 06f2 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 167


 7098 06f6 D7F8E024 		ldr	r2, [r7, #1248]
 7099 06fa 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7100              		.loc 1 839 0
 7101 06fc 07F56673 		add	r3, r7, #920
 7102 0700 C3F8EC20 		str	r2, [r3, #236]
 902:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7103              		.loc 1 902 0
 7104 0704 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7105 0708 1346     		mov	r3, r2
 7106 070a DB00     		lsls	r3, r3, #3
 7107 070c 9B1A     		subs	r3, r3, r2
 7108 070e 1B01     		lsls	r3, r3, #4
 7109 0710 E033     		adds	r3, r3, #224
 7110 0712 D7F8E024 		ldr	r2, [r7, #1248]
 7111 0716 1344     		add	r3, r3, r2
 7112 0718 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7113              		.loc 1 839 0
 7114 071a 07F56673 		add	r3, r7, #920
 7115 071e C3F8F020 		str	r2, [r3, #240]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7116              		.loc 1 903 0
 7117 0722 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7118 0726 1346     		mov	r3, r2
 7119 0728 DB00     		lsls	r3, r3, #3
 7120 072a 9B1A     		subs	r3, r3, r2
 7121 072c 1B01     		lsls	r3, r3, #4
 7122 072e 03F58873 		add	r3, r3, #272
 7123 0732 D7F8E024 		ldr	r2, [r7, #1248]
 7124 0736 1344     		add	r3, r3, r2
 7125 0738 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7126              		.loc 1 839 0
 7127 073a 07F56673 		add	r3, r7, #920
 7128 073e C3F8F420 		str	r2, [r3, #244]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7129              		.loc 1 904 0
 7130 0742 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7131 0746 1346     		mov	r3, r2
 7132 0748 DB00     		lsls	r3, r3, #3
 7133 074a 9B1A     		subs	r3, r3, r2
 7134 074c 1B01     		lsls	r3, r3, #4
 7135 074e 03F58873 		add	r3, r3, #272
 7136 0752 D7F8E024 		ldr	r2, [r7, #1248]
 7137 0756 1344     		add	r3, r3, r2
 7138 0758 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7139              		.loc 1 839 0
 7140 075a 07F56673 		add	r3, r7, #920
 7141 075e C3F8F820 		str	r2, [r3, #248]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7142              		.loc 1 905 0
 7143 0762 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7144 0766 D7F8E014 		ldr	r1, [r7, #1248]
 7145 076a 1346     		mov	r3, r2
 7146 076c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 168


 7147 076e 9B1A     		subs	r3, r3, r2
 7148 0770 1B01     		lsls	r3, r3, #4
 7149 0772 0B44     		add	r3, r3, r1
 7150 0774 03F58873 		add	r3, r3, #272
 7151 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7152 077a 1A46     		mov	r2, r3
 7153 077c 1346     		mov	r3, r2
 7154 077e 5B00     		lsls	r3, r3, #1
 7155 0780 1344     		add	r3, r3, r2
 7156 0782 1B01     		lsls	r3, r3, #4
 7157 0784 03F5D873 		add	r3, r3, #432
 7158 0788 D7F8E024 		ldr	r2, [r7, #1248]
 7159 078c 1344     		add	r3, r3, r2
 7160 078e 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7161              		.loc 1 839 0
 7162 0790 07F56673 		add	r3, r7, #920
 7163 0794 C3F8FC20 		str	r2, [r3, #252]
 906:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7164              		.loc 1 906 0
 7165 0798 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7166 079c D7F8E014 		ldr	r1, [r7, #1248]
 7167 07a0 1346     		mov	r3, r2
 7168 07a2 DB00     		lsls	r3, r3, #3
 7169 07a4 9B1A     		subs	r3, r3, r2
 7170 07a6 1B01     		lsls	r3, r3, #4
 7171 07a8 0B44     		add	r3, r3, r1
 7172 07aa 03F58873 		add	r3, r3, #272
 7173 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7174 07b0 1A46     		mov	r2, r3
 7175 07b2 1346     		mov	r3, r2
 7176 07b4 5B00     		lsls	r3, r3, #1
 7177 07b6 1344     		add	r3, r3, r2
 7178 07b8 1B01     		lsls	r3, r3, #4
 7179 07ba 03F5D873 		add	r3, r3, #432
 7180 07be D7F8E024 		ldr	r2, [r7, #1248]
 7181 07c2 1344     		add	r3, r3, r2
 7182 07c4 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7183              		.loc 1 839 0
 7184 07c6 07F56673 		add	r3, r7, #920
 7185 07ca C3F80021 		str	r2, [r3, #256]
 907:..\src/command_processing.c ****         
 908:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7186              		.loc 1 908 0
 7187 07ce D7F8E034 		ldr	r3, [r7, #1248]
 7188 07d2 03F5C872 		add	r2, r3, #400
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7189              		.loc 1 839 0
 7190 07d6 07F56673 		add	r3, r7, #920
 7191 07da C3F80421 		str	r2, [r3, #260]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7192              		.loc 1 909 0
 7193 07de D7F8E034 		ldr	r3, [r7, #1248]
 7194 07e2 03F5E072 		add	r2, r3, #448
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7195              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 169


 7196 07e6 07F56673 		add	r3, r7, #920
 7197 07ea C3F80821 		str	r2, [r3, #264]
 910:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7198              		.loc 1 910 0
 7199 07ee D7F8E034 		ldr	r3, [r7, #1248]
 7200 07f2 03F22722 		addw	r2, r3, #551
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7201              		.loc 1 839 0
 7202 07f6 07F56673 		add	r3, r7, #920
 7203 07fa C3F80C21 		str	r2, [r3, #268]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7204              		.loc 1 911 0
 7205 07fe D7F8E034 		ldr	r3, [r7, #1248]
 7206 0802 03F50A72 		add	r2, r3, #552
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7207              		.loc 1 839 0
 7208 0806 07F56673 		add	r3, r7, #920
 7209 080a C3F81021 		str	r2, [r3, #272]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 7210              		.loc 1 912 0
 7211 080e D7F8E034 		ldr	r3, [r7, #1248]
 7212 0812 03F22E22 		addw	r2, r3, #558
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7213              		.loc 1 839 0
 7214 0816 07F56673 		add	r3, r7, #920
 7215 081a C3F81421 		str	r2, [r3, #276]
 913:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7216              		.loc 1 913 0
 7217 081e D7F8E034 		ldr	r3, [r7, #1248]
 7218 0822 03F1AC02 		add	r2, r3, #172
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7219              		.loc 1 839 0
 7220 0826 07F56673 		add	r3, r7, #920
 7221 082a C3F81821 		str	r2, [r3, #280]
 914:..\src/command_processing.c ****         
 915:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7222              		.loc 1 915 0
 7223 082e D7F8E034 		ldr	r3, [r7, #1248]
 7224 0832 03F52C72 		add	r2, r3, #688
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7225              		.loc 1 839 0
 7226 0836 07F56673 		add	r3, r7, #920
 7227 083a C3F81C21 		str	r2, [r3, #284]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7228              		.loc 1 916 0
 7229 083e D7F8E034 		ldr	r3, [r7, #1248]
 7230 0842 03F2B122 		addw	r2, r3, #689
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7231              		.loc 1 839 0
 7232 0846 07F56673 		add	r3, r7, #920
 7233 084a C3F82021 		str	r2, [r3, #288]
 917:..\src/command_processing.c ****         
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7234              		.loc 1 918 0
 7235 084e D7F8E034 		ldr	r3, [r7, #1248]
 7236 0852 03F53072 		add	r2, r3, #704
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 170


 7237              		.loc 1 839 0
 7238 0856 07F56673 		add	r3, r7, #920
 7239 085a C3F82421 		str	r2, [r3, #292]
 919:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7240              		.loc 1 919 0
 7241 085e D7F8E034 		ldr	r3, [r7, #1248]
 7242 0862 03F53172 		add	r2, r3, #708
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 839 0
 7244 0866 07F56673 		add	r3, r7, #920
 7245 086a C3F82821 		str	r2, [r3, #296]
 920:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7246              		.loc 1 920 0
 7247 086e D7F8E034 		ldr	r3, [r7, #1248]
 7248 0872 03F53272 		add	r2, r3, #712
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7249              		.loc 1 839 0
 7250 0876 07F56673 		add	r3, r7, #920
 7251 087a C3F82C21 		str	r2, [r3, #300]
 921:..\src/command_processing.c ****     };
 922:..\src/command_processing.c ****     
 923:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7252              		.loc 1 923 0
 7253 087e 07F55373 		add	r3, r7, #844
 7254 0882 F44A     		ldr	r2, .L343
 7255 0884 1846     		mov	r0, r3
 7256 0886 1146     		mov	r1, r2
 7257 0888 4C23     		movs	r3, #76
 7258 088a 1A46     		mov	r2, r3
 7259 088c FFF7FEFF 		bl	memcpy
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 925:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 926:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 927:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 928:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 929:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 931:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 932:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 933:..\src/command_processing.c ****         
 934:..\src/command_processing.c ****         // GENERIC PARAMS
 935:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 936:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 937:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 938:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 939:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 940:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 941:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 942:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 943:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG,
 944:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT      
 945:..\src/command_processing.c ****     };
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7260              		.loc 1 947 0
 7261 0890 07F54073 		add	r3, r7, #768
 7262 0894 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 171


 7263 0896 1A70     		strb	r2, [r3]
 7264 0898 07F54073 		add	r3, r7, #768
 7265 089c 0322     		movs	r2, #3
 7266 089e 5A70     		strb	r2, [r3, #1]
 7267 08a0 07F54073 		add	r3, r7, #768
 7268 08a4 0322     		movs	r2, #3
 7269 08a6 9A70     		strb	r2, [r3, #2]
 7270 08a8 07F54073 		add	r3, r7, #768
 7271 08ac 0122     		movs	r2, #1
 7272 08ae DA70     		strb	r2, [r3, #3]
 7273 08b0 07F54073 		add	r3, r7, #768
 7274 08b4 0122     		movs	r2, #1
 7275 08b6 1A71     		strb	r2, [r3, #4]
 7276 08b8 07F54073 		add	r3, r7, #768
 7277 08bc 0122     		movs	r2, #1
 7278 08be 5A71     		strb	r2, [r3, #5]
 7279 08c0 07F54073 		add	r3, r7, #768
 7280 08c4 0322     		movs	r2, #3
 7281 08c6 9A71     		strb	r2, [r3, #6]
 7282 08c8 07F54073 		add	r3, r7, #768
 7283 08cc 0322     		movs	r2, #3
 7284 08ce DA71     		strb	r2, [r3, #7]
 7285 08d0 07F54073 		add	r3, r7, #768
 7286 08d4 0322     		movs	r2, #3
 7287 08d6 1A72     		strb	r2, [r3, #8]
 7288 08d8 07F54073 		add	r3, r7, #768
 7289 08dc 0122     		movs	r2, #1
 7290 08de 5A72     		strb	r2, [r3, #9]
 7291 08e0 07F54073 		add	r3, r7, #768
 7292 08e4 0222     		movs	r2, #2
 7293 08e6 9A72     		strb	r2, [r3, #10]
 7294 08e8 07F54073 		add	r3, r7, #768
 7295 08ec 0222     		movs	r2, #2
 7296 08ee DA72     		strb	r2, [r3, #11]
 7297 08f0 07F54073 		add	r3, r7, #768
 7298 08f4 0122     		movs	r2, #1
 7299 08f6 1A73     		strb	r2, [r3, #12]
 7300 08f8 07F54073 		add	r3, r7, #768
 7301 08fc 0222     		movs	r2, #2
 7302 08fe 5A73     		strb	r2, [r3, #13]
 7303 0900 07F54073 		add	r3, r7, #768
 7304 0904 0122     		movs	r2, #1
 7305 0906 9A73     		strb	r2, [r3, #14]
 7306 0908 07F54073 		add	r3, r7, #768
 7307 090c 0222     		movs	r2, #2
 7308 090e DA73     		strb	r2, [r3, #15]
 7309 0910 07F54073 		add	r3, r7, #768
 7310 0914 0122     		movs	r2, #1
 7311 0916 1A74     		strb	r2, [r3, #16]
 7312 0918 07F54073 		add	r3, r7, #768
 7313 091c 0122     		movs	r2, #1
 7314 091e 5A74     		strb	r2, [r3, #17]
 7315 0920 07F54073 		add	r3, r7, #768
 7316 0924 0122     		movs	r2, #1
 7317 0926 9A74     		strb	r2, [r3, #18]
 7318 0928 07F54073 		add	r3, r7, #768
 7319 092c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 172


 7320 092e DA74     		strb	r2, [r3, #19]
 7321 0930 07F54073 		add	r3, r7, #768
 7322 0934 0622     		movs	r2, #6
 7323 0936 1A75     		strb	r2, [r3, #20]
 7324 0938 07F54073 		add	r3, r7, #768
 7325 093c 0322     		movs	r2, #3
 7326 093e 5A75     		strb	r2, [r3, #21]
 7327 0940 07F54073 		add	r3, r7, #768
 7328 0944 0122     		movs	r2, #1
 7329 0946 9A75     		strb	r2, [r3, #22]
 7330 0948 07F54073 		add	r3, r7, #768
 7331 094c 0122     		movs	r2, #1
 7332 094e DA75     		strb	r2, [r3, #23]
 7333 0950 07F54073 		add	r3, r7, #768
 7334 0954 0122     		movs	r2, #1
 7335 0956 1A76     		strb	r2, [r3, #24]
 7336 0958 07F54073 		add	r3, r7, #768
 7337 095c 0122     		movs	r2, #1
 7338 095e 5A76     		strb	r2, [r3, #25]
 7339 0960 07F54073 		add	r3, r7, #768
 7340 0964 0122     		movs	r2, #1
 7341 0966 9A76     		strb	r2, [r3, #26]
 7342 0968 07F54073 		add	r3, r7, #768
 7343 096c 0122     		movs	r2, #1
 7344 096e DA76     		strb	r2, [r3, #27]
 7345 0970 07F54073 		add	r3, r7, #768
 7346 0974 0122     		movs	r2, #1
 7347 0976 1A77     		strb	r2, [r3, #28]
 7348 0978 07F54073 		add	r3, r7, #768
 7349 097c 0122     		movs	r2, #1
 7350 097e 5A77     		strb	r2, [r3, #29]
 7351 0980 07F54073 		add	r3, r7, #768
 7352 0984 0122     		movs	r2, #1
 7353 0986 9A77     		strb	r2, [r3, #30]
 7354 0988 07F54073 		add	r3, r7, #768
 7355 098c 0622     		movs	r2, #6
 7356 098e DA77     		strb	r2, [r3, #31]
 7357 0990 07F54073 		add	r3, r7, #768
 7358 0994 0122     		movs	r2, #1
 7359 0996 83F82020 		strb	r2, [r3, #32]
 7360 099a 07F54073 		add	r3, r7, #768
 7361 099e 0522     		movs	r2, #5
 7362 09a0 83F82120 		strb	r2, [r3, #33]
 7363 09a4 07F54073 		add	r3, r7, #768
 7364 09a8 0122     		movs	r2, #1
 7365 09aa 83F82220 		strb	r2, [r3, #34]
 7366 09ae 07F54073 		add	r3, r7, #768
 7367 09b2 0622     		movs	r2, #6
 7368 09b4 83F82320 		strb	r2, [r3, #35]
 7369 09b8 07F54073 		add	r3, r7, #768
 7370 09bc 0122     		movs	r2, #1
 7371 09be 83F82420 		strb	r2, [r3, #36]
 7372 09c2 07F54073 		add	r3, r7, #768
 7373 09c6 0122     		movs	r2, #1
 7374 09c8 83F82520 		strb	r2, [r3, #37]
 7375 09cc 07F54073 		add	r3, r7, #768
 7376 09d0 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 173


 7377 09d2 83F82620 		strb	r2, [r3, #38]
 7378 09d6 07F54073 		add	r3, r7, #768
 7379 09da 0122     		movs	r2, #1
 7380 09dc 83F82720 		strb	r2, [r3, #39]
 7381 09e0 07F54073 		add	r3, r7, #768
 7382 09e4 0322     		movs	r2, #3
 7383 09e6 83F82820 		strb	r2, [r3, #40]
 7384 09ea 07F54073 		add	r3, r7, #768
 7385 09ee 0322     		movs	r2, #3
 7386 09f0 83F82920 		strb	r2, [r3, #41]
 7387 09f4 07F54073 		add	r3, r7, #768
 7388 09f8 0122     		movs	r2, #1
 7389 09fa 83F82A20 		strb	r2, [r3, #42]
 7390 09fe 07F54073 		add	r3, r7, #768
 7391 0a02 0322     		movs	r2, #3
 7392 0a04 83F82B20 		strb	r2, [r3, #43]
 7393 0a08 07F54073 		add	r3, r7, #768
 7394 0a0c 0322     		movs	r2, #3
 7395 0a0e 83F82C20 		strb	r2, [r3, #44]
 7396 0a12 07F54073 		add	r3, r7, #768
 7397 0a16 0122     		movs	r2, #1
 7398 0a18 83F82D20 		strb	r2, [r3, #45]
 7399 0a1c 07F54073 		add	r3, r7, #768
 7400 0a20 0122     		movs	r2, #1
 7401 0a22 83F82E20 		strb	r2, [r3, #46]
 7402 0a26 07F54073 		add	r3, r7, #768
 7403 0a2a 0122     		movs	r2, #1
 7404 0a2c 83F82F20 		strb	r2, [r3, #47]
 7405 0a30 07F54073 		add	r3, r7, #768
 7406 0a34 0322     		movs	r2, #3
 7407 0a36 83F83020 		strb	r2, [r3, #48]
 7408 0a3a 07F54073 		add	r3, r7, #768
 7409 0a3e 0322     		movs	r2, #3
 7410 0a40 83F83120 		strb	r2, [r3, #49]
 7411 0a44 07F54073 		add	r3, r7, #768
 7412 0a48 0322     		movs	r2, #3
 7413 0a4a 83F83220 		strb	r2, [r3, #50]
 7414 0a4e 07F54073 		add	r3, r7, #768
 7415 0a52 0122     		movs	r2, #1
 7416 0a54 83F83320 		strb	r2, [r3, #51]
 7417 0a58 07F54073 		add	r3, r7, #768
 7418 0a5c 0222     		movs	r2, #2
 7419 0a5e 83F83420 		strb	r2, [r3, #52]
 7420 0a62 07F54073 		add	r3, r7, #768
 7421 0a66 0222     		movs	r2, #2
 7422 0a68 83F83520 		strb	r2, [r3, #53]
 7423 0a6c 07F54073 		add	r3, r7, #768
 7424 0a70 0122     		movs	r2, #1
 7425 0a72 83F83620 		strb	r2, [r3, #54]
 7426 0a76 07F54073 		add	r3, r7, #768
 7427 0a7a 0122     		movs	r2, #1
 7428 0a7c 83F83720 		strb	r2, [r3, #55]
 7429 0a80 07F54073 		add	r3, r7, #768
 7430 0a84 0122     		movs	r2, #1
 7431 0a86 83F83820 		strb	r2, [r3, #56]
 7432 0a8a 07F54073 		add	r3, r7, #768
 7433 0a8e 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 174


 7434 0a90 83F83920 		strb	r2, [r3, #57]
 7435 0a94 07F54073 		add	r3, r7, #768
 7436 0a98 0622     		movs	r2, #6
 7437 0a9a 83F83A20 		strb	r2, [r3, #58]
 7438 0a9e 07F54073 		add	r3, r7, #768
 7439 0aa2 0122     		movs	r2, #1
 7440 0aa4 83F83B20 		strb	r2, [r3, #59]
 7441 0aa8 07F54073 		add	r3, r7, #768
 7442 0aac 0122     		movs	r2, #1
 7443 0aae 83F83C20 		strb	r2, [r3, #60]
 7444 0ab2 07F54073 		add	r3, r7, #768
 7445 0ab6 0122     		movs	r2, #1
 7446 0ab8 83F83D20 		strb	r2, [r3, #61]
 7447 0abc 07F54073 		add	r3, r7, #768
 7448 0ac0 0122     		movs	r2, #1
 7449 0ac2 83F83E20 		strb	r2, [r3, #62]
 7450 0ac6 07F54073 		add	r3, r7, #768
 7451 0aca 0322     		movs	r2, #3
 7452 0acc 83F83F20 		strb	r2, [r3, #63]
 7453 0ad0 07F54073 		add	r3, r7, #768
 7454 0ad4 0322     		movs	r2, #3
 7455 0ad6 83F84020 		strb	r2, [r3, #64]
 948:..\src/command_processing.c ****         1, 3, 3, 1, 
 949:..\src/command_processing.c ****         1, 1, 3, 3,
 950:..\src/command_processing.c ****         3, 1, 2, 2, 
 951:..\src/command_processing.c ****         1, 2, 1, 2,
 952:..\src/command_processing.c ****         1, 1, 1, 1, 
 953:..\src/command_processing.c ****         6, 3, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 1, 1, 
 955:..\src/command_processing.c ****         1, 1, 1, 6,
 956:..\src/command_processing.c ****         1, 5, 1, 6,
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c ****         1, 1, 1, 1,
 960:..\src/command_processing.c ****         3, 3, 1, 3,
 961:..\src/command_processing.c ****         3, 1, 1, 1,
 962:..\src/command_processing.c ****         3, 3, 3, 1,
 963:..\src/command_processing.c ****         2, 2, 1, 1,
 964:..\src/command_processing.c ****         1, 1, 6, 1,
 965:..\src/command_processing.c ****         1, 1, 1, 3, 
 966:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7456              		.loc 1 966 0
 7457 0ada 5F4B     		ldr	r3, .L343+4
 7458 0adc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7459              		.loc 1 947 0
 7460 0ade 07F54073 		add	r3, r7, #768
 7461 0ae2 83F84120 		strb	r2, [r3, #65]
 7462              		.loc 1 966 0
 7463 0ae6 5C4B     		ldr	r3, .L343+4
 7464 0ae8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7465              		.loc 1 947 0
 7466 0aea 07F54073 		add	r3, r7, #768
 7467 0aee 83F84220 		strb	r2, [r3, #66]
 7468 0af2 07F54073 		add	r3, r7, #768
 7469 0af6 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 175


 7470 0af8 83F84320 		strb	r2, [r3, #67]
 7471 0afc 07F54073 		add	r3, r7, #768
 7472 0b00 0622     		movs	r2, #6
 7473 0b02 83F84420 		strb	r2, [r3, #68]
 7474 0b06 07F54073 		add	r3, r7, #768
 7475 0b0a 0622     		movs	r2, #6
 7476 0b0c 83F84520 		strb	r2, [r3, #69]
 7477 0b10 07F54073 		add	r3, r7, #768
 7478 0b14 0122     		movs	r2, #1
 7479 0b16 83F84620 		strb	r2, [r3, #70]
 7480 0b1a 07F54073 		add	r3, r7, #768
 7481 0b1e 0122     		movs	r2, #1
 7482 0b20 83F84720 		strb	r2, [r3, #71]
 7483 0b24 07F54073 		add	r3, r7, #768
 7484 0b28 0122     		movs	r2, #1
 7485 0b2a 83F84820 		strb	r2, [r3, #72]
 7486 0b2e 07F54073 		add	r3, r7, #768
 7487 0b32 0122     		movs	r2, #1
 7488 0b34 83F84920 		strb	r2, [r3, #73]
 7489 0b38 07F54073 		add	r3, r7, #768
 7490 0b3c 0122     		movs	r2, #1
 7491 0b3e 83F84A20 		strb	r2, [r3, #74]
 7492 0b42 07F54073 		add	r3, r7, #768
 7493 0b46 0122     		movs	r2, #1
 7494 0b48 83F84B20 		strb	r2, [r3, #75]
 967:..\src/command_processing.c ****         6, 6, 1, 1,
 968:..\src/command_processing.c ****         1, 1, 1, 1
 969:..\src/command_processing.c ****     };
 970:..\src/command_processing.c ****     
 971:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7495              		.loc 1 971 0
 7496 0b4c 07F52D73 		add	r3, r7, #692
 7497 0b50 0022     		movs	r2, #0
 7498 0b52 1A70     		strb	r2, [r3]
 7499 0b54 97F8DD34 		ldrb	r3, [r7, #1245]
 7500 0b58 0A33     		adds	r3, r3, #10
 7501 0b5a DAB2     		uxtb	r2, r3
 7502 0b5c 07F52D73 		add	r3, r7, #692
 7503 0b60 5A70     		strb	r2, [r3, #1]
 7504 0b62 97F8DD34 		ldrb	r3, [r7, #1245]
 7505 0b66 0A33     		adds	r3, r3, #10
 7506 0b68 DAB2     		uxtb	r2, r3
 7507 0b6a 07F52D73 		add	r3, r7, #692
 7508 0b6e 9A70     		strb	r2, [r3, #2]
 7509 0b70 97F8DD34 		ldrb	r3, [r7, #1245]
 7510 0b74 0A33     		adds	r3, r3, #10
 7511 0b76 DAB2     		uxtb	r2, r3
 7512 0b78 07F52D73 		add	r3, r7, #692
 7513 0b7c DA70     		strb	r2, [r3, #3]
 7514 0b7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7515 0b82 0A33     		adds	r3, r3, #10
 7516 0b84 DAB2     		uxtb	r2, r3
 7517 0b86 07F52D73 		add	r3, r7, #692
 7518 0b8a 1A71     		strb	r2, [r3, #4]
 7519 0b8c 97F8DD34 		ldrb	r3, [r7, #1245]
 7520 0b90 0A33     		adds	r3, r3, #10
 7521 0b92 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 176


 7522 0b94 07F52D73 		add	r3, r7, #692
 7523 0b98 5A71     		strb	r2, [r3, #5]
 972:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 973:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7524              		.loc 1 973 0
 7525 0b9a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7526 0b9e D7F8E014 		ldr	r1, [r7, #1248]
 7527 0ba2 1346     		mov	r3, r2
 7528 0ba4 DB00     		lsls	r3, r3, #3
 7529 0ba6 9B1A     		subs	r3, r3, r2
 7530 0ba8 1B01     		lsls	r3, r3, #4
 7531 0baa 0B44     		add	r3, r3, r1
 7532 0bac 03F58873 		add	r3, r3, #272
 7533 0bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7534              		.loc 1 971 0
 7535 0bb2 1433     		adds	r3, r3, #20
 7536 0bb4 DAB2     		uxtb	r2, r3
 7537 0bb6 07F52D73 		add	r3, r7, #692
 7538 0bba 9A71     		strb	r2, [r3, #6]
 7539              		.loc 1 973 0
 7540 0bbc 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7541 0bc0 D7F8E014 		ldr	r1, [r7, #1248]
 7542 0bc4 1346     		mov	r3, r2
 7543 0bc6 DB00     		lsls	r3, r3, #3
 7544 0bc8 9B1A     		subs	r3, r3, r2
 7545 0bca 1B01     		lsls	r3, r3, #4
 7546 0bcc 0B44     		add	r3, r3, r1
 7547 0bce 03F58873 		add	r3, r3, #272
 7548 0bd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7549              		.loc 1 971 0
 7550 0bd4 1433     		adds	r3, r3, #20
 7551 0bd6 DAB2     		uxtb	r2, r3
 7552 0bd8 07F52D73 		add	r3, r7, #692
 7553 0bdc DA71     		strb	r2, [r3, #7]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7554              		.loc 1 974 0
 7555 0bde 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7556 0be2 D7F8E014 		ldr	r1, [r7, #1248]
 7557 0be6 1346     		mov	r3, r2
 7558 0be8 DB00     		lsls	r3, r3, #3
 7559 0bea 9B1A     		subs	r3, r3, r2
 7560 0bec 1B01     		lsls	r3, r3, #4
 7561 0bee 0B44     		add	r3, r3, r1
 7562 0bf0 03F58873 		add	r3, r3, #272
 7563 0bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7564              		.loc 1 971 0
 7565 0bf6 1433     		adds	r3, r3, #20
 7566 0bf8 DAB2     		uxtb	r2, r3
 7567 0bfa 07F52D73 		add	r3, r7, #692
 7568 0bfe 1A72     		strb	r2, [r3, #8]
 7569 0c00 97F8DD34 		ldrb	r3, [r7, #1245]
 7570 0c04 0A33     		adds	r3, r3, #10
 7571 0c06 DAB2     		uxtb	r2, r3
 7572 0c08 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 177


 7573 0c0c 5A72     		strb	r2, [r3, #9]
 7574 0c0e 97F8DD34 		ldrb	r3, [r7, #1245]
 7575 0c12 0A33     		adds	r3, r3, #10
 7576 0c14 DAB2     		uxtb	r2, r3
 7577 0c16 07F52D73 		add	r3, r7, #692
 7578 0c1a 9A72     		strb	r2, [r3, #10]
 7579 0c1c 97F8DD34 		ldrb	r3, [r7, #1245]
 7580 0c20 0A33     		adds	r3, r3, #10
 7581 0c22 DAB2     		uxtb	r2, r3
 7582 0c24 07F52D73 		add	r3, r7, #692
 7583 0c28 DA72     		strb	r2, [r3, #11]
 7584 0c2a 97F8DD34 		ldrb	r3, [r7, #1245]
 7585 0c2e 0A33     		adds	r3, r3, #10
 7586 0c30 DAB2     		uxtb	r2, r3
 7587 0c32 07F52D73 		add	r3, r7, #692
 7588 0c36 1A73     		strb	r2, [r3, #12]
 7589 0c38 07F52D73 		add	r3, r7, #692
 7590 0c3c 1E22     		movs	r2, #30
 7591 0c3e 5A73     		strb	r2, [r3, #13]
 7592 0c40 07F52D73 		add	r3, r7, #692
 7593 0c44 1E22     		movs	r2, #30
 7594 0c46 9A73     		strb	r2, [r3, #14]
 7595 0c48 07F52D73 		add	r3, r7, #692
 7596 0c4c 1E22     		movs	r2, #30
 7597 0c4e DA73     		strb	r2, [r3, #15]
 7598 0c50 04E0     		b	.L344
 7599              	.L345:
 7600 0c52 00BF     		.align	2
 7601              	.L343:
 7602 0c54 80040000 		.word	.LC0
 7603 0c58 00000000 		.word	N_Encoder_Line_Connected
 7604              	.L344:
 7605 0c5c 07F52D73 		add	r3, r7, #692
 7606 0c60 1E22     		movs	r2, #30
 7607 0c62 1A74     		strb	r2, [r3, #16]
 975:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 976:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7608              		.loc 1 976 0
 7609 0c64 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7610 0c68 D7F8E014 		ldr	r1, [r7, #1248]
 7611 0c6c 1346     		mov	r3, r2
 7612 0c6e DB00     		lsls	r3, r3, #3
 7613 0c70 9B1A     		subs	r3, r3, r2
 7614 0c72 1B01     		lsls	r3, r3, #4
 7615 0c74 0B44     		add	r3, r3, r1
 7616 0c76 03F58873 		add	r3, r3, #272
 7617 0c7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7618              		.loc 1 971 0
 7619 0c7c 1433     		adds	r3, r3, #20
 7620 0c7e DAB2     		uxtb	r2, r3
 7621 0c80 07F52D73 		add	r3, r7, #692
 7622 0c84 5A74     		strb	r2, [r3, #17]
 7623              		.loc 1 976 0
 7624 0c86 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7625 0c8a D7F8E014 		ldr	r1, [r7, #1248]
 7626 0c8e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 178


 7627 0c90 DB00     		lsls	r3, r3, #3
 7628 0c92 9B1A     		subs	r3, r3, r2
 7629 0c94 1B01     		lsls	r3, r3, #4
 7630 0c96 0B44     		add	r3, r3, r1
 7631 0c98 03F58873 		add	r3, r3, #272
 7632 0c9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7633              		.loc 1 971 0
 7634 0c9e 1433     		adds	r3, r3, #20
 7635 0ca0 DAB2     		uxtb	r2, r3
 7636 0ca2 07F52D73 		add	r3, r7, #692
 7637 0ca6 9A74     		strb	r2, [r3, #18]
 7638 0ca8 97F8DD34 		ldrb	r3, [r7, #1245]
 7639 0cac 0A33     		adds	r3, r3, #10
 7640 0cae DAB2     		uxtb	r2, r3
 7641 0cb0 07F52D73 		add	r3, r7, #692
 7642 0cb4 DA74     		strb	r2, [r3, #19]
 7643 0cb6 97F8DD34 		ldrb	r3, [r7, #1245]
 7644 0cba 0A33     		adds	r3, r3, #10
 7645 0cbc DAB2     		uxtb	r2, r3
 7646 0cbe 07F52D73 		add	r3, r7, #692
 7647 0cc2 1A75     		strb	r2, [r3, #20]
 7648 0cc4 07F52D73 		add	r3, r7, #692
 7649 0cc8 0022     		movs	r2, #0
 7650 0cca 5A75     		strb	r2, [r3, #21]
 7651 0ccc 07F52D73 		add	r3, r7, #692
 7652 0cd0 4622     		movs	r2, #70
 7653 0cd2 9A75     		strb	r2, [r3, #22]
 7654 0cd4 07F52D73 		add	r3, r7, #692
 7655 0cd8 4622     		movs	r2, #70
 7656 0cda DA75     		strb	r2, [r3, #23]
 7657 0cdc 07F52D73 		add	r3, r7, #692
 7658 0ce0 4622     		movs	r2, #70
 7659 0ce2 1A76     		strb	r2, [r3, #24]
 7660 0ce4 07F52D73 		add	r3, r7, #692
 7661 0ce8 4622     		movs	r2, #70
 7662 0cea 5A76     		strb	r2, [r3, #25]
 7663 0cec 07F52D73 		add	r3, r7, #692
 7664 0cf0 1E22     		movs	r2, #30
 7665 0cf2 9A76     		strb	r2, [r3, #26]
 7666 0cf4 07F52D73 		add	r3, r7, #692
 7667 0cf8 0022     		movs	r2, #0
 7668 0cfa DA76     		strb	r2, [r3, #27]
 7669 0cfc 07F52D73 		add	r3, r7, #692
 7670 0d00 2822     		movs	r2, #40
 7671 0d02 1A77     		strb	r2, [r3, #28]
 7672 0d04 07F52D73 		add	r3, r7, #692
 7673 0d08 3222     		movs	r2, #50
 7674 0d0a 5A77     		strb	r2, [r3, #29]
 7675 0d0c 07F52D73 		add	r3, r7, #692
 7676 0d10 0022     		movs	r2, #0
 7677 0d12 9A77     		strb	r2, [r3, #30]
 7678 0d14 07F52D73 		add	r3, r7, #692
 7679 0d18 3222     		movs	r2, #50
 7680 0d1a DA77     		strb	r2, [r3, #31]
 7681 0d1c 07F52D73 		add	r3, r7, #692
 7682 0d20 2822     		movs	r2, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 179


 7683 0d22 83F82020 		strb	r2, [r3, #32]
 7684 0d26 07F52D73 		add	r3, r7, #692
 7685 0d2a 2822     		movs	r2, #40
 7686 0d2c 83F82120 		strb	r2, [r3, #33]
 7687 0d30 07F52D73 		add	r3, r7, #692
 7688 0d34 0022     		movs	r2, #0
 7689 0d36 83F82220 		strb	r2, [r3, #34]
 977:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 978:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 979:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 980:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 7690              		.loc 1 980 0
 7691 0d3a D7F8E034 		ldr	r3, [r7, #1248]
 7692 0d3e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7693              		.loc 1 971 0
 7694 0d42 3C33     		adds	r3, r3, #60
 7695 0d44 DAB2     		uxtb	r2, r3
 7696 0d46 07F52D73 		add	r3, r7, #692
 7697 0d4a 83F82320 		strb	r2, [r3, #35]
 7698 0d4e 97F8DD34 		ldrb	r3, [r7, #1245]
 7699 0d52 0A33     		adds	r3, r3, #10
 7700 0d54 DAB2     		uxtb	r2, r3
 7701 0d56 07F52D73 		add	r3, r7, #692
 7702 0d5a 83F82420 		strb	r2, [r3, #36]
 7703 0d5e 97F8DD34 		ldrb	r3, [r7, #1245]
 7704 0d62 0A33     		adds	r3, r3, #10
 7705 0d64 DAB2     		uxtb	r2, r3
 7706 0d66 07F52D73 		add	r3, r7, #692
 7707 0d6a 83F82520 		strb	r2, [r3, #37]
 7708 0d6e 97F8DD34 		ldrb	r3, [r7, #1245]
 7709 0d72 0A33     		adds	r3, r3, #10
 7710 0d74 DAB2     		uxtb	r2, r3
 7711 0d76 07F52D73 		add	r3, r7, #692
 7712 0d7a 83F82620 		strb	r2, [r3, #38]
 7713 0d7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7714 0d82 0A33     		adds	r3, r3, #10
 7715 0d84 DAB2     		uxtb	r2, r3
 7716 0d86 07F52D73 		add	r3, r7, #692
 7717 0d8a 83F82720 		strb	r2, [r3, #39]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         // GENERIC PARAMS
 983:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 984:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 7718              		.loc 1 984 0
 7719 0d8e 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7720 0d92 D7F8E014 		ldr	r1, [r7, #1248]
 7721 0d96 1346     		mov	r3, r2
 7722 0d98 DB00     		lsls	r3, r3, #3
 7723 0d9a 9B1A     		subs	r3, r3, r2
 7724 0d9c 1B01     		lsls	r3, r3, #4
 7725 0d9e 0B44     		add	r3, r3, r1
 7726 0da0 03F58873 		add	r3, r3, #272
 7727 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7728              		.loc 1 971 0
 7729 0da6 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 180


 7730 0da8 DAB2     		uxtb	r2, r3
 7731 0daa 07F52D73 		add	r3, r7, #692
 7732 0dae 83F82820 		strb	r2, [r3, #40]
 7733              		.loc 1 984 0
 7734 0db2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7735 0db6 D7F8E014 		ldr	r1, [r7, #1248]
 7736 0dba 1346     		mov	r3, r2
 7737 0dbc DB00     		lsls	r3, r3, #3
 7738 0dbe 9B1A     		subs	r3, r3, r2
 7739 0dc0 1B01     		lsls	r3, r3, #4
 7740 0dc2 0B44     		add	r3, r3, r1
 7741 0dc4 03F58873 		add	r3, r3, #272
 7742 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7743              		.loc 1 971 0
 7744 0dca 1433     		adds	r3, r3, #20
 7745 0dcc DAB2     		uxtb	r2, r3
 7746 0dce 07F52D73 		add	r3, r7, #692
 7747 0dd2 83F82920 		strb	r2, [r3, #41]
 7748 0dd6 07F52D73 		add	r3, r7, #692
 7749 0dda 0022     		movs	r2, #0
 7750 0ddc 83F82A20 		strb	r2, [r3, #42]
 7751 0de0 97F8DC34 		ldrb	r3, [r7, #1244]
 7752 0de4 0A33     		adds	r3, r3, #10
 7753 0de6 DAB2     		uxtb	r2, r3
 7754 0de8 07F52D73 		add	r3, r7, #692
 7755 0dec 83F82B20 		strb	r2, [r3, #43]
 7756 0df0 97F8DC34 		ldrb	r3, [r7, #1244]
 7757 0df4 0A33     		adds	r3, r3, #10
 7758 0df6 DAB2     		uxtb	r2, r3
 7759 0df8 07F52D73 		add	r3, r7, #692
 7760 0dfc 83F82C20 		strb	r2, [r3, #44]
 7761 0e00 97F8DC34 		ldrb	r3, [r7, #1244]
 7762 0e04 0A33     		adds	r3, r3, #10
 7763 0e06 DAB2     		uxtb	r2, r3
 7764 0e08 07F52D73 		add	r3, r7, #692
 7765 0e0c 83F82D20 		strb	r2, [r3, #45]
 7766 0e10 97F8DC34 		ldrb	r3, [r7, #1244]
 7767 0e14 0A33     		adds	r3, r3, #10
 7768 0e16 DAB2     		uxtb	r2, r3
 7769 0e18 07F52D73 		add	r3, r7, #692
 7770 0e1c 83F82E20 		strb	r2, [r3, #46]
 7771 0e20 97F8DC34 		ldrb	r3, [r7, #1244]
 7772 0e24 0A33     		adds	r3, r3, #10
 7773 0e26 DAB2     		uxtb	r2, r3
 7774 0e28 07F52D73 		add	r3, r7, #692
 7775 0e2c 83F82F20 		strb	r2, [r3, #47]
 985:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 986:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7776              		.loc 1 986 0
 7777 0e30 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7778 0e34 D7F8E014 		ldr	r1, [r7, #1248]
 7779 0e38 1346     		mov	r3, r2
 7780 0e3a DB00     		lsls	r3, r3, #3
 7781 0e3c 9B1A     		subs	r3, r3, r2
 7782 0e3e 1B01     		lsls	r3, r3, #4
 7783 0e40 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 181


 7784 0e42 03F58873 		add	r3, r3, #272
 7785 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7786              		.loc 1 971 0
 7787 0e48 1433     		adds	r3, r3, #20
 7788 0e4a DAB2     		uxtb	r2, r3
 7789 0e4c 07F52D73 		add	r3, r7, #692
 7790 0e50 83F83020 		strb	r2, [r3, #48]
 7791              		.loc 1 986 0
 7792 0e54 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7793 0e58 D7F8E014 		ldr	r1, [r7, #1248]
 7794 0e5c 1346     		mov	r3, r2
 7795 0e5e DB00     		lsls	r3, r3, #3
 7796 0e60 9B1A     		subs	r3, r3, r2
 7797 0e62 1B01     		lsls	r3, r3, #4
 7798 0e64 0B44     		add	r3, r3, r1
 7799 0e66 03F58873 		add	r3, r3, #272
 7800 0e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7801              		.loc 1 971 0
 7802 0e6c 1433     		adds	r3, r3, #20
 7803 0e6e DAB2     		uxtb	r2, r3
 7804 0e70 07F52D73 		add	r3, r7, #692
 7805 0e74 83F83120 		strb	r2, [r3, #49]
 7806              		.loc 1 986 0
 7807 0e78 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7808 0e7c D7F8E014 		ldr	r1, [r7, #1248]
 7809 0e80 1346     		mov	r3, r2
 7810 0e82 DB00     		lsls	r3, r3, #3
 7811 0e84 9B1A     		subs	r3, r3, r2
 7812 0e86 1B01     		lsls	r3, r3, #4
 7813 0e88 0B44     		add	r3, r3, r1
 7814 0e8a 03F58873 		add	r3, r3, #272
 7815 0e8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7816              		.loc 1 971 0
 7817 0e90 1433     		adds	r3, r3, #20
 7818 0e92 DAB2     		uxtb	r2, r3
 7819 0e94 07F52D73 		add	r3, r7, #692
 7820 0e98 83F83220 		strb	r2, [r3, #50]
 7821 0e9c 97F8DC34 		ldrb	r3, [r7, #1244]
 7822 0ea0 0A33     		adds	r3, r3, #10
 7823 0ea2 DAB2     		uxtb	r2, r3
 7824 0ea4 07F52D73 		add	r3, r7, #692
 7825 0ea8 83F83320 		strb	r2, [r3, #51]
 7826 0eac 97F8DC34 		ldrb	r3, [r7, #1244]
 7827 0eb0 0A33     		adds	r3, r3, #10
 7828 0eb2 DAB2     		uxtb	r2, r3
 7829 0eb4 07F52D73 		add	r3, r7, #692
 7830 0eb8 83F83420 		strb	r2, [r3, #52]
 7831 0ebc 97F8DC34 		ldrb	r3, [r7, #1244]
 7832 0ec0 0A33     		adds	r3, r3, #10
 7833 0ec2 DAB2     		uxtb	r2, r3
 7834 0ec4 07F52D73 		add	r3, r7, #692
 7835 0ec8 83F83520 		strb	r2, [r3, #53]
 7836 0ecc 97F8DC34 		ldrb	r3, [r7, #1244]
 7837 0ed0 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 182


 7838 0ed2 DAB2     		uxtb	r2, r3
 7839 0ed4 07F52D73 		add	r3, r7, #692
 7840 0ed8 83F83620 		strb	r2, [r3, #54]
 987:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7841              		.loc 1 987 0
 7842 0edc 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7843 0ee0 D7F8E014 		ldr	r1, [r7, #1248]
 7844 0ee4 1346     		mov	r3, r2
 7845 0ee6 DB00     		lsls	r3, r3, #3
 7846 0ee8 9B1A     		subs	r3, r3, r2
 7847 0eea 1B01     		lsls	r3, r3, #4
 7848 0eec 0B44     		add	r3, r3, r1
 7849 0eee 03F58873 		add	r3, r3, #272
 7850 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7851              		.loc 1 971 0
 7852 0ef4 1433     		adds	r3, r3, #20
 7853 0ef6 DAB2     		uxtb	r2, r3
 7854 0ef8 07F52D73 		add	r3, r7, #692
 7855 0efc 83F83720 		strb	r2, [r3, #55]
 988:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7856              		.loc 1 988 0
 7857 0f00 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7858 0f04 D7F8E014 		ldr	r1, [r7, #1248]
 7859 0f08 1346     		mov	r3, r2
 7860 0f0a DB00     		lsls	r3, r3, #3
 7861 0f0c 9B1A     		subs	r3, r3, r2
 7862 0f0e 1B01     		lsls	r3, r3, #4
 7863 0f10 0B44     		add	r3, r3, r1
 7864 0f12 03F58873 		add	r3, r3, #272
 7865 0f16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7866              		.loc 1 971 0
 7867 0f18 1433     		adds	r3, r3, #20
 7868 0f1a DAB2     		uxtb	r2, r3
 7869 0f1c 07F52D73 		add	r3, r7, #692
 7870 0f20 83F83820 		strb	r2, [r3, #56]
 7871 0f24 97F8DC34 		ldrb	r3, [r7, #1244]
 7872 0f28 0A33     		adds	r3, r3, #10
 7873 0f2a DAB2     		uxtb	r2, r3
 7874 0f2c 07F52D73 		add	r3, r7, #692
 7875 0f30 83F83920 		strb	r2, [r3, #57]
 7876 0f34 97F8DC34 		ldrb	r3, [r7, #1244]
 7877 0f38 0A33     		adds	r3, r3, #10
 7878 0f3a DAB2     		uxtb	r2, r3
 7879 0f3c 07F52D73 		add	r3, r7, #692
 7880 0f40 83F83A20 		strb	r2, [r3, #58]
 7881 0f44 97F8DC34 		ldrb	r3, [r7, #1244]
 7882 0f48 0A33     		adds	r3, r3, #10
 7883 0f4a DAB2     		uxtb	r2, r3
 7884 0f4c 07F52D73 		add	r3, r7, #692
 7885 0f50 83F83B20 		strb	r2, [r3, #59]
 7886 0f54 97F8DC34 		ldrb	r3, [r7, #1244]
 7887 0f58 0A33     		adds	r3, r3, #10
 7888 0f5a DAB2     		uxtb	r2, r3
 7889 0f5c 07F52D73 		add	r3, r7, #692
 7890 0f60 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 183


 7891 0f64 97F8DC34 		ldrb	r3, [r7, #1244]
 7892 0f68 0A33     		adds	r3, r3, #10
 7893 0f6a DAB2     		uxtb	r2, r3
 7894 0f6c 07F52D73 		add	r3, r7, #692
 7895 0f70 83F83D20 		strb	r2, [r3, #61]
 7896 0f74 97F8DC34 		ldrb	r3, [r7, #1244]
 7897 0f78 0A33     		adds	r3, r3, #10
 7898 0f7a DAB2     		uxtb	r2, r3
 7899 0f7c 07F52D73 		add	r3, r7, #692
 7900 0f80 83F83E20 		strb	r2, [r3, #62]
 989:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7901              		.loc 1 989 0
 7902 0f84 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7903 0f88 D7F8E014 		ldr	r1, [r7, #1248]
 7904 0f8c 1346     		mov	r3, r2
 7905 0f8e DB00     		lsls	r3, r3, #3
 7906 0f90 9B1A     		subs	r3, r3, r2
 7907 0f92 1B01     		lsls	r3, r3, #4
 7908 0f94 0B44     		add	r3, r3, r1
 7909 0f96 03F58873 		add	r3, r3, #272
 7910 0f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7911              		.loc 1 971 0
 7912 0f9c 1433     		adds	r3, r3, #20
 7913 0f9e DAB2     		uxtb	r2, r3
 7914 0fa0 07F52D73 		add	r3, r7, #692
 7915 0fa4 83F83F20 		strb	r2, [r3, #63]
 990:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7916              		.loc 1 990 0
 7917 0fa8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7918 0fac D7F8E014 		ldr	r1, [r7, #1248]
 7919 0fb0 1346     		mov	r3, r2
 7920 0fb2 DB00     		lsls	r3, r3, #3
 7921 0fb4 9B1A     		subs	r3, r3, r2
 7922 0fb6 1B01     		lsls	r3, r3, #4
 7923 0fb8 0B44     		add	r3, r3, r1
 7924 0fba 03F58873 		add	r3, r3, #272
 7925 0fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7926              		.loc 1 971 0
 7927 0fc0 1433     		adds	r3, r3, #20
 7928 0fc2 DAB2     		uxtb	r2, r3
 7929 0fc4 07F52D73 		add	r3, r7, #692
 7930 0fc8 83F84020 		strb	r2, [r3, #64]
 7931 0fcc 07F52D73 		add	r3, r7, #692
 7932 0fd0 1422     		movs	r2, #20
 7933 0fd2 83F84120 		strb	r2, [r3, #65]
 7934 0fd6 07F52D73 		add	r3, r7, #692
 7935 0fda 1522     		movs	r2, #21
 7936 0fdc 83F84220 		strb	r2, [r3, #66]
 7937 0fe0 07F52D73 		add	r3, r7, #692
 7938 0fe4 3222     		movs	r2, #50
 7939 0fe6 83F84320 		strb	r2, [r3, #67]
 7940 0fea 07F52D73 		add	r3, r7, #692
 7941 0fee 3222     		movs	r2, #50
 7942 0ff0 83F84420 		strb	r2, [r3, #68]
 7943 0ff4 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 184


 7944 0ff8 3222     		movs	r2, #50
 7945 0ffa 83F84520 		strb	r2, [r3, #69]
 7946 0ffe 07F52D73 		add	r3, r7, #692
 7947 1002 0022     		movs	r2, #0
 7948 1004 83F84620 		strb	r2, [r3, #70]
 7949 1008 07F52D73 		add	r3, r7, #692
 7950 100c 5022     		movs	r2, #80
 7951 100e 83F84720 		strb	r2, [r3, #71]
 7952 1012 07F52D73 		add	r3, r7, #692
 7953 1016 5022     		movs	r2, #80
 7954 1018 83F84820 		strb	r2, [r3, #72]
 7955 101c 07F52D73 		add	r3, r7, #692
 7956 1020 5A22     		movs	r2, #90
 7957 1022 83F84920 		strb	r2, [r3, #73]
 7958 1026 07F52D73 		add	r3, r7, #692
 7959 102a 5A22     		movs	r2, #90
 7960 102c 83F84A20 		strb	r2, [r3, #74]
 7961 1030 07F52D73 		add	r3, r7, #692
 7962 1034 5A22     		movs	r2, #90
 7963 1036 83F84B20 		strb	r2, [r3, #75]
 991:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE, ST_MS_SPEC, 
 992:..\src/command_processing.c ****         ST_MS_SPEC, ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
 993:..\src/command_processing.c ****     };
 994:..\src/command_processing.c ****     
 995:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7964              		.loc 1 995 0
 7965 103a 07F5C273 		add	r3, r7, #388
 7966 103e CB4A     		ldr	r2, .L346
 7967 1040 1846     		mov	r0, r3
 7968 1042 1146     		mov	r1, r2
 7969 1044 4FF49873 		mov	r3, #304
 7970 1048 1A46     		mov	r2, r3
 7971 104a FFF7FEFF 		bl	memcpy
 996:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 997:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 998:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 999:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1000:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
1001:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1002:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1003:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1004:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1005:..\src/command_processing.c ****         
1006:..\src/command_processing.c ****         // GENERIC PARAMS
1007:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1008:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1009:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1010:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1011:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1012:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1013:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1014:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1015:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:", "72 - Slave com
1016:..\src/command_processing.c ****         "73 - Slave ID:", "74 - Maximum slave residual current:", "75 - Maximum pressure feedback (
1017:..\src/command_processing.c ****     };
1018:..\src/command_processing.c **** 
1019:..\src/command_processing.c ****     //Parameters menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 185


1020:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7972              		.loc 1 1020 0
 7973 104e 07F58673 		add	r3, r7, #268
 7974 1052 0022     		movs	r2, #0
 7975 1054 1A60     		str	r2, [r3]
 7976 1056 0433     		adds	r3, r3, #4
 7977 1058 7222     		movs	r2, #114
 7978 105a 0021     		movs	r1, #0
 7979 105c 1846     		mov	r0, r3
 7980 105e FFF7FEFF 		bl	memset
1021:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7981              		.loc 1 1021 0
 7982 1062 07F58670 		add	r0, r7, #268
 7983 1066 6423     		movs	r3, #100
 7984 1068 0A22     		movs	r2, #10
 7985 106a C149     		ldr	r1, .L346+4
 7986 106c FFF7FEFF 		bl	sprintf
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7987              		.loc 1 1023 0
 7988 1070 07F1E403 		add	r3, r7, #228
 7989 1074 BF4A     		ldr	r2, .L346+8
 7990 1076 1A60     		str	r2, [r3]
 7991 1078 07F1E403 		add	r3, r7, #228
 7992 107c BE4A     		ldr	r2, .L346+12
 7993 107e 5A60     		str	r2, [r3, #4]
 7994 1080 07F1E403 		add	r3, r7, #228
 7995 1084 BD4A     		ldr	r2, .L346+16
 7996 1086 9A60     		str	r2, [r3, #8]
 7997 1088 07F1E403 		add	r3, r7, #228
 7998 108c BC4A     		ldr	r2, .L346+20
 7999 108e DA60     		str	r2, [r3, #12]
 8000 1090 07F1E403 		add	r3, r7, #228
 8001 1094 BB4A     		ldr	r2, .L346+24
 8002 1096 1A61     		str	r2, [r3, #16]
 8003 1098 07F1E403 		add	r3, r7, #228
 8004 109c BA4A     		ldr	r2, .L346+28
 8005 109e 5A61     		str	r2, [r3, #20]
 8006 10a0 07F1E403 		add	r3, r7, #228
 8007 10a4 07F58672 		add	r2, r7, #268
 8008 10a8 9A61     		str	r2, [r3, #24]
 8009 10aa 07F1E403 		add	r3, r7, #228
 8010 10ae B74A     		ldr	r2, .L346+32
 8011 10b0 DA61     		str	r2, [r3, #28]
 8012 10b2 07F1E403 		add	r3, r7, #228
 8013 10b6 B64A     		ldr	r2, .L346+36
 8014 10b8 1A62     		str	r2, [r3, #32]
 8015 10ba 07F1E403 		add	r3, r7, #228
 8016 10be B54A     		ldr	r2, .L346+40
 8017 10c0 5A62     		str	r2, [r3, #36]
1024:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1025:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1026:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1027:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1028:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1029:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1030:..\src/command_processing.c ****         spi_delay_menu,                                                                            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 186


1031:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1032:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1033:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\nThe board will reset\n"      
1034:..\src/command_processing.c ****     };   
1035:..\src/command_processing.c ****     
1036:..\src/command_processing.c ****     uint8 NUM_MENU[29] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8018              		.loc 1 1036 0
 8019 10c2 07F1C403 		add	r3, r7, #196
 8020 10c6 B44A     		ldr	r2, .L346+44
 8021 10c8 1C46     		mov	r4, r3
 8022 10ca 1546     		mov	r5, r2
 8023 10cc 2868     		ldr	r0, [r5]	@ unaligned
 8024 10ce 6968     		ldr	r1, [r5, #4]	@ unaligned
 8025 10d0 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8026 10d2 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8027 10d4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8028 10d6 2869     		ldr	r0, [r5, #16]	@ unaligned
 8029 10d8 6969     		ldr	r1, [r5, #20]	@ unaligned
 8030 10da AA69     		ldr	r2, [r5, #24]	@ unaligned
 8031 10dc 07C4     		stmia	r4!, {r0, r1, r2}
 8032 10de 2B7F     		ldrb	r3, [r5, #28]
 8033 10e0 2370     		strb	r3, [r4]
1037:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8034              		.loc 1 1037 0
 8035 10e2 07F1B803 		add	r3, r7, #184
 8036 10e6 AD4A     		ldr	r2, .L346+48
 8037 10e8 1068     		ldr	r0, [r2]	@ unaligned
 8038 10ea 5168     		ldr	r1, [r2, #4]	@ unaligned
 8039 10ec 03C3     		stmia	r3!, {r0, r1}
 8040 10ee 127A     		ldrb	r2, [r2, #8]
 8041 10f0 1A70     		strb	r2, [r3]
1038:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8042              		.loc 1 1038 0
 8043 10f2 07F1A403 		add	r3, r7, #164
 8044 10f6 AA4A     		ldr	r2, .L346+52
 8045 10f8 1C46     		mov	r4, r3
 8046 10fa 1546     		mov	r5, r2
 8047 10fc 2868     		ldr	r0, [r5]	@ unaligned
 8048 10fe 6968     		ldr	r1, [r5, #4]	@ unaligned
 8049 1100 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8050 1102 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8051 1104 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8052 1106 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8053 1108 2380     		strh	r3, [r4]	@ unaligned
1039:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8054              		.loc 1 1039 0
 8055 110a 2323     		movs	r3, #35
 8056 110c 87F8DB34 		strb	r3, [r7, #1243]
1040:..\src/command_processing.c **** 
1041:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1042:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1043:..\src/command_processing.c ****     
1044:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1045:..\src/command_processing.c **** 
1046:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 187


1049:..\src/command_processing.c ****     j = 0;
 8057              		.loc 1 1049 0
 8058 1110 0023     		movs	r3, #0
 8059 1112 87F8E634 		strb	r3, [r7, #1254]
1050:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8060              		.loc 1 1050 0
 8061 1116 0023     		movs	r3, #0
 8062 1118 87F8E734 		strb	r3, [r7, #1255]
 8063 111c 21E0     		b	.L280
 8064              	.L283:
1051:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8065              		.loc 1 1051 0
 8066 111e 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8067 1122 07F1B802 		add	r2, r7, #184
 8068 1126 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8069 1128 1A46     		mov	r2, r3
 8070 112a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8071 112e 0133     		adds	r3, r3, #1
 8072 1130 9A42     		cmp	r2, r3
 8073 1132 0BD1     		bne	.L281
1052:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8074              		.loc 1 1052 0
 8075 1134 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8076 1138 07F15802 		add	r2, r7, #88
 8077 113c 0121     		movs	r1, #1
 8078 113e D154     		strb	r1, [r2, r3]
1053:..\src/command_processing.c ****             j++;
 8079              		.loc 1 1053 0
 8080 1140 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8081 1144 0133     		adds	r3, r3, #1
 8082 1146 87F8E634 		strb	r3, [r7, #1254]
 8083 114a 05E0     		b	.L282
 8084              	.L281:
1054:..\src/command_processing.c ****         }
1055:..\src/command_processing.c ****         else {
1056:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8085              		.loc 1 1056 0
 8086 114c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8087 1150 07F15802 		add	r2, r7, #88
 8088 1154 0021     		movs	r1, #0
 8089 1156 D154     		strb	r1, [r2, r3]
 8090              	.L282:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8091              		.loc 1 1050 0 discriminator 2
 8092 1158 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8093 115c 0133     		adds	r3, r3, #1
 8094 115e 87F8E734 		strb	r3, [r7, #1255]
 8095              	.L280:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8096              		.loc 1 1050 0 is_stmt 0 discriminator 1
 8097 1162 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8098 1166 4B2B     		cmp	r3, #75
 8099 1168 D9D9     		bls	.L283
1057:..\src/command_processing.c ****         }
1058:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1059:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1060:..\src/command_processing.c ****     j = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 188


 8100              		.loc 1 1060 0 is_stmt 1
 8101 116a 0023     		movs	r3, #0
 8102 116c 87F8E634 		strb	r3, [r7, #1254]
1061:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8103              		.loc 1 1061 0
 8104 1170 0023     		movs	r3, #0
 8105 1172 87F8E734 		strb	r3, [r7, #1255]
 8106 1176 21E0     		b	.L284
 8107              	.L287:
1062:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8108              		.loc 1 1062 0
 8109 1178 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8110 117c 07F1A402 		add	r2, r7, #164
 8111 1180 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8112 1182 1A46     		mov	r2, r3
 8113 1184 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8114 1188 0133     		adds	r3, r3, #1
 8115 118a 9A42     		cmp	r2, r3
 8116 118c 0BD1     		bne	.L285
1063:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8117              		.loc 1 1063 0
 8118 118e 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8119 1192 07F10C02 		add	r2, r7, #12
 8120 1196 0121     		movs	r1, #1
 8121 1198 D154     		strb	r1, [r2, r3]
1064:..\src/command_processing.c ****             j++;
 8122              		.loc 1 1064 0
 8123 119a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8124 119e 0133     		adds	r3, r3, #1
 8125 11a0 87F8E634 		strb	r3, [r7, #1254]
 8126 11a4 05E0     		b	.L286
 8127              	.L285:
1065:..\src/command_processing.c ****         }
1066:..\src/command_processing.c ****         else {
1067:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8128              		.loc 1 1067 0
 8129 11a6 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8130 11aa 07F10C02 		add	r2, r7, #12
 8131 11ae 0021     		movs	r1, #0
 8132 11b0 D154     		strb	r1, [r2, r3]
 8133              	.L286:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8134              		.loc 1 1061 0 discriminator 2
 8135 11b2 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8136 11b6 0133     		adds	r3, r3, #1
 8137 11b8 87F8E734 		strb	r3, [r7, #1255]
 8138              	.L284:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8139              		.loc 1 1061 0 is_stmt 0 discriminator 1
 8140 11bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8141 11c0 4B2B     		cmp	r3, #75
 8142 11c2 D9D9     		bls	.L287
1068:..\src/command_processing.c ****         }
1069:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1070:..\src/command_processing.c ****         
1071:..\src/command_processing.c ****     if (!index) {
 8143              		.loc 1 1071 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 189


 8144 11c4 BB1D     		adds	r3, r7, #6
 8145 11c6 1B88     		ldrh	r3, [r3]
 8146 11c8 002B     		cmp	r3, #0
 8147 11ca 17D1     		bne	.L288
1072:..\src/command_processing.c ****         // Get parameters list with relative types
1073:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8148              		.loc 1 1073 0
 8149 11cc 07F52D74 		add	r4, r7, #692
 8150 11d0 07F54072 		add	r2, r7, #768
 8151 11d4 07F55371 		add	r1, r7, #844
 8152 11d8 07F56670 		add	r0, r7, #920
 8153 11dc 07F1E403 		add	r3, r7, #228
 8154 11e0 0393     		str	r3, [sp, #12]
 8155 11e2 07F15803 		add	r3, r7, #88
 8156 11e6 0293     		str	r3, [sp, #8]
 8157 11e8 07F5C273 		add	r3, r7, #388
 8158 11ec 0193     		str	r3, [sp, #4]
 8159 11ee 07F1C403 		add	r3, r7, #196
 8160 11f2 0093     		str	r3, [sp]
 8161 11f4 2346     		mov	r3, r4
 8162 11f6 FFF7FEFF 		bl	get_param_list
1074:..\src/command_processing.c ****     }
1075:..\src/command_processing.c ****     else {
1076:..\src/command_processing.c ****         // Set specific parameter        
1077:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1078:..\src/command_processing.c ****         
1079:..\src/command_processing.c ****         // Find size of data
1080:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1081:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1082:..\src/command_processing.c ****                 sod = 1; break;
1083:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1084:..\src/command_processing.c ****                 sod = 2; break;
1085:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1086:..\src/command_processing.c ****                 sod = 4; break;
1087:..\src/command_processing.c ****         }   
1088:..\src/command_processing.c ****             
1089:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1090:..\src/command_processing.c ****             // Use default specifications for param setting
1091:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1092:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1095:..\src/command_processing.c ****                     }
1096:..\src/command_processing.c ****                     break;                
1097:..\src/command_processing.c ****                 case TYPE_STRING:
1098:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1099:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1100:..\src/command_processing.c ****                     }
1101:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1102:..\src/command_processing.c ****                 break; 
1103:..\src/command_processing.c ****                 case TYPE_INT8:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;                    
1108:..\src/command_processing.c ****                 case TYPE_INT16:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 190


1110:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }                   
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT16:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_INT32:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1126:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 case TYPE_UINT32:
1133:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1134:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1135:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1136:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1137:..\src/command_processing.c ****                         }
1138:..\src/command_processing.c ****                     }
1139:..\src/command_processing.c ****                     break;
1140:..\src/command_processing.c ****                 case TYPE_FLOAT:
1141:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1142:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1143:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1144:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1145:..\src/command_processing.c ****                         }
1146:..\src/command_processing.c ****                     }
1147:..\src/command_processing.c ****                     break;
1148:..\src/command_processing.c ****                 default:
1149:..\src/command_processing.c ****                     break;
1150:..\src/command_processing.c ****             }
1151:..\src/command_processing.c ****         }
1152:..\src/command_processing.c ****         else {  
1153:..\src/command_processing.c ****             // Use custom specifications for param setting
1154:..\src/command_processing.c ****             set_custom_param(index);
1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****         
1157:..\src/command_processing.c ****         // Store param also in user_emg structure
1158:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1159:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****         
1162:..\src/command_processing.c ****         // Perform chip reset if needed
1163:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1164:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1165:..\src/command_processing.c ****             do {
1166:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 191


1167:..\src/command_processing.c ****                 idx++;
1168:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1169:..\src/command_processing.c ****             
1170:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1171:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1172:..\src/command_processing.c ****             }   
1173:..\src/command_processing.c ****         }
1174:..\src/command_processing.c ****     }
1175:..\src/command_processing.c **** } 
 8163              		.loc 1 1175 0
 8164 11fa D9E2     		b	.L339
 8165              	.L288:
1077:..\src/command_processing.c ****         
 8166              		.loc 1 1077 0
 8167 11fc BB1D     		adds	r3, r7, #6
 8168 11fe 1B88     		ldrh	r3, [r3]	@ movhi
 8169 1200 DBB2     		uxtb	r3, r3
 8170 1202 013B     		subs	r3, r3, #1
 8171 1204 87F8DA34 		strb	r3, [r7, #1242]
1080:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8172              		.loc 1 1080 0
 8173 1208 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8174 120c 07F55372 		add	r2, r7, #844
 8175 1210 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8176 1212 092B     		cmp	r3, #9
 8177 1214 22D8     		bhi	.L290
 8178 1216 01A2     		adr	r2, .L292
 8179 1218 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8180              		.p2align 2
 8181              	.L292:
 8182 121c 45120000 		.word	.L291+1
 8183 1220 45120000 		.word	.L291+1
 8184 1224 45120000 		.word	.L291+1
 8185 1228 4D120000 		.word	.L293+1
 8186 122c 4D120000 		.word	.L293+1
 8187 1230 55120000 		.word	.L294+1
 8188 1234 55120000 		.word	.L294+1
 8189 1238 55120000 		.word	.L294+1
 8190 123c 5D120000 		.word	.L290+1
 8191 1240 45120000 		.word	.L291+1
 8192              		.p2align 1
 8193              	.L291:
1082:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8194              		.loc 1 1082 0
 8195 1244 0123     		movs	r3, #1
 8196 1246 87F8E534 		strb	r3, [r7, #1253]
 8197 124a 07E0     		b	.L290
 8198              	.L293:
1084:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8199              		.loc 1 1084 0
 8200 124c 0223     		movs	r3, #2
 8201 124e 87F8E534 		strb	r3, [r7, #1253]
 8202 1252 03E0     		b	.L290
 8203              	.L294:
1086:..\src/command_processing.c ****         }   
 8204              		.loc 1 1086 0
 8205 1254 0423     		movs	r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 192


 8206 1256 87F8E534 		strb	r3, [r7, #1253]
 8207 125a 00BF     		nop
 8208              	.L290:
1089:..\src/command_processing.c ****             // Use default specifications for param setting
 8209              		.loc 1 1089 0
 8210 125c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8211 1260 07F10C02 		add	r2, r7, #12
 8212 1264 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8213 1266 002B     		cmp	r3, #0
 8214 1268 40F03682 		bne	.L295
1091:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8215              		.loc 1 1091 0
 8216 126c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8217 1270 07F55372 		add	r2, r7, #844
 8218 1274 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8219 1276 092B     		cmp	r3, #9
 8220 1278 00F23682 		bhi	.L338
 8221 127c 01A2     		adr	r2, .L298
 8222 127e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8223 1282 00BF     		.p2align 2
 8224              	.L298:
 8225 1284 AD120000 		.word	.L297+1
 8226 1288 63130000 		.word	.L299+1
 8227 128c AD120000 		.word	.L297+1
 8228 1290 F3130000 		.word	.L300+1
 8229 1294 89140000 		.word	.L301+1
 8230 1298 1D150000 		.word	.L302+1
 8231 129c B1150000 		.word	.L303+1
 8232 12a0 45160000 		.word	.L304+1
 8233 12a4 E9160000 		.word	.L338+1
 8234 12a8 F9120000 		.word	.L305+1
 8235              		.p2align 1
 8236              	.L297:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8237              		.loc 1 1093 0
 8238 12ac 0023     		movs	r3, #0
 8239 12ae 87F8E734 		strb	r3, [r7, #1255]
 8240 12b2 17E0     		b	.L306
 8241              	.L307:
1094:..\src/command_processing.c ****                     }
 8242              		.loc 1 1094 0 discriminator 3
 8243 12b4 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8244 12b8 07F56673 		add	r3, r7, #920
 8245 12bc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8246 12c0 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8247 12c4 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8248 12c8 01FB02F2 		mul	r2, r1, r2
 8249 12cc 1344     		add	r3, r3, r2
 8250 12ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8251 12d2 0332     		adds	r2, r2, #3
 8252 12d4 3349     		ldr	r1, .L346+56
 8253 12d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8254 12d8 1A70     		strb	r2, [r3]
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8255              		.loc 1 1093 0 discriminator 3
 8256 12da 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8257 12de 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 193


 8258 12e0 87F8E734 		strb	r3, [r7, #1255]
 8259              	.L306:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8260              		.loc 1 1093 0 is_stmt 0 discriminator 1
 8261 12e4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8262 12e8 07F54072 		add	r2, r7, #768
 8263 12ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8264 12ee 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8265 12f2 9A42     		cmp	r2, r3
 8266 12f4 DED3     		bcc	.L307
1096:..\src/command_processing.c ****                 case TYPE_STRING:
 8267              		.loc 1 1096 0 is_stmt 1
 8268 12f6 F8E1     		b	.L333
 8269              	.L305:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8270              		.loc 1 1098 0
 8271 12f8 0023     		movs	r3, #0
 8272 12fa 87F8E734 		strb	r3, [r7, #1255]
 8273 12fe 17E0     		b	.L309
 8274              	.L310:
1099:..\src/command_processing.c ****                     }
 8275              		.loc 1 1099 0 discriminator 3
 8276 1300 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8277 1304 07F56673 		add	r3, r7, #920
 8278 1308 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8279 130c 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8280 1310 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8281 1314 01FB02F2 		mul	r2, r1, r2
 8282 1318 1344     		add	r3, r3, r2
 8283 131a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8284 131e 0332     		adds	r2, r2, #3
 8285 1320 2049     		ldr	r1, .L346+56
 8286 1322 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8287 1324 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8288              		.loc 1 1098 0 discriminator 3
 8289 1326 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8290 132a 0133     		adds	r3, r3, #1
 8291 132c 87F8E734 		strb	r3, [r7, #1255]
 8292              	.L309:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8293              		.loc 1 1098 0 is_stmt 0 discriminator 1
 8294 1330 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8295 1334 07F54072 		add	r2, r7, #768
 8296 1338 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8297 133a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8298 133e 9A42     		cmp	r2, r3
 8299 1340 DED3     		bcc	.L310
1101:..\src/command_processing.c ****                 break; 
 8300              		.loc 1 1101 0 is_stmt 1
 8301 1342 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8302 1346 07F56673 		add	r3, r7, #920
 8303 134a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8304 134e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8305 1352 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8306 1356 01FB02F2 		mul	r2, r1, r2
 8307 135a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 194


 8308 135c 0022     		movs	r2, #0
 8309 135e 1A70     		strb	r2, [r3]
1102:..\src/command_processing.c ****                 case TYPE_INT8:
 8310              		.loc 1 1102 0
 8311 1360 C3E1     		b	.L333
 8312              	.L299:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8313              		.loc 1 1104 0
 8314 1362 0023     		movs	r3, #0
 8315 1364 87F8E734 		strb	r3, [r7, #1255]
 8316 1368 39E0     		b	.L311
 8317              	.L347:
 8318 136a 00BF     		.align	2
 8319              	.L346:
 8320 136c A00C0000 		.word	.LC112
 8321 1370 B0010000 		.word	.LC113
 8322 1374 24020000 		.word	.LC114
 8323 1378 A0020000 		.word	.LC115
 8324 137c E0020000 		.word	.LC116
 8325 1380 0C030000 		.word	.LC117
 8326 1384 24030000 		.word	.LC118
 8327 1388 4C030000 		.word	.LC119
 8328 138c A8030000 		.word	.LC120
 8329 1390 E8030000 		.word	.LC121
 8330 1394 30040000 		.word	.LC122
 8331 1398 D00D0000 		.word	.LC78
 8332 139c F00D0000 		.word	.LC79
 8333 13a0 FC0D0000 		.word	.LC80
 8334 13a4 00000000 		.word	g_rx
 8335              	.L312:
1105:..\src/command_processing.c ****                     }
 8336              		.loc 1 1105 0 discriminator 3
 8337 13a8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8338 13ac 07F56673 		add	r3, r7, #920
 8339 13b0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8340 13b4 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8341 13b8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8342 13bc 01FB02F2 		mul	r2, r1, r2
 8343 13c0 1344     		add	r3, r3, r2
 8344 13c2 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8345 13c6 0332     		adds	r2, r2, #3
 8346 13c8 C649     		ldr	r1, .L348
 8347 13ca 0A44     		add	r2, r2, r1
 8348 13cc 92F90020 		ldrsb	r2, [r2]
 8349 13d0 D2B2     		uxtb	r2, r2
 8350 13d2 1A70     		strb	r2, [r3]
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8351              		.loc 1 1104 0 discriminator 3
 8352 13d4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8353 13d8 0133     		adds	r3, r3, #1
 8354 13da 87F8E734 		strb	r3, [r7, #1255]
 8355              	.L311:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8356              		.loc 1 1104 0 is_stmt 0 discriminator 1
 8357 13de 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8358 13e2 07F54072 		add	r2, r7, #768
 8359 13e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 195


 8360 13e8 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8361 13ec 9A42     		cmp	r2, r3
 8362 13ee DBD3     		bcc	.L312
1107:..\src/command_processing.c ****                 case TYPE_INT16:
 8363              		.loc 1 1107 0 is_stmt 1
 8364 13f0 7BE1     		b	.L333
 8365              	.L300:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8366              		.loc 1 1109 0
 8367 13f2 0023     		movs	r3, #0
 8368 13f4 87F8E734 		strb	r3, [r7, #1255]
 8369 13f8 3CE0     		b	.L313
 8370              	.L316:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8371              		.loc 1 1110 0
 8372 13fa 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8373 13fe 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8374 1402 02FB03F3 		mul	r3, r2, r3
 8375 1406 0333     		adds	r3, r3, #3
 8376 1408 B64A     		ldr	r2, .L348
 8377 140a 1344     		add	r3, r3, r2
 8378 140c B3F90030 		ldrsh	r3, [r3]
 8379 1410 A7F8D834 		strh	r3, [r7, #1240]	@ movhi
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8380              		.loc 1 1111 0
 8381 1414 0023     		movs	r3, #0
 8382 1416 87F8E634 		strb	r3, [r7, #1254]
 8383 141a 20E0     		b	.L314
 8384              	.L315:
1112:..\src/command_processing.c ****                         }
 8385              		.loc 1 1112 0 discriminator 3
 8386 141c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8387 1420 07F56673 		add	r3, r7, #920
 8388 1424 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8389 1428 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8390 142c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8391 1430 01FB03F3 		mul	r3, r1, r3
 8392 1434 1846     		mov	r0, r3
 8393 1436 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8394 143a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8395 143e CB1A     		subs	r3, r1, r3
 8396 1440 0344     		add	r3, r3, r0
 8397 1442 013B     		subs	r3, r3, #1
 8398 1444 1344     		add	r3, r3, r2
 8399 1446 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8400 144a 07F59B61 		add	r1, r7, #1240
 8401 144e 0A44     		add	r2, r2, r1
 8402 1450 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8403 1452 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8404              		.loc 1 1111 0 discriminator 3
 8405 1454 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8406 1458 0133     		adds	r3, r3, #1
 8407 145a 87F8E634 		strb	r3, [r7, #1254]
 8408              	.L314:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8409              		.loc 1 1111 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 196


 8410 145e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8411 1462 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8412 1466 9A42     		cmp	r2, r3
 8413 1468 D8D3     		bcc	.L315
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8414              		.loc 1 1109 0 is_stmt 1 discriminator 2
 8415 146a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8416 146e 0133     		adds	r3, r3, #1
 8417 1470 87F8E734 		strb	r3, [r7, #1255]
 8418              	.L313:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8419              		.loc 1 1109 0 is_stmt 0 discriminator 1
 8420 1474 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8421 1478 07F54072 		add	r2, r7, #768
 8422 147c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8423 147e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8424 1482 9A42     		cmp	r2, r3
 8425 1484 B9D3     		bcc	.L316
1115:..\src/command_processing.c ****                 case TYPE_UINT16:
 8426              		.loc 1 1115 0 is_stmt 1
 8427 1486 30E1     		b	.L333
 8428              	.L301:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8429              		.loc 1 1117 0
 8430 1488 0023     		movs	r3, #0
 8431 148a 87F8E734 		strb	r3, [r7, #1255]
 8432 148e 3BE0     		b	.L317
 8433              	.L320:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8434              		.loc 1 1118 0
 8435 1490 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8436 1494 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8437 1498 02FB03F3 		mul	r3, r2, r3
 8438 149c 0333     		adds	r3, r3, #3
 8439 149e 914A     		ldr	r2, .L348
 8440 14a0 1344     		add	r3, r3, r2
 8441 14a2 1B88     		ldrh	r3, [r3]
 8442 14a4 A7F8D634 		strh	r3, [r7, #1238]	@ movhi
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8443              		.loc 1 1119 0
 8444 14a8 0023     		movs	r3, #0
 8445 14aa 87F8E634 		strb	r3, [r7, #1254]
 8446 14ae 20E0     		b	.L318
 8447              	.L319:
1120:..\src/command_processing.c ****                         }
 8448              		.loc 1 1120 0 discriminator 3
 8449 14b0 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8450 14b4 07F56673 		add	r3, r7, #920
 8451 14b8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8452 14bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8453 14c0 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8454 14c4 01FB03F3 		mul	r3, r1, r3
 8455 14c8 1846     		mov	r0, r3
 8456 14ca 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8457 14ce 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8458 14d2 CB1A     		subs	r3, r1, r3
 8459 14d4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 197


 8460 14d6 013B     		subs	r3, r3, #1
 8461 14d8 1344     		add	r3, r3, r2
 8462 14da 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8463 14de 07F2D641 		addw	r1, r7, #1238
 8464 14e2 0A44     		add	r2, r2, r1
 8465 14e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8466 14e6 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8467              		.loc 1 1119 0 discriminator 3
 8468 14e8 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8469 14ec 0133     		adds	r3, r3, #1
 8470 14ee 87F8E634 		strb	r3, [r7, #1254]
 8471              	.L318:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8472              		.loc 1 1119 0 is_stmt 0 discriminator 1
 8473 14f2 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8474 14f6 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8475 14fa 9A42     		cmp	r2, r3
 8476 14fc D8D3     		bcc	.L319
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8477              		.loc 1 1117 0 is_stmt 1 discriminator 2
 8478 14fe 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8479 1502 0133     		adds	r3, r3, #1
 8480 1504 87F8E734 		strb	r3, [r7, #1255]
 8481              	.L317:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8482              		.loc 1 1117 0 is_stmt 0 discriminator 1
 8483 1508 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8484 150c 07F54072 		add	r2, r7, #768
 8485 1510 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8486 1512 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8487 1516 9A42     		cmp	r2, r3
 8488 1518 BAD3     		bcc	.L320
1123:..\src/command_processing.c ****                 case TYPE_INT32:
 8489              		.loc 1 1123 0 is_stmt 1
 8490 151a E6E0     		b	.L333
 8491              	.L302:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8492              		.loc 1 1125 0
 8493 151c 0023     		movs	r3, #0
 8494 151e 87F8E734 		strb	r3, [r7, #1255]
 8495 1522 3BE0     		b	.L321
 8496              	.L324:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8497              		.loc 1 1126 0
 8498 1524 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8499 1528 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8500 152c 02FB03F3 		mul	r3, r2, r3
 8501 1530 0333     		adds	r3, r3, #3
 8502 1532 6C4A     		ldr	r2, .L348
 8503 1534 1344     		add	r3, r3, r2
 8504 1536 1B68     		ldr	r3, [r3]
 8505 1538 C7F8D034 		str	r3, [r7, #1232]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8506              		.loc 1 1127 0
 8507 153c 0023     		movs	r3, #0
 8508 153e 87F8E634 		strb	r3, [r7, #1254]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 198


 8509 1542 20E0     		b	.L322
 8510              	.L323:
1128:..\src/command_processing.c ****                         }
 8511              		.loc 1 1128 0 discriminator 3
 8512 1544 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8513 1548 07F56673 		add	r3, r7, #920
 8514 154c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8515 1550 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8516 1554 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8517 1558 01FB03F3 		mul	r3, r1, r3
 8518 155c 1846     		mov	r0, r3
 8519 155e 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8520 1562 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8521 1566 CB1A     		subs	r3, r1, r3
 8522 1568 0344     		add	r3, r3, r0
 8523 156a 013B     		subs	r3, r3, #1
 8524 156c 1344     		add	r3, r3, r2
 8525 156e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8526 1572 07F59A61 		add	r1, r7, #1232
 8527 1576 0A44     		add	r2, r2, r1
 8528 1578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8529 157a 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8530              		.loc 1 1127 0 discriminator 3
 8531 157c 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8532 1580 0133     		adds	r3, r3, #1
 8533 1582 87F8E634 		strb	r3, [r7, #1254]
 8534              	.L322:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8535              		.loc 1 1127 0 is_stmt 0 discriminator 1
 8536 1586 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8537 158a 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8538 158e 9A42     		cmp	r2, r3
 8539 1590 D8D3     		bcc	.L323
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8540              		.loc 1 1125 0 is_stmt 1 discriminator 2
 8541 1592 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8542 1596 0133     		adds	r3, r3, #1
 8543 1598 87F8E734 		strb	r3, [r7, #1255]
 8544              	.L321:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8545              		.loc 1 1125 0 is_stmt 0 discriminator 1
 8546 159c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8547 15a0 07F54072 		add	r2, r7, #768
 8548 15a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8549 15a6 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8550 15aa 9A42     		cmp	r2, r3
 8551 15ac BAD3     		bcc	.L324
1131:..\src/command_processing.c ****                 case TYPE_UINT32:
 8552              		.loc 1 1131 0 is_stmt 1
 8553 15ae 9CE0     		b	.L333
 8554              	.L303:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8555              		.loc 1 1133 0
 8556 15b0 0023     		movs	r3, #0
 8557 15b2 87F8E734 		strb	r3, [r7, #1255]
 8558 15b6 3BE0     		b	.L325
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 199


 8559              	.L328:
1134:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8560              		.loc 1 1134 0
 8561 15b8 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8562 15bc 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8563 15c0 02FB03F3 		mul	r3, r2, r3
 8564 15c4 0333     		adds	r3, r3, #3
 8565 15c6 474A     		ldr	r2, .L348
 8566 15c8 1344     		add	r3, r3, r2
 8567 15ca 1B68     		ldr	r3, [r3]
 8568 15cc C7F8CC34 		str	r3, [r7, #1228]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8569              		.loc 1 1135 0
 8570 15d0 0023     		movs	r3, #0
 8571 15d2 87F8E634 		strb	r3, [r7, #1254]
 8572 15d6 20E0     		b	.L326
 8573              	.L327:
1136:..\src/command_processing.c ****                         }
 8574              		.loc 1 1136 0 discriminator 3
 8575 15d8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8576 15dc 07F56673 		add	r3, r7, #920
 8577 15e0 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8578 15e4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8579 15e8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8580 15ec 01FB03F3 		mul	r3, r1, r3
 8581 15f0 1846     		mov	r0, r3
 8582 15f2 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8583 15f6 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8584 15fa CB1A     		subs	r3, r1, r3
 8585 15fc 0344     		add	r3, r3, r0
 8586 15fe 013B     		subs	r3, r3, #1
 8587 1600 1344     		add	r3, r3, r2
 8588 1602 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8589 1606 07F2CC41 		addw	r1, r7, #1228
 8590 160a 0A44     		add	r2, r2, r1
 8591 160c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8592 160e 1A70     		strb	r2, [r3]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8593              		.loc 1 1135 0 discriminator 3
 8594 1610 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8595 1614 0133     		adds	r3, r3, #1
 8596 1616 87F8E634 		strb	r3, [r7, #1254]
 8597              	.L326:
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8598              		.loc 1 1135 0 is_stmt 0 discriminator 1
 8599 161a 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8600 161e 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8601 1622 9A42     		cmp	r2, r3
 8602 1624 D8D3     		bcc	.L327
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8603              		.loc 1 1133 0 is_stmt 1 discriminator 2
 8604 1626 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8605 162a 0133     		adds	r3, r3, #1
 8606 162c 87F8E734 		strb	r3, [r7, #1255]
 8607              	.L325:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8608              		.loc 1 1133 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 200


 8609 1630 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8610 1634 07F54072 		add	r2, r7, #768
 8611 1638 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8612 163a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8613 163e 9A42     		cmp	r2, r3
 8614 1640 BAD3     		bcc	.L328
1139:..\src/command_processing.c ****                 case TYPE_FLOAT:
 8615              		.loc 1 1139 0 is_stmt 1
 8616 1642 52E0     		b	.L333
 8617              	.L304:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8618              		.loc 1 1141 0
 8619 1644 0023     		movs	r3, #0
 8620 1646 87F8E734 		strb	r3, [r7, #1255]
 8621 164a 3BE0     		b	.L329
 8622              	.L332:
1142:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8623              		.loc 1 1142 0
 8624 164c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8625 1650 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8626 1654 02FB03F3 		mul	r3, r2, r3
 8627 1658 0333     		adds	r3, r3, #3
 8628 165a 224A     		ldr	r2, .L348
 8629 165c 1344     		add	r3, r3, r2
 8630 165e 1B68     		ldr	r3, [r3]	@ float
 8631 1660 C7F8C834 		str	r3, [r7, #1224]	@ float
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8632              		.loc 1 1143 0
 8633 1664 0023     		movs	r3, #0
 8634 1666 87F8E634 		strb	r3, [r7, #1254]
 8635 166a 20E0     		b	.L330
 8636              	.L331:
1144:..\src/command_processing.c ****                         }
 8637              		.loc 1 1144 0 discriminator 3
 8638 166c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8639 1670 07F56673 		add	r3, r7, #920
 8640 1674 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8641 1678 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8642 167c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8643 1680 01FB03F3 		mul	r3, r1, r3
 8644 1684 1846     		mov	r0, r3
 8645 1686 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8646 168a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8647 168e CB1A     		subs	r3, r1, r3
 8648 1690 0344     		add	r3, r3, r0
 8649 1692 013B     		subs	r3, r3, #1
 8650 1694 1344     		add	r3, r3, r2
 8651 1696 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8652 169a 07F59961 		add	r1, r7, #1224
 8653 169e 0A44     		add	r2, r2, r1
 8654 16a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8655 16a2 1A70     		strb	r2, [r3]
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8656              		.loc 1 1143 0 discriminator 3
 8657 16a4 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8658 16a8 0133     		adds	r3, r3, #1
 8659 16aa 87F8E634 		strb	r3, [r7, #1254]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 201


 8660              	.L330:
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8661              		.loc 1 1143 0 is_stmt 0 discriminator 1
 8662 16ae 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8663 16b2 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8664 16b6 9A42     		cmp	r2, r3
 8665 16b8 D8D3     		bcc	.L331
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8666              		.loc 1 1141 0 is_stmt 1 discriminator 2
 8667 16ba 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8668 16be 0133     		adds	r3, r3, #1
 8669 16c0 87F8E734 		strb	r3, [r7, #1255]
 8670              	.L329:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8671              		.loc 1 1141 0 is_stmt 0 discriminator 1
 8672 16c4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8673 16c8 07F54072 		add	r2, r7, #768
 8674 16cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8675 16ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8676 16d2 9A42     		cmp	r2, r3
 8677 16d4 BAD3     		bcc	.L332
1147:..\src/command_processing.c ****                 default:
 8678              		.loc 1 1147 0 is_stmt 1
 8679 16d6 08E0     		b	.L333
 8680              	.L295:
1154:..\src/command_processing.c ****         }
 8681              		.loc 1 1154 0
 8682 16d8 BB1D     		adds	r3, r7, #6
 8683 16da 1B88     		ldrh	r3, [r3]
 8684 16dc 1846     		mov	r0, r3
 8685 16de FFF7FEFF 		bl	set_custom_param
 8686 16e2 02E0     		b	.L333
 8687              	.L349:
 8688              		.align	2
 8689              	.L348:
 8690 16e4 00000000 		.word	g_rx
 8691              	.L338:
1149:..\src/command_processing.c ****             }
 8692              		.loc 1 1149 0
 8693 16e8 00BF     		nop
 8694              	.L333:
1158:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8695              		.loc 1 1158 0
 8696 16ea 97F8DB34 		ldrb	r3, [r7, #1243]	@ zero_extendqisi2
 8697 16ee 9BB2     		uxth	r3, r3
 8698 16f0 BA1D     		adds	r2, r7, #6
 8699 16f2 1288     		ldrh	r2, [r2]
 8700 16f4 9A42     		cmp	r2, r3
 8701 16f6 11D0     		beq	.L334
1159:..\src/command_processing.c ****         }
 8702              		.loc 1 1159 0
 8703 16f8 D7F8E034 		ldr	r3, [r7, #1248]
 8704 16fc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8705 1700 5B01     		lsls	r3, r3, #5
 8706 1702 03F51273 		add	r3, r3, #584
 8707 1706 D7F8E024 		ldr	r2, [r7, #1248]
 8708 170a D018     		adds	r0, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 202


 8709 170c D7F8E034 		ldr	r3, [r7, #1248]
 8710 1710 03F5F873 		add	r3, r3, #496
 8711 1714 1022     		movs	r2, #16
 8712 1716 1946     		mov	r1, r3
 8713 1718 FFF7FEFF 		bl	memcpy
 8714              	.L334:
1163:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8715              		.loc 1 1163 0
 8716 171c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8717 1720 07F55372 		add	r2, r7, #844
 8718 1724 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8719 1726 002B     		cmp	r3, #0
 8720 1728 42D1     		bne	.L339
 8721              	.LBB14:
1164:..\src/command_processing.c ****             do {
 8722              		.loc 1 1164 0
 8723 172a 0023     		movs	r3, #0
 8724 172c 87F8DF34 		strb	r3, [r7, #1247]
 8725 1730 FF23     		movs	r3, #255
 8726 1732 87F8DE34 		strb	r3, [r7, #1246]
 8727              	.L336:
1166:..\src/command_processing.c ****                 idx++;
 8728              		.loc 1 1166 0
 8729 1736 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8730 173a 07F55372 		add	r2, r7, #844
 8731 173e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8732 1740 002B     		cmp	r3, #0
 8733 1742 04D1     		bne	.L335
1166:..\src/command_processing.c ****                 idx++;
 8734              		.loc 1 1166 0 is_stmt 0 discriminator 1
 8735 1744 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8736 1748 0133     		adds	r3, r3, #1
 8737 174a 87F8DE34 		strb	r3, [r7, #1246]
 8738              	.L335:
1167:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8739              		.loc 1 1167 0 is_stmt 1
 8740 174e 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8741 1752 0133     		adds	r3, r3, #1
 8742 1754 87F8DF34 		strb	r3, [r7, #1247]
1168:..\src/command_processing.c ****             
 8743              		.loc 1 1168 0
 8744 1758 97F8DF24 		ldrb	r2, [r7, #1247]	@ zero_extendqisi2
 8745 175c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8746 1760 9A42     		cmp	r2, r3
 8747 1762 E8D9     		bls	.L336
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8748              		.loc 1 1170 0
 8749 1764 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8750 1768 07F1C402 		add	r2, r7, #196
 8751 176c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8752 176e 052B     		cmp	r3, #5
 8753 1770 1BD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8754              		.loc 1 1170 0 is_stmt 0 discriminator 1
 8755 1772 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8756 1776 07F1C402 		add	r2, r7, #196
 8757 177a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 203


 8758 177c 062B     		cmp	r3, #6
 8759 177e 14D0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8760              		.loc 1 1170 0 discriminator 2
 8761 1780 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8762 1784 07F1C402 		add	r2, r7, #196
 8763 1788 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8764 178a 082B     		cmp	r3, #8
 8765 178c 0DD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8766              		.loc 1 1170 0 discriminator 3
 8767 178e 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8768 1792 07F1C402 		add	r2, r7, #196
 8769 1796 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8770 1798 092B     		cmp	r3, #9
 8771 179a 06D0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8772              		.loc 1 1170 0 discriminator 4
 8773 179c 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8774 17a0 07F1C402 		add	r2, r7, #196
 8775 17a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8776 17a6 0A2B     		cmp	r3, #10
 8777 17a8 02D1     		bne	.L339
 8778              	.L337:
1171:..\src/command_processing.c ****             }   
 8779              		.loc 1 1171 0 is_stmt 1
 8780 17aa 044B     		ldr	r3, .L350
 8781 17ac 0122     		movs	r2, #1
 8782 17ae 1A70     		strb	r2, [r3]
 8783              	.L339:
 8784              	.LBE14:
 8785              		.loc 1 1175 0
 8786 17b0 00BF     		nop
 8787 17b2 07F59D67 		add	r7, r7, #1256
 8788              		.cfi_def_cfa_offset 16
 8789 17b6 BD46     		mov	sp, r7
 8790              		.cfi_def_cfa_register 13
 8791              		@ sp needed
 8792 17b8 B0BD     		pop	{r4, r5, r7, pc}
 8793              	.L351:
 8794 17ba 00BF     		.align	2
 8795              	.L350:
 8796 17bc 00000000 		.word	reset_PSoC_flag
 8797              		.cfi_endproc
 8798              	.LFE68:
 8799              		.size	manage_param_list, .-manage_param_list
 8800              		.global	__aeabi_fmul
 8801              		.global	__aeabi_f2iz
 8802              		.section	.text.set_custom_param,"ax",%progbits
 8803              		.align	2
 8804              		.global	set_custom_param
 8805              		.thumb
 8806              		.thumb_func
 8807              		.type	set_custom_param, %function
 8808              	set_custom_param:
 8809              	.LFB69:
1176:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 204


1177:..\src/command_processing.c **** //==============================================================================
1178:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1179:..\src/command_processing.c **** //==============================================================================
1180:..\src/command_processing.c **** 
1181:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8810              		.loc 1 1181 0
 8811              		.cfi_startproc
 8812              		@ args = 0, pretend = 0, frame = 24
 8813              		@ frame_needed = 1, uses_anonymous_args = 0
 8814 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8815              		.cfi_def_cfa_offset 20
 8816              		.cfi_offset 4, -20
 8817              		.cfi_offset 5, -16
 8818              		.cfi_offset 6, -12
 8819              		.cfi_offset 7, -8
 8820              		.cfi_offset 14, -4
 8821 0002 87B0     		sub	sp, sp, #28
 8822              		.cfi_def_cfa_offset 48
 8823 0004 00AF     		add	r7, sp, #0
 8824              		.cfi_def_cfa_register 7
 8825 0006 0346     		mov	r3, r0
 8826 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1182:..\src/command_processing.c **** 
1183:..\src/command_processing.c ****     uint8 CYDATA i, j;
1184:..\src/command_processing.c ****     uint8 aux_uchar;
1185:..\src/command_processing.c ****     float aux_float, aux_float2;
1186:..\src/command_processing.c **** 
1187:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8827              		.loc 1 1187 0
 8828 000a 0023     		movs	r3, #0
 8829 000c 3B75     		strb	r3, [r7, #20]
1188:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8830              		.loc 1 1188 0
 8831 000e 0123     		movs	r3, #1
 8832 0010 FB74     		strb	r3, [r7, #19]
1189:..\src/command_processing.c ****     
1190:..\src/command_processing.c ****     switch(index){
 8833              		.loc 1 1190 0
 8834 0012 FB88     		ldrh	r3, [r7, #6]
 8835 0014 023B     		subs	r3, r3, #2
 8836 0016 452B     		cmp	r3, #69
 8837 0018 01F2EB81 		bhi	.L444
 8838 001c 01A2     		adr	r2, .L355
 8839 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8840 0022 00BF     		.p2align 2
 8841              	.L355:
 8842 0024 3D010000 		.word	.L354+1
 8843 0028 6F030000 		.word	.L356+1
 8844 002c F3130000 		.word	.L444+1
 8845 0030 B5050000 		.word	.L357+1
 8846 0034 F3130000 		.word	.L444+1
 8847 0038 F3130000 		.word	.L444+1
 8848 003c FF050000 		.word	.L358+1
 8849 0040 F3130000 		.word	.L444+1
 8850 0044 F3130000 		.word	.L444+1
 8851 0048 35070000 		.word	.L359+1
 8852 004c F3130000 		.word	.L444+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 205


 8853 0050 F3130000 		.word	.L444+1
 8854 0054 F3130000 		.word	.L444+1
 8855 0058 F3130000 		.word	.L444+1
 8856 005c F3130000 		.word	.L444+1
 8857 0060 F3130000 		.word	.L444+1
 8858 0064 F3130000 		.word	.L444+1
 8859 0068 F3130000 		.word	.L444+1
 8860 006c F3130000 		.word	.L444+1
 8861 0070 F3130000 		.word	.L444+1
 8862 0074 F3130000 		.word	.L444+1
 8863 0078 35080000 		.word	.L360+1
 8864 007c 93080000 		.word	.L361+1
 8865 0080 F3130000 		.word	.L444+1
 8866 0084 F3130000 		.word	.L444+1
 8867 0088 F3130000 		.word	.L444+1
 8868 008c CD080000 		.word	.L362+1
 8869 0090 F3130000 		.word	.L444+1
 8870 0094 F3130000 		.word	.L444+1
 8871 0098 490A0000 		.word	.L363+1
 8872 009c F50A0000 		.word	.L364+1
 8873 00a0 F3130000 		.word	.L444+1
 8874 00a4 F3130000 		.word	.L444+1
 8875 00a8 F3130000 		.word	.L444+1
 8876 00ac F3130000 		.word	.L444+1
 8877 00b0 F3130000 		.word	.L444+1
 8878 00b4 2F0B0000 		.word	.L365+1
 8879 00b8 F3130000 		.word	.L444+1
 8880 00bc F3130000 		.word	.L444+1
 8881 00c0 F3130000 		.word	.L444+1
 8882 00c4 F3130000 		.word	.L444+1
 8883 00c8 F3130000 		.word	.L444+1
 8884 00cc 690B0000 		.word	.L366+1
 8885 00d0 AF0D0000 		.word	.L367+1
 8886 00d4 F3130000 		.word	.L444+1
 8887 00d8 DD0F0000 		.word	.L368+1
 8888 00dc F3130000 		.word	.L444+1
 8889 00e0 F3130000 		.word	.L444+1
 8890 00e4 45100000 		.word	.L369+1
 8891 00e8 F3130000 		.word	.L444+1
 8892 00ec F3130000 		.word	.L444+1
 8893 00f0 59110000 		.word	.L370+1
 8894 00f4 F3130000 		.word	.L444+1
 8895 00f8 F3130000 		.word	.L444+1
 8896 00fc F3130000 		.word	.L444+1
 8897 0100 F3130000 		.word	.L444+1
 8898 0104 F3130000 		.word	.L444+1
 8899 0108 F3130000 		.word	.L444+1
 8900 010c F3130000 		.word	.L444+1
 8901 0110 57120000 		.word	.L371+1
 8902 0114 F3130000 		.word	.L444+1
 8903 0118 F3130000 		.word	.L444+1
 8904 011c F3130000 		.word	.L444+1
 8905 0120 F3130000 		.word	.L444+1
 8906 0124 F3130000 		.word	.L444+1
 8907 0128 F3130000 		.word	.L444+1
 8908 012c F3130000 		.word	.L444+1
 8909 0130 F3130000 		.word	.L444+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 206


 8910 0134 F3130000 		.word	.L444+1
 8911 0138 A1120000 		.word	.L372+1
 8912              		.p2align 1
 8913              	.L354:
1191:..\src/command_processing.c ****         case 2:         // Position PID
1192:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8914              		.loc 1 1192 0
 8915 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8916 013e AB49     		ldr	r1, .L450
 8917 0140 1346     		mov	r3, r2
 8918 0142 DB00     		lsls	r3, r3, #3
 8919 0144 9B1A     		subs	r3, r3, r2
 8920 0146 1B01     		lsls	r3, r3, #4
 8921 0148 0B44     		add	r3, r3, r1
 8922 014a 03F20F13 		addw	r3, r3, #271
 8923 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8924 0150 032B     		cmp	r3, #3
 8925 0152 00F08680 		beq	.L373
1193:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8926              		.loc 1 1193 0
 8927 0156 A64B     		ldr	r3, .L450+4
 8928 0158 1B68     		ldr	r3, [r3]	@ float
 8929 015a FB60     		str	r3, [r7, #12]	@ float
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8930              		.loc 1 1194 0
 8931 015c 0023     		movs	r3, #0
 8932 015e BB75     		strb	r3, [r7, #22]
 8933 0160 0EE0     		b	.L374
 8934              	.L375:
1195:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8935              		.loc 1 1195 0 discriminator 3
 8936 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8937 0164 C3F10303 		rsb	r3, r3, #3
 8938 0168 07F10802 		add	r2, r7, #8
 8939 016c 1344     		add	r3, r3, r2
 8940 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8941 0170 07F10C01 		add	r1, r7, #12
 8942 0174 0A44     		add	r2, r2, r1
 8943 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8944 0178 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8945              		.loc 1 1194 0 discriminator 3
 8946 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8947 017c 0133     		adds	r3, r3, #1
 8948 017e BB75     		strb	r3, [r7, #22]
 8949              	.L374:
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8950              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8951 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8952 0182 032B     		cmp	r3, #3
 8953 0184 EDD9     		bls	.L375
1196:..\src/command_processing.c ****                 }
1197:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8954              		.loc 1 1197 0 is_stmt 1
 8955 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8956 0188 BB68     		ldr	r3, [r7, #8]	@ float
 8957 018a 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 207


 8958 018e 1846     		mov	r0, r3
 8959 0190 FFF7FEFF 		bl	__aeabi_fmul
 8960 0194 0346     		mov	r3, r0
 8961 0196 1846     		mov	r0, r3
 8962 0198 FFF7FEFF 		bl	__aeabi_f2iz
 8963 019c 0146     		mov	r1, r0
 8964 019e 954A     		ldr	r2, .L450+8
 8965 01a0 2346     		mov	r3, r4
 8966 01a2 DB00     		lsls	r3, r3, #3
 8967 01a4 1B1B     		subs	r3, r3, r4
 8968 01a6 1B01     		lsls	r3, r3, #4
 8969 01a8 1344     		add	r3, r3, r2
 8970 01aa B033     		adds	r3, r3, #176
 8971 01ac 1960     		str	r1, [r3]
1198:..\src/command_processing.c ****                 
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8972              		.loc 1 1199 0
 8973 01ae 924B     		ldr	r3, .L450+12
 8974 01b0 1B68     		ldr	r3, [r3]	@ float
 8975 01b2 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8976              		.loc 1 1200 0
 8977 01b4 0023     		movs	r3, #0
 8978 01b6 BB75     		strb	r3, [r7, #22]
 8979 01b8 0EE0     		b	.L376
 8980              	.L377:
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8981              		.loc 1 1201 0 discriminator 3
 8982 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8983 01bc C3F10303 		rsb	r3, r3, #3
 8984 01c0 07F10802 		add	r2, r7, #8
 8985 01c4 1344     		add	r3, r3, r2
 8986 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8987 01c8 07F10C01 		add	r1, r7, #12
 8988 01cc 0A44     		add	r2, r2, r1
 8989 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8990 01d0 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8991              		.loc 1 1200 0 discriminator 3
 8992 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8993 01d4 0133     		adds	r3, r3, #1
 8994 01d6 BB75     		strb	r3, [r7, #22]
 8995              	.L376:
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8996              		.loc 1 1200 0 is_stmt 0 discriminator 1
 8997 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8998 01da 032B     		cmp	r3, #3
 8999 01dc EDD9     		bls	.L377
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9000              		.loc 1 1203 0 is_stmt 1
 9001 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9002 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 9003 01e2 4FF08F41 		mov	r1, #1199570944
 9004 01e6 1846     		mov	r0, r3
 9005 01e8 FFF7FEFF 		bl	__aeabi_fmul
 9006 01ec 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 208


 9007 01ee 1846     		mov	r0, r3
 9008 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 9009 01f4 0146     		mov	r1, r0
 9010 01f6 7F4A     		ldr	r2, .L450+8
 9011 01f8 2346     		mov	r3, r4
 9012 01fa DB00     		lsls	r3, r3, #3
 9013 01fc 1B1B     		subs	r3, r3, r4
 9014 01fe 1B01     		lsls	r3, r3, #4
 9015 0200 1344     		add	r3, r3, r2
 9016 0202 B433     		adds	r3, r3, #180
 9017 0204 1960     		str	r1, [r3]
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9018              		.loc 1 1205 0
 9019 0206 7D4B     		ldr	r3, .L450+16
 9020 0208 1B68     		ldr	r3, [r3]	@ float
 9021 020a FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9022              		.loc 1 1206 0
 9023 020c 0023     		movs	r3, #0
 9024 020e BB75     		strb	r3, [r7, #22]
 9025 0210 0EE0     		b	.L378
 9026              	.L379:
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9027              		.loc 1 1207 0 discriminator 3
 9028 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9029 0214 C3F10303 		rsb	r3, r3, #3
 9030 0218 07F10802 		add	r2, r7, #8
 9031 021c 1344     		add	r3, r3, r2
 9032 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9033 0220 07F10C01 		add	r1, r7, #12
 9034 0224 0A44     		add	r2, r2, r1
 9035 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9036 0228 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9037              		.loc 1 1206 0 discriminator 3
 9038 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9039 022c 0133     		adds	r3, r3, #1
 9040 022e BB75     		strb	r3, [r7, #22]
 9041              	.L378:
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9042              		.loc 1 1206 0 is_stmt 0 discriminator 1
 9043 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9044 0232 032B     		cmp	r3, #3
 9045 0234 EDD9     		bls	.L379
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9046              		.loc 1 1209 0 is_stmt 1
 9047 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9048 0238 BB68     		ldr	r3, [r7, #8]	@ float
 9049 023a 4FF08F41 		mov	r1, #1199570944
 9050 023e 1846     		mov	r0, r3
 9051 0240 FFF7FEFF 		bl	__aeabi_fmul
 9052 0244 0346     		mov	r3, r0
 9053 0246 1846     		mov	r0, r3
 9054 0248 FFF7FEFF 		bl	__aeabi_f2iz
 9055 024c 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 209


 9056 024e 694A     		ldr	r2, .L450+8
 9057 0250 2346     		mov	r3, r4
 9058 0252 DB00     		lsls	r3, r3, #3
 9059 0254 1B1B     		subs	r3, r3, r4
 9060 0256 1B01     		lsls	r3, r3, #4
 9061 0258 1344     		add	r3, r3, r2
 9062 025a B833     		adds	r3, r3, #184
 9063 025c 1960     		str	r1, [r3]
1210:..\src/command_processing.c ****             }
1211:..\src/command_processing.c ****             else {
1212:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1213:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1214:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1215:..\src/command_processing.c ****                 }
1216:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1217:..\src/command_processing.c ****                 
1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1229:..\src/command_processing.c ****             }
1230:..\src/command_processing.c ****             break;
 9064              		.loc 1 1230 0
 9065 025e 01F0D3B8 		b	.L387
 9066              	.L373:
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9067              		.loc 1 1212 0
 9068 0262 634B     		ldr	r3, .L450+4
 9069 0264 1B68     		ldr	r3, [r3]	@ float
 9070 0266 FB60     		str	r3, [r7, #12]	@ float
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9071              		.loc 1 1213 0
 9072 0268 0023     		movs	r3, #0
 9073 026a BB75     		strb	r3, [r7, #22]
 9074 026c 0EE0     		b	.L381
 9075              	.L382:
1214:..\src/command_processing.c ****                 }
 9076              		.loc 1 1214 0 discriminator 3
 9077 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9078 0270 C3F10303 		rsb	r3, r3, #3
 9079 0274 07F10802 		add	r2, r7, #8
 9080 0278 1344     		add	r3, r3, r2
 9081 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9082 027c 07F10C01 		add	r1, r7, #12
 9083 0280 0A44     		add	r2, r2, r1
 9084 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9085 0284 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9086              		.loc 1 1213 0 discriminator 3
 9087 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 210


 9088 0288 0133     		adds	r3, r3, #1
 9089 028a BB75     		strb	r3, [r7, #22]
 9090              	.L381:
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9091              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9092 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9093 028e 032B     		cmp	r3, #3
 9094 0290 EDD9     		bls	.L382
1216:..\src/command_processing.c ****                 
 9095              		.loc 1 1216 0 is_stmt 1
 9096 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9097 0294 BB68     		ldr	r3, [r7, #8]	@ float
 9098 0296 4FF08F41 		mov	r1, #1199570944
 9099 029a 1846     		mov	r0, r3
 9100 029c FFF7FEFF 		bl	__aeabi_fmul
 9101 02a0 0346     		mov	r3, r0
 9102 02a2 1846     		mov	r0, r3
 9103 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 9104 02a8 0146     		mov	r1, r0
 9105 02aa 524A     		ldr	r2, .L450+8
 9106 02ac 2346     		mov	r3, r4
 9107 02ae DB00     		lsls	r3, r3, #3
 9108 02b0 1B1B     		subs	r3, r3, r4
 9109 02b2 1B01     		lsls	r3, r3, #4
 9110 02b4 1344     		add	r3, r3, r2
 9111 02b6 C833     		adds	r3, r3, #200
 9112 02b8 1960     		str	r1, [r3]
1218:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9113              		.loc 1 1218 0
 9114 02ba 4F4B     		ldr	r3, .L450+12
 9115 02bc 1B68     		ldr	r3, [r3]	@ float
 9116 02be FB60     		str	r3, [r7, #12]	@ float
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9117              		.loc 1 1219 0
 9118 02c0 0023     		movs	r3, #0
 9119 02c2 BB75     		strb	r3, [r7, #22]
 9120 02c4 0EE0     		b	.L383
 9121              	.L384:
1220:..\src/command_processing.c ****                 }
 9122              		.loc 1 1220 0 discriminator 3
 9123 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9124 02c8 C3F10303 		rsb	r3, r3, #3
 9125 02cc 07F10802 		add	r2, r7, #8
 9126 02d0 1344     		add	r3, r3, r2
 9127 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9128 02d4 07F10C01 		add	r1, r7, #12
 9129 02d8 0A44     		add	r2, r2, r1
 9130 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9131 02dc 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9132              		.loc 1 1219 0 discriminator 3
 9133 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9134 02e0 0133     		adds	r3, r3, #1
 9135 02e2 BB75     		strb	r3, [r7, #22]
 9136              	.L383:
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9137              		.loc 1 1219 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 211


 9138 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9139 02e6 032B     		cmp	r3, #3
 9140 02e8 EDD9     		bls	.L384
1222:..\src/command_processing.c ****                 
 9141              		.loc 1 1222 0 is_stmt 1
 9142 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9143 02ec BB68     		ldr	r3, [r7, #8]	@ float
 9144 02ee 4FF08F41 		mov	r1, #1199570944
 9145 02f2 1846     		mov	r0, r3
 9146 02f4 FFF7FEFF 		bl	__aeabi_fmul
 9147 02f8 0346     		mov	r3, r0
 9148 02fa 1846     		mov	r0, r3
 9149 02fc FFF7FEFF 		bl	__aeabi_f2iz
 9150 0300 0146     		mov	r1, r0
 9151 0302 3C4A     		ldr	r2, .L450+8
 9152 0304 2346     		mov	r3, r4
 9153 0306 DB00     		lsls	r3, r3, #3
 9154 0308 1B1B     		subs	r3, r3, r4
 9155 030a 1B01     		lsls	r3, r3, #4
 9156 030c 1344     		add	r3, r3, r2
 9157 030e CC33     		adds	r3, r3, #204
 9158 0310 1960     		str	r1, [r3]
1224:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9159              		.loc 1 1224 0
 9160 0312 3A4B     		ldr	r3, .L450+16
 9161 0314 1B68     		ldr	r3, [r3]	@ float
 9162 0316 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9163              		.loc 1 1225 0
 9164 0318 0023     		movs	r3, #0
 9165 031a BB75     		strb	r3, [r7, #22]
 9166 031c 0EE0     		b	.L385
 9167              	.L386:
1226:..\src/command_processing.c ****                 }
 9168              		.loc 1 1226 0 discriminator 3
 9169 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9170 0320 C3F10303 		rsb	r3, r3, #3
 9171 0324 07F10802 		add	r2, r7, #8
 9172 0328 1344     		add	r3, r3, r2
 9173 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9174 032c 07F10C01 		add	r1, r7, #12
 9175 0330 0A44     		add	r2, r2, r1
 9176 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9177 0334 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9178              		.loc 1 1225 0 discriminator 3
 9179 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9180 0338 0133     		adds	r3, r3, #1
 9181 033a BB75     		strb	r3, [r7, #22]
 9182              	.L385:
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9183              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9184 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9185 033e 032B     		cmp	r3, #3
 9186 0340 EDD9     		bls	.L386
1228:..\src/command_processing.c ****             }
 9187              		.loc 1 1228 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 212


 9188 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9189 0344 BB68     		ldr	r3, [r7, #8]	@ float
 9190 0346 4FF08F41 		mov	r1, #1199570944
 9191 034a 1846     		mov	r0, r3
 9192 034c FFF7FEFF 		bl	__aeabi_fmul
 9193 0350 0346     		mov	r3, r0
 9194 0352 1846     		mov	r0, r3
 9195 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9196 0358 0146     		mov	r1, r0
 9197 035a 264A     		ldr	r2, .L450+8
 9198 035c 2346     		mov	r3, r4
 9199 035e DB00     		lsls	r3, r3, #3
 9200 0360 1B1B     		subs	r3, r3, r4
 9201 0362 1B01     		lsls	r3, r3, #4
 9202 0364 1344     		add	r3, r3, r2
 9203 0366 D033     		adds	r3, r3, #208
 9204 0368 1960     		str	r1, [r3]
 9205              		.loc 1 1230 0
 9206 036a 01F04DB8 		b	.L387
 9207              	.L356:
1231:..\src/command_processing.c ****             
1232:..\src/command_processing.c ****         case 3:         //Current PID
1233:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9208              		.loc 1 1233 0
 9209 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9210 0370 1E49     		ldr	r1, .L450
 9211 0372 1346     		mov	r3, r2
 9212 0374 DB00     		lsls	r3, r3, #3
 9213 0376 9B1A     		subs	r3, r3, r2
 9214 0378 1B01     		lsls	r3, r3, #4
 9215 037a 0B44     		add	r3, r3, r1
 9216 037c 03F20F13 		addw	r3, r3, #271
 9217 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9218 0382 032B     		cmp	r3, #3
 9219 0384 00F09080 		beq	.L388
1234:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9220              		.loc 1 1234 0
 9221 0388 194B     		ldr	r3, .L450+4
 9222 038a 1B68     		ldr	r3, [r3]	@ float
 9223 038c FB60     		str	r3, [r7, #12]	@ float
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9224              		.loc 1 1235 0
 9225 038e 0023     		movs	r3, #0
 9226 0390 BB75     		strb	r3, [r7, #22]
 9227 0392 0EE0     		b	.L389
 9228              	.L390:
1236:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9229              		.loc 1 1236 0 discriminator 3
 9230 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9231 0396 C3F10303 		rsb	r3, r3, #3
 9232 039a 07F10802 		add	r2, r7, #8
 9233 039e 1344     		add	r3, r3, r2
 9234 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9235 03a2 07F10C01 		add	r1, r7, #12
 9236 03a6 0A44     		add	r2, r2, r1
 9237 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9238 03aa 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 213


1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9239              		.loc 1 1235 0 discriminator 3
 9240 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9241 03ae 0133     		adds	r3, r3, #1
 9242 03b0 BB75     		strb	r3, [r7, #22]
 9243              	.L389:
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9244              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9245 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9246 03b4 032B     		cmp	r3, #3
 9247 03b6 EDD9     		bls	.L390
1237:..\src/command_processing.c ****                 }
1238:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9248              		.loc 1 1238 0 is_stmt 1
 9249 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9250 03ba BB68     		ldr	r3, [r7, #8]	@ float
 9251 03bc 4FF08F41 		mov	r1, #1199570944
 9252 03c0 1846     		mov	r0, r3
 9253 03c2 FFF7FEFF 		bl	__aeabi_fmul
 9254 03c6 0346     		mov	r3, r0
 9255 03c8 1846     		mov	r0, r3
 9256 03ca FFF7FEFF 		bl	__aeabi_f2iz
 9257 03ce 0146     		mov	r1, r0
 9258 03d0 084A     		ldr	r2, .L450+8
 9259 03d2 2346     		mov	r3, r4
 9260 03d4 DB00     		lsls	r3, r3, #3
 9261 03d6 1B1B     		subs	r3, r3, r4
 9262 03d8 1B01     		lsls	r3, r3, #4
 9263 03da 1344     		add	r3, r3, r2
 9264 03dc BC33     		adds	r3, r3, #188
 9265 03de 1960     		str	r1, [r3]
1239:..\src/command_processing.c ****                 
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9266              		.loc 1 1240 0
 9267 03e0 054B     		ldr	r3, .L450+12
 9268 03e2 1B68     		ldr	r3, [r3]	@ float
 9269 03e4 FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9270              		.loc 1 1241 0
 9271 03e6 0023     		movs	r3, #0
 9272 03e8 BB75     		strb	r3, [r7, #22]
 9273 03ea 18E0     		b	.L391
 9274              	.L451:
 9275              		.align	2
 9276              	.L450:
 9277 03ec 00000000 		.word	c_mem
 9278 03f0 03000000 		.word	g_rx+3
 9279 03f4 00000000 		.word	g_mem
 9280 03f8 07000000 		.word	g_rx+7
 9281 03fc 0B000000 		.word	g_rx+11
 9282              	.L392:
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9283              		.loc 1 1242 0 discriminator 3
 9284 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9285 0402 C3F10303 		rsb	r3, r3, #3
 9286 0406 07F10802 		add	r2, r7, #8
 9287 040a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 214


 9288 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9289 040e 07F10C01 		add	r1, r7, #12
 9290 0412 0A44     		add	r2, r2, r1
 9291 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9292 0416 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9293              		.loc 1 1241 0 discriminator 3
 9294 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9295 041a 0133     		adds	r3, r3, #1
 9296 041c BB75     		strb	r3, [r7, #22]
 9297              	.L391:
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9298              		.loc 1 1241 0 is_stmt 0 discriminator 1
 9299 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9300 0420 032B     		cmp	r3, #3
 9301 0422 EDD9     		bls	.L392
1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9302              		.loc 1 1244 0 is_stmt 1
 9303 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9304 0426 BB68     		ldr	r3, [r7, #8]	@ float
 9305 0428 4FF08F41 		mov	r1, #1199570944
 9306 042c 1846     		mov	r0, r3
 9307 042e FFF7FEFF 		bl	__aeabi_fmul
 9308 0432 0346     		mov	r3, r0
 9309 0434 1846     		mov	r0, r3
 9310 0436 FFF7FEFF 		bl	__aeabi_f2iz
 9311 043a 0146     		mov	r1, r0
 9312 043c B54A     		ldr	r2, .L452
 9313 043e 2346     		mov	r3, r4
 9314 0440 DB00     		lsls	r3, r3, #3
 9315 0442 1B1B     		subs	r3, r3, r4
 9316 0444 1B01     		lsls	r3, r3, #4
 9317 0446 1344     		add	r3, r3, r2
 9318 0448 C033     		adds	r3, r3, #192
 9319 044a 1960     		str	r1, [r3]
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9320              		.loc 1 1246 0
 9321 044c B24B     		ldr	r3, .L452+4
 9322 044e 1B68     		ldr	r3, [r3]	@ float
 9323 0450 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9324              		.loc 1 1247 0
 9325 0452 0023     		movs	r3, #0
 9326 0454 BB75     		strb	r3, [r7, #22]
 9327 0456 0EE0     		b	.L393
 9328              	.L394:
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9329              		.loc 1 1248 0 discriminator 3
 9330 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9331 045a C3F10303 		rsb	r3, r3, #3
 9332 045e 07F10802 		add	r2, r7, #8
 9333 0462 1344     		add	r3, r3, r2
 9334 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9335 0466 07F10C01 		add	r1, r7, #12
 9336 046a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 215


 9337 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9338 046e 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9339              		.loc 1 1247 0 discriminator 3
 9340 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9341 0472 0133     		adds	r3, r3, #1
 9342 0474 BB75     		strb	r3, [r7, #22]
 9343              	.L393:
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9344              		.loc 1 1247 0 is_stmt 0 discriminator 1
 9345 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9346 0478 032B     		cmp	r3, #3
 9347 047a EDD9     		bls	.L394
1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9348              		.loc 1 1250 0 is_stmt 1
 9349 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9350 047e BB68     		ldr	r3, [r7, #8]	@ float
 9351 0480 4FF08F41 		mov	r1, #1199570944
 9352 0484 1846     		mov	r0, r3
 9353 0486 FFF7FEFF 		bl	__aeabi_fmul
 9354 048a 0346     		mov	r3, r0
 9355 048c 1846     		mov	r0, r3
 9356 048e FFF7FEFF 		bl	__aeabi_f2iz
 9357 0492 0146     		mov	r1, r0
 9358 0494 9F4A     		ldr	r2, .L452
 9359 0496 2346     		mov	r3, r4
 9360 0498 DB00     		lsls	r3, r3, #3
 9361 049a 1B1B     		subs	r3, r3, r4
 9362 049c 1B01     		lsls	r3, r3, #4
 9363 049e 1344     		add	r3, r3, r2
 9364 04a0 C433     		adds	r3, r3, #196
 9365 04a2 1960     		str	r1, [r3]
1251:..\src/command_processing.c ****             }
1252:..\src/command_processing.c ****             else {
1253:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1255:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1256:..\src/command_processing.c ****                 }
1257:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1261:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1262:..\src/command_processing.c ****                 }
1263:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1264:..\src/command_processing.c ****                 
1265:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1267:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1268:..\src/command_processing.c ****                 }
1269:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1270:..\src/command_processing.c ****             }            
1271:..\src/command_processing.c ****             break;  
 9366              		.loc 1 1271 0
 9367 04a4 00F0B0BF 		b	.L387
 9368              	.L388:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 216


1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9369              		.loc 1 1253 0
 9370 04a8 9C4B     		ldr	r3, .L452+8
 9371 04aa 1B68     		ldr	r3, [r3]	@ float
 9372 04ac FB60     		str	r3, [r7, #12]	@ float
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9373              		.loc 1 1254 0
 9374 04ae 0023     		movs	r3, #0
 9375 04b0 BB75     		strb	r3, [r7, #22]
 9376 04b2 0EE0     		b	.L396
 9377              	.L397:
1255:..\src/command_processing.c ****                 }
 9378              		.loc 1 1255 0 discriminator 3
 9379 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9380 04b6 C3F10303 		rsb	r3, r3, #3
 9381 04ba 07F10802 		add	r2, r7, #8
 9382 04be 1344     		add	r3, r3, r2
 9383 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9384 04c2 07F10C01 		add	r1, r7, #12
 9385 04c6 0A44     		add	r2, r2, r1
 9386 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9387 04ca 1A70     		strb	r2, [r3]
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9388              		.loc 1 1254 0 discriminator 3
 9389 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9390 04ce 0133     		adds	r3, r3, #1
 9391 04d0 BB75     		strb	r3, [r7, #22]
 9392              	.L396:
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9393              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9394 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9395 04d4 032B     		cmp	r3, #3
 9396 04d6 EDD9     		bls	.L397
1257:..\src/command_processing.c ****                 
 9397              		.loc 1 1257 0 is_stmt 1
 9398 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9399 04da BB68     		ldr	r3, [r7, #8]	@ float
 9400 04dc 4FF08F41 		mov	r1, #1199570944
 9401 04e0 1846     		mov	r0, r3
 9402 04e2 FFF7FEFF 		bl	__aeabi_fmul
 9403 04e6 0346     		mov	r3, r0
 9404 04e8 1846     		mov	r0, r3
 9405 04ea FFF7FEFF 		bl	__aeabi_f2iz
 9406 04ee 0146     		mov	r1, r0
 9407 04f0 884A     		ldr	r2, .L452
 9408 04f2 2346     		mov	r3, r4
 9409 04f4 DB00     		lsls	r3, r3, #3
 9410 04f6 1B1B     		subs	r3, r3, r4
 9411 04f8 1B01     		lsls	r3, r3, #4
 9412 04fa 1344     		add	r3, r3, r2
 9413 04fc D433     		adds	r3, r3, #212
 9414 04fe 1960     		str	r1, [r3]
1259:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9415              		.loc 1 1259 0
 9416 0500 874B     		ldr	r3, .L452+12
 9417 0502 1B68     		ldr	r3, [r3]	@ float
 9418 0504 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 217


1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9419              		.loc 1 1260 0
 9420 0506 0023     		movs	r3, #0
 9421 0508 BB75     		strb	r3, [r7, #22]
 9422 050a 0EE0     		b	.L398
 9423              	.L399:
1261:..\src/command_processing.c ****                 }
 9424              		.loc 1 1261 0 discriminator 3
 9425 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9426 050e C3F10303 		rsb	r3, r3, #3
 9427 0512 07F10802 		add	r2, r7, #8
 9428 0516 1344     		add	r3, r3, r2
 9429 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9430 051a 07F10C01 		add	r1, r7, #12
 9431 051e 0A44     		add	r2, r2, r1
 9432 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9433 0522 1A70     		strb	r2, [r3]
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9434              		.loc 1 1260 0 discriminator 3
 9435 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9436 0526 0133     		adds	r3, r3, #1
 9437 0528 BB75     		strb	r3, [r7, #22]
 9438              	.L398:
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9439              		.loc 1 1260 0 is_stmt 0 discriminator 1
 9440 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9441 052c 032B     		cmp	r3, #3
 9442 052e EDD9     		bls	.L399
1263:..\src/command_processing.c ****                 
 9443              		.loc 1 1263 0 is_stmt 1
 9444 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9445 0532 BB68     		ldr	r3, [r7, #8]	@ float
 9446 0534 4FF08F41 		mov	r1, #1199570944
 9447 0538 1846     		mov	r0, r3
 9448 053a FFF7FEFF 		bl	__aeabi_fmul
 9449 053e 0346     		mov	r3, r0
 9450 0540 1846     		mov	r0, r3
 9451 0542 FFF7FEFF 		bl	__aeabi_f2iz
 9452 0546 0146     		mov	r1, r0
 9453 0548 724A     		ldr	r2, .L452
 9454 054a 2346     		mov	r3, r4
 9455 054c DB00     		lsls	r3, r3, #3
 9456 054e 1B1B     		subs	r3, r3, r4
 9457 0550 1B01     		lsls	r3, r3, #4
 9458 0552 1344     		add	r3, r3, r2
 9459 0554 D833     		adds	r3, r3, #216
 9460 0556 1960     		str	r1, [r3]
1265:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9461              		.loc 1 1265 0
 9462 0558 6F4B     		ldr	r3, .L452+4
 9463 055a 1B68     		ldr	r3, [r3]	@ float
 9464 055c FB60     		str	r3, [r7, #12]	@ float
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9465              		.loc 1 1266 0
 9466 055e 0023     		movs	r3, #0
 9467 0560 BB75     		strb	r3, [r7, #22]
 9468 0562 0EE0     		b	.L400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 218


 9469              	.L401:
1267:..\src/command_processing.c ****                 }
 9470              		.loc 1 1267 0 discriminator 3
 9471 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9472 0566 C3F10303 		rsb	r3, r3, #3
 9473 056a 07F10802 		add	r2, r7, #8
 9474 056e 1344     		add	r3, r3, r2
 9475 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9476 0572 07F10C01 		add	r1, r7, #12
 9477 0576 0A44     		add	r2, r2, r1
 9478 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9479 057a 1A70     		strb	r2, [r3]
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9480              		.loc 1 1266 0 discriminator 3
 9481 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9482 057e 0133     		adds	r3, r3, #1
 9483 0580 BB75     		strb	r3, [r7, #22]
 9484              	.L400:
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9485              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9486 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9487 0584 032B     		cmp	r3, #3
 9488 0586 EDD9     		bls	.L401
1269:..\src/command_processing.c ****             }            
 9489              		.loc 1 1269 0 is_stmt 1
 9490 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9491 058a BB68     		ldr	r3, [r7, #8]	@ float
 9492 058c 4FF08F41 		mov	r1, #1199570944
 9493 0590 1846     		mov	r0, r3
 9494 0592 FFF7FEFF 		bl	__aeabi_fmul
 9495 0596 0346     		mov	r3, r0
 9496 0598 1846     		mov	r0, r3
 9497 059a FFF7FEFF 		bl	__aeabi_f2iz
 9498 059e 0146     		mov	r1, r0
 9499 05a0 5C4A     		ldr	r2, .L452
 9500 05a2 2346     		mov	r3, r4
 9501 05a4 DB00     		lsls	r3, r3, #3
 9502 05a6 1B1B     		subs	r3, r3, r4
 9503 05a8 1B01     		lsls	r3, r3, #4
 9504 05aa 1344     		add	r3, r3, r2
 9505 05ac DC33     		adds	r3, r3, #220
 9506 05ae 1960     		str	r1, [r3]
 9507              		.loc 1 1271 0
 9508 05b0 00F02ABF 		b	.L387
 9509              	.L357:
1272:..\src/command_processing.c ****             
1273:..\src/command_processing.c ****         case 5:         //Input mode
1274:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9510              		.loc 1 1274 0
 9511 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9512 05b6 5B4B     		ldr	r3, .L452+16
 9513 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9514 05ba 5649     		ldr	r1, .L452
 9515 05bc 1346     		mov	r3, r2
 9516 05be DB00     		lsls	r3, r3, #3
 9517 05c0 9B1A     		subs	r3, r3, r2
 9518 05c2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 219


 9519 05c4 0B44     		add	r3, r3, r1
 9520 05c6 03F58773 		add	r3, r3, #270
 9521 05ca 0246     		mov	r2, r0
 9522 05cc 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             
1276:..\src/command_processing.c ****             // Hold the actual position
1277:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9523              		.loc 1 1277 0
 9524 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9525 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9526 05d2 5048     		ldr	r0, .L452
 9527 05d4 1346     		mov	r3, r2
 9528 05d6 DB00     		lsls	r3, r3, #3
 9529 05d8 9B1A     		subs	r3, r3, r2
 9530 05da 1B01     		lsls	r3, r3, #4
 9531 05dc 0344     		add	r3, r3, r0
 9532 05de 03F58873 		add	r3, r3, #272
 9533 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9534 05e4 1846     		mov	r0, r3
 9535 05e6 504A     		ldr	r2, .L452+20
 9536 05e8 3423     		movs	r3, #52
 9537 05ea 03FB00F3 		mul	r3, r3, r0
 9538 05ee 1344     		add	r3, r3, r2
 9539 05f0 1A68     		ldr	r2, [r3]
 9540 05f2 4E48     		ldr	r0, .L452+24
 9541 05f4 0B01     		lsls	r3, r1, #4
 9542 05f6 0344     		add	r3, r3, r0
 9543 05f8 1A60     		str	r2, [r3]
1278:..\src/command_processing.c ****             break;   
 9544              		.loc 1 1278 0
 9545 05fa 00F005BF 		b	.L387
 9546              	.L358:
1279:..\src/command_processing.c **** 
1280:..\src/command_processing.c ****         case 8:         //Measurement Offset
1281:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9547              		.loc 1 1281 0
 9548 05fe 0023     		movs	r3, #0
 9549 0600 FB75     		strb	r3, [r7, #23]
 9550 0602 7EE0     		b	.L402
 9551              	.L403:
1282:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9552              		.loc 1 1282 0 discriminator 3
 9553 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9554 0606 4349     		ldr	r1, .L452
 9555 0608 1346     		mov	r3, r2
 9556 060a DB00     		lsls	r3, r3, #3
 9557 060c 9B1A     		subs	r3, r3, r2
 9558 060e 1B01     		lsls	r3, r3, #4
 9559 0610 0B44     		add	r3, r3, r1
 9560 0612 03F58873 		add	r3, r3, #272
 9561 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9562 0618 1C46     		mov	r4, r3
 9563 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9564 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9565 061e 5B00     		lsls	r3, r3, #1
 9566 0620 0333     		adds	r3, r3, #3
 9567 0622 4049     		ldr	r1, .L452+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 220


 9568 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9569 0626 1B02     		lsls	r3, r3, #8
 9570 0628 19B2     		sxth	r1, r3
 9571 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9572 062c 0233     		adds	r3, r3, #2
 9573 062e 5B00     		lsls	r3, r3, #1
 9574 0630 3C48     		ldr	r0, .L452+16
 9575 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9576 0634 1BB2     		sxth	r3, r3
 9577 0636 0B43     		orrs	r3, r3, r1
 9578 0638 1BB2     		sxth	r3, r3
 9579 063a 1846     		mov	r0, r3
 9580 063c 3549     		ldr	r1, .L452
 9581 063e 2346     		mov	r3, r4
 9582 0640 5B00     		lsls	r3, r3, #1
 9583 0642 2344     		add	r3, r3, r4
 9584 0644 9B00     		lsls	r3, r3, #2
 9585 0646 1344     		add	r3, r3, r2
 9586 0648 6633     		adds	r3, r3, #102
 9587 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1283:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 9588              		.loc 1 1283 0 discriminator 3
 9589 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9590 0650 3049     		ldr	r1, .L452
 9591 0652 1346     		mov	r3, r2
 9592 0654 DB00     		lsls	r3, r3, #3
 9593 0656 9B1A     		subs	r3, r3, r2
 9594 0658 1B01     		lsls	r3, r3, #4
 9595 065a 0B44     		add	r3, r3, r1
 9596 065c 03F58873 		add	r3, r3, #272
 9597 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9598 0662 1D46     		mov	r5, r3
 9599 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9600 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9601 0668 2A48     		ldr	r0, .L452
 9602 066a 1346     		mov	r3, r2
 9603 066c DB00     		lsls	r3, r3, #3
 9604 066e 9B1A     		subs	r3, r3, r2
 9605 0670 1B01     		lsls	r3, r3, #4
 9606 0672 0344     		add	r3, r3, r0
 9607 0674 03F58873 		add	r3, r3, #272
 9608 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9609 067a 1C46     		mov	r4, r3
 9610 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9611 067e 2548     		ldr	r0, .L452
 9612 0680 2346     		mov	r3, r4
 9613 0682 5B00     		lsls	r3, r3, #1
 9614 0684 2344     		add	r3, r3, r4
 9615 0686 9B00     		lsls	r3, r3, #2
 9616 0688 1344     		add	r3, r3, r2
 9617 068a 6633     		adds	r3, r3, #102
 9618 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9619 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9620 0692 204C     		ldr	r4, .L452
 9621 0694 1346     		mov	r3, r2
 9622 0696 DB00     		lsls	r3, r3, #3
 9623 0698 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 221


 9624 069a 1B01     		lsls	r3, r3, #4
 9625 069c 2344     		add	r3, r3, r4
 9626 069e 03F58873 		add	r3, r3, #272
 9627 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9628 06a4 1E46     		mov	r6, r3
 9629 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9630 06a8 1A4C     		ldr	r4, .L452
 9631 06aa 3346     		mov	r3, r6
 9632 06ac 5B00     		lsls	r3, r3, #1
 9633 06ae 3344     		add	r3, r3, r6
 9634 06b0 1B01     		lsls	r3, r3, #4
 9635 06b2 2344     		add	r3, r3, r4
 9636 06b4 1344     		add	r3, r3, r2
 9637 06b6 03F29513 		addw	r3, r3, #405
 9638 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9639 06bc 00FA03F2 		lsl	r2, r0, r3
 9640 06c0 1448     		ldr	r0, .L452
 9641 06c2 2B46     		mov	r3, r5
 9642 06c4 5B00     		lsls	r3, r3, #1
 9643 06c6 2B44     		add	r3, r3, r5
 9644 06c8 9B00     		lsls	r3, r3, #2
 9645 06ca 0B44     		add	r3, r3, r1
 9646 06cc 6633     		adds	r3, r3, #102
 9647 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 9648              		.loc 1 1285 0 discriminator 3
 9649 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9650 06d4 0F49     		ldr	r1, .L452
 9651 06d6 1346     		mov	r3, r2
 9652 06d8 DB00     		lsls	r3, r3, #3
 9653 06da 9B1A     		subs	r3, r3, r2
 9654 06dc 1B01     		lsls	r3, r3, #4
 9655 06de 0B44     		add	r3, r3, r1
 9656 06e0 03F58873 		add	r3, r3, #272
 9657 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9658 06e6 1846     		mov	r0, r3
 9659 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9660 06ea 0F49     		ldr	r1, .L452+20
 9661 06ec 3422     		movs	r2, #52
 9662 06ee 02FB00F2 		mul	r2, r2, r0
 9663 06f2 0A44     		add	r2, r2, r1
 9664 06f4 1344     		add	r3, r3, r2
 9665 06f6 1833     		adds	r3, r3, #24
 9666 06f8 0022     		movs	r2, #0
 9667 06fa 1A70     		strb	r2, [r3]
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9668              		.loc 1 1281 0 discriminator 3
 9669 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9670 06fe 0133     		adds	r3, r3, #1
 9671 0700 FB75     		strb	r3, [r7, #23]
 9672              	.L402:
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9673              		.loc 1 1281 0 is_stmt 0 discriminator 1
 9674 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9675 0704 022B     		cmp	r3, #2
 9676 0706 7FF67DAF 		bls	.L403
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 222


1286:..\src/command_processing.c ****             }
1287:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9677              		.loc 1 1287 0 is_stmt 1
 9678 070a 094B     		ldr	r3, .L452+28
 9679 070c 0122     		movs	r2, #1
 9680 070e 1A70     		strb	r2, [r3]
1288:..\src/command_processing.c ****             break;
 9681              		.loc 1 1288 0
 9682 0710 00F07ABE 		b	.L387
 9683              	.L453:
 9684              		.align	2
 9685              	.L452:
 9686 0714 00000000 		.word	g_mem
 9687 0718 0B000000 		.word	g_rx+11
 9688 071c 03000000 		.word	g_rx+3
 9689 0720 07000000 		.word	g_rx+7
 9690 0724 00000000 		.word	g_rx
 9691 0728 00000000 		.word	g_meas
 9692 072c 00000000 		.word	g_refNew
 9693 0730 00000000 		.word	reset_last_value_flag
 9694              	.L359:
1289:..\src/command_processing.c ****     
1290:..\src/command_processing.c ****         case 11:        //Position limits
1291:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9695              		.loc 1 1291 0
 9696 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9697 0736 C14B     		ldr	r3, .L454
 9698 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9699 073a 1906     		lsls	r1, r3, #24
 9700 073c BF4B     		ldr	r3, .L454
 9701 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9702 0740 1B04     		lsls	r3, r3, #16
 9703 0742 1943     		orrs	r1, r1, r3
 9704 0744 BD4B     		ldr	r3, .L454
 9705 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9706 0748 1B02     		lsls	r3, r3, #8
 9707 074a 0B43     		orrs	r3, r3, r1
 9708 074c BB49     		ldr	r1, .L454
 9709 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9710 0750 1943     		orrs	r1, r1, r3
 9711 0752 BB48     		ldr	r0, .L454+4
 9712 0754 1346     		mov	r3, r2
 9713 0756 DB00     		lsls	r3, r3, #3
 9714 0758 9B1A     		subs	r3, r3, r2
 9715 075a 1B01     		lsls	r3, r3, #4
 9716 075c 0344     		add	r3, r3, r0
 9717 075e E433     		adds	r3, r3, #228
 9718 0760 1960     		str	r1, [r3]
1292:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9719              		.loc 1 1292 0
 9720 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9721 0764 B54B     		ldr	r3, .L454
 9722 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9723 0768 1906     		lsls	r1, r3, #24
 9724 076a B44B     		ldr	r3, .L454
 9725 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9726 076e 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 223


 9727 0770 1943     		orrs	r1, r1, r3
 9728 0772 B24B     		ldr	r3, .L454
 9729 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9730 0776 1B02     		lsls	r3, r3, #8
 9731 0778 0B43     		orrs	r3, r3, r1
 9732 077a B049     		ldr	r1, .L454
 9733 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9734 077e 1943     		orrs	r1, r1, r3
 9735 0780 AF48     		ldr	r0, .L454+4
 9736 0782 1346     		mov	r3, r2
 9737 0784 DB00     		lsls	r3, r3, #3
 9738 0786 9B1A     		subs	r3, r3, r2
 9739 0788 1B01     		lsls	r3, r3, #4
 9740 078a 0344     		add	r3, r3, r0
 9741 078c E833     		adds	r3, r3, #232
 9742 078e 1960     		str	r1, [r3]
1293:..\src/command_processing.c **** 
1294:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9743              		.loc 1 1294 0
 9744 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9745 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9746 0794 AA48     		ldr	r0, .L454+4
 9747 0796 0B46     		mov	r3, r1
 9748 0798 DB00     		lsls	r3, r3, #3
 9749 079a 5B1A     		subs	r3, r3, r1
 9750 079c 1B01     		lsls	r3, r3, #4
 9751 079e 0344     		add	r3, r3, r0
 9752 07a0 E433     		adds	r3, r3, #228
 9753 07a2 1868     		ldr	r0, [r3]
 9754 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9755 07a6 A64C     		ldr	r4, .L454+4
 9756 07a8 0B46     		mov	r3, r1
 9757 07aa DB00     		lsls	r3, r3, #3
 9758 07ac 5B1A     		subs	r3, r3, r1
 9759 07ae 1B01     		lsls	r3, r3, #4
 9760 07b0 2344     		add	r3, r3, r4
 9761 07b2 03F58873 		add	r3, r3, #272
 9762 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9763 07b8 1C46     		mov	r4, r3
 9764 07ba A149     		ldr	r1, .L454+4
 9765 07bc 2346     		mov	r3, r4
 9766 07be 5B00     		lsls	r3, r3, #1
 9767 07c0 2344     		add	r3, r3, r4
 9768 07c2 1B01     		lsls	r3, r3, #4
 9769 07c4 0B44     		add	r3, r3, r1
 9770 07c6 03F29513 		addw	r3, r3, #405
 9771 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9772 07cc 00FA03F1 		lsl	r1, r0, r3
 9773 07d0 9B48     		ldr	r0, .L454+4
 9774 07d2 1346     		mov	r3, r2
 9775 07d4 DB00     		lsls	r3, r3, #3
 9776 07d6 9B1A     		subs	r3, r3, r2
 9777 07d8 1B01     		lsls	r3, r3, #4
 9778 07da 0344     		add	r3, r3, r0
 9779 07dc E433     		adds	r3, r3, #228
 9780 07de 1960     		str	r1, [r3]
1295:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 224


 9781              		.loc 1 1295 0
 9782 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9783 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9784 07e4 9648     		ldr	r0, .L454+4
 9785 07e6 0B46     		mov	r3, r1
 9786 07e8 DB00     		lsls	r3, r3, #3
 9787 07ea 5B1A     		subs	r3, r3, r1
 9788 07ec 1B01     		lsls	r3, r3, #4
 9789 07ee 0344     		add	r3, r3, r0
 9790 07f0 E833     		adds	r3, r3, #232
 9791 07f2 1868     		ldr	r0, [r3]
 9792 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9793 07f6 924C     		ldr	r4, .L454+4
 9794 07f8 0B46     		mov	r3, r1
 9795 07fa DB00     		lsls	r3, r3, #3
 9796 07fc 5B1A     		subs	r3, r3, r1
 9797 07fe 1B01     		lsls	r3, r3, #4
 9798 0800 2344     		add	r3, r3, r4
 9799 0802 03F58873 		add	r3, r3, #272
 9800 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9801 0808 1C46     		mov	r4, r3
 9802 080a 8D49     		ldr	r1, .L454+4
 9803 080c 2346     		mov	r3, r4
 9804 080e 5B00     		lsls	r3, r3, #1
 9805 0810 2344     		add	r3, r3, r4
 9806 0812 1B01     		lsls	r3, r3, #4
 9807 0814 0B44     		add	r3, r3, r1
 9808 0816 03F29513 		addw	r3, r3, #405
 9809 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9810 081c 00FA03F1 		lsl	r1, r0, r3
 9811 0820 8748     		ldr	r0, .L454+4
 9812 0822 1346     		mov	r3, r2
 9813 0824 DB00     		lsls	r3, r3, #3
 9814 0826 9B1A     		subs	r3, r3, r2
 9815 0828 1B01     		lsls	r3, r3, #4
 9816 082a 0344     		add	r3, r3, r0
 9817 082c E833     		adds	r3, r3, #232
 9818 082e 1960     		str	r1, [r3]
1296:..\src/command_processing.c ****             break;            
 9819              		.loc 1 1296 0
 9820 0830 00F0EABD 		b	.L387
 9821              	.L360:
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****         case 23:        //Rest Position
1299:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9822              		.loc 1 1299 0
 9823 0834 814B     		ldr	r3, .L454
 9824 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9825 0838 1A06     		lsls	r2, r3, #24
 9826 083a 804B     		ldr	r3, .L454
 9827 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9828 083e 1B04     		lsls	r3, r3, #16
 9829 0840 1A43     		orrs	r2, r2, r3
 9830 0842 7E4B     		ldr	r3, .L454
 9831 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9832 0846 1B02     		lsls	r3, r3, #8
 9833 0848 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 225


 9834 084a 7C4A     		ldr	r2, .L454
 9835 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9836 084e 1343     		orrs	r3, r3, r2
 9837 0850 7B4A     		ldr	r2, .L454+4
 9838 0852 C2F8A032 		str	r3, [r2, #672]
1300:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9839              		.loc 1 1300 0
 9840 0856 7A4B     		ldr	r3, .L454+4
 9841 0858 D3F8A012 		ldr	r1, [r3, #672]
 9842 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9843 085e 7848     		ldr	r0, .L454+4
 9844 0860 1346     		mov	r3, r2
 9845 0862 DB00     		lsls	r3, r3, #3
 9846 0864 9B1A     		subs	r3, r3, r2
 9847 0866 1B01     		lsls	r3, r3, #4
 9848 0868 0344     		add	r3, r3, r0
 9849 086a 03F58873 		add	r3, r3, #272
 9850 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9851 0870 1846     		mov	r0, r3
 9852 0872 734A     		ldr	r2, .L454+4
 9853 0874 0346     		mov	r3, r0
 9854 0876 5B00     		lsls	r3, r3, #1
 9855 0878 0344     		add	r3, r3, r0
 9856 087a 1B01     		lsls	r3, r3, #4
 9857 087c 1344     		add	r3, r3, r2
 9858 087e 03F29513 		addw	r3, r3, #405
 9859 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9860 0884 01FA03F3 		lsl	r3, r1, r3
 9861 0888 6D4A     		ldr	r2, .L454+4
 9862 088a C2F8A032 		str	r3, [r2, #672]
1301:..\src/command_processing.c ****             break; 
 9863              		.loc 1 1301 0
 9864 088e 00F0BBBD 		b	.L387
 9865              	.L361:
1302:..\src/command_processing.c ****             
1303:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1304:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9866              		.loc 1 1304 0
 9867 0892 6A4B     		ldr	r3, .L454
 9868 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9869 0896 1A06     		lsls	r2, r3, #24
 9870 0898 684B     		ldr	r3, .L454
 9871 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9872 089c 1B04     		lsls	r3, r3, #16
 9873 089e 1A43     		orrs	r2, r2, r3
 9874 08a0 664B     		ldr	r3, .L454
 9875 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9876 08a4 1B02     		lsls	r3, r3, #8
 9877 08a6 1343     		orrs	r3, r3, r2
 9878 08a8 644A     		ldr	r2, .L454
 9879 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9880 08ac 1343     		orrs	r3, r3, r2
 9881 08ae 644A     		ldr	r2, .L454+4
 9882 08b0 C2F8A432 		str	r3, [r2, #676]
1305:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9883              		.loc 1 1305 0
 9884 08b4 624B     		ldr	r3, .L454+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 226


 9885 08b6 D3F8A432 		ldr	r3, [r3, #676]
 9886 08ba 092B     		cmp	r3, #9
 9887 08bc 00F39B85 		bgt	.L445
 9888              		.loc 1 1305 0 is_stmt 0 discriminator 1
 9889 08c0 5F4B     		ldr	r3, .L454+4
 9890 08c2 0A22     		movs	r2, #10
 9891 08c4 C3F8A422 		str	r2, [r3, #676]
1306:..\src/command_processing.c ****            break; 
 9892              		.loc 1 1306 0 is_stmt 1 discriminator 1
 9893 08c8 00F095BD 		b	.L445
 9894              	.L362:
1307:..\src/command_processing.c ****             
1308:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1309:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9895              		.loc 1 1309 0
 9896 08cc 5B4B     		ldr	r3, .L454
 9897 08ce DB78     		ldrb	r3, [r3, #3]
 9898 08d0 BB74     		strb	r3, [r7, #18]
1310:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9899              		.loc 1 1310 0
 9900 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9901 08d4 002B     		cmp	r3, #0
 9902 08d6 04D0     		beq	.L405
1311:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9903              		.loc 1 1311 0
 9904 08d8 594B     		ldr	r3, .L454+4
 9905 08da 0122     		movs	r2, #1
 9906 08dc 83F8A720 		strb	r2, [r3, #167]
 9907 08e0 03E0     		b	.L406
 9908              	.L405:
1312:..\src/command_processing.c ****             } else {            // 0
1313:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9909              		.loc 1 1313 0
 9910 08e2 574B     		ldr	r3, .L454+4
 9911 08e4 0022     		movs	r2, #0
 9912 08e6 83F8A720 		strb	r2, [r3, #167]
 9913              	.L406:
1314:..\src/command_processing.c ****             }
1315:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 9914              		.loc 1 1315 0
 9915 08ea 564B     		ldr	r3, .L454+8
 9916 08ec 0122     		movs	r2, #1
 9917 08ee 1A70     		strb	r2, [r3]
1316:..\src/command_processing.c **** 
1317:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9918              		.loc 1 1317 0
 9919 08f0 534B     		ldr	r3, .L454+4
 9920 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9921 08f6 002B     		cmp	r3, #0
 9922 08f8 40F07F85 		bne	.L446
1318:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1319:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9923              		.loc 1 1319 0
 9924 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9925 08fe 504B     		ldr	r3, .L454+4
 9926 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9927 0904 4E49     		ldr	r1, .L454+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 227


 9928 0906 1346     		mov	r3, r2
 9929 0908 DB00     		lsls	r3, r3, #3
 9930 090a 9B1A     		subs	r3, r3, r2
 9931 090c 1B01     		lsls	r3, r3, #4
 9932 090e 0B44     		add	r3, r3, r1
 9933 0910 03F58873 		add	r3, r3, #272
 9934 0914 0246     		mov	r2, r0
 9935 0916 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                 
1321:..\src/command_processing.c ****                 // Change also gears parameters
1322:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9936              		.loc 1 1322 0
 9937 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9938 091a 4949     		ldr	r1, .L454+4
 9939 091c 1346     		mov	r3, r2
 9940 091e DB00     		lsls	r3, r3, #3
 9941 0920 9B1A     		subs	r3, r3, r2
 9942 0922 1B01     		lsls	r3, r3, #4
 9943 0924 0B44     		add	r3, r3, r1
 9944 0926 03F58873 		add	r3, r3, #272
 9945 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9946 092c 1946     		mov	r1, r3
 9947 092e 444A     		ldr	r2, .L454+4
 9948 0930 0B46     		mov	r3, r1
 9949 0932 5B00     		lsls	r3, r3, #1
 9950 0934 0B44     		add	r3, r3, r1
 9951 0936 1B01     		lsls	r3, r3, #4
 9952 0938 1344     		add	r3, r3, r2
 9953 093a 03F5D873 		add	r3, r3, #432
 9954 093e 0122     		movs	r2, #1
 9955 0940 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9956              		.loc 1 1323 0
 9957 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9958 0944 3E49     		ldr	r1, .L454+4
 9959 0946 1346     		mov	r3, r2
 9960 0948 DB00     		lsls	r3, r3, #3
 9961 094a 9B1A     		subs	r3, r3, r2
 9962 094c 1B01     		lsls	r3, r3, #4
 9963 094e 0B44     		add	r3, r3, r1
 9964 0950 03F58873 		add	r3, r3, #272
 9965 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9966 0956 1946     		mov	r1, r3
 9967 0958 394A     		ldr	r2, .L454+4
 9968 095a 0B46     		mov	r3, r1
 9969 095c 5B00     		lsls	r3, r3, #1
 9970 095e 0B44     		add	r3, r3, r1
 9971 0960 1B01     		lsls	r3, r3, #4
 9972 0962 1344     		add	r3, r3, r2
 9973 0964 03F2B513 		addw	r3, r3, #437
 9974 0968 2322     		movs	r2, #35
 9975 096a 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9976              		.loc 1 1324 0
 9977 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9978 096e 3449     		ldr	r1, .L454+4
 9979 0970 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 228


 9980 0972 DB00     		lsls	r3, r3, #3
 9981 0974 9B1A     		subs	r3, r3, r2
 9982 0976 1B01     		lsls	r3, r3, #4
 9983 0978 0B44     		add	r3, r3, r1
 9984 097a 03F58873 		add	r3, r3, #272
 9985 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9986 0980 1946     		mov	r1, r3
 9987 0982 2F4A     		ldr	r2, .L454+4
 9988 0984 0B46     		mov	r3, r1
 9989 0986 5B00     		lsls	r3, r3, #1
 9990 0988 0B44     		add	r3, r3, r1
 9991 098a 1B01     		lsls	r3, r3, #4
 9992 098c 1344     		add	r3, r3, r2
 9993 098e 03F5DB73 		add	r3, r3, #438
 9994 0992 0322     		movs	r2, #3
 9995 0994 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9996              		.loc 1 1325 0
 9997 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9998 0998 2949     		ldr	r1, .L454+4
 9999 099a 1346     		mov	r3, r2
 10000 099c DB00     		lsls	r3, r3, #3
 10001 099e 9B1A     		subs	r3, r3, r2
 10002 09a0 1B01     		lsls	r3, r3, #4
 10003 09a2 0B44     		add	r3, r3, r1
 10004 09a4 03F58873 		add	r3, r3, #272
 10005 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10006 09aa 1946     		mov	r1, r3
 10007 09ac 244A     		ldr	r2, .L454+4
 10008 09ae 0B46     		mov	r3, r1
 10009 09b0 5B00     		lsls	r3, r3, #1
 10010 09b2 0B44     		add	r3, r3, r1
 10011 09b4 1B01     		lsls	r3, r3, #4
 10012 09b6 1344     		add	r3, r3, r2
 10013 09b8 03F2B713 		addw	r3, r3, #439
 10014 09bc FF22     		movs	r2, #255
 10015 09be 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                 
1327:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10016              		.loc 1 1328 0
 10017 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10018 09c2 1F49     		ldr	r1, .L454+4
 10019 09c4 1346     		mov	r3, r2
 10020 09c6 DB00     		lsls	r3, r3, #3
 10021 09c8 9B1A     		subs	r3, r3, r2
 10022 09ca 1B01     		lsls	r3, r3, #4
 10023 09cc 0B44     		add	r3, r3, r1
 10024 09ce 03F21113 		addw	r3, r3, #273
 10025 09d2 0122     		movs	r2, #1
 10026 09d4 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10027              		.loc 1 1329 0
 10028 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10029 09d8 1949     		ldr	r1, .L454+4
 10030 09da 1346     		mov	r3, r2
 10031 09dc DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 229


 10032 09de 9B1A     		subs	r3, r3, r2
 10033 09e0 1B01     		lsls	r3, r3, #4
 10034 09e2 0B44     		add	r3, r3, r1
 10035 09e4 03F58973 		add	r3, r3, #274
 10036 09e8 0122     		movs	r2, #1
 10037 09ea 1A70     		strb	r2, [r3]
1330:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10038              		.loc 1 1330 0
 10039 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10040 09ee 1449     		ldr	r1, .L454+4
 10041 09f0 1346     		mov	r3, r2
 10042 09f2 DB00     		lsls	r3, r3, #3
 10043 09f4 9B1A     		subs	r3, r3, r2
 10044 09f6 1B01     		lsls	r3, r3, #4
 10045 09f8 0B44     		add	r3, r3, r1
 10046 09fa E433     		adds	r3, r3, #228
 10047 09fc 0022     		movs	r2, #0
 10048 09fe 1A60     		str	r2, [r3]
1331:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10049              		.loc 1 1331 0
 10050 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10051 0a02 0F4B     		ldr	r3, .L454+4
 10052 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10053 0a08 1846     		mov	r0, r3
 10054 0a0a 0D49     		ldr	r1, .L454+4
 10055 0a0c 0346     		mov	r3, r0
 10056 0a0e 5B00     		lsls	r3, r3, #1
 10057 0a10 0344     		add	r3, r3, r0
 10058 0a12 1B01     		lsls	r3, r3, #4
 10059 0a14 0B44     		add	r3, r3, r1
 10060 0a16 03F29513 		addw	r3, r3, #405
 10061 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10062 0a1c 1946     		mov	r1, r3
 10063 0a1e 4FF47A53 		mov	r3, #16000
 10064 0a22 03FA01F1 		lsl	r1, r3, r1
 10065 0a26 0648     		ldr	r0, .L454+4
 10066 0a28 1346     		mov	r3, r2
 10067 0a2a DB00     		lsls	r3, r3, #3
 10068 0a2c 9B1A     		subs	r3, r3, r2
 10069 0a2e 1B01     		lsls	r3, r3, #4
 10070 0a30 0344     		add	r3, r3, r0
 10071 0a32 E833     		adds	r3, r3, #232
 10072 0a34 1960     		str	r1, [r3]
1332:..\src/command_processing.c ****             }    
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c ****             break; 
 10073              		.loc 1 1334 0
 10074 0a36 00F0E0BC 		b	.L446
 10075              	.L455:
 10076 0a3a 00BF     		.align	2
 10077              	.L454:
 10078 0a3c 00000000 		.word	g_rx
 10079 0a40 00000000 		.word	g_mem
 10080 0a44 00000000 		.word	reset_last_value_flag
 10081              	.L363:
1335:..\src/command_processing.c **** 
1336:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 230


1337:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10082              		.loc 1 1337 0
 10083 0a48 A94B     		ldr	r3, .L456
 10084 0a4a DB78     		ldrb	r3, [r3, #3]
 10085 0a4c BB74     		strb	r3, [r7, #18]
1338:..\src/command_processing.c ****             if (aux_uchar) {
 10086              		.loc 1 1338 0
 10087 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10088 0a50 002B     		cmp	r3, #0
 10089 0a52 05D0     		beq	.L408
1339:..\src/command_processing.c ****                 reset_counters();
 10090              		.loc 1 1339 0
 10091 0a54 FFF7FEFF 		bl	reset_counters
1340:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10092              		.loc 1 1340 0
 10093 0a58 A64B     		ldr	r3, .L456+4
 10094 0a5a 0022     		movs	r2, #0
 10095 0a5c 83F8A820 		strb	r2, [r3, #168]
 10096              	.L408:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10097              		.loc 1 1343 0
 10098 0a60 A54B     		ldr	r3, .L456+8
 10099 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10100 0a66 012B     		cmp	r3, #1
 10101 0a68 40F0C984 		bne	.L447
1344:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1345:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10102              		.loc 1 1345 0
 10103 0a6c 8720     		movs	r0, #135
 10104 0a6e FFF7FEFF 		bl	DS1302_read
 10105 0a72 0346     		mov	r3, r0
 10106 0a74 BB74     		strb	r3, [r7, #18]
1346:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10107              		.loc 1 1346 0
 10108 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10109 0a78 1B09     		lsrs	r3, r3, #4
 10110 0a7a DBB2     		uxtb	r3, r3
 10111 0a7c 1A46     		mov	r2, r3
 10112 0a7e 9200     		lsls	r2, r2, #2
 10113 0a80 1344     		add	r3, r3, r2
 10114 0a82 5B00     		lsls	r3, r3, #1
 10115 0a84 DAB2     		uxtb	r2, r3
 10116 0a86 BB7C     		ldrb	r3, [r7, #18]
 10117 0a88 03F00F03 		and	r3, r3, #15
 10118 0a8c DBB2     		uxtb	r3, r3
 10119 0a8e 1344     		add	r3, r3, r2
 10120 0a90 DAB2     		uxtb	r2, r3
 10121 0a92 984B     		ldr	r3, .L456+4
 10122 0a94 83F8A420 		strb	r2, [r3, #164]
1347:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10123              		.loc 1 1347 0
 10124 0a98 8920     		movs	r0, #137
 10125 0a9a FFF7FEFF 		bl	DS1302_read
 10126 0a9e 0346     		mov	r3, r0
 10127 0aa0 BB74     		strb	r3, [r7, #18]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 231


1348:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10128              		.loc 1 1348 0
 10129 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10130 0aa4 1B09     		lsrs	r3, r3, #4
 10131 0aa6 DBB2     		uxtb	r3, r3
 10132 0aa8 1A46     		mov	r2, r3
 10133 0aaa 9200     		lsls	r2, r2, #2
 10134 0aac 1344     		add	r3, r3, r2
 10135 0aae 5B00     		lsls	r3, r3, #1
 10136 0ab0 DAB2     		uxtb	r2, r3
 10137 0ab2 BB7C     		ldrb	r3, [r7, #18]
 10138 0ab4 03F00F03 		and	r3, r3, #15
 10139 0ab8 DBB2     		uxtb	r3, r3
 10140 0aba 1344     		add	r3, r3, r2
 10141 0abc DAB2     		uxtb	r2, r3
 10142 0abe 8D4B     		ldr	r3, .L456+4
 10143 0ac0 83F8A520 		strb	r2, [r3, #165]
1349:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10144              		.loc 1 1349 0
 10145 0ac4 8D20     		movs	r0, #141
 10146 0ac6 FFF7FEFF 		bl	DS1302_read
 10147 0aca 0346     		mov	r3, r0
 10148 0acc BB74     		strb	r3, [r7, #18]
1350:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10149              		.loc 1 1350 0
 10150 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10151 0ad0 1B09     		lsrs	r3, r3, #4
 10152 0ad2 DBB2     		uxtb	r3, r3
 10153 0ad4 1A46     		mov	r2, r3
 10154 0ad6 9200     		lsls	r2, r2, #2
 10155 0ad8 1344     		add	r3, r3, r2
 10156 0ada 5B00     		lsls	r3, r3, #1
 10157 0adc DAB2     		uxtb	r2, r3
 10158 0ade BB7C     		ldrb	r3, [r7, #18]
 10159 0ae0 03F00F03 		and	r3, r3, #15
 10160 0ae4 DBB2     		uxtb	r3, r3
 10161 0ae6 1344     		add	r3, r3, r2
 10162 0ae8 DAB2     		uxtb	r2, r3
 10163 0aea 824B     		ldr	r3, .L456+4
 10164 0aec 83F8A620 		strb	r2, [r3, #166]
1351:..\src/command_processing.c ****             }
1352:..\src/command_processing.c ****             break;             
 10165              		.loc 1 1352 0
 10166 0af0 00F085BC 		b	.L447
 10167              	.L364:
 10168              	.LBB15:
1353:..\src/command_processing.c ****             
1354:..\src/command_processing.c ****         case 32:         //Current Time
1355:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10169              		.loc 1 1355 0
 10170 0af4 0023     		movs	r3, #0
 10171 0af6 7B75     		strb	r3, [r7, #21]
 10172 0af8 0CE0     		b	.L410
 10173              	.L411:
1356:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10174              		.loc 1 1356 0 discriminator 3
 10175 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 232


 10176 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10177 0afe 0332     		adds	r2, r2, #3
 10178 0b00 7B49     		ldr	r1, .L456
 10179 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10180 0b04 7B4A     		ldr	r2, .L456+4
 10181 0b06 1344     		add	r3, r3, r2
 10182 0b08 0A46     		mov	r2, r1
 10183 0b0a 83F82022 		strb	r2, [r3, #544]
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10184              		.loc 1 1355 0 discriminator 3
 10185 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10186 0b10 0133     		adds	r3, r3, #1
 10187 0b12 7B75     		strb	r3, [r7, #21]
 10188              	.L410:
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10189              		.loc 1 1355 0 is_stmt 0 discriminator 1
 10190 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10191 0b16 052B     		cmp	r3, #5
 10192 0b18 EFD9     		bls	.L411
 10193              	.LBE15:
1357:..\src/command_processing.c ****             }
1358:..\src/command_processing.c ****             
1359:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10194              		.loc 1 1359 0 is_stmt 1
 10195 0b1a 764B     		ldr	r3, .L456+4
 10196 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10197 0b20 012B     		cmp	r3, #1
 10198 0b22 40F06E84 		bne	.L448
1360:..\src/command_processing.c ****                 set_RTC_time();
 10199              		.loc 1 1360 0
 10200 0b26 FFF7FEFF 		bl	set_RTC_time
1361:..\src/command_processing.c ****             }
1362:..\src/command_processing.c ****             break;
 10201              		.loc 1 1362 0
 10202 0b2a 00F06ABC 		b	.L448
 10203              	.L365:
1363:..\src/command_processing.c ****            
1364:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1365:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10204              		.loc 1 1365 0
 10205 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10206 0b30 6F4B     		ldr	r3, .L456
 10207 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10208 0b34 6F49     		ldr	r1, .L456+4
 10209 0b36 1346     		mov	r3, r2
 10210 0b38 DB00     		lsls	r3, r3, #3
 10211 0b3a 9B1A     		subs	r3, r3, r2
 10212 0b3c 1B01     		lsls	r3, r3, #4
 10213 0b3e 0B44     		add	r3, r3, r1
 10214 0b40 E233     		adds	r3, r3, #226
 10215 0b42 0246     		mov	r2, r0
 10216 0b44 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10217              		.loc 1 1366 0
 10218 0b46 6B4B     		ldr	r3, .L456+4
 10219 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10220 0b4c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 233


 10221 0b4e 5AB2     		sxtb	r2, r3
 10222 0b50 684B     		ldr	r3, .L456+4
 10223 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10224 0b56 5BB2     		sxtb	r3, r3
 10225 0b58 1343     		orrs	r3, r3, r2
 10226 0b5a 5BB2     		sxtb	r3, r3
 10227 0b5c DBB2     		uxtb	r3, r3
 10228 0b5e 1846     		mov	r0, r3
 10229 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1367:..\src/command_processing.c ****             break;
 10230              		.loc 1 1367 0
 10231 0b64 00F050BC 		b	.L387
 10232              	.L366:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1370:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10233              		.loc 1 1370 0
 10234 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10235 0b6a 6349     		ldr	r1, .L456+8
 10236 0b6c 1346     		mov	r3, r2
 10237 0b6e DB00     		lsls	r3, r3, #3
 10238 0b70 9B1A     		subs	r3, r3, r2
 10239 0b72 1B01     		lsls	r3, r3, #4
 10240 0b74 0B44     		add	r3, r3, r1
 10241 0b76 03F20F13 		addw	r3, r3, #271
 10242 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10243 0b7c 032B     		cmp	r3, #3
 10244 0b7e 00F08580 		beq	.L413
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10245              		.loc 1 1371 0
 10246 0b82 5E4B     		ldr	r3, .L456+12
 10247 0b84 1B68     		ldr	r3, [r3]	@ float
 10248 0b86 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10249              		.loc 1 1372 0
 10250 0b88 0023     		movs	r3, #0
 10251 0b8a BB75     		strb	r3, [r7, #22]
 10252 0b8c 0EE0     		b	.L414
 10253              	.L415:
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10254              		.loc 1 1373 0 discriminator 3
 10255 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10256 0b90 C3F10303 		rsb	r3, r3, #3
 10257 0b94 07F10802 		add	r2, r7, #8
 10258 0b98 1344     		add	r3, r3, r2
 10259 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10260 0b9c 07F10C01 		add	r1, r7, #12
 10261 0ba0 0A44     		add	r2, r2, r1
 10262 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10263 0ba4 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10264              		.loc 1 1372 0 discriminator 3
 10265 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10266 0ba8 0133     		adds	r3, r3, #1
 10267 0baa BB75     		strb	r3, [r7, #22]
 10268              	.L414:
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 234


 10269              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10270 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10271 0bae 032B     		cmp	r3, #3
 10272 0bb0 EDD9     		bls	.L415
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10273              		.loc 1 1375 0 is_stmt 1
 10274 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10275 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 10276 0bb6 4FF08F41 		mov	r1, #1199570944
 10277 0bba 1846     		mov	r0, r3
 10278 0bbc FFF7FEFF 		bl	__aeabi_fmul
 10279 0bc0 0346     		mov	r3, r0
 10280 0bc2 1846     		mov	r0, r3
 10281 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 10282 0bc8 0146     		mov	r1, r0
 10283 0bca 4A4A     		ldr	r2, .L456+4
 10284 0bcc 2346     		mov	r3, r4
 10285 0bce DB00     		lsls	r3, r3, #3
 10286 0bd0 1B1B     		subs	r3, r3, r4
 10287 0bd2 1B01     		lsls	r3, r3, #4
 10288 0bd4 1344     		add	r3, r3, r2
 10289 0bd6 B033     		adds	r3, r3, #176
 10290 0bd8 1960     		str	r1, [r3]
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10291              		.loc 1 1377 0
 10292 0bda 494B     		ldr	r3, .L456+16
 10293 0bdc 1B68     		ldr	r3, [r3]	@ float
 10294 0bde FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10295              		.loc 1 1378 0
 10296 0be0 0023     		movs	r3, #0
 10297 0be2 BB75     		strb	r3, [r7, #22]
 10298 0be4 0EE0     		b	.L416
 10299              	.L417:
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10300              		.loc 1 1379 0 discriminator 3
 10301 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10302 0be8 C3F10303 		rsb	r3, r3, #3
 10303 0bec 07F10802 		add	r2, r7, #8
 10304 0bf0 1344     		add	r3, r3, r2
 10305 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10306 0bf4 07F10C01 		add	r1, r7, #12
 10307 0bf8 0A44     		add	r2, r2, r1
 10308 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10309 0bfc 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10310              		.loc 1 1378 0 discriminator 3
 10311 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10312 0c00 0133     		adds	r3, r3, #1
 10313 0c02 BB75     		strb	r3, [r7, #22]
 10314              	.L416:
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10315              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10316 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10317 0c06 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 235


 10318 0c08 EDD9     		bls	.L417
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10319              		.loc 1 1381 0 is_stmt 1
 10320 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10321 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 10322 0c0e 4FF08F41 		mov	r1, #1199570944
 10323 0c12 1846     		mov	r0, r3
 10324 0c14 FFF7FEFF 		bl	__aeabi_fmul
 10325 0c18 0346     		mov	r3, r0
 10326 0c1a 1846     		mov	r0, r3
 10327 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 10328 0c20 0146     		mov	r1, r0
 10329 0c22 344A     		ldr	r2, .L456+4
 10330 0c24 2346     		mov	r3, r4
 10331 0c26 DB00     		lsls	r3, r3, #3
 10332 0c28 1B1B     		subs	r3, r3, r4
 10333 0c2a 1B01     		lsls	r3, r3, #4
 10334 0c2c 1344     		add	r3, r3, r2
 10335 0c2e B433     		adds	r3, r3, #180
 10336 0c30 1960     		str	r1, [r3]
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10337              		.loc 1 1383 0
 10338 0c32 344B     		ldr	r3, .L456+20
 10339 0c34 1B68     		ldr	r3, [r3]	@ float
 10340 0c36 FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10341              		.loc 1 1384 0
 10342 0c38 0023     		movs	r3, #0
 10343 0c3a BB75     		strb	r3, [r7, #22]
 10344 0c3c 0EE0     		b	.L418
 10345              	.L419:
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10346              		.loc 1 1385 0 discriminator 3
 10347 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10348 0c40 C3F10303 		rsb	r3, r3, #3
 10349 0c44 07F10802 		add	r2, r7, #8
 10350 0c48 1344     		add	r3, r3, r2
 10351 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10352 0c4c 07F10C01 		add	r1, r7, #12
 10353 0c50 0A44     		add	r2, r2, r1
 10354 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10355 0c54 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10356              		.loc 1 1384 0 discriminator 3
 10357 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10358 0c58 0133     		adds	r3, r3, #1
 10359 0c5a BB75     		strb	r3, [r7, #22]
 10360              	.L418:
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10361              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10362 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10363 0c5e 032B     		cmp	r3, #3
 10364 0c60 EDD9     		bls	.L419
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 236


 10365              		.loc 1 1387 0 is_stmt 1
 10366 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10367 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 10368 0c66 4FF08F41 		mov	r1, #1199570944
 10369 0c6a 1846     		mov	r0, r3
 10370 0c6c FFF7FEFF 		bl	__aeabi_fmul
 10371 0c70 0346     		mov	r3, r0
 10372 0c72 1846     		mov	r0, r3
 10373 0c74 FFF7FEFF 		bl	__aeabi_f2iz
 10374 0c78 0146     		mov	r1, r0
 10375 0c7a 1E4A     		ldr	r2, .L456+4
 10376 0c7c 2346     		mov	r3, r4
 10377 0c7e DB00     		lsls	r3, r3, #3
 10378 0c80 1B1B     		subs	r3, r3, r4
 10379 0c82 1B01     		lsls	r3, r3, #4
 10380 0c84 1344     		add	r3, r3, r2
 10381 0c86 B833     		adds	r3, r3, #184
 10382 0c88 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             }
1389:..\src/command_processing.c ****             else {
1390:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1391:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1392:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1393:..\src/command_processing.c ****                 }
1394:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1395:..\src/command_processing.c ****                 
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1399:..\src/command_processing.c ****                 }
1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1407:..\src/command_processing.c ****             }
1408:..\src/command_processing.c ****             break;
 10383              		.loc 1 1408 0
 10384 0c8a BDE3     		b	.L387
 10385              	.L413:
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10386              		.loc 1 1390 0
 10387 0c8c 1B4B     		ldr	r3, .L456+12
 10388 0c8e 1B68     		ldr	r3, [r3]	@ float
 10389 0c90 FB60     		str	r3, [r7, #12]	@ float
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10390              		.loc 1 1391 0
 10391 0c92 0023     		movs	r3, #0
 10392 0c94 BB75     		strb	r3, [r7, #22]
 10393 0c96 0EE0     		b	.L421
 10394              	.L422:
1392:..\src/command_processing.c ****                 }
 10395              		.loc 1 1392 0 discriminator 3
 10396 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10397 0c9a C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 237


 10398 0c9e 07F10802 		add	r2, r7, #8
 10399 0ca2 1344     		add	r3, r3, r2
 10400 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10401 0ca6 07F10C01 		add	r1, r7, #12
 10402 0caa 0A44     		add	r2, r2, r1
 10403 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10404 0cae 1A70     		strb	r2, [r3]
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10405              		.loc 1 1391 0 discriminator 3
 10406 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10407 0cb2 0133     		adds	r3, r3, #1
 10408 0cb4 BB75     		strb	r3, [r7, #22]
 10409              	.L421:
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10410              		.loc 1 1391 0 is_stmt 0 discriminator 1
 10411 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10412 0cb8 032B     		cmp	r3, #3
 10413 0cba EDD9     		bls	.L422
1394:..\src/command_processing.c ****                 
 10414              		.loc 1 1394 0 is_stmt 1
 10415 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10416 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 10417 0cc0 4FF08F41 		mov	r1, #1199570944
 10418 0cc4 1846     		mov	r0, r3
 10419 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 10420 0cca 0346     		mov	r3, r0
 10421 0ccc 1846     		mov	r0, r3
 10422 0cce FFF7FEFF 		bl	__aeabi_f2iz
 10423 0cd2 0146     		mov	r1, r0
 10424 0cd4 074A     		ldr	r2, .L456+4
 10425 0cd6 2346     		mov	r3, r4
 10426 0cd8 DB00     		lsls	r3, r3, #3
 10427 0cda 1B1B     		subs	r3, r3, r4
 10428 0cdc 1B01     		lsls	r3, r3, #4
 10429 0cde 1344     		add	r3, r3, r2
 10430 0ce0 C833     		adds	r3, r3, #200
 10431 0ce2 1960     		str	r1, [r3]
1396:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10432              		.loc 1 1396 0
 10433 0ce4 064B     		ldr	r3, .L456+16
 10434 0ce6 1B68     		ldr	r3, [r3]	@ float
 10435 0ce8 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10436              		.loc 1 1397 0
 10437 0cea 0023     		movs	r3, #0
 10438 0cec BB75     		strb	r3, [r7, #22]
 10439 0cee 1AE0     		b	.L423
 10440              	.L457:
 10441              		.align	2
 10442              	.L456:
 10443 0cf0 00000000 		.word	g_rx
 10444 0cf4 00000000 		.word	g_mem
 10445 0cf8 00000000 		.word	c_mem
 10446 0cfc 03000000 		.word	g_rx+3
 10447 0d00 07000000 		.word	g_rx+7
 10448 0d04 0B000000 		.word	g_rx+11
 10449              	.L424:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 238


1398:..\src/command_processing.c ****                 }
 10450              		.loc 1 1398 0 discriminator 3
 10451 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10452 0d0a C3F10303 		rsb	r3, r3, #3
 10453 0d0e 07F10802 		add	r2, r7, #8
 10454 0d12 1344     		add	r3, r3, r2
 10455 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10456 0d16 07F10C01 		add	r1, r7, #12
 10457 0d1a 0A44     		add	r2, r2, r1
 10458 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10459 0d1e 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10460              		.loc 1 1397 0 discriminator 3
 10461 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10462 0d22 0133     		adds	r3, r3, #1
 10463 0d24 BB75     		strb	r3, [r7, #22]
 10464              	.L423:
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10465              		.loc 1 1397 0 is_stmt 0 discriminator 1
 10466 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10467 0d28 032B     		cmp	r3, #3
 10468 0d2a EDD9     		bls	.L424
1400:..\src/command_processing.c ****                 
 10469              		.loc 1 1400 0 is_stmt 1
 10470 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10471 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 10472 0d30 4FF08F41 		mov	r1, #1199570944
 10473 0d34 1846     		mov	r0, r3
 10474 0d36 FFF7FEFF 		bl	__aeabi_fmul
 10475 0d3a 0346     		mov	r3, r0
 10476 0d3c 1846     		mov	r0, r3
 10477 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 10478 0d42 0146     		mov	r1, r0
 10479 0d44 B74A     		ldr	r2, .L458
 10480 0d46 2346     		mov	r3, r4
 10481 0d48 DB00     		lsls	r3, r3, #3
 10482 0d4a 1B1B     		subs	r3, r3, r4
 10483 0d4c 1B01     		lsls	r3, r3, #4
 10484 0d4e 1344     		add	r3, r3, r2
 10485 0d50 CC33     		adds	r3, r3, #204
 10486 0d52 1960     		str	r1, [r3]
1402:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10487              		.loc 1 1402 0
 10488 0d54 B44B     		ldr	r3, .L458+4
 10489 0d56 1B68     		ldr	r3, [r3]	@ float
 10490 0d58 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10491              		.loc 1 1403 0
 10492 0d5a 0023     		movs	r3, #0
 10493 0d5c BB75     		strb	r3, [r7, #22]
 10494 0d5e 0EE0     		b	.L425
 10495              	.L426:
1404:..\src/command_processing.c ****                 }
 10496              		.loc 1 1404 0 discriminator 3
 10497 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10498 0d62 C3F10303 		rsb	r3, r3, #3
 10499 0d66 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 239


 10500 0d6a 1344     		add	r3, r3, r2
 10501 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10502 0d6e 07F10C01 		add	r1, r7, #12
 10503 0d72 0A44     		add	r2, r2, r1
 10504 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10505 0d76 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10506              		.loc 1 1403 0 discriminator 3
 10507 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10508 0d7a 0133     		adds	r3, r3, #1
 10509 0d7c BB75     		strb	r3, [r7, #22]
 10510              	.L425:
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10511              		.loc 1 1403 0 is_stmt 0 discriminator 1
 10512 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10513 0d80 032B     		cmp	r3, #3
 10514 0d82 EDD9     		bls	.L426
1406:..\src/command_processing.c ****             }
 10515              		.loc 1 1406 0 is_stmt 1
 10516 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10517 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 10518 0d88 4FF08F41 		mov	r1, #1199570944
 10519 0d8c 1846     		mov	r0, r3
 10520 0d8e FFF7FEFF 		bl	__aeabi_fmul
 10521 0d92 0346     		mov	r3, r0
 10522 0d94 1846     		mov	r0, r3
 10523 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 10524 0d9a 0146     		mov	r1, r0
 10525 0d9c A14A     		ldr	r2, .L458
 10526 0d9e 2346     		mov	r3, r4
 10527 0da0 DB00     		lsls	r3, r3, #3
 10528 0da2 1B1B     		subs	r3, r3, r4
 10529 0da4 1B01     		lsls	r3, r3, #4
 10530 0da6 1344     		add	r3, r3, r2
 10531 0da8 D033     		adds	r3, r3, #208
 10532 0daa 1960     		str	r1, [r3]
 10533              		.loc 1 1408 0
 10534 0dac 2CE3     		b	.L387
 10535              	.L367:
1409:..\src/command_processing.c ****             
1410:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1411:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10536              		.loc 1 1411 0
 10537 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10538 0db0 9E49     		ldr	r1, .L458+8
 10539 0db2 1346     		mov	r3, r2
 10540 0db4 DB00     		lsls	r3, r3, #3
 10541 0db6 9B1A     		subs	r3, r3, r2
 10542 0db8 1B01     		lsls	r3, r3, #4
 10543 0dba 0B44     		add	r3, r3, r1
 10544 0dbc 03F20F13 		addw	r3, r3, #271
 10545 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10546 0dc2 032B     		cmp	r3, #3
 10547 0dc4 00F08580 		beq	.L427
1412:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10548              		.loc 1 1412 0
 10549 0dc8 994B     		ldr	r3, .L458+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 240


 10550 0dca 1B68     		ldr	r3, [r3]	@ float
 10551 0dcc FB60     		str	r3, [r7, #12]	@ float
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10552              		.loc 1 1413 0
 10553 0dce 0023     		movs	r3, #0
 10554 0dd0 BB75     		strb	r3, [r7, #22]
 10555 0dd2 0EE0     		b	.L428
 10556              	.L429:
1414:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10557              		.loc 1 1414 0 discriminator 3
 10558 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10559 0dd6 C3F10303 		rsb	r3, r3, #3
 10560 0dda 07F10802 		add	r2, r7, #8
 10561 0dde 1344     		add	r3, r3, r2
 10562 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10563 0de2 07F10C01 		add	r1, r7, #12
 10564 0de6 0A44     		add	r2, r2, r1
 10565 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10566 0dea 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10567              		.loc 1 1413 0 discriminator 3
 10568 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10569 0dee 0133     		adds	r3, r3, #1
 10570 0df0 BB75     		strb	r3, [r7, #22]
 10571              	.L428:
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10572              		.loc 1 1413 0 is_stmt 0 discriminator 1
 10573 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10574 0df4 032B     		cmp	r3, #3
 10575 0df6 EDD9     		bls	.L429
1415:..\src/command_processing.c ****                 }
1416:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10576              		.loc 1 1416 0 is_stmt 1
 10577 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10578 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 10579 0dfc 4FF08F41 		mov	r1, #1199570944
 10580 0e00 1846     		mov	r0, r3
 10581 0e02 FFF7FEFF 		bl	__aeabi_fmul
 10582 0e06 0346     		mov	r3, r0
 10583 0e08 1846     		mov	r0, r3
 10584 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 10585 0e0e 0146     		mov	r1, r0
 10586 0e10 844A     		ldr	r2, .L458
 10587 0e12 2346     		mov	r3, r4
 10588 0e14 DB00     		lsls	r3, r3, #3
 10589 0e16 1B1B     		subs	r3, r3, r4
 10590 0e18 1B01     		lsls	r3, r3, #4
 10591 0e1a 1344     		add	r3, r3, r2
 10592 0e1c BC33     		adds	r3, r3, #188
 10593 0e1e 1960     		str	r1, [r3]
1417:..\src/command_processing.c ****                 
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10594              		.loc 1 1418 0
 10595 0e20 844B     		ldr	r3, .L458+16
 10596 0e22 1B68     		ldr	r3, [r3]	@ float
 10597 0e24 FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 241


 10598              		.loc 1 1419 0
 10599 0e26 0023     		movs	r3, #0
 10600 0e28 BB75     		strb	r3, [r7, #22]
 10601 0e2a 0EE0     		b	.L430
 10602              	.L431:
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10603              		.loc 1 1420 0 discriminator 3
 10604 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10605 0e2e C3F10303 		rsb	r3, r3, #3
 10606 0e32 07F10802 		add	r2, r7, #8
 10607 0e36 1344     		add	r3, r3, r2
 10608 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10609 0e3a 07F10C01 		add	r1, r7, #12
 10610 0e3e 0A44     		add	r2, r2, r1
 10611 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10612 0e42 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10613              		.loc 1 1419 0 discriminator 3
 10614 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10615 0e46 0133     		adds	r3, r3, #1
 10616 0e48 BB75     		strb	r3, [r7, #22]
 10617              	.L430:
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10618              		.loc 1 1419 0 is_stmt 0 discriminator 1
 10619 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10620 0e4c 032B     		cmp	r3, #3
 10621 0e4e EDD9     		bls	.L431
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10622              		.loc 1 1422 0 is_stmt 1
 10623 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10624 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 10625 0e54 4FF08F41 		mov	r1, #1199570944
 10626 0e58 1846     		mov	r0, r3
 10627 0e5a FFF7FEFF 		bl	__aeabi_fmul
 10628 0e5e 0346     		mov	r3, r0
 10629 0e60 1846     		mov	r0, r3
 10630 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 10631 0e66 0146     		mov	r1, r0
 10632 0e68 6E4A     		ldr	r2, .L458
 10633 0e6a 2346     		mov	r3, r4
 10634 0e6c DB00     		lsls	r3, r3, #3
 10635 0e6e 1B1B     		subs	r3, r3, r4
 10636 0e70 1B01     		lsls	r3, r3, #4
 10637 0e72 1344     		add	r3, r3, r2
 10638 0e74 C033     		adds	r3, r3, #192
 10639 0e76 1960     		str	r1, [r3]
1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10640              		.loc 1 1424 0
 10641 0e78 6B4B     		ldr	r3, .L458+4
 10642 0e7a 1B68     		ldr	r3, [r3]	@ float
 10643 0e7c FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10644              		.loc 1 1425 0
 10645 0e7e 0023     		movs	r3, #0
 10646 0e80 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 242


 10647 0e82 0EE0     		b	.L432
 10648              	.L433:
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10649              		.loc 1 1426 0 discriminator 3
 10650 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10651 0e86 C3F10303 		rsb	r3, r3, #3
 10652 0e8a 07F10802 		add	r2, r7, #8
 10653 0e8e 1344     		add	r3, r3, r2
 10654 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10655 0e92 07F10C01 		add	r1, r7, #12
 10656 0e96 0A44     		add	r2, r2, r1
 10657 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10658 0e9a 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10659              		.loc 1 1425 0 discriminator 3
 10660 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10661 0e9e 0133     		adds	r3, r3, #1
 10662 0ea0 BB75     		strb	r3, [r7, #22]
 10663              	.L432:
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10664              		.loc 1 1425 0 is_stmt 0 discriminator 1
 10665 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10666 0ea4 032B     		cmp	r3, #3
 10667 0ea6 EDD9     		bls	.L433
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10668              		.loc 1 1428 0 is_stmt 1
 10669 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10670 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 10671 0eac 4FF08F41 		mov	r1, #1199570944
 10672 0eb0 1846     		mov	r0, r3
 10673 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 10674 0eb6 0346     		mov	r3, r0
 10675 0eb8 1846     		mov	r0, r3
 10676 0eba FFF7FEFF 		bl	__aeabi_f2iz
 10677 0ebe 0146     		mov	r1, r0
 10678 0ec0 584A     		ldr	r2, .L458
 10679 0ec2 2346     		mov	r3, r4
 10680 0ec4 DB00     		lsls	r3, r3, #3
 10681 0ec6 1B1B     		subs	r3, r3, r4
 10682 0ec8 1B01     		lsls	r3, r3, #4
 10683 0eca 1344     		add	r3, r3, r2
 10684 0ecc C433     		adds	r3, r3, #196
 10685 0ece 1960     		str	r1, [r3]
1429:..\src/command_processing.c ****             }
1430:..\src/command_processing.c ****             else {
1431:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1433:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1434:..\src/command_processing.c ****                 }
1435:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1436:..\src/command_processing.c ****                 
1437:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1439:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1440:..\src/command_processing.c ****                 }
1441:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 243


1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1445:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1446:..\src/command_processing.c ****                 }
1447:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1448:..\src/command_processing.c ****             }            
1449:..\src/command_processing.c ****             break;  
 10686              		.loc 1 1449 0
 10687 0ed0 9AE2     		b	.L387
 10688              	.L427:
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10689              		.loc 1 1431 0
 10690 0ed2 574B     		ldr	r3, .L458+12
 10691 0ed4 1B68     		ldr	r3, [r3]	@ float
 10692 0ed6 FB60     		str	r3, [r7, #12]	@ float
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10693              		.loc 1 1432 0
 10694 0ed8 0023     		movs	r3, #0
 10695 0eda BB75     		strb	r3, [r7, #22]
 10696 0edc 0EE0     		b	.L435
 10697              	.L436:
1433:..\src/command_processing.c ****                 }
 10698              		.loc 1 1433 0 discriminator 3
 10699 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10700 0ee0 C3F10303 		rsb	r3, r3, #3
 10701 0ee4 07F10802 		add	r2, r7, #8
 10702 0ee8 1344     		add	r3, r3, r2
 10703 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10704 0eec 07F10C01 		add	r1, r7, #12
 10705 0ef0 0A44     		add	r2, r2, r1
 10706 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10707 0ef4 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10708              		.loc 1 1432 0 discriminator 3
 10709 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10710 0ef8 0133     		adds	r3, r3, #1
 10711 0efa BB75     		strb	r3, [r7, #22]
 10712              	.L435:
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10713              		.loc 1 1432 0 is_stmt 0 discriminator 1
 10714 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10715 0efe 032B     		cmp	r3, #3
 10716 0f00 EDD9     		bls	.L436
1435:..\src/command_processing.c ****                 
 10717              		.loc 1 1435 0 is_stmt 1
 10718 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10719 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 10720 0f06 4FF08F41 		mov	r1, #1199570944
 10721 0f0a 1846     		mov	r0, r3
 10722 0f0c FFF7FEFF 		bl	__aeabi_fmul
 10723 0f10 0346     		mov	r3, r0
 10724 0f12 1846     		mov	r0, r3
 10725 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 10726 0f18 0146     		mov	r1, r0
 10727 0f1a 424A     		ldr	r2, .L458
 10728 0f1c 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 244


 10729 0f1e DB00     		lsls	r3, r3, #3
 10730 0f20 1B1B     		subs	r3, r3, r4
 10731 0f22 1B01     		lsls	r3, r3, #4
 10732 0f24 1344     		add	r3, r3, r2
 10733 0f26 D433     		adds	r3, r3, #212
 10734 0f28 1960     		str	r1, [r3]
1437:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10735              		.loc 1 1437 0
 10736 0f2a 424B     		ldr	r3, .L458+16
 10737 0f2c 1B68     		ldr	r3, [r3]	@ float
 10738 0f2e FB60     		str	r3, [r7, #12]	@ float
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10739              		.loc 1 1438 0
 10740 0f30 0023     		movs	r3, #0
 10741 0f32 BB75     		strb	r3, [r7, #22]
 10742 0f34 0EE0     		b	.L437
 10743              	.L438:
1439:..\src/command_processing.c ****                 }
 10744              		.loc 1 1439 0 discriminator 3
 10745 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10746 0f38 C3F10303 		rsb	r3, r3, #3
 10747 0f3c 07F10802 		add	r2, r7, #8
 10748 0f40 1344     		add	r3, r3, r2
 10749 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10750 0f44 07F10C01 		add	r1, r7, #12
 10751 0f48 0A44     		add	r2, r2, r1
 10752 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10753 0f4c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10754              		.loc 1 1438 0 discriminator 3
 10755 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10756 0f50 0133     		adds	r3, r3, #1
 10757 0f52 BB75     		strb	r3, [r7, #22]
 10758              	.L437:
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10759              		.loc 1 1438 0 is_stmt 0 discriminator 1
 10760 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10761 0f56 032B     		cmp	r3, #3
 10762 0f58 EDD9     		bls	.L438
1441:..\src/command_processing.c ****                 
 10763              		.loc 1 1441 0 is_stmt 1
 10764 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10765 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 10766 0f5e 4FF08F41 		mov	r1, #1199570944
 10767 0f62 1846     		mov	r0, r3
 10768 0f64 FFF7FEFF 		bl	__aeabi_fmul
 10769 0f68 0346     		mov	r3, r0
 10770 0f6a 1846     		mov	r0, r3
 10771 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 10772 0f70 0146     		mov	r1, r0
 10773 0f72 2C4A     		ldr	r2, .L458
 10774 0f74 2346     		mov	r3, r4
 10775 0f76 DB00     		lsls	r3, r3, #3
 10776 0f78 1B1B     		subs	r3, r3, r4
 10777 0f7a 1B01     		lsls	r3, r3, #4
 10778 0f7c 1344     		add	r3, r3, r2
 10779 0f7e D833     		adds	r3, r3, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 245


 10780 0f80 1960     		str	r1, [r3]
1443:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10781              		.loc 1 1443 0
 10782 0f82 294B     		ldr	r3, .L458+4
 10783 0f84 1B68     		ldr	r3, [r3]	@ float
 10784 0f86 FB60     		str	r3, [r7, #12]	@ float
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10785              		.loc 1 1444 0
 10786 0f88 0023     		movs	r3, #0
 10787 0f8a BB75     		strb	r3, [r7, #22]
 10788 0f8c 0EE0     		b	.L439
 10789              	.L440:
1445:..\src/command_processing.c ****                 }
 10790              		.loc 1 1445 0 discriminator 3
 10791 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10792 0f90 C3F10303 		rsb	r3, r3, #3
 10793 0f94 07F10802 		add	r2, r7, #8
 10794 0f98 1344     		add	r3, r3, r2
 10795 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10796 0f9c 07F10C01 		add	r1, r7, #12
 10797 0fa0 0A44     		add	r2, r2, r1
 10798 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10799 0fa4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10800              		.loc 1 1444 0 discriminator 3
 10801 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10802 0fa8 0133     		adds	r3, r3, #1
 10803 0faa BB75     		strb	r3, [r7, #22]
 10804              	.L439:
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10805              		.loc 1 1444 0 is_stmt 0 discriminator 1
 10806 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10807 0fae 032B     		cmp	r3, #3
 10808 0fb0 EDD9     		bls	.L440
1447:..\src/command_processing.c ****             }            
 10809              		.loc 1 1447 0 is_stmt 1
 10810 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10811 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 10812 0fb6 4FF08F41 		mov	r1, #1199570944
 10813 0fba 1846     		mov	r0, r3
 10814 0fbc FFF7FEFF 		bl	__aeabi_fmul
 10815 0fc0 0346     		mov	r3, r0
 10816 0fc2 1846     		mov	r0, r3
 10817 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 10818 0fc8 0146     		mov	r1, r0
 10819 0fca 164A     		ldr	r2, .L458
 10820 0fcc 2346     		mov	r3, r4
 10821 0fce DB00     		lsls	r3, r3, #3
 10822 0fd0 1B1B     		subs	r3, r3, r4
 10823 0fd2 1B01     		lsls	r3, r3, #4
 10824 0fd4 1344     		add	r3, r3, r2
 10825 0fd6 DC33     		adds	r3, r3, #220
 10826 0fd8 1960     		str	r1, [r3]
 10827              		.loc 1 1449 0
 10828 0fda 15E2     		b	.L387
 10829              	.L368:
1450:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 246


1451:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1452:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10830              		.loc 1 1452 0
 10831 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10832 0fde 164B     		ldr	r3, .L458+20
 10833 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10834 0fe2 1049     		ldr	r1, .L458
 10835 0fe4 1346     		mov	r3, r2
 10836 0fe6 DB00     		lsls	r3, r3, #3
 10837 0fe8 9B1A     		subs	r3, r3, r2
 10838 0fea 1B01     		lsls	r3, r3, #4
 10839 0fec 0B44     		add	r3, r3, r1
 10840 0fee 03F58773 		add	r3, r3, #270
 10841 0ff2 0246     		mov	r2, r0
 10842 0ff4 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             
1454:..\src/command_processing.c ****             // Hold the actual position
1455:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10843              		.loc 1 1455 0
 10844 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10845 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10846 0ffa 0A48     		ldr	r0, .L458
 10847 0ffc 1346     		mov	r3, r2
 10848 0ffe DB00     		lsls	r3, r3, #3
 10849 1000 9B1A     		subs	r3, r3, r2
 10850 1002 1B01     		lsls	r3, r3, #4
 10851 1004 0344     		add	r3, r3, r0
 10852 1006 03F58873 		add	r3, r3, #272
 10853 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10854 100c 1846     		mov	r0, r3
 10855 100e 0B4A     		ldr	r2, .L458+24
 10856 1010 3423     		movs	r3, #52
 10857 1012 03FB00F3 		mul	r3, r3, r0
 10858 1016 1344     		add	r3, r3, r2
 10859 1018 1A68     		ldr	r2, [r3]
 10860 101a 0948     		ldr	r0, .L458+28
 10861 101c 0B01     		lsls	r3, r1, #4
 10862 101e 0344     		add	r3, r3, r0
 10863 1020 1A60     		str	r2, [r3]
1456:..\src/command_processing.c ****             break;   
 10864              		.loc 1 1456 0
 10865 1022 F1E1     		b	.L387
 10866              	.L459:
 10867              		.align	2
 10868              	.L458:
 10869 1024 00000000 		.word	g_mem
 10870 1028 0B000000 		.word	g_rx+11
 10871 102c 00000000 		.word	c_mem
 10872 1030 03000000 		.word	g_rx+3
 10873 1034 07000000 		.word	g_rx+7
 10874 1038 00000000 		.word	g_rx
 10875 103c 00000000 		.word	g_meas
 10876 1040 00000000 		.word	g_refNew
 10877              	.L369:
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1459:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 247


 10878              		.loc 1 1459 0
 10879 1044 0023     		movs	r3, #0
 10880 1046 FB75     		strb	r3, [r7, #23]
 10881 1048 7EE0     		b	.L441
 10882              	.L442:
1460:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10883              		.loc 1 1460 0 discriminator 3
 10884 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10885 104c 9049     		ldr	r1, .L460
 10886 104e 1346     		mov	r3, r2
 10887 1050 DB00     		lsls	r3, r3, #3
 10888 1052 9B1A     		subs	r3, r3, r2
 10889 1054 1B01     		lsls	r3, r3, #4
 10890 1056 0B44     		add	r3, r3, r1
 10891 1058 03F58873 		add	r3, r3, #272
 10892 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10893 105e 1C46     		mov	r4, r3
 10894 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10895 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10896 1064 5B00     		lsls	r3, r3, #1
 10897 1066 0333     		adds	r3, r3, #3
 10898 1068 8A49     		ldr	r1, .L460+4
 10899 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10900 106c 1B02     		lsls	r3, r3, #8
 10901 106e 19B2     		sxth	r1, r3
 10902 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10903 1072 0233     		adds	r3, r3, #2
 10904 1074 5B00     		lsls	r3, r3, #1
 10905 1076 8748     		ldr	r0, .L460+4
 10906 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10907 107a 1BB2     		sxth	r3, r3
 10908 107c 0B43     		orrs	r3, r3, r1
 10909 107e 1BB2     		sxth	r3, r3
 10910 1080 1846     		mov	r0, r3
 10911 1082 8349     		ldr	r1, .L460
 10912 1084 2346     		mov	r3, r4
 10913 1086 5B00     		lsls	r3, r3, #1
 10914 1088 2344     		add	r3, r3, r4
 10915 108a 9B00     		lsls	r3, r3, #2
 10916 108c 1344     		add	r3, r3, r2
 10917 108e 6633     		adds	r3, r3, #102
 10918 1090 41F82300 		str	r0, [r1, r3, lsl #2]
1461:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10919              		.loc 1 1461 0 discriminator 3
 10920 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10921 1096 7E49     		ldr	r1, .L460
 10922 1098 1346     		mov	r3, r2
 10923 109a DB00     		lsls	r3, r3, #3
 10924 109c 9B1A     		subs	r3, r3, r2
 10925 109e 1B01     		lsls	r3, r3, #4
 10926 10a0 0B44     		add	r3, r3, r1
 10927 10a2 03F58873 		add	r3, r3, #272
 10928 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10929 10a8 1D46     		mov	r5, r3
 10930 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10931 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10932 10ae 7848     		ldr	r0, .L460
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 248


 10933 10b0 1346     		mov	r3, r2
 10934 10b2 DB00     		lsls	r3, r3, #3
 10935 10b4 9B1A     		subs	r3, r3, r2
 10936 10b6 1B01     		lsls	r3, r3, #4
 10937 10b8 0344     		add	r3, r3, r0
 10938 10ba 03F58873 		add	r3, r3, #272
 10939 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10940 10c0 1C46     		mov	r4, r3
 10941 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10942 10c4 7248     		ldr	r0, .L460
 10943 10c6 2346     		mov	r3, r4
 10944 10c8 5B00     		lsls	r3, r3, #1
 10945 10ca 2344     		add	r3, r3, r4
 10946 10cc 9B00     		lsls	r3, r3, #2
 10947 10ce 1344     		add	r3, r3, r2
 10948 10d0 6633     		adds	r3, r3, #102
 10949 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10950 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10951 10d8 6D4C     		ldr	r4, .L460
 10952 10da 1346     		mov	r3, r2
 10953 10dc DB00     		lsls	r3, r3, #3
 10954 10de 9B1A     		subs	r3, r3, r2
 10955 10e0 1B01     		lsls	r3, r3, #4
 10956 10e2 2344     		add	r3, r3, r4
 10957 10e4 03F58873 		add	r3, r3, #272
 10958 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10959 10ea 1E46     		mov	r6, r3
 10960 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10961 10ee 684C     		ldr	r4, .L460
 10962 10f0 3346     		mov	r3, r6
 10963 10f2 5B00     		lsls	r3, r3, #1
 10964 10f4 3344     		add	r3, r3, r6
 10965 10f6 1B01     		lsls	r3, r3, #4
 10966 10f8 2344     		add	r3, r3, r4
 10967 10fa 1344     		add	r3, r3, r2
 10968 10fc 03F29513 		addw	r3, r3, #405
 10969 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10970 1102 00FA03F2 		lsl	r2, r0, r3
 10971 1106 6248     		ldr	r0, .L460
 10972 1108 2B46     		mov	r3, r5
 10973 110a 5B00     		lsls	r3, r3, #1
 10974 110c 2B44     		add	r3, r3, r5
 10975 110e 9B00     		lsls	r3, r3, #2
 10976 1110 0B44     		add	r3, r3, r1
 10977 1112 6633     		adds	r3, r3, #102
 10978 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1462:..\src/command_processing.c **** 
1463:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 10979              		.loc 1 1463 0 discriminator 3
 10980 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10981 111a 5D49     		ldr	r1, .L460
 10982 111c 1346     		mov	r3, r2
 10983 111e DB00     		lsls	r3, r3, #3
 10984 1120 9B1A     		subs	r3, r3, r2
 10985 1122 1B01     		lsls	r3, r3, #4
 10986 1124 0B44     		add	r3, r3, r1
 10987 1126 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 249


 10988 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10989 112c 1846     		mov	r0, r3
 10990 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10991 1130 5949     		ldr	r1, .L460+8
 10992 1132 3422     		movs	r2, #52
 10993 1134 02FB00F2 		mul	r2, r2, r0
 10994 1138 0A44     		add	r2, r2, r1
 10995 113a 1344     		add	r3, r3, r2
 10996 113c 1833     		adds	r3, r3, #24
 10997 113e 0022     		movs	r2, #0
 10998 1140 1A70     		strb	r2, [r3]
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10999              		.loc 1 1459 0 discriminator 3
 11000 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11001 1144 0133     		adds	r3, r3, #1
 11002 1146 FB75     		strb	r3, [r7, #23]
 11003              	.L441:
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11004              		.loc 1 1459 0 is_stmt 0 discriminator 1
 11005 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11006 114a 022B     		cmp	r3, #2
 11007 114c 7FF67DAF 		bls	.L442
1464:..\src/command_processing.c ****             }
1465:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11008              		.loc 1 1465 0 is_stmt 1
 11009 1150 524B     		ldr	r3, .L460+12
 11010 1152 0122     		movs	r2, #1
 11011 1154 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****             break;
 11012              		.loc 1 1466 0
 11013 1156 57E1     		b	.L387
 11014              	.L370:
1467:..\src/command_processing.c ****     
1468:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1469:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11015              		.loc 1 1469 0
 11016 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11017 115a 4E4B     		ldr	r3, .L460+4
 11018 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11019 115e 1906     		lsls	r1, r3, #24
 11020 1160 4C4B     		ldr	r3, .L460+4
 11021 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11022 1164 1B04     		lsls	r3, r3, #16
 11023 1166 1943     		orrs	r1, r1, r3
 11024 1168 4A4B     		ldr	r3, .L460+4
 11025 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11026 116c 1B02     		lsls	r3, r3, #8
 11027 116e 0B43     		orrs	r3, r3, r1
 11028 1170 4849     		ldr	r1, .L460+4
 11029 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11030 1174 1943     		orrs	r1, r1, r3
 11031 1176 4648     		ldr	r0, .L460
 11032 1178 1346     		mov	r3, r2
 11033 117a DB00     		lsls	r3, r3, #3
 11034 117c 9B1A     		subs	r3, r3, r2
 11035 117e 1B01     		lsls	r3, r3, #4
 11036 1180 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 250


 11037 1182 E433     		adds	r3, r3, #228
 11038 1184 1960     		str	r1, [r3]
1470:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11039              		.loc 1 1470 0
 11040 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11041 1188 424B     		ldr	r3, .L460+4
 11042 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11043 118c 1906     		lsls	r1, r3, #24
 11044 118e 414B     		ldr	r3, .L460+4
 11045 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11046 1192 1B04     		lsls	r3, r3, #16
 11047 1194 1943     		orrs	r1, r1, r3
 11048 1196 3F4B     		ldr	r3, .L460+4
 11049 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11050 119a 1B02     		lsls	r3, r3, #8
 11051 119c 0B43     		orrs	r3, r3, r1
 11052 119e 3D49     		ldr	r1, .L460+4
 11053 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11054 11a2 1943     		orrs	r1, r1, r3
 11055 11a4 3A48     		ldr	r0, .L460
 11056 11a6 1346     		mov	r3, r2
 11057 11a8 DB00     		lsls	r3, r3, #3
 11058 11aa 9B1A     		subs	r3, r3, r2
 11059 11ac 1B01     		lsls	r3, r3, #4
 11060 11ae 0344     		add	r3, r3, r0
 11061 11b0 E833     		adds	r3, r3, #232
 11062 11b2 1960     		str	r1, [r3]
1471:..\src/command_processing.c **** 
1472:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11063              		.loc 1 1472 0
 11064 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11065 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11066 11b8 3548     		ldr	r0, .L460
 11067 11ba 0B46     		mov	r3, r1
 11068 11bc DB00     		lsls	r3, r3, #3
 11069 11be 5B1A     		subs	r3, r3, r1
 11070 11c0 1B01     		lsls	r3, r3, #4
 11071 11c2 0344     		add	r3, r3, r0
 11072 11c4 E433     		adds	r3, r3, #228
 11073 11c6 1868     		ldr	r0, [r3]
 11074 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11075 11ca 314C     		ldr	r4, .L460
 11076 11cc 0B46     		mov	r3, r1
 11077 11ce DB00     		lsls	r3, r3, #3
 11078 11d0 5B1A     		subs	r3, r3, r1
 11079 11d2 1B01     		lsls	r3, r3, #4
 11080 11d4 2344     		add	r3, r3, r4
 11081 11d6 03F58873 		add	r3, r3, #272
 11082 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11083 11dc 1C46     		mov	r4, r3
 11084 11de 2C49     		ldr	r1, .L460
 11085 11e0 2346     		mov	r3, r4
 11086 11e2 5B00     		lsls	r3, r3, #1
 11087 11e4 2344     		add	r3, r3, r4
 11088 11e6 1B01     		lsls	r3, r3, #4
 11089 11e8 0B44     		add	r3, r3, r1
 11090 11ea 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 251


 11091 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11092 11f0 00FA03F1 		lsl	r1, r0, r3
 11093 11f4 2648     		ldr	r0, .L460
 11094 11f6 1346     		mov	r3, r2
 11095 11f8 DB00     		lsls	r3, r3, #3
 11096 11fa 9B1A     		subs	r3, r3, r2
 11097 11fc 1B01     		lsls	r3, r3, #4
 11098 11fe 0344     		add	r3, r3, r0
 11099 1200 E433     		adds	r3, r3, #228
 11100 1202 1960     		str	r1, [r3]
1473:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11101              		.loc 1 1473 0
 11102 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11103 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11104 1208 2148     		ldr	r0, .L460
 11105 120a 0B46     		mov	r3, r1
 11106 120c DB00     		lsls	r3, r3, #3
 11107 120e 5B1A     		subs	r3, r3, r1
 11108 1210 1B01     		lsls	r3, r3, #4
 11109 1212 0344     		add	r3, r3, r0
 11110 1214 E833     		adds	r3, r3, #232
 11111 1216 1868     		ldr	r0, [r3]
 11112 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11113 121a 1D4C     		ldr	r4, .L460
 11114 121c 0B46     		mov	r3, r1
 11115 121e DB00     		lsls	r3, r3, #3
 11116 1220 5B1A     		subs	r3, r3, r1
 11117 1222 1B01     		lsls	r3, r3, #4
 11118 1224 2344     		add	r3, r3, r4
 11119 1226 03F58873 		add	r3, r3, #272
 11120 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11121 122c 1C46     		mov	r4, r3
 11122 122e 1849     		ldr	r1, .L460
 11123 1230 2346     		mov	r3, r4
 11124 1232 5B00     		lsls	r3, r3, #1
 11125 1234 2344     		add	r3, r3, r4
 11126 1236 1B01     		lsls	r3, r3, #4
 11127 1238 0B44     		add	r3, r3, r1
 11128 123a 03F29513 		addw	r3, r3, #405
 11129 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11130 1240 00FA03F1 		lsl	r1, r0, r3
 11131 1244 1248     		ldr	r0, .L460
 11132 1246 1346     		mov	r3, r2
 11133 1248 DB00     		lsls	r3, r3, #3
 11134 124a 9B1A     		subs	r3, r3, r2
 11135 124c 1B01     		lsls	r3, r3, #4
 11136 124e 0344     		add	r3, r3, r0
 11137 1250 E833     		adds	r3, r3, #232
 11138 1252 1960     		str	r1, [r3]
1474:..\src/command_processing.c ****             break;
 11139              		.loc 1 1474 0
 11140 1254 D8E0     		b	.L387
 11141              	.L371:
1475:..\src/command_processing.c ****             
1476:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11142              		.loc 1 1477 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 252


 11143 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11144 1258 0E4B     		ldr	r3, .L460+4
 11145 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11146 125c 0C49     		ldr	r1, .L460
 11147 125e 1346     		mov	r3, r2
 11148 1260 DB00     		lsls	r3, r3, #3
 11149 1262 9B1A     		subs	r3, r3, r2
 11150 1264 1B01     		lsls	r3, r3, #4
 11151 1266 0B44     		add	r3, r3, r1
 11152 1268 E233     		adds	r3, r3, #226
 11153 126a 0246     		mov	r2, r0
 11154 126c 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11155              		.loc 1 1478 0
 11156 126e 084B     		ldr	r3, .L460
 11157 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11158 1274 5B00     		lsls	r3, r3, #1
 11159 1276 5AB2     		sxtb	r2, r3
 11160 1278 054B     		ldr	r3, .L460
 11161 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11162 127e 5BB2     		sxtb	r3, r3
 11163 1280 1343     		orrs	r3, r3, r2
 11164 1282 5BB2     		sxtb	r3, r3
 11165 1284 DBB2     		uxtb	r3, r3
 11166 1286 1846     		mov	r0, r3
 11167 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1479:..\src/command_processing.c ****             break;
 11168              		.loc 1 1479 0
 11169 128c BCE0     		b	.L387
 11170              	.L461:
 11171 128e 00BF     		.align	2
 11172              	.L460:
 11173 1290 00000000 		.word	g_mem
 11174 1294 00000000 		.word	g_rx
 11175 1298 00000000 		.word	g_meas
 11176 129c 00000000 		.word	reset_last_value_flag
 11177              	.L372:
1480:..\src/command_processing.c **** 
1481:..\src/command_processing.c ****         case 71:        // Device type
1482:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11178              		.loc 1 1482 0
 11179 12a0 5B4B     		ldr	r3, .L462
 11180 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11181 12a4 5B4B     		ldr	r3, .L462+4
 11182 12a6 83F8AC20 		strb	r2, [r3, #172]
1483:..\src/command_processing.c ****             
1484:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11183              		.loc 1 1484 0
 11184 12aa 5A4B     		ldr	r3, .L462+4
 11185 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11186 12b0 002B     		cmp	r3, #0
 11187 12b2 40F0A880 		bne	.L449
1485:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11188              		.loc 1 1485 0
 11189 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11190 12b8 5649     		ldr	r1, .L462+4
 11191 12ba 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 253


 11192 12bc DB00     		lsls	r3, r3, #3
 11193 12be 9B1A     		subs	r3, r3, r2
 11194 12c0 1B01     		lsls	r3, r3, #4
 11195 12c2 0B44     		add	r3, r3, r1
 11196 12c4 03F58873 		add	r3, r3, #272
 11197 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11198 12ca 1946     		mov	r1, r3
 11199 12cc 514A     		ldr	r2, .L462+4
 11200 12ce 0B46     		mov	r3, r1
 11201 12d0 5B00     		lsls	r3, r3, #1
 11202 12d2 0B44     		add	r3, r3, r1
 11203 12d4 1B01     		lsls	r3, r3, #4
 11204 12d6 1344     		add	r3, r3, r2
 11205 12d8 03F5D873 		add	r3, r3, #432
 11206 12dc 0122     		movs	r2, #1
 11207 12de 1A70     		strb	r2, [r3]
1486:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11208              		.loc 1 1486 0
 11209 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11210 12e2 4C49     		ldr	r1, .L462+4
 11211 12e4 1346     		mov	r3, r2
 11212 12e6 DB00     		lsls	r3, r3, #3
 11213 12e8 9B1A     		subs	r3, r3, r2
 11214 12ea 1B01     		lsls	r3, r3, #4
 11215 12ec 0B44     		add	r3, r3, r1
 11216 12ee 03F58873 		add	r3, r3, #272
 11217 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11218 12f4 1946     		mov	r1, r3
 11219 12f6 474A     		ldr	r2, .L462+4
 11220 12f8 0B46     		mov	r3, r1
 11221 12fa 5B00     		lsls	r3, r3, #1
 11222 12fc 0B44     		add	r3, r3, r1
 11223 12fe 1B01     		lsls	r3, r3, #4
 11224 1300 1344     		add	r3, r3, r2
 11225 1302 03F2B513 		addw	r3, r3, #437
 11226 1306 2322     		movs	r2, #35
 11227 1308 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11228              		.loc 1 1487 0
 11229 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11230 130c 4149     		ldr	r1, .L462+4
 11231 130e 1346     		mov	r3, r2
 11232 1310 DB00     		lsls	r3, r3, #3
 11233 1312 9B1A     		subs	r3, r3, r2
 11234 1314 1B01     		lsls	r3, r3, #4
 11235 1316 0B44     		add	r3, r3, r1
 11236 1318 03F58873 		add	r3, r3, #272
 11237 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11238 131e 1946     		mov	r1, r3
 11239 1320 3C4A     		ldr	r2, .L462+4
 11240 1322 0B46     		mov	r3, r1
 11241 1324 5B00     		lsls	r3, r3, #1
 11242 1326 0B44     		add	r3, r3, r1
 11243 1328 1B01     		lsls	r3, r3, #4
 11244 132a 1344     		add	r3, r3, r2
 11245 132c 03F5DB73 		add	r3, r3, #438
 11246 1330 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 254


 11247 1332 1A70     		strb	r2, [r3]
1488:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11248              		.loc 1 1488 0
 11249 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11250 1336 3749     		ldr	r1, .L462+4
 11251 1338 1346     		mov	r3, r2
 11252 133a DB00     		lsls	r3, r3, #3
 11253 133c 9B1A     		subs	r3, r3, r2
 11254 133e 1B01     		lsls	r3, r3, #4
 11255 1340 0B44     		add	r3, r3, r1
 11256 1342 03F58873 		add	r3, r3, #272
 11257 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11258 1348 1946     		mov	r1, r3
 11259 134a 324A     		ldr	r2, .L462+4
 11260 134c 0B46     		mov	r3, r1
 11261 134e 5B00     		lsls	r3, r3, #1
 11262 1350 0B44     		add	r3, r3, r1
 11263 1352 1B01     		lsls	r3, r3, #4
 11264 1354 1344     		add	r3, r3, r2
 11265 1356 03F2B713 		addw	r3, r3, #439
 11266 135a FF22     		movs	r2, #255
 11267 135c 1A70     		strb	r2, [r3]
1489:..\src/command_processing.c ****                 
1490:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1491:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11268              		.loc 1 1491 0
 11269 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11270 1360 2C4B     		ldr	r3, .L462+4
 11271 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11272 1366 2B49     		ldr	r1, .L462+4
 11273 1368 1346     		mov	r3, r2
 11274 136a DB00     		lsls	r3, r3, #3
 11275 136c 9B1A     		subs	r3, r3, r2
 11276 136e 1B01     		lsls	r3, r3, #4
 11277 1370 0B44     		add	r3, r3, r1
 11278 1372 03F58873 		add	r3, r3, #272
 11279 1376 0246     		mov	r2, r0
 11280 1378 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11281              		.loc 1 1492 0
 11282 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11283 137c 2549     		ldr	r1, .L462+4
 11284 137e 1346     		mov	r3, r2
 11285 1380 DB00     		lsls	r3, r3, #3
 11286 1382 9B1A     		subs	r3, r3, r2
 11287 1384 1B01     		lsls	r3, r3, #4
 11288 1386 0B44     		add	r3, r3, r1
 11289 1388 03F21113 		addw	r3, r3, #273
 11290 138c 0122     		movs	r2, #1
 11291 138e 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11292              		.loc 1 1493 0
 11293 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11294 1392 2049     		ldr	r1, .L462+4
 11295 1394 1346     		mov	r3, r2
 11296 1396 DB00     		lsls	r3, r3, #3
 11297 1398 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 255


 11298 139a 1B01     		lsls	r3, r3, #4
 11299 139c 0B44     		add	r3, r3, r1
 11300 139e 03F58973 		add	r3, r3, #274
 11301 13a2 0122     		movs	r2, #1
 11302 13a4 1A70     		strb	r2, [r3]
1494:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11303              		.loc 1 1494 0
 11304 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11305 13a8 1A49     		ldr	r1, .L462+4
 11306 13aa 1346     		mov	r3, r2
 11307 13ac DB00     		lsls	r3, r3, #3
 11308 13ae 9B1A     		subs	r3, r3, r2
 11309 13b0 1B01     		lsls	r3, r3, #4
 11310 13b2 0B44     		add	r3, r3, r1
 11311 13b4 E433     		adds	r3, r3, #228
 11312 13b6 0022     		movs	r2, #0
 11313 13b8 1A60     		str	r2, [r3]
1495:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11314              		.loc 1 1495 0
 11315 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11316 13bc 154B     		ldr	r3, .L462+4
 11317 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11318 13c2 1846     		mov	r0, r3
 11319 13c4 1349     		ldr	r1, .L462+4
 11320 13c6 0346     		mov	r3, r0
 11321 13c8 5B00     		lsls	r3, r3, #1
 11322 13ca 0344     		add	r3, r3, r0
 11323 13cc 1B01     		lsls	r3, r3, #4
 11324 13ce 0B44     		add	r3, r3, r1
 11325 13d0 03F29513 		addw	r3, r3, #405
 11326 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11327 13d6 1946     		mov	r1, r3
 11328 13d8 4FF47A53 		mov	r3, #16000
 11329 13dc 03FA01F1 		lsl	r1, r3, r1
 11330 13e0 0C48     		ldr	r0, .L462+4
 11331 13e2 1346     		mov	r3, r2
 11332 13e4 DB00     		lsls	r3, r3, #3
 11333 13e6 9B1A     		subs	r3, r3, r2
 11334 13e8 1B01     		lsls	r3, r3, #4
 11335 13ea 0344     		add	r3, r3, r0
 11336 13ec E833     		adds	r3, r3, #232
 11337 13ee 1960     		str	r1, [r3]
1496:..\src/command_processing.c ****             }        
1497:..\src/command_processing.c ****             break;
 11338              		.loc 1 1497 0
 11339 13f0 09E0     		b	.L449
 11340              	.L444:
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****         default:
1500:..\src/command_processing.c ****             break;
 11341              		.loc 1 1500 0
 11342 13f2 00BF     		nop
 11343 13f4 08E0     		b	.L387
 11344              	.L445:
1306:..\src/command_processing.c ****             
 11345              		.loc 1 1306 0
 11346 13f6 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 256


 11347 13f8 06E0     		b	.L387
 11348              	.L446:
1334:..\src/command_processing.c **** 
 11349              		.loc 1 1334 0
 11350 13fa 00BF     		nop
 11351 13fc 04E0     		b	.L387
 11352              	.L447:
1352:..\src/command_processing.c ****             
 11353              		.loc 1 1352 0
 11354 13fe 00BF     		nop
 11355 1400 02E0     		b	.L387
 11356              	.L448:
1362:..\src/command_processing.c ****            
 11357              		.loc 1 1362 0
 11358 1402 00BF     		nop
 11359 1404 00E0     		b	.L387
 11360              	.L449:
1497:..\src/command_processing.c ****             
 11361              		.loc 1 1497 0
 11362 1406 00BF     		nop
 11363              	.L387:
1501:..\src/command_processing.c ****     }
1502:..\src/command_processing.c **** }
 11364              		.loc 1 1502 0 discriminator 1
 11365 1408 00BF     		nop
 11366 140a 1C37     		adds	r7, r7, #28
 11367              		.cfi_def_cfa_offset 20
 11368 140c BD46     		mov	sp, r7
 11369              		.cfi_def_cfa_register 13
 11370              		@ sp needed
 11371 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 11372              	.L463:
 11373              		.align	2
 11374              	.L462:
 11375 1410 00000000 		.word	g_rx
 11376 1414 00000000 		.word	g_mem
 11377              		.cfi_endproc
 11378              	.LFE69:
 11379              		.size	set_custom_param, .-set_custom_param
 11380              		.section	.rodata
 11381 0e0e 0000     		.align	2
 11382              	.LC125:
 11383 0e10 506F7274 		.ascii	"Port %u ID:\000"
 11383      20257520 
 11383      49443A00 
 11384              		.align	2
 11385              	.LC126:
 11386 0e1c 2575202D 		.ascii	"%u - Device ID:\000"
 11386      20446576 
 11386      69636520 
 11386      49443A00 
 11387              		.align	2
 11388              	.LC127:
 11389 0e2c 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11389      20494D55 
 11389      20256420 
 11389      636F6E66 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 257


 11389      69677572 
 11390 0e47 00       		.align	2
 11391              	.LC128:
 11392 0e48 2575202D 		.ascii	"%u - SPI read delay:\000"
 11392      20535049 
 11392      20726561 
 11392      64206465 
 11392      6C61793A 
 11393 0e5d 000000   		.align	2
 11394              	.LC129:
 11395 0e60 204E6F6E 		.ascii	" None\000"
 11395      6500
 11396 0e66 0000     		.align	2
 11397              	.LC130:
 11398 0e68 204C6F77 		.ascii	" Low\000"
 11398      00
 11399 0e6d 000000   		.align	2
 11400              	.LC131:
 11401 0e70 20486967 		.ascii	" High\000"
 11401      6800
 11402 0e76 0000     		.align	2
 11403              	.LC123:
 11404 0e78 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11404      6572206F 
 11404      6620636F 
 11404      6E6E6563 
 11404      74656420 
 11405 0e92 0000     		.align	2
 11406              	.LC124:
 11407 0e94 4D616720 		.ascii	"Mag cal parameters:\000"
 11407      63616C20 
 11407      70617261 
 11407      6D657465 
 11407      72733A00 
 11408              		.section	.text.get_IMU_param_list,"ax",%progbits
 11409              		.align	2
 11410              		.global	get_IMU_param_list
 11411              		.thumb
 11412              		.thumb_func
 11413              		.type	get_IMU_param_list, %function
 11414              	get_IMU_param_list:
 11415              	.LFB70:
1503:..\src/command_processing.c **** 
1504:..\src/command_processing.c **** //==============================================================================
1505:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1506:..\src/command_processing.c **** //==============================================================================
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1509:..\src/command_processing.c **** {
 11416              		.loc 1 1509 0
 11417              		.cfi_startproc
 11418              		@ args = 0, pretend = 0, frame = 1704
 11419              		@ frame_needed = 1, uses_anonymous_args = 0
 11420 0000 B0B5     		push	{r4, r5, r7, lr}
 11421              		.cfi_def_cfa_offset 16
 11422              		.cfi_offset 4, -16
 11423              		.cfi_offset 5, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 258


 11424              		.cfi_offset 7, -8
 11425              		.cfi_offset 14, -4
 11426 0002 ADF5D56D 		sub	sp, sp, #1704
 11427              		.cfi_def_cfa_offset 1720
 11428 0006 00AF     		add	r7, sp, #0
 11429              		.cfi_def_cfa_register 7
 11430 0008 0246     		mov	r2, r0
 11431 000a BB1D     		adds	r3, r7, #6
 11432 000c 1A80     		strh	r2, [r3]	@ movhi
1510:..\src/command_processing.c ****     //Package to be sent variables
1511:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11433              		.loc 1 1511 0
 11434 000e 07F58A73 		add	r3, r7, #276
 11435 0012 0022     		movs	r2, #0
 11436 0014 1A60     		str	r2, [r3]
 11437 0016 0433     		adds	r3, r3, #4
 11438 0018 40F27552 		movw	r2, #1397
 11439 001c 0021     		movs	r1, #0
 11440 001e 1846     		mov	r0, r3
 11441 0020 FFF7FEFF 		bl	memset
1512:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1513:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1514:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1515:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1516:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1517:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1518:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11442              		.loc 1 1518 0
 11443 0024 0723     		movs	r3, #7
 11444 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1519:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11445              		.loc 1 1519 0
 11446 002a 0023     		movs	r3, #0
 11447 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1520:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11448              		.loc 1 1520 0
 11449 0030 0223     		movs	r3, #2
 11450 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11451              		.loc 1 1521 0
 11452 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11453 003a 5A1C     		adds	r2, r3, #1
1522:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11454              		.loc 1 1522 0
 11455 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11456 0040 1344     		add	r3, r3, r2
1523:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11457              		.loc 1 1523 0
 11458 0042 0133     		adds	r3, r3, #1
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11459              		.loc 1 1521 0
 11460 0044 9AB2     		uxth	r2, r3
 11461 0046 D24B     		ldr	r3, .L510
 11462 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11463 004a 9BB2     		uxth	r3, r3
 11464 004c 1344     		add	r3, r3, r2
 11465 004e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 259


 11466 0050 1A46     		mov	r2, r3	@ movhi
 11467 0052 9200     		lsls	r2, r2, #2
 11468 0054 1344     		add	r3, r3, r2
 11469 0056 1A46     		mov	r2, r3	@ movhi
 11470 0058 9100     		lsls	r1, r2, #2
 11471 005a 1A46     		mov	r2, r3	@ movhi
 11472 005c 0B46     		mov	r3, r1	@ movhi
 11473 005e 1344     		add	r3, r3, r2
 11474 0060 5B00     		lsls	r3, r3, #1
 11475 0062 9BB2     		uxth	r3, r3
 11476 0064 FB33     		adds	r3, r3, #251
 11477 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1524:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1525:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1526:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1527:..\src/command_processing.c **** 
1528:..\src/command_processing.c ****     //Auxiliary variables
1529:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1530:..\src/command_processing.c ****     uint16 start_byte = 0;
 11478              		.loc 1 1530 0
 11479 006a 0023     		movs	r3, #0
 11480 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1531:..\src/command_processing.c **** 
1532:..\src/command_processing.c ****     //Parameters menu string definitions
1533:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11481              		.loc 1 1533 0
 11482 0070 07F1F803 		add	r3, r7, #248
 11483 0074 C74A     		ldr	r2, .L510+4
 11484 0076 1C46     		mov	r4, r3
 11485 0078 1546     		mov	r5, r2
 11486 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11487 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11488 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11489 0082 03C4     		stmia	r4!, {r0, r1}
 11490 0084 2280     		strh	r2, [r4]	@ movhi
1534:..\src/command_processing.c ****     char ids_str[11]            = "";
 11491              		.loc 1 1534 0
 11492 0086 07F1EC03 		add	r3, r7, #236
 11493 008a 0022     		movs	r2, #0
 11494 008c 1A60     		str	r2, [r3]
 11495 008e 0433     		adds	r3, r3, #4
 11496 0090 0022     		movs	r2, #0
 11497 0092 1A60     		str	r2, [r3]
 11498 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1535:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11499              		.loc 1 1535 0
 11500 0098 07F1D803 		add	r3, r7, #216
 11501 009c BE4A     		ldr	r2, .L510+8
 11502 009e 1C46     		mov	r4, r3
 11503 00a0 1546     		mov	r5, r2
 11504 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11505 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11506 00a6 2B68     		ldr	r3, [r5]
 11507 00a8 2360     		str	r3, [r4]
1536:..\src/command_processing.c ****     char id_str[16]             = "";
 11508              		.loc 1 1536 0
 11509 00aa 07F1C803 		add	r3, r7, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 260


 11510 00ae 0022     		movs	r2, #0
 11511 00b0 1A60     		str	r2, [r3]
 11512 00b2 0433     		adds	r3, r3, #4
 11513 00b4 0022     		movs	r2, #0
 11514 00b6 1A60     		str	r2, [r3]
 11515 00b8 5A60     		str	r2, [r3, #4]
 11516 00ba 9A60     		str	r2, [r3, #8]
1537:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11517              		.loc 1 1537 0
 11518 00bc 07F19C03 		add	r3, r7, #156
 11519 00c0 0022     		movs	r2, #0
 11520 00c2 1A60     		str	r2, [r3]
 11521 00c4 0433     		adds	r3, r3, #4
 11522 00c6 2622     		movs	r2, #38
 11523 00c8 0021     		movs	r1, #0
 11524 00ca 1846     		mov	r0, r3
 11525 00cc FFF7FEFF 		bl	memset
1538:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11526              		.loc 1 1538 0
 11527 00d0 07F18003 		add	r3, r7, #128
 11528 00d4 0022     		movs	r2, #0
 11529 00d6 1A60     		str	r2, [r3]
 11530 00d8 0433     		adds	r3, r3, #4
 11531 00da 0022     		movs	r2, #0
 11532 00dc 1A60     		str	r2, [r3]
 11533 00de 5A60     		str	r2, [r3, #4]
 11534 00e0 9A60     		str	r2, [r3, #8]
 11535 00e2 DA60     		str	r2, [r3, #12]
 11536 00e4 1A61     		str	r2, [r3, #16]
 11537 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1539:..\src/command_processing.c ****     
1540:..\src/command_processing.c ****     //Strings lenghts
1541:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11538              		.loc 1 1541 0
 11539 00e8 07F1C803 		add	r3, r7, #200
 11540 00ec 1846     		mov	r0, r3
 11541 00ee FFF7FEFF 		bl	strlen
 11542 00f2 0346     		mov	r3, r0
 11543 00f4 87F89336 		strb	r3, [r7, #1683]
1542:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 11544              		.loc 1 1542 0
 11545 00f8 07F1F803 		add	r3, r7, #248
 11546 00fc 1846     		mov	r0, r3
 11547 00fe FFF7FEFF 		bl	strlen
 11548 0102 0346     		mov	r3, r0
 11549 0104 87F89236 		strb	r3, [r7, #1682]
1543:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11550              		.loc 1 1543 0
 11551 0108 07F1EC03 		add	r3, r7, #236
 11552 010c 1846     		mov	r0, r3
 11553 010e FFF7FEFF 		bl	strlen
 11554 0112 0346     		mov	r3, r0
 11555 0114 87F89136 		strb	r3, [r7, #1681]
1544:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 11556              		.loc 1 1544 0
 11557 0118 07F1D803 		add	r3, r7, #216
 11558 011c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 261


 11559 011e FFF7FEFF 		bl	strlen
 11560 0122 0346     		mov	r3, r0
 11561 0124 87F89036 		strb	r3, [r7, #1680]
1545:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 11562              		.loc 1 1545 0
 11563 0128 07F19C03 		add	r3, r7, #156
 11564 012c 1846     		mov	r0, r3
 11565 012e FFF7FEFF 		bl	strlen
 11566 0132 0346     		mov	r3, r0
 11567 0134 87F88F36 		strb	r3, [r7, #1679]
1546:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 11568              		.loc 1 1546 0
 11569 0138 07F18003 		add	r3, r7, #128
 11570 013c 1846     		mov	r0, r3
 11571 013e FFF7FEFF 		bl	strlen
 11572 0142 0346     		mov	r3, r0
 11573 0144 87F89D36 		strb	r3, [r7, #1693]
1547:..\src/command_processing.c ****     
1548:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 11574              		.loc 1 1548 0
 11575 0148 07F10803 		add	r3, r7, #8
 11576 014c 0022     		movs	r2, #0
 11577 014e 1A60     		str	r2, [r3]
 11578 0150 0433     		adds	r3, r3, #4
 11579 0152 7222     		movs	r2, #114
 11580 0154 0021     		movs	r1, #0
 11581 0156 1846     		mov	r0, r3
 11582 0158 FFF7FEFF 		bl	memset
1549:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1550:..\src/command_processing.c ****  
1551:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 11583              		.loc 1 1551 0
 11584 015c 07F10800 		add	r0, r7, #8
 11585 0160 6423     		movs	r3, #100
 11586 0162 0A22     		movs	r2, #10
 11587 0164 8D49     		ldr	r1, .L510+12
 11588 0166 FFF7FEFF 		bl	sprintf
1552:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 11589              		.loc 1 1552 0
 11590 016a 07F10803 		add	r3, r7, #8
 11591 016e 1846     		mov	r0, r3
 11592 0170 FFF7FEFF 		bl	strlen
 11593 0174 0346     		mov	r3, r0
 11594 0176 87F88E36 		strb	r3, [r7, #1678]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1555:..\src/command_processing.c ****     // update packet_length
1556:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11595              		.loc 1 1556 0
 11596 017a 854B     		ldr	r3, .L510
 11597 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11598 017e 5B08     		lsrs	r3, r3, #1
 11599 0180 DBB2     		uxtb	r3, r3
 11600 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1557:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11601              		.loc 1 1557 0
 11602 0186 824B     		ldr	r3, .L510
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 262


 11603 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11604 018a 1A46     		mov	r2, r3
 11605 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11606 0190 5B00     		lsls	r3, r3, #1
 11607 0192 D31A     		subs	r3, r2, r3
 11608 0194 002B     		cmp	r3, #0
 11609 0196 04DD     		ble	.L465
 11610              		.loc 1 1557 0 is_stmt 0 discriminator 1
 11611 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11612 019c 0133     		adds	r3, r3, #1
 11613 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11614              	.L465:
1558:..\src/command_processing.c ****     
1559:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11615              		.loc 1 1559 0 is_stmt 1
 11616 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 11617 01a6 5A1C     		adds	r2, r3, #1
1560:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11618              		.loc 1 1560 0
 11619 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11620 01ac 1344     		add	r3, r3, r2
1561:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11621              		.loc 1 1561 0
 11622 01ae 0133     		adds	r3, r3, #1
1559:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11623              		.loc 1 1559 0
 11624 01b0 9AB2     		uxth	r2, r3
 11625 01b2 774B     		ldr	r3, .L510
 11626 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11627 01b6 9BB2     		uxth	r3, r3
 11628 01b8 1344     		add	r3, r3, r2
 11629 01ba 9BB2     		uxth	r3, r3
 11630 01bc 1A46     		mov	r2, r3	@ movhi
 11631 01be 9200     		lsls	r2, r2, #2
 11632 01c0 1344     		add	r3, r3, r2
 11633 01c2 1A46     		mov	r2, r3	@ movhi
 11634 01c4 9100     		lsls	r1, r2, #2
 11635 01c6 1A46     		mov	r2, r3	@ movhi
 11636 01c8 0B46     		mov	r3, r1	@ movhi
 11637 01ca 1344     		add	r3, r3, r2
 11638 01cc 5B00     		lsls	r3, r3, #1
 11639 01ce 9BB2     		uxth	r3, r3
 11640 01d0 C933     		adds	r3, r3, #201
 11641 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1562:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1563:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1564:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1565:..\src/command_processing.c **** 
1566:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11642              		.loc 1 1566 0
 11643 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11644 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11645 01de 1344     		add	r3, r3, r2
 11646 01e0 9BB2     		uxth	r3, r3
 11647 01e2 0333     		adds	r3, r3, #3
 11648 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1567:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 263


 11649              		.loc 1 1567 0
 11650 01e8 07F58A73 		add	r3, r7, #276
 11651 01ec A222     		movs	r2, #162
 11652 01ee 1A70     		strb	r2, [r3]
1568:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11653              		.loc 1 1568 0
 11654 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11655 01f4 DAB2     		uxtb	r2, r3
 11656 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11657 01fa DBB2     		uxtb	r3, r3
 11658 01fc 1344     		add	r3, r3, r2
 11659 01fe DAB2     		uxtb	r2, r3
 11660 0200 634B     		ldr	r3, .L510
 11661 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11662 0204 1344     		add	r3, r3, r2
 11663 0206 DBB2     		uxtb	r3, r3
 11664 0208 0333     		adds	r3, r3, #3
 11665 020a DAB2     		uxtb	r2, r3
 11666 020c 07F58A73 		add	r3, r7, #276
 11667 0210 5A70     		strb	r2, [r3, #1]
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****     switch(index) {
 11668              		.loc 1 1570 0
 11669 0212 BB1D     		adds	r3, r7, #6
 11670 0214 1B88     		ldrh	r3, [r3]
 11671 0216 002B     		cmp	r3, #0
 11672 0218 40F0D084 		bne	.L508
1571:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1572:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1573:..\src/command_processing.c ****             start_byte = 0;
 11673              		.loc 1 1573 0
 11674 021c 0023     		movs	r3, #0
 11675 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1574:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11676              		.loc 1 1574 0
 11677 0222 07F58A73 		add	r3, r7, #276
 11678 0226 0222     		movs	r2, #2
 11679 0228 9A70     		strb	r2, [r3, #2]
1575:..\src/command_processing.c ****             packet_data[3] = 1;
 11680              		.loc 1 1575 0
 11681 022a 07F58A73 		add	r3, r7, #276
 11682 022e 0122     		movs	r2, #1
 11683 0230 DA70     		strb	r2, [r3, #3]
1576:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11684              		.loc 1 1576 0
 11685 0232 574B     		ldr	r3, .L510
 11686 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11687 0236 07F58A73 		add	r3, r7, #276
 11688 023a 1A71     		strb	r2, [r3, #4]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11689              		.loc 1 1577 0
 11690 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11691 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11692 0244 15E0     		b	.L468
 11693              	.L469:
1578:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11694              		.loc 1 1578 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 264


 11695 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11696 024a 5A1D     		adds	r2, r3, #5
 11697 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11698 0250 D31A     		subs	r3, r2, r3
 11699 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11700 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11701 025a 8A1A     		subs	r2, r1, r2
 11702 025c 07F1F801 		add	r1, r7, #248
 11703 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11704 0262 07F58A72 		add	r2, r7, #276
 11705 0266 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11706              		.loc 1 1577 0 discriminator 3
 11707 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11708 026c 013B     		subs	r3, r3, #1
 11709 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11710              	.L468:
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11711              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11712 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11713 0276 002B     		cmp	r3, #0
 11714 0278 E5D1     		bne	.L469
1579:..\src/command_processing.c ****                 
1580:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1581:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11715              		.loc 1 1581 0 is_stmt 1
 11716 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11717 027e 3233     		adds	r3, r3, #50
 11718 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1582:..\src/command_processing.c ****             i = 0;
 11719              		.loc 1 1582 0
 11720 0284 0023     		movs	r3, #0
 11721 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1583:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11722              		.loc 1 1583 0
 11723 028a 0023     		movs	r3, #0
 11724 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11725 0290 B2E0     		b	.L470
 11726              	.L477:
1584:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11727              		.loc 1 1584 0
 11728 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11729 0296 07F1EC03 		add	r3, r7, #236
 11730 029a 4149     		ldr	r1, .L510+16
 11731 029c 1846     		mov	r0, r3
 11732 029e FFF7FEFF 		bl	sprintf
1585:..\src/command_processing.c ****                 h = 4;
 11733              		.loc 1 1585 0
 11734 02a2 0423     		movs	r3, #4
 11735 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1586:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11736              		.loc 1 1586 0
 11737 02a8 07F1EC03 		add	r3, r7, #236
 11738 02ac 1846     		mov	r0, r3
 11739 02ae FFF7FEFF 		bl	strlen
 11740 02b2 0346     		mov	r3, r0
 11741 02b4 87F89136 		strb	r3, [r7, #1681]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 265


1587:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11742              		.loc 1 1587 0
 11743 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11744 02bc 9A1C     		adds	r2, r3, #2
 11745 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11746 02c2 3221     		movs	r1, #50
 11747 02c4 01FB03F3 		mul	r3, r1, r3
 11748 02c8 1344     		add	r3, r3, r2
 11749 02ca 07F58A72 		add	r2, r7, #276
 11750 02ce 0221     		movs	r1, #2
 11751 02d0 D154     		strb	r1, [r2, r3]
1588:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11752              		.loc 1 1588 0
 11753 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11754 02d6 DA1C     		adds	r2, r3, #3
 11755 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11756 02dc 3221     		movs	r1, #50
 11757 02de 01FB03F3 		mul	r3, r1, r3
 11758 02e2 1344     		add	r3, r3, r2
 11759 02e4 07F58A72 		add	r2, r7, #276
 11760 02e8 0321     		movs	r1, #3
 11761 02ea D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                 
1590:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11762              		.loc 1 1590 0
 11763 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11764 02f0 1A46     		mov	r2, r3	@ movhi
 11765 02f2 5200     		lsls	r2, r2, #1
 11766 02f4 1344     		add	r3, r3, r2
 11767 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11768 02fa 39E0     		b	.L471
 11769              	.L474:
1591:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11770              		.loc 1 1591 0
 11771 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11772 0300 284A     		ldr	r2, .L510+20
 11773 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11774 0304 9BB2     		uxth	r3, r3
 11775 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11776 030a 9A42     		cmp	r2, r3
 11777 030c 17D1     		bne	.L472
1592:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11778              		.loc 1 1592 0
 11779 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11780 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11781 0316 1A44     		add	r2, r2, r3
 11782 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11783 031c 3221     		movs	r1, #50
 11784 031e 01FB03F3 		mul	r3, r1, r3
 11785 0322 1344     		add	r3, r3, r2
 11786 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11787 0328 1E49     		ldr	r1, .L510+20
 11788 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11789 032c 07F58A72 		add	r2, r7, #276
 11790 0330 D154     		strb	r1, [r2, r3]
1593:..\src/command_processing.c ****                         i++;
 11791              		.loc 1 1593 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 266


 11792 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11793 0336 0133     		adds	r3, r3, #1
 11794 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11795 033c 0EE0     		b	.L473
 11796              	.L472:
1594:..\src/command_processing.c ****                     } 
1595:..\src/command_processing.c ****                     else {
1596:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11797              		.loc 1 1596 0
 11798 033e B7F89E26 		ldrh	r2, [r7, #1694]
 11799 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11800 0346 1A44     		add	r2, r2, r3
 11801 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11802 034c 3221     		movs	r1, #50
 11803 034e 01FB03F3 		mul	r3, r1, r3
 11804 0352 1344     		add	r3, r3, r2
 11805 0354 07F58A72 		add	r2, r7, #276
 11806 0358 FF21     		movs	r1, #255
 11807 035a D154     		strb	r1, [r2, r3]
 11808              	.L473:
1597:..\src/command_processing.c ****                     }
1598:..\src/command_processing.c ****                     h++;
 11809              		.loc 1 1598 0 discriminator 2
 11810 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11811 0360 0133     		adds	r3, r3, #1
 11812 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11813              		.loc 1 1590 0 discriminator 2
 11814 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 11815 036a 0133     		adds	r3, r3, #1
 11816 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11817              	.L471:
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11818              		.loc 1 1590 0 is_stmt 0 discriminator 1
 11819 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11820 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11821 0378 1346     		mov	r3, r2
 11822 037a 5B00     		lsls	r3, r3, #1
 11823 037c 1344     		add	r3, r3, r2
 11824 037e 0233     		adds	r3, r3, #2
 11825 0380 9942     		cmp	r1, r3
 11826 0382 BBDD     		ble	.L474
1599:..\src/command_processing.c ****                 }
1600:..\src/command_processing.c **** 
1601:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1602:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11827              		.loc 1 1602 0 is_stmt 1
 11828 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11829 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11830 038c 2BE0     		b	.L475
 11831              	.L511:
 11832 038e 00BF     		.align	2
 11833              	.L510:
 11834 0390 00000000 		.word	N_IMU_Connected
 11835 0394 780E0000 		.word	.LC123
 11836 0398 940E0000 		.word	.LC124
 11837 039c B0010000 		.word	.LC113
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 267


 11838 03a0 100E0000 		.word	.LC125
 11839 03a4 00000000 		.word	IMU_connected
 11840              	.L476:
1603:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11841              		.loc 1 1603 0 discriminator 3
 11842 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11843 03ac DA1D     		adds	r2, r3, #7
 11844 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11845 03b2 3221     		movs	r1, #50
 11846 03b4 01FB03F3 		mul	r3, r1, r3
 11847 03b8 1A44     		add	r2, r2, r3
 11848 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11849 03be 1A44     		add	r2, r2, r3
 11850 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11851 03c4 D31A     		subs	r3, r2, r3
 11852 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 11853 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11854 03ce 8A1A     		subs	r2, r1, r2
 11855 03d0 07F1EC01 		add	r1, r7, #236
 11856 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11857 03d6 07F58A72 		add	r2, r7, #276
 11858 03da D154     		strb	r1, [r2, r3]
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11859              		.loc 1 1602 0 discriminator 3
 11860 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11861 03e0 013B     		subs	r3, r3, #1
 11862 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11863              	.L475:
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11864              		.loc 1 1602 0 is_stmt 0 discriminator 1
 11865 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11866 03ea 002B     		cmp	r3, #0
 11867 03ec DCD1     		bne	.L476
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11868              		.loc 1 1583 0 is_stmt 1 discriminator 2
 11869 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11870 03f2 0133     		adds	r3, r3, #1
 11871 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11872              	.L470:
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11873              		.loc 1 1583 0 is_stmt 0 discriminator 1
 11874 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11875 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11876 0400 9A42     		cmp	r2, r3
 11877 0402 FFF446AF 		bcc	.L477
1604:..\src/command_processing.c ****             }
1605:..\src/command_processing.c ****             
1606:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1607:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11878              		.loc 1 1607 0 is_stmt 1
 11879 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11880 040a 1A46     		mov	r2, r3	@ movhi
 11881 040c 9200     		lsls	r2, r2, #2
 11882 040e 1344     		add	r3, r3, r2
 11883 0410 1A46     		mov	r2, r3	@ movhi
 11884 0412 9100     		lsls	r1, r2, #2
 11885 0414 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 268


 11886 0416 0B46     		mov	r3, r1	@ movhi
 11887 0418 1344     		add	r3, r3, r2
 11888 041a 5B00     		lsls	r3, r3, #1
 11889 041c 9AB2     		uxth	r2, r3
 11890 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11891 0422 1344     		add	r3, r3, r2
 11892 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1608:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11893              		.loc 1 1608 0
 11894 0428 0023     		movs	r3, #0
 11895 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11896 042e 1FE1     		b	.L478
 11897              	.L485:
1609:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11898              		.loc 1 1609 0
 11899 0430 B7F89436 		ldrh	r3, [r7, #1684]
 11900 0434 9A1C     		adds	r2, r3, #2
 11901 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11902 043a 3221     		movs	r1, #50
 11903 043c 01FB03F3 		mul	r3, r1, r3
 11904 0440 1344     		add	r3, r3, r2
 11905 0442 07F58A72 		add	r2, r7, #276
 11906 0446 0221     		movs	r1, #2
 11907 0448 D154     		strb	r1, [r2, r3]
1610:..\src/command_processing.c ****                 
1611:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11908              		.loc 1 1611 0
 11909 044a B7F89436 		ldrh	r3, [r7, #1684]
 11910 044e DA1C     		adds	r2, r3, #3
 11911 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11912 0454 3221     		movs	r1, #50
 11913 0456 01FB03F3 		mul	r3, r1, r3
 11914 045a 1344     		add	r3, r3, r2
 11915 045c 07F58A72 		add	r2, r7, #276
 11916 0460 0321     		movs	r1, #3
 11917 0462 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11918              		.loc 1 1612 0
 11919 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11920 0468 1A1D     		adds	r2, r3, #4
 11921 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11922 046e 3221     		movs	r1, #50
 11923 0470 01FB03F3 		mul	r3, r1, r3
 11924 0474 1A44     		add	r2, r2, r3
 11925 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11926 047a 5B00     		lsls	r3, r3, #1
 11927 047c B249     		ldr	r1, .L512
 11928 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11929 0480 1846     		mov	r0, r3
 11930 0482 B249     		ldr	r1, .L512+4
 11931 0484 0346     		mov	r3, r0
 11932 0486 5B00     		lsls	r3, r3, #1
 11933 0488 0344     		add	r3, r3, r0
 11934 048a 0B44     		add	r3, r3, r1
 11935 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11936 048e 07F58A73 		add	r3, r7, #276
 11937 0492 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 269


1613:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11938              		.loc 1 1613 0
 11939 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11940 0498 5A1D     		adds	r2, r3, #5
 11941 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11942 049e 3221     		movs	r1, #50
 11943 04a0 01FB03F3 		mul	r3, r1, r3
 11944 04a4 1A44     		add	r2, r2, r3
 11945 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11946 04aa 5B00     		lsls	r3, r3, #1
 11947 04ac A649     		ldr	r1, .L512
 11948 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11949 04b0 1846     		mov	r0, r3
 11950 04b2 A649     		ldr	r1, .L512+4
 11951 04b4 0346     		mov	r3, r0
 11952 04b6 5B00     		lsls	r3, r3, #1
 11953 04b8 0344     		add	r3, r3, r0
 11954 04ba 0B44     		add	r3, r3, r1
 11955 04bc 0133     		adds	r3, r3, #1
 11956 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11957 04c0 07F58A73 		add	r3, r7, #276
 11958 04c4 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11959              		.loc 1 1614 0
 11960 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 11961 04ca 9A1D     		adds	r2, r3, #6
 11962 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 11963 04d0 3221     		movs	r1, #50
 11964 04d2 01FB03F3 		mul	r3, r1, r3
 11965 04d6 1A44     		add	r2, r2, r3
 11966 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11967 04dc 5B00     		lsls	r3, r3, #1
 11968 04de 9A49     		ldr	r1, .L512
 11969 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11970 04e2 1846     		mov	r0, r3
 11971 04e4 9949     		ldr	r1, .L512+4
 11972 04e6 0346     		mov	r3, r0
 11973 04e8 5B00     		lsls	r3, r3, #1
 11974 04ea 0344     		add	r3, r3, r0
 11975 04ec 0B44     		add	r3, r3, r1
 11976 04ee 0233     		adds	r3, r3, #2
 11977 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11978 04f2 07F58A73 		add	r3, r7, #276
 11979 04f6 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                 // check if there is a second value
1617:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 11980              		.loc 1 1617 0
 11981 04f8 954B     		ldr	r3, .L512+8
 11982 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11983 04fc 1A46     		mov	r2, r3
 11984 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 11985 0502 0133     		adds	r3, r3, #1
 11986 0504 5B00     		lsls	r3, r3, #1
 11987 0506 9A42     		cmp	r2, r3
 11988 0508 28DA     		bge	.L479
1618:..\src/command_processing.c ****                     // there is only one value
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 270


1619:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11989              		.loc 1 1619 0
 11990 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11991 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11992 0512 1EE0     		b	.L480
 11993              	.L481:
1620:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11994              		.loc 1 1620 0 discriminator 3
 11995 0514 B7F89436 		ldrh	r3, [r7, #1684]
 11996 0518 DA1D     		adds	r2, r3, #7
 11997 051a B7F8A036 		ldrh	r3, [r7, #1696]
 11998 051e 3221     		movs	r1, #50
 11999 0520 01FB03F3 		mul	r3, r1, r3
 12000 0524 1A44     		add	r2, r2, r3
 12001 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12002 052a 1A44     		add	r2, r2, r3
 12003 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12004 0530 D31A     		subs	r3, r2, r3
 12005 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12006 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12007 053a 8A1A     		subs	r2, r1, r2
 12008 053c 07F1D801 		add	r1, r7, #216
 12009 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12010 0542 07F58A72 		add	r2, r7, #276
 12011 0546 D154     		strb	r1, [r2, r3]
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12012              		.loc 1 1619 0 discriminator 3
 12013 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12014 054c 013B     		subs	r3, r3, #1
 12015 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12016              	.L480:
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12017              		.loc 1 1619 0 is_stmt 0 discriminator 1
 12018 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12019 0556 002B     		cmp	r3, #0
 12020 0558 DCD1     		bne	.L481
 12021 055a 84E0     		b	.L482
 12022              	.L479:
1621:..\src/command_processing.c ****                 }
1622:..\src/command_processing.c ****                 else {
1623:..\src/command_processing.c ****                     // fill the second value
1624:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12023              		.loc 1 1624 0 is_stmt 1
 12024 055c B7F89436 		ldrh	r3, [r7, #1684]
 12025 0560 DA1C     		adds	r2, r3, #3
 12026 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12027 0566 3221     		movs	r1, #50
 12028 0568 01FB03F3 		mul	r3, r1, r3
 12029 056c 1344     		add	r3, r3, r2
 12030 056e 07F58A72 		add	r2, r7, #276
 12031 0572 0621     		movs	r1, #6
 12032 0574 D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12033              		.loc 1 1625 0
 12034 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12035 057a DA1D     		adds	r2, r3, #7
 12036 057c B7F8A036 		ldrh	r3, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 271


 12037 0580 3221     		movs	r1, #50
 12038 0582 01FB03F3 		mul	r3, r1, r3
 12039 0586 1A44     		add	r2, r2, r3
 12040 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12041 058c 5B00     		lsls	r3, r3, #1
 12042 058e 0133     		adds	r3, r3, #1
 12043 0590 6D49     		ldr	r1, .L512
 12044 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12045 0594 1846     		mov	r0, r3
 12046 0596 6D49     		ldr	r1, .L512+4
 12047 0598 0346     		mov	r3, r0
 12048 059a 5B00     		lsls	r3, r3, #1
 12049 059c 0344     		add	r3, r3, r0
 12050 059e 0B44     		add	r3, r3, r1
 12051 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12052 05a2 07F58A73 		add	r3, r7, #276
 12053 05a6 9954     		strb	r1, [r3, r2]
1626:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12054              		.loc 1 1626 0
 12055 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12056 05ac 03F10802 		add	r2, r3, #8
 12057 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12058 05b4 3221     		movs	r1, #50
 12059 05b6 01FB03F3 		mul	r3, r1, r3
 12060 05ba 1A44     		add	r2, r2, r3
 12061 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12062 05c0 5B00     		lsls	r3, r3, #1
 12063 05c2 0133     		adds	r3, r3, #1
 12064 05c4 6049     		ldr	r1, .L512
 12065 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12066 05c8 1846     		mov	r0, r3
 12067 05ca 6049     		ldr	r1, .L512+4
 12068 05cc 0346     		mov	r3, r0
 12069 05ce 5B00     		lsls	r3, r3, #1
 12070 05d0 0344     		add	r3, r3, r0
 12071 05d2 0B44     		add	r3, r3, r1
 12072 05d4 0133     		adds	r3, r3, #1
 12073 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12074 05d8 07F58A73 		add	r3, r7, #276
 12075 05dc 9954     		strb	r1, [r3, r2]
1627:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12076              		.loc 1 1627 0
 12077 05de B7F89436 		ldrh	r3, [r7, #1684]
 12078 05e2 03F10902 		add	r2, r3, #9
 12079 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12080 05ea 3221     		movs	r1, #50
 12081 05ec 01FB03F3 		mul	r3, r1, r3
 12082 05f0 1A44     		add	r2, r2, r3
 12083 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12084 05f6 5B00     		lsls	r3, r3, #1
 12085 05f8 0133     		adds	r3, r3, #1
 12086 05fa 5349     		ldr	r1, .L512
 12087 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12088 05fe 1846     		mov	r0, r3
 12089 0600 5249     		ldr	r1, .L512+4
 12090 0602 0346     		mov	r3, r0
 12091 0604 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 272


 12092 0606 0344     		add	r3, r3, r0
 12093 0608 0B44     		add	r3, r3, r1
 12094 060a 0233     		adds	r3, r3, #2
 12095 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12096 060e 07F58A73 		add	r3, r7, #276
 12097 0612 9954     		strb	r1, [r3, r2]
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12098              		.loc 1 1629 0
 12099 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12100 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12101 061c 1FE0     		b	.L483
 12102              	.L484:
1630:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12103              		.loc 1 1630 0 discriminator 3
 12104 061e B7F89436 		ldrh	r3, [r7, #1684]
 12105 0622 03F10A02 		add	r2, r3, #10
 12106 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12107 062a 3221     		movs	r1, #50
 12108 062c 01FB03F3 		mul	r3, r1, r3
 12109 0630 1A44     		add	r2, r2, r3
 12110 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12111 0636 1A44     		add	r2, r2, r3
 12112 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12113 063c D31A     		subs	r3, r2, r3
 12114 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12115 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12116 0646 8A1A     		subs	r2, r1, r2
 12117 0648 07F1D801 		add	r1, r7, #216
 12118 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12119 064e 07F58A72 		add	r2, r7, #276
 12120 0652 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12121              		.loc 1 1629 0 discriminator 3
 12122 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12123 0658 013B     		subs	r3, r3, #1
 12124 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12125              	.L483:
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12126              		.loc 1 1629 0 is_stmt 0 discriminator 1
 12127 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12128 0662 002B     		cmp	r3, #0
 12129 0664 DBD1     		bne	.L484
 12130              	.L482:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12131              		.loc 1 1608 0 is_stmt 1 discriminator 2
 12132 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12133 066a 0133     		adds	r3, r3, #1
 12134 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12135              	.L478:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12136              		.loc 1 1608 0 is_stmt 0 discriminator 1
 12137 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12138 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12139 0678 9A42     		cmp	r2, r3
 12140 067a FFF4D9AE 		bcc	.L485
1631:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 273


1632:..\src/command_processing.c ****             }
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12141              		.loc 1 1636 0 is_stmt 1
 12142 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12143 0682 1A46     		mov	r2, r3	@ movhi
 12144 0684 9200     		lsls	r2, r2, #2
 12145 0686 1344     		add	r3, r3, r2
 12146 0688 1A46     		mov	r2, r3	@ movhi
 12147 068a 9100     		lsls	r1, r2, #2
 12148 068c 1A46     		mov	r2, r3	@ movhi
 12149 068e 0B46     		mov	r3, r1	@ movhi
 12150 0690 1344     		add	r3, r3, r2
 12151 0692 5B00     		lsls	r3, r3, #1
 12152 0694 9AB2     		uxth	r2, r3
 12153 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12154 069a 1344     		add	r3, r3, r2
 12155 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1637:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12156              		.loc 1 1637 0
 12157 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12158 06a4 5A1E     		subs	r2, r3, #1
 12159 06a6 07F1C803 		add	r3, r7, #200
 12160 06aa 2A49     		ldr	r1, .L512+12
 12161 06ac 1846     		mov	r0, r3
 12162 06ae FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12163              		.loc 1 1638 0
 12164 06b2 07F1C803 		add	r3, r7, #200
 12165 06b6 1846     		mov	r0, r3
 12166 06b8 FFF7FEFF 		bl	strlen
 12167 06bc 0346     		mov	r3, r0
 12168 06be 87F89336 		strb	r3, [r7, #1683]
1639:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12169              		.loc 1 1639 0
 12170 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12171 06c6 0233     		adds	r3, r3, #2
 12172 06c8 07F58A72 		add	r2, r7, #276
 12173 06cc 0221     		movs	r1, #2
 12174 06ce D154     		strb	r1, [r2, r3]
1640:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12175              		.loc 1 1640 0
 12176 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12177 06d4 0333     		adds	r3, r3, #3
 12178 06d6 07F58A72 		add	r2, r7, #276
 12179 06da 0121     		movs	r1, #1
 12180 06dc D154     		strb	r1, [r2, r3]
1641:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12181              		.loc 1 1641 0
 12182 06de B7F89436 		ldrh	r3, [r7, #1684]
 12183 06e2 0433     		adds	r3, r3, #4
 12184 06e4 1C4A     		ldr	r2, .L512+16
 12185 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12186 06ea 07F58A72 		add	r2, r7, #276
 12187 06ee D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 274


1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12188              		.loc 1 1642 0
 12189 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12190 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12191 06f8 18E0     		b	.L486
 12192              	.L487:
1643:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12193              		.loc 1 1643 0 discriminator 3
 12194 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12195 06fe 5A1D     		adds	r2, r3, #5
 12196 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12197 0704 1A44     		add	r2, r2, r3
 12198 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12199 070a D31A     		subs	r3, r2, r3
 12200 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12201 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12202 0714 8A1A     		subs	r2, r1, r2
 12203 0716 07F1C801 		add	r1, r7, #200
 12204 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12205 071c 07F58A72 		add	r2, r7, #276
 12206 0720 D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12207              		.loc 1 1642 0 discriminator 3
 12208 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12209 0726 013B     		subs	r3, r3, #1
 12210 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12211              	.L486:
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12212              		.loc 1 1642 0 is_stmt 0 discriminator 1
 12213 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12214 0730 002B     		cmp	r3, #0
 12215 0732 E2D1     		bne	.L487
1644:..\src/command_processing.c ****                 
1645:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1646:..\src/command_processing.c ****             
1647:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12216              		.loc 1 1647 0 is_stmt 1
 12217 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12218 0738 3233     		adds	r3, r3, #50
 12219 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1648:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12220              		.loc 1 1648 0
 12221 073e 0023     		movs	r3, #0
 12222 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12223 0744 38E1     		b	.L488
 12224              	.L513:
 12225 0746 00BF     		.align	2
 12226              	.L512:
 12227 0748 00000000 		.word	IMU_connected
 12228 074c 00000000 		.word	MagCal
 12229 0750 00000000 		.word	N_IMU_Connected
 12230 0754 1C0E0000 		.word	.LC126
 12231 0758 00000000 		.word	c_mem
 12232              	.L491:
1649:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12233              		.loc 1 1649 0
 12234 075c B7F89826 		ldrh	r2, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 275


 12235 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12236 0764 D118     		adds	r1, r2, r3
 12237 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12238 076a D54A     		ldr	r2, .L514
 12239 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12240 076e 07F19C00 		add	r0, r7, #156
 12241 0772 0A46     		mov	r2, r1
 12242 0774 D349     		ldr	r1, .L514+4
 12243 0776 FFF7FEFF 		bl	sprintf
1650:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12244              		.loc 1 1650 0
 12245 077a 07F19C03 		add	r3, r7, #156
 12246 077e 1846     		mov	r0, r3
 12247 0780 FFF7FEFF 		bl	strlen
 12248 0784 0346     		mov	r3, r0
 12249 0786 87F88F36 		strb	r3, [r7, #1679]
1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12250              		.loc 1 1652 0
 12251 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12252 078e 1A46     		mov	r2, r3	@ movhi
 12253 0790 9200     		lsls	r2, r2, #2
 12254 0792 1344     		add	r3, r3, r2
 12255 0794 1A46     		mov	r2, r3	@ movhi
 12256 0796 9100     		lsls	r1, r2, #2
 12257 0798 1A46     		mov	r2, r3	@ movhi
 12258 079a 0B46     		mov	r3, r1	@ movhi
 12259 079c 1344     		add	r3, r3, r2
 12260 079e 5B00     		lsls	r3, r3, #1
 12261 07a0 9AB2     		uxth	r2, r3
 12262 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12263 07a6 1344     		add	r3, r3, r2
 12264 07a8 9BB2     		uxth	r3, r3
 12265 07aa 0233     		adds	r3, r3, #2
 12266 07ac 9BB2     		uxth	r3, r3
 12267 07ae 1A46     		mov	r2, r3
 12268 07b0 07F58A73 		add	r3, r7, #276
 12269 07b4 0221     		movs	r1, #2
 12270 07b6 9954     		strb	r1, [r3, r2]
1653:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12271              		.loc 1 1653 0
 12272 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12273 07bc 1A46     		mov	r2, r3	@ movhi
 12274 07be 9200     		lsls	r2, r2, #2
 12275 07c0 1344     		add	r3, r3, r2
 12276 07c2 1A46     		mov	r2, r3	@ movhi
 12277 07c4 9100     		lsls	r1, r2, #2
 12278 07c6 1A46     		mov	r2, r3	@ movhi
 12279 07c8 0B46     		mov	r3, r1	@ movhi
 12280 07ca 1344     		add	r3, r3, r2
 12281 07cc 5B00     		lsls	r3, r3, #1
 12282 07ce 9AB2     		uxth	r2, r3
 12283 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12284 07d4 1344     		add	r3, r3, r2
 12285 07d6 9BB2     		uxth	r3, r3
 12286 07d8 0333     		adds	r3, r3, #3
 12287 07da 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 276


 12288 07dc 1A46     		mov	r2, r3
 12289 07de 07F58A73 		add	r3, r7, #276
 12290 07e2 0521     		movs	r1, #5
 12291 07e4 9954     		strb	r1, [r3, r2]
1654:..\src/command_processing.c ****                 
1655:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12292              		.loc 1 1655 0
 12293 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12294 07ea 1A46     		mov	r2, r3	@ movhi
 12295 07ec 9200     		lsls	r2, r2, #2
 12296 07ee 1344     		add	r3, r3, r2
 12297 07f0 1A46     		mov	r2, r3	@ movhi
 12298 07f2 9100     		lsls	r1, r2, #2
 12299 07f4 1A46     		mov	r2, r3	@ movhi
 12300 07f6 0B46     		mov	r3, r1	@ movhi
 12301 07f8 1344     		add	r3, r3, r2
 12302 07fa 5B00     		lsls	r3, r3, #1
 12303 07fc 9AB2     		uxth	r2, r3
 12304 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12305 0802 1344     		add	r3, r3, r2
 12306 0804 9BB2     		uxth	r3, r3
 12307 0806 0433     		adds	r3, r3, #4
 12308 0808 9BB2     		uxth	r3, r3
 12309 080a 1846     		mov	r0, r3
 12310 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12311 0810 AB4A     		ldr	r2, .L514
 12312 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12313 0814 1946     		mov	r1, r3
 12314 0816 AC4A     		ldr	r2, .L514+8
 12315 0818 0B46     		mov	r3, r1
 12316 081a 9B00     		lsls	r3, r3, #2
 12317 081c 0B44     		add	r3, r3, r1
 12318 081e 1344     		add	r3, r3, r2
 12319 0820 03F20223 		addw	r3, r3, #514
 12320 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12321 0826 07F58A73 		add	r3, r7, #276
 12322 082a 1A54     		strb	r2, [r3, r0]
1656:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12323              		.loc 1 1656 0
 12324 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12325 0830 1A46     		mov	r2, r3	@ movhi
 12326 0832 9200     		lsls	r2, r2, #2
 12327 0834 1344     		add	r3, r3, r2
 12328 0836 1A46     		mov	r2, r3	@ movhi
 12329 0838 9100     		lsls	r1, r2, #2
 12330 083a 1A46     		mov	r2, r3	@ movhi
 12331 083c 0B46     		mov	r3, r1	@ movhi
 12332 083e 1344     		add	r3, r3, r2
 12333 0840 5B00     		lsls	r3, r3, #1
 12334 0842 9AB2     		uxth	r2, r3
 12335 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12336 0848 1344     		add	r3, r3, r2
 12337 084a 9BB2     		uxth	r3, r3
 12338 084c 0533     		adds	r3, r3, #5
 12339 084e 9BB2     		uxth	r3, r3
 12340 0850 1846     		mov	r0, r3
 12341 0852 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 277


 12342 0856 9A4A     		ldr	r2, .L514
 12343 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12344 085a 1946     		mov	r1, r3
 12345 085c 9A4A     		ldr	r2, .L514+8
 12346 085e 0B46     		mov	r3, r1
 12347 0860 9B00     		lsls	r3, r3, #2
 12348 0862 0B44     		add	r3, r3, r1
 12349 0864 1344     		add	r3, r3, r2
 12350 0866 03F20323 		addw	r3, r3, #515
 12351 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12352 086c 07F58A73 		add	r3, r7, #276
 12353 0870 1A54     		strb	r2, [r3, r0]
1657:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12354              		.loc 1 1657 0
 12355 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12356 0876 1A46     		mov	r2, r3	@ movhi
 12357 0878 9200     		lsls	r2, r2, #2
 12358 087a 1344     		add	r3, r3, r2
 12359 087c 1A46     		mov	r2, r3	@ movhi
 12360 087e 9100     		lsls	r1, r2, #2
 12361 0880 1A46     		mov	r2, r3	@ movhi
 12362 0882 0B46     		mov	r3, r1	@ movhi
 12363 0884 1344     		add	r3, r3, r2
 12364 0886 5B00     		lsls	r3, r3, #1
 12365 0888 9AB2     		uxth	r2, r3
 12366 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12367 088e 1344     		add	r3, r3, r2
 12368 0890 9BB2     		uxth	r3, r3
 12369 0892 0633     		adds	r3, r3, #6
 12370 0894 9BB2     		uxth	r3, r3
 12371 0896 1846     		mov	r0, r3
 12372 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12373 089c 884A     		ldr	r2, .L514
 12374 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12375 08a0 1946     		mov	r1, r3
 12376 08a2 894A     		ldr	r2, .L514+8
 12377 08a4 0B46     		mov	r3, r1
 12378 08a6 9B00     		lsls	r3, r3, #2
 12379 08a8 0B44     		add	r3, r3, r1
 12380 08aa 1344     		add	r3, r3, r2
 12381 08ac 03F50173 		add	r3, r3, #516
 12382 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12383 08b2 07F58A73 		add	r3, r7, #276
 12384 08b6 1A54     		strb	r2, [r3, r0]
1658:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12385              		.loc 1 1658 0
 12386 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12387 08bc 1A46     		mov	r2, r3	@ movhi
 12388 08be 9200     		lsls	r2, r2, #2
 12389 08c0 1344     		add	r3, r3, r2
 12390 08c2 1A46     		mov	r2, r3	@ movhi
 12391 08c4 9100     		lsls	r1, r2, #2
 12392 08c6 1A46     		mov	r2, r3	@ movhi
 12393 08c8 0B46     		mov	r3, r1	@ movhi
 12394 08ca 1344     		add	r3, r3, r2
 12395 08cc 5B00     		lsls	r3, r3, #1
 12396 08ce 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 278


 12397 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12398 08d4 1344     		add	r3, r3, r2
 12399 08d6 9BB2     		uxth	r3, r3
 12400 08d8 0733     		adds	r3, r3, #7
 12401 08da 9BB2     		uxth	r3, r3
 12402 08dc 1846     		mov	r0, r3
 12403 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12404 08e2 774A     		ldr	r2, .L514
 12405 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12406 08e6 1946     		mov	r1, r3
 12407 08e8 774A     		ldr	r2, .L514+8
 12408 08ea 0B46     		mov	r3, r1
 12409 08ec 9B00     		lsls	r3, r3, #2
 12410 08ee 0B44     		add	r3, r3, r1
 12411 08f0 1344     		add	r3, r3, r2
 12412 08f2 03F20523 		addw	r3, r3, #517
 12413 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12414 08f8 07F58A73 		add	r3, r7, #276
 12415 08fc 1A54     		strb	r2, [r3, r0]
1659:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12416              		.loc 1 1659 0
 12417 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12418 0902 1A46     		mov	r2, r3	@ movhi
 12419 0904 9200     		lsls	r2, r2, #2
 12420 0906 1344     		add	r3, r3, r2
 12421 0908 1A46     		mov	r2, r3	@ movhi
 12422 090a 9100     		lsls	r1, r2, #2
 12423 090c 1A46     		mov	r2, r3	@ movhi
 12424 090e 0B46     		mov	r3, r1	@ movhi
 12425 0910 1344     		add	r3, r3, r2
 12426 0912 5B00     		lsls	r3, r3, #1
 12427 0914 9AB2     		uxth	r2, r3
 12428 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12429 091a 1344     		add	r3, r3, r2
 12430 091c 9BB2     		uxth	r3, r3
 12431 091e 0833     		adds	r3, r3, #8
 12432 0920 9BB2     		uxth	r3, r3
 12433 0922 1846     		mov	r0, r3
 12434 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12435 0928 654A     		ldr	r2, .L514
 12436 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12437 092c 1946     		mov	r1, r3
 12438 092e 664A     		ldr	r2, .L514+8
 12439 0930 0B46     		mov	r3, r1
 12440 0932 9B00     		lsls	r3, r3, #2
 12441 0934 0B44     		add	r3, r3, r1
 12442 0936 1344     		add	r3, r3, r2
 12443 0938 03F20623 		addw	r3, r3, #518
 12444 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12445 093e 07F58A73 		add	r3, r7, #276
 12446 0942 1A54     		strb	r2, [r3, r0]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12447              		.loc 1 1661 0
 12448 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12449 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12450 094c 2BE0     		b	.L489
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 279


 12451              	.L490:
1662:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12452              		.loc 1 1662 0 discriminator 3
 12453 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12454 0952 1A46     		mov	r2, r3	@ movhi
 12455 0954 9200     		lsls	r2, r2, #2
 12456 0956 1344     		add	r3, r3, r2
 12457 0958 1A46     		mov	r2, r3	@ movhi
 12458 095a 9100     		lsls	r1, r2, #2
 12459 095c 1A46     		mov	r2, r3	@ movhi
 12460 095e 0B46     		mov	r3, r1	@ movhi
 12461 0960 1344     		add	r3, r3, r2
 12462 0962 5B00     		lsls	r3, r3, #1
 12463 0964 9AB2     		uxth	r2, r3
 12464 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12465 096a 1344     		add	r3, r3, r2
 12466 096c 9AB2     		uxth	r2, r3
 12467 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12468 0972 9BB2     		uxth	r3, r3
 12469 0974 1344     		add	r3, r3, r2
 12470 0976 9AB2     		uxth	r2, r3
 12471 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12472 097c D31A     		subs	r3, r2, r3
 12473 097e 9BB2     		uxth	r3, r3
 12474 0980 0933     		adds	r3, r3, #9
 12475 0982 9BB2     		uxth	r3, r3
 12476 0984 1946     		mov	r1, r3
 12477 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12478 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12479 098e D31A     		subs	r3, r2, r3
 12480 0990 07F19C02 		add	r2, r7, #156
 12481 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12482 0996 07F58A73 		add	r3, r7, #276
 12483 099a 5A54     		strb	r2, [r3, r1]
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12484              		.loc 1 1661 0 discriminator 3
 12485 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12486 09a0 013B     		subs	r3, r3, #1
 12487 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12488              	.L489:
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12489              		.loc 1 1661 0 is_stmt 0 discriminator 1
 12490 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12491 09aa 002B     		cmp	r3, #0
 12492 09ac CFD1     		bne	.L490
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12493              		.loc 1 1648 0 is_stmt 1 discriminator 2
 12494 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12495 09b2 0133     		adds	r3, r3, #1
 12496 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12497              	.L488:
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12498              		.loc 1 1648 0 is_stmt 0 discriminator 1
 12499 09b8 444B     		ldr	r3, .L514+12
 12500 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12501 09bc 9BB2     		uxth	r3, r3
 12502 09be B7F8A426 		ldrh	r2, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 280


 12503 09c2 9A42     		cmp	r2, r3
 12504 09c4 FFF4CAAE 		bcc	.L491
1663:..\src/command_processing.c ****             }  
1664:..\src/command_processing.c ****           
1665:..\src/command_processing.c **** 
1666:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1667:..\src/command_processing.c ****             
1668:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12505              		.loc 1 1668 0 is_stmt 1
 12506 09c8 404B     		ldr	r3, .L514+12
 12507 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12508 09cc 9BB2     		uxth	r3, r3
 12509 09ce 1A46     		mov	r2, r3	@ movhi
 12510 09d0 9200     		lsls	r2, r2, #2
 12511 09d2 1344     		add	r3, r3, r2
 12512 09d4 1A46     		mov	r2, r3	@ movhi
 12513 09d6 9100     		lsls	r1, r2, #2
 12514 09d8 1A46     		mov	r2, r3	@ movhi
 12515 09da 0B46     		mov	r3, r1	@ movhi
 12516 09dc 1344     		add	r3, r3, r2
 12517 09de 5B00     		lsls	r3, r3, #1
 12518 09e0 9AB2     		uxth	r2, r3
 12519 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12520 09e6 1344     		add	r3, r3, r2
 12521 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1669:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12522              		.loc 1 1669 0
 12523 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12524 09f0 364A     		ldr	r2, .L514+12
 12525 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12526 09f4 1A44     		add	r2, r2, r3
 12527 09f6 07F18003 		add	r3, r7, #128
 12528 09fa 3549     		ldr	r1, .L514+16
 12529 09fc 1846     		mov	r0, r3
 12530 09fe FFF7FEFF 		bl	sprintf
1670:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12531              		.loc 1 1670 0
 12532 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12533 0a06 0233     		adds	r3, r3, #2
 12534 0a08 07F58A72 		add	r2, r7, #276
 12535 0a0c 0021     		movs	r1, #0
 12536 0a0e D154     		strb	r1, [r2, r3]
1671:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12537              		.loc 1 1671 0
 12538 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12539 0a14 0333     		adds	r3, r3, #3
 12540 0a16 07F58A72 		add	r2, r7, #276
 12541 0a1a 0121     		movs	r1, #1
 12542 0a1c D154     		strb	r1, [r2, r3]
1672:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12543              		.loc 1 1672 0
 12544 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12545 0a22 0433     		adds	r3, r3, #4
 12546 0a24 284A     		ldr	r2, .L514+8
 12547 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 12548 0a2a 07F58A72 		add	r2, r7, #276
 12549 0a2e D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 281


1673:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12550              		.loc 1 1673 0
 12551 0a30 254B     		ldr	r3, .L514+8
 12552 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 12553 0a36 012B     		cmp	r3, #1
 12554 0a38 17D0     		beq	.L493
 12555 0a3a 022B     		cmp	r3, #2
 12556 0a3c 28D0     		beq	.L494
 12557 0a3e 002B     		cmp	r3, #0
 12558 0a40 00D0     		beq	.L495
1674:..\src/command_processing.c ****                 case 0: 
1675:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1676:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1677:..\src/command_processing.c ****                     break;
1678:..\src/command_processing.c ****                 case 1: 
1679:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1680:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1681:..\src/command_processing.c ****                     break;
1682:..\src/command_processing.c ****                 case 2: 
1683:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1684:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1685:..\src/command_processing.c ****                     break;
1686:..\src/command_processing.c ****                 default:
1687:..\src/command_processing.c ****                     break;
 12559              		.loc 1 1687 0
 12560 0a42 38E0     		b	.L496
 12561              	.L495:
1675:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12562              		.loc 1 1675 0
 12563 0a44 07F18003 		add	r3, r7, #128
 12564 0a48 1846     		mov	r0, r3
 12565 0a4a FFF7FEFF 		bl	strlen
 12566 0a4e 0346     		mov	r3, r0
 12567 0a50 1A46     		mov	r2, r3
 12568 0a52 07F18003 		add	r3, r7, #128
 12569 0a56 1344     		add	r3, r3, r2
 12570 0a58 1E4A     		ldr	r2, .L514+20
 12571 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 12572 0a5c 1860     		str	r0, [r3]	@ unaligned
 12573 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12574 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1676:..\src/command_processing.c ****                     break;
 12575              		.loc 1 1676 0
 12576 0a62 1A23     		movs	r3, #26
 12577 0a64 87F89D36 		strb	r3, [r7, #1693]
1677:..\src/command_processing.c ****                 case 1: 
 12578              		.loc 1 1677 0
 12579 0a68 25E0     		b	.L496
 12580              	.L493:
1679:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 12581              		.loc 1 1679 0
 12582 0a6a 07F18003 		add	r3, r7, #128
 12583 0a6e 1846     		mov	r0, r3
 12584 0a70 FFF7FEFF 		bl	strlen
 12585 0a74 0346     		mov	r3, r0
 12586 0a76 1A46     		mov	r2, r3
 12587 0a78 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 282


 12588 0a7c 1344     		add	r3, r3, r2
 12589 0a7e 164A     		ldr	r2, .L514+24
 12590 0a80 1068     		ldr	r0, [r2]	@ unaligned
 12591 0a82 1860     		str	r0, [r3]	@ unaligned
 12592 0a84 1279     		ldrb	r2, [r2, #4]
 12593 0a86 1A71     		strb	r2, [r3, #4]
1680:..\src/command_processing.c ****                     break;
 12594              		.loc 1 1680 0
 12595 0a88 1923     		movs	r3, #25
 12596 0a8a 87F89D36 		strb	r3, [r7, #1693]
1681:..\src/command_processing.c ****                 case 2: 
 12597              		.loc 1 1681 0
 12598 0a8e 12E0     		b	.L496
 12599              	.L494:
1683:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12600              		.loc 1 1683 0
 12601 0a90 07F18003 		add	r3, r7, #128
 12602 0a94 1846     		mov	r0, r3
 12603 0a96 FFF7FEFF 		bl	strlen
 12604 0a9a 0346     		mov	r3, r0
 12605 0a9c 1A46     		mov	r2, r3
 12606 0a9e 07F18003 		add	r3, r7, #128
 12607 0aa2 1344     		add	r3, r3, r2
 12608 0aa4 0D4A     		ldr	r2, .L514+28
 12609 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12610 0aa8 1860     		str	r0, [r3]	@ unaligned
 12611 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12612 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1684:..\src/command_processing.c ****                     break;
 12613              		.loc 1 1684 0
 12614 0aae 1A23     		movs	r3, #26
 12615 0ab0 87F89D36 		strb	r3, [r7, #1693]
1685:..\src/command_processing.c ****                 default:
 12616              		.loc 1 1685 0
 12617 0ab4 00BF     		nop
 12618              	.L496:
1688:..\src/command_processing.c ****             }            
1689:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 12619              		.loc 1 1689 0
 12620 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12621 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12622 0abe 28E0     		b	.L497
 12623              	.L515:
 12624              		.align	2
 12625              	.L514:
 12626 0ac0 00000000 		.word	IMU_connected
 12627 0ac4 2C0E0000 		.word	.LC127
 12628 0ac8 00000000 		.word	c_mem
 12629 0acc 00000000 		.word	N_IMU_Connected
 12630 0ad0 480E0000 		.word	.LC128
 12631 0ad4 600E0000 		.word	.LC129
 12632 0ad8 680E0000 		.word	.LC130
 12633 0adc 700E0000 		.word	.LC131
 12634              	.L498:
1690:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12635              		.loc 1 1690 0 discriminator 3
 12636 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 283


 12637 0ae4 5A1D     		adds	r2, r3, #5
 12638 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12639 0aea 1A44     		add	r2, r2, r3
 12640 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12641 0af0 D31A     		subs	r3, r2, r3
 12642 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12643 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12644 0afa 8A1A     		subs	r2, r1, r2
 12645 0afc 07F18001 		add	r1, r7, #128
 12646 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12647 0b02 07F58A72 		add	r2, r7, #276
 12648 0b06 D154     		strb	r1, [r2, r3]
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12649              		.loc 1 1689 0 discriminator 3
 12650 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12651 0b0c 013B     		subs	r3, r3, #1
 12652 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12653              	.L497:
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12654              		.loc 1 1689 0 is_stmt 0 discriminator 1
 12655 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12656 0b16 002B     		cmp	r3, #0
 12657 0b18 E2D1     		bne	.L498
1691:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1692:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12658              		.loc 1 1692 0 is_stmt 1
 12659 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12660 0b1e 5A1D     		adds	r2, r3, #5
 12661 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12662 0b24 1344     		add	r3, r3, r2
 12663 0b26 07F58A72 		add	r2, r7, #276
 12664 0b2a 0121     		movs	r1, #1
 12665 0b2c D154     		strb	r1, [r2, r3]
1693:..\src/command_processing.c ****                   
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1696:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12666              		.loc 1 1696 0
 12667 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12668 0b32 3233     		adds	r3, r3, #50
 12669 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12670              		.loc 1 1697 0
 12671 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12672 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12673 0b40 1AE0     		b	.L499
 12674              	.L500:
1698:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12675              		.loc 1 1698 0 discriminator 3
 12676 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12677 0b46 0233     		adds	r3, r3, #2
 12678 0b48 9BB2     		uxth	r3, r3
 12679 0b4a 1A46     		mov	r2, r3
 12680 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12681 0b50 1A44     		add	r2, r2, r3
 12682 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12683 0b56 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 284


 12684 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12685 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12686 0b60 8A1A     		subs	r2, r1, r2
 12687 0b62 07F10801 		add	r1, r7, #8
 12688 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12689 0b68 07F58A72 		add	r2, r7, #276
 12690 0b6c D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12691              		.loc 1 1697 0 discriminator 3
 12692 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 12693 0b72 013B     		subs	r3, r3, #1
 12694 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12695              	.L499:
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12696              		.loc 1 1697 0 is_stmt 0 discriminator 1
 12697 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 12698 0b7c 002B     		cmp	r3, #0
 12699 0b7e E0D1     		bne	.L500
1699:..\src/command_processing.c **** 
1700:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12700              		.loc 1 1700 0 is_stmt 1
 12701 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12702 0b84 5C1E     		subs	r4, r3, #1
 12703 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12704 0b8a DBB2     		uxtb	r3, r3
 12705 0b8c 013B     		subs	r3, r3, #1
 12706 0b8e DAB2     		uxtb	r2, r3
 12707 0b90 07F58A73 		add	r3, r7, #276
 12708 0b94 1146     		mov	r1, r2
 12709 0b96 1846     		mov	r0, r3
 12710 0b98 FFF7FEFF 		bl	LCRChecksum
 12711 0b9c 0346     		mov	r3, r0
 12712 0b9e 1A46     		mov	r2, r3
 12713 0ba0 07F58A73 		add	r3, r7, #276
 12714 0ba4 1A55     		strb	r2, [r3, r4]
1701:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12715              		.loc 1 1701 0
 12716 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 12717 0baa 07F58A73 		add	r3, r7, #276
 12718 0bae 1146     		mov	r1, r2
 12719 0bb0 1846     		mov	r0, r3
 12720 0bb2 FFF7FEFF 		bl	commWrite
1702:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12721              		.loc 1 1702 0
 12722 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1703:..\src/command_processing.c ****         break;
 12723              		.loc 1 1703 0
 12724 0bba 09E1     		b	.L501
 12725              	.L508:
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c **** //=========================================================     other_params
1706:..\src/command_processing.c ****         default: 
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12726              		.loc 1 1708 0
 12727 0bbc BB1D     		adds	r3, r7, #6
 12728 0bbe 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 285


 12729 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12730 0bc4 013B     		subs	r3, r3, #1
 12731 0bc6 9A42     		cmp	r2, r3
 12732 0bc8 C0F20181 		blt	.L509
1709:..\src/command_processing.c ****                 break;
1710:..\src/command_processing.c ****             
1711:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12733              		.loc 1 1711 0
 12734 0bcc BB1D     		adds	r3, r7, #6
 12735 0bce 1A88     		ldrh	r2, [r3]
 12736 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12737 0bd4 8149     		ldr	r1, .L516
 12738 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12739 0bd8 0B44     		add	r3, r3, r1
 12740 0bda 9A42     		cmp	r2, r3
 12741 0bdc 05D1     		bne	.L503
1712:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12742              		.loc 1 1712 0
 12743 0bde 804B     		ldr	r3, .L516+4
 12744 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12745 0be2 804B     		ldr	r3, .L516+8
 12746 0be4 83F80122 		strb	r2, [r3, #513]
1713:..\src/command_processing.c ****                 break;
 12747              		.loc 1 1713 0
 12748 0be8 F2E0     		b	.L501
 12749              	.L503:
1714:..\src/command_processing.c ****             }
1715:..\src/command_processing.c ****             
1716:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 12750              		.loc 1 1716 0
 12751 0bea BB1D     		adds	r3, r7, #6
 12752 0bec 1A88     		ldrh	r2, [r3]
 12753 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12754 0bf2 013B     		subs	r3, r3, #1
 12755 0bf4 9A42     		cmp	r2, r3
 12756 0bf6 05D1     		bne	.L504
1717:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12757              		.loc 1 1717 0
 12758 0bf8 794B     		ldr	r3, .L516+4
 12759 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12760 0bfc 794B     		ldr	r3, .L516+8
 12761 0bfe 83F8A020 		strb	r2, [r3, #160]
1718:..\src/command_processing.c ****             }
1719:..\src/command_processing.c ****             else {
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1726:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1727:..\src/command_processing.c ****                 
1728:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1729:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1730:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1731:..\src/command_processing.c ****                 {
1732:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 286


1733:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1734:..\src/command_processing.c ****                 }
1735:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             }
1738:..\src/command_processing.c ****             
1739:..\src/command_processing.c ****         break;
 12762              		.loc 1 1739 0
 12763 0c02 E5E0     		b	.L501
 12764              	.L504:
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12765              		.loc 1 1722 0
 12766 0c04 BB1D     		adds	r3, r7, #6
 12767 0c06 1A88     		ldrh	r2, [r3]
 12768 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12769 0c0c D31A     		subs	r3, r2, r3
 12770 0c0e 764A     		ldr	r2, .L516+12
 12771 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12772 0c12 1946     		mov	r1, r3
 12773 0c14 724B     		ldr	r3, .L516+4
 12774 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12775 0c18 724A     		ldr	r2, .L516+8
 12776 0c1a 0B46     		mov	r3, r1
 12777 0c1c 9B00     		lsls	r3, r3, #2
 12778 0c1e 0B44     		add	r3, r3, r1
 12779 0c20 1344     		add	r3, r3, r2
 12780 0c22 03F20223 		addw	r3, r3, #514
 12781 0c26 0246     		mov	r2, r0
 12782 0c28 1A70     		strb	r2, [r3]
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12783              		.loc 1 1723 0
 12784 0c2a BB1D     		adds	r3, r7, #6
 12785 0c2c 1A88     		ldrh	r2, [r3]
 12786 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12787 0c32 D31A     		subs	r3, r2, r3
 12788 0c34 6C4A     		ldr	r2, .L516+12
 12789 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12790 0c38 1946     		mov	r1, r3
 12791 0c3a 694B     		ldr	r3, .L516+4
 12792 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12793 0c3e 694A     		ldr	r2, .L516+8
 12794 0c40 0B46     		mov	r3, r1
 12795 0c42 9B00     		lsls	r3, r3, #2
 12796 0c44 0B44     		add	r3, r3, r1
 12797 0c46 1344     		add	r3, r3, r2
 12798 0c48 03F20323 		addw	r3, r3, #515
 12799 0c4c 0246     		mov	r2, r0
 12800 0c4e 1A70     		strb	r2, [r3]
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12801              		.loc 1 1724 0
 12802 0c50 BB1D     		adds	r3, r7, #6
 12803 0c52 1A88     		ldrh	r2, [r3]
 12804 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12805 0c58 D31A     		subs	r3, r2, r3
 12806 0c5a 634A     		ldr	r2, .L516+12
 12807 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12808 0c5e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 287


 12809 0c60 5F4B     		ldr	r3, .L516+4
 12810 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12811 0c64 5F4A     		ldr	r2, .L516+8
 12812 0c66 0B46     		mov	r3, r1
 12813 0c68 9B00     		lsls	r3, r3, #2
 12814 0c6a 0B44     		add	r3, r3, r1
 12815 0c6c 1344     		add	r3, r3, r2
 12816 0c6e 03F50173 		add	r3, r3, #516
 12817 0c72 0246     		mov	r2, r0
 12818 0c74 1A70     		strb	r2, [r3]
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12819              		.loc 1 1725 0
 12820 0c76 BB1D     		adds	r3, r7, #6
 12821 0c78 1A88     		ldrh	r2, [r3]
 12822 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12823 0c7e D31A     		subs	r3, r2, r3
 12824 0c80 594A     		ldr	r2, .L516+12
 12825 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12826 0c84 1946     		mov	r1, r3
 12827 0c86 564B     		ldr	r3, .L516+4
 12828 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12829 0c8a 564A     		ldr	r2, .L516+8
 12830 0c8c 0B46     		mov	r3, r1
 12831 0c8e 9B00     		lsls	r3, r3, #2
 12832 0c90 0B44     		add	r3, r3, r1
 12833 0c92 1344     		add	r3, r3, r2
 12834 0c94 03F20523 		addw	r3, r3, #517
 12835 0c98 0246     		mov	r2, r0
 12836 0c9a 1A70     		strb	r2, [r3]
1726:..\src/command_processing.c ****                 
 12837              		.loc 1 1726 0
 12838 0c9c BB1D     		adds	r3, r7, #6
 12839 0c9e 1A88     		ldrh	r2, [r3]
 12840 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12841 0ca4 D31A     		subs	r3, r2, r3
 12842 0ca6 504A     		ldr	r2, .L516+12
 12843 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12844 0caa 1946     		mov	r1, r3
 12845 0cac 4C4B     		ldr	r3, .L516+4
 12846 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12847 0cb0 4C4A     		ldr	r2, .L516+8
 12848 0cb2 0B46     		mov	r3, r1
 12849 0cb4 9B00     		lsls	r3, r3, #2
 12850 0cb6 0B44     		add	r3, r3, r1
 12851 0cb8 1344     		add	r3, r3, r2
 12852 0cba 03F20623 		addw	r3, r3, #518
 12853 0cbe 0246     		mov	r2, r0
 12854 0cc0 1A70     		strb	r2, [r3]
1729:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12855              		.loc 1 1729 0
 12856 0cc2 4A4B     		ldr	r3, .L516+16
 12857 0cc4 0122     		movs	r2, #1
 12858 0cc6 1A60     		str	r2, [r3]
1730:..\src/command_processing.c ****                 {
 12859              		.loc 1 1730 0
 12860 0cc8 0023     		movs	r3, #0
 12861 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 288


 12862 0cce 71E0     		b	.L506
 12863              	.L507:
1732:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12864              		.loc 1 1732 0 discriminator 3
 12865 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12866 0cd4 444A     		ldr	r2, .L516+12
 12867 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12868 0cd8 1C46     		mov	r4, r3
 12869 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12870 0cde 424A     		ldr	r2, .L516+12
 12871 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12872 0ce2 1946     		mov	r1, r3
 12873 0ce4 3F4A     		ldr	r2, .L516+8
 12874 0ce6 0B46     		mov	r3, r1
 12875 0ce8 9B00     		lsls	r3, r3, #2
 12876 0cea 0B44     		add	r3, r3, r1
 12877 0cec 1344     		add	r3, r3, r2
 12878 0cee 03F20223 		addw	r3, r3, #514
 12879 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12880 0cf4 1A46     		mov	r2, r3
 12881 0cf6 1346     		mov	r3, r2
 12882 0cf8 5B00     		lsls	r3, r3, #1
 12883 0cfa 1344     		add	r3, r3, r2
 12884 0cfc 5B00     		lsls	r3, r3, #1
 12885 0cfe 5A1C     		adds	r2, r3, #1
 12886 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12887 0d04 3849     		ldr	r1, .L516+12
 12888 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12889 0d08 1846     		mov	r0, r3
 12890 0d0a 3649     		ldr	r1, .L516+8
 12891 0d0c 0346     		mov	r3, r0
 12892 0d0e 9B00     		lsls	r3, r3, #2
 12893 0d10 0344     		add	r3, r3, r0
 12894 0d12 0B44     		add	r3, r3, r1
 12895 0d14 03F20323 		addw	r3, r3, #515
 12896 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12897 0d1a 1946     		mov	r1, r3
 12898 0d1c 0B46     		mov	r3, r1
 12899 0d1e 5B00     		lsls	r3, r3, #1
 12900 0d20 0B44     		add	r3, r3, r1
 12901 0d22 5B00     		lsls	r3, r3, #1
 12902 0d24 1A44     		add	r2, r2, r3
 12903 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12904 0d2a 2F49     		ldr	r1, .L516+12
 12905 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12906 0d2e 1846     		mov	r0, r3
 12907 0d30 2C49     		ldr	r1, .L516+8
 12908 0d32 0346     		mov	r3, r0
 12909 0d34 9B00     		lsls	r3, r3, #2
 12910 0d36 0344     		add	r3, r3, r0
 12911 0d38 0B44     		add	r3, r3, r1
 12912 0d3a 03F50173 		add	r3, r3, #516
 12913 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12914 0d40 1946     		mov	r1, r3
 12915 0d42 0B46     		mov	r3, r1
 12916 0d44 5B00     		lsls	r3, r3, #1
 12917 0d46 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 289


 12918 0d48 5B00     		lsls	r3, r3, #1
 12919 0d4a 1A44     		add	r2, r2, r3
 12920 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12921 0d50 2549     		ldr	r1, .L516+12
 12922 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12923 0d54 1846     		mov	r0, r3
 12924 0d56 2349     		ldr	r1, .L516+8
 12925 0d58 0346     		mov	r3, r0
 12926 0d5a 9B00     		lsls	r3, r3, #2
 12927 0d5c 0344     		add	r3, r3, r0
 12928 0d5e 0B44     		add	r3, r3, r1
 12929 0d60 03F20523 		addw	r3, r3, #517
 12930 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12931 0d66 1B01     		lsls	r3, r3, #4
 12932 0d68 1A44     		add	r2, r2, r3
 12933 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 12934 0d6e 1E49     		ldr	r1, .L516+12
 12935 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12936 0d72 1846     		mov	r0, r3
 12937 0d74 1B49     		ldr	r1, .L516+8
 12938 0d76 0346     		mov	r3, r0
 12939 0d78 9B00     		lsls	r3, r3, #2
 12940 0d7a 0344     		add	r3, r3, r0
 12941 0d7c 0B44     		add	r3, r3, r1
 12942 0d7e 03F20623 		addw	r3, r3, #518
 12943 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12944 0d84 5B00     		lsls	r3, r3, #1
 12945 0d86 1344     		add	r3, r3, r2
 12946 0d88 0133     		adds	r3, r3, #1
 12947 0d8a 194A     		ldr	r2, .L516+20
 12948 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1733:..\src/command_processing.c ****                 }
 12949              		.loc 1 1733 0 discriminator 3
 12950 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12951 0d94 144A     		ldr	r2, .L516+12
 12952 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12953 0d98 1A46     		mov	r2, r3
 12954 0d9a 154B     		ldr	r3, .L516+20
 12955 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12956 0da0 124B     		ldr	r3, .L516+16
 12957 0da2 1B68     		ldr	r3, [r3]
 12958 0da4 1344     		add	r3, r3, r2
 12959 0da6 114A     		ldr	r2, .L516+16
 12960 0da8 1360     		str	r3, [r2]
1730:..\src/command_processing.c ****                 {
 12961              		.loc 1 1730 0 discriminator 3
 12962 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 12963 0dae 0133     		adds	r3, r3, #1
 12964 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12965              	.L506:
1730:..\src/command_processing.c ****                 {
 12966              		.loc 1 1730 0 is_stmt 0 discriminator 1
 12967 0db4 094B     		ldr	r3, .L516
 12968 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12969 0db8 9BB2     		uxth	r3, r3
 12970 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 12971 0dbe 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 290


 12972 0dc0 86D3     		bcc	.L507
1735:..\src/command_processing.c ****             
 12973              		.loc 1 1735 0 is_stmt 1
 12974 0dc2 0A4B     		ldr	r3, .L516+16
 12975 0dc4 1B68     		ldr	r3, [r3]
 12976 0dc6 0133     		adds	r3, r3, #1
 12977 0dc8 084A     		ldr	r2, .L516+16
 12978 0dca 1360     		str	r3, [r2]
 12979              		.loc 1 1739 0
 12980 0dcc 00E0     		b	.L501
 12981              	.L509:
1709:..\src/command_processing.c ****             
 12982              		.loc 1 1709 0
 12983 0dce 00BF     		nop
 12984              	.L501:
1740:..\src/command_processing.c ****     }
1741:..\src/command_processing.c **** }
 12985              		.loc 1 1741 0 discriminator 1
 12986 0dd0 00BF     		nop
 12987 0dd2 07F5D567 		add	r7, r7, #1704
 12988              		.cfi_def_cfa_offset 16
 12989 0dd6 BD46     		mov	sp, r7
 12990              		.cfi_def_cfa_register 13
 12991              		@ sp needed
 12992 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 12993              	.L517:
 12994 0dda 00BF     		.align	2
 12995              	.L516:
 12996 0ddc 00000000 		.word	N_IMU_Connected
 12997 0de0 00000000 		.word	g_rx
 12998 0de4 00000000 		.word	g_mem
 12999 0de8 00000000 		.word	IMU_connected
 13000 0dec 00000000 		.word	imus_data_size
 13001 0df0 00000000 		.word	single_imu_size
 13002              		.cfi_endproc
 13003              	.LFE70:
 13004              		.size	get_IMU_param_list, .-get_IMU_param_list
 13005              		.section	.text.setZeros,"ax",%progbits
 13006              		.align	2
 13007              		.global	setZeros
 13008              		.thumb
 13009              		.thumb_func
 13010              		.type	setZeros, %function
 13011              	setZeros:
 13012              	.LFB71:
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c **** //==============================================================================
1744:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1745:..\src/command_processing.c **** //==============================================================================
1746:..\src/command_processing.c **** 
1747:..\src/command_processing.c **** void setZeros()
1748:..\src/command_processing.c **** {
 13013              		.loc 1 1748 0
 13014              		.cfi_startproc
 13015              		@ args = 0, pretend = 0, frame = 8
 13016              		@ frame_needed = 1, uses_anonymous_args = 0
 13017 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 291


 13018              		.cfi_def_cfa_offset 12
 13019              		.cfi_offset 4, -12
 13020              		.cfi_offset 7, -8
 13021              		.cfi_offset 14, -4
 13022 0002 83B0     		sub	sp, sp, #12
 13023              		.cfi_def_cfa_offset 24
 13024 0004 00AF     		add	r7, sp, #0
 13025              		.cfi_def_cfa_register 7
1749:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1750:..\src/command_processing.c ****     
1751:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13026              		.loc 1 1751 0
 13027 0006 0023     		movs	r3, #0
 13028 0008 BB71     		strb	r3, [r7, #6]
 13029 000a 26E0     		b	.L519
 13030              	.L522:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13031              		.loc 1 1752 0
 13032 000c 0023     		movs	r3, #0
 13033 000e FB71     		strb	r3, [r7, #7]
 13034 0010 1DE0     		b	.L520
 13035              	.L521:
1753:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13036              		.loc 1 1753 0 discriminator 3
 13037 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13038 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13039 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13040 0018 1648     		ldr	r0, .L523
 13041 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13042 001e 1C46     		mov	r4, r3
 13043 0020 1548     		ldr	r0, .L523+4
 13044 0022 1346     		mov	r3, r2
 13045 0024 5B00     		lsls	r3, r3, #1
 13046 0026 1344     		add	r3, r3, r2
 13047 0028 9B00     		lsls	r3, r3, #2
 13048 002a 0B44     		add	r3, r3, r1
 13049 002c 6633     		adds	r3, r3, #102
 13050 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1754:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13051              		.loc 1 1754 0 discriminator 3
 13052 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13053 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13054 0036 1149     		ldr	r1, .L523+8
 13055 0038 3420     		movs	r0, #52
 13056 003a 00FB02F2 		mul	r2, r0, r2
 13057 003e 0A44     		add	r2, r2, r1
 13058 0040 1344     		add	r3, r3, r2
 13059 0042 1833     		adds	r3, r3, #24
 13060 0044 0022     		movs	r2, #0
 13061 0046 1A70     		strb	r2, [r3]
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13062              		.loc 1 1752 0 discriminator 3
 13063 0048 FB79     		ldrb	r3, [r7, #7]
 13064 004a 0133     		adds	r3, r3, #1
 13065 004c FB71     		strb	r3, [r7, #7]
 13066              	.L520:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 292


 13067              		.loc 1 1752 0 is_stmt 0 discriminator 1
 13068 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13069 0050 022B     		cmp	r3, #2
 13070 0052 DED9     		bls	.L521
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13071              		.loc 1 1751 0 is_stmt 1 discriminator 2
 13072 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13073 0056 0133     		adds	r3, r3, #1
 13074 0058 BB71     		strb	r3, [r7, #6]
 13075              	.L519:
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13076              		.loc 1 1751 0 is_stmt 0 discriminator 1
 13077 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13078 005c 012B     		cmp	r3, #1
 13079 005e D5D9     		bls	.L522
1755:..\src/command_processing.c ****         }
1756:..\src/command_processing.c ****     }
1757:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13080              		.loc 1 1757 0 is_stmt 1
 13081 0060 074B     		ldr	r3, .L523+12
 13082 0062 0122     		movs	r2, #1
 13083 0064 1A70     		strb	r2, [r3]
1758:..\src/command_processing.c **** 
1759:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13084              		.loc 1 1759 0
 13085 0066 0120     		movs	r0, #1
 13086 0068 FFF7FEFF 		bl	sendAcknowledgment
1760:..\src/command_processing.c **** }
 13087              		.loc 1 1760 0
 13088 006c 00BF     		nop
 13089 006e 0C37     		adds	r7, r7, #12
 13090              		.cfi_def_cfa_offset 12
 13091 0070 BD46     		mov	sp, r7
 13092              		.cfi_def_cfa_register 13
 13093              		@ sp needed
 13094 0072 90BD     		pop	{r4, r7, pc}
 13095              	.L524:
 13096              		.align	2
 13097              	.L523:
 13098 0074 00000000 		.word	data_encoder_raw
 13099 0078 00000000 		.word	g_mem
 13100 007c 00000000 		.word	g_meas
 13101 0080 00000000 		.word	reset_last_value_flag
 13102              		.cfi_endproc
 13103              	.LFE71:
 13104              		.size	setZeros, .-setZeros
 13105              		.section	.rodata
 13106              		.align	2
 13107              	.LC132:
 13108 0ea8 0D0A00   		.ascii	"\015\012\000"
 13109 0eab 00       		.align	2
 13110              	.LC133:
 13111 0eac 4669726D 		.ascii	"Firmware version: \000"
 13111      77617265 
 13111      20766572 
 13111      73696F6E 
 13111      3A2000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 293


 13112 0ebf 00       		.align	2
 13113              	.LC134:
 13114 0ec0 47656E65 		.ascii	"Generic firmware v. 1.8 (PSoC5)\000"
 13114      72696320 
 13114      6669726D 
 13114      77617265 
 13114      20762E20 
 13115              		.align	2
 13116              	.LC135:
 13117 0ee0 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13117      0A00
 13118 0ee6 0000     		.align	2
 13119              	.LC136:
 13120 0ee8 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13120      43452049 
 13120      4E464F0D 
 13120      0A00
 13121 0ef6 0000     		.align	2
 13122              	.LC137:
 13123 0ef8 49443A20 		.ascii	"ID: %d\015\012\000"
 13123      25640D0A 
 13123      00
 13124 0f01 000000   		.align	2
 13125              	.LC138:
 13126 0f04 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13126      63653A20 
 13126      534F4654 
 13126      48414E44 
 13126      2050524F 
 13127 0f1b 00       		.align	2
 13128              	.LC139:
 13129 0f1c 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13129      63653A20 
 13129      47454E45 
 13129      52494320 
 13129      32204D4F 
 13130 0f37 00       		.align	2
 13131              	.LC140:
 13132 0f38 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13132      63653A20 
 13132      41495220 
 13132      4348414D 
 13132      42455253 
 13133 0f5f 00       		.align	2
 13134              	.LC141:
 13135 0f60 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13135      20736964 
 13135      653A2052 
 13135      49474854 
 13135      0D0A00
 13136 0f73 00       		.align	2
 13137              	.LC142:
 13138 0f74 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13138      20736964 
 13138      653A204C 
 13138      4546540D 
 13138      0A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 294


 13139 0f86 0000     		.align	2
 13140              	.LC143:
 13141 0f88 55736572 		.ascii	"User: MARIA\015\012\000"
 13141      3A204D41 
 13141      5249410D 
 13141      0A00
 13142 0f96 0000     		.align	2
 13143              	.LC144:
 13144 0f98 55736572 		.ascii	"User: ROZA\015\012\000"
 13144      3A20524F 
 13144      5A410D0A 
 13144      00
 13145 0fa5 000000   		.align	2
 13146              	.LC145:
 13147 0fa8 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13147      3A204745 
 13147      4E455249 
 13147      43205553 
 13147      45520D0A 
 13148 0fbd 000000   		.align	2
 13149              	.LC146:
 13150 0fc0 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13150      52202564 
 13150      20494E46 
 13150      4F0D0A00 
 13151              		.align	2
 13152              	.LC147:
 13153 0fd0 4D6F746F 		.ascii	"Motor reference\000"
 13153      72207265 
 13153      66657265 
 13153      6E636500 
 13154              		.align	2
 13155              	.LC148:
 13156 0fe0 202D2043 		.ascii	" - Currents: \000"
 13156      75727265 
 13156      6E74733A 
 13156      2000
 13157 0fee 0000     		.align	2
 13158              	.LC149:
 13159 0ff0 202D2050 		.ascii	" - Pwm: \000"
 13159      776D3A20 
 13159      00
 13160 0ff9 000000   		.align	2
 13161              	.LC150:
 13162 0ffc 202D2050 		.ascii	" - Position: \000"
 13162      6F736974 
 13162      696F6E3A 
 13162      2000
 13163 100a 0000     		.align	2
 13164              	.LC151:
 13165 100c 25642000 		.ascii	"%d \000"
 13166              		.align	2
 13167              	.LC152:
 13168 1010 4D6F746F 		.ascii	"Motor enabled: \000"
 13168      7220656E 
 13168      61626C65 
 13168      643A2000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 295


 13169              		.align	2
 13170              	.LC153:
 13171 1020 5945530D 		.ascii	"YES\015\012\000"
 13171      0A00
 13172 1026 0000     		.align	2
 13173              	.LC154:
 13174 1028 4E4F0D0A 		.ascii	"NO\015\012\000"
 13174      00
 13175 102d 000000   		.align	2
 13176              	.LC155:
 13177 1030 50574D20 		.ascii	"PWM rescaling activation: \000"
 13177      72657363 
 13177      616C696E 
 13177      67206163 
 13177      74697661 
 13178 104b 00       		.align	2
 13179              	.LC156:
 13180 104c 5945530A 		.ascii	"YES\012\000"
 13180      00
 13181 1051 000000   		.align	2
 13182              	.LC157:
 13183 1054 4E4F0A00 		.ascii	"NO\012\000"
 13184              		.align	2
 13185              	.LC158:
 13186 1058 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13186      4C696D69 
 13186      743A2025 
 13186      640D0A00 
 13187              		.align	2
 13188              	.LC159:
 13189 1068 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13189      41535552 
 13189      454D454E 
 13189      54532049 
 13189      4E464F0D 
 13190 107e 0000     		.align	2
 13191              	.LC160:
 13192 1080 53656E73 		.ascii	"Sensor value: \000"
 13192      6F722076 
 13192      616C7565 
 13192      3A2000
 13193 108f 00       		.align	2
 13194              	.LC161:
 13195 1090 256400   		.ascii	"%d\000"
 13196 1093 00       		.align	2
 13197              	.LC162:
 13198 1094 2C2000   		.ascii	", \000"
 13199 1097 00       		.align	2
 13200              	.LC163:
 13201 1098 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13201      65727920 
 13201      25642056 
 13201      6F6C7461 
 13201      67652028 
 13202 10b5 000000   		.align	2
 13203              	.LC164:
 13204 10b8 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 296


 13204      20636861 
 13204      72676520 
 13204      706F7765 
 13204      72207465 
 13205 10df 00       		.align	2
 13206              	.LC165:
 13207 10e0 43757272 		.ascii	"Current %d (mA): %ld\000"
 13207      656E7420 
 13207      25642028 
 13207      6D41293A 
 13207      20256C64 
 13208 10f5 000000   		.align	2
 13209              	.LC166:
 13210 10f8 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13210      20477261 
 13210      73702048 
 13210      6F6C6420 
 13210      43757272 
 13211 111d 000000   		.align	2
 13212              	.LC167:
 13213 1120 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13213      544F5220 
 13213      25642043 
 13213      4F4E4649 
 13213      47555241 
 13214 113b 00       		.align	2
 13215              	.LC168:
 13216 113c 50494420 		.ascii	"PID Controller: \000"
 13216      436F6E74 
 13216      726F6C6C 
 13216      65723A20 
 13216      00
 13217              		.global	__aeabi_i2d
 13218              		.global	__aeabi_ddiv
 13219 114d 000000   		.align	2
 13220              	.LC169:
 13221 1150 50202D3E 		.ascii	"P -> %f  \000"
 13221      20256620 
 13221      2000
 13222 115a 0000     		.align	2
 13223              	.LC170:
 13224 115c 49202D3E 		.ascii	"I -> %f  \000"
 13224      20256620 
 13224      2000
 13225 1166 0000     		.align	2
 13226              	.LC171:
 13227 1168 44202D3E 		.ascii	"D -> %f\015\012\000"
 13227      2025660D 
 13227      0A00
 13228 1172 0000     		.align	2
 13229              	.LC172:
 13230 1174 43757272 		.ascii	"Current PID Controller: \000"
 13230      656E7420 
 13230      50494420 
 13230      436F6E74 
 13230      726F6C6C 
 13231 118d 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 297


 13232              	.LC173:
 13233 1190 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13233      74757020 
 13233      61637469 
 13233      76617469 
 13233      6F6E3A20 
 13234 11aa 0000     		.align	2
 13235              	.LC174:
 13236 11ac 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13236      74757020 
 13236      61637469 
 13236      76617469 
 13236      6F6E3A20 
 13237 11c5 000000   		.align	2
 13238              	.LC175:
 13239 11c8 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13239      74206D6F 
 13239      64653A20 
 13239      5553420D 
 13239      0A00
 13240 11da 0000     		.align	2
 13241              	.LC176:
 13242 11dc 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13242      74206D6F 
 13242      64653A20 
 13242      48616E64 
 13242      6C650D0A 
 13243 11f1 000000   		.align	2
 13244              	.LC177:
 13245 11f4 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13245      74206D6F 
 13245      64653A20 
 13245      454D4720 
 13245      70726F70 
 13246 1213 00       		.align	2
 13247              	.LC178:
 13248 1214 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13248      74206D6F 
 13248      64653A20 
 13248      454D4720 
 13248      696E7465 
 13249 122f 00       		.align	2
 13250              	.LC179:
 13251 1230 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13251      74206D6F 
 13251      64653A20 
 13251      454D4720 
 13251      46434653 
 13252 1247 00       		.align	2
 13253              	.LC180:
 13254 1248 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13254      74206D6F 
 13254      64653A20 
 13254      454D4720 
 13254      46434653 
 13255 1263 00       		.align	2
 13256              	.LC181:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 298


 13257 1264 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13257      74206D6F 
 13257      64653A20 
 13257      454D4720 
 13257      70726F70 
 13258 1292 00       		.ascii	"\000"
 13259 1293 00       		.align	2
 13260              	.LC182:
 13261 1294 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13261      726F6C20 
 13261      6D6F6465 
 13261      3A20506F 
 13261      73697469 
 13262 12ad 000000   		.align	2
 13263              	.LC183:
 13264 12b0 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13264      726F6C20 
 13264      6D6F6465 
 13264      3A205057 
 13264      4D0D0A00 
 13265              		.align	2
 13266              	.LC184:
 13267 12c4 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13267      726F6C20 
 13267      6D6F6465 
 13267      3A204375 
 13267      7272656E 
 13268              		.align	2
 13269              	.LC185:
 13270 12dc 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13270      726F6C20 
 13270      6D6F6465 
 13270      3A20506F 
 13270      73697469 
 13271 1301 000000   		.align	2
 13272              	.LC186:
 13273 1304 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13273      6C757465 
 13273      20656E63 
 13273      6F646572 
 13273      20706F73 
 13274 1325 000000   		.align	2
 13275              	.LC187:
 13276 1328 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13276      6C757465 
 13276      20656E63 
 13276      6F646572 
 13276      20706F73 
 13277              		.align	2
 13278              	.LC188:
 13279 1348 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13279      722D4861 
 13279      6E646C65 
 13279      20526174 
 13279      696F3A20 
 13280 1361 000000   		.align	2
 13281              	.LC189:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 299


 13282 1364 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13282      64657220 
 13282      696E6469 
 13282      63657320 
 13282      75736564 
 13283 138d 000000   		.align	2
 13284              	.LC190:
 13285 1390 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13285      74204765 
 13285      61723A20 
 13285      25642074 
 13285      65657468 
 13286 13a7 00       		.align	2
 13287              	.LC191:
 13288 13a8 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13288      6E642047 
 13288      6561723A 
 13288      20256420 
 13288      74656574 
 13289              		.align	2
 13290              	.LC192:
 13291 13c0 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13291      20696E76 
 13291      61726961 
 13291      6E743A20 
 13291      25640D0A 
 13292 13d5 000000   		.align	2
 13293              	.LC193:
 13294 13d8 53656E73 		.ascii	"Sensor resolution: \000"
 13294      6F722072 
 13294      65736F6C 
 13294      7574696F 
 13294      6E3A2000 
 13295              		.align	2
 13296              	.LC194:
 13297 13ec 4D656173 		.ascii	"Measurement Offset: \000"
 13297      7572656D 
 13297      656E7420 
 13297      4F666673 
 13297      65743A20 
 13298 1401 000000   		.align	2
 13299              	.LC195:
 13300 1404 256C6400 		.ascii	"%ld\000"
 13301              		.align	2
 13302              	.LC196:
 13303 1408 4D656173 		.ascii	"Measurement Multiplier: \000"
 13303      7572656D 
 13303      656E7420 
 13303      4D756C74 
 13303      69706C69 
 13304              		.global	__aeabi_f2d
 13305 1421 000000   		.align	2
 13306              	.LC197:
 13307 1424 256600   		.ascii	"%f\000"
 13308 1427 00       		.align	2
 13309              	.LC198:
 13310 1428 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 300


 13310      656E7420 
 13310      6C6F6F6B 
 13310      75702074 
 13310      61626C65 
 13311 1456 00       		.ascii	"\000"
 13312 1457 00       		.align	2
 13313              	.LC199:
 13314 1458 506F7369 		.ascii	"Position limit active: %d\000"
 13314      74696F6E 
 13314      206C696D 
 13314      69742061 
 13314      63746976 
 13315 1472 0000     		.align	2
 13316              	.LC200:
 13317 1474 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13317      74696F6E 
 13317      206C696D 
 13317      6974206D 
 13317      6F746F72 
 13318 1497 00       		.align	2
 13319              	.LC201:
 13320 1498 73757020 		.ascii	"sup -> %ld\015\012\000"
 13320      2D3E2025 
 13320      6C640D0A 
 13320      00
 13321 14a5 000000   		.align	2
 13322              	.LC202:
 13323 14a8 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13323      73746570 
 13323      20706F73 
 13323      20616E64 
 13323      206E6567 
 13324              		.align	2
 13325              	.LC203:
 13326 14c4 43757272 		.ascii	"Current limit: %d\015\012\000"
 13326      656E7420 
 13326      6C696D69 
 13326      743A2025 
 13326      640D0A00 
 13327              		.align	2
 13328              	.LC204:
 13329 14d8 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13329      7220626F 
 13329      61726420 
 13329      6173736F 
 13329      63696174 
 13330 1502 0000     		.align	2
 13331              	.LC205:
 13332 1504 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 13332      65722074 
 13332      7970653A 
 13332      204D4333 
 13332      33383837 
 13333 1526 0000     		.align	2
 13334              	.LC206:
 13335 1528 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13335      65722074 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 301


 13335      7970653A 
 13335      20564E48 
 13335      35303139 
 13336              		.align	2
 13337              	.LC207:
 13338 154c 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13338      72617465 
 13338      206C696D 
 13338      69746572 
 13338      2076616C 
 13339 1569 000000   		.align	2
 13340              	.LC208:
 13341 156c 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13341      72657665 
 13341      72736962 
 13341      6C65206D 
 13341      6F746F72 
 13342              		.align	2
 13343              	.LC209:
 13344 1588 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13344      72657665 
 13344      72736962 
 13344      6C65206D 
 13344      6F746F72 
 13345 15a3 00       		.align	2
 13346              	.LC210:
 13347 15a4 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13347      434F4E46 
 13347      49475552 
 13347      4154494F 
 13347      4E0D0A00 
 13348              		.align	2
 13349              	.LC211:
 13350 15b8 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13350      74687265 
 13350      73686F6C 
 13350      6473205B 
 13350      30202D20 
 13351 15da 0000     		.align	2
 13352              	.LC212:
 13353 15dc 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13353      6D617820 
 13353      76616C75 
 13353      6573205B 
 13353      30202D20 
 13354              		.align	2
 13355              	.LC213:
 13356 1600 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13356      696E7665 
 13356      7273696F 
 13356      6E3A2059 
 13356      45530D0A 
 13357 1615 000000   		.align	2
 13358              	.LC214:
 13359 1618 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13359      696E7665 
 13359      7273696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 302


 13359      6E3A204E 
 13359      4F0D0A00 
 13360              		.align	2
 13361              	.LC215:
 13362 162c 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13362      62726174 
 13362      696F6E20 
 13362      656E6162 
 13362      6C65643A 
 13363 1647 00       		.align	2
 13364              	.LC216:
 13365 1648 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13365      62726174 
 13365      696F6E20 
 13365      656E6162 
 13365      6C65643A 
 13366 1662 0000     		.align	2
 13367              	.LC217:
 13368 1664 454D4720 		.ascii	"EMG max speed: %d\000"
 13368      6D617820 
 13368      73706565 
 13368      643A2025 
 13368      6400
 13369 1676 0000     		.align	2
 13370              	.LC218:
 13371 1678 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13371      74696F6E 
 13371      616C2041 
 13371      44432073 
 13371      656E736F 
 13372              		.align	2
 13373              	.LC219:
 13374 1698 41444320 		.ascii	"ADC %d -> %d\000"
 13374      2564202D 
 13374      3E202564 
 13374      00
 13375 16a5 000000   		.align	2
 13376              	.LC220:
 13377 16a8 454D4720 		.ascii	"EMG input %d -> %d\000"
 13377      696E7075 
 13377      74202564 
 13377      202D3E20 
 13377      256400
 13378 16bb 00       		.align	2
 13379              	.LC221:
 13380 16bc 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13380      2074696D 
 13380      65206465 
 13380      6C617920 
 13380      286D7329 
 13381 16d5 000000   		.align	2
 13382              	.LC222:
 13383 16d8 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13383      2076656C 
 13383      6F636974 
 13383      7920636C 
 13383      6F737572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 303


 13384 16fe 0000     		.align	2
 13385              	.LC223:
 13386 1700 52657374 		.ascii	"Rest position: %d\000"
 13386      20706F73 
 13386      6974696F 
 13386      6E3A2025 
 13386      6400
 13387 1712 0000     		.align	2
 13388              	.LC224:
 13389 1714 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13389      436F6E6E 
 13389      65637465 
 13389      643A2025 
 13389      640D0A00 
 13390              		.align	2
 13391              	.LC225:
 13392 1728 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13392      20434F4E 
 13392      46494755 
 13392      52415449 
 13392      4F4E0D0A 
 13393 173d 000000   		.align	2
 13394              	.LC226:
 13395 1740 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13395      2564200D 
 13395      0A094944 
 13395      3A202564 
 13395      0D0A00
 13396 1753 00       		.align	2
 13397              	.LC227:
 13398 1754 09416363 		.ascii	"\011Accelerometers: \000"
 13398      656C6572 
 13398      6F6D6574 
 13398      6572733A 
 13398      2000
 13399 1766 0000     		.align	2
 13400              	.LC228:
 13401 1768 09477972 		.ascii	"\011Gyroscopes: \000"
 13401      6F73636F 
 13401      7065733A 
 13401      2000
 13402 1776 0000     		.align	2
 13403              	.LC229:
 13404 1778 094D6167 		.ascii	"\011Magnetometers: \000"
 13404      6E65746F 
 13404      6D657465 
 13404      72733A20 
 13404      00
 13405 1789 000000   		.align	2
 13406              	.LC230:
 13407 178c 09517561 		.ascii	"\011Quaternion: \000"
 13407      7465726E 
 13407      696F6E3A 
 13407      2000
 13408 179a 0000     		.align	2
 13409              	.LC231:
 13410 179c 0954656D 		.ascii	"\011Temperature: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 304


 13410      70657261 
 13410      74757265 
 13410      3A2000
 13411 17ab 00       		.align	2
 13412              	.LC232:
 13413 17ac 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 13413      44455220 
 13413      434F4E46 
 13413      49475552 
 13413      4154494F 
 13414              		.align	2
 13415              	.LC233:
 13416 17c4 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 13416      64657220 
 13416      436F6E6E 
 13416      65637465 
 13416      64204C69 
 13417 17e2 0000     		.align	2
 13418              	.LC234:
 13419 17e4 4C454654 		.ascii	"LEFT\000"
 13419      00
 13420 17e9 000000   		.align	2
 13421              	.LC235:
 13422 17ec 52494748 		.ascii	"RIGHT\000"
 13422      5400
 13423 17f2 0000     		.align	2
 13424              	.LC236:
 13425 17f4 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 13425      2048414E 
 13425      44206D61 
 13425      696E2065 
 13425      6E636F64 
 13426 1811 000000   		.align	2
 13427              	.LC237:
 13428 1814 52617720 		.ascii	"Raw value [status]:\015\012\000"
 13428      76616C75 
 13428      65205B73 
 13428      74617475 
 13428      735D3A0D 
 13429 182a 0000     		.align	2
 13430              	.LC238:
 13431 182c 4F4B00   		.ascii	"OK\000"
 13432 182f 00       		.align	2
 13433              	.LC239:
 13434 1830 5800     		.ascii	"X\000"
 13435 1832 0000     		.align	2
 13436              	.LC240:
 13437 1834 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 13437      25735D0D 
 13437      0A00
 13438 183e 0000     		.align	2
 13439              	.LC241:
 13440 1840 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13440      20465720 
 13440      6379636C 
 13440      65207469 
 13440      6D653A20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 305


 13441              		.align	2
 13442              	.LC242:
 13443 185c 0D0A0000 		.ascii	"\015\012\000\000"
 13444              		.section	.text.prepare_generic_info,"ax",%progbits
 13445              		.align	2
 13446              		.global	prepare_generic_info
 13447              		.thumb
 13448              		.thumb_func
 13449              		.type	prepare_generic_info, %function
 13450              	prepare_generic_info:
 13451              	.LFB72:
1761:..\src/command_processing.c **** 
1762:..\src/command_processing.c **** //==============================================================================
1763:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1764:..\src/command_processing.c **** //==============================================================================
1765:..\src/command_processing.c **** 
1766:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1767:..\src/command_processing.c **** {
 13452              		.loc 1 1767 0
 13453              		.cfi_startproc
 13454              		@ args = 0, pretend = 0, frame = 152
 13455              		@ frame_needed = 1, uses_anonymous_args = 0
 13456 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13457              		.cfi_def_cfa_offset 36
 13458              		.cfi_offset 4, -36
 13459              		.cfi_offset 5, -32
 13460              		.cfi_offset 6, -28
 13461              		.cfi_offset 7, -24
 13462              		.cfi_offset 8, -20
 13463              		.cfi_offset 9, -16
 13464              		.cfi_offset 10, -12
 13465              		.cfi_offset 11, -8
 13466              		.cfi_offset 14, -4
 13467 0004 B1B0     		sub	sp, sp, #196
 13468              		.cfi_def_cfa_offset 232
 13469 0006 0AAF     		add	r7, sp, #40
 13470              		.cfi_def_cfa 7, 192
 13471 0008 7861     		str	r0, [r7, #20]
1768:..\src/command_processing.c ****     int i;
1769:..\src/command_processing.c **** 
1770:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13472              		.loc 1 1770 0
 13473 000a C94B     		ldr	r3, .L640
 13474 000c C7F88830 		str	r3, [r7, #136]
1771:..\src/command_processing.c ****     
1772:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13475              		.loc 1 1772 0
 13476 0010 C74B     		ldr	r3, .L640
 13477 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13478 0016 FA2B     		cmp	r3, #250
 13479 0018 01F05C87 		beq	.L638
 13480              	.LBB16:
1773:..\src/command_processing.c ****         char str[100];
1774:..\src/command_processing.c ****         strcpy(info_string, "");
 13481              		.loc 1 1774 0
 13482 001c 7B69     		ldr	r3, [r7, #20]
 13483 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 306


 13484 0020 1A70     		strb	r2, [r3]
1775:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13485              		.loc 1 1775 0
 13486 0022 7869     		ldr	r0, [r7, #20]
 13487 0024 FFF7FEFF 		bl	strlen
 13488 0028 0346     		mov	r3, r0
 13489 002a 1A46     		mov	r2, r3
 13490 002c 7B69     		ldr	r3, [r7, #20]
 13491 002e 1344     		add	r3, r3, r2
 13492 0030 C04A     		ldr	r2, .L640+4
 13493 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13494 0034 9278     		ldrb	r2, [r2, #2]
 13495 0036 1980     		strh	r1, [r3]	@ unaligned
 13496 0038 9A70     		strb	r2, [r3, #2]
1776:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13497              		.loc 1 1776 0
 13498 003a 7869     		ldr	r0, [r7, #20]
 13499 003c FFF7FEFF 		bl	strlen
 13500 0040 0346     		mov	r3, r0
 13501 0042 1A46     		mov	r2, r3
 13502 0044 7B69     		ldr	r3, [r7, #20]
 13503 0046 1344     		add	r3, r3, r2
 13504 0048 BB4A     		ldr	r2, .L640+8
 13505 004a 1D46     		mov	r5, r3
 13506 004c 1446     		mov	r4, r2
 13507 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13508 0050 2860     		str	r0, [r5]	@ unaligned
 13509 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13510 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13511 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13512 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13513 005a A278     		ldrb	r2, [r4, #2]
 13514 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13515 005e 1346     		mov	r3, r2
 13516 0060 AB74     		strb	r3, [r5, #18]
1777:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13517              		.loc 1 1777 0
 13518 0062 7869     		ldr	r0, [r7, #20]
 13519 0064 FFF7FEFF 		bl	strlen
 13520 0068 0346     		mov	r3, r0
 13521 006a 1A46     		mov	r2, r3
 13522 006c 7B69     		ldr	r3, [r7, #20]
 13523 006e 1344     		add	r3, r3, r2
 13524 0070 B24A     		ldr	r2, .L640+12
 13525 0072 1C46     		mov	r4, r3
 13526 0074 1546     		mov	r5, r2
 13527 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13528 0078 2060     		str	r0, [r4]	@ unaligned
 13529 007a 6160     		str	r1, [r4, #4]	@ unaligned
 13530 007c A260     		str	r2, [r4, #8]	@ unaligned
 13531 007e E360     		str	r3, [r4, #12]	@ unaligned
 13532 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13533 0082 2061     		str	r0, [r4, #16]	@ unaligned
 13534 0084 6161     		str	r1, [r4, #20]	@ unaligned
 13535 0086 A261     		str	r2, [r4, #24]	@ unaligned
 13536 0088 E361     		str	r3, [r4, #28]	@ unaligned
1778:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 307


 13537              		.loc 1 1778 0
 13538 008a 7869     		ldr	r0, [r7, #20]
 13539 008c FFF7FEFF 		bl	strlen
 13540 0090 0346     		mov	r3, r0
 13541 0092 1A46     		mov	r2, r3
 13542 0094 7B69     		ldr	r3, [r7, #20]
 13543 0096 1344     		add	r3, r3, r2
 13544 0098 A94A     		ldr	r2, .L640+16
 13545 009a 1068     		ldr	r0, [r2]	@ unaligned
 13546 009c 1860     		str	r0, [r3]	@ unaligned
 13547 009e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13548 00a0 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c **** 
1780:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13549              		.loc 1 1780 0
 13550 00a2 7869     		ldr	r0, [r7, #20]
 13551 00a4 FFF7FEFF 		bl	strlen
 13552 00a8 0346     		mov	r3, r0
 13553 00aa 1A46     		mov	r2, r3
 13554 00ac 7B69     		ldr	r3, [r7, #20]
 13555 00ae 1344     		add	r3, r3, r2
 13556 00b0 A44A     		ldr	r2, .L640+20
 13557 00b2 1C46     		mov	r4, r3
 13558 00b4 1346     		mov	r3, r2
 13559 00b6 07CB     		ldmia	r3!, {r0, r1, r2}
 13560 00b8 2060     		str	r0, [r4]	@ unaligned
 13561 00ba 6160     		str	r1, [r4, #4]	@ unaligned
 13562 00bc A260     		str	r2, [r4, #8]	@ unaligned
 13563 00be 1B88     		ldrh	r3, [r3]	@ unaligned
 13564 00c0 A381     		strh	r3, [r4, #12]	@ unaligned
1781:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13565              		.loc 1 1781 0
 13566 00c2 D7F88830 		ldr	r3, [r7, #136]
 13567 00c6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13568 00ca 1A46     		mov	r2, r3
 13569 00cc 07F11803 		add	r3, r7, #24
 13570 00d0 9D49     		ldr	r1, .L640+24
 13571 00d2 1846     		mov	r0, r3
 13572 00d4 FFF7FEFF 		bl	sprintf
1782:..\src/command_processing.c ****         strcat(info_string, str);
 13573              		.loc 1 1782 0
 13574 00d8 07F11803 		add	r3, r7, #24
 13575 00dc 1946     		mov	r1, r3
 13576 00de 7869     		ldr	r0, [r7, #20]
 13577 00e0 FFF7FEFF 		bl	strcat
1783:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13578              		.loc 1 1783 0
 13579 00e4 D7F88830 		ldr	r3, [r7, #136]
 13580 00e8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 13581 00ec 012B     		cmp	r3, #1
 13582 00ee 1BD0     		beq	.L528
 13583 00f0 022B     		cmp	r3, #2
 13584 00f2 31D0     		beq	.L529
 13585 00f4 002B     		cmp	r3, #0
 13586 00f6 00D0     		beq	.L530
1784:..\src/command_processing.c ****             case SOFTHAND_PRO:
1785:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 308


1786:..\src/command_processing.c ****                 break;
1787:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1788:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1789:..\src/command_processing.c ****                 break;
1790:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1791:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
1792:..\src/command_processing.c ****                 break;
1793:..\src/command_processing.c ****             default:
1794:..\src/command_processing.c ****                 break;
 13587              		.loc 1 1794 0
 13588 00f8 4FE0     		b	.L531
 13589              	.L530:
1785:..\src/command_processing.c ****                 break;
 13590              		.loc 1 1785 0
 13591 00fa 7869     		ldr	r0, [r7, #20]
 13592 00fc FFF7FEFF 		bl	strlen
 13593 0100 0346     		mov	r3, r0
 13594 0102 1A46     		mov	r2, r3
 13595 0104 7B69     		ldr	r3, [r7, #20]
 13596 0106 1344     		add	r3, r3, r2
 13597 0108 904A     		ldr	r2, .L640+28
 13598 010a 1C46     		mov	r4, r3
 13599 010c 1546     		mov	r5, r2
 13600 010e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13601 0110 2060     		str	r0, [r4]	@ unaligned
 13602 0112 6160     		str	r1, [r4, #4]	@ unaligned
 13603 0114 A260     		str	r2, [r4, #8]	@ unaligned
 13604 0116 E360     		str	r3, [r4, #12]	@ unaligned
 13605 0118 2868     		ldr	r0, [r5]	@ unaligned
 13606 011a 2061     		str	r0, [r4, #16]	@ unaligned
 13607 011c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13608 011e AA79     		ldrb	r2, [r5, #6]
 13609 0120 A382     		strh	r3, [r4, #20]	@ unaligned
 13610 0122 1346     		mov	r3, r2
 13611 0124 A375     		strb	r3, [r4, #22]
1786:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 13612              		.loc 1 1786 0
 13613 0126 38E0     		b	.L531
 13614              	.L528:
1788:..\src/command_processing.c ****                 break;
 13615              		.loc 1 1788 0
 13616 0128 7869     		ldr	r0, [r7, #20]
 13617 012a FFF7FEFF 		bl	strlen
 13618 012e 0346     		mov	r3, r0
 13619 0130 1A46     		mov	r2, r3
 13620 0132 7B69     		ldr	r3, [r7, #20]
 13621 0134 1344     		add	r3, r3, r2
 13622 0136 864A     		ldr	r2, .L640+32
 13623 0138 1D46     		mov	r5, r3
 13624 013a 1446     		mov	r4, r2
 13625 013c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13626 013e 2860     		str	r0, [r5]	@ unaligned
 13627 0140 6960     		str	r1, [r5, #4]	@ unaligned
 13628 0142 AA60     		str	r2, [r5, #8]	@ unaligned
 13629 0144 EB60     		str	r3, [r5, #12]	@ unaligned
 13630 0146 03CC     		ldmia	r4!, {r0, r1}
 13631 0148 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 309


 13632 014a 6961     		str	r1, [r5, #20]	@ unaligned
 13633 014c 2388     		ldrh	r3, [r4]	@ unaligned
 13634 014e A278     		ldrb	r2, [r4, #2]
 13635 0150 2B83     		strh	r3, [r5, #24]	@ unaligned
 13636 0152 1346     		mov	r3, r2
 13637 0154 AB76     		strb	r3, [r5, #26]
1789:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
 13638              		.loc 1 1789 0
 13639 0156 20E0     		b	.L531
 13640              	.L529:
1791:..\src/command_processing.c ****                 break;
 13641              		.loc 1 1791 0
 13642 0158 7869     		ldr	r0, [r7, #20]
 13643 015a FFF7FEFF 		bl	strlen
 13644 015e 0346     		mov	r3, r0
 13645 0160 1A46     		mov	r2, r3
 13646 0162 7B69     		ldr	r3, [r7, #20]
 13647 0164 1344     		add	r3, r3, r2
 13648 0166 7B4A     		ldr	r2, .L640+36
 13649 0168 1446     		mov	r4, r2
 13650 016a 9E46     		mov	lr, r3
 13651 016c 04F1200C 		add	ip, r4, #32
 13652              	.L532:
 13653 0170 7546     		mov	r5, lr
 13654 0172 2646     		mov	r6, r4
 13655 0174 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13656 0176 2860     		str	r0, [r5]	@ unaligned
 13657 0178 6960     		str	r1, [r5, #4]	@ unaligned
 13658 017a AA60     		str	r2, [r5, #8]	@ unaligned
 13659 017c EB60     		str	r3, [r5, #12]	@ unaligned
 13660 017e 1034     		adds	r4, r4, #16
 13661 0180 0EF1100E 		add	lr, lr, #16
 13662 0184 6445     		cmp	r4, ip
 13663 0186 F3D1     		bne	.L532
 13664 0188 7346     		mov	r3, lr
 13665 018a 2246     		mov	r2, r4
 13666 018c 1068     		ldr	r0, [r2]	@ unaligned
 13667 018e 1860     		str	r0, [r3]	@ unaligned
 13668 0190 9188     		ldrh	r1, [r2, #4]	@ unaligned
 13669 0192 9279     		ldrb	r2, [r2, #6]
 13670 0194 9980     		strh	r1, [r3, #4]	@ unaligned
 13671 0196 9A71     		strb	r2, [r3, #6]
1792:..\src/command_processing.c ****             default:
 13672              		.loc 1 1792 0
 13673 0198 00BF     		nop
 13674              	.L531:
1795:..\src/command_processing.c ****         }
1796:..\src/command_processing.c ****         
1797:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13675              		.loc 1 1797 0
 13676 019a D7F88830 		ldr	r3, [r7, #136]
 13677 019e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13678 01a2 002B     		cmp	r3, #0
 13679 01a4 02D0     		beq	.L534
 13680 01a6 012B     		cmp	r3, #1
 13681 01a8 15D0     		beq	.L535
 13682 01aa 26E0     		b	.L533
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 310


 13683              	.L534:
1798:..\src/command_processing.c ****             case RIGHT_HAND:
1799:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13684              		.loc 1 1799 0
 13685 01ac 7869     		ldr	r0, [r7, #20]
 13686 01ae FFF7FEFF 		bl	strlen
 13687 01b2 0346     		mov	r3, r0
 13688 01b4 1A46     		mov	r2, r3
 13689 01b6 7B69     		ldr	r3, [r7, #20]
 13690 01b8 1344     		add	r3, r3, r2
 13691 01ba 674A     		ldr	r2, .L640+40
 13692 01bc 1D46     		mov	r5, r3
 13693 01be 1446     		mov	r4, r2
 13694 01c0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13695 01c2 2860     		str	r0, [r5]	@ unaligned
 13696 01c4 6960     		str	r1, [r5, #4]	@ unaligned
 13697 01c6 AA60     		str	r2, [r5, #8]	@ unaligned
 13698 01c8 EB60     		str	r3, [r5, #12]	@ unaligned
 13699 01ca 2388     		ldrh	r3, [r4]	@ unaligned
 13700 01cc A278     		ldrb	r2, [r4, #2]
 13701 01ce 2B82     		strh	r3, [r5, #16]	@ unaligned
 13702 01d0 1346     		mov	r3, r2
 13703 01d2 AB74     		strb	r3, [r5, #18]
1800:..\src/command_processing.c ****                 break;
 13704              		.loc 1 1800 0
 13705 01d4 11E0     		b	.L533
 13706              	.L535:
1801:..\src/command_processing.c ****             case LEFT_HAND:
1802:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13707              		.loc 1 1802 0
 13708 01d6 7869     		ldr	r0, [r7, #20]
 13709 01d8 FFF7FEFF 		bl	strlen
 13710 01dc 0346     		mov	r3, r0
 13711 01de 1A46     		mov	r2, r3
 13712 01e0 7B69     		ldr	r3, [r7, #20]
 13713 01e2 1344     		add	r3, r3, r2
 13714 01e4 5D4A     		ldr	r2, .L640+44
 13715 01e6 1D46     		mov	r5, r3
 13716 01e8 1446     		mov	r4, r2
 13717 01ea 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13718 01ec 2860     		str	r0, [r5]	@ unaligned
 13719 01ee 6960     		str	r1, [r5, #4]	@ unaligned
 13720 01f0 AA60     		str	r2, [r5, #8]	@ unaligned
 13721 01f2 EB60     		str	r3, [r5, #12]	@ unaligned
 13722 01f4 2388     		ldrh	r3, [r4]	@ unaligned
 13723 01f6 2B82     		strh	r3, [r5, #16]	@ unaligned
1803:..\src/command_processing.c ****                 break;
 13724              		.loc 1 1803 0
 13725 01f8 00BF     		nop
 13726              	.L533:
1804:..\src/command_processing.c ****         }
1805:..\src/command_processing.c **** 
1806:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13727              		.loc 1 1806 0
 13728 01fa D7F88830 		ldr	r3, [r7, #136]
 13729 01fe 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13730 0202 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 311


 13731 0204 02D0     		beq	.L537
 13732 0206 022B     		cmp	r3, #2
 13733 0208 11D0     		beq	.L538
 13734 020a 21E0     		b	.L637
 13735              	.L537:
1807:..\src/command_processing.c ****             case MARIA:
1808:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13736              		.loc 1 1808 0
 13737 020c 7869     		ldr	r0, [r7, #20]
 13738 020e FFF7FEFF 		bl	strlen
 13739 0212 0346     		mov	r3, r0
 13740 0214 1A46     		mov	r2, r3
 13741 0216 7B69     		ldr	r3, [r7, #20]
 13742 0218 1344     		add	r3, r3, r2
 13743 021a 514A     		ldr	r2, .L640+48
 13744 021c 1C46     		mov	r4, r3
 13745 021e 1346     		mov	r3, r2
 13746 0220 07CB     		ldmia	r3!, {r0, r1, r2}
 13747 0222 2060     		str	r0, [r4]	@ unaligned
 13748 0224 6160     		str	r1, [r4, #4]	@ unaligned
 13749 0226 A260     		str	r2, [r4, #8]	@ unaligned
 13750 0228 1B88     		ldrh	r3, [r3]	@ unaligned
 13751 022a A381     		strh	r3, [r4, #12]	@ unaligned
1809:..\src/command_processing.c ****                 break;
 13752              		.loc 1 1809 0
 13753 022c 24E0     		b	.L539
 13754              	.L538:
1810:..\src/command_processing.c ****             case ROZA:
1811:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 13755              		.loc 1 1811 0
 13756 022e 7869     		ldr	r0, [r7, #20]
 13757 0230 FFF7FEFF 		bl	strlen
 13758 0234 0346     		mov	r3, r0
 13759 0236 1A46     		mov	r2, r3
 13760 0238 7B69     		ldr	r3, [r7, #20]
 13761 023a 1344     		add	r3, r3, r2
 13762 023c 494A     		ldr	r2, .L640+52
 13763 023e 1C46     		mov	r4, r3
 13764 0240 1346     		mov	r3, r2
 13765 0242 07CB     		ldmia	r3!, {r0, r1, r2}
 13766 0244 2060     		str	r0, [r4]	@ unaligned
 13767 0246 6160     		str	r1, [r4, #4]	@ unaligned
 13768 0248 A260     		str	r2, [r4, #8]	@ unaligned
 13769 024a 1B78     		ldrb	r3, [r3]
 13770 024c 2373     		strb	r3, [r4, #12]
1812:..\src/command_processing.c ****                 break;
 13771              		.loc 1 1812 0
 13772 024e 13E0     		b	.L539
 13773              	.L637:
1813:..\src/command_processing.c ****             default:
1814:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13774              		.loc 1 1814 0
 13775 0250 7869     		ldr	r0, [r7, #20]
 13776 0252 FFF7FEFF 		bl	strlen
 13777 0256 0346     		mov	r3, r0
 13778 0258 1A46     		mov	r2, r3
 13779 025a 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 312


 13780 025c 1344     		add	r3, r3, r2
 13781 025e 424A     		ldr	r2, .L640+56
 13782 0260 1D46     		mov	r5, r3
 13783 0262 1446     		mov	r4, r2
 13784 0264 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13785 0266 2860     		str	r0, [r5]	@ unaligned
 13786 0268 6960     		str	r1, [r5, #4]	@ unaligned
 13787 026a AA60     		str	r2, [r5, #8]	@ unaligned
 13788 026c EB60     		str	r3, [r5, #12]	@ unaligned
 13789 026e 2068     		ldr	r0, [r4]	@ unaligned
 13790 0270 2861     		str	r0, [r5, #16]	@ unaligned
 13791 0272 2379     		ldrb	r3, [r4, #4]
 13792 0274 2B75     		strb	r3, [r5, #20]
1815:..\src/command_processing.c ****                 break;
 13793              		.loc 1 1815 0
 13794 0276 00BF     		nop
 13795              	.L539:
1816:..\src/command_processing.c ****         }
1817:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13796              		.loc 1 1817 0
 13797 0278 7869     		ldr	r0, [r7, #20]
 13798 027a FFF7FEFF 		bl	strlen
 13799 027e 0346     		mov	r3, r0
 13800 0280 1A46     		mov	r2, r3
 13801 0282 7B69     		ldr	r3, [r7, #20]
 13802 0284 1344     		add	r3, r3, r2
 13803 0286 2B4A     		ldr	r2, .L640+4
 13804 0288 1188     		ldrh	r1, [r2]	@ unaligned
 13805 028a 9278     		ldrb	r2, [r2, #2]
 13806 028c 1980     		strh	r1, [r3]	@ unaligned
 13807 028e 9A70     		strb	r2, [r3, #2]
 13808              	.LBB17:
1818:..\src/command_processing.c ****         
1819:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13809              		.loc 1 1819 0
 13810 0290 0023     		movs	r3, #0
 13811 0292 87F89330 		strb	r3, [r7, #147]
 13812 0296 01F093B9 		b	.L540
 13813              	.L603:
 13814              	.LBB18:
1820:..\src/command_processing.c ****             
1821:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13815              		.loc 1 1821 0
 13816 029a 97F89330 		ldrb	r3, [r7, #147]
 13817 029e 87F88730 		strb	r3, [r7, #135]
1822:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13818              		.loc 1 1822 0
 13819 02a2 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 13820 02a6 1346     		mov	r3, r2
 13821 02a8 DB00     		lsls	r3, r3, #3
 13822 02aa 9B1A     		subs	r3, r3, r2
 13823 02ac 1B01     		lsls	r3, r3, #4
 13824 02ae B033     		adds	r3, r3, #176
 13825 02b0 D7F88820 		ldr	r2, [r7, #136]
 13826 02b4 1344     		add	r3, r3, r2
 13827 02b6 C7F88030 		str	r3, [r7, #128]
1823:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 313


 13828              		.loc 1 1823 0
 13829 02ba D7F88030 		ldr	r3, [r7, #128]
 13830 02be 93F86030 		ldrb	r3, [r3, #96]
 13831 02c2 87F87F30 		strb	r3, [r7, #127]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13832              		.loc 1 1825 0
 13833 02c6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13834 02ca 5A1C     		adds	r2, r3, #1
 13835 02cc 07F11803 		add	r3, r7, #24
 13836 02d0 2649     		ldr	r1, .L640+60
 13837 02d2 1846     		mov	r0, r3
 13838 02d4 FFF7FEFF 		bl	sprintf
1826:..\src/command_processing.c ****             strcat(info_string, str);
 13839              		.loc 1 1826 0
 13840 02d8 07F11803 		add	r3, r7, #24
 13841 02dc 1946     		mov	r1, r3
 13842 02de 7869     		ldr	r0, [r7, #20]
 13843 02e0 FFF7FEFF 		bl	strcat
1827:..\src/command_processing.c ****                         
1828:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13844              		.loc 1 1828 0
 13845 02e4 7869     		ldr	r0, [r7, #20]
 13846 02e6 FFF7FEFF 		bl	strlen
 13847 02ea 0346     		mov	r3, r0
 13848 02ec 1A46     		mov	r2, r3
 13849 02ee 7B69     		ldr	r3, [r7, #20]
 13850 02f0 1344     		add	r3, r3, r2
 13851 02f2 1F4A     		ldr	r2, .L640+64
 13852 02f4 1C46     		mov	r4, r3
 13853 02f6 1546     		mov	r5, r2
 13854 02f8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13855 02fa 2060     		str	r0, [r4]	@ unaligned
 13856 02fc 6160     		str	r1, [r4, #4]	@ unaligned
 13857 02fe A260     		str	r2, [r4, #8]	@ unaligned
 13858 0300 E360     		str	r3, [r4, #12]	@ unaligned
1829:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13859              		.loc 1 1829 0
 13860 0302 D7F88030 		ldr	r3, [r7, #128]
 13861 0306 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13862 030a 022B     		cmp	r3, #2
 13863 030c 34D1     		bne	.L541
1830:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13864              		.loc 1 1830 0
 13865 030e 7869     		ldr	r0, [r7, #20]
 13866 0310 FFF7FEFF 		bl	strlen
 13867 0314 0346     		mov	r3, r0
 13868 0316 1A46     		mov	r2, r3
 13869 0318 7B69     		ldr	r3, [r7, #20]
 13870 031a 1344     		add	r3, r3, r2
 13871 031c 154A     		ldr	r2, .L640+68
 13872 031e 1C46     		mov	r4, r3
 13873 0320 1346     		mov	r3, r2
 13874 0322 07CB     		ldmia	r3!, {r0, r1, r2}
 13875 0324 2060     		str	r0, [r4]	@ unaligned
 13876 0326 6160     		str	r1, [r4, #4]	@ unaligned
 13877 0328 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 314


 13878 032a 1B88     		ldrh	r3, [r3]	@ unaligned
 13879 032c A381     		strh	r3, [r4, #12]	@ unaligned
 13880 032e 49E0     		b	.L542
 13881              	.L641:
 13882              		.align	2
 13883              	.L640:
 13884 0330 00000000 		.word	c_mem
 13885 0334 A80E0000 		.word	.LC132
 13886 0338 AC0E0000 		.word	.LC133
 13887 033c C00E0000 		.word	.LC134
 13888 0340 E00E0000 		.word	.LC135
 13889 0344 E80E0000 		.word	.LC136
 13890 0348 F80E0000 		.word	.LC137
 13891 034c 040F0000 		.word	.LC138
 13892 0350 1C0F0000 		.word	.LC139
 13893 0354 380F0000 		.word	.LC140
 13894 0358 600F0000 		.word	.LC141
 13895 035c 740F0000 		.word	.LC142
 13896 0360 880F0000 		.word	.LC143
 13897 0364 980F0000 		.word	.LC144
 13898 0368 A80F0000 		.word	.LC145
 13899 036c C00F0000 		.word	.LC146
 13900 0370 D00F0000 		.word	.LC147
 13901 0374 E00F0000 		.word	.LC148
 13902              	.L541:
1831:..\src/command_processing.c ****             else {
1832:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13903              		.loc 1 1832 0
 13904 0378 D7F88030 		ldr	r3, [r7, #128]
 13905 037c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13906 0380 012B     		cmp	r3, #1
 13907 0382 0FD1     		bne	.L543
1833:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13908              		.loc 1 1833 0
 13909 0384 7869     		ldr	r0, [r7, #20]
 13910 0386 FFF7FEFF 		bl	strlen
 13911 038a 0346     		mov	r3, r0
 13912 038c 1A46     		mov	r2, r3
 13913 038e 7B69     		ldr	r3, [r7, #20]
 13914 0390 1344     		add	r3, r3, r2
 13915 0392 8F49     		ldr	r1, .L642
 13916 0394 1A46     		mov	r2, r3
 13917 0396 0B46     		mov	r3, r1
 13918 0398 03CB     		ldmia	r3!, {r0, r1}
 13919 039a 1060     		str	r0, [r2]	@ unaligned
 13920 039c 5160     		str	r1, [r2, #4]	@ unaligned
 13921 039e 1B78     		ldrb	r3, [r3]
 13922 03a0 1372     		strb	r3, [r2, #8]
 13923 03a2 0FE0     		b	.L542
 13924              	.L543:
1834:..\src/command_processing.c ****                 else
1835:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13925              		.loc 1 1835 0
 13926 03a4 7869     		ldr	r0, [r7, #20]
 13927 03a6 FFF7FEFF 		bl	strlen
 13928 03aa 0346     		mov	r3, r0
 13929 03ac 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 315


 13930 03ae 7B69     		ldr	r3, [r7, #20]
 13931 03b0 1344     		add	r3, r3, r2
 13932 03b2 884A     		ldr	r2, .L642+4
 13933 03b4 1C46     		mov	r4, r3
 13934 03b6 1346     		mov	r3, r2
 13935 03b8 07CB     		ldmia	r3!, {r0, r1, r2}
 13936 03ba 2060     		str	r0, [r4]	@ unaligned
 13937 03bc 6160     		str	r1, [r4, #4]	@ unaligned
 13938 03be A260     		str	r2, [r4, #8]	@ unaligned
 13939 03c0 1B88     		ldrh	r3, [r3]	@ unaligned
 13940 03c2 A381     		strh	r3, [r4, #12]	@ unaligned
 13941              	.L542:
1836:..\src/command_processing.c ****             }
1837:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13942              		.loc 1 1837 0
 13943 03c4 D7F88030 		ldr	r3, [r7, #128]
 13944 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13945 03cc 022B     		cmp	r3, #2
 13946 03ce 13D1     		bne	.L544
1838:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13947              		.loc 1 1838 0
 13948 03d0 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13949 03d4 804A     		ldr	r2, .L642+8
 13950 03d6 1B01     		lsls	r3, r3, #4
 13951 03d8 1344     		add	r3, r3, r2
 13952 03da 0433     		adds	r3, r3, #4
 13953 03dc 1A68     		ldr	r2, [r3]
 13954 03de 07F11803 		add	r3, r7, #24
 13955 03e2 7E49     		ldr	r1, .L642+12
 13956 03e4 1846     		mov	r0, r3
 13957 03e6 FFF7FEFF 		bl	sprintf
1839:..\src/command_processing.c ****                 strcat(info_string,str);
 13958              		.loc 1 1839 0
 13959 03ea 07F11803 		add	r3, r7, #24
 13960 03ee 1946     		mov	r1, r3
 13961 03f0 7869     		ldr	r0, [r7, #20]
 13962 03f2 FFF7FEFF 		bl	strcat
 13963 03f6 39E0     		b	.L545
 13964              	.L544:
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             else {
1842:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13965              		.loc 1 1842 0
 13966 03f8 D7F88030 		ldr	r3, [r7, #128]
 13967 03fc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13968 0400 012B     		cmp	r3, #1
 13969 0402 13D1     		bne	.L546
1843:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13970              		.loc 1 1843 0
 13971 0404 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13972 0408 734A     		ldr	r2, .L642+8
 13973 040a 1B01     		lsls	r3, r3, #4
 13974 040c 1344     		add	r3, r3, r2
 13975 040e 0833     		adds	r3, r3, #8
 13976 0410 1A68     		ldr	r2, [r3]
 13977 0412 07F11803 		add	r3, r7, #24
 13978 0416 7149     		ldr	r1, .L642+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 316


 13979 0418 1846     		mov	r0, r3
 13980 041a FFF7FEFF 		bl	sprintf
1844:..\src/command_processing.c ****                     strcat(info_string,str);
 13981              		.loc 1 1844 0
 13982 041e 07F11803 		add	r3, r7, #24
 13983 0422 1946     		mov	r1, r3
 13984 0424 7869     		ldr	r0, [r7, #20]
 13985 0426 FFF7FEFF 		bl	strcat
 13986 042a 1FE0     		b	.L545
 13987              	.L546:
1845:..\src/command_processing.c ****                 }
1846:..\src/command_processing.c ****                 else {
1847:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13988              		.loc 1 1847 0
 13989 042c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13990 0430 694A     		ldr	r2, .L642+8
 13991 0432 1B01     		lsls	r3, r3, #4
 13992 0434 1344     		add	r3, r3, r2
 13993 0436 1968     		ldr	r1, [r3]
 13994 0438 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 13995 043c D7F88800 		ldr	r0, [r7, #136]
 13996 0440 1346     		mov	r3, r2
 13997 0442 5B00     		lsls	r3, r3, #1
 13998 0444 1344     		add	r3, r3, r2
 13999 0446 1B01     		lsls	r3, r3, #4
 14000 0448 0344     		add	r3, r3, r0
 14001 044a 03F29513 		addw	r3, r3, #405
 14002 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14003 0450 41FA03F2 		asr	r2, r1, r3
 14004 0454 07F11803 		add	r3, r7, #24
 14005 0458 6049     		ldr	r1, .L642+12
 14006 045a 1846     		mov	r0, r3
 14007 045c FFF7FEFF 		bl	sprintf
1848:..\src/command_processing.c ****                     strcat(info_string,str);
 14008              		.loc 1 1848 0
 14009 0460 07F11803 		add	r3, r7, #24
 14010 0464 1946     		mov	r1, r3
 14011 0466 7869     		ldr	r0, [r7, #20]
 14012 0468 FFF7FEFF 		bl	strcat
 14013              	.L545:
1849:..\src/command_processing.c ****                 }
1850:..\src/command_processing.c ****             }
1851:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14014              		.loc 1 1851 0
 14015 046c 7869     		ldr	r0, [r7, #20]
 14016 046e FFF7FEFF 		bl	strlen
 14017 0472 0346     		mov	r3, r0
 14018 0474 1A46     		mov	r2, r3
 14019 0476 7B69     		ldr	r3, [r7, #20]
 14020 0478 1344     		add	r3, r3, r2
 14021 047a 594A     		ldr	r2, .L642+16
 14022 047c 1188     		ldrh	r1, [r2]	@ unaligned
 14023 047e 9278     		ldrb	r2, [r2, #2]
 14024 0480 1980     		strh	r1, [r3]	@ unaligned
 14025 0482 9A70     		strb	r2, [r3, #2]
1852:..\src/command_processing.c **** 
1853:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 317


 14026              		.loc 1 1853 0
 14027 0484 07F11803 		add	r3, r7, #24
 14028 0488 564A     		ldr	r2, .L642+20
 14029 048a 1C46     		mov	r4, r3
 14030 048c 1346     		mov	r3, r2
 14031 048e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14032 0490 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1854:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14033              		.loc 1 1854 0
 14034 0494 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14035 0498 534A     		ldr	r2, .L642+24
 14036 049a 1B01     		lsls	r3, r3, #4
 14037 049c 1344     		add	r3, r3, r2
 14038 049e 0C33     		adds	r3, r3, #12
 14039 04a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14040 04a2 03F00103 		and	r3, r3, #1
 14041 04a6 002B     		cmp	r3, #0
 14042 04a8 0FD0     		beq	.L547
1855:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14043              		.loc 1 1855 0
 14044 04aa 07F11803 		add	r3, r7, #24
 14045 04ae 1846     		mov	r0, r3
 14046 04b0 FFF7FEFF 		bl	strlen
 14047 04b4 0346     		mov	r3, r0
 14048 04b6 1A46     		mov	r2, r3
 14049 04b8 07F11803 		add	r3, r7, #24
 14050 04bc 1344     		add	r3, r3, r2
 14051 04be 4B4A     		ldr	r2, .L642+28
 14052 04c0 1068     		ldr	r0, [r2]	@ unaligned
 14053 04c2 1860     		str	r0, [r3]	@ unaligned
 14054 04c4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14055 04c6 9A80     		strh	r2, [r3, #4]	@ unaligned
 14056 04c8 0EE0     		b	.L548
 14057              	.L547:
1856:..\src/command_processing.c ****             } else {
1857:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14058              		.loc 1 1857 0
 14059 04ca 07F11803 		add	r3, r7, #24
 14060 04ce 1846     		mov	r0, r3
 14061 04d0 FFF7FEFF 		bl	strlen
 14062 04d4 0346     		mov	r3, r0
 14063 04d6 1A46     		mov	r2, r3
 14064 04d8 07F11803 		add	r3, r7, #24
 14065 04dc 1344     		add	r3, r3, r2
 14066 04de 444A     		ldr	r2, .L642+32
 14067 04e0 1068     		ldr	r0, [r2]	@ unaligned
 14068 04e2 1860     		str	r0, [r3]	@ unaligned
 14069 04e4 1279     		ldrb	r2, [r2, #4]
 14070 04e6 1A71     		strb	r2, [r3, #4]
 14071              	.L548:
1858:..\src/command_processing.c ****             }
1859:..\src/command_processing.c ****             strcat(info_string, str);
 14072              		.loc 1 1859 0
 14073 04e8 07F11803 		add	r3, r7, #24
 14074 04ec 1946     		mov	r1, r3
 14075 04ee 7869     		ldr	r0, [r7, #20]
 14076 04f0 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 318


1860:..\src/command_processing.c ****                         
1861:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14077              		.loc 1 1861 0
 14078 04f4 7869     		ldr	r0, [r7, #20]
 14079 04f6 FFF7FEFF 		bl	strlen
 14080 04fa 0346     		mov	r3, r0
 14081 04fc 1A46     		mov	r2, r3
 14082 04fe 7B69     		ldr	r3, [r7, #20]
 14083 0500 1344     		add	r3, r3, r2
 14084 0502 3C4A     		ldr	r2, .L642+36
 14085 0504 1D46     		mov	r5, r3
 14086 0506 1446     		mov	r4, r2
 14087 0508 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14088 050a 2860     		str	r0, [r5]	@ unaligned
 14089 050c 6960     		str	r1, [r5, #4]	@ unaligned
 14090 050e AA60     		str	r2, [r5, #8]	@ unaligned
 14091 0510 EB60     		str	r3, [r5, #12]	@ unaligned
 14092 0512 03CC     		ldmia	r4!, {r0, r1}
 14093 0514 2861     		str	r0, [r5, #16]	@ unaligned
 14094 0516 6961     		str	r1, [r5, #20]	@ unaligned
 14095 0518 2388     		ldrh	r3, [r4]	@ unaligned
 14096 051a A278     		ldrb	r2, [r4, #2]
 14097 051c 2B83     		strh	r3, [r5, #24]	@ unaligned
 14098 051e 1346     		mov	r3, r2
 14099 0520 AB76     		strb	r3, [r5, #26]
1862:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14100              		.loc 1 1862 0
 14101 0522 D7F88030 		ldr	r3, [r7, #128]
 14102 0526 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14103 052a 012B     		cmp	r3, #1
 14104 052c 0CD1     		bne	.L549
1863:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14105              		.loc 1 1863 0
 14106 052e 7869     		ldr	r0, [r7, #20]
 14107 0530 FFF7FEFF 		bl	strlen
 14108 0534 0346     		mov	r3, r0
 14109 0536 1A46     		mov	r2, r3
 14110 0538 7B69     		ldr	r3, [r7, #20]
 14111 053a 1344     		add	r3, r3, r2
 14112 053c 2E4A     		ldr	r2, .L642+40
 14113 053e 1068     		ldr	r0, [r2]	@ unaligned
 14114 0540 1860     		str	r0, [r3]	@ unaligned
 14115 0542 1279     		ldrb	r2, [r2, #4]
 14116 0544 1A71     		strb	r2, [r3, #4]
 14117 0546 09E0     		b	.L550
 14118              	.L549:
1864:..\src/command_processing.c ****             else
1865:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14119              		.loc 1 1865 0
 14120 0548 7869     		ldr	r0, [r7, #20]
 14121 054a FFF7FEFF 		bl	strlen
 14122 054e 0346     		mov	r3, r0
 14123 0550 1A46     		mov	r2, r3
 14124 0552 7B69     		ldr	r3, [r7, #20]
 14125 0554 1344     		add	r3, r3, r2
 14126 0556 294A     		ldr	r2, .L642+44
 14127 0558 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 319


 14128 055a 1860     		str	r0, [r3]	@ unaligned
 14129              	.L550:
1866:..\src/command_processing.c ****             
1867:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14130              		.loc 1 1867 0
 14131 055c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14132 0560 274A     		ldr	r2, .L642+48
 14133 0562 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14134 0564 1A46     		mov	r2, r3
 14135 0566 07F11803 		add	r3, r7, #24
 14136 056a 2649     		ldr	r1, .L642+52
 14137 056c 1846     		mov	r0, r3
 14138 056e FFF7FEFF 		bl	sprintf
1868:..\src/command_processing.c ****             strcat(info_string, str);
 14139              		.loc 1 1868 0
 14140 0572 07F11803 		add	r3, r7, #24
 14141 0576 1946     		mov	r1, r3
 14142 0578 7869     		ldr	r0, [r7, #20]
 14143 057a FFF7FEFF 		bl	strcat
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14144              		.loc 1 1870 0
 14145 057e 7869     		ldr	r0, [r7, #20]
 14146 0580 FFF7FEFF 		bl	strlen
 14147 0584 0346     		mov	r3, r0
 14148 0586 1A46     		mov	r2, r3
 14149 0588 7B69     		ldr	r3, [r7, #20]
 14150 058a 1344     		add	r3, r3, r2
 14151 058c 1E4A     		ldr	r2, .L642+56
 14152 058e 1D46     		mov	r5, r3
 14153 0590 1446     		mov	r4, r2
 14154 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14155 0594 2860     		str	r0, [r5]	@ unaligned
 14156 0596 6960     		str	r1, [r5, #4]	@ unaligned
 14157 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 14158 059a EB60     		str	r3, [r5, #12]	@ unaligned
 14159 059c 2068     		ldr	r0, [r4]	@ unaligned
 14160 059e 2861     		str	r0, [r5, #16]	@ unaligned
 14161 05a0 A388     		ldrh	r3, [r4, #4]	@ unaligned
 14162 05a2 AB82     		strh	r3, [r5, #20]	@ unaligned
1871:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14163              		.loc 1 1871 0
 14164 05a4 7869     		ldr	r0, [r7, #20]
 14165 05a6 FFF7FEFF 		bl	strlen
 14166 05aa 0346     		mov	r3, r0
 14167 05ac 1A46     		mov	r2, r3
 14168 05ae 7B69     		ldr	r3, [r7, #20]
 14169 05b0 1344     		add	r3, r3, r2
 14170 05b2 164A     		ldr	r2, .L642+60
 14171 05b4 1C46     		mov	r4, r3
 14172 05b6 1346     		mov	r3, r2
 14173 05b8 07CB     		ldmia	r3!, {r0, r1, r2}
 14174 05ba 2060     		str	r0, [r4]	@ unaligned
 14175 05bc 6160     		str	r1, [r4, #4]	@ unaligned
 14176 05be A260     		str	r2, [r4, #8]	@ unaligned
 14177 05c0 1A88     		ldrh	r2, [r3]	@ unaligned
 14178 05c2 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 320


 14179 05c4 A281     		strh	r2, [r4, #12]	@ unaligned
 14180 05c6 A373     		strb	r3, [r4, #14]
1872:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14181              		.loc 1 1872 0
 14182 05c8 0023     		movs	r3, #0
 14183 05ca C7F89430 		str	r3, [r7, #148]
 14184 05ce 5EE0     		b	.L551
 14185              	.L643:
 14186              		.align	2
 14187              	.L642:
 14188 05d0 F00F0000 		.word	.LC149
 14189 05d4 FC0F0000 		.word	.LC150
 14190 05d8 00000000 		.word	g_refOld
 14191 05dc 0C100000 		.word	.LC151
 14192 05e0 A80E0000 		.word	.LC132
 14193 05e4 10100000 		.word	.LC152
 14194 05e8 00000000 		.word	g_ref
 14195 05ec 20100000 		.word	.LC153
 14196 05f0 28100000 		.word	.LC154
 14197 05f4 30100000 		.word	.LC155
 14198 05f8 4C100000 		.word	.LC156
 14199 05fc 54100000 		.word	.LC157
 14200 0600 00000000 		.word	dev_pwm_limit
 14201 0604 58100000 		.word	.LC158
 14202 0608 68100000 		.word	.LC159
 14203 060c 80100000 		.word	.LC160
 14204              	.L553:
1873:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14205              		.loc 1 1873 0
 14206 0610 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14207 0614 A749     		ldr	r1, .L644
 14208 0616 1346     		mov	r3, r2
 14209 0618 5B00     		lsls	r3, r3, #1
 14210 061a 1344     		add	r3, r3, r2
 14211 061c 9B00     		lsls	r3, r3, #2
 14212 061e 1344     		add	r3, r3, r2
 14213 0620 D7F89420 		ldr	r2, [r7, #148]
 14214 0624 1344     		add	r3, r3, r2
 14215 0626 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14216 062a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14217 062e D7F88800 		ldr	r0, [r7, #136]
 14218 0632 1346     		mov	r3, r2
 14219 0634 5B00     		lsls	r3, r3, #1
 14220 0636 1344     		add	r3, r3, r2
 14221 0638 1B01     		lsls	r3, r3, #4
 14222 063a C218     		adds	r2, r0, r3
 14223 063c D7F89430 		ldr	r3, [r7, #148]
 14224 0640 1344     		add	r3, r3, r2
 14225 0642 03F29513 		addw	r3, r3, #405
 14226 0646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14227 0648 41FA03F2 		asr	r2, r1, r3
 14228 064c 07F11803 		add	r3, r7, #24
 14229 0650 9949     		ldr	r1, .L644+4
 14230 0652 1846     		mov	r0, r3
 14231 0654 FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****                 strcat(info_string, str);
 14232              		.loc 1 1874 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 321


 14233 0658 07F11803 		add	r3, r7, #24
 14234 065c 1946     		mov	r1, r3
 14235 065e 7869     		ldr	r0, [r7, #20]
 14236 0660 FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14237              		.loc 1 1875 0
 14238 0664 D7F89430 		ldr	r3, [r7, #148]
 14239 0668 022B     		cmp	r3, #2
 14240 066a 0BD0     		beq	.L552
1876:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14241              		.loc 1 1876 0
 14242 066c 7869     		ldr	r0, [r7, #20]
 14243 066e FFF7FEFF 		bl	strlen
 14244 0672 0346     		mov	r3, r0
 14245 0674 1A46     		mov	r2, r3
 14246 0676 7B69     		ldr	r3, [r7, #20]
 14247 0678 1344     		add	r3, r3, r2
 14248 067a 904A     		ldr	r2, .L644+8
 14249 067c 1188     		ldrh	r1, [r2]	@ unaligned
 14250 067e 9278     		ldrb	r2, [r2, #2]
 14251 0680 1980     		strh	r1, [r3]	@ unaligned
 14252 0682 9A70     		strb	r2, [r3, #2]
 14253              	.L552:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14254              		.loc 1 1872 0 discriminator 2
 14255 0684 D7F89430 		ldr	r3, [r7, #148]
 14256 0688 0133     		adds	r3, r3, #1
 14257 068a C7F89430 		str	r3, [r7, #148]
 14258              	.L551:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14259              		.loc 1 1872 0 is_stmt 0 discriminator 1
 14260 068e D7F89430 		ldr	r3, [r7, #148]
 14261 0692 022B     		cmp	r3, #2
 14262 0694 BCDD     		ble	.L553
1877:..\src/command_processing.c ****                 }                
1878:..\src/command_processing.c ****             }
1879:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14263              		.loc 1 1879 0 is_stmt 1
 14264 0696 7869     		ldr	r0, [r7, #20]
 14265 0698 FFF7FEFF 		bl	strlen
 14266 069c 0346     		mov	r3, r0
 14267 069e 1A46     		mov	r2, r3
 14268 06a0 7B69     		ldr	r3, [r7, #20]
 14269 06a2 1344     		add	r3, r3, r2
 14270 06a4 864A     		ldr	r2, .L644+12
 14271 06a6 1188     		ldrh	r1, [r2]	@ unaligned
 14272 06a8 9278     		ldrb	r2, [r2, #2]
 14273 06aa 1980     		strh	r1, [r3]	@ unaligned
 14274 06ac 9A70     		strb	r2, [r3, #2]
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14275              		.loc 1 1881 0
 14276 06ae 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14277 06b2 591C     		adds	r1, r3, #1
 14278 06b4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14279 06b8 824A     		ldr	r2, .L644+16
 14280 06ba 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 322


 14281 06be 07F11800 		add	r0, r7, #24
 14282 06c2 0A46     		mov	r2, r1
 14283 06c4 8049     		ldr	r1, .L644+20
 14284 06c6 FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****             strcat(info_string, str);
 14285              		.loc 1 1882 0
 14286 06ca 07F11803 		add	r3, r7, #24
 14287 06ce 1946     		mov	r1, r3
 14288 06d0 7869     		ldr	r0, [r7, #20]
 14289 06d2 FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14290              		.loc 1 1883 0
 14291 06d6 7869     		ldr	r0, [r7, #20]
 14292 06d8 FFF7FEFF 		bl	strlen
 14293 06dc 0346     		mov	r3, r0
 14294 06de 1A46     		mov	r2, r3
 14295 06e0 7B69     		ldr	r3, [r7, #20]
 14296 06e2 1344     		add	r3, r3, r2
 14297 06e4 764A     		ldr	r2, .L644+12
 14298 06e6 1188     		ldrh	r1, [r2]	@ unaligned
 14299 06e8 9278     		ldrb	r2, [r2, #2]
 14300 06ea 1980     		strh	r1, [r3]	@ unaligned
 14301 06ec 9A70     		strb	r2, [r3, #2]
1884:..\src/command_processing.c ****             
1885:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14302              		.loc 1 1885 0
 14303 06ee 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14304 06f2 591C     		adds	r1, r3, #1
 14305 06f4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14306 06f8 744A     		ldr	r2, .L644+24
 14307 06fa 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14308 06fe 07F11800 		add	r0, r7, #24
 14309 0702 0A46     		mov	r2, r1
 14310 0704 7249     		ldr	r1, .L644+28
 14311 0706 FFF7FEFF 		bl	sprintf
1886:..\src/command_processing.c ****             strcat(info_string, str);
 14312              		.loc 1 1886 0
 14313 070a 07F11803 		add	r3, r7, #24
 14314 070e 1946     		mov	r1, r3
 14315 0710 7869     		ldr	r0, [r7, #20]
 14316 0712 FFF7FEFF 		bl	strcat
1887:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14317              		.loc 1 1887 0
 14318 0716 7869     		ldr	r0, [r7, #20]
 14319 0718 FFF7FEFF 		bl	strlen
 14320 071c 0346     		mov	r3, r0
 14321 071e 1A46     		mov	r2, r3
 14322 0720 7B69     		ldr	r3, [r7, #20]
 14323 0722 1344     		add	r3, r3, r2
 14324 0724 664A     		ldr	r2, .L644+12
 14325 0726 1188     		ldrh	r1, [r2]	@ unaligned
 14326 0728 9278     		ldrb	r2, [r2, #2]
 14327 072a 1980     		strh	r1, [r3]	@ unaligned
 14328 072c 9A70     		strb	r2, [r3, #2]
1888:..\src/command_processing.c **** 
1889:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14329              		.loc 1 1889 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 323


 14330 072e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14331 0732 5C1C     		adds	r4, r3, #1
 14332 0734 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14333 0738 5E4A     		ldr	r2, .L644
 14334 073a 3421     		movs	r1, #52
 14335 073c 01FB03F3 		mul	r3, r1, r3
 14336 0740 1344     		add	r3, r3, r2
 14337 0742 0C33     		adds	r3, r3, #12
 14338 0744 1B68     		ldr	r3, [r3]
 14339 0746 07F11800 		add	r0, r7, #24
 14340 074a 2246     		mov	r2, r4
 14341 074c 6149     		ldr	r1, .L644+32
 14342 074e FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****             strcat(info_string, str);
 14343              		.loc 1 1890 0
 14344 0752 07F11803 		add	r3, r7, #24
 14345 0756 1946     		mov	r1, r3
 14346 0758 7869     		ldr	r0, [r7, #20]
 14347 075a FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14348              		.loc 1 1891 0
 14349 075e 7869     		ldr	r0, [r7, #20]
 14350 0760 FFF7FEFF 		bl	strlen
 14351 0764 0346     		mov	r3, r0
 14352 0766 1A46     		mov	r2, r3
 14353 0768 7B69     		ldr	r3, [r7, #20]
 14354 076a 1344     		add	r3, r3, r2
 14355 076c 544A     		ldr	r2, .L644+12
 14356 076e 1188     		ldrh	r1, [r2]	@ unaligned
 14357 0770 9278     		ldrb	r2, [r2, #2]
 14358 0772 1980     		strh	r1, [r3]	@ unaligned
 14359 0774 9A70     		strb	r2, [r3, #2]
1892:..\src/command_processing.c ****             
1893:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 14360              		.loc 1 1893 0
 14361 0776 D7F88030 		ldr	r3, [r7, #128]
 14362 077a 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 14363 077e 012B     		cmp	r3, #1
 14364 0780 23D1     		bne	.L554
1894:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 14365              		.loc 1 1894 0
 14366 0782 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14367 0786 5C1C     		adds	r4, r3, #1
 14368 0788 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14369 078c 494A     		ldr	r2, .L644
 14370 078e 3421     		movs	r1, #52
 14371 0790 01FB03F3 		mul	r3, r1, r3
 14372 0794 1344     		add	r3, r3, r2
 14373 0796 1433     		adds	r3, r3, #20
 14374 0798 1B68     		ldr	r3, [r3]
 14375 079a 07F11800 		add	r0, r7, #24
 14376 079e 2246     		mov	r2, r4
 14377 07a0 4D49     		ldr	r1, .L644+36
 14378 07a2 FFF7FEFF 		bl	sprintf
1895:..\src/command_processing.c ****                 strcat(info_string, str);
 14379              		.loc 1 1895 0
 14380 07a6 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 324


 14381 07aa 1946     		mov	r1, r3
 14382 07ac 7869     		ldr	r0, [r7, #20]
 14383 07ae FFF7FEFF 		bl	strcat
1896:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14384              		.loc 1 1896 0
 14385 07b2 7869     		ldr	r0, [r7, #20]
 14386 07b4 FFF7FEFF 		bl	strlen
 14387 07b8 0346     		mov	r3, r0
 14388 07ba 1A46     		mov	r2, r3
 14389 07bc 7B69     		ldr	r3, [r7, #20]
 14390 07be 1344     		add	r3, r3, r2
 14391 07c0 3F4A     		ldr	r2, .L644+12
 14392 07c2 1188     		ldrh	r1, [r2]	@ unaligned
 14393 07c4 9278     		ldrb	r2, [r2, #2]
 14394 07c6 1980     		strh	r1, [r3]	@ unaligned
 14395 07c8 9A70     		strb	r2, [r3, #2]
 14396              	.L554:
1897:..\src/command_processing.c ****             }
1898:..\src/command_processing.c ****             
1899:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14397              		.loc 1 1899 0
 14398 07ca 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14399 07ce 5A1C     		adds	r2, r3, #1
 14400 07d0 07F11803 		add	r3, r7, #24
 14401 07d4 4149     		ldr	r1, .L644+40
 14402 07d6 1846     		mov	r0, r3
 14403 07d8 FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****             strcat(info_string, str);
 14404              		.loc 1 1900 0
 14405 07dc 07F11803 		add	r3, r7, #24
 14406 07e0 1946     		mov	r1, r3
 14407 07e2 7869     		ldr	r0, [r7, #20]
 14408 07e4 FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c **** 
1902:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14409              		.loc 1 1902 0
 14410 07e8 7869     		ldr	r0, [r7, #20]
 14411 07ea FFF7FEFF 		bl	strlen
 14412 07ee 0346     		mov	r3, r0
 14413 07f0 1A46     		mov	r2, r3
 14414 07f2 7B69     		ldr	r3, [r7, #20]
 14415 07f4 1344     		add	r3, r3, r2
 14416 07f6 3A4A     		ldr	r2, .L644+44
 14417 07f8 1D46     		mov	r5, r3
 14418 07fa 1446     		mov	r4, r2
 14419 07fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14420 07fe 2860     		str	r0, [r5]	@ unaligned
 14421 0800 6960     		str	r1, [r5, #4]	@ unaligned
 14422 0802 AA60     		str	r2, [r5, #8]	@ unaligned
 14423 0804 EB60     		str	r3, [r5, #12]	@ unaligned
 14424 0806 2378     		ldrb	r3, [r4]
 14425 0808 2B74     		strb	r3, [r5, #16]
1903:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14426              		.loc 1 1903 0
 14427 080a D7F88030 		ldr	r3, [r7, #128]
 14428 080e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14429 0812 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 325


 14430 0814 6ED0     		beq	.L555
1904:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14431              		.loc 1 1904 0
 14432 0816 D7F88030 		ldr	r3, [r7, #128]
 14433 081a 1B68     		ldr	r3, [r3]
 14434 081c 1846     		mov	r0, r3
 14435 081e FFF7FEFF 		bl	__aeabi_i2d
 14436 0822 4FF00002 		mov	r2, #0
 14437 0826 2F4B     		ldr	r3, .L644+48
 14438 0828 FFF7FEFF 		bl	__aeabi_ddiv
 14439 082c 0346     		mov	r3, r0
 14440 082e 0C46     		mov	r4, r1
 14441 0830 07F11800 		add	r0, r7, #24
 14442 0834 1A46     		mov	r2, r3
 14443 0836 2346     		mov	r3, r4
 14444 0838 2B49     		ldr	r1, .L644+52
 14445 083a FFF7FEFF 		bl	sprintf
1905:..\src/command_processing.c ****                 strcat(info_string, str);
 14446              		.loc 1 1905 0
 14447 083e 07F11803 		add	r3, r7, #24
 14448 0842 1946     		mov	r1, r3
 14449 0844 7869     		ldr	r0, [r7, #20]
 14450 0846 FFF7FEFF 		bl	strcat
1906:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14451              		.loc 1 1906 0
 14452 084a D7F88030 		ldr	r3, [r7, #128]
 14453 084e 5B68     		ldr	r3, [r3, #4]
 14454 0850 1846     		mov	r0, r3
 14455 0852 FFF7FEFF 		bl	__aeabi_i2d
 14456 0856 4FF00002 		mov	r2, #0
 14457 085a 224B     		ldr	r3, .L644+48
 14458 085c FFF7FEFF 		bl	__aeabi_ddiv
 14459 0860 0346     		mov	r3, r0
 14460 0862 0C46     		mov	r4, r1
 14461 0864 07F11800 		add	r0, r7, #24
 14462 0868 1A46     		mov	r2, r3
 14463 086a 2346     		mov	r3, r4
 14464 086c 1F49     		ldr	r1, .L644+56
 14465 086e FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 14466              		.loc 1 1907 0
 14467 0872 07F11803 		add	r3, r7, #24
 14468 0876 1946     		mov	r1, r3
 14469 0878 7869     		ldr	r0, [r7, #20]
 14470 087a FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14471              		.loc 1 1908 0
 14472 087e D7F88030 		ldr	r3, [r7, #128]
 14473 0882 9B68     		ldr	r3, [r3, #8]
 14474 0884 1846     		mov	r0, r3
 14475 0886 FFF7FEFF 		bl	__aeabi_i2d
 14476 088a 4FF00002 		mov	r2, #0
 14477 088e 154B     		ldr	r3, .L644+48
 14478 0890 FFF7FEFF 		bl	__aeabi_ddiv
 14479 0894 0346     		mov	r3, r0
 14480 0896 0C46     		mov	r4, r1
 14481 0898 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 326


 14482 089c 1A46     		mov	r2, r3
 14483 089e 2346     		mov	r3, r4
 14484 08a0 1349     		ldr	r1, .L644+60
 14485 08a2 FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 14486              		.loc 1 1909 0
 14487 08a6 07F11803 		add	r3, r7, #24
 14488 08aa 1946     		mov	r1, r3
 14489 08ac 7869     		ldr	r0, [r7, #20]
 14490 08ae FFF7FEFF 		bl	strcat
 14491 08b2 6DE0     		b	.L556
 14492              	.L645:
 14493              		.align	2
 14494              	.L644:
 14495 08b4 00000000 		.word	g_meas
 14496 08b8 90100000 		.word	.LC161
 14497 08bc 94100000 		.word	.LC162
 14498 08c0 A80E0000 		.word	.LC132
 14499 08c4 00000000 		.word	dev_tension
 14500 08c8 98100000 		.word	.LC163
 14501 08cc 00000000 		.word	pow_tension
 14502 08d0 B8100000 		.word	.LC164
 14503 08d4 E0100000 		.word	.LC165
 14504 08d8 F8100000 		.word	.LC166
 14505 08dc 20110000 		.word	.LC167
 14506 08e0 3C110000 		.word	.LC168
 14507 08e4 0000F040 		.word	1089470464
 14508 08e8 50110000 		.word	.LC169
 14509 08ec 5C110000 		.word	.LC170
 14510 08f0 68110000 		.word	.LC171
 14511              	.L555:
1910:..\src/command_processing.c ****             }
1911:..\src/command_processing.c ****             else { 
1912:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14512              		.loc 1 1912 0
 14513 08f4 D7F88030 		ldr	r3, [r7, #128]
 14514 08f8 9B69     		ldr	r3, [r3, #24]
 14515 08fa 1846     		mov	r0, r3
 14516 08fc FFF7FEFF 		bl	__aeabi_i2d
 14517 0900 4FF00002 		mov	r2, #0
 14518 0904 CD4B     		ldr	r3, .L646
 14519 0906 FFF7FEFF 		bl	__aeabi_ddiv
 14520 090a 0346     		mov	r3, r0
 14521 090c 0C46     		mov	r4, r1
 14522 090e 07F11800 		add	r0, r7, #24
 14523 0912 1A46     		mov	r2, r3
 14524 0914 2346     		mov	r3, r4
 14525 0916 CA49     		ldr	r1, .L646+4
 14526 0918 FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****                 strcat(info_string, str);
 14527              		.loc 1 1913 0
 14528 091c 07F11803 		add	r3, r7, #24
 14529 0920 1946     		mov	r1, r3
 14530 0922 7869     		ldr	r0, [r7, #20]
 14531 0924 FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14532              		.loc 1 1914 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 327


 14533 0928 D7F88030 		ldr	r3, [r7, #128]
 14534 092c DB69     		ldr	r3, [r3, #28]
 14535 092e 1846     		mov	r0, r3
 14536 0930 FFF7FEFF 		bl	__aeabi_i2d
 14537 0934 4FF00002 		mov	r2, #0
 14538 0938 C04B     		ldr	r3, .L646
 14539 093a FFF7FEFF 		bl	__aeabi_ddiv
 14540 093e 0346     		mov	r3, r0
 14541 0940 0C46     		mov	r4, r1
 14542 0942 07F11800 		add	r0, r7, #24
 14543 0946 1A46     		mov	r2, r3
 14544 0948 2346     		mov	r3, r4
 14545 094a BE49     		ldr	r1, .L646+8
 14546 094c FFF7FEFF 		bl	sprintf
1915:..\src/command_processing.c ****                 strcat(info_string, str);
 14547              		.loc 1 1915 0
 14548 0950 07F11803 		add	r3, r7, #24
 14549 0954 1946     		mov	r1, r3
 14550 0956 7869     		ldr	r0, [r7, #20]
 14551 0958 FFF7FEFF 		bl	strcat
1916:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14552              		.loc 1 1916 0
 14553 095c D7F88030 		ldr	r3, [r7, #128]
 14554 0960 1B6A     		ldr	r3, [r3, #32]
 14555 0962 1846     		mov	r0, r3
 14556 0964 FFF7FEFF 		bl	__aeabi_i2d
 14557 0968 4FF00002 		mov	r2, #0
 14558 096c B34B     		ldr	r3, .L646
 14559 096e FFF7FEFF 		bl	__aeabi_ddiv
 14560 0972 0346     		mov	r3, r0
 14561 0974 0C46     		mov	r4, r1
 14562 0976 07F11800 		add	r0, r7, #24
 14563 097a 1A46     		mov	r2, r3
 14564 097c 2346     		mov	r3, r4
 14565 097e B249     		ldr	r1, .L646+12
 14566 0980 FFF7FEFF 		bl	sprintf
1917:..\src/command_processing.c ****                 strcat(info_string, str);
 14567              		.loc 1 1917 0
 14568 0984 07F11803 		add	r3, r7, #24
 14569 0988 1946     		mov	r1, r3
 14570 098a 7869     		ldr	r0, [r7, #20]
 14571 098c FFF7FEFF 		bl	strcat
 14572              	.L556:
1918:..\src/command_processing.c ****             }
1919:..\src/command_processing.c **** 
1920:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14573              		.loc 1 1920 0
 14574 0990 7869     		ldr	r0, [r7, #20]
 14575 0992 FFF7FEFF 		bl	strlen
 14576 0996 0346     		mov	r3, r0
 14577 0998 1A46     		mov	r2, r3
 14578 099a 7B69     		ldr	r3, [r7, #20]
 14579 099c 1344     		add	r3, r3, r2
 14580 099e AB4A     		ldr	r2, .L646+16
 14581 09a0 1D46     		mov	r5, r3
 14582 09a2 1446     		mov	r4, r2
 14583 09a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 328


 14584 09a6 2860     		str	r0, [r5]	@ unaligned
 14585 09a8 6960     		str	r1, [r5, #4]	@ unaligned
 14586 09aa AA60     		str	r2, [r5, #8]	@ unaligned
 14587 09ac EB60     		str	r3, [r5, #12]	@ unaligned
 14588 09ae 03CC     		ldmia	r4!, {r0, r1}
 14589 09b0 2861     		str	r0, [r5, #16]	@ unaligned
 14590 09b2 6961     		str	r1, [r5, #20]	@ unaligned
 14591 09b4 2378     		ldrb	r3, [r4]
 14592 09b6 2B76     		strb	r3, [r5, #24]
1921:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14593              		.loc 1 1921 0
 14594 09b8 D7F88030 		ldr	r3, [r7, #128]
 14595 09bc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14596 09c0 032B     		cmp	r3, #3
 14597 09c2 4ED0     		beq	.L557
1922:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14598              		.loc 1 1922 0
 14599 09c4 D7F88030 		ldr	r3, [r7, #128]
 14600 09c8 DB68     		ldr	r3, [r3, #12]
 14601 09ca 1846     		mov	r0, r3
 14602 09cc FFF7FEFF 		bl	__aeabi_i2d
 14603 09d0 4FF00002 		mov	r2, #0
 14604 09d4 994B     		ldr	r3, .L646
 14605 09d6 FFF7FEFF 		bl	__aeabi_ddiv
 14606 09da 0346     		mov	r3, r0
 14607 09dc 0C46     		mov	r4, r1
 14608 09de 07F11800 		add	r0, r7, #24
 14609 09e2 1A46     		mov	r2, r3
 14610 09e4 2346     		mov	r3, r4
 14611 09e6 9649     		ldr	r1, .L646+4
 14612 09e8 FFF7FEFF 		bl	sprintf
1923:..\src/command_processing.c ****                 strcat(info_string, str);
 14613              		.loc 1 1923 0
 14614 09ec 07F11803 		add	r3, r7, #24
 14615 09f0 1946     		mov	r1, r3
 14616 09f2 7869     		ldr	r0, [r7, #20]
 14617 09f4 FFF7FEFF 		bl	strcat
1924:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14618              		.loc 1 1924 0
 14619 09f8 D7F88030 		ldr	r3, [r7, #128]
 14620 09fc 1B69     		ldr	r3, [r3, #16]
 14621 09fe 1846     		mov	r0, r3
 14622 0a00 FFF7FEFF 		bl	__aeabi_i2d
 14623 0a04 4FF00002 		mov	r2, #0
 14624 0a08 8C4B     		ldr	r3, .L646
 14625 0a0a FFF7FEFF 		bl	__aeabi_ddiv
 14626 0a0e 0346     		mov	r3, r0
 14627 0a10 0C46     		mov	r4, r1
 14628 0a12 07F11800 		add	r0, r7, #24
 14629 0a16 1A46     		mov	r2, r3
 14630 0a18 2346     		mov	r3, r4
 14631 0a1a 8A49     		ldr	r1, .L646+8
 14632 0a1c FFF7FEFF 		bl	sprintf
1925:..\src/command_processing.c ****                 strcat(info_string, str);
 14633              		.loc 1 1925 0
 14634 0a20 07F11803 		add	r3, r7, #24
 14635 0a24 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 329


 14636 0a26 7869     		ldr	r0, [r7, #20]
 14637 0a28 FFF7FEFF 		bl	strcat
1926:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14638              		.loc 1 1926 0
 14639 0a2c D7F88030 		ldr	r3, [r7, #128]
 14640 0a30 5B69     		ldr	r3, [r3, #20]
 14641 0a32 1846     		mov	r0, r3
 14642 0a34 FFF7FEFF 		bl	__aeabi_i2d
 14643 0a38 4FF00002 		mov	r2, #0
 14644 0a3c 7F4B     		ldr	r3, .L646
 14645 0a3e FFF7FEFF 		bl	__aeabi_ddiv
 14646 0a42 0346     		mov	r3, r0
 14647 0a44 0C46     		mov	r4, r1
 14648 0a46 07F11800 		add	r0, r7, #24
 14649 0a4a 1A46     		mov	r2, r3
 14650 0a4c 2346     		mov	r3, r4
 14651 0a4e 7E49     		ldr	r1, .L646+12
 14652 0a50 FFF7FEFF 		bl	sprintf
1927:..\src/command_processing.c ****                 strcat(info_string, str);
 14653              		.loc 1 1927 0
 14654 0a54 07F11803 		add	r3, r7, #24
 14655 0a58 1946     		mov	r1, r3
 14656 0a5a 7869     		ldr	r0, [r7, #20]
 14657 0a5c FFF7FEFF 		bl	strcat
 14658 0a60 4DE0     		b	.L558
 14659              	.L557:
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****             }
1930:..\src/command_processing.c ****             else {
1931:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14660              		.loc 1 1931 0
 14661 0a62 D7F88030 		ldr	r3, [r7, #128]
 14662 0a66 5B6A     		ldr	r3, [r3, #36]
 14663 0a68 1846     		mov	r0, r3
 14664 0a6a FFF7FEFF 		bl	__aeabi_i2d
 14665 0a6e 4FF00002 		mov	r2, #0
 14666 0a72 724B     		ldr	r3, .L646
 14667 0a74 FFF7FEFF 		bl	__aeabi_ddiv
 14668 0a78 0346     		mov	r3, r0
 14669 0a7a 0C46     		mov	r4, r1
 14670 0a7c 07F11800 		add	r0, r7, #24
 14671 0a80 1A46     		mov	r2, r3
 14672 0a82 2346     		mov	r3, r4
 14673 0a84 6E49     		ldr	r1, .L646+4
 14674 0a86 FFF7FEFF 		bl	sprintf
1932:..\src/command_processing.c ****                 strcat(info_string, str);
 14675              		.loc 1 1932 0
 14676 0a8a 07F11803 		add	r3, r7, #24
 14677 0a8e 1946     		mov	r1, r3
 14678 0a90 7869     		ldr	r0, [r7, #20]
 14679 0a92 FFF7FEFF 		bl	strcat
1933:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14680              		.loc 1 1933 0
 14681 0a96 D7F88030 		ldr	r3, [r7, #128]
 14682 0a9a 9B6A     		ldr	r3, [r3, #40]
 14683 0a9c 1846     		mov	r0, r3
 14684 0a9e FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 330


 14685 0aa2 4FF00002 		mov	r2, #0
 14686 0aa6 654B     		ldr	r3, .L646
 14687 0aa8 FFF7FEFF 		bl	__aeabi_ddiv
 14688 0aac 0346     		mov	r3, r0
 14689 0aae 0C46     		mov	r4, r1
 14690 0ab0 07F11800 		add	r0, r7, #24
 14691 0ab4 1A46     		mov	r2, r3
 14692 0ab6 2346     		mov	r3, r4
 14693 0ab8 6249     		ldr	r1, .L646+8
 14694 0aba FFF7FEFF 		bl	sprintf
1934:..\src/command_processing.c ****                 strcat(info_string, str);
 14695              		.loc 1 1934 0
 14696 0abe 07F11803 		add	r3, r7, #24
 14697 0ac2 1946     		mov	r1, r3
 14698 0ac4 7869     		ldr	r0, [r7, #20]
 14699 0ac6 FFF7FEFF 		bl	strcat
1935:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14700              		.loc 1 1935 0
 14701 0aca D7F88030 		ldr	r3, [r7, #128]
 14702 0ace DB6A     		ldr	r3, [r3, #44]
 14703 0ad0 1846     		mov	r0, r3
 14704 0ad2 FFF7FEFF 		bl	__aeabi_i2d
 14705 0ad6 4FF00002 		mov	r2, #0
 14706 0ada 584B     		ldr	r3, .L646
 14707 0adc FFF7FEFF 		bl	__aeabi_ddiv
 14708 0ae0 0346     		mov	r3, r0
 14709 0ae2 0C46     		mov	r4, r1
 14710 0ae4 07F11800 		add	r0, r7, #24
 14711 0ae8 1A46     		mov	r2, r3
 14712 0aea 2346     		mov	r3, r4
 14713 0aec 5649     		ldr	r1, .L646+12
 14714 0aee FFF7FEFF 		bl	sprintf
1936:..\src/command_processing.c ****                 strcat(info_string, str);
 14715              		.loc 1 1936 0
 14716 0af2 07F11803 		add	r3, r7, #24
 14717 0af6 1946     		mov	r1, r3
 14718 0af8 7869     		ldr	r0, [r7, #20]
 14719 0afa FFF7FEFF 		bl	strcat
 14720              	.L558:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 14721              		.loc 1 1938 0
 14722 0afe D7F88030 		ldr	r3, [r7, #128]
 14723 0b02 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14724 0b06 012B     		cmp	r3, #1
 14725 0b08 14D1     		bne	.L559
1939:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14726              		.loc 1 1939 0
 14727 0b0a 7869     		ldr	r0, [r7, #20]
 14728 0b0c FFF7FEFF 		bl	strlen
 14729 0b10 0346     		mov	r3, r0
 14730 0b12 1A46     		mov	r2, r3
 14731 0b14 7B69     		ldr	r3, [r7, #20]
 14732 0b16 1344     		add	r3, r3, r2
 14733 0b18 4D4A     		ldr	r2, .L646+20
 14734 0b1a 1D46     		mov	r5, r3
 14735 0b1c 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 331


 14736 0b1e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14737 0b20 2860     		str	r0, [r5]	@ unaligned
 14738 0b22 6960     		str	r1, [r5, #4]	@ unaligned
 14739 0b24 AA60     		str	r2, [r5, #8]	@ unaligned
 14740 0b26 EB60     		str	r3, [r5, #12]	@ unaligned
 14741 0b28 03CC     		ldmia	r4!, {r0, r1}
 14742 0b2a 2861     		str	r0, [r5, #16]	@ unaligned
 14743 0b2c 6961     		str	r1, [r5, #20]	@ unaligned
 14744 0b2e 2388     		ldrh	r3, [r4]	@ unaligned
 14745 0b30 2B83     		strh	r3, [r5, #24]	@ unaligned
 14746 0b32 13E0     		b	.L560
 14747              	.L559:
1940:..\src/command_processing.c ****             else
1941:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 14748              		.loc 1 1941 0
 14749 0b34 7869     		ldr	r0, [r7, #20]
 14750 0b36 FFF7FEFF 		bl	strlen
 14751 0b3a 0346     		mov	r3, r0
 14752 0b3c 1A46     		mov	r2, r3
 14753 0b3e 7B69     		ldr	r3, [r7, #20]
 14754 0b40 1344     		add	r3, r3, r2
 14755 0b42 444A     		ldr	r2, .L646+24
 14756 0b44 1D46     		mov	r5, r3
 14757 0b46 1446     		mov	r4, r2
 14758 0b48 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14759 0b4a 2860     		str	r0, [r5]	@ unaligned
 14760 0b4c 6960     		str	r1, [r5, #4]	@ unaligned
 14761 0b4e AA60     		str	r2, [r5, #8]	@ unaligned
 14762 0b50 EB60     		str	r3, [r5, #12]	@ unaligned
 14763 0b52 03CC     		ldmia	r4!, {r0, r1}
 14764 0b54 2861     		str	r0, [r5, #16]	@ unaligned
 14765 0b56 6961     		str	r1, [r5, #20]	@ unaligned
 14766 0b58 2378     		ldrb	r3, [r4]
 14767 0b5a 2B76     		strb	r3, [r5, #24]
 14768              	.L560:
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14769              		.loc 1 1943 0
 14770 0b5c D7F88030 		ldr	r3, [r7, #128]
 14771 0b60 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14772 0b64 062B     		cmp	r3, #6
 14773 0b66 00F2D180 		bhi	.L561
 14774 0b6a 01A2     		adr	r2, .L563
 14775 0b6c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14776              		.p2align 2
 14777              	.L563:
 14778 0b70 8D0B0000 		.word	.L562+1
 14779 0b74 B10B0000 		.word	.L564+1
 14780 0b78 D90B0000 		.word	.L565+1
 14781 0b7c 0B0C0000 		.word	.L566+1
 14782 0b80 690C0000 		.word	.L567+1
 14783 0b84 970C0000 		.word	.L568+1
 14784 0b88 C70C0000 		.word	.L569+1
 14785              		.p2align 1
 14786              	.L562:
1944:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1945:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 332


 14787              		.loc 1 1945 0
 14788 0b8c 7869     		ldr	r0, [r7, #20]
 14789 0b8e FFF7FEFF 		bl	strlen
 14790 0b92 0346     		mov	r3, r0
 14791 0b94 1A46     		mov	r2, r3
 14792 0b96 7B69     		ldr	r3, [r7, #20]
 14793 0b98 1344     		add	r3, r3, r2
 14794 0b9a 2F4A     		ldr	r2, .L646+28
 14795 0b9c 1D46     		mov	r5, r3
 14796 0b9e 1446     		mov	r4, r2
 14797 0ba0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14798 0ba2 2860     		str	r0, [r5]	@ unaligned
 14799 0ba4 6960     		str	r1, [r5, #4]	@ unaligned
 14800 0ba6 AA60     		str	r2, [r5, #8]	@ unaligned
 14801 0ba8 EB60     		str	r3, [r5, #12]	@ unaligned
 14802 0baa 2388     		ldrh	r3, [r4]	@ unaligned
 14803 0bac 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                     break;
 14804              		.loc 1 1946 0
 14805 0bae ADE0     		b	.L561
 14806              	.L564:
1947:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1948:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14807              		.loc 1 1948 0
 14808 0bb0 7869     		ldr	r0, [r7, #20]
 14809 0bb2 FFF7FEFF 		bl	strlen
 14810 0bb6 0346     		mov	r3, r0
 14811 0bb8 1A46     		mov	r2, r3
 14812 0bba 7B69     		ldr	r3, [r7, #20]
 14813 0bbc 1344     		add	r3, r3, r2
 14814 0bbe 274A     		ldr	r2, .L646+32
 14815 0bc0 1D46     		mov	r5, r3
 14816 0bc2 1446     		mov	r4, r2
 14817 0bc4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14818 0bc6 2860     		str	r0, [r5]	@ unaligned
 14819 0bc8 6960     		str	r1, [r5, #4]	@ unaligned
 14820 0bca AA60     		str	r2, [r5, #8]	@ unaligned
 14821 0bcc EB60     		str	r3, [r5, #12]	@ unaligned
 14822 0bce 2068     		ldr	r0, [r4]	@ unaligned
 14823 0bd0 2861     		str	r0, [r5, #16]	@ unaligned
 14824 0bd2 2379     		ldrb	r3, [r4, #4]
 14825 0bd4 2B75     		strb	r3, [r5, #20]
1949:..\src/command_processing.c ****                     break;
 14826              		.loc 1 1949 0
 14827 0bd6 99E0     		b	.L561
 14828              	.L565:
1950:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1951:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14829              		.loc 1 1951 0
 14830 0bd8 7869     		ldr	r0, [r7, #20]
 14831 0bda FFF7FEFF 		bl	strlen
 14832 0bde 0346     		mov	r3, r0
 14833 0be0 1A46     		mov	r2, r3
 14834 0be2 7B69     		ldr	r3, [r7, #20]
 14835 0be4 1344     		add	r3, r3, r2
 14836 0be6 1E4A     		ldr	r2, .L646+36
 14837 0be8 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 333


 14838 0bea 1446     		mov	r4, r2
 14839 0bec 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14840 0bee 2860     		str	r0, [r5]	@ unaligned
 14841 0bf0 6960     		str	r1, [r5, #4]	@ unaligned
 14842 0bf2 AA60     		str	r2, [r5, #8]	@ unaligned
 14843 0bf4 EB60     		str	r3, [r5, #12]	@ unaligned
 14844 0bf6 07CC     		ldmia	r4!, {r0, r1, r2}
 14845 0bf8 2861     		str	r0, [r5, #16]	@ unaligned
 14846 0bfa 6961     		str	r1, [r5, #20]	@ unaligned
 14847 0bfc AA61     		str	r2, [r5, #24]	@ unaligned
 14848 0bfe 2388     		ldrh	r3, [r4]	@ unaligned
 14849 0c00 A278     		ldrb	r2, [r4, #2]
 14850 0c02 AB83     		strh	r3, [r5, #28]	@ unaligned
 14851 0c04 1346     		mov	r3, r2
 14852 0c06 AB77     		strb	r3, [r5, #30]
1952:..\src/command_processing.c ****                     break;
 14853              		.loc 1 1952 0
 14854 0c08 80E0     		b	.L561
 14855              	.L566:
1953:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1954:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 14856              		.loc 1 1954 0
 14857 0c0a 7869     		ldr	r0, [r7, #20]
 14858 0c0c FFF7FEFF 		bl	strlen
 14859 0c10 0346     		mov	r3, r0
 14860 0c12 1A46     		mov	r2, r3
 14861 0c14 7B69     		ldr	r3, [r7, #20]
 14862 0c16 1344     		add	r3, r3, r2
 14863 0c18 124A     		ldr	r2, .L646+40
 14864 0c1a 1D46     		mov	r5, r3
 14865 0c1c 1446     		mov	r4, r2
 14866 0c1e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14867 0c20 2860     		str	r0, [r5]	@ unaligned
 14868 0c22 6960     		str	r1, [r5, #4]	@ unaligned
 14869 0c24 AA60     		str	r2, [r5, #8]	@ unaligned
 14870 0c26 EB60     		str	r3, [r5, #12]	@ unaligned
 14871 0c28 03CC     		ldmia	r4!, {r0, r1}
 14872 0c2a 2861     		str	r0, [r5, #16]	@ unaligned
 14873 0c2c 6961     		str	r1, [r5, #20]	@ unaligned
 14874 0c2e 2388     		ldrh	r3, [r4]	@ unaligned
 14875 0c30 A278     		ldrb	r2, [r4, #2]
 14876 0c32 2B83     		strh	r3, [r5, #24]	@ unaligned
 14877 0c34 1346     		mov	r3, r2
 14878 0c36 AB76     		strb	r3, [r5, #26]
1955:..\src/command_processing.c ****                     break;
 14879              		.loc 1 1955 0
 14880 0c38 68E0     		b	.L561
 14881              	.L647:
 14882 0c3a 00BF     		.align	2
 14883              	.L646:
 14884 0c3c 0000F040 		.word	1089470464
 14885 0c40 50110000 		.word	.LC169
 14886 0c44 5C110000 		.word	.LC170
 14887 0c48 68110000 		.word	.LC171
 14888 0c4c 74110000 		.word	.LC172
 14889 0c50 90110000 		.word	.LC173
 14890 0c54 AC110000 		.word	.LC174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 334


 14891 0c58 C8110000 		.word	.LC175
 14892 0c5c DC110000 		.word	.LC176
 14893 0c60 F4110000 		.word	.LC177
 14894 0c64 14120000 		.word	.LC178
 14895              	.L567:
1956:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1957:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14896              		.loc 1 1957 0
 14897 0c68 7869     		ldr	r0, [r7, #20]
 14898 0c6a FFF7FEFF 		bl	strlen
 14899 0c6e 0346     		mov	r3, r0
 14900 0c70 1A46     		mov	r2, r3
 14901 0c72 7B69     		ldr	r3, [r7, #20]
 14902 0c74 1344     		add	r3, r3, r2
 14903 0c76 994A     		ldr	r2, .L648
 14904 0c78 1C46     		mov	r4, r3
 14905 0c7a 1546     		mov	r5, r2
 14906 0c7c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14907 0c7e 2060     		str	r0, [r4]	@ unaligned
 14908 0c80 6160     		str	r1, [r4, #4]	@ unaligned
 14909 0c82 A260     		str	r2, [r4, #8]	@ unaligned
 14910 0c84 E360     		str	r3, [r4, #12]	@ unaligned
 14911 0c86 2868     		ldr	r0, [r5]	@ unaligned
 14912 0c88 2061     		str	r0, [r4, #16]	@ unaligned
 14913 0c8a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14914 0c8c AA79     		ldrb	r2, [r5, #6]
 14915 0c8e A382     		strh	r3, [r4, #20]	@ unaligned
 14916 0c90 1346     		mov	r3, r2
 14917 0c92 A375     		strb	r3, [r4, #22]
1958:..\src/command_processing.c ****                     break;
 14918              		.loc 1 1958 0
 14919 0c94 3AE0     		b	.L561
 14920              	.L568:
1959:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1960:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14921              		.loc 1 1960 0
 14922 0c96 7869     		ldr	r0, [r7, #20]
 14923 0c98 FFF7FEFF 		bl	strlen
 14924 0c9c 0346     		mov	r3, r0
 14925 0c9e 1A46     		mov	r2, r3
 14926 0ca0 7B69     		ldr	r3, [r7, #20]
 14927 0ca2 1344     		add	r3, r3, r2
 14928 0ca4 8E4A     		ldr	r2, .L648+4
 14929 0ca6 1D46     		mov	r5, r3
 14930 0ca8 1446     		mov	r4, r2
 14931 0caa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14932 0cac 2860     		str	r0, [r5]	@ unaligned
 14933 0cae 6960     		str	r1, [r5, #4]	@ unaligned
 14934 0cb0 AA60     		str	r2, [r5, #8]	@ unaligned
 14935 0cb2 EB60     		str	r3, [r5, #12]	@ unaligned
 14936 0cb4 03CC     		ldmia	r4!, {r0, r1}
 14937 0cb6 2861     		str	r0, [r5, #16]	@ unaligned
 14938 0cb8 6961     		str	r1, [r5, #20]	@ unaligned
 14939 0cba 2388     		ldrh	r3, [r4]	@ unaligned
 14940 0cbc A278     		ldrb	r2, [r4, #2]
 14941 0cbe 2B83     		strh	r3, [r5, #24]	@ unaligned
 14942 0cc0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 335


 14943 0cc2 AB76     		strb	r3, [r5, #26]
1961:..\src/command_processing.c ****                     break;
 14944              		.loc 1 1961 0
 14945 0cc4 22E0     		b	.L561
 14946              	.L569:
1962:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1963:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 14947              		.loc 1 1963 0
 14948 0cc6 7869     		ldr	r0, [r7, #20]
 14949 0cc8 FFF7FEFF 		bl	strlen
 14950 0ccc 0346     		mov	r3, r0
 14951 0cce 1A46     		mov	r2, r3
 14952 0cd0 7B69     		ldr	r3, [r7, #20]
 14953 0cd2 1344     		add	r3, r3, r2
 14954 0cd4 834A     		ldr	r2, .L648+8
 14955 0cd6 1546     		mov	r5, r2
 14956 0cd8 9E46     		mov	lr, r3
 14957 0cda 05F1200C 		add	ip, r5, #32
 14958              	.L570:
 14959 0cde 7446     		mov	r4, lr
 14960 0ce0 2E46     		mov	r6, r5
 14961 0ce2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14962 0ce4 2060     		str	r0, [r4]	@ unaligned
 14963 0ce6 6160     		str	r1, [r4, #4]	@ unaligned
 14964 0ce8 A260     		str	r2, [r4, #8]	@ unaligned
 14965 0cea E360     		str	r3, [r4, #12]	@ unaligned
 14966 0cec 1035     		adds	r5, r5, #16
 14967 0cee 0EF1100E 		add	lr, lr, #16
 14968 0cf2 6545     		cmp	r5, ip
 14969 0cf4 F3D1     		bne	.L570
 14970 0cf6 7446     		mov	r4, lr
 14971 0cf8 2B46     		mov	r3, r5
 14972 0cfa 07CB     		ldmia	r3!, {r0, r1, r2}
 14973 0cfc 2060     		str	r0, [r4]	@ unaligned
 14974 0cfe 6160     		str	r1, [r4, #4]	@ unaligned
 14975 0d00 A260     		str	r2, [r4, #8]	@ unaligned
 14976 0d02 1A88     		ldrh	r2, [r3]	@ unaligned
 14977 0d04 9B78     		ldrb	r3, [r3, #2]
 14978 0d06 A281     		strh	r2, [r4, #12]	@ unaligned
 14979 0d08 A373     		strb	r3, [r4, #14]
1964:..\src/command_processing.c ****                     break;
 14980              		.loc 1 1964 0
 14981 0d0a 00BF     		nop
 14982              	.L561:
1965:..\src/command_processing.c ****             }
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14983              		.loc 1 1967 0
 14984 0d0c D7F88030 		ldr	r3, [r7, #128]
 14985 0d10 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14986 0d14 032B     		cmp	r3, #3
 14987 0d16 64D8     		bhi	.L639
 14988 0d18 01A2     		adr	r2, .L573
 14989 0d1a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14990 0d1e 00BF     		.p2align 2
 14991              	.L573:
 14992 0d20 310D0000 		.word	.L572+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 336


 14993 0d24 5B0D0000 		.word	.L574+1
 14994 0d28 7F0D0000 		.word	.L575+1
 14995 0d2c A50D0000 		.word	.L576+1
 14996              		.p2align 1
 14997              	.L572:
1968:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1969:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14998              		.loc 1 1969 0
 14999 0d30 7869     		ldr	r0, [r7, #20]
 15000 0d32 FFF7FEFF 		bl	strlen
 15001 0d36 0346     		mov	r3, r0
 15002 0d38 1A46     		mov	r2, r3
 15003 0d3a 7B69     		ldr	r3, [r7, #20]
 15004 0d3c 1344     		add	r3, r3, r2
 15005 0d3e 6A4A     		ldr	r2, .L648+12
 15006 0d40 1D46     		mov	r5, r3
 15007 0d42 1446     		mov	r4, r2
 15008 0d44 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15009 0d46 2860     		str	r0, [r5]	@ unaligned
 15010 0d48 6960     		str	r1, [r5, #4]	@ unaligned
 15011 0d4a AA60     		str	r2, [r5, #8]	@ unaligned
 15012 0d4c EB60     		str	r3, [r5, #12]	@ unaligned
 15013 0d4e 03CC     		ldmia	r4!, {r0, r1}
 15014 0d50 2861     		str	r0, [r5, #16]	@ unaligned
 15015 0d52 6961     		str	r1, [r5, #20]	@ unaligned
 15016 0d54 2378     		ldrb	r3, [r4]
 15017 0d56 2B76     		strb	r3, [r5, #24]
1970:..\src/command_processing.c ****                     break;
 15018              		.loc 1 1970 0
 15019 0d58 44E0     		b	.L577
 15020              	.L574:
1971:..\src/command_processing.c ****                 case CONTROL_PWM:
1972:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15021              		.loc 1 1972 0
 15022 0d5a 7869     		ldr	r0, [r7, #20]
 15023 0d5c FFF7FEFF 		bl	strlen
 15024 0d60 0346     		mov	r3, r0
 15025 0d62 1A46     		mov	r2, r3
 15026 0d64 7B69     		ldr	r3, [r7, #20]
 15027 0d66 1344     		add	r3, r3, r2
 15028 0d68 604A     		ldr	r2, .L648+16
 15029 0d6a 1D46     		mov	r5, r3
 15030 0d6c 1446     		mov	r4, r2
 15031 0d6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15032 0d70 2860     		str	r0, [r5]	@ unaligned
 15033 0d72 6960     		str	r1, [r5, #4]	@ unaligned
 15034 0d74 AA60     		str	r2, [r5, #8]	@ unaligned
 15035 0d76 EB60     		str	r3, [r5, #12]	@ unaligned
 15036 0d78 2068     		ldr	r0, [r4]	@ unaligned
 15037 0d7a 2861     		str	r0, [r5, #16]	@ unaligned
1973:..\src/command_processing.c ****                     break;
 15038              		.loc 1 1973 0
 15039 0d7c 32E0     		b	.L577
 15040              	.L575:
1974:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1975:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15041              		.loc 1 1975 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 337


 15042 0d7e 7869     		ldr	r0, [r7, #20]
 15043 0d80 FFF7FEFF 		bl	strlen
 15044 0d84 0346     		mov	r3, r0
 15045 0d86 1A46     		mov	r2, r3
 15046 0d88 7B69     		ldr	r3, [r7, #20]
 15047 0d8a 1344     		add	r3, r3, r2
 15048 0d8c 584A     		ldr	r2, .L648+20
 15049 0d8e 1D46     		mov	r5, r3
 15050 0d90 1446     		mov	r4, r2
 15051 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15052 0d94 2860     		str	r0, [r5]	@ unaligned
 15053 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15054 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15055 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15056 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15057 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15058 0da0 6961     		str	r1, [r5, #20]	@ unaligned
1976:..\src/command_processing.c ****                     break;
 15059              		.loc 1 1976 0
 15060 0da2 1FE0     		b	.L577
 15061              	.L576:
1977:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1978:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15062              		.loc 1 1978 0
 15063 0da4 7869     		ldr	r0, [r7, #20]
 15064 0da6 FFF7FEFF 		bl	strlen
 15065 0daa 0346     		mov	r3, r0
 15066 0dac 1A46     		mov	r2, r3
 15067 0dae 7B69     		ldr	r3, [r7, #20]
 15068 0db0 1344     		add	r3, r3, r2
 15069 0db2 504A     		ldr	r2, .L648+24
 15070 0db4 1446     		mov	r4, r2
 15071 0db6 9E46     		mov	lr, r3
 15072 0db8 04F1200C 		add	ip, r4, #32
 15073              	.L578:
 15074 0dbc 7546     		mov	r5, lr
 15075 0dbe 2646     		mov	r6, r4
 15076 0dc0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15077 0dc2 2860     		str	r0, [r5]	@ unaligned
 15078 0dc4 6960     		str	r1, [r5, #4]	@ unaligned
 15079 0dc6 AA60     		str	r2, [r5, #8]	@ unaligned
 15080 0dc8 EB60     		str	r3, [r5, #12]	@ unaligned
 15081 0dca 1034     		adds	r4, r4, #16
 15082 0dcc 0EF1100E 		add	lr, lr, #16
 15083 0dd0 6445     		cmp	r4, ip
 15084 0dd2 F3D1     		bne	.L578
 15085 0dd4 7346     		mov	r3, lr
 15086 0dd6 2246     		mov	r2, r4
 15087 0dd8 1068     		ldr	r0, [r2]	@ unaligned
 15088 0dda 1860     		str	r0, [r3]	@ unaligned
 15089 0ddc 1279     		ldrb	r2, [r2, #4]
 15090 0dde 1A71     		strb	r2, [r3, #4]
1979:..\src/command_processing.c ****                     break;
 15091              		.loc 1 1979 0
 15092 0de0 00E0     		b	.L577
 15093              	.L639:
1980:..\src/command_processing.c ****                 default:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 338


1981:..\src/command_processing.c ****                     break;
 15094              		.loc 1 1981 0
 15095 0de2 00BF     		nop
 15096              	.L577:
1982:..\src/command_processing.c ****             }
1983:..\src/command_processing.c **** 
1984:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15097              		.loc 1 1984 0
 15098 0de4 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15099 0de8 D7F88810 		ldr	r1, [r7, #136]
 15100 0dec 1346     		mov	r3, r2
 15101 0dee 5B00     		lsls	r3, r3, #1
 15102 0df0 1344     		add	r3, r3, r2
 15103 0df2 1B01     		lsls	r3, r3, #4
 15104 0df4 0B44     		add	r3, r3, r1
 15105 0df6 03F5D873 		add	r3, r3, #432
 15106 0dfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15107 0dfc 002B     		cmp	r3, #0
 15108 0dfe 1CD0     		beq	.L579
1985:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15109              		.loc 1 1985 0
 15110 0e00 7869     		ldr	r0, [r7, #20]
 15111 0e02 FFF7FEFF 		bl	strlen
 15112 0e06 0346     		mov	r3, r0
 15113 0e08 1A46     		mov	r2, r3
 15114 0e0a 7B69     		ldr	r3, [r7, #20]
 15115 0e0c 1344     		add	r3, r3, r2
 15116 0e0e 3A4A     		ldr	r2, .L648+28
 15117 0e10 1446     		mov	r4, r2
 15118 0e12 9E46     		mov	lr, r3
 15119 0e14 04F1200C 		add	ip, r4, #32
 15120              	.L580:
 15121 0e18 7546     		mov	r5, lr
 15122 0e1a 2646     		mov	r6, r4
 15123 0e1c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15124 0e1e 2860     		str	r0, [r5]	@ unaligned
 15125 0e20 6960     		str	r1, [r5, #4]	@ unaligned
 15126 0e22 AA60     		str	r2, [r5, #8]	@ unaligned
 15127 0e24 EB60     		str	r3, [r5, #12]	@ unaligned
 15128 0e26 1034     		adds	r4, r4, #16
 15129 0e28 0EF1100E 		add	lr, lr, #16
 15130 0e2c 6445     		cmp	r4, ip
 15131 0e2e F3D1     		bne	.L580
 15132 0e30 7346     		mov	r3, lr
 15133 0e32 2246     		mov	r2, r4
 15134 0e34 1278     		ldrb	r2, [r2]
 15135 0e36 1A70     		strb	r2, [r3]
 15136 0e38 13E0     		b	.L581
 15137              	.L579:
1986:..\src/command_processing.c ****             else
1987:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15138              		.loc 1 1987 0
 15139 0e3a 7869     		ldr	r0, [r7, #20]
 15140 0e3c FFF7FEFF 		bl	strlen
 15141 0e40 0346     		mov	r3, r0
 15142 0e42 1A46     		mov	r2, r3
 15143 0e44 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 339


 15144 0e46 1344     		add	r3, r3, r2
 15145 0e48 2C4A     		ldr	r2, .L648+32
 15146 0e4a 1C46     		mov	r4, r3
 15147 0e4c 1546     		mov	r5, r2
 15148 0e4e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15149 0e50 2060     		str	r0, [r4]	@ unaligned
 15150 0e52 6160     		str	r1, [r4, #4]	@ unaligned
 15151 0e54 A260     		str	r2, [r4, #8]	@ unaligned
 15152 0e56 E360     		str	r3, [r4, #12]	@ unaligned
 15153 0e58 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15154 0e5a 2061     		str	r0, [r4, #16]	@ unaligned
 15155 0e5c 6161     		str	r1, [r4, #20]	@ unaligned
 15156 0e5e A261     		str	r2, [r4, #24]	@ unaligned
 15157 0e60 E361     		str	r3, [r4, #28]	@ unaligned
 15158              	.L581:
1988:..\src/command_processing.c **** 
1989:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15159              		.loc 1 1989 0
 15160 0e62 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15161 0e66 D7F88810 		ldr	r1, [r7, #136]
 15162 0e6a 1346     		mov	r3, r2
 15163 0e6c 5B00     		lsls	r3, r3, #1
 15164 0e6e 1344     		add	r3, r3, r2
 15165 0e70 1B01     		lsls	r3, r3, #4
 15166 0e72 0B44     		add	r3, r3, r1
 15167 0e74 03F5DA73 		add	r3, r3, #436
 15168 0e78 93F90030 		ldrsb	r3, [r3]
 15169 0e7c 1A46     		mov	r2, r3
 15170 0e7e 07F11803 		add	r3, r7, #24
 15171 0e82 1F49     		ldr	r1, .L648+36
 15172 0e84 1846     		mov	r0, r3
 15173 0e86 FFF7FEFF 		bl	sprintf
1990:..\src/command_processing.c ****             strcat(info_string, str);
 15174              		.loc 1 1990 0
 15175 0e8a 07F11803 		add	r3, r7, #24
 15176 0e8e 1946     		mov	r1, r3
 15177 0e90 7869     		ldr	r0, [r7, #20]
 15178 0e92 FFF7FEFF 		bl	strcat
1991:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1992:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 15179              		.loc 1 1992 0
 15180 0e96 7869     		ldr	r0, [r7, #20]
 15181 0e98 FFF7FEFF 		bl	strlen
 15182 0e9c 0346     		mov	r3, r0
 15183 0e9e 1A46     		mov	r2, r3
 15184 0ea0 7B69     		ldr	r3, [r7, #20]
 15185 0ea2 1344     		add	r3, r3, r2
 15186 0ea4 174A     		ldr	r2, .L648+40
 15187 0ea6 1446     		mov	r4, r2
 15188 0ea8 9E46     		mov	lr, r3
 15189 0eaa 04F1200C 		add	ip, r4, #32
 15190              	.L582:
 15191 0eae 7546     		mov	r5, lr
 15192 0eb0 2646     		mov	r6, r4
 15193 0eb2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15194 0eb4 2860     		str	r0, [r5]	@ unaligned
 15195 0eb6 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 340


 15196 0eb8 AA60     		str	r2, [r5, #8]	@ unaligned
 15197 0eba EB60     		str	r3, [r5, #12]	@ unaligned
 15198 0ebc 1034     		adds	r4, r4, #16
 15199 0ebe 0EF1100E 		add	lr, lr, #16
 15200 0ec2 6445     		cmp	r4, ip
 15201 0ec4 F3D1     		bne	.L582
 15202 0ec6 7246     		mov	r2, lr
 15203 0ec8 2346     		mov	r3, r4
 15204 0eca 03CB     		ldmia	r3!, {r0, r1}
 15205 0ecc 1060     		str	r0, [r2]	@ unaligned
 15206 0ece 5160     		str	r1, [r2, #4]	@ unaligned
 15207 0ed0 1B78     		ldrb	r3, [r3]
 15208 0ed2 1372     		strb	r3, [r2, #8]
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15209              		.loc 1 1993 0
 15210 0ed4 0023     		movs	r3, #0
 15211 0ed6 C7F89430 		str	r3, [r7, #148]
 15212 0eda 46E0     		b	.L583
 15213              	.L649:
 15214              		.align	2
 15215              	.L648:
 15216 0edc 30120000 		.word	.LC179
 15217 0ee0 48120000 		.word	.LC180
 15218 0ee4 64120000 		.word	.LC181
 15219 0ee8 94120000 		.word	.LC182
 15220 0eec B0120000 		.word	.LC183
 15221 0ef0 C4120000 		.word	.LC184
 15222 0ef4 DC120000 		.word	.LC185
 15223 0ef8 04130000 		.word	.LC186
 15224 0efc 28130000 		.word	.LC187
 15225 0f00 48130000 		.word	.LC188
 15226 0f04 64130000 		.word	.LC189
 15227              	.L585:
1994:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15228              		.loc 1 1994 0
 15229 0f08 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15230 0f0c D7F88810 		ldr	r1, [r7, #136]
 15231 0f10 1346     		mov	r3, r2
 15232 0f12 5B00     		lsls	r3, r3, #1
 15233 0f14 1344     		add	r3, r3, r2
 15234 0f16 1B01     		lsls	r3, r3, #4
 15235 0f18 CA18     		adds	r2, r1, r3
 15236 0f1a D7F89430 		ldr	r3, [r7, #148]
 15237 0f1e 1344     		add	r3, r3, r2
 15238 0f20 03F2B113 		addw	r3, r3, #433
 15239 0f24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15240 0f26 1A46     		mov	r2, r3
 15241 0f28 07F11803 		add	r3, r7, #24
 15242 0f2c AE49     		ldr	r1, .L650
 15243 0f2e 1846     		mov	r0, r3
 15244 0f30 FFF7FEFF 		bl	sprintf
1995:..\src/command_processing.c ****                 strcat(info_string, str);
 15245              		.loc 1 1995 0
 15246 0f34 07F11803 		add	r3, r7, #24
 15247 0f38 1946     		mov	r1, r3
 15248 0f3a 7869     		ldr	r0, [r7, #20]
 15249 0f3c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 341


1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15250              		.loc 1 1996 0
 15251 0f40 D7F89430 		ldr	r3, [r7, #148]
 15252 0f44 022B     		cmp	r3, #2
 15253 0f46 0BD0     		beq	.L584
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15254              		.loc 1 1997 0
 15255 0f48 7869     		ldr	r0, [r7, #20]
 15256 0f4a FFF7FEFF 		bl	strlen
 15257 0f4e 0346     		mov	r3, r0
 15258 0f50 1A46     		mov	r2, r3
 15259 0f52 7B69     		ldr	r3, [r7, #20]
 15260 0f54 1344     		add	r3, r3, r2
 15261 0f56 A54A     		ldr	r2, .L650+4
 15262 0f58 1188     		ldrh	r1, [r2]	@ unaligned
 15263 0f5a 9278     		ldrb	r2, [r2, #2]
 15264 0f5c 1980     		strh	r1, [r3]	@ unaligned
 15265 0f5e 9A70     		strb	r2, [r3, #2]
 15266              	.L584:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15267              		.loc 1 1993 0 discriminator 2
 15268 0f60 D7F89430 		ldr	r3, [r7, #148]
 15269 0f64 0133     		adds	r3, r3, #1
 15270 0f66 C7F89430 		str	r3, [r7, #148]
 15271              	.L583:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15272              		.loc 1 1993 0 is_stmt 0 discriminator 1
 15273 0f6a D7F89430 		ldr	r3, [r7, #148]
 15274 0f6e 022B     		cmp	r3, #2
 15275 0f70 CADD     		ble	.L585
1998:..\src/command_processing.c ****                 }                
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15276              		.loc 1 2000 0 is_stmt 1
 15277 0f72 7869     		ldr	r0, [r7, #20]
 15278 0f74 FFF7FEFF 		bl	strlen
 15279 0f78 0346     		mov	r3, r0
 15280 0f7a 1A46     		mov	r2, r3
 15281 0f7c 7B69     		ldr	r3, [r7, #20]
 15282 0f7e 1344     		add	r3, r3, r2
 15283 0f80 9B4A     		ldr	r2, .L650+8
 15284 0f82 1188     		ldrh	r1, [r2]	@ unaligned
 15285 0f84 9278     		ldrb	r2, [r2, #2]
 15286 0f86 1980     		strh	r1, [r3]	@ unaligned
 15287 0f88 9A70     		strb	r2, [r3, #2]
2001:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 15288              		.loc 1 2001 0
 15289 0f8a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15290 0f8e D7F88810 		ldr	r1, [r7, #136]
 15291 0f92 1346     		mov	r3, r2
 15292 0f94 5B00     		lsls	r3, r3, #1
 15293 0f96 1344     		add	r3, r3, r2
 15294 0f98 1B01     		lsls	r3, r3, #4
 15295 0f9a 0B44     		add	r3, r3, r1
 15296 0f9c 03F2B513 		addw	r3, r3, #437
 15297 0fa0 93F90030 		ldrsb	r3, [r3]
 15298 0fa4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 342


 15299 0fa6 07F11803 		add	r3, r7, #24
 15300 0faa 9249     		ldr	r1, .L650+12
 15301 0fac 1846     		mov	r0, r3
 15302 0fae FFF7FEFF 		bl	sprintf
2002:..\src/command_processing.c ****             strcat(info_string, str);
 15303              		.loc 1 2002 0
 15304 0fb2 07F11803 		add	r3, r7, #24
 15305 0fb6 1946     		mov	r1, r3
 15306 0fb8 7869     		ldr	r0, [r7, #20]
 15307 0fba FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 15308              		.loc 1 2003 0
 15309 0fbe 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15310 0fc2 D7F88810 		ldr	r1, [r7, #136]
 15311 0fc6 1346     		mov	r3, r2
 15312 0fc8 5B00     		lsls	r3, r3, #1
 15313 0fca 1344     		add	r3, r3, r2
 15314 0fcc 1B01     		lsls	r3, r3, #4
 15315 0fce 0B44     		add	r3, r3, r1
 15316 0fd0 03F5DB73 		add	r3, r3, #438
 15317 0fd4 93F90030 		ldrsb	r3, [r3]
 15318 0fd8 1A46     		mov	r2, r3
 15319 0fda 07F11803 		add	r3, r7, #24
 15320 0fde 8649     		ldr	r1, .L650+16
 15321 0fe0 1846     		mov	r0, r3
 15322 0fe2 FFF7FEFF 		bl	sprintf
2004:..\src/command_processing.c ****             strcat(info_string, str);
 15323              		.loc 1 2004 0
 15324 0fe6 07F11803 		add	r3, r7, #24
 15325 0fea 1946     		mov	r1, r3
 15326 0fec 7869     		ldr	r0, [r7, #20]
 15327 0fee FFF7FEFF 		bl	strcat
2005:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 15328              		.loc 1 2005 0
 15329 0ff2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15330 0ff6 D7F88810 		ldr	r1, [r7, #136]
 15331 0ffa 1346     		mov	r3, r2
 15332 0ffc 5B00     		lsls	r3, r3, #1
 15333 0ffe 1344     		add	r3, r3, r2
 15334 1000 1B01     		lsls	r3, r3, #4
 15335 1002 0B44     		add	r3, r3, r1
 15336 1004 03F2B713 		addw	r3, r3, #439
 15337 1008 93F90030 		ldrsb	r3, [r3]
 15338 100c 1A46     		mov	r2, r3
 15339 100e 07F11803 		add	r3, r7, #24
 15340 1012 7A49     		ldr	r1, .L650+20
 15341 1014 1846     		mov	r0, r3
 15342 1016 FFF7FEFF 		bl	sprintf
2006:..\src/command_processing.c ****             strcat(info_string, str);
 15343              		.loc 1 2006 0
 15344 101a 07F11803 		add	r3, r7, #24
 15345 101e 1946     		mov	r1, r3
 15346 1020 7869     		ldr	r0, [r7, #20]
 15347 1022 FFF7FEFF 		bl	strcat
2007:..\src/command_processing.c **** #endif            
2008:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15348              		.loc 1 2008 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 343


 15349 1026 7869     		ldr	r0, [r7, #20]
 15350 1028 FFF7FEFF 		bl	strlen
 15351 102c 0346     		mov	r3, r0
 15352 102e 1A46     		mov	r2, r3
 15353 1030 7B69     		ldr	r3, [r7, #20]
 15354 1032 1344     		add	r3, r3, r2
 15355 1034 6E4A     		ldr	r2, .L650+8
 15356 1036 1188     		ldrh	r1, [r2]	@ unaligned
 15357 1038 9278     		ldrb	r2, [r2, #2]
 15358 103a 1980     		strh	r1, [r3]	@ unaligned
 15359 103c 9A70     		strb	r2, [r3, #2]
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15360              		.loc 1 2010 0
 15361 103e 7869     		ldr	r0, [r7, #20]
 15362 1040 FFF7FEFF 		bl	strlen
 15363 1044 0346     		mov	r3, r0
 15364 1046 1A46     		mov	r2, r3
 15365 1048 7B69     		ldr	r3, [r7, #20]
 15366 104a 1344     		add	r3, r3, r2
 15367 104c 6C4A     		ldr	r2, .L650+24
 15368 104e 1D46     		mov	r5, r3
 15369 1050 1446     		mov	r4, r2
 15370 1052 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15371 1054 2860     		str	r0, [r5]	@ unaligned
 15372 1056 6960     		str	r1, [r5, #4]	@ unaligned
 15373 1058 AA60     		str	r2, [r5, #8]	@ unaligned
 15374 105a EB60     		str	r3, [r5, #12]	@ unaligned
 15375 105c 2068     		ldr	r0, [r4]	@ unaligned
 15376 105e 2861     		str	r0, [r5, #16]	@ unaligned
2011:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15377              		.loc 1 2011 0
 15378 1060 0023     		movs	r3, #0
 15379 1062 C7F89430 		str	r3, [r7, #148]
 15380 1066 30E0     		b	.L586
 15381              	.L588:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15382              		.loc 1 2012 0
 15383 1068 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15384 106c D7F88810 		ldr	r1, [r7, #136]
 15385 1070 1346     		mov	r3, r2
 15386 1072 5B00     		lsls	r3, r3, #1
 15387 1074 1344     		add	r3, r3, r2
 15388 1076 1B01     		lsls	r3, r3, #4
 15389 1078 CA18     		adds	r2, r1, r3
 15390 107a D7F89430 		ldr	r3, [r7, #148]
 15391 107e 1344     		add	r3, r3, r2
 15392 1080 03F29513 		addw	r3, r3, #405
 15393 1084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15394 1086 1A46     		mov	r2, r3
 15395 1088 07F11803 		add	r3, r7, #24
 15396 108c 5649     		ldr	r1, .L650
 15397 108e 1846     		mov	r0, r3
 15398 1090 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****                 strcat(info_string, str);
 15399              		.loc 1 2013 0
 15400 1094 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 344


 15401 1098 1946     		mov	r1, r3
 15402 109a 7869     		ldr	r0, [r7, #20]
 15403 109c FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15404              		.loc 1 2014 0
 15405 10a0 D7F89430 		ldr	r3, [r7, #148]
 15406 10a4 022B     		cmp	r3, #2
 15407 10a6 0BD0     		beq	.L587
2015:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15408              		.loc 1 2015 0
 15409 10a8 7869     		ldr	r0, [r7, #20]
 15410 10aa FFF7FEFF 		bl	strlen
 15411 10ae 0346     		mov	r3, r0
 15412 10b0 1A46     		mov	r2, r3
 15413 10b2 7B69     		ldr	r3, [r7, #20]
 15414 10b4 1344     		add	r3, r3, r2
 15415 10b6 4D4A     		ldr	r2, .L650+4
 15416 10b8 1188     		ldrh	r1, [r2]	@ unaligned
 15417 10ba 9278     		ldrb	r2, [r2, #2]
 15418 10bc 1980     		strh	r1, [r3]	@ unaligned
 15419 10be 9A70     		strb	r2, [r3, #2]
 15420              	.L587:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15421              		.loc 1 2011 0 discriminator 2
 15422 10c0 D7F89430 		ldr	r3, [r7, #148]
 15423 10c4 0133     		adds	r3, r3, #1
 15424 10c6 C7F89430 		str	r3, [r7, #148]
 15425              	.L586:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15426              		.loc 1 2011 0 is_stmt 0 discriminator 1
 15427 10ca D7F89430 		ldr	r3, [r7, #148]
 15428 10ce 022B     		cmp	r3, #2
 15429 10d0 CADD     		ble	.L588
2016:..\src/command_processing.c ****                 }                
2017:..\src/command_processing.c ****             }
2018:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15430              		.loc 1 2018 0 is_stmt 1
 15431 10d2 7869     		ldr	r0, [r7, #20]
 15432 10d4 FFF7FEFF 		bl	strlen
 15433 10d8 0346     		mov	r3, r0
 15434 10da 1A46     		mov	r2, r3
 15435 10dc 7B69     		ldr	r3, [r7, #20]
 15436 10de 1344     		add	r3, r3, r2
 15437 10e0 434A     		ldr	r2, .L650+8
 15438 10e2 1188     		ldrh	r1, [r2]	@ unaligned
 15439 10e4 9278     		ldrb	r2, [r2, #2]
 15440 10e6 1980     		strh	r1, [r3]	@ unaligned
 15441 10e8 9A70     		strb	r2, [r3, #2]
2019:..\src/command_processing.c **** 
2020:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 15442              		.loc 1 2020 0
 15443 10ea 7869     		ldr	r0, [r7, #20]
 15444 10ec FFF7FEFF 		bl	strlen
 15445 10f0 0346     		mov	r3, r0
 15446 10f2 1A46     		mov	r2, r3
 15447 10f4 7B69     		ldr	r3, [r7, #20]
 15448 10f6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 345


 15449 10f8 424A     		ldr	r2, .L650+28
 15450 10fa 1D46     		mov	r5, r3
 15451 10fc 1446     		mov	r4, r2
 15452 10fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15453 1100 2860     		str	r0, [r5]	@ unaligned
 15454 1102 6960     		str	r1, [r5, #4]	@ unaligned
 15455 1104 AA60     		str	r2, [r5, #8]	@ unaligned
 15456 1106 EB60     		str	r3, [r5, #12]	@ unaligned
 15457 1108 2068     		ldr	r0, [r4]	@ unaligned
 15458 110a 2861     		str	r0, [r5, #16]	@ unaligned
 15459 110c 2379     		ldrb	r3, [r4, #4]
 15460 110e 2B75     		strb	r3, [r5, #20]
2021:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15461              		.loc 1 2021 0
 15462 1110 0023     		movs	r3, #0
 15463 1112 C7F89430 		str	r3, [r7, #148]
 15464 1116 3FE0     		b	.L589
 15465              	.L591:
2022:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15466              		.loc 1 2022 0
 15467 1118 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15468 111c D7F88810 		ldr	r1, [r7, #136]
 15469 1120 1346     		mov	r3, r2
 15470 1122 5B00     		lsls	r3, r3, #1
 15471 1124 1344     		add	r3, r3, r2
 15472 1126 9B00     		lsls	r3, r3, #2
 15473 1128 D7F89420 		ldr	r2, [r7, #148]
 15474 112c 1344     		add	r3, r3, r2
 15475 112e 6633     		adds	r3, r3, #102
 15476 1130 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15477 1134 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15478 1138 D7F88800 		ldr	r0, [r7, #136]
 15479 113c 1346     		mov	r3, r2
 15480 113e 5B00     		lsls	r3, r3, #1
 15481 1140 1344     		add	r3, r3, r2
 15482 1142 1B01     		lsls	r3, r3, #4
 15483 1144 C218     		adds	r2, r0, r3
 15484 1146 D7F89430 		ldr	r3, [r7, #148]
 15485 114a 1344     		add	r3, r3, r2
 15486 114c 03F29513 		addw	r3, r3, #405
 15487 1150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15488 1152 41FA03F2 		asr	r2, r1, r3
 15489 1156 07F11803 		add	r3, r7, #24
 15490 115a 2B49     		ldr	r1, .L650+32
 15491 115c 1846     		mov	r0, r3
 15492 115e FFF7FEFF 		bl	sprintf
2023:..\src/command_processing.c ****                 strcat(info_string, str);
 15493              		.loc 1 2023 0
 15494 1162 07F11803 		add	r3, r7, #24
 15495 1166 1946     		mov	r1, r3
 15496 1168 7869     		ldr	r0, [r7, #20]
 15497 116a FFF7FEFF 		bl	strcat
2024:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15498              		.loc 1 2024 0
 15499 116e D7F89430 		ldr	r3, [r7, #148]
 15500 1172 022B     		cmp	r3, #2
 15501 1174 0BD0     		beq	.L590
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 346


2025:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15502              		.loc 1 2025 0
 15503 1176 7869     		ldr	r0, [r7, #20]
 15504 1178 FFF7FEFF 		bl	strlen
 15505 117c 0346     		mov	r3, r0
 15506 117e 1A46     		mov	r2, r3
 15507 1180 7B69     		ldr	r3, [r7, #20]
 15508 1182 1344     		add	r3, r3, r2
 15509 1184 194A     		ldr	r2, .L650+4
 15510 1186 1188     		ldrh	r1, [r2]	@ unaligned
 15511 1188 9278     		ldrb	r2, [r2, #2]
 15512 118a 1980     		strh	r1, [r3]	@ unaligned
 15513 118c 9A70     		strb	r2, [r3, #2]
 15514              	.L590:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15515              		.loc 1 2021 0 discriminator 2
 15516 118e D7F89430 		ldr	r3, [r7, #148]
 15517 1192 0133     		adds	r3, r3, #1
 15518 1194 C7F89430 		str	r3, [r7, #148]
 15519              	.L589:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15520              		.loc 1 2021 0 is_stmt 0 discriminator 1
 15521 1198 D7F89430 		ldr	r3, [r7, #148]
 15522 119c 022B     		cmp	r3, #2
 15523 119e BBDD     		ble	.L591
2026:..\src/command_processing.c ****                 }
2027:..\src/command_processing.c ****             }
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15524              		.loc 1 2028 0 is_stmt 1
 15525 11a0 7869     		ldr	r0, [r7, #20]
 15526 11a2 FFF7FEFF 		bl	strlen
 15527 11a6 0346     		mov	r3, r0
 15528 11a8 1A46     		mov	r2, r3
 15529 11aa 7B69     		ldr	r3, [r7, #20]
 15530 11ac 1344     		add	r3, r3, r2
 15531 11ae 104A     		ldr	r2, .L650+8
 15532 11b0 1188     		ldrh	r1, [r2]	@ unaligned
 15533 11b2 9278     		ldrb	r2, [r2, #2]
 15534 11b4 1980     		strh	r1, [r3]	@ unaligned
 15535 11b6 9A70     		strb	r2, [r3, #2]
2029:..\src/command_processing.c ****                 
2030:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15536              		.loc 1 2030 0
 15537 11b8 7869     		ldr	r0, [r7, #20]
 15538 11ba FFF7FEFF 		bl	strlen
 15539 11be 0346     		mov	r3, r0
 15540 11c0 1A46     		mov	r2, r3
 15541 11c2 7B69     		ldr	r3, [r7, #20]
 15542 11c4 1344     		add	r3, r3, r2
 15543 11c6 114A     		ldr	r2, .L650+36
 15544 11c8 1D46     		mov	r5, r3
 15545 11ca 1446     		mov	r4, r2
 15546 11cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15547 11ce 2860     		str	r0, [r5]	@ unaligned
 15548 11d0 6960     		str	r1, [r5, #4]	@ unaligned
 15549 11d2 AA60     		str	r2, [r5, #8]	@ unaligned
 15550 11d4 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 347


 15551 11d6 03CC     		ldmia	r4!, {r0, r1}
 15552 11d8 2861     		str	r0, [r5, #16]	@ unaligned
 15553 11da 6961     		str	r1, [r5, #20]	@ unaligned
 15554 11dc 2378     		ldrb	r3, [r4]
 15555 11de 2B76     		strb	r3, [r5, #24]
2031:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15556              		.loc 1 2031 0
 15557 11e0 0023     		movs	r3, #0
 15558 11e2 C7F89430 		str	r3, [r7, #148]
 15559 11e6 49E0     		b	.L592
 15560              	.L651:
 15561              		.align	2
 15562              	.L650:
 15563 11e8 90100000 		.word	.LC161
 15564 11ec 94100000 		.word	.LC162
 15565 11f0 A80E0000 		.word	.LC132
 15566 11f4 90130000 		.word	.LC190
 15567 11f8 A8130000 		.word	.LC191
 15568 11fc C0130000 		.word	.LC192
 15569 1200 D8130000 		.word	.LC193
 15570 1204 EC130000 		.word	.LC194
 15571 1208 04140000 		.word	.LC195
 15572 120c 08140000 		.word	.LC196
 15573              	.L594:
2032:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15574              		.loc 1 2032 0
 15575 1210 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15576 1214 D7F88810 		ldr	r1, [r7, #136]
 15577 1218 1346     		mov	r3, r2
 15578 121a 5B00     		lsls	r3, r3, #1
 15579 121c 1344     		add	r3, r3, r2
 15580 121e 9B00     		lsls	r3, r3, #2
 15581 1220 D7F89420 		ldr	r2, [r7, #148]
 15582 1224 1344     		add	r3, r3, r2
 15583 1226 6833     		adds	r3, r3, #104
 15584 1228 9B00     		lsls	r3, r3, #2
 15585 122a 0B44     		add	r3, r3, r1
 15586 122c 5B68     		ldr	r3, [r3, #4]	@ float
 15587 122e 1846     		mov	r0, r3
 15588 1230 FFF7FEFF 		bl	__aeabi_f2d
 15589 1234 0346     		mov	r3, r0
 15590 1236 0C46     		mov	r4, r1
 15591 1238 07F11800 		add	r0, r7, #24
 15592 123c 1A46     		mov	r2, r3
 15593 123e 2346     		mov	r3, r4
 15594 1240 BD49     		ldr	r1, .L652
 15595 1242 FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****                 strcat(info_string, str);
 15596              		.loc 1 2033 0
 15597 1246 07F11803 		add	r3, r7, #24
 15598 124a 1946     		mov	r1, r3
 15599 124c 7869     		ldr	r0, [r7, #20]
 15600 124e FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15601              		.loc 1 2034 0
 15602 1252 D7F89430 		ldr	r3, [r7, #148]
 15603 1256 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 348


 15604 1258 0BD0     		beq	.L593
2035:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15605              		.loc 1 2035 0
 15606 125a 7869     		ldr	r0, [r7, #20]
 15607 125c FFF7FEFF 		bl	strlen
 15608 1260 0346     		mov	r3, r0
 15609 1262 1A46     		mov	r2, r3
 15610 1264 7B69     		ldr	r3, [r7, #20]
 15611 1266 1344     		add	r3, r3, r2
 15612 1268 B44A     		ldr	r2, .L652+4
 15613 126a 1188     		ldrh	r1, [r2]	@ unaligned
 15614 126c 9278     		ldrb	r2, [r2, #2]
 15615 126e 1980     		strh	r1, [r3]	@ unaligned
 15616 1270 9A70     		strb	r2, [r3, #2]
 15617              	.L593:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15618              		.loc 1 2031 0 discriminator 2
 15619 1272 D7F89430 		ldr	r3, [r7, #148]
 15620 1276 0133     		adds	r3, r3, #1
 15621 1278 C7F89430 		str	r3, [r7, #148]
 15622              	.L592:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15623              		.loc 1 2031 0 is_stmt 0 discriminator 1
 15624 127c D7F89430 		ldr	r3, [r7, #148]
 15625 1280 022B     		cmp	r3, #2
 15626 1282 C5DD     		ble	.L594
2036:..\src/command_processing.c ****                 }
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15627              		.loc 1 2038 0 is_stmt 1
 15628 1284 7869     		ldr	r0, [r7, #20]
 15629 1286 FFF7FEFF 		bl	strlen
 15630 128a 0346     		mov	r3, r0
 15631 128c 1A46     		mov	r2, r3
 15632 128e 7B69     		ldr	r3, [r7, #20]
 15633 1290 1344     		add	r3, r3, r2
 15634 1292 AB4A     		ldr	r2, .L652+8
 15635 1294 1188     		ldrh	r1, [r2]	@ unaligned
 15636 1296 9278     		ldrb	r2, [r2, #2]
 15637 1298 1980     		strh	r1, [r3]	@ unaligned
 15638 129a 9A70     		strb	r2, [r3, #2]
2039:..\src/command_processing.c ****             
2040:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2041:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15639              		.loc 1 2041 0
 15640 129c D7F88030 		ldr	r3, [r7, #128]
 15641 12a0 5B6C     		ldr	r3, [r3, #68]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15642              		.loc 1 2040 0
 15643 12a2 1846     		mov	r0, r3
 15644 12a4 FFF7FEFF 		bl	__aeabi_f2d
 15645 12a8 C7E90201 		strd	r0, [r7, #8]
 15646              		.loc 1 2041 0
 15647 12ac D7F88030 		ldr	r3, [r7, #128]
 15648 12b0 9B6C     		ldr	r3, [r3, #72]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15649              		.loc 1 2040 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 349


 15650 12b2 1846     		mov	r0, r3
 15651 12b4 FFF7FEFF 		bl	__aeabi_f2d
 15652 12b8 0446     		mov	r4, r0
 15653 12ba 0D46     		mov	r5, r1
 15654              		.loc 1 2041 0
 15655 12bc D7F88030 		ldr	r3, [r7, #128]
 15656 12c0 DB6C     		ldr	r3, [r3, #76]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15657              		.loc 1 2040 0
 15658 12c2 1846     		mov	r0, r3
 15659 12c4 FFF7FEFF 		bl	__aeabi_f2d
 15660 12c8 8046     		mov	r8, r0
 15661 12ca 8946     		mov	r9, r1
2042:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 15662              		.loc 1 2042 0
 15663 12cc D7F88030 		ldr	r3, [r7, #128]
 15664 12d0 1B6D     		ldr	r3, [r3, #80]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15665              		.loc 1 2040 0
 15666 12d2 1846     		mov	r0, r3
 15667 12d4 FFF7FEFF 		bl	__aeabi_f2d
 15668 12d8 8246     		mov	r10, r0
 15669 12da 8B46     		mov	fp, r1
 15670              		.loc 1 2042 0
 15671 12dc D7F88030 		ldr	r3, [r7, #128]
 15672 12e0 5B6D     		ldr	r3, [r3, #84]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15673              		.loc 1 2040 0
 15674 12e2 1846     		mov	r0, r3
 15675 12e4 FFF7FEFF 		bl	__aeabi_f2d
 15676 12e8 C7E90001 		strd	r0, [r7]
 15677              		.loc 1 2042 0
 15678 12ec D7F88030 		ldr	r3, [r7, #128]
 15679 12f0 9B6D     		ldr	r3, [r3, #88]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15680              		.loc 1 2040 0
 15681 12f2 1846     		mov	r0, r3
 15682 12f4 FFF7FEFF 		bl	__aeabi_f2d
 15683 12f8 0246     		mov	r2, r0
 15684 12fa 0B46     		mov	r3, r1
 15685 12fc 07F11800 		add	r0, r7, #24
 15686 1300 CDE90823 		strd	r2, [sp, #32]
 15687 1304 D7E90012 		ldrd	r1, [r7]
 15688 1308 CDE90612 		strd	r1, [sp, #24]
 15689 130c CDE904AB 		strd	r10, [sp, #16]
 15690 1310 CDE90289 		strd	r8, [sp, #8]
 15691 1314 CDE90045 		strd	r4, [sp]
 15692 1318 D7E90223 		ldrd	r2, [r7, #8]
 15693 131c 8949     		ldr	r1, .L652+12
 15694 131e FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15695              		.loc 1 2043 0
 15696 1322 07F11803 		add	r3, r7, #24
 15697 1326 1946     		mov	r1, r3
 15698 1328 7869     		ldr	r0, [r7, #20]
 15699 132a FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 350


2045:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15700              		.loc 1 2045 0
 15701 132e D7F88030 		ldr	r3, [r7, #128]
 15702 1332 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15703 1336 1A46     		mov	r2, r3
 15704 1338 07F11803 		add	r3, r7, #24
 15705 133c 8249     		ldr	r1, .L652+16
 15706 133e 1846     		mov	r0, r3
 15707 1340 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
 15708              		.loc 1 2046 0
 15709 1344 07F11803 		add	r3, r7, #24
 15710 1348 1946     		mov	r1, r3
 15711 134a 7869     		ldr	r0, [r7, #20]
 15712 134c FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15713              		.loc 1 2047 0
 15714 1350 7869     		ldr	r0, [r7, #20]
 15715 1352 FFF7FEFF 		bl	strlen
 15716 1356 0346     		mov	r3, r0
 15717 1358 1A46     		mov	r2, r3
 15718 135a 7B69     		ldr	r3, [r7, #20]
 15719 135c 1344     		add	r3, r3, r2
 15720 135e 784A     		ldr	r2, .L652+8
 15721 1360 1188     		ldrh	r1, [r2]	@ unaligned
 15722 1362 9278     		ldrb	r2, [r2, #2]
 15723 1364 1980     		strh	r1, [r3]	@ unaligned
 15724 1366 9A70     		strb	r2, [r3, #2]
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15725              		.loc 1 2049 0
 15726 1368 D7F88030 		ldr	r3, [r7, #128]
 15727 136c 596B     		ldr	r1, [r3, #52]
 15728 136e 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15729 1372 D7F88800 		ldr	r0, [r7, #136]
 15730 1376 1346     		mov	r3, r2
 15731 1378 5B00     		lsls	r3, r3, #1
 15732 137a 1344     		add	r3, r3, r2
 15733 137c 1B01     		lsls	r3, r3, #4
 15734 137e 0344     		add	r3, r3, r0
 15735 1380 03F29513 		addw	r3, r3, #405
 15736 1384 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15737 1386 41FA03F2 		asr	r2, r1, r3
 15738 138a 07F11803 		add	r3, r7, #24
 15739 138e 6F49     		ldr	r1, .L652+20
 15740 1390 1846     		mov	r0, r3
 15741 1392 FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****             strcat(info_string, str);
 15742              		.loc 1 2050 0
 15743 1396 07F11803 		add	r3, r7, #24
 15744 139a 1946     		mov	r1, r3
 15745 139c 7869     		ldr	r0, [r7, #20]
 15746 139e FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15747              		.loc 1 2051 0
 15748 13a2 D7F88030 		ldr	r3, [r7, #128]
 15749 13a6 996B     		ldr	r1, [r3, #56]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 351


 15750 13a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15751 13ac D7F88800 		ldr	r0, [r7, #136]
 15752 13b0 1346     		mov	r3, r2
 15753 13b2 5B00     		lsls	r3, r3, #1
 15754 13b4 1344     		add	r3, r3, r2
 15755 13b6 1B01     		lsls	r3, r3, #4
 15756 13b8 0344     		add	r3, r3, r0
 15757 13ba 03F29513 		addw	r3, r3, #405
 15758 13be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15759 13c0 41FA03F2 		asr	r2, r1, r3
 15760 13c4 07F11803 		add	r3, r7, #24
 15761 13c8 6149     		ldr	r1, .L652+24
 15762 13ca 1846     		mov	r0, r3
 15763 13cc FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****             strcat(info_string, str);
 15764              		.loc 1 2052 0
 15765 13d0 07F11803 		add	r3, r7, #24
 15766 13d4 1946     		mov	r1, r3
 15767 13d6 7869     		ldr	r0, [r7, #20]
 15768 13d8 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c **** 
2054:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15769              		.loc 1 2054 0
 15770 13dc D7F88030 		ldr	r3, [r7, #128]
 15771 13e0 1A6C     		ldr	r2, [r3, #64]
 15772 13e2 D7F88030 		ldr	r3, [r7, #128]
 15773 13e6 DB6B     		ldr	r3, [r3, #60]
 15774 13e8 07F11800 		add	r0, r7, #24
 15775 13ec 5949     		ldr	r1, .L652+28
 15776 13ee FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****             strcat(info_string, str);
 15777              		.loc 1 2055 0
 15778 13f2 07F11803 		add	r3, r7, #24
 15779 13f6 1946     		mov	r1, r3
 15780 13f8 7869     		ldr	r0, [r7, #20]
 15781 13fa FFF7FEFF 		bl	strcat
2056:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15782              		.loc 1 2056 0
 15783 13fe 7869     		ldr	r0, [r7, #20]
 15784 1400 FFF7FEFF 		bl	strlen
 15785 1404 0346     		mov	r3, r0
 15786 1406 1A46     		mov	r2, r3
 15787 1408 7B69     		ldr	r3, [r7, #20]
 15788 140a 1344     		add	r3, r3, r2
 15789 140c 4C4A     		ldr	r2, .L652+8
 15790 140e 1188     		ldrh	r1, [r2]	@ unaligned
 15791 1410 9278     		ldrb	r2, [r2, #2]
 15792 1412 1980     		strh	r1, [r3]	@ unaligned
 15793 1414 9A70     		strb	r2, [r3, #2]
2057:..\src/command_processing.c **** 
2058:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15794              		.loc 1 2058 0
 15795 1416 D7F88030 		ldr	r3, [r7, #128]
 15796 141a B3F95C30 		ldrsh	r3, [r3, #92]
 15797 141e 1A46     		mov	r2, r3
 15798 1420 07F11803 		add	r3, r7, #24
 15799 1424 4C49     		ldr	r1, .L652+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 352


 15800 1426 1846     		mov	r0, r3
 15801 1428 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****             strcat(info_string, str);
 15802              		.loc 1 2059 0
 15803 142c 07F11803 		add	r3, r7, #24
 15804 1430 1946     		mov	r1, r3
 15805 1432 7869     		ldr	r0, [r7, #20]
 15806 1434 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2061:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 15807              		.loc 1 2061 0
 15808 1438 D7F88030 		ldr	r3, [r7, #128]
 15809 143c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 15810 1440 1A46     		mov	r2, r3
 15811 1442 07F11803 		add	r3, r7, #24
 15812 1446 4549     		ldr	r1, .L652+36
 15813 1448 1846     		mov	r0, r3
 15814 144a FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****             strcat(info_string, str);
 15815              		.loc 1 2062 0
 15816 144e 07F11803 		add	r3, r7, #24
 15817 1452 1946     		mov	r1, r3
 15818 1454 7869     		ldr	r0, [r7, #20]
 15819 1456 FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 15820              		.loc 1 2063 0
 15821 145a D7F88030 		ldr	r3, [r7, #128]
 15822 145e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 15823 1462 002B     		cmp	r3, #0
 15824 1464 02D0     		beq	.L596
 15825 1466 012B     		cmp	r3, #1
 15826 1468 1DD0     		beq	.L597
2064:..\src/command_processing.c ****                 case DRIVER_MC33887:
2065:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2066:..\src/command_processing.c ****                     break;
2067:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2068:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2069:..\src/command_processing.c ****                     break;
2070:..\src/command_processing.c ****                 default:
2071:..\src/command_processing.c ****                     break;
 15827              		.loc 1 2071 0
 15828 146a 39E0     		b	.L599
 15829              	.L596:
2065:..\src/command_processing.c ****                     break;
 15830              		.loc 1 2065 0
 15831 146c 7869     		ldr	r0, [r7, #20]
 15832 146e FFF7FEFF 		bl	strlen
 15833 1472 0346     		mov	r3, r0
 15834 1474 1A46     		mov	r2, r3
 15835 1476 7B69     		ldr	r3, [r7, #20]
 15836 1478 1344     		add	r3, r3, r2
 15837 147a 394A     		ldr	r2, .L652+40
 15838 147c 1446     		mov	r4, r2
 15839 147e 9E46     		mov	lr, r3
 15840 1480 04F1200C 		add	ip, r4, #32
 15841              	.L598:
 15842 1484 7546     		mov	r5, lr
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 353


 15843 1486 2646     		mov	r6, r4
 15844 1488 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15845 148a 2860     		str	r0, [r5]	@ unaligned
 15846 148c 6960     		str	r1, [r5, #4]	@ unaligned
 15847 148e AA60     		str	r2, [r5, #8]	@ unaligned
 15848 1490 EB60     		str	r3, [r5, #12]	@ unaligned
 15849 1492 1034     		adds	r4, r4, #16
 15850 1494 0EF1100E 		add	lr, lr, #16
 15851 1498 6445     		cmp	r4, ip
 15852 149a F3D1     		bne	.L598
 15853 149c 7246     		mov	r2, lr
 15854 149e 2346     		mov	r3, r4
 15855 14a0 1B88     		ldrh	r3, [r3]	@ unaligned
 15856 14a2 1380     		strh	r3, [r2]	@ unaligned
2066:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 15857              		.loc 1 2066 0
 15858 14a4 1CE0     		b	.L599
 15859              	.L597:
2068:..\src/command_processing.c ****                     break;
 15860              		.loc 1 2068 0
 15861 14a6 7869     		ldr	r0, [r7, #20]
 15862 14a8 FFF7FEFF 		bl	strlen
 15863 14ac 0346     		mov	r3, r0
 15864 14ae 1A46     		mov	r2, r3
 15865 14b0 7B69     		ldr	r3, [r7, #20]
 15866 14b2 1344     		add	r3, r3, r2
 15867 14b4 2B4A     		ldr	r2, .L652+44
 15868 14b6 1446     		mov	r4, r2
 15869 14b8 9E46     		mov	lr, r3
 15870 14ba 04F1200C 		add	ip, r4, #32
 15871              	.L600:
 15872 14be 7546     		mov	r5, lr
 15873 14c0 2646     		mov	r6, r4
 15874 14c2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15875 14c4 2860     		str	r0, [r5]	@ unaligned
 15876 14c6 6960     		str	r1, [r5, #4]	@ unaligned
 15877 14c8 AA60     		str	r2, [r5, #8]	@ unaligned
 15878 14ca EB60     		str	r3, [r5, #12]	@ unaligned
 15879 14cc 1034     		adds	r4, r4, #16
 15880 14ce 0EF1100E 		add	lr, lr, #16
 15881 14d2 6445     		cmp	r4, ip
 15882 14d4 F3D1     		bne	.L600
 15883 14d6 7346     		mov	r3, lr
 15884 14d8 2246     		mov	r2, r4
 15885 14da 1068     		ldr	r0, [r2]	@ unaligned
 15886 14dc 1860     		str	r0, [r3]	@ unaligned
2069:..\src/command_processing.c ****                 default:
 15887              		.loc 1 2069 0
 15888 14de 00BF     		nop
 15889              	.L599:
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 15890              		.loc 1 2073 0
 15891 14e0 D7F88030 		ldr	r3, [r7, #128]
 15892 14e4 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 15893 14e8 1A46     		mov	r2, r3
 15894 14ea 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 354


 15895 14ee 1E49     		ldr	r1, .L652+48
 15896 14f0 1846     		mov	r0, r3
 15897 14f2 FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****             strcat(info_string, str);
 15898              		.loc 1 2074 0
 15899 14f6 07F11803 		add	r3, r7, #24
 15900 14fa 1946     		mov	r1, r3
 15901 14fc 7869     		ldr	r0, [r7, #20]
 15902 14fe FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 15903              		.loc 1 2075 0
 15904 1502 D7F88030 		ldr	r3, [r7, #128]
 15905 1506 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15906 150a 002B     		cmp	r3, #0
 15907 150c 30D0     		beq	.L601
2076:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 15908              		.loc 1 2076 0
 15909 150e 7869     		ldr	r0, [r7, #20]
 15910 1510 FFF7FEFF 		bl	strlen
 15911 1514 0346     		mov	r3, r0
 15912 1516 1A46     		mov	r2, r3
 15913 1518 7B69     		ldr	r3, [r7, #20]
 15914 151a 1344     		add	r3, r3, r2
 15915 151c 134A     		ldr	r2, .L652+52
 15916 151e 1D46     		mov	r5, r3
 15917 1520 1446     		mov	r4, r2
 15918 1522 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15919 1524 2860     		str	r0, [r5]	@ unaligned
 15920 1526 6960     		str	r1, [r5, #4]	@ unaligned
 15921 1528 AA60     		str	r2, [r5, #8]	@ unaligned
 15922 152a EB60     		str	r3, [r5, #12]	@ unaligned
 15923 152c 07CC     		ldmia	r4!, {r0, r1, r2}
 15924 152e 2861     		str	r0, [r5, #16]	@ unaligned
 15925 1530 6961     		str	r1, [r5, #20]	@ unaligned
 15926 1532 AA61     		str	r2, [r5, #24]	@ unaligned
 15927 1534 33E0     		b	.L602
 15928              	.L653:
 15929 1536 00BF     		.align	2
 15930              	.L652:
 15931 1538 24140000 		.word	.LC197
 15932 153c 94100000 		.word	.LC162
 15933 1540 A80E0000 		.word	.LC132
 15934 1544 28140000 		.word	.LC198
 15935 1548 58140000 		.word	.LC199
 15936 154c 74140000 		.word	.LC200
 15937 1550 98140000 		.word	.LC201
 15938 1554 A8140000 		.word	.LC202
 15939 1558 C4140000 		.word	.LC203
 15940 155c D8140000 		.word	.LC204
 15941 1560 04150000 		.word	.LC205
 15942 1564 28150000 		.word	.LC206
 15943 1568 4C150000 		.word	.LC207
 15944 156c 6C150000 		.word	.LC208
 15945              	.L601:
2077:..\src/command_processing.c ****             else
2078:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 15946              		.loc 1 2078 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 355


 15947 1570 7869     		ldr	r0, [r7, #20]
 15948 1572 FFF7FEFF 		bl	strlen
 15949 1576 0346     		mov	r3, r0
 15950 1578 1A46     		mov	r2, r3
 15951 157a 7B69     		ldr	r3, [r7, #20]
 15952 157c 1344     		add	r3, r3, r2
 15953 157e A04A     		ldr	r2, .L654
 15954 1580 1D46     		mov	r5, r3
 15955 1582 1446     		mov	r4, r2
 15956 1584 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15957 1586 2860     		str	r0, [r5]	@ unaligned
 15958 1588 6960     		str	r1, [r5, #4]	@ unaligned
 15959 158a AA60     		str	r2, [r5, #8]	@ unaligned
 15960 158c EB60     		str	r3, [r5, #12]	@ unaligned
 15961 158e 03CC     		ldmia	r4!, {r0, r1}
 15962 1590 2861     		str	r0, [r5, #16]	@ unaligned
 15963 1592 6961     		str	r1, [r5, #20]	@ unaligned
 15964 1594 2388     		ldrh	r3, [r4]	@ unaligned
 15965 1596 A278     		ldrb	r2, [r4, #2]
 15966 1598 2B83     		strh	r3, [r5, #24]	@ unaligned
 15967 159a 1346     		mov	r3, r2
 15968 159c AB76     		strb	r3, [r5, #26]
 15969              	.L602:
2079:..\src/command_processing.c **** #endif                
2080:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15970              		.loc 1 2080 0 discriminator 2
 15971 159e 7869     		ldr	r0, [r7, #20]
 15972 15a0 FFF7FEFF 		bl	strlen
 15973 15a4 0346     		mov	r3, r0
 15974 15a6 1A46     		mov	r2, r3
 15975 15a8 7B69     		ldr	r3, [r7, #20]
 15976 15aa 1344     		add	r3, r3, r2
 15977 15ac 954A     		ldr	r2, .L654+4
 15978 15ae 1188     		ldrh	r1, [r2]	@ unaligned
 15979 15b0 9278     		ldrb	r2, [r2, #2]
 15980 15b2 1980     		strh	r1, [r3]	@ unaligned
 15981 15b4 9A70     		strb	r2, [r3, #2]
 15982              	.LBE18:
1819:..\src/command_processing.c ****             
 15983              		.loc 1 1819 0 discriminator 2
 15984 15b6 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15985 15ba 0133     		adds	r3, r3, #1
 15986 15bc 87F89330 		strb	r3, [r7, #147]
 15987              	.L540:
1819:..\src/command_processing.c ****             
 15988              		.loc 1 1819 0 is_stmt 0 discriminator 1
 15989 15c0 D7F88830 		ldr	r3, [r7, #136]
 15990 15c4 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15991 15c8 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15992 15cc 9A42     		cmp	r2, r3
 15993 15ce 7EF664AE 		bls	.L603
 15994              	.LBE17:
2081:..\src/command_processing.c ****         }
2082:..\src/command_processing.c ****       
2083:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 15995              		.loc 1 2083 0 is_stmt 1
 15996 15d2 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 356


 15997 15d4 FFF7FEFF 		bl	strlen
 15998 15d8 0346     		mov	r3, r0
 15999 15da 1A46     		mov	r2, r3
 16000 15dc 7B69     		ldr	r3, [r7, #20]
 16001 15de 1344     		add	r3, r3, r2
 16002 15e0 894A     		ldr	r2, .L654+8
 16003 15e2 1D46     		mov	r5, r3
 16004 15e4 1446     		mov	r4, r2
 16005 15e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16006 15e8 2860     		str	r0, [r5]	@ unaligned
 16007 15ea 6960     		str	r1, [r5, #4]	@ unaligned
 16008 15ec AA60     		str	r2, [r5, #8]	@ unaligned
 16009 15ee EB60     		str	r3, [r5, #12]	@ unaligned
 16010 15f0 2068     		ldr	r0, [r4]	@ unaligned
 16011 15f2 2861     		str	r0, [r5, #16]	@ unaligned
2084:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16012              		.loc 1 2084 0
 16013 15f4 D7F88830 		ldr	r3, [r7, #136]
 16014 15f8 B3F8F031 		ldrh	r3, [r3, #496]
 16015 15fc 1A46     		mov	r2, r3
 16016 15fe D7F88830 		ldr	r3, [r7, #136]
 16017 1602 B3F8F231 		ldrh	r3, [r3, #498]
 16018 1606 07F11800 		add	r0, r7, #24
 16019 160a 8049     		ldr	r1, .L654+12
 16020 160c FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****         strcat(info_string, str);
 16021              		.loc 1 2085 0
 16022 1610 07F11803 		add	r3, r7, #24
 16023 1614 1946     		mov	r1, r3
 16024 1616 7869     		ldr	r0, [r7, #20]
 16025 1618 FFF7FEFF 		bl	strcat
2086:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16026              		.loc 1 2086 0
 16027 161c 7869     		ldr	r0, [r7, #20]
 16028 161e FFF7FEFF 		bl	strlen
 16029 1622 0346     		mov	r3, r0
 16030 1624 1A46     		mov	r2, r3
 16031 1626 7B69     		ldr	r3, [r7, #20]
 16032 1628 1344     		add	r3, r3, r2
 16033 162a 764A     		ldr	r2, .L654+4
 16034 162c 1188     		ldrh	r1, [r2]	@ unaligned
 16035 162e 9278     		ldrb	r2, [r2, #2]
 16036 1630 1980     		strh	r1, [r3]	@ unaligned
 16037 1632 9A70     		strb	r2, [r3, #2]
2087:..\src/command_processing.c **** 
2088:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16038              		.loc 1 2088 0
 16039 1634 D7F88830 		ldr	r3, [r7, #136]
 16040 1638 D3F8F421 		ldr	r2, [r3, #500]
 16041 163c D7F88830 		ldr	r3, [r7, #136]
 16042 1640 D3F8F831 		ldr	r3, [r3, #504]
 16043 1644 07F11800 		add	r0, r7, #24
 16044 1648 7149     		ldr	r1, .L654+16
 16045 164a FFF7FEFF 		bl	sprintf
2089:..\src/command_processing.c ****         strcat(info_string, str);
 16046              		.loc 1 2089 0
 16047 164e 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 357


 16048 1652 1946     		mov	r1, r3
 16049 1654 7869     		ldr	r0, [r7, #20]
 16050 1656 FFF7FEFF 		bl	strcat
2090:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16051              		.loc 1 2090 0
 16052 165a 7869     		ldr	r0, [r7, #20]
 16053 165c FFF7FEFF 		bl	strlen
 16054 1660 0346     		mov	r3, r0
 16055 1662 1A46     		mov	r2, r3
 16056 1664 7B69     		ldr	r3, [r7, #20]
 16057 1666 1344     		add	r3, r3, r2
 16058 1668 664A     		ldr	r2, .L654+4
 16059 166a 1188     		ldrh	r1, [r2]	@ unaligned
 16060 166c 9278     		ldrb	r2, [r2, #2]
 16061 166e 1980     		strh	r1, [r3]	@ unaligned
 16062 1670 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16063              		.loc 1 2092 0
 16064 1672 D7F88830 		ldr	r3, [r7, #136]
 16065 1676 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16066 167a 002B     		cmp	r3, #0
 16067 167c 13D0     		beq	.L604
2093:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16068              		.loc 1 2093 0
 16069 167e 7869     		ldr	r0, [r7, #20]
 16070 1680 FFF7FEFF 		bl	strlen
 16071 1684 0346     		mov	r3, r0
 16072 1686 1A46     		mov	r2, r3
 16073 1688 7B69     		ldr	r3, [r7, #20]
 16074 168a 1344     		add	r3, r3, r2
 16075 168c 614A     		ldr	r2, .L654+20
 16076 168e 1D46     		mov	r5, r3
 16077 1690 1446     		mov	r4, r2
 16078 1692 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16079 1694 2860     		str	r0, [r5]	@ unaligned
 16080 1696 6960     		str	r1, [r5, #4]	@ unaligned
 16081 1698 AA60     		str	r2, [r5, #8]	@ unaligned
 16082 169a EB60     		str	r3, [r5, #12]	@ unaligned
 16083 169c 2068     		ldr	r0, [r4]	@ unaligned
 16084 169e 2861     		str	r0, [r5, #16]	@ unaligned
 16085 16a0 2379     		ldrb	r3, [r4, #4]
 16086 16a2 2B75     		strb	r3, [r5, #20]
 16087 16a4 10E0     		b	.L605
 16088              	.L604:
2094:..\src/command_processing.c ****         else
2095:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16089              		.loc 1 2095 0
 16090 16a6 7869     		ldr	r0, [r7, #20]
 16091 16a8 FFF7FEFF 		bl	strlen
 16092 16ac 0346     		mov	r3, r0
 16093 16ae 1A46     		mov	r2, r3
 16094 16b0 7B69     		ldr	r3, [r7, #20]
 16095 16b2 1344     		add	r3, r3, r2
 16096 16b4 584A     		ldr	r2, .L654+24
 16097 16b6 1D46     		mov	r5, r3
 16098 16b8 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 358


 16099 16ba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16100 16bc 2860     		str	r0, [r5]	@ unaligned
 16101 16be 6960     		str	r1, [r5, #4]	@ unaligned
 16102 16c0 AA60     		str	r2, [r5, #8]	@ unaligned
 16103 16c2 EB60     		str	r3, [r5, #12]	@ unaligned
 16104 16c4 2068     		ldr	r0, [r4]	@ unaligned
 16105 16c6 2861     		str	r0, [r5, #16]	@ unaligned
 16106              	.L605:
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16107              		.loc 1 2097 0
 16108 16c8 D7F88830 		ldr	r3, [r7, #136]
 16109 16cc 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16110 16d0 002B     		cmp	r3, #0
 16111 16d2 17D0     		beq	.L606
2098:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16112              		.loc 1 2098 0
 16113 16d4 7869     		ldr	r0, [r7, #20]
 16114 16d6 FFF7FEFF 		bl	strlen
 16115 16da 0346     		mov	r3, r0
 16116 16dc 1A46     		mov	r2, r3
 16117 16de 7B69     		ldr	r3, [r7, #20]
 16118 16e0 1344     		add	r3, r3, r2
 16119 16e2 4E4A     		ldr	r2, .L654+28
 16120 16e4 1D46     		mov	r5, r3
 16121 16e6 1446     		mov	r4, r2
 16122 16e8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16123 16ea 2860     		str	r0, [r5]	@ unaligned
 16124 16ec 6960     		str	r1, [r5, #4]	@ unaligned
 16125 16ee AA60     		str	r2, [r5, #8]	@ unaligned
 16126 16f0 EB60     		str	r3, [r5, #12]	@ unaligned
 16127 16f2 03CC     		ldmia	r4!, {r0, r1}
 16128 16f4 2861     		str	r0, [r5, #16]	@ unaligned
 16129 16f6 6961     		str	r1, [r5, #20]	@ unaligned
 16130 16f8 2388     		ldrh	r3, [r4]	@ unaligned
 16131 16fa A278     		ldrb	r2, [r4, #2]
 16132 16fc 2B83     		strh	r3, [r5, #24]	@ unaligned
 16133 16fe 1346     		mov	r3, r2
 16134 1700 AB76     		strb	r3, [r5, #26]
 16135 1702 13E0     		b	.L607
 16136              	.L606:
2099:..\src/command_processing.c ****         else
2100:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16137              		.loc 1 2100 0
 16138 1704 7869     		ldr	r0, [r7, #20]
 16139 1706 FFF7FEFF 		bl	strlen
 16140 170a 0346     		mov	r3, r0
 16141 170c 1A46     		mov	r2, r3
 16142 170e 7B69     		ldr	r3, [r7, #20]
 16143 1710 1344     		add	r3, r3, r2
 16144 1712 434A     		ldr	r2, .L654+32
 16145 1714 1D46     		mov	r5, r3
 16146 1716 1446     		mov	r4, r2
 16147 1718 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16148 171a 2860     		str	r0, [r5]	@ unaligned
 16149 171c 6960     		str	r1, [r5, #4]	@ unaligned
 16150 171e AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 359


 16151 1720 EB60     		str	r3, [r5, #12]	@ unaligned
 16152 1722 03CC     		ldmia	r4!, {r0, r1}
 16153 1724 2861     		str	r0, [r5, #16]	@ unaligned
 16154 1726 6961     		str	r1, [r5, #20]	@ unaligned
 16155 1728 2388     		ldrh	r3, [r4]	@ unaligned
 16156 172a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16157              	.L607:
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 16158              		.loc 1 2102 0
 16159 172c D7F88830 		ldr	r3, [r7, #136]
 16160 1730 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16161 1734 1A46     		mov	r2, r3
 16162 1736 07F11803 		add	r3, r7, #24
 16163 173a 3A49     		ldr	r1, .L654+36
 16164 173c 1846     		mov	r0, r3
 16165 173e FFF7FEFF 		bl	sprintf
2103:..\src/command_processing.c ****         strcat(info_string, str);
 16166              		.loc 1 2103 0
 16167 1742 07F11803 		add	r3, r7, #24
 16168 1746 1946     		mov	r1, r3
 16169 1748 7869     		ldr	r0, [r7, #20]
 16170 174a FFF7FEFF 		bl	strcat
2104:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16171              		.loc 1 2104 0
 16172 174e 7869     		ldr	r0, [r7, #20]
 16173 1750 FFF7FEFF 		bl	strlen
 16174 1754 0346     		mov	r3, r0
 16175 1756 1A46     		mov	r2, r3
 16176 1758 7B69     		ldr	r3, [r7, #20]
 16177 175a 1344     		add	r3, r3, r2
 16178 175c 294A     		ldr	r2, .L654+4
 16179 175e 1188     		ldrh	r1, [r2]	@ unaligned
 16180 1760 9278     		ldrb	r2, [r2, #2]
 16181 1762 1980     		strh	r1, [r3]	@ unaligned
 16182 1764 9A70     		strb	r2, [r3, #2]
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16183              		.loc 1 2106 0
 16184 1766 D7F88830 		ldr	r3, [r7, #136]
 16185 176a 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16186 176e 012B     		cmp	r3, #1
 16187 1770 40F08980 		bne	.L608
2107:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16188              		.loc 1 2107 0
 16189 1774 7869     		ldr	r0, [r7, #20]
 16190 1776 FFF7FEFF 		bl	strlen
 16191 177a 0346     		mov	r3, r0
 16192 177c 1A46     		mov	r2, r3
 16193 177e 7B69     		ldr	r3, [r7, #20]
 16194 1780 1344     		add	r3, r3, r2
 16195 1782 294A     		ldr	r2, .L654+40
 16196 1784 1C46     		mov	r4, r3
 16197 1786 1546     		mov	r5, r2
 16198 1788 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16199 178a 2060     		str	r0, [r4]	@ unaligned
 16200 178c 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 360


 16201 178e A260     		str	r2, [r4, #8]	@ unaligned
 16202 1790 E360     		str	r3, [r4, #12]	@ unaligned
 16203 1792 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16204 1794 2061     		str	r0, [r4, #16]	@ unaligned
 16205 1796 6161     		str	r1, [r4, #20]	@ unaligned
 16206 1798 A261     		str	r2, [r4, #24]	@ unaligned
 16207 179a E361     		str	r3, [r4, #28]	@ unaligned
2108:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16208              		.loc 1 2108 0
 16209 179c 0023     		movs	r3, #0
 16210 179e C7F89430 		str	r3, [r7, #148]
 16211 17a2 25E0     		b	.L609
 16212              	.L610:
2109:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16213              		.loc 1 2109 0 discriminator 3
 16214 17a4 D7F89430 		ldr	r3, [r7, #148]
 16215 17a8 591C     		adds	r1, r3, #1
 16216 17aa 204A     		ldr	r2, .L654+44
 16217 17ac D7F89430 		ldr	r3, [r7, #148]
 16218 17b0 0233     		adds	r3, r3, #2
 16219 17b2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16220 17b6 07F11800 		add	r0, r7, #24
 16221 17ba 0A46     		mov	r2, r1
 16222 17bc 1C49     		ldr	r1, .L654+48
 16223 17be FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****                 strcat(info_string, str);
 16224              		.loc 1 2110 0 discriminator 3
 16225 17c2 07F11803 		add	r3, r7, #24
 16226 17c6 1946     		mov	r1, r3
 16227 17c8 7869     		ldr	r0, [r7, #20]
 16228 17ca FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16229              		.loc 1 2111 0 discriminator 3
 16230 17ce 7869     		ldr	r0, [r7, #20]
 16231 17d0 FFF7FEFF 		bl	strlen
 16232 17d4 0346     		mov	r3, r0
 16233 17d6 1A46     		mov	r2, r3
 16234 17d8 7B69     		ldr	r3, [r7, #20]
 16235 17da 1344     		add	r3, r3, r2
 16236 17dc 094A     		ldr	r2, .L654+4
 16237 17de 1188     		ldrh	r1, [r2]	@ unaligned
 16238 17e0 9278     		ldrb	r2, [r2, #2]
 16239 17e2 1980     		strh	r1, [r3]	@ unaligned
 16240 17e4 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16241              		.loc 1 2108 0 discriminator 3
 16242 17e6 D7F89430 		ldr	r3, [r7, #148]
 16243 17ea 0133     		adds	r3, r3, #1
 16244 17ec C7F89430 		str	r3, [r7, #148]
 16245              	.L609:
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16246              		.loc 1 2108 0 is_stmt 0 discriminator 1
 16247 17f0 D7F89430 		ldr	r3, [r7, #148]
 16248 17f4 052B     		cmp	r3, #5
 16249 17f6 D5DD     		ble	.L610
2112:..\src/command_processing.c ****             }
2113:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 361


 16250              		.loc 1 2113 0 is_stmt 1
 16251 17f8 0023     		movs	r3, #0
 16252 17fa C7F89430 		str	r3, [r7, #148]
 16253 17fe 3EE0     		b	.L611
 16254              	.L655:
 16255              		.align	2
 16256              	.L654:
 16257 1800 88150000 		.word	.LC209
 16258 1804 A80E0000 		.word	.LC132
 16259 1808 A4150000 		.word	.LC210
 16260 180c B8150000 		.word	.LC211
 16261 1810 DC150000 		.word	.LC212
 16262 1814 00160000 		.word	.LC213
 16263 1818 18160000 		.word	.LC214
 16264 181c 2C160000 		.word	.LC215
 16265 1820 48160000 		.word	.LC216
 16266 1824 64160000 		.word	.LC217
 16267 1828 78160000 		.word	.LC218
 16268 182c 00000000 		.word	g_emg_meas
 16269 1830 98160000 		.word	.LC219
 16270              	.L612:
2114:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16271              		.loc 1 2114 0 discriminator 3
 16272 1834 D7F89430 		ldr	r3, [r7, #148]
 16273 1838 591C     		adds	r1, r3, #1
 16274 183a C64A     		ldr	r2, .L656
 16275 183c D7F89430 		ldr	r3, [r7, #148]
 16276 1840 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16277 1844 07F11800 		add	r0, r7, #24
 16278 1848 0A46     		mov	r2, r1
 16279 184a C349     		ldr	r1, .L656+4
 16280 184c FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 16281              		.loc 1 2115 0 discriminator 3
 16282 1850 07F11803 		add	r3, r7, #24
 16283 1854 1946     		mov	r1, r3
 16284 1856 7869     		ldr	r0, [r7, #20]
 16285 1858 FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16286              		.loc 1 2116 0 discriminator 3
 16287 185c 7869     		ldr	r0, [r7, #20]
 16288 185e FFF7FEFF 		bl	strlen
 16289 1862 0346     		mov	r3, r0
 16290 1864 1A46     		mov	r2, r3
 16291 1866 7B69     		ldr	r3, [r7, #20]
 16292 1868 1344     		add	r3, r3, r2
 16293 186a BC4A     		ldr	r2, .L656+8
 16294 186c 1188     		ldrh	r1, [r2]	@ unaligned
 16295 186e 9278     		ldrb	r2, [r2, #2]
 16296 1870 1980     		strh	r1, [r3]	@ unaligned
 16297 1872 9A70     		strb	r2, [r3, #2]
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16298              		.loc 1 2113 0 discriminator 3
 16299 1874 D7F89430 		ldr	r3, [r7, #148]
 16300 1878 0133     		adds	r3, r3, #1
 16301 187a C7F89430 		str	r3, [r7, #148]
 16302              	.L611:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 362


2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16303              		.loc 1 2113 0 is_stmt 0 discriminator 1
 16304 187e D7F89430 		ldr	r3, [r7, #148]
 16305 1882 012B     		cmp	r3, #1
 16306 1884 D6DD     		ble	.L612
 16307              	.L608:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c ****         }
2119:..\src/command_processing.c ****         
2120:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16308              		.loc 1 2120 0 is_stmt 1
 16309 1886 D7F88830 		ldr	r3, [r7, #136]
 16310 188a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16311 188e 002B     		cmp	r3, #0
 16312 1890 63D0     		beq	.L613
2121:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16313              		.loc 1 2121 0
 16314 1892 D7F88830 		ldr	r3, [r7, #136]
 16315 1896 D3F8A422 		ldr	r2, [r3, #676]
 16316 189a 07F11803 		add	r3, r7, #24
 16317 189e B049     		ldr	r1, .L656+12
 16318 18a0 1846     		mov	r0, r3
 16319 18a2 FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 16320              		.loc 1 2122 0
 16321 18a6 07F11803 		add	r3, r7, #24
 16322 18aa 1946     		mov	r1, r3
 16323 18ac 7869     		ldr	r0, [r7, #20]
 16324 18ae FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16325              		.loc 1 2123 0
 16326 18b2 7869     		ldr	r0, [r7, #20]
 16327 18b4 FFF7FEFF 		bl	strlen
 16328 18b8 0346     		mov	r3, r0
 16329 18ba 1A46     		mov	r2, r3
 16330 18bc 7B69     		ldr	r3, [r7, #20]
 16331 18be 1344     		add	r3, r3, r2
 16332 18c0 A64A     		ldr	r2, .L656+8
 16333 18c2 1188     		ldrh	r1, [r2]	@ unaligned
 16334 18c4 9278     		ldrb	r2, [r2, #2]
 16335 18c6 1980     		strh	r1, [r3]	@ unaligned
 16336 18c8 9A70     		strb	r2, [r3, #2]
2124:..\src/command_processing.c ****             
2125:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16337              		.loc 1 2125 0
 16338 18ca D7F88830 		ldr	r3, [r7, #136]
 16339 18ce D3F8A822 		ldr	r2, [r3, #680]
 16340 18d2 07F11803 		add	r3, r7, #24
 16341 18d6 A349     		ldr	r1, .L656+16
 16342 18d8 1846     		mov	r0, r3
 16343 18da FFF7FEFF 		bl	sprintf
2126:..\src/command_processing.c ****             strcat(info_string, str);
 16344              		.loc 1 2126 0
 16345 18de 07F11803 		add	r3, r7, #24
 16346 18e2 1946     		mov	r1, r3
 16347 18e4 7869     		ldr	r0, [r7, #20]
 16348 18e6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 363


2127:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16349              		.loc 1 2127 0
 16350 18ea 7869     		ldr	r0, [r7, #20]
 16351 18ec FFF7FEFF 		bl	strlen
 16352 18f0 0346     		mov	r3, r0
 16353 18f2 1A46     		mov	r2, r3
 16354 18f4 7B69     		ldr	r3, [r7, #20]
 16355 18f6 1344     		add	r3, r3, r2
 16356 18f8 984A     		ldr	r2, .L656+8
 16357 18fa 1188     		ldrh	r1, [r2]	@ unaligned
 16358 18fc 9278     		ldrb	r2, [r2, #2]
 16359 18fe 1980     		strh	r1, [r3]	@ unaligned
 16360 1900 9A70     		strb	r2, [r3, #2]
2128:..\src/command_processing.c ****             
2129:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16361              		.loc 1 2129 0
 16362 1902 D7F88830 		ldr	r3, [r7, #136]
 16363 1906 D3F8A022 		ldr	r2, [r3, #672]
 16364 190a D7F88830 		ldr	r3, [r7, #136]
 16365 190e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16366 1912 1846     		mov	r0, r3
 16367 1914 D7F88810 		ldr	r1, [r7, #136]
 16368 1918 0346     		mov	r3, r0
 16369 191a 5B00     		lsls	r3, r3, #1
 16370 191c 0344     		add	r3, r3, r0
 16371 191e 1B01     		lsls	r3, r3, #4
 16372 1920 0B44     		add	r3, r3, r1
 16373 1922 03F29513 		addw	r3, r3, #405
 16374 1926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16375 1928 1A41     		asrs	r2, r2, r3
 16376 192a 07F11803 		add	r3, r7, #24
 16377 192e 8E49     		ldr	r1, .L656+20
 16378 1930 1846     		mov	r0, r3
 16379 1932 FFF7FEFF 		bl	sprintf
2130:..\src/command_processing.c ****             strcat(info_string, str);
 16380              		.loc 1 2130 0
 16381 1936 07F11803 		add	r3, r7, #24
 16382 193a 1946     		mov	r1, r3
 16383 193c 7869     		ldr	r0, [r7, #20]
 16384 193e FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16385              		.loc 1 2131 0
 16386 1942 7869     		ldr	r0, [r7, #20]
 16387 1944 FFF7FEFF 		bl	strlen
 16388 1948 0346     		mov	r3, r0
 16389 194a 1A46     		mov	r2, r3
 16390 194c 7B69     		ldr	r3, [r7, #20]
 16391 194e 1344     		add	r3, r3, r2
 16392 1950 824A     		ldr	r2, .L656+8
 16393 1952 1188     		ldrh	r1, [r2]	@ unaligned
 16394 1954 9278     		ldrb	r2, [r2, #2]
 16395 1956 1980     		strh	r1, [r3]	@ unaligned
 16396 1958 9A70     		strb	r2, [r3, #2]
 16397              	.L613:
2132:..\src/command_processing.c ****         }
2133:..\src/command_processing.c **** 
2134:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 364


 16398              		.loc 1 2134 0
 16399 195a D7F88830 		ldr	r3, [r7, #136]
 16400 195e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16401 1962 002B     		cmp	r3, #0
 16402 1964 00F0CF81 		beq	.L614
2135:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16403              		.loc 1 2135 0
 16404 1968 804B     		ldr	r3, .L656+24
 16405 196a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16406 196c 1A46     		mov	r2, r3
 16407 196e 07F11803 		add	r3, r7, #24
 16408 1972 7F49     		ldr	r1, .L656+28
 16409 1974 1846     		mov	r0, r3
 16410 1976 FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16411              		.loc 1 2136 0
 16412 197a 07F11803 		add	r3, r7, #24
 16413 197e 1946     		mov	r1, r3
 16414 1980 7869     		ldr	r0, [r7, #20]
 16415 1982 FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****             
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16416              		.loc 1 2138 0
 16417 1986 7869     		ldr	r0, [r7, #20]
 16418 1988 FFF7FEFF 		bl	strlen
 16419 198c 0346     		mov	r3, r0
 16420 198e 1A46     		mov	r2, r3
 16421 1990 7B69     		ldr	r3, [r7, #20]
 16422 1992 1344     		add	r3, r3, r2
 16423 1994 714A     		ldr	r2, .L656+8
 16424 1996 1188     		ldrh	r1, [r2]	@ unaligned
 16425 1998 9278     		ldrb	r2, [r2, #2]
 16426 199a 1980     		strh	r1, [r3]	@ unaligned
 16427 199c 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****             
2140:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16428              		.loc 1 2140 0
 16429 199e 7869     		ldr	r0, [r7, #20]
 16430 19a0 FFF7FEFF 		bl	strlen
 16431 19a4 0346     		mov	r3, r0
 16432 19a6 1A46     		mov	r2, r3
 16433 19a8 7B69     		ldr	r3, [r7, #20]
 16434 19aa 1344     		add	r3, r3, r2
 16435 19ac 714A     		ldr	r2, .L656+32
 16436 19ae 1D46     		mov	r5, r3
 16437 19b0 1446     		mov	r4, r2
 16438 19b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16439 19b4 2860     		str	r0, [r5]	@ unaligned
 16440 19b6 6960     		str	r1, [r5, #4]	@ unaligned
 16441 19b8 AA60     		str	r2, [r5, #8]	@ unaligned
 16442 19ba EB60     		str	r3, [r5, #12]	@ unaligned
 16443 19bc 2068     		ldr	r0, [r4]	@ unaligned
 16444 19be 2861     		str	r0, [r5, #16]	@ unaligned
 16445 19c0 2379     		ldrb	r3, [r4, #4]
 16446 19c2 2B75     		strb	r3, [r5, #20]
2141:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16447              		.loc 1 2141 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 365


 16448 19c4 0023     		movs	r3, #0
 16449 19c6 C7F89430 		str	r3, [r7, #148]
 16450 19ca 85E1     		b	.L615
 16451              	.L626:
2142:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16452              		.loc 1 2142 0
 16453 19cc 6A4A     		ldr	r2, .L656+36
 16454 19ce D7F89430 		ldr	r3, [r7, #148]
 16455 19d2 1344     		add	r3, r3, r2
 16456 19d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16457 19d6 07F11800 		add	r0, r7, #24
 16458 19da D7F89420 		ldr	r2, [r7, #148]
 16459 19de 6749     		ldr	r1, .L656+40
 16460 19e0 FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16461              		.loc 1 2143 0
 16462 19e4 07F11803 		add	r3, r7, #24
 16463 19e8 1946     		mov	r1, r3
 16464 19ea 7869     		ldr	r0, [r7, #20]
 16465 19ec FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 
2145:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16466              		.loc 1 2145 0
 16467 19f0 07F11803 		add	r3, r7, #24
 16468 19f4 624A     		ldr	r2, .L656+44
 16469 19f6 1C46     		mov	r4, r3
 16470 19f8 1546     		mov	r5, r2
 16471 19fa 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16472 19fc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16473 19fe 2B68     		ldr	r3, [r5]
 16474 1a00 2380     		strh	r3, [r4]	@ movhi
2146:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16475              		.loc 1 2146 0
 16476 1a02 5D4A     		ldr	r2, .L656+36
 16477 1a04 D7F89430 		ldr	r3, [r7, #148]
 16478 1a08 1344     		add	r3, r3, r2
 16479 1a0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16480 1a0c 1946     		mov	r1, r3
 16481 1a0e D7F88820 		ldr	r2, [r7, #136]
 16482 1a12 0B46     		mov	r3, r1
 16483 1a14 9B00     		lsls	r3, r3, #2
 16484 1a16 0B44     		add	r3, r3, r1
 16485 1a18 1344     		add	r3, r3, r2
 16486 1a1a 03F20223 		addw	r3, r3, #514
 16487 1a1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16488 1a20 002B     		cmp	r3, #0
 16489 1a22 0FD0     		beq	.L616
2147:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16490              		.loc 1 2147 0
 16491 1a24 07F11803 		add	r3, r7, #24
 16492 1a28 1846     		mov	r0, r3
 16493 1a2a FFF7FEFF 		bl	strlen
 16494 1a2e 0346     		mov	r3, r0
 16495 1a30 1A46     		mov	r2, r3
 16496 1a32 07F11803 		add	r3, r7, #24
 16497 1a36 1344     		add	r3, r3, r2
 16498 1a38 524A     		ldr	r2, .L656+48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 366


 16499 1a3a 1068     		ldr	r0, [r2]	@ unaligned
 16500 1a3c 1860     		str	r0, [r3]	@ unaligned
 16501 1a3e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16502 1a40 9A80     		strh	r2, [r3, #4]	@ unaligned
 16503 1a42 0EE0     		b	.L617
 16504              	.L616:
2148:..\src/command_processing.c ****                 else
2149:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16505              		.loc 1 2149 0
 16506 1a44 07F11803 		add	r3, r7, #24
 16507 1a48 1846     		mov	r0, r3
 16508 1a4a FFF7FEFF 		bl	strlen
 16509 1a4e 0346     		mov	r3, r0
 16510 1a50 1A46     		mov	r2, r3
 16511 1a52 07F11803 		add	r3, r7, #24
 16512 1a56 1344     		add	r3, r3, r2
 16513 1a58 4B4A     		ldr	r2, .L656+52
 16514 1a5a 1068     		ldr	r0, [r2]	@ unaligned
 16515 1a5c 1860     		str	r0, [r3]	@ unaligned
 16516 1a5e 1279     		ldrb	r2, [r2, #4]
 16517 1a60 1A71     		strb	r2, [r3, #4]
 16518              	.L617:
2150:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16519              		.loc 1 2150 0
 16520 1a62 07F11803 		add	r3, r7, #24
 16521 1a66 1846     		mov	r0, r3
 16522 1a68 FFF7FEFF 		bl	strlen
 16523 1a6c 0346     		mov	r3, r0
 16524 1a6e 1A46     		mov	r2, r3
 16525 1a70 07F11803 		add	r3, r7, #24
 16526 1a74 1344     		add	r3, r3, r2
 16527 1a76 454A     		ldr	r2, .L656+56
 16528 1a78 1C46     		mov	r4, r3
 16529 1a7a 1346     		mov	r3, r2
 16530 1a7c 07CB     		ldmia	r3!, {r0, r1, r2}
 16531 1a7e 2060     		str	r0, [r4]	@ unaligned
 16532 1a80 6160     		str	r1, [r4, #4]	@ unaligned
 16533 1a82 A260     		str	r2, [r4, #8]	@ unaligned
 16534 1a84 1B88     		ldrh	r3, [r3]	@ unaligned
 16535 1a86 A381     		strh	r3, [r4, #12]	@ unaligned
2151:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16536              		.loc 1 2151 0
 16537 1a88 3B4A     		ldr	r2, .L656+36
 16538 1a8a D7F89430 		ldr	r3, [r7, #148]
 16539 1a8e 1344     		add	r3, r3, r2
 16540 1a90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16541 1a92 1946     		mov	r1, r3
 16542 1a94 D7F88820 		ldr	r2, [r7, #136]
 16543 1a98 0B46     		mov	r3, r1
 16544 1a9a 9B00     		lsls	r3, r3, #2
 16545 1a9c 0B44     		add	r3, r3, r1
 16546 1a9e 1344     		add	r3, r3, r2
 16547 1aa0 03F20323 		addw	r3, r3, #515
 16548 1aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16549 1aa6 002B     		cmp	r3, #0
 16550 1aa8 0FD0     		beq	.L618
2152:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 367


 16551              		.loc 1 2152 0
 16552 1aaa 07F11803 		add	r3, r7, #24
 16553 1aae 1846     		mov	r0, r3
 16554 1ab0 FFF7FEFF 		bl	strlen
 16555 1ab4 0346     		mov	r3, r0
 16556 1ab6 1A46     		mov	r2, r3
 16557 1ab8 07F11803 		add	r3, r7, #24
 16558 1abc 1344     		add	r3, r3, r2
 16559 1abe 314A     		ldr	r2, .L656+48
 16560 1ac0 1068     		ldr	r0, [r2]	@ unaligned
 16561 1ac2 1860     		str	r0, [r3]	@ unaligned
 16562 1ac4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16563 1ac6 9A80     		strh	r2, [r3, #4]	@ unaligned
 16564 1ac8 0EE0     		b	.L619
 16565              	.L618:
2153:..\src/command_processing.c ****                 else
2154:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16566              		.loc 1 2154 0
 16567 1aca 07F11803 		add	r3, r7, #24
 16568 1ace 1846     		mov	r0, r3
 16569 1ad0 FFF7FEFF 		bl	strlen
 16570 1ad4 0346     		mov	r3, r0
 16571 1ad6 1A46     		mov	r2, r3
 16572 1ad8 07F11803 		add	r3, r7, #24
 16573 1adc 1344     		add	r3, r3, r2
 16574 1ade 2A4A     		ldr	r2, .L656+52
 16575 1ae0 1068     		ldr	r0, [r2]	@ unaligned
 16576 1ae2 1860     		str	r0, [r3]	@ unaligned
 16577 1ae4 1279     		ldrb	r2, [r2, #4]
 16578 1ae6 1A71     		strb	r2, [r3, #4]
 16579              	.L619:
2155:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16580              		.loc 1 2155 0
 16581 1ae8 07F11803 		add	r3, r7, #24
 16582 1aec 1846     		mov	r0, r3
 16583 1aee FFF7FEFF 		bl	strlen
 16584 1af2 0346     		mov	r3, r0
 16585 1af4 1A46     		mov	r2, r3
 16586 1af6 07F11803 		add	r3, r7, #24
 16587 1afa 1344     		add	r3, r3, r2
 16588 1afc 244A     		ldr	r2, .L656+60
 16589 1afe 1D46     		mov	r5, r3
 16590 1b00 1446     		mov	r4, r2
 16591 1b02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16592 1b04 2860     		str	r0, [r5]	@ unaligned
 16593 1b06 6960     		str	r1, [r5, #4]	@ unaligned
 16594 1b08 AA60     		str	r2, [r5, #8]	@ unaligned
 16595 1b0a EB60     		str	r3, [r5, #12]	@ unaligned
 16596 1b0c 2378     		ldrb	r3, [r4]
 16597 1b0e 2B74     		strb	r3, [r5, #16]
2156:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16598              		.loc 1 2156 0
 16599 1b10 194A     		ldr	r2, .L656+36
 16600 1b12 D7F89430 		ldr	r3, [r7, #148]
 16601 1b16 1344     		add	r3, r3, r2
 16602 1b18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16603 1b1a 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 368


 16604 1b1c D7F88820 		ldr	r2, [r7, #136]
 16605 1b20 0B46     		mov	r3, r1
 16606 1b22 9B00     		lsls	r3, r3, #2
 16607 1b24 0B44     		add	r3, r3, r1
 16608 1b26 1344     		add	r3, r3, r2
 16609 1b28 03F50173 		add	r3, r3, #516
 16610 1b2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16611 1b2e 002B     		cmp	r3, #0
 16612 1b30 30D0     		beq	.L620
2157:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16613              		.loc 1 2157 0
 16614 1b32 07F11803 		add	r3, r7, #24
 16615 1b36 1846     		mov	r0, r3
 16616 1b38 FFF7FEFF 		bl	strlen
 16617 1b3c 0346     		mov	r3, r0
 16618 1b3e 1A46     		mov	r2, r3
 16619 1b40 07F11803 		add	r3, r7, #24
 16620 1b44 1344     		add	r3, r3, r2
 16621 1b46 0F4A     		ldr	r2, .L656+48
 16622 1b48 1068     		ldr	r0, [r2]	@ unaligned
 16623 1b4a 1860     		str	r0, [r3]	@ unaligned
 16624 1b4c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16625 1b4e 9A80     		strh	r2, [r3, #4]	@ unaligned
 16626 1b50 2FE0     		b	.L621
 16627              	.L657:
 16628 1b52 00BF     		.align	2
 16629              	.L656:
 16630 1b54 00000000 		.word	g_emg_meas
 16631 1b58 A8160000 		.word	.LC220
 16632 1b5c A80E0000 		.word	.LC132
 16633 1b60 BC160000 		.word	.LC221
 16634 1b64 D8160000 		.word	.LC222
 16635 1b68 00170000 		.word	.LC223
 16636 1b6c 00000000 		.word	N_IMU_Connected
 16637 1b70 14170000 		.word	.LC224
 16638 1b74 28170000 		.word	.LC225
 16639 1b78 00000000 		.word	IMU_connected
 16640 1b7c 40170000 		.word	.LC226
 16641 1b80 54170000 		.word	.LC227
 16642 1b84 20100000 		.word	.LC153
 16643 1b88 28100000 		.word	.LC154
 16644 1b8c 68170000 		.word	.LC228
 16645 1b90 78170000 		.word	.LC229
 16646              	.L620:
2158:..\src/command_processing.c ****                 else
2159:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16647              		.loc 1 2159 0
 16648 1b94 07F11803 		add	r3, r7, #24
 16649 1b98 1846     		mov	r0, r3
 16650 1b9a FFF7FEFF 		bl	strlen
 16651 1b9e 0346     		mov	r3, r0
 16652 1ba0 1A46     		mov	r2, r3
 16653 1ba2 07F11803 		add	r3, r7, #24
 16654 1ba6 1344     		add	r3, r3, r2
 16655 1ba8 CD4A     		ldr	r2, .L658
 16656 1baa 1068     		ldr	r0, [r2]	@ unaligned
 16657 1bac 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 369


 16658 1bae 1279     		ldrb	r2, [r2, #4]
 16659 1bb0 1A71     		strb	r2, [r3, #4]
 16660              	.L621:
2160:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 16661              		.loc 1 2160 0
 16662 1bb2 07F11803 		add	r3, r7, #24
 16663 1bb6 1846     		mov	r0, r3
 16664 1bb8 FFF7FEFF 		bl	strlen
 16665 1bbc 0346     		mov	r3, r0
 16666 1bbe 1A46     		mov	r2, r3
 16667 1bc0 07F11803 		add	r3, r7, #24
 16668 1bc4 1344     		add	r3, r3, r2
 16669 1bc6 C74A     		ldr	r2, .L658+4
 16670 1bc8 1C46     		mov	r4, r3
 16671 1bca 1346     		mov	r3, r2
 16672 1bcc 07CB     		ldmia	r3!, {r0, r1, r2}
 16673 1bce 2060     		str	r0, [r4]	@ unaligned
 16674 1bd0 6160     		str	r1, [r4, #4]	@ unaligned
 16675 1bd2 A260     		str	r2, [r4, #8]	@ unaligned
 16676 1bd4 1B88     		ldrh	r3, [r3]	@ unaligned
 16677 1bd6 A381     		strh	r3, [r4, #12]	@ unaligned
2161:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16678              		.loc 1 2161 0
 16679 1bd8 C34A     		ldr	r2, .L658+8
 16680 1bda D7F89430 		ldr	r3, [r7, #148]
 16681 1bde 1344     		add	r3, r3, r2
 16682 1be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16683 1be2 1946     		mov	r1, r3
 16684 1be4 D7F88820 		ldr	r2, [r7, #136]
 16685 1be8 0B46     		mov	r3, r1
 16686 1bea 9B00     		lsls	r3, r3, #2
 16687 1bec 0B44     		add	r3, r3, r1
 16688 1bee 1344     		add	r3, r3, r2
 16689 1bf0 03F20523 		addw	r3, r3, #517
 16690 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16691 1bf6 002B     		cmp	r3, #0
 16692 1bf8 0FD0     		beq	.L622
2162:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16693              		.loc 1 2162 0
 16694 1bfa 07F11803 		add	r3, r7, #24
 16695 1bfe 1846     		mov	r0, r3
 16696 1c00 FFF7FEFF 		bl	strlen
 16697 1c04 0346     		mov	r3, r0
 16698 1c06 1A46     		mov	r2, r3
 16699 1c08 07F11803 		add	r3, r7, #24
 16700 1c0c 1344     		add	r3, r3, r2
 16701 1c0e B74A     		ldr	r2, .L658+12
 16702 1c10 1068     		ldr	r0, [r2]	@ unaligned
 16703 1c12 1860     		str	r0, [r3]	@ unaligned
 16704 1c14 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16705 1c16 9A80     		strh	r2, [r3, #4]	@ unaligned
 16706 1c18 0EE0     		b	.L623
 16707              	.L622:
2163:..\src/command_processing.c ****                 else
2164:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16708              		.loc 1 2164 0
 16709 1c1a 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 370


 16710 1c1e 1846     		mov	r0, r3
 16711 1c20 FFF7FEFF 		bl	strlen
 16712 1c24 0346     		mov	r3, r0
 16713 1c26 1A46     		mov	r2, r3
 16714 1c28 07F11803 		add	r3, r7, #24
 16715 1c2c 1344     		add	r3, r3, r2
 16716 1c2e AC4A     		ldr	r2, .L658
 16717 1c30 1068     		ldr	r0, [r2]	@ unaligned
 16718 1c32 1860     		str	r0, [r3]	@ unaligned
 16719 1c34 1279     		ldrb	r2, [r2, #4]
 16720 1c36 1A71     		strb	r2, [r3, #4]
 16721              	.L623:
2165:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16722              		.loc 1 2165 0
 16723 1c38 07F11803 		add	r3, r7, #24
 16724 1c3c 1846     		mov	r0, r3
 16725 1c3e FFF7FEFF 		bl	strlen
 16726 1c42 0346     		mov	r3, r0
 16727 1c44 1A46     		mov	r2, r3
 16728 1c46 07F11803 		add	r3, r7, #24
 16729 1c4a 1344     		add	r3, r3, r2
 16730 1c4c A84A     		ldr	r2, .L658+16
 16731 1c4e 1C46     		mov	r4, r3
 16732 1c50 1346     		mov	r3, r2
 16733 1c52 07CB     		ldmia	r3!, {r0, r1, r2}
 16734 1c54 2060     		str	r0, [r4]	@ unaligned
 16735 1c56 6160     		str	r1, [r4, #4]	@ unaligned
 16736 1c58 A260     		str	r2, [r4, #8]	@ unaligned
 16737 1c5a 1A88     		ldrh	r2, [r3]	@ unaligned
 16738 1c5c 9B78     		ldrb	r3, [r3, #2]
 16739 1c5e A281     		strh	r2, [r4, #12]	@ unaligned
 16740 1c60 A373     		strb	r3, [r4, #14]
2166:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16741              		.loc 1 2166 0
 16742 1c62 A14A     		ldr	r2, .L658+8
 16743 1c64 D7F89430 		ldr	r3, [r7, #148]
 16744 1c68 1344     		add	r3, r3, r2
 16745 1c6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16746 1c6c 1946     		mov	r1, r3
 16747 1c6e D7F88820 		ldr	r2, [r7, #136]
 16748 1c72 0B46     		mov	r3, r1
 16749 1c74 9B00     		lsls	r3, r3, #2
 16750 1c76 0B44     		add	r3, r3, r1
 16751 1c78 1344     		add	r3, r3, r2
 16752 1c7a 03F20623 		addw	r3, r3, #518
 16753 1c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16754 1c80 002B     		cmp	r3, #0
 16755 1c82 0FD0     		beq	.L624
2167:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16756              		.loc 1 2167 0
 16757 1c84 07F11803 		add	r3, r7, #24
 16758 1c88 1846     		mov	r0, r3
 16759 1c8a FFF7FEFF 		bl	strlen
 16760 1c8e 0346     		mov	r3, r0
 16761 1c90 1A46     		mov	r2, r3
 16762 1c92 07F11803 		add	r3, r7, #24
 16763 1c96 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 371


 16764 1c98 944A     		ldr	r2, .L658+12
 16765 1c9a 1068     		ldr	r0, [r2]	@ unaligned
 16766 1c9c 1860     		str	r0, [r3]	@ unaligned
 16767 1c9e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16768 1ca0 9A80     		strh	r2, [r3, #4]	@ unaligned
 16769 1ca2 0EE0     		b	.L625
 16770              	.L624:
2168:..\src/command_processing.c ****                 else
2169:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16771              		.loc 1 2169 0
 16772 1ca4 07F11803 		add	r3, r7, #24
 16773 1ca8 1846     		mov	r0, r3
 16774 1caa FFF7FEFF 		bl	strlen
 16775 1cae 0346     		mov	r3, r0
 16776 1cb0 1A46     		mov	r2, r3
 16777 1cb2 07F11803 		add	r3, r7, #24
 16778 1cb6 1344     		add	r3, r3, r2
 16779 1cb8 894A     		ldr	r2, .L658
 16780 1cba 1068     		ldr	r0, [r2]	@ unaligned
 16781 1cbc 1860     		str	r0, [r3]	@ unaligned
 16782 1cbe 1279     		ldrb	r2, [r2, #4]
 16783 1cc0 1A71     		strb	r2, [r3, #4]
 16784              	.L625:
2170:..\src/command_processing.c ****                      
2171:..\src/command_processing.c ****                 strcat(info_string, str);
 16785              		.loc 1 2171 0 discriminator 2
 16786 1cc2 07F11803 		add	r3, r7, #24
 16787 1cc6 1946     		mov	r1, r3
 16788 1cc8 7869     		ldr	r0, [r7, #20]
 16789 1cca FFF7FEFF 		bl	strcat
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16790              		.loc 1 2141 0 discriminator 2
 16791 1cce D7F89430 		ldr	r3, [r7, #148]
 16792 1cd2 0133     		adds	r3, r3, #1
 16793 1cd4 C7F89430 		str	r3, [r7, #148]
 16794              	.L615:
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16795              		.loc 1 2141 0 is_stmt 0 discriminator 1
 16796 1cd8 864B     		ldr	r3, .L658+20
 16797 1cda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16798 1cdc 1A46     		mov	r2, r3
 16799 1cde D7F89430 		ldr	r3, [r7, #148]
 16800 1ce2 9A42     		cmp	r2, r3
 16801 1ce4 3FF772AE 		bgt	.L626
2172:..\src/command_processing.c ****             }       
2173:..\src/command_processing.c ****             
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16802              		.loc 1 2174 0 is_stmt 1
 16803 1ce8 7869     		ldr	r0, [r7, #20]
 16804 1cea FFF7FEFF 		bl	strlen
 16805 1cee 0346     		mov	r3, r0
 16806 1cf0 1A46     		mov	r2, r3
 16807 1cf2 7B69     		ldr	r3, [r7, #20]
 16808 1cf4 1344     		add	r3, r3, r2
 16809 1cf6 804A     		ldr	r2, .L658+24
 16810 1cf8 1188     		ldrh	r1, [r2]	@ unaligned
 16811 1cfa 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 372


 16812 1cfc 1980     		strh	r1, [r3]	@ unaligned
 16813 1cfe 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****           
2176:..\src/command_processing.c ****             IMU_reading_info(info_string);
 16814              		.loc 1 2176 0
 16815 1d00 7869     		ldr	r0, [r7, #20]
 16816 1d02 FFF7FEFF 		bl	IMU_reading_info
 16817              	.L614:
2177:..\src/command_processing.c ****         }
2178:..\src/command_processing.c ****         
2179:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16818              		.loc 1 2179 0
 16819 1d06 7869     		ldr	r0, [r7, #20]
 16820 1d08 FFF7FEFF 		bl	strlen
 16821 1d0c 0346     		mov	r3, r0
 16822 1d0e 1A46     		mov	r2, r3
 16823 1d10 7B69     		ldr	r3, [r7, #20]
 16824 1d12 1344     		add	r3, r3, r2
 16825 1d14 784A     		ldr	r2, .L658+24
 16826 1d16 1188     		ldrh	r1, [r2]	@ unaligned
 16827 1d18 9278     		ldrb	r2, [r2, #2]
 16828 1d1a 1980     		strh	r1, [r3]	@ unaligned
 16829 1d1c 9A70     		strb	r2, [r3, #2]
2180:..\src/command_processing.c **** 
2181:..\src/command_processing.c **** #ifdef GENERIC_FW   
2182:..\src/command_processing.c ****         int j;
2183:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 16830              		.loc 1 2183 0
 16831 1d1e 7869     		ldr	r0, [r7, #20]
 16832 1d20 FFF7FEFF 		bl	strlen
 16833 1d24 0346     		mov	r3, r0
 16834 1d26 1A46     		mov	r2, r3
 16835 1d28 7B69     		ldr	r3, [r7, #20]
 16836 1d2a 1344     		add	r3, r3, r2
 16837 1d2c 734A     		ldr	r2, .L658+28
 16838 1d2e 1D46     		mov	r5, r3
 16839 1d30 1446     		mov	r4, r2
 16840 1d32 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16841 1d34 2860     		str	r0, [r5]	@ unaligned
 16842 1d36 6960     		str	r1, [r5, #4]	@ unaligned
 16843 1d38 AA60     		str	r2, [r5, #8]	@ unaligned
 16844 1d3a EB60     		str	r3, [r5, #12]	@ unaligned
 16845 1d3c 03CC     		ldmia	r4!, {r0, r1}
 16846 1d3e 2861     		str	r0, [r5, #16]	@ unaligned
 16847 1d40 6961     		str	r1, [r5, #20]	@ unaligned
2184:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 16848              		.loc 1 2184 0
 16849 1d42 0023     		movs	r3, #0
 16850 1d44 C7F89430 		str	r3, [r7, #148]
 16851 1d48 A1E0     		b	.L627
 16852              	.L636:
2185:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16853              		.loc 1 2185 0
 16854 1d4a 6D4A     		ldr	r2, .L658+32
 16855 1d4c D7F89430 		ldr	r3, [r7, #148]
 16856 1d50 1344     		add	r3, r3, r2
 16857 1d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 373


 16858 1d54 07F11800 		add	r0, r7, #24
 16859 1d58 D7F89420 		ldr	r2, [r7, #148]
 16860 1d5c 6949     		ldr	r1, .L658+36
 16861 1d5e FFF7FEFF 		bl	sprintf
2186:..\src/command_processing.c ****             strcat(info_string, str);
 16862              		.loc 1 2186 0
 16863 1d62 07F11803 		add	r3, r7, #24
 16864 1d66 1946     		mov	r1, r3
 16865 1d68 7869     		ldr	r0, [r7, #20]
 16866 1d6a FFF7FEFF 		bl	strcat
2187:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 16867              		.loc 1 2187 0
 16868 1d6e D7F88830 		ldr	r3, [r7, #136]
 16869 1d72 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16870 1d76 1A46     		mov	r2, r3
 16871 1d78 D7F89430 		ldr	r3, [r7, #148]
 16872 1d7c 9A42     		cmp	r2, r3
 16873 1d7e 14D1     		bne	.L628
2188:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 16874              		.loc 1 2188 0
 16875 1d80 D7F88830 		ldr	r3, [r7, #136]
 16876 1d84 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16877 1d88 002B     		cmp	r3, #0
 16878 1d8a 01D0     		beq	.L629
 16879              		.loc 1 2188 0 is_stmt 0 discriminator 1
 16880 1d8c 5E4A     		ldr	r2, .L658+40
 16881 1d8e 00E0     		b	.L630
 16882              	.L629:
 16883              		.loc 1 2188 0 discriminator 2
 16884 1d90 5E4A     		ldr	r2, .L658+44
 16885              	.L630:
 16886              		.loc 1 2188 0 discriminator 4
 16887 1d92 07F11803 		add	r3, r7, #24
 16888 1d96 5E49     		ldr	r1, .L658+48
 16889 1d98 1846     		mov	r0, r3
 16890 1d9a FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c ****                 strcat(info_string, str);
 16891              		.loc 1 2189 0 is_stmt 1 discriminator 4
 16892 1d9e 07F11803 		add	r3, r7, #24
 16893 1da2 1946     		mov	r1, r3
 16894 1da4 7869     		ldr	r0, [r7, #20]
 16895 1da6 FFF7FEFF 		bl	strcat
 16896              	.L628:
2190:..\src/command_processing.c ****             }
2191:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16897              		.loc 1 2191 0
 16898 1daa 7869     		ldr	r0, [r7, #20]
 16899 1dac FFF7FEFF 		bl	strlen
 16900 1db0 0346     		mov	r3, r0
 16901 1db2 1A46     		mov	r2, r3
 16902 1db4 7B69     		ldr	r3, [r7, #20]
 16903 1db6 1344     		add	r3, r3, r2
 16904 1db8 4F4A     		ldr	r2, .L658+24
 16905 1dba 1188     		ldrh	r1, [r2]	@ unaligned
 16906 1dbc 9278     		ldrb	r2, [r2, #2]
 16907 1dbe 1980     		strh	r1, [r3]	@ unaligned
 16908 1dc0 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 374


2192:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 16909              		.loc 1 2192 0
 16910 1dc2 4F4A     		ldr	r2, .L658+32
 16911 1dc4 D7F89430 		ldr	r3, [r7, #148]
 16912 1dc8 1344     		add	r3, r3, r2
 16913 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16914 1dcc 002B     		cmp	r3, #0
 16915 1dce 59D0     		beq	.L631
2193:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 16916              		.loc 1 2193 0
 16917 1dd0 7869     		ldr	r0, [r7, #20]
 16918 1dd2 FFF7FEFF 		bl	strlen
 16919 1dd6 0346     		mov	r3, r0
 16920 1dd8 1A46     		mov	r2, r3
 16921 1dda 7B69     		ldr	r3, [r7, #20]
 16922 1ddc 1344     		add	r3, r3, r2
 16923 1dde 4D4A     		ldr	r2, .L658+52
 16924 1de0 1D46     		mov	r5, r3
 16925 1de2 1446     		mov	r4, r2
 16926 1de4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16927 1de6 2860     		str	r0, [r5]	@ unaligned
 16928 1de8 6960     		str	r1, [r5, #4]	@ unaligned
 16929 1dea AA60     		str	r2, [r5, #8]	@ unaligned
 16930 1dec EB60     		str	r3, [r5, #12]	@ unaligned
 16931 1dee 2068     		ldr	r0, [r4]	@ unaligned
 16932 1df0 2861     		str	r0, [r5, #16]	@ unaligned
 16933 1df2 A388     		ldrh	r3, [r4, #4]	@ unaligned
 16934 1df4 AB82     		strh	r3, [r5, #20]	@ unaligned
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16935              		.loc 1 2194 0
 16936 1df6 0023     		movs	r3, #0
 16937 1df8 C7F88C30 		str	r3, [r7, #140]
 16938 1dfc 2CE0     		b	.L632
 16939              	.L635:
2195:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 16940              		.loc 1 2195 0
 16941 1dfe 4649     		ldr	r1, .L658+56
 16942 1e00 D7F89420 		ldr	r2, [r7, #148]
 16943 1e04 1346     		mov	r3, r2
 16944 1e06 9B00     		lsls	r3, r3, #2
 16945 1e08 1344     		add	r3, r3, r2
 16946 1e0a D7F88C20 		ldr	r2, [r7, #140]
 16947 1e0e 1344     		add	r3, r3, r2
 16948 1e10 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 16949 1e14 1C46     		mov	r4, r3
 16950 1e16 4149     		ldr	r1, .L658+60
 16951 1e18 D7F89420 		ldr	r2, [r7, #148]
 16952 1e1c 1346     		mov	r3, r2
 16953 1e1e 9B00     		lsls	r3, r3, #2
 16954 1e20 1344     		add	r3, r3, r2
 16955 1e22 CA18     		adds	r2, r1, r3
 16956 1e24 D7F88C30 		ldr	r3, [r7, #140]
 16957 1e28 1344     		add	r3, r3, r2
 16958 1e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16959 1e2c 102B     		cmp	r3, #16
 16960 1e2e 01D1     		bne	.L633
 16961              		.loc 1 2195 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 375


 16962 1e30 3B4B     		ldr	r3, .L658+64
 16963 1e32 00E0     		b	.L634
 16964              	.L633:
 16965              		.loc 1 2195 0 discriminator 2
 16966 1e34 3B4B     		ldr	r3, .L658+68
 16967              	.L634:
 16968              		.loc 1 2195 0 discriminator 4
 16969 1e36 07F11800 		add	r0, r7, #24
 16970 1e3a 2246     		mov	r2, r4
 16971 1e3c 3A49     		ldr	r1, .L658+72
 16972 1e3e FFF7FEFF 		bl	sprintf
2196:..\src/command_processing.c ****                     strcat(info_string, str);
 16973              		.loc 1 2196 0 is_stmt 1 discriminator 4
 16974 1e42 07F11803 		add	r3, r7, #24
 16975 1e46 1946     		mov	r1, r3
 16976 1e48 7869     		ldr	r0, [r7, #20]
 16977 1e4a FFF7FEFF 		bl	strcat
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16978              		.loc 1 2194 0 discriminator 4
 16979 1e4e D7F88C30 		ldr	r3, [r7, #140]
 16980 1e52 0133     		adds	r3, r3, #1
 16981 1e54 C7F88C30 		str	r3, [r7, #140]
 16982              	.L632:
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16983              		.loc 1 2194 0 is_stmt 0 discriminator 2
 16984 1e58 294A     		ldr	r2, .L658+32
 16985 1e5a D7F89430 		ldr	r3, [r7, #148]
 16986 1e5e 1344     		add	r3, r3, r2
 16987 1e60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16988 1e62 1A46     		mov	r2, r3
 16989 1e64 D7F88C30 		ldr	r3, [r7, #140]
 16990 1e68 9A42     		cmp	r2, r3
 16991 1e6a C8DC     		bgt	.L635
2197:..\src/command_processing.c ****                 }
2198:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 16992              		.loc 1 2198 0 is_stmt 1
 16993 1e6c 7869     		ldr	r0, [r7, #20]
 16994 1e6e FFF7FEFF 		bl	strlen
 16995 1e72 0346     		mov	r3, r0
 16996 1e74 1A46     		mov	r2, r3
 16997 1e76 7B69     		ldr	r3, [r7, #20]
 16998 1e78 1344     		add	r3, r3, r2
 16999 1e7a 1F4A     		ldr	r2, .L658+24
 17000 1e7c 1188     		ldrh	r1, [r2]	@ unaligned
 17001 1e7e 9278     		ldrb	r2, [r2, #2]
 17002 1e80 1980     		strh	r1, [r3]	@ unaligned
 17003 1e82 9A70     		strb	r2, [r3, #2]
 17004              	.L631:
2184:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17005              		.loc 1 2184 0 discriminator 2
 17006 1e84 D7F89430 		ldr	r3, [r7, #148]
 17007 1e88 0133     		adds	r3, r3, #1
 17008 1e8a C7F89430 		str	r3, [r7, #148]
 17009              	.L627:
2184:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17010              		.loc 1 2184 0 is_stmt 0 discriminator 1
 17011 1e8e D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 376


 17012 1e92 012B     		cmp	r3, #1
 17013 1e94 7FF759AF 		ble	.L636
2199:..\src/command_processing.c ****             }
2200:..\src/command_processing.c ****         }
2201:..\src/command_processing.c **** #endif   
2202:..\src/command_processing.c ****         
2203:..\src/command_processing.c **** #ifdef MASTER_FW
2204:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2205:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2206:..\src/command_processing.c ****         else
2207:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2208:..\src/command_processing.c **** 
2209:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2210:..\src/command_processing.c ****         strcat(info_string, str);
2211:..\src/command_processing.c **** #endif
2212:..\src/command_processing.c **** 
2213:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17014              		.loc 1 2213 0 is_stmt 1
 17015 1e98 244B     		ldr	r3, .L658+76
 17016 1e9a 1B88     		ldrh	r3, [r3]
 17017 1e9c 1A46     		mov	r2, r3
 17018 1e9e 244B     		ldr	r3, .L658+80
 17019 1ea0 1B88     		ldrh	r3, [r3]
 17020 1ea2 D21A     		subs	r2, r2, r3
 17021 1ea4 07F11803 		add	r3, r7, #24
 17022 1ea8 2249     		ldr	r1, .L658+84
 17023 1eaa 1846     		mov	r0, r3
 17024 1eac FFF7FEFF 		bl	sprintf
2214:..\src/command_processing.c ****         strcat(info_string, str);
 17025              		.loc 1 2214 0
 17026 1eb0 07F11803 		add	r3, r7, #24
 17027 1eb4 1946     		mov	r1, r3
 17028 1eb6 7869     		ldr	r0, [r7, #20]
 17029 1eb8 FFF7FEFF 		bl	strcat
2215:..\src/command_processing.c ****   
2216:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17030              		.loc 1 2216 0
 17031 1ebc 7869     		ldr	r0, [r7, #20]
 17032 1ebe FFF7FEFF 		bl	strlen
 17033 1ec2 0346     		mov	r3, r0
 17034 1ec4 1A46     		mov	r2, r3
 17035 1ec6 7B69     		ldr	r3, [r7, #20]
 17036 1ec8 1344     		add	r3, r3, r2
 17037 1eca 1B4A     		ldr	r2, .L658+88
 17038 1ecc 1188     		ldrh	r1, [r2]	@ unaligned
 17039 1ece 9278     		ldrb	r2, [r2, #2]
 17040 1ed0 1980     		strh	r1, [r3]	@ unaligned
 17041 1ed2 9A70     		strb	r2, [r3, #2]
 17042              	.L638:
 17043              	.LBE16:
2217:..\src/command_processing.c ****     }
2218:..\src/command_processing.c **** }
 17044              		.loc 1 2218 0
 17045 1ed4 00BF     		nop
 17046 1ed6 9C37     		adds	r7, r7, #156
 17047              		.cfi_def_cfa_offset 36
 17048 1ed8 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 377


 17049              		.cfi_def_cfa_register 13
 17050              		@ sp needed
 17051 1eda BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17052              	.L659:
 17053 1ede 00BF     		.align	2
 17054              	.L658:
 17055 1ee0 28100000 		.word	.LC154
 17056 1ee4 8C170000 		.word	.LC230
 17057 1ee8 00000000 		.word	IMU_connected
 17058 1eec 20100000 		.word	.LC153
 17059 1ef0 9C170000 		.word	.LC231
 17060 1ef4 00000000 		.word	N_IMU_Connected
 17061 1ef8 A80E0000 		.word	.LC132
 17062 1efc AC170000 		.word	.LC232
 17063 1f00 00000000 		.word	N_Encoder_Line_Connected
 17064 1f04 C4170000 		.word	.LC233
 17065 1f08 E4170000 		.word	.LC234
 17066 1f0c EC170000 		.word	.LC235
 17067 1f10 F4170000 		.word	.LC236
 17068 1f14 14180000 		.word	.LC237
 17069 1f18 00000000 		.word	Encoder_Value
 17070 1f1c 00000000 		.word	Encoder_Check
 17071 1f20 2C180000 		.word	.LC238
 17072 1f24 30180000 		.word	.LC239
 17073 1f28 34180000 		.word	.LC240
 17074 1f2c 00000000 		.word	timer_value0
 17075 1f30 00000000 		.word	timer_value
 17076 1f34 40180000 		.word	.LC241
 17077 1f38 5C180000 		.word	.LC242
 17078              		.cfi_endproc
 17079              	.LFE72:
 17080              		.size	prepare_generic_info, .-prepare_generic_info
 17081              		.section	.rodata
 17082              		.align	2
 17083              	.LC243:
 17084 1860 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17084      41474520 
 17084      53544154 
 17084      49535449 
 17084      43530D0A 
 17085 1875 000000   		.align	2
 17086              	.LC244:
 17087 1878 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17087      206F6620 
 17087      4857206D 
 17087      61696E74 
 17087      656E616E 
 17088 18a3 00       		.align	2
 17089              	.LC245:
 17090 18a4 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17090      206F6620 
 17090      75736167 
 17090      65207374 
 17090      61747320 
 17091 18d7 0A00     		.ascii	"\012\000"
 17092 18d9 000000   		.align	2
 17093              	.LC246:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 378


 17094 18dc 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17094      20636865 
 17094      636B6564 
 17094      2054696D 
 17094      653A2025 
 17095 190f 0A00     		.ascii	"\012\000"
 17096 1911 000000   		.align	2
 17097              	.LC247:
 17098 1914 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17098      74696F6E 
 17098      73206869 
 17098      73746F67 
 17098      72616D20 
 17099 1933 00       		.align	2
 17100              	.LC248:
 17101 1934 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17101      2564205B 
 17101      25642D25 
 17101      645D3A20 
 17101      256C750D 
 17102 194a 0000     		.align	2
 17103              	.LC249:
 17104 194c 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17104      656E7420 
 17104      68697374 
 17104      6F677261 
 17104      6D20286D 
 17105 1966 0000     		.align	2
 17106              	.LC250:
 17107 1968 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17107      73686F6C 
 17107      64202564 
 17107      205B2564 
 17107      2D25645D 
 17108              		.align	2
 17109              	.LC251:
 17110 1984 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 17110      61637469 
 17110      76617469 
 17110      6F6E7320 
 17110      636F756E 
 17111 19a6 0000     		.align	2
 17112              	.LC252:
 17113 19a8 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17113      20706F73 
 17113      6974696F 
 17113      6E206F63 
 17113      63757272 
 17114 19c7 00       		.align	2
 17115              	.LC253:
 17116 19c8 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17116      6520746F 
 17116      74616C20 
 17116      64697370 
 17116      6C616365 
 17117 19ee 0000     		.align	2
 17118              	.LC254:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 379


 17119 19f0 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17119      6C20706F 
 17119      77657220 
 17119      6F6E2074 
 17119      696D6520 
 17120 1a0f 00       		.align	2
 17121              	.LC255:
 17122 1a10 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17122      6C207265 
 17122      73742070 
 17122      6F736974 
 17122      696F6E20 
 17123              		.section	.text.prepare_counter_info,"ax",%progbits
 17124              		.align	2
 17125              		.global	prepare_counter_info
 17126              		.thumb
 17127              		.thumb_func
 17128              		.type	prepare_counter_info, %function
 17129              	prepare_counter_info:
 17130              	.LFB73:
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c **** //==============================================================================
2221:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2222:..\src/command_processing.c **** //==============================================================================
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2225:..\src/command_processing.c **** {
 17131              		.loc 1 2225 0
 17132              		.cfi_startproc
 17133              		@ args = 0, pretend = 0, frame = 128
 17134              		@ frame_needed = 1, uses_anonymous_args = 0
 17135 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17136              		.cfi_def_cfa_offset 20
 17137              		.cfi_offset 4, -20
 17138              		.cfi_offset 5, -16
 17139              		.cfi_offset 6, -12
 17140              		.cfi_offset 7, -8
 17141              		.cfi_offset 14, -4
 17142 0002 A5B0     		sub	sp, sp, #148
 17143              		.cfi_def_cfa_offset 168
 17144 0004 04AF     		add	r7, sp, #16
 17145              		.cfi_def_cfa 7, 152
 17146 0006 7860     		str	r0, [r7, #4]
2226:..\src/command_processing.c ****     char str[100];  
2227:..\src/command_processing.c ****     int i;
2228:..\src/command_processing.c ****     int step;
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17147              		.loc 1 2230 0
 17148 0008 7D4B     		ldr	r3, .L666
 17149 000a BB67     		str	r3, [r7, #120]
2231:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17150              		.loc 1 2231 0
 17151 000c BB6F     		ldr	r3, [r7, #120]
 17152 000e B033     		adds	r3, r3, #176
 17153 0010 7B67     		str	r3, [r7, #116]
2232:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 380


 17154              		.loc 1 2232 0
 17155 0012 7B6F     		ldr	r3, [r7, #116]
 17156 0014 93F86030 		ldrb	r3, [r3, #96]
 17157 0018 87F87330 		strb	r3, [r7, #115]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17158              		.loc 1 2234 0
 17159 001c 7868     		ldr	r0, [r7, #4]
 17160 001e FFF7FEFF 		bl	strlen
 17161 0022 0346     		mov	r3, r0
 17162 0024 1A46     		mov	r2, r3
 17163 0026 7B68     		ldr	r3, [r7, #4]
 17164 0028 1344     		add	r3, r3, r2
 17165 002a 764A     		ldr	r2, .L666+4
 17166 002c 1D46     		mov	r5, r3
 17167 002e 1446     		mov	r4, r2
 17168 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17169 0032 2860     		str	r0, [r5]	@ unaligned
 17170 0034 6960     		str	r1, [r5, #4]	@ unaligned
 17171 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 17172 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 17173 003a 2068     		ldr	r0, [r4]	@ unaligned
 17174 003c 2861     		str	r0, [r5, #16]	@ unaligned
 17175 003e 2379     		ldrb	r3, [r4, #4]
 17176 0040 2B75     		strb	r3, [r5, #20]
2235:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17177              		.loc 1 2235 0
 17178 0042 7868     		ldr	r0, [r7, #4]
 17179 0044 FFF7FEFF 		bl	strlen
 17180 0048 0346     		mov	r3, r0
 17181 004a 1A46     		mov	r2, r3
 17182 004c 7B68     		ldr	r3, [r7, #4]
 17183 004e 1344     		add	r3, r3, r2
 17184 0050 6D4A     		ldr	r2, .L666+8
 17185 0052 1188     		ldrh	r1, [r2]	@ unaligned
 17186 0054 9278     		ldrb	r2, [r2, #2]
 17187 0056 1980     		strh	r1, [r3]	@ unaligned
 17188 0058 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c ****     
2237:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17189              		.loc 1 2237 0
 17190 005a BB6F     		ldr	r3, [r7, #120]
 17191 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17192 0060 1A46     		mov	r2, r3
 17193 0062 BB6F     		ldr	r3, [r7, #120]
 17194 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17195 0068 1946     		mov	r1, r3
 17196 006a BB6F     		ldr	r3, [r7, #120]
 17197 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17198 0070 07F10800 		add	r0, r7, #8
 17199 0074 0093     		str	r3, [sp]
 17200 0076 0B46     		mov	r3, r1
 17201 0078 6449     		ldr	r1, .L666+12
 17202 007a FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****     strcat(info_string, str);
 17203              		.loc 1 2238 0
 17204 007e 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 381


 17205 0082 1946     		mov	r1, r3
 17206 0084 7868     		ldr	r0, [r7, #4]
 17207 0086 FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17208              		.loc 1 2240 0
 17209 008a BB6F     		ldr	r3, [r7, #120]
 17210 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17211 0090 1A46     		mov	r2, r3
 17212 0092 BB6F     		ldr	r3, [r7, #120]
 17213 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17214 0098 1946     		mov	r1, r3
 17215 009a BB6F     		ldr	r3, [r7, #120]
 17216 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17217 00a0 07F10800 		add	r0, r7, #8
 17218 00a4 0093     		str	r3, [sp]
 17219 00a6 0B46     		mov	r3, r1
 17220 00a8 5949     		ldr	r1, .L666+16
 17221 00aa FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****     strcat(info_string, str);
 17222              		.loc 1 2241 0
 17223 00ae 07F10803 		add	r3, r7, #8
 17224 00b2 1946     		mov	r1, r3
 17225 00b4 7868     		ldr	r0, [r7, #4]
 17226 00b6 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****             
2243:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17227              		.loc 1 2243 0
 17228 00ba BB6F     		ldr	r3, [r7, #120]
 17229 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17230 00c0 1D46     		mov	r5, r3
 17231 00c2 BB6F     		ldr	r3, [r7, #120]
 17232 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17233 00c8 1E46     		mov	r6, r3
 17234 00ca BB6F     		ldr	r3, [r7, #120]
 17235 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17236 00d0 1A46     		mov	r2, r3
 17237 00d2 BB6F     		ldr	r3, [r7, #120]
 17238 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17239 00d8 1946     		mov	r1, r3
 17240 00da BB6F     		ldr	r3, [r7, #120]
 17241 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17242 00e0 1C46     		mov	r4, r3
 17243 00e2 BB6F     		ldr	r3, [r7, #120]
 17244 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17245 00e8 07F10800 		add	r0, r7, #8
 17246 00ec 0393     		str	r3, [sp, #12]
 17247 00ee 0294     		str	r4, [sp, #8]
 17248 00f0 0191     		str	r1, [sp, #4]
 17249 00f2 0092     		str	r2, [sp]
 17250 00f4 3346     		mov	r3, r6
 17251 00f6 2A46     		mov	r2, r5
 17252 00f8 4649     		ldr	r1, .L666+20
 17253 00fa FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****     strcat(info_string, str);
 17254              		.loc 1 2244 0
 17255 00fe 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 382


 17256 0102 1946     		mov	r1, r3
 17257 0104 7868     		ldr	r0, [r7, #4]
 17258 0106 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17259              		.loc 1 2246 0
 17260 010a 07F10803 		add	r3, r7, #8
 17261 010e 424A     		ldr	r2, .L666+24
 17262 0110 1C46     		mov	r4, r3
 17263 0112 1546     		mov	r5, r2
 17264 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17265 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17266 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17267 011c 07C4     		stmia	r4!, {r0, r1, r2}
 17268 011e 2380     		strh	r3, [r4]	@ movhi
 17269 0120 0234     		adds	r4, r4, #2
 17270 0122 1B0C     		lsrs	r3, r3, #16
 17271 0124 2370     		strb	r3, [r4]
2247:..\src/command_processing.c ****     strcat(info_string, str);
 17272              		.loc 1 2247 0
 17273 0126 07F10803 		add	r3, r7, #8
 17274 012a 1946     		mov	r1, r3
 17275 012c 7868     		ldr	r0, [r7, #4]
 17276 012e FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17277              		.loc 1 2248 0
 17278 0132 7B6F     		ldr	r3, [r7, #116]
 17279 0134 996B     		ldr	r1, [r3, #56]
 17280 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 17281 013a B86F     		ldr	r0, [r7, #120]
 17282 013c 1346     		mov	r3, r2
 17283 013e 5B00     		lsls	r3, r3, #1
 17284 0140 1344     		add	r3, r3, r2
 17285 0142 1B01     		lsls	r3, r3, #4
 17286 0144 0344     		add	r3, r3, r0
 17287 0146 03F29513 		addw	r3, r3, #405
 17288 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17289 014c 41FA03F3 		asr	r3, r1, r3
 17290 0150 324A     		ldr	r2, .L666+28
 17291 0152 82FB0312 		smull	r1, r2, r2, r3
 17292 0156 9210     		asrs	r2, r2, #2
 17293 0158 DB17     		asrs	r3, r3, #31
 17294 015a D31A     		subs	r3, r2, r3
 17295 015c FB66     		str	r3, [r7, #108]
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17296              		.loc 1 2249 0
 17297 015e 0123     		movs	r3, #1
 17298 0160 FB67     		str	r3, [r7, #124]
 17299 0162 21E0     		b	.L661
 17300              	.L662:
2250:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17301              		.loc 1 2250 0 discriminator 3
 17302 0164 FB6F     		ldr	r3, [r7, #124]
 17303 0166 013B     		subs	r3, r3, #1
 17304 0168 FA6E     		ldr	r2, [r7, #108]
 17305 016a 02FB03F3 		mul	r3, r2, r3
 17306 016e 5C1C     		adds	r4, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 383


 17307 0170 FB6E     		ldr	r3, [r7, #108]
 17308 0172 FA6F     		ldr	r2, [r7, #124]
 17309 0174 02FB03F3 		mul	r3, r2, r3
 17310 0178 FA6F     		ldr	r2, [r7, #124]
 17311 017a 511E     		subs	r1, r2, #1
 17312 017c BA6F     		ldr	r2, [r7, #120]
 17313 017e 0631     		adds	r1, r1, #6
 17314 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17315 0184 07F10800 		add	r0, r7, #8
 17316 0188 0192     		str	r2, [sp, #4]
 17317 018a 0093     		str	r3, [sp]
 17318 018c 2346     		mov	r3, r4
 17319 018e FA6F     		ldr	r2, [r7, #124]
 17320 0190 2349     		ldr	r1, .L666+32
 17321 0192 FFF7FEFF 		bl	sprintf
2251:..\src/command_processing.c ****         strcat(info_string, str);
 17322              		.loc 1 2251 0 discriminator 3
 17323 0196 07F10803 		add	r3, r7, #8
 17324 019a 1946     		mov	r1, r3
 17325 019c 7868     		ldr	r0, [r7, #4]
 17326 019e FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17327              		.loc 1 2249 0 discriminator 3
 17328 01a2 FB6F     		ldr	r3, [r7, #124]
 17329 01a4 0133     		adds	r3, r3, #1
 17330 01a6 FB67     		str	r3, [r7, #124]
 17331              	.L661:
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17332              		.loc 1 2249 0 is_stmt 0 discriminator 1
 17333 01a8 FB6F     		ldr	r3, [r7, #124]
 17334 01aa 0A2B     		cmp	r3, #10
 17335 01ac DADD     		ble	.L662
2252:..\src/command_processing.c ****     }
2253:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17336              		.loc 1 2253 0 is_stmt 1
 17337 01ae 7868     		ldr	r0, [r7, #4]
 17338 01b0 FFF7FEFF 		bl	strlen
 17339 01b4 0346     		mov	r3, r0
 17340 01b6 1A46     		mov	r2, r3
 17341 01b8 7B68     		ldr	r3, [r7, #4]
 17342 01ba 1344     		add	r3, r3, r2
 17343 01bc 124A     		ldr	r2, .L666+8
 17344 01be 1188     		ldrh	r1, [r2]	@ unaligned
 17345 01c0 9278     		ldrb	r2, [r2, #2]
 17346 01c2 1980     		strh	r1, [r3]	@ unaligned
 17347 01c4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c ****     
2255:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17348              		.loc 1 2255 0
 17349 01c6 07F10803 		add	r3, r7, #8
 17350 01ca 164A     		ldr	r2, .L666+36
 17351 01cc 1C46     		mov	r4, r3
 17352 01ce 1546     		mov	r5, r2
 17353 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17354 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17355 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 17356 01d8 03C4     		stmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 384


 17357 01da 2280     		strh	r2, [r4]	@ movhi
2256:..\src/command_processing.c ****     strcat(info_string, str);
 17358              		.loc 1 2256 0
 17359 01dc 07F10803 		add	r3, r7, #8
 17360 01e0 1946     		mov	r1, r3
 17361 01e2 7868     		ldr	r0, [r7, #4]
 17362 01e4 FFF7FEFF 		bl	strcat
2257:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17363              		.loc 1 2257 0
 17364 01e8 7B6F     		ldr	r3, [r7, #116]
 17365 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 17366 01ee 002B     		cmp	r3, #0
 17367 01f0 00DA     		bge	.L663
 17368 01f2 0333     		adds	r3, r3, #3
 17369              	.L663:
 17370 01f4 9B10     		asrs	r3, r3, #2
 17371 01f6 1BB2     		sxth	r3, r3
 17372 01f8 FB66     		str	r3, [r7, #108]
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17373              		.loc 1 2258 0
 17374 01fa 0123     		movs	r3, #1
 17375 01fc FB67     		str	r3, [r7, #124]
 17376 01fe 34E0     		b	.L664
 17377              	.L667:
 17378              		.align	2
 17379              	.L666:
 17380 0200 00000000 		.word	g_mem
 17381 0204 60180000 		.word	.LC243
 17382 0208 A80E0000 		.word	.LC132
 17383 020c 78180000 		.word	.LC244
 17384 0210 A4180000 		.word	.LC245
 17385 0214 DC180000 		.word	.LC246
 17386 0218 14190000 		.word	.LC247
 17387 021c 67666666 		.word	1717986919
 17388 0220 34190000 		.word	.LC248
 17389 0224 4C190000 		.word	.LC249
 17390              	.L665:
2259:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17391              		.loc 1 2259 0 discriminator 3
 17392 0228 FB6F     		ldr	r3, [r7, #124]
 17393 022a 013B     		subs	r3, r3, #1
 17394 022c FA6E     		ldr	r2, [r7, #108]
 17395 022e 02FB03F4 		mul	r4, r2, r3
 17396 0232 FB6E     		ldr	r3, [r7, #108]
 17397 0234 FA6F     		ldr	r2, [r7, #124]
 17398 0236 02FB03F3 		mul	r3, r2, r3
 17399 023a FA6F     		ldr	r2, [r7, #124]
 17400 023c 511E     		subs	r1, r2, #1
 17401 023e BA6F     		ldr	r2, [r7, #120]
 17402 0240 1031     		adds	r1, r1, #16
 17403 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17404 0246 07F10800 		add	r0, r7, #8
 17405 024a 0192     		str	r2, [sp, #4]
 17406 024c 0093     		str	r3, [sp]
 17407 024e 2346     		mov	r3, r4
 17408 0250 FA6F     		ldr	r2, [r7, #124]
 17409 0252 5149     		ldr	r1, .L668
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 385


 17410 0254 FFF7FEFF 		bl	sprintf
2260:..\src/command_processing.c ****         strcat(info_string, str);
 17411              		.loc 1 2260 0 discriminator 3
 17412 0258 07F10803 		add	r3, r7, #8
 17413 025c 1946     		mov	r1, r3
 17414 025e 7868     		ldr	r0, [r7, #4]
 17415 0260 FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17416              		.loc 1 2258 0 discriminator 3
 17417 0264 FB6F     		ldr	r3, [r7, #124]
 17418 0266 0133     		adds	r3, r3, #1
 17419 0268 FB67     		str	r3, [r7, #124]
 17420              	.L664:
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17421              		.loc 1 2258 0 is_stmt 0 discriminator 1
 17422 026a FB6F     		ldr	r3, [r7, #124]
 17423 026c 042B     		cmp	r3, #4
 17424 026e DBDD     		ble	.L665
2261:..\src/command_processing.c ****     }
2262:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17425              		.loc 1 2262 0 is_stmt 1
 17426 0270 7868     		ldr	r0, [r7, #4]
 17427 0272 FFF7FEFF 		bl	strlen
 17428 0276 0346     		mov	r3, r0
 17429 0278 1A46     		mov	r2, r3
 17430 027a 7B68     		ldr	r3, [r7, #4]
 17431 027c 1344     		add	r3, r3, r2
 17432 027e 474A     		ldr	r2, .L668+4
 17433 0280 1188     		ldrh	r1, [r2]	@ unaligned
 17434 0282 9278     		ldrb	r2, [r2, #2]
 17435 0284 1980     		strh	r1, [r3]	@ unaligned
 17436 0286 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****             
2264:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 17437              		.loc 1 2264 0
 17438 0288 BB6F     		ldr	r3, [r7, #120]
 17439 028a 1A69     		ldr	r2, [r3, #16]
 17440 028c BB6F     		ldr	r3, [r7, #120]
 17441 028e 5B69     		ldr	r3, [r3, #20]
 17442 0290 07F10800 		add	r0, r7, #8
 17443 0294 4249     		ldr	r1, .L668+8
 17444 0296 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****     strcat(info_string, str);
 17445              		.loc 1 2265 0
 17446 029a 07F10803 		add	r3, r7, #8
 17447 029e 1946     		mov	r1, r3
 17448 02a0 7868     		ldr	r0, [r7, #4]
 17449 02a2 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17450              		.loc 1 2266 0
 17451 02a6 7868     		ldr	r0, [r7, #4]
 17452 02a8 FFF7FEFF 		bl	strlen
 17453 02ac 0346     		mov	r3, r0
 17454 02ae 1A46     		mov	r2, r3
 17455 02b0 7B68     		ldr	r3, [r7, #4]
 17456 02b2 1344     		add	r3, r3, r2
 17457 02b4 394A     		ldr	r2, .L668+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 386


 17458 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17459 02b8 9278     		ldrb	r2, [r2, #2]
 17460 02ba 1980     		strh	r1, [r3]	@ unaligned
 17461 02bc 9A70     		strb	r2, [r3, #2]
2267:..\src/command_processing.c ****     
2268:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17462              		.loc 1 2268 0
 17463 02be BB6F     		ldr	r3, [r7, #120]
 17464 02c0 1A6D     		ldr	r2, [r3, #80]
 17465 02c2 07F10803 		add	r3, r7, #8
 17466 02c6 3749     		ldr	r1, .L668+12
 17467 02c8 1846     		mov	r0, r3
 17468 02ca FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****     strcat(info_string, str);
 17469              		.loc 1 2269 0
 17470 02ce 07F10803 		add	r3, r7, #8
 17471 02d2 1946     		mov	r1, r3
 17472 02d4 7868     		ldr	r0, [r7, #4]
 17473 02d6 FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17474              		.loc 1 2270 0
 17475 02da 7868     		ldr	r0, [r7, #4]
 17476 02dc FFF7FEFF 		bl	strlen
 17477 02e0 0346     		mov	r3, r0
 17478 02e2 1A46     		mov	r2, r3
 17479 02e4 7B68     		ldr	r3, [r7, #4]
 17480 02e6 1344     		add	r3, r3, r2
 17481 02e8 2C4A     		ldr	r2, .L668+4
 17482 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17483 02ec 9278     		ldrb	r2, [r2, #2]
 17484 02ee 1980     		strh	r1, [r3]	@ unaligned
 17485 02f0 9A70     		strb	r2, [r3, #2]
2271:..\src/command_processing.c ****     
2272:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17486              		.loc 1 2272 0
 17487 02f2 BB6F     		ldr	r3, [r7, #120]
 17488 02f4 5A6D     		ldr	r2, [r3, #84]
 17489 02f6 07F10803 		add	r3, r7, #8
 17490 02fa 2B49     		ldr	r1, .L668+16
 17491 02fc 1846     		mov	r0, r3
 17492 02fe FFF7FEFF 		bl	sprintf
2273:..\src/command_processing.c ****     strcat(info_string, str);
 17493              		.loc 1 2273 0
 17494 0302 07F10803 		add	r3, r7, #8
 17495 0306 1946     		mov	r1, r3
 17496 0308 7868     		ldr	r0, [r7, #4]
 17497 030a FFF7FEFF 		bl	strcat
2274:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17498              		.loc 1 2274 0
 17499 030e 7868     		ldr	r0, [r7, #4]
 17500 0310 FFF7FEFF 		bl	strlen
 17501 0314 0346     		mov	r3, r0
 17502 0316 1A46     		mov	r2, r3
 17503 0318 7B68     		ldr	r3, [r7, #4]
 17504 031a 1344     		add	r3, r3, r2
 17505 031c 1F4A     		ldr	r2, .L668+4
 17506 031e 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 387


 17507 0320 9278     		ldrb	r2, [r2, #2]
 17508 0322 1980     		strh	r1, [r3]	@ unaligned
 17509 0324 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****     
2276:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17510              		.loc 1 2276 0
 17511 0326 BB6F     		ldr	r3, [r7, #120]
 17512 0328 9A6D     		ldr	r2, [r3, #88]
 17513 032a 07F10803 		add	r3, r7, #8
 17514 032e 1F49     		ldr	r1, .L668+20
 17515 0330 1846     		mov	r0, r3
 17516 0332 FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****     strcat(info_string, str);
 17517              		.loc 1 2277 0
 17518 0336 07F10803 		add	r3, r7, #8
 17519 033a 1946     		mov	r1, r3
 17520 033c 7868     		ldr	r0, [r7, #4]
 17521 033e FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17522              		.loc 1 2278 0
 17523 0342 7868     		ldr	r0, [r7, #4]
 17524 0344 FFF7FEFF 		bl	strlen
 17525 0348 0346     		mov	r3, r0
 17526 034a 1A46     		mov	r2, r3
 17527 034c 7B68     		ldr	r3, [r7, #4]
 17528 034e 1344     		add	r3, r3, r2
 17529 0350 124A     		ldr	r2, .L668+4
 17530 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17531 0354 9278     		ldrb	r2, [r2, #2]
 17532 0356 1980     		strh	r1, [r3]	@ unaligned
 17533 0358 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17534              		.loc 1 2280 0
 17535 035a BB6F     		ldr	r3, [r7, #120]
 17536 035c DA6D     		ldr	r2, [r3, #92]
 17537 035e 07F10803 		add	r3, r7, #8
 17538 0362 1349     		ldr	r1, .L668+24
 17539 0364 1846     		mov	r0, r3
 17540 0366 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****     strcat(info_string, str);
 17541              		.loc 1 2281 0
 17542 036a 07F10803 		add	r3, r7, #8
 17543 036e 1946     		mov	r1, r3
 17544 0370 7868     		ldr	r0, [r7, #4]
 17545 0372 FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17546              		.loc 1 2282 0
 17547 0376 7868     		ldr	r0, [r7, #4]
 17548 0378 FFF7FEFF 		bl	strlen
 17549 037c 0346     		mov	r3, r0
 17550 037e 1A46     		mov	r2, r3
 17551 0380 7B68     		ldr	r3, [r7, #4]
 17552 0382 1344     		add	r3, r3, r2
 17553 0384 054A     		ldr	r2, .L668+4
 17554 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17555 0388 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 388


 17556 038a 1980     		strh	r1, [r3]	@ unaligned
 17557 038c 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** }
 17558              		.loc 1 2284 0
 17559 038e 00BF     		nop
 17560 0390 8437     		adds	r7, r7, #132
 17561              		.cfi_def_cfa_offset 20
 17562 0392 BD46     		mov	sp, r7
 17563              		.cfi_def_cfa_register 13
 17564              		@ sp needed
 17565 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17566              	.L669:
 17567 0396 00BF     		.align	2
 17568              	.L668:
 17569 0398 68190000 		.word	.LC250
 17570 039c A80E0000 		.word	.LC132
 17571 03a0 84190000 		.word	.LC251
 17572 03a4 A8190000 		.word	.LC252
 17573 03a8 C8190000 		.word	.LC253
 17574 03ac F0190000 		.word	.LC254
 17575 03b0 101A0000 		.word	.LC255
 17576              		.cfi_endproc
 17577              	.LFE73:
 17578              		.size	prepare_counter_info, .-prepare_counter_info
 17579              		.section	.rodata
 17580              		.align	2
 17581              	.LC256:
 17582 1a34 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17582      77617265 
 17582      20766572 
 17582      73696F6E 
 17582      3A202573 
 17583 1a4b 00       		.align	2
 17584              	.LC257:
 17585 1a4c 506F7369 		.ascii	"Position PID: \000"
 17585      74696F6E 
 17585      20504944 
 17585      3A2000
 17586 1a5b 00       		.align	2
 17587              	.LC258:
 17588 1a5c 43757272 		.ascii	"Current PID: \000"
 17588      656E7420 
 17588      5049443A 
 17588      2000
 17589 1a6a 0000     		.align	2
 17590              	.LC259:
 17591 1a6c 5265736F 		.ascii	"Resolutions: \000"
 17591      6C757469 
 17591      6F6E733A 
 17591      2000
 17592 1a7a 0000     		.align	2
 17593              	.LC260:
 17594 1a7c 4F666673 		.ascii	"Offsets: \000"
 17594      6574733A 
 17594      2000
 17595 1a86 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 389


 17596              	.LC261:
 17597 1a88 4D756C74 		.ascii	"Multipliers: \000"
 17597      69706C69 
 17597      6572733A 
 17597      2000
 17598 1a96 0000     		.align	2
 17599              	.LC262:
 17600 1a98 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17600      656E7420 
 17600      6C6F6F6B 
 17600      75702074 
 17600      61626C65 
 17601 1acb 662C2025 		.ascii	"f, %f\015\012\000"
 17601      660D0A00 
 17602 1ad3 00       		.align	2
 17603              	.LC263:
 17604 1ad4 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17604      74696F6E 
 17604      206C696D 
 17604      69742061 
 17604      63746976 
 17605              		.align	2
 17606              	.LC264:
 17607 1af0 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 17607      74696F6E 
 17607      206C696D 
 17607      6974733A 
 17607      20696E66 
 17608              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17609              		.align	2
 17610              		.global	prepare_SD_param_info
 17611              		.thumb
 17612              		.thumb_func
 17613              		.type	prepare_SD_param_info, %function
 17614              	prepare_SD_param_info:
 17615              	.LFB74:
2285:..\src/command_processing.c **** 
2286:..\src/command_processing.c **** //==============================================================================
2287:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2288:..\src/command_processing.c **** //==============================================================================
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2291:..\src/command_processing.c **** {
 17616              		.loc 1 2291 0
 17617              		.cfi_startproc
 17618              		@ args = 0, pretend = 0, frame = 152
 17619              		@ frame_needed = 1, uses_anonymous_args = 0
 17620 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17621              		.cfi_def_cfa_offset 36
 17622              		.cfi_offset 4, -36
 17623              		.cfi_offset 5, -32
 17624              		.cfi_offset 6, -28
 17625              		.cfi_offset 7, -24
 17626              		.cfi_offset 8, -20
 17627              		.cfi_offset 9, -16
 17628              		.cfi_offset 10, -12
 17629              		.cfi_offset 11, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 390


 17630              		.cfi_offset 14, -4
 17631 0004 B1B0     		sub	sp, sp, #196
 17632              		.cfi_def_cfa_offset 232
 17633 0006 0AAF     		add	r7, sp, #40
 17634              		.cfi_def_cfa 7, 192
 17635 0008 7861     		str	r0, [r7, #20]
2292:..\src/command_processing.c ****     char str[100];  
2293:..\src/command_processing.c ****     int i;
2294:..\src/command_processing.c ****            
2295:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2296:..\src/command_processing.c ****     
2297:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17636              		.loc 1 2297 0
 17637 000a AB4B     		ldr	r3, .L734
 17638 000c C7F88C30 		str	r3, [r7, #140]
2298:..\src/command_processing.c ****         
2299:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17639              		.loc 1 2299 0
 17640 0010 AA4A     		ldr	r2, .L734+4
 17641 0012 AB49     		ldr	r1, .L734+8
 17642 0014 7869     		ldr	r0, [r7, #20]
 17643 0016 FFF7FEFF 		bl	sprintf
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17644              		.loc 1 2301 0
 17645 001a D7F88C30 		ldr	r3, [r7, #140]
 17646 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17647 0022 1A46     		mov	r2, r3
 17648 0024 07F11C03 		add	r3, r7, #28
 17649 0028 A649     		ldr	r1, .L734+12
 17650 002a 1846     		mov	r0, r3
 17651 002c FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****     strcat(info_string, str);
 17652              		.loc 1 2302 0
 17653 0030 07F11C03 		add	r3, r7, #28
 17654 0034 1946     		mov	r1, r3
 17655 0036 7869     		ldr	r0, [r7, #20]
 17656 0038 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17657              		.loc 1 2303 0
 17658 003c D7F88C30 		ldr	r3, [r7, #140]
 17659 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17660 0044 002B     		cmp	r3, #0
 17661 0046 02D0     		beq	.L672
 17662 0048 012B     		cmp	r3, #1
 17663 004a 15D0     		beq	.L673
 17664 004c 26E0     		b	.L671
 17665              	.L672:
2304:..\src/command_processing.c ****         case RIGHT_HAND:
2305:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17666              		.loc 1 2305 0
 17667 004e 7869     		ldr	r0, [r7, #20]
 17668 0050 FFF7FEFF 		bl	strlen
 17669 0054 0346     		mov	r3, r0
 17670 0056 1A46     		mov	r2, r3
 17671 0058 7B69     		ldr	r3, [r7, #20]
 17672 005a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 391


 17673 005c 9A4A     		ldr	r2, .L734+16
 17674 005e 1D46     		mov	r5, r3
 17675 0060 1446     		mov	r4, r2
 17676 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17677 0064 2860     		str	r0, [r5]	@ unaligned
 17678 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17679 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17680 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17681 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17682 006e A278     		ldrb	r2, [r4, #2]
 17683 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17684 0072 1346     		mov	r3, r2
 17685 0074 AB74     		strb	r3, [r5, #18]
2306:..\src/command_processing.c ****             break;
 17686              		.loc 1 2306 0
 17687 0076 11E0     		b	.L671
 17688              	.L673:
2307:..\src/command_processing.c ****         case LEFT_HAND:
2308:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17689              		.loc 1 2308 0
 17690 0078 7869     		ldr	r0, [r7, #20]
 17691 007a FFF7FEFF 		bl	strlen
 17692 007e 0346     		mov	r3, r0
 17693 0080 1A46     		mov	r2, r3
 17694 0082 7B69     		ldr	r3, [r7, #20]
 17695 0084 1344     		add	r3, r3, r2
 17696 0086 914A     		ldr	r2, .L734+20
 17697 0088 1D46     		mov	r5, r3
 17698 008a 1446     		mov	r4, r2
 17699 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17700 008e 2860     		str	r0, [r5]	@ unaligned
 17701 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17702 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17703 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17704 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17705 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2309:..\src/command_processing.c ****             break;
 17706              		.loc 1 2309 0
 17707 009a 00BF     		nop
 17708              	.L671:
2310:..\src/command_processing.c ****     }
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17709              		.loc 1 2312 0
 17710 009c D7F88C30 		ldr	r3, [r7, #140]
 17711 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17712 00a4 1A46     		mov	r2, r3
 17713 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17714 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17715 00ae 1946     		mov	r1, r3
 17716 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17717 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17718 00b8 07F11C00 		add	r0, r7, #28
 17719 00bc 0093     		str	r3, [sp]
 17720 00be 0B46     		mov	r3, r1
 17721 00c0 8349     		ldr	r1, .L734+24
 17722 00c2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 392


2313:..\src/command_processing.c ****     strcat(info_string, str);
 17723              		.loc 1 2313 0
 17724 00c6 07F11C03 		add	r3, r7, #28
 17725 00ca 1946     		mov	r1, r3
 17726 00cc 7869     		ldr	r0, [r7, #20]
 17727 00ce FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****     
2315:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17728              		.loc 1 2315 0
 17729 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17730 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17731 00da 1A46     		mov	r2, r3
 17732 00dc D7F88C30 		ldr	r3, [r7, #140]
 17733 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17734 00e4 1946     		mov	r1, r3
 17735 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17736 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17737 00ee 07F11C00 		add	r0, r7, #28
 17738 00f2 0093     		str	r3, [sp]
 17739 00f4 0B46     		mov	r3, r1
 17740 00f6 7749     		ldr	r1, .L734+28
 17741 00f8 FFF7FEFF 		bl	sprintf
2316:..\src/command_processing.c ****     strcat(info_string, str);
 17742              		.loc 1 2316 0
 17743 00fc 07F11C03 		add	r3, r7, #28
 17744 0100 1946     		mov	r1, r3
 17745 0102 7869     		ldr	r0, [r7, #20]
 17746 0104 FFF7FEFF 		bl	strcat
 17747              	.LBB19:
2317:..\src/command_processing.c ****     
2318:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17748              		.loc 1 2318 0
 17749 0108 0023     		movs	r3, #0
 17750 010a 87F89330 		strb	r3, [r7, #147]
 17751 010e 00F039BE 		b	.L674
 17752              	.L717:
 17753              	.LBB20:
2319:..\src/command_processing.c ****             
2320:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17754              		.loc 1 2320 0
 17755 0112 97F89330 		ldrb	r3, [r7, #147]
 17756 0116 87F88B30 		strb	r3, [r7, #139]
2321:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17757              		.loc 1 2321 0
 17758 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17759 011e 1346     		mov	r3, r2
 17760 0120 DB00     		lsls	r3, r3, #3
 17761 0122 9B1A     		subs	r3, r3, r2
 17762 0124 1B01     		lsls	r3, r3, #4
 17763 0126 B033     		adds	r3, r3, #176
 17764 0128 D7F88C20 		ldr	r2, [r7, #140]
 17765 012c 1344     		add	r3, r3, r2
 17766 012e C7F88430 		str	r3, [r7, #132]
2322:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17767              		.loc 1 2322 0
 17768 0132 D7F88430 		ldr	r3, [r7, #132]
 17769 0136 93F86030 		ldrb	r3, [r3, #96]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 393


 17770 013a 87F88330 		strb	r3, [r7, #131]
2323:..\src/command_processing.c ****               
2324:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17771              		.loc 1 2324 0
 17772 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17773 0142 5A1C     		adds	r2, r3, #1
 17774 0144 07F11C03 		add	r3, r7, #28
 17775 0148 6349     		ldr	r1, .L734+32
 17776 014a 1846     		mov	r0, r3
 17777 014c FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****         strcat(info_string, str);
 17778              		.loc 1 2325 0
 17779 0150 07F11C03 		add	r3, r7, #28
 17780 0154 1946     		mov	r1, r3
 17781 0156 7869     		ldr	r0, [r7, #20]
 17782 0158 FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****                     
2327:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17783              		.loc 1 2327 0
 17784 015c 7869     		ldr	r0, [r7, #20]
 17785 015e FFF7FEFF 		bl	strlen
 17786 0162 0346     		mov	r3, r0
 17787 0164 1A46     		mov	r2, r3
 17788 0166 7B69     		ldr	r3, [r7, #20]
 17789 0168 1344     		add	r3, r3, r2
 17790 016a 5C4A     		ldr	r2, .L734+36
 17791 016c 1D46     		mov	r5, r3
 17792 016e 1446     		mov	r4, r2
 17793 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17794 0172 2860     		str	r0, [r5]	@ unaligned
 17795 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17796 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17797 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17798 017a 03CC     		ldmia	r4!, {r0, r1}
 17799 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17800 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17801 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17802 0182 A278     		ldrb	r2, [r4, #2]
 17803 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17804 0186 1346     		mov	r3, r2
 17805 0188 AB76     		strb	r3, [r5, #26]
2328:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17806              		.loc 1 2328 0
 17807 018a D7F88430 		ldr	r3, [r7, #132]
 17808 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17809 0192 012B     		cmp	r3, #1
 17810 0194 0CD1     		bne	.L675
2329:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17811              		.loc 1 2329 0
 17812 0196 7869     		ldr	r0, [r7, #20]
 17813 0198 FFF7FEFF 		bl	strlen
 17814 019c 0346     		mov	r3, r0
 17815 019e 1A46     		mov	r2, r3
 17816 01a0 7B69     		ldr	r3, [r7, #20]
 17817 01a2 1344     		add	r3, r3, r2
 17818 01a4 4E4A     		ldr	r2, .L734+40
 17819 01a6 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 394


 17820 01a8 1860     		str	r0, [r3]	@ unaligned
 17821 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17822 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17823 01ae 0BE0     		b	.L676
 17824              	.L675:
2330:..\src/command_processing.c ****         else
2331:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17825              		.loc 1 2331 0
 17826 01b0 7869     		ldr	r0, [r7, #20]
 17827 01b2 FFF7FEFF 		bl	strlen
 17828 01b6 0346     		mov	r3, r0
 17829 01b8 1A46     		mov	r2, r3
 17830 01ba 7B69     		ldr	r3, [r7, #20]
 17831 01bc 1344     		add	r3, r3, r2
 17832 01be 494A     		ldr	r2, .L734+44
 17833 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17834 01c2 1860     		str	r0, [r3]	@ unaligned
 17835 01c4 1279     		ldrb	r2, [r2, #4]
 17836 01c6 1A71     		strb	r2, [r3, #4]
 17837              	.L676:
2332:..\src/command_processing.c ****         
2333:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17838              		.loc 1 2333 0
 17839 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17840 01cc 464A     		ldr	r2, .L734+48
 17841 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17842 01d0 1A46     		mov	r2, r3
 17843 01d2 07F11C03 		add	r3, r7, #28
 17844 01d6 4549     		ldr	r1, .L734+52
 17845 01d8 1846     		mov	r0, r3
 17846 01da FFF7FEFF 		bl	sprintf
2334:..\src/command_processing.c ****         strcat(info_string, str);
 17847              		.loc 1 2334 0
 17848 01de 07F11C03 		add	r3, r7, #28
 17849 01e2 1946     		mov	r1, r3
 17850 01e4 7869     		ldr	r0, [r7, #20]
 17851 01e6 FFF7FEFF 		bl	strcat
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17852              		.loc 1 2336 0
 17853 01ea 7869     		ldr	r0, [r7, #20]
 17854 01ec FFF7FEFF 		bl	strlen
 17855 01f0 0346     		mov	r3, r0
 17856 01f2 1A46     		mov	r2, r3
 17857 01f4 7B69     		ldr	r3, [r7, #20]
 17858 01f6 1344     		add	r3, r3, r2
 17859 01f8 3D4A     		ldr	r2, .L734+56
 17860 01fa 1C46     		mov	r4, r3
 17861 01fc 1346     		mov	r3, r2
 17862 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17863 0200 2060     		str	r0, [r4]	@ unaligned
 17864 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17865 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17866 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17867 0208 9B78     		ldrb	r3, [r3, #2]
 17868 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17869 020c A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 395


2337:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17870              		.loc 1 2337 0
 17871 020e D7F88430 		ldr	r3, [r7, #132]
 17872 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17873 0216 032B     		cmp	r3, #3
 17874 0218 74D0     		beq	.L677
2338:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17875              		.loc 1 2338 0
 17876 021a D7F88430 		ldr	r3, [r7, #132]
 17877 021e 1B68     		ldr	r3, [r3]
 17878 0220 1846     		mov	r0, r3
 17879 0222 FFF7FEFF 		bl	__aeabi_i2d
 17880 0226 4FF00002 		mov	r2, #0
 17881 022a 324B     		ldr	r3, .L734+60
 17882 022c FFF7FEFF 		bl	__aeabi_ddiv
 17883 0230 0346     		mov	r3, r0
 17884 0232 0C46     		mov	r4, r1
 17885 0234 07F11C00 		add	r0, r7, #28
 17886 0238 1A46     		mov	r2, r3
 17887 023a 2346     		mov	r3, r4
 17888 023c 2E49     		ldr	r1, .L734+64
 17889 023e FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c ****             strcat(info_string, str);
 17890              		.loc 1 2339 0
 17891 0242 07F11C03 		add	r3, r7, #28
 17892 0246 1946     		mov	r1, r3
 17893 0248 7869     		ldr	r0, [r7, #20]
 17894 024a FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17895              		.loc 1 2340 0
 17896 024e D7F88430 		ldr	r3, [r7, #132]
 17897 0252 5B68     		ldr	r3, [r3, #4]
 17898 0254 1846     		mov	r0, r3
 17899 0256 FFF7FEFF 		bl	__aeabi_i2d
 17900 025a 4FF00002 		mov	r2, #0
 17901 025e 254B     		ldr	r3, .L734+60
 17902 0260 FFF7FEFF 		bl	__aeabi_ddiv
 17903 0264 0346     		mov	r3, r0
 17904 0266 0C46     		mov	r4, r1
 17905 0268 07F11C00 		add	r0, r7, #28
 17906 026c 1A46     		mov	r2, r3
 17907 026e 2346     		mov	r3, r4
 17908 0270 2249     		ldr	r1, .L734+68
 17909 0272 FFF7FEFF 		bl	sprintf
2341:..\src/command_processing.c ****             strcat(info_string, str);
 17910              		.loc 1 2341 0
 17911 0276 07F11C03 		add	r3, r7, #28
 17912 027a 1946     		mov	r1, r3
 17913 027c 7869     		ldr	r0, [r7, #20]
 17914 027e FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17915              		.loc 1 2342 0
 17916 0282 D7F88430 		ldr	r3, [r7, #132]
 17917 0286 9B68     		ldr	r3, [r3, #8]
 17918 0288 1846     		mov	r0, r3
 17919 028a FFF7FEFF 		bl	__aeabi_i2d
 17920 028e 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 396


 17921 0292 184B     		ldr	r3, .L734+60
 17922 0294 FFF7FEFF 		bl	__aeabi_ddiv
 17923 0298 0346     		mov	r3, r0
 17924 029a 0C46     		mov	r4, r1
 17925 029c 07F11C00 		add	r0, r7, #28
 17926 02a0 1A46     		mov	r2, r3
 17927 02a2 2346     		mov	r3, r4
 17928 02a4 1649     		ldr	r1, .L734+72
 17929 02a6 FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****             strcat(info_string, str);
 17930              		.loc 1 2343 0
 17931 02aa 07F11C03 		add	r3, r7, #28
 17932 02ae 1946     		mov	r1, r3
 17933 02b0 7869     		ldr	r0, [r7, #20]
 17934 02b2 FFF7FEFF 		bl	strcat
 17935 02b6 73E0     		b	.L678
 17936              	.L735:
 17937              		.align	2
 17938              	.L734:
 17939 02b8 00000000 		.word	g_mem
 17940 02bc C00E0000 		.word	.LC134
 17941 02c0 341A0000 		.word	.LC256
 17942 02c4 F80E0000 		.word	.LC137
 17943 02c8 600F0000 		.word	.LC141
 17944 02cc 740F0000 		.word	.LC142
 17945 02d0 78180000 		.word	.LC244
 17946 02d4 A4180000 		.word	.LC245
 17947 02d8 C00F0000 		.word	.LC146
 17948 02dc 30100000 		.word	.LC155
 17949 02e0 20100000 		.word	.LC153
 17950 02e4 28100000 		.word	.LC154
 17951 02e8 00000000 		.word	dev_pwm_limit
 17952 02ec 58100000 		.word	.LC158
 17953 02f0 4C1A0000 		.word	.LC257
 17954 02f4 0000F040 		.word	1089470464
 17955 02f8 50110000 		.word	.LC169
 17956 02fc 5C110000 		.word	.LC170
 17957 0300 68110000 		.word	.LC171
 17958              	.L677:
2344:..\src/command_processing.c ****         }
2345:..\src/command_processing.c ****         else { 
2346:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17959              		.loc 1 2346 0
 17960 0304 D7F88430 		ldr	r3, [r7, #132]
 17961 0308 9B69     		ldr	r3, [r3, #24]
 17962 030a 1846     		mov	r0, r3
 17963 030c FFF7FEFF 		bl	__aeabi_i2d
 17964 0310 4FF00002 		mov	r2, #0
 17965 0314 CB4B     		ldr	r3, .L736
 17966 0316 FFF7FEFF 		bl	__aeabi_ddiv
 17967 031a 0346     		mov	r3, r0
 17968 031c 0C46     		mov	r4, r1
 17969 031e 07F11C00 		add	r0, r7, #28
 17970 0322 1A46     		mov	r2, r3
 17971 0324 2346     		mov	r3, r4
 17972 0326 C849     		ldr	r1, .L736+4
 17973 0328 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 397


2347:..\src/command_processing.c ****             strcat(info_string, str);
 17974              		.loc 1 2347 0
 17975 032c 07F11C03 		add	r3, r7, #28
 17976 0330 1946     		mov	r1, r3
 17977 0332 7869     		ldr	r0, [r7, #20]
 17978 0334 FFF7FEFF 		bl	strcat
2348:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17979              		.loc 1 2348 0
 17980 0338 D7F88430 		ldr	r3, [r7, #132]
 17981 033c DB69     		ldr	r3, [r3, #28]
 17982 033e 1846     		mov	r0, r3
 17983 0340 FFF7FEFF 		bl	__aeabi_i2d
 17984 0344 4FF00002 		mov	r2, #0
 17985 0348 BE4B     		ldr	r3, .L736
 17986 034a FFF7FEFF 		bl	__aeabi_ddiv
 17987 034e 0346     		mov	r3, r0
 17988 0350 0C46     		mov	r4, r1
 17989 0352 07F11C00 		add	r0, r7, #28
 17990 0356 1A46     		mov	r2, r3
 17991 0358 2346     		mov	r3, r4
 17992 035a BC49     		ldr	r1, .L736+8
 17993 035c FFF7FEFF 		bl	sprintf
2349:..\src/command_processing.c ****             strcat(info_string, str);
 17994              		.loc 1 2349 0
 17995 0360 07F11C03 		add	r3, r7, #28
 17996 0364 1946     		mov	r1, r3
 17997 0366 7869     		ldr	r0, [r7, #20]
 17998 0368 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 17999              		.loc 1 2350 0
 18000 036c D7F88430 		ldr	r3, [r7, #132]
 18001 0370 1B6A     		ldr	r3, [r3, #32]
 18002 0372 1846     		mov	r0, r3
 18003 0374 FFF7FEFF 		bl	__aeabi_i2d
 18004 0378 4FF00002 		mov	r2, #0
 18005 037c B14B     		ldr	r3, .L736
 18006 037e FFF7FEFF 		bl	__aeabi_ddiv
 18007 0382 0346     		mov	r3, r0
 18008 0384 0C46     		mov	r4, r1
 18009 0386 07F11C00 		add	r0, r7, #28
 18010 038a 1A46     		mov	r2, r3
 18011 038c 2346     		mov	r3, r4
 18012 038e B049     		ldr	r1, .L736+12
 18013 0390 FFF7FEFF 		bl	sprintf
2351:..\src/command_processing.c ****             strcat(info_string, str);
 18014              		.loc 1 2351 0
 18015 0394 07F11C03 		add	r3, r7, #28
 18016 0398 1946     		mov	r1, r3
 18017 039a 7869     		ldr	r0, [r7, #20]
 18018 039c FFF7FEFF 		bl	strcat
 18019              	.L678:
2352:..\src/command_processing.c ****         }
2353:..\src/command_processing.c **** 
2354:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18020              		.loc 1 2354 0
 18021 03a0 7869     		ldr	r0, [r7, #20]
 18022 03a2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 398


 18023 03a6 0346     		mov	r3, r0
 18024 03a8 1A46     		mov	r2, r3
 18025 03aa 7B69     		ldr	r3, [r7, #20]
 18026 03ac 1344     		add	r3, r3, r2
 18027 03ae A94A     		ldr	r2, .L736+16
 18028 03b0 1C46     		mov	r4, r3
 18029 03b2 1346     		mov	r3, r2
 18030 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18031 03b6 2060     		str	r0, [r4]	@ unaligned
 18032 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18033 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18034 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18035 03be A381     		strh	r3, [r4, #12]	@ unaligned
2355:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18036              		.loc 1 2355 0
 18037 03c0 D7F88430 		ldr	r3, [r7, #132]
 18038 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18039 03c8 032B     		cmp	r3, #3
 18040 03ca 4ED0     		beq	.L679
2356:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18041              		.loc 1 2356 0
 18042 03cc D7F88430 		ldr	r3, [r7, #132]
 18043 03d0 DB68     		ldr	r3, [r3, #12]
 18044 03d2 1846     		mov	r0, r3
 18045 03d4 FFF7FEFF 		bl	__aeabi_i2d
 18046 03d8 4FF00002 		mov	r2, #0
 18047 03dc 994B     		ldr	r3, .L736
 18048 03de FFF7FEFF 		bl	__aeabi_ddiv
 18049 03e2 0346     		mov	r3, r0
 18050 03e4 0C46     		mov	r4, r1
 18051 03e6 07F11C00 		add	r0, r7, #28
 18052 03ea 1A46     		mov	r2, r3
 18053 03ec 2346     		mov	r3, r4
 18054 03ee 9649     		ldr	r1, .L736+4
 18055 03f0 FFF7FEFF 		bl	sprintf
2357:..\src/command_processing.c ****             strcat(info_string, str);
 18056              		.loc 1 2357 0
 18057 03f4 07F11C03 		add	r3, r7, #28
 18058 03f8 1946     		mov	r1, r3
 18059 03fa 7869     		ldr	r0, [r7, #20]
 18060 03fc FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18061              		.loc 1 2358 0
 18062 0400 D7F88430 		ldr	r3, [r7, #132]
 18063 0404 1B69     		ldr	r3, [r3, #16]
 18064 0406 1846     		mov	r0, r3
 18065 0408 FFF7FEFF 		bl	__aeabi_i2d
 18066 040c 4FF00002 		mov	r2, #0
 18067 0410 8C4B     		ldr	r3, .L736
 18068 0412 FFF7FEFF 		bl	__aeabi_ddiv
 18069 0416 0346     		mov	r3, r0
 18070 0418 0C46     		mov	r4, r1
 18071 041a 07F11C00 		add	r0, r7, #28
 18072 041e 1A46     		mov	r2, r3
 18073 0420 2346     		mov	r3, r4
 18074 0422 8A49     		ldr	r1, .L736+8
 18075 0424 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 399


2359:..\src/command_processing.c ****             strcat(info_string, str);
 18076              		.loc 1 2359 0
 18077 0428 07F11C03 		add	r3, r7, #28
 18078 042c 1946     		mov	r1, r3
 18079 042e 7869     		ldr	r0, [r7, #20]
 18080 0430 FFF7FEFF 		bl	strcat
2360:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18081              		.loc 1 2360 0
 18082 0434 D7F88430 		ldr	r3, [r7, #132]
 18083 0438 5B69     		ldr	r3, [r3, #20]
 18084 043a 1846     		mov	r0, r3
 18085 043c FFF7FEFF 		bl	__aeabi_i2d
 18086 0440 4FF00002 		mov	r2, #0
 18087 0444 7F4B     		ldr	r3, .L736
 18088 0446 FFF7FEFF 		bl	__aeabi_ddiv
 18089 044a 0346     		mov	r3, r0
 18090 044c 0C46     		mov	r4, r1
 18091 044e 07F11C00 		add	r0, r7, #28
 18092 0452 1A46     		mov	r2, r3
 18093 0454 2346     		mov	r3, r4
 18094 0456 7E49     		ldr	r1, .L736+12
 18095 0458 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****             strcat(info_string, str);
 18096              		.loc 1 2361 0
 18097 045c 07F11C03 		add	r3, r7, #28
 18098 0460 1946     		mov	r1, r3
 18099 0462 7869     		ldr	r0, [r7, #20]
 18100 0464 FFF7FEFF 		bl	strcat
 18101 0468 4DE0     		b	.L680
 18102              	.L679:
2362:..\src/command_processing.c **** 
2363:..\src/command_processing.c ****         }
2364:..\src/command_processing.c ****         else {
2365:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 18103              		.loc 1 2365 0
 18104 046a D7F88430 		ldr	r3, [r7, #132]
 18105 046e 5B6A     		ldr	r3, [r3, #36]
 18106 0470 1846     		mov	r0, r3
 18107 0472 FFF7FEFF 		bl	__aeabi_i2d
 18108 0476 4FF00002 		mov	r2, #0
 18109 047a 724B     		ldr	r3, .L736
 18110 047c FFF7FEFF 		bl	__aeabi_ddiv
 18111 0480 0346     		mov	r3, r0
 18112 0482 0C46     		mov	r4, r1
 18113 0484 07F11C00 		add	r0, r7, #28
 18114 0488 1A46     		mov	r2, r3
 18115 048a 2346     		mov	r3, r4
 18116 048c 6E49     		ldr	r1, .L736+4
 18117 048e FFF7FEFF 		bl	sprintf
2366:..\src/command_processing.c ****             strcat(info_string, str);
 18118              		.loc 1 2366 0
 18119 0492 07F11C03 		add	r3, r7, #28
 18120 0496 1946     		mov	r1, r3
 18121 0498 7869     		ldr	r0, [r7, #20]
 18122 049a FFF7FEFF 		bl	strcat
2367:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 18123              		.loc 1 2367 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 400


 18124 049e D7F88430 		ldr	r3, [r7, #132]
 18125 04a2 9B6A     		ldr	r3, [r3, #40]
 18126 04a4 1846     		mov	r0, r3
 18127 04a6 FFF7FEFF 		bl	__aeabi_i2d
 18128 04aa 4FF00002 		mov	r2, #0
 18129 04ae 654B     		ldr	r3, .L736
 18130 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 18131 04b4 0346     		mov	r3, r0
 18132 04b6 0C46     		mov	r4, r1
 18133 04b8 07F11C00 		add	r0, r7, #28
 18134 04bc 1A46     		mov	r2, r3
 18135 04be 2346     		mov	r3, r4
 18136 04c0 6249     		ldr	r1, .L736+8
 18137 04c2 FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****             strcat(info_string, str);
 18138              		.loc 1 2368 0
 18139 04c6 07F11C03 		add	r3, r7, #28
 18140 04ca 1946     		mov	r1, r3
 18141 04cc 7869     		ldr	r0, [r7, #20]
 18142 04ce FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 18143              		.loc 1 2369 0
 18144 04d2 D7F88430 		ldr	r3, [r7, #132]
 18145 04d6 DB6A     		ldr	r3, [r3, #44]
 18146 04d8 1846     		mov	r0, r3
 18147 04da FFF7FEFF 		bl	__aeabi_i2d
 18148 04de 4FF00002 		mov	r2, #0
 18149 04e2 584B     		ldr	r3, .L736
 18150 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 18151 04e8 0346     		mov	r3, r0
 18152 04ea 0C46     		mov	r4, r1
 18153 04ec 07F11C00 		add	r0, r7, #28
 18154 04f0 1A46     		mov	r2, r3
 18155 04f2 2346     		mov	r3, r4
 18156 04f4 5649     		ldr	r1, .L736+12
 18157 04f6 FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****             strcat(info_string, str);
 18158              		.loc 1 2370 0
 18159 04fa 07F11C03 		add	r3, r7, #28
 18160 04fe 1946     		mov	r1, r3
 18161 0500 7869     		ldr	r0, [r7, #20]
 18162 0502 FFF7FEFF 		bl	strcat
 18163              	.L680:
2371:..\src/command_processing.c ****         }
2372:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 18164              		.loc 1 2372 0
 18165 0506 D7F88430 		ldr	r3, [r7, #132]
 18166 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 18167 050e 012B     		cmp	r3, #1
 18168 0510 14D1     		bne	.L681
2373:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 18169              		.loc 1 2373 0
 18170 0512 7869     		ldr	r0, [r7, #20]
 18171 0514 FFF7FEFF 		bl	strlen
 18172 0518 0346     		mov	r3, r0
 18173 051a 1A46     		mov	r2, r3
 18174 051c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 401


 18175 051e 1344     		add	r3, r3, r2
 18176 0520 4D4A     		ldr	r2, .L736+20
 18177 0522 1D46     		mov	r5, r3
 18178 0524 1446     		mov	r4, r2
 18179 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18180 0528 2860     		str	r0, [r5]	@ unaligned
 18181 052a 6960     		str	r1, [r5, #4]	@ unaligned
 18182 052c AA60     		str	r2, [r5, #8]	@ unaligned
 18183 052e EB60     		str	r3, [r5, #12]	@ unaligned
 18184 0530 03CC     		ldmia	r4!, {r0, r1}
 18185 0532 2861     		str	r0, [r5, #16]	@ unaligned
 18186 0534 6961     		str	r1, [r5, #20]	@ unaligned
 18187 0536 2388     		ldrh	r3, [r4]	@ unaligned
 18188 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 18189 053a 13E0     		b	.L682
 18190              	.L681:
2374:..\src/command_processing.c ****         else
2375:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 18191              		.loc 1 2375 0
 18192 053c 7869     		ldr	r0, [r7, #20]
 18193 053e FFF7FEFF 		bl	strlen
 18194 0542 0346     		mov	r3, r0
 18195 0544 1A46     		mov	r2, r3
 18196 0546 7B69     		ldr	r3, [r7, #20]
 18197 0548 1344     		add	r3, r3, r2
 18198 054a 444A     		ldr	r2, .L736+24
 18199 054c 1D46     		mov	r5, r3
 18200 054e 1446     		mov	r4, r2
 18201 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18202 0552 2860     		str	r0, [r5]	@ unaligned
 18203 0554 6960     		str	r1, [r5, #4]	@ unaligned
 18204 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 18205 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 18206 055a 03CC     		ldmia	r4!, {r0, r1}
 18207 055c 2861     		str	r0, [r5, #16]	@ unaligned
 18208 055e 6961     		str	r1, [r5, #20]	@ unaligned
 18209 0560 2378     		ldrb	r3, [r4]
 18210 0562 2B76     		strb	r3, [r5, #24]
 18211              	.L682:
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         switch(MOT->input_mode) {
 18212              		.loc 1 2377 0
 18213 0564 D7F88430 		ldr	r3, [r7, #132]
 18214 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18215 056c 062B     		cmp	r3, #6
 18216 056e 00F2D180 		bhi	.L683
 18217 0572 01A2     		adr	r2, .L685
 18218 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18219              		.p2align 2
 18220              	.L685:
 18221 0578 95050000 		.word	.L684+1
 18222 057c B9050000 		.word	.L686+1
 18223 0580 E1050000 		.word	.L687+1
 18224 0584 13060000 		.word	.L688+1
 18225 0588 71060000 		.word	.L689+1
 18226 058c 9F060000 		.word	.L690+1
 18227 0590 CF060000 		.word	.L691+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 402


 18228              		.p2align 1
 18229              	.L684:
2378:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2379:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 18230              		.loc 1 2379 0
 18231 0594 7869     		ldr	r0, [r7, #20]
 18232 0596 FFF7FEFF 		bl	strlen
 18233 059a 0346     		mov	r3, r0
 18234 059c 1A46     		mov	r2, r3
 18235 059e 7B69     		ldr	r3, [r7, #20]
 18236 05a0 1344     		add	r3, r3, r2
 18237 05a2 2F4A     		ldr	r2, .L736+28
 18238 05a4 1D46     		mov	r5, r3
 18239 05a6 1446     		mov	r4, r2
 18240 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18241 05aa 2860     		str	r0, [r5]	@ unaligned
 18242 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 18243 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 18244 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 18245 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 18246 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2380:..\src/command_processing.c ****                 break;
 18247              		.loc 1 2380 0
 18248 05b6 ADE0     		b	.L683
 18249              	.L686:
2381:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2382:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 18250              		.loc 1 2382 0
 18251 05b8 7869     		ldr	r0, [r7, #20]
 18252 05ba FFF7FEFF 		bl	strlen
 18253 05be 0346     		mov	r3, r0
 18254 05c0 1A46     		mov	r2, r3
 18255 05c2 7B69     		ldr	r3, [r7, #20]
 18256 05c4 1344     		add	r3, r3, r2
 18257 05c6 274A     		ldr	r2, .L736+32
 18258 05c8 1D46     		mov	r5, r3
 18259 05ca 1446     		mov	r4, r2
 18260 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18261 05ce 2860     		str	r0, [r5]	@ unaligned
 18262 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 18263 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 18264 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 18265 05d6 2068     		ldr	r0, [r4]	@ unaligned
 18266 05d8 2861     		str	r0, [r5, #16]	@ unaligned
 18267 05da 2379     		ldrb	r3, [r4, #4]
 18268 05dc 2B75     		strb	r3, [r5, #20]
2383:..\src/command_processing.c ****                 break;
 18269              		.loc 1 2383 0
 18270 05de 99E0     		b	.L683
 18271              	.L687:
2384:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2385:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 18272              		.loc 1 2385 0
 18273 05e0 7869     		ldr	r0, [r7, #20]
 18274 05e2 FFF7FEFF 		bl	strlen
 18275 05e6 0346     		mov	r3, r0
 18276 05e8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 403


 18277 05ea 7B69     		ldr	r3, [r7, #20]
 18278 05ec 1344     		add	r3, r3, r2
 18279 05ee 1E4A     		ldr	r2, .L736+36
 18280 05f0 1D46     		mov	r5, r3
 18281 05f2 1446     		mov	r4, r2
 18282 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18283 05f6 2860     		str	r0, [r5]	@ unaligned
 18284 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 18285 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 18286 05fc EB60     		str	r3, [r5, #12]	@ unaligned
 18287 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 18288 0600 2861     		str	r0, [r5, #16]	@ unaligned
 18289 0602 6961     		str	r1, [r5, #20]	@ unaligned
 18290 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 18291 0606 2388     		ldrh	r3, [r4]	@ unaligned
 18292 0608 A278     		ldrb	r2, [r4, #2]
 18293 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 18294 060c 1346     		mov	r3, r2
 18295 060e AB77     		strb	r3, [r5, #30]
2386:..\src/command_processing.c ****                 break;
 18296              		.loc 1 2386 0
 18297 0610 80E0     		b	.L683
 18298              	.L688:
2387:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2388:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 18299              		.loc 1 2388 0
 18300 0612 7869     		ldr	r0, [r7, #20]
 18301 0614 FFF7FEFF 		bl	strlen
 18302 0618 0346     		mov	r3, r0
 18303 061a 1A46     		mov	r2, r3
 18304 061c 7B69     		ldr	r3, [r7, #20]
 18305 061e 1344     		add	r3, r3, r2
 18306 0620 124A     		ldr	r2, .L736+40
 18307 0622 1D46     		mov	r5, r3
 18308 0624 1446     		mov	r4, r2
 18309 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18310 0628 2860     		str	r0, [r5]	@ unaligned
 18311 062a 6960     		str	r1, [r5, #4]	@ unaligned
 18312 062c AA60     		str	r2, [r5, #8]	@ unaligned
 18313 062e EB60     		str	r3, [r5, #12]	@ unaligned
 18314 0630 03CC     		ldmia	r4!, {r0, r1}
 18315 0632 2861     		str	r0, [r5, #16]	@ unaligned
 18316 0634 6961     		str	r1, [r5, #20]	@ unaligned
 18317 0636 2388     		ldrh	r3, [r4]	@ unaligned
 18318 0638 A278     		ldrb	r2, [r4, #2]
 18319 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 18320 063c 1346     		mov	r3, r2
 18321 063e AB76     		strb	r3, [r5, #26]
2389:..\src/command_processing.c ****                 break;
 18322              		.loc 1 2389 0
 18323 0640 68E0     		b	.L683
 18324              	.L737:
 18325 0642 00BF     		.align	2
 18326              	.L736:
 18327 0644 0000F040 		.word	1089470464
 18328 0648 50110000 		.word	.LC169
 18329 064c 5C110000 		.word	.LC170
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 404


 18330 0650 68110000 		.word	.LC171
 18331 0654 5C1A0000 		.word	.LC258
 18332 0658 90110000 		.word	.LC173
 18333 065c AC110000 		.word	.LC174
 18334 0660 C8110000 		.word	.LC175
 18335 0664 DC110000 		.word	.LC176
 18336 0668 F4110000 		.word	.LC177
 18337 066c 14120000 		.word	.LC178
 18338              	.L689:
2390:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2391:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 18339              		.loc 1 2391 0
 18340 0670 7869     		ldr	r0, [r7, #20]
 18341 0672 FFF7FEFF 		bl	strlen
 18342 0676 0346     		mov	r3, r0
 18343 0678 1A46     		mov	r2, r3
 18344 067a 7B69     		ldr	r3, [r7, #20]
 18345 067c 1344     		add	r3, r3, r2
 18346 067e AF4A     		ldr	r2, .L738
 18347 0680 1C46     		mov	r4, r3
 18348 0682 1546     		mov	r5, r2
 18349 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18350 0686 2060     		str	r0, [r4]	@ unaligned
 18351 0688 6160     		str	r1, [r4, #4]	@ unaligned
 18352 068a A260     		str	r2, [r4, #8]	@ unaligned
 18353 068c E360     		str	r3, [r4, #12]	@ unaligned
 18354 068e 2868     		ldr	r0, [r5]	@ unaligned
 18355 0690 2061     		str	r0, [r4, #16]	@ unaligned
 18356 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18357 0694 AA79     		ldrb	r2, [r5, #6]
 18358 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 18359 0698 1346     		mov	r3, r2
 18360 069a A375     		strb	r3, [r4, #22]
2392:..\src/command_processing.c ****                 break;
 18361              		.loc 1 2392 0
 18362 069c 3AE0     		b	.L683
 18363              	.L690:
2393:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2394:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 18364              		.loc 1 2394 0
 18365 069e 7869     		ldr	r0, [r7, #20]
 18366 06a0 FFF7FEFF 		bl	strlen
 18367 06a4 0346     		mov	r3, r0
 18368 06a6 1A46     		mov	r2, r3
 18369 06a8 7B69     		ldr	r3, [r7, #20]
 18370 06aa 1344     		add	r3, r3, r2
 18371 06ac A44A     		ldr	r2, .L738+4
 18372 06ae 1D46     		mov	r5, r3
 18373 06b0 1446     		mov	r4, r2
 18374 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18375 06b4 2860     		str	r0, [r5]	@ unaligned
 18376 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 18377 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 18378 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 18379 06bc 03CC     		ldmia	r4!, {r0, r1}
 18380 06be 2861     		str	r0, [r5, #16]	@ unaligned
 18381 06c0 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 405


 18382 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 18383 06c4 A278     		ldrb	r2, [r4, #2]
 18384 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 18385 06c8 1346     		mov	r3, r2
 18386 06ca AB76     		strb	r3, [r5, #26]
2395:..\src/command_processing.c ****                 break;
 18387              		.loc 1 2395 0
 18388 06cc 22E0     		b	.L683
 18389              	.L691:
2396:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2397:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 18390              		.loc 1 2397 0
 18391 06ce 7869     		ldr	r0, [r7, #20]
 18392 06d0 FFF7FEFF 		bl	strlen
 18393 06d4 0346     		mov	r3, r0
 18394 06d6 1A46     		mov	r2, r3
 18395 06d8 7B69     		ldr	r3, [r7, #20]
 18396 06da 1344     		add	r3, r3, r2
 18397 06dc 994A     		ldr	r2, .L738+8
 18398 06de 1546     		mov	r5, r2
 18399 06e0 9E46     		mov	lr, r3
 18400 06e2 05F1200C 		add	ip, r5, #32
 18401              	.L692:
 18402 06e6 7446     		mov	r4, lr
 18403 06e8 2E46     		mov	r6, r5
 18404 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18405 06ec 2060     		str	r0, [r4]	@ unaligned
 18406 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 18407 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 18408 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 18409 06f4 1035     		adds	r5, r5, #16
 18410 06f6 0EF1100E 		add	lr, lr, #16
 18411 06fa 6545     		cmp	r5, ip
 18412 06fc F3D1     		bne	.L692
 18413 06fe 7446     		mov	r4, lr
 18414 0700 2B46     		mov	r3, r5
 18415 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 18416 0704 2060     		str	r0, [r4]	@ unaligned
 18417 0706 6160     		str	r1, [r4, #4]	@ unaligned
 18418 0708 A260     		str	r2, [r4, #8]	@ unaligned
 18419 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 18420 070c 9B78     		ldrb	r3, [r3, #2]
 18421 070e A281     		strh	r2, [r4, #12]	@ unaligned
 18422 0710 A373     		strb	r3, [r4, #14]
2398:..\src/command_processing.c ****                     break;
 18423              		.loc 1 2398 0
 18424 0712 00BF     		nop
 18425              	.L683:
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****         switch(MOT->control_mode) {
 18426              		.loc 1 2401 0
 18427 0714 D7F88430 		ldr	r3, [r7, #132]
 18428 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18429 071c 032B     		cmp	r3, #3
 18430 071e 64D8     		bhi	.L732
 18431 0720 01A2     		adr	r2, .L695
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 406


 18432 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18433 0726 00BF     		.p2align 2
 18434              	.L695:
 18435 0728 39070000 		.word	.L694+1
 18436 072c 63070000 		.word	.L696+1
 18437 0730 87070000 		.word	.L697+1
 18438 0734 AD070000 		.word	.L698+1
 18439              		.p2align 1
 18440              	.L694:
2402:..\src/command_processing.c ****             case CONTROL_ANGLE:
2403:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 18441              		.loc 1 2403 0
 18442 0738 7869     		ldr	r0, [r7, #20]
 18443 073a FFF7FEFF 		bl	strlen
 18444 073e 0346     		mov	r3, r0
 18445 0740 1A46     		mov	r2, r3
 18446 0742 7B69     		ldr	r3, [r7, #20]
 18447 0744 1344     		add	r3, r3, r2
 18448 0746 804A     		ldr	r2, .L738+12
 18449 0748 1D46     		mov	r5, r3
 18450 074a 1446     		mov	r4, r2
 18451 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18452 074e 2860     		str	r0, [r5]	@ unaligned
 18453 0750 6960     		str	r1, [r5, #4]	@ unaligned
 18454 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 18455 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 18456 0756 03CC     		ldmia	r4!, {r0, r1}
 18457 0758 2861     		str	r0, [r5, #16]	@ unaligned
 18458 075a 6961     		str	r1, [r5, #20]	@ unaligned
 18459 075c 2378     		ldrb	r3, [r4]
 18460 075e 2B76     		strb	r3, [r5, #24]
2404:..\src/command_processing.c ****                 break;
 18461              		.loc 1 2404 0
 18462 0760 44E0     		b	.L699
 18463              	.L696:
2405:..\src/command_processing.c ****             case CONTROL_PWM:
2406:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18464              		.loc 1 2406 0
 18465 0762 7869     		ldr	r0, [r7, #20]
 18466 0764 FFF7FEFF 		bl	strlen
 18467 0768 0346     		mov	r3, r0
 18468 076a 1A46     		mov	r2, r3
 18469 076c 7B69     		ldr	r3, [r7, #20]
 18470 076e 1344     		add	r3, r3, r2
 18471 0770 764A     		ldr	r2, .L738+16
 18472 0772 1D46     		mov	r5, r3
 18473 0774 1446     		mov	r4, r2
 18474 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18475 0778 2860     		str	r0, [r5]	@ unaligned
 18476 077a 6960     		str	r1, [r5, #4]	@ unaligned
 18477 077c AA60     		str	r2, [r5, #8]	@ unaligned
 18478 077e EB60     		str	r3, [r5, #12]	@ unaligned
 18479 0780 2068     		ldr	r0, [r4]	@ unaligned
 18480 0782 2861     		str	r0, [r5, #16]	@ unaligned
2407:..\src/command_processing.c ****                 break;
 18481              		.loc 1 2407 0
 18482 0784 32E0     		b	.L699
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 407


 18483              	.L697:
2408:..\src/command_processing.c ****             case CONTROL_CURRENT:
2409:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18484              		.loc 1 2409 0
 18485 0786 7869     		ldr	r0, [r7, #20]
 18486 0788 FFF7FEFF 		bl	strlen
 18487 078c 0346     		mov	r3, r0
 18488 078e 1A46     		mov	r2, r3
 18489 0790 7B69     		ldr	r3, [r7, #20]
 18490 0792 1344     		add	r3, r3, r2
 18491 0794 6E4A     		ldr	r2, .L738+20
 18492 0796 1D46     		mov	r5, r3
 18493 0798 1446     		mov	r4, r2
 18494 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18495 079c 2860     		str	r0, [r5]	@ unaligned
 18496 079e 6960     		str	r1, [r5, #4]	@ unaligned
 18497 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 18498 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 18499 07a4 03CC     		ldmia	r4!, {r0, r1}
 18500 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 18501 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2410:..\src/command_processing.c ****                 break;
 18502              		.loc 1 2410 0
 18503 07aa 1FE0     		b	.L699
 18504              	.L698:
2411:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2412:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18505              		.loc 1 2412 0
 18506 07ac 7869     		ldr	r0, [r7, #20]
 18507 07ae FFF7FEFF 		bl	strlen
 18508 07b2 0346     		mov	r3, r0
 18509 07b4 1A46     		mov	r2, r3
 18510 07b6 7B69     		ldr	r3, [r7, #20]
 18511 07b8 1344     		add	r3, r3, r2
 18512 07ba 664A     		ldr	r2, .L738+24
 18513 07bc 1446     		mov	r4, r2
 18514 07be 9E46     		mov	lr, r3
 18515 07c0 04F1200C 		add	ip, r4, #32
 18516              	.L700:
 18517 07c4 7546     		mov	r5, lr
 18518 07c6 2646     		mov	r6, r4
 18519 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18520 07ca 2860     		str	r0, [r5]	@ unaligned
 18521 07cc 6960     		str	r1, [r5, #4]	@ unaligned
 18522 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 18523 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 18524 07d2 1034     		adds	r4, r4, #16
 18525 07d4 0EF1100E 		add	lr, lr, #16
 18526 07d8 6445     		cmp	r4, ip
 18527 07da F3D1     		bne	.L700
 18528 07dc 7346     		mov	r3, lr
 18529 07de 2246     		mov	r2, r4
 18530 07e0 1068     		ldr	r0, [r2]	@ unaligned
 18531 07e2 1860     		str	r0, [r3]	@ unaligned
 18532 07e4 1279     		ldrb	r2, [r2, #4]
 18533 07e6 1A71     		strb	r2, [r3, #4]
2413:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 408


 18534              		.loc 1 2413 0
 18535 07e8 00E0     		b	.L699
 18536              	.L732:
2414:..\src/command_processing.c ****             default:
2415:..\src/command_processing.c ****                 break;
 18537              		.loc 1 2415 0
 18538 07ea 00BF     		nop
 18539              	.L699:
2416:..\src/command_processing.c ****         }
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18540              		.loc 1 2418 0
 18541 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18542 07f0 D7F88C10 		ldr	r1, [r7, #140]
 18543 07f4 1346     		mov	r3, r2
 18544 07f6 5B00     		lsls	r3, r3, #1
 18545 07f8 1344     		add	r3, r3, r2
 18546 07fa 1B01     		lsls	r3, r3, #4
 18547 07fc 0B44     		add	r3, r3, r1
 18548 07fe 03F5D873 		add	r3, r3, #432
 18549 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18550 0804 002B     		cmp	r3, #0
 18551 0806 1CD0     		beq	.L701
2419:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 18552              		.loc 1 2419 0
 18553 0808 7869     		ldr	r0, [r7, #20]
 18554 080a FFF7FEFF 		bl	strlen
 18555 080e 0346     		mov	r3, r0
 18556 0810 1A46     		mov	r2, r3
 18557 0812 7B69     		ldr	r3, [r7, #20]
 18558 0814 1344     		add	r3, r3, r2
 18559 0816 504A     		ldr	r2, .L738+28
 18560 0818 1446     		mov	r4, r2
 18561 081a 9E46     		mov	lr, r3
 18562 081c 04F1200C 		add	ip, r4, #32
 18563              	.L702:
 18564 0820 7546     		mov	r5, lr
 18565 0822 2646     		mov	r6, r4
 18566 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18567 0826 2860     		str	r0, [r5]	@ unaligned
 18568 0828 6960     		str	r1, [r5, #4]	@ unaligned
 18569 082a AA60     		str	r2, [r5, #8]	@ unaligned
 18570 082c EB60     		str	r3, [r5, #12]	@ unaligned
 18571 082e 1034     		adds	r4, r4, #16
 18572 0830 0EF1100E 		add	lr, lr, #16
 18573 0834 6445     		cmp	r4, ip
 18574 0836 F3D1     		bne	.L702
 18575 0838 7346     		mov	r3, lr
 18576 083a 2246     		mov	r2, r4
 18577 083c 1278     		ldrb	r2, [r2]
 18578 083e 1A70     		strb	r2, [r3]
 18579 0840 13E0     		b	.L703
 18580              	.L701:
2420:..\src/command_processing.c ****         else
2421:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18581              		.loc 1 2421 0
 18582 0842 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 409


 18583 0844 FFF7FEFF 		bl	strlen
 18584 0848 0346     		mov	r3, r0
 18585 084a 1A46     		mov	r2, r3
 18586 084c 7B69     		ldr	r3, [r7, #20]
 18587 084e 1344     		add	r3, r3, r2
 18588 0850 424A     		ldr	r2, .L738+32
 18589 0852 1C46     		mov	r4, r3
 18590 0854 1546     		mov	r5, r2
 18591 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18592 0858 2060     		str	r0, [r4]	@ unaligned
 18593 085a 6160     		str	r1, [r4, #4]	@ unaligned
 18594 085c A260     		str	r2, [r4, #8]	@ unaligned
 18595 085e E360     		str	r3, [r4, #12]	@ unaligned
 18596 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18597 0862 2061     		str	r0, [r4, #16]	@ unaligned
 18598 0864 6161     		str	r1, [r4, #20]	@ unaligned
 18599 0866 A261     		str	r2, [r4, #24]	@ unaligned
 18600 0868 E361     		str	r3, [r4, #28]	@ unaligned
 18601              	.L703:
2422:..\src/command_processing.c **** 
2423:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18602              		.loc 1 2423 0
 18603 086a 7869     		ldr	r0, [r7, #20]
 18604 086c FFF7FEFF 		bl	strlen
 18605 0870 0346     		mov	r3, r0
 18606 0872 1A46     		mov	r2, r3
 18607 0874 7B69     		ldr	r3, [r7, #20]
 18608 0876 1344     		add	r3, r3, r2
 18609 0878 394A     		ldr	r2, .L738+36
 18610 087a 1C46     		mov	r4, r3
 18611 087c 1346     		mov	r3, r2
 18612 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 18613 0880 2060     		str	r0, [r4]	@ unaligned
 18614 0882 6160     		str	r1, [r4, #4]	@ unaligned
 18615 0884 A260     		str	r2, [r4, #8]	@ unaligned
 18616 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 18617 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2424:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18618              		.loc 1 2424 0
 18619 088a 0023     		movs	r3, #0
 18620 088c C7F89430 		str	r3, [r7, #148]
 18621 0890 30E0     		b	.L704
 18622              	.L706:
2425:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18623              		.loc 1 2425 0
 18624 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18625 0896 D7F88C10 		ldr	r1, [r7, #140]
 18626 089a 1346     		mov	r3, r2
 18627 089c 5B00     		lsls	r3, r3, #1
 18628 089e 1344     		add	r3, r3, r2
 18629 08a0 1B01     		lsls	r3, r3, #4
 18630 08a2 CA18     		adds	r2, r1, r3
 18631 08a4 D7F89430 		ldr	r3, [r7, #148]
 18632 08a8 1344     		add	r3, r3, r2
 18633 08aa 03F29513 		addw	r3, r3, #405
 18634 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18635 08b0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 410


 18636 08b2 07F11C03 		add	r3, r7, #28
 18637 08b6 2B49     		ldr	r1, .L738+40
 18638 08b8 1846     		mov	r0, r3
 18639 08ba FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****             strcat(info_string, str);
 18640              		.loc 1 2426 0
 18641 08be 07F11C03 		add	r3, r7, #28
 18642 08c2 1946     		mov	r1, r3
 18643 08c4 7869     		ldr	r0, [r7, #20]
 18644 08c6 FFF7FEFF 		bl	strcat
2427:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18645              		.loc 1 2427 0
 18646 08ca D7F89430 		ldr	r3, [r7, #148]
 18647 08ce 022B     		cmp	r3, #2
 18648 08d0 0BD0     		beq	.L705
2428:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18649              		.loc 1 2428 0
 18650 08d2 7869     		ldr	r0, [r7, #20]
 18651 08d4 FFF7FEFF 		bl	strlen
 18652 08d8 0346     		mov	r3, r0
 18653 08da 1A46     		mov	r2, r3
 18654 08dc 7B69     		ldr	r3, [r7, #20]
 18655 08de 1344     		add	r3, r3, r2
 18656 08e0 214A     		ldr	r2, .L738+44
 18657 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 18658 08e4 9278     		ldrb	r2, [r2, #2]
 18659 08e6 1980     		strh	r1, [r3]	@ unaligned
 18660 08e8 9A70     		strb	r2, [r3, #2]
 18661              	.L705:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18662              		.loc 1 2424 0 discriminator 2
 18663 08ea D7F89430 		ldr	r3, [r7, #148]
 18664 08ee 0133     		adds	r3, r3, #1
 18665 08f0 C7F89430 		str	r3, [r7, #148]
 18666              	.L704:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18667              		.loc 1 2424 0 is_stmt 0 discriminator 1
 18668 08f4 D7F89430 		ldr	r3, [r7, #148]
 18669 08f8 022B     		cmp	r3, #2
 18670 08fa CADD     		ble	.L706
2429:..\src/command_processing.c ****             }                
2430:..\src/command_processing.c ****         }
2431:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18671              		.loc 1 2431 0 is_stmt 1
 18672 08fc 7869     		ldr	r0, [r7, #20]
 18673 08fe FFF7FEFF 		bl	strlen
 18674 0902 0346     		mov	r3, r0
 18675 0904 1A46     		mov	r2, r3
 18676 0906 7B69     		ldr	r3, [r7, #20]
 18677 0908 1344     		add	r3, r3, r2
 18678 090a 184A     		ldr	r2, .L738+48
 18679 090c 1188     		ldrh	r1, [r2]	@ unaligned
 18680 090e 9278     		ldrb	r2, [r2, #2]
 18681 0910 1980     		strh	r1, [r3]	@ unaligned
 18682 0912 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 411


 18683              		.loc 1 2433 0
 18684 0914 7869     		ldr	r0, [r7, #20]
 18685 0916 FFF7FEFF 		bl	strlen
 18686 091a 0346     		mov	r3, r0
 18687 091c 1A46     		mov	r2, r3
 18688 091e 7B69     		ldr	r3, [r7, #20]
 18689 0920 1344     		add	r3, r3, r2
 18690 0922 1349     		ldr	r1, .L738+52
 18691 0924 1A46     		mov	r2, r3
 18692 0926 0B46     		mov	r3, r1
 18693 0928 03CB     		ldmia	r3!, {r0, r1}
 18694 092a 1060     		str	r0, [r2]	@ unaligned
 18695 092c 5160     		str	r1, [r2, #4]	@ unaligned
 18696 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 18697 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2434:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18698              		.loc 1 2434 0
 18699 0932 0023     		movs	r3, #0
 18700 0934 C7F89430 		str	r3, [r7, #148]
 18701 0938 5CE0     		b	.L707
 18702              	.L739:
 18703 093a 00BF     		.align	2
 18704              	.L738:
 18705 093c 30120000 		.word	.LC179
 18706 0940 48120000 		.word	.LC180
 18707 0944 64120000 		.word	.LC181
 18708 0948 94120000 		.word	.LC182
 18709 094c B0120000 		.word	.LC183
 18710 0950 C4120000 		.word	.LC184
 18711 0954 DC120000 		.word	.LC185
 18712 0958 04130000 		.word	.LC186
 18713 095c 28130000 		.word	.LC187
 18714 0960 6C1A0000 		.word	.LC259
 18715 0964 90100000 		.word	.LC161
 18716 0968 94100000 		.word	.LC162
 18717 096c A80E0000 		.word	.LC132
 18718 0970 7C1A0000 		.word	.LC260
 18719              	.L709:
2435:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18720              		.loc 1 2435 0
 18721 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18722 0978 D7F88C10 		ldr	r1, [r7, #140]
 18723 097c 1346     		mov	r3, r2
 18724 097e 5B00     		lsls	r3, r3, #1
 18725 0980 1344     		add	r3, r3, r2
 18726 0982 9B00     		lsls	r3, r3, #2
 18727 0984 D7F89420 		ldr	r2, [r7, #148]
 18728 0988 1344     		add	r3, r3, r2
 18729 098a 6633     		adds	r3, r3, #102
 18730 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18731 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18732 0994 D7F88C00 		ldr	r0, [r7, #140]
 18733 0998 1346     		mov	r3, r2
 18734 099a 5B00     		lsls	r3, r3, #1
 18735 099c 1344     		add	r3, r3, r2
 18736 099e 1B01     		lsls	r3, r3, #4
 18737 09a0 C218     		adds	r2, r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 412


 18738 09a2 D7F89430 		ldr	r3, [r7, #148]
 18739 09a6 1344     		add	r3, r3, r2
 18740 09a8 03F29513 		addw	r3, r3, #405
 18741 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18742 09ae 41FA03F2 		asr	r2, r1, r3
 18743 09b2 07F11C03 		add	r3, r7, #28
 18744 09b6 CC49     		ldr	r1, .L740
 18745 09b8 1846     		mov	r0, r3
 18746 09ba FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****             strcat(info_string, str);
 18747              		.loc 1 2436 0
 18748 09be 07F11C03 		add	r3, r7, #28
 18749 09c2 1946     		mov	r1, r3
 18750 09c4 7869     		ldr	r0, [r7, #20]
 18751 09c6 FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18752              		.loc 1 2437 0
 18753 09ca D7F89430 		ldr	r3, [r7, #148]
 18754 09ce 022B     		cmp	r3, #2
 18755 09d0 0BD0     		beq	.L708
2438:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18756              		.loc 1 2438 0
 18757 09d2 7869     		ldr	r0, [r7, #20]
 18758 09d4 FFF7FEFF 		bl	strlen
 18759 09d8 0346     		mov	r3, r0
 18760 09da 1A46     		mov	r2, r3
 18761 09dc 7B69     		ldr	r3, [r7, #20]
 18762 09de 1344     		add	r3, r3, r2
 18763 09e0 C24A     		ldr	r2, .L740+4
 18764 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 18765 09e4 9278     		ldrb	r2, [r2, #2]
 18766 09e6 1980     		strh	r1, [r3]	@ unaligned
 18767 09e8 9A70     		strb	r2, [r3, #2]
 18768              	.L708:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18769              		.loc 1 2434 0 discriminator 2
 18770 09ea D7F89430 		ldr	r3, [r7, #148]
 18771 09ee 0133     		adds	r3, r3, #1
 18772 09f0 C7F89430 		str	r3, [r7, #148]
 18773              	.L707:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18774              		.loc 1 2434 0 is_stmt 0 discriminator 1
 18775 09f4 D7F89430 		ldr	r3, [r7, #148]
 18776 09f8 022B     		cmp	r3, #2
 18777 09fa BBDD     		ble	.L709
2439:..\src/command_processing.c ****             }
2440:..\src/command_processing.c ****         }
2441:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18778              		.loc 1 2441 0 is_stmt 1
 18779 09fc 7869     		ldr	r0, [r7, #20]
 18780 09fe FFF7FEFF 		bl	strlen
 18781 0a02 0346     		mov	r3, r0
 18782 0a04 1A46     		mov	r2, r3
 18783 0a06 7B69     		ldr	r3, [r7, #20]
 18784 0a08 1344     		add	r3, r3, r2
 18785 0a0a B94A     		ldr	r2, .L740+8
 18786 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 413


 18787 0a0e 9278     		ldrb	r2, [r2, #2]
 18788 0a10 1980     		strh	r1, [r3]	@ unaligned
 18789 0a12 9A70     		strb	r2, [r3, #2]
2442:..\src/command_processing.c ****             
2443:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18790              		.loc 1 2443 0
 18791 0a14 7869     		ldr	r0, [r7, #20]
 18792 0a16 FFF7FEFF 		bl	strlen
 18793 0a1a 0346     		mov	r3, r0
 18794 0a1c 1A46     		mov	r2, r3
 18795 0a1e 7B69     		ldr	r3, [r7, #20]
 18796 0a20 1344     		add	r3, r3, r2
 18797 0a22 B44A     		ldr	r2, .L740+12
 18798 0a24 1C46     		mov	r4, r3
 18799 0a26 1346     		mov	r3, r2
 18800 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 18801 0a2a 2060     		str	r0, [r4]	@ unaligned
 18802 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 18803 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 18804 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 18805 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2444:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18806              		.loc 1 2444 0
 18807 0a34 0023     		movs	r3, #0
 18808 0a36 C7F89430 		str	r3, [r7, #148]
 18809 0a3a 35E0     		b	.L710
 18810              	.L712:
2445:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18811              		.loc 1 2445 0
 18812 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18813 0a40 D7F88C10 		ldr	r1, [r7, #140]
 18814 0a44 1346     		mov	r3, r2
 18815 0a46 5B00     		lsls	r3, r3, #1
 18816 0a48 1344     		add	r3, r3, r2
 18817 0a4a 9B00     		lsls	r3, r3, #2
 18818 0a4c D7F89420 		ldr	r2, [r7, #148]
 18819 0a50 1344     		add	r3, r3, r2
 18820 0a52 6833     		adds	r3, r3, #104
 18821 0a54 9B00     		lsls	r3, r3, #2
 18822 0a56 0B44     		add	r3, r3, r1
 18823 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 18824 0a5a 1846     		mov	r0, r3
 18825 0a5c FFF7FEFF 		bl	__aeabi_f2d
 18826 0a60 0346     		mov	r3, r0
 18827 0a62 0C46     		mov	r4, r1
 18828 0a64 07F11C00 		add	r0, r7, #28
 18829 0a68 1A46     		mov	r2, r3
 18830 0a6a 2346     		mov	r3, r4
 18831 0a6c A249     		ldr	r1, .L740+16
 18832 0a6e FFF7FEFF 		bl	sprintf
2446:..\src/command_processing.c ****             strcat(info_string, str);
 18833              		.loc 1 2446 0
 18834 0a72 07F11C03 		add	r3, r7, #28
 18835 0a76 1946     		mov	r1, r3
 18836 0a78 7869     		ldr	r0, [r7, #20]
 18837 0a7a FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 414


 18838              		.loc 1 2447 0
 18839 0a7e D7F89430 		ldr	r3, [r7, #148]
 18840 0a82 022B     		cmp	r3, #2
 18841 0a84 0BD0     		beq	.L711
2448:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18842              		.loc 1 2448 0
 18843 0a86 7869     		ldr	r0, [r7, #20]
 18844 0a88 FFF7FEFF 		bl	strlen
 18845 0a8c 0346     		mov	r3, r0
 18846 0a8e 1A46     		mov	r2, r3
 18847 0a90 7B69     		ldr	r3, [r7, #20]
 18848 0a92 1344     		add	r3, r3, r2
 18849 0a94 954A     		ldr	r2, .L740+4
 18850 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 18851 0a98 9278     		ldrb	r2, [r2, #2]
 18852 0a9a 1980     		strh	r1, [r3]	@ unaligned
 18853 0a9c 9A70     		strb	r2, [r3, #2]
 18854              	.L711:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18855              		.loc 1 2444 0 discriminator 2
 18856 0a9e D7F89430 		ldr	r3, [r7, #148]
 18857 0aa2 0133     		adds	r3, r3, #1
 18858 0aa4 C7F89430 		str	r3, [r7, #148]
 18859              	.L710:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18860              		.loc 1 2444 0 is_stmt 0 discriminator 1
 18861 0aa8 D7F89430 		ldr	r3, [r7, #148]
 18862 0aac 022B     		cmp	r3, #2
 18863 0aae C5DD     		ble	.L712
2449:..\src/command_processing.c ****             }
2450:..\src/command_processing.c ****         }
2451:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18864              		.loc 1 2451 0 is_stmt 1
 18865 0ab0 7869     		ldr	r0, [r7, #20]
 18866 0ab2 FFF7FEFF 		bl	strlen
 18867 0ab6 0346     		mov	r3, r0
 18868 0ab8 1A46     		mov	r2, r3
 18869 0aba 7B69     		ldr	r3, [r7, #20]
 18870 0abc 1344     		add	r3, r3, r2
 18871 0abe 8C4A     		ldr	r2, .L740+8
 18872 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 18873 0ac2 9278     		ldrb	r2, [r2, #2]
 18874 0ac4 1980     		strh	r1, [r3]	@ unaligned
 18875 0ac6 9A70     		strb	r2, [r3, #2]
2452:..\src/command_processing.c **** 
2453:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18876              		.loc 1 2453 0
 18877 0ac8 D7F88430 		ldr	r3, [r7, #132]
 18878 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
 18879 0ace 1846     		mov	r0, r3
 18880 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 18881 0ad4 C7E90201 		strd	r0, [r7, #8]
 18882 0ad8 D7F88430 		ldr	r3, [r7, #132]
 18883 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 18884 0ade 1846     		mov	r0, r3
 18885 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 18886 0ae4 0446     		mov	r4, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 415


 18887 0ae6 0D46     		mov	r5, r1
 18888 0ae8 D7F88430 		ldr	r3, [r7, #132]
 18889 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 18890 0aee 1846     		mov	r0, r3
 18891 0af0 FFF7FEFF 		bl	__aeabi_f2d
 18892 0af4 8046     		mov	r8, r0
 18893 0af6 8946     		mov	r9, r1
 18894 0af8 D7F88430 		ldr	r3, [r7, #132]
 18895 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 18896 0afe 1846     		mov	r0, r3
 18897 0b00 FFF7FEFF 		bl	__aeabi_f2d
 18898 0b04 8246     		mov	r10, r0
 18899 0b06 8B46     		mov	fp, r1
 18900 0b08 D7F88430 		ldr	r3, [r7, #132]
 18901 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 18902 0b0e 1846     		mov	r0, r3
 18903 0b10 FFF7FEFF 		bl	__aeabi_f2d
 18904 0b14 C7E90001 		strd	r0, [r7]
 18905 0b18 D7F88430 		ldr	r3, [r7, #132]
 18906 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 18907 0b1e 1846     		mov	r0, r3
 18908 0b20 FFF7FEFF 		bl	__aeabi_f2d
 18909 0b24 0246     		mov	r2, r0
 18910 0b26 0B46     		mov	r3, r1
 18911 0b28 07F11C00 		add	r0, r7, #28
 18912 0b2c CDE90823 		strd	r2, [sp, #32]
 18913 0b30 D7E90012 		ldrd	r1, [r7]
 18914 0b34 CDE90612 		strd	r1, [sp, #24]
 18915 0b38 CDE904AB 		strd	r10, [sp, #16]
 18916 0b3c CDE90289 		strd	r8, [sp, #8]
 18917 0b40 CDE90045 		strd	r4, [sp]
 18918 0b44 D7E90223 		ldrd	r2, [r7, #8]
 18919 0b48 6C49     		ldr	r1, .L740+20
 18920 0b4a FFF7FEFF 		bl	sprintf
2454:..\src/command_processing.c **** 		strcat(info_string, str);
 18921              		.loc 1 2454 0
 18922 0b4e 07F11C03 		add	r3, r7, #28
 18923 0b52 1946     		mov	r1, r3
 18924 0b54 7869     		ldr	r0, [r7, #20]
 18925 0b56 FFF7FEFF 		bl	strcat
2455:..\src/command_processing.c **** 
2456:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18926              		.loc 1 2456 0
 18927 0b5a D7F88430 		ldr	r3, [r7, #132]
 18928 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18929 0b62 1A46     		mov	r2, r3
 18930 0b64 07F11C03 		add	r3, r7, #28
 18931 0b68 6549     		ldr	r1, .L740+24
 18932 0b6a 1846     		mov	r0, r3
 18933 0b6c FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c **** 		strcat(info_string, str);
 18934              		.loc 1 2457 0
 18935 0b70 07F11C03 		add	r3, r7, #28
 18936 0b74 1946     		mov	r1, r3
 18937 0b76 7869     		ldr	r0, [r7, #20]
 18938 0b78 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 416


2459:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18939              		.loc 1 2459 0
 18940 0b7c D7F88430 		ldr	r3, [r7, #132]
 18941 0b80 596B     		ldr	r1, [r3, #52]
 18942 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18943 0b86 D7F88C00 		ldr	r0, [r7, #140]
 18944 0b8a 1346     		mov	r3, r2
 18945 0b8c 5B00     		lsls	r3, r3, #1
 18946 0b8e 1344     		add	r3, r3, r2
 18947 0b90 1B01     		lsls	r3, r3, #4
 18948 0b92 0344     		add	r3, r3, r0
 18949 0b94 03F29513 		addw	r3, r3, #405
 18950 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18951 0b9a 41FA03F4 		asr	r4, r1, r3
 18952 0b9e D7F88430 		ldr	r3, [r7, #132]
 18953 0ba2 996B     		ldr	r1, [r3, #56]
 18954 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18955 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 18956 0bac 1346     		mov	r3, r2
 18957 0bae 5B00     		lsls	r3, r3, #1
 18958 0bb0 1344     		add	r3, r3, r2
 18959 0bb2 1B01     		lsls	r3, r3, #4
 18960 0bb4 0344     		add	r3, r3, r0
 18961 0bb6 03F29513 		addw	r3, r3, #405
 18962 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18963 0bbc 41FA03F3 		asr	r3, r1, r3
 18964 0bc0 07F11C00 		add	r0, r7, #28
 18965 0bc4 2246     		mov	r2, r4
 18966 0bc6 4F49     		ldr	r1, .L740+28
 18967 0bc8 FFF7FEFF 		bl	sprintf
2460:..\src/command_processing.c **** 		strcat(info_string, str);
 18968              		.loc 1 2460 0
 18969 0bcc 07F11C03 		add	r3, r7, #28
 18970 0bd0 1946     		mov	r1, r3
 18971 0bd2 7869     		ldr	r0, [r7, #20]
 18972 0bd4 FFF7FEFF 		bl	strcat
2461:..\src/command_processing.c **** 
2462:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18973              		.loc 1 2462 0
 18974 0bd8 D7F88430 		ldr	r3, [r7, #132]
 18975 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 18976 0be0 1A46     		mov	r2, r3
 18977 0be2 07F11C03 		add	r3, r7, #28
 18978 0be6 4849     		ldr	r1, .L740+32
 18979 0be8 1846     		mov	r0, r3
 18980 0bea FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 18981              		.loc 1 2463 0
 18982 0bee 07F11C03 		add	r3, r7, #28
 18983 0bf2 1946     		mov	r1, r3
 18984 0bf4 7869     		ldr	r0, [r7, #20]
 18985 0bf6 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 
2465:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18986              		.loc 1 2465 0
 18987 0bfa D7F88430 		ldr	r3, [r7, #132]
 18988 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 417


 18989 0c02 022B     		cmp	r3, #2
 18990 0c04 12D0     		beq	.L713
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18991              		.loc 1 2466 0 discriminator 1
 18992 0c06 D7F88430 		ldr	r3, [r7, #132]
 18993 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2465:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18994              		.loc 1 2465 0 discriminator 1
 18995 0c0e 032B     		cmp	r3, #3
 18996 0c10 0CD0     		beq	.L713
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18997              		.loc 1 2467 0
 18998 0c12 D7F88430 		ldr	r3, [r7, #132]
 18999 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19000              		.loc 1 2466 0
 19001 0c1a 042B     		cmp	r3, #4
 19002 0c1c 06D0     		beq	.L713
2468:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 19003              		.loc 1 2468 0
 19004 0c1e D7F88430 		ldr	r3, [r7, #132]
 19005 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19006              		.loc 1 2467 0
 19007 0c26 052B     		cmp	r3, #5
 19008 0c28 40F0A780 		bne	.L714
 19009              	.L713:
2469:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19010              		.loc 1 2469 0
 19011 0c2c D7F88C30 		ldr	r3, [r7, #140]
 19012 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 19013 0c34 1A46     		mov	r2, r3
 19014 0c36 D7F88C30 		ldr	r3, [r7, #140]
 19015 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 19016 0c3e 07F11C00 		add	r0, r7, #28
 19017 0c42 3249     		ldr	r1, .L740+36
 19018 0c44 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 19019              		.loc 1 2470 0
 19020 0c48 07F11C03 		add	r3, r7, #28
 19021 0c4c 1946     		mov	r1, r3
 19022 0c4e 7869     		ldr	r0, [r7, #20]
 19023 0c50 FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19024              		.loc 1 2471 0
 19025 0c54 7869     		ldr	r0, [r7, #20]
 19026 0c56 FFF7FEFF 		bl	strlen
 19027 0c5a 0346     		mov	r3, r0
 19028 0c5c 1A46     		mov	r2, r3
 19029 0c5e 7B69     		ldr	r3, [r7, #20]
 19030 0c60 1344     		add	r3, r3, r2
 19031 0c62 234A     		ldr	r2, .L740+8
 19032 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 19033 0c66 9278     		ldrb	r2, [r2, #2]
 19034 0c68 1980     		strh	r1, [r3]	@ unaligned
 19035 0c6a 9A70     		strb	r2, [r3, #2]
2472:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 418


2473:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19036              		.loc 1 2473 0
 19037 0c6c D7F88C30 		ldr	r3, [r7, #140]
 19038 0c70 D3F8F421 		ldr	r2, [r3, #500]
 19039 0c74 D7F88C30 		ldr	r3, [r7, #140]
 19040 0c78 D3F8F831 		ldr	r3, [r3, #504]
 19041 0c7c 07F11C00 		add	r0, r7, #28
 19042 0c80 2349     		ldr	r1, .L740+40
 19043 0c82 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c **** 			strcat(info_string, str);
 19044              		.loc 1 2474 0
 19045 0c86 07F11C03 		add	r3, r7, #28
 19046 0c8a 1946     		mov	r1, r3
 19047 0c8c 7869     		ldr	r0, [r7, #20]
 19048 0c8e FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19049              		.loc 1 2475 0
 19050 0c92 7869     		ldr	r0, [r7, #20]
 19051 0c94 FFF7FEFF 		bl	strlen
 19052 0c98 0346     		mov	r3, r0
 19053 0c9a 1A46     		mov	r2, r3
 19054 0c9c 7B69     		ldr	r3, [r7, #20]
 19055 0c9e 1344     		add	r3, r3, r2
 19056 0ca0 134A     		ldr	r2, .L740+8
 19057 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 19058 0ca4 9278     		ldrb	r2, [r2, #2]
 19059 0ca6 1980     		strh	r1, [r3]	@ unaligned
 19060 0ca8 9A70     		strb	r2, [r3, #2]
2476:..\src/command_processing.c **** 
2477:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 19061              		.loc 1 2477 0
 19062 0caa D7F88C30 		ldr	r3, [r7, #140]
 19063 0cae 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 19064 0cb2 002B     		cmp	r3, #0
 19065 0cb4 30D0     		beq	.L715
2478:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 19066              		.loc 1 2478 0
 19067 0cb6 7869     		ldr	r0, [r7, #20]
 19068 0cb8 FFF7FEFF 		bl	strlen
 19069 0cbc 0346     		mov	r3, r0
 19070 0cbe 1A46     		mov	r2, r3
 19071 0cc0 7B69     		ldr	r3, [r7, #20]
 19072 0cc2 1344     		add	r3, r3, r2
 19073 0cc4 134A     		ldr	r2, .L740+44
 19074 0cc6 1D46     		mov	r5, r3
 19075 0cc8 1446     		mov	r4, r2
 19076 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19077 0ccc 2860     		str	r0, [r5]	@ unaligned
 19078 0cce 6960     		str	r1, [r5, #4]	@ unaligned
 19079 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 19080 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 19081 0cd4 03CC     		ldmia	r4!, {r0, r1}
 19082 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 19083 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 19084 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 19085 0cdc A278     		ldrb	r2, [r4, #2]
 19086 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 419


 19087 0ce0 1346     		mov	r3, r2
 19088 0ce2 AB76     		strb	r3, [r5, #26]
 19089 0ce4 2CE0     		b	.L716
 19090              	.L741:
 19091 0ce6 00BF     		.align	2
 19092              	.L740:
 19093 0ce8 04140000 		.word	.LC195
 19094 0cec 94100000 		.word	.LC162
 19095 0cf0 A80E0000 		.word	.LC132
 19096 0cf4 881A0000 		.word	.LC261
 19097 0cf8 24140000 		.word	.LC197
 19098 0cfc 981A0000 		.word	.LC262
 19099 0d00 D41A0000 		.word	.LC263
 19100 0d04 F01A0000 		.word	.LC264
 19101 0d08 C4140000 		.word	.LC203
 19102 0d0c B8150000 		.word	.LC211
 19103 0d10 DC150000 		.word	.LC212
 19104 0d14 2C160000 		.word	.LC215
 19105              	.L715:
2479:..\src/command_processing.c **** 			else
2480:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 19106              		.loc 1 2480 0
 19107 0d18 7869     		ldr	r0, [r7, #20]
 19108 0d1a FFF7FEFF 		bl	strlen
 19109 0d1e 0346     		mov	r3, r0
 19110 0d20 1A46     		mov	r2, r3
 19111 0d22 7B69     		ldr	r3, [r7, #20]
 19112 0d24 1344     		add	r3, r3, r2
 19113 0d26 CF4A     		ldr	r2, .L742
 19114 0d28 1D46     		mov	r5, r3
 19115 0d2a 1446     		mov	r4, r2
 19116 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19117 0d2e 2860     		str	r0, [r5]	@ unaligned
 19118 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 19119 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 19120 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 19121 0d36 03CC     		ldmia	r4!, {r0, r1}
 19122 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 19123 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 19124 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 19125 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19126              	.L716:
2481:..\src/command_processing.c **** 
2482:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 19127              		.loc 1 2482 0
 19128 0d40 D7F88C30 		ldr	r3, [r7, #140]
 19129 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 19130 0d48 1A46     		mov	r2, r3
 19131 0d4a 07F11C03 		add	r3, r7, #28
 19132 0d4e C649     		ldr	r1, .L742+4
 19133 0d50 1846     		mov	r0, r3
 19134 0d52 FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c **** 			strcat(info_string, str);
 19135              		.loc 1 2483 0
 19136 0d56 07F11C03 		add	r3, r7, #28
 19137 0d5a 1946     		mov	r1, r3
 19138 0d5c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 420


 19139 0d5e FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19140              		.loc 1 2484 0
 19141 0d62 7869     		ldr	r0, [r7, #20]
 19142 0d64 FFF7FEFF 		bl	strlen
 19143 0d68 0346     		mov	r3, r0
 19144 0d6a 1A46     		mov	r2, r3
 19145 0d6c 7B69     		ldr	r3, [r7, #20]
 19146 0d6e 1344     		add	r3, r3, r2
 19147 0d70 BE4A     		ldr	r2, .L742+8
 19148 0d72 1188     		ldrh	r1, [r2]	@ unaligned
 19149 0d74 9278     		ldrb	r2, [r2, #2]
 19150 0d76 1980     		strh	r1, [r3]	@ unaligned
 19151 0d78 9A70     		strb	r2, [r3, #2]
 19152              	.L714:
 19153              	.LBE20:
2318:..\src/command_processing.c ****             
 19154              		.loc 1 2318 0 discriminator 2
 19155 0d7a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 19156 0d7e 0133     		adds	r3, r3, #1
 19157 0d80 87F89330 		strb	r3, [r7, #147]
 19158              	.L674:
2318:..\src/command_processing.c ****             
 19159              		.loc 1 2318 0 is_stmt 0 discriminator 1
 19160 0d84 D7F88C30 		ldr	r3, [r7, #140]
 19161 0d88 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 19162 0d8c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 19163 0d90 9A42     		cmp	r2, r3
 19164 0d92 7FF6BEA9 		bls	.L717
 19165              	.LBE19:
2485:..\src/command_processing.c **** 		}
2486:..\src/command_processing.c **** 	}
2487:..\src/command_processing.c **** 	 
2488:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 19166              		.loc 1 2488 0 is_stmt 1
 19167 0d96 D7F88C30 		ldr	r3, [r7, #140]
 19168 0d9a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 19169 0d9e 002B     		cmp	r3, #0
 19170 0da0 63D0     		beq	.L718
2489:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 19171              		.loc 1 2489 0
 19172 0da2 D7F88C30 		ldr	r3, [r7, #140]
 19173 0da6 D3F8A422 		ldr	r2, [r3, #676]
 19174 0daa 07F11C03 		add	r3, r7, #28
 19175 0dae B049     		ldr	r1, .L742+12
 19176 0db0 1846     		mov	r0, r3
 19177 0db2 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****         strcat(info_string, str);
 19178              		.loc 1 2490 0
 19179 0db6 07F11C03 		add	r3, r7, #28
 19180 0dba 1946     		mov	r1, r3
 19181 0dbc 7869     		ldr	r0, [r7, #20]
 19182 0dbe FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19183              		.loc 1 2491 0
 19184 0dc2 7869     		ldr	r0, [r7, #20]
 19185 0dc4 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 421


 19186 0dc8 0346     		mov	r3, r0
 19187 0dca 1A46     		mov	r2, r3
 19188 0dcc 7B69     		ldr	r3, [r7, #20]
 19189 0dce 1344     		add	r3, r3, r2
 19190 0dd0 A64A     		ldr	r2, .L742+8
 19191 0dd2 1188     		ldrh	r1, [r2]	@ unaligned
 19192 0dd4 9278     		ldrb	r2, [r2, #2]
 19193 0dd6 1980     		strh	r1, [r3]	@ unaligned
 19194 0dd8 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****         
2493:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 19195              		.loc 1 2493 0
 19196 0dda D7F88C30 		ldr	r3, [r7, #140]
 19197 0dde D3F8A822 		ldr	r2, [r3, #680]
 19198 0de2 07F11C03 		add	r3, r7, #28
 19199 0de6 A349     		ldr	r1, .L742+16
 19200 0de8 1846     		mov	r0, r3
 19201 0dea FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****         strcat(info_string, str);
 19202              		.loc 1 2494 0
 19203 0dee 07F11C03 		add	r3, r7, #28
 19204 0df2 1946     		mov	r1, r3
 19205 0df4 7869     		ldr	r0, [r7, #20]
 19206 0df6 FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19207              		.loc 1 2495 0
 19208 0dfa 7869     		ldr	r0, [r7, #20]
 19209 0dfc FFF7FEFF 		bl	strlen
 19210 0e00 0346     		mov	r3, r0
 19211 0e02 1A46     		mov	r2, r3
 19212 0e04 7B69     		ldr	r3, [r7, #20]
 19213 0e06 1344     		add	r3, r3, r2
 19214 0e08 984A     		ldr	r2, .L742+8
 19215 0e0a 1188     		ldrh	r1, [r2]	@ unaligned
 19216 0e0c 9278     		ldrb	r2, [r2, #2]
 19217 0e0e 1980     		strh	r1, [r3]	@ unaligned
 19218 0e10 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****         
2497:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 19219              		.loc 1 2497 0
 19220 0e12 D7F88C30 		ldr	r3, [r7, #140]
 19221 0e16 D3F8A022 		ldr	r2, [r3, #672]
 19222 0e1a D7F88C30 		ldr	r3, [r7, #140]
 19223 0e1e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19224 0e22 1846     		mov	r0, r3
 19225 0e24 D7F88C10 		ldr	r1, [r7, #140]
 19226 0e28 0346     		mov	r3, r0
 19227 0e2a 5B00     		lsls	r3, r3, #1
 19228 0e2c 0344     		add	r3, r3, r0
 19229 0e2e 1B01     		lsls	r3, r3, #4
 19230 0e30 0B44     		add	r3, r3, r1
 19231 0e32 03F29513 		addw	r3, r3, #405
 19232 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19233 0e38 1A41     		asrs	r2, r2, r3
 19234 0e3a 07F11C03 		add	r3, r7, #28
 19235 0e3e 8E49     		ldr	r1, .L742+20
 19236 0e40 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 422


 19237 0e42 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****         strcat(info_string, str);
 19238              		.loc 1 2498 0
 19239 0e46 07F11C03 		add	r3, r7, #28
 19240 0e4a 1946     		mov	r1, r3
 19241 0e4c 7869     		ldr	r0, [r7, #20]
 19242 0e4e FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 19243              		.loc 1 2499 0
 19244 0e52 7869     		ldr	r0, [r7, #20]
 19245 0e54 FFF7FEFF 		bl	strlen
 19246 0e58 0346     		mov	r3, r0
 19247 0e5a 1A46     		mov	r2, r3
 19248 0e5c 7B69     		ldr	r3, [r7, #20]
 19249 0e5e 1344     		add	r3, r3, r2
 19250 0e60 824A     		ldr	r2, .L742+8
 19251 0e62 1188     		ldrh	r1, [r2]	@ unaligned
 19252 0e64 9278     		ldrb	r2, [r2, #2]
 19253 0e66 1980     		strh	r1, [r3]	@ unaligned
 19254 0e68 9A70     		strb	r2, [r3, #2]
 19255              	.L718:
2500:..\src/command_processing.c ****     }
2501:..\src/command_processing.c **** 	
2502:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 19256              		.loc 1 2502 0
 19257 0e6a D7F88C30 		ldr	r3, [r7, #140]
 19258 0e6e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 19259 0e72 002B     		cmp	r3, #0
 19260 0e74 00F0CC81 		beq	.L733
2503:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 19261              		.loc 1 2503 0
 19262 0e78 804B     		ldr	r3, .L742+24
 19263 0e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19264 0e7c 1A46     		mov	r2, r3
 19265 0e7e 07F11C03 		add	r3, r7, #28
 19266 0e82 7F49     		ldr	r1, .L742+28
 19267 0e84 1846     		mov	r0, r3
 19268 0e86 FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c **** 		strcat(info_string, str);
 19269              		.loc 1 2504 0
 19270 0e8a 07F11C03 		add	r3, r7, #28
 19271 0e8e 1946     		mov	r1, r3
 19272 0e90 7869     		ldr	r0, [r7, #20]
 19273 0e92 FFF7FEFF 		bl	strcat
2505:..\src/command_processing.c **** 		
2506:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19274              		.loc 1 2506 0
 19275 0e96 7869     		ldr	r0, [r7, #20]
 19276 0e98 FFF7FEFF 		bl	strlen
 19277 0e9c 0346     		mov	r3, r0
 19278 0e9e 1A46     		mov	r2, r3
 19279 0ea0 7B69     		ldr	r3, [r7, #20]
 19280 0ea2 1344     		add	r3, r3, r2
 19281 0ea4 714A     		ldr	r2, .L742+8
 19282 0ea6 1188     		ldrh	r1, [r2]	@ unaligned
 19283 0ea8 9278     		ldrb	r2, [r2, #2]
 19284 0eaa 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 423


 19285 0eac 9A70     		strb	r2, [r3, #2]
2507:..\src/command_processing.c **** 		
2508:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 19286              		.loc 1 2508 0
 19287 0eae 7869     		ldr	r0, [r7, #20]
 19288 0eb0 FFF7FEFF 		bl	strlen
 19289 0eb4 0346     		mov	r3, r0
 19290 0eb6 1A46     		mov	r2, r3
 19291 0eb8 7B69     		ldr	r3, [r7, #20]
 19292 0eba 1344     		add	r3, r3, r2
 19293 0ebc 714A     		ldr	r2, .L742+32
 19294 0ebe 1D46     		mov	r5, r3
 19295 0ec0 1446     		mov	r4, r2
 19296 0ec2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19297 0ec4 2860     		str	r0, [r5]	@ unaligned
 19298 0ec6 6960     		str	r1, [r5, #4]	@ unaligned
 19299 0ec8 AA60     		str	r2, [r5, #8]	@ unaligned
 19300 0eca EB60     		str	r3, [r5, #12]	@ unaligned
 19301 0ecc 2068     		ldr	r0, [r4]	@ unaligned
 19302 0ece 2861     		str	r0, [r5, #16]	@ unaligned
 19303 0ed0 2379     		ldrb	r3, [r4, #4]
 19304 0ed2 2B75     		strb	r3, [r5, #20]
2509:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 19305              		.loc 1 2509 0
 19306 0ed4 0023     		movs	r3, #0
 19307 0ed6 C7F89430 		str	r3, [r7, #148]
 19308 0eda 85E1     		b	.L720
 19309              	.L731:
2510:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19310              		.loc 1 2510 0
 19311 0edc 6A4A     		ldr	r2, .L742+36
 19312 0ede D7F89430 		ldr	r3, [r7, #148]
 19313 0ee2 1344     		add	r3, r3, r2
 19314 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19315 0ee6 07F11C00 		add	r0, r7, #28
 19316 0eea D7F89420 		ldr	r2, [r7, #148]
 19317 0eee 6749     		ldr	r1, .L742+40
 19318 0ef0 FFF7FEFF 		bl	sprintf
2511:..\src/command_processing.c **** 			strcat(info_string, str);
 19319              		.loc 1 2511 0
 19320 0ef4 07F11C03 		add	r3, r7, #28
 19321 0ef8 1946     		mov	r1, r3
 19322 0efa 7869     		ldr	r0, [r7, #20]
 19323 0efc FFF7FEFF 		bl	strcat
2512:..\src/command_processing.c **** 			
2513:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 19324              		.loc 1 2513 0
 19325 0f00 07F11C03 		add	r3, r7, #28
 19326 0f04 624A     		ldr	r2, .L742+44
 19327 0f06 1C46     		mov	r4, r3
 19328 0f08 1546     		mov	r5, r2
 19329 0f0a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19330 0f0c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 19331 0f0e 2B68     		ldr	r3, [r5]
 19332 0f10 2380     		strh	r3, [r4]	@ movhi
2514:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 19333              		.loc 1 2514 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 424


 19334 0f12 5D4A     		ldr	r2, .L742+36
 19335 0f14 D7F89430 		ldr	r3, [r7, #148]
 19336 0f18 1344     		add	r3, r3, r2
 19337 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19338 0f1c 1946     		mov	r1, r3
 19339 0f1e D7F88C20 		ldr	r2, [r7, #140]
 19340 0f22 0B46     		mov	r3, r1
 19341 0f24 9B00     		lsls	r3, r3, #2
 19342 0f26 0B44     		add	r3, r3, r1
 19343 0f28 1344     		add	r3, r3, r2
 19344 0f2a 03F20223 		addw	r3, r3, #514
 19345 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19346 0f30 002B     		cmp	r3, #0
 19347 0f32 0FD0     		beq	.L721
2515:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19348              		.loc 1 2515 0
 19349 0f34 07F11C03 		add	r3, r7, #28
 19350 0f38 1846     		mov	r0, r3
 19351 0f3a FFF7FEFF 		bl	strlen
 19352 0f3e 0346     		mov	r3, r0
 19353 0f40 1A46     		mov	r2, r3
 19354 0f42 07F11C03 		add	r3, r7, #28
 19355 0f46 1344     		add	r3, r3, r2
 19356 0f48 524A     		ldr	r2, .L742+48
 19357 0f4a 1068     		ldr	r0, [r2]	@ unaligned
 19358 0f4c 1860     		str	r0, [r3]	@ unaligned
 19359 0f4e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19360 0f50 9A80     		strh	r2, [r3, #4]	@ unaligned
 19361 0f52 0EE0     		b	.L722
 19362              	.L721:
2516:..\src/command_processing.c **** 			else
2517:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19363              		.loc 1 2517 0
 19364 0f54 07F11C03 		add	r3, r7, #28
 19365 0f58 1846     		mov	r0, r3
 19366 0f5a FFF7FEFF 		bl	strlen
 19367 0f5e 0346     		mov	r3, r0
 19368 0f60 1A46     		mov	r2, r3
 19369 0f62 07F11C03 		add	r3, r7, #28
 19370 0f66 1344     		add	r3, r3, r2
 19371 0f68 4B4A     		ldr	r2, .L742+52
 19372 0f6a 1068     		ldr	r0, [r2]	@ unaligned
 19373 0f6c 1860     		str	r0, [r3]	@ unaligned
 19374 0f6e 1279     		ldrb	r2, [r2, #4]
 19375 0f70 1A71     		strb	r2, [r3, #4]
 19376              	.L722:
2518:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 19377              		.loc 1 2518 0
 19378 0f72 07F11C03 		add	r3, r7, #28
 19379 0f76 1846     		mov	r0, r3
 19380 0f78 FFF7FEFF 		bl	strlen
 19381 0f7c 0346     		mov	r3, r0
 19382 0f7e 1A46     		mov	r2, r3
 19383 0f80 07F11C03 		add	r3, r7, #28
 19384 0f84 1344     		add	r3, r3, r2
 19385 0f86 454A     		ldr	r2, .L742+56
 19386 0f88 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 425


 19387 0f8a 1346     		mov	r3, r2
 19388 0f8c 07CB     		ldmia	r3!, {r0, r1, r2}
 19389 0f8e 2060     		str	r0, [r4]	@ unaligned
 19390 0f90 6160     		str	r1, [r4, #4]	@ unaligned
 19391 0f92 A260     		str	r2, [r4, #8]	@ unaligned
 19392 0f94 1B88     		ldrh	r3, [r3]	@ unaligned
 19393 0f96 A381     		strh	r3, [r4, #12]	@ unaligned
2519:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 19394              		.loc 1 2519 0
 19395 0f98 3B4A     		ldr	r2, .L742+36
 19396 0f9a D7F89430 		ldr	r3, [r7, #148]
 19397 0f9e 1344     		add	r3, r3, r2
 19398 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19399 0fa2 1946     		mov	r1, r3
 19400 0fa4 D7F88C20 		ldr	r2, [r7, #140]
 19401 0fa8 0B46     		mov	r3, r1
 19402 0faa 9B00     		lsls	r3, r3, #2
 19403 0fac 0B44     		add	r3, r3, r1
 19404 0fae 1344     		add	r3, r3, r2
 19405 0fb0 03F20323 		addw	r3, r3, #515
 19406 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19407 0fb6 002B     		cmp	r3, #0
 19408 0fb8 0FD0     		beq	.L723
2520:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19409              		.loc 1 2520 0
 19410 0fba 07F11C03 		add	r3, r7, #28
 19411 0fbe 1846     		mov	r0, r3
 19412 0fc0 FFF7FEFF 		bl	strlen
 19413 0fc4 0346     		mov	r3, r0
 19414 0fc6 1A46     		mov	r2, r3
 19415 0fc8 07F11C03 		add	r3, r7, #28
 19416 0fcc 1344     		add	r3, r3, r2
 19417 0fce 314A     		ldr	r2, .L742+48
 19418 0fd0 1068     		ldr	r0, [r2]	@ unaligned
 19419 0fd2 1860     		str	r0, [r3]	@ unaligned
 19420 0fd4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19421 0fd6 9A80     		strh	r2, [r3, #4]	@ unaligned
 19422 0fd8 0EE0     		b	.L724
 19423              	.L723:
2521:..\src/command_processing.c **** 			else
2522:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19424              		.loc 1 2522 0
 19425 0fda 07F11C03 		add	r3, r7, #28
 19426 0fde 1846     		mov	r0, r3
 19427 0fe0 FFF7FEFF 		bl	strlen
 19428 0fe4 0346     		mov	r3, r0
 19429 0fe6 1A46     		mov	r2, r3
 19430 0fe8 07F11C03 		add	r3, r7, #28
 19431 0fec 1344     		add	r3, r3, r2
 19432 0fee 2A4A     		ldr	r2, .L742+52
 19433 0ff0 1068     		ldr	r0, [r2]	@ unaligned
 19434 0ff2 1860     		str	r0, [r3]	@ unaligned
 19435 0ff4 1279     		ldrb	r2, [r2, #4]
 19436 0ff6 1A71     		strb	r2, [r3, #4]
 19437              	.L724:
2523:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 19438              		.loc 1 2523 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 426


 19439 0ff8 07F11C03 		add	r3, r7, #28
 19440 0ffc 1846     		mov	r0, r3
 19441 0ffe FFF7FEFF 		bl	strlen
 19442 1002 0346     		mov	r3, r0
 19443 1004 1A46     		mov	r2, r3
 19444 1006 07F11C03 		add	r3, r7, #28
 19445 100a 1344     		add	r3, r3, r2
 19446 100c 244A     		ldr	r2, .L742+60
 19447 100e 1D46     		mov	r5, r3
 19448 1010 1446     		mov	r4, r2
 19449 1012 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19450 1014 2860     		str	r0, [r5]	@ unaligned
 19451 1016 6960     		str	r1, [r5, #4]	@ unaligned
 19452 1018 AA60     		str	r2, [r5, #8]	@ unaligned
 19453 101a EB60     		str	r3, [r5, #12]	@ unaligned
 19454 101c 2378     		ldrb	r3, [r4]
 19455 101e 2B74     		strb	r3, [r5, #16]
2524:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19456              		.loc 1 2524 0
 19457 1020 194A     		ldr	r2, .L742+36
 19458 1022 D7F89430 		ldr	r3, [r7, #148]
 19459 1026 1344     		add	r3, r3, r2
 19460 1028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19461 102a 1946     		mov	r1, r3
 19462 102c D7F88C20 		ldr	r2, [r7, #140]
 19463 1030 0B46     		mov	r3, r1
 19464 1032 9B00     		lsls	r3, r3, #2
 19465 1034 0B44     		add	r3, r3, r1
 19466 1036 1344     		add	r3, r3, r2
 19467 1038 03F50173 		add	r3, r3, #516
 19468 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19469 103e 002B     		cmp	r3, #0
 19470 1040 30D0     		beq	.L725
2525:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19471              		.loc 1 2525 0
 19472 1042 07F11C03 		add	r3, r7, #28
 19473 1046 1846     		mov	r0, r3
 19474 1048 FFF7FEFF 		bl	strlen
 19475 104c 0346     		mov	r3, r0
 19476 104e 1A46     		mov	r2, r3
 19477 1050 07F11C03 		add	r3, r7, #28
 19478 1054 1344     		add	r3, r3, r2
 19479 1056 0F4A     		ldr	r2, .L742+48
 19480 1058 1068     		ldr	r0, [r2]	@ unaligned
 19481 105a 1860     		str	r0, [r3]	@ unaligned
 19482 105c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19483 105e 9A80     		strh	r2, [r3, #4]	@ unaligned
 19484 1060 2FE0     		b	.L726
 19485              	.L743:
 19486 1062 00BF     		.align	2
 19487              	.L742:
 19488 1064 48160000 		.word	.LC216
 19489 1068 64160000 		.word	.LC217
 19490 106c A80E0000 		.word	.LC132
 19491 1070 BC160000 		.word	.LC221
 19492 1074 D8160000 		.word	.LC222
 19493 1078 00170000 		.word	.LC223
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 427


 19494 107c 00000000 		.word	N_IMU_Connected
 19495 1080 14170000 		.word	.LC224
 19496 1084 28170000 		.word	.LC225
 19497 1088 00000000 		.word	IMU_connected
 19498 108c 40170000 		.word	.LC226
 19499 1090 54170000 		.word	.LC227
 19500 1094 20100000 		.word	.LC153
 19501 1098 28100000 		.word	.LC154
 19502 109c 68170000 		.word	.LC228
 19503 10a0 78170000 		.word	.LC229
 19504              	.L725:
2526:..\src/command_processing.c **** 			else
2527:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19505              		.loc 1 2527 0
 19506 10a4 07F11C03 		add	r3, r7, #28
 19507 10a8 1846     		mov	r0, r3
 19508 10aa FFF7FEFF 		bl	strlen
 19509 10ae 0346     		mov	r3, r0
 19510 10b0 1A46     		mov	r2, r3
 19511 10b2 07F11C03 		add	r3, r7, #28
 19512 10b6 1344     		add	r3, r3, r2
 19513 10b8 584A     		ldr	r2, .L744
 19514 10ba 1068     		ldr	r0, [r2]	@ unaligned
 19515 10bc 1860     		str	r0, [r3]	@ unaligned
 19516 10be 1279     		ldrb	r2, [r2, #4]
 19517 10c0 1A71     		strb	r2, [r3, #4]
 19518              	.L726:
2528:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19519              		.loc 1 2528 0
 19520 10c2 07F11C03 		add	r3, r7, #28
 19521 10c6 1846     		mov	r0, r3
 19522 10c8 FFF7FEFF 		bl	strlen
 19523 10cc 0346     		mov	r3, r0
 19524 10ce 1A46     		mov	r2, r3
 19525 10d0 07F11C03 		add	r3, r7, #28
 19526 10d4 1344     		add	r3, r3, r2
 19527 10d6 524A     		ldr	r2, .L744+4
 19528 10d8 1C46     		mov	r4, r3
 19529 10da 1346     		mov	r3, r2
 19530 10dc 07CB     		ldmia	r3!, {r0, r1, r2}
 19531 10de 2060     		str	r0, [r4]	@ unaligned
 19532 10e0 6160     		str	r1, [r4, #4]	@ unaligned
 19533 10e2 A260     		str	r2, [r4, #8]	@ unaligned
 19534 10e4 1B88     		ldrh	r3, [r3]	@ unaligned
 19535 10e6 A381     		strh	r3, [r4, #12]	@ unaligned
2529:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19536              		.loc 1 2529 0
 19537 10e8 4E4A     		ldr	r2, .L744+8
 19538 10ea D7F89430 		ldr	r3, [r7, #148]
 19539 10ee 1344     		add	r3, r3, r2
 19540 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19541 10f2 1946     		mov	r1, r3
 19542 10f4 D7F88C20 		ldr	r2, [r7, #140]
 19543 10f8 0B46     		mov	r3, r1
 19544 10fa 9B00     		lsls	r3, r3, #2
 19545 10fc 0B44     		add	r3, r3, r1
 19546 10fe 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 428


 19547 1100 03F20523 		addw	r3, r3, #517
 19548 1104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19549 1106 002B     		cmp	r3, #0
 19550 1108 0FD0     		beq	.L727
2530:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19551              		.loc 1 2530 0
 19552 110a 07F11C03 		add	r3, r7, #28
 19553 110e 1846     		mov	r0, r3
 19554 1110 FFF7FEFF 		bl	strlen
 19555 1114 0346     		mov	r3, r0
 19556 1116 1A46     		mov	r2, r3
 19557 1118 07F11C03 		add	r3, r7, #28
 19558 111c 1344     		add	r3, r3, r2
 19559 111e 424A     		ldr	r2, .L744+12
 19560 1120 1068     		ldr	r0, [r2]	@ unaligned
 19561 1122 1860     		str	r0, [r3]	@ unaligned
 19562 1124 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19563 1126 9A80     		strh	r2, [r3, #4]	@ unaligned
 19564 1128 0EE0     		b	.L728
 19565              	.L727:
2531:..\src/command_processing.c **** 			else
2532:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19566              		.loc 1 2532 0
 19567 112a 07F11C03 		add	r3, r7, #28
 19568 112e 1846     		mov	r0, r3
 19569 1130 FFF7FEFF 		bl	strlen
 19570 1134 0346     		mov	r3, r0
 19571 1136 1A46     		mov	r2, r3
 19572 1138 07F11C03 		add	r3, r7, #28
 19573 113c 1344     		add	r3, r3, r2
 19574 113e 374A     		ldr	r2, .L744
 19575 1140 1068     		ldr	r0, [r2]	@ unaligned
 19576 1142 1860     		str	r0, [r3]	@ unaligned
 19577 1144 1279     		ldrb	r2, [r2, #4]
 19578 1146 1A71     		strb	r2, [r3, #4]
 19579              	.L728:
2533:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19580              		.loc 1 2533 0
 19581 1148 07F11C03 		add	r3, r7, #28
 19582 114c 1846     		mov	r0, r3
 19583 114e FFF7FEFF 		bl	strlen
 19584 1152 0346     		mov	r3, r0
 19585 1154 1A46     		mov	r2, r3
 19586 1156 07F11C03 		add	r3, r7, #28
 19587 115a 1344     		add	r3, r3, r2
 19588 115c 334A     		ldr	r2, .L744+16
 19589 115e 1C46     		mov	r4, r3
 19590 1160 1346     		mov	r3, r2
 19591 1162 07CB     		ldmia	r3!, {r0, r1, r2}
 19592 1164 2060     		str	r0, [r4]	@ unaligned
 19593 1166 6160     		str	r1, [r4, #4]	@ unaligned
 19594 1168 A260     		str	r2, [r4, #8]	@ unaligned
 19595 116a 1A88     		ldrh	r2, [r3]	@ unaligned
 19596 116c 9B78     		ldrb	r3, [r3, #2]
 19597 116e A281     		strh	r2, [r4, #12]	@ unaligned
 19598 1170 A373     		strb	r3, [r4, #14]
2534:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 429


 19599              		.loc 1 2534 0
 19600 1172 2C4A     		ldr	r2, .L744+8
 19601 1174 D7F89430 		ldr	r3, [r7, #148]
 19602 1178 1344     		add	r3, r3, r2
 19603 117a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19604 117c 1946     		mov	r1, r3
 19605 117e D7F88C20 		ldr	r2, [r7, #140]
 19606 1182 0B46     		mov	r3, r1
 19607 1184 9B00     		lsls	r3, r3, #2
 19608 1186 0B44     		add	r3, r3, r1
 19609 1188 1344     		add	r3, r3, r2
 19610 118a 03F20623 		addw	r3, r3, #518
 19611 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19612 1190 002B     		cmp	r3, #0
 19613 1192 0FD0     		beq	.L729
2535:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19614              		.loc 1 2535 0
 19615 1194 07F11C03 		add	r3, r7, #28
 19616 1198 1846     		mov	r0, r3
 19617 119a FFF7FEFF 		bl	strlen
 19618 119e 0346     		mov	r3, r0
 19619 11a0 1A46     		mov	r2, r3
 19620 11a2 07F11C03 		add	r3, r7, #28
 19621 11a6 1344     		add	r3, r3, r2
 19622 11a8 1F4A     		ldr	r2, .L744+12
 19623 11aa 1068     		ldr	r0, [r2]	@ unaligned
 19624 11ac 1860     		str	r0, [r3]	@ unaligned
 19625 11ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19626 11b0 9A80     		strh	r2, [r3, #4]	@ unaligned
 19627 11b2 0EE0     		b	.L730
 19628              	.L729:
2536:..\src/command_processing.c **** 			else
2537:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19629              		.loc 1 2537 0
 19630 11b4 07F11C03 		add	r3, r7, #28
 19631 11b8 1846     		mov	r0, r3
 19632 11ba FFF7FEFF 		bl	strlen
 19633 11be 0346     		mov	r3, r0
 19634 11c0 1A46     		mov	r2, r3
 19635 11c2 07F11C03 		add	r3, r7, #28
 19636 11c6 1344     		add	r3, r3, r2
 19637 11c8 144A     		ldr	r2, .L744
 19638 11ca 1068     		ldr	r0, [r2]	@ unaligned
 19639 11cc 1860     		str	r0, [r3]	@ unaligned
 19640 11ce 1279     		ldrb	r2, [r2, #4]
 19641 11d0 1A71     		strb	r2, [r3, #4]
 19642              	.L730:
2538:..\src/command_processing.c **** 				 
2539:..\src/command_processing.c **** 			strcat(info_string, str);
 19643              		.loc 1 2539 0 discriminator 2
 19644 11d2 07F11C03 		add	r3, r7, #28
 19645 11d6 1946     		mov	r1, r3
 19646 11d8 7869     		ldr	r0, [r7, #20]
 19647 11da FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19648              		.loc 1 2509 0 discriminator 2
 19649 11de D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 430


 19650 11e2 0133     		adds	r3, r3, #1
 19651 11e4 C7F89430 		str	r3, [r7, #148]
 19652              	.L720:
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19653              		.loc 1 2509 0 is_stmt 0 discriminator 1
 19654 11e8 114B     		ldr	r3, .L744+20
 19655 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19656 11ec 1A46     		mov	r2, r3
 19657 11ee D7F89430 		ldr	r3, [r7, #148]
 19658 11f2 9A42     		cmp	r2, r3
 19659 11f4 3FF772AE 		bgt	.L731
2540:..\src/command_processing.c **** 		}       
2541:..\src/command_processing.c **** 		
2542:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19660              		.loc 1 2542 0 is_stmt 1
 19661 11f8 7869     		ldr	r0, [r7, #20]
 19662 11fa FFF7FEFF 		bl	strlen
 19663 11fe 0346     		mov	r3, r0
 19664 1200 1A46     		mov	r2, r3
 19665 1202 7B69     		ldr	r3, [r7, #20]
 19666 1204 1344     		add	r3, r3, r2
 19667 1206 0B4A     		ldr	r2, .L744+24
 19668 1208 1188     		ldrh	r1, [r2]	@ unaligned
 19669 120a 9278     		ldrb	r2, [r2, #2]
 19670 120c 1980     		strh	r1, [r3]	@ unaligned
 19671 120e 9A70     		strb	r2, [r3, #2]
 19672              	.L733:
2543:..\src/command_processing.c **** 	}
2544:..\src/command_processing.c **** }
 19673              		.loc 1 2544 0
 19674 1210 00BF     		nop
 19675 1212 9C37     		adds	r7, r7, #156
 19676              		.cfi_def_cfa_offset 36
 19677 1214 BD46     		mov	sp, r7
 19678              		.cfi_def_cfa_register 13
 19679              		@ sp needed
 19680 1216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19681              	.L745:
 19682 121a 00BF     		.align	2
 19683              	.L744:
 19684 121c 28100000 		.word	.LC154
 19685 1220 8C170000 		.word	.LC230
 19686 1224 00000000 		.word	IMU_connected
 19687 1228 20100000 		.word	.LC153
 19688 122c 9C170000 		.word	.LC231
 19689 1230 00000000 		.word	N_IMU_Connected
 19690 1234 A80E0000 		.word	.LC132
 19691              		.cfi_endproc
 19692              	.LFE74:
 19693              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19694              		.section	.rodata
 19695 1b1a 0000     		.align	2
 19696              	.LC265:
 19697 1b1c 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19697      2C4D696E 
 19697      2C536563 
 19697      2C00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 431


 19698 1b2a 0000     		.align	2
 19699              	.LC266:
 19700 1b2c 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19700      25645F50 
 19700      6F732C00 
 19701              		.align	2
 19702              	.LC267:
 19703 1b38 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19703      25645F43 
 19703      7572722C 
 19703      00
 19704 1b45 000000   		.align	2
 19705              	.LC268:
 19706 1b48 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19706      315F6163 
 19706      742C454D 
 19706      475F325F 
 19706      6163742C 
 19707 1b7b 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19707      5F74696D 
 19707      652C546F 
 19707      74616C5F 
 19707      72657374 
 19708              		.section	.text.prepare_SD_legend,"ax",%progbits
 19709              		.align	2
 19710              		.global	prepare_SD_legend
 19711              		.thumb
 19712              		.thumb_func
 19713              		.type	prepare_SD_legend, %function
 19714              	prepare_SD_legend:
 19715              	.LFB75:
2545:..\src/command_processing.c **** 
2546:..\src/command_processing.c **** 
2547:..\src/command_processing.c **** //==============================================================================
2548:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2549:..\src/command_processing.c **** //==============================================================================
2550:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2551:..\src/command_processing.c **** {
 19716              		.loc 1 2551 0
 19717              		.cfi_startproc
 19718              		@ args = 0, pretend = 0, frame = 112
 19719              		@ frame_needed = 1, uses_anonymous_args = 0
 19720 0000 90B5     		push	{r4, r7, lr}
 19721              		.cfi_def_cfa_offset 12
 19722              		.cfi_offset 4, -12
 19723              		.cfi_offset 7, -8
 19724              		.cfi_offset 14, -4
 19725 0002 9DB0     		sub	sp, sp, #116
 19726              		.cfi_def_cfa_offset 128
 19727 0004 00AF     		add	r7, sp, #0
 19728              		.cfi_def_cfa_register 7
 19729 0006 7860     		str	r0, [r7, #4]
2552:..\src/command_processing.c ****     char str[100];  
2553:..\src/command_processing.c ****     int i;
2554:..\src/command_processing.c ****         
2555:..\src/command_processing.c ****     // Legend
2556:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 432


 19730              		.loc 1 2556 0
 19731 0008 7B68     		ldr	r3, [r7, #4]
 19732 000a 2A4A     		ldr	r2, .L751
 19733 000c 1C46     		mov	r4, r3
 19734 000e 1346     		mov	r3, r2
 19735 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19736 0012 2060     		str	r0, [r4]	@ unaligned
 19737 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19738 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19739 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19740 001a A381     		strh	r3, [r4, #12]	@ unaligned
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19741              		.loc 1 2557 0
 19742 001c 0123     		movs	r3, #1
 19743 001e FB66     		str	r3, [r7, #108]
 19744 0020 0FE0     		b	.L747
 19745              	.L748:
2558:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19746              		.loc 1 2558 0 discriminator 3
 19747 0022 07F10803 		add	r3, r7, #8
 19748 0026 FA6E     		ldr	r2, [r7, #108]
 19749 0028 2349     		ldr	r1, .L751+4
 19750 002a 1846     		mov	r0, r3
 19751 002c FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 19752              		.loc 1 2559 0 discriminator 3
 19753 0030 07F10803 		add	r3, r7, #8
 19754 0034 1946     		mov	r1, r3
 19755 0036 7868     		ldr	r0, [r7, #4]
 19756 0038 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19757              		.loc 1 2557 0 discriminator 3
 19758 003c FB6E     		ldr	r3, [r7, #108]
 19759 003e 0133     		adds	r3, r3, #1
 19760 0040 FB66     		str	r3, [r7, #108]
 19761              	.L747:
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19762              		.loc 1 2557 0 is_stmt 0 discriminator 1
 19763 0042 FB6E     		ldr	r3, [r7, #108]
 19764 0044 0A2B     		cmp	r3, #10
 19765 0046 ECDD     		ble	.L748
2560:..\src/command_processing.c ****     }
2561:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19766              		.loc 1 2561 0 is_stmt 1
 19767 0048 0123     		movs	r3, #1
 19768 004a FB66     		str	r3, [r7, #108]
 19769 004c 0FE0     		b	.L749
 19770              	.L750:
2562:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19771              		.loc 1 2562 0 discriminator 3
 19772 004e 07F10803 		add	r3, r7, #8
 19773 0052 FA6E     		ldr	r2, [r7, #108]
 19774 0054 1949     		ldr	r1, .L751+8
 19775 0056 1846     		mov	r0, r3
 19776 0058 FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c ****         strcat(info_string, str);
 19777              		.loc 1 2563 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 433


 19778 005c 07F10803 		add	r3, r7, #8
 19779 0060 1946     		mov	r1, r3
 19780 0062 7868     		ldr	r0, [r7, #4]
 19781 0064 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19782              		.loc 1 2561 0 discriminator 3
 19783 0068 FB6E     		ldr	r3, [r7, #108]
 19784 006a 0133     		adds	r3, r3, #1
 19785 006c FB66     		str	r3, [r7, #108]
 19786              	.L749:
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19787              		.loc 1 2561 0 is_stmt 0 discriminator 1
 19788 006e FB6E     		ldr	r3, [r7, #108]
 19789 0070 042B     		cmp	r3, #4
 19790 0072 ECDD     		ble	.L750
2564:..\src/command_processing.c ****     }
2565:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19791              		.loc 1 2565 0 is_stmt 1
 19792 0074 07F10803 		add	r3, r7, #8
 19793 0078 114A     		ldr	r2, .L751+12
 19794 007a 1846     		mov	r0, r3
 19795 007c 1146     		mov	r1, r2
 19796 007e 4D23     		movs	r3, #77
 19797 0080 1A46     		mov	r2, r3
 19798 0082 FFF7FEFF 		bl	memcpy
2566:..\src/command_processing.c ****     strcat(info_string, str);
 19799              		.loc 1 2566 0
 19800 0086 07F10803 		add	r3, r7, #8
 19801 008a 1946     		mov	r1, r3
 19802 008c 7868     		ldr	r0, [r7, #4]
 19803 008e FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19804              		.loc 1 2567 0
 19805 0092 7868     		ldr	r0, [r7, #4]
 19806 0094 FFF7FEFF 		bl	strlen
 19807 0098 0346     		mov	r3, r0
 19808 009a 1A46     		mov	r2, r3
 19809 009c 7B68     		ldr	r3, [r7, #4]
 19810 009e 1344     		add	r3, r3, r2
 19811 00a0 084A     		ldr	r2, .L751+16
 19812 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19813 00a4 9278     		ldrb	r2, [r2, #2]
 19814 00a6 1980     		strh	r1, [r3]	@ unaligned
 19815 00a8 9A70     		strb	r2, [r3, #2]
2568:..\src/command_processing.c **** }
 19816              		.loc 1 2568 0
 19817 00aa 00BF     		nop
 19818 00ac 7437     		adds	r7, r7, #116
 19819              		.cfi_def_cfa_offset 12
 19820 00ae BD46     		mov	sp, r7
 19821              		.cfi_def_cfa_register 13
 19822              		@ sp needed
 19823 00b0 90BD     		pop	{r4, r7, pc}
 19824              	.L752:
 19825 00b2 00BF     		.align	2
 19826              	.L751:
 19827 00b4 1C1B0000 		.word	.LC265
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 434


 19828 00b8 2C1B0000 		.word	.LC266
 19829 00bc 381B0000 		.word	.LC267
 19830 00c0 481B0000 		.word	.LC268
 19831 00c4 A80E0000 		.word	.LC132
 19832              		.cfi_endproc
 19833              	.LFE75:
 19834              		.size	prepare_SD_legend, .-prepare_SD_legend
 19835              		.section	.rodata
 19836 1b95 000000   		.align	2
 19837              	.LC269:
 19838 1b98 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19838      2C253032 
 19838      642C2530 
 19838      32642C00 
 19839              		.align	2
 19840              	.LC270:
 19841 1ba8 256C752C 		.ascii	"%lu,\000"
 19841      00
 19842 1bad 000000   		.align	2
 19843              	.LC271:
 19844 1bb0 256C752C 		.ascii	"%lu,%lu,\000"
 19844      256C752C 
 19844      00
 19845 1bb9 000000   		.align	2
 19846              	.LC272:
 19847 1bbc 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19847      256C752C 
 19847      256C752C 
 19847      256C7500 
 19848              		.section	.text.prepare_SD_info,"ax",%progbits
 19849              		.align	2
 19850              		.global	prepare_SD_info
 19851              		.thumb
 19852              		.thumb_func
 19853              		.type	prepare_SD_info, %function
 19854              	prepare_SD_info:
 19855              	.LFB76:
2569:..\src/command_processing.c **** 
2570:..\src/command_processing.c **** //==============================================================================
2571:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2572:..\src/command_processing.c **** //==============================================================================
2573:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2574:..\src/command_processing.c **** {
 19856              		.loc 1 2574 0
 19857              		.cfi_startproc
 19858              		@ args = 0, pretend = 0, frame = 112
 19859              		@ frame_needed = 1, uses_anonymous_args = 0
 19860 0000 90B5     		push	{r4, r7, lr}
 19861              		.cfi_def_cfa_offset 12
 19862              		.cfi_offset 4, -12
 19863              		.cfi_offset 7, -8
 19864              		.cfi_offset 14, -4
 19865 0002 9FB0     		sub	sp, sp, #124
 19866              		.cfi_def_cfa_offset 136
 19867 0004 02AF     		add	r7, sp, #8
 19868              		.cfi_def_cfa 7, 128
 19869 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 435


2575:..\src/command_processing.c ****     char str[100];  
2576:..\src/command_processing.c ****     int i;
2577:..\src/command_processing.c ****             
2578:..\src/command_processing.c ****     strcpy(info_string, "");
 19870              		.loc 1 2578 0
 19871 0008 7B68     		ldr	r3, [r7, #4]
 19872 000a 0022     		movs	r2, #0
 19873 000c 1A70     		strb	r2, [r3]
2579:..\src/command_processing.c ****     
2580:..\src/command_processing.c ****     // Time
2581:..\src/command_processing.c ****     strcat(info_string, "");
2582:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19874              		.loc 1 2582 0
 19875 000e 424B     		ldr	r3, .L758
 19876 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19877 0014 1A46     		mov	r2, r3
 19878 0016 404B     		ldr	r3, .L758
 19879 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19880 001c 1946     		mov	r1, r3
 19881 001e 3E4B     		ldr	r3, .L758
 19882 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19883 0024 07F10800 		add	r0, r7, #8
 19884 0028 0093     		str	r3, [sp]
 19885 002a 0B46     		mov	r3, r1
 19886 002c 3B49     		ldr	r1, .L758+4
 19887 002e FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****     strcat(info_string, str);
 19888              		.loc 1 2583 0
 19889 0032 07F10803 		add	r3, r7, #8
 19890 0036 1946     		mov	r1, r3
 19891 0038 7868     		ldr	r0, [r7, #4]
 19892 003a FFF7FEFF 		bl	strcat
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****     // Pos_Bin
2586:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19893              		.loc 1 2586 0
 19894 003e 0123     		movs	r3, #1
 19895 0040 FB66     		str	r3, [r7, #108]
 19896 0042 14E0     		b	.L754
 19897              	.L755:
2587:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19898              		.loc 1 2587 0 discriminator 3
 19899 0044 FB6E     		ldr	r3, [r7, #108]
 19900 0046 013B     		subs	r3, r3, #1
 19901 0048 334A     		ldr	r2, .L758
 19902 004a 0633     		adds	r3, r3, #6
 19903 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19904 0050 07F10803 		add	r3, r7, #8
 19905 0054 3249     		ldr	r1, .L758+8
 19906 0056 1846     		mov	r0, r3
 19907 0058 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****         strcat(info_string, str);
 19908              		.loc 1 2588 0 discriminator 3
 19909 005c 07F10803 		add	r3, r7, #8
 19910 0060 1946     		mov	r1, r3
 19911 0062 7868     		ldr	r0, [r7, #4]
 19912 0064 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 436


2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19913              		.loc 1 2586 0 discriminator 3
 19914 0068 FB6E     		ldr	r3, [r7, #108]
 19915 006a 0133     		adds	r3, r3, #1
 19916 006c FB66     		str	r3, [r7, #108]
 19917              	.L754:
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19918              		.loc 1 2586 0 is_stmt 0 discriminator 1
 19919 006e FB6E     		ldr	r3, [r7, #108]
 19920 0070 0A2B     		cmp	r3, #10
 19921 0072 E7DD     		ble	.L755
2589:..\src/command_processing.c ****     }
2590:..\src/command_processing.c ****     
2591:..\src/command_processing.c ****     // Curr_Bin
2592:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19922              		.loc 1 2592 0 is_stmt 1
 19923 0074 0123     		movs	r3, #1
 19924 0076 FB66     		str	r3, [r7, #108]
 19925 0078 14E0     		b	.L756
 19926              	.L757:
2593:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19927              		.loc 1 2593 0 discriminator 3
 19928 007a FB6E     		ldr	r3, [r7, #108]
 19929 007c 013B     		subs	r3, r3, #1
 19930 007e 264A     		ldr	r2, .L758
 19931 0080 1033     		adds	r3, r3, #16
 19932 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19933 0086 07F10803 		add	r3, r7, #8
 19934 008a 2549     		ldr	r1, .L758+8
 19935 008c 1846     		mov	r0, r3
 19936 008e FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c ****         strcat(info_string, str);
 19937              		.loc 1 2594 0 discriminator 3
 19938 0092 07F10803 		add	r3, r7, #8
 19939 0096 1946     		mov	r1, r3
 19940 0098 7868     		ldr	r0, [r7, #4]
 19941 009a FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19942              		.loc 1 2592 0 discriminator 3
 19943 009e FB6E     		ldr	r3, [r7, #108]
 19944 00a0 0133     		adds	r3, r3, #1
 19945 00a2 FB66     		str	r3, [r7, #108]
 19946              	.L756:
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19947              		.loc 1 2592 0 is_stmt 0 discriminator 1
 19948 00a4 FB6E     		ldr	r3, [r7, #108]
 19949 00a6 042B     		cmp	r3, #4
 19950 00a8 E7DD     		ble	.L757
2595:..\src/command_processing.c ****     }
2596:..\src/command_processing.c ****        
2597:..\src/command_processing.c ****     // EMG_1, EMG_2
2598:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 19951              		.loc 1 2598 0 is_stmt 1
 19952 00aa 1B4B     		ldr	r3, .L758
 19953 00ac 1A69     		ldr	r2, [r3, #16]
 19954 00ae 1A4B     		ldr	r3, .L758
 19955 00b0 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 437


 19956 00b2 07F10800 		add	r0, r7, #8
 19957 00b6 1B49     		ldr	r1, .L758+12
 19958 00b8 FFF7FEFF 		bl	sprintf
2599:..\src/command_processing.c ****     strcat(info_string, str);
 19959              		.loc 1 2599 0
 19960 00bc 07F10803 		add	r3, r7, #8
 19961 00c0 1946     		mov	r1, r3
 19962 00c2 7868     		ldr	r0, [r7, #4]
 19963 00c4 FFF7FEFF 		bl	strcat
2600:..\src/command_processing.c ****     
2601:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2602:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 19964              		.loc 1 2602 0
 19965 00c8 134B     		ldr	r3, .L758
 19966 00ca 196D     		ldr	r1, [r3, #80]
 19967 00cc 124B     		ldr	r3, .L758
 19968 00ce 5C6D     		ldr	r4, [r3, #84]
 19969 00d0 114B     		ldr	r3, .L758
 19970 00d2 9B6D     		ldr	r3, [r3, #88]
 19971 00d4 104A     		ldr	r2, .L758
 19972 00d6 D26D     		ldr	r2, [r2, #92]
 19973 00d8 07F10800 		add	r0, r7, #8
 19974 00dc 0192     		str	r2, [sp, #4]
 19975 00de 0093     		str	r3, [sp]
 19976 00e0 2346     		mov	r3, r4
 19977 00e2 0A46     		mov	r2, r1
 19978 00e4 1049     		ldr	r1, .L758+16
 19979 00e6 FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****     strcat(info_string, str);
 19980              		.loc 1 2603 0
 19981 00ea 07F10803 		add	r3, r7, #8
 19982 00ee 1946     		mov	r1, r3
 19983 00f0 7868     		ldr	r0, [r7, #4]
 19984 00f2 FFF7FEFF 		bl	strcat
2604:..\src/command_processing.c ****     
2605:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19985              		.loc 1 2605 0
 19986 00f6 7868     		ldr	r0, [r7, #4]
 19987 00f8 FFF7FEFF 		bl	strlen
 19988 00fc 0346     		mov	r3, r0
 19989 00fe 1A46     		mov	r2, r3
 19990 0100 7B68     		ldr	r3, [r7, #4]
 19991 0102 1344     		add	r3, r3, r2
 19992 0104 094A     		ldr	r2, .L758+20
 19993 0106 1188     		ldrh	r1, [r2]	@ unaligned
 19994 0108 9278     		ldrb	r2, [r2, #2]
 19995 010a 1980     		strh	r1, [r3]	@ unaligned
 19996 010c 9A70     		strb	r2, [r3, #2]
2606:..\src/command_processing.c **** }
 19997              		.loc 1 2606 0
 19998 010e 00BF     		nop
 19999 0110 7437     		adds	r7, r7, #116
 20000              		.cfi_def_cfa_offset 12
 20001 0112 BD46     		mov	sp, r7
 20002              		.cfi_def_cfa_register 13
 20003              		@ sp needed
 20004 0114 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 438


 20005              	.L759:
 20006 0116 00BF     		.align	2
 20007              	.L758:
 20008 0118 00000000 		.word	g_mem
 20009 011c 981B0000 		.word	.LC269
 20010 0120 A81B0000 		.word	.LC270
 20011 0124 B01B0000 		.word	.LC271
 20012 0128 BC1B0000 		.word	.LC272
 20013 012c A80E0000 		.word	.LC132
 20014              		.cfi_endproc
 20015              	.LFE76:
 20016              		.size	prepare_SD_info, .-prepare_SD_info
 20017              		.section	.rodata
 20018              		.align	2
 20019              	.LC273:
 20020 1bcc 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 20020      4F525320 
 20020      494E464F 
 20020      0D0A00
 20021 1bdb 00       		.align	2
 20022              	.LC274:
 20023 1bdc 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 20023      3A202564 
 20023      09256409 
 20023      25640D0A 
 20023      00
 20024 1bed 000000   		.align	2
 20025              	.LC275:
 20026 1bf0 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 20026      6F3A2025 
 20026      64092564 
 20026      0925640D 
 20026      0A00
 20027 1c02 0000     		.align	2
 20028              	.LC276:
 20029 1c04 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 20029      3A202564 
 20029      09256409 
 20029      25640D0A 
 20029      00
 20030 1c15 000000   		.align	2
 20031              	.LC277:
 20032 1c18 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 20032      743A2025 
 20032      2E336609 
 20032      252E3366 
 20032      09252E33 
 20033 1c35 000000   		.align	2
 20034              	.LC278:
 20035 1c38 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 20035      70657261 
 20035      74757265 
 20035      3A202564 
 20035      0D0A00
 20036              		.section	.text.IMU_reading_info,"ax",%progbits
 20037              		.align	2
 20038              		.global	IMU_reading_info
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 439


 20039              		.thumb
 20040              		.thumb_func
 20041              		.type	IMU_reading_info, %function
 20042              	IMU_reading_info:
 20043              	.LFB77:
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** //==============================================================================
2609:..\src/command_processing.c **** //                                                              IMU READING INFO
2610:..\src/command_processing.c **** //==============================================================================
2611:..\src/command_processing.c **** 
2612:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2613:..\src/command_processing.c **** {
 20044              		.loc 1 2613 0
 20045              		.cfi_startproc
 20046              		@ args = 0, pretend = 0, frame = 312
 20047              		@ frame_needed = 1, uses_anonymous_args = 0
 20048 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 20049              		.cfi_def_cfa_offset 32
 20050              		.cfi_offset 4, -32
 20051              		.cfi_offset 5, -28
 20052              		.cfi_offset 7, -24
 20053              		.cfi_offset 8, -20
 20054              		.cfi_offset 9, -16
 20055              		.cfi_offset 10, -12
 20056              		.cfi_offset 11, -8
 20057              		.cfi_offset 14, -4
 20058 0004 D4B0     		sub	sp, sp, #336
 20059              		.cfi_def_cfa_offset 368
 20060 0006 06AF     		add	r7, sp, #24
 20061              		.cfi_def_cfa 7, 344
 20062 0008 3B1D     		adds	r3, r7, #4
 20063 000a 1860     		str	r0, [r3]
2614:..\src/command_processing.c ****     char str[300];  
2615:..\src/command_processing.c ****     int i;
2616:..\src/command_processing.c ****                  
2617:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 20064              		.loc 1 2617 0
 20065 000c 3B1D     		adds	r3, r7, #4
 20066 000e 1868     		ldr	r0, [r3]
 20067 0010 FFF7FEFF 		bl	strlen
 20068 0014 0346     		mov	r3, r0
 20069 0016 1A46     		mov	r2, r3
 20070 0018 3B1D     		adds	r3, r7, #4
 20071 001a 1B68     		ldr	r3, [r3]
 20072 001c 1344     		add	r3, r3, r2
 20073 001e C94A     		ldr	r2, .L768
 20074 0020 1C46     		mov	r4, r3
 20075 0022 1346     		mov	r3, r2
 20076 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 20077 0026 2060     		str	r0, [r4]	@ unaligned
 20078 0028 6160     		str	r1, [r4, #4]	@ unaligned
 20079 002a A260     		str	r2, [r4, #8]	@ unaligned
 20080 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 20081 002e 9B78     		ldrb	r3, [r3, #2]
 20082 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 20083 0032 A373     		strb	r3, [r4, #14]
2618:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 440


 20084              		.loc 1 2618 0
 20085 0034 0023     		movs	r3, #0
 20086 0036 C7F83431 		str	r3, [r7, #308]
 20087 003a 66E1     		b	.L761
 20088              	.L767:
2619:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20089              		.loc 1 2619 0
 20090 003c C24A     		ldr	r2, .L768+4
 20091 003e D7F83431 		ldr	r3, [r7, #308]
 20092 0042 1344     		add	r3, r3, r2
 20093 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20094 0046 07F10800 		add	r0, r7, #8
 20095 004a D7F83421 		ldr	r2, [r7, #308]
 20096 004e BF49     		ldr	r1, .L768+8
 20097 0050 FFF7FEFF 		bl	sprintf
2620:..\src/command_processing.c ****         strcat(info_string, str);
 20098              		.loc 1 2620 0
 20099 0054 07F10802 		add	r2, r7, #8
 20100 0058 3B1D     		adds	r3, r7, #4
 20101 005a 1146     		mov	r1, r2
 20102 005c 1868     		ldr	r0, [r3]
 20103 005e FFF7FEFF 		bl	strcat
2621:..\src/command_processing.c ****         
2622:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 20104              		.loc 1 2622 0
 20105 0062 B94A     		ldr	r2, .L768+4
 20106 0064 D7F83431 		ldr	r3, [r7, #308]
 20107 0068 1344     		add	r3, r3, r2
 20108 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20109 006c 1946     		mov	r1, r3
 20110 006e B84A     		ldr	r2, .L768+12
 20111 0070 0B46     		mov	r3, r1
 20112 0072 9B00     		lsls	r3, r3, #2
 20113 0074 0B44     		add	r3, r3, r1
 20114 0076 1344     		add	r3, r3, r2
 20115 0078 03F20223 		addw	r3, r3, #514
 20116 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20117 007e 002B     		cmp	r3, #0
 20118 0080 31D0     		beq	.L762
2623:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 20119              		.loc 1 2623 0
 20120 0082 B449     		ldr	r1, .L768+16
 20121 0084 D7F83421 		ldr	r2, [r7, #308]
 20122 0088 1346     		mov	r3, r2
 20123 008a 9B00     		lsls	r3, r3, #2
 20124 008c 1344     		add	r3, r3, r2
 20125 008e DB00     		lsls	r3, r3, #3
 20126 0090 0B44     		add	r3, r3, r1
 20127 0092 0233     		adds	r3, r3, #2
 20128 0094 B3F90030 		ldrsh	r3, [r3]
 20129 0098 1C46     		mov	r4, r3
 20130 009a AE49     		ldr	r1, .L768+16
 20131 009c D7F83421 		ldr	r2, [r7, #308]
 20132 00a0 1346     		mov	r3, r2
 20133 00a2 9B00     		lsls	r3, r3, #2
 20134 00a4 1344     		add	r3, r3, r2
 20135 00a6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 441


 20136 00a8 0B44     		add	r3, r3, r1
 20137 00aa 0433     		adds	r3, r3, #4
 20138 00ac B3F90030 		ldrsh	r3, [r3]
 20139 00b0 1D46     		mov	r5, r3
 20140 00b2 A849     		ldr	r1, .L768+16
 20141 00b4 D7F83421 		ldr	r2, [r7, #308]
 20142 00b8 1346     		mov	r3, r2
 20143 00ba 9B00     		lsls	r3, r3, #2
 20144 00bc 1344     		add	r3, r3, r2
 20145 00be DB00     		lsls	r3, r3, #3
 20146 00c0 0B44     		add	r3, r3, r1
 20147 00c2 0633     		adds	r3, r3, #6
 20148 00c4 B3F90030 		ldrsh	r3, [r3]
 20149 00c8 07F10800 		add	r0, r7, #8
 20150 00cc 0093     		str	r3, [sp]
 20151 00ce 2B46     		mov	r3, r5
 20152 00d0 2246     		mov	r2, r4
 20153 00d2 A149     		ldr	r1, .L768+20
 20154 00d4 FFF7FEFF 		bl	sprintf
2624:..\src/command_processing.c ****             strcat(info_string, str);
 20155              		.loc 1 2624 0
 20156 00d8 07F10802 		add	r2, r7, #8
 20157 00dc 3B1D     		adds	r3, r7, #4
 20158 00de 1146     		mov	r1, r2
 20159 00e0 1868     		ldr	r0, [r3]
 20160 00e2 FFF7FEFF 		bl	strcat
 20161              	.L762:
2625:..\src/command_processing.c ****         }
2626:..\src/command_processing.c **** 
2627:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 20162              		.loc 1 2627 0
 20163 00e6 984A     		ldr	r2, .L768+4
 20164 00e8 D7F83431 		ldr	r3, [r7, #308]
 20165 00ec 1344     		add	r3, r3, r2
 20166 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20167 00f0 1946     		mov	r1, r3
 20168 00f2 974A     		ldr	r2, .L768+12
 20169 00f4 0B46     		mov	r3, r1
 20170 00f6 9B00     		lsls	r3, r3, #2
 20171 00f8 0B44     		add	r3, r3, r1
 20172 00fa 1344     		add	r3, r3, r2
 20173 00fc 03F20323 		addw	r3, r3, #515
 20174 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20175 0102 002B     		cmp	r3, #0
 20176 0104 31D0     		beq	.L763
2628:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 20177              		.loc 1 2628 0
 20178 0106 9349     		ldr	r1, .L768+16
 20179 0108 D7F83421 		ldr	r2, [r7, #308]
 20180 010c 1346     		mov	r3, r2
 20181 010e 9B00     		lsls	r3, r3, #2
 20182 0110 1344     		add	r3, r3, r2
 20183 0112 DB00     		lsls	r3, r3, #3
 20184 0114 0B44     		add	r3, r3, r1
 20185 0116 0833     		adds	r3, r3, #8
 20186 0118 B3F90030 		ldrsh	r3, [r3]
 20187 011c 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 442


 20188 011e 8D49     		ldr	r1, .L768+16
 20189 0120 D7F83421 		ldr	r2, [r7, #308]
 20190 0124 1346     		mov	r3, r2
 20191 0126 9B00     		lsls	r3, r3, #2
 20192 0128 1344     		add	r3, r3, r2
 20193 012a DB00     		lsls	r3, r3, #3
 20194 012c 0B44     		add	r3, r3, r1
 20195 012e 0A33     		adds	r3, r3, #10
 20196 0130 B3F90030 		ldrsh	r3, [r3]
 20197 0134 1D46     		mov	r5, r3
 20198 0136 8749     		ldr	r1, .L768+16
 20199 0138 D7F83421 		ldr	r2, [r7, #308]
 20200 013c 1346     		mov	r3, r2
 20201 013e 9B00     		lsls	r3, r3, #2
 20202 0140 1344     		add	r3, r3, r2
 20203 0142 DB00     		lsls	r3, r3, #3
 20204 0144 0B44     		add	r3, r3, r1
 20205 0146 0C33     		adds	r3, r3, #12
 20206 0148 B3F90030 		ldrsh	r3, [r3]
 20207 014c 07F10800 		add	r0, r7, #8
 20208 0150 0093     		str	r3, [sp]
 20209 0152 2B46     		mov	r3, r5
 20210 0154 2246     		mov	r2, r4
 20211 0156 8149     		ldr	r1, .L768+24
 20212 0158 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c ****             strcat(info_string, str);
 20213              		.loc 1 2629 0
 20214 015c 07F10802 		add	r2, r7, #8
 20215 0160 3B1D     		adds	r3, r7, #4
 20216 0162 1146     		mov	r1, r2
 20217 0164 1868     		ldr	r0, [r3]
 20218 0166 FFF7FEFF 		bl	strcat
 20219              	.L763:
2630:..\src/command_processing.c ****         }
2631:..\src/command_processing.c **** 
2632:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 20220              		.loc 1 2632 0
 20221 016a 774A     		ldr	r2, .L768+4
 20222 016c D7F83431 		ldr	r3, [r7, #308]
 20223 0170 1344     		add	r3, r3, r2
 20224 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20225 0174 1946     		mov	r1, r3
 20226 0176 764A     		ldr	r2, .L768+12
 20227 0178 0B46     		mov	r3, r1
 20228 017a 9B00     		lsls	r3, r3, #2
 20229 017c 0B44     		add	r3, r3, r1
 20230 017e 1344     		add	r3, r3, r2
 20231 0180 03F50173 		add	r3, r3, #516
 20232 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20233 0186 002B     		cmp	r3, #0
 20234 0188 31D0     		beq	.L764
2633:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 20235              		.loc 1 2633 0
 20236 018a 7249     		ldr	r1, .L768+16
 20237 018c D7F83421 		ldr	r2, [r7, #308]
 20238 0190 1346     		mov	r3, r2
 20239 0192 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 443


 20240 0194 1344     		add	r3, r3, r2
 20241 0196 DB00     		lsls	r3, r3, #3
 20242 0198 0B44     		add	r3, r3, r1
 20243 019a 0E33     		adds	r3, r3, #14
 20244 019c B3F90030 		ldrsh	r3, [r3]
 20245 01a0 1C46     		mov	r4, r3
 20246 01a2 6C49     		ldr	r1, .L768+16
 20247 01a4 D7F83421 		ldr	r2, [r7, #308]
 20248 01a8 1346     		mov	r3, r2
 20249 01aa 9B00     		lsls	r3, r3, #2
 20250 01ac 1344     		add	r3, r3, r2
 20251 01ae DB00     		lsls	r3, r3, #3
 20252 01b0 0B44     		add	r3, r3, r1
 20253 01b2 1033     		adds	r3, r3, #16
 20254 01b4 B3F90030 		ldrsh	r3, [r3]
 20255 01b8 1D46     		mov	r5, r3
 20256 01ba 6649     		ldr	r1, .L768+16
 20257 01bc D7F83421 		ldr	r2, [r7, #308]
 20258 01c0 1346     		mov	r3, r2
 20259 01c2 9B00     		lsls	r3, r3, #2
 20260 01c4 1344     		add	r3, r3, r2
 20261 01c6 DB00     		lsls	r3, r3, #3
 20262 01c8 0B44     		add	r3, r3, r1
 20263 01ca 1233     		adds	r3, r3, #18
 20264 01cc B3F90030 		ldrsh	r3, [r3]
 20265 01d0 07F10800 		add	r0, r7, #8
 20266 01d4 0093     		str	r3, [sp]
 20267 01d6 2B46     		mov	r3, r5
 20268 01d8 2246     		mov	r2, r4
 20269 01da 6149     		ldr	r1, .L768+28
 20270 01dc FFF7FEFF 		bl	sprintf
2634:..\src/command_processing.c ****             strcat(info_string, str);
 20271              		.loc 1 2634 0
 20272 01e0 07F10802 		add	r2, r7, #8
 20273 01e4 3B1D     		adds	r3, r7, #4
 20274 01e6 1146     		mov	r1, r2
 20275 01e8 1868     		ldr	r0, [r3]
 20276 01ea FFF7FEFF 		bl	strcat
 20277              	.L764:
2635:..\src/command_processing.c ****         }
2636:..\src/command_processing.c ****         
2637:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 20278              		.loc 1 2637 0
 20279 01ee 564A     		ldr	r2, .L768+4
 20280 01f0 D7F83431 		ldr	r3, [r7, #308]
 20281 01f4 1344     		add	r3, r3, r2
 20282 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20283 01f8 1946     		mov	r1, r3
 20284 01fa 554A     		ldr	r2, .L768+12
 20285 01fc 0B46     		mov	r3, r1
 20286 01fe 9B00     		lsls	r3, r3, #2
 20287 0200 0B44     		add	r3, r3, r1
 20288 0202 1344     		add	r3, r3, r2
 20289 0204 03F20523 		addw	r3, r3, #517
 20290 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20291 020a 002B     		cmp	r3, #0
 20292 020c 4FD0     		beq	.L765
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 444


2638:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 20293              		.loc 1 2638 0
 20294 020e 5149     		ldr	r1, .L768+16
 20295 0210 D7F83421 		ldr	r2, [r7, #308]
 20296 0214 1346     		mov	r3, r2
 20297 0216 9B00     		lsls	r3, r3, #2
 20298 0218 1344     		add	r3, r3, r2
 20299 021a DB00     		lsls	r3, r3, #3
 20300 021c 0B44     		add	r3, r3, r1
 20301 021e 1433     		adds	r3, r3, #20
 20302 0220 1B68     		ldr	r3, [r3]	@ float
 20303 0222 1846     		mov	r0, r3
 20304 0224 FFF7FEFF 		bl	__aeabi_f2d
 20305 0228 8246     		mov	r10, r0
 20306 022a 8B46     		mov	fp, r1
 20307 022c 4949     		ldr	r1, .L768+16
 20308 022e D7F83421 		ldr	r2, [r7, #308]
 20309 0232 1346     		mov	r3, r2
 20310 0234 9B00     		lsls	r3, r3, #2
 20311 0236 1344     		add	r3, r3, r2
 20312 0238 DB00     		lsls	r3, r3, #3
 20313 023a 0B44     		add	r3, r3, r1
 20314 023c 1833     		adds	r3, r3, #24
 20315 023e 1B68     		ldr	r3, [r3]	@ float
 20316 0240 1846     		mov	r0, r3
 20317 0242 FFF7FEFF 		bl	__aeabi_f2d
 20318 0246 0446     		mov	r4, r0
 20319 0248 0D46     		mov	r5, r1
 20320 024a 4249     		ldr	r1, .L768+16
 20321 024c D7F83421 		ldr	r2, [r7, #308]
 20322 0250 1346     		mov	r3, r2
 20323 0252 9B00     		lsls	r3, r3, #2
 20324 0254 1344     		add	r3, r3, r2
 20325 0256 DB00     		lsls	r3, r3, #3
 20326 0258 0B44     		add	r3, r3, r1
 20327 025a 1C33     		adds	r3, r3, #28
 20328 025c 1B68     		ldr	r3, [r3]	@ float
 20329 025e 1846     		mov	r0, r3
 20330 0260 FFF7FEFF 		bl	__aeabi_f2d
 20331 0264 8046     		mov	r8, r0
 20332 0266 8946     		mov	r9, r1
 20333 0268 3A49     		ldr	r1, .L768+16
 20334 026a D7F83421 		ldr	r2, [r7, #308]
 20335 026e 1346     		mov	r3, r2
 20336 0270 9B00     		lsls	r3, r3, #2
 20337 0272 1344     		add	r3, r3, r2
 20338 0274 DB00     		lsls	r3, r3, #3
 20339 0276 0B44     		add	r3, r3, r1
 20340 0278 2033     		adds	r3, r3, #32
 20341 027a 1B68     		ldr	r3, [r3]	@ float
 20342 027c 1846     		mov	r0, r3
 20343 027e FFF7FEFF 		bl	__aeabi_f2d
 20344 0282 0246     		mov	r2, r0
 20345 0284 0B46     		mov	r3, r1
 20346 0286 07F10800 		add	r0, r7, #8
 20347 028a CDE90423 		strd	r2, [sp, #16]
 20348 028e CDE90289 		strd	r8, [sp, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 445


 20349 0292 CDE90045 		strd	r4, [sp]
 20350 0296 5246     		mov	r2, r10
 20351 0298 5B46     		mov	r3, fp
 20352 029a 3249     		ldr	r1, .L768+32
 20353 029c FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c ****             strcat(info_string, str);
 20354              		.loc 1 2639 0
 20355 02a0 07F10802 		add	r2, r7, #8
 20356 02a4 3B1D     		adds	r3, r7, #4
 20357 02a6 1146     		mov	r1, r2
 20358 02a8 1868     		ldr	r0, [r3]
 20359 02aa FFF7FEFF 		bl	strcat
 20360              	.L765:
2640:..\src/command_processing.c ****         }
2641:..\src/command_processing.c ****         
2642:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 20361              		.loc 1 2642 0
 20362 02ae 264A     		ldr	r2, .L768+4
 20363 02b0 D7F83431 		ldr	r3, [r7, #308]
 20364 02b4 1344     		add	r3, r3, r2
 20365 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20366 02b8 1946     		mov	r1, r3
 20367 02ba 254A     		ldr	r2, .L768+12
 20368 02bc 0B46     		mov	r3, r1
 20369 02be 9B00     		lsls	r3, r3, #2
 20370 02c0 0B44     		add	r3, r3, r1
 20371 02c2 1344     		add	r3, r3, r2
 20372 02c4 03F20623 		addw	r3, r3, #518
 20373 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20374 02ca 002B     		cmp	r3, #0
 20375 02cc 18D0     		beq	.L766
2643:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20376              		.loc 1 2643 0
 20377 02ce 2149     		ldr	r1, .L768+16
 20378 02d0 D7F83421 		ldr	r2, [r7, #308]
 20379 02d4 1346     		mov	r3, r2
 20380 02d6 9B00     		lsls	r3, r3, #2
 20381 02d8 1344     		add	r3, r3, r2
 20382 02da DB00     		lsls	r3, r3, #3
 20383 02dc 0B44     		add	r3, r3, r1
 20384 02de 2433     		adds	r3, r3, #36
 20385 02e0 B3F90030 		ldrsh	r3, [r3]
 20386 02e4 1A46     		mov	r2, r3
 20387 02e6 07F10803 		add	r3, r7, #8
 20388 02ea 1F49     		ldr	r1, .L768+36
 20389 02ec 1846     		mov	r0, r3
 20390 02ee FFF7FEFF 		bl	sprintf
2644:..\src/command_processing.c ****             strcat(info_string, str);
 20391              		.loc 1 2644 0
 20392 02f2 07F10802 		add	r2, r7, #8
 20393 02f6 3B1D     		adds	r3, r7, #4
 20394 02f8 1146     		mov	r1, r2
 20395 02fa 1868     		ldr	r0, [r3]
 20396 02fc FFF7FEFF 		bl	strcat
 20397              	.L766:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20398              		.loc 1 2618 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 446


 20399 0300 D7F83431 		ldr	r3, [r7, #308]
 20400 0304 0133     		adds	r3, r3, #1
 20401 0306 C7F83431 		str	r3, [r7, #308]
 20402              	.L761:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20403              		.loc 1 2618 0 is_stmt 0 discriminator 1
 20404 030a 184B     		ldr	r3, .L768+40
 20405 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20406 030e 1A46     		mov	r2, r3
 20407 0310 D7F83431 		ldr	r3, [r7, #308]
 20408 0314 9A42     		cmp	r2, r3
 20409 0316 3FF791AE 		bgt	.L767
2645:..\src/command_processing.c ****         }
2646:..\src/command_processing.c ****         
2647:..\src/command_processing.c ****     }
2648:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20410              		.loc 1 2648 0 is_stmt 1
 20411 031a 3B1D     		adds	r3, r7, #4
 20412 031c 1868     		ldr	r0, [r3]
 20413 031e FFF7FEFF 		bl	strlen
 20414 0322 0346     		mov	r3, r0
 20415 0324 1A46     		mov	r2, r3
 20416 0326 3B1D     		adds	r3, r7, #4
 20417 0328 1B68     		ldr	r3, [r3]
 20418 032a 1344     		add	r3, r3, r2
 20419 032c 104A     		ldr	r2, .L768+44
 20420 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20421 0330 9278     		ldrb	r2, [r2, #2]
 20422 0332 1980     		strh	r1, [r3]	@ unaligned
 20423 0334 9A70     		strb	r2, [r3, #2]
2649:..\src/command_processing.c **** }
 20424              		.loc 1 2649 0
 20425 0336 00BF     		nop
 20426 0338 07F59C77 		add	r7, r7, #312
 20427              		.cfi_def_cfa_offset 32
 20428 033c BD46     		mov	sp, r7
 20429              		.cfi_def_cfa_register 13
 20430              		@ sp needed
 20431 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20432              	.L769:
 20433 0342 00BF     		.align	2
 20434              	.L768:
 20435 0344 CC1B0000 		.word	.LC273
 20436 0348 00000000 		.word	IMU_connected
 20437 034c 40170000 		.word	.LC226
 20438 0350 00000000 		.word	c_mem
 20439 0354 00000000 		.word	g_imu
 20440 0358 DC1B0000 		.word	.LC274
 20441 035c F01B0000 		.word	.LC275
 20442 0360 041C0000 		.word	.LC276
 20443 0364 181C0000 		.word	.LC277
 20444 0368 381C0000 		.word	.LC278
 20445 036c 00000000 		.word	N_IMU_Connected
 20446 0370 A80E0000 		.word	.LC132
 20447              		.cfi_endproc
 20448              	.LFE77:
 20449              		.size	IMU_reading_info, .-IMU_reading_info
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 447


 20450              		.section	.text.commWrite_old_id,"ax",%progbits
 20451              		.align	2
 20452              		.global	commWrite_old_id
 20453              		.thumb
 20454              		.thumb_func
 20455              		.type	commWrite_old_id, %function
 20456              	commWrite_old_id:
 20457              	.LFB78:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c **** //==============================================================================
2652:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2653:..\src/command_processing.c **** //==============================================================================
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2656:..\src/command_processing.c **** {
 20458              		.loc 1 2656 0
 20459              		.cfi_startproc
 20460              		@ args = 0, pretend = 0, frame = 16
 20461              		@ frame_needed = 1, uses_anonymous_args = 0
 20462 0000 80B5     		push	{r7, lr}
 20463              		.cfi_def_cfa_offset 8
 20464              		.cfi_offset 7, -8
 20465              		.cfi_offset 14, -4
 20466 0002 84B0     		sub	sp, sp, #16
 20467              		.cfi_def_cfa_offset 24
 20468 0004 00AF     		add	r7, sp, #0
 20469              		.cfi_def_cfa_register 7
 20470 0006 7860     		str	r0, [r7, #4]
 20471 0008 0B46     		mov	r3, r1
 20472 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20473 000c 1346     		mov	r3, r2
 20474 000e 7B70     		strb	r3, [r7, #1]
2657:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2658:..\src/command_processing.c **** 
2659:..\src/command_processing.c ****     // frame - start
2660:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20475              		.loc 1 2660 0
 20476 0010 3A20     		movs	r0, #58
 20477 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2661:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20478              		.loc 1 2661 0
 20479 0016 3A20     		movs	r0, #58
 20480 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2662:..\src/command_processing.c ****     // frame - ID
2663:..\src/command_processing.c ****     //if(old_id)
2664:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20481              		.loc 1 2664 0
 20482 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20483 001e 1846     		mov	r0, r3
 20484 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2665:..\src/command_processing.c ****     //else
2666:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2667:..\src/command_processing.c ****         
2668:..\src/command_processing.c ****     // frame - length
2669:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20485              		.loc 1 2669 0
 20486 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 448


 20487 0026 DBB2     		uxtb	r3, r3
 20488 0028 1846     		mov	r0, r3
 20489 002a FFF7FEFF 		bl	UART_RS485_PutChar
2670:..\src/command_processing.c ****     // frame - packet data
2671:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20490              		.loc 1 2671 0
 20491 002e 0023     		movs	r3, #0
 20492 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20493 0032 09E0     		b	.L771
 20494              	.L772:
2672:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20495              		.loc 1 2672 0 discriminator 3
 20496 0034 FB89     		ldrh	r3, [r7, #14]
 20497 0036 7A68     		ldr	r2, [r7, #4]
 20498 0038 1344     		add	r3, r3, r2
 20499 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20500 003c 1846     		mov	r0, r3
 20501 003e FFF7FEFF 		bl	UART_RS485_PutChar
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20502              		.loc 1 2671 0 discriminator 3
 20503 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20504 0044 0133     		adds	r3, r3, #1
 20505 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20506              	.L771:
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20507              		.loc 1 2671 0 is_stmt 0 discriminator 1
 20508 0048 FA89     		ldrh	r2, [r7, #14]
 20509 004a 7B88     		ldrh	r3, [r7, #2]
 20510 004c 9A42     		cmp	r2, r3
 20511 004e F1D3     		bcc	.L772
2673:..\src/command_processing.c ****     }
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c ****     index = 0;
 20512              		.loc 1 2675 0 is_stmt 1
 20513 0050 0023     		movs	r3, #0
 20514 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20515              		.loc 1 2677 0
 20516 0054 00BF     		nop
 20517              	.L774:
 20518              		.loc 1 2677 0 is_stmt 0 discriminator 2
 20519 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20520 005a 0346     		mov	r3, r0
 20521 005c 03F00103 		and	r3, r3, #1
 20522 0060 002B     		cmp	r3, #0
 20523 0062 05D1     		bne	.L773
 20524              		.loc 1 2677 0 discriminator 1
 20525 0064 FB89     		ldrh	r3, [r7, #14]
 20526 0066 5A1C     		adds	r2, r3, #1
 20527 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20528 006a B3F57A7F 		cmp	r3, #1000
 20529 006e F2D9     		bls	.L774
 20530              	.L773:
2678:..\src/command_processing.c **** 
2679:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20531              		.loc 1 2679 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 449


 20532 0070 0120     		movs	r0, #1
 20533 0072 FFF7FEFF 		bl	RS485_CTS_Write
2680:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20534              		.loc 1 2680 0
 20535 0076 0020     		movs	r0, #0
 20536 0078 FFF7FEFF 		bl	RS485_CTS_Write
2681:..\src/command_processing.c **** }
 20537              		.loc 1 2681 0
 20538 007c 00BF     		nop
 20539 007e 1037     		adds	r7, r7, #16
 20540              		.cfi_def_cfa_offset 8
 20541 0080 BD46     		mov	sp, r7
 20542              		.cfi_def_cfa_register 13
 20543              		@ sp needed
 20544 0082 80BD     		pop	{r7, pc}
 20545              		.cfi_endproc
 20546              	.LFE78:
 20547              		.size	commWrite_old_id, .-commWrite_old_id
 20548              		.section	.text.commWrite,"ax",%progbits
 20549              		.align	2
 20550              		.global	commWrite
 20551              		.thumb
 20552              		.thumb_func
 20553              		.type	commWrite, %function
 20554              	commWrite:
 20555              	.LFB79:
2682:..\src/command_processing.c **** 
2683:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2684:..\src/command_processing.c **** {
 20556              		.loc 1 2684 0
 20557              		.cfi_startproc
 20558              		@ args = 0, pretend = 0, frame = 16
 20559              		@ frame_needed = 1, uses_anonymous_args = 0
 20560 0000 80B5     		push	{r7, lr}
 20561              		.cfi_def_cfa_offset 8
 20562              		.cfi_offset 7, -8
 20563              		.cfi_offset 14, -4
 20564 0002 84B0     		sub	sp, sp, #16
 20565              		.cfi_def_cfa_offset 24
 20566 0004 00AF     		add	r7, sp, #0
 20567              		.cfi_def_cfa_register 7
 20568 0006 7860     		str	r0, [r7, #4]
 20569 0008 0B46     		mov	r3, r1
 20570 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2685:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c ****     // frame - start
2688:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20571              		.loc 1 2688 0
 20572 000c 3A20     		movs	r0, #58
 20573 000e FFF7FEFF 		bl	UART_RS485_PutChar
2689:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20574              		.loc 1 2689 0
 20575 0012 3A20     		movs	r0, #58
 20576 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2690:..\src/command_processing.c ****     // frame - ID
2691:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 450


 20577              		.loc 1 2691 0
 20578 0018 1A4B     		ldr	r3, .L780
 20579 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20580 001e 1846     		mov	r0, r3
 20581 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2692:..\src/command_processing.c ****     // frame - length
2693:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20582              		.loc 1 2693 0
 20583 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20584 0026 DBB2     		uxtb	r3, r3
 20585 0028 1846     		mov	r0, r3
 20586 002a FFF7FEFF 		bl	UART_RS485_PutChar
2694:..\src/command_processing.c ****     // frame - packet data
2695:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20587              		.loc 1 2695 0
 20588 002e 0023     		movs	r3, #0
 20589 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20590 0032 09E0     		b	.L776
 20591              	.L777:
2696:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20592              		.loc 1 2696 0 discriminator 3
 20593 0034 FB89     		ldrh	r3, [r7, #14]
 20594 0036 7A68     		ldr	r2, [r7, #4]
 20595 0038 1344     		add	r3, r3, r2
 20596 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20597 003c 1846     		mov	r0, r3
 20598 003e FFF7FEFF 		bl	UART_RS485_PutChar
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20599              		.loc 1 2695 0 discriminator 3
 20600 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20601 0044 0133     		adds	r3, r3, #1
 20602 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20603              	.L776:
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20604              		.loc 1 2695 0 is_stmt 0 discriminator 1
 20605 0048 FA89     		ldrh	r2, [r7, #14]
 20606 004a 7B88     		ldrh	r3, [r7, #2]
 20607 004c 9A42     		cmp	r2, r3
 20608 004e F1D3     		bcc	.L777
2697:..\src/command_processing.c ****     }
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c ****     index = 0;
 20609              		.loc 1 2699 0 is_stmt 1
 20610 0050 0023     		movs	r3, #0
 20611 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20612              		.loc 1 2701 0
 20613 0054 00BF     		nop
 20614              	.L779:
 20615              		.loc 1 2701 0 is_stmt 0 discriminator 2
 20616 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20617 005a 0346     		mov	r3, r0
 20618 005c 03F00103 		and	r3, r3, #1
 20619 0060 002B     		cmp	r3, #0
 20620 0062 05D1     		bne	.L778
 20621              		.loc 1 2701 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 451


 20622 0064 FB89     		ldrh	r3, [r7, #14]
 20623 0066 5A1C     		adds	r2, r3, #1
 20624 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20625 006a B3F57A7F 		cmp	r3, #1000
 20626 006e F2D9     		bls	.L779
 20627              	.L778:
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20628              		.loc 1 2703 0 is_stmt 1
 20629 0070 0120     		movs	r0, #1
 20630 0072 FFF7FEFF 		bl	RS485_CTS_Write
2704:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20631              		.loc 1 2704 0
 20632 0076 0020     		movs	r0, #0
 20633 0078 FFF7FEFF 		bl	RS485_CTS_Write
2705:..\src/command_processing.c **** }
 20634              		.loc 1 2705 0
 20635 007c 00BF     		nop
 20636 007e 1037     		adds	r7, r7, #16
 20637              		.cfi_def_cfa_offset 8
 20638 0080 BD46     		mov	sp, r7
 20639              		.cfi_def_cfa_register 13
 20640              		@ sp needed
 20641 0082 80BD     		pop	{r7, pc}
 20642              	.L781:
 20643              		.align	2
 20644              	.L780:
 20645 0084 00000000 		.word	g_mem
 20646              		.cfi_endproc
 20647              	.LFE79:
 20648              		.size	commWrite, .-commWrite
 20649              		.section	.text.commWriteID,"ax",%progbits
 20650              		.align	2
 20651              		.global	commWriteID
 20652              		.thumb
 20653              		.thumb_func
 20654              		.type	commWriteID, %function
 20655              	commWriteID:
 20656              	.LFB80:
2706:..\src/command_processing.c **** 
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2709:..\src/command_processing.c **** //==============================================================================
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2712:..\src/command_processing.c **** {
 20657              		.loc 1 2712 0
 20658              		.cfi_startproc
 20659              		@ args = 0, pretend = 0, frame = 8
 20660              		@ frame_needed = 1, uses_anonymous_args = 0
 20661 0000 80B5     		push	{r7, lr}
 20662              		.cfi_def_cfa_offset 8
 20663              		.cfi_offset 7, -8
 20664              		.cfi_offset 14, -4
 20665 0002 82B0     		sub	sp, sp, #8
 20666              		.cfi_def_cfa_offset 16
 20667 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 452


 20668              		.cfi_def_cfa_register 7
 20669 0006 7860     		str	r0, [r7, #4]
 20670 0008 0B46     		mov	r3, r1
 20671 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20672 000c 1346     		mov	r3, r2
 20673 000e 7B70     		strb	r3, [r7, #1]
2713:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c ****     // frame - start
2716:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20674              		.loc 1 2716 0
 20675 0010 3A20     		movs	r0, #58
 20676 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2717:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20677              		.loc 1 2717 0
 20678 0016 3A20     		movs	r0, #58
 20679 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2718:..\src/command_processing.c ****     // frame - ID
2719:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 20680              		.loc 1 2719 0
 20681 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20682 001e 1846     		mov	r0, r3
 20683 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2720:..\src/command_processing.c ****     // frame - length
2721:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20684              		.loc 1 2721 0
 20685 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20686 0026 DBB2     		uxtb	r3, r3
 20687 0028 1846     		mov	r0, r3
 20688 002a FFF7FEFF 		bl	UART_RS485_PutChar
2722:..\src/command_processing.c ****     // frame - packet data
2723:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 20689              		.loc 1 2723 0
 20690 002e 1B4B     		ldr	r3, .L787
 20691 0030 0022     		movs	r2, #0
 20692 0032 1A80     		strh	r2, [r3]	@ movhi
 20693 0034 0EE0     		b	.L783
 20694              	.L784:
2724:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20695              		.loc 1 2724 0 discriminator 3
 20696 0036 194B     		ldr	r3, .L787
 20697 0038 1B88     		ldrh	r3, [r3]
 20698 003a 1A46     		mov	r2, r3
 20699 003c 7B68     		ldr	r3, [r7, #4]
 20700 003e 1344     		add	r3, r3, r2
 20701 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20702 0042 1846     		mov	r0, r3
 20703 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20704              		.loc 1 2723 0 discriminator 3
 20705 0048 144B     		ldr	r3, .L787
 20706 004a 1B88     		ldrh	r3, [r3]
 20707 004c 0133     		adds	r3, r3, #1
 20708 004e 9AB2     		uxth	r2, r3
 20709 0050 124B     		ldr	r3, .L787
 20710 0052 1A80     		strh	r2, [r3]	@ movhi
 20711              	.L783:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 453


2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20712              		.loc 1 2723 0 is_stmt 0 discriminator 1
 20713 0054 114B     		ldr	r3, .L787
 20714 0056 1B88     		ldrh	r3, [r3]
 20715 0058 7A88     		ldrh	r2, [r7, #2]
 20716 005a 9A42     		cmp	r2, r3
 20717 005c EBD8     		bhi	.L784
2725:..\src/command_processing.c ****     }
2726:..\src/command_processing.c **** 
2727:..\src/command_processing.c ****     i = 0;
 20718              		.loc 1 2727 0 is_stmt 1
 20719 005e 0F4B     		ldr	r3, .L787
 20720 0060 0022     		movs	r2, #0
 20721 0062 1A80     		strh	r2, [r3]	@ movhi
2728:..\src/command_processing.c **** 
2729:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 20722              		.loc 1 2729 0
 20723 0064 00BF     		nop
 20724              	.L786:
 20725              		.loc 1 2729 0 is_stmt 0 discriminator 2
 20726 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20727 006a 0346     		mov	r3, r0
 20728 006c 03F00103 		and	r3, r3, #1
 20729 0070 002B     		cmp	r3, #0
 20730 0072 08D1     		bne	.L785
 20731              		.loc 1 2729 0 discriminator 1
 20732 0074 094B     		ldr	r3, .L787
 20733 0076 1B88     		ldrh	r3, [r3]
 20734 0078 5A1C     		adds	r2, r3, #1
 20735 007a 91B2     		uxth	r1, r2
 20736 007c 074A     		ldr	r2, .L787
 20737 007e 1180     		strh	r1, [r2]	@ movhi
 20738 0080 B3F57A7F 		cmp	r3, #1000
 20739 0084 EFD9     		bls	.L786
 20740              	.L785:
2730:..\src/command_processing.c ****     
2731:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20741              		.loc 1 2731 0 is_stmt 1
 20742 0086 0120     		movs	r0, #1
 20743 0088 FFF7FEFF 		bl	RS485_CTS_Write
2732:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20744              		.loc 1 2732 0
 20745 008c 0020     		movs	r0, #0
 20746 008e FFF7FEFF 		bl	RS485_CTS_Write
2733:..\src/command_processing.c **** }
 20747              		.loc 1 2733 0
 20748 0092 00BF     		nop
 20749 0094 0837     		adds	r7, r7, #8
 20750              		.cfi_def_cfa_offset 8
 20751 0096 BD46     		mov	sp, r7
 20752              		.cfi_def_cfa_register 13
 20753              		@ sp needed
 20754 0098 80BD     		pop	{r7, pc}
 20755              	.L788:
 20756 009a 00BF     		.align	2
 20757              	.L787:
 20758 009c 00000000 		.word	i.11156
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 454


 20759              		.cfi_endproc
 20760              	.LFE80:
 20761              		.size	commWriteID, .-commWriteID
 20762              		.section	.text.LCRChecksum,"ax",%progbits
 20763              		.align	2
 20764              		.global	LCRChecksum
 20765              		.thumb
 20766              		.thumb_func
 20767              		.type	LCRChecksum, %function
 20768              	LCRChecksum:
 20769              	.LFB81:
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c **** //==============================================================================
2736:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2737:..\src/command_processing.c **** //==============================================================================
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2740:..\src/command_processing.c **** 
2741:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20770              		.loc 1 2741 0
 20771              		.cfi_startproc
 20772              		@ args = 0, pretend = 0, frame = 16
 20773              		@ frame_needed = 1, uses_anonymous_args = 0
 20774              		@ link register save eliminated.
 20775 0000 80B4     		push	{r7}
 20776              		.cfi_def_cfa_offset 4
 20777              		.cfi_offset 7, -4
 20778 0002 85B0     		sub	sp, sp, #20
 20779              		.cfi_def_cfa_offset 24
 20780 0004 00AF     		add	r7, sp, #0
 20781              		.cfi_def_cfa_register 7
 20782 0006 7860     		str	r0, [r7, #4]
 20783 0008 0B46     		mov	r3, r1
 20784 000a FB70     		strb	r3, [r7, #3]
2742:..\src/command_processing.c ****     
2743:..\src/command_processing.c ****     uint8 CYDATA i;
2744:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20785              		.loc 1 2744 0
 20786 000c 0023     		movs	r3, #0
 20787 000e BB73     		strb	r3, [r7, #14]
2745:..\src/command_processing.c ****     
2746:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20788              		.loc 1 2746 0
 20789 0010 0023     		movs	r3, #0
 20790 0012 FB73     		strb	r3, [r7, #15]
 20791 0014 09E0     		b	.L790
 20792              	.L791:
2747:..\src/command_processing.c ****        checksum ^= data_array[i];
 20793              		.loc 1 2747 0 discriminator 3
 20794 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20795 0018 7A68     		ldr	r2, [r7, #4]
 20796 001a 1344     		add	r3, r3, r2
 20797 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20798 001e BB7B     		ldrb	r3, [r7, #14]
 20799 0020 5340     		eors	r3, r3, r2
 20800 0022 BB73     		strb	r3, [r7, #14]
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 455


 20801              		.loc 1 2746 0 discriminator 3
 20802 0024 FB7B     		ldrb	r3, [r7, #15]
 20803 0026 0133     		adds	r3, r3, #1
 20804 0028 FB73     		strb	r3, [r7, #15]
 20805              	.L790:
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 20806              		.loc 1 2746 0 is_stmt 0 discriminator 1
 20807 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20808 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20809 002e 9A42     		cmp	r2, r3
 20810 0030 F1D3     		bcc	.L791
2748:..\src/command_processing.c ****   
2749:..\src/command_processing.c ****     return checksum;
 20811              		.loc 1 2749 0 is_stmt 1
 20812 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2750:..\src/command_processing.c **** }
 20813              		.loc 1 2750 0
 20814 0034 1846     		mov	r0, r3
 20815 0036 1437     		adds	r7, r7, #20
 20816              		.cfi_def_cfa_offset 4
 20817 0038 BD46     		mov	sp, r7
 20818              		.cfi_def_cfa_register 13
 20819              		@ sp needed
 20820 003a 80BC     		pop	{r7}
 20821              		.cfi_restore 7
 20822              		.cfi_def_cfa_offset 0
 20823 003c 7047     		bx	lr
 20824              		.cfi_endproc
 20825              	.LFE81:
 20826              		.size	LCRChecksum, .-LCRChecksum
 20827 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20828              		.align	2
 20829              		.global	sendAcknowledgment
 20830              		.thumb
 20831              		.thumb_func
 20832              		.type	sendAcknowledgment, %function
 20833              	sendAcknowledgment:
 20834              	.LFB82:
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c **** 
2753:..\src/command_processing.c **** //==============================================================================
2754:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2755:..\src/command_processing.c **** //==============================================================================
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20835              		.loc 1 2757 0
 20836              		.cfi_startproc
 20837              		@ args = 0, pretend = 0, frame = 16
 20838              		@ frame_needed = 1, uses_anonymous_args = 0
 20839 0000 80B5     		push	{r7, lr}
 20840              		.cfi_def_cfa_offset 8
 20841              		.cfi_offset 7, -8
 20842              		.cfi_offset 14, -4
 20843 0002 84B0     		sub	sp, sp, #16
 20844              		.cfi_def_cfa_offset 24
 20845 0004 00AF     		add	r7, sp, #0
 20846              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 456


 20847 0006 0346     		mov	r3, r0
 20848 0008 FB71     		strb	r3, [r7, #7]
2758:..\src/command_processing.c ****     int packet_lenght = 2;
 20849              		.loc 1 2758 0
 20850 000a 0223     		movs	r3, #2
 20851 000c FB60     		str	r3, [r7, #12]
2759:..\src/command_processing.c ****     uint8 packet_data[2];
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     packet_data[0] = value;
 20852              		.loc 1 2761 0
 20853 000e FB79     		ldrb	r3, [r7, #7]
 20854 0010 3B72     		strb	r3, [r7, #8]
2762:..\src/command_processing.c ****     packet_data[1] = value;
 20855              		.loc 1 2762 0
 20856 0012 FB79     		ldrb	r3, [r7, #7]
 20857 0014 7B72     		strb	r3, [r7, #9]
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20858              		.loc 1 2764 0
 20859 0016 FB68     		ldr	r3, [r7, #12]
 20860 0018 9AB2     		uxth	r2, r3
 20861 001a 07F10803 		add	r3, r7, #8
 20862 001e 1146     		mov	r1, r2
 20863 0020 1846     		mov	r0, r3
 20864 0022 FFF7FEFF 		bl	commWrite
2765:..\src/command_processing.c **** }
 20865              		.loc 1 2765 0
 20866 0026 00BF     		nop
 20867 0028 1037     		adds	r7, r7, #16
 20868              		.cfi_def_cfa_offset 8
 20869 002a BD46     		mov	sp, r7
 20870              		.cfi_def_cfa_register 13
 20871              		@ sp needed
 20872 002c 80BD     		pop	{r7, pc}
 20873              		.cfi_endproc
 20874              	.LFE82:
 20875              		.size	sendAcknowledgment, .-sendAcknowledgment
 20876 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20877              		.align	2
 20878              		.global	memStore
 20879              		.thumb
 20880              		.thumb_func
 20881              		.type	memStore, %function
 20882              	memStore:
 20883              	.LFB83:
2766:..\src/command_processing.c **** 
2767:..\src/command_processing.c **** //==============================================================================
2768:..\src/command_processing.c **** //                                                                  STORE MEMORY
2769:..\src/command_processing.c **** //==============================================================================
2770:..\src/command_processing.c **** 
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c **** uint8 memStore(int displacement)
2773:..\src/command_processing.c **** {
 20884              		.loc 1 2773 0
 20885              		.cfi_startproc
 20886              		@ args = 0, pretend = 0, frame = 24
 20887              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 457


 20888 0000 80B5     		push	{r7, lr}
 20889              		.cfi_def_cfa_offset 8
 20890              		.cfi_offset 7, -8
 20891              		.cfi_offset 14, -4
 20892 0002 86B0     		sub	sp, sp, #24
 20893              		.cfi_def_cfa_offset 32
 20894 0004 00AF     		add	r7, sp, #0
 20895              		.cfi_def_cfa_register 7
 20896 0006 7860     		str	r0, [r7, #4]
2774:..\src/command_processing.c ****     int i;  // iterator
2775:..\src/command_processing.c ****     uint8 writeStatus;
2776:..\src/command_processing.c ****     int pages;
2777:..\src/command_processing.c ****     uint8 ret_val = 1;
 20897              		.loc 1 2777 0
 20898 0008 0123     		movs	r3, #1
 20899 000a FB74     		strb	r3, [r7, #19]
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     // Disable Interrupt
2780:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20900              		.loc 1 2780 0
 20901 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c ****     // Stop motor
2783:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20902              		.loc 1 2783 0
 20903 0010 0020     		movs	r0, #0
 20904 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2786:..\src/command_processing.c ****     CySetTemp();
 20905              		.loc 1 2786 0
 20906 0016 FFF7FEFF 		bl	CySetTemp
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20907              		.loc 1 2788 0
 20908 001a 1D4A     		ldr	r2, .L800
 20909 001c 1D4B     		ldr	r3, .L800+4
 20910 001e 1046     		mov	r0, r2
 20911 0020 1946     		mov	r1, r3
 20912 0022 4FF43473 		mov	r3, #720
 20913 0026 1A46     		mov	r2, r3
 20914 0028 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 20915              		.loc 1 2790 0
 20916 002c 2D23     		movs	r3, #45
 20917 002e FB60     		str	r3, [r7, #12]
2791:..\src/command_processing.c **** 
2792:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20918              		.loc 1 2792 0
 20919 0030 0023     		movs	r3, #0
 20920 0032 7B61     		str	r3, [r7, #20]
 20921 0034 18E0     		b	.L795
 20922              	.L798:
2793:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20923              		.loc 1 2793 0
 20924 0036 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 458


 20925 0038 1B01     		lsls	r3, r3, #4
 20926 003a 1A46     		mov	r2, r3
 20927 003c 154B     		ldr	r3, .L800+4
 20928 003e D018     		adds	r0, r2, r3
 20929 0040 7B69     		ldr	r3, [r7, #20]
 20930 0042 DAB2     		uxtb	r2, r3
 20931 0044 7B68     		ldr	r3, [r7, #4]
 20932 0046 DBB2     		uxtb	r3, r3
 20933 0048 1344     		add	r3, r3, r2
 20934 004a DBB2     		uxtb	r3, r3
 20935 004c 1946     		mov	r1, r3
 20936 004e FFF7FEFF 		bl	EEPROM_Write
 20937 0052 0346     		mov	r3, r0
 20938 0054 FB72     		strb	r3, [r7, #11]
2794:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20939              		.loc 1 2794 0
 20940 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20941 0058 002B     		cmp	r3, #0
 20942 005a 02D0     		beq	.L796
2795:..\src/command_processing.c ****             ret_val = 0;
 20943              		.loc 1 2795 0
 20944 005c 0023     		movs	r3, #0
 20945 005e FB74     		strb	r3, [r7, #19]
2796:..\src/command_processing.c ****             break;
 20946              		.loc 1 2796 0
 20947 0060 06E0     		b	.L797
 20948              	.L796:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20949              		.loc 1 2792 0 discriminator 2
 20950 0062 7B69     		ldr	r3, [r7, #20]
 20951 0064 0133     		adds	r3, r3, #1
 20952 0066 7B61     		str	r3, [r7, #20]
 20953              	.L795:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20954              		.loc 1 2792 0 is_stmt 0 discriminator 1
 20955 0068 7A69     		ldr	r2, [r7, #20]
 20956 006a FB68     		ldr	r3, [r7, #12]
 20957 006c 9A42     		cmp	r2, r3
 20958 006e E2DB     		blt	.L798
 20959              	.L797:
2797:..\src/command_processing.c ****         }
2798:..\src/command_processing.c ****     }
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 20960              		.loc 1 2800 0 is_stmt 1
 20961 0070 084A     		ldr	r2, .L800+4
 20962 0072 074B     		ldr	r3, .L800
 20963 0074 1046     		mov	r0, r2
 20964 0076 1946     		mov	r1, r3
 20965 0078 4FF43473 		mov	r3, #720
 20966 007c 1A46     		mov	r2, r3
 20967 007e FFF7FEFF 		bl	memcpy
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     // Re-Enable Interrupt
2803:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20968              		.loc 1 2803 0
 20969 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 459


2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c ****     return ret_val;
 20970              		.loc 1 2805 0
 20971 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2806:..\src/command_processing.c **** }
 20972              		.loc 1 2806 0
 20973 0088 1846     		mov	r0, r3
 20974 008a 1837     		adds	r7, r7, #24
 20975              		.cfi_def_cfa_offset 8
 20976 008c BD46     		mov	sp, r7
 20977              		.cfi_def_cfa_register 13
 20978              		@ sp needed
 20979 008e 80BD     		pop	{r7, pc}
 20980              	.L801:
 20981              		.align	2
 20982              	.L800:
 20983 0090 00000000 		.word	c_mem
 20984 0094 00000000 		.word	g_mem
 20985              		.cfi_endproc
 20986              	.LFE83:
 20987              		.size	memStore, .-memStore
 20988              		.section	.text.memRecall,"ax",%progbits
 20989              		.align	2
 20990              		.global	memRecall
 20991              		.thumb
 20992              		.thumb_func
 20993              		.type	memRecall, %function
 20994              	memRecall:
 20995              	.LFB84:
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** //==============================================================================
2810:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2811:..\src/command_processing.c **** //==============================================================================
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void memRecall(void)
2815:..\src/command_processing.c **** {
 20996              		.loc 1 2815 0
 20997              		.cfi_startproc
 20998              		@ args = 0, pretend = 0, frame = 8
 20999              		@ frame_needed = 1, uses_anonymous_args = 0
 21000 0000 80B5     		push	{r7, lr}
 21001              		.cfi_def_cfa_offset 8
 21002              		.cfi_offset 7, -8
 21003              		.cfi_offset 14, -4
 21004 0002 82B0     		sub	sp, sp, #8
 21005              		.cfi_def_cfa_offset 16
 21006 0004 00AF     		add	r7, sp, #0
 21007              		.cfi_def_cfa_register 7
2816:..\src/command_processing.c ****     uint16 i;
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21008              		.loc 1 2818 0
 21009 0006 0023     		movs	r3, #0
 21010 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21011 000a 0CE0     		b	.L803
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 460


 21012              	.L804:
2819:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21013              		.loc 1 2819 0 discriminator 3
 21014 000c FB88     		ldrh	r3, [r7, #6]
 21015 000e 184A     		ldr	r2, .L808
 21016 0010 1344     		add	r3, r3, r2
 21017 0012 184A     		ldr	r2, .L808+4
 21018 0014 1168     		ldr	r1, [r2]
 21019 0016 FA88     		ldrh	r2, [r7, #6]
 21020 0018 0A44     		add	r2, r2, r1
 21021 001a 1278     		ldrb	r2, [r2]
 21022 001c D2B2     		uxtb	r2, r2
 21023 001e 1A70     		strb	r2, [r3]
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21024              		.loc 1 2818 0 discriminator 3
 21025 0020 FB88     		ldrh	r3, [r7, #6]
 21026 0022 0133     		adds	r3, r3, #1
 21027 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 21028              	.L803:
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21029              		.loc 1 2818 0 is_stmt 0 discriminator 1
 21030 0026 FB88     		ldrh	r3, [r7, #6]
 21031 0028 B3F5347F 		cmp	r3, #720
 21032 002c EED3     		bcc	.L804
2820:..\src/command_processing.c ****     }
2821:..\src/command_processing.c ****     
2822:..\src/command_processing.c ****     // Recall saved user_emg structure
2823:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 21033              		.loc 1 2823 0 is_stmt 1
 21034 002e 104B     		ldr	r3, .L808
 21035 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21036 0034 5B01     		lsls	r3, r3, #5
 21037 0036 03F51273 		add	r3, r3, #584
 21038 003a 0D4A     		ldr	r2, .L808
 21039 003c 1344     		add	r3, r3, r2
 21040 003e 1022     		movs	r2, #16
 21041 0040 1946     		mov	r1, r3
 21042 0042 0D48     		ldr	r0, .L808+8
 21043 0044 FFF7FEFF 		bl	memcpy
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c ****     //check for initialization
2826:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21044              		.loc 1 2826 0
 21045 0048 094B     		ldr	r3, .L808
 21046 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21047 004c 002B     		cmp	r3, #0
 21048 004e 02D1     		bne	.L805
2827:..\src/command_processing.c ****         memRestore();
 21049              		.loc 1 2827 0
 21050 0050 FFF7FEFF 		bl	memRestore
2828:..\src/command_processing.c ****     } else {
2829:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2830:..\src/command_processing.c ****     }        
2831:..\src/command_processing.c **** }
 21051              		.loc 1 2831 0
 21052 0054 08E0     		b	.L807
 21053              	.L805:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 461


2829:..\src/command_processing.c ****     }        
 21054              		.loc 1 2829 0
 21055 0056 094A     		ldr	r2, .L808+12
 21056 0058 054B     		ldr	r3, .L808
 21057 005a 1046     		mov	r0, r2
 21058 005c 1946     		mov	r1, r3
 21059 005e 4FF43473 		mov	r3, #720
 21060 0062 1A46     		mov	r2, r3
 21061 0064 FFF7FEFF 		bl	memcpy
 21062              	.L807:
 21063              		.loc 1 2831 0
 21064 0068 00BF     		nop
 21065 006a 0837     		adds	r7, r7, #8
 21066              		.cfi_def_cfa_offset 8
 21067 006c BD46     		mov	sp, r7
 21068              		.cfi_def_cfa_register 13
 21069              		@ sp needed
 21070 006e 80BD     		pop	{r7, pc}
 21071              	.L809:
 21072              		.align	2
 21073              	.L808:
 21074 0070 00000000 		.word	g_mem
 21075 0074 00000000 		.word	EEPROM_ADDR
 21076 0078 F0010000 		.word	g_mem+496
 21077 007c 00000000 		.word	c_mem
 21078              		.cfi_endproc
 21079              	.LFE84:
 21080              		.size	memRecall, .-memRecall
 21081              		.section	.text.memRestore,"ax",%progbits
 21082              		.align	2
 21083              		.global	memRestore
 21084              		.thumb
 21085              		.thumb_func
 21086              		.type	memRestore, %function
 21087              	memRestore:
 21088              	.LFB85:
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c **** //==============================================================================
2835:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c **** uint8 memRestore(void) {
 21089              		.loc 1 2839 0
 21090              		.cfi_startproc
 21091              		@ args = 0, pretend = 0, frame = 8
 21092              		@ frame_needed = 1, uses_anonymous_args = 0
 21093 0000 80B5     		push	{r7, lr}
 21094              		.cfi_def_cfa_offset 8
 21095              		.cfi_offset 7, -8
 21096              		.cfi_offset 14, -4
 21097 0002 82B0     		sub	sp, sp, #8
 21098              		.cfi_def_cfa_offset 16
 21099 0004 00AF     		add	r7, sp, #0
 21100              		.cfi_def_cfa_register 7
2840:..\src/command_processing.c ****     uint16 i;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 462


2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21101              		.loc 1 2842 0
 21102 0006 0023     		movs	r3, #0
 21103 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21104 000a 0EE0     		b	.L811
 21105              	.L812:
2843:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21106              		.loc 1 2843 0 discriminator 3
 21107 000c FB88     		ldrh	r3, [r7, #6]
 21108 000e 114A     		ldr	r2, .L815
 21109 0010 1344     		add	r3, r3, r2
 21110 0012 114A     		ldr	r2, .L815+4
 21111 0014 1168     		ldr	r1, [r2]
 21112 0016 FA88     		ldrh	r2, [r7, #6]
 21113 0018 02F54872 		add	r2, r2, #800
 21114 001c 0A44     		add	r2, r2, r1
 21115 001e 1278     		ldrb	r2, [r2]
 21116 0020 D2B2     		uxtb	r2, r2
 21117 0022 1A70     		strb	r2, [r3]
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21118              		.loc 1 2842 0 discriminator 3
 21119 0024 FB88     		ldrh	r3, [r7, #6]
 21120 0026 0133     		adds	r3, r3, #1
 21121 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 21122              	.L811:
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21123              		.loc 1 2842 0 is_stmt 0 discriminator 1
 21124 002a FB88     		ldrh	r3, [r7, #6]
 21125 002c B3F5347F 		cmp	r3, #720
 21126 0030 ECD3     		bcc	.L812
2844:..\src/command_processing.c ****     }
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     //check for initialization
2847:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21127              		.loc 1 2847 0 is_stmt 1
 21128 0032 084B     		ldr	r3, .L815
 21129 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21130 0036 002B     		cmp	r3, #0
 21131 0038 03D1     		bne	.L813
2848:..\src/command_processing.c ****         return memInit();
 21132              		.loc 1 2848 0
 21133 003a FFF7FEFF 		bl	memInit
 21134 003e 0346     		mov	r3, r0
 21135 0040 03E0     		b	.L814
 21136              	.L813:
2849:..\src/command_processing.c ****     } else {
2850:..\src/command_processing.c ****         return memStore(0);
 21137              		.loc 1 2850 0
 21138 0042 0020     		movs	r0, #0
 21139 0044 FFF7FEFF 		bl	memStore
 21140 0048 0346     		mov	r3, r0
 21141              	.L814:
2851:..\src/command_processing.c ****     }  
2852:..\src/command_processing.c **** }
 21142              		.loc 1 2852 0
 21143 004a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 463


 21144 004c 0837     		adds	r7, r7, #8
 21145              		.cfi_def_cfa_offset 8
 21146 004e BD46     		mov	sp, r7
 21147              		.cfi_def_cfa_register 13
 21148              		@ sp needed
 21149 0050 80BD     		pop	{r7, pc}
 21150              	.L816:
 21151 0052 00BF     		.align	2
 21152              	.L815:
 21153 0054 00000000 		.word	g_mem
 21154 0058 00000000 		.word	EEPROM_ADDR
 21155              		.cfi_endproc
 21156              	.LFE85:
 21157              		.size	memRestore, .-memRestore
 21158              		.section	.rodata
 21159 1c4b 00       		.align	2
 21160              	.LC279:
 21161 1c4c 47454E30 		.ascii	"GEN001\000"
 21161      303100
 21162              		.section	.text.memInit,"ax",%progbits
 21163              		.align	2
 21164              		.global	memInit
 21165              		.thumb
 21166              		.thumb_func
 21167              		.type	memInit, %function
 21168              	memInit:
 21169              	.LFB86:
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c **** //==============================================================================
2855:..\src/command_processing.c **** //                                                                   MEMORY INIT
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** 
2858:..\src/command_processing.c **** uint8 memInit(void)
2859:..\src/command_processing.c **** {
 21170              		.loc 1 2859 0
 21171              		.cfi_startproc
 21172              		@ args = 0, pretend = 0, frame = 8
 21173              		@ frame_needed = 1, uses_anonymous_args = 0
 21174 0000 80B5     		push	{r7, lr}
 21175              		.cfi_def_cfa_offset 8
 21176              		.cfi_offset 7, -8
 21177              		.cfi_offset 14, -4
 21178 0002 82B0     		sub	sp, sp, #8
 21179              		.cfi_def_cfa_offset 16
 21180 0004 00AF     		add	r7, sp, #0
 21181              		.cfi_def_cfa_register 7
2860:..\src/command_processing.c ****     uint8 i, j;
2861:..\src/command_processing.c **** 
2862:..\src/command_processing.c ****     //initialize memory settings
2863:..\src/command_processing.c ****     for (i=0; i<15; i++){
 21182              		.loc 1 2863 0
 21183 0006 0023     		movs	r3, #0
 21184 0008 FB71     		strb	r3, [r7, #7]
 21185 000a 07E0     		b	.L818
 21186              	.L819:
2864:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21187              		.loc 1 2864 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 464


 21188 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21189 000e B44A     		ldr	r2, .L844
 21190 0010 1344     		add	r3, r3, r2
 21191 0012 0022     		movs	r2, #0
 21192 0014 5A70     		strb	r2, [r3, #1]
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21193              		.loc 1 2863 0 discriminator 3
 21194 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21195 0018 0133     		adds	r3, r3, #1
 21196 001a FB71     		strb	r3, [r7, #7]
 21197              	.L818:
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21198              		.loc 1 2863 0 is_stmt 0 discriminator 1
 21199 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21200 001e 0E2B     		cmp	r3, #14
 21201 0020 F4D9     		bls	.L819
2865:..\src/command_processing.c ****     }
2866:..\src/command_processing.c ****         
2867:..\src/command_processing.c ****     // DEV STRUCT
2868:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 21202              		.loc 1 2868 0 is_stmt 1
 21203 0022 AF4B     		ldr	r3, .L844
 21204 0024 0122     		movs	r2, #1
 21205 0026 83F8A020 		strb	r2, [r3, #160]
2869:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 21206              		.loc 1 2869 0
 21207 002a AD4B     		ldr	r3, .L844
 21208 002c 0022     		movs	r2, #0
 21209 002e 83F8A720 		strb	r2, [r3, #167]
2870:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 21210              		.loc 1 2870 0
 21211 0032 AB4B     		ldr	r3, .L844
 21212 0034 0122     		movs	r2, #1
 21213 0036 83F8AC20 		strb	r2, [r3, #172]
2871:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 21214              		.loc 1 2871 0
 21215 003a A94B     		ldr	r3, .L844
 21216 003c 0022     		movs	r2, #0
 21217 003e 83F8A820 		strb	r2, [r3, #168]
2872:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 21218              		.loc 1 2872 0
 21219 0042 FFF7FEFF 		bl	reset_counters
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21220              		.loc 1 2873 0
 21221 0046 0023     		movs	r3, #0
 21222 0048 FB71     		strb	r3, [r7, #7]
 21223 004a 08E0     		b	.L820
 21224              	.L821:
2874:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 21225              		.loc 1 2874 0 discriminator 3
 21226 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21227 004e A44A     		ldr	r2, .L844
 21228 0050 1344     		add	r3, r3, r2
 21229 0052 0022     		movs	r2, #0
 21230 0054 83F86020 		strb	r2, [r3, #96]
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21231              		.loc 1 2873 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 465


 21232 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21233 005a 0133     		adds	r3, r3, #1
 21234 005c FB71     		strb	r3, [r7, #7]
 21235              	.L820:
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21236              		.loc 1 2873 0 is_stmt 0 discriminator 1
 21237 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21238 0060 3F2B     		cmp	r3, #63
 21239 0062 F3D9     		bls	.L821
2875:..\src/command_processing.c ****     }
2876:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 21240              		.loc 1 2876 0 is_stmt 1
 21241 0064 9E4B     		ldr	r3, .L844
 21242 0066 0022     		movs	r2, #0
 21243 0068 83F8A920 		strb	r2, [r3, #169]
2877:..\src/command_processing.c **** 
2878:..\src/command_processing.c ****     // MOTOR STRUCT
2879:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21244              		.loc 1 2879 0
 21245 006c 0023     		movs	r3, #0
 21246 006e FB71     		strb	r3, [r7, #7]
 21247 0070 15E1     		b	.L822
 21248              	.L825:
2880:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21249              		.loc 1 2880 0
 21250 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21251 0074 9A49     		ldr	r1, .L844
 21252 0076 1346     		mov	r3, r2
 21253 0078 DB00     		lsls	r3, r3, #3
 21254 007a 9B1A     		subs	r3, r3, r2
 21255 007c 1B01     		lsls	r3, r3, #4
 21256 007e 0B44     		add	r3, r3, r1
 21257 0080 B033     		adds	r3, r3, #176
 21258 0082 40F23942 		movw	r2, #1081
 21259 0086 1A60     		str	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 21260              		.loc 1 2881 0
 21261 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21262 008a 9549     		ldr	r1, .L844
 21263 008c 1346     		mov	r3, r2
 21264 008e DB00     		lsls	r3, r3, #3
 21265 0090 9B1A     		subs	r3, r3, r2
 21266 0092 1B01     		lsls	r3, r3, #4
 21267 0094 0B44     		add	r3, r3, r1
 21268 0096 B433     		adds	r3, r3, #180
 21269 0098 0022     		movs	r2, #0
 21270 009a 1A60     		str	r2, [r3]
2882:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 21271              		.loc 1 2882 0
 21272 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21273 009e 9049     		ldr	r1, .L844
 21274 00a0 1346     		mov	r3, r2
 21275 00a2 DB00     		lsls	r3, r3, #3
 21276 00a4 9B1A     		subs	r3, r3, r2
 21277 00a6 1B01     		lsls	r3, r3, #4
 21278 00a8 0B44     		add	r3, r3, r1
 21279 00aa B833     		adds	r3, r3, #184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 466


 21280 00ac 4FF4E572 		mov	r2, #458
 21281 00b0 1A60     		str	r2, [r3]
2883:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 21282              		.loc 1 2883 0
 21283 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21284 00b4 8A49     		ldr	r1, .L844
 21285 00b6 1346     		mov	r3, r2
 21286 00b8 DB00     		lsls	r3, r3, #3
 21287 00ba 9B1A     		subs	r3, r3, r2
 21288 00bc 1B01     		lsls	r3, r3, #4
 21289 00be 0B44     		add	r3, r3, r1
 21290 00c0 BC33     		adds	r3, r3, #188
 21291 00c2 4FF48032 		mov	r2, #65536
 21292 00c6 1A60     		str	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 21293              		.loc 1 2884 0
 21294 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21295 00ca 8549     		ldr	r1, .L844
 21296 00cc 1346     		mov	r3, r2
 21297 00ce DB00     		lsls	r3, r3, #3
 21298 00d0 9B1A     		subs	r3, r3, r2
 21299 00d2 1B01     		lsls	r3, r3, #4
 21300 00d4 0B44     		add	r3, r3, r1
 21301 00d6 C033     		adds	r3, r3, #192
 21302 00d8 4122     		movs	r2, #65
 21303 00da 1A60     		str	r2, [r3]
2885:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 21304              		.loc 1 2885 0
 21305 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21306 00de 8049     		ldr	r1, .L844
 21307 00e0 1346     		mov	r3, r2
 21308 00e2 DB00     		lsls	r3, r3, #3
 21309 00e4 9B1A     		subs	r3, r3, r2
 21310 00e6 1B01     		lsls	r3, r3, #4
 21311 00e8 0B44     		add	r3, r3, r1
 21312 00ea C433     		adds	r3, r3, #196
 21313 00ec 0022     		movs	r2, #0
 21314 00ee 1A60     		str	r2, [r3]
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 21315              		.loc 1 2887 0
 21316 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21317 00f2 7B49     		ldr	r1, .L844
 21318 00f4 1346     		mov	r3, r2
 21319 00f6 DB00     		lsls	r3, r3, #3
 21320 00f8 9B1A     		subs	r3, r3, r2
 21321 00fa 1B01     		lsls	r3, r3, #4
 21322 00fc 0B44     		add	r3, r3, r1
 21323 00fe C833     		adds	r3, r3, #200
 21324 0100 41F69912 		movw	r2, #6553
 21325 0104 1A60     		str	r2, [r3]
2888:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 21326              		.loc 1 2888 0
 21327 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21328 0108 7549     		ldr	r1, .L844
 21329 010a 1346     		mov	r3, r2
 21330 010c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 467


 21331 010e 9B1A     		subs	r3, r3, r2
 21332 0110 1B01     		lsls	r3, r3, #4
 21333 0112 0B44     		add	r3, r3, r1
 21334 0114 CC33     		adds	r3, r3, #204
 21335 0116 0022     		movs	r2, #0
 21336 0118 1A60     		str	r2, [r3]
2889:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 21337              		.loc 1 2889 0
 21338 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21339 011c 7049     		ldr	r1, .L844
 21340 011e 1346     		mov	r3, r2
 21341 0120 DB00     		lsls	r3, r3, #3
 21342 0122 9B1A     		subs	r3, r3, r2
 21343 0124 1B01     		lsls	r3, r3, #4
 21344 0126 0B44     		add	r3, r3, r1
 21345 0128 D033     		adds	r3, r3, #208
 21346 012a 0022     		movs	r2, #0
 21347 012c 1A60     		str	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 21348              		.loc 1 2890 0
 21349 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21350 0130 6B49     		ldr	r1, .L844
 21351 0132 1346     		mov	r3, r2
 21352 0134 DB00     		lsls	r3, r3, #3
 21353 0136 9B1A     		subs	r3, r3, r2
 21354 0138 1B01     		lsls	r3, r3, #4
 21355 013a 0B44     		add	r3, r3, r1
 21356 013c D433     		adds	r3, r3, #212
 21357 013e 44F6CC42 		movw	r2, #19660
 21358 0142 1A60     		str	r2, [r3]
2891:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 21359              		.loc 1 2891 0
 21360 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21361 0146 6649     		ldr	r1, .L844
 21362 0148 1346     		mov	r3, r2
 21363 014a DB00     		lsls	r3, r3, #3
 21364 014c 9B1A     		subs	r3, r3, r2
 21365 014e 1B01     		lsls	r3, r3, #4
 21366 0150 0B44     		add	r3, r3, r1
 21367 0152 D833     		adds	r3, r3, #216
 21368 0154 0D22     		movs	r2, #13
 21369 0156 1A60     		str	r2, [r3]
2892:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 21370              		.loc 1 2892 0
 21371 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21372 015a 6149     		ldr	r1, .L844
 21373 015c 1346     		mov	r3, r2
 21374 015e DB00     		lsls	r3, r3, #3
 21375 0160 9B1A     		subs	r3, r3, r2
 21376 0162 1B01     		lsls	r3, r3, #4
 21377 0164 0B44     		add	r3, r3, r1
 21378 0166 DC33     		adds	r3, r3, #220
 21379 0168 0022     		movs	r2, #0
 21380 016a 1A60     		str	r2, [r3]
2893:..\src/command_processing.c **** 
2894:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21381              		.loc 1 2894 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 468


 21382 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21383 016e 5C49     		ldr	r1, .L844
 21384 0170 1346     		mov	r3, r2
 21385 0172 DB00     		lsls	r3, r3, #3
 21386 0174 9B1A     		subs	r3, r3, r2
 21387 0176 1B01     		lsls	r3, r3, #4
 21388 0178 0B44     		add	r3, r3, r1
 21389 017a E033     		adds	r3, r3, #224
 21390 017c 0122     		movs	r2, #1
 21391 017e 1A70     		strb	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21392              		.loc 1 2895 0
 21393 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21394 0182 5749     		ldr	r1, .L844
 21395 0184 1346     		mov	r3, r2
 21396 0186 DB00     		lsls	r3, r3, #3
 21397 0188 9B1A     		subs	r3, r3, r2
 21398 018a 1B01     		lsls	r3, r3, #4
 21399 018c 0B44     		add	r3, r3, r1
 21400 018e E133     		adds	r3, r3, #225
 21401 0190 0022     		movs	r2, #0
 21402 0192 1A70     		strb	r2, [r3]
2896:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21403              		.loc 1 2896 0
 21404 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21405 0196 5249     		ldr	r1, .L844
 21406 0198 1346     		mov	r3, r2
 21407 019a DB00     		lsls	r3, r3, #3
 21408 019c 9B1A     		subs	r3, r3, r2
 21409 019e 1B01     		lsls	r3, r3, #4
 21410 01a0 0B44     		add	r3, r3, r1
 21411 01a2 E233     		adds	r3, r3, #226
 21412 01a4 0022     		movs	r2, #0
 21413 01a6 1A70     		strb	r2, [r3]
2897:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21414              		.loc 1 2897 0
 21415 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21416 01aa 4D49     		ldr	r1, .L844
 21417 01ac 1346     		mov	r3, r2
 21418 01ae DB00     		lsls	r3, r3, #3
 21419 01b0 9B1A     		subs	r3, r3, r2
 21420 01b2 1B01     		lsls	r3, r3, #4
 21421 01b4 0B44     		add	r3, r3, r1
 21422 01b6 03F58773 		add	r3, r3, #270
 21423 01ba 0022     		movs	r2, #0
 21424 01bc 1A70     		strb	r2, [r3]
2898:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 21425              		.loc 1 2898 0
 21426 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21427 01c0 4749     		ldr	r1, .L844
 21428 01c2 1346     		mov	r3, r2
 21429 01c4 DB00     		lsls	r3, r3, #3
 21430 01c6 9B1A     		subs	r3, r3, r2
 21431 01c8 1B01     		lsls	r3, r3, #4
 21432 01ca 0B44     		add	r3, r3, r1
 21433 01cc 03F20F13 		addw	r3, r3, #271
 21434 01d0 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 469


 21435 01d2 1A70     		strb	r2, [r3]
2899:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 21436              		.loc 1 2899 0
 21437 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21438 01d6 4249     		ldr	r1, .L844
 21439 01d8 1346     		mov	r3, r2
 21440 01da DB00     		lsls	r3, r3, #3
 21441 01dc 9B1A     		subs	r3, r3, r2
 21442 01de 1B01     		lsls	r3, r3, #4
 21443 01e0 0B44     		add	r3, r3, r1
 21444 01e2 F033     		adds	r3, r3, #240
 21445 01e4 0022     		movs	r2, #0
 21446 01e6 1A60     		str	r2, [r3]
2900:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21447              		.loc 1 2900 0
 21448 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21449 01ea 3D49     		ldr	r1, .L844
 21450 01ec 1346     		mov	r3, r2
 21451 01ee DB00     		lsls	r3, r3, #3
 21452 01f0 9B1A     		subs	r3, r3, r2
 21453 01f2 1B01     		lsls	r3, r3, #4
 21454 01f4 0B44     		add	r3, r3, r1
 21455 01f6 EC33     		adds	r3, r3, #236
 21456 01f8 0022     		movs	r2, #0
 21457 01fa 1A60     		str	r2, [r3]
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21458              		.loc 1 2901 0
 21459 01fc 0023     		movs	r3, #0
 21460 01fe BB71     		strb	r3, [r7, #6]
 21461 0200 10E0     		b	.L823
 21462              	.L824:
2902:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21463              		.loc 1 2902 0 discriminator 3
 21464 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21465 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21466 0206 3648     		ldr	r0, .L844
 21467 0208 1346     		mov	r3, r2
 21468 020a DB00     		lsls	r3, r3, #3
 21469 020c 9B1A     		subs	r3, r3, r2
 21470 020e 9B00     		lsls	r3, r3, #2
 21471 0210 0B44     		add	r3, r3, r1
 21472 0212 3C33     		adds	r3, r3, #60
 21473 0214 9B00     		lsls	r3, r3, #2
 21474 0216 0344     		add	r3, r3, r0
 21475 0218 4FF00002 		mov	r2, #0
 21476 021c 5A60     		str	r2, [r3, #4]	@ float
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21477              		.loc 1 2901 0 discriminator 3
 21478 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21479 0220 0133     		adds	r3, r3, #1
 21480 0222 BB71     		strb	r3, [r7, #6]
 21481              	.L823:
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21482              		.loc 1 2901 0 is_stmt 0 discriminator 1
 21483 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21484 0226 052B     		cmp	r3, #5
 21485 0228 EBD9     		bls	.L824
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 470


2903:..\src/command_processing.c ****         }
2904:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21486              		.loc 1 2904 0 is_stmt 1 discriminator 2
 21487 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21488 022c 2C49     		ldr	r1, .L844
 21489 022e 1346     		mov	r3, r2
 21490 0230 DB00     		lsls	r3, r3, #3
 21491 0232 9B1A     		subs	r3, r3, r2
 21492 0234 1B01     		lsls	r3, r3, #4
 21493 0236 0B44     		add	r3, r3, r1
 21494 0238 03F58673 		add	r3, r3, #268
 21495 023c 40F2DC52 		movw	r2, #1500
 21496 0240 1A80     		strh	r2, [r3]	@ movhi
2905:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21497              		.loc 1 2905 0 discriminator 2
 21498 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21499 0244 2649     		ldr	r1, .L844
 21500 0246 1346     		mov	r3, r2
 21501 0248 DB00     		lsls	r3, r3, #3
 21502 024a 9B1A     		subs	r3, r3, r2
 21503 024c 1B01     		lsls	r3, r3, #4
 21504 024e 0B44     		add	r3, r3, r1
 21505 0250 03F58873 		add	r3, r3, #272
 21506 0254 FA79     		ldrb	r2, [r7, #7]
 21507 0256 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21508              		.loc 1 2906 0 discriminator 2
 21509 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21510 025a 2149     		ldr	r1, .L844
 21511 025c 1346     		mov	r3, r2
 21512 025e DB00     		lsls	r3, r3, #3
 21513 0260 9B1A     		subs	r3, r3, r2
 21514 0262 1B01     		lsls	r3, r3, #4
 21515 0264 0B44     		add	r3, r3, r1
 21516 0266 E333     		adds	r3, r3, #227
 21517 0268 0122     		movs	r2, #1
 21518 026a 1A70     		strb	r2, [r3]
2907:..\src/command_processing.c ****         
2908:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21519              		.loc 1 2908 0 discriminator 2
 21520 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21521 026e 1C49     		ldr	r1, .L844
 21522 0270 1346     		mov	r3, r2
 21523 0272 DB00     		lsls	r3, r3, #3
 21524 0274 9B1A     		subs	r3, r3, r2
 21525 0276 1B01     		lsls	r3, r3, #4
 21526 0278 0B44     		add	r3, r3, r1
 21527 027a 03F21113 		addw	r3, r3, #273
 21528 027e 0122     		movs	r2, #1
 21529 0280 1A70     		strb	r2, [r3]
2909:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21530              		.loc 1 2909 0 discriminator 2
 21531 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21532 0284 1649     		ldr	r1, .L844
 21533 0286 1346     		mov	r3, r2
 21534 0288 DB00     		lsls	r3, r3, #3
 21535 028a 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 471


 21536 028c 1B01     		lsls	r3, r3, #4
 21537 028e 0B44     		add	r3, r3, r1
 21538 0290 03F58973 		add	r3, r3, #274
 21539 0294 0022     		movs	r2, #0
 21540 0296 1A70     		strb	r2, [r3]
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21541              		.loc 1 2879 0 discriminator 2
 21542 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21543 029a 0133     		adds	r3, r3, #1
 21544 029c FB71     		strb	r3, [r7, #7]
 21545              	.L822:
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21546              		.loc 1 2879 0 is_stmt 0 discriminator 1
 21547 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21548 02a0 012B     		cmp	r3, #1
 21549 02a2 7FF6E6AE 		bls	.L825
2910:..\src/command_processing.c ****     }
2911:..\src/command_processing.c ****     
2912:..\src/command_processing.c ****     // ENC STRUCT
2913:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21550              		.loc 1 2913 0 is_stmt 1
 21551 02a6 0023     		movs	r3, #0
 21552 02a8 FB71     		strb	r3, [r7, #7]
 21553 02aa 98E0     		b	.L826
 21554              	.L833:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21555              		.loc 1 2914 0
 21556 02ac 0023     		movs	r3, #0
 21557 02ae BB71     		strb	r3, [r7, #6]
 21558 02b0 0FE0     		b	.L827
 21559              	.L828:
2915:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21560              		.loc 1 2915 0 discriminator 3
 21561 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21562 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21563 02b6 0A48     		ldr	r0, .L844
 21564 02b8 1346     		mov	r3, r2
 21565 02ba 5B00     		lsls	r3, r3, #1
 21566 02bc 1344     		add	r3, r3, r2
 21567 02be 1B01     		lsls	r3, r3, #4
 21568 02c0 0344     		add	r3, r3, r0
 21569 02c2 0B44     		add	r3, r3, r1
 21570 02c4 03F5C873 		add	r3, r3, #400
 21571 02c8 0022     		movs	r2, #0
 21572 02ca 1A70     		strb	r2, [r3]
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21573              		.loc 1 2914 0 discriminator 3
 21574 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21575 02ce 0133     		adds	r3, r3, #1
 21576 02d0 BB71     		strb	r3, [r7, #6]
 21577              	.L827:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21578              		.loc 1 2914 0 is_stmt 0 discriminator 1
 21579 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21580 02d4 042B     		cmp	r3, #4
 21581 02d6 ECD9     		bls	.L828
2916:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 472


2917:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21582              		.loc 1 2917 0 is_stmt 1
 21583 02d8 0023     		movs	r3, #0
 21584 02da BB71     		strb	r3, [r7, #6]
 21585 02dc 2CE0     		b	.L829
 21586              	.L845:
 21587 02de 00BF     		.align	2
 21588              	.L844:
 21589 02e0 00000000 		.word	g_mem
 21590              	.L830:
2918:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21591              		.loc 1 2918 0 discriminator 3
 21592 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21593 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21594 02e8 B648     		ldr	r0, .L846
 21595 02ea 1346     		mov	r3, r2
 21596 02ec 5B00     		lsls	r3, r3, #1
 21597 02ee 1344     		add	r3, r3, r2
 21598 02f0 1B01     		lsls	r3, r3, #4
 21599 02f2 0344     		add	r3, r3, r0
 21600 02f4 0B44     		add	r3, r3, r1
 21601 02f6 03F29513 		addw	r3, r3, #405
 21602 02fa 0322     		movs	r2, #3
 21603 02fc 1A70     		strb	r2, [r3]
2919:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21604              		.loc 1 2919 0 discriminator 3
 21605 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21606 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21607 0302 B048     		ldr	r0, .L846
 21608 0304 1346     		mov	r3, r2
 21609 0306 5B00     		lsls	r3, r3, #1
 21610 0308 1344     		add	r3, r3, r2
 21611 030a 9B00     		lsls	r3, r3, #2
 21612 030c 0B44     		add	r3, r3, r1
 21613 030e 6833     		adds	r3, r3, #104
 21614 0310 9B00     		lsls	r3, r3, #2
 21615 0312 0344     		add	r3, r3, r0
 21616 0314 4FF07E52 		mov	r2, #1065353216
 21617 0318 5A60     		str	r2, [r3, #4]	@ float
2920:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21618              		.loc 1 2920 0 discriminator 3
 21619 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21620 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21621 031e A948     		ldr	r0, .L846
 21622 0320 1346     		mov	r3, r2
 21623 0322 5B00     		lsls	r3, r3, #1
 21624 0324 1344     		add	r3, r3, r2
 21625 0326 9B00     		lsls	r3, r3, #2
 21626 0328 0B44     		add	r3, r3, r1
 21627 032a 6633     		adds	r3, r3, #102
 21628 032c 0022     		movs	r2, #0
 21629 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21630              		.loc 1 2917 0 discriminator 3
 21631 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21632 0334 0133     		adds	r3, r3, #1
 21633 0336 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 473


 21634              	.L829:
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21635              		.loc 1 2917 0 is_stmt 0 discriminator 1
 21636 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21637 033a 022B     		cmp	r3, #2
 21638 033c D2D9     		bls	.L830
2921:..\src/command_processing.c ****         }
2922:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21639              		.loc 1 2922 0 is_stmt 1
 21640 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21641 0340 A049     		ldr	r1, .L846
 21642 0342 1346     		mov	r3, r2
 21643 0344 5B00     		lsls	r3, r3, #1
 21644 0346 1344     		add	r3, r3, r2
 21645 0348 1B01     		lsls	r3, r3, #4
 21646 034a 0B44     		add	r3, r3, r1
 21647 034c 03F5D873 		add	r3, r3, #432
 21648 0350 0022     		movs	r2, #0
 21649 0352 1A70     		strb	r2, [r3]
2923:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21650              		.loc 1 2923 0
 21651 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21652 0356 9B49     		ldr	r1, .L846
 21653 0358 1346     		mov	r3, r2
 21654 035a 5B00     		lsls	r3, r3, #1
 21655 035c 1344     		add	r3, r3, r2
 21656 035e 1B01     		lsls	r3, r3, #4
 21657 0360 0B44     		add	r3, r3, r1
 21658 0362 03F5DA73 		add	r3, r3, #436
 21659 0366 1622     		movs	r2, #22
 21660 0368 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21661              		.loc 1 2924 0
 21662 036a 0023     		movs	r3, #0
 21663 036c BB71     		strb	r3, [r7, #6]
 21664 036e 0FE0     		b	.L831
 21665              	.L832:
2925:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21666              		.loc 1 2925 0 discriminator 3
 21667 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21668 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21669 0374 9348     		ldr	r0, .L846
 21670 0376 1346     		mov	r3, r2
 21671 0378 5B00     		lsls	r3, r3, #1
 21672 037a 1344     		add	r3, r3, r2
 21673 037c 1B01     		lsls	r3, r3, #4
 21674 037e 0344     		add	r3, r3, r0
 21675 0380 0B44     		add	r3, r3, r1
 21676 0382 03F2B113 		addw	r3, r3, #433
 21677 0386 BA79     		ldrb	r2, [r7, #6]
 21678 0388 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21679              		.loc 1 2924 0 discriminator 3
 21680 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21681 038c 0133     		adds	r3, r3, #1
 21682 038e BB71     		strb	r3, [r7, #6]
 21683              	.L831:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 474


2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21684              		.loc 1 2924 0 is_stmt 0 discriminator 1
 21685 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21686 0392 022B     		cmp	r3, #2
 21687 0394 ECD9     		bls	.L832
2926:..\src/command_processing.c ****         }
2927:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21688              		.loc 1 2927 0 is_stmt 1 discriminator 2
 21689 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21690 0398 8A49     		ldr	r1, .L846
 21691 039a 1346     		mov	r3, r2
 21692 039c 5B00     		lsls	r3, r3, #1
 21693 039e 1344     		add	r3, r3, r2
 21694 03a0 1B01     		lsls	r3, r3, #4
 21695 03a2 0B44     		add	r3, r3, r1
 21696 03a4 03F2B513 		addw	r3, r3, #437
 21697 03a8 0F22     		movs	r2, #15
 21698 03aa 1A70     		strb	r2, [r3]
2928:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21699              		.loc 1 2928 0 discriminator 2
 21700 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21701 03ae 8549     		ldr	r1, .L846
 21702 03b0 1346     		mov	r3, r2
 21703 03b2 5B00     		lsls	r3, r3, #1
 21704 03b4 1344     		add	r3, r3, r2
 21705 03b6 1B01     		lsls	r3, r3, #4
 21706 03b8 0B44     		add	r3, r3, r1
 21707 03ba 03F5DB73 		add	r3, r3, #438
 21708 03be 0E22     		movs	r2, #14
 21709 03c0 1A70     		strb	r2, [r3]
2929:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21710              		.loc 1 2929 0 discriminator 2
 21711 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21712 03c4 7F49     		ldr	r1, .L846
 21713 03c6 1346     		mov	r3, r2
 21714 03c8 5B00     		lsls	r3, r3, #1
 21715 03ca 1344     		add	r3, r3, r2
 21716 03cc 1B01     		lsls	r3, r3, #4
 21717 03ce 0B44     		add	r3, r3, r1
 21718 03d0 03F2B713 		addw	r3, r3, #439
 21719 03d4 0122     		movs	r2, #1
 21720 03d6 1A70     		strb	r2, [r3]
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21721              		.loc 1 2913 0 discriminator 2
 21722 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21723 03da 0133     		adds	r3, r3, #1
 21724 03dc FB71     		strb	r3, [r7, #7]
 21725              	.L826:
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21726              		.loc 1 2913 0 is_stmt 0 discriminator 1
 21727 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21728 03e0 012B     		cmp	r3, #1
 21729 03e2 7FF663AF 		bls	.L833
2930:..\src/command_processing.c ****     }
2931:..\src/command_processing.c ****     
2932:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21730              		.loc 1 2932 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 475


 21731 03e6 0023     		movs	r3, #0
 21732 03e8 FB71     		strb	r3, [r7, #7]
 21733 03ea 2EE0     		b	.L834
 21734              	.L835:
2933:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21735              		.loc 1 2933 0 discriminator 3
 21736 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21737 03ee 7549     		ldr	r1, .L846
 21738 03f0 1346     		mov	r3, r2
 21739 03f2 DB00     		lsls	r3, r3, #3
 21740 03f4 9B1A     		subs	r3, r3, r2
 21741 03f6 1B01     		lsls	r3, r3, #4
 21742 03f8 0B44     		add	r3, r3, r1
 21743 03fa E433     		adds	r3, r3, #228
 21744 03fc 0022     		movs	r2, #0
 21745 03fe 1A60     		str	r2, [r3]
2934:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21746              		.loc 1 2934 0 discriminator 3
 21747 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21748 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21749 0404 6F48     		ldr	r0, .L846
 21750 0406 0B46     		mov	r3, r1
 21751 0408 DB00     		lsls	r3, r3, #3
 21752 040a 5B1A     		subs	r3, r3, r1
 21753 040c 1B01     		lsls	r3, r3, #4
 21754 040e 0344     		add	r3, r3, r0
 21755 0410 03F58873 		add	r3, r3, #272
 21756 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21757 0416 1846     		mov	r0, r3
 21758 0418 6A49     		ldr	r1, .L846
 21759 041a 0346     		mov	r3, r0
 21760 041c 5B00     		lsls	r3, r3, #1
 21761 041e 0344     		add	r3, r3, r0
 21762 0420 1B01     		lsls	r3, r3, #4
 21763 0422 0B44     		add	r3, r3, r1
 21764 0424 03F29513 		addw	r3, r3, #405
 21765 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21766 042a 1946     		mov	r1, r3
 21767 042c 44F63823 		movw	r3, #19000
 21768 0430 03FA01F1 		lsl	r1, r3, r1
 21769 0434 6348     		ldr	r0, .L846
 21770 0436 1346     		mov	r3, r2
 21771 0438 DB00     		lsls	r3, r3, #3
 21772 043a 9B1A     		subs	r3, r3, r2
 21773 043c 1B01     		lsls	r3, r3, #4
 21774 043e 0344     		add	r3, r3, r0
 21775 0440 E833     		adds	r3, r3, #232
 21776 0442 1960     		str	r1, [r3]
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21777              		.loc 1 2932 0 discriminator 3
 21778 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21779 0446 0133     		adds	r3, r3, #1
 21780 0448 FB71     		strb	r3, [r7, #7]
 21781              	.L834:
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21782              		.loc 1 2932 0 is_stmt 0 discriminator 1
 21783 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 476


 21784 044c 012B     		cmp	r3, #1
 21785 044e CDD9     		bls	.L835
2935:..\src/command_processing.c ****     }
2936:..\src/command_processing.c ****     
2937:..\src/command_processing.c ****     // EMG STRUCT     
2938:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21786              		.loc 1 2938 0 is_stmt 1
 21787 0450 5C4B     		ldr	r3, .L846
 21788 0452 C822     		movs	r2, #200
 21789 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2939:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21790              		.loc 1 2939 0
 21791 0458 5A4B     		ldr	r3, .L846
 21792 045a C822     		movs	r2, #200
 21793 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2940:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21794              		.loc 1 2940 0
 21795 0460 584B     		ldr	r3, .L846
 21796 0462 4FF48062 		mov	r2, #1024
 21797 0466 C3F8F421 		str	r2, [r3, #500]
2941:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21798              		.loc 1 2941 0
 21799 046a 564B     		ldr	r3, .L846
 21800 046c 4FF48062 		mov	r2, #1024
 21801 0470 C3F8F821 		str	r2, [r3, #504]
2942:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 21802              		.loc 1 2942 0
 21803 0474 534B     		ldr	r3, .L846
 21804 0476 6422     		movs	r2, #100
 21805 0478 83F8FC21 		strb	r2, [r3, #508]
2943:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21806              		.loc 1 2943 0
 21807 047c 514B     		ldr	r3, .L846
 21808 047e 0022     		movs	r2, #0
 21809 0480 83F8FD21 		strb	r2, [r3, #509]
2944:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21810              		.loc 1 2944 0
 21811 0484 4F4B     		ldr	r3, .L846
 21812 0486 0022     		movs	r2, #0
 21813 0488 83F8FE21 		strb	r2, [r3, #510]
2945:..\src/command_processing.c **** 
2946:..\src/command_processing.c ****     // IMU STRUCT
2947:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21814              		.loc 1 2947 0
 21815 048c 4D4B     		ldr	r3, .L846
 21816 048e 0022     		movs	r2, #0
 21817 0490 83F80022 		strb	r2, [r3, #512]
2948:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21818              		.loc 1 2948 0
 21819 0494 4B4B     		ldr	r3, .L846
 21820 0496 0022     		movs	r2, #0
 21821 0498 83F80122 		strb	r2, [r3, #513]
2949:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21822              		.loc 1 2949 0
 21823 049c 0023     		movs	r3, #0
 21824 049e FB71     		strb	r3, [r7, #7]
 21825 04a0 34E0     		b	.L836
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 477


 21826              	.L837:
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21827              		.loc 1 2950 0 discriminator 3
 21828 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21829 04a4 4749     		ldr	r1, .L846
 21830 04a6 1346     		mov	r3, r2
 21831 04a8 9B00     		lsls	r3, r3, #2
 21832 04aa 1344     		add	r3, r3, r2
 21833 04ac 0B44     		add	r3, r3, r1
 21834 04ae 03F20223 		addw	r3, r3, #514
 21835 04b2 0122     		movs	r2, #1
 21836 04b4 1A70     		strb	r2, [r3]
2951:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21837              		.loc 1 2951 0 discriminator 3
 21838 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21839 04b8 4249     		ldr	r1, .L846
 21840 04ba 1346     		mov	r3, r2
 21841 04bc 9B00     		lsls	r3, r3, #2
 21842 04be 1344     		add	r3, r3, r2
 21843 04c0 0B44     		add	r3, r3, r1
 21844 04c2 03F20323 		addw	r3, r3, #515
 21845 04c6 0122     		movs	r2, #1
 21846 04c8 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21847              		.loc 1 2952 0 discriminator 3
 21848 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21849 04cc 3D49     		ldr	r1, .L846
 21850 04ce 1346     		mov	r3, r2
 21851 04d0 9B00     		lsls	r3, r3, #2
 21852 04d2 1344     		add	r3, r3, r2
 21853 04d4 0B44     		add	r3, r3, r1
 21854 04d6 03F50173 		add	r3, r3, #516
 21855 04da 0022     		movs	r2, #0
 21856 04dc 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21857              		.loc 1 2953 0 discriminator 3
 21858 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21859 04e0 3849     		ldr	r1, .L846
 21860 04e2 1346     		mov	r3, r2
 21861 04e4 9B00     		lsls	r3, r3, #2
 21862 04e6 1344     		add	r3, r3, r2
 21863 04e8 0B44     		add	r3, r3, r1
 21864 04ea 03F20523 		addw	r3, r3, #517
 21865 04ee 0022     		movs	r2, #0
 21866 04f0 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21867              		.loc 1 2954 0 discriminator 3
 21868 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21869 04f4 3349     		ldr	r1, .L846
 21870 04f6 1346     		mov	r3, r2
 21871 04f8 9B00     		lsls	r3, r3, #2
 21872 04fa 1344     		add	r3, r3, r2
 21873 04fc 0B44     		add	r3, r3, r1
 21874 04fe 03F20623 		addw	r3, r3, #518
 21875 0502 0022     		movs	r2, #0
 21876 0504 1A70     		strb	r2, [r3]
2949:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 478


 21877              		.loc 1 2949 0 discriminator 3
 21878 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21879 0508 0133     		adds	r3, r3, #1
 21880 050a FB71     		strb	r3, [r7, #7]
 21881              	.L836:
2949:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21882              		.loc 1 2949 0 is_stmt 0 discriminator 1
 21883 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21884 050e 042B     		cmp	r3, #4
 21885 0510 C7D9     		bls	.L837
2955:..\src/command_processing.c ****     }
2956:..\src/command_processing.c ****      
2957:..\src/command_processing.c ****     // EXP STRUCT
2958:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21886              		.loc 1 2958 0 is_stmt 1
 21887 0512 2C4B     		ldr	r3, .L846
 21888 0514 0022     		movs	r2, #0
 21889 0516 83F82622 		strb	r2, [r3, #550]
2959:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21890              		.loc 1 2959 0
 21891 051a 2A4B     		ldr	r3, .L846
 21892 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21893 0520 1233     		adds	r3, r3, #18
 21894 0522 5B01     		lsls	r3, r3, #5
 21895 0524 274A     		ldr	r2, .L846
 21896 0526 1344     		add	r3, r3, r2
 21897 0528 274A     		ldr	r2, .L846+4
 21898 052a 1068     		ldr	r0, [r2]	@ unaligned
 21899 052c 1860     		str	r0, [r3]	@ unaligned
 21900 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21901 0530 9279     		ldrb	r2, [r2, #6]
 21902 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 21903 0534 9A71     		strb	r2, [r3, #6]
2960:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21904              		.loc 1 2960 0
 21905 0536 234B     		ldr	r3, .L846
 21906 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21907 053c 012B     		cmp	r3, #1
 21908 053e 13D1     		bne	.L838
2961:..\src/command_processing.c ****         // Set date of maintenance from RTC
2962:..\src/command_processing.c ****         store_RTC_current_time();
 21909              		.loc 1 2962 0
 21910 0540 FFF7FEFF 		bl	store_RTC_current_time
2963:..\src/command_processing.c ****         
2964:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21911              		.loc 1 2964 0
 21912 0544 1F4B     		ldr	r3, .L846
 21913 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21914 054a 1E4B     		ldr	r3, .L846
 21915 054c 83F8A420 		strb	r2, [r3, #164]
2965:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21916              		.loc 1 2965 0
 21917 0550 1C4B     		ldr	r3, .L846
 21918 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 21919 0556 1B4B     		ldr	r3, .L846
 21920 0558 83F8A520 		strb	r2, [r3, #165]
2966:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 479


 21921              		.loc 1 2966 0
 21922 055c 194B     		ldr	r3, .L846
 21923 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21924 0562 184B     		ldr	r3, .L846
 21925 0564 83F8A620 		strb	r2, [r3, #166]
 21926              	.L838:
2967:..\src/command_processing.c ****     }
2968:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21927              		.loc 1 2968 0
 21928 0568 164B     		ldr	r3, .L846
 21929 056a 0022     		movs	r2, #0
 21930 056c 83F82722 		strb	r2, [r3, #551]
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21931              		.loc 1 2969 0
 21932 0570 0023     		movs	r3, #0
 21933 0572 FB71     		strb	r3, [r7, #7]
 21934 0574 08E0     		b	.L839
 21935              	.L840:
2970:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21936              		.loc 1 2970 0 discriminator 3
 21937 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21938 0578 124A     		ldr	r2, .L846
 21939 057a 1344     		add	r3, r3, r2
 21940 057c 0022     		movs	r2, #0
 21941 057e 83F82822 		strb	r2, [r3, #552]
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21942              		.loc 1 2969 0 discriminator 3
 21943 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21944 0584 0133     		adds	r3, r3, #1
 21945 0586 FB71     		strb	r3, [r7, #7]
 21946              	.L839:
2969:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21947              		.loc 1 2969 0 is_stmt 0 discriminator 1
 21948 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21949 058a 0B2B     		cmp	r3, #11
 21950 058c F3D9     		bls	.L840
2971:..\src/command_processing.c ****     }
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2974:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2975:..\src/command_processing.c ****     memInit_SoftHandPro();
2976:..\src/command_processing.c **** #endif 
2977:..\src/command_processing.c **** 
2978:..\src/command_processing.c **** #ifdef MASTER_FW
2979:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
2980:..\src/command_processing.c ****     memInit_Master();
2981:..\src/command_processing.c **** #endif 
2982:..\src/command_processing.c **** 
2983:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
2984:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chmabers device
2985:..\src/command_processing.c ****     memInit_AirChambersFb();
2986:..\src/command_processing.c **** #endif 
2987:..\src/command_processing.c **** 
2988:..\src/command_processing.c ****     // Default generic user_id
2989:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21951              		.loc 1 2989 0 is_stmt 1
 21952 058e 0D4B     		ldr	r3, .L846
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 480


 21953 0590 0022     		movs	r2, #0
 21954 0592 83F8AB20 		strb	r2, [r3, #171]
2990:..\src/command_processing.c **** 
2991:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2992:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21955              		.loc 1 2992 0
 21956 0596 0B4B     		ldr	r3, .L846
 21957 0598 0122     		movs	r2, #1
 21958 059a 1A70     		strb	r2, [r3]
2993:..\src/command_processing.c ****     
2994:..\src/command_processing.c ****     //write that configuration to EEPROM
2995:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21959              		.loc 1 2995 0
 21960 059c 0020     		movs	r0, #0
 21961 059e FFF7FEFF 		bl	memStore
 21962 05a2 0346     		mov	r3, r0
 21963 05a4 002B     		cmp	r3, #0
 21964 05a6 07D0     		beq	.L841
 21965              		.loc 1 2995 0 is_stmt 0 discriminator 1
 21966 05a8 3220     		movs	r0, #50
 21967 05aa FFF7FEFF 		bl	memStore
 21968 05ae 0346     		mov	r3, r0
 21969 05b0 002B     		cmp	r3, #0
 21970 05b2 01D0     		beq	.L841
 21971              		.loc 1 2995 0 discriminator 3
 21972 05b4 0123     		movs	r3, #1
 21973 05b6 00E0     		b	.L842
 21974              	.L841:
 21975              		.loc 1 2995 0 discriminator 4
 21976 05b8 0023     		movs	r3, #0
 21977              	.L842:
 21978              		.loc 1 2995 0 discriminator 6
 21979 05ba DBB2     		uxtb	r3, r3
2996:..\src/command_processing.c **** }
 21980              		.loc 1 2996 0 is_stmt 1 discriminator 6
 21981 05bc 1846     		mov	r0, r3
 21982 05be 0837     		adds	r7, r7, #8
 21983              		.cfi_def_cfa_offset 8
 21984 05c0 BD46     		mov	sp, r7
 21985              		.cfi_def_cfa_register 13
 21986              		@ sp needed
 21987 05c2 80BD     		pop	{r7, pc}
 21988              	.L847:
 21989              		.align	2
 21990              	.L846:
 21991 05c4 00000000 		.word	g_mem
 21992 05c8 4C1C0000 		.word	.LC279
 21993              		.cfi_endproc
 21994              	.LFE86:
 21995              		.size	memInit, .-memInit
 21996              		.section	.rodata
 21997 1c53 00       		.align	2
 21998              	.LC280:
 21999 1c54 55535230 		.ascii	"USR001\000"
 21999      303100
 22000              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 22001              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 481


 22002              		.global	memInit_SoftHandPro
 22003              		.thumb
 22004              		.thumb_func
 22005              		.type	memInit_SoftHandPro, %function
 22006              	memInit_SoftHandPro:
 22007              	.LFB87:
2997:..\src/command_processing.c **** 
2998:..\src/command_processing.c **** //==============================================================================
2999:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3000:..\src/command_processing.c **** //==============================================================================
3001:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3002:..\src/command_processing.c **** {
 22008              		.loc 1 3002 0
 22009              		.cfi_startproc
 22010              		@ args = 0, pretend = 0, frame = 8
 22011              		@ frame_needed = 1, uses_anonymous_args = 0
 22012              		@ link register save eliminated.
 22013 0000 80B4     		push	{r7}
 22014              		.cfi_def_cfa_offset 4
 22015              		.cfi_offset 7, -4
 22016 0002 83B0     		sub	sp, sp, #12
 22017              		.cfi_def_cfa_offset 16
 22018 0004 00AF     		add	r7, sp, #0
 22019              		.cfi_def_cfa_register 7
3003:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 22020              		.loc 1 3003 0
 22021 0006 0023     		movs	r3, #0
 22022 0008 FB70     		strb	r3, [r7, #3]
3004:..\src/command_processing.c ****     
3005:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3006:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22023              		.loc 1 3006 0
 22024 000a 874B     		ldr	r3, .L851
 22025 000c 0122     		movs	r2, #1
 22026 000e 83F8A720 		strb	r2, [r3, #167]
3007:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 22027              		.loc 1 3007 0
 22028 0012 854B     		ldr	r3, .L851
 22029 0014 0022     		movs	r2, #0
 22030 0016 83F8AC20 		strb	r2, [r3, #172]
3008:..\src/command_processing.c ****     
3009:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 22031              		.loc 1 3009 0
 22032 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22033 001c 8249     		ldr	r1, .L851
 22034 001e 1346     		mov	r3, r2
 22035 0020 DB00     		lsls	r3, r3, #3
 22036 0022 9B1A     		subs	r3, r3, r2
 22037 0024 1B01     		lsls	r3, r3, #4
 22038 0026 0B44     		add	r3, r3, r1
 22039 0028 E033     		adds	r3, r3, #224
 22040 002a 0122     		movs	r2, #1
 22041 002c 1A70     		strb	r2, [r3]
3010:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 22042              		.loc 1 3010 0
 22043 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22044 0030 7D49     		ldr	r1, .L851
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 482


 22045 0032 1346     		mov	r3, r2
 22046 0034 DB00     		lsls	r3, r3, #3
 22047 0036 9B1A     		subs	r3, r3, r2
 22048 0038 1B01     		lsls	r3, r3, #4
 22049 003a 0B44     		add	r3, r3, r1
 22050 003c 03F58773 		add	r3, r3, #270
 22051 0040 0022     		movs	r2, #0
 22052 0042 1A70     		strb	r2, [r3]
3011:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 22053              		.loc 1 3011 0
 22054 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22055 0046 7849     		ldr	r1, .L851
 22056 0048 1346     		mov	r3, r2
 22057 004a DB00     		lsls	r3, r3, #3
 22058 004c 9B1A     		subs	r3, r3, r2
 22059 004e 1B01     		lsls	r3, r3, #4
 22060 0050 0B44     		add	r3, r3, r1
 22061 0052 03F20F13 		addw	r3, r3, #271
 22062 0056 0022     		movs	r2, #0
 22063 0058 1A70     		strb	r2, [r3]
3012:..\src/command_processing.c ****     
3013:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3014:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 22064              		.loc 1 3014 0
 22065 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22066 005c 724B     		ldr	r3, .L851
 22067 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 22068 0062 7149     		ldr	r1, .L851
 22069 0064 1346     		mov	r3, r2
 22070 0066 DB00     		lsls	r3, r3, #3
 22071 0068 9B1A     		subs	r3, r3, r2
 22072 006a 1B01     		lsls	r3, r3, #4
 22073 006c 0B44     		add	r3, r3, r1
 22074 006e 03F58873 		add	r3, r3, #272
 22075 0072 0246     		mov	r2, r0
 22076 0074 1A70     		strb	r2, [r3]
3015:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22077              		.loc 1 3015 0
 22078 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22079 0078 6B49     		ldr	r1, .L851
 22080 007a 1346     		mov	r3, r2
 22081 007c DB00     		lsls	r3, r3, #3
 22082 007e 9B1A     		subs	r3, r3, r2
 22083 0080 1B01     		lsls	r3, r3, #4
 22084 0082 0B44     		add	r3, r3, r1
 22085 0084 03F21113 		addw	r3, r3, #273
 22086 0088 0122     		movs	r2, #1
 22087 008a 1A70     		strb	r2, [r3]
3016:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 22088              		.loc 1 3016 0
 22089 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22090 008e 6649     		ldr	r1, .L851
 22091 0090 1346     		mov	r3, r2
 22092 0092 DB00     		lsls	r3, r3, #3
 22093 0094 9B1A     		subs	r3, r3, r2
 22094 0096 1B01     		lsls	r3, r3, #4
 22095 0098 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 483


 22096 009a 03F58973 		add	r3, r3, #274
 22097 009e 0122     		movs	r2, #1
 22098 00a0 1A70     		strb	r2, [r3]
3017:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 22099              		.loc 1 3017 0
 22100 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22101 00a4 6049     		ldr	r1, .L851
 22102 00a6 1346     		mov	r3, r2
 22103 00a8 DB00     		lsls	r3, r3, #3
 22104 00aa 9B1A     		subs	r3, r3, r2
 22105 00ac 1B01     		lsls	r3, r3, #4
 22106 00ae 0B44     		add	r3, r3, r1
 22107 00b0 E433     		adds	r3, r3, #228
 22108 00b2 0022     		movs	r2, #0
 22109 00b4 1A60     		str	r2, [r3]
3018:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 22110              		.loc 1 3018 0
 22111 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22112 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 22113 00ba 5B48     		ldr	r0, .L851
 22114 00bc 0B46     		mov	r3, r1
 22115 00be DB00     		lsls	r3, r3, #3
 22116 00c0 5B1A     		subs	r3, r3, r1
 22117 00c2 1B01     		lsls	r3, r3, #4
 22118 00c4 0344     		add	r3, r3, r0
 22119 00c6 03F58873 		add	r3, r3, #272
 22120 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22121 00cc 1846     		mov	r0, r3
 22122 00ce 5649     		ldr	r1, .L851
 22123 00d0 0346     		mov	r3, r0
 22124 00d2 5B00     		lsls	r3, r3, #1
 22125 00d4 0344     		add	r3, r3, r0
 22126 00d6 1B01     		lsls	r3, r3, #4
 22127 00d8 0B44     		add	r3, r3, r1
 22128 00da 03F29513 		addw	r3, r3, #405
 22129 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22130 00e0 1946     		mov	r1, r3
 22131 00e2 4FF47A53 		mov	r3, #16000
 22132 00e6 03FA01F1 		lsl	r1, r3, r1
 22133 00ea 4F48     		ldr	r0, .L851
 22134 00ec 1346     		mov	r3, r2
 22135 00ee DB00     		lsls	r3, r3, #3
 22136 00f0 9B1A     		subs	r3, r3, r2
 22137 00f2 1B01     		lsls	r3, r3, #4
 22138 00f4 0344     		add	r3, r3, r0
 22139 00f6 E833     		adds	r3, r3, #232
 22140 00f8 1960     		str	r1, [r3]
 22141              	.LBB21:
3019:..\src/command_processing.c ****     
3020:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 22142              		.loc 1 3020 0
 22143 00fa 0023     		movs	r3, #0
 22144 00fc 7B60     		str	r3, [r7, #4]
 22145 00fe 2EE0     		b	.L849
 22146              	.L850:
3021:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3022:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 484


 22147              		.loc 1 3022 0 discriminator 3
 22148 0100 4949     		ldr	r1, .L851
 22149 0102 7A68     		ldr	r2, [r7, #4]
 22150 0104 1346     		mov	r3, r2
 22151 0106 5B00     		lsls	r3, r3, #1
 22152 0108 1344     		add	r3, r3, r2
 22153 010a 1B01     		lsls	r3, r3, #4
 22154 010c 0B44     		add	r3, r3, r1
 22155 010e 03F5D873 		add	r3, r3, #432
 22156 0112 0122     		movs	r2, #1
 22157 0114 1A70     		strb	r2, [r3]
3023:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 22158              		.loc 1 3023 0 discriminator 3
 22159 0116 4449     		ldr	r1, .L851
 22160 0118 7A68     		ldr	r2, [r7, #4]
 22161 011a 1346     		mov	r3, r2
 22162 011c 5B00     		lsls	r3, r3, #1
 22163 011e 1344     		add	r3, r3, r2
 22164 0120 1B01     		lsls	r3, r3, #4
 22165 0122 0B44     		add	r3, r3, r1
 22166 0124 03F2B513 		addw	r3, r3, #437
 22167 0128 2322     		movs	r2, #35
 22168 012a 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 22169              		.loc 1 3024 0 discriminator 3
 22170 012c 3E49     		ldr	r1, .L851
 22171 012e 7A68     		ldr	r2, [r7, #4]
 22172 0130 1346     		mov	r3, r2
 22173 0132 5B00     		lsls	r3, r3, #1
 22174 0134 1344     		add	r3, r3, r2
 22175 0136 1B01     		lsls	r3, r3, #4
 22176 0138 0B44     		add	r3, r3, r1
 22177 013a 03F5DB73 		add	r3, r3, #438
 22178 013e 0322     		movs	r2, #3
 22179 0140 1A70     		strb	r2, [r3]
3025:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 22180              		.loc 1 3025 0 discriminator 3
 22181 0142 3949     		ldr	r1, .L851
 22182 0144 7A68     		ldr	r2, [r7, #4]
 22183 0146 1346     		mov	r3, r2
 22184 0148 5B00     		lsls	r3, r3, #1
 22185 014a 1344     		add	r3, r3, r2
 22186 014c 1B01     		lsls	r3, r3, #4
 22187 014e 0B44     		add	r3, r3, r1
 22188 0150 03F2B713 		addw	r3, r3, #439
 22189 0154 FF22     		movs	r2, #255
 22190 0156 1A70     		strb	r2, [r3]
3020:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22191              		.loc 1 3020 0 discriminator 3
 22192 0158 7B68     		ldr	r3, [r7, #4]
 22193 015a 0133     		adds	r3, r3, #1
 22194 015c 7B60     		str	r3, [r7, #4]
 22195              	.L849:
3020:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22196              		.loc 1 3020 0 is_stmt 0 discriminator 1
 22197 015e 7B68     		ldr	r3, [r7, #4]
 22198 0160 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 485


 22199 0162 CDDD     		ble	.L850
 22200              	.LBE21:
3026:..\src/command_processing.c ****     }
3027:..\src/command_processing.c ****     
3028:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 22201              		.loc 1 3028 0 is_stmt 1
 22202 0164 304B     		ldr	r3, .L851
 22203 0166 0022     		movs	r2, #0
 22204 0168 83F8FD21 		strb	r2, [r3, #509]
3029:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22205              		.loc 1 3029 0
 22206 016c 2E4B     		ldr	r3, .L851
 22207 016e 4FF48062 		mov	r2, #1024
 22208 0172 C3F8F421 		str	r2, [r3, #500]
3030:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 22209              		.loc 1 3030 0
 22210 0176 2C4B     		ldr	r3, .L851
 22211 0178 4FF48062 		mov	r2, #1024
 22212 017c C3F8F821 		str	r2, [r3, #504]
3031:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22213              		.loc 1 3031 0
 22214 0180 294B     		ldr	r3, .L851
 22215 0182 C822     		movs	r2, #200
 22216 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3032:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22217              		.loc 1 3032 0
 22218 0188 274B     		ldr	r3, .L851
 22219 018a C822     		movs	r2, #200
 22220 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3033:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 22221              		.loc 1 3033 0
 22222 0190 254B     		ldr	r3, .L851
 22223 0192 6422     		movs	r2, #100
 22224 0194 83F8FC21 		strb	r2, [r3, #508]
3034:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 22225              		.loc 1 3034 0
 22226 0198 234B     		ldr	r3, .L851
 22227 019a 0022     		movs	r2, #0
 22228 019c 83F8FE21 		strb	r2, [r3, #510]
3035:..\src/command_processing.c ****     
3036:..\src/command_processing.c ****     //Initialize rest position parameters  
3037:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 22229              		.loc 1 3037 0
 22230 01a0 214B     		ldr	r3, .L851
 22231 01a2 0022     		movs	r2, #0
 22232 01a4 83F8AC22 		strb	r2, [r3, #684]
3038:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 22233              		.loc 1 3038 0
 22234 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22235 01aa 1F49     		ldr	r1, .L851
 22236 01ac 1346     		mov	r3, r2
 22237 01ae DB00     		lsls	r3, r3, #3
 22238 01b0 9B1A     		subs	r3, r3, r2
 22239 01b2 1B01     		lsls	r3, r3, #4
 22240 01b4 0B44     		add	r3, r3, r1
 22241 01b6 03F58873 		add	r3, r3, #272
 22242 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 486


 22243 01bc 1946     		mov	r1, r3
 22244 01be 1A4A     		ldr	r2, .L851
 22245 01c0 0B46     		mov	r3, r1
 22246 01c2 5B00     		lsls	r3, r3, #1
 22247 01c4 0B44     		add	r3, r3, r1
 22248 01c6 1B01     		lsls	r3, r3, #4
 22249 01c8 1344     		add	r3, r3, r2
 22250 01ca 03F29513 		addw	r3, r3, #405
 22251 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22252 01d0 1A46     		mov	r2, r3
 22253 01d2 41F65833 		movw	r3, #7000
 22254 01d6 9340     		lsls	r3, r3, r2
 22255 01d8 134A     		ldr	r2, .L851
 22256 01da C2F8A032 		str	r3, [r2, #672]
3039:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 22257              		.loc 1 3039 0
 22258 01de 124B     		ldr	r3, .L851
 22259 01e0 0A22     		movs	r2, #10
 22260 01e2 C3F8A422 		str	r2, [r3, #676]
3040:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 22261              		.loc 1 3040 0
 22262 01e6 104B     		ldr	r3, .L851
 22263 01e8 42F21072 		movw	r2, #10000
 22264 01ec C3F8A822 		str	r2, [r3, #680]
3041:..\src/command_processing.c **** 	
3042:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22265              		.loc 1 3042 0
 22266 01f0 0D4B     		ldr	r3, .L851
 22267 01f2 0022     		movs	r2, #0
 22268 01f4 83F80022 		strb	r2, [r3, #512]
3043:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22269              		.loc 1 3043 0
 22270 01f8 0B4B     		ldr	r3, .L851
 22271 01fa 0022     		movs	r2, #0
 22272 01fc 83F82622 		strb	r2, [r3, #550]
3044:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 22273              		.loc 1 3044 0
 22274 0200 094B     		ldr	r3, .L851
 22275 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22276 0206 1233     		adds	r3, r3, #18
 22277 0208 5B01     		lsls	r3, r3, #5
 22278 020a 074A     		ldr	r2, .L851
 22279 020c 1344     		add	r3, r3, r2
 22280 020e 074A     		ldr	r2, .L851+4
 22281 0210 1068     		ldr	r0, [r2]	@ unaligned
 22282 0212 1860     		str	r0, [r3]	@ unaligned
 22283 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22284 0216 9279     		ldrb	r2, [r2, #6]
 22285 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 22286 021a 9A71     		strb	r2, [r3, #6]
3045:..\src/command_processing.c **** }
 22287              		.loc 1 3045 0
 22288 021c 00BF     		nop
 22289 021e 0C37     		adds	r7, r7, #12
 22290              		.cfi_def_cfa_offset 4
 22291 0220 BD46     		mov	sp, r7
 22292              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 487


 22293              		@ sp needed
 22294 0222 80BC     		pop	{r7}
 22295              		.cfi_restore 7
 22296              		.cfi_def_cfa_offset 0
 22297 0224 7047     		bx	lr
 22298              	.L852:
 22299 0226 00BF     		.align	2
 22300              	.L851:
 22301 0228 00000000 		.word	g_mem
 22302 022c 541C0000 		.word	.LC280
 22303              		.cfi_endproc
 22304              	.LFE87:
 22305              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 22306              		.section	.text.memInit_Master,"ax",%progbits
 22307              		.align	2
 22308              		.global	memInit_Master
 22309              		.thumb
 22310              		.thumb_func
 22311              		.type	memInit_Master, %function
 22312              	memInit_Master:
 22313              	.LFB88:
3046:..\src/command_processing.c **** 
3047:..\src/command_processing.c **** //==============================================================================
3048:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3049:..\src/command_processing.c **** //==============================================================================
3050:..\src/command_processing.c **** void memInit_Master(void)
3051:..\src/command_processing.c **** {
 22314              		.loc 1 3051 0
 22315              		.cfi_startproc
 22316              		@ args = 0, pretend = 0, frame = 0
 22317              		@ frame_needed = 1, uses_anonymous_args = 0
 22318              		@ link register save eliminated.
 22319 0000 80B4     		push	{r7}
 22320              		.cfi_def_cfa_offset 4
 22321              		.cfi_offset 7, -4
 22322 0002 00AF     		add	r7, sp, #0
 22323              		.cfi_def_cfa_register 7
3052:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 22324              		.loc 1 3052 0
 22325 0004 074B     		ldr	r3, .L854
 22326 0006 0222     		movs	r2, #2
 22327 0008 83F8A020 		strb	r2, [r3, #160]
3053:..\src/command_processing.c ****     
3054:..\src/command_processing.c ****     // MS STRUCT
3055:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 22328              		.loc 1 3055 0
 22329 000c 054B     		ldr	r3, .L854
 22330 000e 0122     		movs	r2, #1
 22331 0010 83F8B122 		strb	r2, [r3, #689]
3056:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 22332              		.loc 1 3056 0
 22333 0014 034B     		ldr	r3, .L854
 22334 0016 0022     		movs	r2, #0
 22335 0018 83F8B022 		strb	r2, [r3, #688]
3057:..\src/command_processing.c **** }
 22336              		.loc 1 3057 0
 22337 001c 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 488


 22338 001e BD46     		mov	sp, r7
 22339              		.cfi_def_cfa_register 13
 22340              		@ sp needed
 22341 0020 80BC     		pop	{r7}
 22342              		.cfi_restore 7
 22343              		.cfi_def_cfa_offset 0
 22344 0022 7047     		bx	lr
 22345              	.L855:
 22346              		.align	2
 22347              	.L854:
 22348 0024 00000000 		.word	g_mem
 22349              		.cfi_endproc
 22350              	.LFE88:
 22351              		.size	memInit_Master, .-memInit_Master
 22352              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 22353              		.align	2
 22354              		.global	memInit_AirChambersFb
 22355              		.thumb
 22356              		.thumb_func
 22357              		.type	memInit_AirChambersFb, %function
 22358              	memInit_AirChambersFb:
 22359              	.LFB89:
3058:..\src/command_processing.c **** 
3059:..\src/command_processing.c **** //==============================================================================
3060:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3061:..\src/command_processing.c **** //==============================================================================
3062:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3063:..\src/command_processing.c **** {
 22360              		.loc 1 3063 0
 22361              		.cfi_startproc
 22362              		@ args = 0, pretend = 0, frame = 0
 22363              		@ frame_needed = 1, uses_anonymous_args = 0
 22364              		@ link register save eliminated.
 22365 0000 80B4     		push	{r7}
 22366              		.cfi_def_cfa_offset 4
 22367              		.cfi_offset 7, -4
 22368 0002 00AF     		add	r7, sp, #0
 22369              		.cfi_def_cfa_register 7
3064:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3065:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 22370              		.loc 1 3065 0
 22371 0004 1A4B     		ldr	r3, .L857
 22372 0006 0222     		movs	r2, #2
 22373 0008 83F8AC20 		strb	r2, [r3, #172]
3066:..\src/command_processing.c ****     
3067:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 22374              		.loc 1 3067 0
 22375 000c 184B     		ldr	r3, .L857
 22376 000e 0122     		movs	r2, #1
 22377 0010 83F80F21 		strb	r2, [r3, #271]
3068:..\src/command_processing.c ****     
3069:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3070:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3071:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22378              		.loc 1 3071 0
 22379 0014 164B     		ldr	r3, .L857
 22380 0016 0422     		movs	r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 489


 22381 0018 83F87E21 		strb	r2, [r3, #382]
3072:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22382              		.loc 1 3072 0
 22383 001c 144B     		ldr	r3, .L857
 22384 001e 0022     		movs	r2, #0
 22385 0020 C3F85421 		str	r2, [r3, #340]
3073:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22386              		.loc 1 3073 0
 22387 0024 124B     		ldr	r3, .L857
 22388 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22389 002a 1946     		mov	r1, r3
 22390 002c 104A     		ldr	r2, .L857
 22391 002e 0B46     		mov	r3, r1
 22392 0030 5B00     		lsls	r3, r3, #1
 22393 0032 0B44     		add	r3, r3, r1
 22394 0034 1B01     		lsls	r3, r3, #4
 22395 0036 1344     		add	r3, r3, r2
 22396 0038 03F29513 		addw	r3, r3, #405
 22397 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22398 003e 1A46     		mov	r2, r3
 22399 0040 45F2F053 		movw	r3, #22000
 22400 0044 9340     		lsls	r3, r3, r2
 22401 0046 0A4A     		ldr	r2, .L857
 22402 0048 C2F85831 		str	r3, [r2, #344]
3074:..\src/command_processing.c ****     
3075:..\src/command_processing.c ****     // FB STRUCT
3076:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 22403              		.loc 1 3076 0
 22404 004c 084B     		ldr	r3, .L857
 22405 004e 4FF4E172 		mov	r2, #450
 22406 0052 C3F8C022 		str	r2, [r3, #704]
3077:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 22407              		.loc 1 3077 0
 22408 0056 064B     		ldr	r3, .L857
 22409 0058 064A     		ldr	r2, .L857+4
 22410 005a C3F8C422 		str	r2, [r3, #708]	@ float
3078:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 22411              		.loc 1 3078 0
 22412 005e 044B     		ldr	r3, .L857
 22413 0060 4FF07E52 		mov	r2, #1065353216
 22414 0064 C3F8C822 		str	r2, [r3, #712]	@ float
3079:..\src/command_processing.c **** }
 22415              		.loc 1 3079 0
 22416 0068 00BF     		nop
 22417 006a BD46     		mov	sp, r7
 22418              		.cfi_def_cfa_register 13
 22419              		@ sp needed
 22420 006c 80BC     		pop	{r7}
 22421              		.cfi_restore 7
 22422              		.cfi_def_cfa_offset 0
 22423 006e 7047     		bx	lr
 22424              	.L858:
 22425              		.align	2
 22426              	.L857:
 22427 0070 00000000 		.word	g_mem
 22428 0074 0000C841 		.word	1103626240
 22429              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 490


 22430              	.LFE89:
 22431              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 22432              		.section	.text.cmd_get_measurements,"ax",%progbits
 22433              		.align	2
 22434              		.global	cmd_get_measurements
 22435              		.thumb
 22436              		.thumb_func
 22437              		.type	cmd_get_measurements, %function
 22438              	cmd_get_measurements:
 22439              	.LFB90:
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c **** //==============================================================================
3082:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3083:..\src/command_processing.c **** //==============================================================================
3084:..\src/command_processing.c **** /**
3085:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3086:..\src/command_processing.c **** **/
3087:..\src/command_processing.c **** 
3088:..\src/command_processing.c **** void cmd_get_measurements(){
 22440              		.loc 1 3088 0
 22441              		.cfi_startproc
 22442              		@ args = 0, pretend = 0, frame = 16
 22443              		@ frame_needed = 1, uses_anonymous_args = 0
 22444 0000 90B5     		push	{r4, r7, lr}
 22445              		.cfi_def_cfa_offset 12
 22446              		.cfi_offset 4, -12
 22447              		.cfi_offset 7, -8
 22448              		.cfi_offset 14, -4
 22449 0002 85B0     		sub	sp, sp, #20
 22450              		.cfi_def_cfa_offset 32
 22451 0004 00AF     		add	r7, sp, #0
 22452              		.cfi_def_cfa_register 7
3089:..\src/command_processing.c ****  
3090:..\src/command_processing.c ****     uint8 CYDATA index;
3091:..\src/command_processing.c ****     int16 aux_int16;
3092:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3093:..\src/command_processing.c ****     
3094:..\src/command_processing.c ****     uint8 packet_data[8]; 
3095:..\src/command_processing.c ****     
3096:..\src/command_processing.c ****     //Header package
3097:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22453              		.loc 1 3097 0
 22454 0006 8423     		movs	r3, #132
 22455 0008 3B71     		strb	r3, [r7, #4]
3098:..\src/command_processing.c ****     
3099:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22456              		.loc 1 3099 0
 22457 000a 0323     		movs	r3, #3
 22458 000c FB73     		strb	r3, [r7, #15]
 22459 000e 38E0     		b	.L860
 22460              	.L861:
3100:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22461              		.loc 1 3100 0
 22462 0010 264B     		ldr	r3, .L862
 22463 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22464 0016 1A46     		mov	r2, r3
 22465 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 491


 22466 001a 2548     		ldr	r0, .L862+4
 22467 001c 1346     		mov	r3, r2
 22468 001e 5B00     		lsls	r3, r3, #1
 22469 0020 1344     		add	r3, r3, r2
 22470 0022 9B00     		lsls	r3, r3, #2
 22471 0024 1344     		add	r3, r3, r2
 22472 0026 0B44     		add	r3, r3, r1
 22473 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22474 002c 1F4B     		ldr	r3, .L862
 22475 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22476 0032 1C46     		mov	r4, r3
 22477 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22478 0036 1D48     		ldr	r0, .L862
 22479 0038 2346     		mov	r3, r4
 22480 003a 5B00     		lsls	r3, r3, #1
 22481 003c 2344     		add	r3, r3, r4
 22482 003e 1B01     		lsls	r3, r3, #4
 22483 0040 0344     		add	r3, r3, r0
 22484 0042 0B44     		add	r3, r3, r1
 22485 0044 03F29513 		addw	r3, r3, #405
 22486 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22487 004a 42FA03F3 		asr	r3, r2, r3
 22488 004e 1BB2     		sxth	r3, r3
 22489 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3101:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22490              		.loc 1 3101 0
 22491 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22492 0054 5B00     		lsls	r3, r3, #1
 22493 0056 0233     		adds	r3, r3, #2
 22494 0058 07F10C02 		add	r2, r7, #12
 22495 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22496 005e 07F11001 		add	r1, r7, #16
 22497 0062 0B44     		add	r3, r3, r1
 22498 0064 03F80C2C 		strb	r2, [r3, #-12]
3102:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22499              		.loc 1 3102 0
 22500 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22501 006a 5B00     		lsls	r3, r3, #1
 22502 006c 5A1C     		adds	r2, r3, #1
 22503 006e 07F10C03 		add	r3, r7, #12
 22504 0072 0133     		adds	r3, r3, #1
 22505 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22506 0076 07F11003 		add	r3, r7, #16
 22507 007a 1344     		add	r3, r3, r2
 22508 007c 0A46     		mov	r2, r1
 22509 007e 03F80C2C 		strb	r2, [r3, #-12]
 22510              	.L860:
3099:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22511              		.loc 1 3099 0 discriminator 1
 22512 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22513 0084 5A1E     		subs	r2, r3, #1
 22514 0086 FA73     		strb	r2, [r7, #15]
 22515 0088 002B     		cmp	r3, #0
 22516 008a C1D1     		bne	.L861
3103:..\src/command_processing.c ****     }
3104:..\src/command_processing.c **** 
3105:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 492


3106:..\src/command_processing.c **** 
3107:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22517              		.loc 1 3107 0
 22518 008c 3B1D     		adds	r3, r7, #4
 22519 008e 0721     		movs	r1, #7
 22520 0090 1846     		mov	r0, r3
 22521 0092 FFF7FEFF 		bl	LCRChecksum
 22522 0096 0346     		mov	r3, r0
 22523 0098 FB72     		strb	r3, [r7, #11]
3108:..\src/command_processing.c **** 
3109:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22524              		.loc 1 3109 0
 22525 009a 3B1D     		adds	r3, r7, #4
 22526 009c 0821     		movs	r1, #8
 22527 009e 1846     		mov	r0, r3
 22528 00a0 FFF7FEFF 		bl	commWrite
3110:..\src/command_processing.c ****    
3111:..\src/command_processing.c **** }
 22529              		.loc 1 3111 0
 22530 00a4 00BF     		nop
 22531 00a6 1437     		adds	r7, r7, #20
 22532              		.cfi_def_cfa_offset 12
 22533 00a8 BD46     		mov	sp, r7
 22534              		.cfi_def_cfa_register 13
 22535              		@ sp needed
 22536 00aa 90BD     		pop	{r4, r7, pc}
 22537              	.L863:
 22538              		.align	2
 22539              	.L862:
 22540 00ac 00000000 		.word	g_mem
 22541 00b0 00000000 		.word	g_measOld
 22542              		.cfi_endproc
 22543              	.LFE90:
 22544              		.size	cmd_get_measurements, .-cmd_get_measurements
 22545              		.section	.text.cmd_get_velocities,"ax",%progbits
 22546              		.align	2
 22547              		.global	cmd_get_velocities
 22548              		.thumb
 22549              		.thumb_func
 22550              		.type	cmd_get_velocities, %function
 22551              	cmd_get_velocities:
 22552              	.LFB91:
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** void cmd_get_velocities(){
 22553              		.loc 1 3113 0
 22554              		.cfi_startproc
 22555              		@ args = 0, pretend = 0, frame = 16
 22556              		@ frame_needed = 1, uses_anonymous_args = 0
 22557 0000 90B5     		push	{r4, r7, lr}
 22558              		.cfi_def_cfa_offset 12
 22559              		.cfi_offset 4, -12
 22560              		.cfi_offset 7, -8
 22561              		.cfi_offset 14, -4
 22562 0002 85B0     		sub	sp, sp, #20
 22563              		.cfi_def_cfa_offset 32
 22564 0004 00AF     		add	r7, sp, #0
 22565              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 493


3114:..\src/command_processing.c ****  
3115:..\src/command_processing.c ****     uint8 CYDATA index;
3116:..\src/command_processing.c ****     int16 aux_int16;
3117:..\src/command_processing.c ****    
3118:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3119:..\src/command_processing.c ****     
3120:..\src/command_processing.c ****     uint8 packet_data[8]; 
3121:..\src/command_processing.c ****     
3122:..\src/command_processing.c ****     //Header package
3123:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22566              		.loc 1 3123 0
 22567 0006 8923     		movs	r3, #137
 22568 0008 3B71     		strb	r3, [r7, #4]
3124:..\src/command_processing.c ****     
3125:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22569              		.loc 1 3125 0
 22570 000a 0323     		movs	r3, #3
 22571 000c FB73     		strb	r3, [r7, #15]
 22572 000e 3AE0     		b	.L865
 22573              	.L866:
3126:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22574              		.loc 1 3126 0
 22575 0010 274B     		ldr	r3, .L867
 22576 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22577 0016 1A46     		mov	r2, r3
 22578 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22579 001a 2648     		ldr	r0, .L867+4
 22580 001c 1346     		mov	r3, r2
 22581 001e 5B00     		lsls	r3, r3, #1
 22582 0020 1344     		add	r3, r3, r2
 22583 0022 9B00     		lsls	r3, r3, #2
 22584 0024 1344     		add	r3, r3, r2
 22585 0026 0B44     		add	r3, r3, r1
 22586 0028 0633     		adds	r3, r3, #6
 22587 002a 9B00     		lsls	r3, r3, #2
 22588 002c 0344     		add	r3, r3, r0
 22589 002e 5A68     		ldr	r2, [r3, #4]
 22590 0030 1F4B     		ldr	r3, .L867
 22591 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22592 0036 1C46     		mov	r4, r3
 22593 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22594 003a 1D48     		ldr	r0, .L867
 22595 003c 2346     		mov	r3, r4
 22596 003e 5B00     		lsls	r3, r3, #1
 22597 0040 2344     		add	r3, r3, r4
 22598 0042 1B01     		lsls	r3, r3, #4
 22599 0044 0344     		add	r3, r3, r0
 22600 0046 0B44     		add	r3, r3, r1
 22601 0048 03F29513 		addw	r3, r3, #405
 22602 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22603 004e 42FA03F3 		asr	r3, r2, r3
 22604 0052 1BB2     		sxth	r3, r3
 22605 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3127:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22606              		.loc 1 3127 0
 22607 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22608 0058 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 494


 22609 005a 0233     		adds	r3, r3, #2
 22610 005c 07F10C02 		add	r2, r7, #12
 22611 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22612 0062 07F11001 		add	r1, r7, #16
 22613 0066 0B44     		add	r3, r3, r1
 22614 0068 03F80C2C 		strb	r2, [r3, #-12]
3128:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22615              		.loc 1 3128 0
 22616 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22617 006e 5B00     		lsls	r3, r3, #1
 22618 0070 5A1C     		adds	r2, r3, #1
 22619 0072 07F10C03 		add	r3, r7, #12
 22620 0076 0133     		adds	r3, r3, #1
 22621 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22622 007a 07F11003 		add	r3, r7, #16
 22623 007e 1344     		add	r3, r3, r2
 22624 0080 0A46     		mov	r2, r1
 22625 0082 03F80C2C 		strb	r2, [r3, #-12]
 22626              	.L865:
3125:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22627              		.loc 1 3125 0 discriminator 1
 22628 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22629 0088 5A1E     		subs	r2, r3, #1
 22630 008a FA73     		strb	r2, [r7, #15]
 22631 008c 002B     		cmp	r3, #0
 22632 008e BFD1     		bne	.L866
3129:..\src/command_processing.c ****     }
3130:..\src/command_processing.c ****             
3131:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3132:..\src/command_processing.c **** 
3133:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22633              		.loc 1 3133 0
 22634 0090 3B1D     		adds	r3, r7, #4
 22635 0092 0721     		movs	r1, #7
 22636 0094 1846     		mov	r0, r3
 22637 0096 FFF7FEFF 		bl	LCRChecksum
 22638 009a 0346     		mov	r3, r0
 22639 009c FB72     		strb	r3, [r7, #11]
3134:..\src/command_processing.c **** 
3135:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22640              		.loc 1 3135 0
 22641 009e 3B1D     		adds	r3, r7, #4
 22642 00a0 0821     		movs	r1, #8
 22643 00a2 1846     		mov	r0, r3
 22644 00a4 FFF7FEFF 		bl	commWrite
3136:..\src/command_processing.c **** }
 22645              		.loc 1 3136 0
 22646 00a8 00BF     		nop
 22647 00aa 1437     		adds	r7, r7, #20
 22648              		.cfi_def_cfa_offset 12
 22649 00ac BD46     		mov	sp, r7
 22650              		.cfi_def_cfa_register 13
 22651              		@ sp needed
 22652 00ae 90BD     		pop	{r4, r7, pc}
 22653              	.L868:
 22654              		.align	2
 22655              	.L867:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 495


 22656 00b0 00000000 		.word	g_mem
 22657 00b4 00000000 		.word	g_measOld
 22658              		.cfi_endproc
 22659              	.LFE91:
 22660              		.size	cmd_get_velocities, .-cmd_get_velocities
 22661              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22662              		.align	2
 22663              		.global	cmd_get_accelerations
 22664              		.thumb
 22665              		.thumb_func
 22666              		.type	cmd_get_accelerations, %function
 22667              	cmd_get_accelerations:
 22668              	.LFB92:
3137:..\src/command_processing.c **** 
3138:..\src/command_processing.c **** void cmd_get_accelerations(){
 22669              		.loc 1 3138 0
 22670              		.cfi_startproc
 22671              		@ args = 0, pretend = 0, frame = 16
 22672              		@ frame_needed = 1, uses_anonymous_args = 0
 22673 0000 90B5     		push	{r4, r7, lr}
 22674              		.cfi_def_cfa_offset 12
 22675              		.cfi_offset 4, -12
 22676              		.cfi_offset 7, -8
 22677              		.cfi_offset 14, -4
 22678 0002 85B0     		sub	sp, sp, #20
 22679              		.cfi_def_cfa_offset 32
 22680 0004 00AF     		add	r7, sp, #0
 22681              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****  
3140:..\src/command_processing.c ****     uint8 CYDATA index;
3141:..\src/command_processing.c ****     int16 aux_int16;
3142:..\src/command_processing.c ****     
3143:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3144:..\src/command_processing.c ****     
3145:..\src/command_processing.c ****     uint8 packet_data[8]; 
3146:..\src/command_processing.c ****     
3147:..\src/command_processing.c ****     //Header package
3148:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22682              		.loc 1 3148 0
 22683 0006 8B23     		movs	r3, #139
 22684 0008 3B71     		strb	r3, [r7, #4]
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22685              		.loc 1 3150 0
 22686 000a 0323     		movs	r3, #3
 22687 000c FB73     		strb	r3, [r7, #15]
 22688 000e 39E0     		b	.L870
 22689              	.L871:
3151:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22690              		.loc 1 3151 0
 22691 0010 274B     		ldr	r3, .L872
 22692 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22693 0016 1A46     		mov	r2, r3
 22694 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22695 001a 2648     		ldr	r0, .L872+4
 22696 001c 1346     		mov	r3, r2
 22697 001e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 496


 22698 0020 1344     		add	r3, r3, r2
 22699 0022 9B00     		lsls	r3, r3, #2
 22700 0024 1344     		add	r3, r3, r2
 22701 0026 0B44     		add	r3, r3, r1
 22702 0028 0A33     		adds	r3, r3, #10
 22703 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22704 002e 204B     		ldr	r3, .L872
 22705 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22706 0034 1C46     		mov	r4, r3
 22707 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22708 0038 1D48     		ldr	r0, .L872
 22709 003a 2346     		mov	r3, r4
 22710 003c 5B00     		lsls	r3, r3, #1
 22711 003e 2344     		add	r3, r3, r4
 22712 0040 1B01     		lsls	r3, r3, #4
 22713 0042 0344     		add	r3, r3, r0
 22714 0044 0B44     		add	r3, r3, r1
 22715 0046 03F29513 		addw	r3, r3, #405
 22716 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22717 004c 42FA03F3 		asr	r3, r2, r3
 22718 0050 1BB2     		sxth	r3, r3
 22719 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3152:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22720              		.loc 1 3152 0
 22721 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22722 0056 5B00     		lsls	r3, r3, #1
 22723 0058 0233     		adds	r3, r3, #2
 22724 005a 07F10C02 		add	r2, r7, #12
 22725 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22726 0060 07F11001 		add	r1, r7, #16
 22727 0064 0B44     		add	r3, r3, r1
 22728 0066 03F80C2C 		strb	r2, [r3, #-12]
3153:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22729              		.loc 1 3153 0
 22730 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22731 006c 5B00     		lsls	r3, r3, #1
 22732 006e 5A1C     		adds	r2, r3, #1
 22733 0070 07F10C03 		add	r3, r7, #12
 22734 0074 0133     		adds	r3, r3, #1
 22735 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22736 0078 07F11003 		add	r3, r7, #16
 22737 007c 1344     		add	r3, r3, r2
 22738 007e 0A46     		mov	r2, r1
 22739 0080 03F80C2C 		strb	r2, [r3, #-12]
 22740              	.L870:
3150:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22741              		.loc 1 3150 0 discriminator 1
 22742 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22743 0086 5A1E     		subs	r2, r3, #1
 22744 0088 FA73     		strb	r2, [r7, #15]
 22745 008a 002B     		cmp	r3, #0
 22746 008c C0D1     		bne	.L871
3154:..\src/command_processing.c ****     }
3155:..\src/command_processing.c ****     
3156:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3157:..\src/command_processing.c **** 
3158:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 497


 22747              		.loc 1 3158 0
 22748 008e 3B1D     		adds	r3, r7, #4
 22749 0090 0721     		movs	r1, #7
 22750 0092 1846     		mov	r0, r3
 22751 0094 FFF7FEFF 		bl	LCRChecksum
 22752 0098 0346     		mov	r3, r0
 22753 009a FB72     		strb	r3, [r7, #11]
3159:..\src/command_processing.c **** 
3160:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22754              		.loc 1 3160 0
 22755 009c 3B1D     		adds	r3, r7, #4
 22756 009e 0821     		movs	r1, #8
 22757 00a0 1846     		mov	r0, r3
 22758 00a2 FFF7FEFF 		bl	commWrite
3161:..\src/command_processing.c **** }
 22759              		.loc 1 3161 0
 22760 00a6 00BF     		nop
 22761 00a8 1437     		adds	r7, r7, #20
 22762              		.cfi_def_cfa_offset 12
 22763 00aa BD46     		mov	sp, r7
 22764              		.cfi_def_cfa_register 13
 22765              		@ sp needed
 22766 00ac 90BD     		pop	{r4, r7, pc}
 22767              	.L873:
 22768 00ae 00BF     		.align	2
 22769              	.L872:
 22770 00b0 00000000 		.word	g_mem
 22771 00b4 00000000 		.word	g_measOld
 22772              		.cfi_endproc
 22773              	.LFE92:
 22774              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22775              		.section	.text.cmd_set_inputs,"ax",%progbits
 22776              		.align	2
 22777              		.global	cmd_set_inputs
 22778              		.thumb
 22779              		.thumb_func
 22780              		.type	cmd_set_inputs, %function
 22781              	cmd_set_inputs:
 22782              	.LFB93:
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c **** void cmd_set_inputs(){
 22783              		.loc 1 3163 0
 22784              		.cfi_startproc
 22785              		@ args = 0, pretend = 0, frame = 8
 22786              		@ frame_needed = 1, uses_anonymous_args = 0
 22787              		@ link register save eliminated.
 22788 0000 90B4     		push	{r4, r7}
 22789              		.cfi_def_cfa_offset 8
 22790              		.cfi_offset 4, -8
 22791              		.cfi_offset 7, -4
 22792 0002 82B0     		sub	sp, sp, #8
 22793              		.cfi_def_cfa_offset 16
 22794 0004 00AF     		add	r7, sp, #0
 22795              		.cfi_def_cfa_register 7
3164:..\src/command_processing.c ****     
3165:..\src/command_processing.c ****     // Store position setted in right variables
3166:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 498


3167:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3168:..\src/command_processing.c ****     
3169:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22796              		.loc 1 3169 0
 22797 0006 894B     		ldr	r3, .L888
 22798 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22799 000a 1B02     		lsls	r3, r3, #8
 22800 000c 1AB2     		sxth	r2, r3
 22801 000e 874B     		ldr	r3, .L888
 22802 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22803 0012 1BB2     		sxth	r3, r3
 22804 0014 1343     		orrs	r3, r3, r2
 22805 0016 1BB2     		sxth	r3, r3
 22806 0018 3B80     		strh	r3, [r7]	@ movhi
3170:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22807              		.loc 1 3170 0
 22808 001a 844B     		ldr	r3, .L888
 22809 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22810 001e 1B02     		lsls	r3, r3, #8
 22811 0020 1AB2     		sxth	r2, r3
 22812 0022 824B     		ldr	r3, .L888
 22813 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22814 0026 1BB2     		sxth	r3, r3
 22815 0028 1343     		orrs	r3, r3, r2
 22816 002a 1BB2     		sxth	r3, r3
 22817 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22818              	.LBB22:
3171:..\src/command_processing.c ****     
3172:..\src/command_processing.c ****     // Check if last command received was the same as this 
3173:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3174:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22819              		.loc 1 3174 0
 22820 002e 0023     		movs	r3, #0
 22821 0030 FB71     		strb	r3, [r7, #7]
 22822 0032 1DE0     		b	.L875
 22823              	.L877:
3175:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22824              		.loc 1 3175 0
 22825 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22826 0036 7E4A     		ldr	r2, .L888+4
 22827 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22828 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22829 003e 5B00     		lsls	r3, r3, #1
 22830 0040 07F10801 		add	r1, r7, #8
 22831 0044 0B44     		add	r3, r3, r1
 22832 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22833 004a 9A42     		cmp	r2, r3
 22834 004c 02D0     		beq	.L876
3176:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 22835              		.loc 1 3176 0
 22836 004e 794B     		ldr	r3, .L888+8
 22837 0050 0122     		movs	r2, #1
 22838 0052 1A70     		strb	r2, [r3]
 22839              	.L876:
3177:..\src/command_processing.c ****        }
3178:..\src/command_processing.c ****         // Update last command
3179:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 499


 22840              		.loc 1 3179 0 discriminator 2
 22841 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22842 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22843 0058 5B00     		lsls	r3, r3, #1
 22844 005a 07F10801 		add	r1, r7, #8
 22845 005e 0B44     		add	r3, r3, r1
 22846 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22847 0064 724B     		ldr	r3, .L888+4
 22848 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3174:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22849              		.loc 1 3174 0 discriminator 2
 22850 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22851 006c 0133     		adds	r3, r3, #1
 22852 006e FB71     		strb	r3, [r7, #7]
 22853              	.L875:
3174:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22854              		.loc 1 3174 0 is_stmt 0 discriminator 1
 22855 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22856 0072 714B     		ldr	r3, .L888+12
 22857 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22858 0078 0133     		adds	r3, r3, #1
 22859 007a 9A42     		cmp	r2, r3
 22860 007c DADB     		blt	.L877
 22861              	.LBE22:
3180:..\src/command_processing.c ****     }
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3183:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22862              		.loc 1 3183 0 is_stmt 1
 22863 007e 6D4B     		ldr	r3, .L888+8
 22864 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22865 0082 002B     		cmp	r3, #0
 22866 0084 00F0CC80 		beq	.L887
 22867              	.LBB23:
3184:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22868              		.loc 1 3184 0
 22869 0088 0023     		movs	r3, #0
 22870 008a BB71     		strb	r3, [r7, #6]
 22871 008c C4E0     		b	.L879
 22872              	.L886:
3185:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22873              		.loc 1 3185 0
 22874 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22875 0090 6A49     		ldr	r1, .L888+16
 22876 0092 1346     		mov	r3, r2
 22877 0094 DB00     		lsls	r3, r3, #3
 22878 0096 9B1A     		subs	r3, r3, r2
 22879 0098 1B01     		lsls	r3, r3, #4
 22880 009a 0B44     		add	r3, r3, r1
 22881 009c 03F20F13 		addw	r3, r3, #271
 22882 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22883 00a2 022B     		cmp	r3, #2
 22884 00a4 0ED1     		bne	.L880
3186:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22885              		.loc 1 3186 0
 22886 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22887 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 500


 22888 00aa 5B00     		lsls	r3, r3, #1
 22889 00ac 07F10801 		add	r1, r7, #8
 22890 00b0 0B44     		add	r3, r3, r1
 22891 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22892 00b6 1846     		mov	r0, r3
 22893 00b8 6149     		ldr	r1, .L888+20
 22894 00ba 1301     		lsls	r3, r2, #4
 22895 00bc 0B44     		add	r3, r3, r1
 22896 00be 0433     		adds	r3, r3, #4
 22897 00c0 1860     		str	r0, [r3]
 22898 00c2 47E0     		b	.L881
 22899              	.L880:
3187:..\src/command_processing.c ****             }
3188:..\src/command_processing.c ****             else {
3189:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22900              		.loc 1 3189 0
 22901 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22902 00c6 5D49     		ldr	r1, .L888+16
 22903 00c8 1346     		mov	r3, r2
 22904 00ca DB00     		lsls	r3, r3, #3
 22905 00cc 9B1A     		subs	r3, r3, r2
 22906 00ce 1B01     		lsls	r3, r3, #4
 22907 00d0 0B44     		add	r3, r3, r1
 22908 00d2 03F20F13 		addw	r3, r3, #271
 22909 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22910 00d8 012B     		cmp	r3, #1
 22911 00da 0ED1     		bne	.L882
3190:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22912              		.loc 1 3190 0
 22913 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22914 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22915 00e0 5B00     		lsls	r3, r3, #1
 22916 00e2 07F10801 		add	r1, r7, #8
 22917 00e6 0B44     		add	r3, r3, r1
 22918 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22919 00ec 1846     		mov	r0, r3
 22920 00ee 5449     		ldr	r1, .L888+20
 22921 00f0 1301     		lsls	r3, r2, #4
 22922 00f2 0B44     		add	r3, r3, r1
 22923 00f4 0833     		adds	r3, r3, #8
 22924 00f6 1860     		str	r0, [r3]
 22925 00f8 2CE0     		b	.L881
 22926              	.L882:
3191:..\src/command_processing.c ****                 }
3192:..\src/command_processing.c ****                 else {
3193:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22927              		.loc 1 3193 0
 22928 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22929 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22930 00fe 5B00     		lsls	r3, r3, #1
 22931 0100 07F10801 		add	r1, r7, #8
 22932 0104 0B44     		add	r3, r3, r1
 22933 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22934 010a 1846     		mov	r0, r3
 22935 010c 4C49     		ldr	r1, .L888+20
 22936 010e 1301     		lsls	r3, r2, #4
 22937 0110 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 501


 22938 0112 1860     		str	r0, [r3]
3194:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22939              		.loc 1 3194 0
 22940 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22941 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22942 0118 494A     		ldr	r2, .L888+20
 22943 011a 1B01     		lsls	r3, r3, #4
 22944 011c 1344     		add	r3, r3, r2
 22945 011e 1868     		ldr	r0, [r3]
 22946 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22947 0122 454C     		ldr	r4, .L888+12
 22948 0124 1346     		mov	r3, r2
 22949 0126 DB00     		lsls	r3, r3, #3
 22950 0128 9B1A     		subs	r3, r3, r2
 22951 012a 1B01     		lsls	r3, r3, #4
 22952 012c 2344     		add	r3, r3, r4
 22953 012e 03F58873 		add	r3, r3, #272
 22954 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22955 0134 1C46     		mov	r4, r3
 22956 0136 414A     		ldr	r2, .L888+16
 22957 0138 2346     		mov	r3, r4
 22958 013a 5B00     		lsls	r3, r3, #1
 22959 013c 2344     		add	r3, r3, r4
 22960 013e 1B01     		lsls	r3, r3, #4
 22961 0140 1344     		add	r3, r3, r2
 22962 0142 03F29513 		addw	r3, r3, #405
 22963 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22964 0148 00FA03F2 		lsl	r2, r0, r3
 22965 014c 3C48     		ldr	r0, .L888+20
 22966 014e 0B01     		lsls	r3, r1, #4
 22967 0150 0344     		add	r3, r3, r0
 22968 0152 1A60     		str	r2, [r3]
 22969              	.L881:
3195:..\src/command_processing.c ****                 }
3196:..\src/command_processing.c ****             }  
3197:..\src/command_processing.c ****                
3198:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3199:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22970              		.loc 1 3199 0
 22971 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22972 0156 3849     		ldr	r1, .L888+12
 22973 0158 1346     		mov	r3, r2
 22974 015a DB00     		lsls	r3, r3, #3
 22975 015c 9B1A     		subs	r3, r3, r2
 22976 015e 1B01     		lsls	r3, r3, #4
 22977 0160 0B44     		add	r3, r3, r1
 22978 0162 E333     		adds	r3, r3, #227
 22979 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22980 0166 002B     		cmp	r3, #0
 22981 0168 53D0     		beq	.L883
 22982              		.loc 1 3199 0 is_stmt 0 discriminator 1
 22983 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22984 016c 3349     		ldr	r1, .L888+16
 22985 016e 1346     		mov	r3, r2
 22986 0170 DB00     		lsls	r3, r3, #3
 22987 0172 9B1A     		subs	r3, r3, r2
 22988 0174 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 502


 22989 0176 0B44     		add	r3, r3, r1
 22990 0178 03F20F13 		addw	r3, r3, #271
 22991 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22992 017e 032B     		cmp	r3, #3
 22993 0180 0BD0     		beq	.L884
 22994              		.loc 1 3199 0 discriminator 2
 22995 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22996 0184 2D49     		ldr	r1, .L888+16
 22997 0186 1346     		mov	r3, r2
 22998 0188 DB00     		lsls	r3, r3, #3
 22999 018a 9B1A     		subs	r3, r3, r2
 23000 018c 1B01     		lsls	r3, r3, #4
 23001 018e 0B44     		add	r3, r3, r1
 23002 0190 03F20F13 		addw	r3, r3, #271
 23003 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23004 0196 002B     		cmp	r3, #0
 23005 0198 3BD1     		bne	.L883
 23006              	.L884:
3200:..\src/command_processing.c ****                 
3201:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 23007              		.loc 1 3201 0 is_stmt 1
 23008 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23009 019c 284A     		ldr	r2, .L888+20
 23010 019e 1B01     		lsls	r3, r3, #4
 23011 01a0 1344     		add	r3, r3, r2
 23012 01a2 1968     		ldr	r1, [r3]
 23013 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23014 01a6 2448     		ldr	r0, .L888+12
 23015 01a8 1346     		mov	r3, r2
 23016 01aa DB00     		lsls	r3, r3, #3
 23017 01ac 9B1A     		subs	r3, r3, r2
 23018 01ae 1B01     		lsls	r3, r3, #4
 23019 01b0 0344     		add	r3, r3, r0
 23020 01b2 E433     		adds	r3, r3, #228
 23021 01b4 1B68     		ldr	r3, [r3]
 23022 01b6 9942     		cmp	r1, r3
 23023 01b8 0DDA     		bge	.L885
3202:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 23024              		.loc 1 3202 0
 23025 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23026 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23027 01be 1E48     		ldr	r0, .L888+12
 23028 01c0 1346     		mov	r3, r2
 23029 01c2 DB00     		lsls	r3, r3, #3
 23030 01c4 9B1A     		subs	r3, r3, r2
 23031 01c6 1B01     		lsls	r3, r3, #4
 23032 01c8 0344     		add	r3, r3, r0
 23033 01ca E433     		adds	r3, r3, #228
 23034 01cc 1A68     		ldr	r2, [r3]
 23035 01ce 1C48     		ldr	r0, .L888+20
 23036 01d0 0B01     		lsls	r3, r1, #4
 23037 01d2 0344     		add	r3, r3, r0
 23038 01d4 1A60     		str	r2, [r3]
 23039              	.L885:
3203:..\src/command_processing.c **** 
3204:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 23040              		.loc 1 3204 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 503


 23041 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23042 01d8 194A     		ldr	r2, .L888+20
 23043 01da 1B01     		lsls	r3, r3, #4
 23044 01dc 1344     		add	r3, r3, r2
 23045 01de 1968     		ldr	r1, [r3]
 23046 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23047 01e2 1548     		ldr	r0, .L888+12
 23048 01e4 1346     		mov	r3, r2
 23049 01e6 DB00     		lsls	r3, r3, #3
 23050 01e8 9B1A     		subs	r3, r3, r2
 23051 01ea 1B01     		lsls	r3, r3, #4
 23052 01ec 0344     		add	r3, r3, r0
 23053 01ee E833     		adds	r3, r3, #232
 23054 01f0 1B68     		ldr	r3, [r3]
 23055 01f2 9942     		cmp	r1, r3
 23056 01f4 0DDD     		ble	.L883
3205:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 23057              		.loc 1 3205 0
 23058 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23059 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23060 01fa 0F48     		ldr	r0, .L888+12
 23061 01fc 1346     		mov	r3, r2
 23062 01fe DB00     		lsls	r3, r3, #3
 23063 0200 9B1A     		subs	r3, r3, r2
 23064 0202 1B01     		lsls	r3, r3, #4
 23065 0204 0344     		add	r3, r3, r0
 23066 0206 E833     		adds	r3, r3, #232
 23067 0208 1A68     		ldr	r2, [r3]
 23068 020a 0D48     		ldr	r0, .L888+20
 23069 020c 0B01     		lsls	r3, r1, #4
 23070 020e 0344     		add	r3, r3, r0
 23071 0210 1A60     		str	r2, [r3]
 23072              	.L883:
3184:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23073              		.loc 1 3184 0 discriminator 2
 23074 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23075 0214 0133     		adds	r3, r3, #1
 23076 0216 BB71     		strb	r3, [r7, #6]
 23077              	.L879:
3184:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23078              		.loc 1 3184 0 is_stmt 0 discriminator 1
 23079 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23080 021a 012B     		cmp	r3, #1
 23081 021c 7FF637AF 		bls	.L886
 23082              	.L887:
 23083              	.LBE23:
3206:..\src/command_processing.c ****             }
3207:..\src/command_processing.c ****         }  
3208:..\src/command_processing.c ****     }
3209:..\src/command_processing.c **** }
 23084              		.loc 1 3209 0 is_stmt 1
 23085 0220 00BF     		nop
 23086 0222 0837     		adds	r7, r7, #8
 23087              		.cfi_def_cfa_offset 8
 23088 0224 BD46     		mov	sp, r7
 23089              		.cfi_def_cfa_register 13
 23090              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 504


 23091 0226 90BC     		pop	{r4, r7}
 23092              		.cfi_restore 7
 23093              		.cfi_restore 4
 23094              		.cfi_def_cfa_offset 0
 23095 0228 7047     		bx	lr
 23096              	.L889:
 23097 022a 00BF     		.align	2
 23098              	.L888:
 23099 022c 00000000 		.word	g_rx
 23100 0230 04000000 		.word	last_aux_int16.11280
 23101 0234 00000000 		.word	change_ext_ref_flag
 23102 0238 00000000 		.word	c_mem
 23103 023c 00000000 		.word	g_mem
 23104 0240 00000000 		.word	g_refNew
 23105              		.cfi_endproc
 23106              	.LFE93:
 23107              		.size	cmd_set_inputs, .-cmd_set_inputs
 23108              		.section	.text.cmd_activate,"ax",%progbits
 23109              		.align	2
 23110              		.global	cmd_activate
 23111              		.thumb
 23112              		.thumb_func
 23113              		.type	cmd_activate, %function
 23114              	cmd_activate:
 23115              	.LFB94:
3210:..\src/command_processing.c **** 
3211:..\src/command_processing.c **** void cmd_activate(){
 23116              		.loc 1 3211 0
 23117              		.cfi_startproc
 23118              		@ args = 0, pretend = 0, frame = 8
 23119              		@ frame_needed = 1, uses_anonymous_args = 0
 23120 0000 80B5     		push	{r7, lr}
 23121              		.cfi_def_cfa_offset 8
 23122              		.cfi_offset 7, -8
 23123              		.cfi_offset 14, -4
 23124 0002 82B0     		sub	sp, sp, #8
 23125              		.cfi_def_cfa_offset 16
 23126 0004 00AF     		add	r7, sp, #0
 23127              		.cfi_def_cfa_register 7
3212:..\src/command_processing.c ****     
3213:..\src/command_processing.c ****     // Store new value reads
3214:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 23128              		.loc 1 3214 0
 23129 0006 294B     		ldr	r3, .L897
 23130 0008 5B78     		ldrb	r3, [r3, #1]
 23131 000a FB71     		strb	r3, [r7, #7]
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // Check type of control mode enabled
3217:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 23132              		.loc 1 3217 0
 23133 000c 284B     		ldr	r3, .L897+4
 23134 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23135 0012 002B     		cmp	r3, #0
 23136 0014 04D0     		beq	.L891
 23137              		.loc 1 3217 0 is_stmt 0 discriminator 1
 23138 0016 264B     		ldr	r3, .L897+4
 23139 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 505


 23140 001c 032B     		cmp	r3, #3
 23141 001e 0BD1     		bne	.L892
 23142              	.L891:
3218:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 23143              		.loc 1 3218 0 is_stmt 1
 23144 0020 234B     		ldr	r3, .L897+4
 23145 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23146 0026 1946     		mov	r1, r3
 23147 0028 224A     		ldr	r2, .L897+8
 23148 002a 3423     		movs	r3, #52
 23149 002c 03FB01F3 		mul	r3, r3, r1
 23150 0030 1344     		add	r3, r3, r2
 23151 0032 1B68     		ldr	r3, [r3]
 23152 0034 204A     		ldr	r2, .L897+12
 23153 0036 1360     		str	r3, [r2]
 23154              	.L892:
3219:..\src/command_processing.c ****     }
3220:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 23155              		.loc 1 3220 0
 23156 0038 FB79     		ldrb	r3, [r7, #7]
 23157 003a 03F00103 		and	r3, r3, #1
 23158 003e DAB2     		uxtb	r2, r3
 23159 0040 1D4B     		ldr	r3, .L897+12
 23160 0042 1A73     		strb	r2, [r3, #12]
3221:..\src/command_processing.c ****     
3222:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3223:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3224:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3225:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3226:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3227:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3228:..\src/command_processing.c ****         }
3229:..\src/command_processing.c ****         
3230:..\src/command_processing.c ****         // Activate or deactivate the valve
3231:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3232:..\src/command_processing.c ****     }
3233:..\src/command_processing.c **** #endif
3234:..\src/command_processing.c ****     
3235:..\src/command_processing.c ****     // Activate/Deactivate motor
3236:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 23161              		.loc 1 3236 0
 23162 0044 1C4B     		ldr	r3, .L897+12
 23163 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23164 0048 1946     		mov	r1, r3
 23165 004a 0020     		movs	r0, #0
 23166 004c FFF7FEFF 		bl	enable_motor
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23167              		.loc 1 3238 0
 23168 0050 174B     		ldr	r3, .L897+4
 23169 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23170 0056 012B     		cmp	r3, #1
 23171 0058 23D1     		bne	.L896
3239:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 23172              		.loc 1 3239 0
 23173 005a 154B     		ldr	r3, .L897+4
 23174 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 506


 23175 0060 002B     		cmp	r3, #0
 23176 0062 04D0     		beq	.L894
 23177              		.loc 1 3239 0 is_stmt 0 discriminator 1
 23178 0064 124B     		ldr	r3, .L897+4
 23179 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23180 006a 032B     		cmp	r3, #3
 23181 006c 0BD1     		bne	.L895
 23182              	.L894:
3240:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 23183              		.loc 1 3240 0 is_stmt 1
 23184 006e 104B     		ldr	r3, .L897+4
 23185 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23186 0074 1946     		mov	r1, r3
 23187 0076 0F4A     		ldr	r2, .L897+8
 23188 0078 3423     		movs	r3, #52
 23189 007a 03FB01F3 		mul	r3, r3, r1
 23190 007e 1344     		add	r3, r3, r2
 23191 0080 1B68     		ldr	r3, [r3]
 23192 0082 0D4A     		ldr	r2, .L897+12
 23193 0084 1361     		str	r3, [r2, #16]
 23194              	.L895:
3241:..\src/command_processing.c ****         }
3242:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 23195              		.loc 1 3242 0
 23196 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23197 0088 5B08     		lsrs	r3, r3, #1
 23198 008a DBB2     		uxtb	r3, r3
 23199 008c 03F00103 		and	r3, r3, #1
 23200 0090 DAB2     		uxtb	r2, r3
 23201 0092 094B     		ldr	r3, .L897+12
 23202 0094 1A77     		strb	r2, [r3, #28]
3243:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 23203              		.loc 1 3243 0
 23204 0096 084B     		ldr	r3, .L897+12
 23205 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23206 009a 1946     		mov	r1, r3
 23207 009c 0120     		movs	r0, #1
 23208 009e FFF7FEFF 		bl	enable_motor
 23209              	.L896:
3244:..\src/command_processing.c ****     }
3245:..\src/command_processing.c ****     
3246:..\src/command_processing.c **** }
 23210              		.loc 1 3246 0
 23211 00a2 00BF     		nop
 23212 00a4 0837     		adds	r7, r7, #8
 23213              		.cfi_def_cfa_offset 8
 23214 00a6 BD46     		mov	sp, r7
 23215              		.cfi_def_cfa_register 13
 23216              		@ sp needed
 23217 00a8 80BD     		pop	{r7, pc}
 23218              	.L898:
 23219 00aa 00BF     		.align	2
 23220              	.L897:
 23221 00ac 00000000 		.word	g_rx
 23222 00b0 00000000 		.word	g_mem
 23223 00b4 00000000 		.word	g_meas
 23224 00b8 00000000 		.word	g_refNew
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 507


 23225              		.cfi_endproc
 23226              	.LFE94:
 23227              		.size	cmd_activate, .-cmd_activate
 23228              		.section	.text.cmd_get_activate,"ax",%progbits
 23229              		.align	2
 23230              		.global	cmd_get_activate
 23231              		.thumb
 23232              		.thumb_func
 23233              		.type	cmd_get_activate, %function
 23234              	cmd_get_activate:
 23235              	.LFB95:
3247:..\src/command_processing.c **** 
3248:..\src/command_processing.c **** void cmd_get_activate(){
 23236              		.loc 1 3248 0
 23237              		.cfi_startproc
 23238              		@ args = 0, pretend = 0, frame = 8
 23239              		@ frame_needed = 1, uses_anonymous_args = 0
 23240 0000 80B5     		push	{r7, lr}
 23241              		.cfi_def_cfa_offset 8
 23242              		.cfi_offset 7, -8
 23243              		.cfi_offset 14, -4
 23244 0002 82B0     		sub	sp, sp, #8
 23245              		.cfi_def_cfa_offset 16
 23246 0004 00AF     		add	r7, sp, #0
 23247              		.cfi_def_cfa_register 7
3249:..\src/command_processing.c ****     
3250:..\src/command_processing.c ****     uint8 packet_data[3];
3251:..\src/command_processing.c **** 
3252:..\src/command_processing.c ****     // Header        
3253:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 23248              		.loc 1 3253 0
 23249 0006 8123     		movs	r3, #129
 23250 0008 3B71     		strb	r3, [r7, #4]
3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     // Fill payload
3256:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23251              		.loc 1 3256 0
 23252 000a 124B     		ldr	r3, .L902
 23253 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23254 0010 012B     		cmp	r3, #1
 23255 0012 0BD1     		bne	.L900
3257:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 23256              		.loc 1 3257 0
 23257 0014 104B     		ldr	r3, .L902+4
 23258 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23259 0018 5B00     		lsls	r3, r3, #1
 23260 001a 5AB2     		sxtb	r2, r3
 23261 001c 0E4B     		ldr	r3, .L902+4
 23262 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23263 0020 5BB2     		sxtb	r3, r3
 23264 0022 1343     		orrs	r3, r3, r2
 23265 0024 5BB2     		sxtb	r3, r3
 23266 0026 DBB2     		uxtb	r3, r3
 23267 0028 7B71     		strb	r3, [r7, #5]
 23268 002a 02E0     		b	.L901
 23269              	.L900:
3258:..\src/command_processing.c ****     } 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 508


3259:..\src/command_processing.c ****     else {
3260:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 23270              		.loc 1 3260 0
 23271 002c 0A4B     		ldr	r3, .L902+4
 23272 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23273 0030 7B71     		strb	r3, [r7, #5]
 23274              	.L901:
3261:..\src/command_processing.c ****     }
3262:..\src/command_processing.c ****     
3263:..\src/command_processing.c ****     // Calculate checksum
3264:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 23275              		.loc 1 3264 0
 23276 0032 3B1D     		adds	r3, r7, #4
 23277 0034 0221     		movs	r1, #2
 23278 0036 1846     		mov	r0, r3
 23279 0038 FFF7FEFF 		bl	LCRChecksum
 23280 003c 0346     		mov	r3, r0
 23281 003e BB71     		strb	r3, [r7, #6]
3265:..\src/command_processing.c ****     
3266:..\src/command_processing.c ****     // Send package to UART
3267:..\src/command_processing.c ****     commWrite(packet_data, 3);
 23282              		.loc 1 3267 0
 23283 0040 3B1D     		adds	r3, r7, #4
 23284 0042 0321     		movs	r1, #3
 23285 0044 1846     		mov	r0, r3
 23286 0046 FFF7FEFF 		bl	commWrite
3268:..\src/command_processing.c **** 
3269:..\src/command_processing.c **** }
 23287              		.loc 1 3269 0
 23288 004a 00BF     		nop
 23289 004c 0837     		adds	r7, r7, #8
 23290              		.cfi_def_cfa_offset 8
 23291 004e BD46     		mov	sp, r7
 23292              		.cfi_def_cfa_register 13
 23293              		@ sp needed
 23294 0050 80BD     		pop	{r7, pc}
 23295              	.L903:
 23296 0052 00BF     		.align	2
 23297              	.L902:
 23298 0054 00000000 		.word	g_mem
 23299 0058 00000000 		.word	g_ref
 23300              		.cfi_endproc
 23301              	.LFE95:
 23302              		.size	cmd_get_activate, .-cmd_get_activate
 23303              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 23304              		.align	2
 23305              		.global	cmd_get_curr_and_meas
 23306              		.thumb
 23307              		.thumb_func
 23308              		.type	cmd_get_curr_and_meas, %function
 23309              	cmd_get_curr_and_meas:
 23310              	.LFB96:
3270:..\src/command_processing.c **** 
3271:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 23311              		.loc 1 3271 0
 23312              		.cfi_startproc
 23313              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 509


 23314              		@ frame_needed = 1, uses_anonymous_args = 0
 23315 0000 90B5     		push	{r4, r7, lr}
 23316              		.cfi_def_cfa_offset 12
 23317              		.cfi_offset 4, -12
 23318              		.cfi_offset 7, -8
 23319              		.cfi_offset 14, -4
 23320 0002 85B0     		sub	sp, sp, #20
 23321              		.cfi_def_cfa_offset 32
 23322 0004 00AF     		add	r7, sp, #0
 23323              		.cfi_def_cfa_register 7
3272:..\src/command_processing.c ****     
3273:..\src/command_processing.c ****     uint8 CYDATA index;
3274:..\src/command_processing.c ****     int16 aux_int16;
3275:..\src/command_processing.c ****    
3276:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3277:..\src/command_processing.c ****     
3278:..\src/command_processing.c ****     uint8 packet_data[12]; 
3279:..\src/command_processing.c **** 
3280:..\src/command_processing.c ****     //Header package
3281:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 23324              		.loc 1 3281 0
 23325 0006 8623     		movs	r3, #134
 23326 0008 3B70     		strb	r3, [r7]
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     // Currents
3284:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 23327              		.loc 1 3284 0
 23328 000a 484B     		ldr	r3, .L909
 23329 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23330 0010 1946     		mov	r1, r3
 23331 0012 474A     		ldr	r2, .L909+4
 23332 0014 3423     		movs	r3, #52
 23333 0016 03FB01F3 		mul	r3, r3, r1
 23334 001a 1344     		add	r3, r3, r2
 23335 001c 0C33     		adds	r3, r3, #12
 23336 001e 1B68     		ldr	r3, [r3]
 23337 0020 1BB2     		sxth	r3, r3
 23338 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3285:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23339              		.loc 1 3285 0
 23340 0024 07F10C03 		add	r3, r7, #12
 23341 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23342 002a BB70     		strb	r3, [r7, #2]
3286:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23343              		.loc 1 3286 0
 23344 002c 07F10C03 		add	r3, r7, #12
 23345 0030 0133     		adds	r3, r3, #1
 23346 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23347 0034 7B70     		strb	r3, [r7, #1]
3287:..\src/command_processing.c ****     
3288:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23348              		.loc 1 3288 0
 23349 0036 3F4B     		ldr	r3, .L909+8
 23350 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23351 003c 012B     		cmp	r3, #1
 23352 003e 0DD1     		bne	.L905
3289:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 510


 23353              		.loc 1 3289 0
 23354 0040 3A4B     		ldr	r3, .L909
 23355 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23356 0046 1946     		mov	r1, r3
 23357 0048 394A     		ldr	r2, .L909+4
 23358 004a 3423     		movs	r3, #52
 23359 004c 03FB01F3 		mul	r3, r3, r1
 23360 0050 1344     		add	r3, r3, r2
 23361 0052 0C33     		adds	r3, r3, #12
 23362 0054 1B68     		ldr	r3, [r3]
 23363 0056 1BB2     		sxth	r3, r3
 23364 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 23365 005a 0CE0     		b	.L906
 23366              	.L905:
3290:..\src/command_processing.c ****     }
3291:..\src/command_processing.c ****     else {
3292:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23367              		.loc 1 3292 0
 23368 005c 334B     		ldr	r3, .L909
 23369 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23370 0062 1946     		mov	r1, r3
 23371 0064 324A     		ldr	r2, .L909+4
 23372 0066 3423     		movs	r3, #52
 23373 0068 03FB01F3 		mul	r3, r3, r1
 23374 006c 1344     		add	r3, r3, r2
 23375 006e 1033     		adds	r3, r3, #16
 23376 0070 1B68     		ldr	r3, [r3]
 23377 0072 1BB2     		sxth	r3, r3
 23378 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 23379              	.L906:
3293:..\src/command_processing.c ****     }
3294:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23380              		.loc 1 3294 0
 23381 0076 07F10C03 		add	r3, r7, #12
 23382 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23383 007c 3B71     		strb	r3, [r7, #4]
3295:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23384              		.loc 1 3295 0
 23385 007e 07F10C03 		add	r3, r7, #12
 23386 0082 0133     		adds	r3, r3, #1
 23387 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23388 0086 FB70     		strb	r3, [r7, #3]
3296:..\src/command_processing.c **** 
3297:..\src/command_processing.c ****     // Positions
3298:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23389              		.loc 1 3298 0
 23390 0088 0323     		movs	r3, #3
 23391 008a FB73     		strb	r3, [r7, #15]
 23392 008c 38E0     		b	.L907
 23393              	.L908:
3299:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23394              		.loc 1 3299 0
 23395 008e 274B     		ldr	r3, .L909
 23396 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23397 0094 1A46     		mov	r2, r3
 23398 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23399 0098 2548     		ldr	r0, .L909+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 511


 23400 009a 1346     		mov	r3, r2
 23401 009c 5B00     		lsls	r3, r3, #1
 23402 009e 1344     		add	r3, r3, r2
 23403 00a0 9B00     		lsls	r3, r3, #2
 23404 00a2 1344     		add	r3, r3, r2
 23405 00a4 0B44     		add	r3, r3, r1
 23406 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23407 00aa 204B     		ldr	r3, .L909
 23408 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23409 00b0 1C46     		mov	r4, r3
 23410 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23411 00b4 1D48     		ldr	r0, .L909
 23412 00b6 2346     		mov	r3, r4
 23413 00b8 5B00     		lsls	r3, r3, #1
 23414 00ba 2344     		add	r3, r3, r4
 23415 00bc 1B01     		lsls	r3, r3, #4
 23416 00be 0344     		add	r3, r3, r0
 23417 00c0 0B44     		add	r3, r3, r1
 23418 00c2 03F29513 		addw	r3, r3, #405
 23419 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23420 00c8 42FA03F3 		asr	r3, r2, r3
 23421 00cc 1BB2     		sxth	r3, r3
 23422 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3300:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23423              		.loc 1 3300 0
 23424 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23425 00d2 5B00     		lsls	r3, r3, #1
 23426 00d4 0633     		adds	r3, r3, #6
 23427 00d6 07F10C02 		add	r2, r7, #12
 23428 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23429 00dc 07F11001 		add	r1, r7, #16
 23430 00e0 0B44     		add	r3, r3, r1
 23431 00e2 03F8102C 		strb	r2, [r3, #-16]
3301:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23432              		.loc 1 3301 0
 23433 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23434 00e8 5B00     		lsls	r3, r3, #1
 23435 00ea 5A1D     		adds	r2, r3, #5
 23436 00ec 07F10C03 		add	r3, r7, #12
 23437 00f0 0133     		adds	r3, r3, #1
 23438 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23439 00f4 07F11003 		add	r3, r7, #16
 23440 00f8 1344     		add	r3, r3, r2
 23441 00fa 0A46     		mov	r2, r1
 23442 00fc 03F8102C 		strb	r2, [r3, #-16]
 23443              	.L907:
3298:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23444              		.loc 1 3298 0 discriminator 1
 23445 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23446 0102 5A1E     		subs	r2, r3, #1
 23447 0104 FA73     		strb	r2, [r7, #15]
 23448 0106 002B     		cmp	r3, #0
 23449 0108 C1D1     		bne	.L908
3302:..\src/command_processing.c ****     }
3303:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3304:..\src/command_processing.c ****         
3305:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 512


 23450              		.loc 1 3305 0
 23451 010a 3B46     		mov	r3, r7
 23452 010c 0B21     		movs	r1, #11
 23453 010e 1846     		mov	r0, r3
 23454 0110 FFF7FEFF 		bl	LCRChecksum
 23455 0114 0346     		mov	r3, r0
 23456 0116 FB72     		strb	r3, [r7, #11]
3306:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23457              		.loc 1 3306 0
 23458 0118 3B46     		mov	r3, r7
 23459 011a 0C21     		movs	r1, #12
 23460 011c 1846     		mov	r0, r3
 23461 011e FFF7FEFF 		bl	commWrite
3307:..\src/command_processing.c ****    
3308:..\src/command_processing.c **** }
 23462              		.loc 1 3308 0
 23463 0122 00BF     		nop
 23464 0124 1437     		adds	r7, r7, #20
 23465              		.cfi_def_cfa_offset 12
 23466 0126 BD46     		mov	sp, r7
 23467              		.cfi_def_cfa_register 13
 23468              		@ sp needed
 23469 0128 90BD     		pop	{r4, r7, pc}
 23470              	.L910:
 23471 012a 00BF     		.align	2
 23472              	.L909:
 23473 012c 00000000 		.word	g_mem
 23474 0130 00000000 		.word	g_measOld
 23475 0134 00000000 		.word	c_mem
 23476              		.cfi_endproc
 23477              	.LFE96:
 23478              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23479              		.global	__aeabi_dmul
 23480              		.global	__aeabi_d2iz
 23481              		.section	.text.cmd_get_currents,"ax",%progbits
 23482              		.align	2
 23483              		.global	cmd_get_currents
 23484              		.thumb
 23485              		.thumb_func
 23486              		.type	cmd_get_currents, %function
 23487              	cmd_get_currents:
 23488              	.LFB97:
3309:..\src/command_processing.c **** 
3310:..\src/command_processing.c **** void cmd_get_currents(){
 23489              		.loc 1 3310 0
 23490              		.cfi_startproc
 23491              		@ args = 0, pretend = 0, frame = 16
 23492              		@ frame_needed = 1, uses_anonymous_args = 0
 23493 0000 90B5     		push	{r4, r7, lr}
 23494              		.cfi_def_cfa_offset 12
 23495              		.cfi_offset 4, -12
 23496              		.cfi_offset 7, -8
 23497              		.cfi_offset 14, -4
 23498 0002 85B0     		sub	sp, sp, #20
 23499              		.cfi_def_cfa_offset 32
 23500 0004 00AF     		add	r7, sp, #0
 23501              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 513


3311:..\src/command_processing.c ****     
3312:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3313:..\src/command_processing.c ****     
3314:..\src/command_processing.c ****     uint8 packet_data[6]; 
3315:..\src/command_processing.c ****     int16 aux_int16;
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     //Header package
3318:..\src/command_processing.c **** 
3319:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23502              		.loc 1 3319 0
 23503 0006 8523     		movs	r3, #133
 23504 0008 3B72     		strb	r3, [r7, #8]
3320:..\src/command_processing.c **** 
3321:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 23505              		.loc 1 3321 0
 23506 000a 334B     		ldr	r3, .L916
 23507 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 23508 0010 022B     		cmp	r3, #2
 23509 0012 0DD0     		beq	.L912
3322:..\src/command_processing.c ****         // Currents
3323:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23510              		.loc 1 3323 0
 23511 0014 314B     		ldr	r3, .L916+4
 23512 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23513 001a 1946     		mov	r1, r3
 23514 001c 304A     		ldr	r2, .L916+8
 23515 001e 3423     		movs	r3, #52
 23516 0020 03FB01F3 		mul	r3, r3, r1
 23517 0024 1344     		add	r3, r3, r2
 23518 0026 0C33     		adds	r3, r3, #12
 23519 0028 1B68     		ldr	r3, [r3]
 23520 002a 1BB2     		sxth	r3, r3
 23521 002c FB80     		strh	r3, [r7, #6]	@ movhi
 23522 002e 12E0     		b	.L913
 23523              	.L912:
3324:..\src/command_processing.c ****     }
3325:..\src/command_processing.c ****     else {
3326:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3327:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 23524              		.loc 1 3327 0
 23525 0030 2C4B     		ldr	r3, .L916+12
 23526 0032 1B68     		ldr	r3, [r3]	@ float
 23527 0034 1846     		mov	r0, r3
 23528 0036 FFF7FEFF 		bl	__aeabi_f2d
 23529 003a 4FF00002 		mov	r2, #0
 23530 003e 2A4B     		ldr	r3, .L916+16
 23531 0040 FFF7FEFF 		bl	__aeabi_dmul
 23532 0044 0346     		mov	r3, r0
 23533 0046 0C46     		mov	r4, r1
 23534 0048 1846     		mov	r0, r3
 23535 004a 2146     		mov	r1, r4
 23536 004c FFF7FEFF 		bl	__aeabi_d2iz
 23537 0050 0346     		mov	r3, r0
 23538 0052 1BB2     		sxth	r3, r3
 23539 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 23540              	.L913:
3328:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 514


3329:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23541              		.loc 1 3329 0
 23542 0056 BB1D     		adds	r3, r7, #6
 23543 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23544 005a BB72     		strb	r3, [r7, #10]
3330:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23545              		.loc 1 3330 0
 23546 005c BB1D     		adds	r3, r7, #6
 23547 005e 0133     		adds	r3, r3, #1
 23548 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23549 0062 7B72     		strb	r3, [r7, #9]
3331:..\src/command_processing.c ****     
3332:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23550              		.loc 1 3332 0
 23551 0064 1C4B     		ldr	r3, .L916
 23552 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23553 006a 012B     		cmp	r3, #1
 23554 006c 0DD1     		bne	.L914
3333:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23555              		.loc 1 3333 0
 23556 006e 1B4B     		ldr	r3, .L916+4
 23557 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23558 0074 1946     		mov	r1, r3
 23559 0076 1A4A     		ldr	r2, .L916+8
 23560 0078 3423     		movs	r3, #52
 23561 007a 03FB01F3 		mul	r3, r3, r1
 23562 007e 1344     		add	r3, r3, r2
 23563 0080 0C33     		adds	r3, r3, #12
 23564 0082 1B68     		ldr	r3, [r3]
 23565 0084 1BB2     		sxth	r3, r3
 23566 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 23567 0088 0CE0     		b	.L915
 23568              	.L914:
3334:..\src/command_processing.c ****     }
3335:..\src/command_processing.c ****     else {
3336:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23569              		.loc 1 3336 0
 23570 008a 144B     		ldr	r3, .L916+4
 23571 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23572 0090 1946     		mov	r1, r3
 23573 0092 134A     		ldr	r2, .L916+8
 23574 0094 3423     		movs	r3, #52
 23575 0096 03FB01F3 		mul	r3, r3, r1
 23576 009a 1344     		add	r3, r3, r2
 23577 009c 1033     		adds	r3, r3, #16
 23578 009e 1B68     		ldr	r3, [r3]
 23579 00a0 1BB2     		sxth	r3, r3
 23580 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 23581              	.L915:
3337:..\src/command_processing.c ****     }
3338:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23582              		.loc 1 3338 0
 23583 00a4 BB1D     		adds	r3, r7, #6
 23584 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23585 00a8 3B73     		strb	r3, [r7, #12]
3339:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23586              		.loc 1 3339 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 515


 23587 00aa BB1D     		adds	r3, r7, #6
 23588 00ac 0133     		adds	r3, r3, #1
 23589 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23590 00b0 FB72     		strb	r3, [r7, #11]
3340:..\src/command_processing.c **** 
3341:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3342:..\src/command_processing.c **** 
3343:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23591              		.loc 1 3343 0
 23592 00b2 07F10803 		add	r3, r7, #8
 23593 00b6 0521     		movs	r1, #5
 23594 00b8 1846     		mov	r0, r3
 23595 00ba FFF7FEFF 		bl	LCRChecksum
 23596 00be 0346     		mov	r3, r0
 23597 00c0 7B73     		strb	r3, [r7, #13]
3344:..\src/command_processing.c ****     
3345:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23598              		.loc 1 3345 0
 23599 00c2 07F10803 		add	r3, r7, #8
 23600 00c6 0621     		movs	r1, #6
 23601 00c8 1846     		mov	r0, r3
 23602 00ca FFF7FEFF 		bl	commWrite
3346:..\src/command_processing.c **** }
 23603              		.loc 1 3346 0
 23604 00ce 00BF     		nop
 23605 00d0 1437     		adds	r7, r7, #20
 23606              		.cfi_def_cfa_offset 12
 23607 00d2 BD46     		mov	sp, r7
 23608              		.cfi_def_cfa_register 13
 23609              		@ sp needed
 23610 00d4 90BD     		pop	{r4, r7, pc}
 23611              	.L917:
 23612 00d6 00BF     		.align	2
 23613              	.L916:
 23614 00d8 00000000 		.word	c_mem
 23615 00dc 00000000 		.word	g_mem
 23616 00e0 00000000 		.word	g_measOld
 23617 00e4 00000000 		.word	g_fb_meas
 23618 00e8 00005940 		.word	1079574528
 23619              		.cfi_endproc
 23620              	.LFE97:
 23621              		.size	cmd_get_currents, .-cmd_get_currents
 23622              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23623              		.align	2
 23624              		.global	cmd_get_currents_for_cuff
 23625              		.thumb
 23626              		.thumb_func
 23627              		.type	cmd_get_currents_for_cuff, %function
 23628              	cmd_get_currents_for_cuff:
 23629              	.LFB98:
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23630              		.loc 1 3348 0
 23631              		.cfi_startproc
 23632              		@ args = 0, pretend = 0, frame = 8
 23633              		@ frame_needed = 1, uses_anonymous_args = 0
 23634 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 516


 23635              		.cfi_def_cfa_offset 8
 23636              		.cfi_offset 7, -8
 23637              		.cfi_offset 14, -4
 23638 0002 82B0     		sub	sp, sp, #8
 23639              		.cfi_def_cfa_offset 16
 23640 0004 00AF     		add	r7, sp, #0
 23641              		.cfi_def_cfa_register 7
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3351:..\src/command_processing.c ****     
3352:..\src/command_processing.c ****     uint8 packet_data[4]; 
3353:..\src/command_processing.c ****     int16 aux_int16;
3354:..\src/command_processing.c ****     
3355:..\src/command_processing.c ****     //Header package
3356:..\src/command_processing.c **** 
3357:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 23642              		.loc 1 3357 0
 23643 0006 8E23     		movs	r3, #142
 23644 0008 3B71     		strb	r3, [r7, #4]
3358:..\src/command_processing.c **** 
3359:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23645              		.loc 1 3359 0
 23646 000a 144B     		ldr	r3, .L919
 23647 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23648 0010 1946     		mov	r1, r3
 23649 0012 134A     		ldr	r2, .L919+4
 23650 0014 3423     		movs	r3, #52
 23651 0016 03FB01F3 		mul	r3, r3, r1
 23652 001a 1344     		add	r3, r3, r2
 23653 001c 1033     		adds	r3, r3, #16
 23654 001e 1B68     		ldr	r3, [r3]
 23655 0020 1BB2     		sxth	r3, r3
 23656 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3360:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23657              		.loc 1 3360 0
 23658 0024 BB1C     		adds	r3, r7, #2
 23659 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23660 0028 BB71     		strb	r3, [r7, #6]
3361:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23661              		.loc 1 3361 0
 23662 002a BB1C     		adds	r3, r7, #2
 23663 002c 0133     		adds	r3, r3, #1
 23664 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23665 0030 7B71     		strb	r3, [r7, #5]
3362:..\src/command_processing.c **** 
3363:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3364:..\src/command_processing.c **** 
3365:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23666              		.loc 1 3365 0
 23667 0032 3B1D     		adds	r3, r7, #4
 23668 0034 0321     		movs	r1, #3
 23669 0036 1846     		mov	r0, r3
 23670 0038 FFF7FEFF 		bl	LCRChecksum
 23671 003c 0346     		mov	r3, r0
 23672 003e FB71     		strb	r3, [r7, #7]
3366:..\src/command_processing.c ****     
3367:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 517


 23673              		.loc 1 3367 0
 23674 0040 064B     		ldr	r3, .L919
 23675 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23676 0046 013B     		subs	r3, r3, #1
 23677 0048 DAB2     		uxtb	r2, r3
 23678 004a 3B1D     		adds	r3, r7, #4
 23679 004c 0421     		movs	r1, #4
 23680 004e 1846     		mov	r0, r3
 23681 0050 FFF7FEFF 		bl	commWriteID
3368:..\src/command_processing.c **** }
 23682              		.loc 1 3368 0
 23683 0054 00BF     		nop
 23684 0056 0837     		adds	r7, r7, #8
 23685              		.cfi_def_cfa_offset 8
 23686 0058 BD46     		mov	sp, r7
 23687              		.cfi_def_cfa_register 13
 23688              		@ sp needed
 23689 005a 80BD     		pop	{r7, pc}
 23690              	.L920:
 23691              		.align	2
 23692              	.L919:
 23693 005c 00000000 		.word	g_mem
 23694 0060 00000000 		.word	g_measOld
 23695              		.cfi_endproc
 23696              	.LFE98:
 23697              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23698              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 23699              		.align	2
 23700              		.global	commReadResCurrFromSH
 23701              		.thumb
 23702              		.thumb_func
 23703              		.type	commReadResCurrFromSH, %function
 23704              	commReadResCurrFromSH:
 23705              	.LFB99:
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c **** //==============================================================================
3371:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3372:..\src/command_processing.c **** //==============================================================================
3373:..\src/command_processing.c **** 
3374:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3375:..\src/command_processing.c **** {
 23706              		.loc 1 3375 0
 23707              		.cfi_startproc
 23708              		@ args = 0, pretend = 0, frame = 32
 23709              		@ frame_needed = 1, uses_anonymous_args = 0
 23710 0000 80B5     		push	{r7, lr}
 23711              		.cfi_def_cfa_offset 8
 23712              		.cfi_offset 7, -8
 23713              		.cfi_offset 14, -4
 23714 0002 88B0     		sub	sp, sp, #32
 23715              		.cfi_def_cfa_offset 40
 23716 0004 00AF     		add	r7, sp, #0
 23717              		.cfi_def_cfa_register 7
3376:..\src/command_processing.c ****     uint8 packet_data[16];
3377:..\src/command_processing.c ****     uint8 packet_lenght;
3378:..\src/command_processing.c ****     int16 curr_diff = 0;
 23718              		.loc 1 3378 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 518


 23719 0006 0023     		movs	r3, #0
 23720 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3379:..\src/command_processing.c ****     uint32 t_start, t_end;
3380:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 23721              		.loc 1 3380 0
 23722 000a 0123     		movs	r3, #1
 23723 000c 7B77     		strb	r3, [r7, #29]
3381:..\src/command_processing.c **** 
3382:..\src/command_processing.c ****     packet_lenght = 2;
 23724              		.loc 1 3382 0
 23725 000e 0223     		movs	r3, #2
 23726 0010 3B77     		strb	r3, [r7, #28]
3383:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 23727              		.loc 1 3383 0
 23728 0012 8C23     		movs	r3, #140
 23729 0014 3B71     		strb	r3, [r7, #4]
3384:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 23730              		.loc 1 3384 0
 23731 0016 8C23     		movs	r3, #140
 23732 0018 7B71     		strb	r3, [r7, #5]
3385:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 23733              		.loc 1 3385 0
 23734 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 23735 001c 99B2     		uxth	r1, r3
 23736 001e 1D4B     		ldr	r3, .L928
 23737 0020 93F8B122 		ldrb	r2, [r3, #689]	@ zero_extendqisi2
 23738 0024 3B1D     		adds	r3, r7, #4
 23739 0026 1846     		mov	r0, r3
 23740 0028 FFF7FEFF 		bl	commWriteID
3386:..\src/command_processing.c **** 
3387:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 23741              		.loc 1 3387 0
 23742 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23743 0030 0346     		mov	r3, r0
 23744 0032 BB61     		str	r3, [r7, #24]
3388:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 23745              		.loc 1 3388 0
 23746 0034 18E0     		b	.L922
 23747              	.L925:
3389:..\src/command_processing.c ****         if (interrupt_flag){
 23748              		.loc 1 3389 0
 23749 0036 184B     		ldr	r3, .L928+4
 23750 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23751 003a 002B     		cmp	r3, #0
 23752 003c 04D0     		beq	.L923
3390:..\src/command_processing.c ****             interrupt_flag = FALSE;
 23753              		.loc 1 3390 0
 23754 003e 164B     		ldr	r3, .L928+4
 23755 0040 0022     		movs	r2, #0
 23756 0042 1A70     		strb	r2, [r3]
3391:..\src/command_processing.c ****             interrupt_manager();
 23757              		.loc 1 3391 0
 23758 0044 FFF7FEFF 		bl	interrupt_manager
 23759              	.L923:
3392:..\src/command_processing.c ****         }
3393:..\src/command_processing.c **** 
3394:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 519


 23760              		.loc 1 3394 0
 23761 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23762 004c 0346     		mov	r3, r0
 23763 004e 7B61     		str	r3, [r7, #20]
3395:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 23764              		.loc 1 3395 0
 23765 0050 BA69     		ldr	r2, [r7, #24]
 23766 0052 7B69     		ldr	r3, [r7, #20]
 23767 0054 D31A     		subs	r3, r2, r3
 23768 0056 114A     		ldr	r2, .L928+8
 23769 0058 9342     		cmp	r3, r2
 23770 005a 05D9     		bls	.L922
3396:..\src/command_processing.c ****             read_flag = FALSE;
 23771              		.loc 1 3396 0
 23772 005c 0023     		movs	r3, #0
 23773 005e 7B77     		strb	r3, [r7, #29]
3397:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 23774              		.loc 1 3397 0
 23775 0060 0F4B     		ldr	r3, .L928+12
 23776 0062 0022     		movs	r2, #0
 23777 0064 1A70     		strb	r2, [r3]
3398:..\src/command_processing.c ****             break;
 23778              		.loc 1 3398 0
 23779 0066 03E0     		b	.L924
 23780              	.L922:
3388:..\src/command_processing.c ****         if (interrupt_flag){
 23781              		.loc 1 3388 0
 23782 0068 0E4B     		ldr	r3, .L928+16
 23783 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23784 006c 8E2B     		cmp	r3, #142
 23785 006e E2D1     		bne	.L925
 23786              	.L924:
3399:..\src/command_processing.c ****         }
3400:..\src/command_processing.c ****     }
3401:..\src/command_processing.c **** 
3402:..\src/command_processing.c ****     if (read_flag) {
 23787              		.loc 1 3402 0
 23788 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23789 0072 002B     		cmp	r3, #0
 23790 0074 08D0     		beq	.L926
3403:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 23791              		.loc 1 3403 0
 23792 0076 0B4B     		ldr	r3, .L928+16
 23793 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23794 007a 1B02     		lsls	r3, r3, #8
 23795 007c 1AB2     		sxth	r2, r3
 23796 007e 094B     		ldr	r3, .L928+16
 23797 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23798 0082 1BB2     		sxth	r3, r3
 23799 0084 1343     		orrs	r3, r3, r2
 23800 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 23801              	.L926:
3404:..\src/command_processing.c ****     }
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     return curr_diff;
 23802              		.loc 1 3406 0
 23803 0088 B7F91E30 		ldrsh	r3, [r7, #30]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 520


3407:..\src/command_processing.c **** }
 23804              		.loc 1 3407 0
 23805 008c 1846     		mov	r0, r3
 23806 008e 2037     		adds	r7, r7, #32
 23807              		.cfi_def_cfa_offset 8
 23808 0090 BD46     		mov	sp, r7
 23809              		.cfi_def_cfa_register 13
 23810              		@ sp needed
 23811 0092 80BD     		pop	{r7, pc}
 23812              	.L929:
 23813              		.align	2
 23814              	.L928:
 23815 0094 00000000 		.word	c_mem
 23816 0098 00000000 		.word	interrupt_flag
 23817 009c 20AA4400 		.word	4500000
 23818 00a0 00000000 		.word	master_mode
 23819 00a4 00000000 		.word	g_rx
 23820              		.cfi_endproc
 23821              	.LFE99:
 23822              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 23823              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23824              		.align	2
 23825              		.global	cmd_set_baudrate
 23826              		.thumb
 23827              		.thumb_func
 23828              		.type	cmd_set_baudrate, %function
 23829              	cmd_set_baudrate:
 23830              	.LFB100:
3408:..\src/command_processing.c **** 
3409:..\src/command_processing.c **** void cmd_set_baudrate(){
 23831              		.loc 1 3409 0
 23832              		.cfi_startproc
 23833              		@ args = 0, pretend = 0, frame = 0
 23834              		@ frame_needed = 1, uses_anonymous_args = 0
 23835 0000 80B5     		push	{r7, lr}
 23836              		.cfi_def_cfa_offset 8
 23837              		.cfi_offset 7, -8
 23838              		.cfi_offset 14, -4
 23839 0002 00AF     		add	r7, sp, #0
 23840              		.cfi_def_cfa_register 7
3410:..\src/command_processing.c ****     
3411:..\src/command_processing.c ****     // Set BaudRate
3412:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23841              		.loc 1 3412 0
 23842 0004 094B     		ldr	r3, .L935
 23843 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23844 0008 094B     		ldr	r3, .L935+4
 23845 000a 83F8AA20 		strb	r2, [r3, #170]
3413:..\src/command_processing.c ****     
3414:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23846              		.loc 1 3414 0
 23847 000e 074B     		ldr	r3, .L935
 23848 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23849 0012 0D2B     		cmp	r3, #13
 23850 0014 04D1     		bne	.L934
3415:..\src/command_processing.c ****         case 13:
3416:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 521


 23851              		.loc 1 3416 0
 23852 0016 0121     		movs	r1, #1
 23853 0018 0C20     		movs	r0, #12
 23854 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3417:..\src/command_processing.c ****             break;
 23855              		.loc 1 3417 0
 23856 001e 03E0     		b	.L933
 23857              	.L934:
3418:..\src/command_processing.c ****         default:
3419:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23858              		.loc 1 3419 0
 23859 0020 0121     		movs	r1, #1
 23860 0022 0220     		movs	r0, #2
 23861 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23862              	.L933:
3420:..\src/command_processing.c ****     }
3421:..\src/command_processing.c **** }
 23863              		.loc 1 3421 0
 23864 0028 00BF     		nop
 23865 002a 80BD     		pop	{r7, pc}
 23866              	.L936:
 23867              		.align	2
 23868              	.L935:
 23869 002c 00000000 		.word	g_rx
 23870 0030 00000000 		.word	c_mem
 23871              		.cfi_endproc
 23872              	.LFE100:
 23873              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23874              		.section	.text.cmd_ping,"ax",%progbits
 23875              		.align	2
 23876              		.global	cmd_ping
 23877              		.thumb
 23878              		.thumb_func
 23879              		.type	cmd_ping, %function
 23880              	cmd_ping:
 23881              	.LFB101:
3422:..\src/command_processing.c **** 
3423:..\src/command_processing.c **** void cmd_ping(){
 23882              		.loc 1 3423 0
 23883              		.cfi_startproc
 23884              		@ args = 0, pretend = 0, frame = 8
 23885              		@ frame_needed = 1, uses_anonymous_args = 0
 23886 0000 80B5     		push	{r7, lr}
 23887              		.cfi_def_cfa_offset 8
 23888              		.cfi_offset 7, -8
 23889              		.cfi_offset 14, -4
 23890 0002 82B0     		sub	sp, sp, #8
 23891              		.cfi_def_cfa_offset 16
 23892 0004 00AF     		add	r7, sp, #0
 23893              		.cfi_def_cfa_register 7
3424:..\src/command_processing.c **** 
3425:..\src/command_processing.c ****     uint8 packet_data[2];
3426:..\src/command_processing.c **** 
3427:..\src/command_processing.c ****     // Header
3428:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23894              		.loc 1 3428 0
 23895 0006 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 522


 23896 0008 3B71     		strb	r3, [r7, #4]
3429:..\src/command_processing.c ****     
3430:..\src/command_processing.c ****     // Load Payload
3431:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23897              		.loc 1 3431 0
 23898 000a 0023     		movs	r3, #0
 23899 000c 7B71     		strb	r3, [r7, #5]
3432:..\src/command_processing.c **** 
3433:..\src/command_processing.c ****     // Send Package to uart
3434:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23900              		.loc 1 3434 0
 23901 000e 3B1D     		adds	r3, r7, #4
 23902 0010 0221     		movs	r1, #2
 23903 0012 1846     		mov	r0, r3
 23904 0014 FFF7FEFF 		bl	commWrite
3435:..\src/command_processing.c **** }
 23905              		.loc 1 3435 0
 23906 0018 00BF     		nop
 23907 001a 0837     		adds	r7, r7, #8
 23908              		.cfi_def_cfa_offset 8
 23909 001c BD46     		mov	sp, r7
 23910              		.cfi_def_cfa_register 13
 23911              		@ sp needed
 23912 001e 80BD     		pop	{r7, pc}
 23913              		.cfi_endproc
 23914              	.LFE101:
 23915              		.size	cmd_ping, .-cmd_ping
 23916              		.section	.text.cmd_get_inputs,"ax",%progbits
 23917              		.align	2
 23918              		.global	cmd_get_inputs
 23919              		.thumb
 23920              		.thumb_func
 23921              		.type	cmd_get_inputs, %function
 23922              	cmd_get_inputs:
 23923              	.LFB102:
3436:..\src/command_processing.c **** 
3437:..\src/command_processing.c **** void cmd_get_inputs(){
 23924              		.loc 1 3437 0
 23925              		.cfi_startproc
 23926              		@ args = 0, pretend = 0, frame = 16
 23927              		@ frame_needed = 1, uses_anonymous_args = 0
 23928 0000 80B5     		push	{r7, lr}
 23929              		.cfi_def_cfa_offset 8
 23930              		.cfi_offset 7, -8
 23931              		.cfi_offset 14, -4
 23932 0002 84B0     		sub	sp, sp, #16
 23933              		.cfi_def_cfa_offset 24
 23934 0004 00AF     		add	r7, sp, #0
 23935              		.cfi_def_cfa_register 7
3438:..\src/command_processing.c **** 
3439:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3440:..\src/command_processing.c **** 
3441:..\src/command_processing.c ****     uint8 packet_data[6]; 
3442:..\src/command_processing.c ****     int16 aux_int16;
3443:..\src/command_processing.c ****     
3444:..\src/command_processing.c ****     //Header package
3445:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 523


3446:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23936              		.loc 1 3446 0
 23937 0006 8323     		movs	r3, #131
 23938 0008 3B72     		strb	r3, [r7, #8]
3447:..\src/command_processing.c ****         
3448:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 23939              		.loc 1 3448 0
 23940 000a 164B     		ldr	r3, .L939
 23941 000c 1A68     		ldr	r2, [r3]
 23942 000e 164B     		ldr	r3, .L939+4
 23943 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23944 0014 1846     		mov	r0, r3
 23945 0016 1449     		ldr	r1, .L939+4
 23946 0018 0346     		mov	r3, r0
 23947 001a 5B00     		lsls	r3, r3, #1
 23948 001c 0344     		add	r3, r3, r0
 23949 001e 1B01     		lsls	r3, r3, #4
 23950 0020 0B44     		add	r3, r3, r1
 23951 0022 03F29513 		addw	r3, r3, #405
 23952 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23953 0028 42FA03F3 		asr	r3, r2, r3
 23954 002c 1BB2     		sxth	r3, r3
 23955 002e FB80     		strh	r3, [r7, #6]	@ movhi
3449:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23956              		.loc 1 3449 0
 23957 0030 BB1D     		adds	r3, r7, #6
 23958 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23959 0034 BB72     		strb	r3, [r7, #10]
3450:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23960              		.loc 1 3450 0
 23961 0036 BB1D     		adds	r3, r7, #6
 23962 0038 0133     		adds	r3, r3, #1
 23963 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23964 003c 7B72     		strb	r3, [r7, #9]
3451:..\src/command_processing.c ****     
3452:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3453:..\src/command_processing.c **** 
3454:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23965              		.loc 1 3454 0
 23966 003e 07F10803 		add	r3, r7, #8
 23967 0042 0521     		movs	r1, #5
 23968 0044 1846     		mov	r0, r3
 23969 0046 FFF7FEFF 		bl	LCRChecksum
 23970 004a 0346     		mov	r3, r0
 23971 004c 7B73     		strb	r3, [r7, #13]
3455:..\src/command_processing.c **** 
3456:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23972              		.loc 1 3456 0
 23973 004e 07F10803 		add	r3, r7, #8
 23974 0052 0621     		movs	r1, #6
 23975 0054 1846     		mov	r0, r3
 23976 0056 FFF7FEFF 		bl	commWrite
3457:..\src/command_processing.c **** }
 23977              		.loc 1 3457 0
 23978 005a 00BF     		nop
 23979 005c 1037     		adds	r7, r7, #16
 23980              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 524


 23981 005e BD46     		mov	sp, r7
 23982              		.cfi_def_cfa_register 13
 23983              		@ sp needed
 23984 0060 80BD     		pop	{r7, pc}
 23985              	.L940:
 23986 0062 00BF     		.align	2
 23987              	.L939:
 23988 0064 00000000 		.word	g_refOld
 23989 0068 00000000 		.word	g_mem
 23990              		.cfi_endproc
 23991              	.LFE102:
 23992              		.size	cmd_get_inputs, .-cmd_get_inputs
 23993              		.section	.text.cmd_store_params,"ax",%progbits
 23994              		.align	2
 23995              		.global	cmd_store_params
 23996              		.thumb
 23997              		.thumb_func
 23998              		.type	cmd_store_params, %function
 23999              	cmd_store_params:
 24000              	.LFB103:
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c **** void cmd_store_params(){
 24001              		.loc 1 3459 0
 24002              		.cfi_startproc
 24003              		@ args = 0, pretend = 0, frame = 16
 24004              		@ frame_needed = 1, uses_anonymous_args = 0
 24005 0000 80B5     		push	{r7, lr}
 24006              		.cfi_def_cfa_offset 8
 24007              		.cfi_offset 7, -8
 24008              		.cfi_offset 14, -4
 24009 0002 84B0     		sub	sp, sp, #16
 24010              		.cfi_def_cfa_offset 24
 24011 0004 00AF     		add	r7, sp, #0
 24012              		.cfi_def_cfa_register 7
3460:..\src/command_processing.c ****     
3461:..\src/command_processing.c ****     // Check input mode enabled
3462:..\src/command_processing.c ****     uint32 off_1;
3463:..\src/command_processing.c ****     float mult_1;
3464:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 24013              		.loc 1 3464 0
 24014 0006 0223     		movs	r3, #2
 24015 0008 FB73     		strb	r3, [r7, #15]
3465:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3466:..\src/command_processing.c ****     uint8 CYDATA old_id;
3467:..\src/command_processing.c ****     
3468:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 24016              		.loc 1 3468 0
 24017 000a 674B     		ldr	r3, .L952
 24018 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 24019 0010 002B     		cmp	r3, #0
 24020 0012 7CD1     		bne	.L942
3469:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 24021              		.loc 1 3469 0
 24022 0014 644B     		ldr	r3, .L952
 24023 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24024 001a 1946     		mov	r1, r3
 24025 001c 624A     		ldr	r2, .L952
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 525


 24026 001e 0B46     		mov	r3, r1
 24027 0020 5B00     		lsls	r3, r3, #1
 24028 0022 0B44     		add	r3, r3, r1
 24029 0024 1B01     		lsls	r3, r3, #4
 24030 0026 1344     		add	r3, r3, r2
 24031 0028 03F5CC73 		add	r3, r3, #408
 24032 002c 1B68     		ldr	r3, [r3]
 24033 002e BB60     		str	r3, [r7, #8]
3470:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 24034              		.loc 1 3470 0
 24035 0030 5D4B     		ldr	r3, .L952
 24036 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24037 0036 1946     		mov	r1, r3
 24038 0038 5B4A     		ldr	r2, .L952
 24039 003a 0B46     		mov	r3, r1
 24040 003c 5B00     		lsls	r3, r3, #1
 24041 003e 0B44     		add	r3, r3, r1
 24042 0040 1B01     		lsls	r3, r3, #4
 24043 0042 1344     		add	r3, r3, r2
 24044 0044 03F5D273 		add	r3, r3, #420
 24045 0048 1B68     		ldr	r3, [r3]	@ float
 24046 004a 7B60     		str	r3, [r7, #4]	@ float
3471:..\src/command_processing.c **** 
3472:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 24047              		.loc 1 3472 0
 24048 004c 574B     		ldr	r3, .L952+4
 24049 004e 1B68     		ldr	r3, [r3]
 24050 0050 1846     		mov	r0, r3
 24051 0052 FFF7FEFF 		bl	__aeabi_i2f
 24052 0056 0346     		mov	r3, r0
 24053 0058 7968     		ldr	r1, [r7, #4]	@ float
 24054 005a 1846     		mov	r0, r3
 24055 005c FFF7FEFF 		bl	__aeabi_fdiv
 24056 0060 0346     		mov	r3, r0
 24057 0062 1846     		mov	r0, r3
 24058 0064 FFF7FEFF 		bl	__aeabi_f2iz
 24059 0068 0246     		mov	r2, r0
 24060 006a 504B     		ldr	r3, .L952+4
 24061 006c 1A60     		str	r2, [r3]
3473:..\src/command_processing.c **** 
3474:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 24062              		.loc 1 3474 0
 24063 006e 4F4B     		ldr	r3, .L952+4
 24064 0070 1B68     		ldr	r3, [r3]
 24065 0072 1846     		mov	r0, r3
 24066 0074 FFF7FEFF 		bl	__aeabi_i2f
 24067 0078 4B4B     		ldr	r3, .L952
 24068 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24069 007e 1946     		mov	r1, r3
 24070 0080 4B4A     		ldr	r2, .L952+8
 24071 0082 0B46     		mov	r3, r1
 24072 0084 5B00     		lsls	r3, r3, #1
 24073 0086 0B44     		add	r3, r3, r1
 24074 0088 1B01     		lsls	r3, r3, #4
 24075 008a 1344     		add	r3, r3, r2
 24076 008c 03F5D273 		add	r3, r3, #420
 24077 0090 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 526


 24078 0092 1946     		mov	r1, r3
 24079 0094 FFF7FEFF 		bl	__aeabi_fmul
 24080 0098 0346     		mov	r3, r0
 24081 009a 1846     		mov	r0, r3
 24082 009c FFF7FEFF 		bl	__aeabi_f2iz
 24083 00a0 0246     		mov	r2, r0
 24084 00a2 424B     		ldr	r3, .L952+4
 24085 00a4 1A60     		str	r2, [r3]
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 24086              		.loc 1 3476 0
 24087 00a6 414B     		ldr	r3, .L952+4
 24088 00a8 1B68     		ldr	r3, [r3]
 24089 00aa 1846     		mov	r0, r3
 24090 00ac 3E4B     		ldr	r3, .L952
 24091 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24092 00b2 1946     		mov	r1, r3
 24093 00b4 3E4A     		ldr	r2, .L952+8
 24094 00b6 0B46     		mov	r3, r1
 24095 00b8 5B00     		lsls	r3, r3, #1
 24096 00ba 0B44     		add	r3, r3, r1
 24097 00bc 1B01     		lsls	r3, r3, #4
 24098 00be 1344     		add	r3, r3, r2
 24099 00c0 03F5CC73 		add	r3, r3, #408
 24100 00c4 1B68     		ldr	r3, [r3]
 24101 00c6 1A46     		mov	r2, r3
 24102 00c8 BB68     		ldr	r3, [r7, #8]
 24103 00ca D31A     		subs	r3, r2, r3
 24104 00cc 0344     		add	r3, r3, r0
 24105 00ce 1A46     		mov	r2, r3
 24106 00d0 364B     		ldr	r3, .L952+4
 24107 00d2 1A60     		str	r2, [r3]
3477:..\src/command_processing.c ****         
3478:..\src/command_processing.c ****         // Check position Limits
3479:..\src/command_processing.c **** 
3480:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 24108              		.loc 1 3480 0
 24109 00d4 344B     		ldr	r3, .L952
 24110 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 24111 00da 002B     		cmp	r3, #0
 24112 00dc 17D0     		beq	.L942
3481:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 24113              		.loc 1 3481 0
 24114 00de 334B     		ldr	r3, .L952+4
 24115 00e0 1A68     		ldr	r2, [r3]
 24116 00e2 314B     		ldr	r3, .L952
 24117 00e4 D3F8E430 		ldr	r3, [r3, #228]
 24118 00e8 9A42     		cmp	r2, r3
 24119 00ea 04DA     		bge	.L943
3482:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 24120              		.loc 1 3482 0
 24121 00ec 2E4B     		ldr	r3, .L952
 24122 00ee D3F8E430 		ldr	r3, [r3, #228]
 24123 00f2 2E4A     		ldr	r2, .L952+4
 24124 00f4 1360     		str	r3, [r2]
 24125              	.L943:
3483:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 527


3484:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 24126              		.loc 1 3484 0
 24127 00f6 2D4B     		ldr	r3, .L952+4
 24128 00f8 1A68     		ldr	r2, [r3]
 24129 00fa 2B4B     		ldr	r3, .L952
 24130 00fc D3F8E830 		ldr	r3, [r3, #232]
 24131 0100 9A42     		cmp	r2, r3
 24132 0102 04DD     		ble	.L942
3485:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 24133              		.loc 1 3485 0
 24134 0104 284B     		ldr	r3, .L952
 24135 0106 D3F8E830 		ldr	r3, [r3, #232]
 24136 010a 284A     		ldr	r2, .L952+4
 24137 010c 1360     		str	r3, [r2]
 24138              	.L942:
3486:..\src/command_processing.c ****         }
3487:..\src/command_processing.c ****     }
3488:..\src/command_processing.c ****     
3489:..\src/command_processing.c ****     // If SD is used, create new param and data file
3490:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 24139              		.loc 1 3490 0
 24140 010e 264B     		ldr	r3, .L952
 24141 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 24142 0114 012B     		cmp	r3, #1
 24143 0116 06D1     		bne	.L944
3491:..\src/command_processing.c ****         FS_FClose(pFile);
 24144              		.loc 1 3491 0
 24145 0118 264B     		ldr	r3, .L952+12
 24146 011a 1B68     		ldr	r3, [r3]
 24147 011c 1846     		mov	r0, r3
 24148 011e FFF7FEFF 		bl	FS_FClose
3492:..\src/command_processing.c ****         
3493:..\src/command_processing.c ****         InitSD_FS();
 24149              		.loc 1 3493 0
 24150 0122 FFF7FEFF 		bl	InitSD_FS
 24151              	.L944:
3494:..\src/command_processing.c ****     }
3495:..\src/command_processing.c ****    
3496:..\src/command_processing.c ****     // Store params 
3497:..\src/command_processing.c **** 
3498:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 24152              		.loc 1 3498 0
 24153 0126 204B     		ldr	r3, .L952
 24154 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 24155 012c 204B     		ldr	r3, .L952+8
 24156 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24157 0132 9A42     		cmp	r2, r3
 24158 0134 21D0     		beq	.L945
3499:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 24159              		.loc 1 3499 0
 24160 0136 1C4B     		ldr	r3, .L952
 24161 0138 93F8A030 		ldrb	r3, [r3, #160]
 24162 013c FB70     		strb	r3, [r7, #3]
3500:..\src/command_processing.c ****         if(memStore(0)) {
 24163              		.loc 1 3500 0
 24164 013e 0020     		movs	r0, #0
 24165 0140 FFF7FEFF 		bl	memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 528


 24166 0144 0346     		mov	r3, r0
 24167 0146 002B     		cmp	r3, #0
 24168 0148 0BD0     		beq	.L946
3501:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 24169              		.loc 1 3501 0
 24170 014a 0123     		movs	r3, #1
 24171 014c 3B70     		strb	r3, [r7]
3502:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 24172              		.loc 1 3502 0
 24173 014e 0123     		movs	r3, #1
 24174 0150 7B70     		strb	r3, [r7, #1]
3503:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24175              		.loc 1 3503 0
 24176 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24177 0154 99B2     		uxth	r1, r3
 24178 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24179 0158 3B46     		mov	r3, r7
 24180 015a 1846     		mov	r0, r3
 24181 015c FFF7FEFF 		bl	commWrite_old_id
 24182 0160 18E0     		b	.L948
 24183              	.L946:
3504:..\src/command_processing.c ****         }    
3505:..\src/command_processing.c ****         else{
3506:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 24184              		.loc 1 3506 0
 24185 0162 0023     		movs	r3, #0
 24186 0164 3B70     		strb	r3, [r7]
3507:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 24187              		.loc 1 3507 0
 24188 0166 0023     		movs	r3, #0
 24189 0168 7B70     		strb	r3, [r7, #1]
3508:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24190              		.loc 1 3508 0
 24191 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24192 016c 99B2     		uxth	r1, r3
 24193 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24194 0170 3B46     		mov	r3, r7
 24195 0172 1846     		mov	r0, r3
 24196 0174 FFF7FEFF 		bl	commWrite_old_id
 24197 0178 0CE0     		b	.L948
 24198              	.L945:
3509:..\src/command_processing.c ****         }
3510:..\src/command_processing.c ****     }    
3511:..\src/command_processing.c ****     else {
3512:..\src/command_processing.c ****         if(memStore(0))
 24199              		.loc 1 3512 0
 24200 017a 0020     		movs	r0, #0
 24201 017c FFF7FEFF 		bl	memStore
 24202 0180 0346     		mov	r3, r0
 24203 0182 002B     		cmp	r3, #0
 24204 0184 03D0     		beq	.L949
3513:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 24205              		.loc 1 3513 0
 24206 0186 0120     		movs	r0, #1
 24207 0188 FFF7FEFF 		bl	sendAcknowledgment
 24208 018c 02E0     		b	.L948
 24209              	.L949:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 529


3514:..\src/command_processing.c ****         else
3515:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 24210              		.loc 1 3515 0
 24211 018e 0020     		movs	r0, #0
 24212 0190 FFF7FEFF 		bl	sendAcknowledgment
 24213              	.L948:
3516:..\src/command_processing.c ****     }
3517:..\src/command_processing.c ****     
3518:..\src/command_processing.c ****     // FW reset (if necessary)
3519:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 24214              		.loc 1 3519 0
 24215 0194 084B     		ldr	r3, .L952+16
 24216 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24217 0198 012B     		cmp	r3, #1
 24218 019a 01D1     		bne	.L951
3520:..\src/command_processing.c ****         CySoftwareReset();
 24219              		.loc 1 3520 0
 24220 019c FFF7FEFF 		bl	CySoftwareReset
 24221              	.L951:
3521:..\src/command_processing.c ****     }
3522:..\src/command_processing.c **** }
 24222              		.loc 1 3522 0
 24223 01a0 00BF     		nop
 24224 01a2 1037     		adds	r7, r7, #16
 24225              		.cfi_def_cfa_offset 8
 24226 01a4 BD46     		mov	sp, r7
 24227              		.cfi_def_cfa_register 13
 24228              		@ sp needed
 24229 01a6 80BD     		pop	{r7, pc}
 24230              	.L953:
 24231              		.align	2
 24232              	.L952:
 24233 01a8 00000000 		.word	c_mem
 24234 01ac 00000000 		.word	g_refNew
 24235 01b0 00000000 		.word	g_mem
 24236 01b4 00000000 		.word	pFile
 24237 01b8 00000000 		.word	reset_PSoC_flag
 24238              		.cfi_endproc
 24239              	.LFE103:
 24240              		.size	cmd_store_params, .-cmd_store_params
 24241              		.section	.text.cmd_get_emg,"ax",%progbits
 24242              		.align	2
 24243              		.global	cmd_get_emg
 24244              		.thumb
 24245              		.thumb_func
 24246              		.type	cmd_get_emg, %function
 24247              	cmd_get_emg:
 24248              	.LFB104:
3523:..\src/command_processing.c **** 
3524:..\src/command_processing.c **** void cmd_get_emg(){
 24249              		.loc 1 3524 0
 24250              		.cfi_startproc
 24251              		@ args = 0, pretend = 0, frame = 16
 24252              		@ frame_needed = 1, uses_anonymous_args = 0
 24253 0000 80B5     		push	{r7, lr}
 24254              		.cfi_def_cfa_offset 8
 24255              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 530


 24256              		.cfi_offset 14, -4
 24257 0002 84B0     		sub	sp, sp, #16
 24258              		.cfi_def_cfa_offset 24
 24259 0004 00AF     		add	r7, sp, #0
 24260              		.cfi_def_cfa_register 7
3525:..\src/command_processing.c ****     
3526:..\src/command_processing.c ****     uint8 packet_data[6];
3527:..\src/command_processing.c ****     int16 aux_int16;
3528:..\src/command_processing.c ****     
3529:..\src/command_processing.c ****     // Header        
3530:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 24261              		.loc 1 3530 0
 24262 0006 8823     		movs	r3, #136
 24263 0008 3B72     		strb	r3, [r7, #8]
3531:..\src/command_processing.c ****     
3532:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 24264              		.loc 1 3532 0
 24265 000a 144B     		ldr	r3, .L955
 24266 000c 1B68     		ldr	r3, [r3]
 24267 000e 1BB2     		sxth	r3, r3
 24268 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3533:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24269              		.loc 1 3533 0
 24270 0012 BB1D     		adds	r3, r7, #6
 24271 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24272 0016 BB72     		strb	r3, [r7, #10]
3534:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24273              		.loc 1 3534 0
 24274 0018 BB1D     		adds	r3, r7, #6
 24275 001a 0133     		adds	r3, r3, #1
 24276 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24277 001e 7B72     		strb	r3, [r7, #9]
3535:..\src/command_processing.c ****     
3536:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 24278              		.loc 1 3536 0
 24279 0020 0E4B     		ldr	r3, .L955
 24280 0022 5B68     		ldr	r3, [r3, #4]
 24281 0024 1BB2     		sxth	r3, r3
 24282 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3537:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24283              		.loc 1 3537 0
 24284 0028 BB1D     		adds	r3, r7, #6
 24285 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24286 002c 3B73     		strb	r3, [r7, #12]
3538:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24287              		.loc 1 3538 0
 24288 002e BB1D     		adds	r3, r7, #6
 24289 0030 0133     		adds	r3, r3, #1
 24290 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24291 0034 FB72     		strb	r3, [r7, #11]
3539:..\src/command_processing.c **** 
3540:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24292              		.loc 1 3540 0
 24293 0036 07F10803 		add	r3, r7, #8
 24294 003a 0521     		movs	r1, #5
 24295 003c 1846     		mov	r0, r3
 24296 003e FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 531


 24297 0042 0346     		mov	r3, r0
 24298 0044 7B73     		strb	r3, [r7, #13]
3541:..\src/command_processing.c **** 
3542:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24299              		.loc 1 3542 0
 24300 0046 07F10803 		add	r3, r7, #8
 24301 004a 0621     		movs	r1, #6
 24302 004c 1846     		mov	r0, r3
 24303 004e FFF7FEFF 		bl	commWrite
3543:..\src/command_processing.c **** 
3544:..\src/command_processing.c **** }
 24304              		.loc 1 3544 0
 24305 0052 00BF     		nop
 24306 0054 1037     		adds	r7, r7, #16
 24307              		.cfi_def_cfa_offset 8
 24308 0056 BD46     		mov	sp, r7
 24309              		.cfi_def_cfa_register 13
 24310              		@ sp needed
 24311 0058 80BD     		pop	{r7, pc}
 24312              	.L956:
 24313 005a 00BF     		.align	2
 24314              	.L955:
 24315 005c 00000000 		.word	g_emg_measOld
 24316              		.cfi_endproc
 24317              	.LFE104:
 24318              		.size	cmd_get_emg, .-cmd_get_emg
 24319              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 24320              		.align	2
 24321              		.global	cmd_get_imu_readings
 24322              		.thumb
 24323              		.thumb_func
 24324              		.type	cmd_get_imu_readings, %function
 24325              	cmd_get_imu_readings:
 24326              	.LFB105:
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c **** void cmd_get_imu_readings(){
 24327              		.loc 1 3546 0
 24328              		.cfi_startproc
 24329              		@ args = 0, pretend = 0, frame = 400
 24330              		@ frame_needed = 1, uses_anonymous_args = 0
 24331 0000 90B5     		push	{r4, r7, lr}
 24332              		.cfi_def_cfa_offset 12
 24333              		.cfi_offset 4, -12
 24334              		.cfi_offset 7, -8
 24335              		.cfi_offset 14, -4
 24336 0002 E5B0     		sub	sp, sp, #404
 24337              		.cfi_def_cfa_offset 416
 24338 0004 00AF     		add	r7, sp, #0
 24339              		.cfi_def_cfa_register 7
3547:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3548:..\src/command_processing.c ****     
3549:..\src/command_processing.c ****     uint8 k_imu;
3550:..\src/command_processing.c ****     uint16 c = 1;
 24340              		.loc 1 3550 0
 24341 0006 0123     		movs	r3, #1
 24342 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3551:..\src/command_processing.c ****     uint8 k = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 532


 24343              		.loc 1 3551 0
 24344 000c 0023     		movs	r3, #0
 24345 000e 87F88B31 		strb	r3, [r7, #395]
3552:..\src/command_processing.c ****     uint16 gl_c = 1;
 24346              		.loc 1 3552 0
 24347 0012 0123     		movs	r3, #1
 24348 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3553:..\src/command_processing.c ****     int16 aux_int16;
3554:..\src/command_processing.c ****     float aux_float;
3555:..\src/command_processing.c ****     
3556:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3557:..\src/command_processing.c ****     uint8 packet_data[350];
3558:..\src/command_processing.c ****     uint8 single_packet[32];
3559:..\src/command_processing.c ****     
3560:..\src/command_processing.c ****     //Header package 
3561:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 24349              		.loc 1 3561 0
 24350 0018 07F12003 		add	r3, r7, #32
 24351 001c A122     		movs	r2, #161
 24352 001e 1A70     		strb	r2, [r3]
3562:..\src/command_processing.c ****  
3563:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 24353              		.loc 1 3563 0
 24354 0020 0023     		movs	r3, #0
 24355 0022 87F88F31 		strb	r3, [r7, #399]
 24356 0026 82E2     		b	.L958
 24357              	.L974:
3564:..\src/command_processing.c ****     {	
3565:..\src/command_processing.c ****             
3566:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 24358              		.loc 1 3566 0
 24359 0028 3B46     		mov	r3, r7
 24360 002a 3A22     		movs	r2, #58
 24361 002c 1A70     		strb	r2, [r3]
3567:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 24362              		.loc 1 3567 0
 24363 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24364 0032 DB4A     		ldr	r2, .L975
 24365 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24366 0036 1946     		mov	r1, r3
 24367 0038 DA4A     		ldr	r2, .L975+4
 24368 003a 0B46     		mov	r3, r1
 24369 003c 9B00     		lsls	r3, r3, #2
 24370 003e 0B44     		add	r3, r3, r1
 24371 0040 1344     		add	r3, r3, r2
 24372 0042 03F20223 		addw	r3, r3, #514
 24373 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24374 0048 002B     		cmp	r3, #0
 24375 004a 5DD0     		beq	.L959
3568:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 24376              		.loc 1 3568 0
 24377 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24378 0050 D549     		ldr	r1, .L975+8
 24379 0052 1346     		mov	r3, r2
 24380 0054 9B00     		lsls	r3, r3, #2
 24381 0056 1344     		add	r3, r3, r2
 24382 0058 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 533


 24383 005a 0B44     		add	r3, r3, r1
 24384 005c 0233     		adds	r3, r3, #2
 24385 005e B3F90030 		ldrsh	r3, [r3]
 24386 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3569:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24387              		.loc 1 3569 0
 24388 0066 B7F88C31 		ldrh	r3, [r7, #396]
 24389 006a 0133     		adds	r3, r3, #1
 24390 006c 07F5C372 		add	r2, r7, #390
 24391 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24392 0072 3A46     		mov	r2, r7
 24393 0074 D154     		strb	r1, [r2, r3]
3570:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24394              		.loc 1 3570 0
 24395 0076 B7F88C21 		ldrh	r2, [r7, #396]
 24396 007a 07F5C373 		add	r3, r7, #390
 24397 007e 0133     		adds	r3, r3, #1
 24398 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24399 0082 3B46     		mov	r3, r7
 24400 0084 9954     		strb	r1, [r3, r2]
3571:..\src/command_processing.c **** 
3572:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 24401              		.loc 1 3572 0
 24402 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24403 008a C749     		ldr	r1, .L975+8
 24404 008c 1346     		mov	r3, r2
 24405 008e 9B00     		lsls	r3, r3, #2
 24406 0090 1344     		add	r3, r3, r2
 24407 0092 DB00     		lsls	r3, r3, #3
 24408 0094 0B44     		add	r3, r3, r1
 24409 0096 0433     		adds	r3, r3, #4
 24410 0098 B3F90030 		ldrsh	r3, [r3]
 24411 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3573:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24412              		.loc 1 3573 0
 24413 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 24414 00a4 0333     		adds	r3, r3, #3
 24415 00a6 07F5C372 		add	r2, r7, #390
 24416 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24417 00ac 3A46     		mov	r2, r7
 24418 00ae D154     		strb	r1, [r2, r3]
3574:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24419              		.loc 1 3574 0
 24420 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 24421 00b4 9A1C     		adds	r2, r3, #2
 24422 00b6 07F5C373 		add	r3, r7, #390
 24423 00ba 0133     		adds	r3, r3, #1
 24424 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24425 00be 3B46     		mov	r3, r7
 24426 00c0 9954     		strb	r1, [r3, r2]
3575:..\src/command_processing.c **** 
3576:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 24427              		.loc 1 3576 0
 24428 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24429 00c6 B849     		ldr	r1, .L975+8
 24430 00c8 1346     		mov	r3, r2
 24431 00ca 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 534


 24432 00cc 1344     		add	r3, r3, r2
 24433 00ce DB00     		lsls	r3, r3, #3
 24434 00d0 0B44     		add	r3, r3, r1
 24435 00d2 0633     		adds	r3, r3, #6
 24436 00d4 B3F90030 		ldrsh	r3, [r3]
 24437 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3577:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24438              		.loc 1 3577 0
 24439 00dc B7F88C31 		ldrh	r3, [r7, #396]
 24440 00e0 0533     		adds	r3, r3, #5
 24441 00e2 07F5C372 		add	r2, r7, #390
 24442 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24443 00e8 3A46     		mov	r2, r7
 24444 00ea D154     		strb	r1, [r2, r3]
3578:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24445              		.loc 1 3578 0
 24446 00ec B7F88C31 		ldrh	r3, [r7, #396]
 24447 00f0 1A1D     		adds	r2, r3, #4
 24448 00f2 07F5C373 		add	r3, r7, #390
 24449 00f6 0133     		adds	r3, r3, #1
 24450 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24451 00fa 3B46     		mov	r3, r7
 24452 00fc 9954     		strb	r1, [r3, r2]
3579:..\src/command_processing.c **** 
3580:..\src/command_processing.c ****             c = c + 6;
 24453              		.loc 1 3580 0
 24454 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24455 0102 0633     		adds	r3, r3, #6
 24456 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24457              	.L959:
3581:..\src/command_processing.c ****         }
3582:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 24458              		.loc 1 3582 0
 24459 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24460 010c A44A     		ldr	r2, .L975
 24461 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24462 0110 1946     		mov	r1, r3
 24463 0112 A44A     		ldr	r2, .L975+4
 24464 0114 0B46     		mov	r3, r1
 24465 0116 9B00     		lsls	r3, r3, #2
 24466 0118 0B44     		add	r3, r3, r1
 24467 011a 1344     		add	r3, r3, r2
 24468 011c 03F20323 		addw	r3, r3, #515
 24469 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24470 0122 002B     		cmp	r3, #0
 24471 0124 5DD0     		beq	.L960
3583:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 24472              		.loc 1 3583 0
 24473 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24474 012a 9F49     		ldr	r1, .L975+8
 24475 012c 1346     		mov	r3, r2
 24476 012e 9B00     		lsls	r3, r3, #2
 24477 0130 1344     		add	r3, r3, r2
 24478 0132 DB00     		lsls	r3, r3, #3
 24479 0134 0B44     		add	r3, r3, r1
 24480 0136 0833     		adds	r3, r3, #8
 24481 0138 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 535


 24482 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3584:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24483              		.loc 1 3584 0
 24484 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24485 0144 0133     		adds	r3, r3, #1
 24486 0146 07F5C372 		add	r2, r7, #390
 24487 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24488 014c 3A46     		mov	r2, r7
 24489 014e D154     		strb	r1, [r2, r3]
3585:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24490              		.loc 1 3585 0
 24491 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24492 0154 07F5C373 		add	r3, r7, #390
 24493 0158 0133     		adds	r3, r3, #1
 24494 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24495 015c 3B46     		mov	r3, r7
 24496 015e 9954     		strb	r1, [r3, r2]
3586:..\src/command_processing.c **** 
3587:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24497              		.loc 1 3587 0
 24498 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24499 0164 9049     		ldr	r1, .L975+8
 24500 0166 1346     		mov	r3, r2
 24501 0168 9B00     		lsls	r3, r3, #2
 24502 016a 1344     		add	r3, r3, r2
 24503 016c DB00     		lsls	r3, r3, #3
 24504 016e 0B44     		add	r3, r3, r1
 24505 0170 0A33     		adds	r3, r3, #10
 24506 0172 B3F90030 		ldrsh	r3, [r3]
 24507 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3588:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24508              		.loc 1 3588 0
 24509 017a B7F88C31 		ldrh	r3, [r7, #396]
 24510 017e 0333     		adds	r3, r3, #3
 24511 0180 07F5C372 		add	r2, r7, #390
 24512 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24513 0186 3A46     		mov	r2, r7
 24514 0188 D154     		strb	r1, [r2, r3]
3589:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24515              		.loc 1 3589 0
 24516 018a B7F88C31 		ldrh	r3, [r7, #396]
 24517 018e 9A1C     		adds	r2, r3, #2
 24518 0190 07F5C373 		add	r3, r7, #390
 24519 0194 0133     		adds	r3, r3, #1
 24520 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24521 0198 3B46     		mov	r3, r7
 24522 019a 9954     		strb	r1, [r3, r2]
3590:..\src/command_processing.c **** 
3591:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24523              		.loc 1 3591 0
 24524 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24525 01a0 8149     		ldr	r1, .L975+8
 24526 01a2 1346     		mov	r3, r2
 24527 01a4 9B00     		lsls	r3, r3, #2
 24528 01a6 1344     		add	r3, r3, r2
 24529 01a8 DB00     		lsls	r3, r3, #3
 24530 01aa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 536


 24531 01ac 0C33     		adds	r3, r3, #12
 24532 01ae B3F90030 		ldrsh	r3, [r3]
 24533 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3592:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24534              		.loc 1 3592 0
 24535 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24536 01ba 0533     		adds	r3, r3, #5
 24537 01bc 07F5C372 		add	r2, r7, #390
 24538 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24539 01c2 3A46     		mov	r2, r7
 24540 01c4 D154     		strb	r1, [r2, r3]
3593:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24541              		.loc 1 3593 0
 24542 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24543 01ca 1A1D     		adds	r2, r3, #4
 24544 01cc 07F5C373 		add	r3, r7, #390
 24545 01d0 0133     		adds	r3, r3, #1
 24546 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24547 01d4 3B46     		mov	r3, r7
 24548 01d6 9954     		strb	r1, [r3, r2]
3594:..\src/command_processing.c **** 
3595:..\src/command_processing.c ****             c = c + 6;
 24549              		.loc 1 3595 0
 24550 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24551 01dc 0633     		adds	r3, r3, #6
 24552 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24553              	.L960:
3596:..\src/command_processing.c ****         }
3597:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24554              		.loc 1 3597 0
 24555 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24556 01e6 6E4A     		ldr	r2, .L975
 24557 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24558 01ea 1946     		mov	r1, r3
 24559 01ec 6D4A     		ldr	r2, .L975+4
 24560 01ee 0B46     		mov	r3, r1
 24561 01f0 9B00     		lsls	r3, r3, #2
 24562 01f2 0B44     		add	r3, r3, r1
 24563 01f4 1344     		add	r3, r3, r2
 24564 01f6 03F50173 		add	r3, r3, #516
 24565 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24566 01fc 002B     		cmp	r3, #0
 24567 01fe 5DD0     		beq	.L961
3598:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24568              		.loc 1 3598 0
 24569 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24570 0204 6849     		ldr	r1, .L975+8
 24571 0206 1346     		mov	r3, r2
 24572 0208 9B00     		lsls	r3, r3, #2
 24573 020a 1344     		add	r3, r3, r2
 24574 020c DB00     		lsls	r3, r3, #3
 24575 020e 0B44     		add	r3, r3, r1
 24576 0210 0E33     		adds	r3, r3, #14
 24577 0212 B3F90030 		ldrsh	r3, [r3]
 24578 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3599:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24579              		.loc 1 3599 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 537


 24580 021a B7F88C31 		ldrh	r3, [r7, #396]
 24581 021e 0133     		adds	r3, r3, #1
 24582 0220 07F5C372 		add	r2, r7, #390
 24583 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24584 0226 3A46     		mov	r2, r7
 24585 0228 D154     		strb	r1, [r2, r3]
3600:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24586              		.loc 1 3600 0
 24587 022a B7F88C21 		ldrh	r2, [r7, #396]
 24588 022e 07F5C373 		add	r3, r7, #390
 24589 0232 0133     		adds	r3, r3, #1
 24590 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24591 0236 3B46     		mov	r3, r7
 24592 0238 9954     		strb	r1, [r3, r2]
3601:..\src/command_processing.c **** 
3602:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 24593              		.loc 1 3602 0
 24594 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24595 023e 5A49     		ldr	r1, .L975+8
 24596 0240 1346     		mov	r3, r2
 24597 0242 9B00     		lsls	r3, r3, #2
 24598 0244 1344     		add	r3, r3, r2
 24599 0246 DB00     		lsls	r3, r3, #3
 24600 0248 0B44     		add	r3, r3, r1
 24601 024a 1033     		adds	r3, r3, #16
 24602 024c B3F90030 		ldrsh	r3, [r3]
 24603 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3603:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24604              		.loc 1 3603 0
 24605 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24606 0258 0333     		adds	r3, r3, #3
 24607 025a 07F5C372 		add	r2, r7, #390
 24608 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24609 0260 3A46     		mov	r2, r7
 24610 0262 D154     		strb	r1, [r2, r3]
3604:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24611              		.loc 1 3604 0
 24612 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24613 0268 9A1C     		adds	r2, r3, #2
 24614 026a 07F5C373 		add	r3, r7, #390
 24615 026e 0133     		adds	r3, r3, #1
 24616 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24617 0272 3B46     		mov	r3, r7
 24618 0274 9954     		strb	r1, [r3, r2]
3605:..\src/command_processing.c **** 
3606:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24619              		.loc 1 3606 0
 24620 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24621 027a 4B49     		ldr	r1, .L975+8
 24622 027c 1346     		mov	r3, r2
 24623 027e 9B00     		lsls	r3, r3, #2
 24624 0280 1344     		add	r3, r3, r2
 24625 0282 DB00     		lsls	r3, r3, #3
 24626 0284 0B44     		add	r3, r3, r1
 24627 0286 1233     		adds	r3, r3, #18
 24628 0288 B3F90030 		ldrsh	r3, [r3]
 24629 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 538


3607:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24630              		.loc 1 3607 0
 24631 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24632 0294 0533     		adds	r3, r3, #5
 24633 0296 07F5C372 		add	r2, r7, #390
 24634 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24635 029c 3A46     		mov	r2, r7
 24636 029e D154     		strb	r1, [r2, r3]
3608:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24637              		.loc 1 3608 0
 24638 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24639 02a4 1A1D     		adds	r2, r3, #4
 24640 02a6 07F5C373 		add	r3, r7, #390
 24641 02aa 0133     		adds	r3, r3, #1
 24642 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24643 02ae 3B46     		mov	r3, r7
 24644 02b0 9954     		strb	r1, [r3, r2]
3609:..\src/command_processing.c **** 
3610:..\src/command_processing.c ****             c = c + 6;
 24645              		.loc 1 3610 0
 24646 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24647 02b6 0633     		adds	r3, r3, #6
 24648 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24649              	.L961:
3611:..\src/command_processing.c ****         }
3612:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24650              		.loc 1 3612 0
 24651 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24652 02c0 374A     		ldr	r2, .L975
 24653 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24654 02c4 1946     		mov	r1, r3
 24655 02c6 374A     		ldr	r2, .L975+4
 24656 02c8 0B46     		mov	r3, r1
 24657 02ca 9B00     		lsls	r3, r3, #2
 24658 02cc 0B44     		add	r3, r3, r1
 24659 02ce 1344     		add	r3, r3, r2
 24660 02d0 03F20523 		addw	r3, r3, #517
 24661 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24662 02d6 002B     		cmp	r3, #0
 24663 02d8 00F0AF80 		beq	.L962
3613:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24664              		.loc 1 3613 0
 24665 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24666 02e0 3149     		ldr	r1, .L975+8
 24667 02e2 1346     		mov	r3, r2
 24668 02e4 9B00     		lsls	r3, r3, #2
 24669 02e6 1344     		add	r3, r3, r2
 24670 02e8 DB00     		lsls	r3, r3, #3
 24671 02ea 0B44     		add	r3, r3, r1
 24672 02ec 1433     		adds	r3, r3, #20
 24673 02ee 1B68     		ldr	r3, [r3]	@ float
 24674 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24675              		.loc 1 3614 0
 24676 02f4 0023     		movs	r3, #0
 24677 02f6 87F88B31 		strb	r3, [r7, #395]
 24678 02fa 13E0     		b	.L963
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 539


 24679              	.L964:
3615:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24680              		.loc 1 3615 0 discriminator 3
 24681 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24682 0300 1A1D     		adds	r2, r3, #4
 24683 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24684 0306 D31A     		subs	r3, r2, r3
 24685 0308 013B     		subs	r3, r3, #1
 24686 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24687 030e 07F5C071 		add	r1, r7, #384
 24688 0312 0A44     		add	r2, r2, r1
 24689 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24690 0316 3A46     		mov	r2, r7
 24691 0318 D154     		strb	r1, [r2, r3]
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24692              		.loc 1 3614 0 discriminator 3
 24693 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24694 031e 0133     		adds	r3, r3, #1
 24695 0320 87F88B31 		strb	r3, [r7, #395]
 24696              	.L963:
3614:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24697              		.loc 1 3614 0 is_stmt 0 discriminator 1
 24698 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24699 0328 032B     		cmp	r3, #3
 24700 032a E7D9     		bls	.L964
3616:..\src/command_processing.c ****             }
3617:..\src/command_processing.c **** 
3618:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24701              		.loc 1 3618 0 is_stmt 1
 24702 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24703 0330 1D49     		ldr	r1, .L975+8
 24704 0332 1346     		mov	r3, r2
 24705 0334 9B00     		lsls	r3, r3, #2
 24706 0336 1344     		add	r3, r3, r2
 24707 0338 DB00     		lsls	r3, r3, #3
 24708 033a 0B44     		add	r3, r3, r1
 24709 033c 1833     		adds	r3, r3, #24
 24710 033e 1B68     		ldr	r3, [r3]	@ float
 24711 0340 C7F88031 		str	r3, [r7, #384]	@ float
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24712              		.loc 1 3619 0
 24713 0344 0023     		movs	r3, #0
 24714 0346 87F88B31 		strb	r3, [r7, #395]
 24715 034a 14E0     		b	.L965
 24716              	.L966:
3620:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24717              		.loc 1 3620 0 discriminator 3
 24718 034c B7F88C31 		ldrh	r3, [r7, #396]
 24719 0350 03F10802 		add	r2, r3, #8
 24720 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24721 0358 D31A     		subs	r3, r2, r3
 24722 035a 013B     		subs	r3, r3, #1
 24723 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24724 0360 07F5C071 		add	r1, r7, #384
 24725 0364 0A44     		add	r2, r2, r1
 24726 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24727 0368 3A46     		mov	r2, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 540


 24728 036a D154     		strb	r1, [r2, r3]
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24729              		.loc 1 3619 0 discriminator 3
 24730 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24731 0370 0133     		adds	r3, r3, #1
 24732 0372 87F88B31 		strb	r3, [r7, #395]
 24733              	.L965:
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24734              		.loc 1 3619 0 is_stmt 0 discriminator 1
 24735 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24736 037a 032B     		cmp	r3, #3
 24737 037c E6D9     		bls	.L966
3621:..\src/command_processing.c ****             }
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24738              		.loc 1 3623 0 is_stmt 1
 24739 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24740 0382 0949     		ldr	r1, .L975+8
 24741 0384 1346     		mov	r3, r2
 24742 0386 9B00     		lsls	r3, r3, #2
 24743 0388 1344     		add	r3, r3, r2
 24744 038a DB00     		lsls	r3, r3, #3
 24745 038c 0B44     		add	r3, r3, r1
 24746 038e 1C33     		adds	r3, r3, #28
 24747 0390 1B68     		ldr	r3, [r3]	@ float
 24748 0392 C7F88031 		str	r3, [r7, #384]	@ float
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24749              		.loc 1 3624 0
 24750 0396 0023     		movs	r3, #0
 24751 0398 87F88B31 		strb	r3, [r7, #395]
 24752 039c 1BE0     		b	.L967
 24753              	.L976:
 24754 039e 00BF     		.align	2
 24755              	.L975:
 24756 03a0 00000000 		.word	IMU_connected
 24757 03a4 00000000 		.word	c_mem
 24758 03a8 00000000 		.word	g_imu
 24759              	.L968:
3625:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24760              		.loc 1 3625 0 discriminator 3
 24761 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24762 03b0 03F10C02 		add	r2, r3, #12
 24763 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24764 03b8 D31A     		subs	r3, r2, r3
 24765 03ba 013B     		subs	r3, r3, #1
 24766 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24767 03c0 07F5C071 		add	r1, r7, #384
 24768 03c4 0A44     		add	r2, r2, r1
 24769 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24770 03c8 3A46     		mov	r2, r7
 24771 03ca D154     		strb	r1, [r2, r3]
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24772              		.loc 1 3624 0 discriminator 3
 24773 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24774 03d0 0133     		adds	r3, r3, #1
 24775 03d2 87F88B31 		strb	r3, [r7, #395]
 24776              	.L967:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 541


3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24777              		.loc 1 3624 0 is_stmt 0 discriminator 1
 24778 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24779 03da 032B     		cmp	r3, #3
 24780 03dc E6D9     		bls	.L968
3626:..\src/command_processing.c ****             }
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24781              		.loc 1 3628 0 is_stmt 1
 24782 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24783 03e2 6749     		ldr	r1, .L977
 24784 03e4 1346     		mov	r3, r2
 24785 03e6 9B00     		lsls	r3, r3, #2
 24786 03e8 1344     		add	r3, r3, r2
 24787 03ea DB00     		lsls	r3, r3, #3
 24788 03ec 0B44     		add	r3, r3, r1
 24789 03ee 2033     		adds	r3, r3, #32
 24790 03f0 1B68     		ldr	r3, [r3]	@ float
 24791 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24792              		.loc 1 3629 0
 24793 03f6 0023     		movs	r3, #0
 24794 03f8 87F88B31 		strb	r3, [r7, #395]
 24795 03fc 14E0     		b	.L969
 24796              	.L970:
3630:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24797              		.loc 1 3630 0 discriminator 3
 24798 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24799 0402 03F11002 		add	r2, r3, #16
 24800 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24801 040a D31A     		subs	r3, r2, r3
 24802 040c 013B     		subs	r3, r3, #1
 24803 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24804 0412 07F5C071 		add	r1, r7, #384
 24805 0416 0A44     		add	r2, r2, r1
 24806 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24807 041a 3A46     		mov	r2, r7
 24808 041c D154     		strb	r1, [r2, r3]
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24809              		.loc 1 3629 0 discriminator 3
 24810 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24811 0422 0133     		adds	r3, r3, #1
 24812 0424 87F88B31 		strb	r3, [r7, #395]
 24813              	.L969:
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24814              		.loc 1 3629 0 is_stmt 0 discriminator 1
 24815 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24816 042c 032B     		cmp	r3, #3
 24817 042e E6D9     		bls	.L970
3631:..\src/command_processing.c ****             }
3632:..\src/command_processing.c ****             c = c + 16;
 24818              		.loc 1 3632 0 is_stmt 1
 24819 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24820 0434 1033     		adds	r3, r3, #16
 24821 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24822              	.L962:
3633:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 542


3634:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 24823              		.loc 1 3634 0
 24824 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24825 043e 514A     		ldr	r2, .L977+4
 24826 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24827 0442 1946     		mov	r1, r3
 24828 0444 504A     		ldr	r2, .L977+8
 24829 0446 0B46     		mov	r3, r1
 24830 0448 9B00     		lsls	r3, r3, #2
 24831 044a 0B44     		add	r3, r3, r1
 24832 044c 1344     		add	r3, r3, r2
 24833 044e 03F20623 		addw	r3, r3, #518
 24834 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24835 0454 002B     		cmp	r3, #0
 24836 0456 21D0     		beq	.L971
3635:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 24837              		.loc 1 3635 0
 24838 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24839 045c 4849     		ldr	r1, .L977
 24840 045e 1346     		mov	r3, r2
 24841 0460 9B00     		lsls	r3, r3, #2
 24842 0462 1344     		add	r3, r3, r2
 24843 0464 DB00     		lsls	r3, r3, #3
 24844 0466 0B44     		add	r3, r3, r1
 24845 0468 2433     		adds	r3, r3, #36
 24846 046a B3F90030 		ldrsh	r3, [r3]
 24847 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3636:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24848              		.loc 1 3636 0
 24849 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24850 0476 0133     		adds	r3, r3, #1
 24851 0478 07F5C372 		add	r2, r7, #390
 24852 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24853 047e 3A46     		mov	r2, r7
 24854 0480 D154     		strb	r1, [r2, r3]
3637:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24855              		.loc 1 3637 0
 24856 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24857 0486 07F5C373 		add	r3, r7, #390
 24858 048a 0133     		adds	r3, r3, #1
 24859 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24860 048e 3B46     		mov	r3, r7
 24861 0490 9954     		strb	r1, [r3, r2]
3638:..\src/command_processing.c ****             c = c + 2;
 24862              		.loc 1 3638 0
 24863 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24864 0496 0233     		adds	r3, r3, #2
 24865 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24866              	.L971:
3639:..\src/command_processing.c ****         }
3640:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24867              		.loc 1 3640 0
 24868 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24869 04a0 384A     		ldr	r2, .L977+4
 24870 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24871 04a4 1A46     		mov	r2, r3
 24872 04a6 394B     		ldr	r3, .L977+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 543


 24873 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24874 04ac 013B     		subs	r3, r3, #1
 24875 04ae 3A46     		mov	r2, r7
 24876 04b0 3A21     		movs	r1, #58
 24877 04b2 D154     		strb	r1, [r2, r3]
3641:..\src/command_processing.c ****         c = 1;
 24878              		.loc 1 3641 0
 24879 04b4 0123     		movs	r3, #1
 24880 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3642:..\src/command_processing.c ****                
3643:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24881              		.loc 1 3643 0
 24882 04ba 0023     		movs	r3, #0
 24883 04bc 87F88B31 		strb	r3, [r7, #395]
 24884 04c0 10E0     		b	.L972
 24885              	.L973:
3644:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24886              		.loc 1 3644 0 discriminator 3
 24887 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24888 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24889 04ca 1344     		add	r3, r3, r2
 24890 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24891 04d0 3946     		mov	r1, r7
 24892 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24893 04d4 07F12002 		add	r2, r7, #32
 24894 04d8 D154     		strb	r1, [r2, r3]
3643:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24895              		.loc 1 3643 0 discriminator 3
 24896 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24897 04de 0133     		adds	r3, r3, #1
 24898 04e0 87F88B31 		strb	r3, [r7, #395]
 24899              	.L972:
3643:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24900              		.loc 1 3643 0 is_stmt 0 discriminator 1
 24901 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24902 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24903 04ec 2549     		ldr	r1, .L977+4
 24904 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24905 04f0 1946     		mov	r1, r3
 24906 04f2 264B     		ldr	r3, .L977+12
 24907 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24908 04f8 9A42     		cmp	r2, r3
 24909 04fa E2DB     		blt	.L973
3645:..\src/command_processing.c ****         }
3646:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24910              		.loc 1 3646 0 is_stmt 1 discriminator 2
 24911 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24912 0500 204A     		ldr	r2, .L977+4
 24913 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24914 0504 1A46     		mov	r2, r3
 24915 0506 214B     		ldr	r3, .L977+12
 24916 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24917 050c 9AB2     		uxth	r2, r3
 24918 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24919 0512 1344     		add	r3, r3, r2
 24920 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3647:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 544


3648:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 24921              		.loc 1 3648 0 discriminator 2
 24922 0518 3B46     		mov	r3, r7
 24923 051a 2022     		movs	r2, #32
 24924 051c 0021     		movs	r1, #0
 24925 051e 1846     		mov	r0, r3
 24926 0520 FFF7FEFF 		bl	memset
3563:..\src/command_processing.c ****     {	
 24927              		.loc 1 3563 0 discriminator 2
 24928 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24929 0528 0133     		adds	r3, r3, #1
 24930 052a 87F88F31 		strb	r3, [r7, #399]
 24931              	.L958:
3563:..\src/command_processing.c ****     {	
 24932              		.loc 1 3563 0 is_stmt 0 discriminator 1
 24933 052e 184B     		ldr	r3, .L977+16
 24934 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24935 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24936 0536 9A42     		cmp	r2, r3
 24937 0538 FFF476AD 		bcc	.L974
3649:..\src/command_processing.c ****         
3650:..\src/command_processing.c ****     }
3651:..\src/command_processing.c **** 
3652:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3653:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24938              		.loc 1 3653 0 is_stmt 1
 24939 053c 154B     		ldr	r3, .L977+20
 24940 053e 1B68     		ldr	r3, [r3]
 24941 0540 5C1E     		subs	r4, r3, #1
 24942 0542 144B     		ldr	r3, .L977+20
 24943 0544 1B68     		ldr	r3, [r3]
 24944 0546 DBB2     		uxtb	r3, r3
 24945 0548 013B     		subs	r3, r3, #1
 24946 054a DAB2     		uxtb	r2, r3
 24947 054c 07F12003 		add	r3, r7, #32
 24948 0550 1146     		mov	r1, r2
 24949 0552 1846     		mov	r0, r3
 24950 0554 FFF7FEFF 		bl	LCRChecksum
 24951 0558 0346     		mov	r3, r0
 24952 055a 1A46     		mov	r2, r3
 24953 055c 07F12003 		add	r3, r7, #32
 24954 0560 1A55     		strb	r2, [r3, r4]
3654:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24955              		.loc 1 3654 0
 24956 0562 0C4B     		ldr	r3, .L977+20
 24957 0564 1B68     		ldr	r3, [r3]
 24958 0566 9AB2     		uxth	r2, r3
 24959 0568 07F12003 		add	r3, r7, #32
 24960 056c 1146     		mov	r1, r2
 24961 056e 1846     		mov	r0, r3
 24962 0570 FFF7FEFF 		bl	commWrite
3655:..\src/command_processing.c **** }
 24963              		.loc 1 3655 0
 24964 0574 00BF     		nop
 24965 0576 07F5CA77 		add	r7, r7, #404
 24966              		.cfi_def_cfa_offset 12
 24967 057a BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 545


 24968              		.cfi_def_cfa_register 13
 24969              		@ sp needed
 24970 057c 90BD     		pop	{r4, r7, pc}
 24971              	.L978:
 24972 057e 00BF     		.align	2
 24973              	.L977:
 24974 0580 00000000 		.word	g_imu
 24975 0584 00000000 		.word	IMU_connected
 24976 0588 00000000 		.word	c_mem
 24977 058c 00000000 		.word	single_imu_size
 24978 0590 00000000 		.word	N_IMU_Connected
 24979 0594 00000000 		.word	imus_data_size
 24980              		.cfi_endproc
 24981              	.LFE105:
 24982              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 24983              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 24984              		.align	2
 24985              		.global	cmd_get_encoder_map
 24986              		.thumb
 24987              		.thumb_func
 24988              		.type	cmd_get_encoder_map, %function
 24989              	cmd_get_encoder_map:
 24990              	.LFB106:
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c **** void cmd_get_encoder_map(){
 24991              		.loc 1 3657 0
 24992              		.cfi_startproc
 24993              		@ args = 0, pretend = 0, frame = 16
 24994              		@ frame_needed = 1, uses_anonymous_args = 0
 24995 0000 90B5     		push	{r4, r7, lr}
 24996              		.cfi_def_cfa_offset 12
 24997              		.cfi_offset 4, -12
 24998              		.cfi_offset 7, -8
 24999              		.cfi_offset 14, -4
 25000 0002 85B0     		sub	sp, sp, #20
 25001              		.cfi_def_cfa_offset 32
 25002 0004 00AF     		add	r7, sp, #0
 25003              		.cfi_def_cfa_register 7
3658:..\src/command_processing.c ****     //Retrieve Encoder map
3659:..\src/command_processing.c ****     
3660:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3661:..\src/command_processing.c ****     uint8 CYDATA i, j;
3662:..\src/command_processing.c ****     
3663:..\src/command_processing.c ****     // Header        
3664:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 25004              		.loc 1 3664 0
 25005 0006 A323     		movs	r3, #163
 25006 0008 3B70     		strb	r3, [r7]
3665:..\src/command_processing.c ****     
3666:..\src/command_processing.c ****     // Fill payload
3667:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 25007              		.loc 1 3667 0
 25008 000a 0223     		movs	r3, #2
 25009 000c 7B70     		strb	r3, [r7, #1]
3668:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 25010              		.loc 1 3668 0
 25011 000e 0523     		movs	r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 546


 25012 0010 BB70     		strb	r3, [r7, #2]
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25013              		.loc 1 3669 0
 25014 0012 0023     		movs	r3, #0
 25015 0014 FB73     		strb	r3, [r7, #15]
 25016 0016 23E0     		b	.L980
 25017              	.L983:
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25018              		.loc 1 3670 0
 25019 0018 0023     		movs	r3, #0
 25020 001a BB73     		strb	r3, [r7, #14]
 25021 001c 1AE0     		b	.L981
 25022              	.L982:
3671:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 25023              		.loc 1 3671 0 discriminator 3
 25024 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25025 0020 1346     		mov	r3, r2
 25026 0022 9B00     		lsls	r3, r3, #2
 25027 0024 1344     		add	r3, r3, r2
 25028 0026 DA1C     		adds	r2, r3, #3
 25029 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25030 002a D118     		adds	r1, r2, r3
 25031 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25032 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 25033 0030 154C     		ldr	r4, .L984
 25034 0032 1346     		mov	r3, r2
 25035 0034 5B00     		lsls	r3, r3, #1
 25036 0036 1344     		add	r3, r3, r2
 25037 0038 1B01     		lsls	r3, r3, #4
 25038 003a 2344     		add	r3, r3, r4
 25039 003c 0344     		add	r3, r3, r0
 25040 003e 03F5C873 		add	r3, r3, #400
 25041 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 25042 0044 07F11003 		add	r3, r7, #16
 25043 0048 0B44     		add	r3, r3, r1
 25044 004a 03F8102C 		strb	r2, [r3, #-16]
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25045              		.loc 1 3670 0 discriminator 3
 25046 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25047 0050 0133     		adds	r3, r3, #1
 25048 0052 BB73     		strb	r3, [r7, #14]
 25049              	.L981:
3670:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25050              		.loc 1 3670 0 is_stmt 0 discriminator 1
 25051 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25052 0056 042B     		cmp	r3, #4
 25053 0058 E1D9     		bls	.L982
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25054              		.loc 1 3669 0 is_stmt 1 discriminator 2
 25055 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25056 005c 0133     		adds	r3, r3, #1
 25057 005e FB73     		strb	r3, [r7, #15]
 25058              	.L980:
3669:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25059              		.loc 1 3669 0 is_stmt 0 discriminator 1
 25060 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25061 0062 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 547


 25062 0064 D8D9     		bls	.L983
3672:..\src/command_processing.c ****         }
3673:..\src/command_processing.c ****     }
3674:..\src/command_processing.c ****     
3675:..\src/command_processing.c ****     // Calculate checksum
3676:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 25063              		.loc 1 3676 0 is_stmt 1
 25064 0066 3B46     		mov	r3, r7
 25065 0068 0D21     		movs	r1, #13
 25066 006a 1846     		mov	r0, r3
 25067 006c FFF7FEFF 		bl	LCRChecksum
 25068 0070 0346     		mov	r3, r0
 25069 0072 7B73     		strb	r3, [r7, #13]
3677:..\src/command_processing.c ****     
3678:..\src/command_processing.c ****     // Send package to UART
3679:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 25070              		.loc 1 3679 0
 25071 0074 3B46     		mov	r3, r7
 25072 0076 0E21     		movs	r1, #14
 25073 0078 1846     		mov	r0, r3
 25074 007a FFF7FEFF 		bl	commWrite
3680:..\src/command_processing.c **** }
 25075              		.loc 1 3680 0
 25076 007e 00BF     		nop
 25077 0080 1437     		adds	r7, r7, #20
 25078              		.cfi_def_cfa_offset 12
 25079 0082 BD46     		mov	sp, r7
 25080              		.cfi_def_cfa_register 13
 25081              		@ sp needed
 25082 0084 90BD     		pop	{r4, r7, pc}
 25083              	.L985:
 25084 0086 00BF     		.align	2
 25085              	.L984:
 25086 0088 00000000 		.word	c_mem
 25087              		.cfi_endproc
 25088              	.LFE106:
 25089              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 25090              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 25091              		.align	2
 25092              		.global	cmd_get_encoder_raw
 25093              		.thumb
 25094              		.thumb_func
 25095              		.type	cmd_get_encoder_raw, %function
 25096              	cmd_get_encoder_raw:
 25097              	.LFB107:
3681:..\src/command_processing.c **** 
3682:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 25098              		.loc 1 3682 0
 25099              		.cfi_startproc
 25100              		@ args = 0, pretend = 0, frame = 32
 25101              		@ frame_needed = 1, uses_anonymous_args = 0
 25102 0000 90B5     		push	{r4, r7, lr}
 25103              		.cfi_def_cfa_offset 12
 25104              		.cfi_offset 4, -12
 25105              		.cfi_offset 7, -8
 25106              		.cfi_offset 14, -4
 25107 0002 89B0     		sub	sp, sp, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 548


 25108              		.cfi_def_cfa_offset 48
 25109 0004 00AF     		add	r7, sp, #0
 25110              		.cfi_def_cfa_register 7
3683:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3684:..\src/command_processing.c ****     
3685:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3686:..\src/command_processing.c ****     uint8 i, j, idx;
3687:..\src/command_processing.c ****     uint16 aux_uint16;
3688:..\src/command_processing.c ****     
3689:..\src/command_processing.c ****     //Header package 
3690:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 25111              		.loc 1 3690 0
 25112 0006 A423     		movs	r3, #164
 25113 0008 3B71     		strb	r3, [r7, #4]
3691:..\src/command_processing.c ****  
3692:..\src/command_processing.c ****     // Fill payload
3693:..\src/command_processing.c ****     idx = 0;
 25114              		.loc 1 3693 0
 25115 000a 0023     		movs	r3, #0
 25116 000c 7B77     		strb	r3, [r7, #29]
3694:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25117              		.loc 1 3694 0
 25118 000e 0023     		movs	r3, #0
 25119 0010 FB77     		strb	r3, [r7, #31]
 25120 0012 3FE0     		b	.L987
 25121              	.L991:
3695:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25122              		.loc 1 3695 0
 25123 0014 0023     		movs	r3, #0
 25124 0016 BB77     		strb	r3, [r7, #30]
 25125 0018 33E0     		b	.L988
 25126              	.L990:
3696:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25127              		.loc 1 3696 0
 25128 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25129 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25130 001e 3048     		ldr	r0, .L992
 25131 0020 1346     		mov	r3, r2
 25132 0022 5B00     		lsls	r3, r3, #1
 25133 0024 1344     		add	r3, r3, r2
 25134 0026 1B01     		lsls	r3, r3, #4
 25135 0028 0344     		add	r3, r3, r0
 25136 002a 0B44     		add	r3, r3, r1
 25137 002c 03F5C873 		add	r3, r3, #400
 25138 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25139 0032 012B     		cmp	r3, #1
 25140 0034 22D1     		bne	.L989
3697:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 25141              		.loc 1 3697 0
 25142 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25143 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25144 003a 2A48     		ldr	r0, .L992+4
 25145 003c 1346     		mov	r3, r2
 25146 003e 9B00     		lsls	r3, r3, #2
 25147 0040 1344     		add	r3, r3, r2
 25148 0042 0B44     		add	r3, r3, r1
 25149 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 549


 25150 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3698:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 25151              		.loc 1 3698 0
 25152 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25153 004c 5B00     		lsls	r3, r3, #1
 25154 004e 0233     		adds	r3, r3, #2
 25155 0050 BA1C     		adds	r2, r7, #2
 25156 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25157 0054 07F12001 		add	r1, r7, #32
 25158 0058 0B44     		add	r3, r3, r1
 25159 005a 03F81C2C 		strb	r2, [r3, #-28]
3699:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 25160              		.loc 1 3699 0
 25161 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25162 0060 5B00     		lsls	r3, r3, #1
 25163 0062 5A1C     		adds	r2, r3, #1
 25164 0064 BB1C     		adds	r3, r7, #2
 25165 0066 0133     		adds	r3, r3, #1
 25166 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25167 006a 07F12003 		add	r3, r7, #32
 25168 006e 1344     		add	r3, r3, r2
 25169 0070 0A46     		mov	r2, r1
 25170 0072 03F81C2C 		strb	r2, [r3, #-28]
3700:..\src/command_processing.c ****                 idx++;
 25171              		.loc 1 3700 0
 25172 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25173 0078 0133     		adds	r3, r3, #1
 25174 007a 7B77     		strb	r3, [r7, #29]
 25175              	.L989:
3695:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25176              		.loc 1 3695 0 discriminator 2
 25177 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25178 007e 0133     		adds	r3, r3, #1
 25179 0080 BB77     		strb	r3, [r7, #30]
 25180              	.L988:
3695:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25181              		.loc 1 3695 0 is_stmt 0 discriminator 1
 25182 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25183 0084 184A     		ldr	r2, .L992+8
 25184 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25185 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 25186 008a 9A42     		cmp	r2, r3
 25187 008c C5D3     		bcc	.L990
3694:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25188              		.loc 1 3694 0 is_stmt 1 discriminator 2
 25189 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25190 0090 0133     		adds	r3, r3, #1
 25191 0092 FB77     		strb	r3, [r7, #31]
 25192              	.L987:
3694:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25193              		.loc 1 3694 0 is_stmt 0 discriminator 1
 25194 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25195 0096 012B     		cmp	r3, #1
 25196 0098 BCD9     		bls	.L991
3701:..\src/command_processing.c ****             }
3702:..\src/command_processing.c ****         }
3703:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 550


3704:..\src/command_processing.c **** 
3705:..\src/command_processing.c ****     // Calculate checksum
3706:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25197              		.loc 1 3706 0 is_stmt 1
 25198 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25199 009c 5B00     		lsls	r3, r3, #1
 25200 009e 5C1C     		adds	r4, r3, #1
 25201 00a0 7B7F     		ldrb	r3, [r7, #29]
 25202 00a2 5B00     		lsls	r3, r3, #1
 25203 00a4 DBB2     		uxtb	r3, r3
 25204 00a6 0133     		adds	r3, r3, #1
 25205 00a8 DAB2     		uxtb	r2, r3
 25206 00aa 3B1D     		adds	r3, r7, #4
 25207 00ac 1146     		mov	r1, r2
 25208 00ae 1846     		mov	r0, r3
 25209 00b0 FFF7FEFF 		bl	LCRChecksum
 25210 00b4 0346     		mov	r3, r0
 25211 00b6 1A46     		mov	r2, r3
 25212 00b8 07F12003 		add	r3, r7, #32
 25213 00bc 2344     		add	r3, r3, r4
 25214 00be 03F81C2C 		strb	r2, [r3, #-28]
3707:..\src/command_processing.c ****     
3708:..\src/command_processing.c ****     // Send package to UART
3709:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25215              		.loc 1 3709 0
 25216 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25217 00c4 0133     		adds	r3, r3, #1
 25218 00c6 9BB2     		uxth	r3, r3
 25219 00c8 5B00     		lsls	r3, r3, #1
 25220 00ca 9AB2     		uxth	r2, r3
 25221 00cc 3B1D     		adds	r3, r7, #4
 25222 00ce 1146     		mov	r1, r2
 25223 00d0 1846     		mov	r0, r3
 25224 00d2 FFF7FEFF 		bl	commWrite
3710:..\src/command_processing.c **** }
 25225              		.loc 1 3710 0
 25226 00d6 00BF     		nop
 25227 00d8 2437     		adds	r7, r7, #36
 25228              		.cfi_def_cfa_offset 12
 25229 00da BD46     		mov	sp, r7
 25230              		.cfi_def_cfa_register 13
 25231              		@ sp needed
 25232 00dc 90BD     		pop	{r4, r7, pc}
 25233              	.L993:
 25234 00de 00BF     		.align	2
 25235              	.L992:
 25236 00e0 00000000 		.word	c_mem
 25237 00e4 00000000 		.word	Encoder_Value
 25238 00e8 00000000 		.word	N_Encoder_Line_Connected
 25239              		.cfi_endproc
 25240              	.LFE107:
 25241              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 25242              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 25243              		.align	2
 25244              		.global	cmd_get_ADC_map
 25245              		.thumb
 25246              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 551


 25247              		.type	cmd_get_ADC_map, %function
 25248              	cmd_get_ADC_map:
 25249              	.LFB108:
3711:..\src/command_processing.c **** 
3712:..\src/command_processing.c **** void cmd_get_ADC_map(){
 25250              		.loc 1 3712 0
 25251              		.cfi_startproc
 25252              		@ args = 0, pretend = 0, frame = 16
 25253              		@ frame_needed = 1, uses_anonymous_args = 0
 25254 0000 80B5     		push	{r7, lr}
 25255              		.cfi_def_cfa_offset 8
 25256              		.cfi_offset 7, -8
 25257              		.cfi_offset 14, -4
 25258 0002 84B0     		sub	sp, sp, #16
 25259              		.cfi_def_cfa_offset 24
 25260 0004 00AF     		add	r7, sp, #0
 25261              		.cfi_def_cfa_register 7
3713:..\src/command_processing.c ****     //Retrieve Encoder map
3714:..\src/command_processing.c ****     
3715:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3716:..\src/command_processing.c ****     uint8 CYDATA i;
3717:..\src/command_processing.c ****     
3718:..\src/command_processing.c ****     // Header        
3719:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 25262              		.loc 1 3719 0
 25263 0006 A523     		movs	r3, #165
 25264 0008 3B70     		strb	r3, [r7]
3720:..\src/command_processing.c ****     
3721:..\src/command_processing.c ****     // Fill payload
3722:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 25265              		.loc 1 3722 0
 25266 000a 0C23     		movs	r3, #12
 25267 000c 7B70     		strb	r3, [r7, #1]
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25268              		.loc 1 3723 0
 25269 000e 0023     		movs	r3, #0
 25270 0010 FB73     		strb	r3, [r7, #15]
 25271 0012 0EE0     		b	.L995
 25272              	.L996:
3724:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 25273              		.loc 1 3724 0 discriminator 3
 25274 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25275 0016 0233     		adds	r3, r3, #2
 25276 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25277 001a 0F49     		ldr	r1, .L997
 25278 001c 0A44     		add	r2, r2, r1
 25279 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 25280 0022 07F11001 		add	r1, r7, #16
 25281 0026 0B44     		add	r3, r3, r1
 25282 0028 03F8102C 		strb	r2, [r3, #-16]
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25283              		.loc 1 3723 0 discriminator 3
 25284 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25285 002e 0133     		adds	r3, r3, #1
 25286 0030 FB73     		strb	r3, [r7, #15]
 25287              	.L995:
3723:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 552


 25288              		.loc 1 3723 0 is_stmt 0 discriminator 1
 25289 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25290 0034 0B2B     		cmp	r3, #11
 25291 0036 EDD9     		bls	.L996
3725:..\src/command_processing.c ****     }
3726:..\src/command_processing.c ****     
3727:..\src/command_processing.c ****     // Calculate checksum
3728:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 25292              		.loc 1 3728 0 is_stmt 1
 25293 0038 3B46     		mov	r3, r7
 25294 003a 0E21     		movs	r1, #14
 25295 003c 1846     		mov	r0, r3
 25296 003e FFF7FEFF 		bl	LCRChecksum
 25297 0042 0346     		mov	r3, r0
 25298 0044 BB73     		strb	r3, [r7, #14]
3729:..\src/command_processing.c ****     
3730:..\src/command_processing.c ****     // Send package to UART
3731:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 25299              		.loc 1 3731 0
 25300 0046 3B46     		mov	r3, r7
 25301 0048 0F21     		movs	r1, #15
 25302 004a 1846     		mov	r0, r3
 25303 004c FFF7FEFF 		bl	commWrite
3732:..\src/command_processing.c ****     
3733:..\src/command_processing.c **** }
 25304              		.loc 1 3733 0
 25305 0050 00BF     		nop
 25306 0052 1037     		adds	r7, r7, #16
 25307              		.cfi_def_cfa_offset 8
 25308 0054 BD46     		mov	sp, r7
 25309              		.cfi_def_cfa_register 13
 25310              		@ sp needed
 25311 0056 80BD     		pop	{r7, pc}
 25312              	.L998:
 25313              		.align	2
 25314              	.L997:
 25315 0058 00000000 		.word	c_mem
 25316              		.cfi_endproc
 25317              	.LFE108:
 25318              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 25319              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 25320              		.align	2
 25321              		.global	cmd_get_ADC_raw
 25322              		.thumb
 25323              		.thumb_func
 25324              		.type	cmd_get_ADC_raw, %function
 25325              	cmd_get_ADC_raw:
 25326              	.LFB109:
3734:..\src/command_processing.c **** 
3735:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 25327              		.loc 1 3735 0
 25328              		.cfi_startproc
 25329              		@ args = 0, pretend = 0, frame = 32
 25330              		@ frame_needed = 1, uses_anonymous_args = 0
 25331 0000 90B5     		push	{r4, r7, lr}
 25332              		.cfi_def_cfa_offset 12
 25333              		.cfi_offset 4, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 553


 25334              		.cfi_offset 7, -8
 25335              		.cfi_offset 14, -4
 25336 0002 89B0     		sub	sp, sp, #36
 25337              		.cfi_def_cfa_offset 48
 25338 0004 00AF     		add	r7, sp, #0
 25339              		.cfi_def_cfa_register 7
3736:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3737:..\src/command_processing.c ****     
3738:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3739:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 25340              		.loc 1 3739 0
 25341 0006 0023     		movs	r3, #0
 25342 0008 BB77     		strb	r3, [r7, #30]
3740:..\src/command_processing.c ****     int16 aux_int16;
3741:..\src/command_processing.c ****     
3742:..\src/command_processing.c ****     // Header        
3743:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 25343              		.loc 1 3743 0
 25344 000a A623     		movs	r3, #166
 25345 000c 3B71     		strb	r3, [r7, #4]
3744:..\src/command_processing.c ****     
3745:..\src/command_processing.c ****     // Fill payload
3746:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 25346              		.loc 1 3746 0
 25347 000e 0023     		movs	r3, #0
 25348 0010 FB77     		strb	r3, [r7, #31]
 25349 0012 27E0     		b	.L1000
 25350              	.L1002:
3747:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25351              		.loc 1 3747 0
 25352 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25353 0016 274A     		ldr	r2, .L1003
 25354 0018 1344     		add	r3, r3, r2
 25355 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 25356 001e 012B     		cmp	r3, #1
 25357 0020 1DD1     		bne	.L1001
3748:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 25358              		.loc 1 3748 0
 25359 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25360 0024 244A     		ldr	r2, .L1003+4
 25361 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 25362 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3749:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 25363              		.loc 1 3749 0
 25364 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25365 002e 5B00     		lsls	r3, r3, #1
 25366 0030 0233     		adds	r3, r3, #2
 25367 0032 BA1C     		adds	r2, r7, #2
 25368 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25369 0036 07F12001 		add	r1, r7, #32
 25370 003a 0B44     		add	r3, r3, r1
 25371 003c 03F81C2C 		strb	r2, [r3, #-28]
3750:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 25372              		.loc 1 3750 0
 25373 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25374 0042 5B00     		lsls	r3, r3, #1
 25375 0044 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 554


 25376 0046 BB1C     		adds	r3, r7, #2
 25377 0048 0133     		adds	r3, r3, #1
 25378 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25379 004c 07F12003 		add	r3, r7, #32
 25380 0050 1344     		add	r3, r3, r2
 25381 0052 0A46     		mov	r2, r1
 25382 0054 03F81C2C 		strb	r2, [r3, #-28]
3751:..\src/command_processing.c ****             idx++;
 25383              		.loc 1 3751 0
 25384 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25385 005a 0133     		adds	r3, r3, #1
 25386 005c BB77     		strb	r3, [r7, #30]
 25387              	.L1001:
3746:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25388              		.loc 1 3746 0 discriminator 2
 25389 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25390 0060 0133     		adds	r3, r3, #1
 25391 0062 FB77     		strb	r3, [r7, #31]
 25392              	.L1000:
3746:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25393              		.loc 1 3746 0 is_stmt 0 discriminator 1
 25394 0064 154B     		ldr	r3, .L1003+8
 25395 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25396 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25397 006a 9A42     		cmp	r2, r3
 25398 006c D2D3     		bcc	.L1002
3752:..\src/command_processing.c ****         }
3753:..\src/command_processing.c ****     }
3754:..\src/command_processing.c **** 
3755:..\src/command_processing.c ****     // Calculate checksum
3756:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25399              		.loc 1 3756 0 is_stmt 1
 25400 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25401 0070 5B00     		lsls	r3, r3, #1
 25402 0072 5C1C     		adds	r4, r3, #1
 25403 0074 BB7F     		ldrb	r3, [r7, #30]
 25404 0076 5B00     		lsls	r3, r3, #1
 25405 0078 DBB2     		uxtb	r3, r3
 25406 007a 0133     		adds	r3, r3, #1
 25407 007c DAB2     		uxtb	r2, r3
 25408 007e 3B1D     		adds	r3, r7, #4
 25409 0080 1146     		mov	r1, r2
 25410 0082 1846     		mov	r0, r3
 25411 0084 FFF7FEFF 		bl	LCRChecksum
 25412 0088 0346     		mov	r3, r0
 25413 008a 1A46     		mov	r2, r3
 25414 008c 07F12003 		add	r3, r7, #32
 25415 0090 2344     		add	r3, r3, r4
 25416 0092 03F81C2C 		strb	r2, [r3, #-28]
3757:..\src/command_processing.c ****     
3758:..\src/command_processing.c ****     // Send package to UART
3759:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25417              		.loc 1 3759 0
 25418 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25419 0098 0133     		adds	r3, r3, #1
 25420 009a 9BB2     		uxth	r3, r3
 25421 009c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 555


 25422 009e 9AB2     		uxth	r2, r3
 25423 00a0 3B1D     		adds	r3, r7, #4
 25424 00a2 1146     		mov	r1, r2
 25425 00a4 1846     		mov	r0, r3
 25426 00a6 FFF7FEFF 		bl	commWrite
3760:..\src/command_processing.c **** }
 25427              		.loc 1 3760 0
 25428 00aa 00BF     		nop
 25429 00ac 2437     		adds	r7, r7, #36
 25430              		.cfi_def_cfa_offset 12
 25431 00ae BD46     		mov	sp, r7
 25432              		.cfi_def_cfa_register 13
 25433              		@ sp needed
 25434 00b0 90BD     		pop	{r4, r7, pc}
 25435              	.L1004:
 25436 00b2 00BF     		.align	2
 25437              	.L1003:
 25438 00b4 00000000 		.word	c_mem
 25439 00b8 00000000 		.word	ADC_buf
 25440 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 25441              		.cfi_endproc
 25442              	.LFE109:
 25443              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 25444              		.section	.text.air_chambers_control,"ax",%progbits
 25445              		.align	2
 25446              		.global	air_chambers_control
 25447              		.thumb
 25448              		.thumb_func
 25449              		.type	air_chambers_control, %function
 25450              	air_chambers_control:
 25451              	.LFB110:
3761:..\src/command_processing.c **** 
3762:..\src/command_processing.c **** //==============================================================================
3763:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3764:..\src/command_processing.c **** //==============================================================================
3765:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3766:..\src/command_processing.c **** 
3767:..\src/command_processing.c **** void air_chambers_control() {
 25452              		.loc 1 3767 0
 25453              		.cfi_startproc
 25454              		@ args = 0, pretend = 0, frame = 0
 25455              		@ frame_needed = 1, uses_anonymous_args = 0
 25456              		@ link register save eliminated.
 25457 0000 80B4     		push	{r7}
 25458              		.cfi_def_cfa_offset 4
 25459              		.cfi_offset 7, -4
 25460 0002 00AF     		add	r7, sp, #0
 25461              		.cfi_def_cfa_register 7
3768:..\src/command_processing.c ****     
3769:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3770:..\src/command_processing.c ****     
3771:..\src/command_processing.c ****     int16 curr_diff;
3772:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
3773:..\src/command_processing.c ****     int32 valve_command;
3774:..\src/command_processing.c ****     int16 x_value;
3775:..\src/command_processing.c **** 
3776:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 556


3777:..\src/command_processing.c ****     
3778:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
3779:..\src/command_processing.c ****     
3780:..\src/command_processing.c ****     // Current difference saturation old mapping
3781:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3782:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3783:..\src/command_processing.c **** //    }
3784:..\src/command_processing.c **** //    if(curr_diff < 0) {
3785:..\src/command_processing.c **** //        curr_diff = 0;
3786:..\src/command_processing.c **** //    }
3787:..\src/command_processing.c **** 
3788:..\src/command_processing.c ****     // Compute pressure reference
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
3791:..\src/command_processing.c ****     if (x_value < 0)
3792:..\src/command_processing.c ****         x_value = 0;
3793:..\src/command_processing.c ****     
3794:..\src/command_processing.c ****     // old mapping --- linear mapping
3795:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3796:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
3797:..\src/command_processing.c ****     if (pressure_reference < 0)
3798:..\src/command_processing.c ****         pressure_reference = 0;
3799:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
3800:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
3801:..\src/command_processing.c ****     
3802:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
3803:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
3804:..\src/command_processing.c **** //    if (err_pressure < 0){
3805:..\src/command_processing.c **** //        err_pressure = 0;
3806:..\src/command_processing.c **** //    }
3807:..\src/command_processing.c ****     
3808:..\src/command_processing.c ****     if (x_value <= 0){
3809:..\src/command_processing.c ****         //i.e the hand is opening
3810:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
3811:..\src/command_processing.c ****     }
3812:..\src/command_processing.c ****     else {
3813:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3814:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3815:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3816:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
3817:..\src/command_processing.c ****     }
3818:..\src/command_processing.c ****     
3819:..\src/command_processing.c ****     // Pump control
3820:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
3821:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3822:..\src/command_processing.c ****     
3823:..\src/command_processing.c ****     // Limit output voltage
3824:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
3825:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
3826:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
3827:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
3828:..\src/command_processing.c ****         
3829:..\src/command_processing.c ****     VALVE_Write(valve_command);
3830:..\src/command_processing.c **** #endif
3831:..\src/command_processing.c **** }
 25462              		.loc 1 3831 0
 25463 0004 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 557


 25464 0006 BD46     		mov	sp, r7
 25465              		.cfi_def_cfa_register 13
 25466              		@ sp needed
 25467 0008 80BC     		pop	{r7}
 25468              		.cfi_restore 7
 25469              		.cfi_def_cfa_offset 0
 25470 000a 7047     		bx	lr
 25471              		.cfi_endproc
 25472              	.LFE110:
 25473              		.size	air_chambers_control, .-air_chambers_control
 25474              		.section	.text.drive_slave,"ax",%progbits
 25475              		.align	2
 25476              		.global	drive_slave
 25477              		.thumb
 25478              		.thumb_func
 25479              		.type	drive_slave, %function
 25480              	drive_slave:
 25481              	.LFB111:
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c **** //==============================================================================
3834:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
3835:..\src/command_processing.c **** //==============================================================================
3836:..\src/command_processing.c ****  
3837:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 25482              		.loc 1 3837 0
 25483              		.cfi_startproc
 25484              		@ args = 0, pretend = 0, frame = 8
 25485              		@ frame_needed = 1, uses_anonymous_args = 0
 25486              		@ link register save eliminated.
 25487 0000 80B4     		push	{r7}
 25488              		.cfi_def_cfa_offset 4
 25489              		.cfi_offset 7, -4
 25490 0002 83B0     		sub	sp, sp, #12
 25491              		.cfi_def_cfa_offset 16
 25492 0004 00AF     		add	r7, sp, #0
 25493              		.cfi_def_cfa_register 7
 25494 0006 0346     		mov	r3, r0
 25495 0008 0A46     		mov	r2, r1
 25496 000a FB71     		strb	r3, [r7, #7]
 25497 000c 1346     		mov	r3, r2
 25498 000e BB71     		strb	r3, [r7, #6]
3838:..\src/command_processing.c **** 
3839:..\src/command_processing.c **** #ifdef MASTER_FW
3840:..\src/command_processing.c ****     uint8 packet_data[6];
3841:..\src/command_processing.c ****     uint8 packet_lenght;
3842:..\src/command_processing.c ****     int16 aux_int16;
3843:..\src/command_processing.c ****     
3844:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
3845:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
3846:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3847:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3848:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
3849:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3850:..\src/command_processing.c ****         master_mode = 0;
3851:..\src/command_processing.c ****         return;
3852:..\src/command_processing.c ****     }
3853:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 558


3854:..\src/command_processing.c ****     if (dev_tension[0] > 5000 && dev_tension[0] < 7000){
3855:..\src/command_processing.c ****         master_mode = 0;
3856:..\src/command_processing.c ****         return;
3857:..\src/command_processing.c ****     }
3858:..\src/command_processing.c ****     
3859:..\src/command_processing.c ****        
3860:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3861:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
3862:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
3863:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
3864:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
3865:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
3866:..\src/command_processing.c ****     
3867:..\src/command_processing.c ****     packet_lenght = 6;
3868:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3869:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
3870:..\src/command_processing.c **** 
3871:..\src/command_processing.c **** #endif
3872:..\src/command_processing.c **** }
 25499              		.loc 1 3872 0
 25500 0010 00BF     		nop
 25501 0012 0C37     		adds	r7, r7, #12
 25502              		.cfi_def_cfa_offset 4
 25503 0014 BD46     		mov	sp, r7
 25504              		.cfi_def_cfa_register 13
 25505              		@ sp needed
 25506 0016 80BC     		pop	{r7}
 25507              		.cfi_restore 7
 25508              		.cfi_def_cfa_offset 0
 25509 0018 7047     		bx	lr
 25510              		.cfi_endproc
 25511              	.LFE111:
 25512              		.size	drive_slave, .-drive_slave
 25513 001a 00BF     		.section	.text.stop_feedback,"ax",%progbits
 25514              		.align	2
 25515              		.global	stop_feedback
 25516              		.thumb
 25517              		.thumb_func
 25518              		.type	stop_feedback, %function
 25519              	stop_feedback:
 25520              	.LFB112:
3873:..\src/command_processing.c **** 
3874:..\src/command_processing.c **** //==============================================================================
3875:..\src/command_processing.c **** //                                                                 STOP FEEDBACK
3876:..\src/command_processing.c **** //==============================================================================
3877:..\src/command_processing.c ****  
3878:..\src/command_processing.c **** void stop_feedback() {
 25521              		.loc 1 3878 0
 25522              		.cfi_startproc
 25523              		@ args = 0, pretend = 0, frame = 0
 25524              		@ frame_needed = 1, uses_anonymous_args = 0
 25525              		@ link register save eliminated.
 25526 0000 80B4     		push	{r7}
 25527              		.cfi_def_cfa_offset 4
 25528              		.cfi_offset 7, -4
 25529 0002 00AF     		add	r7, sp, #0
 25530              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 559


3879:..\src/command_processing.c ****     
3880:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3881:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
3882:..\src/command_processing.c ****         // Stop pump and open valve
3883:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
3884:..\src/command_processing.c ****         VALVE_Write(0);
3885:..\src/command_processing.c ****     }
3886:..\src/command_processing.c **** #endif
3887:..\src/command_processing.c **** }
 25531              		.loc 1 3887 0
 25532 0004 00BF     		nop
 25533 0006 BD46     		mov	sp, r7
 25534              		.cfi_def_cfa_register 13
 25535              		@ sp needed
 25536 0008 80BC     		pop	{r7}
 25537              		.cfi_restore 7
 25538              		.cfi_def_cfa_offset 0
 25539 000a 7047     		bx	lr
 25540              		.cfi_endproc
 25541              	.LFE112:
 25542              		.size	stop_feedback, .-stop_feedback
 25543              		.section	.text.deactivate_slaves,"ax",%progbits
 25544              		.align	2
 25545              		.global	deactivate_slaves
 25546              		.thumb
 25547              		.thumb_func
 25548              		.type	deactivate_slaves, %function
 25549              	deactivate_slaves:
 25550              	.LFB113:
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c **** //==============================================================================
3890:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
3891:..\src/command_processing.c **** //==============================================================================
3892:..\src/command_processing.c ****  
3893:..\src/command_processing.c **** void deactivate_slaves() {
 25551              		.loc 1 3893 0
 25552              		.cfi_startproc
 25553              		@ args = 0, pretend = 0, frame = 0
 25554              		@ frame_needed = 1, uses_anonymous_args = 0
 25555              		@ link register save eliminated.
 25556 0000 80B4     		push	{r7}
 25557              		.cfi_def_cfa_offset 4
 25558              		.cfi_offset 7, -4
 25559 0002 00AF     		add	r7, sp, #0
 25560              		.cfi_def_cfa_register 7
3894:..\src/command_processing.c ****     
3895:..\src/command_processing.c **** #ifdef MASTER_FW
3896:..\src/command_processing.c ****     
3897:..\src/command_processing.c ****     uint8 packet_data[10];
3898:..\src/command_processing.c ****     uint8 packet_lenght;
3899:..\src/command_processing.c ****     
3900:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
3901:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3902:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3903:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS          &&
3904:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3905:..\src/command_processing.c ****         master_mode = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 560


3906:..\src/command_processing.c ****         return;
3907:..\src/command_processing.c ****     }
3908:..\src/command_processing.c ****     
3909:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3910:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
3911:..\src/command_processing.c **** 
3912:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
3913:..\src/command_processing.c ****     packet_lenght = 3;
3914:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3915:..\src/command_processing.c ****     
3916:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
3917:..\src/command_processing.c ****     
3918:..\src/command_processing.c **** #endif    
3919:..\src/command_processing.c **** }
 25561              		.loc 1 3919 0
 25562 0004 00BF     		nop
 25563 0006 BD46     		mov	sp, r7
 25564              		.cfi_def_cfa_register 13
 25565              		@ sp needed
 25566 0008 80BC     		pop	{r7}
 25567              		.cfi_restore 7
 25568              		.cfi_def_cfa_offset 0
 25569 000a 7047     		bx	lr
 25570              		.cfi_endproc
 25571              	.LFE113:
 25572              		.size	deactivate_slaves, .-deactivate_slaves
 25573              		.bss
 25574              		.align	1
 25575              	i.11156:
 25576 0000 0000     		.space	2
 25577 0002 0000     		.align	2
 25578              	last_aux_int16.11280:
 25579 0004 00000000 		.space	4
 25580              		.text
 25581              	.Letext0:
 25582              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25583              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25584              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 25585              		.file 6 "..\\src\\commands.h"
 25586              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 25587              		.file 8 "..\\src\\globals.h"
 25588              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 25589              		.section	.debug_info,"",%progbits
 25590              	.Ldebug_info0:
 25591 0000 BE220000 		.4byte	0x22be
 25592 0004 0400     		.2byte	0x4
 25593 0006 00000000 		.4byte	.Ldebug_abbrev0
 25594 000a 04       		.byte	0x4
 25595 000b 01       		.uleb128 0x1
 25596 000c 5F080000 		.4byte	.LASF364
 25597 0010 0C       		.byte	0xc
 25598 0011 D1120000 		.4byte	.LASF365
 25599 0015 2A040000 		.4byte	.LASF366
 25600 0019 00000000 		.4byte	.Ldebug_ranges0+0
 25601 001d 00000000 		.4byte	0
 25602 0021 00000000 		.4byte	.Ldebug_line0
 25603 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 561


 25604 0026 01       		.byte	0x1
 25605 0027 06       		.byte	0x6
 25606 0028 55030000 		.4byte	.LASF0
 25607 002c 02       		.uleb128 0x2
 25608 002d 01       		.byte	0x1
 25609 002e 08       		.byte	0x8
 25610 002f CC030000 		.4byte	.LASF1
 25611 0033 02       		.uleb128 0x2
 25612 0034 02       		.byte	0x2
 25613 0035 05       		.byte	0x5
 25614 0036 580F0000 		.4byte	.LASF2
 25615 003a 02       		.uleb128 0x2
 25616 003b 02       		.byte	0x2
 25617 003c 07       		.byte	0x7
 25618 003d D7110000 		.4byte	.LASF3
 25619 0041 03       		.uleb128 0x3
 25620 0042 8F120000 		.4byte	.LASF5
 25621 0046 03       		.byte	0x3
 25622 0047 3F       		.byte	0x3f
 25623 0048 4C000000 		.4byte	0x4c
 25624 004c 02       		.uleb128 0x2
 25625 004d 04       		.byte	0x4
 25626 004e 05       		.byte	0x5
 25627 004f 61020000 		.4byte	.LASF4
 25628 0053 03       		.uleb128 0x3
 25629 0054 19090000 		.4byte	.LASF6
 25630 0058 03       		.byte	0x3
 25631 0059 41       		.byte	0x41
 25632 005a 5E000000 		.4byte	0x5e
 25633 005e 02       		.uleb128 0x2
 25634 005f 04       		.byte	0x4
 25635 0060 07       		.byte	0x7
 25636 0061 18070000 		.4byte	.LASF7
 25637 0065 02       		.uleb128 0x2
 25638 0066 08       		.byte	0x8
 25639 0067 05       		.byte	0x5
 25640 0068 24090000 		.4byte	.LASF8
 25641 006c 02       		.uleb128 0x2
 25642 006d 08       		.byte	0x8
 25643 006e 07       		.byte	0x7
 25644 006f A40C0000 		.4byte	.LASF9
 25645 0073 04       		.uleb128 0x4
 25646 0074 04       		.byte	0x4
 25647 0075 05       		.byte	0x5
 25648 0076 696E7400 		.ascii	"int\000"
 25649 007a 02       		.uleb128 0x2
 25650 007b 04       		.byte	0x4
 25651 007c 07       		.byte	0x7
 25652 007d 180A0000 		.4byte	.LASF10
 25653 0081 03       		.uleb128 0x3
 25654 0082 55000000 		.4byte	.LASF11
 25655 0086 04       		.byte	0x4
 25656 0087 2C       		.byte	0x2c
 25657 0088 41000000 		.4byte	0x41
 25658 008c 03       		.uleb128 0x3
 25659 008d 48110000 		.4byte	.LASF12
 25660 0091 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 562


 25661 0092 30       		.byte	0x30
 25662 0093 53000000 		.4byte	0x53
 25663 0097 05       		.uleb128 0x5
 25664 0098 460F0000 		.4byte	.LASF13
 25665 009c 05       		.byte	0x5
 25666 009d E401     		.2byte	0x1e4
 25667 009f 2C000000 		.4byte	0x2c
 25668 00a3 05       		.uleb128 0x5
 25669 00a4 24130000 		.4byte	.LASF14
 25670 00a8 05       		.byte	0x5
 25671 00a9 E501     		.2byte	0x1e5
 25672 00ab 3A000000 		.4byte	0x3a
 25673 00af 05       		.uleb128 0x5
 25674 00b0 81000000 		.4byte	.LASF15
 25675 00b4 05       		.byte	0x5
 25676 00b5 E601     		.2byte	0x1e6
 25677 00b7 5E000000 		.4byte	0x5e
 25678 00bb 05       		.uleb128 0x5
 25679 00bc 8E010000 		.4byte	.LASF16
 25680 00c0 05       		.byte	0x5
 25681 00c1 E701     		.2byte	0x1e7
 25682 00c3 25000000 		.4byte	0x25
 25683 00c7 05       		.uleb128 0x5
 25684 00c8 A8100000 		.4byte	.LASF17
 25685 00cc 05       		.byte	0x5
 25686 00cd E801     		.2byte	0x1e8
 25687 00cf 33000000 		.4byte	0x33
 25688 00d3 05       		.uleb128 0x5
 25689 00d4 26120000 		.4byte	.LASF18
 25690 00d8 05       		.byte	0x5
 25691 00d9 E901     		.2byte	0x1e9
 25692 00db 4C000000 		.4byte	0x4c
 25693 00df 05       		.uleb128 0x5
 25694 00e0 D8020000 		.4byte	.LASF19
 25695 00e4 05       		.byte	0x5
 25696 00e5 EA01     		.2byte	0x1ea
 25697 00e7 EB000000 		.4byte	0xeb
 25698 00eb 02       		.uleb128 0x2
 25699 00ec 04       		.byte	0x4
 25700 00ed 04       		.byte	0x4
 25701 00ee DE090000 		.4byte	.LASF20
 25702 00f2 02       		.uleb128 0x2
 25703 00f3 08       		.byte	0x8
 25704 00f4 04       		.byte	0x4
 25705 00f5 7C090000 		.4byte	.LASF21
 25706 00f9 02       		.uleb128 0x2
 25707 00fa 01       		.byte	0x1
 25708 00fb 08       		.byte	0x8
 25709 00fc C0040000 		.4byte	.LASF22
 25710 0100 05       		.uleb128 0x5
 25711 0101 990D0000 		.4byte	.LASF23
 25712 0105 05       		.byte	0x5
 25713 0106 8E02     		.2byte	0x28e
 25714 0108 0C010000 		.4byte	0x10c
 25715 010c 06       		.uleb128 0x6
 25716 010d 97000000 		.4byte	0x97
 25717 0111 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 563


 25718 0112 08       		.byte	0x8
 25719 0113 04       		.byte	0x4
 25720 0114 8A0B0000 		.4byte	.LASF24
 25721 0118 02       		.uleb128 0x2
 25722 0119 04       		.byte	0x4
 25723 011a 07       		.byte	0x7
 25724 011b 10000000 		.4byte	.LASF25
 25725 011f 07       		.uleb128 0x7
 25726 0120 04       		.byte	0x4
 25727 0121 F9000000 		.4byte	0xf9
 25728 0125 07       		.uleb128 0x7
 25729 0126 04       		.byte	0x4
 25730 0127 2B010000 		.4byte	0x12b
 25731 012b 08       		.uleb128 0x8
 25732 012c F9000000 		.4byte	0xf9
 25733 0130 09       		.uleb128 0x9
 25734 0131 F9000000 		.4byte	0xf9
 25735 0135 40010000 		.4byte	0x140
 25736 0139 0A       		.uleb128 0xa
 25737 013a 18010000 		.4byte	0x118
 25738 013e 19       		.byte	0x19
 25739 013f 00       		.byte	0
 25740 0140 09       		.uleb128 0x9
 25741 0141 F9000000 		.4byte	0xf9
 25742 0145 50010000 		.4byte	0x150
 25743 0149 0A       		.uleb128 0xa
 25744 014a 18010000 		.4byte	0x118
 25745 014e 07       		.byte	0x7
 25746 014f 00       		.byte	0
 25747 0150 0B       		.uleb128 0xb
 25748 0151 600A0000 		.4byte	.LASF55
 25749 0155 01       		.byte	0x1
 25750 0156 2C000000 		.4byte	0x2c
 25751 015a 06       		.byte	0x6
 25752 015b 42       		.byte	0x42
 25753 015c 0F020000 		.4byte	0x20f
 25754 0160 0C       		.uleb128 0xc
 25755 0161 4C130000 		.4byte	.LASF26
 25756 0165 00       		.byte	0
 25757 0166 0C       		.uleb128 0xc
 25758 0167 E00F0000 		.4byte	.LASF27
 25759 016b 01       		.byte	0x1
 25760 016c 0C       		.uleb128 0xc
 25761 016d F4060000 		.4byte	.LASF28
 25762 0171 03       		.byte	0x3
 25763 0172 0C       		.uleb128 0xc
 25764 0173 04040000 		.4byte	.LASF29
 25765 0177 04       		.byte	0x4
 25766 0178 0C       		.uleb128 0xc
 25767 0179 D20D0000 		.4byte	.LASF30
 25768 017d 05       		.byte	0x5
 25769 017e 0C       		.uleb128 0xc
 25770 017f 07080000 		.4byte	.LASF31
 25771 0183 06       		.byte	0x6
 25772 0184 0C       		.uleb128 0xc
 25773 0185 38070000 		.4byte	.LASF32
 25774 0189 09       		.byte	0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 564


 25775 018a 0C       		.uleb128 0xc
 25776 018b 19000000 		.4byte	.LASF33
 25777 018f 0A       		.byte	0xa
 25778 0190 0C       		.uleb128 0xc
 25779 0191 7C100000 		.4byte	.LASF34
 25780 0195 0C       		.byte	0xc
 25781 0196 0C       		.uleb128 0xc
 25782 0197 FA0B0000 		.4byte	.LASF35
 25783 019b 0D       		.byte	0xd
 25784 019c 0C       		.uleb128 0xc
 25785 019d 43000000 		.4byte	.LASF36
 25786 01a1 80       		.byte	0x80
 25787 01a2 0C       		.uleb128 0xc
 25788 01a3 AF040000 		.4byte	.LASF37
 25789 01a7 81       		.byte	0x81
 25790 01a8 0C       		.uleb128 0xc
 25791 01a9 C2050000 		.4byte	.LASF38
 25792 01ad 82       		.byte	0x82
 25793 01ae 0C       		.uleb128 0xc
 25794 01af AA0F0000 		.4byte	.LASF39
 25795 01b3 83       		.byte	0x83
 25796 01b4 0C       		.uleb128 0xc
 25797 01b5 1D0F0000 		.4byte	.LASF40
 25798 01b9 84       		.byte	0x84
 25799 01ba 0C       		.uleb128 0xc
 25800 01bb F0020000 		.4byte	.LASF41
 25801 01bf 85       		.byte	0x85
 25802 01c0 0C       		.uleb128 0xc
 25803 01c1 49080000 		.4byte	.LASF42
 25804 01c5 86       		.byte	0x86
 25805 01c6 0C       		.uleb128 0xc
 25806 01c7 E7070000 		.4byte	.LASF43
 25807 01cb 88       		.byte	0x88
 25808 01cc 0C       		.uleb128 0xc
 25809 01cd 5D100000 		.4byte	.LASF44
 25810 01d1 89       		.byte	0x89
 25811 01d2 0C       		.uleb128 0xc
 25812 01d3 020D0000 		.4byte	.LASF45
 25813 01d7 8B       		.byte	0x8b
 25814 01d8 0C       		.uleb128 0xc
 25815 01d9 5B0B0000 		.4byte	.LASF46
 25816 01dd 8C       		.byte	0x8c
 25817 01de 0C       		.uleb128 0xc
 25818 01df F4080000 		.4byte	.LASF47
 25819 01e3 8E       		.byte	0x8e
 25820 01e4 0C       		.uleb128 0xc
 25821 01e5 3A0D0000 		.4byte	.LASF48
 25822 01e9 90       		.byte	0x90
 25823 01ea 0C       		.uleb128 0xc
 25824 01eb B0110000 		.4byte	.LASF49
 25825 01ef A1       		.byte	0xa1
 25826 01f0 0C       		.uleb128 0xc
 25827 01f1 D60E0000 		.4byte	.LASF50
 25828 01f5 A2       		.byte	0xa2
 25829 01f6 0C       		.uleb128 0xc
 25830 01f7 BE0A0000 		.4byte	.LASF51
 25831 01fb A3       		.byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 565


 25832 01fc 0C       		.uleb128 0xc
 25833 01fd F20E0000 		.4byte	.LASF52
 25834 0201 A4       		.byte	0xa4
 25835 0202 0C       		.uleb128 0xc
 25836 0203 CF0F0000 		.4byte	.LASF53
 25837 0207 A5       		.byte	0xa5
 25838 0208 0C       		.uleb128 0xc
 25839 0209 9D0E0000 		.4byte	.LASF54
 25840 020d A6       		.byte	0xa6
 25841 020e 00       		.byte	0
 25842 020f 0B       		.uleb128 0xb
 25843 0210 FB120000 		.4byte	.LASF56
 25844 0214 01       		.byte	0x1
 25845 0215 2C000000 		.4byte	0x2c
 25846 0219 06       		.byte	0x6
 25847 021a 8B       		.byte	0x8b
 25848 021b 4A020000 		.4byte	0x24a
 25849 021f 0C       		.uleb128 0xc
 25850 0220 4E060000 		.4byte	.LASF57
 25851 0224 00       		.byte	0
 25852 0225 0C       		.uleb128 0xc
 25853 0226 9E0A0000 		.4byte	.LASF58
 25854 022a 01       		.byte	0x1
 25855 022b 0C       		.uleb128 0xc
 25856 022c 10020000 		.4byte	.LASF59
 25857 0230 02       		.byte	0x2
 25858 0231 0C       		.uleb128 0xc
 25859 0232 70010000 		.4byte	.LASF60
 25860 0236 03       		.byte	0x3
 25861 0237 0C       		.uleb128 0xc
 25862 0238 14010000 		.4byte	.LASF61
 25863 023c 04       		.byte	0x4
 25864 023d 0C       		.uleb128 0xc
 25865 023e 2B000000 		.4byte	.LASF62
 25866 0242 05       		.byte	0x5
 25867 0243 0C       		.uleb128 0xc
 25868 0244 B70E0000 		.4byte	.LASF63
 25869 0248 06       		.byte	0x6
 25870 0249 00       		.byte	0
 25871 024a 0B       		.uleb128 0xb
 25872 024b 32090000 		.4byte	.LASF64
 25873 024f 01       		.byte	0x1
 25874 0250 2C000000 		.4byte	0x2c
 25875 0254 06       		.byte	0x6
 25876 0255 9E       		.byte	0x9e
 25877 0256 73020000 		.4byte	0x273
 25878 025a 0C       		.uleb128 0xc
 25879 025b 74120000 		.4byte	.LASF65
 25880 025f 00       		.byte	0
 25881 0260 0C       		.uleb128 0xc
 25882 0261 DB070000 		.4byte	.LASF66
 25883 0265 01       		.byte	0x1
 25884 0266 0C       		.uleb128 0xc
 25885 0267 7A0B0000 		.4byte	.LASF67
 25886 026b 02       		.byte	0x2
 25887 026c 0C       		.uleb128 0xc
 25888 026d DF060000 		.4byte	.LASF68
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 566


 25889 0271 03       		.byte	0x3
 25890 0272 00       		.byte	0
 25891 0273 0B       		.uleb128 0xb
 25892 0274 94030000 		.4byte	.LASF69
 25893 0278 01       		.byte	0x1
 25894 0279 2C000000 		.4byte	0x2c
 25895 027d 06       		.byte	0x6
 25896 027e A8       		.byte	0xa8
 25897 027f 90020000 		.4byte	0x290
 25898 0283 0C       		.uleb128 0xc
 25899 0284 AD0E0000 		.4byte	.LASF70
 25900 0288 00       		.byte	0
 25901 0289 0C       		.uleb128 0xc
 25902 028a 5E090000 		.4byte	.LASF71
 25903 028e 01       		.byte	0x1
 25904 028f 00       		.byte	0
 25905 0290 0B       		.uleb128 0xb
 25906 0291 530C0000 		.4byte	.LASF72
 25907 0295 01       		.byte	0x1
 25908 0296 2C000000 		.4byte	0x2c
 25909 029a 06       		.byte	0x6
 25910 029b AD       		.byte	0xad
 25911 029c AD020000 		.4byte	0x2ad
 25912 02a0 0C       		.uleb128 0xc
 25913 02a1 33060000 		.4byte	.LASF73
 25914 02a5 00       		.byte	0
 25915 02a6 0C       		.uleb128 0xc
 25916 02a7 98070000 		.4byte	.LASF74
 25917 02ab 01       		.byte	0x1
 25918 02ac 00       		.byte	0
 25919 02ad 0B       		.uleb128 0xb
 25920 02ae 9D100000 		.4byte	.LASF75
 25921 02b2 01       		.byte	0x1
 25922 02b3 2C000000 		.4byte	0x2c
 25923 02b7 06       		.byte	0x6
 25924 02b8 B5       		.byte	0xb5
 25925 02b9 FA020000 		.4byte	0x2fa
 25926 02bd 0C       		.uleb128 0xc
 25927 02be 9F070000 		.4byte	.LASF76
 25928 02c2 00       		.byte	0
 25929 02c3 0C       		.uleb128 0xc
 25930 02c4 09130000 		.4byte	.LASF77
 25931 02c8 01       		.byte	0x1
 25932 02c9 0C       		.uleb128 0xc
 25933 02ca 42090000 		.4byte	.LASF78
 25934 02ce 02       		.byte	0x2
 25935 02cf 0C       		.uleb128 0xc
 25936 02d0 370B0000 		.4byte	.LASF79
 25937 02d4 03       		.byte	0x3
 25938 02d5 0C       		.uleb128 0xc
 25939 02d6 6B0A0000 		.4byte	.LASF80
 25940 02da 04       		.byte	0x4
 25941 02db 0C       		.uleb128 0xc
 25942 02dc BB0C0000 		.4byte	.LASF81
 25943 02e0 05       		.byte	0x5
 25944 02e1 0C       		.uleb128 0xc
 25945 02e2 960B0000 		.4byte	.LASF82
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 567


 25946 02e6 06       		.byte	0x6
 25947 02e7 0C       		.uleb128 0xc
 25948 02e8 F90A0000 		.4byte	.LASF83
 25949 02ec 07       		.byte	0x7
 25950 02ed 0C       		.uleb128 0xc
 25951 02ee 03060000 		.4byte	.LASF84
 25952 02f2 08       		.byte	0x8
 25953 02f3 0C       		.uleb128 0xc
 25954 02f4 D3060000 		.4byte	.LASF85
 25955 02f8 09       		.byte	0x9
 25956 02f9 00       		.byte	0
 25957 02fa 03       		.uleb128 0x3
 25958 02fb 55120000 		.4byte	.LASF86
 25959 02ff 07       		.byte	0x7
 25960 0300 7E       		.byte	0x7e
 25961 0301 05030000 		.4byte	0x305
 25962 0305 0D       		.uleb128 0xd
 25963 0306 55120000 		.4byte	.LASF86
 25964 030a 07       		.uleb128 0x7
 25965 030b 04       		.byte	0x4
 25966 030c FA020000 		.4byte	0x2fa
 25967 0310 0E       		.uleb128 0xe
 25968 0311 ED080000 		.4byte	.LASF89
 25969 0315 10       		.byte	0x10
 25970 0316 08       		.byte	0x8
 25971 0317 D3       		.byte	0xd3
 25972 0318 4D030000 		.4byte	0x34d
 25973 031c 0F       		.uleb128 0xf
 25974 031d 706F7300 		.ascii	"pos\000"
 25975 0321 08       		.byte	0x8
 25976 0322 D4       		.byte	0xd4
 25977 0323 D3000000 		.4byte	0xd3
 25978 0327 00       		.byte	0
 25979 0328 10       		.uleb128 0x10
 25980 0329 CB070000 		.4byte	.LASF87
 25981 032d 08       		.byte	0x8
 25982 032e D5       		.byte	0xd5
 25983 032f D3000000 		.4byte	0xd3
 25984 0333 04       		.byte	0x4
 25985 0334 0F       		.uleb128 0xf
 25986 0335 70776D00 		.ascii	"pwm\000"
 25987 0339 08       		.byte	0x8
 25988 033a D6       		.byte	0xd6
 25989 033b D3000000 		.4byte	0xd3
 25990 033f 08       		.byte	0x8
 25991 0340 10       		.uleb128 0x10
 25992 0341 FC0C0000 		.4byte	.LASF88
 25993 0345 08       		.byte	0x8
 25994 0346 D7       		.byte	0xd7
 25995 0347 97000000 		.4byte	0x97
 25996 034b 0C       		.byte	0xc
 25997 034c 00       		.byte	0
 25998 034d 0E       		.uleb128 0xe
 25999 034e 950E0000 		.4byte	.LASF90
 26000 0352 34       		.byte	0x34
 26001 0353 08       		.byte	0x8
 26002 0354 DE       		.byte	0xde
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 568


 26003 0355 AE030000 		.4byte	0x3ae
 26004 0359 0F       		.uleb128 0xf
 26005 035a 706F7300 		.ascii	"pos\000"
 26006 035e 08       		.byte	0x8
 26007 035f DF       		.byte	0xdf
 26008 0360 AE030000 		.4byte	0x3ae
 26009 0364 00       		.byte	0
 26010 0365 10       		.uleb128 0x10
 26011 0366 CB070000 		.4byte	.LASF87
 26012 036a 08       		.byte	0x8
 26013 036b E0       		.byte	0xe0
 26014 036c D3000000 		.4byte	0xd3
 26015 0370 0C       		.byte	0xc
 26016 0371 10       		.uleb128 0x10
 26017 0372 EA100000 		.4byte	.LASF91
 26018 0376 08       		.byte	0x8
 26019 0377 E1       		.byte	0xe1
 26020 0378 D3000000 		.4byte	0xd3
 26021 037c 10       		.byte	0x10
 26022 037d 10       		.uleb128 0x10
 26023 037e 47070000 		.4byte	.LASF92
 26024 0382 08       		.byte	0x8
 26025 0383 E2       		.byte	0xe2
 26026 0384 D3000000 		.4byte	0xd3
 26027 0388 14       		.byte	0x14
 26028 0389 0F       		.uleb128 0xf
 26029 038a 726F7400 		.ascii	"rot\000"
 26030 038e 08       		.byte	0x8
 26031 038f E3       		.byte	0xe3
 26032 0390 BE030000 		.4byte	0x3be
 26033 0394 18       		.byte	0x18
 26034 0395 0F       		.uleb128 0xf
 26035 0396 76656C00 		.ascii	"vel\000"
 26036 039a 08       		.byte	0x8
 26037 039b E4       		.byte	0xe4
 26038 039c AE030000 		.4byte	0x3ae
 26039 03a0 1C       		.byte	0x1c
 26040 03a1 0F       		.uleb128 0xf
 26041 03a2 61636300 		.ascii	"acc\000"
 26042 03a6 08       		.byte	0x8
 26043 03a7 E5       		.byte	0xe5
 26044 03a8 AE030000 		.4byte	0x3ae
 26045 03ac 28       		.byte	0x28
 26046 03ad 00       		.byte	0
 26047 03ae 09       		.uleb128 0x9
 26048 03af D3000000 		.4byte	0xd3
 26049 03b3 BE030000 		.4byte	0x3be
 26050 03b7 0A       		.uleb128 0xa
 26051 03b8 18010000 		.4byte	0x118
 26052 03bc 02       		.byte	0x2
 26053 03bd 00       		.byte	0
 26054 03be 09       		.uleb128 0x9
 26055 03bf BB000000 		.4byte	0xbb
 26056 03c3 CE030000 		.4byte	0x3ce
 26057 03c7 0A       		.uleb128 0xa
 26058 03c8 18010000 		.4byte	0x118
 26059 03cc 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 569


 26060 03cd 00       		.byte	0
 26061 03ce 0E       		.uleb128 0xe
 26062 03cf AD0B0000 		.4byte	.LASF93
 26063 03d3 20       		.byte	0x20
 26064 03d4 08       		.byte	0x8
 26065 03d5 E8       		.byte	0xe8
 26066 03d6 F3030000 		.4byte	0x3f3
 26067 03da 0F       		.uleb128 0xf
 26068 03db 656D6700 		.ascii	"emg\000"
 26069 03df 08       		.byte	0x8
 26070 03e0 E9       		.byte	0xe9
 26071 03e1 F3030000 		.4byte	0x3f3
 26072 03e5 00       		.byte	0
 26073 03e6 10       		.uleb128 0x10
 26074 03e7 2F0B0000 		.4byte	.LASF94
 26075 03eb 08       		.byte	0x8
 26076 03ec EA       		.byte	0xea
 26077 03ed 03040000 		.4byte	0x403
 26078 03f1 08       		.byte	0x8
 26079 03f2 00       		.byte	0
 26080 03f3 09       		.uleb128 0x9
 26081 03f4 D3000000 		.4byte	0xd3
 26082 03f8 03040000 		.4byte	0x403
 26083 03fc 0A       		.uleb128 0xa
 26084 03fd 18010000 		.4byte	0x118
 26085 0401 01       		.byte	0x1
 26086 0402 00       		.byte	0
 26087 0403 09       		.uleb128 0x9
 26088 0404 D3000000 		.4byte	0xd3
 26089 0408 13040000 		.4byte	0x413
 26090 040c 0A       		.uleb128 0xa
 26091 040d 18010000 		.4byte	0x118
 26092 0411 05       		.byte	0x5
 26093 0412 00       		.byte	0
 26094 0413 0E       		.uleb128 0xe
 26095 0414 18050000 		.4byte	.LASF95
 26096 0418 04       		.byte	0x4
 26097 0419 08       		.byte	0x8
 26098 041a ED       		.byte	0xed
 26099 041b 2C040000 		.4byte	0x42c
 26100 041f 10       		.uleb128 0x10
 26101 0420 A6040000 		.4byte	.LASF96
 26102 0424 08       		.byte	0x8
 26103 0425 EE       		.byte	0xee
 26104 0426 EB000000 		.4byte	0xeb
 26105 042a 00       		.byte	0
 26106 042b 00       		.byte	0
 26107 042c 0E       		.uleb128 0xe
 26108 042d 62000000 		.4byte	.LASF97
 26109 0431 86       		.byte	0x86
 26110 0432 08       		.byte	0x8
 26111 0433 F5       		.byte	0xf5
 26112 0434 69040000 		.4byte	0x469
 26113 0438 10       		.uleb128 0x10
 26114 0439 D1050000 		.4byte	.LASF98
 26115 043d 08       		.byte	0x8
 26116 043e F6       		.byte	0xf6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 570


 26117 043f 69040000 		.4byte	0x469
 26118 0443 00       		.byte	0
 26119 0444 10       		.uleb128 0x10
 26120 0445 D10C0000 		.4byte	.LASF99
 26121 0449 08       		.byte	0x8
 26122 044a F7       		.byte	0xf7
 26123 044b C7000000 		.4byte	0xc7
 26124 044f 80       		.byte	0x80
 26125 0450 0F       		.uleb128 0xf
 26126 0451 696E6400 		.ascii	"ind\000"
 26127 0455 08       		.byte	0x8
 26128 0456 F8       		.byte	0xf8
 26129 0457 C7000000 		.4byte	0xc7
 26130 045b 82       		.byte	0x82
 26131 045c 10       		.uleb128 0x10
 26132 045d E8010000 		.4byte	.LASF100
 26133 0461 08       		.byte	0x8
 26134 0462 F9       		.byte	0xf9
 26135 0463 97000000 		.4byte	0x97
 26136 0467 84       		.byte	0x84
 26137 0468 00       		.byte	0
 26138 0469 09       		.uleb128 0x9
 26139 046a 97000000 		.4byte	0x97
 26140 046e 79040000 		.4byte	0x479
 26141 0472 0A       		.uleb128 0xa
 26142 0473 18010000 		.4byte	0x118
 26143 0477 7F       		.byte	0x7f
 26144 0478 00       		.byte	0
 26145 0479 11       		.uleb128 0x11
 26146 047a C6020000 		.4byte	.LASF101
 26147 047e 50       		.byte	0x50
 26148 047f 08       		.byte	0x8
 26149 0480 0201     		.2byte	0x102
 26150 0482 E2040000 		.4byte	0x4e2
 26151 0486 12       		.uleb128 0x12
 26152 0487 01030000 		.4byte	.LASF102
 26153 048b 08       		.byte	0x8
 26154 048c 0301     		.2byte	0x103
 26155 048e E2040000 		.4byte	0x4e2
 26156 0492 00       		.byte	0
 26157 0493 12       		.uleb128 0x12
 26158 0494 B5010000 		.4byte	.LASF103
 26159 0498 08       		.byte	0x8
 26160 0499 0401     		.2byte	0x104
 26161 049b F2040000 		.4byte	0x4f2
 26162 049f 08       		.byte	0x8
 26163 04a0 12       		.uleb128 0x12
 26164 04a1 6D0B0000 		.4byte	.LASF104
 26165 04a5 08       		.byte	0x8
 26166 04a6 0501     		.2byte	0x105
 26167 04a8 02050000 		.4byte	0x502
 26168 04ac 30       		.byte	0x30
 26169 04ad 12       		.uleb128 0x12
 26170 04ae 34010000 		.4byte	.LASF105
 26171 04b2 08       		.byte	0x8
 26172 04b3 0601     		.2byte	0x106
 26173 04b5 AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 571


 26174 04b9 40       		.byte	0x40
 26175 04ba 12       		.uleb128 0x12
 26176 04bb A8120000 		.4byte	.LASF106
 26177 04bf 08       		.byte	0x8
 26178 04c0 0701     		.2byte	0x107
 26179 04c2 AF000000 		.4byte	0xaf
 26180 04c6 44       		.byte	0x44
 26181 04c7 12       		.uleb128 0x12
 26182 04c8 2A070000 		.4byte	.LASF107
 26183 04cc 08       		.byte	0x8
 26184 04cd 0801     		.2byte	0x108
 26185 04cf AF000000 		.4byte	0xaf
 26186 04d3 48       		.byte	0x48
 26187 04d4 12       		.uleb128 0x12
 26188 04d5 67070000 		.4byte	.LASF108
 26189 04d9 08       		.byte	0x8
 26190 04da 0901     		.2byte	0x109
 26191 04dc AF000000 		.4byte	0xaf
 26192 04e0 4C       		.byte	0x4c
 26193 04e1 00       		.byte	0
 26194 04e2 09       		.uleb128 0x9
 26195 04e3 AF000000 		.4byte	0xaf
 26196 04e7 F2040000 		.4byte	0x4f2
 26197 04eb 0A       		.uleb128 0xa
 26198 04ec 18010000 		.4byte	0x118
 26199 04f0 01       		.byte	0x1
 26200 04f1 00       		.byte	0
 26201 04f2 09       		.uleb128 0x9
 26202 04f3 AF000000 		.4byte	0xaf
 26203 04f7 02050000 		.4byte	0x502
 26204 04fb 0A       		.uleb128 0xa
 26205 04fc 18010000 		.4byte	0x118
 26206 0500 09       		.byte	0x9
 26207 0501 00       		.byte	0
 26208 0502 09       		.uleb128 0x9
 26209 0503 AF000000 		.4byte	0xaf
 26210 0507 12050000 		.4byte	0x512
 26211 050b 0A       		.uleb128 0xa
 26212 050c 18010000 		.4byte	0x118
 26213 0510 03       		.byte	0x3
 26214 0511 00       		.byte	0
 26215 0512 11       		.uleb128 0x11
 26216 0513 06020000 		.4byte	.LASF109
 26217 0517 10       		.byte	0x10
 26218 0518 08       		.byte	0x8
 26219 0519 1001     		.2byte	0x110
 26220 051b A1050000 		.4byte	0x5a1
 26221 051f 13       		.uleb128 0x13
 26222 0520 696400   		.ascii	"id\000"
 26223 0523 08       		.byte	0x8
 26224 0524 1101     		.2byte	0x111
 26225 0526 97000000 		.4byte	0x97
 26226 052a 00       		.byte	0
 26227 052b 12       		.uleb128 0x12
 26228 052c B90F0000 		.4byte	.LASF110
 26229 0530 08       		.byte	0x8
 26230 0531 1201     		.2byte	0x112
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 572


 26231 0533 A1050000 		.4byte	0x5a1
 26232 0537 01       		.byte	0x1
 26233 0538 12       		.uleb128 0x12
 26234 0539 29100000 		.4byte	.LASF111
 26235 053d 08       		.byte	0x8
 26236 053e 1301     		.2byte	0x113
 26237 0540 A1050000 		.4byte	0x5a1
 26238 0544 04       		.byte	0x4
 26239 0545 12       		.uleb128 0x12
 26240 0546 F9030000 		.4byte	.LASF112
 26241 054a 08       		.byte	0x8
 26242 054b 1401     		.2byte	0x114
 26243 054d 97000000 		.4byte	0x97
 26244 0551 07       		.byte	0x7
 26245 0552 12       		.uleb128 0x12
 26246 0553 82020000 		.4byte	.LASF113
 26247 0557 08       		.byte	0x8
 26248 0558 1501     		.2byte	0x115
 26249 055a 97000000 		.4byte	0x97
 26250 055e 08       		.byte	0x8
 26251 055f 12       		.uleb128 0x12
 26252 0560 2C020000 		.4byte	.LASF114
 26253 0564 08       		.byte	0x8
 26254 0565 1601     		.2byte	0x116
 26255 0567 97000000 		.4byte	0x97
 26256 056b 09       		.byte	0x9
 26257 056c 12       		.uleb128 0x12
 26258 056d 7C110000 		.4byte	.LASF115
 26259 0571 08       		.byte	0x8
 26260 0572 1701     		.2byte	0x117
 26261 0574 97000000 		.4byte	0x97
 26262 0578 0A       		.byte	0xa
 26263 0579 12       		.uleb128 0x12
 26264 057a 40110000 		.4byte	.LASF116
 26265 057e 08       		.byte	0x8
 26266 057f 1801     		.2byte	0x118
 26267 0581 97000000 		.4byte	0x97
 26268 0585 0B       		.byte	0xb
 26269 0586 12       		.uleb128 0x12
 26270 0587 3F0E0000 		.4byte	.LASF117
 26271 058b 08       		.byte	0x8
 26272 058c 1901     		.2byte	0x119
 26273 058e 97000000 		.4byte	0x97
 26274 0592 0C       		.byte	0xc
 26275 0593 12       		.uleb128 0x12
 26276 0594 A3020000 		.4byte	.LASF118
 26277 0598 08       		.byte	0x8
 26278 0599 1A01     		.2byte	0x11a
 26279 059b A1050000 		.4byte	0x5a1
 26280 059f 0D       		.byte	0xd
 26281 05a0 00       		.byte	0
 26282 05a1 09       		.uleb128 0x9
 26283 05a2 97000000 		.4byte	0x97
 26284 05a6 B1050000 		.4byte	0x5b1
 26285 05aa 0A       		.uleb128 0xa
 26286 05ab 18010000 		.4byte	0x118
 26287 05af 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 573


 26288 05b0 00       		.byte	0
 26289 05b1 11       		.uleb128 0x11
 26290 05b2 F7090000 		.4byte	.LASF119
 26291 05b6 70       		.byte	0x70
 26292 05b7 08       		.byte	0x8
 26293 05b8 2101     		.2byte	0x121
 26294 05ba 2B070000 		.4byte	0x72b
 26295 05be 13       		.uleb128 0x13
 26296 05bf 6B5F7000 		.ascii	"k_p\000"
 26297 05c3 08       		.byte	0x8
 26298 05c4 2201     		.2byte	0x122
 26299 05c6 D3000000 		.4byte	0xd3
 26300 05ca 00       		.byte	0
 26301 05cb 13       		.uleb128 0x13
 26302 05cc 6B5F6900 		.ascii	"k_i\000"
 26303 05d0 08       		.byte	0x8
 26304 05d1 2301     		.2byte	0x123
 26305 05d3 D3000000 		.4byte	0xd3
 26306 05d7 04       		.byte	0x4
 26307 05d8 13       		.uleb128 0x13
 26308 05d9 6B5F6400 		.ascii	"k_d\000"
 26309 05dd 08       		.byte	0x8
 26310 05de 2401     		.2byte	0x124
 26311 05e0 D3000000 		.4byte	0xd3
 26312 05e4 08       		.byte	0x8
 26313 05e5 12       		.uleb128 0x12
 26314 05e6 4B0D0000 		.4byte	.LASF120
 26315 05ea 08       		.byte	0x8
 26316 05eb 2501     		.2byte	0x125
 26317 05ed D3000000 		.4byte	0xd3
 26318 05f1 0C       		.byte	0xc
 26319 05f2 12       		.uleb128 0x12
 26320 05f3 38050000 		.4byte	.LASF121
 26321 05f7 08       		.byte	0x8
 26322 05f8 2601     		.2byte	0x126
 26323 05fa D3000000 		.4byte	0xd3
 26324 05fe 10       		.byte	0x10
 26325 05ff 12       		.uleb128 0x12
 26326 0600 12050000 		.4byte	.LASF122
 26327 0604 08       		.byte	0x8
 26328 0605 2701     		.2byte	0x127
 26329 0607 D3000000 		.4byte	0xd3
 26330 060b 14       		.byte	0x14
 26331 060c 12       		.uleb128 0x12
 26332 060d E3100000 		.4byte	.LASF123
 26333 0611 08       		.byte	0x8
 26334 0612 2801     		.2byte	0x128
 26335 0614 D3000000 		.4byte	0xd3
 26336 0618 18       		.byte	0x18
 26337 0619 12       		.uleb128 0x12
 26338 061a BB050000 		.4byte	.LASF124
 26339 061e 08       		.byte	0x8
 26340 061f 2901     		.2byte	0x129
 26341 0621 D3000000 		.4byte	0xd3
 26342 0625 1C       		.byte	0x1c
 26343 0626 12       		.uleb128 0x12
 26344 0627 840F0000 		.4byte	.LASF125
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 574


 26345 062b 08       		.byte	0x8
 26346 062c 2A01     		.2byte	0x12a
 26347 062e D3000000 		.4byte	0xd3
 26348 0632 20       		.byte	0x20
 26349 0633 12       		.uleb128 0x12
 26350 0634 D8050000 		.4byte	.LASF126
 26351 0638 08       		.byte	0x8
 26352 0639 2B01     		.2byte	0x12b
 26353 063b D3000000 		.4byte	0xd3
 26354 063f 24       		.byte	0x24
 26355 0640 12       		.uleb128 0x12
 26356 0641 96060000 		.4byte	.LASF127
 26357 0645 08       		.byte	0x8
 26358 0646 2C01     		.2byte	0x12c
 26359 0648 D3000000 		.4byte	0xd3
 26360 064c 28       		.byte	0x28
 26361 064d 12       		.uleb128 0x12
 26362 064e 55130000 		.4byte	.LASF128
 26363 0652 08       		.byte	0x8
 26364 0653 2D01     		.2byte	0x12d
 26365 0655 D3000000 		.4byte	0xd3
 26366 0659 2C       		.byte	0x2c
 26367 065a 12       		.uleb128 0x12
 26368 065b 83070000 		.4byte	.LASF129
 26369 065f 08       		.byte	0x8
 26370 0660 2E01     		.2byte	0x12e
 26371 0662 97000000 		.4byte	0x97
 26372 0666 30       		.byte	0x30
 26373 0667 12       		.uleb128 0x12
 26374 0668 CC100000 		.4byte	.LASF130
 26375 066c 08       		.byte	0x8
 26376 066d 2F01     		.2byte	0x12f
 26377 066f 97000000 		.4byte	0x97
 26378 0673 31       		.byte	0x31
 26379 0674 12       		.uleb128 0x12
 26380 0675 6B0D0000 		.4byte	.LASF131
 26381 0679 08       		.byte	0x8
 26382 067a 3001     		.2byte	0x130
 26383 067c 97000000 		.4byte	0x97
 26384 0680 32       		.byte	0x32
 26385 0681 12       		.uleb128 0x12
 26386 0682 5D120000 		.4byte	.LASF132
 26387 0686 08       		.byte	0x8
 26388 0687 3101     		.2byte	0x131
 26389 0689 97000000 		.4byte	0x97
 26390 068d 33       		.byte	0x33
 26391 068e 12       		.uleb128 0x12
 26392 068f E8000000 		.4byte	.LASF133
 26393 0693 08       		.byte	0x8
 26394 0694 3201     		.2byte	0x132
 26395 0696 D3000000 		.4byte	0xd3
 26396 069a 34       		.byte	0x34
 26397 069b 12       		.uleb128 0x12
 26398 069c 57050000 		.4byte	.LASF134
 26399 06a0 08       		.byte	0x8
 26400 06a1 3301     		.2byte	0x133
 26401 06a3 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 575


 26402 06a7 38       		.byte	0x38
 26403 06a8 12       		.uleb128 0x12
 26404 06a9 A1090000 		.4byte	.LASF135
 26405 06ad 08       		.byte	0x8
 26406 06ae 3401     		.2byte	0x134
 26407 06b0 D3000000 		.4byte	0xd3
 26408 06b4 3C       		.byte	0x3c
 26409 06b5 12       		.uleb128 0x12
 26410 06b6 C5040000 		.4byte	.LASF136
 26411 06ba 08       		.byte	0x8
 26412 06bb 3501     		.2byte	0x135
 26413 06bd D3000000 		.4byte	0xd3
 26414 06c1 40       		.byte	0x40
 26415 06c2 12       		.uleb128 0x12
 26416 06c3 28010000 		.4byte	.LASF137
 26417 06c7 08       		.byte	0x8
 26418 06c8 3601     		.2byte	0x136
 26419 06ca 2B070000 		.4byte	0x72b
 26420 06ce 44       		.byte	0x44
 26421 06cf 12       		.uleb128 0x12
 26422 06d0 ED120000 		.4byte	.LASF138
 26423 06d4 08       		.byte	0x8
 26424 06d5 3701     		.2byte	0x137
 26425 06d7 C7000000 		.4byte	0xc7
 26426 06db 5C       		.byte	0x5c
 26427 06dc 12       		.uleb128 0x12
 26428 06dd D0070000 		.4byte	.LASF139
 26429 06e1 08       		.byte	0x8
 26430 06e2 3801     		.2byte	0x138
 26431 06e4 97000000 		.4byte	0x97
 26432 06e8 5E       		.byte	0x5e
 26433 06e9 12       		.uleb128 0x12
 26434 06ea 8B0A0000 		.4byte	.LASF140
 26435 06ee 08       		.byte	0x8
 26436 06ef 3901     		.2byte	0x139
 26437 06f1 97000000 		.4byte	0x97
 26438 06f5 5F       		.byte	0x5f
 26439 06f6 12       		.uleb128 0x12
 26440 06f7 1D040000 		.4byte	.LASF141
 26441 06fb 08       		.byte	0x8
 26442 06fc 3A01     		.2byte	0x13a
 26443 06fe 97000000 		.4byte	0x97
 26444 0702 60       		.byte	0x60
 26445 0703 12       		.uleb128 0x12
 26446 0704 01050000 		.4byte	.LASF142
 26447 0708 08       		.byte	0x8
 26448 0709 3B01     		.2byte	0x13b
 26449 070b 97000000 		.4byte	0x97
 26450 070f 61       		.byte	0x61
 26451 0710 12       		.uleb128 0x12
 26452 0711 DA030000 		.4byte	.LASF143
 26453 0715 08       		.byte	0x8
 26454 0716 3C01     		.2byte	0x13c
 26455 0718 97000000 		.4byte	0x97
 26456 071c 62       		.byte	0x62
 26457 071d 12       		.uleb128 0x12
 26458 071e A3020000 		.4byte	.LASF118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 576


 26459 0722 08       		.byte	0x8
 26460 0723 3D01     		.2byte	0x13d
 26461 0725 3B070000 		.4byte	0x73b
 26462 0729 63       		.byte	0x63
 26463 072a 00       		.byte	0
 26464 072b 09       		.uleb128 0x9
 26465 072c EB000000 		.4byte	0xeb
 26466 0730 3B070000 		.4byte	0x73b
 26467 0734 0A       		.uleb128 0xa
 26468 0735 18010000 		.4byte	0x118
 26469 0739 05       		.byte	0x5
 26470 073a 00       		.byte	0
 26471 073b 09       		.uleb128 0x9
 26472 073c 97000000 		.4byte	0x97
 26473 0740 4B070000 		.4byte	0x74b
 26474 0744 0A       		.uleb128 0xa
 26475 0745 18010000 		.4byte	0x118
 26476 0749 0C       		.byte	0xc
 26477 074a 00       		.byte	0
 26478 074b 11       		.uleb128 0x11
 26479 074c EA110000 		.4byte	.LASF144
 26480 0750 30       		.byte	0x30
 26481 0751 08       		.byte	0x8
 26482 0752 4401     		.2byte	0x144
 26483 0754 CE070000 		.4byte	0x7ce
 26484 0758 12       		.uleb128 0x12
 26485 0759 83090000 		.4byte	.LASF145
 26486 075d 08       		.byte	0x8
 26487 075e 4501     		.2byte	0x145
 26488 0760 CE070000 		.4byte	0x7ce
 26489 0764 00       		.byte	0
 26490 0765 13       		.uleb128 0x13
 26491 0766 72657300 		.ascii	"res\000"
 26492 076a 08       		.byte	0x8
 26493 076b 4601     		.2byte	0x146
 26494 076d A1050000 		.4byte	0x5a1
 26495 0771 05       		.byte	0x5
 26496 0772 12       		.uleb128 0x12
 26497 0773 92070000 		.4byte	.LASF146
 26498 0777 08       		.byte	0x8
 26499 0778 4701     		.2byte	0x147
 26500 077a AE030000 		.4byte	0x3ae
 26501 077e 08       		.byte	0x8
 26502 077f 12       		.uleb128 0x12
 26503 0780 31050000 		.4byte	.LASF147
 26504 0784 08       		.byte	0x8
 26505 0785 4801     		.2byte	0x148
 26506 0787 DE070000 		.4byte	0x7de
 26507 078b 14       		.byte	0x14
 26508 078c 12       		.uleb128 0x12
 26509 078d 220C0000 		.4byte	.LASF148
 26510 0791 08       		.byte	0x8
 26511 0792 4901     		.2byte	0x149
 26512 0794 97000000 		.4byte	0x97
 26513 0798 20       		.byte	0x20
 26514 0799 12       		.uleb128 0x12
 26515 079a EE010000 		.4byte	.LASF149
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 577


 26516 079e 08       		.byte	0x8
 26517 079f 4A01     		.2byte	0x14a
 26518 07a1 A1050000 		.4byte	0x5a1
 26519 07a5 21       		.byte	0x21
 26520 07a6 12       		.uleb128 0x12
 26521 07a7 D50B0000 		.4byte	.LASF150
 26522 07ab 08       		.byte	0x8
 26523 07ac 4B01     		.2byte	0x14b
 26524 07ae BB000000 		.4byte	0xbb
 26525 07b2 24       		.byte	0x24
 26526 07b3 12       		.uleb128 0x12
 26527 07b4 660E0000 		.4byte	.LASF151
 26528 07b8 08       		.byte	0x8
 26529 07b9 4C01     		.2byte	0x14c
 26530 07bb BE030000 		.4byte	0x3be
 26531 07bf 25       		.byte	0x25
 26532 07c0 12       		.uleb128 0x12
 26533 07c1 A3020000 		.4byte	.LASF118
 26534 07c5 08       		.byte	0x8
 26535 07c6 4D01     		.2byte	0x14d
 26536 07c8 EE070000 		.4byte	0x7ee
 26537 07cc 28       		.byte	0x28
 26538 07cd 00       		.byte	0
 26539 07ce 09       		.uleb128 0x9
 26540 07cf 97000000 		.4byte	0x97
 26541 07d3 DE070000 		.4byte	0x7de
 26542 07d7 0A       		.uleb128 0xa
 26543 07d8 18010000 		.4byte	0x118
 26544 07dc 04       		.byte	0x4
 26545 07dd 00       		.byte	0
 26546 07de 09       		.uleb128 0x9
 26547 07df DF000000 		.4byte	0xdf
 26548 07e3 EE070000 		.4byte	0x7ee
 26549 07e7 0A       		.uleb128 0xa
 26550 07e8 18010000 		.4byte	0x118
 26551 07ec 02       		.byte	0x2
 26552 07ed 00       		.byte	0
 26553 07ee 09       		.uleb128 0x9
 26554 07ef 97000000 		.4byte	0x97
 26555 07f3 FE070000 		.4byte	0x7fe
 26556 07f7 0A       		.uleb128 0xa
 26557 07f8 18010000 		.4byte	0x118
 26558 07fc 07       		.byte	0x7
 26559 07fd 00       		.byte	0
 26560 07fe 11       		.uleb128 0x11
 26561 07ff AE010000 		.4byte	.LASF152
 26562 0803 10       		.byte	0x10
 26563 0804 08       		.byte	0x8
 26564 0805 5401     		.2byte	0x154
 26565 0807 5A080000 		.4byte	0x85a
 26566 080b 12       		.uleb128 0x12
 26567 080c 4D0B0000 		.4byte	.LASF153
 26568 0810 08       		.byte	0x8
 26569 0811 5501     		.2byte	0x155
 26570 0813 5A080000 		.4byte	0x85a
 26571 0817 00       		.byte	0
 26572 0818 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 578


 26573 0819 B2120000 		.4byte	.LASF154
 26574 081d 08       		.byte	0x8
 26575 081e 5601     		.2byte	0x156
 26576 0820 E2040000 		.4byte	0x4e2
 26577 0824 04       		.byte	0x4
 26578 0825 12       		.uleb128 0x12
 26579 0826 63050000 		.4byte	.LASF155
 26580 082a 08       		.byte	0x8
 26581 082b 5701     		.2byte	0x157
 26582 082d 97000000 		.4byte	0x97
 26583 0831 0C       		.byte	0xc
 26584 0832 12       		.uleb128 0x12
 26585 0833 800E0000 		.4byte	.LASF156
 26586 0837 08       		.byte	0x8
 26587 0838 5801     		.2byte	0x158
 26588 083a 97000000 		.4byte	0x97
 26589 083e 0D       		.byte	0xd
 26590 083f 12       		.uleb128 0x12
 26591 0840 C1100000 		.4byte	.LASF157
 26592 0844 08       		.byte	0x8
 26593 0845 5901     		.2byte	0x159
 26594 0847 97000000 		.4byte	0x97
 26595 084b 0E       		.byte	0xe
 26596 084c 12       		.uleb128 0x12
 26597 084d A3020000 		.4byte	.LASF118
 26598 0851 08       		.byte	0x8
 26599 0852 5A01     		.2byte	0x15a
 26600 0854 6A080000 		.4byte	0x86a
 26601 0858 0F       		.byte	0xf
 26602 0859 00       		.byte	0
 26603 085a 09       		.uleb128 0x9
 26604 085b A3000000 		.4byte	0xa3
 26605 085f 6A080000 		.4byte	0x86a
 26606 0863 0A       		.uleb128 0xa
 26607 0864 18010000 		.4byte	0x118
 26608 0868 01       		.byte	0x1
 26609 0869 00       		.byte	0
 26610 086a 09       		.uleb128 0x9
 26611 086b 97000000 		.4byte	0x97
 26612 086f 7A080000 		.4byte	0x87a
 26613 0873 0A       		.uleb128 0xa
 26614 0874 18010000 		.4byte	0x118
 26615 0878 00       		.byte	0
 26616 0879 00       		.byte	0
 26617 087a 11       		.uleb128 0x11
 26618 087b D30A0000 		.4byte	.LASF158
 26619 087f 20       		.byte	0x20
 26620 0880 08       		.byte	0x8
 26621 0881 6101     		.2byte	0x161
 26622 0883 BC080000 		.4byte	0x8bc
 26623 0887 12       		.uleb128 0x12
 26624 0888 47020000 		.4byte	.LASF159
 26625 088c 08       		.byte	0x8
 26626 088d 6201     		.2byte	0x162
 26627 088f 97000000 		.4byte	0x97
 26628 0893 00       		.byte	0
 26629 0894 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 579


 26630 0895 440C0000 		.4byte	.LASF160
 26631 0899 08       		.byte	0x8
 26632 089a 6301     		.2byte	0x163
 26633 089c 97000000 		.4byte	0x97
 26634 08a0 01       		.byte	0x1
 26635 08a1 12       		.uleb128 0x12
 26636 08a2 E4090000 		.4byte	.LASF161
 26637 08a6 08       		.byte	0x8
 26638 08a7 6401     		.2byte	0x164
 26639 08a9 BC080000 		.4byte	0x8bc
 26640 08ad 02       		.byte	0x2
 26641 08ae 12       		.uleb128 0x12
 26642 08af A3020000 		.4byte	.LASF118
 26643 08b3 08       		.byte	0x8
 26644 08b4 6501     		.2byte	0x165
 26645 08b6 CE070000 		.4byte	0x7ce
 26646 08ba 1B       		.byte	0x1b
 26647 08bb 00       		.byte	0
 26648 08bc 09       		.uleb128 0x9
 26649 08bd 97000000 		.4byte	0x97
 26650 08c1 D2080000 		.4byte	0x8d2
 26651 08c5 0A       		.uleb128 0xa
 26652 08c6 18010000 		.4byte	0x118
 26653 08ca 04       		.byte	0x4
 26654 08cb 0A       		.uleb128 0xa
 26655 08cc 18010000 		.4byte	0x118
 26656 08d0 04       		.byte	0x4
 26657 08d1 00       		.byte	0
 26658 08d2 11       		.uleb128 0x11
 26659 08d3 730E0000 		.4byte	.LASF162
 26660 08d7 20       		.byte	0x20
 26661 08d8 08       		.byte	0x8
 26662 08d9 6C01     		.2byte	0x16c
 26663 08db 21090000 		.4byte	0x921
 26664 08df 12       		.uleb128 0x12
 26665 08e0 180C0000 		.4byte	.LASF163
 26666 08e4 08       		.byte	0x8
 26667 08e5 6D01     		.2byte	0x16d
 26668 08e7 21090000 		.4byte	0x921
 26669 08eb 00       		.byte	0
 26670 08ec 12       		.uleb128 0x12
 26671 08ed AE100000 		.4byte	.LASF164
 26672 08f1 08       		.byte	0x8
 26673 08f2 6E01     		.2byte	0x16e
 26674 08f4 97000000 		.4byte	0x97
 26675 08f8 06       		.byte	0x6
 26676 08f9 12       		.uleb128 0x12
 26677 08fa 03110000 		.4byte	.LASF165
 26678 08fe 08       		.byte	0x8
 26679 08ff 6F01     		.2byte	0x16f
 26680 0901 97000000 		.4byte	0x97
 26681 0905 07       		.byte	0x7
 26682 0906 12       		.uleb128 0x12
 26683 0907 88050000 		.4byte	.LASF166
 26684 090b 08       		.byte	0x8
 26685 090c 7001     		.2byte	0x170
 26686 090e 31090000 		.4byte	0x931
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 580


 26687 0912 08       		.byte	0x8
 26688 0913 12       		.uleb128 0x12
 26689 0914 A3020000 		.4byte	.LASF118
 26690 0918 08       		.byte	0x8
 26691 0919 7101     		.2byte	0x171
 26692 091b 31090000 		.4byte	0x931
 26693 091f 14       		.byte	0x14
 26694 0920 00       		.byte	0
 26695 0921 09       		.uleb128 0x9
 26696 0922 97000000 		.4byte	0x97
 26697 0926 31090000 		.4byte	0x931
 26698 092a 0A       		.uleb128 0xa
 26699 092b 18010000 		.4byte	0x118
 26700 092f 05       		.byte	0x5
 26701 0930 00       		.byte	0
 26702 0931 09       		.uleb128 0x9
 26703 0932 97000000 		.4byte	0x97
 26704 0936 41090000 		.4byte	0x941
 26705 093a 0A       		.uleb128 0xa
 26706 093b 18010000 		.4byte	0x118
 26707 093f 0B       		.byte	0xb
 26708 0940 00       		.byte	0
 26709 0941 11       		.uleb128 0x11
 26710 0942 480E0000 		.4byte	.LASF167
 26711 0946 20       		.byte	0x20
 26712 0947 08       		.byte	0x8
 26713 0948 7801     		.2byte	0x178
 26714 094a 76090000 		.4byte	0x976
 26715 094e 12       		.uleb128 0x12
 26716 094f 61030000 		.4byte	.LASF168
 26717 0953 08       		.byte	0x8
 26718 0954 7901     		.2byte	0x179
 26719 0956 40010000 		.4byte	0x140
 26720 095a 00       		.byte	0
 26721 095b 12       		.uleb128 0x12
 26722 095c 91020000 		.4byte	.LASF169
 26723 0960 08       		.byte	0x8
 26724 0961 7A01     		.2byte	0x17a
 26725 0963 FE070000 		.4byte	0x7fe
 26726 0967 08       		.byte	0x8
 26727 0968 12       		.uleb128 0x12
 26728 0969 A3020000 		.4byte	.LASF118
 26729 096d 08       		.byte	0x8
 26730 096e 7B01     		.2byte	0x17b
 26731 0970 EE070000 		.4byte	0x7ee
 26732 0974 18       		.byte	0x18
 26733 0975 00       		.byte	0
 26734 0976 11       		.uleb128 0x11
 26735 0977 08090000 		.4byte	.LASF170
 26736 097b 10       		.byte	0x10
 26737 097c 08       		.byte	0x8
 26738 097d 8201     		.2byte	0x182
 26739 097f C5090000 		.4byte	0x9c5
 26740 0983 12       		.uleb128 0x12
 26741 0984 C2070000 		.4byte	.LASF171
 26742 0988 08       		.byte	0x8
 26743 0989 8301     		.2byte	0x183
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 581


 26744 098b D3000000 		.4byte	0xd3
 26745 098f 00       		.byte	0
 26746 0990 12       		.uleb128 0x12
 26747 0991 39130000 		.4byte	.LASF172
 26748 0995 08       		.byte	0x8
 26749 0996 8401     		.2byte	0x184
 26750 0998 D3000000 		.4byte	0xd3
 26751 099c 04       		.byte	0x4
 26752 099d 12       		.uleb128 0x12
 26753 099e 6D050000 		.4byte	.LASF173
 26754 09a2 08       		.byte	0x8
 26755 09a3 8501     		.2byte	0x185
 26756 09a5 D3000000 		.4byte	0xd3
 26757 09a9 08       		.byte	0x8
 26758 09aa 12       		.uleb128 0x12
 26759 09ab 7D060000 		.4byte	.LASF174
 26760 09af 08       		.byte	0x8
 26761 09b0 8601     		.2byte	0x186
 26762 09b2 97000000 		.4byte	0x97
 26763 09b6 0C       		.byte	0xc
 26764 09b7 12       		.uleb128 0x12
 26765 09b8 A3020000 		.4byte	.LASF118
 26766 09bc 08       		.byte	0x8
 26767 09bd 8701     		.2byte	0x187
 26768 09bf A1050000 		.4byte	0x5a1
 26769 09c3 0D       		.byte	0xd
 26770 09c4 00       		.byte	0
 26771 09c5 11       		.uleb128 0x11
 26772 09c6 56010000 		.4byte	.LASF175
 26773 09ca 10       		.byte	0x10
 26774 09cb 08       		.byte	0x8
 26775 09cc 8E01     		.2byte	0x18e
 26776 09ce FA090000 		.4byte	0x9fa
 26777 09d2 12       		.uleb128 0x12
 26778 09d3 050E0000 		.4byte	.LASF176
 26779 09d7 08       		.byte	0x8
 26780 09d8 8F01     		.2byte	0x18f
 26781 09da 97000000 		.4byte	0x97
 26782 09de 00       		.byte	0
 26783 09df 12       		.uleb128 0x12
 26784 09e0 AE090000 		.4byte	.LASF177
 26785 09e4 08       		.byte	0x8
 26786 09e5 9001     		.2byte	0x190
 26787 09e7 97000000 		.4byte	0x97
 26788 09eb 01       		.byte	0x1
 26789 09ec 12       		.uleb128 0x12
 26790 09ed A3020000 		.4byte	.LASF118
 26791 09f1 08       		.byte	0x8
 26792 09f2 9101     		.2byte	0x191
 26793 09f4 FA090000 		.4byte	0x9fa
 26794 09f8 02       		.byte	0x2
 26795 09f9 00       		.byte	0
 26796 09fa 09       		.uleb128 0x9
 26797 09fb 97000000 		.4byte	0x97
 26798 09ff 0A0A0000 		.4byte	0xa0a
 26799 0a03 0A       		.uleb128 0xa
 26800 0a04 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 582


 26801 0a08 0D       		.byte	0xd
 26802 0a09 00       		.byte	0
 26803 0a0a 11       		.uleb128 0x11
 26804 0a0b A20B0000 		.4byte	.LASF178
 26805 0a0f 10       		.byte	0x10
 26806 0a10 08       		.byte	0x8
 26807 0a11 9801     		.2byte	0x198
 26808 0a13 4C0A0000 		.4byte	0xa4c
 26809 0a17 12       		.uleb128 0x12
 26810 0a18 F5110000 		.4byte	.LASF179
 26811 0a1c 08       		.byte	0x8
 26812 0a1d 9901     		.2byte	0x199
 26813 0a1f D3000000 		.4byte	0xd3
 26814 0a23 00       		.byte	0
 26815 0a24 12       		.uleb128 0x12
 26816 0a25 68060000 		.4byte	.LASF180
 26817 0a29 08       		.byte	0x8
 26818 0a2a 9A01     		.2byte	0x19a
 26819 0a2c EB000000 		.4byte	0xeb
 26820 0a30 04       		.byte	0x4
 26821 0a31 12       		.uleb128 0x12
 26822 0a32 9E0D0000 		.4byte	.LASF181
 26823 0a36 08       		.byte	0x8
 26824 0a37 9B01     		.2byte	0x19b
 26825 0a39 EB000000 		.4byte	0xeb
 26826 0a3d 08       		.byte	0x8
 26827 0a3e 12       		.uleb128 0x12
 26828 0a3f A3020000 		.4byte	.LASF118
 26829 0a43 08       		.byte	0x8
 26830 0a44 9C01     		.2byte	0x19c
 26831 0a46 4C0A0000 		.4byte	0xa4c
 26832 0a4a 0C       		.byte	0xc
 26833 0a4b 00       		.byte	0
 26834 0a4c 09       		.uleb128 0x9
 26835 0a4d 97000000 		.4byte	0x97
 26836 0a51 5C0A0000 		.4byte	0xa5c
 26837 0a55 0A       		.uleb128 0xa
 26838 0a56 18010000 		.4byte	0x118
 26839 0a5a 03       		.byte	0x3
 26840 0a5b 00       		.byte	0
 26841 0a5c 14       		.uleb128 0x14
 26842 0a5d 10120000 		.4byte	.LASF182
 26843 0a61 D002     		.2byte	0x2d0
 26844 0a63 08       		.byte	0x8
 26845 0a64 A501     		.2byte	0x1a5
 26846 0a66 260B0000 		.4byte	0xb26
 26847 0a6a 12       		.uleb128 0x12
 26848 0a6b 770A0000 		.4byte	.LASF183
 26849 0a6f 08       		.byte	0x8
 26850 0a70 A701     		.2byte	0x1a7
 26851 0a72 97000000 		.4byte	0x97
 26852 0a76 00       		.byte	0
 26853 0a77 12       		.uleb128 0x12
 26854 0a78 A3020000 		.4byte	.LASF118
 26855 0a7c 08       		.byte	0x8
 26856 0a7d A801     		.2byte	0x1a8
 26857 0a7f 260B0000 		.4byte	0xb26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 583


 26858 0a83 01       		.byte	0x1
 26859 0a84 13       		.uleb128 0x13
 26860 0a85 636E7400 		.ascii	"cnt\000"
 26861 0a89 08       		.byte	0x8
 26862 0a8a A901     		.2byte	0x1a9
 26863 0a8c 79040000 		.4byte	0x479
 26864 0a90 10       		.byte	0x10
 26865 0a91 12       		.uleb128 0x12
 26866 0a92 6A020000 		.4byte	.LASF184
 26867 0a96 08       		.byte	0x8
 26868 0a97 AA01     		.2byte	0x1aa
 26869 0a99 360B0000 		.4byte	0xb36
 26870 0a9d 60       		.byte	0x60
 26871 0a9e 13       		.uleb128 0x13
 26872 0a9f 64657600 		.ascii	"dev\000"
 26873 0aa3 08       		.byte	0x8
 26874 0aa4 AB01     		.2byte	0x1ab
 26875 0aa6 12050000 		.4byte	0x512
 26876 0aaa A0       		.byte	0xa0
 26877 0aab 12       		.uleb128 0x12
 26878 0aac 940F0000 		.4byte	.LASF185
 26879 0ab0 08       		.byte	0x8
 26880 0ab1 AC01     		.2byte	0x1ac
 26881 0ab3 460B0000 		.4byte	0xb46
 26882 0ab7 B0       		.byte	0xb0
 26883 0ab8 15       		.uleb128 0x15
 26884 0ab9 656E6300 		.ascii	"enc\000"
 26885 0abd 08       		.byte	0x8
 26886 0abe AD01     		.2byte	0x1ad
 26887 0ac0 560B0000 		.4byte	0xb56
 26888 0ac4 9001     		.2byte	0x190
 26889 0ac6 15       		.uleb128 0x15
 26890 0ac7 656D6700 		.ascii	"emg\000"
 26891 0acb 08       		.byte	0x8
 26892 0acc AE01     		.2byte	0x1ae
 26893 0ace FE070000 		.4byte	0x7fe
 26894 0ad2 F001     		.2byte	0x1f0
 26895 0ad4 15       		.uleb128 0x15
 26896 0ad5 696D7500 		.ascii	"imu\000"
 26897 0ad9 08       		.byte	0x8
 26898 0ada AF01     		.2byte	0x1af
 26899 0adc 7A080000 		.4byte	0x87a
 26900 0ae0 0002     		.2byte	0x200
 26901 0ae2 15       		.uleb128 0x15
 26902 0ae3 65787000 		.ascii	"exp\000"
 26903 0ae7 08       		.byte	0x8
 26904 0ae8 B001     		.2byte	0x1b0
 26905 0aea D2080000 		.4byte	0x8d2
 26906 0aee 2002     		.2byte	0x220
 26907 0af0 16       		.uleb128 0x16
 26908 0af1 50000000 		.4byte	.LASF186
 26909 0af5 08       		.byte	0x8
 26910 0af6 B101     		.2byte	0x1b1
 26911 0af8 660B0000 		.4byte	0xb66
 26912 0afc 4002     		.2byte	0x240
 26913 0afe 15       		.uleb128 0x15
 26914 0aff 534800   		.ascii	"SH\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 584


 26915 0b02 08       		.byte	0x8
 26916 0b03 B301     		.2byte	0x1b3
 26917 0b05 76090000 		.4byte	0x976
 26918 0b09 A002     		.2byte	0x2a0
 26919 0b0b 15       		.uleb128 0x15
 26920 0b0c 4D5300   		.ascii	"MS\000"
 26921 0b0f 08       		.byte	0x8
 26922 0b10 B401     		.2byte	0x1b4
 26923 0b12 C5090000 		.4byte	0x9c5
 26924 0b16 B002     		.2byte	0x2b0
 26925 0b18 15       		.uleb128 0x15
 26926 0b19 464200   		.ascii	"FB\000"
 26927 0b1c 08       		.byte	0x8
 26928 0b1d B501     		.2byte	0x1b5
 26929 0b1f 0A0A0000 		.4byte	0xa0a
 26930 0b23 C002     		.2byte	0x2c0
 26931 0b25 00       		.byte	0
 26932 0b26 09       		.uleb128 0x9
 26933 0b27 97000000 		.4byte	0x97
 26934 0b2b 360B0000 		.4byte	0xb36
 26935 0b2f 0A       		.uleb128 0xa
 26936 0b30 18010000 		.4byte	0x118
 26937 0b34 0E       		.byte	0xe
 26938 0b35 00       		.byte	0
 26939 0b36 09       		.uleb128 0x9
 26940 0b37 97000000 		.4byte	0x97
 26941 0b3b 460B0000 		.4byte	0xb46
 26942 0b3f 0A       		.uleb128 0xa
 26943 0b40 18010000 		.4byte	0x118
 26944 0b44 3F       		.byte	0x3f
 26945 0b45 00       		.byte	0
 26946 0b46 09       		.uleb128 0x9
 26947 0b47 B1050000 		.4byte	0x5b1
 26948 0b4b 560B0000 		.4byte	0xb56
 26949 0b4f 0A       		.uleb128 0xa
 26950 0b50 18010000 		.4byte	0x118
 26951 0b54 01       		.byte	0x1
 26952 0b55 00       		.byte	0
 26953 0b56 09       		.uleb128 0x9
 26954 0b57 4B070000 		.4byte	0x74b
 26955 0b5b 660B0000 		.4byte	0xb66
 26956 0b5f 0A       		.uleb128 0xa
 26957 0b60 18010000 		.4byte	0x118
 26958 0b64 01       		.byte	0x1
 26959 0b65 00       		.byte	0
 26960 0b66 09       		.uleb128 0x9
 26961 0b67 41090000 		.4byte	0x941
 26962 0b6b 760B0000 		.4byte	0xb76
 26963 0b6f 0A       		.uleb128 0xa
 26964 0b70 18010000 		.4byte	0x118
 26965 0b74 02       		.byte	0x2
 26966 0b75 00       		.byte	0
 26967 0b76 11       		.uleb128 0x11
 26968 0b77 E60C0000 		.4byte	.LASF187
 26969 0b7b 28       		.byte	0x28
 26970 0b7c 08       		.byte	0x8
 26971 0b7d C101     		.2byte	0x1c1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 585


 26972 0b7f D20B0000 		.4byte	0xbd2
 26973 0b83 12       		.uleb128 0x12
 26974 0b84 A0040000 		.4byte	.LASF188
 26975 0b88 08       		.byte	0x8
 26976 0b89 C201     		.2byte	0x1c2
 26977 0b8b 97000000 		.4byte	0x97
 26978 0b8f 00       		.byte	0
 26979 0b90 12       		.uleb128 0x12
 26980 0b91 B0020000 		.4byte	.LASF189
 26981 0b95 08       		.byte	0x8
 26982 0b96 C301     		.2byte	0x1c3
 26983 0b98 D20B0000 		.4byte	0xbd2
 26984 0b9c 02       		.byte	0x2
 26985 0b9d 12       		.uleb128 0x12
 26986 0b9e 0D0C0000 		.4byte	.LASF190
 26987 0ba2 08       		.byte	0x8
 26988 0ba3 C401     		.2byte	0x1c4
 26989 0ba5 D20B0000 		.4byte	0xbd2
 26990 0ba9 08       		.byte	0x8
 26991 0baa 12       		.uleb128 0x12
 26992 0bab F20C0000 		.4byte	.LASF191
 26993 0baf 08       		.byte	0x8
 26994 0bb0 C501     		.2byte	0x1c5
 26995 0bb2 D20B0000 		.4byte	0xbd2
 26996 0bb6 0E       		.byte	0xe
 26997 0bb7 12       		.uleb128 0x12
 26998 0bb8 A9070000 		.4byte	.LASF192
 26999 0bbc 08       		.byte	0x8
 27000 0bbd C601     		.2byte	0x1c6
 27001 0bbf E20B0000 		.4byte	0xbe2
 27002 0bc3 14       		.byte	0x14
 27003 0bc4 12       		.uleb128 0x12
 27004 0bc5 C3010000 		.4byte	.LASF193
 27005 0bc9 08       		.byte	0x8
 27006 0bca C701     		.2byte	0x1c7
 27007 0bcc C7000000 		.4byte	0xc7
 27008 0bd0 24       		.byte	0x24
 27009 0bd1 00       		.byte	0
 27010 0bd2 09       		.uleb128 0x9
 27011 0bd3 C7000000 		.4byte	0xc7
 27012 0bd7 E20B0000 		.4byte	0xbe2
 27013 0bdb 0A       		.uleb128 0xa
 27014 0bdc 18010000 		.4byte	0x118
 27015 0be0 02       		.byte	0x2
 27016 0be1 00       		.byte	0
 27017 0be2 09       		.uleb128 0x9
 27018 0be3 EB000000 		.4byte	0xeb
 27019 0be7 F20B0000 		.4byte	0xbf2
 27020 0beb 0A       		.uleb128 0xa
 27021 0bec 18010000 		.4byte	0x118
 27022 0bf0 03       		.byte	0x3
 27023 0bf1 00       		.byte	0
 27024 0bf2 11       		.uleb128 0x11
 27025 0bf3 72030000 		.4byte	.LASF194
 27026 0bf7 06       		.byte	0x6
 27027 0bf8 08       		.byte	0x8
 27028 0bf9 D701     		.2byte	0x1d7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 586


 27029 0bfb 340C0000 		.4byte	0xc34
 27030 0bff 12       		.uleb128 0x12
 27031 0c00 10070000 		.4byte	.LASF195
 27032 0c04 08       		.byte	0x8
 27033 0c05 D801     		.2byte	0x1d8
 27034 0c07 97000000 		.4byte	0x97
 27035 0c0b 00       		.byte	0
 27036 0c0c 12       		.uleb128 0x12
 27037 0c0d 5E130000 		.4byte	.LASF196
 27038 0c11 08       		.byte	0x8
 27039 0c12 D901     		.2byte	0x1d9
 27040 0c14 97000000 		.4byte	0x97
 27041 0c18 01       		.byte	0x1
 27042 0c19 12       		.uleb128 0x12
 27043 0c1a F6050000 		.4byte	.LASF197
 27044 0c1e 08       		.byte	0x8
 27045 0c1f DA01     		.2byte	0x1da
 27046 0c21 C7000000 		.4byte	0xc7
 27047 0c25 02       		.byte	0x2
 27048 0c26 12       		.uleb128 0x12
 27049 0c27 95090000 		.4byte	.LASF198
 27050 0c2b 08       		.byte	0x8
 27051 0c2c DB01     		.2byte	0x1db
 27052 0c2e C7000000 		.4byte	0xc7
 27053 0c32 04       		.byte	0x4
 27054 0c33 00       		.byte	0
 27055 0c34 17       		.uleb128 0x17
 27056 0c35 1E0E0000 		.4byte	.LASF367
 27057 0c39 02       		.byte	0x2
 27058 0c3a 1403     		.2byte	0x314
 27059 0c3c 8C000000 		.4byte	0x8c
 27060 0c40 03       		.byte	0x3
 27061 0c41 5E0C0000 		.4byte	0xc5e
 27062 0c45 18       		.uleb128 0x18
 27063 0c46 9A040000 		.4byte	.LASF278
 27064 0c4a 02       		.byte	0x2
 27065 0c4b 1403     		.2byte	0x314
 27066 0c4d 8C000000 		.4byte	0x8c
 27067 0c51 19       		.uleb128 0x19
 27068 0c52 CE010000 		.4byte	.LASF368
 27069 0c56 02       		.byte	0x2
 27070 0c57 1603     		.2byte	0x316
 27071 0c59 8C000000 		.4byte	0x8c
 27072 0c5d 00       		.byte	0
 27073 0c5e 1A       		.uleb128 0x1a
 27074 0c5f 4C0F0000 		.4byte	.LASF199
 27075 0c63 01       		.byte	0x1
 27076 0c64 3D       		.byte	0x3d
 27077 0c65 00000000 		.4byte	.LFB64
 27078 0c69 DC040000 		.4byte	.LFE64-.LFB64
 27079 0c6d 01       		.uleb128 0x1
 27080 0c6e 9C       		.byte	0x9c
 27081 0c6f 080D0000 		.4byte	0xd08
 27082 0c73 1B       		.uleb128 0x1b
 27083 0c74 FC050000 		.4byte	.LASF201
 27084 0c78 01       		.byte	0x1
 27085 0c79 3F       		.byte	0x3f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 587


 27086 0c7a 97000000 		.4byte	0x97
 27087 0c7e 02       		.uleb128 0x2
 27088 0c7f 91       		.byte	0x91
 27089 0c80 77       		.sleb128 -9
 27090 0c81 1C       		.uleb128 0x1c
 27091 0c82 340C0000 		.4byte	0xc34
 27092 0c86 36030000 		.4byte	.LBB8
 27093 0c8a 08000000 		.4byte	.LBE8-.LBB8
 27094 0c8e 01       		.byte	0x1
 27095 0c8f 96       		.byte	0x96
 27096 0c90 AF0C0000 		.4byte	0xcaf
 27097 0c94 1D       		.uleb128 0x1d
 27098 0c95 450C0000 		.4byte	0xc45
 27099 0c99 02       		.uleb128 0x2
 27100 0c9a 91       		.byte	0x91
 27101 0c9b 68       		.sleb128 -24
 27102 0c9c 1E       		.uleb128 0x1e
 27103 0c9d 36030000 		.4byte	.LBB9
 27104 0ca1 08000000 		.4byte	.LBE9-.LBB9
 27105 0ca5 1F       		.uleb128 0x1f
 27106 0ca6 510C0000 		.4byte	0xc51
 27107 0caa 02       		.uleb128 0x2
 27108 0cab 91       		.byte	0x91
 27109 0cac 64       		.sleb128 -28
 27110 0cad 00       		.byte	0
 27111 0cae 00       		.byte	0
 27112 0caf 1C       		.uleb128 0x1c
 27113 0cb0 340C0000 		.4byte	0xc34
 27114 0cb4 54030000 		.4byte	.LBB10
 27115 0cb8 08000000 		.4byte	.LBE10-.LBB10
 27116 0cbc 01       		.byte	0x1
 27117 0cbd A2       		.byte	0xa2
 27118 0cbe DD0C0000 		.4byte	0xcdd
 27119 0cc2 1D       		.uleb128 0x1d
 27120 0cc3 450C0000 		.4byte	0xc45
 27121 0cc7 02       		.uleb128 0x2
 27122 0cc8 91       		.byte	0x91
 27123 0cc9 70       		.sleb128 -16
 27124 0cca 1E       		.uleb128 0x1e
 27125 0ccb 54030000 		.4byte	.LBB11
 27126 0ccf 08000000 		.4byte	.LBE11-.LBB11
 27127 0cd3 1F       		.uleb128 0x1f
 27128 0cd4 510C0000 		.4byte	0xc51
 27129 0cd8 02       		.uleb128 0x2
 27130 0cd9 91       		.byte	0x91
 27131 0cda 60       		.sleb128 -32
 27132 0cdb 00       		.byte	0
 27133 0cdc 00       		.byte	0
 27134 0cdd 20       		.uleb128 0x20
 27135 0cde 340C0000 		.4byte	0xc34
 27136 0ce2 98040000 		.4byte	.LBB12
 27137 0ce6 08000000 		.4byte	.LBE12-.LBB12
 27138 0cea 01       		.byte	0x1
 27139 0ceb FE       		.byte	0xfe
 27140 0cec 1D       		.uleb128 0x1d
 27141 0ced 450C0000 		.4byte	0xc45
 27142 0cf1 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 588


 27143 0cf2 91       		.byte	0x91
 27144 0cf3 6C       		.sleb128 -20
 27145 0cf4 1E       		.uleb128 0x1e
 27146 0cf5 98040000 		.4byte	.LBB13
 27147 0cf9 08000000 		.4byte	.LBE13-.LBB13
 27148 0cfd 1F       		.uleb128 0x1f
 27149 0cfe 510C0000 		.4byte	0xc51
 27150 0d02 02       		.uleb128 0x2
 27151 0d03 91       		.byte	0x91
 27152 0d04 5C       		.sleb128 -36
 27153 0d05 00       		.byte	0
 27154 0d06 00       		.byte	0
 27155 0d07 00       		.byte	0
 27156 0d08 21       		.uleb128 0x21
 27157 0d09 00000000 		.4byte	.LASF200
 27158 0d0d 01       		.byte	0x1
 27159 0d0e 2501     		.2byte	0x125
 27160 0d10 00000000 		.4byte	.LFB65
 27161 0d14 22000000 		.4byte	.LFE65-.LFB65
 27162 0d18 01       		.uleb128 0x1
 27163 0d19 9C       		.byte	0x9c
 27164 0d1a 2F0D0000 		.4byte	0xd2f
 27165 0d1e 22       		.uleb128 0x22
 27166 0d1f 23050000 		.4byte	.LASF202
 27167 0d23 01       		.byte	0x1
 27168 0d24 2601     		.2byte	0x126
 27169 0d26 2F0D0000 		.4byte	0xd2f
 27170 0d2a 03       		.uleb128 0x3
 27171 0d2b 91       		.byte	0x91
 27172 0d2c 9C74     		.sleb128 -1508
 27173 0d2e 00       		.byte	0
 27174 0d2f 09       		.uleb128 0x9
 27175 0d30 F9000000 		.4byte	0xf9
 27176 0d34 400D0000 		.4byte	0xd40
 27177 0d38 23       		.uleb128 0x23
 27178 0d39 18010000 		.4byte	0x118
 27179 0d3d DB05     		.2byte	0x5db
 27180 0d3f 00       		.byte	0
 27181 0d40 21       		.uleb128 0x21
 27182 0d41 41120000 		.4byte	.LASF203
 27183 0d45 01       		.byte	0x1
 27184 0d46 3101     		.2byte	0x131
 27185 0d48 00000000 		.4byte	.LFB66
 27186 0d4c 02010000 		.4byte	.LFE66-.LFB66
 27187 0d50 01       		.uleb128 0x1
 27188 0d51 9C       		.byte	0x9c
 27189 0d52 890D0000 		.4byte	0xd89
 27190 0d56 24       		.uleb128 0x24
 27191 0d57 A6110000 		.4byte	.LASF206
 27192 0d5b 01       		.byte	0x1
 27193 0d5c 3101     		.2byte	0x131
 27194 0d5e A3000000 		.4byte	0xa3
 27195 0d62 04       		.uleb128 0x4
 27196 0d63 91       		.byte	0x91
 27197 0d64 B6C47E   		.sleb128 -24010
 27198 0d67 22       		.uleb128 0x22
 27199 0d68 23050000 		.4byte	.LASF202
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 589


 27200 0d6c 01       		.byte	0x1
 27201 0d6d 3201     		.2byte	0x132
 27202 0d6f 890D0000 		.4byte	0xd89
 27203 0d73 03       		.uleb128 0x3
 27204 0d74 91       		.byte	0x91
 27205 0d75 D860     		.sleb128 -4008
 27206 0d77 22       		.uleb128 0x22
 27207 0d78 77070000 		.4byte	.LASF204
 27208 0d7c 01       		.byte	0x1
 27209 0d7d 3301     		.2byte	0x133
 27210 0d7f 9A0D0000 		.4byte	0xd9a
 27211 0d83 04       		.uleb128 0x4
 27212 0d84 91       		.byte	0x91
 27213 0d85 B8C47E   		.sleb128 -24008
 27214 0d88 00       		.byte	0
 27215 0d89 09       		.uleb128 0x9
 27216 0d8a F9000000 		.4byte	0xf9
 27217 0d8e 9A0D0000 		.4byte	0xd9a
 27218 0d92 23       		.uleb128 0x23
 27219 0d93 18010000 		.4byte	0x118
 27220 0d97 9F0F     		.2byte	0xf9f
 27221 0d99 00       		.byte	0
 27222 0d9a 09       		.uleb128 0x9
 27223 0d9b F9000000 		.4byte	0xf9
 27224 0d9f AB0D0000 		.4byte	0xdab
 27225 0da3 23       		.uleb128 0x23
 27226 0da4 18010000 		.4byte	0x118
 27227 0da8 1F4E     		.2byte	0x4e1f
 27228 0daa 00       		.byte	0
 27229 0dab 21       		.uleb128 0x21
 27230 0dac 93010000 		.4byte	.LASF205
 27231 0db0 01       		.byte	0x1
 27232 0db1 5601     		.2byte	0x156
 27233 0db3 00000000 		.4byte	.LFB67
 27234 0db7 6E2F0000 		.4byte	.LFE67-.LFB67
 27235 0dbb 01       		.uleb128 0x1
 27236 0dbc 9C       		.byte	0x9c
 27237 0dbd 4F0F0000 		.4byte	0xf4f
 27238 0dc1 24       		.uleb128 0x24
 27239 0dc2 B90B0000 		.4byte	.LASF207
 27240 0dc6 01       		.byte	0x1
 27241 0dc7 5601     		.2byte	0x156
 27242 0dc9 4F0F0000 		.4byte	0xf4f
 27243 0dcd 03       		.uleb128 0x3
 27244 0dce 91       		.byte	0x91
 27245 0dcf 9C57     		.sleb128 -5220
 27246 0dd1 24       		.uleb128 0x24
 27247 0dd2 1A120000 		.4byte	.LASF208
 27248 0dd6 01       		.byte	0x1
 27249 0dd7 5601     		.2byte	0x156
 27250 0dd9 550F0000 		.4byte	0xf55
 27251 0ddd 03       		.uleb128 0x3
 27252 0dde 91       		.byte	0x91
 27253 0ddf 9857     		.sleb128 -5224
 27254 0de1 24       		.uleb128 0x24
 27255 0de2 BC020000 		.4byte	.LASF209
 27256 0de6 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 590


 27257 0de7 5701     		.2byte	0x157
 27258 0de9 550F0000 		.4byte	0xf55
 27259 0ded 03       		.uleb128 0x3
 27260 0dee 91       		.byte	0x91
 27261 0def 9457     		.sleb128 -5228
 27262 0df1 24       		.uleb128 0x24
 27263 0df2 1A0B0000 		.4byte	.LASF210
 27264 0df6 01       		.byte	0x1
 27265 0df7 5701     		.2byte	0x157
 27266 0df9 550F0000 		.4byte	0xf55
 27267 0dfd 03       		.uleb128 0x3
 27268 0dfe 91       		.byte	0x91
 27269 0dff 9057     		.sleb128 -5232
 27270 0e01 24       		.uleb128 0x24
 27271 0e02 69110000 		.4byte	.LASF211
 27272 0e06 01       		.byte	0x1
 27273 0e07 5801     		.2byte	0x158
 27274 0e09 550F0000 		.4byte	0xf55
 27275 0e0d 02       		.uleb128 0x2
 27276 0e0e 91       		.byte	0x91
 27277 0e0f 00       		.sleb128 0
 27278 0e10 24       		.uleb128 0x24
 27279 0e11 05070000 		.4byte	.LASF212
 27280 0e15 01       		.byte	0x1
 27281 0e16 5801     		.2byte	0x158
 27282 0e18 5B0F0000 		.4byte	0xf5b
 27283 0e1c 02       		.uleb128 0x2
 27284 0e1d 91       		.byte	0x91
 27285 0e1e 04       		.sleb128 4
 27286 0e1f 24       		.uleb128 0x24
 27287 0e20 CD090000 		.4byte	.LASF213
 27288 0e24 01       		.byte	0x1
 27289 0e25 5901     		.2byte	0x159
 27290 0e27 550F0000 		.4byte	0xf55
 27291 0e2b 02       		.uleb128 0x2
 27292 0e2c 91       		.byte	0x91
 27293 0e2d 08       		.sleb128 8
 27294 0e2e 24       		.uleb128 0x24
 27295 0e2f 89070000 		.4byte	.LASF214
 27296 0e33 01       		.byte	0x1
 27297 0e34 5901     		.2byte	0x159
 27298 0e36 5B0F0000 		.4byte	0xf5b
 27299 0e3a 02       		.uleb128 0x2
 27300 0e3b 91       		.byte	0x91
 27301 0e3c 0C       		.sleb128 12
 27302 0e3d 22       		.uleb128 0x22
 27303 0e3e 76050000 		.4byte	.LASF215
 27304 0e42 01       		.byte	0x1
 27305 0e43 5C01     		.2byte	0x15c
 27306 0e45 610F0000 		.4byte	0xf61
 27307 0e49 03       		.uleb128 0x3
 27308 0e4a 91       		.byte	0x91
 27309 0e4b E857     		.sleb128 -5144
 27310 0e4d 22       		.uleb128 0x22
 27311 0e4e C5000000 		.4byte	.LASF216
 27312 0e52 01       		.byte	0x1
 27313 0e53 5D01     		.2byte	0x15d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 591


 27314 0e55 A3000000 		.4byte	0xa3
 27315 0e59 02       		.uleb128 0x2
 27316 0e5a 91       		.byte	0x91
 27317 0e5b 60       		.sleb128 -32
 27318 0e5c 25       		.uleb128 0x25
 27319 0e5d 6900     		.ascii	"i\000"
 27320 0e5f 01       		.byte	0x1
 27321 0e60 6001     		.2byte	0x160
 27322 0e62 97000000 		.4byte	0x97
 27323 0e66 02       		.uleb128 0x2
 27324 0e67 91       		.byte	0x91
 27325 0e68 67       		.sleb128 -25
 27326 0e69 25       		.uleb128 0x25
 27327 0e6a 6A00     		.ascii	"j\000"
 27328 0e6c 01       		.byte	0x1
 27329 0e6d 6001     		.2byte	0x160
 27330 0e6f 97000000 		.4byte	0x97
 27331 0e73 02       		.uleb128 0x2
 27332 0e74 91       		.byte	0x91
 27333 0e75 66       		.sleb128 -26
 27334 0e76 25       		.uleb128 0x25
 27335 0e77 69647800 		.ascii	"idx\000"
 27336 0e7b 01       		.byte	0x1
 27337 0e7c 6101     		.2byte	0x161
 27338 0e7e 97000000 		.4byte	0x97
 27339 0e82 02       		.uleb128 0x2
 27340 0e83 91       		.byte	0x91
 27341 0e84 65       		.sleb128 -27
 27342 0e85 22       		.uleb128 0x22
 27343 0e86 8B0F0000 		.4byte	.LASF217
 27344 0e8a 01       		.byte	0x1
 27345 0e8b 6201     		.2byte	0x162
 27346 0e8d 97000000 		.4byte	0x97
 27347 0e91 02       		.uleb128 0x2
 27348 0e92 91       		.byte	0x91
 27349 0e93 64       		.sleb128 -28
 27350 0e94 25       		.uleb128 0x25
 27351 0e95 736F6400 		.ascii	"sod\000"
 27352 0e99 01       		.byte	0x1
 27353 0e9a 6301     		.2byte	0x163
 27354 0e9c 97000000 		.4byte	0x97
 27355 0ea0 02       		.uleb128 0x2
 27356 0ea1 91       		.byte	0x91
 27357 0ea2 63       		.sleb128 -29
 27358 0ea3 22       		.uleb128 0x22
 27359 0ea4 EB0A0000 		.4byte	.LASF218
 27360 0ea8 01       		.byte	0x1
 27361 0ea9 6401     		.2byte	0x164
 27362 0eab 97000000 		.4byte	0x97
 27363 0eaf 02       		.uleb128 0x2
 27364 0eb0 91       		.byte	0x91
 27365 0eb1 62       		.sleb128 -30
 27366 0eb2 22       		.uleb128 0x22
 27367 0eb3 44130000 		.4byte	.LASF219
 27368 0eb7 01       		.byte	0x1
 27369 0eb8 6501     		.2byte	0x165
 27370 0eba 720F0000 		.4byte	0xf72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 592


 27371 0ebe 03       		.uleb128 0x3
 27372 0ebf 91       		.byte	0x91
 27373 0ec0 B457     		.sleb128 -5196
 27374 0ec2 22       		.uleb128 0x22
 27375 0ec3 51110000 		.4byte	.LASF220
 27376 0ec7 01       		.byte	0x1
 27377 0ec8 6601     		.2byte	0x166
 27378 0eca EB000000 		.4byte	0xeb
 27379 0ece 03       		.uleb128 0x3
 27380 0ecf 91       		.byte	0x91
 27381 0ed0 B057     		.sleb128 -5200
 27382 0ed2 22       		.uleb128 0x22
 27383 0ed3 13100000 		.4byte	.LASF221
 27384 0ed7 01       		.byte	0x1
 27385 0ed8 6701     		.2byte	0x167
 27386 0eda C7000000 		.4byte	0xc7
 27387 0ede 03       		.uleb128 0x3
 27388 0edf 91       		.byte	0x91
 27389 0ee0 AE57     		.sleb128 -5202
 27390 0ee2 22       		.uleb128 0x22
 27391 0ee3 420B0000 		.4byte	.LASF222
 27392 0ee7 01       		.byte	0x1
 27393 0ee8 6801     		.2byte	0x168
 27394 0eea A3000000 		.4byte	0xa3
 27395 0eee 03       		.uleb128 0x3
 27396 0eef 91       		.byte	0x91
 27397 0ef0 AC57     		.sleb128 -5204
 27398 0ef2 22       		.uleb128 0x22
 27399 0ef3 72110000 		.4byte	.LASF223
 27400 0ef7 01       		.byte	0x1
 27401 0ef8 6901     		.2byte	0x169
 27402 0efa D3000000 		.4byte	0xd3
 27403 0efe 03       		.uleb128 0x3
 27404 0eff 91       		.byte	0x91
 27405 0f00 A857     		.sleb128 -5208
 27406 0f02 22       		.uleb128 0x22
 27407 0f03 C60C0000 		.4byte	.LASF224
 27408 0f07 01       		.byte	0x1
 27409 0f08 6A01     		.2byte	0x16a
 27410 0f0a AF000000 		.4byte	0xaf
 27411 0f0e 03       		.uleb128 0x3
 27412 0f0f 91       		.byte	0x91
 27413 0f10 A457     		.sleb128 -5212
 27414 0f12 22       		.uleb128 0x22
 27415 0f13 690C0000 		.4byte	.LASF225
 27416 0f17 01       		.byte	0x1
 27417 0f18 6C01     		.2byte	0x16c
 27418 0f1a 97000000 		.4byte	0x97
 27419 0f1e 02       		.uleb128 0x2
 27420 0f1f 91       		.byte	0x91
 27421 0f20 5F       		.sleb128 -33
 27422 0f21 22       		.uleb128 0x22
 27423 0f22 F4000000 		.4byte	.LASF226
 27424 0f26 01       		.byte	0x1
 27425 0f27 6D01     		.2byte	0x16d
 27426 0f29 97000000 		.4byte	0x97
 27427 0f2d 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 593


 27428 0f2e 91       		.byte	0x91
 27429 0f2f 5E       		.sleb128 -34
 27430 0f30 22       		.uleb128 0x22
 27431 0f31 000A0000 		.4byte	.LASF227
 27432 0f35 01       		.byte	0x1
 27433 0f36 6F01     		.2byte	0x16f
 27434 0f38 550F0000 		.4byte	0xf55
 27435 0f3c 02       		.uleb128 0x2
 27436 0f3d 91       		.byte	0x91
 27437 0f3e 58       		.sleb128 -40
 27438 0f3f 22       		.uleb128 0x22
 27439 0f40 88010000 		.4byte	.LASF228
 27440 0f44 01       		.byte	0x1
 27441 0f45 7001     		.2byte	0x170
 27442 0f47 550F0000 		.4byte	0xf55
 27443 0f4b 02       		.uleb128 0x2
 27444 0f4c 91       		.byte	0x91
 27445 0f4d 54       		.sleb128 -44
 27446 0f4e 00       		.byte	0
 27447 0f4f 07       		.uleb128 0x7
 27448 0f50 04       		.byte	0x4
 27449 0f51 550F0000 		.4byte	0xf55
 27450 0f55 07       		.uleb128 0x7
 27451 0f56 04       		.byte	0x4
 27452 0f57 97000000 		.4byte	0x97
 27453 0f5b 07       		.uleb128 0x7
 27454 0f5c 04       		.byte	0x4
 27455 0f5d 25010000 		.4byte	0x125
 27456 0f61 09       		.uleb128 0x9
 27457 0f62 97000000 		.4byte	0x97
 27458 0f66 720F0000 		.4byte	0xf72
 27459 0f6a 23       		.uleb128 0x23
 27460 0f6b 18010000 		.4byte	0x118
 27461 0f6f EB13     		.2byte	0x13eb
 27462 0f71 00       		.byte	0
 27463 0f72 09       		.uleb128 0x9
 27464 0f73 F9000000 		.4byte	0xf9
 27465 0f77 820F0000 		.4byte	0xf82
 27466 0f7b 0A       		.uleb128 0xa
 27467 0f7c 18010000 		.4byte	0x118
 27468 0f80 31       		.byte	0x31
 27469 0f81 00       		.byte	0
 27470 0f82 21       		.uleb128 0x21
 27471 0f83 C00D0000 		.4byte	.LASF229
 27472 0f87 01       		.byte	0x1
 27473 0f88 3103     		.2byte	0x331
 27474 0f8a 00000000 		.4byte	.LFB68
 27475 0f8e C0170000 		.4byte	.LFE68-.LFB68
 27476 0f92 01       		.uleb128 0x1
 27477 0f93 9C       		.byte	0x9c
 27478 0f94 50110000 		.4byte	0x1150
 27479 0f98 24       		.uleb128 0x24
 27480 0f99 62060000 		.4byte	.LASF230
 27481 0f9d 01       		.byte	0x1
 27482 0f9e 3103     		.2byte	0x331
 27483 0fa0 A3000000 		.4byte	0xa3
 27484 0fa4 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 594


 27485 0fa5 91       		.byte	0x91
 27486 0fa6 8E76     		.sleb128 -1266
 27487 0fa8 25       		.uleb128 0x25
 27488 0fa9 6900     		.ascii	"i\000"
 27489 0fab 01       		.byte	0x1
 27490 0fac 3203     		.2byte	0x332
 27491 0fae 97000000 		.4byte	0x97
 27492 0fb2 02       		.uleb128 0x2
 27493 0fb3 91       		.byte	0x91
 27494 0fb4 6F       		.sleb128 -17
 27495 0fb5 25       		.uleb128 0x25
 27496 0fb6 6A00     		.ascii	"j\000"
 27497 0fb8 01       		.byte	0x1
 27498 0fb9 3203     		.2byte	0x332
 27499 0fbb 97000000 		.4byte	0x97
 27500 0fbf 02       		.uleb128 0x2
 27501 0fc0 91       		.byte	0x91
 27502 0fc1 6E       		.sleb128 -18
 27503 0fc2 25       		.uleb128 0x25
 27504 0fc3 736F6400 		.ascii	"sod\000"
 27505 0fc7 01       		.byte	0x1
 27506 0fc8 3303     		.2byte	0x333
 27507 0fca 97000000 		.4byte	0x97
 27508 0fce 02       		.uleb128 0x2
 27509 0fcf 91       		.byte	0x91
 27510 0fd0 6D       		.sleb128 -19
 27511 0fd1 22       		.uleb128 0x22
 27512 0fd2 ED090000 		.4byte	.LASF231
 27513 0fd6 01       		.byte	0x1
 27514 0fd7 3403     		.2byte	0x334
 27515 0fd9 97000000 		.4byte	0x97
 27516 0fdd 02       		.uleb128 0x2
 27517 0fde 91       		.byte	0x91
 27518 0fdf 62       		.sleb128 -30
 27519 0fe0 22       		.uleb128 0x22
 27520 0fe1 13100000 		.4byte	.LASF221
 27521 0fe5 01       		.byte	0x1
 27522 0fe6 3503     		.2byte	0x335
 27523 0fe8 C7000000 		.4byte	0xc7
 27524 0fec 02       		.uleb128 0x2
 27525 0fed 91       		.byte	0x91
 27526 0fee 60       		.sleb128 -32
 27527 0fef 22       		.uleb128 0x22
 27528 0ff0 420B0000 		.4byte	.LASF222
 27529 0ff4 01       		.byte	0x1
 27530 0ff5 3603     		.2byte	0x336
 27531 0ff7 A3000000 		.4byte	0xa3
 27532 0ffb 02       		.uleb128 0x2
 27533 0ffc 91       		.byte	0x91
 27534 0ffd 5E       		.sleb128 -34
 27535 0ffe 22       		.uleb128 0x22
 27536 0fff 72110000 		.4byte	.LASF223
 27537 1003 01       		.byte	0x1
 27538 1004 3703     		.2byte	0x337
 27539 1006 D3000000 		.4byte	0xd3
 27540 100a 02       		.uleb128 0x2
 27541 100b 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 595


 27542 100c 58       		.sleb128 -40
 27543 100d 22       		.uleb128 0x22
 27544 100e C60C0000 		.4byte	.LASF224
 27545 1012 01       		.byte	0x1
 27546 1013 3803     		.2byte	0x338
 27547 1015 AF000000 		.4byte	0xaf
 27548 1019 02       		.uleb128 0x2
 27549 101a 91       		.byte	0x91
 27550 101b 54       		.sleb128 -44
 27551 101c 22       		.uleb128 0x22
 27552 101d 51110000 		.4byte	.LASF220
 27553 1021 01       		.byte	0x1
 27554 1022 3903     		.2byte	0x339
 27555 1024 EB000000 		.4byte	0xeb
 27556 1028 02       		.uleb128 0x2
 27557 1029 91       		.byte	0x91
 27558 102a 50       		.sleb128 -48
 27559 102b 22       		.uleb128 0x22
 27560 102c 690C0000 		.4byte	.LASF225
 27561 1030 01       		.byte	0x1
 27562 1031 3B03     		.2byte	0x33b
 27563 1033 97000000 		.4byte	0x97
 27564 1037 02       		.uleb128 0x2
 27565 1038 91       		.byte	0x91
 27566 1039 65       		.sleb128 -27
 27567 103a 22       		.uleb128 0x22
 27568 103b F4000000 		.4byte	.LASF226
 27569 103f 01       		.byte	0x1
 27570 1040 3C03     		.2byte	0x33c
 27571 1042 97000000 		.4byte	0x97
 27572 1046 02       		.uleb128 0x2
 27573 1047 91       		.byte	0x91
 27574 1048 64       		.sleb128 -28
 27575 1049 22       		.uleb128 0x22
 27576 104a D2020000 		.4byte	.LASF232
 27577 104e 01       		.byte	0x1
 27578 104f 3F03     		.2byte	0x33f
 27579 1051 50110000 		.4byte	0x1150
 27580 1055 02       		.uleb128 0x2
 27581 1056 91       		.byte	0x91
 27582 1057 68       		.sleb128 -24
 27583 1058 22       		.uleb128 0x22
 27584 1059 B90B0000 		.4byte	.LASF207
 27585 105d 01       		.byte	0x1
 27586 105e 4703     		.2byte	0x347
 27587 1060 56110000 		.4byte	0x1156
 27588 1064 03       		.uleb128 0x3
 27589 1065 91       		.byte	0x91
 27590 1066 A07D     		.sleb128 -352
 27591 1068 22       		.uleb128 0x22
 27592 1069 1A120000 		.4byte	.LASF208
 27593 106d 01       		.byte	0x1
 27594 106e 9B03     		.2byte	0x39b
 27595 1070 66110000 		.4byte	0x1166
 27596 1074 03       		.uleb128 0x3
 27597 1075 91       		.byte	0x91
 27598 1076 D47C     		.sleb128 -428
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 596


 27599 1078 22       		.uleb128 0x22
 27600 1079 BC020000 		.4byte	.LASF209
 27601 107d 01       		.byte	0x1
 27602 107e B303     		.2byte	0x3b3
 27603 1080 66110000 		.4byte	0x1166
 27604 1084 03       		.uleb128 0x3
 27605 1085 91       		.byte	0x91
 27606 1086 887C     		.sleb128 -504
 27607 1088 22       		.uleb128 0x22
 27608 1089 1A0B0000 		.4byte	.LASF210
 27609 108d 01       		.byte	0x1
 27610 108e CB03     		.2byte	0x3cb
 27611 1090 66110000 		.4byte	0x1166
 27612 1094 03       		.uleb128 0x3
 27613 1095 91       		.byte	0x91
 27614 1096 BC7B     		.sleb128 -580
 27615 1098 22       		.uleb128 0x22
 27616 1099 05070000 		.4byte	.LASF212
 27617 109d 01       		.byte	0x1
 27618 109e E303     		.2byte	0x3e3
 27619 10a0 76110000 		.4byte	0x1176
 27620 10a4 03       		.uleb128 0x3
 27621 10a5 91       		.byte	0x91
 27622 10a6 8C79     		.sleb128 -884
 27623 10a8 22       		.uleb128 0x22
 27624 10a9 99120000 		.4byte	.LASF233
 27625 10ad 01       		.byte	0x1
 27626 10ae FC03     		.2byte	0x3fc
 27627 10b0 86110000 		.4byte	0x1186
 27628 10b4 03       		.uleb128 0x3
 27629 10b5 91       		.byte	0x91
 27630 10b6 9478     		.sleb128 -1004
 27631 10b8 22       		.uleb128 0x22
 27632 10b9 89070000 		.4byte	.LASF214
 27633 10bd 01       		.byte	0x1
 27634 10be FF03     		.2byte	0x3ff
 27635 10c0 96110000 		.4byte	0x1196
 27636 10c4 03       		.uleb128 0x3
 27637 10c5 91       		.byte	0x91
 27638 10c6 EC77     		.sleb128 -1044
 27639 10c8 22       		.uleb128 0x22
 27640 10c9 69110000 		.4byte	.LASF211
 27641 10cd 01       		.byte	0x1
 27642 10ce 0C04     		.2byte	0x40c
 27643 10d0 A6110000 		.4byte	0x11a6
 27644 10d4 03       		.uleb128 0x3
 27645 10d5 91       		.byte	0x91
 27646 10d6 CC77     		.sleb128 -1076
 27647 10d8 22       		.uleb128 0x22
 27648 10d9 BF0B0000 		.4byte	.LASF234
 27649 10dd 01       		.byte	0x1
 27650 10de 0D04     		.2byte	0x40d
 27651 10e0 B6110000 		.4byte	0x11b6
 27652 10e4 03       		.uleb128 0x3
 27653 10e5 91       		.byte	0x91
 27654 10e6 C077     		.sleb128 -1088
 27655 10e8 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 597


 27656 10e9 040B0000 		.4byte	.LASF235
 27657 10ed 01       		.byte	0x1
 27658 10ee 0E04     		.2byte	0x40e
 27659 10f0 C6110000 		.4byte	0x11c6
 27660 10f4 03       		.uleb128 0x3
 27661 10f5 91       		.byte	0x91
 27662 10f6 AC77     		.sleb128 -1108
 27663 10f8 22       		.uleb128 0x22
 27664 10f9 D80C0000 		.4byte	.LASF236
 27665 10fd 01       		.byte	0x1
 27666 10fe 0F04     		.2byte	0x40f
 27667 1100 97000000 		.4byte	0x97
 27668 1104 02       		.uleb128 0x2
 27669 1105 91       		.byte	0x91
 27670 1106 63       		.sleb128 -29
 27671 1107 22       		.uleb128 0x22
 27672 1108 CD090000 		.4byte	.LASF213
 27673 110c 01       		.byte	0x1
 27674 110d 1804     		.2byte	0x418
 27675 110f 66110000 		.4byte	0x1166
 27676 1113 03       		.uleb128 0x3
 27677 1114 91       		.byte	0x91
 27678 1115 E076     		.sleb128 -1184
 27679 1117 22       		.uleb128 0x22
 27680 1118 C0120000 		.4byte	.LASF237
 27681 111c 01       		.byte	0x1
 27682 111d 2304     		.2byte	0x423
 27683 111f 66110000 		.4byte	0x1166
 27684 1123 03       		.uleb128 0x3
 27685 1124 91       		.byte	0x91
 27686 1125 9476     		.sleb128 -1260
 27687 1127 1E       		.uleb128 0x1e
 27688 1128 2A170000 		.4byte	.LBB14
 27689 112c 86000000 		.4byte	.LBE14-.LBB14
 27690 1130 25       		.uleb128 0x25
 27691 1131 69647800 		.ascii	"idx\000"
 27692 1135 01       		.byte	0x1
 27693 1136 8C04     		.2byte	0x48c
 27694 1138 97000000 		.4byte	0x97
 27695 113c 02       		.uleb128 0x2
 27696 113d 91       		.byte	0x91
 27697 113e 67       		.sleb128 -25
 27698 113f 22       		.uleb128 0x22
 27699 1140 DA040000 		.4byte	.LASF238
 27700 1144 01       		.byte	0x1
 27701 1145 8C04     		.2byte	0x48c
 27702 1147 97000000 		.4byte	0x97
 27703 114b 02       		.uleb128 0x2
 27704 114c 91       		.byte	0x91
 27705 114d 66       		.sleb128 -26
 27706 114e 00       		.byte	0
 27707 114f 00       		.byte	0
 27708 1150 07       		.uleb128 0x7
 27709 1151 04       		.byte	0x4
 27710 1152 5C0A0000 		.4byte	0xa5c
 27711 1156 09       		.uleb128 0x9
 27712 1157 550F0000 		.4byte	0xf55
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 598


 27713 115b 66110000 		.4byte	0x1166
 27714 115f 0A       		.uleb128 0xa
 27715 1160 18010000 		.4byte	0x118
 27716 1164 4B       		.byte	0x4b
 27717 1165 00       		.byte	0
 27718 1166 09       		.uleb128 0x9
 27719 1167 97000000 		.4byte	0x97
 27720 116b 76110000 		.4byte	0x1176
 27721 116f 0A       		.uleb128 0xa
 27722 1170 18010000 		.4byte	0x118
 27723 1174 4B       		.byte	0x4b
 27724 1175 00       		.byte	0
 27725 1176 09       		.uleb128 0x9
 27726 1177 25010000 		.4byte	0x125
 27727 117b 86110000 		.4byte	0x1186
 27728 117f 0A       		.uleb128 0xa
 27729 1180 18010000 		.4byte	0x118
 27730 1184 4B       		.byte	0x4b
 27731 1185 00       		.byte	0
 27732 1186 09       		.uleb128 0x9
 27733 1187 F9000000 		.4byte	0xf9
 27734 118b 96110000 		.4byte	0x1196
 27735 118f 0A       		.uleb128 0xa
 27736 1190 18010000 		.4byte	0x118
 27737 1194 75       		.byte	0x75
 27738 1195 00       		.byte	0
 27739 1196 09       		.uleb128 0x9
 27740 1197 25010000 		.4byte	0x125
 27741 119b A6110000 		.4byte	0x11a6
 27742 119f 0A       		.uleb128 0xa
 27743 11a0 18010000 		.4byte	0x118
 27744 11a4 09       		.byte	0x9
 27745 11a5 00       		.byte	0
 27746 11a6 09       		.uleb128 0x9
 27747 11a7 97000000 		.4byte	0x97
 27748 11ab B6110000 		.4byte	0x11b6
 27749 11af 0A       		.uleb128 0xa
 27750 11b0 18010000 		.4byte	0x118
 27751 11b4 1C       		.byte	0x1c
 27752 11b5 00       		.byte	0
 27753 11b6 09       		.uleb128 0x9
 27754 11b7 97000000 		.4byte	0x97
 27755 11bb C6110000 		.4byte	0x11c6
 27756 11bf 0A       		.uleb128 0xa
 27757 11c0 18010000 		.4byte	0x118
 27758 11c4 08       		.byte	0x8
 27759 11c5 00       		.byte	0
 27760 11c6 09       		.uleb128 0x9
 27761 11c7 97000000 		.4byte	0x97
 27762 11cb D6110000 		.4byte	0x11d6
 27763 11cf 0A       		.uleb128 0xa
 27764 11d0 18010000 		.4byte	0x118
 27765 11d4 11       		.byte	0x11
 27766 11d5 00       		.byte	0
 27767 11d6 21       		.uleb128 0x21
 27768 11d7 44030000 		.4byte	.LASF239
 27769 11db 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 599


 27770 11dc 9D04     		.2byte	0x49d
 27771 11de 00000000 		.4byte	.LFB69
 27772 11e2 18140000 		.4byte	.LFE69-.LFB69
 27773 11e6 01       		.uleb128 0x1
 27774 11e7 9C       		.byte	0x9c
 27775 11e8 78120000 		.4byte	0x1278
 27776 11ec 24       		.uleb128 0x24
 27777 11ed 62060000 		.4byte	.LASF230
 27778 11f1 01       		.byte	0x1
 27779 11f2 9D04     		.2byte	0x49d
 27780 11f4 A3000000 		.4byte	0xa3
 27781 11f8 02       		.uleb128 0x2
 27782 11f9 91       		.byte	0x91
 27783 11fa 56       		.sleb128 -42
 27784 11fb 25       		.uleb128 0x25
 27785 11fc 6900     		.ascii	"i\000"
 27786 11fe 01       		.byte	0x1
 27787 11ff 9F04     		.2byte	0x49f
 27788 1201 97000000 		.4byte	0x97
 27789 1205 02       		.uleb128 0x2
 27790 1206 91       		.byte	0x91
 27791 1207 67       		.sleb128 -25
 27792 1208 25       		.uleb128 0x25
 27793 1209 6A00     		.ascii	"j\000"
 27794 120b 01       		.byte	0x1
 27795 120c 9F04     		.2byte	0x49f
 27796 120e 97000000 		.4byte	0x97
 27797 1212 02       		.uleb128 0x2
 27798 1213 91       		.byte	0x91
 27799 1214 66       		.sleb128 -26
 27800 1215 22       		.uleb128 0x22
 27801 1216 250B0000 		.4byte	.LASF240
 27802 121a 01       		.byte	0x1
 27803 121b A004     		.2byte	0x4a0
 27804 121d 97000000 		.4byte	0x97
 27805 1221 02       		.uleb128 0x2
 27806 1222 91       		.byte	0x91
 27807 1223 62       		.sleb128 -30
 27808 1224 22       		.uleb128 0x22
 27809 1225 51110000 		.4byte	.LASF220
 27810 1229 01       		.byte	0x1
 27811 122a A104     		.2byte	0x4a1
 27812 122c EB000000 		.4byte	0xeb
 27813 1230 02       		.uleb128 0x2
 27814 1231 91       		.byte	0x91
 27815 1232 5C       		.sleb128 -36
 27816 1233 22       		.uleb128 0x22
 27817 1234 1D030000 		.4byte	.LASF241
 27818 1238 01       		.byte	0x1
 27819 1239 A104     		.2byte	0x4a1
 27820 123b EB000000 		.4byte	0xeb
 27821 123f 02       		.uleb128 0x2
 27822 1240 91       		.byte	0x91
 27823 1241 58       		.sleb128 -40
 27824 1242 22       		.uleb128 0x22
 27825 1243 690C0000 		.4byte	.LASF225
 27826 1247 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 600


 27827 1248 A304     		.2byte	0x4a3
 27828 124a 97000000 		.4byte	0x97
 27829 124e 02       		.uleb128 0x2
 27830 124f 91       		.byte	0x91
 27831 1250 64       		.sleb128 -28
 27832 1251 22       		.uleb128 0x22
 27833 1252 F4000000 		.4byte	.LASF226
 27834 1256 01       		.byte	0x1
 27835 1257 A404     		.2byte	0x4a4
 27836 1259 97000000 		.4byte	0x97
 27837 125d 02       		.uleb128 0x2
 27838 125e 91       		.byte	0x91
 27839 125f 63       		.sleb128 -29
 27840 1260 1E       		.uleb128 0x1e
 27841 1261 F40A0000 		.4byte	.LBB15
 27842 1265 26000000 		.4byte	.LBE15-.LBB15
 27843 1269 25       		.uleb128 0x25
 27844 126a 6900     		.ascii	"i\000"
 27845 126c 01       		.byte	0x1
 27846 126d 4B05     		.2byte	0x54b
 27847 126f 97000000 		.4byte	0x97
 27848 1273 02       		.uleb128 0x2
 27849 1274 91       		.byte	0x91
 27850 1275 65       		.sleb128 -27
 27851 1276 00       		.byte	0
 27852 1277 00       		.byte	0
 27853 1278 21       		.uleb128 0x21
 27854 1279 14080000 		.4byte	.LASF242
 27855 127d 01       		.byte	0x1
 27856 127e E405     		.2byte	0x5e4
 27857 1280 00000000 		.4byte	.LFB70
 27858 1284 F40D0000 		.4byte	.LFE70-.LFB70
 27859 1288 01       		.uleb128 0x1
 27860 1289 9C       		.byte	0x9c
 27861 128a 07140000 		.4byte	0x1407
 27862 128e 24       		.uleb128 0x24
 27863 128f 62060000 		.4byte	.LASF230
 27864 1293 01       		.byte	0x1
 27865 1294 E405     		.2byte	0x5e4
 27866 1296 A3000000 		.4byte	0xa3
 27867 129a 03       		.uleb128 0x3
 27868 129b 91       		.byte	0x91
 27869 129c CE72     		.sleb128 -1714
 27870 129e 22       		.uleb128 0x22
 27871 129f 76050000 		.4byte	.LASF215
 27872 12a3 01       		.byte	0x1
 27873 12a4 E705     		.2byte	0x5e7
 27874 12a6 07140000 		.4byte	0x1407
 27875 12aa 03       		.uleb128 0x3
 27876 12ab 91       		.byte	0x91
 27877 12ac DC74     		.sleb128 -1444
 27878 12ae 22       		.uleb128 0x22
 27879 12af 00100000 		.4byte	.LASF243
 27880 12b3 01       		.byte	0x1
 27881 12b4 EE05     		.2byte	0x5ee
 27882 12b6 A3000000 		.4byte	0xa3
 27883 12ba 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 601


 27884 12bb 91       		.byte	0x91
 27885 12bc 62       		.sleb128 -30
 27886 12bd 22       		.uleb128 0x22
 27887 12be EE040000 		.4byte	.LASF244
 27888 12c2 01       		.byte	0x1
 27889 12c3 EF05     		.2byte	0x5ef
 27890 12c5 A3000000 		.4byte	0xa3
 27891 12c9 02       		.uleb128 0x2
 27892 12ca 91       		.byte	0x91
 27893 12cb 6E       		.sleb128 -18
 27894 12cc 22       		.uleb128 0x22
 27895 12cd 35080000 		.4byte	.LASF245
 27896 12d1 01       		.byte	0x1
 27897 12d2 F005     		.2byte	0x5f0
 27898 12d4 A3000000 		.4byte	0xa3
 27899 12d8 02       		.uleb128 0x2
 27900 12d9 91       		.byte	0x91
 27901 12da 60       		.sleb128 -32
 27902 12db 22       		.uleb128 0x22
 27903 12dc B4070000 		.4byte	.LASF246
 27904 12e0 01       		.byte	0x1
 27905 12e1 F105     		.2byte	0x5f1
 27906 12e3 A3000000 		.4byte	0xa3
 27907 12e7 02       		.uleb128 0x2
 27908 12e8 91       		.byte	0x91
 27909 12e9 5E       		.sleb128 -34
 27910 12ea 25       		.uleb128 0x25
 27911 12eb 6900     		.ascii	"i\000"
 27912 12ed 01       		.byte	0x1
 27913 12ee F905     		.2byte	0x5f9
 27914 12f0 A3000000 		.4byte	0xa3
 27915 12f4 02       		.uleb128 0x2
 27916 12f5 91       		.byte	0x91
 27917 12f6 6C       		.sleb128 -20
 27918 12f7 25       		.uleb128 0x25
 27919 12f8 6A00     		.ascii	"j\000"
 27920 12fa 01       		.byte	0x1
 27921 12fb F905     		.2byte	0x5f9
 27922 12fd A3000000 		.4byte	0xa3
 27923 1301 02       		.uleb128 0x2
 27924 1302 91       		.byte	0x91
 27925 1303 6A       		.sleb128 -22
 27926 1304 25       		.uleb128 0x25
 27927 1305 6B00     		.ascii	"k\000"
 27928 1307 01       		.byte	0x1
 27929 1308 F905     		.2byte	0x5f9
 27930 130a A3000000 		.4byte	0xa3
 27931 130e 02       		.uleb128 0x2
 27932 130f 91       		.byte	0x91
 27933 1310 68       		.sleb128 -24
 27934 1311 25       		.uleb128 0x25
 27935 1312 6800     		.ascii	"h\000"
 27936 1314 01       		.byte	0x1
 27937 1315 F905     		.2byte	0x5f9
 27938 1317 A3000000 		.4byte	0xa3
 27939 131b 02       		.uleb128 0x2
 27940 131c 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 602


 27941 131d 66       		.sleb128 -26
 27942 131e 22       		.uleb128 0x22
 27943 131f E3040000 		.4byte	.LASF247
 27944 1323 01       		.byte	0x1
 27945 1324 FA05     		.2byte	0x5fa
 27946 1326 A3000000 		.4byte	0xa3
 27947 132a 02       		.uleb128 0x2
 27948 132b 91       		.byte	0x91
 27949 132c 5C       		.sleb128 -36
 27950 132d 22       		.uleb128 0x22
 27951 132e 7E0C0000 		.4byte	.LASF248
 27952 1332 01       		.byte	0x1
 27953 1333 FD05     		.2byte	0x5fd
 27954 1335 30010000 		.4byte	0x130
 27955 1339 03       		.uleb128 0x3
 27956 133a 91       		.byte	0x91
 27957 133b C074     		.sleb128 -1472
 27958 133d 22       		.uleb128 0x22
 27959 133e C70F0000 		.4byte	.LASF249
 27960 1342 01       		.byte	0x1
 27961 1343 FE05     		.2byte	0x5fe
 27962 1345 18140000 		.4byte	0x1418
 27963 1349 03       		.uleb128 0x3
 27964 134a 91       		.byte	0x91
 27965 134b B474     		.sleb128 -1484
 27966 134d 22       		.uleb128 0x22
 27967 134e B5060000 		.4byte	.LASF250
 27968 1352 01       		.byte	0x1
 27969 1353 FF05     		.2byte	0x5ff
 27970 1355 28140000 		.4byte	0x1428
 27971 1359 03       		.uleb128 0x3
 27972 135a 91       		.byte	0x91
 27973 135b A074     		.sleb128 -1504
 27974 135d 22       		.uleb128 0x22
 27975 135e 09000000 		.4byte	.LASF251
 27976 1362 01       		.byte	0x1
 27977 1363 0006     		.2byte	0x600
 27978 1365 38140000 		.4byte	0x1438
 27979 1369 03       		.uleb128 0x3
 27980 136a 91       		.byte	0x91
 27981 136b 9074     		.sleb128 -1520
 27982 136d 22       		.uleb128 0x22
 27983 136e 510D0000 		.4byte	.LASF252
 27984 1372 01       		.byte	0x1
 27985 1373 0106     		.2byte	0x601
 27986 1375 48140000 		.4byte	0x1448
 27987 1379 03       		.uleb128 0x3
 27988 137a 91       		.byte	0x91
 27989 137b E473     		.sleb128 -1564
 27990 137d 22       		.uleb128 0x22
 27991 137e D5010000 		.4byte	.LASF253
 27992 1382 01       		.byte	0x1
 27993 1383 0206     		.2byte	0x602
 27994 1385 30010000 		.4byte	0x130
 27995 1389 03       		.uleb128 0x3
 27996 138a 91       		.byte	0x91
 27997 138b C873     		.sleb128 -1592
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 603


 27998 138d 22       		.uleb128 0x22
 27999 138e 65010000 		.4byte	.LASF254
 28000 1392 01       		.byte	0x1
 28001 1393 0506     		.2byte	0x605
 28002 1395 97000000 		.4byte	0x97
 28003 1399 02       		.uleb128 0x2
 28004 139a 91       		.byte	0x91
 28005 139b 5B       		.sleb128 -37
 28006 139c 22       		.uleb128 0x22
 28007 139d 7A040000 		.4byte	.LASF255
 28008 13a1 01       		.byte	0x1
 28009 13a2 0606     		.2byte	0x606
 28010 13a4 97000000 		.4byte	0x97
 28011 13a8 02       		.uleb128 0x2
 28012 13a9 91       		.byte	0x91
 28013 13aa 5A       		.sleb128 -38
 28014 13ab 22       		.uleb128 0x22
 28015 13ac 780F0000 		.4byte	.LASF256
 28016 13b0 01       		.byte	0x1
 28017 13b1 0706     		.2byte	0x607
 28018 13b3 97000000 		.4byte	0x97
 28019 13b7 02       		.uleb128 0x2
 28020 13b8 91       		.byte	0x91
 28021 13b9 59       		.sleb128 -39
 28022 13ba 22       		.uleb128 0x22
 28023 13bb EE0F0000 		.4byte	.LASF257
 28024 13bf 01       		.byte	0x1
 28025 13c0 0806     		.2byte	0x608
 28026 13c2 97000000 		.4byte	0x97
 28027 13c6 02       		.uleb128 0x2
 28028 13c7 91       		.byte	0x91
 28029 13c8 58       		.sleb128 -40
 28030 13c9 22       		.uleb128 0x22
 28031 13ca 88040000 		.4byte	.LASF258
 28032 13ce 01       		.byte	0x1
 28033 13cf 0906     		.2byte	0x609
 28034 13d1 97000000 		.4byte	0x97
 28035 13d5 02       		.uleb128 0x2
 28036 13d6 91       		.byte	0x91
 28037 13d7 57       		.sleb128 -41
 28038 13d8 22       		.uleb128 0x22
 28039 13d9 AE000000 		.4byte	.LASF259
 28040 13dd 01       		.byte	0x1
 28041 13de 0A06     		.2byte	0x60a
 28042 13e0 97000000 		.4byte	0x97
 28043 13e4 02       		.uleb128 0x2
 28044 13e5 91       		.byte	0x91
 28045 13e6 65       		.sleb128 -27
 28046 13e7 22       		.uleb128 0x22
 28047 13e8 99120000 		.4byte	.LASF233
 28048 13ec 01       		.byte	0x1
 28049 13ed 0C06     		.2byte	0x60c
 28050 13ef 86110000 		.4byte	0x1186
 28051 13f3 03       		.uleb128 0x3
 28052 13f4 91       		.byte	0x91
 28053 13f5 D072     		.sleb128 -1712
 28054 13f7 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 604


 28055 13f8 31030000 		.4byte	.LASF260
 28056 13fc 01       		.byte	0x1
 28057 13fd 0D06     		.2byte	0x60d
 28058 13ff 97000000 		.4byte	0x97
 28059 1403 02       		.uleb128 0x2
 28060 1404 91       		.byte	0x91
 28061 1405 56       		.sleb128 -42
 28062 1406 00       		.byte	0
 28063 1407 09       		.uleb128 0x9
 28064 1408 97000000 		.4byte	0x97
 28065 140c 18140000 		.4byte	0x1418
 28066 1410 23       		.uleb128 0x23
 28067 1411 18010000 		.4byte	0x118
 28068 1415 7805     		.2byte	0x578
 28069 1417 00       		.byte	0
 28070 1418 09       		.uleb128 0x9
 28071 1419 F9000000 		.4byte	0xf9
 28072 141d 28140000 		.4byte	0x1428
 28073 1421 0A       		.uleb128 0xa
 28074 1422 18010000 		.4byte	0x118
 28075 1426 0A       		.byte	0xa
 28076 1427 00       		.byte	0
 28077 1428 09       		.uleb128 0x9
 28078 1429 F9000000 		.4byte	0xf9
 28079 142d 38140000 		.4byte	0x1438
 28080 1431 0A       		.uleb128 0xa
 28081 1432 18010000 		.4byte	0x118
 28082 1436 13       		.byte	0x13
 28083 1437 00       		.byte	0
 28084 1438 09       		.uleb128 0x9
 28085 1439 F9000000 		.4byte	0xf9
 28086 143d 48140000 		.4byte	0x1448
 28087 1441 0A       		.uleb128 0xa
 28088 1442 18010000 		.4byte	0x118
 28089 1446 0F       		.byte	0xf
 28090 1447 00       		.byte	0
 28091 1448 09       		.uleb128 0x9
 28092 1449 F9000000 		.4byte	0xf9
 28093 144d 58140000 		.4byte	0x1458
 28094 1451 0A       		.uleb128 0xa
 28095 1452 18010000 		.4byte	0x118
 28096 1456 29       		.byte	0x29
 28097 1457 00       		.byte	0
 28098 1458 26       		.uleb128 0x26
 28099 1459 9A020000 		.4byte	.LASF291
 28100 145d 01       		.byte	0x1
 28101 145e D306     		.2byte	0x6d3
 28102 1460 00000000 		.4byte	.LFB71
 28103 1464 84000000 		.4byte	.LFE71-.LFB71
 28104 1468 01       		.uleb128 0x1
 28105 1469 9C       		.byte	0x9c
 28106 146a 89140000 		.4byte	0x1489
 28107 146e 25       		.uleb128 0x25
 28108 146f 6900     		.ascii	"i\000"
 28109 1471 01       		.byte	0x1
 28110 1472 D506     		.2byte	0x6d5
 28111 1474 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 605


 28112 1478 02       		.uleb128 0x2
 28113 1479 91       		.byte	0x91
 28114 147a 6F       		.sleb128 -17
 28115 147b 25       		.uleb128 0x25
 28116 147c 6A00     		.ascii	"j\000"
 28117 147e 01       		.byte	0x1
 28118 147f D506     		.2byte	0x6d5
 28119 1481 97000000 		.4byte	0x97
 28120 1485 02       		.uleb128 0x2
 28121 1486 91       		.byte	0x91
 28122 1487 6E       		.sleb128 -18
 28123 1488 00       		.byte	0
 28124 1489 21       		.uleb128 0x21
 28125 148a D3000000 		.4byte	.LASF261
 28126 148e 01       		.byte	0x1
 28127 148f E606     		.2byte	0x6e6
 28128 1491 00000000 		.4byte	.LFB72
 28129 1495 3C1F0000 		.4byte	.LFE72-.LFB72
 28130 1499 01       		.uleb128 0x1
 28131 149a 9C       		.byte	0x9c
 28132 149b 42150000 		.4byte	0x1542
 28133 149f 24       		.uleb128 0x24
 28134 14a0 880C0000 		.4byte	.LASF262
 28135 14a4 01       		.byte	0x1
 28136 14a5 E606     		.2byte	0x6e6
 28137 14a7 1F010000 		.4byte	0x11f
 28138 14ab 03       		.uleb128 0x3
 28139 14ac 91       		.byte	0x91
 28140 14ad D47E     		.sleb128 -172
 28141 14af 25       		.uleb128 0x25
 28142 14b0 6900     		.ascii	"i\000"
 28143 14b2 01       		.byte	0x1
 28144 14b3 E806     		.2byte	0x6e8
 28145 14b5 73000000 		.4byte	0x73
 28146 14b9 02       		.uleb128 0x2
 28147 14ba 91       		.byte	0x91
 28148 14bb 54       		.sleb128 -44
 28149 14bc 22       		.uleb128 0x22
 28150 14bd D2020000 		.4byte	.LASF232
 28151 14c1 01       		.byte	0x1
 28152 14c2 EA06     		.2byte	0x6ea
 28153 14c4 50110000 		.4byte	0x1150
 28154 14c8 02       		.uleb128 0x2
 28155 14c9 91       		.byte	0x91
 28156 14ca 48       		.sleb128 -56
 28157 14cb 1E       		.uleb128 0x1e
 28158 14cc 1C000000 		.4byte	.LBB16
 28159 14d0 B81E0000 		.4byte	.LBE16-.LBB16
 28160 14d4 25       		.uleb128 0x25
 28161 14d5 73747200 		.ascii	"str\000"
 28162 14d9 01       		.byte	0x1
 28163 14da ED06     		.2byte	0x6ed
 28164 14dc 42150000 		.4byte	0x1542
 28165 14e0 03       		.uleb128 0x3
 28166 14e1 91       		.byte	0x91
 28167 14e2 D87E     		.sleb128 -168
 28168 14e4 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 606


 28169 14e5 6A00     		.ascii	"j\000"
 28170 14e7 01       		.byte	0x1
 28171 14e8 8608     		.2byte	0x886
 28172 14ea 73000000 		.4byte	0x73
 28173 14ee 02       		.uleb128 0x2
 28174 14ef 91       		.byte	0x91
 28175 14f0 4C       		.sleb128 -52
 28176 14f1 1E       		.uleb128 0x1e
 28177 14f2 90020000 		.4byte	.LBB17
 28178 14f6 42130000 		.4byte	.LBE17-.LBB17
 28179 14fa 25       		.uleb128 0x25
 28180 14fb 6B00     		.ascii	"k\000"
 28181 14fd 01       		.byte	0x1
 28182 14fe 1B07     		.2byte	0x71b
 28183 1500 97000000 		.4byte	0x97
 28184 1504 02       		.uleb128 0x2
 28185 1505 91       		.byte	0x91
 28186 1506 53       		.sleb128 -45
 28187 1507 1E       		.uleb128 0x1e
 28188 1508 9A020000 		.4byte	.LBB18
 28189 150c 1C130000 		.4byte	.LBE18-.LBB18
 28190 1510 22       		.uleb128 0x22
 28191 1511 690C0000 		.4byte	.LASF225
 28192 1515 01       		.byte	0x1
 28193 1516 1D07     		.2byte	0x71d
 28194 1518 97000000 		.4byte	0x97
 28195 151c 02       		.uleb128 0x2
 28196 151d 91       		.byte	0x91
 28197 151e 47       		.sleb128 -57
 28198 151f 25       		.uleb128 0x25
 28199 1520 4D4F5400 		.ascii	"MOT\000"
 28200 1524 01       		.byte	0x1
 28201 1525 1E07     		.2byte	0x71e
 28202 1527 52150000 		.4byte	0x1552
 28203 152b 02       		.uleb128 0x2
 28204 152c 91       		.byte	0x91
 28205 152d 40       		.sleb128 -64
 28206 152e 22       		.uleb128 0x22
 28207 152f 0A120000 		.4byte	.LASF263
 28208 1533 01       		.byte	0x1
 28209 1534 1F07     		.2byte	0x71f
 28210 1536 97000000 		.4byte	0x97
 28211 153a 03       		.uleb128 0x3
 28212 153b 91       		.byte	0x91
 28213 153c BF7F     		.sleb128 -65
 28214 153e 00       		.byte	0
 28215 153f 00       		.byte	0
 28216 1540 00       		.byte	0
 28217 1541 00       		.byte	0
 28218 1542 09       		.uleb128 0x9
 28219 1543 F9000000 		.4byte	0xf9
 28220 1547 52150000 		.4byte	0x1552
 28221 154b 0A       		.uleb128 0xa
 28222 154c 18010000 		.4byte	0x118
 28223 1550 63       		.byte	0x63
 28224 1551 00       		.byte	0
 28225 1552 07       		.uleb128 0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 607


 28226 1553 04       		.byte	0x4
 28227 1554 B1050000 		.4byte	0x5b1
 28228 1558 21       		.uleb128 0x21
 28229 1559 840D0000 		.4byte	.LASF264
 28230 155d 01       		.byte	0x1
 28231 155e B008     		.2byte	0x8b0
 28232 1560 00000000 		.4byte	.LFB73
 28233 1564 B4030000 		.4byte	.LFE73-.LFB73
 28234 1568 01       		.uleb128 0x1
 28235 1569 9C       		.byte	0x9c
 28236 156a D8150000 		.4byte	0x15d8
 28237 156e 24       		.uleb128 0x24
 28238 156f 880C0000 		.4byte	.LASF262
 28239 1573 01       		.byte	0x1
 28240 1574 B008     		.2byte	0x8b0
 28241 1576 1F010000 		.4byte	0x11f
 28242 157a 03       		.uleb128 0x3
 28243 157b 91       		.byte	0x91
 28244 157c EC7E     		.sleb128 -148
 28245 157e 25       		.uleb128 0x25
 28246 157f 73747200 		.ascii	"str\000"
 28247 1583 01       		.byte	0x1
 28248 1584 B208     		.2byte	0x8b2
 28249 1586 42150000 		.4byte	0x1542
 28250 158a 03       		.uleb128 0x3
 28251 158b 91       		.byte	0x91
 28252 158c F07E     		.sleb128 -144
 28253 158e 25       		.uleb128 0x25
 28254 158f 6900     		.ascii	"i\000"
 28255 1591 01       		.byte	0x1
 28256 1592 B308     		.2byte	0x8b3
 28257 1594 73000000 		.4byte	0x73
 28258 1598 02       		.uleb128 0x2
 28259 1599 91       		.byte	0x91
 28260 159a 64       		.sleb128 -28
 28261 159b 22       		.uleb128 0x22
 28262 159c C7030000 		.4byte	.LASF265
 28263 15a0 01       		.byte	0x1
 28264 15a1 B408     		.2byte	0x8b4
 28265 15a3 73000000 		.4byte	0x73
 28266 15a7 02       		.uleb128 0x2
 28267 15a8 91       		.byte	0x91
 28268 15a9 54       		.sleb128 -44
 28269 15aa 22       		.uleb128 0x22
 28270 15ab D2020000 		.4byte	.LASF232
 28271 15af 01       		.byte	0x1
 28272 15b0 B608     		.2byte	0x8b6
 28273 15b2 50110000 		.4byte	0x1150
 28274 15b6 02       		.uleb128 0x2
 28275 15b7 91       		.byte	0x91
 28276 15b8 60       		.sleb128 -32
 28277 15b9 25       		.uleb128 0x25
 28278 15ba 4D4F5400 		.ascii	"MOT\000"
 28279 15be 01       		.byte	0x1
 28280 15bf B708     		.2byte	0x8b7
 28281 15c1 52150000 		.4byte	0x1552
 28282 15c5 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 608


 28283 15c6 91       		.byte	0x91
 28284 15c7 5C       		.sleb128 -36
 28285 15c8 22       		.uleb128 0x22
 28286 15c9 0A120000 		.4byte	.LASF263
 28287 15cd 01       		.byte	0x1
 28288 15ce B808     		.2byte	0x8b8
 28289 15d0 97000000 		.4byte	0x97
 28290 15d4 02       		.uleb128 0x2
 28291 15d5 91       		.byte	0x91
 28292 15d6 5B       		.sleb128 -37
 28293 15d7 00       		.byte	0
 28294 15d8 21       		.uleb128 0x21
 28295 15d9 E50D0000 		.4byte	.LASF266
 28296 15dd 01       		.byte	0x1
 28297 15de F208     		.2byte	0x8f2
 28298 15e0 00000000 		.4byte	.LFB74
 28299 15e4 38120000 		.4byte	.LFE74-.LFB74
 28300 15e8 01       		.uleb128 0x1
 28301 15e9 9C       		.byte	0x9c
 28302 15ea 79160000 		.4byte	0x1679
 28303 15ee 24       		.uleb128 0x24
 28304 15ef 880C0000 		.4byte	.LASF262
 28305 15f3 01       		.byte	0x1
 28306 15f4 F208     		.2byte	0x8f2
 28307 15f6 1F010000 		.4byte	0x11f
 28308 15fa 03       		.uleb128 0x3
 28309 15fb 91       		.byte	0x91
 28310 15fc D47E     		.sleb128 -172
 28311 15fe 25       		.uleb128 0x25
 28312 15ff 73747200 		.ascii	"str\000"
 28313 1603 01       		.byte	0x1
 28314 1604 F408     		.2byte	0x8f4
 28315 1606 42150000 		.4byte	0x1542
 28316 160a 03       		.uleb128 0x3
 28317 160b 91       		.byte	0x91
 28318 160c DC7E     		.sleb128 -164
 28319 160e 25       		.uleb128 0x25
 28320 160f 6900     		.ascii	"i\000"
 28321 1611 01       		.byte	0x1
 28322 1612 F508     		.2byte	0x8f5
 28323 1614 73000000 		.4byte	0x73
 28324 1618 02       		.uleb128 0x2
 28325 1619 91       		.byte	0x91
 28326 161a 54       		.sleb128 -44
 28327 161b 22       		.uleb128 0x22
 28328 161c D2020000 		.4byte	.LASF232
 28329 1620 01       		.byte	0x1
 28330 1621 F908     		.2byte	0x8f9
 28331 1623 50110000 		.4byte	0x1150
 28332 1627 02       		.uleb128 0x2
 28333 1628 91       		.byte	0x91
 28334 1629 4C       		.sleb128 -52
 28335 162a 1E       		.uleb128 0x1e
 28336 162b 08010000 		.4byte	.LBB19
 28337 162f 8E0C0000 		.4byte	.LBE19-.LBB19
 28338 1633 25       		.uleb128 0x25
 28339 1634 6B00     		.ascii	"k\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 609


 28340 1636 01       		.byte	0x1
 28341 1637 0E09     		.2byte	0x90e
 28342 1639 97000000 		.4byte	0x97
 28343 163d 02       		.uleb128 0x2
 28344 163e 91       		.byte	0x91
 28345 163f 53       		.sleb128 -45
 28346 1640 1E       		.uleb128 0x1e
 28347 1641 12010000 		.4byte	.LBB20
 28348 1645 680C0000 		.4byte	.LBE20-.LBB20
 28349 1649 22       		.uleb128 0x22
 28350 164a 690C0000 		.4byte	.LASF225
 28351 164e 01       		.byte	0x1
 28352 164f 1009     		.2byte	0x910
 28353 1651 97000000 		.4byte	0x97
 28354 1655 02       		.uleb128 0x2
 28355 1656 91       		.byte	0x91
 28356 1657 4B       		.sleb128 -53
 28357 1658 25       		.uleb128 0x25
 28358 1659 4D4F5400 		.ascii	"MOT\000"
 28359 165d 01       		.byte	0x1
 28360 165e 1109     		.2byte	0x911
 28361 1660 52150000 		.4byte	0x1552
 28362 1664 02       		.uleb128 0x2
 28363 1665 91       		.byte	0x91
 28364 1666 44       		.sleb128 -60
 28365 1667 22       		.uleb128 0x22
 28366 1668 0A120000 		.4byte	.LASF263
 28367 166c 01       		.byte	0x1
 28368 166d 1209     		.2byte	0x912
 28369 166f 97000000 		.4byte	0x97
 28370 1673 02       		.uleb128 0x2
 28371 1674 91       		.byte	0x91
 28372 1675 43       		.sleb128 -61
 28373 1676 00       		.byte	0
 28374 1677 00       		.byte	0
 28375 1678 00       		.byte	0
 28376 1679 21       		.uleb128 0x21
 28377 167a 470A0000 		.4byte	.LASF267
 28378 167e 01       		.byte	0x1
 28379 167f F609     		.2byte	0x9f6
 28380 1681 00000000 		.4byte	.LFB75
 28381 1685 C8000000 		.4byte	.LFE75-.LFB75
 28382 1689 01       		.uleb128 0x1
 28383 168a 9C       		.byte	0x9c
 28384 168b BD160000 		.4byte	0x16bd
 28385 168f 24       		.uleb128 0x24
 28386 1690 880C0000 		.4byte	.LASF262
 28387 1694 01       		.byte	0x1
 28388 1695 F609     		.2byte	0x9f6
 28389 1697 1F010000 		.4byte	0x11f
 28390 169b 03       		.uleb128 0x3
 28391 169c 91       		.byte	0x91
 28392 169d 847F     		.sleb128 -124
 28393 169f 25       		.uleb128 0x25
 28394 16a0 73747200 		.ascii	"str\000"
 28395 16a4 01       		.byte	0x1
 28396 16a5 F809     		.2byte	0x9f8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 610


 28397 16a7 42150000 		.4byte	0x1542
 28398 16ab 03       		.uleb128 0x3
 28399 16ac 91       		.byte	0x91
 28400 16ad 887F     		.sleb128 -120
 28401 16af 25       		.uleb128 0x25
 28402 16b0 6900     		.ascii	"i\000"
 28403 16b2 01       		.byte	0x1
 28404 16b3 F909     		.2byte	0x9f9
 28405 16b5 73000000 		.4byte	0x73
 28406 16b9 02       		.uleb128 0x2
 28407 16ba 91       		.byte	0x91
 28408 16bb 6C       		.sleb128 -20
 28409 16bc 00       		.byte	0
 28410 16bd 21       		.uleb128 0x21
 28411 16be 940C0000 		.4byte	.LASF268
 28412 16c2 01       		.byte	0x1
 28413 16c3 0D0A     		.2byte	0xa0d
 28414 16c5 00000000 		.4byte	.LFB76
 28415 16c9 30010000 		.4byte	.LFE76-.LFB76
 28416 16cd 01       		.uleb128 0x1
 28417 16ce 9C       		.byte	0x9c
 28418 16cf 01170000 		.4byte	0x1701
 28419 16d3 24       		.uleb128 0x24
 28420 16d4 880C0000 		.4byte	.LASF262
 28421 16d8 01       		.byte	0x1
 28422 16d9 0D0A     		.2byte	0xa0d
 28423 16db 1F010000 		.4byte	0x11f
 28424 16df 03       		.uleb128 0x3
 28425 16e0 91       		.byte	0x91
 28426 16e1 847F     		.sleb128 -124
 28427 16e3 25       		.uleb128 0x25
 28428 16e4 73747200 		.ascii	"str\000"
 28429 16e8 01       		.byte	0x1
 28430 16e9 0F0A     		.2byte	0xa0f
 28431 16eb 42150000 		.4byte	0x1542
 28432 16ef 03       		.uleb128 0x3
 28433 16f0 91       		.byte	0x91
 28434 16f1 887F     		.sleb128 -120
 28435 16f3 25       		.uleb128 0x25
 28436 16f4 6900     		.ascii	"i\000"
 28437 16f6 01       		.byte	0x1
 28438 16f7 100A     		.2byte	0xa10
 28439 16f9 73000000 		.4byte	0x73
 28440 16fd 02       		.uleb128 0x2
 28441 16fe 91       		.byte	0x91
 28442 16ff 6C       		.sleb128 -20
 28443 1700 00       		.byte	0
 28444 1701 21       		.uleb128 0x21
 28445 1702 13130000 		.4byte	.LASF269
 28446 1706 01       		.byte	0x1
 28447 1707 340A     		.2byte	0xa34
 28448 1709 00000000 		.4byte	.LFB77
 28449 170d 74030000 		.4byte	.LFE77-.LFB77
 28450 1711 01       		.uleb128 0x1
 28451 1712 9C       		.byte	0x9c
 28452 1713 45170000 		.4byte	0x1745
 28453 1717 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 611


 28454 1718 880C0000 		.4byte	.LASF262
 28455 171c 01       		.byte	0x1
 28456 171d 340A     		.2byte	0xa34
 28457 171f 1F010000 		.4byte	0x11f
 28458 1723 03       		.uleb128 0x3
 28459 1724 91       		.byte	0x91
 28460 1725 AC7D     		.sleb128 -340
 28461 1727 25       		.uleb128 0x25
 28462 1728 73747200 		.ascii	"str\000"
 28463 172c 01       		.byte	0x1
 28464 172d 360A     		.2byte	0xa36
 28465 172f 45170000 		.4byte	0x1745
 28466 1733 03       		.uleb128 0x3
 28467 1734 91       		.byte	0x91
 28468 1735 B07D     		.sleb128 -336
 28469 1737 25       		.uleb128 0x25
 28470 1738 6900     		.ascii	"i\000"
 28471 173a 01       		.byte	0x1
 28472 173b 370A     		.2byte	0xa37
 28473 173d 73000000 		.4byte	0x73
 28474 1741 02       		.uleb128 0x2
 28475 1742 91       		.byte	0x91
 28476 1743 5C       		.sleb128 -36
 28477 1744 00       		.byte	0
 28478 1745 09       		.uleb128 0x9
 28479 1746 F9000000 		.4byte	0xf9
 28480 174a 56170000 		.4byte	0x1756
 28481 174e 23       		.uleb128 0x23
 28482 174f 18010000 		.4byte	0x118
 28483 1753 2B01     		.2byte	0x12b
 28484 1755 00       		.byte	0
 28485 1756 21       		.uleb128 0x21
 28486 1757 AF0D0000 		.4byte	.LASF270
 28487 175b 01       		.byte	0x1
 28488 175c 5F0A     		.2byte	0xa5f
 28489 175e 00000000 		.4byte	.LFB78
 28490 1762 84000000 		.4byte	.LFE78-.LFB78
 28491 1766 01       		.uleb128 0x1
 28492 1767 9C       		.byte	0x9c
 28493 1768 A9170000 		.4byte	0x17a9
 28494 176c 24       		.uleb128 0x24
 28495 176d 76050000 		.4byte	.LASF215
 28496 1771 01       		.byte	0x1
 28497 1772 5F0A     		.2byte	0xa5f
 28498 1774 550F0000 		.4byte	0xf55
 28499 1778 02       		.uleb128 0x2
 28500 1779 91       		.byte	0x91
 28501 177a 6C       		.sleb128 -20
 28502 177b 24       		.uleb128 0x24
 28503 177c C5000000 		.4byte	.LASF216
 28504 1780 01       		.byte	0x1
 28505 1781 5F0A     		.2byte	0xa5f
 28506 1783 A3000000 		.4byte	0xa3
 28507 1787 02       		.uleb128 0x2
 28508 1788 91       		.byte	0x91
 28509 1789 6A       		.sleb128 -22
 28510 178a 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 612


 28511 178b 170E0000 		.4byte	.LASF271
 28512 178f 01       		.byte	0x1
 28513 1790 5F0A     		.2byte	0xa5f
 28514 1792 97000000 		.4byte	0x97
 28515 1796 02       		.uleb128 0x2
 28516 1797 91       		.byte	0x91
 28517 1798 69       		.sleb128 -23
 28518 1799 22       		.uleb128 0x22
 28519 179a 62060000 		.4byte	.LASF230
 28520 179e 01       		.byte	0x1
 28521 179f 610A     		.2byte	0xa61
 28522 17a1 A3000000 		.4byte	0xa3
 28523 17a5 02       		.uleb128 0x2
 28524 17a6 91       		.byte	0x91
 28525 17a7 76       		.sleb128 -10
 28526 17a8 00       		.byte	0
 28527 17a9 21       		.uleb128 0x21
 28528 17aa 91050000 		.4byte	.LASF272
 28529 17ae 01       		.byte	0x1
 28530 17af 7B0A     		.2byte	0xa7b
 28531 17b1 00000000 		.4byte	.LFB79
 28532 17b5 88000000 		.4byte	.LFE79-.LFB79
 28533 17b9 01       		.uleb128 0x1
 28534 17ba 9C       		.byte	0x9c
 28535 17bb ED170000 		.4byte	0x17ed
 28536 17bf 24       		.uleb128 0x24
 28537 17c0 76050000 		.4byte	.LASF215
 28538 17c4 01       		.byte	0x1
 28539 17c5 7B0A     		.2byte	0xa7b
 28540 17c7 550F0000 		.4byte	0xf55
 28541 17cb 02       		.uleb128 0x2
 28542 17cc 91       		.byte	0x91
 28543 17cd 6C       		.sleb128 -20
 28544 17ce 24       		.uleb128 0x24
 28545 17cf C5000000 		.4byte	.LASF216
 28546 17d3 01       		.byte	0x1
 28547 17d4 7B0A     		.2byte	0xa7b
 28548 17d6 A3000000 		.4byte	0xa3
 28549 17da 02       		.uleb128 0x2
 28550 17db 91       		.byte	0x91
 28551 17dc 6A       		.sleb128 -22
 28552 17dd 22       		.uleb128 0x22
 28553 17de 62060000 		.4byte	.LASF230
 28554 17e2 01       		.byte	0x1
 28555 17e3 7D0A     		.2byte	0xa7d
 28556 17e5 A3000000 		.4byte	0xa3
 28557 17e9 02       		.uleb128 0x2
 28558 17ea 91       		.byte	0x91
 28559 17eb 76       		.sleb128 -10
 28560 17ec 00       		.byte	0
 28561 17ed 21       		.uleb128 0x21
 28562 17ee B20A0000 		.4byte	.LASF273
 28563 17f2 01       		.byte	0x1
 28564 17f3 970A     		.2byte	0xa97
 28565 17f5 00000000 		.4byte	.LFB80
 28566 17f9 A0000000 		.4byte	.LFE80-.LFB80
 28567 17fd 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 613


 28568 17fe 9C       		.byte	0x9c
 28569 17ff 40180000 		.4byte	0x1840
 28570 1803 24       		.uleb128 0x24
 28571 1804 76050000 		.4byte	.LASF215
 28572 1808 01       		.byte	0x1
 28573 1809 970A     		.2byte	0xa97
 28574 180b 550F0000 		.4byte	0xf55
 28575 180f 02       		.uleb128 0x2
 28576 1810 91       		.byte	0x91
 28577 1811 74       		.sleb128 -12
 28578 1812 24       		.uleb128 0x24
 28579 1813 C5000000 		.4byte	.LASF216
 28580 1817 01       		.byte	0x1
 28581 1818 970A     		.2byte	0xa97
 28582 181a A3000000 		.4byte	0xa3
 28583 181e 02       		.uleb128 0x2
 28584 181f 91       		.byte	0x91
 28585 1820 72       		.sleb128 -14
 28586 1821 27       		.uleb128 0x27
 28587 1822 696400   		.ascii	"id\000"
 28588 1825 01       		.byte	0x1
 28589 1826 970A     		.2byte	0xa97
 28590 1828 97000000 		.4byte	0x97
 28591 182c 02       		.uleb128 0x2
 28592 182d 91       		.byte	0x91
 28593 182e 71       		.sleb128 -15
 28594 182f 25       		.uleb128 0x25
 28595 1830 6900     		.ascii	"i\000"
 28596 1832 01       		.byte	0x1
 28597 1833 990A     		.2byte	0xa99
 28598 1835 A3000000 		.4byte	0xa3
 28599 1839 05       		.uleb128 0x5
 28600 183a 03       		.byte	0x3
 28601 183b 00000000 		.4byte	i.11156
 28602 183f 00       		.byte	0
 28603 1840 28       		.uleb128 0x28
 28604 1841 C5110000 		.4byte	.LASF279
 28605 1845 01       		.byte	0x1
 28606 1846 B50A     		.2byte	0xab5
 28607 1848 97000000 		.4byte	0x97
 28608 184c 00000000 		.4byte	.LFB81
 28609 1850 3E000000 		.4byte	.LFE81-.LFB81
 28610 1854 01       		.uleb128 0x1
 28611 1855 9C       		.byte	0x9c
 28612 1856 95180000 		.4byte	0x1895
 28613 185a 24       		.uleb128 0x24
 28614 185b 0D0A0000 		.4byte	.LASF274
 28615 185f 01       		.byte	0x1
 28616 1860 B50A     		.2byte	0xab5
 28617 1862 550F0000 		.4byte	0xf55
 28618 1866 02       		.uleb128 0x2
 28619 1867 91       		.byte	0x91
 28620 1868 6C       		.sleb128 -20
 28621 1869 24       		.uleb128 0x24
 28622 186a 4B050000 		.4byte	.LASF275
 28623 186e 01       		.byte	0x1
 28624 186f B50A     		.2byte	0xab5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 614


 28625 1871 97000000 		.4byte	0x97
 28626 1875 02       		.uleb128 0x2
 28627 1876 91       		.byte	0x91
 28628 1877 6B       		.sleb128 -21
 28629 1878 25       		.uleb128 0x25
 28630 1879 6900     		.ascii	"i\000"
 28631 187b 01       		.byte	0x1
 28632 187c B70A     		.2byte	0xab7
 28633 187e 97000000 		.4byte	0x97
 28634 1882 02       		.uleb128 0x2
 28635 1883 91       		.byte	0x91
 28636 1884 77       		.sleb128 -9
 28637 1885 22       		.uleb128 0x22
 28638 1886 E80B0000 		.4byte	.LASF276
 28639 188a 01       		.byte	0x1
 28640 188b B80A     		.2byte	0xab8
 28641 188d 97000000 		.4byte	0x97
 28642 1891 02       		.uleb128 0x2
 28643 1892 91       		.byte	0x91
 28644 1893 76       		.sleb128 -10
 28645 1894 00       		.byte	0
 28646 1895 21       		.uleb128 0x21
 28647 1896 340A0000 		.4byte	.LASF277
 28648 189a 01       		.byte	0x1
 28649 189b C50A     		.2byte	0xac5
 28650 189d 00000000 		.4byte	.LFB82
 28651 18a1 2E000000 		.4byte	.LFE82-.LFB82
 28652 18a5 01       		.uleb128 0x1
 28653 18a6 9C       		.byte	0x9c
 28654 18a7 D9180000 		.4byte	0x18d9
 28655 18ab 24       		.uleb128 0x24
 28656 18ac 9A040000 		.4byte	.LASF278
 28657 18b0 01       		.byte	0x1
 28658 18b1 C50A     		.2byte	0xac5
 28659 18b3 97000000 		.4byte	0x97
 28660 18b7 02       		.uleb128 0x2
 28661 18b8 91       		.byte	0x91
 28662 18b9 6F       		.sleb128 -17
 28663 18ba 22       		.uleb128 0x22
 28664 18bb C5000000 		.4byte	.LASF216
 28665 18bf 01       		.byte	0x1
 28666 18c0 C60A     		.2byte	0xac6
 28667 18c2 73000000 		.4byte	0x73
 28668 18c6 02       		.uleb128 0x2
 28669 18c7 91       		.byte	0x91
 28670 18c8 74       		.sleb128 -12
 28671 18c9 22       		.uleb128 0x22
 28672 18ca 76050000 		.4byte	.LASF215
 28673 18ce 01       		.byte	0x1
 28674 18cf C70A     		.2byte	0xac7
 28675 18d1 D9180000 		.4byte	0x18d9
 28676 18d5 02       		.uleb128 0x2
 28677 18d6 91       		.byte	0x91
 28678 18d7 70       		.sleb128 -16
 28679 18d8 00       		.byte	0
 28680 18d9 09       		.uleb128 0x9
 28681 18da 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 615


 28682 18de E9180000 		.4byte	0x18e9
 28683 18e2 0A       		.uleb128 0xa
 28684 18e3 18010000 		.4byte	0x118
 28685 18e7 01       		.byte	0x1
 28686 18e8 00       		.byte	0
 28687 18e9 29       		.uleb128 0x29
 28688 18ea 7B030000 		.4byte	.LASF280
 28689 18ee 01       		.byte	0x1
 28690 18ef D40A     		.2byte	0xad4
 28691 18f1 97000000 		.4byte	0x97
 28692 18f5 00000000 		.4byte	.LFB83
 28693 18f9 98000000 		.4byte	.LFE83-.LFB83
 28694 18fd 01       		.uleb128 0x1
 28695 18fe 9C       		.byte	0x9c
 28696 18ff 4D190000 		.4byte	0x194d
 28697 1903 24       		.uleb128 0x24
 28698 1904 3E050000 		.4byte	.LASF281
 28699 1908 01       		.byte	0x1
 28700 1909 D40A     		.2byte	0xad4
 28701 190b 73000000 		.4byte	0x73
 28702 190f 02       		.uleb128 0x2
 28703 1910 91       		.byte	0x91
 28704 1911 64       		.sleb128 -28
 28705 1912 25       		.uleb128 0x25
 28706 1913 6900     		.ascii	"i\000"
 28707 1915 01       		.byte	0x1
 28708 1916 D60A     		.2byte	0xad6
 28709 1918 73000000 		.4byte	0x73
 28710 191c 02       		.uleb128 0x2
 28711 191d 91       		.byte	0x91
 28712 191e 74       		.sleb128 -12
 28713 191f 22       		.uleb128 0x22
 28714 1920 75000000 		.4byte	.LASF282
 28715 1924 01       		.byte	0x1
 28716 1925 D70A     		.2byte	0xad7
 28717 1927 97000000 		.4byte	0x97
 28718 192b 02       		.uleb128 0x2
 28719 192c 91       		.byte	0x91
 28720 192d 6B       		.sleb128 -21
 28721 192e 22       		.uleb128 0x22
 28722 192f AD050000 		.4byte	.LASF283
 28723 1933 01       		.byte	0x1
 28724 1934 D80A     		.2byte	0xad8
 28725 1936 73000000 		.4byte	0x73
 28726 193a 02       		.uleb128 0x2
 28727 193b 91       		.byte	0x91
 28728 193c 6C       		.sleb128 -20
 28729 193d 22       		.uleb128 0x22
 28730 193e D2040000 		.4byte	.LASF284
 28731 1942 01       		.byte	0x1
 28732 1943 D90A     		.2byte	0xad9
 28733 1945 97000000 		.4byte	0x97
 28734 1949 02       		.uleb128 0x2
 28735 194a 91       		.byte	0x91
 28736 194b 73       		.sleb128 -13
 28737 194c 00       		.byte	0
 28738 194d 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 616


 28739 194e 230D0000 		.4byte	.LASF285
 28740 1952 01       		.byte	0x1
 28741 1953 FE0A     		.2byte	0xafe
 28742 1955 00000000 		.4byte	.LFB84
 28743 1959 80000000 		.4byte	.LFE84-.LFB84
 28744 195d 01       		.uleb128 0x1
 28745 195e 9C       		.byte	0x9c
 28746 195f 71190000 		.4byte	0x1971
 28747 1963 25       		.uleb128 0x25
 28748 1964 6900     		.ascii	"i\000"
 28749 1966 01       		.byte	0x1
 28750 1967 000B     		.2byte	0xb00
 28751 1969 A3000000 		.4byte	0xa3
 28752 196d 02       		.uleb128 0x2
 28753 196e 91       		.byte	0x91
 28754 196f 76       		.sleb128 -10
 28755 1970 00       		.byte	0
 28756 1971 29       		.uleb128 0x29
 28757 1972 730C0000 		.4byte	.LASF286
 28758 1976 01       		.byte	0x1
 28759 1977 170B     		.2byte	0xb17
 28760 1979 97000000 		.4byte	0x97
 28761 197d 00000000 		.4byte	.LFB85
 28762 1981 5C000000 		.4byte	.LFE85-.LFB85
 28763 1985 01       		.uleb128 0x1
 28764 1986 9C       		.byte	0x9c
 28765 1987 99190000 		.4byte	0x1999
 28766 198b 25       		.uleb128 0x25
 28767 198c 6900     		.ascii	"i\000"
 28768 198e 01       		.byte	0x1
 28769 198f 180B     		.2byte	0xb18
 28770 1991 A3000000 		.4byte	0xa3
 28771 1995 02       		.uleb128 0x2
 28772 1996 91       		.byte	0x91
 28773 1997 76       		.sleb128 -10
 28774 1998 00       		.byte	0
 28775 1999 29       		.uleb128 0x29
 28776 199a B3050000 		.4byte	.LASF287
 28777 199e 01       		.byte	0x1
 28778 199f 2A0B     		.2byte	0xb2a
 28779 19a1 97000000 		.4byte	0x97
 28780 19a5 00000000 		.4byte	.LFB86
 28781 19a9 CC050000 		.4byte	.LFE86-.LFB86
 28782 19ad 01       		.uleb128 0x1
 28783 19ae 9C       		.byte	0x9c
 28784 19af CE190000 		.4byte	0x19ce
 28785 19b3 25       		.uleb128 0x25
 28786 19b4 6900     		.ascii	"i\000"
 28787 19b6 01       		.byte	0x1
 28788 19b7 2C0B     		.2byte	0xb2c
 28789 19b9 97000000 		.4byte	0x97
 28790 19bd 02       		.uleb128 0x2
 28791 19be 91       		.byte	0x91
 28792 19bf 77       		.sleb128 -9
 28793 19c0 25       		.uleb128 0x25
 28794 19c1 6A00     		.ascii	"j\000"
 28795 19c3 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 617


 28796 19c4 2C0B     		.2byte	0xb2c
 28797 19c6 97000000 		.4byte	0x97
 28798 19ca 02       		.uleb128 0x2
 28799 19cb 91       		.byte	0x91
 28800 19cc 76       		.sleb128 -10
 28801 19cd 00       		.byte	0
 28802 19ce 2A       		.uleb128 0x2a
 28803 19cf F3070000 		.4byte	.LASF288
 28804 19d3 01       		.byte	0x1
 28805 19d4 B90B     		.2byte	0xbb9
 28806 19d6 00000000 		.4byte	.LFB87
 28807 19da 30020000 		.4byte	.LFE87-.LFB87
 28808 19de 01       		.uleb128 0x1
 28809 19df 9C       		.byte	0x9c
 28810 19e0 0B1A0000 		.4byte	0x1a0b
 28811 19e4 22       		.uleb128 0x22
 28812 19e5 690C0000 		.4byte	.LASF225
 28813 19e9 01       		.byte	0x1
 28814 19ea BB0B     		.2byte	0xbbb
 28815 19ec 97000000 		.4byte	0x97
 28816 19f0 02       		.uleb128 0x2
 28817 19f1 91       		.byte	0x91
 28818 19f2 73       		.sleb128 -13
 28819 19f3 1E       		.uleb128 0x1e
 28820 19f4 FA000000 		.4byte	.LBB21
 28821 19f8 6A000000 		.4byte	.LBE21-.LBB21
 28822 19fc 25       		.uleb128 0x25
 28823 19fd 6900     		.ascii	"i\000"
 28824 19ff 01       		.byte	0x1
 28825 1a00 CC0B     		.2byte	0xbcc
 28826 1a02 73000000 		.4byte	0x73
 28827 1a06 02       		.uleb128 0x2
 28828 1a07 91       		.byte	0x91
 28829 1a08 74       		.sleb128 -12
 28830 1a09 00       		.byte	0
 28831 1a0a 00       		.byte	0
 28832 1a0b 2B       		.uleb128 0x2b
 28833 1a0c 250A0000 		.4byte	.LASF289
 28834 1a10 01       		.byte	0x1
 28835 1a11 EA0B     		.2byte	0xbea
 28836 1a13 00000000 		.4byte	.LFB88
 28837 1a17 28000000 		.4byte	.LFE88-.LFB88
 28838 1a1b 01       		.uleb128 0x1
 28839 1a1c 9C       		.byte	0x9c
 28840 1a1d 2B       		.uleb128 0x2b
 28841 1a1e 620F0000 		.4byte	.LASF290
 28842 1a22 01       		.byte	0x1
 28843 1a23 F60B     		.2byte	0xbf6
 28844 1a25 00000000 		.4byte	.LFB89
 28845 1a29 78000000 		.4byte	.LFE89-.LFB89
 28846 1a2d 01       		.uleb128 0x1
 28847 1a2e 9C       		.byte	0x9c
 28848 1a2f 26       		.uleb128 0x26
 28849 1a30 E1050000 		.4byte	.LASF292
 28850 1a34 01       		.byte	0x1
 28851 1a35 100C     		.2byte	0xc10
 28852 1a37 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 618


 28853 1a3b B4000000 		.4byte	.LFE90-.LFB90
 28854 1a3f 01       		.uleb128 0x1
 28855 1a40 9C       		.byte	0x9c
 28856 1a41 731A0000 		.4byte	0x1a73
 28857 1a45 22       		.uleb128 0x22
 28858 1a46 62060000 		.4byte	.LASF230
 28859 1a4a 01       		.byte	0x1
 28860 1a4b 120C     		.2byte	0xc12
 28861 1a4d 97000000 		.4byte	0x97
 28862 1a51 02       		.uleb128 0x2
 28863 1a52 91       		.byte	0x91
 28864 1a53 6F       		.sleb128 -17
 28865 1a54 22       		.uleb128 0x22
 28866 1a55 13100000 		.4byte	.LASF221
 28867 1a59 01       		.byte	0x1
 28868 1a5a 130C     		.2byte	0xc13
 28869 1a5c C7000000 		.4byte	0xc7
 28870 1a60 02       		.uleb128 0x2
 28871 1a61 91       		.byte	0x91
 28872 1a62 6C       		.sleb128 -20
 28873 1a63 22       		.uleb128 0x22
 28874 1a64 76050000 		.4byte	.LASF215
 28875 1a68 01       		.byte	0x1
 28876 1a69 160C     		.2byte	0xc16
 28877 1a6b EE070000 		.4byte	0x7ee
 28878 1a6f 02       		.uleb128 0x2
 28879 1a70 91       		.byte	0x91
 28880 1a71 64       		.sleb128 -28
 28881 1a72 00       		.byte	0
 28882 1a73 26       		.uleb128 0x26
 28883 1a74 100D0000 		.4byte	.LASF293
 28884 1a78 01       		.byte	0x1
 28885 1a79 290C     		.2byte	0xc29
 28886 1a7b 00000000 		.4byte	.LFB91
 28887 1a7f B8000000 		.4byte	.LFE91-.LFB91
 28888 1a83 01       		.uleb128 0x1
 28889 1a84 9C       		.byte	0x9c
 28890 1a85 B71A0000 		.4byte	0x1ab7
 28891 1a89 22       		.uleb128 0x22
 28892 1a8a 62060000 		.4byte	.LASF230
 28893 1a8e 01       		.byte	0x1
 28894 1a8f 2B0C     		.2byte	0xc2b
 28895 1a91 97000000 		.4byte	0x97
 28896 1a95 02       		.uleb128 0x2
 28897 1a96 91       		.byte	0x91
 28898 1a97 6F       		.sleb128 -17
 28899 1a98 22       		.uleb128 0x22
 28900 1a99 13100000 		.4byte	.LASF221
 28901 1a9d 01       		.byte	0x1
 28902 1a9e 2C0C     		.2byte	0xc2c
 28903 1aa0 C7000000 		.4byte	0xc7
 28904 1aa4 02       		.uleb128 0x2
 28905 1aa5 91       		.byte	0x91
 28906 1aa6 6C       		.sleb128 -20
 28907 1aa7 22       		.uleb128 0x22
 28908 1aa8 76050000 		.4byte	.LASF215
 28909 1aac 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 619


 28910 1aad 300C     		.2byte	0xc30
 28911 1aaf EE070000 		.4byte	0x7ee
 28912 1ab3 02       		.uleb128 0x2
 28913 1ab4 91       		.byte	0x91
 28914 1ab5 64       		.sleb128 -28
 28915 1ab6 00       		.byte	0
 28916 1ab7 26       		.uleb128 0x26
 28917 1ab8 51070000 		.4byte	.LASF294
 28918 1abc 01       		.byte	0x1
 28919 1abd 420C     		.2byte	0xc42
 28920 1abf 00000000 		.4byte	.LFB92
 28921 1ac3 B8000000 		.4byte	.LFE92-.LFB92
 28922 1ac7 01       		.uleb128 0x1
 28923 1ac8 9C       		.byte	0x9c
 28924 1ac9 FB1A0000 		.4byte	0x1afb
 28925 1acd 22       		.uleb128 0x22
 28926 1ace 62060000 		.4byte	.LASF230
 28927 1ad2 01       		.byte	0x1
 28928 1ad3 440C     		.2byte	0xc44
 28929 1ad5 97000000 		.4byte	0x97
 28930 1ad9 02       		.uleb128 0x2
 28931 1ada 91       		.byte	0x91
 28932 1adb 6F       		.sleb128 -17
 28933 1adc 22       		.uleb128 0x22
 28934 1add 13100000 		.4byte	.LASF221
 28935 1ae1 01       		.byte	0x1
 28936 1ae2 450C     		.2byte	0xc45
 28937 1ae4 C7000000 		.4byte	0xc7
 28938 1ae8 02       		.uleb128 0x2
 28939 1ae9 91       		.byte	0x91
 28940 1aea 6C       		.sleb128 -20
 28941 1aeb 22       		.uleb128 0x22
 28942 1aec 76050000 		.4byte	.LASF215
 28943 1af0 01       		.byte	0x1
 28944 1af1 490C     		.2byte	0xc49
 28945 1af3 EE070000 		.4byte	0x7ee
 28946 1af7 02       		.uleb128 0x2
 28947 1af8 91       		.byte	0x91
 28948 1af9 64       		.sleb128 -28
 28949 1afa 00       		.byte	0
 28950 1afb 2C       		.uleb128 0x2c
 28951 1afc 7C0A0000 		.4byte	.LASF295
 28952 1b00 01       		.byte	0x1
 28953 1b01 5B0C     		.2byte	0xc5b
 28954 1b03 00000000 		.4byte	.LFB93
 28955 1b07 44020000 		.4byte	.LFE93-.LFB93
 28956 1b0b 01       		.uleb128 0x1
 28957 1b0c 9C       		.byte	0x9c
 28958 1b0d 651B0000 		.4byte	0x1b65
 28959 1b11 22       		.uleb128 0x22
 28960 1b12 13100000 		.4byte	.LASF221
 28961 1b16 01       		.byte	0x1
 28962 1b17 5E0C     		.2byte	0xc5e
 28963 1b19 651B0000 		.4byte	0x1b65
 28964 1b1d 02       		.uleb128 0x2
 28965 1b1e 91       		.byte	0x91
 28966 1b1f 70       		.sleb128 -16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 620


 28967 1b20 22       		.uleb128 0x22
 28968 1b21 24060000 		.4byte	.LASF296
 28969 1b25 01       		.byte	0x1
 28970 1b26 5F0C     		.2byte	0xc5f
 28971 1b28 651B0000 		.4byte	0x1b65
 28972 1b2c 05       		.uleb128 0x5
 28973 1b2d 03       		.byte	0x3
 28974 1b2e 04000000 		.4byte	last_aux_int16.11280
 28975 1b32 2D       		.uleb128 0x2d
 28976 1b33 2E000000 		.4byte	.LBB22
 28977 1b37 50000000 		.4byte	.LBE22-.LBB22
 28978 1b3b 4D1B0000 		.4byte	0x1b4d
 28979 1b3f 25       		.uleb128 0x25
 28980 1b40 6900     		.ascii	"i\000"
 28981 1b42 01       		.byte	0x1
 28982 1b43 660C     		.2byte	0xc66
 28983 1b45 97000000 		.4byte	0x97
 28984 1b49 02       		.uleb128 0x2
 28985 1b4a 91       		.byte	0x91
 28986 1b4b 77       		.sleb128 -9
 28987 1b4c 00       		.byte	0
 28988 1b4d 1E       		.uleb128 0x1e
 28989 1b4e 88000000 		.4byte	.LBB23
 28990 1b52 98010000 		.4byte	.LBE23-.LBB23
 28991 1b56 25       		.uleb128 0x25
 28992 1b57 6900     		.ascii	"i\000"
 28993 1b59 01       		.byte	0x1
 28994 1b5a 700C     		.2byte	0xc70
 28995 1b5c 97000000 		.4byte	0x97
 28996 1b60 02       		.uleb128 0x2
 28997 1b61 91       		.byte	0x91
 28998 1b62 76       		.sleb128 -10
 28999 1b63 00       		.byte	0
 29000 1b64 00       		.byte	0
 29001 1b65 09       		.uleb128 0x9
 29002 1b66 C7000000 		.4byte	0xc7
 29003 1b6a 751B0000 		.4byte	0x1b75
 29004 1b6e 0A       		.uleb128 0xa
 29005 1b6f 18010000 		.4byte	0x118
 29006 1b73 01       		.byte	0x1
 29007 1b74 00       		.byte	0
 29008 1b75 26       		.uleb128 0x26
 29009 1b76 82120000 		.4byte	.LASF297
 29010 1b7a 01       		.byte	0x1
 29011 1b7b 8B0C     		.2byte	0xc8b
 29012 1b7d 00000000 		.4byte	.LFB94
 29013 1b81 BC000000 		.4byte	.LFE94-.LFB94
 29014 1b85 01       		.uleb128 0x1
 29015 1b86 9C       		.byte	0x9c
 29016 1b87 9B1B0000 		.4byte	0x1b9b
 29017 1b8b 25       		.uleb128 0x25
 29018 1b8c 61757800 		.ascii	"aux\000"
 29019 1b90 01       		.byte	0x1
 29020 1b91 8E0C     		.2byte	0xc8e
 29021 1b93 97000000 		.4byte	0x97
 29022 1b97 02       		.uleb128 0x2
 29023 1b98 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 621


 29024 1b99 77       		.sleb128 -9
 29025 1b9a 00       		.byte	0
 29026 1b9b 26       		.uleb128 0x26
 29027 1b9c DA0A0000 		.4byte	.LASF298
 29028 1ba0 01       		.byte	0x1
 29029 1ba1 B00C     		.2byte	0xcb0
 29030 1ba3 00000000 		.4byte	.LFB95
 29031 1ba7 5C000000 		.4byte	.LFE95-.LFB95
 29032 1bab 01       		.uleb128 0x1
 29033 1bac 9C       		.byte	0x9c
 29034 1bad C11B0000 		.4byte	0x1bc1
 29035 1bb1 22       		.uleb128 0x22
 29036 1bb2 76050000 		.4byte	.LASF215
 29037 1bb6 01       		.byte	0x1
 29038 1bb7 B20C     		.2byte	0xcb2
 29039 1bb9 A1050000 		.4byte	0x5a1
 29040 1bbd 02       		.uleb128 0x2
 29041 1bbe 91       		.byte	0x91
 29042 1bbf 74       		.sleb128 -12
 29043 1bc0 00       		.byte	0
 29044 1bc1 26       		.uleb128 0x26
 29045 1bc2 500E0000 		.4byte	.LASF299
 29046 1bc6 01       		.byte	0x1
 29047 1bc7 C70C     		.2byte	0xcc7
 29048 1bc9 00000000 		.4byte	.LFB96
 29049 1bcd 38010000 		.4byte	.LFE96-.LFB96
 29050 1bd1 01       		.uleb128 0x1
 29051 1bd2 9C       		.byte	0x9c
 29052 1bd3 051C0000 		.4byte	0x1c05
 29053 1bd7 22       		.uleb128 0x22
 29054 1bd8 62060000 		.4byte	.LASF230
 29055 1bdc 01       		.byte	0x1
 29056 1bdd C90C     		.2byte	0xcc9
 29057 1bdf 97000000 		.4byte	0x97
 29058 1be3 02       		.uleb128 0x2
 29059 1be4 91       		.byte	0x91
 29060 1be5 6F       		.sleb128 -17
 29061 1be6 22       		.uleb128 0x22
 29062 1be7 13100000 		.4byte	.LASF221
 29063 1beb 01       		.byte	0x1
 29064 1bec CA0C     		.2byte	0xcca
 29065 1bee C7000000 		.4byte	0xc7
 29066 1bf2 02       		.uleb128 0x2
 29067 1bf3 91       		.byte	0x91
 29068 1bf4 6C       		.sleb128 -20
 29069 1bf5 22       		.uleb128 0x22
 29070 1bf6 76050000 		.4byte	.LASF215
 29071 1bfa 01       		.byte	0x1
 29072 1bfb CE0C     		.2byte	0xcce
 29073 1bfd 31090000 		.4byte	0x931
 29074 1c01 02       		.uleb128 0x2
 29075 1c02 91       		.byte	0x91
 29076 1c03 60       		.sleb128 -32
 29077 1c04 00       		.byte	0
 29078 1c05 26       		.uleb128 0x26
 29079 1c06 4D090000 		.4byte	.LASF300
 29080 1c0a 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 622


 29081 1c0b EE0C     		.2byte	0xcee
 29082 1c0d 00000000 		.4byte	.LFB97
 29083 1c11 EC000000 		.4byte	.LFE97-.LFB97
 29084 1c15 01       		.uleb128 0x1
 29085 1c16 9C       		.byte	0x9c
 29086 1c17 3A1C0000 		.4byte	0x1c3a
 29087 1c1b 22       		.uleb128 0x22
 29088 1c1c 76050000 		.4byte	.LASF215
 29089 1c20 01       		.byte	0x1
 29090 1c21 F20C     		.2byte	0xcf2
 29091 1c23 21090000 		.4byte	0x921
 29092 1c27 02       		.uleb128 0x2
 29093 1c28 91       		.byte	0x91
 29094 1c29 68       		.sleb128 -24
 29095 1c2a 22       		.uleb128 0x22
 29096 1c2b 13100000 		.4byte	.LASF221
 29097 1c2f 01       		.byte	0x1
 29098 1c30 F30C     		.2byte	0xcf3
 29099 1c32 C7000000 		.4byte	0xc7
 29100 1c36 02       		.uleb128 0x2
 29101 1c37 91       		.byte	0x91
 29102 1c38 66       		.sleb128 -26
 29103 1c39 00       		.byte	0
 29104 1c3a 26       		.uleb128 0x26
 29105 1c3b 8C110000 		.4byte	.LASF301
 29106 1c3f 01       		.byte	0x1
 29107 1c40 140D     		.2byte	0xd14
 29108 1c42 00000000 		.4byte	.LFB98
 29109 1c46 64000000 		.4byte	.LFE98-.LFB98
 29110 1c4a 01       		.uleb128 0x1
 29111 1c4b 9C       		.byte	0x9c
 29112 1c4c 6F1C0000 		.4byte	0x1c6f
 29113 1c50 22       		.uleb128 0x22
 29114 1c51 76050000 		.4byte	.LASF215
 29115 1c55 01       		.byte	0x1
 29116 1c56 180D     		.2byte	0xd18
 29117 1c58 4C0A0000 		.4byte	0xa4c
 29118 1c5c 02       		.uleb128 0x2
 29119 1c5d 91       		.byte	0x91
 29120 1c5e 74       		.sleb128 -12
 29121 1c5f 22       		.uleb128 0x22
 29122 1c60 13100000 		.4byte	.LASF221
 29123 1c64 01       		.byte	0x1
 29124 1c65 190D     		.2byte	0xd19
 29125 1c67 C7000000 		.4byte	0xc7
 29126 1c6b 02       		.uleb128 0x2
 29127 1c6c 91       		.byte	0x91
 29128 1c6d 72       		.sleb128 -14
 29129 1c6e 00       		.byte	0
 29130 1c6f 2E       		.uleb128 0x2e
 29131 1c70 9F060000 		.4byte	.LASF302
 29132 1c74 01       		.byte	0x1
 29133 1c75 2E0D     		.2byte	0xd2e
 29134 1c77 C7000000 		.4byte	0xc7
 29135 1c7b 00000000 		.4byte	.LFB99
 29136 1c7f A8000000 		.4byte	.LFE99-.LFB99
 29137 1c83 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 623


 29138 1c84 9C       		.byte	0x9c
 29139 1c85 E41C0000 		.4byte	0x1ce4
 29140 1c89 22       		.uleb128 0x22
 29141 1c8a 76050000 		.4byte	.LASF215
 29142 1c8e 01       		.byte	0x1
 29143 1c8f 300D     		.2byte	0xd30
 29144 1c91 E41C0000 		.4byte	0x1ce4
 29145 1c95 02       		.uleb128 0x2
 29146 1c96 91       		.byte	0x91
 29147 1c97 5C       		.sleb128 -36
 29148 1c98 22       		.uleb128 0x22
 29149 1c99 C5000000 		.4byte	.LASF216
 29150 1c9d 01       		.byte	0x1
 29151 1c9e 310D     		.2byte	0xd31
 29152 1ca0 97000000 		.4byte	0x97
 29153 1ca4 02       		.uleb128 0x2
 29154 1ca5 91       		.byte	0x91
 29155 1ca6 74       		.sleb128 -12
 29156 1ca7 22       		.uleb128 0x22
 29157 1ca8 FB0D0000 		.4byte	.LASF303
 29158 1cac 01       		.byte	0x1
 29159 1cad 320D     		.2byte	0xd32
 29160 1caf C7000000 		.4byte	0xc7
 29161 1cb3 02       		.uleb128 0x2
 29162 1cb4 91       		.byte	0x91
 29163 1cb5 76       		.sleb128 -10
 29164 1cb6 22       		.uleb128 0x22
 29165 1cb7 3F020000 		.4byte	.LASF304
 29166 1cbb 01       		.byte	0x1
 29167 1cbc 330D     		.2byte	0xd33
 29168 1cbe AF000000 		.4byte	0xaf
 29169 1cc2 02       		.uleb128 0x2
 29170 1cc3 91       		.byte	0x91
 29171 1cc4 70       		.sleb128 -16
 29172 1cc5 22       		.uleb128 0x22
 29173 1cc6 86110000 		.4byte	.LASF305
 29174 1cca 01       		.byte	0x1
 29175 1ccb 330D     		.2byte	0xd33
 29176 1ccd AF000000 		.4byte	0xaf
 29177 1cd1 02       		.uleb128 0x2
 29178 1cd2 91       		.byte	0x91
 29179 1cd3 6C       		.sleb128 -20
 29180 1cd4 22       		.uleb128 0x22
 29181 1cd5 A6030000 		.4byte	.LASF306
 29182 1cd9 01       		.byte	0x1
 29183 1cda 340D     		.2byte	0xd34
 29184 1cdc 97000000 		.4byte	0x97
 29185 1ce0 02       		.uleb128 0x2
 29186 1ce1 91       		.byte	0x91
 29187 1ce2 75       		.sleb128 -11
 29188 1ce3 00       		.byte	0
 29189 1ce4 09       		.uleb128 0x9
 29190 1ce5 97000000 		.4byte	0x97
 29191 1ce9 F41C0000 		.4byte	0x1cf4
 29192 1ced 0A       		.uleb128 0xa
 29193 1cee 18010000 		.4byte	0x118
 29194 1cf2 0F       		.byte	0xf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 624


 29195 1cf3 00       		.byte	0
 29196 1cf4 2F       		.uleb128 0x2f
 29197 1cf5 88000000 		.4byte	.LASF321
 29198 1cf9 01       		.byte	0x1
 29199 1cfa 510D     		.2byte	0xd51
 29200 1cfc 00000000 		.4byte	.LFB100
 29201 1d00 34000000 		.4byte	.LFE100-.LFB100
 29202 1d04 01       		.uleb128 0x1
 29203 1d05 9C       		.byte	0x9c
 29204 1d06 26       		.uleb128 0x26
 29205 1d07 28030000 		.4byte	.LASF307
 29206 1d0b 01       		.byte	0x1
 29207 1d0c 5F0D     		.2byte	0xd5f
 29208 1d0e 00000000 		.4byte	.LFB101
 29209 1d12 20000000 		.4byte	.LFE101-.LFB101
 29210 1d16 01       		.uleb128 0x1
 29211 1d17 9C       		.byte	0x9c
 29212 1d18 2C1D0000 		.4byte	0x1d2c
 29213 1d1c 22       		.uleb128 0x22
 29214 1d1d 76050000 		.4byte	.LASF215
 29215 1d21 01       		.byte	0x1
 29216 1d22 610D     		.2byte	0xd61
 29217 1d24 D9180000 		.4byte	0x18d9
 29218 1d28 02       		.uleb128 0x2
 29219 1d29 91       		.byte	0x91
 29220 1d2a 74       		.sleb128 -12
 29221 1d2b 00       		.byte	0
 29222 1d2c 26       		.uleb128 0x26
 29223 1d2d 05010000 		.4byte	.LASF308
 29224 1d31 01       		.byte	0x1
 29225 1d32 6D0D     		.2byte	0xd6d
 29226 1d34 00000000 		.4byte	.LFB102
 29227 1d38 6C000000 		.4byte	.LFE102-.LFB102
 29228 1d3c 01       		.uleb128 0x1
 29229 1d3d 9C       		.byte	0x9c
 29230 1d3e 611D0000 		.4byte	0x1d61
 29231 1d42 22       		.uleb128 0x22
 29232 1d43 76050000 		.4byte	.LASF215
 29233 1d47 01       		.byte	0x1
 29234 1d48 710D     		.2byte	0xd71
 29235 1d4a 21090000 		.4byte	0x921
 29236 1d4e 02       		.uleb128 0x2
 29237 1d4f 91       		.byte	0x91
 29238 1d50 70       		.sleb128 -16
 29239 1d51 22       		.uleb128 0x22
 29240 1d52 13100000 		.4byte	.LASF221
 29241 1d56 01       		.byte	0x1
 29242 1d57 720D     		.2byte	0xd72
 29243 1d59 C7000000 		.4byte	0xc7
 29244 1d5d 02       		.uleb128 0x2
 29245 1d5e 91       		.byte	0x91
 29246 1d5f 6E       		.sleb128 -18
 29247 1d60 00       		.byte	0
 29248 1d61 26       		.uleb128 0x26
 29249 1d62 060F0000 		.4byte	.LASF309
 29250 1d66 01       		.byte	0x1
 29251 1d67 830D     		.2byte	0xd83
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 625


 29252 1d69 00000000 		.4byte	.LFB103
 29253 1d6d BC010000 		.4byte	.LFE103-.LFB103
 29254 1d71 01       		.uleb128 0x1
 29255 1d72 9C       		.byte	0x9c
 29256 1d73 C31D0000 		.4byte	0x1dc3
 29257 1d77 22       		.uleb128 0x22
 29258 1d78 980A0000 		.4byte	.LASF310
 29259 1d7c 01       		.byte	0x1
 29260 1d7d 860D     		.2byte	0xd86
 29261 1d7f AF000000 		.4byte	0xaf
 29262 1d83 02       		.uleb128 0x2
 29263 1d84 91       		.byte	0x91
 29264 1d85 70       		.sleb128 -16
 29265 1d86 22       		.uleb128 0x22
 29266 1d87 7D0D0000 		.4byte	.LASF311
 29267 1d8b 01       		.byte	0x1
 29268 1d8c 870D     		.2byte	0xd87
 29269 1d8e EB000000 		.4byte	0xeb
 29270 1d92 02       		.uleb128 0x2
 29271 1d93 91       		.byte	0x91
 29272 1d94 6C       		.sleb128 -20
 29273 1d95 22       		.uleb128 0x22
 29274 1d96 C5000000 		.4byte	.LASF216
 29275 1d9a 01       		.byte	0x1
 29276 1d9b 880D     		.2byte	0xd88
 29277 1d9d 97000000 		.4byte	0x97
 29278 1da1 02       		.uleb128 0x2
 29279 1da2 91       		.byte	0x91
 29280 1da3 77       		.sleb128 -9
 29281 1da4 22       		.uleb128 0x22
 29282 1da5 76050000 		.4byte	.LASF215
 29283 1da9 01       		.byte	0x1
 29284 1daa 890D     		.2byte	0xd89
 29285 1dac D9180000 		.4byte	0x18d9
 29286 1db0 02       		.uleb128 0x2
 29287 1db1 91       		.byte	0x91
 29288 1db2 68       		.sleb128 -24
 29289 1db3 22       		.uleb128 0x22
 29290 1db4 170E0000 		.4byte	.LASF271
 29291 1db8 01       		.byte	0x1
 29292 1db9 8A0D     		.2byte	0xd8a
 29293 1dbb 97000000 		.4byte	0x97
 29294 1dbf 02       		.uleb128 0x2
 29295 1dc0 91       		.byte	0x91
 29296 1dc1 6B       		.sleb128 -21
 29297 1dc2 00       		.byte	0
 29298 1dc3 26       		.uleb128 0x26
 29299 1dc4 A2010000 		.4byte	.LASF312
 29300 1dc8 01       		.byte	0x1
 29301 1dc9 C40D     		.2byte	0xdc4
 29302 1dcb 00000000 		.4byte	.LFB104
 29303 1dcf 60000000 		.4byte	.LFE104-.LFB104
 29304 1dd3 01       		.uleb128 0x1
 29305 1dd4 9C       		.byte	0x9c
 29306 1dd5 F81D0000 		.4byte	0x1df8
 29307 1dd9 22       		.uleb128 0x22
 29308 1dda 76050000 		.4byte	.LASF215
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 626


 29309 1dde 01       		.byte	0x1
 29310 1ddf C60D     		.2byte	0xdc6
 29311 1de1 21090000 		.4byte	0x921
 29312 1de5 02       		.uleb128 0x2
 29313 1de6 91       		.byte	0x91
 29314 1de7 70       		.sleb128 -16
 29315 1de8 22       		.uleb128 0x22
 29316 1de9 13100000 		.4byte	.LASF221
 29317 1ded 01       		.byte	0x1
 29318 1dee C70D     		.2byte	0xdc7
 29319 1df0 C7000000 		.4byte	0xc7
 29320 1df4 02       		.uleb128 0x2
 29321 1df5 91       		.byte	0x91
 29322 1df6 6E       		.sleb128 -18
 29323 1df7 00       		.byte	0
 29324 1df8 26       		.uleb128 0x26
 29325 1df9 41010000 		.4byte	.LASF313
 29326 1dfd 01       		.byte	0x1
 29327 1dfe DA0D     		.2byte	0xdda
 29328 1e00 00000000 		.4byte	.LFB105
 29329 1e04 98050000 		.4byte	.LFE105-.LFB105
 29330 1e08 01       		.uleb128 0x1
 29331 1e09 9C       		.byte	0x9c
 29332 1e0a 851E0000 		.4byte	0x1e85
 29333 1e0e 22       		.uleb128 0x22
 29334 1e0f D1110000 		.4byte	.LASF314
 29335 1e13 01       		.byte	0x1
 29336 1e14 DD0D     		.2byte	0xddd
 29337 1e16 97000000 		.4byte	0x97
 29338 1e1a 02       		.uleb128 0x2
 29339 1e1b 91       		.byte	0x91
 29340 1e1c 6F       		.sleb128 -17
 29341 1e1d 25       		.uleb128 0x25
 29342 1e1e 6300     		.ascii	"c\000"
 29343 1e20 01       		.byte	0x1
 29344 1e21 DE0D     		.2byte	0xdde
 29345 1e23 A3000000 		.4byte	0xa3
 29346 1e27 02       		.uleb128 0x2
 29347 1e28 91       		.byte	0x91
 29348 1e29 6C       		.sleb128 -20
 29349 1e2a 25       		.uleb128 0x25
 29350 1e2b 6B00     		.ascii	"k\000"
 29351 1e2d 01       		.byte	0x1
 29352 1e2e DF0D     		.2byte	0xddf
 29353 1e30 97000000 		.4byte	0x97
 29354 1e34 02       		.uleb128 0x2
 29355 1e35 91       		.byte	0x91
 29356 1e36 6B       		.sleb128 -21
 29357 1e37 22       		.uleb128 0x22
 29358 1e38 26000000 		.4byte	.LASF315
 29359 1e3c 01       		.byte	0x1
 29360 1e3d E00D     		.2byte	0xde0
 29361 1e3f A3000000 		.4byte	0xa3
 29362 1e43 02       		.uleb128 0x2
 29363 1e44 91       		.byte	0x91
 29364 1e45 68       		.sleb128 -24
 29365 1e46 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 627


 29366 1e47 13100000 		.4byte	.LASF221
 29367 1e4b 01       		.byte	0x1
 29368 1e4c E10D     		.2byte	0xde1
 29369 1e4e C7000000 		.4byte	0xc7
 29370 1e52 02       		.uleb128 0x2
 29371 1e53 91       		.byte	0x91
 29372 1e54 66       		.sleb128 -26
 29373 1e55 22       		.uleb128 0x22
 29374 1e56 51110000 		.4byte	.LASF220
 29375 1e5a 01       		.byte	0x1
 29376 1e5b E20D     		.2byte	0xde2
 29377 1e5d EB000000 		.4byte	0xeb
 29378 1e61 02       		.uleb128 0x2
 29379 1e62 91       		.byte	0x91
 29380 1e63 60       		.sleb128 -32
 29381 1e64 22       		.uleb128 0x22
 29382 1e65 76050000 		.4byte	.LASF215
 29383 1e69 01       		.byte	0x1
 29384 1e6a E50D     		.2byte	0xde5
 29385 1e6c 851E0000 		.4byte	0x1e85
 29386 1e70 03       		.uleb128 0x3
 29387 1e71 91       		.byte	0x91
 29388 1e72 807D     		.sleb128 -384
 29389 1e74 22       		.uleb128 0x22
 29390 1e75 27080000 		.4byte	.LASF316
 29391 1e79 01       		.byte	0x1
 29392 1e7a E60D     		.2byte	0xde6
 29393 1e7c 961E0000 		.4byte	0x1e96
 29394 1e80 03       		.uleb128 0x3
 29395 1e81 91       		.byte	0x91
 29396 1e82 E07C     		.sleb128 -416
 29397 1e84 00       		.byte	0
 29398 1e85 09       		.uleb128 0x9
 29399 1e86 97000000 		.4byte	0x97
 29400 1e8a 961E0000 		.4byte	0x1e96
 29401 1e8e 23       		.uleb128 0x23
 29402 1e8f 18010000 		.4byte	0x118
 29403 1e93 5D01     		.2byte	0x15d
 29404 1e95 00       		.byte	0
 29405 1e96 09       		.uleb128 0x9
 29406 1e97 97000000 		.4byte	0x97
 29407 1e9b A61E0000 		.4byte	0x1ea6
 29408 1e9f 0A       		.uleb128 0xa
 29409 1ea0 18010000 		.4byte	0x118
 29410 1ea4 1F       		.byte	0x1f
 29411 1ea5 00       		.byte	0
 29412 1ea6 26       		.uleb128 0x26
 29413 1ea7 2C110000 		.4byte	.LASF317
 29414 1eab 01       		.byte	0x1
 29415 1eac 490E     		.2byte	0xe49
 29416 1eae 00000000 		.4byte	.LFB106
 29417 1eb2 8C000000 		.4byte	.LFE106-.LFB106
 29418 1eb6 01       		.uleb128 0x1
 29419 1eb7 9C       		.byte	0x9c
 29420 1eb8 E61E0000 		.4byte	0x1ee6
 29421 1ebc 22       		.uleb128 0x22
 29422 1ebd 76050000 		.4byte	.LASF215
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 628


 29423 1ec1 01       		.byte	0x1
 29424 1ec2 4C0E     		.2byte	0xe4c
 29425 1ec4 FA090000 		.4byte	0x9fa
 29426 1ec8 02       		.uleb128 0x2
 29427 1ec9 91       		.byte	0x91
 29428 1eca 60       		.sleb128 -32
 29429 1ecb 25       		.uleb128 0x25
 29430 1ecc 6900     		.ascii	"i\000"
 29431 1ece 01       		.byte	0x1
 29432 1ecf 4D0E     		.2byte	0xe4d
 29433 1ed1 97000000 		.4byte	0x97
 29434 1ed5 02       		.uleb128 0x2
 29435 1ed6 91       		.byte	0x91
 29436 1ed7 6F       		.sleb128 -17
 29437 1ed8 25       		.uleb128 0x25
 29438 1ed9 6A00     		.ascii	"j\000"
 29439 1edb 01       		.byte	0x1
 29440 1edc 4D0E     		.2byte	0xe4d
 29441 1ede 97000000 		.4byte	0x97
 29442 1ee2 02       		.uleb128 0x2
 29443 1ee3 91       		.byte	0x91
 29444 1ee4 6E       		.sleb128 -18
 29445 1ee5 00       		.byte	0
 29446 1ee6 26       		.uleb128 0x26
 29447 1ee7 320F0000 		.4byte	.LASF318
 29448 1eeb 01       		.byte	0x1
 29449 1eec 620E     		.2byte	0xe62
 29450 1eee 00000000 		.4byte	.LFB107
 29451 1ef2 EC000000 		.4byte	.LFE107-.LFB107
 29452 1ef6 01       		.uleb128 0x1
 29453 1ef7 9C       		.byte	0x9c
 29454 1ef8 441F0000 		.4byte	0x1f44
 29455 1efc 22       		.uleb128 0x22
 29456 1efd 76050000 		.4byte	.LASF215
 29457 1f01 01       		.byte	0x1
 29458 1f02 650E     		.2byte	0xe65
 29459 1f04 441F0000 		.4byte	0x1f44
 29460 1f08 02       		.uleb128 0x2
 29461 1f09 91       		.byte	0x91
 29462 1f0a 54       		.sleb128 -44
 29463 1f0b 25       		.uleb128 0x25
 29464 1f0c 6900     		.ascii	"i\000"
 29465 1f0e 01       		.byte	0x1
 29466 1f0f 660E     		.2byte	0xe66
 29467 1f11 97000000 		.4byte	0x97
 29468 1f15 02       		.uleb128 0x2
 29469 1f16 91       		.byte	0x91
 29470 1f17 6F       		.sleb128 -17
 29471 1f18 25       		.uleb128 0x25
 29472 1f19 6A00     		.ascii	"j\000"
 29473 1f1b 01       		.byte	0x1
 29474 1f1c 660E     		.2byte	0xe66
 29475 1f1e 97000000 		.4byte	0x97
 29476 1f22 02       		.uleb128 0x2
 29477 1f23 91       		.byte	0x91
 29478 1f24 6E       		.sleb128 -18
 29479 1f25 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 629


 29480 1f26 69647800 		.ascii	"idx\000"
 29481 1f2a 01       		.byte	0x1
 29482 1f2b 660E     		.2byte	0xe66
 29483 1f2d 97000000 		.4byte	0x97
 29484 1f31 02       		.uleb128 0x2
 29485 1f32 91       		.byte	0x91
 29486 1f33 6D       		.sleb128 -19
 29487 1f34 22       		.uleb128 0x22
 29488 1f35 420B0000 		.4byte	.LASF222
 29489 1f39 01       		.byte	0x1
 29490 1f3a 670E     		.2byte	0xe67
 29491 1f3c A3000000 		.4byte	0xa3
 29492 1f40 02       		.uleb128 0x2
 29493 1f41 91       		.byte	0x91
 29494 1f42 52       		.sleb128 -46
 29495 1f43 00       		.byte	0
 29496 1f44 09       		.uleb128 0x9
 29497 1f45 97000000 		.4byte	0x97
 29498 1f49 541F0000 		.4byte	0x1f54
 29499 1f4d 0A       		.uleb128 0xa
 29500 1f4e 18010000 		.4byte	0x118
 29501 1f52 15       		.byte	0x15
 29502 1f53 00       		.byte	0
 29503 1f54 26       		.uleb128 0x26
 29504 1f55 E0020000 		.4byte	.LASF319
 29505 1f59 01       		.byte	0x1
 29506 1f5a 800E     		.2byte	0xe80
 29507 1f5c 00000000 		.4byte	.LFB108
 29508 1f60 5C000000 		.4byte	.LFE108-.LFB108
 29509 1f64 01       		.uleb128 0x1
 29510 1f65 9C       		.byte	0x9c
 29511 1f66 871F0000 		.4byte	0x1f87
 29512 1f6a 22       		.uleb128 0x22
 29513 1f6b 76050000 		.4byte	.LASF215
 29514 1f6f 01       		.byte	0x1
 29515 1f70 830E     		.2byte	0xe83
 29516 1f72 260B0000 		.4byte	0xb26
 29517 1f76 02       		.uleb128 0x2
 29518 1f77 91       		.byte	0x91
 29519 1f78 68       		.sleb128 -24
 29520 1f79 25       		.uleb128 0x25
 29521 1f7a 6900     		.ascii	"i\000"
 29522 1f7c 01       		.byte	0x1
 29523 1f7d 840E     		.2byte	0xe84
 29524 1f7f 97000000 		.4byte	0x97
 29525 1f83 02       		.uleb128 0x2
 29526 1f84 91       		.byte	0x91
 29527 1f85 77       		.sleb128 -9
 29528 1f86 00       		.byte	0
 29529 1f87 26       		.uleb128 0x26
 29530 1f88 0D030000 		.4byte	.LASF320
 29531 1f8c 01       		.byte	0x1
 29532 1f8d 970E     		.2byte	0xe97
 29533 1f8f 00000000 		.4byte	.LFB109
 29534 1f93 C0000000 		.4byte	.LFE109-.LFB109
 29535 1f97 01       		.uleb128 0x1
 29536 1f98 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 630


 29537 1f99 D81F0000 		.4byte	0x1fd8
 29538 1f9d 22       		.uleb128 0x22
 29539 1f9e 76050000 		.4byte	.LASF215
 29540 1fa2 01       		.byte	0x1
 29541 1fa3 9A0E     		.2byte	0xe9a
 29542 1fa5 D81F0000 		.4byte	0x1fd8
 29543 1fa9 02       		.uleb128 0x2
 29544 1faa 91       		.byte	0x91
 29545 1fab 54       		.sleb128 -44
 29546 1fac 25       		.uleb128 0x25
 29547 1fad 6900     		.ascii	"i\000"
 29548 1faf 01       		.byte	0x1
 29549 1fb0 9B0E     		.2byte	0xe9b
 29550 1fb2 97000000 		.4byte	0x97
 29551 1fb6 02       		.uleb128 0x2
 29552 1fb7 91       		.byte	0x91
 29553 1fb8 6F       		.sleb128 -17
 29554 1fb9 25       		.uleb128 0x25
 29555 1fba 69647800 		.ascii	"idx\000"
 29556 1fbe 01       		.byte	0x1
 29557 1fbf 9B0E     		.2byte	0xe9b
 29558 1fc1 97000000 		.4byte	0x97
 29559 1fc5 02       		.uleb128 0x2
 29560 1fc6 91       		.byte	0x91
 29561 1fc7 6E       		.sleb128 -18
 29562 1fc8 22       		.uleb128 0x22
 29563 1fc9 13100000 		.4byte	.LASF221
 29564 1fcd 01       		.byte	0x1
 29565 1fce 9C0E     		.2byte	0xe9c
 29566 1fd0 C7000000 		.4byte	0xc7
 29567 1fd4 02       		.uleb128 0x2
 29568 1fd5 91       		.byte	0x91
 29569 1fd6 52       		.sleb128 -46
 29570 1fd7 00       		.byte	0
 29571 1fd8 09       		.uleb128 0x9
 29572 1fd9 97000000 		.4byte	0x97
 29573 1fdd E81F0000 		.4byte	0x1fe8
 29574 1fe1 0A       		.uleb128 0xa
 29575 1fe2 18010000 		.4byte	0x118
 29576 1fe6 19       		.byte	0x19
 29577 1fe7 00       		.byte	0
 29578 1fe8 30       		.uleb128 0x30
 29579 1fe9 99000000 		.4byte	.LASF322
 29580 1fed 01       		.byte	0x1
 29581 1fee B70E     		.2byte	0xeb7
 29582 1ff0 00000000 		.4byte	.LFB110
 29583 1ff4 0C000000 		.4byte	.LFE110-.LFB110
 29584 1ff8 01       		.uleb128 0x1
 29585 1ff9 9C       		.byte	0x9c
 29586 1ffa 2A       		.uleb128 0x2a
 29587 1ffb 380C0000 		.4byte	.LASF323
 29588 1fff 01       		.byte	0x1
 29589 2000 FD0E     		.2byte	0xefd
 29590 2002 00000000 		.4byte	.LFB111
 29591 2006 1A000000 		.4byte	.LFE111-.LFB111
 29592 200a 01       		.uleb128 0x1
 29593 200b 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 631


 29594 200c 2F200000 		.4byte	0x202f
 29595 2010 24       		.uleb128 0x24
 29596 2011 78020000 		.4byte	.LASF324
 29597 2015 01       		.byte	0x1
 29598 2016 FD0E     		.2byte	0xefd
 29599 2018 97000000 		.4byte	0x97
 29600 201c 02       		.uleb128 0x2
 29601 201d 91       		.byte	0x91
 29602 201e 77       		.sleb128 -9
 29603 201f 24       		.uleb128 0x24
 29604 2020 AE090000 		.4byte	.LASF177
 29605 2024 01       		.byte	0x1
 29606 2025 FD0E     		.2byte	0xefd
 29607 2027 97000000 		.4byte	0x97
 29608 202b 02       		.uleb128 0x2
 29609 202c 91       		.byte	0x91
 29610 202d 76       		.sleb128 -10
 29611 202e 00       		.byte	0
 29612 202f 30       		.uleb128 0x30
 29613 2030 8F100000 		.4byte	.LASF325
 29614 2034 01       		.byte	0x1
 29615 2035 260F     		.2byte	0xf26
 29616 2037 00000000 		.4byte	.LFB112
 29617 203b 0C000000 		.4byte	.LFE112-.LFB112
 29618 203f 01       		.uleb128 0x1
 29619 2040 9C       		.byte	0x9c
 29620 2041 30       		.uleb128 0x30
 29621 2042 9B050000 		.4byte	.LASF326
 29622 2046 01       		.byte	0x1
 29623 2047 350F     		.2byte	0xf35
 29624 2049 00000000 		.4byte	.LFB113
 29625 204d 0C000000 		.4byte	.LFE113-.LFB113
 29626 2051 01       		.uleb128 0x1
 29627 2052 9C       		.byte	0x9c
 29628 2053 31       		.uleb128 0x31
 29629 2054 50100000 		.4byte	.LASF327
 29630 2058 09       		.byte	0x9
 29631 2059 1207     		.2byte	0x712
 29632 205b 5F200000 		.4byte	0x205f
 29633 205f 06       		.uleb128 0x6
 29634 2060 81000000 		.4byte	0x81
 29635 2064 09       		.uleb128 0x9
 29636 2065 10030000 		.4byte	0x310
 29637 2069 74200000 		.4byte	0x2074
 29638 206d 0A       		.uleb128 0xa
 29639 206e 18010000 		.4byte	0x118
 29640 2072 01       		.byte	0x1
 29641 2073 00       		.byte	0
 29642 2074 31       		.uleb128 0x31
 29643 2075 20120000 		.4byte	.LASF328
 29644 2079 08       		.byte	0x8
 29645 207a F401     		.2byte	0x1f4
 29646 207c 64200000 		.4byte	0x2064
 29647 2080 31       		.uleb128 0x31
 29648 2081 F0030000 		.4byte	.LASF329
 29649 2085 08       		.byte	0x8
 29650 2086 F401     		.2byte	0x1f4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 632


 29651 2088 64200000 		.4byte	0x2064
 29652 208c 31       		.uleb128 0x31
 29653 208d F10B0000 		.4byte	.LASF330
 29654 2091 08       		.byte	0x8
 29655 2092 F401     		.2byte	0x1f4
 29656 2094 64200000 		.4byte	0x2064
 29657 2098 09       		.uleb128 0x9
 29658 2099 4D030000 		.4byte	0x34d
 29659 209d A8200000 		.4byte	0x20a8
 29660 20a1 0A       		.uleb128 0xa
 29661 20a2 18010000 		.4byte	0x118
 29662 20a6 01       		.byte	0x1
 29663 20a7 00       		.byte	0
 29664 20a8 31       		.uleb128 0x31
 29665 20a9 0F060000 		.4byte	.LASF331
 29666 20ad 08       		.byte	0x8
 29667 20ae F501     		.2byte	0x1f5
 29668 20b0 98200000 		.4byte	0x2098
 29669 20b4 31       		.uleb128 0x31
 29670 20b5 6A120000 		.4byte	.LASF332
 29671 20b9 08       		.byte	0x8
 29672 20ba F501     		.2byte	0x1f5
 29673 20bc 98200000 		.4byte	0x2098
 29674 20c0 31       		.uleb128 0x31
 29675 20c1 6A000000 		.4byte	.LASF333
 29676 20c5 08       		.byte	0x8
 29677 20c6 F601     		.2byte	0x1f6
 29678 20c8 CE030000 		.4byte	0x3ce
 29679 20cc 31       		.uleb128 0x31
 29680 20cd 2B130000 		.4byte	.LASF334
 29681 20d1 08       		.byte	0x8
 29682 20d2 F601     		.2byte	0x1f6
 29683 20d4 CE030000 		.4byte	0x3ce
 29684 20d8 31       		.uleb128 0x31
 29685 20d9 E80E0000 		.4byte	.LASF335
 29686 20dd 08       		.byte	0x8
 29687 20de F701     		.2byte	0x1f7
 29688 20e0 13040000 		.4byte	0x413
 29689 20e4 31       		.uleb128 0x31
 29690 20e5 5D000000 		.4byte	.LASF336
 29691 20e9 08       		.byte	0x8
 29692 20ea F801     		.2byte	0x1f8
 29693 20ec 2C040000 		.4byte	0x42c
 29694 20f0 31       		.uleb128 0x31
 29695 20f1 170F0000 		.4byte	.LASF337
 29696 20f5 08       		.byte	0x8
 29697 20f6 F901     		.2byte	0x1f9
 29698 20f8 5C0A0000 		.4byte	0xa5c
 29699 20fc 31       		.uleb128 0x31
 29700 20fd 070A0000 		.4byte	.LASF338
 29701 2101 08       		.byte	0x8
 29702 2102 F901     		.2byte	0x1f9
 29703 2104 5C0A0000 		.4byte	0xa5c
 29704 2108 31       		.uleb128 0x31
 29705 2109 13090000 		.4byte	.LASF339
 29706 210d 08       		.byte	0x8
 29707 210e FA01     		.2byte	0x1fa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 633


 29708 2110 F20B0000 		.4byte	0xbf2
 29709 2114 31       		.uleb128 0x31
 29710 2115 55020000 		.4byte	.LASF340
 29711 2119 08       		.byte	0x8
 29712 211a FF01     		.2byte	0x1ff
 29713 211c A3000000 		.4byte	0xa3
 29714 2120 31       		.uleb128 0x31
 29715 2121 2D0D0000 		.4byte	.LASF341
 29716 2125 08       		.byte	0x8
 29717 2126 0002     		.2byte	0x200
 29718 2128 A3000000 		.4byte	0xa3
 29719 212c 31       		.uleb128 0x31
 29720 212d 5F0D0000 		.4byte	.LASF342
 29721 2131 08       		.byte	0x8
 29722 2132 0302     		.2byte	0x203
 29723 2134 F3030000 		.4byte	0x3f3
 29724 2138 31       		.uleb128 0x31
 29725 2139 F5100000 		.4byte	.LASF343
 29726 213d 08       		.byte	0x8
 29727 213e 0402     		.2byte	0x204
 29728 2140 D9180000 		.4byte	0x18d9
 29729 2144 31       		.uleb128 0x31
 29730 2145 70100000 		.4byte	.LASF344
 29731 2149 08       		.byte	0x8
 29732 214a 0702     		.2byte	0x207
 29733 214c F3030000 		.4byte	0x3f3
 29734 2150 31       		.uleb128 0x31
 29735 2151 B7090000 		.4byte	.LASF345
 29736 2155 08       		.byte	0x8
 29737 2156 0E02     		.2byte	0x20e
 29738 2158 97000000 		.4byte	0x97
 29739 215c 31       		.uleb128 0x31
 29740 215d B8030000 		.4byte	.LASF346
 29741 2161 08       		.byte	0x8
 29742 2162 1002     		.2byte	0x210
 29743 2164 97000000 		.4byte	0x97
 29744 2168 31       		.uleb128 0x31
 29745 2169 68090000 		.4byte	.LASF347
 29746 216d 08       		.byte	0x8
 29747 216e 1702     		.2byte	0x217
 29748 2170 97000000 		.4byte	0x97
 29749 2174 31       		.uleb128 0x31
 29750 2175 C3060000 		.4byte	.LASF348
 29751 2179 08       		.byte	0x8
 29752 217a 1802     		.2byte	0x218
 29753 217c 97000000 		.4byte	0x97
 29754 2180 09       		.uleb128 0x9
 29755 2181 C7000000 		.4byte	0xc7
 29756 2185 90210000 		.4byte	0x2190
 29757 2189 0A       		.uleb128 0xa
 29758 218a 18010000 		.4byte	0x118
 29759 218e 0B       		.byte	0xb
 29760 218f 00       		.byte	0
 29761 2190 31       		.uleb128 0x31
 29762 2191 B0030000 		.4byte	.LASF349
 29763 2195 08       		.byte	0x8
 29764 2196 1B02     		.2byte	0x21b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 634


 29765 2198 80210000 		.4byte	0x2180
 29766 219c 31       		.uleb128 0x31
 29767 219d 2C120000 		.4byte	.LASF350
 29768 21a1 08       		.byte	0x8
 29769 21a2 1C02     		.2byte	0x21c
 29770 21a4 97000000 		.4byte	0x97
 29771 21a8 09       		.uleb128 0x9
 29772 21a9 AF000000 		.4byte	0xaf
 29773 21ad B8210000 		.4byte	0x21b8
 29774 21b1 0A       		.uleb128 0xa
 29775 21b2 18010000 		.4byte	0x118
 29776 21b6 04       		.byte	0x4
 29777 21b7 00       		.byte	0
 29778 21b8 31       		.uleb128 0x31
 29779 21b9 3D060000 		.4byte	.LASF351
 29780 21bd 08       		.byte	0x8
 29781 21be 2202     		.2byte	0x222
 29782 21c0 A8210000 		.4byte	0x21a8
 29783 21c4 31       		.uleb128 0x31
 29784 21c5 260E0000 		.4byte	.LASF352
 29785 21c9 08       		.byte	0x8
 29786 21ca 2302     		.2byte	0x223
 29787 21cc D9180000 		.4byte	0x18d9
 29788 21d0 09       		.uleb128 0x9
 29789 21d1 A3000000 		.4byte	0xa3
 29790 21d5 E6210000 		.4byte	0x21e6
 29791 21d9 0A       		.uleb128 0xa
 29792 21da 18010000 		.4byte	0x118
 29793 21de 01       		.byte	0x1
 29794 21df 0A       		.uleb128 0xa
 29795 21e0 18010000 		.4byte	0x118
 29796 21e4 04       		.byte	0x4
 29797 21e5 00       		.byte	0
 29798 21e6 31       		.uleb128 0x31
 29799 21e7 1E110000 		.4byte	.LASF353
 29800 21eb 08       		.byte	0x8
 29801 21ec 2402     		.2byte	0x224
 29802 21ee D0210000 		.4byte	0x21d0
 29803 21f2 09       		.uleb128 0x9
 29804 21f3 97000000 		.4byte	0x97
 29805 21f7 08220000 		.4byte	0x2208
 29806 21fb 0A       		.uleb128 0xa
 29807 21fc 18010000 		.4byte	0x118
 29808 2200 01       		.byte	0x1
 29809 2201 0A       		.uleb128 0xa
 29810 2202 18010000 		.4byte	0x118
 29811 2206 04       		.byte	0x4
 29812 2207 00       		.byte	0
 29813 2208 31       		.uleb128 0x31
 29814 2209 16060000 		.4byte	.LASF354
 29815 220d 08       		.byte	0x8
 29816 220e 2502     		.2byte	0x225
 29817 2210 F2210000 		.4byte	0x21f2
 29818 2214 31       		.uleb128 0x31
 29819 2215 82050000 		.4byte	.LASF355
 29820 2219 08       		.byte	0x8
 29821 221a 2B02     		.2byte	0x22b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 635


 29822 221c 0A030000 		.4byte	0x30a
 29823 2220 31       		.uleb128 0x31
 29824 2221 9A0F0000 		.4byte	.LASF356
 29825 2225 08       		.byte	0x8
 29826 2226 3002     		.2byte	0x230
 29827 2228 97000000 		.4byte	0x97
 29828 222c 31       		.uleb128 0x31
 29829 222d 5B110000 		.4byte	.LASF357
 29830 2231 08       		.byte	0x8
 29831 2232 3102     		.2byte	0x231
 29832 2234 CE070000 		.4byte	0x7ce
 29833 2238 31       		.uleb128 0x31
 29834 2239 41100000 		.4byte	.LASF358
 29835 223d 08       		.byte	0x8
 29836 223e 3202     		.2byte	0x232
 29837 2240 73000000 		.4byte	0x73
 29838 2244 09       		.uleb128 0x9
 29839 2245 73000000 		.4byte	0x73
 29840 2249 54220000 		.4byte	0x2254
 29841 224d 0A       		.uleb128 0xa
 29842 224e 18010000 		.4byte	0x118
 29843 2252 04       		.byte	0x4
 29844 2253 00       		.byte	0
 29845 2254 31       		.uleb128 0x31
 29846 2255 84030000 		.4byte	.LASF359
 29847 2259 08       		.byte	0x8
 29848 225a 3302     		.2byte	0x233
 29849 225c 44220000 		.4byte	0x2244
 29850 2260 09       		.uleb128 0x9
 29851 2261 760B0000 		.4byte	0xb76
 29852 2265 70220000 		.4byte	0x2270
 29853 2269 0A       		.uleb128 0xa
 29854 226a 18010000 		.4byte	0x118
 29855 226e 04       		.byte	0x4
 29856 226f 00       		.byte	0
 29857 2270 31       		.uleb128 0x31
 29858 2271 90060000 		.4byte	.LASF360
 29859 2275 08       		.byte	0x8
 29860 2276 3402     		.2byte	0x234
 29861 2278 60220000 		.4byte	0x2260
 29862 227c 09       		.uleb128 0x9
 29863 227d 97000000 		.4byte	0x97
 29864 2281 92220000 		.4byte	0x2292
 29865 2285 0A       		.uleb128 0xa
 29866 2286 18010000 		.4byte	0x118
 29867 228a 04       		.byte	0x4
 29868 228b 0A       		.uleb128 0xa
 29869 228c 18010000 		.4byte	0x118
 29870 2290 02       		.byte	0x2
 29871 2291 00       		.byte	0
 29872 2292 31       		.uleb128 0x31
 29873 2293 590A0000 		.4byte	.LASF361
 29874 2297 08       		.byte	0x8
 29875 2298 3802     		.2byte	0x238
 29876 229a 7C220000 		.4byte	0x227c
 29877 229e 31       		.uleb128 0x31
 29878 229f 49120000 		.4byte	.LASF362
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 636


 29879 22a3 08       		.byte	0x8
 29880 22a4 3D02     		.2byte	0x23d
 29881 22a6 97000000 		.4byte	0x97
 29882 22aa 32       		.uleb128 0x32
 29883 22ab 1D100000 		.4byte	.LASF363
 29884 22af 01       		.byte	0x1
 29885 22b0 33       		.byte	0x33
 29886 22b1 BB220000 		.4byte	0x22bb
 29887 22b5 05       		.uleb128 0x5
 29888 22b6 03       		.byte	0x3
 29889 22b7 00000000 		.4byte	EEPROM_ADDR
 29890 22bb 07       		.uleb128 0x7
 29891 22bc 04       		.byte	0x4
 29892 22bd 00010000 		.4byte	0x100
 29893 22c1 00       		.byte	0
 29894              		.section	.debug_abbrev,"",%progbits
 29895              	.Ldebug_abbrev0:
 29896 0000 01       		.uleb128 0x1
 29897 0001 11       		.uleb128 0x11
 29898 0002 01       		.byte	0x1
 29899 0003 25       		.uleb128 0x25
 29900 0004 0E       		.uleb128 0xe
 29901 0005 13       		.uleb128 0x13
 29902 0006 0B       		.uleb128 0xb
 29903 0007 03       		.uleb128 0x3
 29904 0008 0E       		.uleb128 0xe
 29905 0009 1B       		.uleb128 0x1b
 29906 000a 0E       		.uleb128 0xe
 29907 000b 55       		.uleb128 0x55
 29908 000c 17       		.uleb128 0x17
 29909 000d 11       		.uleb128 0x11
 29910 000e 01       		.uleb128 0x1
 29911 000f 10       		.uleb128 0x10
 29912 0010 17       		.uleb128 0x17
 29913 0011 00       		.byte	0
 29914 0012 00       		.byte	0
 29915 0013 02       		.uleb128 0x2
 29916 0014 24       		.uleb128 0x24
 29917 0015 00       		.byte	0
 29918 0016 0B       		.uleb128 0xb
 29919 0017 0B       		.uleb128 0xb
 29920 0018 3E       		.uleb128 0x3e
 29921 0019 0B       		.uleb128 0xb
 29922 001a 03       		.uleb128 0x3
 29923 001b 0E       		.uleb128 0xe
 29924 001c 00       		.byte	0
 29925 001d 00       		.byte	0
 29926 001e 03       		.uleb128 0x3
 29927 001f 16       		.uleb128 0x16
 29928 0020 00       		.byte	0
 29929 0021 03       		.uleb128 0x3
 29930 0022 0E       		.uleb128 0xe
 29931 0023 3A       		.uleb128 0x3a
 29932 0024 0B       		.uleb128 0xb
 29933 0025 3B       		.uleb128 0x3b
 29934 0026 0B       		.uleb128 0xb
 29935 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 637


 29936 0028 13       		.uleb128 0x13
 29937 0029 00       		.byte	0
 29938 002a 00       		.byte	0
 29939 002b 04       		.uleb128 0x4
 29940 002c 24       		.uleb128 0x24
 29941 002d 00       		.byte	0
 29942 002e 0B       		.uleb128 0xb
 29943 002f 0B       		.uleb128 0xb
 29944 0030 3E       		.uleb128 0x3e
 29945 0031 0B       		.uleb128 0xb
 29946 0032 03       		.uleb128 0x3
 29947 0033 08       		.uleb128 0x8
 29948 0034 00       		.byte	0
 29949 0035 00       		.byte	0
 29950 0036 05       		.uleb128 0x5
 29951 0037 16       		.uleb128 0x16
 29952 0038 00       		.byte	0
 29953 0039 03       		.uleb128 0x3
 29954 003a 0E       		.uleb128 0xe
 29955 003b 3A       		.uleb128 0x3a
 29956 003c 0B       		.uleb128 0xb
 29957 003d 3B       		.uleb128 0x3b
 29958 003e 05       		.uleb128 0x5
 29959 003f 49       		.uleb128 0x49
 29960 0040 13       		.uleb128 0x13
 29961 0041 00       		.byte	0
 29962 0042 00       		.byte	0
 29963 0043 06       		.uleb128 0x6
 29964 0044 35       		.uleb128 0x35
 29965 0045 00       		.byte	0
 29966 0046 49       		.uleb128 0x49
 29967 0047 13       		.uleb128 0x13
 29968 0048 00       		.byte	0
 29969 0049 00       		.byte	0
 29970 004a 07       		.uleb128 0x7
 29971 004b 0F       		.uleb128 0xf
 29972 004c 00       		.byte	0
 29973 004d 0B       		.uleb128 0xb
 29974 004e 0B       		.uleb128 0xb
 29975 004f 49       		.uleb128 0x49
 29976 0050 13       		.uleb128 0x13
 29977 0051 00       		.byte	0
 29978 0052 00       		.byte	0
 29979 0053 08       		.uleb128 0x8
 29980 0054 26       		.uleb128 0x26
 29981 0055 00       		.byte	0
 29982 0056 49       		.uleb128 0x49
 29983 0057 13       		.uleb128 0x13
 29984 0058 00       		.byte	0
 29985 0059 00       		.byte	0
 29986 005a 09       		.uleb128 0x9
 29987 005b 01       		.uleb128 0x1
 29988 005c 01       		.byte	0x1
 29989 005d 49       		.uleb128 0x49
 29990 005e 13       		.uleb128 0x13
 29991 005f 01       		.uleb128 0x1
 29992 0060 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 638


 29993 0061 00       		.byte	0
 29994 0062 00       		.byte	0
 29995 0063 0A       		.uleb128 0xa
 29996 0064 21       		.uleb128 0x21
 29997 0065 00       		.byte	0
 29998 0066 49       		.uleb128 0x49
 29999 0067 13       		.uleb128 0x13
 30000 0068 2F       		.uleb128 0x2f
 30001 0069 0B       		.uleb128 0xb
 30002 006a 00       		.byte	0
 30003 006b 00       		.byte	0
 30004 006c 0B       		.uleb128 0xb
 30005 006d 04       		.uleb128 0x4
 30006 006e 01       		.byte	0x1
 30007 006f 03       		.uleb128 0x3
 30008 0070 0E       		.uleb128 0xe
 30009 0071 0B       		.uleb128 0xb
 30010 0072 0B       		.uleb128 0xb
 30011 0073 49       		.uleb128 0x49
 30012 0074 13       		.uleb128 0x13
 30013 0075 3A       		.uleb128 0x3a
 30014 0076 0B       		.uleb128 0xb
 30015 0077 3B       		.uleb128 0x3b
 30016 0078 0B       		.uleb128 0xb
 30017 0079 01       		.uleb128 0x1
 30018 007a 13       		.uleb128 0x13
 30019 007b 00       		.byte	0
 30020 007c 00       		.byte	0
 30021 007d 0C       		.uleb128 0xc
 30022 007e 28       		.uleb128 0x28
 30023 007f 00       		.byte	0
 30024 0080 03       		.uleb128 0x3
 30025 0081 0E       		.uleb128 0xe
 30026 0082 1C       		.uleb128 0x1c
 30027 0083 0B       		.uleb128 0xb
 30028 0084 00       		.byte	0
 30029 0085 00       		.byte	0
 30030 0086 0D       		.uleb128 0xd
 30031 0087 13       		.uleb128 0x13
 30032 0088 00       		.byte	0
 30033 0089 03       		.uleb128 0x3
 30034 008a 0E       		.uleb128 0xe
 30035 008b 3C       		.uleb128 0x3c
 30036 008c 19       		.uleb128 0x19
 30037 008d 00       		.byte	0
 30038 008e 00       		.byte	0
 30039 008f 0E       		.uleb128 0xe
 30040 0090 13       		.uleb128 0x13
 30041 0091 01       		.byte	0x1
 30042 0092 03       		.uleb128 0x3
 30043 0093 0E       		.uleb128 0xe
 30044 0094 0B       		.uleb128 0xb
 30045 0095 0B       		.uleb128 0xb
 30046 0096 3A       		.uleb128 0x3a
 30047 0097 0B       		.uleb128 0xb
 30048 0098 3B       		.uleb128 0x3b
 30049 0099 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 639


 30050 009a 01       		.uleb128 0x1
 30051 009b 13       		.uleb128 0x13
 30052 009c 00       		.byte	0
 30053 009d 00       		.byte	0
 30054 009e 0F       		.uleb128 0xf
 30055 009f 0D       		.uleb128 0xd
 30056 00a0 00       		.byte	0
 30057 00a1 03       		.uleb128 0x3
 30058 00a2 08       		.uleb128 0x8
 30059 00a3 3A       		.uleb128 0x3a
 30060 00a4 0B       		.uleb128 0xb
 30061 00a5 3B       		.uleb128 0x3b
 30062 00a6 0B       		.uleb128 0xb
 30063 00a7 49       		.uleb128 0x49
 30064 00a8 13       		.uleb128 0x13
 30065 00a9 38       		.uleb128 0x38
 30066 00aa 0B       		.uleb128 0xb
 30067 00ab 00       		.byte	0
 30068 00ac 00       		.byte	0
 30069 00ad 10       		.uleb128 0x10
 30070 00ae 0D       		.uleb128 0xd
 30071 00af 00       		.byte	0
 30072 00b0 03       		.uleb128 0x3
 30073 00b1 0E       		.uleb128 0xe
 30074 00b2 3A       		.uleb128 0x3a
 30075 00b3 0B       		.uleb128 0xb
 30076 00b4 3B       		.uleb128 0x3b
 30077 00b5 0B       		.uleb128 0xb
 30078 00b6 49       		.uleb128 0x49
 30079 00b7 13       		.uleb128 0x13
 30080 00b8 38       		.uleb128 0x38
 30081 00b9 0B       		.uleb128 0xb
 30082 00ba 00       		.byte	0
 30083 00bb 00       		.byte	0
 30084 00bc 11       		.uleb128 0x11
 30085 00bd 13       		.uleb128 0x13
 30086 00be 01       		.byte	0x1
 30087 00bf 03       		.uleb128 0x3
 30088 00c0 0E       		.uleb128 0xe
 30089 00c1 0B       		.uleb128 0xb
 30090 00c2 0B       		.uleb128 0xb
 30091 00c3 3A       		.uleb128 0x3a
 30092 00c4 0B       		.uleb128 0xb
 30093 00c5 3B       		.uleb128 0x3b
 30094 00c6 05       		.uleb128 0x5
 30095 00c7 01       		.uleb128 0x1
 30096 00c8 13       		.uleb128 0x13
 30097 00c9 00       		.byte	0
 30098 00ca 00       		.byte	0
 30099 00cb 12       		.uleb128 0x12
 30100 00cc 0D       		.uleb128 0xd
 30101 00cd 00       		.byte	0
 30102 00ce 03       		.uleb128 0x3
 30103 00cf 0E       		.uleb128 0xe
 30104 00d0 3A       		.uleb128 0x3a
 30105 00d1 0B       		.uleb128 0xb
 30106 00d2 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 640


 30107 00d3 05       		.uleb128 0x5
 30108 00d4 49       		.uleb128 0x49
 30109 00d5 13       		.uleb128 0x13
 30110 00d6 38       		.uleb128 0x38
 30111 00d7 0B       		.uleb128 0xb
 30112 00d8 00       		.byte	0
 30113 00d9 00       		.byte	0
 30114 00da 13       		.uleb128 0x13
 30115 00db 0D       		.uleb128 0xd
 30116 00dc 00       		.byte	0
 30117 00dd 03       		.uleb128 0x3
 30118 00de 08       		.uleb128 0x8
 30119 00df 3A       		.uleb128 0x3a
 30120 00e0 0B       		.uleb128 0xb
 30121 00e1 3B       		.uleb128 0x3b
 30122 00e2 05       		.uleb128 0x5
 30123 00e3 49       		.uleb128 0x49
 30124 00e4 13       		.uleb128 0x13
 30125 00e5 38       		.uleb128 0x38
 30126 00e6 0B       		.uleb128 0xb
 30127 00e7 00       		.byte	0
 30128 00e8 00       		.byte	0
 30129 00e9 14       		.uleb128 0x14
 30130 00ea 13       		.uleb128 0x13
 30131 00eb 01       		.byte	0x1
 30132 00ec 03       		.uleb128 0x3
 30133 00ed 0E       		.uleb128 0xe
 30134 00ee 0B       		.uleb128 0xb
 30135 00ef 05       		.uleb128 0x5
 30136 00f0 3A       		.uleb128 0x3a
 30137 00f1 0B       		.uleb128 0xb
 30138 00f2 3B       		.uleb128 0x3b
 30139 00f3 05       		.uleb128 0x5
 30140 00f4 01       		.uleb128 0x1
 30141 00f5 13       		.uleb128 0x13
 30142 00f6 00       		.byte	0
 30143 00f7 00       		.byte	0
 30144 00f8 15       		.uleb128 0x15
 30145 00f9 0D       		.uleb128 0xd
 30146 00fa 00       		.byte	0
 30147 00fb 03       		.uleb128 0x3
 30148 00fc 08       		.uleb128 0x8
 30149 00fd 3A       		.uleb128 0x3a
 30150 00fe 0B       		.uleb128 0xb
 30151 00ff 3B       		.uleb128 0x3b
 30152 0100 05       		.uleb128 0x5
 30153 0101 49       		.uleb128 0x49
 30154 0102 13       		.uleb128 0x13
 30155 0103 38       		.uleb128 0x38
 30156 0104 05       		.uleb128 0x5
 30157 0105 00       		.byte	0
 30158 0106 00       		.byte	0
 30159 0107 16       		.uleb128 0x16
 30160 0108 0D       		.uleb128 0xd
 30161 0109 00       		.byte	0
 30162 010a 03       		.uleb128 0x3
 30163 010b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 641


 30164 010c 3A       		.uleb128 0x3a
 30165 010d 0B       		.uleb128 0xb
 30166 010e 3B       		.uleb128 0x3b
 30167 010f 05       		.uleb128 0x5
 30168 0110 49       		.uleb128 0x49
 30169 0111 13       		.uleb128 0x13
 30170 0112 38       		.uleb128 0x38
 30171 0113 05       		.uleb128 0x5
 30172 0114 00       		.byte	0
 30173 0115 00       		.byte	0
 30174 0116 17       		.uleb128 0x17
 30175 0117 2E       		.uleb128 0x2e
 30176 0118 01       		.byte	0x1
 30177 0119 03       		.uleb128 0x3
 30178 011a 0E       		.uleb128 0xe
 30179 011b 3A       		.uleb128 0x3a
 30180 011c 0B       		.uleb128 0xb
 30181 011d 3B       		.uleb128 0x3b
 30182 011e 05       		.uleb128 0x5
 30183 011f 27       		.uleb128 0x27
 30184 0120 19       		.uleb128 0x19
 30185 0121 49       		.uleb128 0x49
 30186 0122 13       		.uleb128 0x13
 30187 0123 20       		.uleb128 0x20
 30188 0124 0B       		.uleb128 0xb
 30189 0125 01       		.uleb128 0x1
 30190 0126 13       		.uleb128 0x13
 30191 0127 00       		.byte	0
 30192 0128 00       		.byte	0
 30193 0129 18       		.uleb128 0x18
 30194 012a 05       		.uleb128 0x5
 30195 012b 00       		.byte	0
 30196 012c 03       		.uleb128 0x3
 30197 012d 0E       		.uleb128 0xe
 30198 012e 3A       		.uleb128 0x3a
 30199 012f 0B       		.uleb128 0xb
 30200 0130 3B       		.uleb128 0x3b
 30201 0131 05       		.uleb128 0x5
 30202 0132 49       		.uleb128 0x49
 30203 0133 13       		.uleb128 0x13
 30204 0134 00       		.byte	0
 30205 0135 00       		.byte	0
 30206 0136 19       		.uleb128 0x19
 30207 0137 34       		.uleb128 0x34
 30208 0138 00       		.byte	0
 30209 0139 03       		.uleb128 0x3
 30210 013a 0E       		.uleb128 0xe
 30211 013b 3A       		.uleb128 0x3a
 30212 013c 0B       		.uleb128 0xb
 30213 013d 3B       		.uleb128 0x3b
 30214 013e 05       		.uleb128 0x5
 30215 013f 49       		.uleb128 0x49
 30216 0140 13       		.uleb128 0x13
 30217 0141 00       		.byte	0
 30218 0142 00       		.byte	0
 30219 0143 1A       		.uleb128 0x1a
 30220 0144 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 642


 30221 0145 01       		.byte	0x1
 30222 0146 3F       		.uleb128 0x3f
 30223 0147 19       		.uleb128 0x19
 30224 0148 03       		.uleb128 0x3
 30225 0149 0E       		.uleb128 0xe
 30226 014a 3A       		.uleb128 0x3a
 30227 014b 0B       		.uleb128 0xb
 30228 014c 3B       		.uleb128 0x3b
 30229 014d 0B       		.uleb128 0xb
 30230 014e 27       		.uleb128 0x27
 30231 014f 19       		.uleb128 0x19
 30232 0150 11       		.uleb128 0x11
 30233 0151 01       		.uleb128 0x1
 30234 0152 12       		.uleb128 0x12
 30235 0153 06       		.uleb128 0x6
 30236 0154 40       		.uleb128 0x40
 30237 0155 18       		.uleb128 0x18
 30238 0156 9642     		.uleb128 0x2116
 30239 0158 19       		.uleb128 0x19
 30240 0159 01       		.uleb128 0x1
 30241 015a 13       		.uleb128 0x13
 30242 015b 00       		.byte	0
 30243 015c 00       		.byte	0
 30244 015d 1B       		.uleb128 0x1b
 30245 015e 34       		.uleb128 0x34
 30246 015f 00       		.byte	0
 30247 0160 03       		.uleb128 0x3
 30248 0161 0E       		.uleb128 0xe
 30249 0162 3A       		.uleb128 0x3a
 30250 0163 0B       		.uleb128 0xb
 30251 0164 3B       		.uleb128 0x3b
 30252 0165 0B       		.uleb128 0xb
 30253 0166 49       		.uleb128 0x49
 30254 0167 13       		.uleb128 0x13
 30255 0168 02       		.uleb128 0x2
 30256 0169 18       		.uleb128 0x18
 30257 016a 00       		.byte	0
 30258 016b 00       		.byte	0
 30259 016c 1C       		.uleb128 0x1c
 30260 016d 1D       		.uleb128 0x1d
 30261 016e 01       		.byte	0x1
 30262 016f 31       		.uleb128 0x31
 30263 0170 13       		.uleb128 0x13
 30264 0171 11       		.uleb128 0x11
 30265 0172 01       		.uleb128 0x1
 30266 0173 12       		.uleb128 0x12
 30267 0174 06       		.uleb128 0x6
 30268 0175 58       		.uleb128 0x58
 30269 0176 0B       		.uleb128 0xb
 30270 0177 59       		.uleb128 0x59
 30271 0178 0B       		.uleb128 0xb
 30272 0179 01       		.uleb128 0x1
 30273 017a 13       		.uleb128 0x13
 30274 017b 00       		.byte	0
 30275 017c 00       		.byte	0
 30276 017d 1D       		.uleb128 0x1d
 30277 017e 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 643


 30278 017f 00       		.byte	0
 30279 0180 31       		.uleb128 0x31
 30280 0181 13       		.uleb128 0x13
 30281 0182 02       		.uleb128 0x2
 30282 0183 18       		.uleb128 0x18
 30283 0184 00       		.byte	0
 30284 0185 00       		.byte	0
 30285 0186 1E       		.uleb128 0x1e
 30286 0187 0B       		.uleb128 0xb
 30287 0188 01       		.byte	0x1
 30288 0189 11       		.uleb128 0x11
 30289 018a 01       		.uleb128 0x1
 30290 018b 12       		.uleb128 0x12
 30291 018c 06       		.uleb128 0x6
 30292 018d 00       		.byte	0
 30293 018e 00       		.byte	0
 30294 018f 1F       		.uleb128 0x1f
 30295 0190 34       		.uleb128 0x34
 30296 0191 00       		.byte	0
 30297 0192 31       		.uleb128 0x31
 30298 0193 13       		.uleb128 0x13
 30299 0194 02       		.uleb128 0x2
 30300 0195 18       		.uleb128 0x18
 30301 0196 00       		.byte	0
 30302 0197 00       		.byte	0
 30303 0198 20       		.uleb128 0x20
 30304 0199 1D       		.uleb128 0x1d
 30305 019a 01       		.byte	0x1
 30306 019b 31       		.uleb128 0x31
 30307 019c 13       		.uleb128 0x13
 30308 019d 11       		.uleb128 0x11
 30309 019e 01       		.uleb128 0x1
 30310 019f 12       		.uleb128 0x12
 30311 01a0 06       		.uleb128 0x6
 30312 01a1 58       		.uleb128 0x58
 30313 01a2 0B       		.uleb128 0xb
 30314 01a3 59       		.uleb128 0x59
 30315 01a4 0B       		.uleb128 0xb
 30316 01a5 00       		.byte	0
 30317 01a6 00       		.byte	0
 30318 01a7 21       		.uleb128 0x21
 30319 01a8 2E       		.uleb128 0x2e
 30320 01a9 01       		.byte	0x1
 30321 01aa 3F       		.uleb128 0x3f
 30322 01ab 19       		.uleb128 0x19
 30323 01ac 03       		.uleb128 0x3
 30324 01ad 0E       		.uleb128 0xe
 30325 01ae 3A       		.uleb128 0x3a
 30326 01af 0B       		.uleb128 0xb
 30327 01b0 3B       		.uleb128 0x3b
 30328 01b1 05       		.uleb128 0x5
 30329 01b2 27       		.uleb128 0x27
 30330 01b3 19       		.uleb128 0x19
 30331 01b4 11       		.uleb128 0x11
 30332 01b5 01       		.uleb128 0x1
 30333 01b6 12       		.uleb128 0x12
 30334 01b7 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 644


 30335 01b8 40       		.uleb128 0x40
 30336 01b9 18       		.uleb128 0x18
 30337 01ba 9642     		.uleb128 0x2116
 30338 01bc 19       		.uleb128 0x19
 30339 01bd 01       		.uleb128 0x1
 30340 01be 13       		.uleb128 0x13
 30341 01bf 00       		.byte	0
 30342 01c0 00       		.byte	0
 30343 01c1 22       		.uleb128 0x22
 30344 01c2 34       		.uleb128 0x34
 30345 01c3 00       		.byte	0
 30346 01c4 03       		.uleb128 0x3
 30347 01c5 0E       		.uleb128 0xe
 30348 01c6 3A       		.uleb128 0x3a
 30349 01c7 0B       		.uleb128 0xb
 30350 01c8 3B       		.uleb128 0x3b
 30351 01c9 05       		.uleb128 0x5
 30352 01ca 49       		.uleb128 0x49
 30353 01cb 13       		.uleb128 0x13
 30354 01cc 02       		.uleb128 0x2
 30355 01cd 18       		.uleb128 0x18
 30356 01ce 00       		.byte	0
 30357 01cf 00       		.byte	0
 30358 01d0 23       		.uleb128 0x23
 30359 01d1 21       		.uleb128 0x21
 30360 01d2 00       		.byte	0
 30361 01d3 49       		.uleb128 0x49
 30362 01d4 13       		.uleb128 0x13
 30363 01d5 2F       		.uleb128 0x2f
 30364 01d6 05       		.uleb128 0x5
 30365 01d7 00       		.byte	0
 30366 01d8 00       		.byte	0
 30367 01d9 24       		.uleb128 0x24
 30368 01da 05       		.uleb128 0x5
 30369 01db 00       		.byte	0
 30370 01dc 03       		.uleb128 0x3
 30371 01dd 0E       		.uleb128 0xe
 30372 01de 3A       		.uleb128 0x3a
 30373 01df 0B       		.uleb128 0xb
 30374 01e0 3B       		.uleb128 0x3b
 30375 01e1 05       		.uleb128 0x5
 30376 01e2 49       		.uleb128 0x49
 30377 01e3 13       		.uleb128 0x13
 30378 01e4 02       		.uleb128 0x2
 30379 01e5 18       		.uleb128 0x18
 30380 01e6 00       		.byte	0
 30381 01e7 00       		.byte	0
 30382 01e8 25       		.uleb128 0x25
 30383 01e9 34       		.uleb128 0x34
 30384 01ea 00       		.byte	0
 30385 01eb 03       		.uleb128 0x3
 30386 01ec 08       		.uleb128 0x8
 30387 01ed 3A       		.uleb128 0x3a
 30388 01ee 0B       		.uleb128 0xb
 30389 01ef 3B       		.uleb128 0x3b
 30390 01f0 05       		.uleb128 0x5
 30391 01f1 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 645


 30392 01f2 13       		.uleb128 0x13
 30393 01f3 02       		.uleb128 0x2
 30394 01f4 18       		.uleb128 0x18
 30395 01f5 00       		.byte	0
 30396 01f6 00       		.byte	0
 30397 01f7 26       		.uleb128 0x26
 30398 01f8 2E       		.uleb128 0x2e
 30399 01f9 01       		.byte	0x1
 30400 01fa 3F       		.uleb128 0x3f
 30401 01fb 19       		.uleb128 0x19
 30402 01fc 03       		.uleb128 0x3
 30403 01fd 0E       		.uleb128 0xe
 30404 01fe 3A       		.uleb128 0x3a
 30405 01ff 0B       		.uleb128 0xb
 30406 0200 3B       		.uleb128 0x3b
 30407 0201 05       		.uleb128 0x5
 30408 0202 11       		.uleb128 0x11
 30409 0203 01       		.uleb128 0x1
 30410 0204 12       		.uleb128 0x12
 30411 0205 06       		.uleb128 0x6
 30412 0206 40       		.uleb128 0x40
 30413 0207 18       		.uleb128 0x18
 30414 0208 9642     		.uleb128 0x2116
 30415 020a 19       		.uleb128 0x19
 30416 020b 01       		.uleb128 0x1
 30417 020c 13       		.uleb128 0x13
 30418 020d 00       		.byte	0
 30419 020e 00       		.byte	0
 30420 020f 27       		.uleb128 0x27
 30421 0210 05       		.uleb128 0x5
 30422 0211 00       		.byte	0
 30423 0212 03       		.uleb128 0x3
 30424 0213 08       		.uleb128 0x8
 30425 0214 3A       		.uleb128 0x3a
 30426 0215 0B       		.uleb128 0xb
 30427 0216 3B       		.uleb128 0x3b
 30428 0217 05       		.uleb128 0x5
 30429 0218 49       		.uleb128 0x49
 30430 0219 13       		.uleb128 0x13
 30431 021a 02       		.uleb128 0x2
 30432 021b 18       		.uleb128 0x18
 30433 021c 00       		.byte	0
 30434 021d 00       		.byte	0
 30435 021e 28       		.uleb128 0x28
 30436 021f 2E       		.uleb128 0x2e
 30437 0220 01       		.byte	0x1
 30438 0221 3F       		.uleb128 0x3f
 30439 0222 19       		.uleb128 0x19
 30440 0223 03       		.uleb128 0x3
 30441 0224 0E       		.uleb128 0xe
 30442 0225 3A       		.uleb128 0x3a
 30443 0226 0B       		.uleb128 0xb
 30444 0227 3B       		.uleb128 0x3b
 30445 0228 05       		.uleb128 0x5
 30446 0229 27       		.uleb128 0x27
 30447 022a 19       		.uleb128 0x19
 30448 022b 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 646


 30449 022c 13       		.uleb128 0x13
 30450 022d 11       		.uleb128 0x11
 30451 022e 01       		.uleb128 0x1
 30452 022f 12       		.uleb128 0x12
 30453 0230 06       		.uleb128 0x6
 30454 0231 40       		.uleb128 0x40
 30455 0232 18       		.uleb128 0x18
 30456 0233 9742     		.uleb128 0x2117
 30457 0235 19       		.uleb128 0x19
 30458 0236 01       		.uleb128 0x1
 30459 0237 13       		.uleb128 0x13
 30460 0238 00       		.byte	0
 30461 0239 00       		.byte	0
 30462 023a 29       		.uleb128 0x29
 30463 023b 2E       		.uleb128 0x2e
 30464 023c 01       		.byte	0x1
 30465 023d 3F       		.uleb128 0x3f
 30466 023e 19       		.uleb128 0x19
 30467 023f 03       		.uleb128 0x3
 30468 0240 0E       		.uleb128 0xe
 30469 0241 3A       		.uleb128 0x3a
 30470 0242 0B       		.uleb128 0xb
 30471 0243 3B       		.uleb128 0x3b
 30472 0244 05       		.uleb128 0x5
 30473 0245 27       		.uleb128 0x27
 30474 0246 19       		.uleb128 0x19
 30475 0247 49       		.uleb128 0x49
 30476 0248 13       		.uleb128 0x13
 30477 0249 11       		.uleb128 0x11
 30478 024a 01       		.uleb128 0x1
 30479 024b 12       		.uleb128 0x12
 30480 024c 06       		.uleb128 0x6
 30481 024d 40       		.uleb128 0x40
 30482 024e 18       		.uleb128 0x18
 30483 024f 9642     		.uleb128 0x2116
 30484 0251 19       		.uleb128 0x19
 30485 0252 01       		.uleb128 0x1
 30486 0253 13       		.uleb128 0x13
 30487 0254 00       		.byte	0
 30488 0255 00       		.byte	0
 30489 0256 2A       		.uleb128 0x2a
 30490 0257 2E       		.uleb128 0x2e
 30491 0258 01       		.byte	0x1
 30492 0259 3F       		.uleb128 0x3f
 30493 025a 19       		.uleb128 0x19
 30494 025b 03       		.uleb128 0x3
 30495 025c 0E       		.uleb128 0xe
 30496 025d 3A       		.uleb128 0x3a
 30497 025e 0B       		.uleb128 0xb
 30498 025f 3B       		.uleb128 0x3b
 30499 0260 05       		.uleb128 0x5
 30500 0261 27       		.uleb128 0x27
 30501 0262 19       		.uleb128 0x19
 30502 0263 11       		.uleb128 0x11
 30503 0264 01       		.uleb128 0x1
 30504 0265 12       		.uleb128 0x12
 30505 0266 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 647


 30506 0267 40       		.uleb128 0x40
 30507 0268 18       		.uleb128 0x18
 30508 0269 9742     		.uleb128 0x2117
 30509 026b 19       		.uleb128 0x19
 30510 026c 01       		.uleb128 0x1
 30511 026d 13       		.uleb128 0x13
 30512 026e 00       		.byte	0
 30513 026f 00       		.byte	0
 30514 0270 2B       		.uleb128 0x2b
 30515 0271 2E       		.uleb128 0x2e
 30516 0272 00       		.byte	0
 30517 0273 3F       		.uleb128 0x3f
 30518 0274 19       		.uleb128 0x19
 30519 0275 03       		.uleb128 0x3
 30520 0276 0E       		.uleb128 0xe
 30521 0277 3A       		.uleb128 0x3a
 30522 0278 0B       		.uleb128 0xb
 30523 0279 3B       		.uleb128 0x3b
 30524 027a 05       		.uleb128 0x5
 30525 027b 27       		.uleb128 0x27
 30526 027c 19       		.uleb128 0x19
 30527 027d 11       		.uleb128 0x11
 30528 027e 01       		.uleb128 0x1
 30529 027f 12       		.uleb128 0x12
 30530 0280 06       		.uleb128 0x6
 30531 0281 40       		.uleb128 0x40
 30532 0282 18       		.uleb128 0x18
 30533 0283 9742     		.uleb128 0x2117
 30534 0285 19       		.uleb128 0x19
 30535 0286 00       		.byte	0
 30536 0287 00       		.byte	0
 30537 0288 2C       		.uleb128 0x2c
 30538 0289 2E       		.uleb128 0x2e
 30539 028a 01       		.byte	0x1
 30540 028b 3F       		.uleb128 0x3f
 30541 028c 19       		.uleb128 0x19
 30542 028d 03       		.uleb128 0x3
 30543 028e 0E       		.uleb128 0xe
 30544 028f 3A       		.uleb128 0x3a
 30545 0290 0B       		.uleb128 0xb
 30546 0291 3B       		.uleb128 0x3b
 30547 0292 05       		.uleb128 0x5
 30548 0293 11       		.uleb128 0x11
 30549 0294 01       		.uleb128 0x1
 30550 0295 12       		.uleb128 0x12
 30551 0296 06       		.uleb128 0x6
 30552 0297 40       		.uleb128 0x40
 30553 0298 18       		.uleb128 0x18
 30554 0299 9742     		.uleb128 0x2117
 30555 029b 19       		.uleb128 0x19
 30556 029c 01       		.uleb128 0x1
 30557 029d 13       		.uleb128 0x13
 30558 029e 00       		.byte	0
 30559 029f 00       		.byte	0
 30560 02a0 2D       		.uleb128 0x2d
 30561 02a1 0B       		.uleb128 0xb
 30562 02a2 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 648


 30563 02a3 11       		.uleb128 0x11
 30564 02a4 01       		.uleb128 0x1
 30565 02a5 12       		.uleb128 0x12
 30566 02a6 06       		.uleb128 0x6
 30567 02a7 01       		.uleb128 0x1
 30568 02a8 13       		.uleb128 0x13
 30569 02a9 00       		.byte	0
 30570 02aa 00       		.byte	0
 30571 02ab 2E       		.uleb128 0x2e
 30572 02ac 2E       		.uleb128 0x2e
 30573 02ad 01       		.byte	0x1
 30574 02ae 3F       		.uleb128 0x3f
 30575 02af 19       		.uleb128 0x19
 30576 02b0 03       		.uleb128 0x3
 30577 02b1 0E       		.uleb128 0xe
 30578 02b2 3A       		.uleb128 0x3a
 30579 02b3 0B       		.uleb128 0xb
 30580 02b4 3B       		.uleb128 0x3b
 30581 02b5 05       		.uleb128 0x5
 30582 02b6 49       		.uleb128 0x49
 30583 02b7 13       		.uleb128 0x13
 30584 02b8 11       		.uleb128 0x11
 30585 02b9 01       		.uleb128 0x1
 30586 02ba 12       		.uleb128 0x12
 30587 02bb 06       		.uleb128 0x6
 30588 02bc 40       		.uleb128 0x40
 30589 02bd 18       		.uleb128 0x18
 30590 02be 9642     		.uleb128 0x2116
 30591 02c0 19       		.uleb128 0x19
 30592 02c1 01       		.uleb128 0x1
 30593 02c2 13       		.uleb128 0x13
 30594 02c3 00       		.byte	0
 30595 02c4 00       		.byte	0
 30596 02c5 2F       		.uleb128 0x2f
 30597 02c6 2E       		.uleb128 0x2e
 30598 02c7 00       		.byte	0
 30599 02c8 3F       		.uleb128 0x3f
 30600 02c9 19       		.uleb128 0x19
 30601 02ca 03       		.uleb128 0x3
 30602 02cb 0E       		.uleb128 0xe
 30603 02cc 3A       		.uleb128 0x3a
 30604 02cd 0B       		.uleb128 0xb
 30605 02ce 3B       		.uleb128 0x3b
 30606 02cf 05       		.uleb128 0x5
 30607 02d0 11       		.uleb128 0x11
 30608 02d1 01       		.uleb128 0x1
 30609 02d2 12       		.uleb128 0x12
 30610 02d3 06       		.uleb128 0x6
 30611 02d4 40       		.uleb128 0x40
 30612 02d5 18       		.uleb128 0x18
 30613 02d6 9642     		.uleb128 0x2116
 30614 02d8 19       		.uleb128 0x19
 30615 02d9 00       		.byte	0
 30616 02da 00       		.byte	0
 30617 02db 30       		.uleb128 0x30
 30618 02dc 2E       		.uleb128 0x2e
 30619 02dd 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 649


 30620 02de 3F       		.uleb128 0x3f
 30621 02df 19       		.uleb128 0x19
 30622 02e0 03       		.uleb128 0x3
 30623 02e1 0E       		.uleb128 0xe
 30624 02e2 3A       		.uleb128 0x3a
 30625 02e3 0B       		.uleb128 0xb
 30626 02e4 3B       		.uleb128 0x3b
 30627 02e5 05       		.uleb128 0x5
 30628 02e6 11       		.uleb128 0x11
 30629 02e7 01       		.uleb128 0x1
 30630 02e8 12       		.uleb128 0x12
 30631 02e9 06       		.uleb128 0x6
 30632 02ea 40       		.uleb128 0x40
 30633 02eb 18       		.uleb128 0x18
 30634 02ec 9742     		.uleb128 0x2117
 30635 02ee 19       		.uleb128 0x19
 30636 02ef 00       		.byte	0
 30637 02f0 00       		.byte	0
 30638 02f1 31       		.uleb128 0x31
 30639 02f2 34       		.uleb128 0x34
 30640 02f3 00       		.byte	0
 30641 02f4 03       		.uleb128 0x3
 30642 02f5 0E       		.uleb128 0xe
 30643 02f6 3A       		.uleb128 0x3a
 30644 02f7 0B       		.uleb128 0xb
 30645 02f8 3B       		.uleb128 0x3b
 30646 02f9 05       		.uleb128 0x5
 30647 02fa 49       		.uleb128 0x49
 30648 02fb 13       		.uleb128 0x13
 30649 02fc 3F       		.uleb128 0x3f
 30650 02fd 19       		.uleb128 0x19
 30651 02fe 3C       		.uleb128 0x3c
 30652 02ff 19       		.uleb128 0x19
 30653 0300 00       		.byte	0
 30654 0301 00       		.byte	0
 30655 0302 32       		.uleb128 0x32
 30656 0303 34       		.uleb128 0x34
 30657 0304 00       		.byte	0
 30658 0305 03       		.uleb128 0x3
 30659 0306 0E       		.uleb128 0xe
 30660 0307 3A       		.uleb128 0x3a
 30661 0308 0B       		.uleb128 0xb
 30662 0309 3B       		.uleb128 0x3b
 30663 030a 0B       		.uleb128 0xb
 30664 030b 49       		.uleb128 0x49
 30665 030c 13       		.uleb128 0x13
 30666 030d 3F       		.uleb128 0x3f
 30667 030e 19       		.uleb128 0x19
 30668 030f 02       		.uleb128 0x2
 30669 0310 18       		.uleb128 0x18
 30670 0311 00       		.byte	0
 30671 0312 00       		.byte	0
 30672 0313 00       		.byte	0
 30673              		.section	.debug_aranges,"",%progbits
 30674 0000 A4010000 		.4byte	0x1a4
 30675 0004 0200     		.2byte	0x2
 30676 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 650


 30677 000a 04       		.byte	0x4
 30678 000b 00       		.byte	0
 30679 000c 0000     		.2byte	0
 30680 000e 0000     		.2byte	0
 30681 0010 00000000 		.4byte	.LFB64
 30682 0014 DC040000 		.4byte	.LFE64-.LFB64
 30683 0018 00000000 		.4byte	.LFB65
 30684 001c 22000000 		.4byte	.LFE65-.LFB65
 30685 0020 00000000 		.4byte	.LFB66
 30686 0024 02010000 		.4byte	.LFE66-.LFB66
 30687 0028 00000000 		.4byte	.LFB67
 30688 002c 6E2F0000 		.4byte	.LFE67-.LFB67
 30689 0030 00000000 		.4byte	.LFB68
 30690 0034 C0170000 		.4byte	.LFE68-.LFB68
 30691 0038 00000000 		.4byte	.LFB69
 30692 003c 18140000 		.4byte	.LFE69-.LFB69
 30693 0040 00000000 		.4byte	.LFB70
 30694 0044 F40D0000 		.4byte	.LFE70-.LFB70
 30695 0048 00000000 		.4byte	.LFB71
 30696 004c 84000000 		.4byte	.LFE71-.LFB71
 30697 0050 00000000 		.4byte	.LFB72
 30698 0054 3C1F0000 		.4byte	.LFE72-.LFB72
 30699 0058 00000000 		.4byte	.LFB73
 30700 005c B4030000 		.4byte	.LFE73-.LFB73
 30701 0060 00000000 		.4byte	.LFB74
 30702 0064 38120000 		.4byte	.LFE74-.LFB74
 30703 0068 00000000 		.4byte	.LFB75
 30704 006c C8000000 		.4byte	.LFE75-.LFB75
 30705 0070 00000000 		.4byte	.LFB76
 30706 0074 30010000 		.4byte	.LFE76-.LFB76
 30707 0078 00000000 		.4byte	.LFB77
 30708 007c 74030000 		.4byte	.LFE77-.LFB77
 30709 0080 00000000 		.4byte	.LFB78
 30710 0084 84000000 		.4byte	.LFE78-.LFB78
 30711 0088 00000000 		.4byte	.LFB79
 30712 008c 88000000 		.4byte	.LFE79-.LFB79
 30713 0090 00000000 		.4byte	.LFB80
 30714 0094 A0000000 		.4byte	.LFE80-.LFB80
 30715 0098 00000000 		.4byte	.LFB81
 30716 009c 3E000000 		.4byte	.LFE81-.LFB81
 30717 00a0 00000000 		.4byte	.LFB82
 30718 00a4 2E000000 		.4byte	.LFE82-.LFB82
 30719 00a8 00000000 		.4byte	.LFB83
 30720 00ac 98000000 		.4byte	.LFE83-.LFB83
 30721 00b0 00000000 		.4byte	.LFB84
 30722 00b4 80000000 		.4byte	.LFE84-.LFB84
 30723 00b8 00000000 		.4byte	.LFB85
 30724 00bc 5C000000 		.4byte	.LFE85-.LFB85
 30725 00c0 00000000 		.4byte	.LFB86
 30726 00c4 CC050000 		.4byte	.LFE86-.LFB86
 30727 00c8 00000000 		.4byte	.LFB87
 30728 00cc 30020000 		.4byte	.LFE87-.LFB87
 30729 00d0 00000000 		.4byte	.LFB88
 30730 00d4 28000000 		.4byte	.LFE88-.LFB88
 30731 00d8 00000000 		.4byte	.LFB89
 30732 00dc 78000000 		.4byte	.LFE89-.LFB89
 30733 00e0 00000000 		.4byte	.LFB90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 651


 30734 00e4 B4000000 		.4byte	.LFE90-.LFB90
 30735 00e8 00000000 		.4byte	.LFB91
 30736 00ec B8000000 		.4byte	.LFE91-.LFB91
 30737 00f0 00000000 		.4byte	.LFB92
 30738 00f4 B8000000 		.4byte	.LFE92-.LFB92
 30739 00f8 00000000 		.4byte	.LFB93
 30740 00fc 44020000 		.4byte	.LFE93-.LFB93
 30741 0100 00000000 		.4byte	.LFB94
 30742 0104 BC000000 		.4byte	.LFE94-.LFB94
 30743 0108 00000000 		.4byte	.LFB95
 30744 010c 5C000000 		.4byte	.LFE95-.LFB95
 30745 0110 00000000 		.4byte	.LFB96
 30746 0114 38010000 		.4byte	.LFE96-.LFB96
 30747 0118 00000000 		.4byte	.LFB97
 30748 011c EC000000 		.4byte	.LFE97-.LFB97
 30749 0120 00000000 		.4byte	.LFB98
 30750 0124 64000000 		.4byte	.LFE98-.LFB98
 30751 0128 00000000 		.4byte	.LFB99
 30752 012c A8000000 		.4byte	.LFE99-.LFB99
 30753 0130 00000000 		.4byte	.LFB100
 30754 0134 34000000 		.4byte	.LFE100-.LFB100
 30755 0138 00000000 		.4byte	.LFB101
 30756 013c 20000000 		.4byte	.LFE101-.LFB101
 30757 0140 00000000 		.4byte	.LFB102
 30758 0144 6C000000 		.4byte	.LFE102-.LFB102
 30759 0148 00000000 		.4byte	.LFB103
 30760 014c BC010000 		.4byte	.LFE103-.LFB103
 30761 0150 00000000 		.4byte	.LFB104
 30762 0154 60000000 		.4byte	.LFE104-.LFB104
 30763 0158 00000000 		.4byte	.LFB105
 30764 015c 98050000 		.4byte	.LFE105-.LFB105
 30765 0160 00000000 		.4byte	.LFB106
 30766 0164 8C000000 		.4byte	.LFE106-.LFB106
 30767 0168 00000000 		.4byte	.LFB107
 30768 016c EC000000 		.4byte	.LFE107-.LFB107
 30769 0170 00000000 		.4byte	.LFB108
 30770 0174 5C000000 		.4byte	.LFE108-.LFB108
 30771 0178 00000000 		.4byte	.LFB109
 30772 017c C0000000 		.4byte	.LFE109-.LFB109
 30773 0180 00000000 		.4byte	.LFB110
 30774 0184 0C000000 		.4byte	.LFE110-.LFB110
 30775 0188 00000000 		.4byte	.LFB111
 30776 018c 1A000000 		.4byte	.LFE111-.LFB111
 30777 0190 00000000 		.4byte	.LFB112
 30778 0194 0C000000 		.4byte	.LFE112-.LFB112
 30779 0198 00000000 		.4byte	.LFB113
 30780 019c 0C000000 		.4byte	.LFE113-.LFB113
 30781 01a0 00000000 		.4byte	0
 30782 01a4 00000000 		.4byte	0
 30783              		.section	.debug_ranges,"",%progbits
 30784              	.Ldebug_ranges0:
 30785 0000 00000000 		.4byte	.LFB64
 30786 0004 DC040000 		.4byte	.LFE64
 30787 0008 00000000 		.4byte	.LFB65
 30788 000c 22000000 		.4byte	.LFE65
 30789 0010 00000000 		.4byte	.LFB66
 30790 0014 02010000 		.4byte	.LFE66
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 652


 30791 0018 00000000 		.4byte	.LFB67
 30792 001c 6E2F0000 		.4byte	.LFE67
 30793 0020 00000000 		.4byte	.LFB68
 30794 0024 C0170000 		.4byte	.LFE68
 30795 0028 00000000 		.4byte	.LFB69
 30796 002c 18140000 		.4byte	.LFE69
 30797 0030 00000000 		.4byte	.LFB70
 30798 0034 F40D0000 		.4byte	.LFE70
 30799 0038 00000000 		.4byte	.LFB71
 30800 003c 84000000 		.4byte	.LFE71
 30801 0040 00000000 		.4byte	.LFB72
 30802 0044 3C1F0000 		.4byte	.LFE72
 30803 0048 00000000 		.4byte	.LFB73
 30804 004c B4030000 		.4byte	.LFE73
 30805 0050 00000000 		.4byte	.LFB74
 30806 0054 38120000 		.4byte	.LFE74
 30807 0058 00000000 		.4byte	.LFB75
 30808 005c C8000000 		.4byte	.LFE75
 30809 0060 00000000 		.4byte	.LFB76
 30810 0064 30010000 		.4byte	.LFE76
 30811 0068 00000000 		.4byte	.LFB77
 30812 006c 74030000 		.4byte	.LFE77
 30813 0070 00000000 		.4byte	.LFB78
 30814 0074 84000000 		.4byte	.LFE78
 30815 0078 00000000 		.4byte	.LFB79
 30816 007c 88000000 		.4byte	.LFE79
 30817 0080 00000000 		.4byte	.LFB80
 30818 0084 A0000000 		.4byte	.LFE80
 30819 0088 00000000 		.4byte	.LFB81
 30820 008c 3E000000 		.4byte	.LFE81
 30821 0090 00000000 		.4byte	.LFB82
 30822 0094 2E000000 		.4byte	.LFE82
 30823 0098 00000000 		.4byte	.LFB83
 30824 009c 98000000 		.4byte	.LFE83
 30825 00a0 00000000 		.4byte	.LFB84
 30826 00a4 80000000 		.4byte	.LFE84
 30827 00a8 00000000 		.4byte	.LFB85
 30828 00ac 5C000000 		.4byte	.LFE85
 30829 00b0 00000000 		.4byte	.LFB86
 30830 00b4 CC050000 		.4byte	.LFE86
 30831 00b8 00000000 		.4byte	.LFB87
 30832 00bc 30020000 		.4byte	.LFE87
 30833 00c0 00000000 		.4byte	.LFB88
 30834 00c4 28000000 		.4byte	.LFE88
 30835 00c8 00000000 		.4byte	.LFB89
 30836 00cc 78000000 		.4byte	.LFE89
 30837 00d0 00000000 		.4byte	.LFB90
 30838 00d4 B4000000 		.4byte	.LFE90
 30839 00d8 00000000 		.4byte	.LFB91
 30840 00dc B8000000 		.4byte	.LFE91
 30841 00e0 00000000 		.4byte	.LFB92
 30842 00e4 B8000000 		.4byte	.LFE92
 30843 00e8 00000000 		.4byte	.LFB93
 30844 00ec 44020000 		.4byte	.LFE93
 30845 00f0 00000000 		.4byte	.LFB94
 30846 00f4 BC000000 		.4byte	.LFE94
 30847 00f8 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 653


 30848 00fc 5C000000 		.4byte	.LFE95
 30849 0100 00000000 		.4byte	.LFB96
 30850 0104 38010000 		.4byte	.LFE96
 30851 0108 00000000 		.4byte	.LFB97
 30852 010c EC000000 		.4byte	.LFE97
 30853 0110 00000000 		.4byte	.LFB98
 30854 0114 64000000 		.4byte	.LFE98
 30855 0118 00000000 		.4byte	.LFB99
 30856 011c A8000000 		.4byte	.LFE99
 30857 0120 00000000 		.4byte	.LFB100
 30858 0124 34000000 		.4byte	.LFE100
 30859 0128 00000000 		.4byte	.LFB101
 30860 012c 20000000 		.4byte	.LFE101
 30861 0130 00000000 		.4byte	.LFB102
 30862 0134 6C000000 		.4byte	.LFE102
 30863 0138 00000000 		.4byte	.LFB103
 30864 013c BC010000 		.4byte	.LFE103
 30865 0140 00000000 		.4byte	.LFB104
 30866 0144 60000000 		.4byte	.LFE104
 30867 0148 00000000 		.4byte	.LFB105
 30868 014c 98050000 		.4byte	.LFE105
 30869 0150 00000000 		.4byte	.LFB106
 30870 0154 8C000000 		.4byte	.LFE106
 30871 0158 00000000 		.4byte	.LFB107
 30872 015c EC000000 		.4byte	.LFE107
 30873 0160 00000000 		.4byte	.LFB108
 30874 0164 5C000000 		.4byte	.LFE108
 30875 0168 00000000 		.4byte	.LFB109
 30876 016c C0000000 		.4byte	.LFE109
 30877 0170 00000000 		.4byte	.LFB110
 30878 0174 0C000000 		.4byte	.LFE110
 30879 0178 00000000 		.4byte	.LFB111
 30880 017c 1A000000 		.4byte	.LFE111
 30881 0180 00000000 		.4byte	.LFB112
 30882 0184 0C000000 		.4byte	.LFE112
 30883 0188 00000000 		.4byte	.LFB113
 30884 018c 0C000000 		.4byte	.LFE113
 30885 0190 00000000 		.4byte	0
 30886 0194 00000000 		.4byte	0
 30887              		.section	.debug_line,"",%progbits
 30888              	.Ldebug_line0:
 30889 0000 861C0000 		.section	.debug_str,"MS",%progbits,1
 30889      0200C001 
 30889      00000201 
 30889      FB0E0D00 
 30889      01010101 
 30890              	.LASF200:
 30891 0000 696E666F 		.ascii	"infoSend\000"
 30891      53656E64 
 30891      00
 30892              	.LASF251:
 30893 0009 69645F73 		.ascii	"id_str\000"
 30893      747200
 30894              	.LASF25:
 30895 0010 73697A65 		.ascii	"sizetype\000"
 30895      74797065 
 30895      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 654


 30896              	.LASF33:
 30897 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 30897      494E4954 
 30897      5F4D454D 
 30897      00
 30898              	.LASF315:
 30899 0026 676C5F63 		.ascii	"gl_c\000"
 30899      00
 30900              	.LASF62:
 30901 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 30901      545F4D4F 
 30901      44455F45 
 30901      4D475F46 
 30901      4346535F 
 30902              	.LASF36:
 30903 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 30903      41435449 
 30903      56415445 
 30903      00
 30904              	.LASF186:
 30905 0050 75736572 		.ascii	"user\000"
 30905      00
 30906              	.LASF11:
 30907 0055 696E7433 		.ascii	"int32_t\000"
 30907      325F7400 
 30908              	.LASF336:
 30909 005d 675F7278 		.ascii	"g_rx\000"
 30909      00
 30910              	.LASF97:
 30911 0062 73745F64 		.ascii	"st_data\000"
 30911      61746100 
 30912              	.LASF333:
 30913 006a 675F656D 		.ascii	"g_emg_meas\000"
 30913      675F6D65 
 30913      617300
 30914              	.LASF282:
 30915 0075 77726974 		.ascii	"writeStatus\000"
 30915      65537461 
 30915      74757300 
 30916              	.LASF15:
 30917 0081 75696E74 		.ascii	"uint32\000"
 30917      333200
 30918              	.LASF321:
 30919 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 30919      7365745F 
 30919      62617564 
 30919      72617465 
 30919      00
 30920              	.LASF322:
 30921 0099 6169725F 		.ascii	"air_chambers_control\000"
 30921      6368616D 
 30921      62657273 
 30921      5F636F6E 
 30921      74726F6C 
 30922              	.LASF259:
 30923 00ae 7370695F 		.ascii	"spi_read_delay_str_len\000"
 30923      72656164 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 655


 30923      5F64656C 
 30923      61795F73 
 30923      74725F6C 
 30924              	.LASF216:
 30925 00c5 7061636B 		.ascii	"packet_lenght\000"
 30925      65745F6C 
 30925      656E6768 
 30925      7400
 30926              	.LASF261:
 30927 00d3 70726570 		.ascii	"prepare_generic_info\000"
 30927      6172655F 
 30927      67656E65 
 30927      7269635F 
 30927      696E666F 
 30928              	.LASF133:
 30929 00e8 706F735F 		.ascii	"pos_lim_inf\000"
 30929      6C696D5F 
 30929      696E6600 
 30930              	.LASF226:
 30931 00f4 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 30931      4E445F4D 
 30931      4F544F52 
 30931      5F494458 
 30931      00
 30932              	.LASF308:
 30933 0105 636D645F 		.ascii	"cmd_get_inputs\000"
 30933      6765745F 
 30933      696E7075 
 30933      747300
 30934              	.LASF61:
 30935 0114 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 30935      545F4D4F 
 30935      44455F45 
 30935      4D475F46 
 30935      43465300 
 30936              	.LASF137:
 30937 0128 63757272 		.ascii	"curr_lookup\000"
 30937      5F6C6F6F 
 30937      6B757000 
 30938              	.LASF105:
 30939 0134 72657374 		.ascii	"rest_counter\000"
 30939      5F636F75 
 30939      6E746572 
 30939      00
 30940              	.LASF313:
 30941 0141 636D645F 		.ascii	"cmd_get_imu_readings\000"
 30941      6765745F 
 30941      696D755F 
 30941      72656164 
 30941      696E6773 
 30942              	.LASF175:
 30943 0156 73745F4D 		.ascii	"st_MASTER_spec\000"
 30943      41535445 
 30943      525F7370 
 30943      656300
 30944              	.LASF254:
 30945 0165 69645F73 		.ascii	"id_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 656


 30945      74725F6C 
 30945      656E00
 30946              	.LASF60:
 30947 0170 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 30947      545F4D4F 
 30947      44455F45 
 30947      4D475F49 
 30947      4E544547 
 30948              	.LASF228:
 30949 0188 6D5F746D 		.ascii	"m_tmp\000"
 30949      7000
 30950              	.LASF16:
 30951 018e 696E7438 		.ascii	"int8\000"
 30951      00
 30952              	.LASF205:
 30953 0193 6765745F 		.ascii	"get_param_list\000"
 30953      70617261 
 30953      6D5F6C69 
 30953      737400
 30954              	.LASF312:
 30955 01a2 636D645F 		.ascii	"cmd_get_emg\000"
 30955      6765745F 
 30955      656D6700 
 30956              	.LASF152:
 30957 01ae 73745F65 		.ascii	"st_emg\000"
 30957      6D6700
 30958              	.LASF103:
 30959 01b5 706F7369 		.ascii	"position_hist\000"
 30959      74696F6E 
 30959      5F686973 
 30959      7400
 30960              	.LASF193:
 30961 01c3 74656D70 		.ascii	"temp_value\000"
 30961      5F76616C 
 30961      756500
 30962              	.LASF368:
 30963 01ce 72657375 		.ascii	"result\000"
 30963      6C7400
 30964              	.LASF253:
 30965 01d5 7370695F 		.ascii	"spi_read_delay_str\000"
 30965      72656164 
 30965      5F64656C 
 30965      61795F73 
 30965      747200
 30966              	.LASF100:
 30967 01e8 72656164 		.ascii	"ready\000"
 30967      7900
 30968              	.LASF149:
 30969 01ee 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 30969      6964785F 
 30969      7573655F 
 30969      666F725F 
 30969      636F6E74 
 30970              	.LASF109:
 30971 0206 73745F64 		.ascii	"st_device\000"
 30971      65766963 
 30971      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 657


 30972              	.LASF59:
 30973 0210 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 30973      545F4D4F 
 30973      44455F45 
 30973      4D475F50 
 30973      524F504F 
 30974              	.LASF114:
 30975 022c 7573655F 		.ascii	"use_2nd_motor_flag\000"
 30975      326E645F 
 30975      6D6F746F 
 30975      725F666C 
 30975      616700
 30976              	.LASF304:
 30977 023f 745F7374 		.ascii	"t_start\000"
 30977      61727400 
 30978              	.LASF159:
 30979 0247 72656164 		.ascii	"read_imu_flag\000"
 30979      5F696D75 
 30979      5F666C61 
 30979      6700
 30980              	.LASF340:
 30981 0255 74696D65 		.ascii	"timer_value\000"
 30981      725F7661 
 30981      6C756500 
 30982              	.LASF4:
 30983 0261 6C6F6E67 		.ascii	"long int\000"
 30983      20696E74 
 30983      00
 30984              	.LASF184:
 30985 026a 756E7573 		.ascii	"unused_bytes1\000"
 30985      65645F62 
 30985      79746573 
 30985      3100
 30986              	.LASF324:
 30987 0278 6D6F746F 		.ascii	"motor_idx\000"
 30987      725F6964 
 30987      7800
 30988              	.LASF113:
 30989 0282 72657365 		.ascii	"reset_counters\000"
 30989      745F636F 
 30989      756E7465 
 30989      727300
 30990              	.LASF169:
 30991 0291 75736572 		.ascii	"user_emg\000"
 30991      5F656D67 
 30991      00
 30992              	.LASF291:
 30993 029a 7365745A 		.ascii	"setZeros\000"
 30993      65726F73 
 30993      00
 30994              	.LASF118:
 30995 02a3 756E7573 		.ascii	"unused_bytes\000"
 30995      65645F62 
 30995      79746573 
 30995      00
 30996              	.LASF189:
 30997 02b0 61636365 		.ascii	"accel_value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 658


 30997      6C5F7661 
 30997      6C756500 
 30998              	.LASF209:
 30999 02bc 4E554D5F 		.ascii	"NUM_ITEMS\000"
 30999      4954454D 
 30999      5300
 31000              	.LASF101:
 31001 02c6 73745F63 		.ascii	"st_counters\000"
 31001      6F756E74 
 31001      65727300 
 31002              	.LASF232:
 31003 02d2 4D454D5F 		.ascii	"MEM_P\000"
 31003      5000
 31004              	.LASF19:
 31005 02d8 666C6F61 		.ascii	"float32\000"
 31005      74333200 
 31006              	.LASF319:
 31007 02e0 636D645F 		.ascii	"cmd_get_ADC_map\000"
 31007      6765745F 
 31007      4144435F 
 31007      6D617000 
 31008              	.LASF41:
 31009 02f0 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 31009      4745545F 
 31009      43555252 
 31009      454E5453 
 31009      00
 31010              	.LASF102:
 31011 0301 656D675F 		.ascii	"emg_counter\000"
 31011      636F756E 
 31011      74657200 
 31012              	.LASF320:
 31013 030d 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 31013      6765745F 
 31013      4144435F 
 31013      72617700 
 31014              	.LASF241:
 31015 031d 6175785F 		.ascii	"aux_float2\000"
 31015      666C6F61 
 31015      743200
 31016              	.LASF307:
 31017 0328 636D645F 		.ascii	"cmd_ping\000"
 31017      70696E67 
 31017      00
 31018              	.LASF260:
 31019 0331 7370695F 		.ascii	"spi_delay_menu_len\000"
 31019      64656C61 
 31019      795F6D65 
 31019      6E755F6C 
 31019      656E00
 31020              	.LASF239:
 31021 0344 7365745F 		.ascii	"set_custom_param\000"
 31021      63757374 
 31021      6F6D5F70 
 31021      6172616D 
 31021      00
 31022              	.LASF0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 659


 31023 0355 7369676E 		.ascii	"signed char\000"
 31023      65642063 
 31023      68617200 
 31024              	.LASF168:
 31025 0361 75736572 		.ascii	"user_code_string\000"
 31025      5F636F64 
 31025      655F7374 
 31025      72696E67 
 31025      00
 31026              	.LASF194:
 31027 0372 73745F63 		.ascii	"st_calib\000"
 31027      616C6962 
 31027      00
 31028              	.LASF280:
 31029 037b 6D656D53 		.ascii	"memStore\000"
 31029      746F7265 
 31029      00
 31030              	.LASF359:
 31031 0384 73696E67 		.ascii	"single_imu_size\000"
 31031      6C655F69 
 31031      6D755F73 
 31031      697A6500 
 31032              	.LASF69:
 31033 0394 6D6F746F 		.ascii	"motor_supply_type\000"
 31033      725F7375 
 31033      70706C79 
 31033      5F747970 
 31033      6500
 31034              	.LASF306:
 31035 03a6 72656164 		.ascii	"read_flag\000"
 31035      5F666C61 
 31035      6700
 31036              	.LASF349:
 31037 03b0 4144435F 		.ascii	"ADC_buf\000"
 31037      62756600 
 31038              	.LASF346:
 31039 03b8 696E7465 		.ascii	"interrupt_flag\000"
 31039      72727570 
 31039      745F666C 
 31039      616700
 31040              	.LASF265:
 31041 03c7 73746570 		.ascii	"step\000"
 31041      00
 31042              	.LASF1:
 31043 03cc 756E7369 		.ascii	"unsigned char\000"
 31043      676E6564 
 31043      20636861 
 31043      7200
 31044              	.LASF143:
 31045 03da 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 31045      72657665 
 31045      72735F6D 
 31045      6F746F72 
 31045      5F666C61 
 31046              	.LASF329:
 31047 03f0 675F7265 		.ascii	"g_refNew\000"
 31047      664E6577 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 660


 31047      00
 31048              	.LASF112:
 31049 03f9 72696768 		.ascii	"right_left\000"
 31049      745F6C65 
 31049      667400
 31050              	.LASF29:
 31051 0404 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 31051      53544F52 
 31051      455F4445 
 31051      4641554C 
 31051      545F5041 
 31052              	.LASF141:
 31053 041d 656E636F 		.ascii	"encoder_line\000"
 31053      6465725F 
 31053      6C696E65 
 31053      00
 31054              	.LASF366:
 31055 042a 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 31055      73657273 
 31055      5C4D6174 
 31055      7469615C 
 31055      446F6375 
 31056 0458 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 31056      656E6572 
 31056      69632D46 
 31056      572D5053 
 31056      6F43355C 
 31057              	.LASF255:
 31058 047a 6E5F696D 		.ascii	"n_imu_str_len\000"
 31058      755F7374 
 31058      725F6C65 
 31058      6E00
 31059              	.LASF258:
 31060 0488 696D755F 		.ascii	"imu_table_str_len\000"
 31060      7461626C 
 31060      655F7374 
 31060      725F6C65 
 31060      6E00
 31061              	.LASF278:
 31062 049a 76616C75 		.ascii	"value\000"
 31062      6500
 31063              	.LASF188:
 31064 04a0 666C6167 		.ascii	"flags\000"
 31064      7300
 31065              	.LASF96:
 31066 04a6 70726573 		.ascii	"pressure\000"
 31066      73757265 
 31066      00
 31067              	.LASF37:
 31068 04af 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 31068      4745545F 
 31068      41435449 
 31068      56415445 
 31068      00
 31069              	.LASF22:
 31070 04c0 63686172 		.ascii	"char\000"
 31070      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 661


 31071              	.LASF136:
 31072 04c5 6D61785F 		.ascii	"max_step_pos\000"
 31072      73746570 
 31072      5F706F73 
 31072      00
 31073              	.LASF284:
 31074 04d2 7265745F 		.ascii	"ret_val\000"
 31074      76616C00 
 31075              	.LASF238:
 31076 04da 6D656E75 		.ascii	"menu_idx\000"
 31076      5F696478 
 31076      00
 31077              	.LASF247:
 31078 04e3 73746172 		.ascii	"start_byte\000"
 31078      745F6279 
 31078      746500
 31079              	.LASF244:
 31080 04ee 6E756D5F 		.ascii	"num_mag_cal_params\000"
 31080      6D61675F 
 31080      63616C5F 
 31080      70617261 
 31080      6D7300
 31081              	.LASF142:
 31082 0501 70776D5F 		.ascii	"pwm_rate_limiter\000"
 31082      72617465 
 31082      5F6C696D 
 31082      69746572 
 31082      00
 31083              	.LASF122:
 31084 0512 6B5F645F 		.ascii	"k_d_c\000"
 31084      6300
 31085              	.LASF95:
 31086 0518 73745F66 		.ascii	"st_fb_meas\000"
 31086      625F6D65 
 31086      617300
 31087              	.LASF202:
 31088 0523 7061636B 		.ascii	"packet_string\000"
 31088      65745F73 
 31088      7472696E 
 31088      6700
 31089              	.LASF147:
 31090 0531 6D5F6D75 		.ascii	"m_mult\000"
 31090      6C7400
 31091              	.LASF121:
 31092 0538 6B5F695F 		.ascii	"k_i_c\000"
 31092      6300
 31093              	.LASF281:
 31094 053e 64697370 		.ascii	"displacement\000"
 31094      6C616365 
 31094      6D656E74 
 31094      00
 31095              	.LASF275:
 31096 054b 64617461 		.ascii	"data_length\000"
 31096      5F6C656E 
 31096      67746800 
 31097              	.LASF134:
 31098 0557 706F735F 		.ascii	"pos_lim_sup\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 662


 31098      6C696D5F 
 31098      73757000 
 31099              	.LASF155:
 31100 0563 656D675F 		.ascii	"emg_speed\000"
 31100      73706565 
 31100      6400
 31101              	.LASF173:
 31102 056d 72657374 		.ascii	"rest_vel\000"
 31102      5F76656C 
 31102      00
 31103              	.LASF215:
 31104 0576 7061636B 		.ascii	"packet_data\000"
 31104      65745F64 
 31104      61746100 
 31105              	.LASF355:
 31106 0582 7046696C 		.ascii	"pFile\000"
 31106      6500
 31107              	.LASF166:
 31108 0588 4144435F 		.ascii	"ADC_conf\000"
 31108      636F6E66 
 31108      00
 31109              	.LASF272:
 31110 0591 636F6D6D 		.ascii	"commWrite\000"
 31110      57726974 
 31110      6500
 31111              	.LASF326:
 31112 059b 64656163 		.ascii	"deactivate_slaves\000"
 31112      74697661 
 31112      74655F73 
 31112      6C617665 
 31112      7300
 31113              	.LASF283:
 31114 05ad 70616765 		.ascii	"pages\000"
 31114      7300
 31115              	.LASF287:
 31116 05b3 6D656D49 		.ascii	"memInit\000"
 31116      6E697400 
 31117              	.LASF124:
 31118 05bb 6B5F695F 		.ascii	"k_i_dl\000"
 31118      646C00
 31119              	.LASF38:
 31120 05c2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 31120      5345545F 
 31120      494E5055 
 31120      545300
 31121              	.LASF98:
 31122 05d1 62756666 		.ascii	"buffer\000"
 31122      657200
 31123              	.LASF126:
 31124 05d8 6B5F705F 		.ascii	"k_p_c_dl\000"
 31124      635F646C 
 31124      00
 31125              	.LASF292:
 31126 05e1 636D645F 		.ascii	"cmd_get_measurements\000"
 31126      6765745F 
 31126      6D656173 
 31126      7572656D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 663


 31126      656E7473 
 31127              	.LASF197:
 31128 05f6 73706565 		.ascii	"speed\000"
 31128      6400
 31129              	.LASF201:
 31130 05fc 72785F63 		.ascii	"rx_cmd\000"
 31130      6D6400
 31131              	.LASF84:
 31132 0603 54595045 		.ascii	"TYPE_DOUBLE\000"
 31132      5F444F55 
 31132      424C4500 
 31133              	.LASF331:
 31134 060f 675F6D65 		.ascii	"g_meas\000"
 31134      617300
 31135              	.LASF354:
 31136 0616 456E636F 		.ascii	"Encoder_Check\000"
 31136      6465725F 
 31136      43686563 
 31136      6B00
 31137              	.LASF296:
 31138 0624 6C617374 		.ascii	"last_aux_int16\000"
 31138      5F617578 
 31138      5F696E74 
 31138      313600
 31139              	.LASF73:
 31140 0633 41434B5F 		.ascii	"ACK_ERROR\000"
 31140      4552524F 
 31140      5200
 31141              	.LASF351:
 31142 063d 64617461 		.ascii	"data_encoder_raw\000"
 31142      5F656E63 
 31142      6F646572 
 31142      5F726177 
 31142      00
 31143              	.LASF57:
 31144 064e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 31144      545F4D4F 
 31144      44455F45 
 31144      58544552 
 31144      4E414C00 
 31145              	.LASF230:
 31146 0662 696E6465 		.ascii	"index\000"
 31146      7800
 31147              	.LASF180:
 31148 0668 6D617869 		.ascii	"maximum_pressure_kPa\000"
 31148      6D756D5F 
 31148      70726573 
 31148      73757265 
 31148      5F6B5061 
 31149              	.LASF174:
 31150 067d 72657374 		.ascii	"rest_position_flag\000"
 31150      5F706F73 
 31150      6974696F 
 31150      6E5F666C 
 31150      616700
 31151              	.LASF360:
 31152 0690 675F696D 		.ascii	"g_imu\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 664


 31152      7500
 31153              	.LASF127:
 31154 0696 6B5F695F 		.ascii	"k_i_c_dl\000"
 31154      635F646C 
 31154      00
 31155              	.LASF302:
 31156 069f 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 31156      52656164 
 31156      52657343 
 31156      75727246 
 31156      726F6D53 
 31157              	.LASF250:
 31158 06b5 6D61675F 		.ascii	"mag_param_str\000"
 31158      70617261 
 31158      6D5F7374 
 31158      7200
 31159              	.LASF348:
 31160 06c3 72657365 		.ascii	"reset_PSoC_flag\000"
 31160      745F5053 
 31160      6F435F66 
 31160      6C616700 
 31161              	.LASF85:
 31162 06d3 54595045 		.ascii	"TYPE_STRING\000"
 31162      5F535452 
 31162      494E4700 
 31163              	.LASF68:
 31164 06df 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 31164      5F414E44 
 31164      5F504F53 
 31164      5F434F4E 
 31164      54524F4C 
 31165              	.LASF28:
 31166 06f4 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 31166      53544F52 
 31166      455F5041 
 31166      52414D53 
 31166      00
 31167              	.LASF212:
 31168 0705 50415241 		.ascii	"PARAMS_STR\000"
 31168      4D535F53 
 31168      545200
 31169              	.LASF195:
 31170 0710 656E6162 		.ascii	"enabled\000"
 31170      6C656400 
 31171              	.LASF7:
 31172 0718 6C6F6E67 		.ascii	"long unsigned int\000"
 31172      20756E73 
 31172      69676E65 
 31172      6420696E 
 31172      7400
 31173              	.LASF107:
 31174 072a 746F7461 		.ascii	"total_time_on\000"
 31174      6C5F7469 
 31174      6D655F6F 
 31174      6E00
 31175              	.LASF32:
 31176 0738 434D445F 		.ascii	"CMD_BOOTLOADER\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 665


 31176      424F4F54 
 31176      4C4F4144 
 31176      455200
 31177              	.LASF92:
 31178 0747 686F6C64 		.ascii	"hold_curr\000"
 31178      5F637572 
 31178      7200
 31179              	.LASF294:
 31180 0751 636D645F 		.ascii	"cmd_get_accelerations\000"
 31180      6765745F 
 31180      61636365 
 31180      6C657261 
 31180      74696F6E 
 31181              	.LASF108:
 31182 0767 746F7461 		.ascii	"total_time_rest\000"
 31182      6C5F7469 
 31182      6D655F72 
 31182      65737400 
 31183              	.LASF204:
 31184 0777 7374725F 		.ascii	"str_sd_data\000"
 31184      73645F64 
 31184      61746100 
 31185              	.LASF129:
 31186 0783 61637469 		.ascii	"activ\000"
 31186      7600
 31187              	.LASF214:
 31188 0789 4D454E55 		.ascii	"MENU_STR\000"
 31188      5F535452 
 31188      00
 31189              	.LASF146:
 31190 0792 6D5F6F66 		.ascii	"m_off\000"
 31190      6600
 31191              	.LASF74:
 31192 0798 41434B5F 		.ascii	"ACK_OK\000"
 31192      4F4B00
 31193              	.LASF76:
 31194 079f 54595045 		.ascii	"TYPE_FLAG\000"
 31194      5F464C41 
 31194      4700
 31195              	.LASF192:
 31196 07a9 71756174 		.ascii	"quat_value\000"
 31196      5F76616C 
 31196      756500
 31197              	.LASF246:
 31198 07b4 7061636B 		.ascii	"packet_length\000"
 31198      65745F6C 
 31198      656E6774 
 31198      6800
 31199              	.LASF171:
 31200 07c2 72657374 		.ascii	"rest_pos\000"
 31200      5F706F73 
 31200      00
 31201              	.LASF87:
 31202 07cb 63757272 		.ascii	"curr\000"
 31202      00
 31203              	.LASF139:
 31204 07d0 696E7075 		.ascii	"input_mode\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 666


 31204      745F6D6F 
 31204      646500
 31205              	.LASF66:
 31206 07db 434F4E54 		.ascii	"CONTROL_PWM\000"
 31206      524F4C5F 
 31206      50574D00 
 31207              	.LASF43:
 31208 07e7 434D445F 		.ascii	"CMD_GET_EMG\000"
 31208      4745545F 
 31208      454D4700 
 31209              	.LASF288:
 31210 07f3 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 31210      6E69745F 
 31210      536F6674 
 31210      48616E64 
 31210      50726F00 
 31211              	.LASF31:
 31212 0807 434D445F 		.ascii	"CMD_GET_INFO\000"
 31212      4745545F 
 31212      494E464F 
 31212      00
 31213              	.LASF242:
 31214 0814 6765745F 		.ascii	"get_IMU_param_list\000"
 31214      494D555F 
 31214      70617261 
 31214      6D5F6C69 
 31214      737400
 31215              	.LASF316:
 31216 0827 73696E67 		.ascii	"single_packet\000"
 31216      6C655F70 
 31216      61636B65 
 31216      7400
 31217              	.LASF245:
 31218 0835 66697273 		.ascii	"first_imu_parameter\000"
 31218      745F696D 
 31218      755F7061 
 31218      72616D65 
 31218      74657200 
 31219              	.LASF42:
 31220 0849 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 31220      4745545F 
 31220      43555252 
 31220      5F414E44 
 31220      5F4D4541 
 31221              	.LASF364:
 31222 085f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 31222      43313120 
 31222      352E342E 
 31222      31203230 
 31222      31363036 
 31223 0892 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 31223      20726576 
 31223      6973696F 
 31223      6E203233 
 31223      37373135 
 31224 08c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 31224      66756E63 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 667


 31224      74696F6E 
 31224      2D736563 
 31224      74696F6E 
 31225              	.LASF89:
 31226 08ed 73745F72 		.ascii	"st_ref\000"
 31226      656600
 31227              	.LASF47:
 31228 08f4 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 31228      5345545F 
 31228      43554646 
 31228      5F494E50 
 31228      55545300 
 31229              	.LASF170:
 31230 0908 73745F53 		.ascii	"st_SH_spec\000"
 31230      485F7370 
 31230      656300
 31231              	.LASF339:
 31232 0913 63616C69 		.ascii	"calib\000"
 31232      6200
 31233              	.LASF6:
 31234 0919 5F5F7569 		.ascii	"__uint32_t\000"
 31234      6E743332 
 31234      5F7400
 31235              	.LASF8:
 31236 0924 6C6F6E67 		.ascii	"long long int\000"
 31236      206C6F6E 
 31236      6720696E 
 31236      7400
 31237              	.LASF64:
 31238 0932 53485F63 		.ascii	"SH_control_mode\000"
 31238      6F6E7472 
 31238      6F6C5F6D 
 31238      6F646500 
 31239              	.LASF78:
 31240 0942 54595045 		.ascii	"TYPE_UINT8\000"
 31240      5F55494E 
 31240      543800
 31241              	.LASF300:
 31242 094d 636D645F 		.ascii	"cmd_get_currents\000"
 31242      6765745F 
 31242      63757272 
 31242      656E7473 
 31242      00
 31243              	.LASF71:
 31244 095e 4D41584F 		.ascii	"MAXON_12V\000"
 31244      4E5F3132 
 31244      5600
 31245              	.LASF347:
 31246 0968 6368616E 		.ascii	"change_ext_ref_flag\000"
 31246      67655F65 
 31246      78745F72 
 31246      65665F66 
 31246      6C616700 
 31247              	.LASF21:
 31248 097c 646F7562 		.ascii	"double\000"
 31248      6C6500
 31249              	.LASF145:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 668


 31250 0983 456E635F 		.ascii	"Enc_raw_read_conf\000"
 31250      7261775F 
 31250      72656164 
 31250      5F636F6E 
 31250      6600
 31251              	.LASF198:
 31252 0995 72657065 		.ascii	"repetitions\000"
 31252      74697469 
 31252      6F6E7300 
 31253              	.LASF135:
 31254 09a1 6D61785F 		.ascii	"max_step_neg\000"
 31254      73746570 
 31254      5F6E6567 
 31254      00
 31255              	.LASF177:
 31256 09ae 736C6176 		.ascii	"slave_ID\000"
 31256      655F4944 
 31256      00
 31257              	.LASF345:
 31258 09b7 72657365 		.ascii	"reset_last_value_flag\000"
 31258      745F6C61 
 31258      73745F76 
 31258      616C7565 
 31258      5F666C61 
 31259              	.LASF213:
 31260 09cd 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 31260      4F4D5F50 
 31260      4152414D 
 31260      5F474554 
 31260      00
 31261              	.LASF20:
 31262 09de 666C6F61 		.ascii	"float\000"
 31262      7400
 31263              	.LASF161:
 31264 09e4 494D555F 		.ascii	"IMU_conf\000"
 31264      636F6E66 
 31264      00
 31265              	.LASF231:
 31266 09ed 50415241 		.ascii	"PARAM_IDX\000"
 31266      4D5F4944 
 31266      5800
 31267              	.LASF119:
 31268 09f7 73745F6D 		.ascii	"st_motor\000"
 31268      6F746F72 
 31268      00
 31269              	.LASF227:
 31270 0a00 6D5F6164 		.ascii	"m_addr\000"
 31270      647200
 31271              	.LASF338:
 31272 0a07 635F6D65 		.ascii	"c_mem\000"
 31272      6D00
 31273              	.LASF274:
 31274 0a0d 64617461 		.ascii	"data_array\000"
 31274      5F617272 
 31274      617900
 31275              	.LASF10:
 31276 0a18 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 669


 31276      676E6564 
 31276      20696E74 
 31276      00
 31277              	.LASF289:
 31278 0a25 6D656D49 		.ascii	"memInit_Master\000"
 31278      6E69745F 
 31278      4D617374 
 31278      657200
 31279              	.LASF277:
 31280 0a34 73656E64 		.ascii	"sendAcknowledgment\000"
 31280      41636B6E 
 31280      6F776C65 
 31280      64676D65 
 31280      6E7400
 31281              	.LASF267:
 31282 0a47 70726570 		.ascii	"prepare_SD_legend\000"
 31282      6172655F 
 31282      53445F6C 
 31282      6567656E 
 31282      6400
 31283              	.LASF361:
 31284 0a59 4D616743 		.ascii	"MagCal\000"
 31284      616C00
 31285              	.LASF55:
 31286 0a60 53485F63 		.ascii	"SH_command\000"
 31286      6F6D6D61 
 31286      6E6400
 31287              	.LASF80:
 31288 0a6b 54595045 		.ascii	"TYPE_UINT16\000"
 31288      5F55494E 
 31288      54313600 
 31289              	.LASF183:
 31290 0a77 666C6167 		.ascii	"flag\000"
 31290      00
 31291              	.LASF295:
 31292 0a7c 636D645F 		.ascii	"cmd_set_inputs\000"
 31292      7365745F 
 31292      696E7075 
 31292      747300
 31293              	.LASF140:
 31294 0a8b 636F6E74 		.ascii	"control_mode\000"
 31294      726F6C5F 
 31294      6D6F6465 
 31294      00
 31295              	.LASF310:
 31296 0a98 6F66665F 		.ascii	"off_1\000"
 31296      3100
 31297              	.LASF58:
 31298 0a9e 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 31298      545F4D4F 
 31298      44455F45 
 31298      4E434F44 
 31298      45523300 
 31299              	.LASF273:
 31300 0ab2 636F6D6D 		.ascii	"commWriteID\000"
 31300      57726974 
 31300      65494400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 670


 31301              	.LASF51:
 31302 0abe 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 31302      4745545F 
 31302      454E434F 
 31302      4445525F 
 31302      434F4E46 
 31303              	.LASF158:
 31304 0ad3 73745F69 		.ascii	"st_imu\000"
 31304      6D7500
 31305              	.LASF298:
 31306 0ada 636D645F 		.ascii	"cmd_get_activate\000"
 31306      6765745F 
 31306      61637469 
 31306      76617465 
 31306      00
 31307              	.LASF218:
 31308 0aeb 73747269 		.ascii	"string_lenght\000"
 31308      6E675F6C 
 31308      656E6768 
 31308      7400
 31309              	.LASF83:
 31310 0af9 54595045 		.ascii	"TYPE_FLOAT\000"
 31310      5F464C4F 
 31310      415400
 31311              	.LASF235:
 31312 0b04 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 31312      4F4D5F50 
 31312      4152414D 
 31312      5F534554 
 31312      5F4C4953 
 31313              	.LASF210:
 31314 0b1a 4E554D5F 		.ascii	"NUM_STRUCT\000"
 31314      53545255 
 31314      435400
 31315              	.LASF240:
 31316 0b25 6175785F 		.ascii	"aux_uchar\000"
 31316      75636861 
 31316      7200
 31317              	.LASF94:
 31318 0b2f 6164645F 		.ascii	"add_emg\000"
 31318      656D6700 
 31319              	.LASF79:
 31320 0b37 54595045 		.ascii	"TYPE_INT16\000"
 31320      5F494E54 
 31320      313600
 31321              	.LASF222:
 31322 0b42 6175785F 		.ascii	"aux_uint16\000"
 31322      75696E74 
 31322      313600
 31323              	.LASF153:
 31324 0b4d 656D675F 		.ascii	"emg_threshold\000"
 31324      74687265 
 31324      73686F6C 
 31324      6400
 31325              	.LASF46:
 31326 0b5b 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 31326      4745545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 671


 31326      43555252 
 31326      5F444946 
 31326      4600
 31327              	.LASF104:
 31328 0b6d 63757272 		.ascii	"current_hist\000"
 31328      656E745F 
 31328      68697374 
 31328      00
 31329              	.LASF67:
 31330 0b7a 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 31330      524F4C5F 
 31330      43555252 
 31330      454E5400 
 31331              	.LASF24:
 31332 0b8a 6C6F6E67 		.ascii	"long double\000"
 31332      20646F75 
 31332      626C6500 
 31333              	.LASF82:
 31334 0b96 54595045 		.ascii	"TYPE_UINT32\000"
 31334      5F55494E 
 31334      54333200 
 31335              	.LASF178:
 31336 0ba2 73745F46 		.ascii	"st_FB_spec\000"
 31336      425F7370 
 31336      656300
 31337              	.LASF93:
 31338 0bad 73745F65 		.ascii	"st_emg_meas\000"
 31338      6D675F6D 
 31338      65617300 
 31339              	.LASF207:
 31340 0bb9 5641525F 		.ascii	"VAR_P\000"
 31340      5000
 31341              	.LASF234:
 31342 0bbf 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 31342      4F4D5F50 
 31342      4152414D 
 31342      5F474554 
 31342      5F4C4953 
 31343              	.LASF150:
 31344 0bd5 6D6F746F 		.ascii	"motor_handle_ratio\000"
 31344      725F6861 
 31344      6E646C65 
 31344      5F726174 
 31344      696F00
 31345              	.LASF276:
 31346 0be8 63686563 		.ascii	"checksum\000"
 31346      6B73756D 
 31346      00
 31347              	.LASF330:
 31348 0bf1 675F7265 		.ascii	"g_refOld\000"
 31348      664F6C64 
 31348      00
 31349              	.LASF35:
 31350 0bfa 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 31350      48414E44 
 31350      5F43414C 
 31350      49425241 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 672


 31350      544500
 31351              	.LASF190:
 31352 0c0d 6779726F 		.ascii	"gyro_value\000"
 31352      5F76616C 
 31352      756500
 31353              	.LASF163:
 31354 0c18 63757272 		.ascii	"curr_time\000"
 31354      5F74696D 
 31354      6500
 31355              	.LASF148:
 31356 0c22 646F7562 		.ascii	"double_encoder_on_off\000"
 31356      6C655F65 
 31356      6E636F64 
 31356      65725F6F 
 31356      6E5F6F66 
 31357              	.LASF323:
 31358 0c38 64726976 		.ascii	"drive_slave\000"
 31358      655F736C 
 31358      61766500 
 31359              	.LASF160:
 31360 0c44 5350495F 		.ascii	"SPI_read_delay\000"
 31360      72656164 
 31360      5F64656C 
 31360      617900
 31361              	.LASF72:
 31362 0c53 61636B6E 		.ascii	"acknowledgment_values\000"
 31362      6F776C65 
 31362      64676D65 
 31362      6E745F76 
 31362      616C7565 
 31363              	.LASF225:
 31364 0c69 4D4F544F 		.ascii	"MOTOR_IDX\000"
 31364      525F4944 
 31364      5800
 31365              	.LASF286:
 31366 0c73 6D656D52 		.ascii	"memRestore\000"
 31366      6573746F 
 31366      726500
 31367              	.LASF248:
 31368 0c7e 6E5F696D 		.ascii	"n_imu_str\000"
 31368      755F7374 
 31368      7200
 31369              	.LASF262:
 31370 0c88 696E666F 		.ascii	"info_string\000"
 31370      5F737472 
 31370      696E6700 
 31371              	.LASF268:
 31372 0c94 70726570 		.ascii	"prepare_SD_info\000"
 31372      6172655F 
 31372      53445F69 
 31372      6E666F00 
 31373              	.LASF9:
 31374 0ca4 6C6F6E67 		.ascii	"long long unsigned int\000"
 31374      206C6F6E 
 31374      6720756E 
 31374      7369676E 
 31374      65642069 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 673


 31375              	.LASF81:
 31376 0cbb 54595045 		.ascii	"TYPE_INT32\000"
 31376      5F494E54 
 31376      333200
 31377              	.LASF224:
 31378 0cc6 6175785F 		.ascii	"aux_uint32\000"
 31378      75696E74 
 31378      333200
 31379              	.LASF99:
 31380 0cd1 6C656E67 		.ascii	"length\000"
 31380      746800
 31381              	.LASF236:
 31382 0cd8 55534552 		.ascii	"USER_ID_PARAM\000"
 31382      5F49445F 
 31382      50415241 
 31382      4D00
 31383              	.LASF187:
 31384 0ce6 73745F69 		.ascii	"st_imu_data\000"
 31384      6D755F64 
 31384      61746100 
 31385              	.LASF191:
 31386 0cf2 6D61675F 		.ascii	"mag_value\000"
 31386      76616C75 
 31386      6500
 31387              	.LASF88:
 31388 0cfc 6F6E6F66 		.ascii	"onoff\000"
 31388      6600
 31389              	.LASF45:
 31390 0d02 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 31390      4745545F 
 31390      41434345 
 31390      4C00
 31391              	.LASF293:
 31392 0d10 636D645F 		.ascii	"cmd_get_velocities\000"
 31392      6765745F 
 31392      76656C6F 
 31392      63697469 
 31392      657300
 31393              	.LASF285:
 31394 0d23 6D656D52 		.ascii	"memRecall\000"
 31394      6563616C 
 31394      6C00
 31395              	.LASF341:
 31396 0d2d 74696D65 		.ascii	"timer_value0\000"
 31396      725F7661 
 31396      6C756530 
 31396      00
 31397              	.LASF48:
 31398 0d3a 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 31398      5345545F 
 31398      42415544 
 31398      52415445 
 31398      00
 31399              	.LASF120:
 31400 0d4b 6B5F705F 		.ascii	"k_p_c\000"
 31400      6300
 31401              	.LASF252:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 674


 31402 0d51 696D755F 		.ascii	"imu_table_str\000"
 31402      7461626C 
 31402      655F7374 
 31402      7200
 31403              	.LASF342:
 31404 0d5f 6465765F 		.ascii	"dev_tension\000"
 31404      74656E73 
 31404      696F6E00 
 31405              	.LASF131:
 31406 0d6b 6D6F746F 		.ascii	"motor_driver_type\000"
 31406      725F6472 
 31406      69766572 
 31406      5F747970 
 31406      6500
 31407              	.LASF311:
 31408 0d7d 6D756C74 		.ascii	"mult_1\000"
 31408      5F3100
 31409              	.LASF264:
 31410 0d84 70726570 		.ascii	"prepare_counter_info\000"
 31410      6172655F 
 31410      636F756E 
 31410      7465725F 
 31410      696E666F 
 31411              	.LASF23:
 31412 0d99 72656738 		.ascii	"reg8\000"
 31412      00
 31413              	.LASF181:
 31414 0d9e 70726F70 		.ascii	"prop_err_fb_gain\000"
 31414      5F657272 
 31414      5F66625F 
 31414      6761696E 
 31414      00
 31415              	.LASF270:
 31416 0daf 636F6D6D 		.ascii	"commWrite_old_id\000"
 31416      57726974 
 31416      655F6F6C 
 31416      645F6964 
 31416      00
 31417              	.LASF229:
 31418 0dc0 6D616E61 		.ascii	"manage_param_list\000"
 31418      67655F70 
 31418      6172616D 
 31418      5F6C6973 
 31418      7400
 31419              	.LASF30:
 31420 0dd2 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 31420      52455354 
 31420      4F52455F 
 31420      50415241 
 31420      4D5300
 31421              	.LASF266:
 31422 0de5 70726570 		.ascii	"prepare_SD_param_info\000"
 31422      6172655F 
 31422      53445F70 
 31422      6172616D 
 31422      5F696E66 
 31423              	.LASF303:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 675


 31424 0dfb 63757272 		.ascii	"curr_diff\000"
 31424      5F646966 
 31424      6600
 31425              	.LASF176:
 31426 0e05 736C6176 		.ascii	"slave_comm_active\000"
 31426      655F636F 
 31426      6D6D5F61 
 31426      63746976 
 31426      6500
 31427              	.LASF271:
 31428 0e17 6F6C645F 		.ascii	"old_id\000"
 31428      696400
 31429              	.LASF367:
 31430 0e1e 5F5F5245 		.ascii	"__REV16\000"
 31430      56313600 
 31431              	.LASF352:
 31432 0e26 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 31432      636F6465 
 31432      725F4C69 
 31432      6E655F43 
 31432      6F6E6E65 
 31433              	.LASF117:
 31434 0e3f 6465765F 		.ascii	"dev_type\000"
 31434      74797065 
 31434      00
 31435              	.LASF167:
 31436 0e48 73745F75 		.ascii	"st_user\000"
 31436      73657200 
 31437              	.LASF299:
 31438 0e50 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 31438      6765745F 
 31438      63757272 
 31438      5F616E64 
 31438      5F6D6561 
 31439              	.LASF151:
 31440 0e66 67656172 		.ascii	"gears_params\000"
 31440      735F7061 
 31440      72616D73 
 31440      00
 31441              	.LASF162:
 31442 0e73 73745F65 		.ascii	"st_expansion\000"
 31442      7870616E 
 31442      73696F6E 
 31442      00
 31443              	.LASF156:
 31444 0e80 656D675F 		.ascii	"emg_calibration_flag\000"
 31444      63616C69 
 31444      62726174 
 31444      696F6E5F 
 31444      666C6167 
 31445              	.LASF90:
 31446 0e95 73745F6D 		.ascii	"st_meas\000"
 31446      65617300 
 31447              	.LASF54:
 31448 0e9d 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 31448      4745545F 
 31448      4144435F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 676


 31448      52415700 
 31449              	.LASF70:
 31450 0ead 4D41584F 		.ascii	"MAXON_24V\000"
 31450      4E5F3234 
 31450      5600
 31451              	.LASF63:
 31452 0eb7 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 31452      545F4D4F 
 31452      44455F45 
 31452      4D475F50 
 31452      524F504F 
 31453              	.LASF50:
 31454 0ed6 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 31454      4745545F 
 31454      494D555F 
 31454      50415241 
 31454      4D00
 31455              	.LASF335:
 31456 0ee8 675F6662 		.ascii	"g_fb_meas\000"
 31456      5F6D6561 
 31456      7300
 31457              	.LASF52:
 31458 0ef2 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 31458      4745545F 
 31458      454E434F 
 31458      4445525F 
 31458      52415700 
 31459              	.LASF309:
 31460 0f06 636D645F 		.ascii	"cmd_store_params\000"
 31460      73746F72 
 31460      655F7061 
 31460      72616D73 
 31460      00
 31461              	.LASF337:
 31462 0f17 675F6D65 		.ascii	"g_mem\000"
 31462      6D00
 31463              	.LASF40:
 31464 0f1d 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 31464      4745545F 
 31464      4D454153 
 31464      5552454D 
 31464      454E5453 
 31465              	.LASF318:
 31466 0f32 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 31466      6765745F 
 31466      656E636F 
 31466      6465725F 
 31466      72617700 
 31467              	.LASF13:
 31468 0f46 75696E74 		.ascii	"uint8\000"
 31468      3800
 31469              	.LASF199:
 31470 0f4c 636F6D6D 		.ascii	"commProcess\000"
 31470      50726F63 
 31470      65737300 
 31471              	.LASF2:
 31472 0f58 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 677


 31472      7420696E 
 31472      7400
 31473              	.LASF290:
 31474 0f62 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 31474      6E69745F 
 31474      41697243 
 31474      68616D62 
 31474      65727346 
 31475              	.LASF256:
 31476 0f78 6964735F 		.ascii	"ids_str_len\000"
 31476      7374725F 
 31476      6C656E00 
 31477              	.LASF125:
 31478 0f84 6B5F645F 		.ascii	"k_d_dl\000"
 31478      646C00
 31479              	.LASF217:
 31480 0f8b 6964785F 		.ascii	"idx_menu\000"
 31480      6D656E75 
 31480      00
 31481              	.LASF185:
 31482 0f94 6D6F746F 		.ascii	"motor\000"
 31482      7200
 31483              	.LASF356:
 31484 0f9a 4E5F494D 		.ascii	"N_IMU_Connected\000"
 31484      555F436F 
 31484      6E6E6563 
 31484      74656400 
 31485              	.LASF39:
 31486 0faa 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 31486      4745545F 
 31486      494E5055 
 31486      545300
 31487              	.LASF110:
 31488 0fb9 68775F6D 		.ascii	"hw_maint_date\000"
 31488      61696E74 
 31488      5F646174 
 31488      6500
 31489              	.LASF249:
 31490 0fc7 6964735F 		.ascii	"ids_str\000"
 31490      73747200 
 31491              	.LASF53:
 31492 0fcf 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 31492      4745545F 
 31492      4144435F 
 31492      434F4E46 
 31492      00
 31493              	.LASF27:
 31494 0fe0 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 31494      5345545F 
 31494      5A45524F 
 31494      5300
 31495              	.LASF257:
 31496 0fee 6D61675F 		.ascii	"mag_param_str_len\000"
 31496      70617261 
 31496      6D5F7374 
 31496      725F6C65 
 31496      6E00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 678


 31497              	.LASF243:
 31498 1000 6E756D5F 		.ascii	"num_imus_id_params\000"
 31498      696D7573 
 31498      5F69645F 
 31498      70617261 
 31498      6D7300
 31499              	.LASF221:
 31500 1013 6175785F 		.ascii	"aux_int16\000"
 31500      696E7431 
 31500      3600
 31501              	.LASF363:
 31502 101d 45455052 		.ascii	"EEPROM_ADDR\000"
 31502      4F4D5F41 
 31502      44445200 
 31503              	.LASF111:
 31504 1029 73746174 		.ascii	"stats_period_begin_date\000"
 31504      735F7065 
 31504      72696F64 
 31504      5F626567 
 31504      696E5F64 
 31505              	.LASF358:
 31506 1041 696D7573 		.ascii	"imus_data_size\000"
 31506      5F646174 
 31506      615F7369 
 31506      7A6500
 31507              	.LASF327:
 31508 1050 49544D5F 		.ascii	"ITM_RxBuffer\000"
 31508      52784275 
 31508      66666572 
 31508      00
 31509              	.LASF44:
 31510 105d 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 31510      4745545F 
 31510      56454C4F 
 31510      43495449 
 31510      455300
 31511              	.LASF344:
 31512 1070 706F775F 		.ascii	"pow_tension\000"
 31512      74656E73 
 31512      696F6E00 
 31513              	.LASF34:
 31514 107c 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 31514      4745545F 
 31514      50415241 
 31514      4D5F4C49 
 31514      535400
 31515              	.LASF325:
 31516 108f 73746F70 		.ascii	"stop_feedback\000"
 31516      5F666565 
 31516      64626163 
 31516      6B00
 31517              	.LASF75:
 31518 109d 64617461 		.ascii	"data_types\000"
 31518      5F747970 
 31518      657300
 31519              	.LASF17:
 31520 10a8 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 679


 31520      3600
 31521              	.LASF164:
 31522 10ae 72656164 		.ascii	"read_exp_port_flag\000"
 31522      5F657870 
 31522      5F706F72 
 31522      745F666C 
 31522      616700
 31523              	.LASF157:
 31524 10c1 73776974 		.ascii	"switch_emg\000"
 31524      63685F65 
 31524      6D6700
 31525              	.LASF130:
 31526 10cc 61637469 		.ascii	"activate_pwm_rescaling\000"
 31526      76617465 
 31526      5F70776D 
 31526      5F726573 
 31526      63616C69 
 31527              	.LASF123:
 31528 10e3 6B5F705F 		.ascii	"k_p_dl\000"
 31528      646C00
 31529              	.LASF91:
 31530 10ea 65737469 		.ascii	"estim_curr\000"
 31530      6D5F6375 
 31530      727200
 31531              	.LASF343:
 31532 10f5 6465765F 		.ascii	"dev_pwm_limit\000"
 31532      70776D5F 
 31532      6C696D69 
 31532      7400
 31533              	.LASF165:
 31534 1103 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 31534      5F414443 
 31534      5F73656E 
 31534      736F7273 
 31534      5F706F72 
 31535              	.LASF353:
 31536 111e 456E636F 		.ascii	"Encoder_Value\000"
 31536      6465725F 
 31536      56616C75 
 31536      6500
 31537              	.LASF317:
 31538 112c 636D645F 		.ascii	"cmd_get_encoder_map\000"
 31538      6765745F 
 31538      656E636F 
 31538      6465725F 
 31538      6D617000 
 31539              	.LASF116:
 31540 1140 75736572 		.ascii	"user_id\000"
 31540      5F696400 
 31541              	.LASF12:
 31542 1148 75696E74 		.ascii	"uint32_t\000"
 31542      33325F74 
 31542      00
 31543              	.LASF220:
 31544 1151 6175785F 		.ascii	"aux_float\000"
 31544      666C6F61 
 31544      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 680


 31545              	.LASF357:
 31546 115b 494D555F 		.ascii	"IMU_connected\000"
 31546      636F6E6E 
 31546      65637465 
 31546      6400
 31547              	.LASF211:
 31548 1169 4E554D5F 		.ascii	"NUM_MENU\000"
 31548      4D454E55 
 31548      00
 31549              	.LASF223:
 31550 1172 6175785F 		.ascii	"aux_int32\000"
 31550      696E7433 
 31550      3200
 31551              	.LASF115:
 31552 117c 62617564 		.ascii	"baud_rate\000"
 31552      5F726174 
 31552      6500
 31553              	.LASF305:
 31554 1186 745F656E 		.ascii	"t_end\000"
 31554      6400
 31555              	.LASF301:
 31556 118c 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 31556      6765745F 
 31556      63757272 
 31556      656E7473 
 31556      5F666F72 
 31557              	.LASF206:
 31558 11a6 696E666F 		.ascii	"info_type\000"
 31558      5F747970 
 31558      6500
 31559              	.LASF49:
 31560 11b0 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 31560      4745545F 
 31560      494D555F 
 31560      52454144 
 31560      494E4753 
 31561              	.LASF279:
 31562 11c5 4C435243 		.ascii	"LCRChecksum\000"
 31562      6865636B 
 31562      73756D00 
 31563              	.LASF314:
 31564 11d1 6B5F696D 		.ascii	"k_imu\000"
 31564      7500
 31565              	.LASF3:
 31566 11d7 73686F72 		.ascii	"short unsigned int\000"
 31566      7420756E 
 31566      7369676E 
 31566      65642069 
 31566      6E7400
 31567              	.LASF144:
 31568 11ea 73745F65 		.ascii	"st_encoder\000"
 31568      6E636F64 
 31568      657200
 31569              	.LASF179:
 31570 11f5 6D61785F 		.ascii	"max_residual_current\000"
 31570      72657369 
 31570      6475616C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 681


 31570      5F637572 
 31570      72656E74 
 31571              	.LASF263:
 31572 120a 454E435F 		.ascii	"ENC_L\000"
 31572      4C00
 31573              	.LASF182:
 31574 1210 73745F65 		.ascii	"st_eeprom\000"
 31574      6570726F 
 31574      6D00
 31575              	.LASF208:
 31576 121a 54595045 		.ascii	"TYPES\000"
 31576      5300
 31577              	.LASF328:
 31578 1220 675F7265 		.ascii	"g_ref\000"
 31578      6600
 31579              	.LASF18:
 31580 1226 696E7433 		.ascii	"int32\000"
 31580      3200
 31581              	.LASF350:
 31582 122c 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 31582      4F465F41 
 31582      4E414C4F 
 31582      475F494E 
 31582      50555453 
 31583              	.LASF203:
 31584 1241 696E666F 		.ascii	"infoGet\000"
 31584      47657400 
 31585              	.LASF362:
 31586 1249 6D617374 		.ascii	"master_mode\000"
 31586      65725F6D 
 31586      6F646500 
 31587              	.LASF86:
 31588 1255 46535F46 		.ascii	"FS_FILE\000"
 31588      494C4500 
 31589              	.LASF132:
 31590 125d 706F735F 		.ascii	"pos_lim_flag\000"
 31590      6C696D5F 
 31590      666C6167 
 31590      00
 31591              	.LASF332:
 31592 126a 675F6D65 		.ascii	"g_measOld\000"
 31592      61734F6C 
 31592      6400
 31593              	.LASF65:
 31594 1274 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 31594      524F4C5F 
 31594      414E474C 
 31594      4500
 31595              	.LASF297:
 31596 1282 636D645F 		.ascii	"cmd_activate\000"
 31596      61637469 
 31596      76617465 
 31596      00
 31597              	.LASF5:
 31598 128f 5F5F696E 		.ascii	"__int32_t\000"
 31598      7433325F 
 31598      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 682


 31599              	.LASF233:
 31600 1299 7370695F 		.ascii	"spi_delay_menu\000"
 31600      64656C61 
 31600      795F6D65 
 31600      6E7500
 31601              	.LASF106:
 31602 12a8 77697265 		.ascii	"wire_disp\000"
 31602      5F646973 
 31602      7000
 31603              	.LASF154:
 31604 12b2 656D675F 		.ascii	"emg_max_value\000"
 31604      6D61785F 
 31604      76616C75 
 31604      6500
 31605              	.LASF237:
 31606 12c0 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 31606      4F4D5F50 
 31606      4152414D 
 31606      5F534554 
 31606      00
 31607              	.LASF365:
 31608 12d1 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 31608      72635C63 
 31608      6F6D6D61 
 31608      6E645F70 
 31608      726F6365 
 31609              	.LASF138:
 31610 12ed 63757272 		.ascii	"current_limit\000"
 31610      656E745F 
 31610      6C696D69 
 31610      7400
 31611              	.LASF56:
 31612 12fb 53485F69 		.ascii	"SH_input_mode\000"
 31612      6E707574 
 31612      5F6D6F64 
 31612      6500
 31613              	.LASF77:
 31614 1309 54595045 		.ascii	"TYPE_INT8\000"
 31614      5F494E54 
 31614      3800
 31615              	.LASF269:
 31616 1313 494D555F 		.ascii	"IMU_reading_info\000"
 31616      72656164 
 31616      696E675F 
 31616      696E666F 
 31616      00
 31617              	.LASF14:
 31618 1324 75696E74 		.ascii	"uint16\000"
 31618      313600
 31619              	.LASF334:
 31620 132b 675F656D 		.ascii	"g_emg_measOld\000"
 31620      675F6D65 
 31620      61734F6C 
 31620      6400
 31621              	.LASF172:
 31622 1339 72657374 		.ascii	"rest_delay\000"
 31622      5F64656C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cclwcyZf.s 			page 683


 31622      617900
 31623              	.LASF219:
 31624 1344 6175785F 		.ascii	"aux_str\000"
 31624      73747200 
 31625              	.LASF26:
 31626 134c 434D445F 		.ascii	"CMD_PING\000"
 31626      50494E47 
 31626      00
 31627              	.LASF128:
 31628 1355 6B5F645F 		.ascii	"k_d_c_dl\000"
 31628      635F646C 
 31628      00
 31629              	.LASF196:
 31630 135e 64697265 		.ascii	"direction\000"
 31630      6374696F 
 31630      6E00
 31631              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
