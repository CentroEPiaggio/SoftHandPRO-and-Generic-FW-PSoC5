ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC76:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 35


 805              	.LC77:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC78:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC79:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC80:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC81:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC82:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC83:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC84:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC85:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC86:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 36


 835              	.LC87:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC88:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC89:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC90:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC91:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC92:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC93:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC94:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC95:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC96:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC97:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC98:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC99:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC100:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC101:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC102:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC103:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC104:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC105:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891              		.section	.text.get_param_list,"ax",%progbits
 892              		.align	2
 893              		.global	get_param_list
 894              		.thumb
 895              		.thumb_func
 896              		.type	get_param_list, %function
 897              	get_param_list:
 898              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 899              		.loc 1 345 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 38


 900              		.cfi_startproc
 901              		@ args = 16, pretend = 0, frame = 5208
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 904              		.cfi_def_cfa_offset 20
 905              		.cfi_offset 4, -20
 906              		.cfi_offset 5, -16
 907              		.cfi_offset 6, -12
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 ADF5A25D 		sub	sp, sp, #5184
 911              		.cfi_def_cfa_offset 5204
 912 0006 87B0     		sub	sp, sp, #28
 913              		.cfi_def_cfa_offset 5232
 914 0008 00AF     		add	r7, sp, #0
 915              		.cfi_def_cfa_register 7
 916 000a 07F11804 		add	r4, r7, #24
 917 000e 0C3C     		subs	r4, r4, #12
 918 0010 2060     		str	r0, [r4]
 919 0012 07F11800 		add	r0, r7, #24
 920 0016 1038     		subs	r0, r0, #16
 921 0018 0160     		str	r1, [r0]
 922 001a 07F11801 		add	r1, r7, #24
 923 001e 1439     		subs	r1, r1, #20
 924 0020 0A60     		str	r2, [r1]
 925 0022 07F11802 		add	r2, r7, #24
 926 0026 183A     		subs	r2, r2, #24
 927 0028 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 928              		.loc 1 348 0
 929 002a 07F15803 		add	r3, r7, #88
 930 002e 0022     		movs	r2, #0
 931 0030 1A60     		str	r2, [r3]
 932 0032 0433     		adds	r3, r3, #4
 933 0034 41F2E832 		movw	r2, #5096
 934 0038 0021     		movs	r1, #0
 935 003a 1846     		mov	r0, r3
 936 003c FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 937              		.loc 1 349 0
 938 0040 41F2EC33 		movw	r3, #5100
 939 0044 07F5A252 		add	r2, r7, #5184
 940 0048 02F11002 		add	r2, r2, #16
 941 004c 1380     		strh	r3, [r2]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 942              		.loc 1 353 0
 943 004e 0023     		movs	r3, #0
 944 0050 07F5A252 		add	r2, r7, #5184
 945 0054 02F11502 		add	r2, r2, #21
 946 0058 1370     		strb	r3, [r2]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 947              		.loc 1 354 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 39


 948 005a 0023     		movs	r3, #0
 949 005c 07F5A252 		add	r2, r7, #5184
 950 0060 02F11402 		add	r2, r2, #20
 951 0064 1370     		strb	r3, [r2]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 952              		.loc 1 355 0
 953 0066 0023     		movs	r3, #0
 954 0068 07F5A252 		add	r2, r7, #5184
 955 006c 02F11302 		add	r2, r2, #19
 956 0070 1370     		strb	r3, [r2]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 957              		.loc 1 357 0
 958 0072 07F13803 		add	r3, r7, #56
 959 0076 143B     		subs	r3, r3, #20
 960 0078 0022     		movs	r2, #0
 961 007a 1A60     		str	r2, [r3]
 962 007c 0433     		adds	r3, r3, #4
 963 007e 2E22     		movs	r2, #46
 964 0080 0021     		movs	r1, #0
 965 0082 1846     		mov	r0, r3
 966 0084 FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 967              		.loc 1 364 0
 968 0088 0023     		movs	r3, #0
 969 008a 07F5A252 		add	r2, r7, #5184
 970 008e 02F10F02 		add	r2, r2, #15
 971 0092 1370     		strb	r3, [r2]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 972              		.loc 1 365 0
 973 0094 0123     		movs	r3, #1
 974 0096 07F5A252 		add	r2, r7, #5184
 975 009a 02F10E02 		add	r2, r2, #14
 976 009e 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 977              		.loc 1 367 0
 978 00a0 07F11803 		add	r3, r7, #24
 979 00a4 0C3B     		subs	r3, r3, #12
 980 00a6 1B68     		ldr	r3, [r3]
 981 00a8 1B68     		ldr	r3, [r3]
 982 00aa 07F5A252 		add	r2, r7, #5184
 983 00ae 02F10802 		add	r2, r2, #8
 984 00b2 1360     		str	r3, [r2]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 985              		.loc 1 368 0
 986 00b4 07F5A253 		add	r3, r7, #5184
 987 00b8 03F10803 		add	r3, r3, #8
 988 00bc 1B68     		ldr	r3, [r3]
 989 00be 07F5A252 		add	r2, r7, #5184
 990 00c2 02F10402 		add	r2, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 40


 991 00c6 1360     		str	r3, [r2]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 992              		.loc 1 370 0
 993 00c8 07F15803 		add	r3, r7, #88
 994 00cc 0C22     		movs	r2, #12
 995 00ce 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 996              		.loc 1 371 0
 997 00d0 07F15803 		add	r3, r7, #88
 998 00d4 4722     		movs	r2, #71
 999 00d6 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1000              		.loc 1 373 0
 1001 00d8 0023     		movs	r3, #0
 1002 00da 07F5A252 		add	r2, r7, #5184
 1003 00de 02F11502 		add	r2, r2, #21
 1004 00e2 1370     		strb	r3, [r2]
 1005 00e4 02F076BE 		b	.L63
 1006              	.L248:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1007              		.loc 1 376 0
 1008 00e8 07F5A253 		add	r3, r7, #5184
 1009 00ec 03F11503 		add	r3, r3, #21
 1010 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1011 00f2 9A00     		lsls	r2, r3, #2
 1012 00f4 07F11803 		add	r3, r7, #24
 1013 00f8 0C3B     		subs	r3, r3, #12
 1014 00fa 1B68     		ldr	r3, [r3]
 1015 00fc 1344     		add	r3, r3, r2
 1016 00fe 1B68     		ldr	r3, [r3]
 1017 0100 07F5A252 		add	r2, r7, #5184
 1018 0104 02F10802 		add	r2, r2, #8
 1019 0108 1360     		str	r3, [r2]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1020              		.loc 1 379 0
 1021 010a 07F5A253 		add	r3, r7, #5184
 1022 010e 03F11503 		add	r3, r3, #21
 1023 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1024 0114 3222     		movs	r2, #50
 1025 0116 02FB03F3 		mul	r3, r2, r3
 1026 011a 9A1C     		adds	r2, r3, #2
 1027 011c 07F5A253 		add	r3, r7, #5184
 1028 0120 03F11503 		add	r3, r3, #21
 1029 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1030 0126 07F11803 		add	r3, r7, #24
 1031 012a 103B     		subs	r3, r3, #16
 1032 012c 1B68     		ldr	r3, [r3]
 1033 012e 0B44     		add	r3, r3, r1
 1034 0130 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1035 0132 07F15803 		add	r3, r7, #88
 1036 0136 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 41


 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1037              		.loc 1 380 0
 1038 0138 07F5A253 		add	r3, r7, #5184
 1039 013c 03F11503 		add	r3, r3, #21
 1040 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1041 0142 3222     		movs	r2, #50
 1042 0144 02FB03F3 		mul	r3, r2, r3
 1043 0148 DA1C     		adds	r2, r3, #3
 1044 014a 07F5A253 		add	r3, r7, #5184
 1045 014e 03F11503 		add	r3, r3, #21
 1046 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1047 0154 07F11803 		add	r3, r7, #24
 1048 0158 143B     		subs	r3, r3, #20
 1049 015a 1B68     		ldr	r3, [r3]
 1050 015c 0B44     		add	r3, r3, r1
 1051 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1052 0160 07F15803 		add	r3, r7, #88
 1053 0164 9954     		strb	r1, [r3, r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1054              		.loc 1 383 0
 1055 0166 07F5A253 		add	r3, r7, #5184
 1056 016a 03F11503 		add	r3, r3, #21
 1057 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1058 0170 07F11803 		add	r3, r7, #24
 1059 0174 103B     		subs	r3, r3, #16
 1060 0176 1B68     		ldr	r3, [r3]
 1061 0178 1344     		add	r3, r3, r2
 1062 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 017c 092B     		cmp	r3, #9
 1064 017e 2CD8     		bhi	.L64
 1065 0180 01A2     		adr	r2, .L66
 1066 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1067 0186 00BF     		.p2align 2
 1068              	.L66:
 1069 0188 B1010000 		.word	.L65+1
 1070 018c B1010000 		.word	.L65+1
 1071 0190 B1010000 		.word	.L65+1
 1072 0194 BF010000 		.word	.L67+1
 1073 0198 BF010000 		.word	.L67+1
 1074 019c CD010000 		.word	.L68+1
 1075 01a0 CD010000 		.word	.L68+1
 1076 01a4 CD010000 		.word	.L68+1
 1077 01a8 DB010000 		.word	.L64+1
 1078 01ac B1010000 		.word	.L65+1
 1079              		.p2align 1
 1080              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1081              		.loc 1 385 0
 1082 01b0 0123     		movs	r3, #1
 1083 01b2 07F5A252 		add	r2, r7, #5184
 1084 01b6 02F11302 		add	r2, r2, #19
 1085 01ba 1370     		strb	r3, [r2]
 1086 01bc 0DE0     		b	.L64
 1087              	.L67:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 42


 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1088              		.loc 1 387 0
 1089 01be 0223     		movs	r3, #2
 1090 01c0 07F5A252 		add	r2, r7, #5184
 1091 01c4 02F11302 		add	r2, r2, #19
 1092 01c8 1370     		strb	r3, [r2]
 1093 01ca 06E0     		b	.L64
 1094              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1095              		.loc 1 389 0
 1096 01cc 0423     		movs	r3, #4
 1097 01ce 07F5A252 		add	r2, r7, #5184
 1098 01d2 02F11302 		add	r2, r2, #19
 1099 01d6 1370     		strb	r3, [r2]
 1100 01d8 00BF     		nop
 1101              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1102              		.loc 1 392 0
 1103 01da 07F5A253 		add	r3, r7, #5184
 1104 01de 03F11503 		add	r3, r3, #21
 1105 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1106 01e4 07F5A352 		add	r2, r7, #5216
 1107 01e8 02F11802 		add	r2, r2, #24
 1108 01ec 1268     		ldr	r2, [r2]
 1109 01ee 1344     		add	r3, r3, r2
 1110 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1111 01f2 002B     		cmp	r3, #0
 1112 01f4 40F0D383 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1113              		.loc 1 395 0
 1114 01f8 07F5A253 		add	r3, r7, #5184
 1115 01fc 03F11503 		add	r3, r3, #21
 1116 0200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1117 0202 07F11803 		add	r3, r7, #24
 1118 0206 103B     		subs	r3, r3, #16
 1119 0208 1B68     		ldr	r3, [r3]
 1120 020a 1344     		add	r3, r3, r2
 1121 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1122 020e 092B     		cmp	r3, #9
 1123 0210 02F2FF80 		bhi	.L103
 1124 0214 01A2     		adr	r2, .L72
 1125 0216 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1126 021a 00BF     		.p2align 2
 1127              	.L72:
 1128 021c 45020000 		.word	.L71+1
 1129 0220 FF020000 		.word	.L73+1
 1130 0224 45020000 		.word	.L71+1
 1131 0228 B9030000 		.word	.L74+1
 1132 022c E9040000 		.word	.L75+1
 1133 0230 17060000 		.word	.L76+1
 1134 0234 41070000 		.word	.L77+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 43


 1135 0238 6F080000 		.word	.L78+1
 1136 023c 13240000 		.word	.L103+1
 1137 0240 45020000 		.word	.L71+1
 1138              		.p2align 1
 1139              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1140              		.loc 1 397 0
 1141 0244 0023     		movs	r3, #0
 1142 0246 07F5A252 		add	r2, r7, #5184
 1143 024a 02F11702 		add	r2, r2, #23
 1144 024e 1370     		strb	r3, [r2]
 1145 0250 41E0     		b	.L79
 1146              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1147              		.loc 1 398 0 discriminator 3
 1148 0252 07F5A253 		add	r3, r7, #5184
 1149 0256 03F11703 		add	r3, r3, #23
 1150 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1151 025c 07F5A252 		add	r2, r7, #5184
 1152 0260 02F11302 		add	r2, r2, #19
 1153 0264 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1154 0266 02FB03F3 		mul	r3, r2, r3
 1155 026a 1A46     		mov	r2, r3
 1156 026c 07F5A253 		add	r3, r7, #5184
 1157 0270 03F10803 		add	r3, r3, #8
 1158 0274 1B68     		ldr	r3, [r3]
 1159 0276 1344     		add	r3, r3, r2
 1160 0278 07F5A252 		add	r2, r7, #5184
 1161 027c 02F10402 		add	r2, r2, #4
 1162 0280 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1163              		.loc 1 399 0 discriminator 3
 1164 0282 07F5A253 		add	r3, r7, #5184
 1165 0286 03F11503 		add	r3, r3, #21
 1166 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1167 028c 3222     		movs	r2, #50
 1168 028e 02FB03F3 		mul	r3, r2, r3
 1169 0292 1A1D     		adds	r2, r3, #4
 1170 0294 07F5A253 		add	r3, r7, #5184
 1171 0298 03F11703 		add	r3, r3, #23
 1172 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1173 029e 07F5A251 		add	r1, r7, #5184
 1174 02a2 01F11301 		add	r1, r1, #19
 1175 02a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1176 02a8 01FB03F3 		mul	r3, r1, r3
 1177 02ac 1344     		add	r3, r3, r2
 1178 02ae 07F5A252 		add	r2, r7, #5184
 1179 02b2 02F10402 		add	r2, r2, #4
 1180 02b6 1268     		ldr	r2, [r2]
 1181 02b8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1182 02ba 07F15802 		add	r2, r7, #88
 1183 02be D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1184              		.loc 1 397 0 discriminator 3
 1185 02c0 07F5A253 		add	r3, r7, #5184
 1186 02c4 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 44


 1187 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1188 02ca 0133     		adds	r3, r3, #1
 1189 02cc 07F5A252 		add	r2, r7, #5184
 1190 02d0 02F11702 		add	r2, r2, #23
 1191 02d4 1370     		strb	r3, [r2]
 1192              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1193              		.loc 1 397 0 is_stmt 0 discriminator 1
 1194 02d6 07F5A253 		add	r3, r7, #5184
 1195 02da 03F11503 		add	r3, r3, #21
 1196 02de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1197 02e0 07F11803 		add	r3, r7, #24
 1198 02e4 143B     		subs	r3, r3, #20
 1199 02e6 1B68     		ldr	r3, [r3]
 1200 02e8 1344     		add	r3, r3, r2
 1201 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 02ec 07F5A252 		add	r2, r7, #5184
 1203 02f0 02F11702 		add	r2, r2, #23
 1204 02f4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1205 02f6 9A42     		cmp	r2, r3
 1206 02f8 ABD3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1207              		.loc 1 401 0 is_stmt 1
 1208 02fa 02F08AB8 		b	.L103
 1209              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1210              		.loc 1 403 0
 1211 02fe 0023     		movs	r3, #0
 1212 0300 07F5A252 		add	r2, r7, #5184
 1213 0304 02F11702 		add	r2, r2, #23
 1214 0308 1370     		strb	r3, [r2]
 1215 030a 41E0     		b	.L81
 1216              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1217              		.loc 1 404 0 discriminator 3
 1218 030c 07F5A253 		add	r3, r7, #5184
 1219 0310 03F11703 		add	r3, r3, #23
 1220 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0316 07F5A252 		add	r2, r7, #5184
 1222 031a 02F11302 		add	r2, r2, #19
 1223 031e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1224 0320 02FB03F3 		mul	r3, r2, r3
 1225 0324 1A46     		mov	r2, r3
 1226 0326 07F5A253 		add	r3, r7, #5184
 1227 032a 03F10803 		add	r3, r3, #8
 1228 032e 1B68     		ldr	r3, [r3]
 1229 0330 1344     		add	r3, r3, r2
 1230 0332 07F5A252 		add	r2, r7, #5184
 1231 0336 02F10402 		add	r2, r2, #4
 1232 033a 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1233              		.loc 1 405 0 discriminator 3
 1234 033c 07F5A253 		add	r3, r7, #5184
 1235 0340 03F11503 		add	r3, r3, #21
 1236 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 45


 1237 0346 3222     		movs	r2, #50
 1238 0348 02FB03F3 		mul	r3, r2, r3
 1239 034c 1A1D     		adds	r2, r3, #4
 1240 034e 07F5A253 		add	r3, r7, #5184
 1241 0352 03F11703 		add	r3, r3, #23
 1242 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0358 07F5A251 		add	r1, r7, #5184
 1244 035c 01F11301 		add	r1, r1, #19
 1245 0360 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1246 0362 01FB03F3 		mul	r3, r1, r3
 1247 0366 1344     		add	r3, r3, r2
 1248 0368 07F5A252 		add	r2, r7, #5184
 1249 036c 02F10402 		add	r2, r2, #4
 1250 0370 1268     		ldr	r2, [r2]
 1251 0372 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1252 0374 07F15802 		add	r2, r7, #88
 1253 0378 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1254              		.loc 1 403 0 discriminator 3
 1255 037a 07F5A253 		add	r3, r7, #5184
 1256 037e 03F11703 		add	r3, r3, #23
 1257 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1258 0384 0133     		adds	r3, r3, #1
 1259 0386 07F5A252 		add	r2, r7, #5184
 1260 038a 02F11702 		add	r2, r2, #23
 1261 038e 1370     		strb	r3, [r2]
 1262              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1263              		.loc 1 403 0 is_stmt 0 discriminator 1
 1264 0390 07F5A253 		add	r3, r7, #5184
 1265 0394 03F11503 		add	r3, r3, #21
 1266 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1267 039a 07F11803 		add	r3, r7, #24
 1268 039e 143B     		subs	r3, r3, #20
 1269 03a0 1B68     		ldr	r3, [r3]
 1270 03a2 1344     		add	r3, r3, r2
 1271 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 03a6 07F5A252 		add	r2, r7, #5184
 1273 03aa 02F11702 		add	r2, r2, #23
 1274 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1275 03b0 9A42     		cmp	r2, r3
 1276 03b2 ABD3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1277              		.loc 1 407 0 is_stmt 1
 1278 03b4 02F02DB8 		b	.L103
 1279              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1280              		.loc 1 409 0
 1281 03b8 0023     		movs	r3, #0
 1282 03ba 07F5A252 		add	r2, r7, #5184
 1283 03be 02F11702 		add	r2, r2, #23
 1284 03c2 1370     		strb	r3, [r2]
 1285 03c4 7BE0     		b	.L83
 1286              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 46


 1287              		.loc 1 410 0
 1288 03c6 07F5A253 		add	r3, r7, #5184
 1289 03ca 03F11703 		add	r3, r3, #23
 1290 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1291 03d0 07F5A252 		add	r2, r7, #5184
 1292 03d4 02F11302 		add	r2, r2, #19
 1293 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1294 03da 02FB03F3 		mul	r3, r2, r3
 1295 03de 1A46     		mov	r2, r3
 1296 03e0 07F5A253 		add	r3, r7, #5184
 1297 03e4 03F10803 		add	r3, r3, #8
 1298 03e8 1B68     		ldr	r3, [r3]
 1299 03ea 1344     		add	r3, r3, r2
 1300 03ec 07F5A252 		add	r2, r7, #5184
 1301 03f0 02F10402 		add	r2, r2, #4
 1302 03f4 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1303              		.loc 1 411 0
 1304 03f6 07F5A253 		add	r3, r7, #5184
 1305 03fa 03F10403 		add	r3, r3, #4
 1306 03fe 1B68     		ldr	r3, [r3]
 1307 0400 B3F90020 		ldrsh	r2, [r3]
 1308 0404 07F13803 		add	r3, r7, #56
 1309 0408 1A3B     		subs	r3, r3, #26
 1310 040a 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1311              		.loc 1 412 0
 1312 040c 0023     		movs	r3, #0
 1313 040e 07F5A252 		add	r2, r7, #5184
 1314 0412 02F11602 		add	r2, r2, #22
 1315 0416 1370     		strb	r3, [r2]
 1316 0418 3AE0     		b	.L84
 1317              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1318              		.loc 1 413 0 discriminator 3
 1319 041a 07F5A253 		add	r3, r7, #5184
 1320 041e 03F11503 		add	r3, r3, #21
 1321 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 0424 3222     		movs	r2, #50
 1323 0426 02FB03F3 		mul	r3, r2, r3
 1324 042a 1A1D     		adds	r2, r3, #4
 1325 042c 07F5A253 		add	r3, r7, #5184
 1326 0430 03F11703 		add	r3, r3, #23
 1327 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1328 0436 07F5A251 		add	r1, r7, #5184
 1329 043a 01F11301 		add	r1, r1, #19
 1330 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1331 0440 01FB03F3 		mul	r3, r1, r3
 1332 0444 1A44     		add	r2, r2, r3
 1333 0446 07F5A253 		add	r3, r7, #5184
 1334 044a 03F11303 		add	r3, r3, #19
 1335 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 0450 1A44     		add	r2, r2, r3
 1337 0452 07F5A253 		add	r3, r7, #5184
 1338 0456 03F11603 		add	r3, r3, #22
 1339 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1340 045c D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 47


 1341 045e 5A1E     		subs	r2, r3, #1
 1342 0460 07F5A253 		add	r3, r7, #5184
 1343 0464 03F11603 		add	r3, r3, #22
 1344 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1345 046a 07F13803 		add	r3, r7, #56
 1346 046e 1A3B     		subs	r3, r3, #26
 1347 0470 0B44     		add	r3, r3, r1
 1348 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1349 0474 07F15803 		add	r3, r7, #88
 1350 0478 9954     		strb	r1, [r3, r2]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1351              		.loc 1 412 0 discriminator 3
 1352 047a 07F5A253 		add	r3, r7, #5184
 1353 047e 03F11603 		add	r3, r3, #22
 1354 0482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1355 0484 0133     		adds	r3, r3, #1
 1356 0486 07F5A252 		add	r2, r7, #5184
 1357 048a 02F11602 		add	r2, r2, #22
 1358 048e 1370     		strb	r3, [r2]
 1359              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1360              		.loc 1 412 0 is_stmt 0 discriminator 1
 1361 0490 07F5A253 		add	r3, r7, #5184
 1362 0494 03F11603 		add	r3, r3, #22
 1363 0498 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1364 049a 07F5A253 		add	r3, r7, #5184
 1365 049e 03F11303 		add	r3, r3, #19
 1366 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 04a4 9A42     		cmp	r2, r3
 1368 04a6 B8D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1369              		.loc 1 409 0 is_stmt 1 discriminator 2
 1370 04a8 07F5A253 		add	r3, r7, #5184
 1371 04ac 03F11703 		add	r3, r3, #23
 1372 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1373 04b2 0133     		adds	r3, r3, #1
 1374 04b4 07F5A252 		add	r2, r7, #5184
 1375 04b8 02F11702 		add	r2, r2, #23
 1376 04bc 1370     		strb	r3, [r2]
 1377              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1378              		.loc 1 409 0 is_stmt 0 discriminator 1
 1379 04be 07F5A253 		add	r3, r7, #5184
 1380 04c2 03F11503 		add	r3, r3, #21
 1381 04c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1382 04c8 07F11803 		add	r3, r7, #24
 1383 04cc 143B     		subs	r3, r3, #20
 1384 04ce 1B68     		ldr	r3, [r3]
 1385 04d0 1344     		add	r3, r3, r2
 1386 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1387 04d4 07F5A252 		add	r2, r7, #5184
 1388 04d8 02F11702 		add	r2, r2, #23
 1389 04dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1390 04de 9A42     		cmp	r2, r3
 1391 04e0 FFF471AF 		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 48


 416:..\src/command_processing.c ****                     break;
 1392              		.loc 1 416 0 is_stmt 1
 1393 04e4 01F095BF 		b	.L103
 1394              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1395              		.loc 1 418 0
 1396 04e8 0023     		movs	r3, #0
 1397 04ea 07F5A252 		add	r2, r7, #5184
 1398 04ee 02F11702 		add	r2, r2, #23
 1399 04f2 1370     		strb	r3, [r2]
 1400 04f4 7AE0     		b	.L87
 1401              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1402              		.loc 1 419 0
 1403 04f6 07F5A253 		add	r3, r7, #5184
 1404 04fa 03F11703 		add	r3, r3, #23
 1405 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1406 0500 07F5A252 		add	r2, r7, #5184
 1407 0504 02F11302 		add	r2, r2, #19
 1408 0508 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1409 050a 02FB03F3 		mul	r3, r2, r3
 1410 050e 1A46     		mov	r2, r3
 1411 0510 07F5A253 		add	r3, r7, #5184
 1412 0514 03F10803 		add	r3, r3, #8
 1413 0518 1B68     		ldr	r3, [r3]
 1414 051a 1344     		add	r3, r3, r2
 1415 051c 07F5A252 		add	r2, r7, #5184
 1416 0520 02F10402 		add	r2, r2, #4
 1417 0524 1360     		str	r3, [r2]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1418              		.loc 1 420 0
 1419 0526 07F5A253 		add	r3, r7, #5184
 1420 052a 03F10403 		add	r3, r3, #4
 1421 052e 1B68     		ldr	r3, [r3]
 1422 0530 1A88     		ldrh	r2, [r3]
 1423 0532 07F13803 		add	r3, r7, #56
 1424 0536 1C3B     		subs	r3, r3, #28
 1425 0538 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1426              		.loc 1 421 0
 1427 053a 0023     		movs	r3, #0
 1428 053c 07F5A252 		add	r2, r7, #5184
 1429 0540 02F11602 		add	r2, r2, #22
 1430 0544 1370     		strb	r3, [r2]
 1431 0546 3AE0     		b	.L88
 1432              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1433              		.loc 1 422 0 discriminator 3
 1434 0548 07F5A253 		add	r3, r7, #5184
 1435 054c 03F11503 		add	r3, r3, #21
 1436 0550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 0552 3222     		movs	r2, #50
 1438 0554 02FB03F3 		mul	r3, r2, r3
 1439 0558 1A1D     		adds	r2, r3, #4
 1440 055a 07F5A253 		add	r3, r7, #5184
 1441 055e 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 49


 1442 0562 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1443 0564 07F5A251 		add	r1, r7, #5184
 1444 0568 01F11301 		add	r1, r1, #19
 1445 056c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1446 056e 01FB03F3 		mul	r3, r1, r3
 1447 0572 1A44     		add	r2, r2, r3
 1448 0574 07F5A253 		add	r3, r7, #5184
 1449 0578 03F11303 		add	r3, r3, #19
 1450 057c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1451 057e 1A44     		add	r2, r2, r3
 1452 0580 07F5A253 		add	r3, r7, #5184
 1453 0584 03F11603 		add	r3, r3, #22
 1454 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1455 058a D31A     		subs	r3, r2, r3
 1456 058c 5A1E     		subs	r2, r3, #1
 1457 058e 07F5A253 		add	r3, r7, #5184
 1458 0592 03F11603 		add	r3, r3, #22
 1459 0596 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1460 0598 07F13803 		add	r3, r7, #56
 1461 059c 1C3B     		subs	r3, r3, #28
 1462 059e 0B44     		add	r3, r3, r1
 1463 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1464 05a2 07F15803 		add	r3, r7, #88
 1465 05a6 9954     		strb	r1, [r3, r2]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1466              		.loc 1 421 0 discriminator 3
 1467 05a8 07F5A253 		add	r3, r7, #5184
 1468 05ac 03F11603 		add	r3, r3, #22
 1469 05b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1470 05b2 0133     		adds	r3, r3, #1
 1471 05b4 07F5A252 		add	r2, r7, #5184
 1472 05b8 02F11602 		add	r2, r2, #22
 1473 05bc 1370     		strb	r3, [r2]
 1474              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1475              		.loc 1 421 0 is_stmt 0 discriminator 1
 1476 05be 07F5A253 		add	r3, r7, #5184
 1477 05c2 03F11603 		add	r3, r3, #22
 1478 05c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1479 05c8 07F5A253 		add	r3, r7, #5184
 1480 05cc 03F11303 		add	r3, r3, #19
 1481 05d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 05d2 9A42     		cmp	r2, r3
 1483 05d4 B8D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1484              		.loc 1 418 0 is_stmt 1 discriminator 2
 1485 05d6 07F5A253 		add	r3, r7, #5184
 1486 05da 03F11703 		add	r3, r3, #23
 1487 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1488 05e0 0133     		adds	r3, r3, #1
 1489 05e2 07F5A252 		add	r2, r7, #5184
 1490 05e6 02F11702 		add	r2, r2, #23
 1491 05ea 1370     		strb	r3, [r2]
 1492              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1493              		.loc 1 418 0 is_stmt 0 discriminator 1
 1494 05ec 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 50


 1495 05f0 03F11503 		add	r3, r3, #21
 1496 05f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1497 05f6 07F11803 		add	r3, r7, #24
 1498 05fa 143B     		subs	r3, r3, #20
 1499 05fc 1B68     		ldr	r3, [r3]
 1500 05fe 1344     		add	r3, r3, r2
 1501 0600 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1502 0602 07F5A252 		add	r2, r7, #5184
 1503 0606 02F11702 		add	r2, r2, #23
 1504 060a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1505 060c 9A42     		cmp	r2, r3
 1506 060e FFF472AF 		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1507              		.loc 1 425 0 is_stmt 1
 1508 0612 01F0FEBE 		b	.L103
 1509              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1510              		.loc 1 427 0
 1511 0616 0023     		movs	r3, #0
 1512 0618 07F5A252 		add	r2, r7, #5184
 1513 061c 02F11702 		add	r2, r2, #23
 1514 0620 1370     		strb	r3, [r2]
 1515 0622 78E0     		b	.L91
 1516              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1517              		.loc 1 428 0
 1518 0624 07F5A253 		add	r3, r7, #5184
 1519 0628 03F11703 		add	r3, r3, #23
 1520 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1521 062e 07F5A252 		add	r2, r7, #5184
 1522 0632 02F11302 		add	r2, r2, #19
 1523 0636 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1524 0638 02FB03F3 		mul	r3, r2, r3
 1525 063c 1A46     		mov	r2, r3
 1526 063e 07F5A253 		add	r3, r7, #5184
 1527 0642 03F10803 		add	r3, r3, #8
 1528 0646 1B68     		ldr	r3, [r3]
 1529 0648 1344     		add	r3, r3, r2
 1530 064a 07F5A252 		add	r2, r7, #5184
 1531 064e 02F10402 		add	r2, r2, #4
 1532 0652 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1533              		.loc 1 429 0
 1534 0654 07F5A253 		add	r3, r7, #5184
 1535 0658 03F10403 		add	r3, r3, #4
 1536 065c 1B68     		ldr	r3, [r3]
 1537 065e 1A68     		ldr	r2, [r3]
 1538 0660 07F11803 		add	r3, r7, #24
 1539 0664 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1540              		.loc 1 430 0
 1541 0666 0023     		movs	r3, #0
 1542 0668 07F5A252 		add	r2, r7, #5184
 1543 066c 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 51


 1544 0670 1370     		strb	r3, [r2]
 1545 0672 39E0     		b	.L92
 1546              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1547              		.loc 1 431 0 discriminator 3
 1548 0674 07F5A253 		add	r3, r7, #5184
 1549 0678 03F11503 		add	r3, r3, #21
 1550 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1551 067e 3222     		movs	r2, #50
 1552 0680 02FB03F3 		mul	r3, r2, r3
 1553 0684 1A1D     		adds	r2, r3, #4
 1554 0686 07F5A253 		add	r3, r7, #5184
 1555 068a 03F11703 		add	r3, r3, #23
 1556 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 0690 07F5A251 		add	r1, r7, #5184
 1558 0694 01F11301 		add	r1, r1, #19
 1559 0698 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1560 069a 01FB03F3 		mul	r3, r1, r3
 1561 069e 1A44     		add	r2, r2, r3
 1562 06a0 07F5A253 		add	r3, r7, #5184
 1563 06a4 03F11303 		add	r3, r3, #19
 1564 06a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1565 06aa 1A44     		add	r2, r2, r3
 1566 06ac 07F5A253 		add	r3, r7, #5184
 1567 06b0 03F11603 		add	r3, r3, #22
 1568 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 06b6 D31A     		subs	r3, r2, r3
 1570 06b8 013B     		subs	r3, r3, #1
 1571 06ba 07F5A252 		add	r2, r7, #5184
 1572 06be 02F11602 		add	r2, r2, #22
 1573 06c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1574 06c4 07F11801 		add	r1, r7, #24
 1575 06c8 0A44     		add	r2, r2, r1
 1576 06ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1577 06cc 07F15802 		add	r2, r7, #88
 1578 06d0 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1579              		.loc 1 430 0 discriminator 3
 1580 06d2 07F5A253 		add	r3, r7, #5184
 1581 06d6 03F11603 		add	r3, r3, #22
 1582 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1583 06dc 0133     		adds	r3, r3, #1
 1584 06de 07F5A252 		add	r2, r7, #5184
 1585 06e2 02F11602 		add	r2, r2, #22
 1586 06e6 1370     		strb	r3, [r2]
 1587              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1588              		.loc 1 430 0 is_stmt 0 discriminator 1
 1589 06e8 07F5A253 		add	r3, r7, #5184
 1590 06ec 03F11603 		add	r3, r3, #22
 1591 06f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1592 06f2 07F5A253 		add	r3, r7, #5184
 1593 06f6 03F11303 		add	r3, r3, #19
 1594 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595 06fc 9A42     		cmp	r2, r3
 1596 06fe B9D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 52


 1597              		.loc 1 427 0 is_stmt 1 discriminator 2
 1598 0700 07F5A253 		add	r3, r7, #5184
 1599 0704 03F11703 		add	r3, r3, #23
 1600 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1601 070a 0133     		adds	r3, r3, #1
 1602 070c 07F5A252 		add	r2, r7, #5184
 1603 0710 02F11702 		add	r2, r2, #23
 1604 0714 1370     		strb	r3, [r2]
 1605              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1606              		.loc 1 427 0 is_stmt 0 discriminator 1
 1607 0716 07F5A253 		add	r3, r7, #5184
 1608 071a 03F11503 		add	r3, r3, #21
 1609 071e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1610 0720 07F11803 		add	r3, r7, #24
 1611 0724 143B     		subs	r3, r3, #20
 1612 0726 1B68     		ldr	r3, [r3]
 1613 0728 1344     		add	r3, r3, r2
 1614 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 072c 07F5A252 		add	r2, r7, #5184
 1616 0730 02F11702 		add	r2, r2, #23
 1617 0734 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1618 0736 9A42     		cmp	r2, r3
 1619 0738 FFF474AF 		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1620              		.loc 1 434 0 is_stmt 1
 1621 073c 01F069BE 		b	.L103
 1622              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1623              		.loc 1 436 0
 1624 0740 0023     		movs	r3, #0
 1625 0742 07F5A252 		add	r2, r7, #5184
 1626 0746 02F11702 		add	r2, r2, #23
 1627 074a 1370     		strb	r3, [r2]
 1628 074c 7AE0     		b	.L95
 1629              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1630              		.loc 1 437 0
 1631 074e 07F5A253 		add	r3, r7, #5184
 1632 0752 03F11703 		add	r3, r3, #23
 1633 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 0758 07F5A252 		add	r2, r7, #5184
 1635 075c 02F11302 		add	r2, r2, #19
 1636 0760 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1637 0762 02FB03F3 		mul	r3, r2, r3
 1638 0766 1A46     		mov	r2, r3
 1639 0768 07F5A253 		add	r3, r7, #5184
 1640 076c 03F10803 		add	r3, r3, #8
 1641 0770 1B68     		ldr	r3, [r3]
 1642 0772 1344     		add	r3, r3, r2
 1643 0774 07F5A252 		add	r2, r7, #5184
 1644 0778 02F10402 		add	r2, r2, #4
 1645 077c 1360     		str	r3, [r2]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 53


 1646              		.loc 1 438 0
 1647 077e 07F5A253 		add	r3, r7, #5184
 1648 0782 03F10403 		add	r3, r3, #4
 1649 0786 1B68     		ldr	r3, [r3]
 1650 0788 1A68     		ldr	r2, [r3]
 1651 078a 07F11803 		add	r3, r7, #24
 1652 078e 043B     		subs	r3, r3, #4
 1653 0790 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1654              		.loc 1 439 0
 1655 0792 0023     		movs	r3, #0
 1656 0794 07F5A252 		add	r2, r7, #5184
 1657 0798 02F11602 		add	r2, r2, #22
 1658 079c 1370     		strb	r3, [r2]
 1659 079e 3AE0     		b	.L96
 1660              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1661              		.loc 1 440 0 discriminator 3
 1662 07a0 07F5A253 		add	r3, r7, #5184
 1663 07a4 03F11503 		add	r3, r3, #21
 1664 07a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1665 07aa 3222     		movs	r2, #50
 1666 07ac 02FB03F3 		mul	r3, r2, r3
 1667 07b0 1A1D     		adds	r2, r3, #4
 1668 07b2 07F5A253 		add	r3, r7, #5184
 1669 07b6 03F11703 		add	r3, r3, #23
 1670 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1671 07bc 07F5A251 		add	r1, r7, #5184
 1672 07c0 01F11301 		add	r1, r1, #19
 1673 07c4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1674 07c6 01FB03F3 		mul	r3, r1, r3
 1675 07ca 1A44     		add	r2, r2, r3
 1676 07cc 07F5A253 		add	r3, r7, #5184
 1677 07d0 03F11303 		add	r3, r3, #19
 1678 07d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1679 07d6 1A44     		add	r2, r2, r3
 1680 07d8 07F5A253 		add	r3, r7, #5184
 1681 07dc 03F11603 		add	r3, r3, #22
 1682 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1683 07e2 D31A     		subs	r3, r2, r3
 1684 07e4 5A1E     		subs	r2, r3, #1
 1685 07e6 07F5A253 		add	r3, r7, #5184
 1686 07ea 03F11603 		add	r3, r3, #22
 1687 07ee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1688 07f0 07F11803 		add	r3, r7, #24
 1689 07f4 043B     		subs	r3, r3, #4
 1690 07f6 0B44     		add	r3, r3, r1
 1691 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1692 07fa 07F15803 		add	r3, r7, #88
 1693 07fe 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1694              		.loc 1 439 0 discriminator 3
 1695 0800 07F5A253 		add	r3, r7, #5184
 1696 0804 03F11603 		add	r3, r3, #22
 1697 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 080a 0133     		adds	r3, r3, #1
 1699 080c 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 54


 1700 0810 02F11602 		add	r2, r2, #22
 1701 0814 1370     		strb	r3, [r2]
 1702              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1703              		.loc 1 439 0 is_stmt 0 discriminator 1
 1704 0816 07F5A253 		add	r3, r7, #5184
 1705 081a 03F11603 		add	r3, r3, #22
 1706 081e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707 0820 07F5A253 		add	r3, r7, #5184
 1708 0824 03F11303 		add	r3, r3, #19
 1709 0828 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1710 082a 9A42     		cmp	r2, r3
 1711 082c B8D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1712              		.loc 1 436 0 is_stmt 1 discriminator 2
 1713 082e 07F5A253 		add	r3, r7, #5184
 1714 0832 03F11703 		add	r3, r3, #23
 1715 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1716 0838 0133     		adds	r3, r3, #1
 1717 083a 07F5A252 		add	r2, r7, #5184
 1718 083e 02F11702 		add	r2, r2, #23
 1719 0842 1370     		strb	r3, [r2]
 1720              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1721              		.loc 1 436 0 is_stmt 0 discriminator 1
 1722 0844 07F5A253 		add	r3, r7, #5184
 1723 0848 03F11503 		add	r3, r3, #21
 1724 084c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1725 084e 07F11803 		add	r3, r7, #24
 1726 0852 143B     		subs	r3, r3, #20
 1727 0854 1B68     		ldr	r3, [r3]
 1728 0856 1344     		add	r3, r3, r2
 1729 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1730 085a 07F5A252 		add	r2, r7, #5184
 1731 085e 02F11702 		add	r2, r2, #23
 1732 0862 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1733 0864 9A42     		cmp	r2, r3
 1734 0866 FFF472AF 		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1735              		.loc 1 443 0 is_stmt 1
 1736 086a 01F0D2BD 		b	.L103
 1737              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1738              		.loc 1 446 0
 1739 086e 0023     		movs	r3, #0
 1740 0870 07F5A252 		add	r2, r7, #5184
 1741 0874 02F11702 		add	r2, r2, #23
 1742 0878 1370     		strb	r3, [r2]
 1743 087a 7AE0     		b	.L99
 1744              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1745              		.loc 1 447 0
 1746 087c 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 55


 1747 0880 03F11703 		add	r3, r3, #23
 1748 0884 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1749 0886 07F5A252 		add	r2, r7, #5184
 1750 088a 02F11302 		add	r2, r2, #19
 1751 088e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1752 0890 02FB03F3 		mul	r3, r2, r3
 1753 0894 1A46     		mov	r2, r3
 1754 0896 07F5A253 		add	r3, r7, #5184
 1755 089a 03F10803 		add	r3, r3, #8
 1756 089e 1B68     		ldr	r3, [r3]
 1757 08a0 1344     		add	r3, r3, r2
 1758 08a2 07F5A252 		add	r2, r7, #5184
 1759 08a6 02F10402 		add	r2, r2, #4
 1760 08aa 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1761              		.loc 1 448 0
 1762 08ac 07F5A253 		add	r3, r7, #5184
 1763 08b0 03F10403 		add	r3, r3, #4
 1764 08b4 1B68     		ldr	r3, [r3]
 1765 08b6 1A68     		ldr	r2, [r3]	@ float
 1766 08b8 07F13803 		add	r3, r7, #56
 1767 08bc 183B     		subs	r3, r3, #24
 1768 08be 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1769              		.loc 1 449 0
 1770 08c0 0023     		movs	r3, #0
 1771 08c2 07F5A252 		add	r2, r7, #5184
 1772 08c6 02F11602 		add	r2, r2, #22
 1773 08ca 1370     		strb	r3, [r2]
 1774 08cc 3AE0     		b	.L100
 1775              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1776              		.loc 1 450 0 discriminator 3
 1777 08ce 07F5A253 		add	r3, r7, #5184
 1778 08d2 03F11503 		add	r3, r3, #21
 1779 08d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 08d8 3222     		movs	r2, #50
 1781 08da 02FB03F3 		mul	r3, r2, r3
 1782 08de 1A1D     		adds	r2, r3, #4
 1783 08e0 07F5A253 		add	r3, r7, #5184
 1784 08e4 03F11703 		add	r3, r3, #23
 1785 08e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1786 08ea 07F5A251 		add	r1, r7, #5184
 1787 08ee 01F11301 		add	r1, r1, #19
 1788 08f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1789 08f4 01FB03F3 		mul	r3, r1, r3
 1790 08f8 1A44     		add	r2, r2, r3
 1791 08fa 07F5A253 		add	r3, r7, #5184
 1792 08fe 03F11303 		add	r3, r3, #19
 1793 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1794 0904 1A44     		add	r2, r2, r3
 1795 0906 07F5A253 		add	r3, r7, #5184
 1796 090a 03F11603 		add	r3, r3, #22
 1797 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1798 0910 D31A     		subs	r3, r2, r3
 1799 0912 5A1E     		subs	r2, r3, #1
 1800 0914 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 56


 1801 0918 03F11603 		add	r3, r3, #22
 1802 091c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1803 091e 07F13803 		add	r3, r7, #56
 1804 0922 183B     		subs	r3, r3, #24
 1805 0924 0B44     		add	r3, r3, r1
 1806 0926 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1807 0928 07F15803 		add	r3, r7, #88
 1808 092c 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1809              		.loc 1 449 0 discriminator 3
 1810 092e 07F5A253 		add	r3, r7, #5184
 1811 0932 03F11603 		add	r3, r3, #22
 1812 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1813 0938 0133     		adds	r3, r3, #1
 1814 093a 07F5A252 		add	r2, r7, #5184
 1815 093e 02F11602 		add	r2, r2, #22
 1816 0942 1370     		strb	r3, [r2]
 1817              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1818              		.loc 1 449 0 is_stmt 0 discriminator 1
 1819 0944 07F5A253 		add	r3, r7, #5184
 1820 0948 03F11603 		add	r3, r3, #22
 1821 094c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1822 094e 07F5A253 		add	r3, r7, #5184
 1823 0952 03F11303 		add	r3, r3, #19
 1824 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1825 0958 9A42     		cmp	r2, r3
 1826 095a B8D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1827              		.loc 1 446 0 is_stmt 1 discriminator 2
 1828 095c 07F5A253 		add	r3, r7, #5184
 1829 0960 03F11703 		add	r3, r3, #23
 1830 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1831 0966 0133     		adds	r3, r3, #1
 1832 0968 07F5A252 		add	r2, r7, #5184
 1833 096c 02F11702 		add	r2, r2, #23
 1834 0970 1370     		strb	r3, [r2]
 1835              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1836              		.loc 1 446 0 is_stmt 0 discriminator 1
 1837 0972 07F5A253 		add	r3, r7, #5184
 1838 0976 03F11503 		add	r3, r3, #21
 1839 097a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1840 097c 07F11803 		add	r3, r7, #24
 1841 0980 143B     		subs	r3, r3, #20
 1842 0982 1B68     		ldr	r3, [r3]
 1843 0984 1344     		add	r3, r3, r2
 1844 0986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1845 0988 07F5A252 		add	r2, r7, #5184
 1846 098c 02F11702 		add	r2, r2, #23
 1847 0990 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1848 0992 9A42     		cmp	r2, r3
 1849 0994 FFF472AF 		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1850              		.loc 1 453 0 is_stmt 1 discriminator 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 57


 1851 0998 00BF     		nop
 1852 099a 01F03ABD 		b	.L103
 1853              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1854              		.loc 1 461 0
 1855 099e 07F5A253 		add	r3, r7, #5184
 1856 09a2 03F11503 		add	r3, r3, #21
 1857 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 09a8 0133     		adds	r3, r3, #1
 1859 09aa 023B     		subs	r3, r3, #2
 1860 09ac 332B     		cmp	r3, #51
 1861 09ae 01F22F85 		bhi	.L253
 1862 09b2 01A2     		adr	r2, .L106
 1863 09b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1864              		.p2align 2
 1865              	.L106:
 1866 09b8 890A0000 		.word	.L105+1
 1867 09bc 470F0000 		.word	.L107+1
 1868 09c0 11240000 		.word	.L253+1
 1869 09c4 11240000 		.word	.L253+1
 1870 09c8 11240000 		.word	.L253+1
 1871 09cc 11240000 		.word	.L253+1
 1872 09d0 09140000 		.word	.L108+1
 1873 09d4 11240000 		.word	.L253+1
 1874 09d8 11240000 		.word	.L253+1
 1875 09dc 2D150000 		.word	.L109+1
 1876 09e0 11240000 		.word	.L253+1
 1877 09e4 11240000 		.word	.L253+1
 1878 09e8 11240000 		.word	.L253+1
 1879 09ec 11240000 		.word	.L253+1
 1880 09f0 11240000 		.word	.L253+1
 1881 09f4 11240000 		.word	.L253+1
 1882 09f8 11240000 		.word	.L253+1
 1883 09fc 11240000 		.word	.L253+1
 1884 0a00 11240000 		.word	.L253+1
 1885 0a04 11240000 		.word	.L253+1
 1886 0a08 11240000 		.word	.L253+1
 1887 0a0c E5160000 		.word	.L110+1
 1888 0a10 11240000 		.word	.L253+1
 1889 0a14 11240000 		.word	.L253+1
 1890 0a18 11240000 		.word	.L253+1
 1891 0a1c 11240000 		.word	.L253+1
 1892 0a20 11240000 		.word	.L253+1
 1893 0a24 11240000 		.word	.L253+1
 1894 0a28 11240000 		.word	.L253+1
 1895 0a2c 11240000 		.word	.L253+1
 1896 0a30 11240000 		.word	.L253+1
 1897 0a34 11240000 		.word	.L253+1
 1898 0a38 11240000 		.word	.L253+1
 1899 0a3c 11240000 		.word	.L253+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 58


 1900 0a40 11240000 		.word	.L253+1
 1901 0a44 11240000 		.word	.L253+1
 1902 0a48 11240000 		.word	.L253+1
 1903 0a4c 11240000 		.word	.L253+1
 1904 0a50 11240000 		.word	.L253+1
 1905 0a54 11240000 		.word	.L253+1
 1906 0a58 11240000 		.word	.L253+1
 1907 0a5c 11240000 		.word	.L253+1
 1908 0a60 B3170000 		.word	.L111+1
 1909 0a64 711C0000 		.word	.L112+1
 1910 0a68 11240000 		.word	.L253+1
 1911 0a6c 11240000 		.word	.L253+1
 1912 0a70 11240000 		.word	.L253+1
 1913 0a74 11240000 		.word	.L253+1
 1914 0a78 31210000 		.word	.L113+1
 1915 0a7c 11240000 		.word	.L253+1
 1916 0a80 11240000 		.word	.L253+1
 1917 0a84 53220000 		.word	.L114+1
 1918              		.p2align 1
 1919              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1920              		.loc 1 463 0
 1921 0a88 07F5A253 		add	r3, r7, #5184
 1922 0a8c 03F10F03 		add	r3, r3, #15
 1923 0a90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1924 0a92 AA49     		ldr	r1, .L257
 1925 0a94 1346     		mov	r3, r2
 1926 0a96 DB00     		lsls	r3, r3, #3
 1927 0a98 9B1A     		subs	r3, r3, r2
 1928 0a9a 1B01     		lsls	r3, r3, #4
 1929 0a9c 0B44     		add	r3, r3, r1
 1930 0a9e 03F20F13 		addw	r3, r3, #271
 1931 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 0aa4 032B     		cmp	r3, #3
 1933 0aa6 00F02681 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1934              		.loc 1 464 0
 1935 0aaa 07F5A253 		add	r3, r7, #5184
 1936 0aae 03F10F03 		add	r3, r3, #15
 1937 0ab2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1938 0ab4 A149     		ldr	r1, .L257
 1939 0ab6 1346     		mov	r3, r2
 1940 0ab8 DB00     		lsls	r3, r3, #3
 1941 0aba 9B1A     		subs	r3, r3, r2
 1942 0abc 1B01     		lsls	r3, r3, #4
 1943 0abe 0B44     		add	r3, r3, r1
 1944 0ac0 B033     		adds	r3, r3, #176
 1945 0ac2 1B68     		ldr	r3, [r3]
 1946 0ac4 1846     		mov	r0, r3
 1947 0ac6 FFF7FEFF 		bl	__aeabi_i2f
 1948 0aca 0346     		mov	r3, r0
 1949 0acc 4FF08F41 		mov	r1, #1199570944
 1950 0ad0 1846     		mov	r0, r3
 1951 0ad2 FFF7FEFF 		bl	__aeabi_fdiv
 1952 0ad6 0346     		mov	r3, r0
 1953 0ad8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 59


 1954 0ada 07F13803 		add	r3, r7, #56
 1955 0ade 183B     		subs	r3, r3, #24
 1956 0ae0 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1957              		.loc 1 465 0
 1958 0ae2 0023     		movs	r3, #0
 1959 0ae4 07F5A252 		add	r2, r7, #5184
 1960 0ae8 02F11702 		add	r2, r2, #23
 1961 0aec 1370     		strb	r3, [r2]
 1962 0aee 2DE0     		b	.L116
 1963              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1964              		.loc 1 466 0 discriminator 3
 1965 0af0 07F5A253 		add	r3, r7, #5184
 1966 0af4 03F11503 		add	r3, r3, #21
 1967 0af8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1968 0afa 3222     		movs	r2, #50
 1969 0afc 02FB03F3 		mul	r3, r2, r3
 1970 0b00 1A1D     		adds	r2, r3, #4
 1971 0b02 07F5A253 		add	r3, r7, #5184
 1972 0b06 03F11303 		add	r3, r3, #19
 1973 0b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1974 0b0c 1A44     		add	r2, r2, r3
 1975 0b0e 07F5A253 		add	r3, r7, #5184
 1976 0b12 03F11703 		add	r3, r3, #23
 1977 0b16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1978 0b18 D31A     		subs	r3, r2, r3
 1979 0b1a 5A1E     		subs	r2, r3, #1
 1980 0b1c 07F5A253 		add	r3, r7, #5184
 1981 0b20 03F11703 		add	r3, r3, #23
 1982 0b24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1983 0b26 07F13803 		add	r3, r7, #56
 1984 0b2a 183B     		subs	r3, r3, #24
 1985 0b2c 0B44     		add	r3, r3, r1
 1986 0b2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1987 0b30 07F15803 		add	r3, r7, #88
 1988 0b34 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1989              		.loc 1 465 0 discriminator 3
 1990 0b36 07F5A253 		add	r3, r7, #5184
 1991 0b3a 03F11703 		add	r3, r3, #23
 1992 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1993 0b40 0133     		adds	r3, r3, #1
 1994 0b42 07F5A252 		add	r2, r7, #5184
 1995 0b46 02F11702 		add	r2, r2, #23
 1996 0b4a 1370     		strb	r3, [r2]
 1997              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1998              		.loc 1 465 0 is_stmt 0 discriminator 1
 1999 0b4c 07F5A253 		add	r3, r7, #5184
 2000 0b50 03F11703 		add	r3, r3, #23
 2001 0b54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2002 0b56 07F5A253 		add	r3, r7, #5184
 2003 0b5a 03F11303 		add	r3, r3, #19
 2004 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0b60 9A42     		cmp	r2, r3
 2006 0b62 C5D3     		bcc	.L117
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 60


 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2007              		.loc 1 468 0 is_stmt 1
 2008 0b64 07F5A253 		add	r3, r7, #5184
 2009 0b68 03F10F03 		add	r3, r3, #15
 2010 0b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2011 0b6e 7349     		ldr	r1, .L257
 2012 0b70 1346     		mov	r3, r2
 2013 0b72 DB00     		lsls	r3, r3, #3
 2014 0b74 9B1A     		subs	r3, r3, r2
 2015 0b76 1B01     		lsls	r3, r3, #4
 2016 0b78 0B44     		add	r3, r3, r1
 2017 0b7a B433     		adds	r3, r3, #180
 2018 0b7c 1B68     		ldr	r3, [r3]
 2019 0b7e 1846     		mov	r0, r3
 2020 0b80 FFF7FEFF 		bl	__aeabi_i2f
 2021 0b84 0346     		mov	r3, r0
 2022 0b86 4FF08F41 		mov	r1, #1199570944
 2023 0b8a 1846     		mov	r0, r3
 2024 0b8c FFF7FEFF 		bl	__aeabi_fdiv
 2025 0b90 0346     		mov	r3, r0
 2026 0b92 1A46     		mov	r2, r3
 2027 0b94 07F13803 		add	r3, r7, #56
 2028 0b98 183B     		subs	r3, r3, #24
 2029 0b9a 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2030              		.loc 1 469 0
 2031 0b9c 0023     		movs	r3, #0
 2032 0b9e 07F5A252 		add	r2, r7, #5184
 2033 0ba2 02F11702 		add	r2, r2, #23
 2034 0ba6 1370     		strb	r3, [r2]
 2035 0ba8 33E0     		b	.L118
 2036              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2037              		.loc 1 470 0 discriminator 3
 2038 0baa 07F5A253 		add	r3, r7, #5184
 2039 0bae 03F11503 		add	r3, r3, #21
 2040 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2041 0bb4 3222     		movs	r2, #50
 2042 0bb6 02FB03F3 		mul	r3, r2, r3
 2043 0bba 1A1D     		adds	r2, r3, #4
 2044 0bbc 07F5A253 		add	r3, r7, #5184
 2045 0bc0 03F11303 		add	r3, r3, #19
 2046 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2047 0bc6 1A44     		add	r2, r2, r3
 2048 0bc8 07F5A253 		add	r3, r7, #5184
 2049 0bcc 03F11303 		add	r3, r3, #19
 2050 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2051 0bd2 1A44     		add	r2, r2, r3
 2052 0bd4 07F5A253 		add	r3, r7, #5184
 2053 0bd8 03F11703 		add	r3, r3, #23
 2054 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2055 0bde D31A     		subs	r3, r2, r3
 2056 0be0 5A1E     		subs	r2, r3, #1
 2057 0be2 07F5A253 		add	r3, r7, #5184
 2058 0be6 03F11703 		add	r3, r3, #23
 2059 0bea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 61


 2060 0bec 07F13803 		add	r3, r7, #56
 2061 0bf0 183B     		subs	r3, r3, #24
 2062 0bf2 0B44     		add	r3, r3, r1
 2063 0bf4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2064 0bf6 07F15803 		add	r3, r7, #88
 2065 0bfa 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2066              		.loc 1 469 0 discriminator 3
 2067 0bfc 07F5A253 		add	r3, r7, #5184
 2068 0c00 03F11703 		add	r3, r3, #23
 2069 0c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 0c06 0133     		adds	r3, r3, #1
 2071 0c08 07F5A252 		add	r2, r7, #5184
 2072 0c0c 02F11702 		add	r2, r2, #23
 2073 0c10 1370     		strb	r3, [r2]
 2074              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2075              		.loc 1 469 0 is_stmt 0 discriminator 1
 2076 0c12 07F5A253 		add	r3, r7, #5184
 2077 0c16 03F11703 		add	r3, r3, #23
 2078 0c1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2079 0c1c 07F5A253 		add	r3, r7, #5184
 2080 0c20 03F11303 		add	r3, r3, #19
 2081 0c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2082 0c26 9A42     		cmp	r2, r3
 2083 0c28 BFD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2084              		.loc 1 472 0 is_stmt 1
 2085 0c2a 07F5A253 		add	r3, r7, #5184
 2086 0c2e 03F10F03 		add	r3, r3, #15
 2087 0c32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2088 0c34 4149     		ldr	r1, .L257
 2089 0c36 1346     		mov	r3, r2
 2090 0c38 DB00     		lsls	r3, r3, #3
 2091 0c3a 9B1A     		subs	r3, r3, r2
 2092 0c3c 1B01     		lsls	r3, r3, #4
 2093 0c3e 0B44     		add	r3, r3, r1
 2094 0c40 B833     		adds	r3, r3, #184
 2095 0c42 1B68     		ldr	r3, [r3]
 2096 0c44 1846     		mov	r0, r3
 2097 0c46 FFF7FEFF 		bl	__aeabi_i2f
 2098 0c4a 0346     		mov	r3, r0
 2099 0c4c 4FF08F41 		mov	r1, #1199570944
 2100 0c50 1846     		mov	r0, r3
 2101 0c52 FFF7FEFF 		bl	__aeabi_fdiv
 2102 0c56 0346     		mov	r3, r0
 2103 0c58 1A46     		mov	r2, r3
 2104 0c5a 07F13803 		add	r3, r7, #56
 2105 0c5e 183B     		subs	r3, r3, #24
 2106 0c60 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2107              		.loc 1 473 0
 2108 0c62 0023     		movs	r3, #0
 2109 0c64 07F5A252 		add	r2, r7, #5184
 2110 0c68 02F11702 		add	r2, r2, #23
 2111 0c6c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 62


 2112 0c6e 34E0     		b	.L120
 2113              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2114              		.loc 1 474 0 discriminator 3
 2115 0c70 07F5A253 		add	r3, r7, #5184
 2116 0c74 03F11503 		add	r3, r3, #21
 2117 0c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2118 0c7a 3222     		movs	r2, #50
 2119 0c7c 02FB03F3 		mul	r3, r2, r3
 2120 0c80 1A1D     		adds	r2, r3, #4
 2121 0c82 07F5A253 		add	r3, r7, #5184
 2122 0c86 03F11303 		add	r3, r3, #19
 2123 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2124 0c8c 5B00     		lsls	r3, r3, #1
 2125 0c8e 1A44     		add	r2, r2, r3
 2126 0c90 07F5A253 		add	r3, r7, #5184
 2127 0c94 03F11303 		add	r3, r3, #19
 2128 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2129 0c9a 1A44     		add	r2, r2, r3
 2130 0c9c 07F5A253 		add	r3, r7, #5184
 2131 0ca0 03F11703 		add	r3, r3, #23
 2132 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2133 0ca6 D31A     		subs	r3, r2, r3
 2134 0ca8 5A1E     		subs	r2, r3, #1
 2135 0caa 07F5A253 		add	r3, r7, #5184
 2136 0cae 03F11703 		add	r3, r3, #23
 2137 0cb2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2138 0cb4 07F13803 		add	r3, r7, #56
 2139 0cb8 183B     		subs	r3, r3, #24
 2140 0cba 0B44     		add	r3, r3, r1
 2141 0cbc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2142 0cbe 07F15803 		add	r3, r7, #88
 2143 0cc2 9954     		strb	r1, [r3, r2]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2144              		.loc 1 473 0 discriminator 3
 2145 0cc4 07F5A253 		add	r3, r7, #5184
 2146 0cc8 03F11703 		add	r3, r3, #23
 2147 0ccc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2148 0cce 0133     		adds	r3, r3, #1
 2149 0cd0 07F5A252 		add	r2, r7, #5184
 2150 0cd4 02F11702 		add	r2, r2, #23
 2151 0cd8 1370     		strb	r3, [r2]
 2152              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2153              		.loc 1 473 0 is_stmt 0 discriminator 1
 2154 0cda 07F5A253 		add	r3, r7, #5184
 2155 0cde 03F11703 		add	r3, r3, #23
 2156 0ce2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2157 0ce4 07F5A253 		add	r3, r7, #5184
 2158 0ce8 03F11303 		add	r3, r3, #19
 2159 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2160 0cee 9A42     		cmp	r2, r3
 2161 0cf0 BED3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 63


 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 2162              		.loc 1 491 0 is_stmt 1
 2163 0cf2 01F08EBB 		b	.L103
 2164              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2165              		.loc 1 478 0
 2166 0cf6 07F5A253 		add	r3, r7, #5184
 2167 0cfa 03F10F03 		add	r3, r3, #15
 2168 0cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2169 0d00 0E49     		ldr	r1, .L257
 2170 0d02 1346     		mov	r3, r2
 2171 0d04 DB00     		lsls	r3, r3, #3
 2172 0d06 9B1A     		subs	r3, r3, r2
 2173 0d08 1B01     		lsls	r3, r3, #4
 2174 0d0a 0B44     		add	r3, r3, r1
 2175 0d0c C833     		adds	r3, r3, #200
 2176 0d0e 1B68     		ldr	r3, [r3]
 2177 0d10 1846     		mov	r0, r3
 2178 0d12 FFF7FEFF 		bl	__aeabi_i2f
 2179 0d16 0346     		mov	r3, r0
 2180 0d18 4FF08F41 		mov	r1, #1199570944
 2181 0d1c 1846     		mov	r0, r3
 2182 0d1e FFF7FEFF 		bl	__aeabi_fdiv
 2183 0d22 0346     		mov	r3, r0
 2184 0d24 1A46     		mov	r2, r3
 2185 0d26 07F13803 		add	r3, r7, #56
 2186 0d2a 183B     		subs	r3, r3, #24
 2187 0d2c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2188              		.loc 1 479 0
 2189 0d2e 0023     		movs	r3, #0
 2190 0d30 07F5A252 		add	r2, r7, #5184
 2191 0d34 02F11702 		add	r2, r2, #23
 2192 0d38 1370     		strb	r3, [r2]
 2193 0d3a 2FE0     		b	.L123
 2194              	.L258:
 2195              		.align	2
 2196              	.L257:
 2197 0d3c 00000000 		.word	c_mem
 2198              	.L124:
 480:..\src/command_processing.c ****                             }
 2199              		.loc 1 480 0 discriminator 3
 2200 0d40 07F5A253 		add	r3, r7, #5184
 2201 0d44 03F11503 		add	r3, r3, #21
 2202 0d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 64


 2203 0d4a 3222     		movs	r2, #50
 2204 0d4c 02FB03F3 		mul	r3, r2, r3
 2205 0d50 1A1D     		adds	r2, r3, #4
 2206 0d52 07F5A253 		add	r3, r7, #5184
 2207 0d56 03F11303 		add	r3, r3, #19
 2208 0d5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2209 0d5c 1A44     		add	r2, r2, r3
 2210 0d5e 07F5A253 		add	r3, r7, #5184
 2211 0d62 03F11703 		add	r3, r3, #23
 2212 0d66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2213 0d68 D31A     		subs	r3, r2, r3
 2214 0d6a 5A1E     		subs	r2, r3, #1
 2215 0d6c 07F5A253 		add	r3, r7, #5184
 2216 0d70 03F11703 		add	r3, r3, #23
 2217 0d74 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2218 0d76 07F13803 		add	r3, r7, #56
 2219 0d7a 183B     		subs	r3, r3, #24
 2220 0d7c 0B44     		add	r3, r3, r1
 2221 0d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2222 0d80 07F15803 		add	r3, r7, #88
 2223 0d84 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2224              		.loc 1 479 0 discriminator 3
 2225 0d86 07F5A253 		add	r3, r7, #5184
 2226 0d8a 03F11703 		add	r3, r3, #23
 2227 0d8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2228 0d90 0133     		adds	r3, r3, #1
 2229 0d92 07F5A252 		add	r2, r7, #5184
 2230 0d96 02F11702 		add	r2, r2, #23
 2231 0d9a 1370     		strb	r3, [r2]
 2232              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2233              		.loc 1 479 0 is_stmt 0 discriminator 1
 2234 0d9c 07F5A253 		add	r3, r7, #5184
 2235 0da0 03F11703 		add	r3, r3, #23
 2236 0da4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2237 0da6 07F5A253 		add	r3, r7, #5184
 2238 0daa 03F11303 		add	r3, r3, #19
 2239 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2240 0db0 9A42     		cmp	r2, r3
 2241 0db2 C5D3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2242              		.loc 1 482 0 is_stmt 1
 2243 0db4 07F5A253 		add	r3, r7, #5184
 2244 0db8 03F10F03 		add	r3, r3, #15
 2245 0dbc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2246 0dbe AA49     		ldr	r1, .L259
 2247 0dc0 1346     		mov	r3, r2
 2248 0dc2 DB00     		lsls	r3, r3, #3
 2249 0dc4 9B1A     		subs	r3, r3, r2
 2250 0dc6 1B01     		lsls	r3, r3, #4
 2251 0dc8 0B44     		add	r3, r3, r1
 2252 0dca CC33     		adds	r3, r3, #204
 2253 0dcc 1B68     		ldr	r3, [r3]
 2254 0dce 1846     		mov	r0, r3
 2255 0dd0 FFF7FEFF 		bl	__aeabi_i2f
 2256 0dd4 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 65


 2257 0dd6 4FF08F41 		mov	r1, #1199570944
 2258 0dda 1846     		mov	r0, r3
 2259 0ddc FFF7FEFF 		bl	__aeabi_fdiv
 2260 0de0 0346     		mov	r3, r0
 2261 0de2 1A46     		mov	r2, r3
 2262 0de4 07F13803 		add	r3, r7, #56
 2263 0de8 183B     		subs	r3, r3, #24
 2264 0dea 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2265              		.loc 1 483 0
 2266 0dec 0023     		movs	r3, #0
 2267 0dee 07F5A252 		add	r2, r7, #5184
 2268 0df2 02F11702 		add	r2, r2, #23
 2269 0df6 1370     		strb	r3, [r2]
 2270 0df8 33E0     		b	.L125
 2271              	.L126:
 484:..\src/command_processing.c ****                             }
 2272              		.loc 1 484 0 discriminator 3
 2273 0dfa 07F5A253 		add	r3, r7, #5184
 2274 0dfe 03F11503 		add	r3, r3, #21
 2275 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2276 0e04 3222     		movs	r2, #50
 2277 0e06 02FB03F3 		mul	r3, r2, r3
 2278 0e0a 1A1D     		adds	r2, r3, #4
 2279 0e0c 07F5A253 		add	r3, r7, #5184
 2280 0e10 03F11303 		add	r3, r3, #19
 2281 0e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2282 0e16 1A44     		add	r2, r2, r3
 2283 0e18 07F5A253 		add	r3, r7, #5184
 2284 0e1c 03F11303 		add	r3, r3, #19
 2285 0e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2286 0e22 1A44     		add	r2, r2, r3
 2287 0e24 07F5A253 		add	r3, r7, #5184
 2288 0e28 03F11703 		add	r3, r3, #23
 2289 0e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 0e2e D31A     		subs	r3, r2, r3
 2291 0e30 5A1E     		subs	r2, r3, #1
 2292 0e32 07F5A253 		add	r3, r7, #5184
 2293 0e36 03F11703 		add	r3, r3, #23
 2294 0e3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2295 0e3c 07F13803 		add	r3, r7, #56
 2296 0e40 183B     		subs	r3, r3, #24
 2297 0e42 0B44     		add	r3, r3, r1
 2298 0e44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2299 0e46 07F15803 		add	r3, r7, #88
 2300 0e4a 9954     		strb	r1, [r3, r2]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2301              		.loc 1 483 0 discriminator 3
 2302 0e4c 07F5A253 		add	r3, r7, #5184
 2303 0e50 03F11703 		add	r3, r3, #23
 2304 0e54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0e56 0133     		adds	r3, r3, #1
 2306 0e58 07F5A252 		add	r2, r7, #5184
 2307 0e5c 02F11702 		add	r2, r2, #23
 2308 0e60 1370     		strb	r3, [r2]
 2309              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 66


 2310              		.loc 1 483 0 is_stmt 0 discriminator 1
 2311 0e62 07F5A253 		add	r3, r7, #5184
 2312 0e66 03F11703 		add	r3, r3, #23
 2313 0e6a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2314 0e6c 07F5A253 		add	r3, r7, #5184
 2315 0e70 03F11303 		add	r3, r3, #19
 2316 0e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2317 0e76 9A42     		cmp	r2, r3
 2318 0e78 BFD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2319              		.loc 1 486 0 is_stmt 1
 2320 0e7a 07F5A253 		add	r3, r7, #5184
 2321 0e7e 03F10F03 		add	r3, r3, #15
 2322 0e82 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2323 0e84 7849     		ldr	r1, .L259
 2324 0e86 1346     		mov	r3, r2
 2325 0e88 DB00     		lsls	r3, r3, #3
 2326 0e8a 9B1A     		subs	r3, r3, r2
 2327 0e8c 1B01     		lsls	r3, r3, #4
 2328 0e8e 0B44     		add	r3, r3, r1
 2329 0e90 D033     		adds	r3, r3, #208
 2330 0e92 1B68     		ldr	r3, [r3]
 2331 0e94 1846     		mov	r0, r3
 2332 0e96 FFF7FEFF 		bl	__aeabi_i2f
 2333 0e9a 0346     		mov	r3, r0
 2334 0e9c 4FF08F41 		mov	r1, #1199570944
 2335 0ea0 1846     		mov	r0, r3
 2336 0ea2 FFF7FEFF 		bl	__aeabi_fdiv
 2337 0ea6 0346     		mov	r3, r0
 2338 0ea8 1A46     		mov	r2, r3
 2339 0eaa 07F13803 		add	r3, r7, #56
 2340 0eae 183B     		subs	r3, r3, #24
 2341 0eb0 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2342              		.loc 1 487 0
 2343 0eb2 0023     		movs	r3, #0
 2344 0eb4 07F5A252 		add	r2, r7, #5184
 2345 0eb8 02F11702 		add	r2, r2, #23
 2346 0ebc 1370     		strb	r3, [r2]
 2347 0ebe 34E0     		b	.L127
 2348              	.L128:
 488:..\src/command_processing.c ****                             }
 2349              		.loc 1 488 0 discriminator 3
 2350 0ec0 07F5A253 		add	r3, r7, #5184
 2351 0ec4 03F11503 		add	r3, r3, #21
 2352 0ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2353 0eca 3222     		movs	r2, #50
 2354 0ecc 02FB03F3 		mul	r3, r2, r3
 2355 0ed0 1A1D     		adds	r2, r3, #4
 2356 0ed2 07F5A253 		add	r3, r7, #5184
 2357 0ed6 03F11303 		add	r3, r3, #19
 2358 0eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0edc 5B00     		lsls	r3, r3, #1
 2360 0ede 1A44     		add	r2, r2, r3
 2361 0ee0 07F5A253 		add	r3, r7, #5184
 2362 0ee4 03F11303 		add	r3, r3, #19
 2363 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 67


 2364 0eea 1A44     		add	r2, r2, r3
 2365 0eec 07F5A253 		add	r3, r7, #5184
 2366 0ef0 03F11703 		add	r3, r3, #23
 2367 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2368 0ef6 D31A     		subs	r3, r2, r3
 2369 0ef8 5A1E     		subs	r2, r3, #1
 2370 0efa 07F5A253 		add	r3, r7, #5184
 2371 0efe 03F11703 		add	r3, r3, #23
 2372 0f02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2373 0f04 07F13803 		add	r3, r7, #56
 2374 0f08 183B     		subs	r3, r3, #24
 2375 0f0a 0B44     		add	r3, r3, r1
 2376 0f0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2377 0f0e 07F15803 		add	r3, r7, #88
 2378 0f12 9954     		strb	r1, [r3, r2]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2379              		.loc 1 487 0 discriminator 3
 2380 0f14 07F5A253 		add	r3, r7, #5184
 2381 0f18 03F11703 		add	r3, r3, #23
 2382 0f1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2383 0f1e 0133     		adds	r3, r3, #1
 2384 0f20 07F5A252 		add	r2, r7, #5184
 2385 0f24 02F11702 		add	r2, r2, #23
 2386 0f28 1370     		strb	r3, [r2]
 2387              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2388              		.loc 1 487 0 is_stmt 0 discriminator 1
 2389 0f2a 07F5A253 		add	r3, r7, #5184
 2390 0f2e 03F11703 		add	r3, r3, #23
 2391 0f32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2392 0f34 07F5A253 		add	r3, r7, #5184
 2393 0f38 03F11303 		add	r3, r3, #19
 2394 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2395 0f3e 9A42     		cmp	r2, r3
 2396 0f40 BED3     		bcc	.L128
 2397              		.loc 1 491 0 is_stmt 1
 2398 0f42 01F066BA 		b	.L103
 2399              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2400              		.loc 1 494 0
 2401 0f46 07F5A253 		add	r3, r7, #5184
 2402 0f4a 03F10F03 		add	r3, r3, #15
 2403 0f4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2404 0f50 4549     		ldr	r1, .L259
 2405 0f52 1346     		mov	r3, r2
 2406 0f54 DB00     		lsls	r3, r3, #3
 2407 0f56 9B1A     		subs	r3, r3, r2
 2408 0f58 1B01     		lsls	r3, r3, #4
 2409 0f5a 0B44     		add	r3, r3, r1
 2410 0f5c 03F20F13 		addw	r3, r3, #271
 2411 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2412 0f62 032B     		cmp	r3, #3
 2413 0f64 00F02881 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2414              		.loc 1 495 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 68


 2415 0f68 07F5A253 		add	r3, r7, #5184
 2416 0f6c 03F10F03 		add	r3, r3, #15
 2417 0f70 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2418 0f72 3D49     		ldr	r1, .L259
 2419 0f74 1346     		mov	r3, r2
 2420 0f76 DB00     		lsls	r3, r3, #3
 2421 0f78 9B1A     		subs	r3, r3, r2
 2422 0f7a 1B01     		lsls	r3, r3, #4
 2423 0f7c 0B44     		add	r3, r3, r1
 2424 0f7e BC33     		adds	r3, r3, #188
 2425 0f80 1B68     		ldr	r3, [r3]
 2426 0f82 1846     		mov	r0, r3
 2427 0f84 FFF7FEFF 		bl	__aeabi_i2f
 2428 0f88 0346     		mov	r3, r0
 2429 0f8a 4FF08F41 		mov	r1, #1199570944
 2430 0f8e 1846     		mov	r0, r3
 2431 0f90 FFF7FEFF 		bl	__aeabi_fdiv
 2432 0f94 0346     		mov	r3, r0
 2433 0f96 1A46     		mov	r2, r3
 2434 0f98 07F13803 		add	r3, r7, #56
 2435 0f9c 183B     		subs	r3, r3, #24
 2436 0f9e 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2437              		.loc 1 496 0
 2438 0fa0 0023     		movs	r3, #0
 2439 0fa2 07F5A252 		add	r2, r7, #5184
 2440 0fa6 02F11702 		add	r2, r2, #23
 2441 0faa 1370     		strb	r3, [r2]
 2442 0fac 2DE0     		b	.L130
 2443              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2444              		.loc 1 497 0 discriminator 3
 2445 0fae 07F5A253 		add	r3, r7, #5184
 2446 0fb2 03F11503 		add	r3, r3, #21
 2447 0fb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2448 0fb8 3222     		movs	r2, #50
 2449 0fba 02FB03F3 		mul	r3, r2, r3
 2450 0fbe 1A1D     		adds	r2, r3, #4
 2451 0fc0 07F5A253 		add	r3, r7, #5184
 2452 0fc4 03F11303 		add	r3, r3, #19
 2453 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2454 0fca 1A44     		add	r2, r2, r3
 2455 0fcc 07F5A253 		add	r3, r7, #5184
 2456 0fd0 03F11703 		add	r3, r3, #23
 2457 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2458 0fd6 D31A     		subs	r3, r2, r3
 2459 0fd8 5A1E     		subs	r2, r3, #1
 2460 0fda 07F5A253 		add	r3, r7, #5184
 2461 0fde 03F11703 		add	r3, r3, #23
 2462 0fe2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2463 0fe4 07F13803 		add	r3, r7, #56
 2464 0fe8 183B     		subs	r3, r3, #24
 2465 0fea 0B44     		add	r3, r3, r1
 2466 0fec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2467 0fee 07F15803 		add	r3, r7, #88
 2468 0ff2 9954     		strb	r1, [r3, r2]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 69


 2469              		.loc 1 496 0 discriminator 3
 2470 0ff4 07F5A253 		add	r3, r7, #5184
 2471 0ff8 03F11703 		add	r3, r3, #23
 2472 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2473 0ffe 0133     		adds	r3, r3, #1
 2474 1000 07F5A252 		add	r2, r7, #5184
 2475 1004 02F11702 		add	r2, r2, #23
 2476 1008 1370     		strb	r3, [r2]
 2477              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2478              		.loc 1 496 0 is_stmt 0 discriminator 1
 2479 100a 07F5A253 		add	r3, r7, #5184
 2480 100e 03F11703 		add	r3, r3, #23
 2481 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2482 1014 07F5A253 		add	r3, r7, #5184
 2483 1018 03F11303 		add	r3, r3, #19
 2484 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2485 101e 9A42     		cmp	r2, r3
 2486 1020 C5D3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2487              		.loc 1 499 0 is_stmt 1
 2488 1022 07F5A253 		add	r3, r7, #5184
 2489 1026 03F10F03 		add	r3, r3, #15
 2490 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2491 102c 0E49     		ldr	r1, .L259
 2492 102e 1346     		mov	r3, r2
 2493 1030 DB00     		lsls	r3, r3, #3
 2494 1032 9B1A     		subs	r3, r3, r2
 2495 1034 1B01     		lsls	r3, r3, #4
 2496 1036 0B44     		add	r3, r3, r1
 2497 1038 C033     		adds	r3, r3, #192
 2498 103a 1B68     		ldr	r3, [r3]
 2499 103c 1846     		mov	r0, r3
 2500 103e FFF7FEFF 		bl	__aeabi_i2f
 2501 1042 0346     		mov	r3, r0
 2502 1044 4FF08F41 		mov	r1, #1199570944
 2503 1048 1846     		mov	r0, r3
 2504 104a FFF7FEFF 		bl	__aeabi_fdiv
 2505 104e 0346     		mov	r3, r0
 2506 1050 1A46     		mov	r2, r3
 2507 1052 07F13803 		add	r3, r7, #56
 2508 1056 183B     		subs	r3, r3, #24
 2509 1058 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2510              		.loc 1 500 0
 2511 105a 0023     		movs	r3, #0
 2512 105c 07F5A252 		add	r2, r7, #5184
 2513 1060 02F11702 		add	r2, r2, #23
 2514 1064 1370     		strb	r3, [r2]
 2515 1066 35E0     		b	.L132
 2516              	.L260:
 2517              		.align	2
 2518              	.L259:
 2519 1068 00000000 		.word	c_mem
 2520              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 70


 2521              		.loc 1 501 0 discriminator 3
 2522 106c 07F5A253 		add	r3, r7, #5184
 2523 1070 03F11503 		add	r3, r3, #21
 2524 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2525 1076 3222     		movs	r2, #50
 2526 1078 02FB03F3 		mul	r3, r2, r3
 2527 107c 1A1D     		adds	r2, r3, #4
 2528 107e 07F5A253 		add	r3, r7, #5184
 2529 1082 03F11303 		add	r3, r3, #19
 2530 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2531 1088 1A44     		add	r2, r2, r3
 2532 108a 07F5A253 		add	r3, r7, #5184
 2533 108e 03F11303 		add	r3, r3, #19
 2534 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2535 1094 1A44     		add	r2, r2, r3
 2536 1096 07F5A253 		add	r3, r7, #5184
 2537 109a 03F11703 		add	r3, r3, #23
 2538 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2539 10a0 D31A     		subs	r3, r2, r3
 2540 10a2 5A1E     		subs	r2, r3, #1
 2541 10a4 07F5A253 		add	r3, r7, #5184
 2542 10a8 03F11703 		add	r3, r3, #23
 2543 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2544 10ae 07F13803 		add	r3, r7, #56
 2545 10b2 183B     		subs	r3, r3, #24
 2546 10b4 0B44     		add	r3, r3, r1
 2547 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2548 10b8 07F15803 		add	r3, r7, #88
 2549 10bc 9954     		strb	r1, [r3, r2]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2550              		.loc 1 500 0 discriminator 3
 2551 10be 07F5A253 		add	r3, r7, #5184
 2552 10c2 03F11703 		add	r3, r3, #23
 2553 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2554 10c8 0133     		adds	r3, r3, #1
 2555 10ca 07F5A252 		add	r2, r7, #5184
 2556 10ce 02F11702 		add	r2, r2, #23
 2557 10d2 1370     		strb	r3, [r2]
 2558              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2559              		.loc 1 500 0 is_stmt 0 discriminator 1
 2560 10d4 07F5A253 		add	r3, r7, #5184
 2561 10d8 03F11703 		add	r3, r3, #23
 2562 10dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2563 10de 07F5A253 		add	r3, r7, #5184
 2564 10e2 03F11303 		add	r3, r3, #19
 2565 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2566 10e8 9A42     		cmp	r2, r3
 2567 10ea BFD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2568              		.loc 1 503 0 is_stmt 1
 2569 10ec 07F5A253 		add	r3, r7, #5184
 2570 10f0 03F10F03 		add	r3, r3, #15
 2571 10f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2572 10f6 C349     		ldr	r1, .L261
 2573 10f8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 71


 2574 10fa DB00     		lsls	r3, r3, #3
 2575 10fc 9B1A     		subs	r3, r3, r2
 2576 10fe 1B01     		lsls	r3, r3, #4
 2577 1100 0B44     		add	r3, r3, r1
 2578 1102 C433     		adds	r3, r3, #196
 2579 1104 1B68     		ldr	r3, [r3]
 2580 1106 1846     		mov	r0, r3
 2581 1108 FFF7FEFF 		bl	__aeabi_i2f
 2582 110c 0346     		mov	r3, r0
 2583 110e 4FF08F41 		mov	r1, #1199570944
 2584 1112 1846     		mov	r0, r3
 2585 1114 FFF7FEFF 		bl	__aeabi_fdiv
 2586 1118 0346     		mov	r3, r0
 2587 111a 1A46     		mov	r2, r3
 2588 111c 07F13803 		add	r3, r7, #56
 2589 1120 183B     		subs	r3, r3, #24
 2590 1122 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2591              		.loc 1 504 0
 2592 1124 0023     		movs	r3, #0
 2593 1126 07F5A252 		add	r2, r7, #5184
 2594 112a 02F11702 		add	r2, r2, #23
 2595 112e 1370     		strb	r3, [r2]
 2596 1130 34E0     		b	.L134
 2597              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2598              		.loc 1 505 0 discriminator 3
 2599 1132 07F5A253 		add	r3, r7, #5184
 2600 1136 03F11503 		add	r3, r3, #21
 2601 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2602 113c 3222     		movs	r2, #50
 2603 113e 02FB03F3 		mul	r3, r2, r3
 2604 1142 1A1D     		adds	r2, r3, #4
 2605 1144 07F5A253 		add	r3, r7, #5184
 2606 1148 03F11303 		add	r3, r3, #19
 2607 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2608 114e 5B00     		lsls	r3, r3, #1
 2609 1150 1A44     		add	r2, r2, r3
 2610 1152 07F5A253 		add	r3, r7, #5184
 2611 1156 03F11303 		add	r3, r3, #19
 2612 115a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2613 115c 1A44     		add	r2, r2, r3
 2614 115e 07F5A253 		add	r3, r7, #5184
 2615 1162 03F11703 		add	r3, r3, #23
 2616 1166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2617 1168 D31A     		subs	r3, r2, r3
 2618 116a 5A1E     		subs	r2, r3, #1
 2619 116c 07F5A253 		add	r3, r7, #5184
 2620 1170 03F11703 		add	r3, r3, #23
 2621 1174 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2622 1176 07F13803 		add	r3, r7, #56
 2623 117a 183B     		subs	r3, r3, #24
 2624 117c 0B44     		add	r3, r3, r1
 2625 117e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2626 1180 07F15803 		add	r3, r7, #88
 2627 1184 9954     		strb	r1, [r3, r2]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 72


 2628              		.loc 1 504 0 discriminator 3
 2629 1186 07F5A253 		add	r3, r7, #5184
 2630 118a 03F11703 		add	r3, r3, #23
 2631 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2632 1190 0133     		adds	r3, r3, #1
 2633 1192 07F5A252 		add	r2, r7, #5184
 2634 1196 02F11702 		add	r2, r2, #23
 2635 119a 1370     		strb	r3, [r2]
 2636              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2637              		.loc 1 504 0 is_stmt 0 discriminator 1
 2638 119c 07F5A253 		add	r3, r7, #5184
 2639 11a0 03F11703 		add	r3, r3, #23
 2640 11a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2641 11a6 07F5A253 		add	r3, r7, #5184
 2642 11aa 03F11303 		add	r3, r3, #19
 2643 11ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2644 11b0 9A42     		cmp	r2, r3
 2645 11b2 BED3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2646              		.loc 1 522 0 is_stmt 1
 2647 11b4 01F02DB9 		b	.L103
 2648              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2649              		.loc 1 509 0
 2650 11b8 07F5A253 		add	r3, r7, #5184
 2651 11bc 03F10F03 		add	r3, r3, #15
 2652 11c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2653 11c2 9049     		ldr	r1, .L261
 2654 11c4 1346     		mov	r3, r2
 2655 11c6 DB00     		lsls	r3, r3, #3
 2656 11c8 9B1A     		subs	r3, r3, r2
 2657 11ca 1B01     		lsls	r3, r3, #4
 2658 11cc 0B44     		add	r3, r3, r1
 2659 11ce D433     		adds	r3, r3, #212
 2660 11d0 1B68     		ldr	r3, [r3]
 2661 11d2 1846     		mov	r0, r3
 2662 11d4 FFF7FEFF 		bl	__aeabi_i2f
 2663 11d8 0346     		mov	r3, r0
 2664 11da 4FF08F41 		mov	r1, #1199570944
 2665 11de 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 73


 2666 11e0 FFF7FEFF 		bl	__aeabi_fdiv
 2667 11e4 0346     		mov	r3, r0
 2668 11e6 1A46     		mov	r2, r3
 2669 11e8 07F13803 		add	r3, r7, #56
 2670 11ec 183B     		subs	r3, r3, #24
 2671 11ee 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2672              		.loc 1 510 0
 2673 11f0 0023     		movs	r3, #0
 2674 11f2 07F5A252 		add	r2, r7, #5184
 2675 11f6 02F11702 		add	r2, r2, #23
 2676 11fa 1370     		strb	r3, [r2]
 2677 11fc 2DE0     		b	.L137
 2678              	.L138:
 511:..\src/command_processing.c ****                             }
 2679              		.loc 1 511 0 discriminator 3
 2680 11fe 07F5A253 		add	r3, r7, #5184
 2681 1202 03F11503 		add	r3, r3, #21
 2682 1206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2683 1208 3222     		movs	r2, #50
 2684 120a 02FB03F3 		mul	r3, r2, r3
 2685 120e 1A1D     		adds	r2, r3, #4
 2686 1210 07F5A253 		add	r3, r7, #5184
 2687 1214 03F11303 		add	r3, r3, #19
 2688 1218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2689 121a 1A44     		add	r2, r2, r3
 2690 121c 07F5A253 		add	r3, r7, #5184
 2691 1220 03F11703 		add	r3, r3, #23
 2692 1224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 1226 D31A     		subs	r3, r2, r3
 2694 1228 5A1E     		subs	r2, r3, #1
 2695 122a 07F5A253 		add	r3, r7, #5184
 2696 122e 03F11703 		add	r3, r3, #23
 2697 1232 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2698 1234 07F13803 		add	r3, r7, #56
 2699 1238 183B     		subs	r3, r3, #24
 2700 123a 0B44     		add	r3, r3, r1
 2701 123c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2702 123e 07F15803 		add	r3, r7, #88
 2703 1242 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2704              		.loc 1 510 0 discriminator 3
 2705 1244 07F5A253 		add	r3, r7, #5184
 2706 1248 03F11703 		add	r3, r3, #23
 2707 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2708 124e 0133     		adds	r3, r3, #1
 2709 1250 07F5A252 		add	r2, r7, #5184
 2710 1254 02F11702 		add	r2, r2, #23
 2711 1258 1370     		strb	r3, [r2]
 2712              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2713              		.loc 1 510 0 is_stmt 0 discriminator 1
 2714 125a 07F5A253 		add	r3, r7, #5184
 2715 125e 03F11703 		add	r3, r3, #23
 2716 1262 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2717 1264 07F5A253 		add	r3, r7, #5184
 2718 1268 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 74


 2719 126c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2720 126e 9A42     		cmp	r2, r3
 2721 1270 C5D3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2722              		.loc 1 513 0 is_stmt 1
 2723 1272 07F5A253 		add	r3, r7, #5184
 2724 1276 03F10F03 		add	r3, r3, #15
 2725 127a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2726 127c 6149     		ldr	r1, .L261
 2727 127e 1346     		mov	r3, r2
 2728 1280 DB00     		lsls	r3, r3, #3
 2729 1282 9B1A     		subs	r3, r3, r2
 2730 1284 1B01     		lsls	r3, r3, #4
 2731 1286 0B44     		add	r3, r3, r1
 2732 1288 D833     		adds	r3, r3, #216
 2733 128a 1B68     		ldr	r3, [r3]
 2734 128c 1846     		mov	r0, r3
 2735 128e FFF7FEFF 		bl	__aeabi_i2f
 2736 1292 0346     		mov	r3, r0
 2737 1294 4FF08F41 		mov	r1, #1199570944
 2738 1298 1846     		mov	r0, r3
 2739 129a FFF7FEFF 		bl	__aeabi_fdiv
 2740 129e 0346     		mov	r3, r0
 2741 12a0 1A46     		mov	r2, r3
 2742 12a2 07F13803 		add	r3, r7, #56
 2743 12a6 183B     		subs	r3, r3, #24
 2744 12a8 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2745              		.loc 1 514 0
 2746 12aa 0023     		movs	r3, #0
 2747 12ac 07F5A252 		add	r2, r7, #5184
 2748 12b0 02F11702 		add	r2, r2, #23
 2749 12b4 1370     		strb	r3, [r2]
 2750 12b6 33E0     		b	.L139
 2751              	.L140:
 515:..\src/command_processing.c ****                             }
 2752              		.loc 1 515 0 discriminator 3
 2753 12b8 07F5A253 		add	r3, r7, #5184
 2754 12bc 03F11503 		add	r3, r3, #21
 2755 12c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2756 12c2 3222     		movs	r2, #50
 2757 12c4 02FB03F3 		mul	r3, r2, r3
 2758 12c8 1A1D     		adds	r2, r3, #4
 2759 12ca 07F5A253 		add	r3, r7, #5184
 2760 12ce 03F11303 		add	r3, r3, #19
 2761 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2762 12d4 1A44     		add	r2, r2, r3
 2763 12d6 07F5A253 		add	r3, r7, #5184
 2764 12da 03F11303 		add	r3, r3, #19
 2765 12de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2766 12e0 1A44     		add	r2, r2, r3
 2767 12e2 07F5A253 		add	r3, r7, #5184
 2768 12e6 03F11703 		add	r3, r3, #23
 2769 12ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2770 12ec D31A     		subs	r3, r2, r3
 2771 12ee 5A1E     		subs	r2, r3, #1
 2772 12f0 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 75


 2773 12f4 03F11703 		add	r3, r3, #23
 2774 12f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2775 12fa 07F13803 		add	r3, r7, #56
 2776 12fe 183B     		subs	r3, r3, #24
 2777 1300 0B44     		add	r3, r3, r1
 2778 1302 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2779 1304 07F15803 		add	r3, r7, #88
 2780 1308 9954     		strb	r1, [r3, r2]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2781              		.loc 1 514 0 discriminator 3
 2782 130a 07F5A253 		add	r3, r7, #5184
 2783 130e 03F11703 		add	r3, r3, #23
 2784 1312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2785 1314 0133     		adds	r3, r3, #1
 2786 1316 07F5A252 		add	r2, r7, #5184
 2787 131a 02F11702 		add	r2, r2, #23
 2788 131e 1370     		strb	r3, [r2]
 2789              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2790              		.loc 1 514 0 is_stmt 0 discriminator 1
 2791 1320 07F5A253 		add	r3, r7, #5184
 2792 1324 03F11703 		add	r3, r3, #23
 2793 1328 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2794 132a 07F5A253 		add	r3, r7, #5184
 2795 132e 03F11303 		add	r3, r3, #19
 2796 1332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 1334 9A42     		cmp	r2, r3
 2798 1336 BFD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2799              		.loc 1 517 0 is_stmt 1
 2800 1338 07F5A253 		add	r3, r7, #5184
 2801 133c 03F10F03 		add	r3, r3, #15
 2802 1340 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2803 1342 3049     		ldr	r1, .L261
 2804 1344 1346     		mov	r3, r2
 2805 1346 DB00     		lsls	r3, r3, #3
 2806 1348 9B1A     		subs	r3, r3, r2
 2807 134a 1B01     		lsls	r3, r3, #4
 2808 134c 0B44     		add	r3, r3, r1
 2809 134e DC33     		adds	r3, r3, #220
 2810 1350 1B68     		ldr	r3, [r3]
 2811 1352 1846     		mov	r0, r3
 2812 1354 FFF7FEFF 		bl	__aeabi_i2f
 2813 1358 0346     		mov	r3, r0
 2814 135a 4FF08F41 		mov	r1, #1199570944
 2815 135e 1846     		mov	r0, r3
 2816 1360 FFF7FEFF 		bl	__aeabi_fdiv
 2817 1364 0346     		mov	r3, r0
 2818 1366 1A46     		mov	r2, r3
 2819 1368 07F13803 		add	r3, r7, #56
 2820 136c 183B     		subs	r3, r3, #24
 2821 136e 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2822              		.loc 1 518 0
 2823 1370 0023     		movs	r3, #0
 2824 1372 07F5A252 		add	r2, r7, #5184
 2825 1376 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 76


 2826 137a 1370     		strb	r3, [r2]
 2827 137c 34E0     		b	.L141
 2828              	.L142:
 519:..\src/command_processing.c ****                             }
 2829              		.loc 1 519 0 discriminator 3
 2830 137e 07F5A253 		add	r3, r7, #5184
 2831 1382 03F11503 		add	r3, r3, #21
 2832 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2833 1388 3222     		movs	r2, #50
 2834 138a 02FB03F3 		mul	r3, r2, r3
 2835 138e 1A1D     		adds	r2, r3, #4
 2836 1390 07F5A253 		add	r3, r7, #5184
 2837 1394 03F11303 		add	r3, r3, #19
 2838 1398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2839 139a 5B00     		lsls	r3, r3, #1
 2840 139c 1A44     		add	r2, r2, r3
 2841 139e 07F5A253 		add	r3, r7, #5184
 2842 13a2 03F11303 		add	r3, r3, #19
 2843 13a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2844 13a8 1A44     		add	r2, r2, r3
 2845 13aa 07F5A253 		add	r3, r7, #5184
 2846 13ae 03F11703 		add	r3, r3, #23
 2847 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2848 13b4 D31A     		subs	r3, r2, r3
 2849 13b6 5A1E     		subs	r2, r3, #1
 2850 13b8 07F5A253 		add	r3, r7, #5184
 2851 13bc 03F11703 		add	r3, r3, #23
 2852 13c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2853 13c2 07F13803 		add	r3, r7, #56
 2854 13c6 183B     		subs	r3, r3, #24
 2855 13c8 0B44     		add	r3, r3, r1
 2856 13ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2857 13cc 07F15803 		add	r3, r7, #88
 2858 13d0 9954     		strb	r1, [r3, r2]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2859              		.loc 1 518 0 discriminator 3
 2860 13d2 07F5A253 		add	r3, r7, #5184
 2861 13d6 03F11703 		add	r3, r3, #23
 2862 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2863 13dc 0133     		adds	r3, r3, #1
 2864 13de 07F5A252 		add	r2, r7, #5184
 2865 13e2 02F11702 		add	r2, r2, #23
 2866 13e6 1370     		strb	r3, [r2]
 2867              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2868              		.loc 1 518 0 is_stmt 0 discriminator 1
 2869 13e8 07F5A253 		add	r3, r7, #5184
 2870 13ec 03F11703 		add	r3, r3, #23
 2871 13f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2872 13f2 07F5A253 		add	r3, r7, #5184
 2873 13f6 03F11303 		add	r3, r3, #19
 2874 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 13fc 9A42     		cmp	r2, r3
 2876 13fe BED3     		bcc	.L142
 2877              		.loc 1 522 0 is_stmt 1
 2878 1400 01F007B8 		b	.L103
 2879              	.L262:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 77


 2880              		.align	2
 2881              	.L261:
 2882 1404 00000000 		.word	c_mem
 2883              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2884              		.loc 1 525 0
 2885 1408 07F5A253 		add	r3, r7, #5184
 2886 140c 03F10F03 		add	r3, r3, #15
 2887 1410 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2888 1412 C849     		ldr	r1, .L263
 2889 1414 1346     		mov	r3, r2
 2890 1416 DB00     		lsls	r3, r3, #3
 2891 1418 9B1A     		subs	r3, r3, r2
 2892 141a 1B01     		lsls	r3, r3, #4
 2893 141c 0B44     		add	r3, r3, r1
 2894 141e 03F58873 		add	r3, r3, #272
 2895 1422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2896 1424 1846     		mov	r0, r3
 2897 1426 07F5A253 		add	r3, r7, #5184
 2898 142a 03F11703 		add	r3, r3, #23
 2899 142e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2900 1430 C149     		ldr	r1, .L263+4
 2901 1432 0346     		mov	r3, r0
 2902 1434 5B00     		lsls	r3, r3, #1
 2903 1436 0344     		add	r3, r3, r0
 2904 1438 9B00     		lsls	r3, r3, #2
 2905 143a 1344     		add	r3, r3, r2
 2906 143c 6633     		adds	r3, r3, #102
 2907 143e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2908 1442 07F5A253 		add	r3, r7, #5184
 2909 1446 03F10F03 		add	r3, r3, #15
 2910 144a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2911 144c B948     		ldr	r0, .L263
 2912 144e 1346     		mov	r3, r2
 2913 1450 DB00     		lsls	r3, r3, #3
 2914 1452 9B1A     		subs	r3, r3, r2
 2915 1454 1B01     		lsls	r3, r3, #4
 2916 1456 0344     		add	r3, r3, r0
 2917 1458 03F58873 		add	r3, r3, #272
 2918 145c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2919 145e 1C46     		mov	r4, r3
 2920 1460 07F5A253 		add	r3, r7, #5184
 2921 1464 03F11703 		add	r3, r3, #23
 2922 1468 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2923 146a B348     		ldr	r0, .L263+4
 2924 146c 2346     		mov	r3, r4
 2925 146e 5B00     		lsls	r3, r3, #1
 2926 1470 2344     		add	r3, r3, r4
 2927 1472 1B01     		lsls	r3, r3, #4
 2928 1474 0344     		add	r3, r3, r0
 2929 1476 1344     		add	r3, r3, r2
 2930 1478 03F29513 		addw	r3, r3, #405
 2931 147c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2932 147e 41FA03F3 		asr	r3, r1, r3
 2933 1482 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 78


 2934 1484 07F13803 		add	r3, r7, #56
 2935 1488 1A3B     		subs	r3, r3, #26
 2936 148a 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2937              		.loc 1 526 0
 2938 148c 0023     		movs	r3, #0
 2939 148e 07F5A252 		add	r2, r7, #5184
 2940 1492 02F11602 		add	r2, r2, #22
 2941 1496 1370     		strb	r3, [r2]
 2942 1498 3AE0     		b	.L143
 2943              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2944              		.loc 1 527 0 discriminator 3
 2945 149a 07F5A253 		add	r3, r7, #5184
 2946 149e 03F11503 		add	r3, r3, #21
 2947 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2948 14a4 3222     		movs	r2, #50
 2949 14a6 02FB03F3 		mul	r3, r2, r3
 2950 14aa 1A1D     		adds	r2, r3, #4
 2951 14ac 07F5A253 		add	r3, r7, #5184
 2952 14b0 03F11703 		add	r3, r3, #23
 2953 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 14b6 07F5A251 		add	r1, r7, #5184
 2955 14ba 01F11301 		add	r1, r1, #19
 2956 14be 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2957 14c0 01FB03F3 		mul	r3, r1, r3
 2958 14c4 1A44     		add	r2, r2, r3
 2959 14c6 07F5A253 		add	r3, r7, #5184
 2960 14ca 03F11303 		add	r3, r3, #19
 2961 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2962 14d0 1A44     		add	r2, r2, r3
 2963 14d2 07F5A253 		add	r3, r7, #5184
 2964 14d6 03F11603 		add	r3, r3, #22
 2965 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2966 14dc D31A     		subs	r3, r2, r3
 2967 14de 5A1E     		subs	r2, r3, #1
 2968 14e0 07F5A253 		add	r3, r7, #5184
 2969 14e4 03F11603 		add	r3, r3, #22
 2970 14e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2971 14ea 07F13803 		add	r3, r7, #56
 2972 14ee 1A3B     		subs	r3, r3, #26
 2973 14f0 0B44     		add	r3, r3, r1
 2974 14f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2975 14f4 07F15803 		add	r3, r7, #88
 2976 14f8 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2977              		.loc 1 526 0 discriminator 3
 2978 14fa 07F5A253 		add	r3, r7, #5184
 2979 14fe 03F11603 		add	r3, r3, #22
 2980 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2981 1504 0133     		adds	r3, r3, #1
 2982 1506 07F5A252 		add	r2, r7, #5184
 2983 150a 02F11602 		add	r2, r2, #22
 2984 150e 1370     		strb	r3, [r2]
 2985              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2986              		.loc 1 526 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 79


 2987 1510 07F5A253 		add	r3, r7, #5184
 2988 1514 03F11603 		add	r3, r3, #22
 2989 1518 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2990 151a 07F5A253 		add	r3, r7, #5184
 2991 151e 03F11303 		add	r3, r3, #19
 2992 1522 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2993 1524 9A42     		cmp	r2, r3
 2994 1526 B8D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2995              		.loc 1 529 0 is_stmt 1
 2996 1528 00F073BF 		b	.L103
 2997              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2998              		.loc 1 532 0
 2999 152c 07F5A253 		add	r3, r7, #5184
 3000 1530 03F10F03 		add	r3, r3, #15
 3001 1534 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3002 1536 8049     		ldr	r1, .L263+4
 3003 1538 1346     		mov	r3, r2
 3004 153a DB00     		lsls	r3, r3, #3
 3005 153c 9B1A     		subs	r3, r3, r2
 3006 153e 1B01     		lsls	r3, r3, #4
 3007 1540 0B44     		add	r3, r3, r1
 3008 1542 E433     		adds	r3, r3, #228
 3009 1544 1968     		ldr	r1, [r3]
 3010 1546 07F5A253 		add	r3, r7, #5184
 3011 154a 03F10F03 		add	r3, r3, #15
 3012 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3013 1550 7848     		ldr	r0, .L263
 3014 1552 1346     		mov	r3, r2
 3015 1554 DB00     		lsls	r3, r3, #3
 3016 1556 9B1A     		subs	r3, r3, r2
 3017 1558 1B01     		lsls	r3, r3, #4
 3018 155a 0344     		add	r3, r3, r0
 3019 155c 03F58873 		add	r3, r3, #272
 3020 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3021 1562 1846     		mov	r0, r3
 3022 1564 744A     		ldr	r2, .L263+4
 3023 1566 0346     		mov	r3, r0
 3024 1568 5B00     		lsls	r3, r3, #1
 3025 156a 0344     		add	r3, r3, r0
 3026 156c 1B01     		lsls	r3, r3, #4
 3027 156e 1344     		add	r3, r3, r2
 3028 1570 03F29513 		addw	r3, r3, #405
 3029 1574 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3030 1576 41FA03F2 		asr	r2, r1, r3
 3031 157a 07F11803 		add	r3, r7, #24
 3032 157e 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3033              		.loc 1 533 0
 3034 1580 0023     		movs	r3, #0
 3035 1582 07F5A252 		add	r2, r7, #5184
 3036 1586 02F11602 		add	r2, r2, #22
 3037 158a 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 80


 3038 158c 2CE0     		b	.L145
 3039              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3040              		.loc 1 534 0 discriminator 3
 3041 158e 07F5A253 		add	r3, r7, #5184
 3042 1592 03F11503 		add	r3, r3, #21
 3043 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3044 1598 3222     		movs	r2, #50
 3045 159a 02FB03F3 		mul	r3, r2, r3
 3046 159e 1A1D     		adds	r2, r3, #4
 3047 15a0 07F5A253 		add	r3, r7, #5184
 3048 15a4 03F11303 		add	r3, r3, #19
 3049 15a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3050 15aa 1A44     		add	r2, r2, r3
 3051 15ac 07F5A253 		add	r3, r7, #5184
 3052 15b0 03F11603 		add	r3, r3, #22
 3053 15b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3054 15b6 D31A     		subs	r3, r2, r3
 3055 15b8 013B     		subs	r3, r3, #1
 3056 15ba 07F5A252 		add	r2, r7, #5184
 3057 15be 02F11602 		add	r2, r2, #22
 3058 15c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3059 15c4 07F11801 		add	r1, r7, #24
 3060 15c8 0A44     		add	r2, r2, r1
 3061 15ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3062 15cc 07F15802 		add	r2, r7, #88
 3063 15d0 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3064              		.loc 1 533 0 discriminator 3
 3065 15d2 07F5A253 		add	r3, r7, #5184
 3066 15d6 03F11603 		add	r3, r3, #22
 3067 15da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3068 15dc 0133     		adds	r3, r3, #1
 3069 15de 07F5A252 		add	r2, r7, #5184
 3070 15e2 02F11602 		add	r2, r2, #22
 3071 15e6 1370     		strb	r3, [r2]
 3072              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3073              		.loc 1 533 0 is_stmt 0 discriminator 1
 3074 15e8 07F5A253 		add	r3, r7, #5184
 3075 15ec 03F11603 		add	r3, r3, #22
 3076 15f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3077 15f2 07F5A253 		add	r3, r7, #5184
 3078 15f6 03F11303 		add	r3, r3, #19
 3079 15fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3080 15fc 9A42     		cmp	r2, r3
 3081 15fe C6D3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3082              		.loc 1 536 0 is_stmt 1
 3083 1600 07F5A253 		add	r3, r7, #5184
 3084 1604 03F10F03 		add	r3, r3, #15
 3085 1608 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3086 160a 4B49     		ldr	r1, .L263+4
 3087 160c 1346     		mov	r3, r2
 3088 160e DB00     		lsls	r3, r3, #3
 3089 1610 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 81


 3090 1612 1B01     		lsls	r3, r3, #4
 3091 1614 0B44     		add	r3, r3, r1
 3092 1616 E833     		adds	r3, r3, #232
 3093 1618 1968     		ldr	r1, [r3]
 3094 161a 07F5A253 		add	r3, r7, #5184
 3095 161e 03F10F03 		add	r3, r3, #15
 3096 1622 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3097 1624 4348     		ldr	r0, .L263
 3098 1626 1346     		mov	r3, r2
 3099 1628 DB00     		lsls	r3, r3, #3
 3100 162a 9B1A     		subs	r3, r3, r2
 3101 162c 1B01     		lsls	r3, r3, #4
 3102 162e 0344     		add	r3, r3, r0
 3103 1630 03F58873 		add	r3, r3, #272
 3104 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3105 1636 1846     		mov	r0, r3
 3106 1638 3F4A     		ldr	r2, .L263+4
 3107 163a 0346     		mov	r3, r0
 3108 163c 5B00     		lsls	r3, r3, #1
 3109 163e 0344     		add	r3, r3, r0
 3110 1640 1B01     		lsls	r3, r3, #4
 3111 1642 1344     		add	r3, r3, r2
 3112 1644 03F29513 		addw	r3, r3, #405
 3113 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3114 164a 41FA03F2 		asr	r2, r1, r3
 3115 164e 07F11803 		add	r3, r7, #24
 3116 1652 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3117              		.loc 1 537 0
 3118 1654 0023     		movs	r3, #0
 3119 1656 07F5A252 		add	r2, r7, #5184
 3120 165a 02F11602 		add	r2, r2, #22
 3121 165e 1370     		strb	r3, [r2]
 3122 1660 32E0     		b	.L147
 3123              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3124              		.loc 1 538 0 discriminator 3
 3125 1662 07F5A253 		add	r3, r7, #5184
 3126 1666 03F11503 		add	r3, r3, #21
 3127 166a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3128 166c 3222     		movs	r2, #50
 3129 166e 02FB03F3 		mul	r3, r2, r3
 3130 1672 1A1D     		adds	r2, r3, #4
 3131 1674 07F5A253 		add	r3, r7, #5184
 3132 1678 03F11303 		add	r3, r3, #19
 3133 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3134 167e 1A44     		add	r2, r2, r3
 3135 1680 07F5A253 		add	r3, r7, #5184
 3136 1684 03F11303 		add	r3, r3, #19
 3137 1688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3138 168a 1A44     		add	r2, r2, r3
 3139 168c 07F5A253 		add	r3, r7, #5184
 3140 1690 03F11603 		add	r3, r3, #22
 3141 1694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3142 1696 D31A     		subs	r3, r2, r3
 3143 1698 013B     		subs	r3, r3, #1
 3144 169a 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 82


 3145 169e 02F11602 		add	r2, r2, #22
 3146 16a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3147 16a4 07F11801 		add	r1, r7, #24
 3148 16a8 0A44     		add	r2, r2, r1
 3149 16aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3150 16ac 07F15802 		add	r2, r7, #88
 3151 16b0 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3152              		.loc 1 537 0 discriminator 3
 3153 16b2 07F5A253 		add	r3, r7, #5184
 3154 16b6 03F11603 		add	r3, r3, #22
 3155 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3156 16bc 0133     		adds	r3, r3, #1
 3157 16be 07F5A252 		add	r2, r7, #5184
 3158 16c2 02F11602 		add	r2, r2, #22
 3159 16c6 1370     		strb	r3, [r2]
 3160              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3161              		.loc 1 537 0 is_stmt 0 discriminator 1
 3162 16c8 07F5A253 		add	r3, r7, #5184
 3163 16cc 03F11603 		add	r3, r3, #22
 3164 16d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3165 16d2 07F5A253 		add	r3, r7, #5184
 3166 16d6 03F11303 		add	r3, r3, #19
 3167 16da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3168 16dc 9A42     		cmp	r2, r3
 3169 16de C0D3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 3170              		.loc 1 540 0 is_stmt 1
 3171 16e0 00F097BE 		b	.L103
 3172              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3173              		.loc 1 543 0
 3174 16e4 144B     		ldr	r3, .L263+4
 3175 16e6 D3F8A012 		ldr	r1, [r3, #672]
 3176 16ea 07F5A253 		add	r3, r7, #5184
 3177 16ee 03F10F03 		add	r3, r3, #15
 3178 16f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3179 16f4 0F48     		ldr	r0, .L263
 3180 16f6 1346     		mov	r3, r2
 3181 16f8 DB00     		lsls	r3, r3, #3
 3182 16fa 9B1A     		subs	r3, r3, r2
 3183 16fc 1B01     		lsls	r3, r3, #4
 3184 16fe 0344     		add	r3, r3, r0
 3185 1700 03F58873 		add	r3, r3, #272
 3186 1704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 1706 1846     		mov	r0, r3
 3188 1708 0B4A     		ldr	r2, .L263+4
 3189 170a 0346     		mov	r3, r0
 3190 170c 5B00     		lsls	r3, r3, #1
 3191 170e 0344     		add	r3, r3, r0
 3192 1710 1B01     		lsls	r3, r3, #4
 3193 1712 1344     		add	r3, r3, r2
 3194 1714 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 83


 3195 1718 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3196 171a 41FA03F2 		asr	r2, r1, r3
 3197 171e 07F11803 		add	r3, r7, #24
 3198 1722 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3199              		.loc 1 544 0
 3200 1724 0023     		movs	r3, #0
 3201 1726 07F5A252 		add	r2, r7, #5184
 3202 172a 02F11602 		add	r2, r2, #22
 3203 172e 1370     		strb	r3, [r2]
 3204 1730 31E0     		b	.L149
 3205              	.L264:
 3206 1732 00BF     		.align	2
 3207              	.L263:
 3208 1734 00000000 		.word	g_mem
 3209 1738 00000000 		.word	c_mem
 3210              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3211              		.loc 1 545 0 discriminator 3
 3212 173c 07F5A253 		add	r3, r7, #5184
 3213 1740 03F11503 		add	r3, r3, #21
 3214 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3215 1746 3222     		movs	r2, #50
 3216 1748 02FB03F3 		mul	r3, r2, r3
 3217 174c 1A1D     		adds	r2, r3, #4
 3218 174e 07F5A253 		add	r3, r7, #5184
 3219 1752 03F11303 		add	r3, r3, #19
 3220 1756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3221 1758 1A44     		add	r2, r2, r3
 3222 175a 07F5A253 		add	r3, r7, #5184
 3223 175e 03F11603 		add	r3, r3, #22
 3224 1762 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3225 1764 D31A     		subs	r3, r2, r3
 3226 1766 013B     		subs	r3, r3, #1
 3227 1768 07F5A252 		add	r2, r7, #5184
 3228 176c 02F11602 		add	r2, r2, #22
 3229 1770 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3230 1772 07F11801 		add	r1, r7, #24
 3231 1776 0A44     		add	r2, r2, r1
 3232 1778 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3233 177a 07F15802 		add	r2, r7, #88
 3234 177e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3235              		.loc 1 544 0 discriminator 3
 3236 1780 07F5A253 		add	r3, r7, #5184
 3237 1784 03F11603 		add	r3, r3, #22
 3238 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3239 178a 0133     		adds	r3, r3, #1
 3240 178c 07F5A252 		add	r2, r7, #5184
 3241 1790 02F11602 		add	r2, r2, #22
 3242 1794 1370     		strb	r3, [r2]
 3243              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3244              		.loc 1 544 0 is_stmt 0 discriminator 1
 3245 1796 07F5A253 		add	r3, r7, #5184
 3246 179a 03F11603 		add	r3, r3, #22
 3247 179e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 84


 3248 17a0 07F5A253 		add	r3, r7, #5184
 3249 17a4 03F11303 		add	r3, r3, #19
 3250 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3251 17aa 9A42     		cmp	r2, r3
 3252 17ac C6D3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 3253              		.loc 1 547 0 is_stmt 1
 3254 17ae 00F030BE 		b	.L103
 3255              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3256              		.loc 1 550 0
 3257 17b2 07F5A253 		add	r3, r7, #5184
 3258 17b6 03F10E03 		add	r3, r3, #14
 3259 17ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3260 17bc AA49     		ldr	r1, .L265
 3261 17be 1346     		mov	r3, r2
 3262 17c0 DB00     		lsls	r3, r3, #3
 3263 17c2 9B1A     		subs	r3, r3, r2
 3264 17c4 1B01     		lsls	r3, r3, #4
 3265 17c6 0B44     		add	r3, r3, r1
 3266 17c8 03F20F13 		addw	r3, r3, #271
 3267 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3268 17ce 032B     		cmp	r3, #3
 3269 17d0 00F02681 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3270              		.loc 1 551 0
 3271 17d4 07F5A253 		add	r3, r7, #5184
 3272 17d8 03F10E03 		add	r3, r3, #14
 3273 17dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3274 17de A249     		ldr	r1, .L265
 3275 17e0 1346     		mov	r3, r2
 3276 17e2 DB00     		lsls	r3, r3, #3
 3277 17e4 9B1A     		subs	r3, r3, r2
 3278 17e6 1B01     		lsls	r3, r3, #4
 3279 17e8 0B44     		add	r3, r3, r1
 3280 17ea B033     		adds	r3, r3, #176
 3281 17ec 1B68     		ldr	r3, [r3]
 3282 17ee 1846     		mov	r0, r3
 3283 17f0 FFF7FEFF 		bl	__aeabi_i2f
 3284 17f4 0346     		mov	r3, r0
 3285 17f6 4FF08F41 		mov	r1, #1199570944
 3286 17fa 1846     		mov	r0, r3
 3287 17fc FFF7FEFF 		bl	__aeabi_fdiv
 3288 1800 0346     		mov	r3, r0
 3289 1802 1A46     		mov	r2, r3
 3290 1804 07F13803 		add	r3, r7, #56
 3291 1808 183B     		subs	r3, r3, #24
 3292 180a 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3293              		.loc 1 552 0
 3294 180c 0023     		movs	r3, #0
 3295 180e 07F5A252 		add	r2, r7, #5184
 3296 1812 02F11702 		add	r2, r2, #23
 3297 1816 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 85


 3298 1818 2DE0     		b	.L152
 3299              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3300              		.loc 1 553 0 discriminator 3
 3301 181a 07F5A253 		add	r3, r7, #5184
 3302 181e 03F11503 		add	r3, r3, #21
 3303 1822 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3304 1824 3222     		movs	r2, #50
 3305 1826 02FB03F3 		mul	r3, r2, r3
 3306 182a 1A1D     		adds	r2, r3, #4
 3307 182c 07F5A253 		add	r3, r7, #5184
 3308 1830 03F11303 		add	r3, r3, #19
 3309 1834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3310 1836 1A44     		add	r2, r2, r3
 3311 1838 07F5A253 		add	r3, r7, #5184
 3312 183c 03F11703 		add	r3, r3, #23
 3313 1840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 1842 D31A     		subs	r3, r2, r3
 3315 1844 5A1E     		subs	r2, r3, #1
 3316 1846 07F5A253 		add	r3, r7, #5184
 3317 184a 03F11703 		add	r3, r3, #23
 3318 184e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3319 1850 07F13803 		add	r3, r7, #56
 3320 1854 183B     		subs	r3, r3, #24
 3321 1856 0B44     		add	r3, r3, r1
 3322 1858 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3323 185a 07F15803 		add	r3, r7, #88
 3324 185e 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3325              		.loc 1 552 0 discriminator 3
 3326 1860 07F5A253 		add	r3, r7, #5184
 3327 1864 03F11703 		add	r3, r3, #23
 3328 1868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3329 186a 0133     		adds	r3, r3, #1
 3330 186c 07F5A252 		add	r2, r7, #5184
 3331 1870 02F11702 		add	r2, r2, #23
 3332 1874 1370     		strb	r3, [r2]
 3333              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3334              		.loc 1 552 0 is_stmt 0 discriminator 1
 3335 1876 07F5A253 		add	r3, r7, #5184
 3336 187a 03F11703 		add	r3, r3, #23
 3337 187e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3338 1880 07F5A253 		add	r3, r7, #5184
 3339 1884 03F11303 		add	r3, r3, #19
 3340 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3341 188a 9A42     		cmp	r2, r3
 3342 188c C5D3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3343              		.loc 1 555 0 is_stmt 1
 3344 188e 07F5A253 		add	r3, r7, #5184
 3345 1892 03F10E03 		add	r3, r3, #14
 3346 1896 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3347 1898 7349     		ldr	r1, .L265
 3348 189a 1346     		mov	r3, r2
 3349 189c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 86


 3350 189e 9B1A     		subs	r3, r3, r2
 3351 18a0 1B01     		lsls	r3, r3, #4
 3352 18a2 0B44     		add	r3, r3, r1
 3353 18a4 B433     		adds	r3, r3, #180
 3354 18a6 1B68     		ldr	r3, [r3]
 3355 18a8 1846     		mov	r0, r3
 3356 18aa FFF7FEFF 		bl	__aeabi_i2f
 3357 18ae 0346     		mov	r3, r0
 3358 18b0 4FF08F41 		mov	r1, #1199570944
 3359 18b4 1846     		mov	r0, r3
 3360 18b6 FFF7FEFF 		bl	__aeabi_fdiv
 3361 18ba 0346     		mov	r3, r0
 3362 18bc 1A46     		mov	r2, r3
 3363 18be 07F13803 		add	r3, r7, #56
 3364 18c2 183B     		subs	r3, r3, #24
 3365 18c4 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3366              		.loc 1 556 0
 3367 18c6 0023     		movs	r3, #0
 3368 18c8 07F5A252 		add	r2, r7, #5184
 3369 18cc 02F11702 		add	r2, r2, #23
 3370 18d0 1370     		strb	r3, [r2]
 3371 18d2 33E0     		b	.L154
 3372              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3373              		.loc 1 557 0 discriminator 3
 3374 18d4 07F5A253 		add	r3, r7, #5184
 3375 18d8 03F11503 		add	r3, r3, #21
 3376 18dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3377 18de 3222     		movs	r2, #50
 3378 18e0 02FB03F3 		mul	r3, r2, r3
 3379 18e4 1A1D     		adds	r2, r3, #4
 3380 18e6 07F5A253 		add	r3, r7, #5184
 3381 18ea 03F11303 		add	r3, r3, #19
 3382 18ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3383 18f0 1A44     		add	r2, r2, r3
 3384 18f2 07F5A253 		add	r3, r7, #5184
 3385 18f6 03F11303 		add	r3, r3, #19
 3386 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3387 18fc 1A44     		add	r2, r2, r3
 3388 18fe 07F5A253 		add	r3, r7, #5184
 3389 1902 03F11703 		add	r3, r3, #23
 3390 1906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3391 1908 D31A     		subs	r3, r2, r3
 3392 190a 5A1E     		subs	r2, r3, #1
 3393 190c 07F5A253 		add	r3, r7, #5184
 3394 1910 03F11703 		add	r3, r3, #23
 3395 1914 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3396 1916 07F13803 		add	r3, r7, #56
 3397 191a 183B     		subs	r3, r3, #24
 3398 191c 0B44     		add	r3, r3, r1
 3399 191e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3400 1920 07F15803 		add	r3, r7, #88
 3401 1924 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3402              		.loc 1 556 0 discriminator 3
 3403 1926 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 87


 3404 192a 03F11703 		add	r3, r3, #23
 3405 192e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3406 1930 0133     		adds	r3, r3, #1
 3407 1932 07F5A252 		add	r2, r7, #5184
 3408 1936 02F11702 		add	r2, r2, #23
 3409 193a 1370     		strb	r3, [r2]
 3410              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3411              		.loc 1 556 0 is_stmt 0 discriminator 1
 3412 193c 07F5A253 		add	r3, r7, #5184
 3413 1940 03F11703 		add	r3, r3, #23
 3414 1944 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3415 1946 07F5A253 		add	r3, r7, #5184
 3416 194a 03F11303 		add	r3, r3, #19
 3417 194e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3418 1950 9A42     		cmp	r2, r3
 3419 1952 BFD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3420              		.loc 1 559 0 is_stmt 1
 3421 1954 07F5A253 		add	r3, r7, #5184
 3422 1958 03F10E03 		add	r3, r3, #14
 3423 195c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3424 195e 4249     		ldr	r1, .L265
 3425 1960 1346     		mov	r3, r2
 3426 1962 DB00     		lsls	r3, r3, #3
 3427 1964 9B1A     		subs	r3, r3, r2
 3428 1966 1B01     		lsls	r3, r3, #4
 3429 1968 0B44     		add	r3, r3, r1
 3430 196a B833     		adds	r3, r3, #184
 3431 196c 1B68     		ldr	r3, [r3]
 3432 196e 1846     		mov	r0, r3
 3433 1970 FFF7FEFF 		bl	__aeabi_i2f
 3434 1974 0346     		mov	r3, r0
 3435 1976 4FF08F41 		mov	r1, #1199570944
 3436 197a 1846     		mov	r0, r3
 3437 197c FFF7FEFF 		bl	__aeabi_fdiv
 3438 1980 0346     		mov	r3, r0
 3439 1982 1A46     		mov	r2, r3
 3440 1984 07F13803 		add	r3, r7, #56
 3441 1988 183B     		subs	r3, r3, #24
 3442 198a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3443              		.loc 1 560 0
 3444 198c 0023     		movs	r3, #0
 3445 198e 07F5A252 		add	r2, r7, #5184
 3446 1992 02F11702 		add	r2, r2, #23
 3447 1996 1370     		strb	r3, [r2]
 3448 1998 34E0     		b	.L156
 3449              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3450              		.loc 1 561 0 discriminator 3
 3451 199a 07F5A253 		add	r3, r7, #5184
 3452 199e 03F11503 		add	r3, r3, #21
 3453 19a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3454 19a4 3222     		movs	r2, #50
 3455 19a6 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 88


 3456 19aa 1A1D     		adds	r2, r3, #4
 3457 19ac 07F5A253 		add	r3, r7, #5184
 3458 19b0 03F11303 		add	r3, r3, #19
 3459 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3460 19b6 5B00     		lsls	r3, r3, #1
 3461 19b8 1A44     		add	r2, r2, r3
 3462 19ba 07F5A253 		add	r3, r7, #5184
 3463 19be 03F11303 		add	r3, r3, #19
 3464 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3465 19c4 1A44     		add	r2, r2, r3
 3466 19c6 07F5A253 		add	r3, r7, #5184
 3467 19ca 03F11703 		add	r3, r3, #23
 3468 19ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3469 19d0 D31A     		subs	r3, r2, r3
 3470 19d2 5A1E     		subs	r2, r3, #1
 3471 19d4 07F5A253 		add	r3, r7, #5184
 3472 19d8 03F11703 		add	r3, r3, #23
 3473 19dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3474 19de 07F13803 		add	r3, r7, #56
 3475 19e2 183B     		subs	r3, r3, #24
 3476 19e4 0B44     		add	r3, r3, r1
 3477 19e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3478 19e8 07F15803 		add	r3, r7, #88
 3479 19ec 9954     		strb	r1, [r3, r2]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3480              		.loc 1 560 0 discriminator 3
 3481 19ee 07F5A253 		add	r3, r7, #5184
 3482 19f2 03F11703 		add	r3, r3, #23
 3483 19f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3484 19f8 0133     		adds	r3, r3, #1
 3485 19fa 07F5A252 		add	r2, r7, #5184
 3486 19fe 02F11702 		add	r2, r2, #23
 3487 1a02 1370     		strb	r3, [r2]
 3488              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3489              		.loc 1 560 0 is_stmt 0 discriminator 1
 3490 1a04 07F5A253 		add	r3, r7, #5184
 3491 1a08 03F11703 		add	r3, r3, #23
 3492 1a0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3493 1a0e 07F5A253 		add	r3, r7, #5184
 3494 1a12 03F11303 		add	r3, r3, #19
 3495 1a16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3496 1a18 9A42     		cmp	r2, r3
 3497 1a1a BED3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 89


 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 3498              		.loc 1 578 0 is_stmt 1
 3499 1a1c 00F0F9BC 		b	.L103
 3500              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3501              		.loc 1 565 0
 3502 1a20 07F5A253 		add	r3, r7, #5184
 3503 1a24 03F10E03 		add	r3, r3, #14
 3504 1a28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3505 1a2a 0F49     		ldr	r1, .L265
 3506 1a2c 1346     		mov	r3, r2
 3507 1a2e DB00     		lsls	r3, r3, #3
 3508 1a30 9B1A     		subs	r3, r3, r2
 3509 1a32 1B01     		lsls	r3, r3, #4
 3510 1a34 0B44     		add	r3, r3, r1
 3511 1a36 C833     		adds	r3, r3, #200
 3512 1a38 1B68     		ldr	r3, [r3]
 3513 1a3a 1846     		mov	r0, r3
 3514 1a3c FFF7FEFF 		bl	__aeabi_i2f
 3515 1a40 0346     		mov	r3, r0
 3516 1a42 4FF08F41 		mov	r1, #1199570944
 3517 1a46 1846     		mov	r0, r3
 3518 1a48 FFF7FEFF 		bl	__aeabi_fdiv
 3519 1a4c 0346     		mov	r3, r0
 3520 1a4e 1A46     		mov	r2, r3
 3521 1a50 07F13803 		add	r3, r7, #56
 3522 1a54 183B     		subs	r3, r3, #24
 3523 1a56 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3524              		.loc 1 566 0
 3525 1a58 0023     		movs	r3, #0
 3526 1a5a 07F5A252 		add	r2, r7, #5184
 3527 1a5e 02F11702 		add	r2, r2, #23
 3528 1a62 1370     		strb	r3, [r2]
 3529 1a64 30E0     		b	.L159
 3530              	.L266:
 3531 1a66 00BF     		.align	2
 3532              	.L265:
 3533 1a68 00000000 		.word	c_mem
 3534              	.L160:
 567:..\src/command_processing.c ****                             }
 3535              		.loc 1 567 0 discriminator 3
 3536 1a6c 07F5A253 		add	r3, r7, #5184
 3537 1a70 03F11503 		add	r3, r3, #21
 3538 1a74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3539 1a76 3222     		movs	r2, #50
 3540 1a78 02FB03F3 		mul	r3, r2, r3
 3541 1a7c 1A1D     		adds	r2, r3, #4
 3542 1a7e 07F5A253 		add	r3, r7, #5184
 3543 1a82 03F11303 		add	r3, r3, #19
 3544 1a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3545 1a88 1A44     		add	r2, r2, r3
 3546 1a8a 07F5A253 		add	r3, r7, #5184
 3547 1a8e 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 90


 3548 1a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3549 1a94 D31A     		subs	r3, r2, r3
 3550 1a96 5A1E     		subs	r2, r3, #1
 3551 1a98 07F5A253 		add	r3, r7, #5184
 3552 1a9c 03F11703 		add	r3, r3, #23
 3553 1aa0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3554 1aa2 07F13803 		add	r3, r7, #56
 3555 1aa6 183B     		subs	r3, r3, #24
 3556 1aa8 0B44     		add	r3, r3, r1
 3557 1aaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3558 1aac 07F15803 		add	r3, r7, #88
 3559 1ab0 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3560              		.loc 1 566 0 discriminator 3
 3561 1ab2 07F5A253 		add	r3, r7, #5184
 3562 1ab6 03F11703 		add	r3, r3, #23
 3563 1aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3564 1abc 0133     		adds	r3, r3, #1
 3565 1abe 07F5A252 		add	r2, r7, #5184
 3566 1ac2 02F11702 		add	r2, r2, #23
 3567 1ac6 1370     		strb	r3, [r2]
 3568              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3569              		.loc 1 566 0 is_stmt 0 discriminator 1
 3570 1ac8 07F5A253 		add	r3, r7, #5184
 3571 1acc 03F11703 		add	r3, r3, #23
 3572 1ad0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3573 1ad2 07F5A253 		add	r3, r7, #5184
 3574 1ad6 03F11303 		add	r3, r3, #19
 3575 1ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3576 1adc 9A42     		cmp	r2, r3
 3577 1ade C5D3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3578              		.loc 1 569 0 is_stmt 1
 3579 1ae0 07F5A253 		add	r3, r7, #5184
 3580 1ae4 03F10E03 		add	r3, r3, #14
 3581 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3582 1aea AA49     		ldr	r1, .L267
 3583 1aec 1346     		mov	r3, r2
 3584 1aee DB00     		lsls	r3, r3, #3
 3585 1af0 9B1A     		subs	r3, r3, r2
 3586 1af2 1B01     		lsls	r3, r3, #4
 3587 1af4 0B44     		add	r3, r3, r1
 3588 1af6 CC33     		adds	r3, r3, #204
 3589 1af8 1B68     		ldr	r3, [r3]
 3590 1afa 1846     		mov	r0, r3
 3591 1afc FFF7FEFF 		bl	__aeabi_i2f
 3592 1b00 0346     		mov	r3, r0
 3593 1b02 4FF08F41 		mov	r1, #1199570944
 3594 1b06 1846     		mov	r0, r3
 3595 1b08 FFF7FEFF 		bl	__aeabi_fdiv
 3596 1b0c 0346     		mov	r3, r0
 3597 1b0e 1A46     		mov	r2, r3
 3598 1b10 07F13803 		add	r3, r7, #56
 3599 1b14 183B     		subs	r3, r3, #24
 3600 1b16 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 91


 3601              		.loc 1 570 0
 3602 1b18 0023     		movs	r3, #0
 3603 1b1a 07F5A252 		add	r2, r7, #5184
 3604 1b1e 02F11702 		add	r2, r2, #23
 3605 1b22 1370     		strb	r3, [r2]
 3606 1b24 33E0     		b	.L161
 3607              	.L162:
 571:..\src/command_processing.c ****                             }
 3608              		.loc 1 571 0 discriminator 3
 3609 1b26 07F5A253 		add	r3, r7, #5184
 3610 1b2a 03F11503 		add	r3, r3, #21
 3611 1b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3612 1b30 3222     		movs	r2, #50
 3613 1b32 02FB03F3 		mul	r3, r2, r3
 3614 1b36 1A1D     		adds	r2, r3, #4
 3615 1b38 07F5A253 		add	r3, r7, #5184
 3616 1b3c 03F11303 		add	r3, r3, #19
 3617 1b40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3618 1b42 1A44     		add	r2, r2, r3
 3619 1b44 07F5A253 		add	r3, r7, #5184
 3620 1b48 03F11303 		add	r3, r3, #19
 3621 1b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3622 1b4e 1A44     		add	r2, r2, r3
 3623 1b50 07F5A253 		add	r3, r7, #5184
 3624 1b54 03F11703 		add	r3, r3, #23
 3625 1b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3626 1b5a D31A     		subs	r3, r2, r3
 3627 1b5c 5A1E     		subs	r2, r3, #1
 3628 1b5e 07F5A253 		add	r3, r7, #5184
 3629 1b62 03F11703 		add	r3, r3, #23
 3630 1b66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3631 1b68 07F13803 		add	r3, r7, #56
 3632 1b6c 183B     		subs	r3, r3, #24
 3633 1b6e 0B44     		add	r3, r3, r1
 3634 1b70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3635 1b72 07F15803 		add	r3, r7, #88
 3636 1b76 9954     		strb	r1, [r3, r2]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3637              		.loc 1 570 0 discriminator 3
 3638 1b78 07F5A253 		add	r3, r7, #5184
 3639 1b7c 03F11703 		add	r3, r3, #23
 3640 1b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3641 1b82 0133     		adds	r3, r3, #1
 3642 1b84 07F5A252 		add	r2, r7, #5184
 3643 1b88 02F11702 		add	r2, r2, #23
 3644 1b8c 1370     		strb	r3, [r2]
 3645              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3646              		.loc 1 570 0 is_stmt 0 discriminator 1
 3647 1b8e 07F5A253 		add	r3, r7, #5184
 3648 1b92 03F11703 		add	r3, r3, #23
 3649 1b96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3650 1b98 07F5A253 		add	r3, r7, #5184
 3651 1b9c 03F11303 		add	r3, r3, #19
 3652 1ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3653 1ba2 9A42     		cmp	r2, r3
 3654 1ba4 BFD3     		bcc	.L162
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 92


 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3655              		.loc 1 573 0 is_stmt 1
 3656 1ba6 07F5A253 		add	r3, r7, #5184
 3657 1baa 03F10E03 		add	r3, r3, #14
 3658 1bae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3659 1bb0 7849     		ldr	r1, .L267
 3660 1bb2 1346     		mov	r3, r2
 3661 1bb4 DB00     		lsls	r3, r3, #3
 3662 1bb6 9B1A     		subs	r3, r3, r2
 3663 1bb8 1B01     		lsls	r3, r3, #4
 3664 1bba 0B44     		add	r3, r3, r1
 3665 1bbc D033     		adds	r3, r3, #208
 3666 1bbe 1B68     		ldr	r3, [r3]
 3667 1bc0 1846     		mov	r0, r3
 3668 1bc2 FFF7FEFF 		bl	__aeabi_i2f
 3669 1bc6 0346     		mov	r3, r0
 3670 1bc8 4FF08F41 		mov	r1, #1199570944
 3671 1bcc 1846     		mov	r0, r3
 3672 1bce FFF7FEFF 		bl	__aeabi_fdiv
 3673 1bd2 0346     		mov	r3, r0
 3674 1bd4 1A46     		mov	r2, r3
 3675 1bd6 07F13803 		add	r3, r7, #56
 3676 1bda 183B     		subs	r3, r3, #24
 3677 1bdc 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3678              		.loc 1 574 0
 3679 1bde 0023     		movs	r3, #0
 3680 1be0 07F5A252 		add	r2, r7, #5184
 3681 1be4 02F11702 		add	r2, r2, #23
 3682 1be8 1370     		strb	r3, [r2]
 3683 1bea 34E0     		b	.L163
 3684              	.L164:
 575:..\src/command_processing.c ****                             }
 3685              		.loc 1 575 0 discriminator 3
 3686 1bec 07F5A253 		add	r3, r7, #5184
 3687 1bf0 03F11503 		add	r3, r3, #21
 3688 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3689 1bf6 3222     		movs	r2, #50
 3690 1bf8 02FB03F3 		mul	r3, r2, r3
 3691 1bfc 1A1D     		adds	r2, r3, #4
 3692 1bfe 07F5A253 		add	r3, r7, #5184
 3693 1c02 03F11303 		add	r3, r3, #19
 3694 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3695 1c08 5B00     		lsls	r3, r3, #1
 3696 1c0a 1A44     		add	r2, r2, r3
 3697 1c0c 07F5A253 		add	r3, r7, #5184
 3698 1c10 03F11303 		add	r3, r3, #19
 3699 1c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 1c16 1A44     		add	r2, r2, r3
 3701 1c18 07F5A253 		add	r3, r7, #5184
 3702 1c1c 03F11703 		add	r3, r3, #23
 3703 1c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3704 1c22 D31A     		subs	r3, r2, r3
 3705 1c24 5A1E     		subs	r2, r3, #1
 3706 1c26 07F5A253 		add	r3, r7, #5184
 3707 1c2a 03F11703 		add	r3, r3, #23
 3708 1c2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 93


 3709 1c30 07F13803 		add	r3, r7, #56
 3710 1c34 183B     		subs	r3, r3, #24
 3711 1c36 0B44     		add	r3, r3, r1
 3712 1c38 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3713 1c3a 07F15803 		add	r3, r7, #88
 3714 1c3e 9954     		strb	r1, [r3, r2]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3715              		.loc 1 574 0 discriminator 3
 3716 1c40 07F5A253 		add	r3, r7, #5184
 3717 1c44 03F11703 		add	r3, r3, #23
 3718 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3719 1c4a 0133     		adds	r3, r3, #1
 3720 1c4c 07F5A252 		add	r2, r7, #5184
 3721 1c50 02F11702 		add	r2, r2, #23
 3722 1c54 1370     		strb	r3, [r2]
 3723              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3724              		.loc 1 574 0 is_stmt 0 discriminator 1
 3725 1c56 07F5A253 		add	r3, r7, #5184
 3726 1c5a 03F11703 		add	r3, r3, #23
 3727 1c5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3728 1c60 07F5A253 		add	r3, r7, #5184
 3729 1c64 03F11303 		add	r3, r3, #19
 3730 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3731 1c6a 9A42     		cmp	r2, r3
 3732 1c6c BED3     		bcc	.L164
 3733              		.loc 1 578 0 is_stmt 1
 3734 1c6e D0E3     		b	.L103
 3735              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3736              		.loc 1 581 0
 3737 1c70 07F5A253 		add	r3, r7, #5184
 3738 1c74 03F10E03 		add	r3, r3, #14
 3739 1c78 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3740 1c7a 4649     		ldr	r1, .L267
 3741 1c7c 1346     		mov	r3, r2
 3742 1c7e DB00     		lsls	r3, r3, #3
 3743 1c80 9B1A     		subs	r3, r3, r2
 3744 1c82 1B01     		lsls	r3, r3, #4
 3745 1c84 0B44     		add	r3, r3, r1
 3746 1c86 03F20F13 		addw	r3, r3, #271
 3747 1c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3748 1c8c 032B     		cmp	r3, #3
 3749 1c8e 00F02881 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3750              		.loc 1 582 0
 3751 1c92 07F5A253 		add	r3, r7, #5184
 3752 1c96 03F10E03 		add	r3, r3, #14
 3753 1c9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3754 1c9c 3D49     		ldr	r1, .L267
 3755 1c9e 1346     		mov	r3, r2
 3756 1ca0 DB00     		lsls	r3, r3, #3
 3757 1ca2 9B1A     		subs	r3, r3, r2
 3758 1ca4 1B01     		lsls	r3, r3, #4
 3759 1ca6 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 94


 3760 1ca8 BC33     		adds	r3, r3, #188
 3761 1caa 1B68     		ldr	r3, [r3]
 3762 1cac 1846     		mov	r0, r3
 3763 1cae FFF7FEFF 		bl	__aeabi_i2f
 3764 1cb2 0346     		mov	r3, r0
 3765 1cb4 4FF08F41 		mov	r1, #1199570944
 3766 1cb8 1846     		mov	r0, r3
 3767 1cba FFF7FEFF 		bl	__aeabi_fdiv
 3768 1cbe 0346     		mov	r3, r0
 3769 1cc0 1A46     		mov	r2, r3
 3770 1cc2 07F13803 		add	r3, r7, #56
 3771 1cc6 183B     		subs	r3, r3, #24
 3772 1cc8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3773              		.loc 1 583 0
 3774 1cca 0023     		movs	r3, #0
 3775 1ccc 07F5A252 		add	r2, r7, #5184
 3776 1cd0 02F11702 		add	r2, r2, #23
 3777 1cd4 1370     		strb	r3, [r2]
 3778 1cd6 2DE0     		b	.L166
 3779              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3780              		.loc 1 584 0 discriminator 3
 3781 1cd8 07F5A253 		add	r3, r7, #5184
 3782 1cdc 03F11503 		add	r3, r3, #21
 3783 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3784 1ce2 3222     		movs	r2, #50
 3785 1ce4 02FB03F3 		mul	r3, r2, r3
 3786 1ce8 1A1D     		adds	r2, r3, #4
 3787 1cea 07F5A253 		add	r3, r7, #5184
 3788 1cee 03F11303 		add	r3, r3, #19
 3789 1cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3790 1cf4 1A44     		add	r2, r2, r3
 3791 1cf6 07F5A253 		add	r3, r7, #5184
 3792 1cfa 03F11703 		add	r3, r3, #23
 3793 1cfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3794 1d00 D31A     		subs	r3, r2, r3
 3795 1d02 5A1E     		subs	r2, r3, #1
 3796 1d04 07F5A253 		add	r3, r7, #5184
 3797 1d08 03F11703 		add	r3, r3, #23
 3798 1d0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3799 1d0e 07F13803 		add	r3, r7, #56
 3800 1d12 183B     		subs	r3, r3, #24
 3801 1d14 0B44     		add	r3, r3, r1
 3802 1d16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3803 1d18 07F15803 		add	r3, r7, #88
 3804 1d1c 9954     		strb	r1, [r3, r2]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3805              		.loc 1 583 0 discriminator 3
 3806 1d1e 07F5A253 		add	r3, r7, #5184
 3807 1d22 03F11703 		add	r3, r3, #23
 3808 1d26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3809 1d28 0133     		adds	r3, r3, #1
 3810 1d2a 07F5A252 		add	r2, r7, #5184
 3811 1d2e 02F11702 		add	r2, r2, #23
 3812 1d32 1370     		strb	r3, [r2]
 3813              	.L166:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 95


 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3814              		.loc 1 583 0 is_stmt 0 discriminator 1
 3815 1d34 07F5A253 		add	r3, r7, #5184
 3816 1d38 03F11703 		add	r3, r3, #23
 3817 1d3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3818 1d3e 07F5A253 		add	r3, r7, #5184
 3819 1d42 03F11303 		add	r3, r3, #19
 3820 1d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821 1d48 9A42     		cmp	r2, r3
 3822 1d4a C5D3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3823              		.loc 1 586 0 is_stmt 1
 3824 1d4c 07F5A253 		add	r3, r7, #5184
 3825 1d50 03F10E03 		add	r3, r3, #14
 3826 1d54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3827 1d56 0F49     		ldr	r1, .L267
 3828 1d58 1346     		mov	r3, r2
 3829 1d5a DB00     		lsls	r3, r3, #3
 3830 1d5c 9B1A     		subs	r3, r3, r2
 3831 1d5e 1B01     		lsls	r3, r3, #4
 3832 1d60 0B44     		add	r3, r3, r1
 3833 1d62 C033     		adds	r3, r3, #192
 3834 1d64 1B68     		ldr	r3, [r3]
 3835 1d66 1846     		mov	r0, r3
 3836 1d68 FFF7FEFF 		bl	__aeabi_i2f
 3837 1d6c 0346     		mov	r3, r0
 3838 1d6e 4FF08F41 		mov	r1, #1199570944
 3839 1d72 1846     		mov	r0, r3
 3840 1d74 FFF7FEFF 		bl	__aeabi_fdiv
 3841 1d78 0346     		mov	r3, r0
 3842 1d7a 1A46     		mov	r2, r3
 3843 1d7c 07F13803 		add	r3, r7, #56
 3844 1d80 183B     		subs	r3, r3, #24
 3845 1d82 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3846              		.loc 1 587 0
 3847 1d84 0023     		movs	r3, #0
 3848 1d86 07F5A252 		add	r2, r7, #5184
 3849 1d8a 02F11702 		add	r2, r2, #23
 3850 1d8e 1370     		strb	r3, [r2]
 3851 1d90 36E0     		b	.L168
 3852              	.L268:
 3853 1d92 00BF     		.align	2
 3854              	.L267:
 3855 1d94 00000000 		.word	c_mem
 3856              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3857              		.loc 1 588 0 discriminator 3
 3858 1d98 07F5A253 		add	r3, r7, #5184
 3859 1d9c 03F11503 		add	r3, r3, #21
 3860 1da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3861 1da2 3222     		movs	r2, #50
 3862 1da4 02FB03F3 		mul	r3, r2, r3
 3863 1da8 1A1D     		adds	r2, r3, #4
 3864 1daa 07F5A253 		add	r3, r7, #5184
 3865 1dae 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 96


 3866 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3867 1db4 1A44     		add	r2, r2, r3
 3868 1db6 07F5A253 		add	r3, r7, #5184
 3869 1dba 03F11303 		add	r3, r3, #19
 3870 1dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3871 1dc0 1A44     		add	r2, r2, r3
 3872 1dc2 07F5A253 		add	r3, r7, #5184
 3873 1dc6 03F11703 		add	r3, r3, #23
 3874 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3875 1dcc D31A     		subs	r3, r2, r3
 3876 1dce 5A1E     		subs	r2, r3, #1
 3877 1dd0 07F5A253 		add	r3, r7, #5184
 3878 1dd4 03F11703 		add	r3, r3, #23
 3879 1dd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3880 1dda 07F13803 		add	r3, r7, #56
 3881 1dde 183B     		subs	r3, r3, #24
 3882 1de0 0B44     		add	r3, r3, r1
 3883 1de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3884 1de4 07F15803 		add	r3, r7, #88
 3885 1de8 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3886              		.loc 1 587 0 discriminator 3
 3887 1dea 07F5A253 		add	r3, r7, #5184
 3888 1dee 03F11703 		add	r3, r3, #23
 3889 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3890 1df4 0133     		adds	r3, r3, #1
 3891 1df6 07F5A252 		add	r2, r7, #5184
 3892 1dfa 02F11702 		add	r2, r2, #23
 3893 1dfe 1370     		strb	r3, [r2]
 3894              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3895              		.loc 1 587 0 is_stmt 0 discriminator 1
 3896 1e00 07F5A253 		add	r3, r7, #5184
 3897 1e04 03F11703 		add	r3, r3, #23
 3898 1e08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3899 1e0a 07F5A253 		add	r3, r7, #5184
 3900 1e0e 03F11303 		add	r3, r3, #19
 3901 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3902 1e14 9A42     		cmp	r2, r3
 3903 1e16 BFD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3904              		.loc 1 590 0 is_stmt 1
 3905 1e18 07F5A253 		add	r3, r7, #5184
 3906 1e1c 03F10E03 		add	r3, r3, #14
 3907 1e20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3908 1e22 C249     		ldr	r1, .L269
 3909 1e24 1346     		mov	r3, r2
 3910 1e26 DB00     		lsls	r3, r3, #3
 3911 1e28 9B1A     		subs	r3, r3, r2
 3912 1e2a 1B01     		lsls	r3, r3, #4
 3913 1e2c 0B44     		add	r3, r3, r1
 3914 1e2e C433     		adds	r3, r3, #196
 3915 1e30 1B68     		ldr	r3, [r3]
 3916 1e32 1846     		mov	r0, r3
 3917 1e34 FFF7FEFF 		bl	__aeabi_i2f
 3918 1e38 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 97


 3919 1e3a 4FF08F41 		mov	r1, #1199570944
 3920 1e3e 1846     		mov	r0, r3
 3921 1e40 FFF7FEFF 		bl	__aeabi_fdiv
 3922 1e44 0346     		mov	r3, r0
 3923 1e46 1A46     		mov	r2, r3
 3924 1e48 07F13803 		add	r3, r7, #56
 3925 1e4c 183B     		subs	r3, r3, #24
 3926 1e4e 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3927              		.loc 1 591 0
 3928 1e50 0023     		movs	r3, #0
 3929 1e52 07F5A252 		add	r2, r7, #5184
 3930 1e56 02F11702 		add	r2, r2, #23
 3931 1e5a 1370     		strb	r3, [r2]
 3932 1e5c 34E0     		b	.L170
 3933              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3934              		.loc 1 592 0 discriminator 3
 3935 1e5e 07F5A253 		add	r3, r7, #5184
 3936 1e62 03F11503 		add	r3, r3, #21
 3937 1e66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3938 1e68 3222     		movs	r2, #50
 3939 1e6a 02FB03F3 		mul	r3, r2, r3
 3940 1e6e 1A1D     		adds	r2, r3, #4
 3941 1e70 07F5A253 		add	r3, r7, #5184
 3942 1e74 03F11303 		add	r3, r3, #19
 3943 1e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3944 1e7a 5B00     		lsls	r3, r3, #1
 3945 1e7c 1A44     		add	r2, r2, r3
 3946 1e7e 07F5A253 		add	r3, r7, #5184
 3947 1e82 03F11303 		add	r3, r3, #19
 3948 1e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 1e88 1A44     		add	r2, r2, r3
 3950 1e8a 07F5A253 		add	r3, r7, #5184
 3951 1e8e 03F11703 		add	r3, r3, #23
 3952 1e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3953 1e94 D31A     		subs	r3, r2, r3
 3954 1e96 5A1E     		subs	r2, r3, #1
 3955 1e98 07F5A253 		add	r3, r7, #5184
 3956 1e9c 03F11703 		add	r3, r3, #23
 3957 1ea0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3958 1ea2 07F13803 		add	r3, r7, #56
 3959 1ea6 183B     		subs	r3, r3, #24
 3960 1ea8 0B44     		add	r3, r3, r1
 3961 1eaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3962 1eac 07F15803 		add	r3, r7, #88
 3963 1eb0 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3964              		.loc 1 591 0 discriminator 3
 3965 1eb2 07F5A253 		add	r3, r7, #5184
 3966 1eb6 03F11703 		add	r3, r3, #23
 3967 1eba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3968 1ebc 0133     		adds	r3, r3, #1
 3969 1ebe 07F5A252 		add	r2, r7, #5184
 3970 1ec2 02F11702 		add	r2, r2, #23
 3971 1ec6 1370     		strb	r3, [r2]
 3972              	.L170:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 98


 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3973              		.loc 1 591 0 is_stmt 0 discriminator 1
 3974 1ec8 07F5A253 		add	r3, r7, #5184
 3975 1ecc 03F11703 		add	r3, r3, #23
 3976 1ed0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3977 1ed2 07F5A253 		add	r3, r7, #5184
 3978 1ed6 03F11303 		add	r3, r3, #19
 3979 1eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3980 1edc 9A42     		cmp	r2, r3
 3981 1ede BED3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3982              		.loc 1 609 0 is_stmt 1
 3983 1ee0 97E2     		b	.L103
 3984              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3985              		.loc 1 596 0
 3986 1ee2 07F5A253 		add	r3, r7, #5184
 3987 1ee6 03F10E03 		add	r3, r3, #14
 3988 1eea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3989 1eec 8F49     		ldr	r1, .L269
 3990 1eee 1346     		mov	r3, r2
 3991 1ef0 DB00     		lsls	r3, r3, #3
 3992 1ef2 9B1A     		subs	r3, r3, r2
 3993 1ef4 1B01     		lsls	r3, r3, #4
 3994 1ef6 0B44     		add	r3, r3, r1
 3995 1ef8 D433     		adds	r3, r3, #212
 3996 1efa 1B68     		ldr	r3, [r3]
 3997 1efc 1846     		mov	r0, r3
 3998 1efe FFF7FEFF 		bl	__aeabi_i2f
 3999 1f02 0346     		mov	r3, r0
 4000 1f04 4FF08F41 		mov	r1, #1199570944
 4001 1f08 1846     		mov	r0, r3
 4002 1f0a FFF7FEFF 		bl	__aeabi_fdiv
 4003 1f0e 0346     		mov	r3, r0
 4004 1f10 1A46     		mov	r2, r3
 4005 1f12 07F13803 		add	r3, r7, #56
 4006 1f16 183B     		subs	r3, r3, #24
 4007 1f18 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4008              		.loc 1 597 0
 4009 1f1a 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 99


 4010 1f1c 07F5A252 		add	r2, r7, #5184
 4011 1f20 02F11702 		add	r2, r2, #23
 4012 1f24 1370     		strb	r3, [r2]
 4013 1f26 2DE0     		b	.L173
 4014              	.L174:
 598:..\src/command_processing.c ****                             }
 4015              		.loc 1 598 0 discriminator 3
 4016 1f28 07F5A253 		add	r3, r7, #5184
 4017 1f2c 03F11503 		add	r3, r3, #21
 4018 1f30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4019 1f32 3222     		movs	r2, #50
 4020 1f34 02FB03F3 		mul	r3, r2, r3
 4021 1f38 1A1D     		adds	r2, r3, #4
 4022 1f3a 07F5A253 		add	r3, r7, #5184
 4023 1f3e 03F11303 		add	r3, r3, #19
 4024 1f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4025 1f44 1A44     		add	r2, r2, r3
 4026 1f46 07F5A253 		add	r3, r7, #5184
 4027 1f4a 03F11703 		add	r3, r3, #23
 4028 1f4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4029 1f50 D31A     		subs	r3, r2, r3
 4030 1f52 5A1E     		subs	r2, r3, #1
 4031 1f54 07F5A253 		add	r3, r7, #5184
 4032 1f58 03F11703 		add	r3, r3, #23
 4033 1f5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4034 1f5e 07F13803 		add	r3, r7, #56
 4035 1f62 183B     		subs	r3, r3, #24
 4036 1f64 0B44     		add	r3, r3, r1
 4037 1f66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4038 1f68 07F15803 		add	r3, r7, #88
 4039 1f6c 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4040              		.loc 1 597 0 discriminator 3
 4041 1f6e 07F5A253 		add	r3, r7, #5184
 4042 1f72 03F11703 		add	r3, r3, #23
 4043 1f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4044 1f78 0133     		adds	r3, r3, #1
 4045 1f7a 07F5A252 		add	r2, r7, #5184
 4046 1f7e 02F11702 		add	r2, r2, #23
 4047 1f82 1370     		strb	r3, [r2]
 4048              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4049              		.loc 1 597 0 is_stmt 0 discriminator 1
 4050 1f84 07F5A253 		add	r3, r7, #5184
 4051 1f88 03F11703 		add	r3, r3, #23
 4052 1f8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4053 1f8e 07F5A253 		add	r3, r7, #5184
 4054 1f92 03F11303 		add	r3, r3, #19
 4055 1f96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4056 1f98 9A42     		cmp	r2, r3
 4057 1f9a C5D3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4058              		.loc 1 600 0 is_stmt 1
 4059 1f9c 07F5A253 		add	r3, r7, #5184
 4060 1fa0 03F10E03 		add	r3, r3, #14
 4061 1fa4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4062 1fa6 6149     		ldr	r1, .L269
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 100


 4063 1fa8 1346     		mov	r3, r2
 4064 1faa DB00     		lsls	r3, r3, #3
 4065 1fac 9B1A     		subs	r3, r3, r2
 4066 1fae 1B01     		lsls	r3, r3, #4
 4067 1fb0 0B44     		add	r3, r3, r1
 4068 1fb2 D833     		adds	r3, r3, #216
 4069 1fb4 1B68     		ldr	r3, [r3]
 4070 1fb6 1846     		mov	r0, r3
 4071 1fb8 FFF7FEFF 		bl	__aeabi_i2f
 4072 1fbc 0346     		mov	r3, r0
 4073 1fbe 4FF08F41 		mov	r1, #1199570944
 4074 1fc2 1846     		mov	r0, r3
 4075 1fc4 FFF7FEFF 		bl	__aeabi_fdiv
 4076 1fc8 0346     		mov	r3, r0
 4077 1fca 1A46     		mov	r2, r3
 4078 1fcc 07F13803 		add	r3, r7, #56
 4079 1fd0 183B     		subs	r3, r3, #24
 4080 1fd2 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4081              		.loc 1 601 0
 4082 1fd4 0023     		movs	r3, #0
 4083 1fd6 07F5A252 		add	r2, r7, #5184
 4084 1fda 02F11702 		add	r2, r2, #23
 4085 1fde 1370     		strb	r3, [r2]
 4086 1fe0 33E0     		b	.L175
 4087              	.L176:
 602:..\src/command_processing.c ****                             }
 4088              		.loc 1 602 0 discriminator 3
 4089 1fe2 07F5A253 		add	r3, r7, #5184
 4090 1fe6 03F11503 		add	r3, r3, #21
 4091 1fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4092 1fec 3222     		movs	r2, #50
 4093 1fee 02FB03F3 		mul	r3, r2, r3
 4094 1ff2 1A1D     		adds	r2, r3, #4
 4095 1ff4 07F5A253 		add	r3, r7, #5184
 4096 1ff8 03F11303 		add	r3, r3, #19
 4097 1ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 1ffe 1A44     		add	r2, r2, r3
 4099 2000 07F5A253 		add	r3, r7, #5184
 4100 2004 03F11303 		add	r3, r3, #19
 4101 2008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4102 200a 1A44     		add	r2, r2, r3
 4103 200c 07F5A253 		add	r3, r7, #5184
 4104 2010 03F11703 		add	r3, r3, #23
 4105 2014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4106 2016 D31A     		subs	r3, r2, r3
 4107 2018 5A1E     		subs	r2, r3, #1
 4108 201a 07F5A253 		add	r3, r7, #5184
 4109 201e 03F11703 		add	r3, r3, #23
 4110 2022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4111 2024 07F13803 		add	r3, r7, #56
 4112 2028 183B     		subs	r3, r3, #24
 4113 202a 0B44     		add	r3, r3, r1
 4114 202c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4115 202e 07F15803 		add	r3, r7, #88
 4116 2032 9954     		strb	r1, [r3, r2]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 101


 4117              		.loc 1 601 0 discriminator 3
 4118 2034 07F5A253 		add	r3, r7, #5184
 4119 2038 03F11703 		add	r3, r3, #23
 4120 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4121 203e 0133     		adds	r3, r3, #1
 4122 2040 07F5A252 		add	r2, r7, #5184
 4123 2044 02F11702 		add	r2, r2, #23
 4124 2048 1370     		strb	r3, [r2]
 4125              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4126              		.loc 1 601 0 is_stmt 0 discriminator 1
 4127 204a 07F5A253 		add	r3, r7, #5184
 4128 204e 03F11703 		add	r3, r3, #23
 4129 2052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4130 2054 07F5A253 		add	r3, r7, #5184
 4131 2058 03F11303 		add	r3, r3, #19
 4132 205c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4133 205e 9A42     		cmp	r2, r3
 4134 2060 BFD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4135              		.loc 1 604 0 is_stmt 1
 4136 2062 07F5A253 		add	r3, r7, #5184
 4137 2066 03F10E03 		add	r3, r3, #14
 4138 206a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4139 206c 2F49     		ldr	r1, .L269
 4140 206e 1346     		mov	r3, r2
 4141 2070 DB00     		lsls	r3, r3, #3
 4142 2072 9B1A     		subs	r3, r3, r2
 4143 2074 1B01     		lsls	r3, r3, #4
 4144 2076 0B44     		add	r3, r3, r1
 4145 2078 DC33     		adds	r3, r3, #220
 4146 207a 1B68     		ldr	r3, [r3]
 4147 207c 1846     		mov	r0, r3
 4148 207e FFF7FEFF 		bl	__aeabi_i2f
 4149 2082 0346     		mov	r3, r0
 4150 2084 4FF08F41 		mov	r1, #1199570944
 4151 2088 1846     		mov	r0, r3
 4152 208a FFF7FEFF 		bl	__aeabi_fdiv
 4153 208e 0346     		mov	r3, r0
 4154 2090 1A46     		mov	r2, r3
 4155 2092 07F13803 		add	r3, r7, #56
 4156 2096 183B     		subs	r3, r3, #24
 4157 2098 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4158              		.loc 1 605 0
 4159 209a 0023     		movs	r3, #0
 4160 209c 07F5A252 		add	r2, r7, #5184
 4161 20a0 02F11702 		add	r2, r2, #23
 4162 20a4 1370     		strb	r3, [r2]
 4163 20a6 34E0     		b	.L177
 4164              	.L178:
 606:..\src/command_processing.c ****                             }
 4165              		.loc 1 606 0 discriminator 3
 4166 20a8 07F5A253 		add	r3, r7, #5184
 4167 20ac 03F11503 		add	r3, r3, #21
 4168 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4169 20b2 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 102


 4170 20b4 02FB03F3 		mul	r3, r2, r3
 4171 20b8 1A1D     		adds	r2, r3, #4
 4172 20ba 07F5A253 		add	r3, r7, #5184
 4173 20be 03F11303 		add	r3, r3, #19
 4174 20c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4175 20c4 5B00     		lsls	r3, r3, #1
 4176 20c6 1A44     		add	r2, r2, r3
 4177 20c8 07F5A253 		add	r3, r7, #5184
 4178 20cc 03F11303 		add	r3, r3, #19
 4179 20d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 20d2 1A44     		add	r2, r2, r3
 4181 20d4 07F5A253 		add	r3, r7, #5184
 4182 20d8 03F11703 		add	r3, r3, #23
 4183 20dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4184 20de D31A     		subs	r3, r2, r3
 4185 20e0 5A1E     		subs	r2, r3, #1
 4186 20e2 07F5A253 		add	r3, r7, #5184
 4187 20e6 03F11703 		add	r3, r3, #23
 4188 20ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4189 20ec 07F13803 		add	r3, r7, #56
 4190 20f0 183B     		subs	r3, r3, #24
 4191 20f2 0B44     		add	r3, r3, r1
 4192 20f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4193 20f6 07F15803 		add	r3, r7, #88
 4194 20fa 9954     		strb	r1, [r3, r2]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4195              		.loc 1 605 0 discriminator 3
 4196 20fc 07F5A253 		add	r3, r7, #5184
 4197 2100 03F11703 		add	r3, r3, #23
 4198 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4199 2106 0133     		adds	r3, r3, #1
 4200 2108 07F5A252 		add	r2, r7, #5184
 4201 210c 02F11702 		add	r2, r2, #23
 4202 2110 1370     		strb	r3, [r2]
 4203              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4204              		.loc 1 605 0 is_stmt 0 discriminator 1
 4205 2112 07F5A253 		add	r3, r7, #5184
 4206 2116 03F11703 		add	r3, r3, #23
 4207 211a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4208 211c 07F5A253 		add	r3, r7, #5184
 4209 2120 03F11303 		add	r3, r3, #19
 4210 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4211 2126 9A42     		cmp	r2, r3
 4212 2128 BED3     		bcc	.L178
 4213              		.loc 1 609 0 is_stmt 1
 4214 212a 72E1     		b	.L103
 4215              	.L270:
 4216              		.align	2
 4217              	.L269:
 4218 212c 00000000 		.word	c_mem
 4219              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4220              		.loc 1 612 0
 4221 2130 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 103


 4222 2134 03F10E03 		add	r3, r3, #14
 4223 2138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4224 213a B349     		ldr	r1, .L271
 4225 213c 1346     		mov	r3, r2
 4226 213e DB00     		lsls	r3, r3, #3
 4227 2140 9B1A     		subs	r3, r3, r2
 4228 2142 1B01     		lsls	r3, r3, #4
 4229 2144 0B44     		add	r3, r3, r1
 4230 2146 03F58873 		add	r3, r3, #272
 4231 214a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4232 214c 1846     		mov	r0, r3
 4233 214e 07F5A253 		add	r3, r7, #5184
 4234 2152 03F11703 		add	r3, r3, #23
 4235 2156 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4236 2158 AC49     		ldr	r1, .L271+4
 4237 215a 0346     		mov	r3, r0
 4238 215c 5B00     		lsls	r3, r3, #1
 4239 215e 0344     		add	r3, r3, r0
 4240 2160 9B00     		lsls	r3, r3, #2
 4241 2162 1344     		add	r3, r3, r2
 4242 2164 6633     		adds	r3, r3, #102
 4243 2166 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4244 216a 07F5A253 		add	r3, r7, #5184
 4245 216e 03F10E03 		add	r3, r3, #14
 4246 2172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4247 2174 A448     		ldr	r0, .L271
 4248 2176 1346     		mov	r3, r2
 4249 2178 DB00     		lsls	r3, r3, #3
 4250 217a 9B1A     		subs	r3, r3, r2
 4251 217c 1B01     		lsls	r3, r3, #4
 4252 217e 0344     		add	r3, r3, r0
 4253 2180 03F58873 		add	r3, r3, #272
 4254 2184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4255 2186 1C46     		mov	r4, r3
 4256 2188 07F5A253 		add	r3, r7, #5184
 4257 218c 03F11703 		add	r3, r3, #23
 4258 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4259 2192 9E48     		ldr	r0, .L271+4
 4260 2194 2346     		mov	r3, r4
 4261 2196 5B00     		lsls	r3, r3, #1
 4262 2198 2344     		add	r3, r3, r4
 4263 219a 1B01     		lsls	r3, r3, #4
 4264 219c 0344     		add	r3, r3, r0
 4265 219e 1344     		add	r3, r3, r2
 4266 21a0 03F29513 		addw	r3, r3, #405
 4267 21a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4268 21a6 41FA03F3 		asr	r3, r1, r3
 4269 21aa 1AB2     		sxth	r2, r3
 4270 21ac 07F13803 		add	r3, r7, #56
 4271 21b0 1A3B     		subs	r3, r3, #26
 4272 21b2 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4273              		.loc 1 613 0
 4274 21b4 0023     		movs	r3, #0
 4275 21b6 07F5A252 		add	r2, r7, #5184
 4276 21ba 02F11602 		add	r2, r2, #22
 4277 21be 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 104


 4278 21c0 3AE0     		b	.L179
 4279              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4280              		.loc 1 614 0 discriminator 3
 4281 21c2 07F5A253 		add	r3, r7, #5184
 4282 21c6 03F11503 		add	r3, r3, #21
 4283 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4284 21cc 3222     		movs	r2, #50
 4285 21ce 02FB03F3 		mul	r3, r2, r3
 4286 21d2 1A1D     		adds	r2, r3, #4
 4287 21d4 07F5A253 		add	r3, r7, #5184
 4288 21d8 03F11703 		add	r3, r3, #23
 4289 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4290 21de 07F5A251 		add	r1, r7, #5184
 4291 21e2 01F11301 		add	r1, r1, #19
 4292 21e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4293 21e8 01FB03F3 		mul	r3, r1, r3
 4294 21ec 1A44     		add	r2, r2, r3
 4295 21ee 07F5A253 		add	r3, r7, #5184
 4296 21f2 03F11303 		add	r3, r3, #19
 4297 21f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4298 21f8 1A44     		add	r2, r2, r3
 4299 21fa 07F5A253 		add	r3, r7, #5184
 4300 21fe 03F11603 		add	r3, r3, #22
 4301 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4302 2204 D31A     		subs	r3, r2, r3
 4303 2206 5A1E     		subs	r2, r3, #1
 4304 2208 07F5A253 		add	r3, r7, #5184
 4305 220c 03F11603 		add	r3, r3, #22
 4306 2210 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4307 2212 07F13803 		add	r3, r7, #56
 4308 2216 1A3B     		subs	r3, r3, #26
 4309 2218 0B44     		add	r3, r3, r1
 4310 221a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4311 221c 07F15803 		add	r3, r7, #88
 4312 2220 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4313              		.loc 1 613 0 discriminator 3
 4314 2222 07F5A253 		add	r3, r7, #5184
 4315 2226 03F11603 		add	r3, r3, #22
 4316 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4317 222c 0133     		adds	r3, r3, #1
 4318 222e 07F5A252 		add	r2, r7, #5184
 4319 2232 02F11602 		add	r2, r2, #22
 4320 2236 1370     		strb	r3, [r2]
 4321              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4322              		.loc 1 613 0 is_stmt 0 discriminator 1
 4323 2238 07F5A253 		add	r3, r7, #5184
 4324 223c 03F11603 		add	r3, r3, #22
 4325 2240 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4326 2242 07F5A253 		add	r3, r7, #5184
 4327 2246 03F11303 		add	r3, r3, #19
 4328 224a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4329 224c 9A42     		cmp	r2, r3
 4330 224e B8D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 105


 616:..\src/command_processing.c ****                         break;
 4331              		.loc 1 616 0 is_stmt 1
 4332 2250 DFE0     		b	.L103
 4333              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4334              		.loc 1 619 0
 4335 2252 07F5A253 		add	r3, r7, #5184
 4336 2256 03F10E03 		add	r3, r3, #14
 4337 225a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4338 225c 6B49     		ldr	r1, .L271+4
 4339 225e 1346     		mov	r3, r2
 4340 2260 DB00     		lsls	r3, r3, #3
 4341 2262 9B1A     		subs	r3, r3, r2
 4342 2264 1B01     		lsls	r3, r3, #4
 4343 2266 0B44     		add	r3, r3, r1
 4344 2268 E433     		adds	r3, r3, #228
 4345 226a 1968     		ldr	r1, [r3]
 4346 226c 07F5A253 		add	r3, r7, #5184
 4347 2270 03F10E03 		add	r3, r3, #14
 4348 2274 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4349 2276 6448     		ldr	r0, .L271
 4350 2278 1346     		mov	r3, r2
 4351 227a DB00     		lsls	r3, r3, #3
 4352 227c 9B1A     		subs	r3, r3, r2
 4353 227e 1B01     		lsls	r3, r3, #4
 4354 2280 0344     		add	r3, r3, r0
 4355 2282 03F58873 		add	r3, r3, #272
 4356 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4357 2288 1846     		mov	r0, r3
 4358 228a 604A     		ldr	r2, .L271+4
 4359 228c 0346     		mov	r3, r0
 4360 228e 5B00     		lsls	r3, r3, #1
 4361 2290 0344     		add	r3, r3, r0
 4362 2292 1B01     		lsls	r3, r3, #4
 4363 2294 1344     		add	r3, r3, r2
 4364 2296 03F29513 		addw	r3, r3, #405
 4365 229a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4366 229c 41FA03F2 		asr	r2, r1, r3
 4367 22a0 07F11803 		add	r3, r7, #24
 4368 22a4 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4369              		.loc 1 620 0
 4370 22a6 0023     		movs	r3, #0
 4371 22a8 07F5A252 		add	r2, r7, #5184
 4372 22ac 02F11602 		add	r2, r2, #22
 4373 22b0 1370     		strb	r3, [r2]
 4374 22b2 2CE0     		b	.L181
 4375              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4376              		.loc 1 621 0 discriminator 3
 4377 22b4 07F5A253 		add	r3, r7, #5184
 4378 22b8 03F11503 		add	r3, r3, #21
 4379 22bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4380 22be 3222     		movs	r2, #50
 4381 22c0 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 106


 4382 22c4 1A1D     		adds	r2, r3, #4
 4383 22c6 07F5A253 		add	r3, r7, #5184
 4384 22ca 03F11303 		add	r3, r3, #19
 4385 22ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4386 22d0 1A44     		add	r2, r2, r3
 4387 22d2 07F5A253 		add	r3, r7, #5184
 4388 22d6 03F11603 		add	r3, r3, #22
 4389 22da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4390 22dc D31A     		subs	r3, r2, r3
 4391 22de 013B     		subs	r3, r3, #1
 4392 22e0 07F5A252 		add	r2, r7, #5184
 4393 22e4 02F11602 		add	r2, r2, #22
 4394 22e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4395 22ea 07F11801 		add	r1, r7, #24
 4396 22ee 0A44     		add	r2, r2, r1
 4397 22f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4398 22f2 07F15802 		add	r2, r7, #88
 4399 22f6 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4400              		.loc 1 620 0 discriminator 3
 4401 22f8 07F5A253 		add	r3, r7, #5184
 4402 22fc 03F11603 		add	r3, r3, #22
 4403 2300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4404 2302 0133     		adds	r3, r3, #1
 4405 2304 07F5A252 		add	r2, r7, #5184
 4406 2308 02F11602 		add	r2, r2, #22
 4407 230c 1370     		strb	r3, [r2]
 4408              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4409              		.loc 1 620 0 is_stmt 0 discriminator 1
 4410 230e 07F5A253 		add	r3, r7, #5184
 4411 2312 03F11603 		add	r3, r3, #22
 4412 2316 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4413 2318 07F5A253 		add	r3, r7, #5184
 4414 231c 03F11303 		add	r3, r3, #19
 4415 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4416 2322 9A42     		cmp	r2, r3
 4417 2324 C6D3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4418              		.loc 1 623 0 is_stmt 1
 4419 2326 07F5A253 		add	r3, r7, #5184
 4420 232a 03F10E03 		add	r3, r3, #14
 4421 232e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4422 2330 3649     		ldr	r1, .L271+4
 4423 2332 1346     		mov	r3, r2
 4424 2334 DB00     		lsls	r3, r3, #3
 4425 2336 9B1A     		subs	r3, r3, r2
 4426 2338 1B01     		lsls	r3, r3, #4
 4427 233a 0B44     		add	r3, r3, r1
 4428 233c E833     		adds	r3, r3, #232
 4429 233e 1968     		ldr	r1, [r3]
 4430 2340 07F5A253 		add	r3, r7, #5184
 4431 2344 03F10E03 		add	r3, r3, #14
 4432 2348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4433 234a 2F48     		ldr	r0, .L271
 4434 234c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 107


 4435 234e DB00     		lsls	r3, r3, #3
 4436 2350 9B1A     		subs	r3, r3, r2
 4437 2352 1B01     		lsls	r3, r3, #4
 4438 2354 0344     		add	r3, r3, r0
 4439 2356 03F58873 		add	r3, r3, #272
 4440 235a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4441 235c 1846     		mov	r0, r3
 4442 235e 2B4A     		ldr	r2, .L271+4
 4443 2360 0346     		mov	r3, r0
 4444 2362 5B00     		lsls	r3, r3, #1
 4445 2364 0344     		add	r3, r3, r0
 4446 2366 1B01     		lsls	r3, r3, #4
 4447 2368 1344     		add	r3, r3, r2
 4448 236a 03F29513 		addw	r3, r3, #405
 4449 236e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4450 2370 41FA03F2 		asr	r2, r1, r3
 4451 2374 07F11803 		add	r3, r7, #24
 4452 2378 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4453              		.loc 1 624 0
 4454 237a 0023     		movs	r3, #0
 4455 237c 07F5A252 		add	r2, r7, #5184
 4456 2380 02F11602 		add	r2, r2, #22
 4457 2384 1370     		strb	r3, [r2]
 4458 2386 32E0     		b	.L183
 4459              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4460              		.loc 1 625 0 discriminator 3
 4461 2388 07F5A253 		add	r3, r7, #5184
 4462 238c 03F11503 		add	r3, r3, #21
 4463 2390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4464 2392 3222     		movs	r2, #50
 4465 2394 02FB03F3 		mul	r3, r2, r3
 4466 2398 1A1D     		adds	r2, r3, #4
 4467 239a 07F5A253 		add	r3, r7, #5184
 4468 239e 03F11303 		add	r3, r3, #19
 4469 23a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4470 23a4 1A44     		add	r2, r2, r3
 4471 23a6 07F5A253 		add	r3, r7, #5184
 4472 23aa 03F11303 		add	r3, r3, #19
 4473 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4474 23b0 1A44     		add	r2, r2, r3
 4475 23b2 07F5A253 		add	r3, r7, #5184
 4476 23b6 03F11603 		add	r3, r3, #22
 4477 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4478 23bc D31A     		subs	r3, r2, r3
 4479 23be 013B     		subs	r3, r3, #1
 4480 23c0 07F5A252 		add	r2, r7, #5184
 4481 23c4 02F11602 		add	r2, r2, #22
 4482 23c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4483 23ca 07F11801 		add	r1, r7, #24
 4484 23ce 0A44     		add	r2, r2, r1
 4485 23d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4486 23d2 07F15802 		add	r2, r7, #88
 4487 23d6 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4488              		.loc 1 624 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 108


 4489 23d8 07F5A253 		add	r3, r7, #5184
 4490 23dc 03F11603 		add	r3, r3, #22
 4491 23e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4492 23e2 0133     		adds	r3, r3, #1
 4493 23e4 07F5A252 		add	r2, r7, #5184
 4494 23e8 02F11602 		add	r2, r2, #22
 4495 23ec 1370     		strb	r3, [r2]
 4496              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4497              		.loc 1 624 0 is_stmt 0 discriminator 1
 4498 23ee 07F5A253 		add	r3, r7, #5184
 4499 23f2 03F11603 		add	r3, r3, #22
 4500 23f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4501 23f8 07F5A253 		add	r3, r7, #5184
 4502 23fc 03F11303 		add	r3, r3, #19
 4503 2400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4504 2402 9A42     		cmp	r2, r3
 4505 2404 C0D3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 4506              		.loc 1 627 0 is_stmt 1
 4507 2406 04E0     		b	.L103
 4508              	.L272:
 4509              		.align	2
 4510              	.L271:
 4511 2408 00000000 		.word	g_mem
 4512 240c 00000000 		.word	c_mem
 4513              	.L253:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 4514              		.loc 1 630 0
 4515 2410 00BF     		nop
 4516              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4517              		.loc 1 637 0
 4518 2412 07F5A253 		add	r3, r7, #5184
 4519 2416 03F11503 		add	r3, r3, #21
 4520 241a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 241c 9B00     		lsls	r3, r3, #2
 4522 241e 07F5A352 		add	r2, r7, #5216
 4523 2422 02F11402 		add	r2, r2, #20
 4524 2426 1268     		ldr	r2, [r2]
 4525 2428 1344     		add	r3, r3, r2
 4526 242a 1A68     		ldr	r2, [r3]
 4527 242c 07F13803 		add	r3, r7, #56
 4528 2430 143B     		subs	r3, r3, #20
 4529 2432 1146     		mov	r1, r2
 4530 2434 1846     		mov	r0, r3
 4531 2436 FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 109


 4532              		.loc 1 638 0
 4533 243a 07F13803 		add	r3, r7, #56
 4534 243e 143B     		subs	r3, r3, #20
 4535 2440 1846     		mov	r0, r3
 4536 2442 FFF7FEFF 		bl	strlen
 4537 2446 0346     		mov	r3, r0
 4538 2448 07F5A252 		add	r2, r7, #5184
 4539 244c 02F11202 		add	r2, r2, #18
 4540 2450 1370     		strb	r3, [r2]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4541              		.loc 1 641 0
 4542 2452 07F5A253 		add	r3, r7, #5184
 4543 2456 03F11503 		add	r3, r3, #21
 4544 245a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4545 245c 07F11803 		add	r3, r7, #24
 4546 2460 103B     		subs	r3, r3, #16
 4547 2462 1B68     		ldr	r3, [r3]
 4548 2464 1344     		add	r3, r3, r2
 4549 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4550 2468 002B     		cmp	r3, #0
 4551 246a 40F07D83 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4552              		.loc 1 642 0
 4553 246e 07F5A253 		add	r3, r7, #5184
 4554 2472 03F11403 		add	r3, r3, #20
 4555 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 2478 07F5A352 		add	r2, r7, #5216
 4557 247c 02F11002 		add	r2, r2, #16
 4558 2480 1268     		ldr	r2, [r2]
 4559 2482 1344     		add	r3, r3, r2
 4560 2484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4561 2486 013B     		subs	r3, r3, #1
 4562 2488 092B     		cmp	r3, #9
 4563 248a 00F25F83 		bhi	.L186
 4564 248e 01A2     		adr	r2, .L188
 4565 2490 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4566              		.p2align 2
 4567              	.L188:
 4568 2494 BD240000 		.word	.L187+1
 4569 2498 39260000 		.word	.L189+1
 4570 249c 0D270000 		.word	.L190+1
 4571 24a0 61270000 		.word	.L191+1
 4572 24a4 C5270000 		.word	.L192+1
 4573 24a8 21280000 		.word	.L193+1
 4574 24ac 3D290000 		.word	.L194+1
 4575 24b0 C5290000 		.word	.L195+1
 4576 24b4 592A0000 		.word	.L196+1
 4577 24b8 D12A0000 		.word	.L197+1
 4578              		.p2align 1
 4579              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 4580              		.loc 1 644 0
 4581 24bc 07F5A253 		add	r3, r7, #5184
 4582 24c0 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 110


 4583 24c4 1B68     		ldr	r3, [r3]
 4584 24c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4585 24c8 062B     		cmp	r3, #6
 4586 24ca 00F23A83 		bhi	.L254
 4587 24ce 01A2     		adr	r2, .L200
 4588 24d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4589              		.p2align 2
 4590              	.L200:
 4591 24d4 F1240000 		.word	.L199+1
 4592 24d8 15250000 		.word	.L201+1
 4593 24dc 3B250000 		.word	.L202+1
 4594 24e0 69250000 		.word	.L203+1
 4595 24e4 95250000 		.word	.L204+1
 4596 24e8 BF250000 		.word	.L205+1
 4597 24ec F3250000 		.word	.L206+1
 4598              		.p2align 1
 4599              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4600              		.loc 1 646 0
 4601 24f0 07F13803 		add	r3, r7, #56
 4602 24f4 143B     		subs	r3, r3, #20
 4603 24f6 1846     		mov	r0, r3
 4604 24f8 FFF7FEFF 		bl	strlen
 4605 24fc 0346     		mov	r3, r0
 4606 24fe 1A46     		mov	r2, r3
 4607 2500 07F13803 		add	r3, r7, #56
 4608 2504 143B     		subs	r3, r3, #20
 4609 2506 1344     		add	r3, r3, r2
 4610 2508 D84A     		ldr	r2, .L273
 4611 250a 1068     		ldr	r0, [r2]	@ unaligned
 4612 250c 1860     		str	r0, [r3]	@ unaligned
 4613 250e 1279     		ldrb	r2, [r2, #4]
 4614 2510 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 4615              		.loc 1 647 0
 4616 2512 90E0     		b	.L198
 4617              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4618              		.loc 1 649 0
 4619 2514 07F13803 		add	r3, r7, #56
 4620 2518 143B     		subs	r3, r3, #20
 4621 251a 1846     		mov	r0, r3
 4622 251c FFF7FEFF 		bl	strlen
 4623 2520 0346     		mov	r3, r0
 4624 2522 1A46     		mov	r2, r3
 4625 2524 07F13803 		add	r3, r7, #56
 4626 2528 143B     		subs	r3, r3, #20
 4627 252a 1344     		add	r3, r3, r2
 4628 252c D049     		ldr	r1, .L273+4
 4629 252e 1A46     		mov	r2, r3
 4630 2530 0B46     		mov	r3, r1
 4631 2532 03CB     		ldmia	r3!, {r0, r1}
 4632 2534 1060     		str	r0, [r2]	@ unaligned
 4633 2536 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 111


 4634              		.loc 1 650 0
 4635 2538 7DE0     		b	.L198
 4636              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4637              		.loc 1 652 0
 4638 253a 07F13803 		add	r3, r7, #56
 4639 253e 143B     		subs	r3, r3, #20
 4640 2540 1846     		mov	r0, r3
 4641 2542 FFF7FEFF 		bl	strlen
 4642 2546 0346     		mov	r3, r0
 4643 2548 1A46     		mov	r2, r3
 4644 254a 07F13803 		add	r3, r7, #56
 4645 254e 143B     		subs	r3, r3, #20
 4646 2550 1344     		add	r3, r3, r2
 4647 2552 C84A     		ldr	r2, .L273+8
 4648 2554 1D46     		mov	r5, r3
 4649 2556 1446     		mov	r4, r2
 4650 2558 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4651 255a 2860     		str	r0, [r5]	@ unaligned
 4652 255c 6960     		str	r1, [r5, #4]	@ unaligned
 4653 255e AA60     		str	r2, [r5, #8]	@ unaligned
 4654 2560 EB60     		str	r3, [r5, #12]	@ unaligned
 4655 2562 2388     		ldrh	r3, [r4]	@ unaligned
 4656 2564 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 4657              		.loc 1 653 0
 4658 2566 66E0     		b	.L198
 4659              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4660              		.loc 1 655 0
 4661 2568 07F13803 		add	r3, r7, #56
 4662 256c 143B     		subs	r3, r3, #20
 4663 256e 1846     		mov	r0, r3
 4664 2570 FFF7FEFF 		bl	strlen
 4665 2574 0346     		mov	r3, r0
 4666 2576 1A46     		mov	r2, r3
 4667 2578 07F13803 		add	r3, r7, #56
 4668 257c 143B     		subs	r3, r3, #20
 4669 257e 1344     		add	r3, r3, r2
 4670 2580 BD4A     		ldr	r2, .L273+12
 4671 2582 1C46     		mov	r4, r3
 4672 2584 1346     		mov	r3, r2
 4673 2586 07CB     		ldmia	r3!, {r0, r1, r2}
 4674 2588 2060     		str	r0, [r4]	@ unaligned
 4675 258a 6160     		str	r1, [r4, #4]	@ unaligned
 4676 258c A260     		str	r2, [r4, #8]	@ unaligned
 4677 258e 1B88     		ldrh	r3, [r3]	@ unaligned
 4678 2590 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 4679              		.loc 1 656 0
 4680 2592 50E0     		b	.L198
 4681              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4682              		.loc 1 658 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 112


 4683 2594 07F13803 		add	r3, r7, #56
 4684 2598 143B     		subs	r3, r3, #20
 4685 259a 1846     		mov	r0, r3
 4686 259c FFF7FEFF 		bl	strlen
 4687 25a0 0346     		mov	r3, r0
 4688 25a2 1A46     		mov	r2, r3
 4689 25a4 07F13803 		add	r3, r7, #56
 4690 25a8 143B     		subs	r3, r3, #20
 4691 25aa 1344     		add	r3, r3, r2
 4692 25ac B349     		ldr	r1, .L273+16
 4693 25ae 1A46     		mov	r2, r3
 4694 25b0 0B46     		mov	r3, r1
 4695 25b2 03CB     		ldmia	r3!, {r0, r1}
 4696 25b4 1060     		str	r0, [r2]	@ unaligned
 4697 25b6 5160     		str	r1, [r2, #4]	@ unaligned
 4698 25b8 1B88     		ldrh	r3, [r3]	@ unaligned
 4699 25ba 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4700              		.loc 1 659 0
 4701 25bc 3BE0     		b	.L198
 4702              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4703              		.loc 1 661 0
 4704 25be 07F13803 		add	r3, r7, #56
 4705 25c2 143B     		subs	r3, r3, #20
 4706 25c4 1846     		mov	r0, r3
 4707 25c6 FFF7FEFF 		bl	strlen
 4708 25ca 0346     		mov	r3, r0
 4709 25cc 1A46     		mov	r2, r3
 4710 25ce 07F13803 		add	r3, r7, #56
 4711 25d2 143B     		subs	r3, r3, #20
 4712 25d4 1344     		add	r3, r3, r2
 4713 25d6 AA4A     		ldr	r2, .L273+20
 4714 25d8 1D46     		mov	r5, r3
 4715 25da 1446     		mov	r4, r2
 4716 25dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4717 25de 2860     		str	r0, [r5]	@ unaligned
 4718 25e0 6960     		str	r1, [r5, #4]	@ unaligned
 4719 25e2 AA60     		str	r2, [r5, #8]	@ unaligned
 4720 25e4 EB60     		str	r3, [r5, #12]	@ unaligned
 4721 25e6 2388     		ldrh	r3, [r4]	@ unaligned
 4722 25e8 A278     		ldrb	r2, [r4, #2]
 4723 25ea 2B82     		strh	r3, [r5, #16]	@ unaligned
 4724 25ec 1346     		mov	r3, r2
 4725 25ee AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 4726              		.loc 1 662 0
 4727 25f0 21E0     		b	.L198
 4728              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4729              		.loc 1 664 0
 4730 25f2 07F13803 		add	r3, r7, #56
 4731 25f6 143B     		subs	r3, r3, #20
 4732 25f8 1846     		mov	r0, r3
 4733 25fa FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 113


 4734 25fe 0346     		mov	r3, r0
 4735 2600 1A46     		mov	r2, r3
 4736 2602 07F13803 		add	r3, r7, #56
 4737 2606 143B     		subs	r3, r3, #20
 4738 2608 1344     		add	r3, r3, r2
 4739 260a 9E4A     		ldr	r2, .L273+24
 4740 260c 1446     		mov	r4, r2
 4741 260e 9E46     		mov	lr, r3
 4742 2610 04F1200C 		add	ip, r4, #32
 4743              	.L207:
 4744 2614 7546     		mov	r5, lr
 4745 2616 2646     		mov	r6, r4
 4746 2618 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4747 261a 2860     		str	r0, [r5]	@ unaligned
 4748 261c 6960     		str	r1, [r5, #4]	@ unaligned
 4749 261e AA60     		str	r2, [r5, #8]	@ unaligned
 4750 2620 EB60     		str	r3, [r5, #12]	@ unaligned
 4751 2622 1034     		adds	r4, r4, #16
 4752 2624 0EF1100E 		add	lr, lr, #16
 4753 2628 6445     		cmp	r4, ip
 4754 262a F3D1     		bne	.L207
 4755 262c 7246     		mov	r2, lr
 4756 262e 2346     		mov	r3, r4
 4757 2630 1B88     		ldrh	r3, [r3]	@ unaligned
 4758 2632 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4759              		.loc 1 665 0
 4760 2634 00BF     		nop
 4761              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 4762              		.loc 1 667 0
 4763 2636 84E2     		b	.L254
 4764              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
 4765              		.loc 1 669 0
 4766 2638 07F5A253 		add	r3, r7, #5184
 4767 263c 03F10803 		add	r3, r3, #8
 4768 2640 1B68     		ldr	r3, [r3]
 4769 2642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4770 2644 032B     		cmp	r3, #3
 4771 2646 00F27E82 		bhi	.L255
 4772 264a 01A2     		adr	r2, .L210
 4773 264c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4774              		.p2align 2
 4775              	.L210:
 4776 2650 61260000 		.word	.L209+1
 4777 2654 8B260000 		.word	.L211+1
 4778 2658 AF260000 		.word	.L212+1
 4779 265c D9260000 		.word	.L213+1
 4780              		.p2align 1
 4781              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4782              		.loc 1 671 0
 4783 2660 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 114


 4784 2664 143B     		subs	r3, r3, #20
 4785 2666 1846     		mov	r0, r3
 4786 2668 FFF7FEFF 		bl	strlen
 4787 266c 0346     		mov	r3, r0
 4788 266e 1A46     		mov	r2, r3
 4789 2670 07F13803 		add	r3, r7, #56
 4790 2674 143B     		subs	r3, r3, #20
 4791 2676 1344     		add	r3, r3, r2
 4792 2678 8349     		ldr	r1, .L273+28
 4793 267a 1A46     		mov	r2, r3
 4794 267c 0B46     		mov	r3, r1
 4795 267e 03CB     		ldmia	r3!, {r0, r1}
 4796 2680 1060     		str	r0, [r2]	@ unaligned
 4797 2682 5160     		str	r1, [r2, #4]	@ unaligned
 4798 2684 1B88     		ldrh	r3, [r3]	@ unaligned
 4799 2686 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4800              		.loc 1 672 0
 4801 2688 3FE0     		b	.L208
 4802              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4803              		.loc 1 674 0
 4804 268a 07F13803 		add	r3, r7, #56
 4805 268e 143B     		subs	r3, r3, #20
 4806 2690 1846     		mov	r0, r3
 4807 2692 FFF7FEFF 		bl	strlen
 4808 2696 0346     		mov	r3, r0
 4809 2698 1A46     		mov	r2, r3
 4810 269a 07F13803 		add	r3, r7, #56
 4811 269e 143B     		subs	r3, r3, #20
 4812 26a0 1344     		add	r3, r3, r2
 4813 26a2 7A4A     		ldr	r2, .L273+32
 4814 26a4 1068     		ldr	r0, [r2]	@ unaligned
 4815 26a6 1860     		str	r0, [r3]	@ unaligned
 4816 26a8 1279     		ldrb	r2, [r2, #4]
 4817 26aa 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 4818              		.loc 1 675 0
 4819 26ac 2DE0     		b	.L208
 4820              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4821              		.loc 1 677 0
 4822 26ae 07F13803 		add	r3, r7, #56
 4823 26b2 143B     		subs	r3, r3, #20
 4824 26b4 1846     		mov	r0, r3
 4825 26b6 FFF7FEFF 		bl	strlen
 4826 26ba 0346     		mov	r3, r0
 4827 26bc 1A46     		mov	r2, r3
 4828 26be 07F13803 		add	r3, r7, #56
 4829 26c2 143B     		subs	r3, r3, #20
 4830 26c4 1344     		add	r3, r3, r2
 4831 26c6 7249     		ldr	r1, .L273+36
 4832 26c8 1A46     		mov	r2, r3
 4833 26ca 0B46     		mov	r3, r1
 4834 26cc 03CB     		ldmia	r3!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 115


 4835 26ce 1060     		str	r0, [r2]	@ unaligned
 4836 26d0 5160     		str	r1, [r2, #4]	@ unaligned
 4837 26d2 1B78     		ldrb	r3, [r3]
 4838 26d4 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 4839              		.loc 1 678 0
 4840 26d6 18E0     		b	.L208
 4841              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4842              		.loc 1 680 0
 4843 26d8 07F13803 		add	r3, r7, #56
 4844 26dc 143B     		subs	r3, r3, #20
 4845 26de 1846     		mov	r0, r3
 4846 26e0 FFF7FEFF 		bl	strlen
 4847 26e4 0346     		mov	r3, r0
 4848 26e6 1A46     		mov	r2, r3
 4849 26e8 07F13803 		add	r3, r7, #56
 4850 26ec 143B     		subs	r3, r3, #20
 4851 26ee 1344     		add	r3, r3, r2
 4852 26f0 684A     		ldr	r2, .L273+40
 4853 26f2 1D46     		mov	r5, r3
 4854 26f4 1446     		mov	r4, r2
 4855 26f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4856 26f8 2860     		str	r0, [r5]	@ unaligned
 4857 26fa 6960     		str	r1, [r5, #4]	@ unaligned
 4858 26fc AA60     		str	r2, [r5, #8]	@ unaligned
 4859 26fe EB60     		str	r3, [r5, #12]	@ unaligned
 4860 2700 2068     		ldr	r0, [r4]	@ unaligned
 4861 2702 2861     		str	r0, [r5, #16]	@ unaligned
 4862 2704 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4863 2706 AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4864              		.loc 1 681 0
 4865 2708 00BF     		nop
 4866              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 4867              		.loc 1 683 0
 4868 270a 1CE2     		b	.L255
 4869              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 4870              		.loc 1 685 0
 4871 270c 07F5A253 		add	r3, r7, #5184
 4872 2710 03F10803 		add	r3, r3, #8
 4873 2714 1B68     		ldr	r3, [r3]
 4874 2716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4875 2718 002B     		cmp	r3, #0
 4876 271a 11D0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 4877              		.loc 1 686 0
 4878 271c 07F13803 		add	r3, r7, #56
 4879 2720 143B     		subs	r3, r3, #20
 4880 2722 1846     		mov	r0, r3
 4881 2724 FFF7FEFF 		bl	strlen
 4882 2728 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 116


 4883 272a 1A46     		mov	r2, r3
 4884 272c 07F13803 		add	r3, r7, #56
 4885 2730 143B     		subs	r3, r3, #20
 4886 2732 1344     		add	r3, r3, r2
 4887 2734 584A     		ldr	r2, .L273+44
 4888 2736 1068     		ldr	r0, [r2]	@ unaligned
 4889 2738 1860     		str	r0, [r3]	@ unaligned
 4890 273a 1279     		ldrb	r2, [r2, #4]
 4891 273c 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 4892              		.loc 1 691 0
 4893 273e 05E2     		b	.L186
 4894              	.L214:
 689:..\src/command_processing.c ****                     }
 4895              		.loc 1 689 0
 4896 2740 07F13803 		add	r3, r7, #56
 4897 2744 143B     		subs	r3, r3, #20
 4898 2746 1846     		mov	r0, r3
 4899 2748 FFF7FEFF 		bl	strlen
 4900 274c 0346     		mov	r3, r0
 4901 274e 1A46     		mov	r2, r3
 4902 2750 07F13803 		add	r3, r7, #56
 4903 2754 143B     		subs	r3, r3, #20
 4904 2756 1344     		add	r3, r3, r2
 4905 2758 504A     		ldr	r2, .L273+48
 4906 275a 1068     		ldr	r0, [r2]	@ unaligned
 4907 275c 1860     		str	r0, [r3]	@ unaligned
 4908              		.loc 1 691 0
 4909 275e F5E1     		b	.L186
 4910              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4911              		.loc 1 693 0
 4912 2760 07F5A253 		add	r3, r7, #5184
 4913 2764 03F10803 		add	r3, r3, #8
 4914 2768 1B68     		ldr	r3, [r3]
 4915 276a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4916 276c 002B     		cmp	r3, #0
 4917 276e 02D0     		beq	.L217
 4918 2770 012B     		cmp	r3, #1
 4919 2772 14D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 4920              		.loc 1 701 0
 4921 2774 EAE1     		b	.L186
 4922              	.L217:
 695:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 117


 4923              		.loc 1 695 0
 4924 2776 07F13803 		add	r3, r7, #56
 4925 277a 143B     		subs	r3, r3, #20
 4926 277c 1846     		mov	r0, r3
 4927 277e FFF7FEFF 		bl	strlen
 4928 2782 0346     		mov	r3, r0
 4929 2784 1A46     		mov	r2, r3
 4930 2786 07F13803 		add	r3, r7, #56
 4931 278a 143B     		subs	r3, r3, #20
 4932 278c 1344     		add	r3, r3, r2
 4933 278e 444A     		ldr	r2, .L273+52
 4934 2790 1068     		ldr	r0, [r2]	@ unaligned
 4935 2792 1860     		str	r0, [r3]	@ unaligned
 4936 2794 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4937 2796 9279     		ldrb	r2, [r2, #6]
 4938 2798 9980     		strh	r1, [r3, #4]	@ unaligned
 4939 279a 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 4940              		.loc 1 696 0
 4941 279c 11E0     		b	.L216
 4942              	.L218:
 698:..\src/command_processing.c ****                         break;
 4943              		.loc 1 698 0
 4944 279e 07F13803 		add	r3, r7, #56
 4945 27a2 143B     		subs	r3, r3, #20
 4946 27a4 1846     		mov	r0, r3
 4947 27a6 FFF7FEFF 		bl	strlen
 4948 27aa 0346     		mov	r3, r0
 4949 27ac 1A46     		mov	r2, r3
 4950 27ae 07F13803 		add	r3, r7, #56
 4951 27b2 143B     		subs	r3, r3, #20
 4952 27b4 1344     		add	r3, r3, r2
 4953 27b6 3B4A     		ldr	r2, .L273+56
 4954 27b8 1068     		ldr	r0, [r2]	@ unaligned
 4955 27ba 1860     		str	r0, [r3]	@ unaligned
 4956 27bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4957 27be 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 4958              		.loc 1 699 0
 4959 27c0 00BF     		nop
 4960              	.L216:
 4961              		.loc 1 701 0
 4962 27c2 C3E1     		b	.L186
 4963              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 4964              		.loc 1 703 0
 4965 27c4 07F5A253 		add	r3, r7, #5184
 4966 27c8 03F10803 		add	r3, r3, #8
 4967 27cc 1B68     		ldr	r3, [r3]
 4968 27ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4969 27d0 002B     		cmp	r3, #0
 4970 27d2 02D0     		beq	.L220
 4971 27d4 012B     		cmp	r3, #1
 4972 27d6 12D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 118


 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 4973              		.loc 1 711 0
 4974 27d8 B8E1     		b	.L186
 4975              	.L220:
 705:..\src/command_processing.c ****                         break;
 4976              		.loc 1 705 0
 4977 27da 07F13803 		add	r3, r7, #56
 4978 27de 143B     		subs	r3, r3, #20
 4979 27e0 1846     		mov	r0, r3
 4980 27e2 FFF7FEFF 		bl	strlen
 4981 27e6 0346     		mov	r3, r0
 4982 27e8 1A46     		mov	r2, r3
 4983 27ea 07F13803 		add	r3, r7, #56
 4984 27ee 143B     		subs	r3, r3, #20
 4985 27f0 1344     		add	r3, r3, r2
 4986 27f2 2D4A     		ldr	r2, .L273+60
 4987 27f4 1068     		ldr	r0, [r2]	@ unaligned
 4988 27f6 1860     		str	r0, [r3]	@ unaligned
 4989 27f8 1279     		ldrb	r2, [r2, #4]
 4990 27fa 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 4991              		.loc 1 706 0
 4992 27fc 0FE0     		b	.L219
 4993              	.L221:
 708:..\src/command_processing.c ****                         break;
 4994              		.loc 1 708 0
 4995 27fe 07F13803 		add	r3, r7, #56
 4996 2802 143B     		subs	r3, r3, #20
 4997 2804 1846     		mov	r0, r3
 4998 2806 FFF7FEFF 		bl	strlen
 4999 280a 0346     		mov	r3, r0
 5000 280c 1A46     		mov	r2, r3
 5001 280e 07F13803 		add	r3, r7, #56
 5002 2812 143B     		subs	r3, r3, #20
 5003 2814 1344     		add	r3, r3, r2
 5004 2816 254A     		ldr	r2, .L273+64
 5005 2818 1068     		ldr	r0, [r2]	@ unaligned
 5006 281a 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 5007              		.loc 1 709 0
 5008 281c 00BF     		nop
 5009              	.L219:
 5010              		.loc 1 711 0
 5011 281e 95E1     		b	.L186
 5012              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
 713:..\src/command_processing.c ****                     switch(*m_addr){
 5013              		.loc 1 713 0
 5014 2820 07F5A253 		add	r3, r7, #5184
 5015 2824 03F10803 		add	r3, r3, #8
 5016 2828 1B68     		ldr	r3, [r3]
 5017 282a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 119


 5018 282c 032B     		cmp	r3, #3
 5019 282e 00F28C81 		bhi	.L256
 5020 2832 01A2     		adr	r2, .L224
 5021 2834 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5022              		.p2align 2
 5023              	.L224:
 5024 2838 49280000 		.word	.L223+1
 5025 283c B5280000 		.word	.L225+1
 5026 2840 E1280000 		.word	.L226+1
 5027 2844 0F290000 		.word	.L227+1
 5028              		.p2align 1
 5029              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5030              		.loc 1 715 0
 5031 2848 07F13803 		add	r3, r7, #56
 5032 284c 143B     		subs	r3, r3, #20
 5033 284e 1846     		mov	r0, r3
 5034 2850 FFF7FEFF 		bl	strlen
 5035 2854 0346     		mov	r3, r0
 5036 2856 1A46     		mov	r2, r3
 5037 2858 07F13803 		add	r3, r7, #56
 5038 285c 143B     		subs	r3, r3, #20
 5039 285e 1344     		add	r3, r3, r2
 5040 2860 134A     		ldr	r2, .L273+68
 5041 2862 1068     		ldr	r0, [r2]	@ unaligned
 5042 2864 1860     		str	r0, [r3]	@ unaligned
 5043 2866 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5044 2868 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 5045              		.loc 1 716 0
 5046 286a 66E0     		b	.L222
 5047              	.L274:
 5048              		.align	2
 5049              	.L273:
 5050 286c 00000000 		.word	.LC76
 5051 2870 08000000 		.word	.LC77
 5052 2874 10000000 		.word	.LC78
 5053 2878 24000000 		.word	.LC79
 5054 287c 34000000 		.word	.LC80
 5055 2880 40000000 		.word	.LC81
 5056 2884 54000000 		.word	.LC82
 5057 2888 78000000 		.word	.LC83
 5058 288c 84000000 		.word	.LC84
 5059 2890 8C000000 		.word	.LC85
 5060 2894 98000000 		.word	.LC86
 5061 2898 B0000000 		.word	.LC87
 5062 289c B8000000 		.word	.LC88
 5063 28a0 C0000000 		.word	.LC89
 5064 28a4 C8000000 		.word	.LC90
 5065 28a8 D0000000 		.word	.LC91
 5066 28ac D8000000 		.word	.LC92
 5067 28b0 E0000000 		.word	.LC93
 5068              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5069              		.loc 1 718 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 120


 5070 28b4 07F13803 		add	r3, r7, #56
 5071 28b8 143B     		subs	r3, r3, #20
 5072 28ba 1846     		mov	r0, r3
 5073 28bc FFF7FEFF 		bl	strlen
 5074 28c0 0346     		mov	r3, r0
 5075 28c2 1A46     		mov	r2, r3
 5076 28c4 07F13803 		add	r3, r7, #56
 5077 28c8 143B     		subs	r3, r3, #20
 5078 28ca 1344     		add	r3, r3, r2
 5079 28cc AC4A     		ldr	r2, .L275
 5080 28ce 1C46     		mov	r4, r3
 5081 28d0 1346     		mov	r3, r2
 5082 28d2 07CB     		ldmia	r3!, {r0, r1, r2}
 5083 28d4 2060     		str	r0, [r4]	@ unaligned
 5084 28d6 6160     		str	r1, [r4, #4]	@ unaligned
 5085 28d8 A260     		str	r2, [r4, #8]	@ unaligned
 5086 28da 1B88     		ldrh	r3, [r3]	@ unaligned
 5087 28dc A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 5088              		.loc 1 719 0
 5089 28de 2CE0     		b	.L222
 5090              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5091              		.loc 1 721 0
 5092 28e0 07F13803 		add	r3, r7, #56
 5093 28e4 143B     		subs	r3, r3, #20
 5094 28e6 1846     		mov	r0, r3
 5095 28e8 FFF7FEFF 		bl	strlen
 5096 28ec 0346     		mov	r3, r0
 5097 28ee 1A46     		mov	r2, r3
 5098 28f0 07F13803 		add	r3, r7, #56
 5099 28f4 143B     		subs	r3, r3, #20
 5100 28f6 1344     		add	r3, r3, r2
 5101 28f8 A24A     		ldr	r2, .L275+4
 5102 28fa 1D46     		mov	r5, r3
 5103 28fc 1446     		mov	r4, r2
 5104 28fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5105 2900 2860     		str	r0, [r5]	@ unaligned
 5106 2902 6960     		str	r1, [r5, #4]	@ unaligned
 5107 2904 AA60     		str	r2, [r5, #8]	@ unaligned
 5108 2906 EB60     		str	r3, [r5, #12]	@ unaligned
 5109 2908 2388     		ldrh	r3, [r4]	@ unaligned
 5110 290a 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 5111              		.loc 1 722 0
 5112 290c 15E0     		b	.L222
 5113              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5114              		.loc 1 724 0
 5115 290e 07F13803 		add	r3, r7, #56
 5116 2912 143B     		subs	r3, r3, #20
 5117 2914 1846     		mov	r0, r3
 5118 2916 FFF7FEFF 		bl	strlen
 5119 291a 0346     		mov	r3, r0
 5120 291c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 121


 5121 291e 07F13803 		add	r3, r7, #56
 5122 2922 143B     		subs	r3, r3, #20
 5123 2924 1344     		add	r3, r3, r2
 5124 2926 984A     		ldr	r2, .L275+8
 5125 2928 1C46     		mov	r4, r3
 5126 292a 1346     		mov	r3, r2
 5127 292c 07CB     		ldmia	r3!, {r0, r1, r2}
 5128 292e 2060     		str	r0, [r4]	@ unaligned
 5129 2930 6160     		str	r1, [r4, #4]	@ unaligned
 5130 2932 A260     		str	r2, [r4, #8]	@ unaligned
 5131 2934 1B78     		ldrb	r3, [r3]
 5132 2936 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 5133              		.loc 1 725 0
 5134 2938 00BF     		nop
 5135              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 5136              		.loc 1 727 0
 5137 293a 06E1     		b	.L256
 5138              	.L194:
 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 5139              		.loc 1 729 0
 5140 293c 07F5A253 		add	r3, r7, #5184
 5141 2940 03F10803 		add	r3, r3, #8
 5142 2944 1B68     		ldr	r3, [r3]
 5143 2946 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5144 2948 012B     		cmp	r3, #1
 5145 294a 16D0     		beq	.L229
 5146 294c 022B     		cmp	r3, #2
 5147 294e 26D0     		beq	.L230
 5148 2950 002B     		cmp	r3, #0
 5149 2952 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 5150              		.loc 1 740 0
 5151 2954 35E0     		b	.L232
 5152              	.L231:
 731:..\src/command_processing.c ****                             break;
 5153              		.loc 1 731 0
 5154 2956 07F13803 		add	r3, r7, #56
 5155 295a 143B     		subs	r3, r3, #20
 5156 295c 1846     		mov	r0, r3
 5157 295e FFF7FEFF 		bl	strlen
 5158 2962 0346     		mov	r3, r0
 5159 2964 1A46     		mov	r2, r3
 5160 2966 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 122


 5161 296a 143B     		subs	r3, r3, #20
 5162 296c 1344     		add	r3, r3, r2
 5163 296e 874A     		ldr	r2, .L275+12
 5164 2970 1068     		ldr	r0, [r2]	@ unaligned
 5165 2972 1860     		str	r0, [r3]	@ unaligned
 5166 2974 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5167 2976 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 5168              		.loc 1 732 0
 5169 2978 23E0     		b	.L232
 5170              	.L229:
 734:..\src/command_processing.c ****                             break;
 5171              		.loc 1 734 0
 5172 297a 07F13803 		add	r3, r7, #56
 5173 297e 143B     		subs	r3, r3, #20
 5174 2980 1846     		mov	r0, r3
 5175 2982 FFF7FEFF 		bl	strlen
 5176 2986 0346     		mov	r3, r0
 5177 2988 1A46     		mov	r2, r3
 5178 298a 07F13803 		add	r3, r7, #56
 5179 298e 143B     		subs	r3, r3, #20
 5180 2990 1344     		add	r3, r3, r2
 5181 2992 7F4A     		ldr	r2, .L275+16
 5182 2994 1068     		ldr	r0, [r2]	@ unaligned
 5183 2996 1860     		str	r0, [r3]	@ unaligned
 5184 2998 1279     		ldrb	r2, [r2, #4]
 5185 299a 1A71     		strb	r2, [r3, #4]
 735:..\src/command_processing.c ****                         case 2: 
 5186              		.loc 1 735 0
 5187 299c 11E0     		b	.L232
 5188              	.L230:
 737:..\src/command_processing.c ****                             break;
 5189              		.loc 1 737 0
 5190 299e 07F13803 		add	r3, r7, #56
 5191 29a2 143B     		subs	r3, r3, #20
 5192 29a4 1846     		mov	r0, r3
 5193 29a6 FFF7FEFF 		bl	strlen
 5194 29aa 0346     		mov	r3, r0
 5195 29ac 1A46     		mov	r2, r3
 5196 29ae 07F13803 		add	r3, r7, #56
 5197 29b2 143B     		subs	r3, r3, #20
 5198 29b4 1344     		add	r3, r3, r2
 5199 29b6 774A     		ldr	r2, .L275+20
 5200 29b8 1068     		ldr	r0, [r2]	@ unaligned
 5201 29ba 1860     		str	r0, [r3]	@ unaligned
 5202 29bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5203 29be 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 5204              		.loc 1 738 0
 5205 29c0 00BF     		nop
 5206              	.L232:
 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 5207              		.loc 1 742 0 discriminator 12
 5208 29c2 C3E0     		b	.L186
 5209              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 123


 744:..\src/command_processing.c ****                     switch(*m_addr){
 5210              		.loc 1 744 0
 5211 29c4 07F5A253 		add	r3, r7, #5184
 5212 29c8 03F10803 		add	r3, r3, #8
 5213 29cc 1B68     		ldr	r3, [r3]
 5214 29ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5215 29d0 012B     		cmp	r3, #1
 5216 29d2 1AD0     		beq	.L234
 5217 29d4 022B     		cmp	r3, #2
 5218 29d6 2CD0     		beq	.L235
 5219 29d8 002B     		cmp	r3, #0
 5220 29da 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 5221              		.loc 1 755 0
 5222 29dc B6E0     		b	.L186
 5223              	.L236:
 746:..\src/command_processing.c ****                         break;
 5224              		.loc 1 746 0
 5225 29de 07F13803 		add	r3, r7, #56
 5226 29e2 143B     		subs	r3, r3, #20
 5227 29e4 1846     		mov	r0, r3
 5228 29e6 FFF7FEFF 		bl	strlen
 5229 29ea 0346     		mov	r3, r0
 5230 29ec 1A46     		mov	r2, r3
 5231 29ee 07F13803 		add	r3, r7, #56
 5232 29f2 143B     		subs	r3, r3, #20
 5233 29f4 1344     		add	r3, r3, r2
 5234 29f6 684A     		ldr	r2, .L275+24
 5235 29f8 1C46     		mov	r4, r3
 5236 29fa 1346     		mov	r3, r2
 5237 29fc 07CB     		ldmia	r3!, {r0, r1, r2}
 5238 29fe 2060     		str	r0, [r4]	@ unaligned
 5239 2a00 6160     		str	r1, [r4, #4]	@ unaligned
 5240 2a02 A260     		str	r2, [r4, #8]	@ unaligned
 5241 2a04 1B88     		ldrh	r3, [r3]	@ unaligned
 5242 2a06 A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 5243              		.loc 1 747 0
 5244 2a08 25E0     		b	.L233
 5245              	.L234:
 749:..\src/command_processing.c ****                         break;
 5246              		.loc 1 749 0
 5247 2a0a 07F13803 		add	r3, r7, #56
 5248 2a0e 143B     		subs	r3, r3, #20
 5249 2a10 1846     		mov	r0, r3
 5250 2a12 FFF7FEFF 		bl	strlen
 5251 2a16 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 124


 5252 2a18 1A46     		mov	r2, r3
 5253 2a1a 07F13803 		add	r3, r7, #56
 5254 2a1e 143B     		subs	r3, r3, #20
 5255 2a20 1344     		add	r3, r3, r2
 5256 2a22 5E4A     		ldr	r2, .L275+28
 5257 2a24 1068     		ldr	r0, [r2]	@ unaligned
 5258 2a26 1860     		str	r0, [r3]	@ unaligned
 5259 2a28 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5260 2a2a 9279     		ldrb	r2, [r2, #6]
 5261 2a2c 9980     		strh	r1, [r3, #4]	@ unaligned
 5262 2a2e 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 5263              		.loc 1 750 0
 5264 2a30 11E0     		b	.L233
 5265              	.L235:
 752:..\src/command_processing.c ****                         break;
 5266              		.loc 1 752 0
 5267 2a32 07F13803 		add	r3, r7, #56
 5268 2a36 143B     		subs	r3, r3, #20
 5269 2a38 1846     		mov	r0, r3
 5270 2a3a FFF7FEFF 		bl	strlen
 5271 2a3e 0346     		mov	r3, r0
 5272 2a40 1A46     		mov	r2, r3
 5273 2a42 07F13803 		add	r3, r7, #56
 5274 2a46 143B     		subs	r3, r3, #20
 5275 2a48 1344     		add	r3, r3, r2
 5276 2a4a 554A     		ldr	r2, .L275+32
 5277 2a4c 1068     		ldr	r0, [r2]	@ unaligned
 5278 2a4e 1860     		str	r0, [r3]	@ unaligned
 5279 2a50 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5280 2a52 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                     }   
 5281              		.loc 1 753 0
 5282 2a54 00BF     		nop
 5283              	.L233:
 5284              		.loc 1 755 0
 5285 2a56 79E0     		b	.L186
 5286              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 5287              		.loc 1 757 0
 5288 2a58 07F5A253 		add	r3, r7, #5184
 5289 2a5c 03F10803 		add	r3, r3, #8
 5290 2a60 1B68     		ldr	r3, [r3]
 5291 2a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5292 2a64 002B     		cmp	r3, #0
 5293 2a66 02D0     		beq	.L238
 5294 2a68 012B     		cmp	r3, #1
 5295 2a6a 17D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 125


 5296              		.loc 1 765 0
 5297 2a6c 6EE0     		b	.L186
 5298              	.L238:
 759:..\src/command_processing.c ****                         break;
 5299              		.loc 1 759 0
 5300 2a6e 07F13803 		add	r3, r7, #56
 5301 2a72 143B     		subs	r3, r3, #20
 5302 2a74 1846     		mov	r0, r3
 5303 2a76 FFF7FEFF 		bl	strlen
 5304 2a7a 0346     		mov	r3, r0
 5305 2a7c 1A46     		mov	r2, r3
 5306 2a7e 07F13803 		add	r3, r7, #56
 5307 2a82 143B     		subs	r3, r3, #20
 5308 2a84 1344     		add	r3, r3, r2
 5309 2a86 474A     		ldr	r2, .L275+36
 5310 2a88 1D46     		mov	r5, r3
 5311 2a8a 1446     		mov	r4, r2
 5312 2a8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5313 2a8e 2860     		str	r0, [r5]	@ unaligned
 5314 2a90 6960     		str	r1, [r5, #4]	@ unaligned
 5315 2a92 AA60     		str	r2, [r5, #8]	@ unaligned
 5316 2a94 EB60     		str	r3, [r5, #12]	@ unaligned
 5317 2a96 2068     		ldr	r0, [r4]	@ unaligned
 5318 2a98 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 5319              		.loc 1 760 0
 5320 2a9a 18E0     		b	.L237
 5321              	.L239:
 762:..\src/command_processing.c ****                         break;
 5322              		.loc 1 762 0
 5323 2a9c 07F13803 		add	r3, r7, #56
 5324 2aa0 143B     		subs	r3, r3, #20
 5325 2aa2 1846     		mov	r0, r3
 5326 2aa4 FFF7FEFF 		bl	strlen
 5327 2aa8 0346     		mov	r3, r0
 5328 2aaa 1A46     		mov	r2, r3
 5329 2aac 07F13803 		add	r3, r7, #56
 5330 2ab0 143B     		subs	r3, r3, #20
 5331 2ab2 1344     		add	r3, r3, r2
 5332 2ab4 3C4A     		ldr	r2, .L275+40
 5333 2ab6 1D46     		mov	r5, r3
 5334 2ab8 1446     		mov	r4, r2
 5335 2aba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5336 2abc 2860     		str	r0, [r5]	@ unaligned
 5337 2abe 6960     		str	r1, [r5, #4]	@ unaligned
 5338 2ac0 AA60     		str	r2, [r5, #8]	@ unaligned
 5339 2ac2 EB60     		str	r3, [r5, #12]	@ unaligned
 5340 2ac4 2068     		ldr	r0, [r4]	@ unaligned
 5341 2ac6 2861     		str	r0, [r5, #16]	@ unaligned
 5342 2ac8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5343 2aca AB82     		strh	r3, [r5, #20]	@ unaligned
 763:..\src/command_processing.c ****                     }
 5344              		.loc 1 763 0
 5345 2acc 00BF     		nop
 5346              	.L237:
 5347              		.loc 1 765 0
 5348 2ace 3DE0     		b	.L186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 126


 5349              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 5350              		.loc 1 767 0
 5351 2ad0 07F5A253 		add	r3, r7, #5184
 5352 2ad4 03F10803 		add	r3, r3, #8
 5353 2ad8 1B68     		ldr	r3, [r3]
 5354 2ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5355 2adc 002B     		cmp	r3, #0
 5356 2ade 02D0     		beq	.L241
 5357 2ae0 012B     		cmp	r3, #1
 5358 2ae2 16D0     		beq	.L242
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                     }
 775:..\src/command_processing.c ****                     break;
 5359              		.loc 1 775 0
 5360 2ae4 32E0     		b	.L186
 5361              	.L241:
 769:..\src/command_processing.c ****                         break;
 5362              		.loc 1 769 0
 5363 2ae6 07F13803 		add	r3, r7, #56
 5364 2aea 143B     		subs	r3, r3, #20
 5365 2aec 1846     		mov	r0, r3
 5366 2aee FFF7FEFF 		bl	strlen
 5367 2af2 0346     		mov	r3, r0
 5368 2af4 1A46     		mov	r2, r3
 5369 2af6 07F13803 		add	r3, r7, #56
 5370 2afa 143B     		subs	r3, r3, #20
 5371 2afc 1344     		add	r3, r3, r2
 5372 2afe 2B4A     		ldr	r2, .L275+44
 5373 2b00 1C46     		mov	r4, r3
 5374 2b02 1346     		mov	r3, r2
 5375 2b04 07CB     		ldmia	r3!, {r0, r1, r2}
 5376 2b06 2060     		str	r0, [r4]	@ unaligned
 5377 2b08 6160     		str	r1, [r4, #4]	@ unaligned
 5378 2b0a A260     		str	r2, [r4, #8]	@ unaligned
 5379 2b0c 1B88     		ldrh	r3, [r3]	@ unaligned
 5380 2b0e A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 5381              		.loc 1 770 0
 5382 2b10 16E0     		b	.L240
 5383              	.L242:
 772:..\src/command_processing.c ****                         break;
 5384              		.loc 1 772 0
 5385 2b12 07F13803 		add	r3, r7, #56
 5386 2b16 143B     		subs	r3, r3, #20
 5387 2b18 1846     		mov	r0, r3
 5388 2b1a FFF7FEFF 		bl	strlen
 5389 2b1e 0346     		mov	r3, r0
 5390 2b20 1A46     		mov	r2, r3
 5391 2b22 07F13803 		add	r3, r7, #56
 5392 2b26 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 127


 5393 2b28 1344     		add	r3, r3, r2
 5394 2b2a 214A     		ldr	r2, .L275+48
 5395 2b2c 1D46     		mov	r5, r3
 5396 2b2e 1446     		mov	r4, r2
 5397 2b30 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5398 2b32 2860     		str	r0, [r5]	@ unaligned
 5399 2b34 6960     		str	r1, [r5, #4]	@ unaligned
 5400 2b36 AA60     		str	r2, [r5, #8]	@ unaligned
 5401 2b38 EB60     		str	r3, [r5, #12]	@ unaligned
 5402 2b3a 2388     		ldrh	r3, [r4]	@ unaligned
 5403 2b3c 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                     }
 5404              		.loc 1 773 0
 5405 2b3e 00BF     		nop
 5406              	.L240:
 5407              		.loc 1 775 0
 5408 2b40 04E0     		b	.L186
 5409              	.L254:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 5410              		.loc 1 667 0
 5411 2b42 00BF     		nop
 5412 2b44 02E0     		b	.L186
 5413              	.L255:
 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5414              		.loc 1 683 0
 5415 2b46 00BF     		nop
 5416 2b48 00E0     		b	.L186
 5417              	.L256:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5418              		.loc 1 727 0
 5419 2b4a 00BF     		nop
 5420              	.L186:
 776:..\src/command_processing.c ****             }
 777:..\src/command_processing.c ****             //Recomputes string lenght
 778:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5421              		.loc 1 778 0
 5422 2b4c 07F13803 		add	r3, r7, #56
 5423 2b50 143B     		subs	r3, r3, #20
 5424 2b52 1846     		mov	r0, r3
 5425 2b54 FFF7FEFF 		bl	strlen
 5426 2b58 0346     		mov	r3, r0
 5427 2b5a DBB2     		uxtb	r3, r3
 5428 2b5c 0133     		adds	r3, r3, #1
 5429 2b5e 07F5A252 		add	r2, r7, #5184
 5430 2b62 02F11202 		add	r2, r2, #18
 5431 2b66 1370     		strb	r3, [r2]
 5432              	.L185:
 779:..\src/command_processing.c ****         }
 780:..\src/command_processing.c **** 
 781:..\src/command_processing.c ****         // Add parameter string to packet
 782:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5433              		.loc 1 782 0
 5434 2b68 07F5A253 		add	r3, r7, #5184
 5435 2b6c 03F11203 		add	r3, r3, #18
 5436 2b70 1B78     		ldrb	r3, [r3]
 5437 2b72 07F5A252 		add	r2, r7, #5184
 5438 2b76 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 128


 5439 2b7a 1370     		strb	r3, [r2]
 5440 2b7c 5FE0     		b	.L243
 5441              	.L276:
 5442 2b7e 00BF     		.align	2
 5443              	.L275:
 5444 2b80 E8000000 		.word	.LC94
 5445 2b84 F8000000 		.word	.LC95
 5446 2b88 0C010000 		.word	.LC96
 5447 2b8c E0000000 		.word	.LC93
 5448 2b90 1C010000 		.word	.LC97
 5449 2b94 24010000 		.word	.LC98
 5450 2b98 2C010000 		.word	.LC99
 5451 2b9c 3C010000 		.word	.LC100
 5452 2ba0 44010000 		.word	.LC101
 5453 2ba4 4C010000 		.word	.LC102
 5454 2ba8 64010000 		.word	.LC103
 5455 2bac 7C010000 		.word	.LC104
 5456 2bb0 8C010000 		.word	.LC105
 5457              	.L244:
 783:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5458              		.loc 1 783 0 discriminator 3
 5459 2bb4 07F5A253 		add	r3, r7, #5184
 5460 2bb8 03F11503 		add	r3, r3, #21
 5461 2bbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5462 2bbe 3222     		movs	r2, #50
 5463 2bc0 02FB03F3 		mul	r3, r2, r3
 5464 2bc4 1A1D     		adds	r2, r3, #4
 5465 2bc6 07F5A253 		add	r3, r7, #5184
 5466 2bca 03F11303 		add	r3, r3, #19
 5467 2bce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5468 2bd0 07F5A253 		add	r3, r7, #5184
 5469 2bd4 03F11503 		add	r3, r3, #21
 5470 2bd8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5471 2bda 07F11803 		add	r3, r7, #24
 5472 2bde 143B     		subs	r3, r3, #20
 5473 2be0 1B68     		ldr	r3, [r3]
 5474 2be2 0344     		add	r3, r3, r0
 5475 2be4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5476 2be6 03FB01F3 		mul	r3, r3, r1
 5477 2bea 1A44     		add	r2, r2, r3
 5478 2bec 07F5A253 		add	r3, r7, #5184
 5479 2bf0 03F11203 		add	r3, r3, #18
 5480 2bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5481 2bf6 1A44     		add	r2, r2, r3
 5482 2bf8 07F5A253 		add	r3, r7, #5184
 5483 2bfc 03F11703 		add	r3, r3, #23
 5484 2c00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5485 2c02 D21A     		subs	r2, r2, r3
 5486 2c04 07F5A253 		add	r3, r7, #5184
 5487 2c08 03F11203 		add	r3, r3, #18
 5488 2c0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5489 2c0e 07F5A253 		add	r3, r7, #5184
 5490 2c12 03F11703 		add	r3, r3, #23
 5491 2c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5492 2c18 C91A     		subs	r1, r1, r3
 5493 2c1a 07F13803 		add	r3, r7, #56
 5494 2c1e 143B     		subs	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 129


 5495 2c20 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5496 2c22 07F15803 		add	r3, r7, #88
 5497 2c26 9954     		strb	r1, [r3, r2]
 782:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5498              		.loc 1 782 0 discriminator 3
 5499 2c28 07F5A253 		add	r3, r7, #5184
 5500 2c2c 03F11703 		add	r3, r3, #23
 5501 2c30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5502 2c32 013B     		subs	r3, r3, #1
 5503 2c34 07F5A252 		add	r2, r7, #5184
 5504 2c38 02F11702 		add	r2, r2, #23
 5505 2c3c 1370     		strb	r3, [r2]
 5506              	.L243:
 782:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5507              		.loc 1 782 0 is_stmt 0 discriminator 1
 5508 2c3e 07F5A253 		add	r3, r7, #5184
 5509 2c42 03F11703 		add	r3, r3, #23
 5510 2c46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5511 2c48 002B     		cmp	r3, #0
 5512 2c4a B3D1     		bne	.L244
 784:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 785:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5513              		.loc 1 785 0 is_stmt 1
 5514 2c4c 07F5A253 		add	r3, r7, #5184
 5515 2c50 03F11503 		add	r3, r3, #21
 5516 2c54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5517 2c56 07F11803 		add	r3, r7, #24
 5518 2c5a 103B     		subs	r3, r3, #16
 5519 2c5c 1B68     		ldr	r3, [r3]
 5520 2c5e 1344     		add	r3, r3, r2
 5521 2c60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5522 2c62 002B     		cmp	r3, #0
 5523 2c64 3BD1     		bne	.L245
 786:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5524              		.loc 1 786 0
 5525 2c66 07F5A253 		add	r3, r7, #5184
 5526 2c6a 03F11503 		add	r3, r3, #21
 5527 2c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5528 2c70 3222     		movs	r2, #50
 5529 2c72 02FB03F3 		mul	r3, r2, r3
 5530 2c76 1A1D     		adds	r2, r3, #4
 5531 2c78 07F5A253 		add	r3, r7, #5184
 5532 2c7c 03F11303 		add	r3, r3, #19
 5533 2c80 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5534 2c82 07F5A253 		add	r3, r7, #5184
 5535 2c86 03F11503 		add	r3, r3, #21
 5536 2c8a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5537 2c8c 07F11803 		add	r3, r7, #24
 5538 2c90 143B     		subs	r3, r3, #20
 5539 2c92 1B68     		ldr	r3, [r3]
 5540 2c94 0344     		add	r3, r3, r0
 5541 2c96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5542 2c98 03FB01F3 		mul	r3, r3, r1
 5543 2c9c 1A44     		add	r2, r2, r3
 5544 2c9e 07F5A253 		add	r3, r7, #5184
 5545 2ca2 03F11203 		add	r3, r3, #18
 5546 2ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 130


 5547 2ca8 1344     		add	r3, r3, r2
 5548 2caa 07F5A252 		add	r2, r7, #5184
 5549 2cae 02F11402 		add	r2, r2, #20
 5550 2cb2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5551 2cb4 07F5A351 		add	r1, r7, #5216
 5552 2cb8 01F11001 		add	r1, r1, #16
 5553 2cbc 0968     		ldr	r1, [r1]
 5554 2cbe 0A44     		add	r2, r2, r1
 5555 2cc0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5556 2cc2 07F15802 		add	r2, r7, #88
 5557 2cc6 D154     		strb	r1, [r2, r3]
 787:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5558              		.loc 1 787 0
 5559 2cc8 07F5A253 		add	r3, r7, #5184
 5560 2ccc 03F11403 		add	r3, r3, #20
 5561 2cd0 1B78     		ldrb	r3, [r3]
 5562 2cd2 0133     		adds	r3, r3, #1
 5563 2cd4 07F5A252 		add	r2, r7, #5184
 5564 2cd8 02F11402 		add	r2, r2, #20
 5565 2cdc 1370     		strb	r3, [r2]
 5566              	.L245:
 788:..\src/command_processing.c ****         }      
 789:..\src/command_processing.c ****         
 790:..\src/command_processing.c ****         // Add struct index after an empty bit
 791:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 792:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5567              		.loc 1 792 0
 5568 2cde 07F5A253 		add	r3, r7, #5184
 5569 2ce2 03F11503 		add	r3, r3, #21
 5570 2ce6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5571 2ce8 07F11803 		add	r3, r7, #24
 5572 2cec 103B     		subs	r3, r3, #16
 5573 2cee 1B68     		ldr	r3, [r3]
 5574 2cf0 1344     		add	r3, r3, r2
 5575 2cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5576 2cf4 002B     		cmp	r3, #0
 5577 2cf6 31D1     		bne	.L246
 793:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5578              		.loc 1 793 0
 5579 2cf8 07F5A253 		add	r3, r7, #5184
 5580 2cfc 03F11503 		add	r3, r3, #21
 5581 2d00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5582 2d02 3222     		movs	r2, #50
 5583 2d04 02FB03F3 		mul	r3, r2, r3
 5584 2d08 1A1D     		adds	r2, r3, #4
 5585 2d0a 07F5A253 		add	r3, r7, #5184
 5586 2d0e 03F11303 		add	r3, r3, #19
 5587 2d12 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5588 2d14 07F5A253 		add	r3, r7, #5184
 5589 2d18 03F11503 		add	r3, r3, #21
 5590 2d1c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5591 2d1e 07F11803 		add	r3, r7, #24
 5592 2d22 143B     		subs	r3, r3, #20
 5593 2d24 1B68     		ldr	r3, [r3]
 5594 2d26 0344     		add	r3, r3, r0
 5595 2d28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5596 2d2a 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 131


 5597 2d2e 1A44     		add	r2, r2, r3
 5598 2d30 07F5A253 		add	r3, r7, #5184
 5599 2d34 03F11203 		add	r3, r3, #18
 5600 2d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5601 2d3a 1344     		add	r3, r3, r2
 5602 2d3c 9A1C     		adds	r2, r3, #2
 5603 2d3e 07F5A253 		add	r3, r7, #5184
 5604 2d42 03F11503 		add	r3, r3, #21
 5605 2d46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5606 2d48 07F11803 		add	r3, r7, #24
 5607 2d4c 183B     		subs	r3, r3, #24
 5608 2d4e 1B68     		ldr	r3, [r3]
 5609 2d50 0B44     		add	r3, r3, r1
 5610 2d52 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5611 2d54 07F15803 		add	r3, r7, #88
 5612 2d58 9954     		strb	r1, [r3, r2]
 5613 2d5a 30E0     		b	.L247
 5614              	.L246:
 794:..\src/command_processing.c ****         }
 795:..\src/command_processing.c ****         else {
 796:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5615              		.loc 1 796 0
 5616 2d5c 07F5A253 		add	r3, r7, #5184
 5617 2d60 03F11503 		add	r3, r3, #21
 5618 2d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5619 2d66 3222     		movs	r2, #50
 5620 2d68 02FB03F3 		mul	r3, r2, r3
 5621 2d6c 1A1D     		adds	r2, r3, #4
 5622 2d6e 07F5A253 		add	r3, r7, #5184
 5623 2d72 03F11303 		add	r3, r3, #19
 5624 2d76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5625 2d78 07F5A253 		add	r3, r7, #5184
 5626 2d7c 03F11503 		add	r3, r3, #21
 5627 2d80 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5628 2d82 07F11803 		add	r3, r7, #24
 5629 2d86 143B     		subs	r3, r3, #20
 5630 2d88 1B68     		ldr	r3, [r3]
 5631 2d8a 0344     		add	r3, r3, r0
 5632 2d8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5633 2d8e 03FB01F3 		mul	r3, r3, r1
 5634 2d92 1A44     		add	r2, r2, r3
 5635 2d94 07F5A253 		add	r3, r7, #5184
 5636 2d98 03F11203 		add	r3, r3, #18
 5637 2d9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5638 2d9e 1344     		add	r3, r3, r2
 5639 2da0 5A1C     		adds	r2, r3, #1
 5640 2da2 07F5A253 		add	r3, r7, #5184
 5641 2da6 03F11503 		add	r3, r3, #21
 5642 2daa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5643 2dac 07F11803 		add	r3, r7, #24
 5644 2db0 183B     		subs	r3, r3, #24
 5645 2db2 1B68     		ldr	r3, [r3]
 5646 2db4 0B44     		add	r3, r3, r1
 5647 2db6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5648 2db8 07F15803 		add	r3, r7, #88
 5649 2dbc 9954     		strb	r1, [r3, r2]
 5650              	.L247:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 132


 373:..\src/command_processing.c ****         
 5651              		.loc 1 373 0 discriminator 2
 5652 2dbe 07F5A253 		add	r3, r7, #5184
 5653 2dc2 03F11503 		add	r3, r3, #21
 5654 2dc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5655 2dc8 0133     		adds	r3, r3, #1
 5656 2dca 07F5A252 		add	r2, r7, #5184
 5657 2dce 02F11502 		add	r2, r2, #21
 5658 2dd2 1370     		strb	r3, [r2]
 5659              	.L63:
 373:..\src/command_processing.c ****         
 5660              		.loc 1 373 0 is_stmt 0 discriminator 1
 5661 2dd4 07F5A253 		add	r3, r7, #5184
 5662 2dd8 03F11503 		add	r3, r3, #21
 5663 2ddc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5664 2dde 462B     		cmp	r3, #70
 5665 2de0 7DF682A9 		bls	.L248
 797:..\src/command_processing.c ****         }
 798:..\src/command_processing.c ****     }
 799:..\src/command_processing.c **** 
 800:..\src/command_processing.c ****     // Add menu
 801:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 5666              		.loc 1 801 0 is_stmt 1
 5667 2de4 0023     		movs	r3, #0
 5668 2de6 07F5A252 		add	r2, r7, #5184
 5669 2dea 02F11602 		add	r2, r2, #22
 5670 2dee 1370     		strb	r3, [r2]
 5671 2df0 70E0     		b	.L249
 5672              	.L252:
 802:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5673              		.loc 1 802 0
 5674 2df2 07F5A253 		add	r3, r7, #5184
 5675 2df6 03F11603 		add	r3, r3, #22
 5676 2dfa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5677 2dfc 9B00     		lsls	r3, r3, #2
 5678 2dfe 07F5A352 		add	r2, r7, #5216
 5679 2e02 02F11C02 		add	r2, r2, #28
 5680 2e06 1268     		ldr	r2, [r2]
 5681 2e08 1344     		add	r3, r3, r2
 5682 2e0a 1B68     		ldr	r3, [r3]
 5683 2e0c 1846     		mov	r0, r3
 5684 2e0e FFF7FEFF 		bl	strlen
 5685 2e12 0346     		mov	r3, r0
 5686 2e14 07F5A252 		add	r2, r7, #5184
 5687 2e18 02F11202 		add	r2, r2, #18
 5688 2e1c 1370     		strb	r3, [r2]
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5689              		.loc 1 803 0
 5690 2e1e 07F5A253 		add	r3, r7, #5184
 5691 2e22 03F11203 		add	r3, r3, #18
 5692 2e26 1B78     		ldrb	r3, [r3]
 5693 2e28 07F5A252 		add	r2, r7, #5184
 5694 2e2c 02F11702 		add	r2, r2, #23
 5695 2e30 1370     		strb	r3, [r2]
 5696 2e32 3DE0     		b	.L250
 5697              	.L251:
 804:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 133


 5698              		.loc 1 804 0 discriminator 3
 5699 2e34 07F5A253 		add	r3, r7, #5184
 5700 2e38 03F11603 		add	r3, r3, #22
 5701 2e3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5702 2e3e 9622     		movs	r2, #150
 5703 2e40 02FB03F3 		mul	r3, r2, r3
 5704 2e44 03F55E62 		add	r2, r3, #3552
 5705 2e48 07F5A253 		add	r3, r7, #5184
 5706 2e4c 03F11203 		add	r3, r3, #18
 5707 2e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5708 2e52 1A44     		add	r2, r2, r3
 5709 2e54 07F5A253 		add	r3, r7, #5184
 5710 2e58 03F11703 		add	r3, r3, #23
 5711 2e5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5712 2e5e D31A     		subs	r3, r2, r3
 5713 2e60 07F5A252 		add	r2, r7, #5184
 5714 2e64 02F11602 		add	r2, r2, #22
 5715 2e68 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5716 2e6a 9200     		lsls	r2, r2, #2
 5717 2e6c 07F5A351 		add	r1, r7, #5216
 5718 2e70 01F11C01 		add	r1, r1, #28
 5719 2e74 0968     		ldr	r1, [r1]
 5720 2e76 0A44     		add	r2, r2, r1
 5721 2e78 1268     		ldr	r2, [r2]
 5722 2e7a 07F5A251 		add	r1, r7, #5184
 5723 2e7e 01F11201 		add	r1, r1, #18
 5724 2e82 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5725 2e84 07F5A251 		add	r1, r7, #5184
 5726 2e88 01F11701 		add	r1, r1, #23
 5727 2e8c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5728 2e8e 411A     		subs	r1, r0, r1
 5729 2e90 0A44     		add	r2, r2, r1
 5730 2e92 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5731 2e94 07F15802 		add	r2, r7, #88
 5732 2e98 D154     		strb	r1, [r2, r3]
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5733              		.loc 1 803 0 discriminator 3
 5734 2e9a 07F5A253 		add	r3, r7, #5184
 5735 2e9e 03F11703 		add	r3, r3, #23
 5736 2ea2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5737 2ea4 013B     		subs	r3, r3, #1
 5738 2ea6 07F5A252 		add	r2, r7, #5184
 5739 2eaa 02F11702 		add	r2, r2, #23
 5740 2eae 1370     		strb	r3, [r2]
 5741              	.L250:
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5742              		.loc 1 803 0 is_stmt 0 discriminator 1
 5743 2eb0 07F5A253 		add	r3, r7, #5184
 5744 2eb4 03F11703 		add	r3, r3, #23
 5745 2eb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5746 2eba 002B     		cmp	r3, #0
 5747 2ebc BAD1     		bne	.L251
 801:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5748              		.loc 1 801 0 is_stmt 1 discriminator 2
 5749 2ebe 07F5A253 		add	r3, r7, #5184
 5750 2ec2 03F11603 		add	r3, r3, #22
 5751 2ec6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 134


 5752 2ec8 0133     		adds	r3, r3, #1
 5753 2eca 07F5A252 		add	r2, r7, #5184
 5754 2ece 02F11602 		add	r2, r2, #22
 5755 2ed2 1370     		strb	r3, [r2]
 5756              	.L249:
 801:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5757              		.loc 1 801 0 is_stmt 0 discriminator 1
 5758 2ed4 07F5A253 		add	r3, r7, #5184
 5759 2ed8 03F11603 		add	r3, r3, #22
 5760 2edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5761 2ede 092B     		cmp	r3, #9
 5762 2ee0 87D9     		bls	.L252
 805:..\src/command_processing.c ****     }
 806:..\src/command_processing.c ****     
 807:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 5763              		.loc 1 807 0 is_stmt 1
 5764 2ee2 07F5A253 		add	r3, r7, #5184
 5765 2ee6 03F11003 		add	r3, r3, #16
 5766 2eea 1B88     		ldrh	r3, [r3]
 5767 2eec 5C1E     		subs	r4, r3, #1
 5768 2eee 07F5A253 		add	r3, r7, #5184
 5769 2ef2 03F11003 		add	r3, r3, #16
 5770 2ef6 1B88     		ldrh	r3, [r3]	@ movhi
 5771 2ef8 DBB2     		uxtb	r3, r3
 5772 2efa 013B     		subs	r3, r3, #1
 5773 2efc DAB2     		uxtb	r2, r3
 5774 2efe 07F15803 		add	r3, r7, #88
 5775 2f02 1146     		mov	r1, r2
 5776 2f04 1846     		mov	r0, r3
 5777 2f06 FFF7FEFF 		bl	LCRChecksum
 5778 2f0a 0346     		mov	r3, r0
 5779 2f0c 1A46     		mov	r2, r3
 5780 2f0e 07F15803 		add	r3, r7, #88
 5781 2f12 1A55     		strb	r2, [r3, r4]
 808:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 5782              		.loc 1 808 0
 5783 2f14 07F5A253 		add	r3, r7, #5184
 5784 2f18 03F11003 		add	r3, r3, #16
 5785 2f1c 1A88     		ldrh	r2, [r3]
 5786 2f1e 07F15803 		add	r3, r7, #88
 5787 2f22 1146     		mov	r1, r2
 5788 2f24 1846     		mov	r0, r3
 5789 2f26 FFF7FEFF 		bl	commWrite
 809:..\src/command_processing.c **** }
 5790              		.loc 1 809 0
 5791 2f2a 00BF     		nop
 5792 2f2c 07F5A257 		add	r7, r7, #5184
 5793 2f30 1C37     		adds	r7, r7, #28
 5794              		.cfi_def_cfa_offset 20
 5795 2f32 BD46     		mov	sp, r7
 5796              		.cfi_def_cfa_register 13
 5797              		@ sp needed
 5798 2f34 F0BD     		pop	{r4, r5, r6, r7, pc}
 5799              		.cfi_endproc
 5800              	.LFE67:
 5801              		.size	get_param_list, .-get_param_list
 5802 2f36 00BF     		.section	.rodata
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 135


 5803 019f 00       		.align	2
 5804              	.LC107:
 5805 01a0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 5805      204E6F6E 
 5805      650A3120 
 5805      2D3E204C 
 5805      6F772028 
 5806 01d0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 5806      74657220 
 5806      72656164 
 5806      290A3220 
 5806      2D3E2048 
 5807 0200 62697420 		.ascii	"bit register read)\012\000"
 5807      72656769 
 5807      73746572 
 5807      20726561 
 5807      64290A00 
 5808              		.align	2
 5809              	.LC108:
 5810 0214 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 5810      20557362 
 5810      0A31202D 
 5810      3E204861 
 5810      6E646C65 
 5811 023f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 5811      20454D47 
 5811      20496E74 
 5811      65677261 
 5811      6C0A3420 
 5812 026c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 5812      616E6365 
 5812      640A3620 
 5812      2D3E2045 
 5812      4D472070 
 5813              		.align	2
 5814              	.LC109:
 5815 0290 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 5815      20506F73 
 5815      6974696F 
 5815      6E0A3120 
 5815      2D3E2050 
 5816 02ba 6F736974 		.ascii	"osition and Current\012\000"
 5816      696F6E20 
 5816      616E6420 
 5816      43757272 
 5816      656E740A 
 5817 02cf 00       		.align	2
 5818              	.LC110:
 5819 02d0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 5819      20446561 
 5819      63746976 
 5819      61746520 
 5819      5B4E4F5D 
 5820 02fa 0000     		.align	2
 5821              	.LC111:
 5822 02fc 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 5822      20526967 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 136


 5822      68740A31 
 5822      202D3E20 
 5822      4C656674 
 5823 0312 0000     		.align	2
 5824              	.LC112:
 5825 0314 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 5825      204F4646 
 5825      0A31202D 
 5825      3E204F4E 
 5825      0A546865 
 5826 033b 00       		.align	2
 5827              	.LC113:
 5828 033c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 5828      204E6F6E 
 5828      650A3120 
 5828      2D3E2053 
 5828      442F5254 
 5829 0369 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 5829      0A33202D 
 5829      3E204F74 
 5829      68657220 
 5829      5B4E2F41 
 5830 0394 00       		.ascii	"\000"
 5831 0395 000000   		.align	2
 5832              	.LC114:
 5833 0398 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 5833      2047656E 
 5833      65726963 
 5833      20757365 
 5833      720A3120 
 5834 03c2 20626F61 		.ascii	" board will reset\012\000"
 5834      72642077 
 5834      696C6C20 
 5834      72657365 
 5834      740A00
 5835 03d5 000000   		.align	2
 5836              	.LC115:
 5837 03d8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 5837      204D4333 
 5837      33383837 
 5837      20285374 
 5837      616E6461 
 5838 0408 290A5468 		.ascii	")\012The board will reset\012\000"
 5838      6520626F 
 5838      61726420 
 5838      77696C6C 
 5838      20726573 
 5839              		.align	2
 5840              	.LC116:
 5841 0420 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\012The b"
 5841      20534F46 
 5841      5448414E 
 5841      44205052 
 5841      4F0A3120 
 5842 044d 6F617264 		.ascii	"oard will reset\012\000"
 5842      2077696C 
 5842      6C207265 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 137


 5842      7365740A 
 5842      00
 5843 045e 0000     		.align	2
 5844              	.LC0:
 5845 0460 02       		.byte	2
 5846 0461 07       		.byte	7
 5847 0462 07       		.byte	7
 5848 0463 00       		.byte	0
 5849 0464 00       		.byte	0
 5850 0465 00       		.byte	0
 5851 0466 02       		.byte	2
 5852 0467 03       		.byte	3
 5853 0468 07       		.byte	7
 5854 0469 00       		.byte	0
 5855 046a 05       		.byte	5
 5856 046b 05       		.byte	5
 5857 046c 03       		.byte	3
 5858 046d 04       		.byte	4
 5859 046e 00       		.byte	0
 5860 046f 06       		.byte	6
 5861 0470 02       		.byte	2
 5862 0471 00       		.byte	0
 5863 0472 01       		.byte	1
 5864 0473 00       		.byte	0
 5865 0474 07       		.byte	7
 5866 0475 02       		.byte	2
 5867 0476 05       		.byte	5
 5868 0477 05       		.byte	5
 5869 0478 05       		.byte	5
 5870 0479 00       		.byte	0
 5871 047a 00       		.byte	0
 5872 047b 00       		.byte	0
 5873 047c 00       		.byte	0
 5874 047d 00       		.byte	0
 5875 047e 00       		.byte	0
 5876 047f 02       		.byte	2
 5877 0480 00       		.byte	0
 5878 0481 02       		.byte	2
 5879 0482 00       		.byte	0
 5880 0483 09       		.byte	9
 5881 0484 02       		.byte	2
 5882 0485 00       		.byte	0
 5883 0486 02       		.byte	2
 5884 0487 00       		.byte	0
 5885 0488 02       		.byte	2
 5886 0489 01       		.byte	1
 5887 048a 00       		.byte	0
 5888 048b 07       		.byte	7
 5889 048c 07       		.byte	7
 5890 048d 00       		.byte	0
 5891 048e 00       		.byte	0
 5892 048f 00       		.byte	0
 5893 0490 02       		.byte	2
 5894 0491 03       		.byte	3
 5895 0492 07       		.byte	7
 5896 0493 00       		.byte	0
 5897 0494 05       		.byte	5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 138


 5898 0495 05       		.byte	5
 5899 0496 03       		.byte	3
 5900 0497 00       		.byte	0
 5901 0498 01       		.byte	1
 5902 0499 00       		.byte	0
 5903 049a 07       		.byte	7
 5904 049b 02       		.byte	2
 5905 049c 00       		.byte	0
 5906 049d 02       		.byte	2
 5907 049e 00       		.byte	0
 5908 049f 02       		.byte	2
 5909 04a0 01       		.byte	1
 5910 04a1 02       		.byte	2
 5911 04a2 02       		.byte	2
 5912 04a3 00       		.byte	0
 5913 04a4 02       		.byte	2
 5914 04a5 02       		.byte	2
 5915 04a6 00       		.byte	0
 5916 04a7 00       		.align	2
 5917              	.LC1:
 5918 04a8 31202D20 		.ascii	"1 - Device ID:\000"
 5918      44657669 
 5918      63652049 
 5918      443A00
 5919 04b7 00       		.align	2
 5920              	.LC2:
 5921 04b8 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5921      506F7369 
 5921      74696F6E 
 5921      20504944 
 5921      205B502C 
 5922              		.align	2
 5923              	.LC3:
 5924 04d4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5924      43757272 
 5924      656E7420 
 5924      50494420 
 5924      5B502C20 
 5925 04ef 00       		.align	2
 5926              	.LC4:
 5927 04f0 34202D20 		.ascii	"4 - Startup Activation:\000"
 5927      53746172 
 5927      74757020 
 5927      41637469 
 5927      76617469 
 5928              		.align	2
 5929              	.LC5:
 5930 0508 35202D20 		.ascii	"5 - Input mode:\000"
 5930      496E7075 
 5930      74206D6F 
 5930      64653A00 
 5931              		.align	2
 5932              	.LC6:
 5933 0518 36202D20 		.ascii	"6 - Control mode:\000"
 5933      436F6E74 
 5933      726F6C20 
 5933      6D6F6465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 139


 5933      3A00
 5934 052a 0000     		.align	2
 5935              	.LC7:
 5936 052c 37202D20 		.ascii	"7 - Resolutions:\000"
 5936      5265736F 
 5936      6C757469 
 5936      6F6E733A 
 5936      00
 5937 053d 000000   		.align	2
 5938              	.LC8:
 5939 0540 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5939      4D656173 
 5939      7572656D 
 5939      656E7420 
 5939      4F666673 
 5940 0559 000000   		.align	2
 5941              	.LC9:
 5942 055c 39202D20 		.ascii	"9 - Multipliers:\000"
 5942      4D756C74 
 5942      69706C69 
 5942      6572733A 
 5942      00
 5943 056d 000000   		.align	2
 5944              	.LC10:
 5945 0570 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5945      20506F73 
 5945      2E206C69 
 5945      6D697420 
 5945      61637469 
 5946              		.align	2
 5947              	.LC11:
 5948 0588 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5948      20506F73 
 5948      2E206C69 
 5948      6D697473 
 5948      205B696E 
 5949 05a5 000000   		.align	2
 5950              	.LC12:
 5951 05a8 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5951      204D6178 
 5951      20737465 
 5951      7073205B 
 5951      6E65672C 
 5952 05c3 00       		.align	2
 5953              	.LC13:
 5954 05c4 3133202D 		.ascii	"13 - Current limit:\000"
 5954      20437572 
 5954      72656E74 
 5954      206C696D 
 5954      69743A00 
 5955              		.align	2
 5956              	.LC14:
 5957 05d8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5957      20454D47 
 5957      20746872 
 5957      6573686F 
 5957      6C64733A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 140


 5958 05ed 000000   		.align	2
 5959              	.LC15:
 5960 05f0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5960      20454D47 
 5960      2063616C 
 5960      69627261 
 5960      74696F6E 
 5961 0611 000000   		.align	2
 5962              	.LC16:
 5963 0614 3136202D 		.ascii	"16 - EMG max values:\000"
 5963      20454D47 
 5963      206D6178 
 5963      2076616C 
 5963      7565733A 
 5964 0629 000000   		.align	2
 5965              	.LC17:
 5966 062c 3137202D 		.ascii	"17 - EMG max speed:\000"
 5966      20454D47 
 5966      206D6178 
 5966      20737065 
 5966      65643A00 
 5967              		.align	2
 5968              	.LC18:
 5969 0640 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 5969      20416273 
 5969      6F6C7574 
 5969      6520656E 
 5969      636F6465 
 5970              		.align	2
 5971              	.LC19:
 5972 0660 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 5972      204D6F74 
 5972      6F722068 
 5972      616E646C 
 5972      65207261 
 5973 0679 000000   		.align	2
 5974              	.LC20:
 5975 067c 3230202D 		.ascii	"20 - PWM rescaling:\000"
 5975      2050574D 
 5975      20726573 
 5975      63616C69 
 5975      6E673A00 
 5976              		.align	2
 5977              	.LC21:
 5978 0690 3231202D 		.ascii	"21 - Current lookup:\000"
 5978      20437572 
 5978      72656E74 
 5978      206C6F6F 
 5978      6B75703A 
 5979 06a5 000000   		.align	2
 5980              	.LC22:
 5981 06a8 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 5981      20446174 
 5981      65206F66 
 5981      206D6169 
 5981      6E74656E 
 5982 06ca 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 141


 5983              	.LC23:
 5984 06cc 3233202D 		.ascii	"23 - Rest position:\000"
 5984      20526573 
 5984      7420706F 
 5984      73697469 
 5984      6F6E3A00 
 5985              		.align	2
 5986              	.LC24:
 5987 06e0 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 5987      20526573 
 5987      7420706F 
 5987      73697469 
 5987      6F6E2074 
 5988              		.align	2
 5989              	.LC25:
 5990 0704 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 5990      20526573 
 5990      74207665 
 5990      6C20636C 
 5990      6F737572 
 5991 0727 00       		.align	2
 5992              	.LC26:
 5993 0728 3236202D 		.ascii	"26 - Rest position enabled:\000"
 5993      20526573 
 5993      7420706F 
 5993      73697469 
 5993      6F6E2065 
 5994              		.align	2
 5995              	.LC27:
 5996 0744 3237202D 		.ascii	"27 - EMG inversion:\000"
 5996      20454D47 
 5996      20696E76 
 5996      65727369 
 5996      6F6E3A00 
 5997              		.align	2
 5998              	.LC28:
 5999 0758 3238202D 		.ascii	"28 - Hand side:\000"
 5999      2048616E 
 5999      64207369 
 5999      64653A00 
 6000              		.align	2
 6001              	.LC29:
 6002 0768 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6002      20456E61 
 6002      626C6520 
 6002      494D5573 
 6002      3A00
 6003 077a 0000     		.align	2
 6004              	.LC30:
 6005 077c 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6005      20526561 
 6005      64204578 
 6005      70616E73 
 6005      696F6E20 
 6006 0796 0000     		.align	2
 6007              	.LC31:
 6008 0798 3331202D 		.ascii	"31 - Reset counters:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 142


 6008      20526573 
 6008      65742063 
 6008      6F756E74 
 6008      6572733A 
 6009 07ad 000000   		.align	2
 6010              	.LC32:
 6011 07b0 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6011      204C6173 
 6011      74206368 
 6011      65636B65 
 6011      64205469 
 6012 07d6 0000     		.align	2
 6013              	.LC33:
 6014 07d8 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6014      20535049 
 6014      20726561 
 6014      64206465 
 6014      6C617920 
 6015 07f3 00       		.align	2
 6016              	.LC34:
 6017 07f4 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6017      204F6E20 
 6017      626F6172 
 6017      6420494D 
 6017      5520636F 
 6018 0819 000000   		.align	2
 6019              	.LC35:
 6020 081c 3335202D 		.ascii	"35 - User ID:\000"
 6020      20557365 
 6020      72204944 
 6020      3A00
 6021 082a 0000     		.align	2
 6022              	.LC36:
 6023 082c 3336202D 		.ascii	"36 - User code:\000"
 6023      20557365 
 6023      7220636F 
 6023      64653A00 
 6024              		.align	2
 6025              	.LC37:
 6026 083c 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6026      20417373 
 6026      6F636961 
 6026      74656420 
 6026      656E636F 
 6027 085a 0000     		.align	2
 6028              	.LC38:
 6029 085c 3338202D 		.ascii	"38 - Driver type:\000"
 6029      20447269 
 6029      76657220 
 6029      74797065 
 6029      3A00
 6030 086e 0000     		.align	2
 6031              	.LC39:
 6032 0870 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6032      2050574D 
 6032      20726174 
 6032      65206C69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 143


 6032      6D697465 
 6033 0887 00       		.align	2
 6034              	.LC40:
 6035 0888 3430202D 		.ascii	"40 - Not reversible:\000"
 6035      204E6F74 
 6035      20726576 
 6035      65727369 
 6035      626C653A 
 6036 089d 000000   		.align	2
 6037              	.LC41:
 6038 08a0 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6038      20456E63 
 6038      20696478 
 6038      20757365 
 6038      6420666F 
 6039 08bf 00       		.align	2
 6040              	.LC42:
 6041 08c0 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6041      20476561 
 6041      72207061 
 6041      72616D73 
 6041      5B4E312C 
 6042 08de 0000     		.align	2
 6043              	.LC43:
 6044 08e0 3433202D 		.ascii	"43 - Use second motor:\000"
 6044      20557365 
 6044      20736563 
 6044      6F6E6420 
 6044      6D6F746F 
 6045 08f7 00       		.align	2
 6046              	.LC44:
 6047 08f8 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6047      20506F73 
 6047      6974696F 
 6047      6E205049 
 6047      44205B50 
 6048 0915 000000   		.align	2
 6049              	.LC45:
 6050 0918 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6050      20437572 
 6050      72656E74 
 6050      20504944 
 6050      205B502C 
 6051              		.align	2
 6052              	.LC46:
 6053 0934 3436202D 		.ascii	"46 - Startup Activation:\000"
 6053      20537461 
 6053      72747570 
 6053      20416374 
 6053      69766174 
 6054 094d 000000   		.align	2
 6055              	.LC47:
 6056 0950 3437202D 		.ascii	"47 - Input mode:\000"
 6056      20496E70 
 6056      7574206D 
 6056      6F64653A 
 6056      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 144


 6057 0961 000000   		.align	2
 6058              	.LC48:
 6059 0964 3438202D 		.ascii	"48 - Control mode:\000"
 6059      20436F6E 
 6059      74726F6C 
 6059      206D6F64 
 6059      653A00
 6060 0977 00       		.align	2
 6061              	.LC49:
 6062 0978 3439202D 		.ascii	"49 - Resolutions:\000"
 6062      20526573 
 6062      6F6C7574 
 6062      696F6E73 
 6062      3A00
 6063 098a 0000     		.align	2
 6064              	.LC50:
 6065 098c 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6065      204D6561 
 6065      73757265 
 6065      6D656E74 
 6065      204F6666 
 6066 09a6 0000     		.align	2
 6067              	.LC51:
 6068 09a8 3531202D 		.ascii	"51 - Multipliers:\000"
 6068      204D756C 
 6068      7469706C 
 6068      69657273 
 6068      3A00
 6069 09ba 0000     		.align	2
 6070              	.LC52:
 6071 09bc 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6071      20506F73 
 6071      2E206C69 
 6071      6D697420 
 6071      61637469 
 6072              		.align	2
 6073              	.LC53:
 6074 09d4 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6074      20506F73 
 6074      2E206C69 
 6074      6D697473 
 6074      205B696E 
 6075 09f1 000000   		.align	2
 6076              	.LC54:
 6077 09f4 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6077      204D6178 
 6077      20737465 
 6077      7073205B 
 6077      6E65672C 
 6078 0a0f 00       		.align	2
 6079              	.LC55:
 6080 0a10 3535202D 		.ascii	"55 - Current limit:\000"
 6080      20437572 
 6080      72656E74 
 6080      206C696D 
 6080      69743A00 
 6081              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 145


 6082              	.LC56:
 6083 0a24 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6083      20416273 
 6083      6F6C7574 
 6083      6520656E 
 6083      636F6465 
 6084              		.align	2
 6085              	.LC57:
 6086 0a44 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6086      204D6F74 
 6086      6F722068 
 6086      616E646C 
 6086      65207261 
 6087 0a5d 000000   		.align	2
 6088              	.LC58:
 6089 0a60 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6089      2050574D 
 6089      20726573 
 6089      63616C69 
 6089      6E673A00 
 6090              		.align	2
 6091              	.LC59:
 6092 0a74 3539202D 		.ascii	"59 - Current lookup:\000"
 6092      20437572 
 6092      72656E74 
 6092      206C6F6F 
 6092      6B75703A 
 6093 0a89 000000   		.align	2
 6094              	.LC60:
 6095 0a8c 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6095      20417373 
 6095      6F636961 
 6095      74656420 
 6095      656E636F 
 6096 0aaa 0000     		.align	2
 6097              	.LC61:
 6098 0aac 3631202D 		.ascii	"61 - Driver type:\000"
 6098      20447269 
 6098      76657220 
 6098      74797065 
 6098      3A00
 6099 0abe 0000     		.align	2
 6100              	.LC62:
 6101 0ac0 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6101      2050574D 
 6101      20726174 
 6101      65206C69 
 6101      6D697465 
 6102 0ad7 00       		.align	2
 6103              	.LC63:
 6104 0ad8 3633202D 		.ascii	"63 - Not reversible:\000"
 6104      204E6F74 
 6104      20726576 
 6104      65727369 
 6104      626C653A 
 6105 0aed 000000   		.align	2
 6106              	.LC64:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 146


 6107 0af0 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6107      20456E63 
 6107      20696478 
 6107      20757365 
 6107      6420666F 
 6108 0b0f 00       		.align	2
 6109              	.LC65:
 6110 0b10 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6110      20476561 
 6110      72207061 
 6110      72616D73 
 6110      5B4E312C 
 6111 0b2e 0000     		.align	2
 6112              	.LC66:
 6113 0b30 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6113      20526561 
 6113      6420656E 
 6113      63207261 
 6113      77206C69 
 6114 0b4a 0000     		.align	2
 6115              	.LC67:
 6116 0b4c 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6116      20526561 
 6116      6420656E 
 6116      63207261 
 6116      77206C69 
 6117 0b66 0000     		.align	2
 6118              	.LC68:
 6119 0b68 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6119      20526561 
 6119      64206164 
 6119      64697469 
 6119      6F6E616C 
 6120 0b87 00       		.align	2
 6121              	.LC69:
 6122 0b88 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6122      20414443 
 6122      20636861 
 6122      6E6E656C 
 6122      205B312D 
 6123              		.align	2
 6124              	.LC70:
 6125 0ba0 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6125      20414443 
 6125      20636861 
 6125      6E6E656C 
 6125      205B372D 
 6126 0bb9 000000   		.align	2
 6127              	.LC71:
 6128 0bbc 3731202D 		.ascii	"71 - Device type:\000"
 6128      20446576 
 6128      69636520 
 6128      74797065 
 6128      3A00
 6129 0bce 0000     		.align	2
 6130              	.LC106:
 6131 0bd0 A8040000 		.word	.LC1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 147


 6132 0bd4 B8040000 		.word	.LC2
 6133 0bd8 D4040000 		.word	.LC3
 6134 0bdc F0040000 		.word	.LC4
 6135 0be0 08050000 		.word	.LC5
 6136 0be4 18050000 		.word	.LC6
 6137 0be8 2C050000 		.word	.LC7
 6138 0bec 40050000 		.word	.LC8
 6139 0bf0 5C050000 		.word	.LC9
 6140 0bf4 70050000 		.word	.LC10
 6141 0bf8 88050000 		.word	.LC11
 6142 0bfc A8050000 		.word	.LC12
 6143 0c00 C4050000 		.word	.LC13
 6144 0c04 D8050000 		.word	.LC14
 6145 0c08 F0050000 		.word	.LC15
 6146 0c0c 14060000 		.word	.LC16
 6147 0c10 2C060000 		.word	.LC17
 6148 0c14 40060000 		.word	.LC18
 6149 0c18 60060000 		.word	.LC19
 6150 0c1c 7C060000 		.word	.LC20
 6151 0c20 90060000 		.word	.LC21
 6152 0c24 A8060000 		.word	.LC22
 6153 0c28 CC060000 		.word	.LC23
 6154 0c2c E0060000 		.word	.LC24
 6155 0c30 04070000 		.word	.LC25
 6156 0c34 28070000 		.word	.LC26
 6157 0c38 44070000 		.word	.LC27
 6158 0c3c 58070000 		.word	.LC28
 6159 0c40 68070000 		.word	.LC29
 6160 0c44 7C070000 		.word	.LC30
 6161 0c48 98070000 		.word	.LC31
 6162 0c4c B0070000 		.word	.LC32
 6163 0c50 D8070000 		.word	.LC33
 6164 0c54 F4070000 		.word	.LC34
 6165 0c58 1C080000 		.word	.LC35
 6166 0c5c 2C080000 		.word	.LC36
 6167 0c60 3C080000 		.word	.LC37
 6168 0c64 5C080000 		.word	.LC38
 6169 0c68 70080000 		.word	.LC39
 6170 0c6c 88080000 		.word	.LC40
 6171 0c70 A0080000 		.word	.LC41
 6172 0c74 C0080000 		.word	.LC42
 6173 0c78 E0080000 		.word	.LC43
 6174 0c7c F8080000 		.word	.LC44
 6175 0c80 18090000 		.word	.LC45
 6176 0c84 34090000 		.word	.LC46
 6177 0c88 50090000 		.word	.LC47
 6178 0c8c 64090000 		.word	.LC48
 6179 0c90 78090000 		.word	.LC49
 6180 0c94 8C090000 		.word	.LC50
 6181 0c98 A8090000 		.word	.LC51
 6182 0c9c BC090000 		.word	.LC52
 6183 0ca0 D4090000 		.word	.LC53
 6184 0ca4 F4090000 		.word	.LC54
 6185 0ca8 100A0000 		.word	.LC55
 6186 0cac 240A0000 		.word	.LC56
 6187 0cb0 440A0000 		.word	.LC57
 6188 0cb4 600A0000 		.word	.LC58
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 148


 6189 0cb8 740A0000 		.word	.LC59
 6190 0cbc 8C0A0000 		.word	.LC60
 6191 0cc0 AC0A0000 		.word	.LC61
 6192 0cc4 C00A0000 		.word	.LC62
 6193 0cc8 D80A0000 		.word	.LC63
 6194 0ccc F00A0000 		.word	.LC64
 6195 0cd0 100B0000 		.word	.LC65
 6196 0cd4 300B0000 		.word	.LC66
 6197 0cd8 4C0B0000 		.word	.LC67
 6198 0cdc 680B0000 		.word	.LC68
 6199 0ce0 880B0000 		.word	.LC69
 6200 0ce4 A00B0000 		.word	.LC70
 6201 0ce8 BC0B0000 		.word	.LC71
 6202              		.align	2
 6203              	.LC73:
 6204 0cec 03       		.byte	3
 6205 0ced 01       		.byte	1
 6206 0cee 02       		.byte	2
 6207 0cef 03       		.byte	3
 6208 0cf0 03       		.byte	3
 6209 0cf1 03       		.byte	3
 6210 0cf2 03       		.byte	3
 6211 0cf3 03       		.byte	3
 6212 0cf4 03       		.byte	3
 6213 0cf5 04       		.byte	4
 6214 0cf6 05       		.byte	5
 6215 0cf7 06       		.byte	6
 6216 0cf8 03       		.byte	3
 6217 0cf9 07       		.byte	7
 6218 0cfa 08       		.byte	8
 6219 0cfb 09       		.byte	9
 6220 0cfc 03       		.byte	3
 6221 0cfd 05       		.byte	5
 6222 0cfe 03       		.byte	3
 6223 0cff 01       		.byte	1
 6224 0d00 02       		.byte	2
 6225 0d01 03       		.byte	3
 6226 0d02 03       		.byte	3
 6227 0d03 03       		.byte	3
 6228 0d04 09       		.byte	9
 6229 0d05 03       		.byte	3
 6230 0d06 05       		.byte	5
 6231 0d07 0A       		.byte	10
 6232              		.align	2
 6233              	.LC74:
 6234 0d08 02       		.byte	2
 6235 0d09 03       		.byte	3
 6236 0d0a 08       		.byte	8
 6237 0d0b 0B       		.byte	11
 6238 0d0c 17       		.byte	23
 6239 0d0d 2C       		.byte	44
 6240 0d0e 2D       		.byte	45
 6241 0d0f 32       		.byte	50
 6242 0d10 35       		.byte	53
 6243 0d11 000000   		.align	2
 6244              	.LC75:
 6245 0d14 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 149


 6246 0d15 03       		.byte	3
 6247 0d16 05       		.byte	5
 6248 0d17 08       		.byte	8
 6249 0d18 0B       		.byte	11
 6250 0d19 17       		.byte	23
 6251 0d1a 18       		.byte	24
 6252 0d1b 1C       		.byte	28
 6253 0d1c 1F       		.byte	31
 6254 0d1d 20       		.byte	32
 6255 0d1e 26       		.byte	38
 6256 0d1f 2C       		.byte	44
 6257 0d20 2D       		.byte	45
 6258 0d21 2F       		.byte	47
 6259 0d22 32       		.byte	50
 6260 0d23 35       		.byte	53
 6261 0d24 3D       		.byte	61
 6262 0d25 47       		.byte	71
 6263              		.section	.text.manage_param_list,"ax",%progbits
 6264              		.align	2
 6265              		.global	manage_param_list
 6266              		.thumb
 6267              		.thumb_func
 6268              		.type	manage_param_list, %function
 6269              	manage_param_list:
 6270              	.LFB68:
 810:..\src/command_processing.c **** 
 811:..\src/command_processing.c **** //==============================================================================
 812:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** 
 815:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6271              		.loc 1 815 0
 6272              		.cfi_startproc
 6273              		@ args = 0, pretend = 0, frame = 1192
 6274              		@ frame_needed = 1, uses_anonymous_args = 0
 6275 0000 B0B5     		push	{r4, r5, r7, lr}
 6276              		.cfi_def_cfa_offset 16
 6277              		.cfi_offset 4, -16
 6278              		.cfi_offset 5, -12
 6279              		.cfi_offset 7, -8
 6280              		.cfi_offset 14, -4
 6281 0002 ADF5976D 		sub	sp, sp, #1208
 6282              		.cfi_def_cfa_offset 1224
 6283 0006 04AF     		add	r7, sp, #16
 6284              		.cfi_def_cfa 7, 1208
 6285 0008 0246     		mov	r2, r0
 6286 000a BB1D     		adds	r3, r7, #6
 6287 000c 1A80     		strh	r2, [r3]	@ movhi
 816:..\src/command_processing.c ****     uint8 CYDATA i, j;
 817:..\src/command_processing.c ****     uint8 CYDATA sod;
 818:..\src/command_processing.c ****     uint8 PARAM_IDX;
 819:..\src/command_processing.c ****     int16 aux_int16;
 820:..\src/command_processing.c ****     uint16 aux_uint16;
 821:..\src/command_processing.c ****     int32 aux_int32;
 822:..\src/command_processing.c ****     uint32 aux_uint32;
 823:..\src/command_processing.c ****     float aux_float;
 824:..\src/command_processing.c ****  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 150


 825:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6288              		.loc 1 825 0
 6289 000e 0023     		movs	r3, #0
 6290 0010 87F89D34 		strb	r3, [r7, #1181]
 826:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6291              		.loc 1 826 0
 6292 0014 0123     		movs	r3, #1
 6293 0016 87F89C34 		strb	r3, [r7, #1180]
 827:..\src/command_processing.c ****     
 828:..\src/command_processing.c ****     // Arrays
 829:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6294              		.loc 1 829 0
 6295 001a 054B     		ldr	r3, .L339
 6296 001c C7F8A034 		str	r3, [r7, #1184]
 830:..\src/command_processing.c ****     
 831:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6297              		.loc 1 831 0
 6298 0020 BB1D     		adds	r3, r7, #6
 6299 0022 1B88     		ldrh	r3, [r3]
 6300 0024 002B     		cmp	r3, #0
 6301 0026 07D0     		beq	.L278
 832:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6302              		.loc 1 832 0
 6303 0028 024B     		ldr	r3, .L339+4
 6304 002a C7F8A034 		str	r3, [r7, #1184]
 6305 002e 03E0     		b	.L340
 6306              	.L341:
 6307              		.align	2
 6308              	.L339:
 6309 0030 00000000 		.word	c_mem
 6310 0034 00000000 		.word	g_mem
 6311              	.L340:
 6312              	.L278:
 833:..\src/command_processing.c ****     }
 834:..\src/command_processing.c ****  
 835:..\src/command_processing.c ****     
 836:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 837:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 838:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6313              		.loc 1 838 0
 6314 0038 D7F8A034 		ldr	r3, [r7, #1184]
 6315 003c 03F1A002 		add	r2, r3, #160
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6316              		.loc 1 837 0
 6317 0040 07F55B73 		add	r3, r7, #876
 6318 0044 1A60     		str	r2, [r3]
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6319              		.loc 1 839 0
 6320 0046 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6321 004a 1346     		mov	r3, r2
 6322 004c DB00     		lsls	r3, r3, #3
 6323 004e 9B1A     		subs	r3, r3, r2
 6324 0050 1B01     		lsls	r3, r3, #4
 6325 0052 B033     		adds	r3, r3, #176
 6326 0054 D7F8A024 		ldr	r2, [r7, #1184]
 6327 0058 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 151


 6328              		.loc 1 837 0
 6329 005a 07F55B73 		add	r3, r7, #876
 6330 005e 5A60     		str	r2, [r3, #4]
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6331              		.loc 1 840 0
 6332 0060 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6333 0064 1346     		mov	r3, r2
 6334 0066 DB00     		lsls	r3, r3, #3
 6335 0068 9B1A     		subs	r3, r3, r2
 6336 006a 1B01     		lsls	r3, r3, #4
 6337 006c B833     		adds	r3, r3, #184
 6338 006e D7F8A024 		ldr	r2, [r7, #1184]
 6339 0072 1344     		add	r3, r3, r2
 6340 0074 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6341              		.loc 1 837 0
 6342 0076 07F55B73 		add	r3, r7, #876
 6343 007a 9A60     		str	r2, [r3, #8]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6344              		.loc 1 841 0
 6345 007c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6346 0080 1346     		mov	r3, r2
 6347 0082 DB00     		lsls	r3, r3, #3
 6348 0084 9B1A     		subs	r3, r3, r2
 6349 0086 1B01     		lsls	r3, r3, #4
 6350 0088 E033     		adds	r3, r3, #224
 6351 008a D7F8A024 		ldr	r2, [r7, #1184]
 6352 008e 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6353              		.loc 1 837 0
 6354 0090 07F55B73 		add	r3, r7, #876
 6355 0094 DA60     		str	r2, [r3, #12]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6356              		.loc 1 842 0
 6357 0096 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6358 009a 1346     		mov	r3, r2
 6359 009c DB00     		lsls	r3, r3, #3
 6360 009e 9B1A     		subs	r3, r3, r2
 6361 00a0 1B01     		lsls	r3, r3, #4
 6362 00a2 03F58473 		add	r3, r3, #264
 6363 00a6 D7F8A024 		ldr	r2, [r7, #1184]
 6364 00aa 1344     		add	r3, r3, r2
 6365 00ac 9A1D     		adds	r2, r3, #6
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6366              		.loc 1 837 0
 6367 00ae 07F55B73 		add	r3, r7, #876
 6368 00b2 1A61     		str	r2, [r3, #16]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6369              		.loc 1 843 0
 6370 00b4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6371 00b8 1346     		mov	r3, r2
 6372 00ba DB00     		lsls	r3, r3, #3
 6373 00bc 9B1A     		subs	r3, r3, r2
 6374 00be 1B01     		lsls	r3, r3, #4
 6375 00c0 03F58473 		add	r3, r3, #264
 6376 00c4 D7F8A024 		ldr	r2, [r7, #1184]
 6377 00c8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 152


 6378 00ca DA1D     		adds	r2, r3, #7
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6379              		.loc 1 837 0
 6380 00cc 07F55B73 		add	r3, r7, #876
 6381 00d0 5A61     		str	r2, [r3, #20]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6382              		.loc 1 844 0
 6383 00d2 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6384 00d6 D7F8A014 		ldr	r1, [r7, #1184]
 6385 00da 1346     		mov	r3, r2
 6386 00dc DB00     		lsls	r3, r3, #3
 6387 00de 9B1A     		subs	r3, r3, r2
 6388 00e0 1B01     		lsls	r3, r3, #4
 6389 00e2 0B44     		add	r3, r3, r1
 6390 00e4 03F58873 		add	r3, r3, #272
 6391 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6392 00ea 1A46     		mov	r2, r3
 6393 00ec 1346     		mov	r3, r2
 6394 00ee 5B00     		lsls	r3, r3, #1
 6395 00f0 1344     		add	r3, r3, r2
 6396 00f2 1B01     		lsls	r3, r3, #4
 6397 00f4 03F5C873 		add	r3, r3, #400
 6398 00f8 D7F8A024 		ldr	r2, [r7, #1184]
 6399 00fc 1344     		add	r3, r3, r2
 6400 00fe 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6401              		.loc 1 837 0
 6402 0100 07F55B73 		add	r3, r7, #876
 6403 0104 9A61     		str	r2, [r3, #24]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6404              		.loc 1 845 0
 6405 0106 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6406 010a D7F8A014 		ldr	r1, [r7, #1184]
 6407 010e 1346     		mov	r3, r2
 6408 0110 DB00     		lsls	r3, r3, #3
 6409 0112 9B1A     		subs	r3, r3, r2
 6410 0114 1B01     		lsls	r3, r3, #4
 6411 0116 0B44     		add	r3, r3, r1
 6412 0118 03F58873 		add	r3, r3, #272
 6413 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6414 011e 1A46     		mov	r2, r3
 6415 0120 1346     		mov	r3, r2
 6416 0122 5B00     		lsls	r3, r3, #1
 6417 0124 1344     		add	r3, r3, r2
 6418 0126 1B01     		lsls	r3, r3, #4
 6419 0128 03F5CC73 		add	r3, r3, #408
 6420 012c D7F8A024 		ldr	r2, [r7, #1184]
 6421 0130 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6422              		.loc 1 837 0
 6423 0132 07F55B73 		add	r3, r7, #876
 6424 0136 DA61     		str	r2, [r3, #28]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6425              		.loc 1 846 0
 6426 0138 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6427 013c D7F8A014 		ldr	r1, [r7, #1184]
 6428 0140 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 153


 6429 0142 DB00     		lsls	r3, r3, #3
 6430 0144 9B1A     		subs	r3, r3, r2
 6431 0146 1B01     		lsls	r3, r3, #4
 6432 0148 0B44     		add	r3, r3, r1
 6433 014a 03F58873 		add	r3, r3, #272
 6434 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6435 0150 1A46     		mov	r2, r3
 6436 0152 1346     		mov	r3, r2
 6437 0154 5B00     		lsls	r3, r3, #1
 6438 0156 1344     		add	r3, r3, r2
 6439 0158 1B01     		lsls	r3, r3, #4
 6440 015a 03F5D073 		add	r3, r3, #416
 6441 015e D7F8A024 		ldr	r2, [r7, #1184]
 6442 0162 1344     		add	r3, r3, r2
 6443 0164 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6444              		.loc 1 837 0
 6445 0166 07F55B73 		add	r3, r7, #876
 6446 016a 1A62     		str	r2, [r3, #32]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6447              		.loc 1 847 0
 6448 016c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6449 0170 1346     		mov	r3, r2
 6450 0172 DB00     		lsls	r3, r3, #3
 6451 0174 9B1A     		subs	r3, r3, r2
 6452 0176 1B01     		lsls	r3, r3, #4
 6453 0178 E033     		adds	r3, r3, #224
 6454 017a D7F8A024 		ldr	r2, [r7, #1184]
 6455 017e 1344     		add	r3, r3, r2
 6456 0180 DA1C     		adds	r2, r3, #3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6457              		.loc 1 837 0
 6458 0182 07F55B73 		add	r3, r7, #876
 6459 0186 5A62     		str	r2, [r3, #36]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6460              		.loc 1 848 0
 6461 0188 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6462 018c 1346     		mov	r3, r2
 6463 018e DB00     		lsls	r3, r3, #3
 6464 0190 9B1A     		subs	r3, r3, r2
 6465 0192 1B01     		lsls	r3, r3, #4
 6466 0194 E033     		adds	r3, r3, #224
 6467 0196 D7F8A024 		ldr	r2, [r7, #1184]
 6468 019a 1344     		add	r3, r3, r2
 6469 019c 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6470              		.loc 1 837 0
 6471 019e 07F55B73 		add	r3, r7, #876
 6472 01a2 9A62     		str	r2, [r3, #40]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6473              		.loc 1 849 0
 6474 01a4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6475 01a8 1346     		mov	r3, r2
 6476 01aa DB00     		lsls	r3, r3, #3
 6477 01ac 9B1A     		subs	r3, r3, r2
 6478 01ae 1B01     		lsls	r3, r3, #4
 6479 01b0 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 154


 6480 01b2 D7F8A024 		ldr	r2, [r7, #1184]
 6481 01b6 1344     		add	r3, r3, r2
 6482 01b8 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6483              		.loc 1 837 0
 6484 01ba 07F55B73 		add	r3, r7, #876
 6485 01be DA62     		str	r2, [r3, #44]
 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6486              		.loc 1 850 0
 6487 01c0 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6488 01c4 1346     		mov	r3, r2
 6489 01c6 DB00     		lsls	r3, r3, #3
 6490 01c8 9B1A     		subs	r3, r3, r2
 6491 01ca 1B01     		lsls	r3, r3, #4
 6492 01cc 03F58473 		add	r3, r3, #264
 6493 01d0 D7F8A024 		ldr	r2, [r7, #1184]
 6494 01d4 1344     		add	r3, r3, r2
 6495 01d6 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6496              		.loc 1 837 0
 6497 01d8 07F55B73 		add	r3, r7, #876
 6498 01dc 1A63     		str	r2, [r3, #48]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6499              		.loc 1 851 0
 6500 01de D7F8A034 		ldr	r3, [r7, #1184]
 6501 01e2 03F5F872 		add	r2, r3, #496
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6502              		.loc 1 837 0
 6503 01e6 07F55B73 		add	r3, r7, #876
 6504 01ea 5A63     		str	r2, [r3, #52]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6505              		.loc 1 852 0
 6506 01ec D7F8A034 		ldr	r3, [r7, #1184]
 6507 01f0 03F2FD12 		addw	r2, r3, #509
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6508              		.loc 1 837 0
 6509 01f4 07F55B73 		add	r3, r7, #876
 6510 01f8 9A63     		str	r2, [r3, #56]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6511              		.loc 1 853 0
 6512 01fa D7F8A034 		ldr	r3, [r7, #1184]
 6513 01fe 03F5FA72 		add	r2, r3, #500
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6514              		.loc 1 837 0
 6515 0202 07F55B73 		add	r3, r7, #876
 6516 0206 DA63     		str	r2, [r3, #60]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 6517              		.loc 1 854 0
 6518 0208 D7F8A034 		ldr	r3, [r7, #1184]
 6519 020c 03F5FE72 		add	r2, r3, #508
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6520              		.loc 1 837 0
 6521 0210 07F55B73 		add	r3, r7, #876
 6522 0214 1A64     		str	r2, [r3, #64]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6523              		.loc 1 855 0
 6524 0216 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 155


 6525 021a D7F8A014 		ldr	r1, [r7, #1184]
 6526 021e 1346     		mov	r3, r2
 6527 0220 DB00     		lsls	r3, r3, #3
 6528 0222 9B1A     		subs	r3, r3, r2
 6529 0224 1B01     		lsls	r3, r3, #4
 6530 0226 0B44     		add	r3, r3, r1
 6531 0228 03F58873 		add	r3, r3, #272
 6532 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6533 022e 1A46     		mov	r2, r3
 6534 0230 1346     		mov	r3, r2
 6535 0232 5B00     		lsls	r3, r3, #1
 6536 0234 1344     		add	r3, r3, r2
 6537 0236 1B01     		lsls	r3, r3, #4
 6538 0238 03F5D873 		add	r3, r3, #432
 6539 023c D7F8A024 		ldr	r2, [r7, #1184]
 6540 0240 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6541              		.loc 1 837 0
 6542 0242 07F55B73 		add	r3, r7, #876
 6543 0246 5A64     		str	r2, [r3, #68]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6544              		.loc 1 856 0
 6545 0248 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6546 024c D7F8A014 		ldr	r1, [r7, #1184]
 6547 0250 1346     		mov	r3, r2
 6548 0252 DB00     		lsls	r3, r3, #3
 6549 0254 9B1A     		subs	r3, r3, r2
 6550 0256 1B01     		lsls	r3, r3, #4
 6551 0258 0B44     		add	r3, r3, r1
 6552 025a 03F58873 		add	r3, r3, #272
 6553 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6554 0260 1A46     		mov	r2, r3
 6555 0262 1346     		mov	r3, r2
 6556 0264 5B00     		lsls	r3, r3, #1
 6557 0266 1344     		add	r3, r3, r2
 6558 0268 1B01     		lsls	r3, r3, #4
 6559 026a 03F5D873 		add	r3, r3, #432
 6560 026e D7F8A024 		ldr	r2, [r7, #1184]
 6561 0272 1344     		add	r3, r3, r2
 6562 0274 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6563              		.loc 1 837 0
 6564 0276 07F55B73 		add	r3, r7, #876
 6565 027a 9A64     		str	r2, [r3, #72]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6566              		.loc 1 857 0
 6567 027c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6568 0280 1346     		mov	r3, r2
 6569 0282 DB00     		lsls	r3, r3, #3
 6570 0284 9B1A     		subs	r3, r3, r2
 6571 0286 1B01     		lsls	r3, r3, #4
 6572 0288 E033     		adds	r3, r3, #224
 6573 028a D7F8A024 		ldr	r2, [r7, #1184]
 6574 028e 1344     		add	r3, r3, r2
 6575 0290 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6576              		.loc 1 837 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 156


 6577 0292 07F55B73 		add	r3, r7, #876
 6578 0296 DA64     		str	r2, [r3, #76]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 6579              		.loc 1 858 0
 6580 0298 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6581 029c 1346     		mov	r3, r2
 6582 029e DB00     		lsls	r3, r3, #3
 6583 02a0 9B1A     		subs	r3, r3, r2
 6584 02a2 1B01     		lsls	r3, r3, #4
 6585 02a4 F033     		adds	r3, r3, #240
 6586 02a6 D7F8A024 		ldr	r2, [r7, #1184]
 6587 02aa 1344     		add	r3, r3, r2
 6588 02ac 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6589              		.loc 1 837 0
 6590 02ae 07F55B73 		add	r3, r7, #876
 6591 02b2 1A65     		str	r2, [r3, #80]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6592              		.loc 1 859 0
 6593 02b4 D7F8A034 		ldr	r3, [r7, #1184]
 6594 02b8 03F1A102 		add	r2, r3, #161
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6595              		.loc 1 837 0
 6596 02bc 07F55B73 		add	r3, r7, #876
 6597 02c0 5A65     		str	r2, [r3, #84]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6598              		.loc 1 860 0
 6599 02c2 D7F8A034 		ldr	r3, [r7, #1184]
 6600 02c6 03F52872 		add	r2, r3, #672
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6601              		.loc 1 837 0
 6602 02ca 07F55B73 		add	r3, r7, #876
 6603 02ce 9A65     		str	r2, [r3, #88]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 6604              		.loc 1 861 0
 6605 02d0 D7F8A034 		ldr	r3, [r7, #1184]
 6606 02d4 03F52972 		add	r2, r3, #676
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6607              		.loc 1 837 0
 6608 02d8 07F55B73 		add	r3, r7, #876
 6609 02dc DA65     		str	r2, [r3, #92]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6610              		.loc 1 862 0
 6611 02de D7F8A034 		ldr	r3, [r7, #1184]
 6612 02e2 03F52A72 		add	r2, r3, #680
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6613              		.loc 1 837 0
 6614 02e6 07F55B73 		add	r3, r7, #876
 6615 02ea 1A66     		str	r2, [r3, #96]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 6616              		.loc 1 863 0
 6617 02ec D7F8A034 		ldr	r3, [r7, #1184]
 6618 02f0 03F52B72 		add	r2, r3, #684
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6619              		.loc 1 837 0
 6620 02f4 07F55B73 		add	r3, r7, #876
 6621 02f8 5A66     		str	r2, [r3, #100]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 157


 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 6622              		.loc 1 864 0
 6623 02fa D7F8A034 		ldr	r3, [r7, #1184]
 6624 02fe 03F5FF72 		add	r2, r3, #510
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6625              		.loc 1 837 0
 6626 0302 07F55B73 		add	r3, r7, #876
 6627 0306 9A66     		str	r2, [r3, #104]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 6628              		.loc 1 865 0
 6629 0308 D7F8A034 		ldr	r3, [r7, #1184]
 6630 030c 03F1A702 		add	r2, r3, #167
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6631              		.loc 1 837 0
 6632 0310 07F55B73 		add	r3, r7, #876
 6633 0314 DA66     		str	r2, [r3, #108]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 6634              		.loc 1 866 0
 6635 0316 D7F8A034 		ldr	r3, [r7, #1184]
 6636 031a 03F50072 		add	r2, r3, #512
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6637              		.loc 1 837 0
 6638 031e 07F55B73 		add	r3, r7, #876
 6639 0322 1A67     		str	r2, [r3, #112]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 6640              		.loc 1 867 0
 6641 0324 D7F8A034 		ldr	r3, [r7, #1184]
 6642 0328 03F22622 		addw	r2, r3, #550
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6643              		.loc 1 837 0
 6644 032c 07F55B73 		add	r3, r7, #876
 6645 0330 5A67     		str	r2, [r3, #116]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 6646              		.loc 1 868 0
 6647 0332 D7F8A034 		ldr	r3, [r7, #1184]
 6648 0336 03F1A802 		add	r2, r3, #168
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6649              		.loc 1 837 0
 6650 033a 07F55B73 		add	r3, r7, #876
 6651 033e 9A67     		str	r2, [r3, #120]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 6652              		.loc 1 869 0
 6653 0340 D7F8A034 		ldr	r3, [r7, #1184]
 6654 0344 03F50872 		add	r2, r3, #544
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6655              		.loc 1 837 0
 6656 0348 07F55B73 		add	r3, r7, #876
 6657 034c DA67     		str	r2, [r3, #124]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 6658              		.loc 1 870 0
 6659 034e D7F8A034 		ldr	r3, [r7, #1184]
 6660 0352 03F20122 		addw	r2, r3, #513
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6661              		.loc 1 837 0
 6662 0356 07F55B73 		add	r3, r7, #876
 6663 035a C3F88020 		str	r2, [r3, #128]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 158


 6664              		.loc 1 871 0
 6665 035e D7F8A034 		ldr	r3, [r7, #1184]
 6666 0362 03F20222 		addw	r2, r3, #514
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6667              		.loc 1 837 0
 6668 0366 07F55B73 		add	r3, r7, #876
 6669 036a C3F88420 		str	r2, [r3, #132]
 872:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 6670              		.loc 1 872 0
 6671 036e D7F8A034 		ldr	r3, [r7, #1184]
 6672 0372 03F1AB02 		add	r2, r3, #171
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6673              		.loc 1 837 0
 6674 0376 07F55B73 		add	r3, r7, #876
 6675 037a C3F88820 		str	r2, [r3, #136]
 873:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 6676              		.loc 1 873 0
 6677 037e D7F8A034 		ldr	r3, [r7, #1184]
 6678 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 6679 0386 1233     		adds	r3, r3, #18
 6680 0388 5B01     		lsls	r3, r3, #5
 6681 038a D7F8A024 		ldr	r2, [r7, #1184]
 6682 038e 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6683              		.loc 1 837 0
 6684 0390 07F55B73 		add	r3, r7, #876
 6685 0394 C3F88C20 		str	r2, [r3, #140]
 874:..\src/command_processing.c ****         
 875:..\src/command_processing.c ****         // GENERIC PARAMS
 876:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 6686              		.loc 1 876 0
 6687 0398 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6688 039c 1346     		mov	r3, r2
 6689 039e DB00     		lsls	r3, r3, #3
 6690 03a0 9B1A     		subs	r3, r3, r2
 6691 03a2 1B01     		lsls	r3, r3, #4
 6692 03a4 03F58873 		add	r3, r3, #272
 6693 03a8 D7F8A024 		ldr	r2, [r7, #1184]
 6694 03ac 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6695              		.loc 1 837 0
 6696 03ae 07F55B73 		add	r3, r7, #876
 6697 03b2 C3F89020 		str	r2, [r3, #144]
 877:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 6698              		.loc 1 877 0
 6699 03b6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6700 03ba 1346     		mov	r3, r2
 6701 03bc DB00     		lsls	r3, r3, #3
 6702 03be 9B1A     		subs	r3, r3, r2
 6703 03c0 1B01     		lsls	r3, r3, #4
 6704 03c2 E033     		adds	r3, r3, #224
 6705 03c4 D7F8A024 		ldr	r2, [r7, #1184]
 6706 03c8 1344     		add	r3, r3, r2
 6707 03ca 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6708              		.loc 1 837 0
 6709 03cc 07F55B73 		add	r3, r7, #876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 159


 6710 03d0 C3F89420 		str	r2, [r3, #148]
 878:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 6711              		.loc 1 878 0
 6712 03d4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6713 03d8 1346     		mov	r3, r2
 6714 03da DB00     		lsls	r3, r3, #3
 6715 03dc 9B1A     		subs	r3, r3, r2
 6716 03de 1B01     		lsls	r3, r3, #4
 6717 03e0 03F58873 		add	r3, r3, #272
 6718 03e4 D7F8A024 		ldr	r2, [r7, #1184]
 6719 03e8 1344     		add	r3, r3, r2
 6720 03ea 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6721              		.loc 1 837 0
 6722 03ec 07F55B73 		add	r3, r7, #876
 6723 03f0 C3F89820 		str	r2, [r3, #152]
 879:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 6724              		.loc 1 879 0
 6725 03f4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6726 03f8 1346     		mov	r3, r2
 6727 03fa DB00     		lsls	r3, r3, #3
 6728 03fc 9B1A     		subs	r3, r3, r2
 6729 03fe 1B01     		lsls	r3, r3, #4
 6730 0400 03F58873 		add	r3, r3, #272
 6731 0404 D7F8A024 		ldr	r2, [r7, #1184]
 6732 0408 1344     		add	r3, r3, r2
 6733 040a 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6734              		.loc 1 837 0
 6735 040c 07F55B73 		add	r3, r7, #876
 6736 0410 C3F89C20 		str	r2, [r3, #156]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6737              		.loc 1 880 0
 6738 0414 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6739 0418 D7F8A014 		ldr	r1, [r7, #1184]
 6740 041c 1346     		mov	r3, r2
 6741 041e DB00     		lsls	r3, r3, #3
 6742 0420 9B1A     		subs	r3, r3, r2
 6743 0422 1B01     		lsls	r3, r3, #4
 6744 0424 0B44     		add	r3, r3, r1
 6745 0426 03F58873 		add	r3, r3, #272
 6746 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6747 042c 1A46     		mov	r2, r3
 6748 042e 1346     		mov	r3, r2
 6749 0430 5B00     		lsls	r3, r3, #1
 6750 0432 1344     		add	r3, r3, r2
 6751 0434 1B01     		lsls	r3, r3, #4
 6752 0436 03F5D873 		add	r3, r3, #432
 6753 043a D7F8A024 		ldr	r2, [r7, #1184]
 6754 043e 1344     		add	r3, r3, r2
 6755 0440 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6756              		.loc 1 837 0
 6757 0442 07F55B73 		add	r3, r7, #876
 6758 0446 C3F8A020 		str	r2, [r3, #160]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 6759              		.loc 1 881 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 160


 6760 044a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6761 044e D7F8A014 		ldr	r1, [r7, #1184]
 6762 0452 1346     		mov	r3, r2
 6763 0454 DB00     		lsls	r3, r3, #3
 6764 0456 9B1A     		subs	r3, r3, r2
 6765 0458 1B01     		lsls	r3, r3, #4
 6766 045a 0B44     		add	r3, r3, r1
 6767 045c 03F58873 		add	r3, r3, #272
 6768 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6769 0462 1A46     		mov	r2, r3
 6770 0464 1346     		mov	r3, r2
 6771 0466 5B00     		lsls	r3, r3, #1
 6772 0468 1344     		add	r3, r3, r2
 6773 046a 1B01     		lsls	r3, r3, #4
 6774 046c 03F5D873 		add	r3, r3, #432
 6775 0470 D7F8A024 		ldr	r2, [r7, #1184]
 6776 0474 1344     		add	r3, r3, r2
 6777 0476 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6778              		.loc 1 837 0
 6779 0478 07F55B73 		add	r3, r7, #876
 6780 047c C3F8A420 		str	r2, [r3, #164]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6781              		.loc 1 882 0
 6782 0480 D7F8A034 		ldr	r3, [r7, #1184]
 6783 0484 03F1A902 		add	r2, r3, #169
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6784              		.loc 1 837 0
 6785 0488 07F55B73 		add	r3, r7, #876
 6786 048c C3F8A820 		str	r2, [r3, #168]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6787              		.loc 1 883 0
 6788 0490 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6789 0494 1346     		mov	r3, r2
 6790 0496 DB00     		lsls	r3, r3, #3
 6791 0498 9B1A     		subs	r3, r3, r2
 6792 049a 1B01     		lsls	r3, r3, #4
 6793 049c B033     		adds	r3, r3, #176
 6794 049e D7F8A024 		ldr	r2, [r7, #1184]
 6795 04a2 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6796              		.loc 1 837 0
 6797 04a4 07F55B73 		add	r3, r7, #876
 6798 04a8 C3F8AC20 		str	r2, [r3, #172]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6799              		.loc 1 884 0
 6800 04ac 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6801 04b0 1346     		mov	r3, r2
 6802 04b2 DB00     		lsls	r3, r3, #3
 6803 04b4 9B1A     		subs	r3, r3, r2
 6804 04b6 1B01     		lsls	r3, r3, #4
 6805 04b8 B833     		adds	r3, r3, #184
 6806 04ba D7F8A024 		ldr	r2, [r7, #1184]
 6807 04be 1344     		add	r3, r3, r2
 6808 04c0 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6809              		.loc 1 837 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 161


 6810 04c2 07F55B73 		add	r3, r7, #876
 6811 04c6 C3F8B020 		str	r2, [r3, #176]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6812              		.loc 1 885 0
 6813 04ca 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6814 04ce 1346     		mov	r3, r2
 6815 04d0 DB00     		lsls	r3, r3, #3
 6816 04d2 9B1A     		subs	r3, r3, r2
 6817 04d4 1B01     		lsls	r3, r3, #4
 6818 04d6 E033     		adds	r3, r3, #224
 6819 04d8 D7F8A024 		ldr	r2, [r7, #1184]
 6820 04dc 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6821              		.loc 1 837 0
 6822 04de 07F55B73 		add	r3, r7, #876
 6823 04e2 C3F8B420 		str	r2, [r3, #180]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6824              		.loc 1 886 0
 6825 04e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6826 04ea 1346     		mov	r3, r2
 6827 04ec DB00     		lsls	r3, r3, #3
 6828 04ee 9B1A     		subs	r3, r3, r2
 6829 04f0 1B01     		lsls	r3, r3, #4
 6830 04f2 03F58473 		add	r3, r3, #264
 6831 04f6 D7F8A024 		ldr	r2, [r7, #1184]
 6832 04fa 1344     		add	r3, r3, r2
 6833 04fc 9A1D     		adds	r2, r3, #6
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6834              		.loc 1 837 0
 6835 04fe 07F55B73 		add	r3, r7, #876
 6836 0502 C3F8B820 		str	r2, [r3, #184]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6837              		.loc 1 887 0
 6838 0506 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6839 050a 1346     		mov	r3, r2
 6840 050c DB00     		lsls	r3, r3, #3
 6841 050e 9B1A     		subs	r3, r3, r2
 6842 0510 1B01     		lsls	r3, r3, #4
 6843 0512 03F58473 		add	r3, r3, #264
 6844 0516 D7F8A024 		ldr	r2, [r7, #1184]
 6845 051a 1344     		add	r3, r3, r2
 6846 051c DA1D     		adds	r2, r3, #7
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6847              		.loc 1 837 0
 6848 051e 07F55B73 		add	r3, r7, #876
 6849 0522 C3F8BC20 		str	r2, [r3, #188]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6850              		.loc 1 888 0
 6851 0526 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6852 052a D7F8A014 		ldr	r1, [r7, #1184]
 6853 052e 1346     		mov	r3, r2
 6854 0530 DB00     		lsls	r3, r3, #3
 6855 0532 9B1A     		subs	r3, r3, r2
 6856 0534 1B01     		lsls	r3, r3, #4
 6857 0536 0B44     		add	r3, r3, r1
 6858 0538 03F58873 		add	r3, r3, #272
 6859 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 162


 6860 053e 1A46     		mov	r2, r3
 6861 0540 1346     		mov	r3, r2
 6862 0542 5B00     		lsls	r3, r3, #1
 6863 0544 1344     		add	r3, r3, r2
 6864 0546 1B01     		lsls	r3, r3, #4
 6865 0548 03F5C873 		add	r3, r3, #400
 6866 054c D7F8A024 		ldr	r2, [r7, #1184]
 6867 0550 1344     		add	r3, r3, r2
 6868 0552 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6869              		.loc 1 837 0
 6870 0554 07F55B73 		add	r3, r7, #876
 6871 0558 C3F8C020 		str	r2, [r3, #192]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6872              		.loc 1 889 0
 6873 055c 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6874 0560 D7F8A014 		ldr	r1, [r7, #1184]
 6875 0564 1346     		mov	r3, r2
 6876 0566 DB00     		lsls	r3, r3, #3
 6877 0568 9B1A     		subs	r3, r3, r2
 6878 056a 1B01     		lsls	r3, r3, #4
 6879 056c 0B44     		add	r3, r3, r1
 6880 056e 03F58873 		add	r3, r3, #272
 6881 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6882 0574 1A46     		mov	r2, r3
 6883 0576 1346     		mov	r3, r2
 6884 0578 5B00     		lsls	r3, r3, #1
 6885 057a 1344     		add	r3, r3, r2
 6886 057c 1B01     		lsls	r3, r3, #4
 6887 057e 03F5CC73 		add	r3, r3, #408
 6888 0582 D7F8A024 		ldr	r2, [r7, #1184]
 6889 0586 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6890              		.loc 1 837 0
 6891 0588 07F55B73 		add	r3, r7, #876
 6892 058c C3F8C420 		str	r2, [r3, #196]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6893              		.loc 1 890 0
 6894 0590 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6895 0594 D7F8A014 		ldr	r1, [r7, #1184]
 6896 0598 1346     		mov	r3, r2
 6897 059a DB00     		lsls	r3, r3, #3
 6898 059c 9B1A     		subs	r3, r3, r2
 6899 059e 1B01     		lsls	r3, r3, #4
 6900 05a0 0B44     		add	r3, r3, r1
 6901 05a2 03F58873 		add	r3, r3, #272
 6902 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6903 05a8 1A46     		mov	r2, r3
 6904 05aa 1346     		mov	r3, r2
 6905 05ac 5B00     		lsls	r3, r3, #1
 6906 05ae 1344     		add	r3, r3, r2
 6907 05b0 1B01     		lsls	r3, r3, #4
 6908 05b2 03F5D073 		add	r3, r3, #416
 6909 05b6 D7F8A024 		ldr	r2, [r7, #1184]
 6910 05ba 1344     		add	r3, r3, r2
 6911 05bc 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 163


 6912              		.loc 1 837 0
 6913 05be 07F55B73 		add	r3, r7, #876
 6914 05c2 C3F8C820 		str	r2, [r3, #200]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6915              		.loc 1 891 0
 6916 05c6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6917 05ca 1346     		mov	r3, r2
 6918 05cc DB00     		lsls	r3, r3, #3
 6919 05ce 9B1A     		subs	r3, r3, r2
 6920 05d0 1B01     		lsls	r3, r3, #4
 6921 05d2 E033     		adds	r3, r3, #224
 6922 05d4 D7F8A024 		ldr	r2, [r7, #1184]
 6923 05d8 1344     		add	r3, r3, r2
 6924 05da DA1C     		adds	r2, r3, #3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6925              		.loc 1 837 0
 6926 05dc 07F55B73 		add	r3, r7, #876
 6927 05e0 C3F8CC20 		str	r2, [r3, #204]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6928              		.loc 1 892 0
 6929 05e4 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6930 05e8 1346     		mov	r3, r2
 6931 05ea DB00     		lsls	r3, r3, #3
 6932 05ec 9B1A     		subs	r3, r3, r2
 6933 05ee 1B01     		lsls	r3, r3, #4
 6934 05f0 E033     		adds	r3, r3, #224
 6935 05f2 D7F8A024 		ldr	r2, [r7, #1184]
 6936 05f6 1344     		add	r3, r3, r2
 6937 05f8 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6938              		.loc 1 837 0
 6939 05fa 07F55B73 		add	r3, r7, #876
 6940 05fe C3F8D020 		str	r2, [r3, #208]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 6941              		.loc 1 893 0
 6942 0602 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6943 0606 1346     		mov	r3, r2
 6944 0608 DB00     		lsls	r3, r3, #3
 6945 060a 9B1A     		subs	r3, r3, r2
 6946 060c 1B01     		lsls	r3, r3, #4
 6947 060e E833     		adds	r3, r3, #232
 6948 0610 D7F8A024 		ldr	r2, [r7, #1184]
 6949 0614 1344     		add	r3, r3, r2
 6950 0616 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6951              		.loc 1 837 0
 6952 0618 07F55B73 		add	r3, r7, #876
 6953 061c C3F8D420 		str	r2, [r3, #212]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 6954              		.loc 1 894 0
 6955 0620 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6956 0624 1346     		mov	r3, r2
 6957 0626 DB00     		lsls	r3, r3, #3
 6958 0628 9B1A     		subs	r3, r3, r2
 6959 062a 1B01     		lsls	r3, r3, #4
 6960 062c 03F58473 		add	r3, r3, #264
 6961 0630 D7F8A024 		ldr	r2, [r7, #1184]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 164


 6962 0634 1344     		add	r3, r3, r2
 6963 0636 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6964              		.loc 1 837 0
 6965 0638 07F55B73 		add	r3, r7, #876
 6966 063c C3F8D820 		str	r2, [r3, #216]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 6967              		.loc 1 895 0
 6968 0640 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6969 0644 D7F8A014 		ldr	r1, [r7, #1184]
 6970 0648 1346     		mov	r3, r2
 6971 064a DB00     		lsls	r3, r3, #3
 6972 064c 9B1A     		subs	r3, r3, r2
 6973 064e 1B01     		lsls	r3, r3, #4
 6974 0650 0B44     		add	r3, r3, r1
 6975 0652 03F58873 		add	r3, r3, #272
 6976 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6977 0658 1A46     		mov	r2, r3
 6978 065a 1346     		mov	r3, r2
 6979 065c 5B00     		lsls	r3, r3, #1
 6980 065e 1344     		add	r3, r3, r2
 6981 0660 1B01     		lsls	r3, r3, #4
 6982 0662 03F5D873 		add	r3, r3, #432
 6983 0666 D7F8A024 		ldr	r2, [r7, #1184]
 6984 066a 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6985              		.loc 1 837 0
 6986 066c 07F55B73 		add	r3, r7, #876
 6987 0670 C3F8DC20 		str	r2, [r3, #220]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 6988              		.loc 1 896 0
 6989 0674 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6990 0678 D7F8A014 		ldr	r1, [r7, #1184]
 6991 067c 1346     		mov	r3, r2
 6992 067e DB00     		lsls	r3, r3, #3
 6993 0680 9B1A     		subs	r3, r3, r2
 6994 0682 1B01     		lsls	r3, r3, #4
 6995 0684 0B44     		add	r3, r3, r1
 6996 0686 03F58873 		add	r3, r3, #272
 6997 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6998 068c 1A46     		mov	r2, r3
 6999 068e 1346     		mov	r3, r2
 7000 0690 5B00     		lsls	r3, r3, #1
 7001 0692 1344     		add	r3, r3, r2
 7002 0694 1B01     		lsls	r3, r3, #4
 7003 0696 03F5D873 		add	r3, r3, #432
 7004 069a D7F8A024 		ldr	r2, [r7, #1184]
 7005 069e 1344     		add	r3, r3, r2
 7006 06a0 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7007              		.loc 1 837 0
 7008 06a2 07F55B73 		add	r3, r7, #876
 7009 06a6 C3F8E020 		str	r2, [r3, #224]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7010              		.loc 1 897 0
 7011 06aa 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7012 06ae 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 165


 7013 06b0 DB00     		lsls	r3, r3, #3
 7014 06b2 9B1A     		subs	r3, r3, r2
 7015 06b4 1B01     		lsls	r3, r3, #4
 7016 06b6 E033     		adds	r3, r3, #224
 7017 06b8 D7F8A024 		ldr	r2, [r7, #1184]
 7018 06bc 1344     		add	r3, r3, r2
 7019 06be 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7020              		.loc 1 837 0
 7021 06c0 07F55B73 		add	r3, r7, #876
 7022 06c4 C3F8E420 		str	r2, [r3, #228]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7023              		.loc 1 898 0
 7024 06c8 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7025 06cc 1346     		mov	r3, r2
 7026 06ce DB00     		lsls	r3, r3, #3
 7027 06d0 9B1A     		subs	r3, r3, r2
 7028 06d2 1B01     		lsls	r3, r3, #4
 7029 06d4 F033     		adds	r3, r3, #240
 7030 06d6 D7F8A024 		ldr	r2, [r7, #1184]
 7031 06da 1344     		add	r3, r3, r2
 7032 06dc 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7033              		.loc 1 837 0
 7034 06de 07F55B73 		add	r3, r7, #876
 7035 06e2 C3F8E820 		str	r2, [r3, #232]
 899:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7036              		.loc 1 899 0
 7037 06e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7038 06ea 1346     		mov	r3, r2
 7039 06ec DB00     		lsls	r3, r3, #3
 7040 06ee 9B1A     		subs	r3, r3, r2
 7041 06f0 1B01     		lsls	r3, r3, #4
 7042 06f2 03F58873 		add	r3, r3, #272
 7043 06f6 D7F8A024 		ldr	r2, [r7, #1184]
 7044 06fa 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7045              		.loc 1 837 0
 7046 06fc 07F55B73 		add	r3, r7, #876
 7047 0700 C3F8EC20 		str	r2, [r3, #236]
 900:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7048              		.loc 1 900 0
 7049 0704 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7050 0708 1346     		mov	r3, r2
 7051 070a DB00     		lsls	r3, r3, #3
 7052 070c 9B1A     		subs	r3, r3, r2
 7053 070e 1B01     		lsls	r3, r3, #4
 7054 0710 E033     		adds	r3, r3, #224
 7055 0712 D7F8A024 		ldr	r2, [r7, #1184]
 7056 0716 1344     		add	r3, r3, r2
 7057 0718 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7058              		.loc 1 837 0
 7059 071a 07F55B73 		add	r3, r7, #876
 7060 071e C3F8F020 		str	r2, [r3, #240]
 901:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7061              		.loc 1 901 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 166


 7062 0722 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7063 0726 1346     		mov	r3, r2
 7064 0728 DB00     		lsls	r3, r3, #3
 7065 072a 9B1A     		subs	r3, r3, r2
 7066 072c 1B01     		lsls	r3, r3, #4
 7067 072e 03F58873 		add	r3, r3, #272
 7068 0732 D7F8A024 		ldr	r2, [r7, #1184]
 7069 0736 1344     		add	r3, r3, r2
 7070 0738 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7071              		.loc 1 837 0
 7072 073a 07F55B73 		add	r3, r7, #876
 7073 073e C3F8F420 		str	r2, [r3, #244]
 902:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7074              		.loc 1 902 0
 7075 0742 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7076 0746 1346     		mov	r3, r2
 7077 0748 DB00     		lsls	r3, r3, #3
 7078 074a 9B1A     		subs	r3, r3, r2
 7079 074c 1B01     		lsls	r3, r3, #4
 7080 074e 03F58873 		add	r3, r3, #272
 7081 0752 D7F8A024 		ldr	r2, [r7, #1184]
 7082 0756 1344     		add	r3, r3, r2
 7083 0758 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7084              		.loc 1 837 0
 7085 075a 07F55B73 		add	r3, r7, #876
 7086 075e C3F8F820 		str	r2, [r3, #248]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7087              		.loc 1 903 0
 7088 0762 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7089 0766 D7F8A014 		ldr	r1, [r7, #1184]
 7090 076a 1346     		mov	r3, r2
 7091 076c DB00     		lsls	r3, r3, #3
 7092 076e 9B1A     		subs	r3, r3, r2
 7093 0770 1B01     		lsls	r3, r3, #4
 7094 0772 0B44     		add	r3, r3, r1
 7095 0774 03F58873 		add	r3, r3, #272
 7096 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7097 077a 1A46     		mov	r2, r3
 7098 077c 1346     		mov	r3, r2
 7099 077e 5B00     		lsls	r3, r3, #1
 7100 0780 1344     		add	r3, r3, r2
 7101 0782 1B01     		lsls	r3, r3, #4
 7102 0784 03F5D873 		add	r3, r3, #432
 7103 0788 D7F8A024 		ldr	r2, [r7, #1184]
 7104 078c 1344     		add	r3, r3, r2
 7105 078e 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7106              		.loc 1 837 0
 7107 0790 07F55B73 		add	r3, r7, #876
 7108 0794 C3F8FC20 		str	r2, [r3, #252]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7109              		.loc 1 904 0
 7110 0798 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7111 079c D7F8A014 		ldr	r1, [r7, #1184]
 7112 07a0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 167


 7113 07a2 DB00     		lsls	r3, r3, #3
 7114 07a4 9B1A     		subs	r3, r3, r2
 7115 07a6 1B01     		lsls	r3, r3, #4
 7116 07a8 0B44     		add	r3, r3, r1
 7117 07aa 03F58873 		add	r3, r3, #272
 7118 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7119 07b0 1A46     		mov	r2, r3
 7120 07b2 1346     		mov	r3, r2
 7121 07b4 5B00     		lsls	r3, r3, #1
 7122 07b6 1344     		add	r3, r3, r2
 7123 07b8 1B01     		lsls	r3, r3, #4
 7124 07ba 03F5D873 		add	r3, r3, #432
 7125 07be D7F8A024 		ldr	r2, [r7, #1184]
 7126 07c2 1344     		add	r3, r3, r2
 7127 07c4 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7128              		.loc 1 837 0
 7129 07c6 07F55B73 		add	r3, r7, #876
 7130 07ca C3F80021 		str	r2, [r3, #256]
 905:..\src/command_processing.c ****         
 906:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7131              		.loc 1 906 0
 7132 07ce D7F8A034 		ldr	r3, [r7, #1184]
 7133 07d2 03F5C872 		add	r2, r3, #400
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7134              		.loc 1 837 0
 7135 07d6 07F55B73 		add	r3, r7, #876
 7136 07da C3F80421 		str	r2, [r3, #260]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7137              		.loc 1 907 0
 7138 07de D7F8A034 		ldr	r3, [r7, #1184]
 7139 07e2 03F5E072 		add	r2, r3, #448
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7140              		.loc 1 837 0
 7141 07e6 07F55B73 		add	r3, r7, #876
 7142 07ea C3F80821 		str	r2, [r3, #264]
 908:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7143              		.loc 1 908 0
 7144 07ee D7F8A034 		ldr	r3, [r7, #1184]
 7145 07f2 03F22722 		addw	r2, r3, #551
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7146              		.loc 1 837 0
 7147 07f6 07F55B73 		add	r3, r7, #876
 7148 07fa C3F80C21 		str	r2, [r3, #268]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7149              		.loc 1 909 0
 7150 07fe D7F8A034 		ldr	r3, [r7, #1184]
 7151 0802 03F50A72 		add	r2, r3, #552
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7152              		.loc 1 837 0
 7153 0806 07F55B73 		add	r3, r7, #876
 7154 080a C3F81021 		str	r2, [r3, #272]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 7155              		.loc 1 910 0
 7156 080e D7F8A034 		ldr	r3, [r7, #1184]
 7157 0812 03F22E22 		addw	r2, r3, #558
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 168


 7158              		.loc 1 837 0
 7159 0816 07F55B73 		add	r3, r7, #876
 7160 081a C3F81421 		str	r2, [r3, #276]
 911:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type)
 7161              		.loc 1 911 0
 7162 081e D7F8A034 		ldr	r3, [r7, #1184]
 7163 0822 03F1AC02 		add	r2, r3, #172
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7164              		.loc 1 837 0
 7165 0826 07F55B73 		add	r3, r7, #876
 7166 082a C3F81821 		str	r2, [r3, #280]
 912:..\src/command_processing.c ****     };
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7167              		.loc 1 914 0
 7168 082e 07F54973 		add	r3, r7, #804
 7169 0832 F34A     		ldr	r2, .L342
 7170 0834 1846     		mov	r0, r3
 7171 0836 1146     		mov	r1, r2
 7172 0838 4723     		movs	r3, #71
 7173 083a 1A46     		mov	r2, r3
 7174 083c FFF7FEFF 		bl	memcpy
 915:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 916:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 917:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 918:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 919:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 920:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 921:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 922:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 923:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 924:..\src/command_processing.c ****         
 925:..\src/command_processing.c ****         // GENERIC PARAMS
 926:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 927:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 928:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 929:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 931:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 932:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 933:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 934:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG      
 935:..\src/command_processing.c ****     };
 936:..\src/command_processing.c **** 
 937:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7175              		.loc 1 937 0
 7176 0840 07F53773 		add	r3, r7, #732
 7177 0844 0122     		movs	r2, #1
 7178 0846 1A70     		strb	r2, [r3]
 7179 0848 07F53773 		add	r3, r7, #732
 7180 084c 0322     		movs	r2, #3
 7181 084e 5A70     		strb	r2, [r3, #1]
 7182 0850 07F53773 		add	r3, r7, #732
 7183 0854 0322     		movs	r2, #3
 7184 0856 9A70     		strb	r2, [r3, #2]
 7185 0858 07F53773 		add	r3, r7, #732
 7186 085c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 169


 7187 085e DA70     		strb	r2, [r3, #3]
 7188 0860 07F53773 		add	r3, r7, #732
 7189 0864 0122     		movs	r2, #1
 7190 0866 1A71     		strb	r2, [r3, #4]
 7191 0868 07F53773 		add	r3, r7, #732
 7192 086c 0122     		movs	r2, #1
 7193 086e 5A71     		strb	r2, [r3, #5]
 7194 0870 07F53773 		add	r3, r7, #732
 7195 0874 0322     		movs	r2, #3
 7196 0876 9A71     		strb	r2, [r3, #6]
 7197 0878 07F53773 		add	r3, r7, #732
 7198 087c 0322     		movs	r2, #3
 7199 087e DA71     		strb	r2, [r3, #7]
 7200 0880 07F53773 		add	r3, r7, #732
 7201 0884 0322     		movs	r2, #3
 7202 0886 1A72     		strb	r2, [r3, #8]
 7203 0888 07F53773 		add	r3, r7, #732
 7204 088c 0122     		movs	r2, #1
 7205 088e 5A72     		strb	r2, [r3, #9]
 7206 0890 07F53773 		add	r3, r7, #732
 7207 0894 0222     		movs	r2, #2
 7208 0896 9A72     		strb	r2, [r3, #10]
 7209 0898 07F53773 		add	r3, r7, #732
 7210 089c 0222     		movs	r2, #2
 7211 089e DA72     		strb	r2, [r3, #11]
 7212 08a0 07F53773 		add	r3, r7, #732
 7213 08a4 0122     		movs	r2, #1
 7214 08a6 1A73     		strb	r2, [r3, #12]
 7215 08a8 07F53773 		add	r3, r7, #732
 7216 08ac 0222     		movs	r2, #2
 7217 08ae 5A73     		strb	r2, [r3, #13]
 7218 08b0 07F53773 		add	r3, r7, #732
 7219 08b4 0122     		movs	r2, #1
 7220 08b6 9A73     		strb	r2, [r3, #14]
 7221 08b8 07F53773 		add	r3, r7, #732
 7222 08bc 0222     		movs	r2, #2
 7223 08be DA73     		strb	r2, [r3, #15]
 7224 08c0 07F53773 		add	r3, r7, #732
 7225 08c4 0122     		movs	r2, #1
 7226 08c6 1A74     		strb	r2, [r3, #16]
 7227 08c8 07F53773 		add	r3, r7, #732
 7228 08cc 0122     		movs	r2, #1
 7229 08ce 5A74     		strb	r2, [r3, #17]
 7230 08d0 07F53773 		add	r3, r7, #732
 7231 08d4 0122     		movs	r2, #1
 7232 08d6 9A74     		strb	r2, [r3, #18]
 7233 08d8 07F53773 		add	r3, r7, #732
 7234 08dc 0122     		movs	r2, #1
 7235 08de DA74     		strb	r2, [r3, #19]
 7236 08e0 07F53773 		add	r3, r7, #732
 7237 08e4 0622     		movs	r2, #6
 7238 08e6 1A75     		strb	r2, [r3, #20]
 7239 08e8 07F53773 		add	r3, r7, #732
 7240 08ec 0322     		movs	r2, #3
 7241 08ee 5A75     		strb	r2, [r3, #21]
 7242 08f0 07F53773 		add	r3, r7, #732
 7243 08f4 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 170


 7244 08f6 9A75     		strb	r2, [r3, #22]
 7245 08f8 07F53773 		add	r3, r7, #732
 7246 08fc 0122     		movs	r2, #1
 7247 08fe DA75     		strb	r2, [r3, #23]
 7248 0900 07F53773 		add	r3, r7, #732
 7249 0904 0122     		movs	r2, #1
 7250 0906 1A76     		strb	r2, [r3, #24]
 7251 0908 07F53773 		add	r3, r7, #732
 7252 090c 0122     		movs	r2, #1
 7253 090e 5A76     		strb	r2, [r3, #25]
 7254 0910 07F53773 		add	r3, r7, #732
 7255 0914 0122     		movs	r2, #1
 7256 0916 9A76     		strb	r2, [r3, #26]
 7257 0918 07F53773 		add	r3, r7, #732
 7258 091c 0122     		movs	r2, #1
 7259 091e DA76     		strb	r2, [r3, #27]
 7260 0920 07F53773 		add	r3, r7, #732
 7261 0924 0122     		movs	r2, #1
 7262 0926 1A77     		strb	r2, [r3, #28]
 7263 0928 07F53773 		add	r3, r7, #732
 7264 092c 0122     		movs	r2, #1
 7265 092e 5A77     		strb	r2, [r3, #29]
 7266 0930 07F53773 		add	r3, r7, #732
 7267 0934 0122     		movs	r2, #1
 7268 0936 9A77     		strb	r2, [r3, #30]
 7269 0938 07F53773 		add	r3, r7, #732
 7270 093c 0622     		movs	r2, #6
 7271 093e DA77     		strb	r2, [r3, #31]
 7272 0940 07F53773 		add	r3, r7, #732
 7273 0944 0122     		movs	r2, #1
 7274 0946 83F82020 		strb	r2, [r3, #32]
 7275 094a 07F53773 		add	r3, r7, #732
 7276 094e 0522     		movs	r2, #5
 7277 0950 83F82120 		strb	r2, [r3, #33]
 7278 0954 07F53773 		add	r3, r7, #732
 7279 0958 0122     		movs	r2, #1
 7280 095a 83F82220 		strb	r2, [r3, #34]
 7281 095e 07F53773 		add	r3, r7, #732
 7282 0962 0622     		movs	r2, #6
 7283 0964 83F82320 		strb	r2, [r3, #35]
 7284 0968 07F53773 		add	r3, r7, #732
 7285 096c 0122     		movs	r2, #1
 7286 096e 83F82420 		strb	r2, [r3, #36]
 7287 0972 07F53773 		add	r3, r7, #732
 7288 0976 0122     		movs	r2, #1
 7289 0978 83F82520 		strb	r2, [r3, #37]
 7290 097c 07F53773 		add	r3, r7, #732
 7291 0980 0122     		movs	r2, #1
 7292 0982 83F82620 		strb	r2, [r3, #38]
 7293 0986 07F53773 		add	r3, r7, #732
 7294 098a 0122     		movs	r2, #1
 7295 098c 83F82720 		strb	r2, [r3, #39]
 7296 0990 07F53773 		add	r3, r7, #732
 7297 0994 0322     		movs	r2, #3
 7298 0996 83F82820 		strb	r2, [r3, #40]
 7299 099a 07F53773 		add	r3, r7, #732
 7300 099e 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 171


 7301 09a0 83F82920 		strb	r2, [r3, #41]
 7302 09a4 07F53773 		add	r3, r7, #732
 7303 09a8 0122     		movs	r2, #1
 7304 09aa 83F82A20 		strb	r2, [r3, #42]
 7305 09ae 07F53773 		add	r3, r7, #732
 7306 09b2 0322     		movs	r2, #3
 7307 09b4 83F82B20 		strb	r2, [r3, #43]
 7308 09b8 07F53773 		add	r3, r7, #732
 7309 09bc 0322     		movs	r2, #3
 7310 09be 83F82C20 		strb	r2, [r3, #44]
 7311 09c2 07F53773 		add	r3, r7, #732
 7312 09c6 0122     		movs	r2, #1
 7313 09c8 83F82D20 		strb	r2, [r3, #45]
 7314 09cc 07F53773 		add	r3, r7, #732
 7315 09d0 0122     		movs	r2, #1
 7316 09d2 83F82E20 		strb	r2, [r3, #46]
 7317 09d6 07F53773 		add	r3, r7, #732
 7318 09da 0122     		movs	r2, #1
 7319 09dc 83F82F20 		strb	r2, [r3, #47]
 7320 09e0 07F53773 		add	r3, r7, #732
 7321 09e4 0322     		movs	r2, #3
 7322 09e6 83F83020 		strb	r2, [r3, #48]
 7323 09ea 07F53773 		add	r3, r7, #732
 7324 09ee 0322     		movs	r2, #3
 7325 09f0 83F83120 		strb	r2, [r3, #49]
 7326 09f4 07F53773 		add	r3, r7, #732
 7327 09f8 0322     		movs	r2, #3
 7328 09fa 83F83220 		strb	r2, [r3, #50]
 7329 09fe 07F53773 		add	r3, r7, #732
 7330 0a02 0122     		movs	r2, #1
 7331 0a04 83F83320 		strb	r2, [r3, #51]
 7332 0a08 07F53773 		add	r3, r7, #732
 7333 0a0c 0222     		movs	r2, #2
 7334 0a0e 83F83420 		strb	r2, [r3, #52]
 7335 0a12 07F53773 		add	r3, r7, #732
 7336 0a16 0222     		movs	r2, #2
 7337 0a18 83F83520 		strb	r2, [r3, #53]
 7338 0a1c 07F53773 		add	r3, r7, #732
 7339 0a20 0122     		movs	r2, #1
 7340 0a22 83F83620 		strb	r2, [r3, #54]
 7341 0a26 07F53773 		add	r3, r7, #732
 7342 0a2a 0122     		movs	r2, #1
 7343 0a2c 83F83720 		strb	r2, [r3, #55]
 7344 0a30 07F53773 		add	r3, r7, #732
 7345 0a34 0122     		movs	r2, #1
 7346 0a36 83F83820 		strb	r2, [r3, #56]
 7347 0a3a 07F53773 		add	r3, r7, #732
 7348 0a3e 0122     		movs	r2, #1
 7349 0a40 83F83920 		strb	r2, [r3, #57]
 7350 0a44 07F53773 		add	r3, r7, #732
 7351 0a48 0622     		movs	r2, #6
 7352 0a4a 83F83A20 		strb	r2, [r3, #58]
 7353 0a4e 07F53773 		add	r3, r7, #732
 7354 0a52 0122     		movs	r2, #1
 7355 0a54 83F83B20 		strb	r2, [r3, #59]
 7356 0a58 07F53773 		add	r3, r7, #732
 7357 0a5c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 172


 7358 0a5e 83F83C20 		strb	r2, [r3, #60]
 7359 0a62 07F53773 		add	r3, r7, #732
 7360 0a66 0122     		movs	r2, #1
 7361 0a68 83F83D20 		strb	r2, [r3, #61]
 7362 0a6c 07F53773 		add	r3, r7, #732
 7363 0a70 0122     		movs	r2, #1
 7364 0a72 83F83E20 		strb	r2, [r3, #62]
 7365 0a76 07F53773 		add	r3, r7, #732
 7366 0a7a 0322     		movs	r2, #3
 7367 0a7c 83F83F20 		strb	r2, [r3, #63]
 7368 0a80 07F53773 		add	r3, r7, #732
 7369 0a84 0322     		movs	r2, #3
 7370 0a86 83F84020 		strb	r2, [r3, #64]
 938:..\src/command_processing.c ****         1, 3, 3, 1, 
 939:..\src/command_processing.c ****         1, 1, 3, 3,
 940:..\src/command_processing.c ****         3, 1, 2, 2, 
 941:..\src/command_processing.c ****         1, 2, 1, 2,
 942:..\src/command_processing.c ****         1, 1, 1, 1, 
 943:..\src/command_processing.c ****         6, 3, 1, 1,
 944:..\src/command_processing.c ****         1, 1, 1, 1, 
 945:..\src/command_processing.c ****         1, 1, 1, 6,
 946:..\src/command_processing.c ****         1, 5, 1, 6,
 947:..\src/command_processing.c ****         
 948:..\src/command_processing.c ****         // GENERIC PARAMS
 949:..\src/command_processing.c ****         1, 1, 1, 1,
 950:..\src/command_processing.c ****         3, 3, 1, 3,
 951:..\src/command_processing.c ****         3, 1, 1, 1,
 952:..\src/command_processing.c ****         3, 3, 3, 1,
 953:..\src/command_processing.c ****         2, 2, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 6, 1,
 955:..\src/command_processing.c ****         1, 1, 1, 3, 
 956:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7371              		.loc 1 956 0
 7372 0a8a 5E4B     		ldr	r3, .L342+4
 7373 0a8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 937:..\src/command_processing.c ****         1, 3, 3, 1, 
 7374              		.loc 1 937 0
 7375 0a8e 07F53773 		add	r3, r7, #732
 7376 0a92 83F84120 		strb	r2, [r3, #65]
 7377              		.loc 1 956 0
 7378 0a96 5B4B     		ldr	r3, .L342+4
 7379 0a98 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 937:..\src/command_processing.c ****         1, 3, 3, 1, 
 7380              		.loc 1 937 0
 7381 0a9a 07F53773 		add	r3, r7, #732
 7382 0a9e 83F84220 		strb	r2, [r3, #66]
 7383 0aa2 07F53773 		add	r3, r7, #732
 7384 0aa6 0122     		movs	r2, #1
 7385 0aa8 83F84320 		strb	r2, [r3, #67]
 7386 0aac 07F53773 		add	r3, r7, #732
 7387 0ab0 0622     		movs	r2, #6
 7388 0ab2 83F84420 		strb	r2, [r3, #68]
 7389 0ab6 07F53773 		add	r3, r7, #732
 7390 0aba 0622     		movs	r2, #6
 7391 0abc 83F84520 		strb	r2, [r3, #69]
 7392 0ac0 07F53773 		add	r3, r7, #732
 7393 0ac4 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 173


 7394 0ac6 83F84620 		strb	r2, [r3, #70]
 957:..\src/command_processing.c ****         6, 6, 1
 958:..\src/command_processing.c ****     };
 959:..\src/command_processing.c ****     
 960:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7395              		.loc 1 960 0
 7396 0aca 07F52573 		add	r3, r7, #660
 7397 0ace 0022     		movs	r2, #0
 7398 0ad0 1A70     		strb	r2, [r3]
 7399 0ad2 97F89D34 		ldrb	r3, [r7, #1181]
 7400 0ad6 0A33     		adds	r3, r3, #10
 7401 0ad8 DAB2     		uxtb	r2, r3
 7402 0ada 07F52573 		add	r3, r7, #660
 7403 0ade 5A70     		strb	r2, [r3, #1]
 7404 0ae0 97F89D34 		ldrb	r3, [r7, #1181]
 7405 0ae4 0A33     		adds	r3, r3, #10
 7406 0ae6 DAB2     		uxtb	r2, r3
 7407 0ae8 07F52573 		add	r3, r7, #660
 7408 0aec 9A70     		strb	r2, [r3, #2]
 7409 0aee 97F89D34 		ldrb	r3, [r7, #1181]
 7410 0af2 0A33     		adds	r3, r3, #10
 7411 0af4 DAB2     		uxtb	r2, r3
 7412 0af6 07F52573 		add	r3, r7, #660
 7413 0afa DA70     		strb	r2, [r3, #3]
 7414 0afc 97F89D34 		ldrb	r3, [r7, #1181]
 7415 0b00 0A33     		adds	r3, r3, #10
 7416 0b02 DAB2     		uxtb	r2, r3
 7417 0b04 07F52573 		add	r3, r7, #660
 7418 0b08 1A71     		strb	r2, [r3, #4]
 7419 0b0a 97F89D34 		ldrb	r3, [r7, #1181]
 7420 0b0e 0A33     		adds	r3, r3, #10
 7421 0b10 DAB2     		uxtb	r2, r3
 7422 0b12 07F52573 		add	r3, r7, #660
 7423 0b16 5A71     		strb	r2, [r3, #5]
 961:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 962:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7424              		.loc 1 962 0
 7425 0b18 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7426 0b1c D7F8A014 		ldr	r1, [r7, #1184]
 7427 0b20 1346     		mov	r3, r2
 7428 0b22 DB00     		lsls	r3, r3, #3
 7429 0b24 9B1A     		subs	r3, r3, r2
 7430 0b26 1B01     		lsls	r3, r3, #4
 7431 0b28 0B44     		add	r3, r3, r1
 7432 0b2a 03F58873 		add	r3, r3, #272
 7433 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7434              		.loc 1 960 0
 7435 0b30 1433     		adds	r3, r3, #20
 7436 0b32 DAB2     		uxtb	r2, r3
 7437 0b34 07F52573 		add	r3, r7, #660
 7438 0b38 9A71     		strb	r2, [r3, #6]
 7439              		.loc 1 962 0
 7440 0b3a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7441 0b3e D7F8A014 		ldr	r1, [r7, #1184]
 7442 0b42 1346     		mov	r3, r2
 7443 0b44 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 174


 7444 0b46 9B1A     		subs	r3, r3, r2
 7445 0b48 1B01     		lsls	r3, r3, #4
 7446 0b4a 0B44     		add	r3, r3, r1
 7447 0b4c 03F58873 		add	r3, r3, #272
 7448 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7449              		.loc 1 960 0
 7450 0b52 1433     		adds	r3, r3, #20
 7451 0b54 DAB2     		uxtb	r2, r3
 7452 0b56 07F52573 		add	r3, r7, #660
 7453 0b5a DA71     		strb	r2, [r3, #7]
 963:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7454              		.loc 1 963 0
 7455 0b5c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7456 0b60 D7F8A014 		ldr	r1, [r7, #1184]
 7457 0b64 1346     		mov	r3, r2
 7458 0b66 DB00     		lsls	r3, r3, #3
 7459 0b68 9B1A     		subs	r3, r3, r2
 7460 0b6a 1B01     		lsls	r3, r3, #4
 7461 0b6c 0B44     		add	r3, r3, r1
 7462 0b6e 03F58873 		add	r3, r3, #272
 7463 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7464              		.loc 1 960 0
 7465 0b74 1433     		adds	r3, r3, #20
 7466 0b76 DAB2     		uxtb	r2, r3
 7467 0b78 07F52573 		add	r3, r7, #660
 7468 0b7c 1A72     		strb	r2, [r3, #8]
 7469 0b7e 97F89D34 		ldrb	r3, [r7, #1181]
 7470 0b82 0A33     		adds	r3, r3, #10
 7471 0b84 DAB2     		uxtb	r2, r3
 7472 0b86 07F52573 		add	r3, r7, #660
 7473 0b8a 5A72     		strb	r2, [r3, #9]
 7474 0b8c 97F89D34 		ldrb	r3, [r7, #1181]
 7475 0b90 0A33     		adds	r3, r3, #10
 7476 0b92 DAB2     		uxtb	r2, r3
 7477 0b94 07F52573 		add	r3, r7, #660
 7478 0b98 9A72     		strb	r2, [r3, #10]
 7479 0b9a 97F89D34 		ldrb	r3, [r7, #1181]
 7480 0b9e 0A33     		adds	r3, r3, #10
 7481 0ba0 DAB2     		uxtb	r2, r3
 7482 0ba2 07F52573 		add	r3, r7, #660
 7483 0ba6 DA72     		strb	r2, [r3, #11]
 7484 0ba8 97F89D34 		ldrb	r3, [r7, #1181]
 7485 0bac 0A33     		adds	r3, r3, #10
 7486 0bae DAB2     		uxtb	r2, r3
 7487 0bb0 07F52573 		add	r3, r7, #660
 7488 0bb4 1A73     		strb	r2, [r3, #12]
 7489 0bb6 07F52573 		add	r3, r7, #660
 7490 0bba 1E22     		movs	r2, #30
 7491 0bbc 5A73     		strb	r2, [r3, #13]
 7492 0bbe 07F52573 		add	r3, r7, #660
 7493 0bc2 1E22     		movs	r2, #30
 7494 0bc4 9A73     		strb	r2, [r3, #14]
 7495 0bc6 07F52573 		add	r3, r7, #660
 7496 0bca 1E22     		movs	r2, #30
 7497 0bcc DA73     		strb	r2, [r3, #15]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 175


 7498 0bce 07F52573 		add	r3, r7, #660
 7499 0bd2 1E22     		movs	r2, #30
 7500 0bd4 1A74     		strb	r2, [r3, #16]
 964:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 965:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7501              		.loc 1 965 0
 7502 0bd6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7503 0bda D7F8A014 		ldr	r1, [r7, #1184]
 7504 0bde 1346     		mov	r3, r2
 7505 0be0 DB00     		lsls	r3, r3, #3
 7506 0be2 9B1A     		subs	r3, r3, r2
 7507 0be4 1B01     		lsls	r3, r3, #4
 7508 0be6 0B44     		add	r3, r3, r1
 7509 0be8 03F58873 		add	r3, r3, #272
 7510 0bec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7511              		.loc 1 960 0
 7512 0bee 1433     		adds	r3, r3, #20
 7513 0bf0 DAB2     		uxtb	r2, r3
 7514 0bf2 07F52573 		add	r3, r7, #660
 7515 0bf6 5A74     		strb	r2, [r3, #17]
 7516              		.loc 1 965 0
 7517 0bf8 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7518 0bfc 04E0     		b	.L343
 7519              	.L344:
 7520 0bfe 00BF     		.align	2
 7521              	.L342:
 7522 0c00 60040000 		.word	.LC0
 7523 0c04 00000000 		.word	N_Encoder_Line_Connected
 7524              	.L343:
 7525 0c08 D7F8A014 		ldr	r1, [r7, #1184]
 7526 0c0c 1346     		mov	r3, r2
 7527 0c0e DB00     		lsls	r3, r3, #3
 7528 0c10 9B1A     		subs	r3, r3, r2
 7529 0c12 1B01     		lsls	r3, r3, #4
 7530 0c14 0B44     		add	r3, r3, r1
 7531 0c16 03F58873 		add	r3, r3, #272
 7532 0c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7533              		.loc 1 960 0
 7534 0c1c 1433     		adds	r3, r3, #20
 7535 0c1e DAB2     		uxtb	r2, r3
 7536 0c20 07F52573 		add	r3, r7, #660
 7537 0c24 9A74     		strb	r2, [r3, #18]
 7538 0c26 97F89D34 		ldrb	r3, [r7, #1181]
 7539 0c2a 0A33     		adds	r3, r3, #10
 7540 0c2c DAB2     		uxtb	r2, r3
 7541 0c2e 07F52573 		add	r3, r7, #660
 7542 0c32 DA74     		strb	r2, [r3, #19]
 7543 0c34 97F89D34 		ldrb	r3, [r7, #1181]
 7544 0c38 0A33     		adds	r3, r3, #10
 7545 0c3a DAB2     		uxtb	r2, r3
 7546 0c3c 07F52573 		add	r3, r7, #660
 7547 0c40 1A75     		strb	r2, [r3, #20]
 7548 0c42 07F52573 		add	r3, r7, #660
 7549 0c46 0022     		movs	r2, #0
 7550 0c48 5A75     		strb	r2, [r3, #21]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 176


 7551 0c4a 07F52573 		add	r3, r7, #660
 7552 0c4e 4622     		movs	r2, #70
 7553 0c50 9A75     		strb	r2, [r3, #22]
 7554 0c52 07F52573 		add	r3, r7, #660
 7555 0c56 4622     		movs	r2, #70
 7556 0c58 DA75     		strb	r2, [r3, #23]
 7557 0c5a 07F52573 		add	r3, r7, #660
 7558 0c5e 4622     		movs	r2, #70
 7559 0c60 1A76     		strb	r2, [r3, #24]
 7560 0c62 07F52573 		add	r3, r7, #660
 7561 0c66 4622     		movs	r2, #70
 7562 0c68 5A76     		strb	r2, [r3, #25]
 7563 0c6a 07F52573 		add	r3, r7, #660
 7564 0c6e 1E22     		movs	r2, #30
 7565 0c70 9A76     		strb	r2, [r3, #26]
 7566 0c72 07F52573 		add	r3, r7, #660
 7567 0c76 0022     		movs	r2, #0
 7568 0c78 DA76     		strb	r2, [r3, #27]
 7569 0c7a 07F52573 		add	r3, r7, #660
 7570 0c7e 2822     		movs	r2, #40
 7571 0c80 1A77     		strb	r2, [r3, #28]
 7572 0c82 07F52573 		add	r3, r7, #660
 7573 0c86 3222     		movs	r2, #50
 7574 0c88 5A77     		strb	r2, [r3, #29]
 7575 0c8a 07F52573 		add	r3, r7, #660
 7576 0c8e 0022     		movs	r2, #0
 7577 0c90 9A77     		strb	r2, [r3, #30]
 7578 0c92 07F52573 		add	r3, r7, #660
 7579 0c96 3222     		movs	r2, #50
 7580 0c98 DA77     		strb	r2, [r3, #31]
 7581 0c9a 07F52573 		add	r3, r7, #660
 7582 0c9e 2822     		movs	r2, #40
 7583 0ca0 83F82020 		strb	r2, [r3, #32]
 7584 0ca4 07F52573 		add	r3, r7, #660
 7585 0ca8 2822     		movs	r2, #40
 7586 0caa 83F82120 		strb	r2, [r3, #33]
 7587 0cae 07F52573 		add	r3, r7, #660
 7588 0cb2 0022     		movs	r2, #0
 7589 0cb4 83F82220 		strb	r2, [r3, #34]
 966:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 967:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 968:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 969:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 7590              		.loc 1 969 0
 7591 0cb8 D7F8A034 		ldr	r3, [r7, #1184]
 7592 0cbc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7593              		.loc 1 960 0
 7594 0cc0 3C33     		adds	r3, r3, #60
 7595 0cc2 DAB2     		uxtb	r2, r3
 7596 0cc4 07F52573 		add	r3, r7, #660
 7597 0cc8 83F82320 		strb	r2, [r3, #35]
 7598 0ccc 97F89D34 		ldrb	r3, [r7, #1181]
 7599 0cd0 0A33     		adds	r3, r3, #10
 7600 0cd2 DAB2     		uxtb	r2, r3
 7601 0cd4 07F52573 		add	r3, r7, #660
 7602 0cd8 83F82420 		strb	r2, [r3, #36]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 177


 7603 0cdc 97F89D34 		ldrb	r3, [r7, #1181]
 7604 0ce0 0A33     		adds	r3, r3, #10
 7605 0ce2 DAB2     		uxtb	r2, r3
 7606 0ce4 07F52573 		add	r3, r7, #660
 7607 0ce8 83F82520 		strb	r2, [r3, #37]
 7608 0cec 97F89D34 		ldrb	r3, [r7, #1181]
 7609 0cf0 0A33     		adds	r3, r3, #10
 7610 0cf2 DAB2     		uxtb	r2, r3
 7611 0cf4 07F52573 		add	r3, r7, #660
 7612 0cf8 83F82620 		strb	r2, [r3, #38]
 7613 0cfc 97F89D34 		ldrb	r3, [r7, #1181]
 7614 0d00 0A33     		adds	r3, r3, #10
 7615 0d02 DAB2     		uxtb	r2, r3
 7616 0d04 07F52573 		add	r3, r7, #660
 7617 0d08 83F82720 		strb	r2, [r3, #39]
 970:..\src/command_processing.c ****         
 971:..\src/command_processing.c ****         // GENERIC PARAMS
 972:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 973:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 7618              		.loc 1 973 0
 7619 0d0c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7620 0d10 D7F8A014 		ldr	r1, [r7, #1184]
 7621 0d14 1346     		mov	r3, r2
 7622 0d16 DB00     		lsls	r3, r3, #3
 7623 0d18 9B1A     		subs	r3, r3, r2
 7624 0d1a 1B01     		lsls	r3, r3, #4
 7625 0d1c 0B44     		add	r3, r3, r1
 7626 0d1e 03F58873 		add	r3, r3, #272
 7627 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7628              		.loc 1 960 0
 7629 0d24 1433     		adds	r3, r3, #20
 7630 0d26 DAB2     		uxtb	r2, r3
 7631 0d28 07F52573 		add	r3, r7, #660
 7632 0d2c 83F82820 		strb	r2, [r3, #40]
 7633              		.loc 1 973 0
 7634 0d30 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 7635 0d34 D7F8A014 		ldr	r1, [r7, #1184]
 7636 0d38 1346     		mov	r3, r2
 7637 0d3a DB00     		lsls	r3, r3, #3
 7638 0d3c 9B1A     		subs	r3, r3, r2
 7639 0d3e 1B01     		lsls	r3, r3, #4
 7640 0d40 0B44     		add	r3, r3, r1
 7641 0d42 03F58873 		add	r3, r3, #272
 7642 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7643              		.loc 1 960 0
 7644 0d48 1433     		adds	r3, r3, #20
 7645 0d4a DAB2     		uxtb	r2, r3
 7646 0d4c 07F52573 		add	r3, r7, #660
 7647 0d50 83F82920 		strb	r2, [r3, #41]
 7648 0d54 07F52573 		add	r3, r7, #660
 7649 0d58 0022     		movs	r2, #0
 7650 0d5a 83F82A20 		strb	r2, [r3, #42]
 7651 0d5e 97F89C34 		ldrb	r3, [r7, #1180]
 7652 0d62 0A33     		adds	r3, r3, #10
 7653 0d64 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 178


 7654 0d66 07F52573 		add	r3, r7, #660
 7655 0d6a 83F82B20 		strb	r2, [r3, #43]
 7656 0d6e 97F89C34 		ldrb	r3, [r7, #1180]
 7657 0d72 0A33     		adds	r3, r3, #10
 7658 0d74 DAB2     		uxtb	r2, r3
 7659 0d76 07F52573 		add	r3, r7, #660
 7660 0d7a 83F82C20 		strb	r2, [r3, #44]
 7661 0d7e 97F89C34 		ldrb	r3, [r7, #1180]
 7662 0d82 0A33     		adds	r3, r3, #10
 7663 0d84 DAB2     		uxtb	r2, r3
 7664 0d86 07F52573 		add	r3, r7, #660
 7665 0d8a 83F82D20 		strb	r2, [r3, #45]
 7666 0d8e 97F89C34 		ldrb	r3, [r7, #1180]
 7667 0d92 0A33     		adds	r3, r3, #10
 7668 0d94 DAB2     		uxtb	r2, r3
 7669 0d96 07F52573 		add	r3, r7, #660
 7670 0d9a 83F82E20 		strb	r2, [r3, #46]
 7671 0d9e 97F89C34 		ldrb	r3, [r7, #1180]
 7672 0da2 0A33     		adds	r3, r3, #10
 7673 0da4 DAB2     		uxtb	r2, r3
 7674 0da6 07F52573 		add	r3, r7, #660
 7675 0daa 83F82F20 		strb	r2, [r3, #47]
 974:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 975:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7676              		.loc 1 975 0
 7677 0dae 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7678 0db2 D7F8A014 		ldr	r1, [r7, #1184]
 7679 0db6 1346     		mov	r3, r2
 7680 0db8 DB00     		lsls	r3, r3, #3
 7681 0dba 9B1A     		subs	r3, r3, r2
 7682 0dbc 1B01     		lsls	r3, r3, #4
 7683 0dbe 0B44     		add	r3, r3, r1
 7684 0dc0 03F58873 		add	r3, r3, #272
 7685 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7686              		.loc 1 960 0
 7687 0dc6 1433     		adds	r3, r3, #20
 7688 0dc8 DAB2     		uxtb	r2, r3
 7689 0dca 07F52573 		add	r3, r7, #660
 7690 0dce 83F83020 		strb	r2, [r3, #48]
 7691              		.loc 1 975 0
 7692 0dd2 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7693 0dd6 D7F8A014 		ldr	r1, [r7, #1184]
 7694 0dda 1346     		mov	r3, r2
 7695 0ddc DB00     		lsls	r3, r3, #3
 7696 0dde 9B1A     		subs	r3, r3, r2
 7697 0de0 1B01     		lsls	r3, r3, #4
 7698 0de2 0B44     		add	r3, r3, r1
 7699 0de4 03F58873 		add	r3, r3, #272
 7700 0de8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7701              		.loc 1 960 0
 7702 0dea 1433     		adds	r3, r3, #20
 7703 0dec DAB2     		uxtb	r2, r3
 7704 0dee 07F52573 		add	r3, r7, #660
 7705 0df2 83F83120 		strb	r2, [r3, #49]
 7706              		.loc 1 975 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 179


 7707 0df6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7708 0dfa D7F8A014 		ldr	r1, [r7, #1184]
 7709 0dfe 1346     		mov	r3, r2
 7710 0e00 DB00     		lsls	r3, r3, #3
 7711 0e02 9B1A     		subs	r3, r3, r2
 7712 0e04 1B01     		lsls	r3, r3, #4
 7713 0e06 0B44     		add	r3, r3, r1
 7714 0e08 03F58873 		add	r3, r3, #272
 7715 0e0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7716              		.loc 1 960 0
 7717 0e0e 1433     		adds	r3, r3, #20
 7718 0e10 DAB2     		uxtb	r2, r3
 7719 0e12 07F52573 		add	r3, r7, #660
 7720 0e16 83F83220 		strb	r2, [r3, #50]
 7721 0e1a 97F89C34 		ldrb	r3, [r7, #1180]
 7722 0e1e 0A33     		adds	r3, r3, #10
 7723 0e20 DAB2     		uxtb	r2, r3
 7724 0e22 07F52573 		add	r3, r7, #660
 7725 0e26 83F83320 		strb	r2, [r3, #51]
 7726 0e2a 97F89C34 		ldrb	r3, [r7, #1180]
 7727 0e2e 0A33     		adds	r3, r3, #10
 7728 0e30 DAB2     		uxtb	r2, r3
 7729 0e32 07F52573 		add	r3, r7, #660
 7730 0e36 83F83420 		strb	r2, [r3, #52]
 7731 0e3a 97F89C34 		ldrb	r3, [r7, #1180]
 7732 0e3e 0A33     		adds	r3, r3, #10
 7733 0e40 DAB2     		uxtb	r2, r3
 7734 0e42 07F52573 		add	r3, r7, #660
 7735 0e46 83F83520 		strb	r2, [r3, #53]
 7736 0e4a 97F89C34 		ldrb	r3, [r7, #1180]
 7737 0e4e 0A33     		adds	r3, r3, #10
 7738 0e50 DAB2     		uxtb	r2, r3
 7739 0e52 07F52573 		add	r3, r7, #660
 7740 0e56 83F83620 		strb	r2, [r3, #54]
 976:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7741              		.loc 1 976 0
 7742 0e5a 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7743 0e5e D7F8A014 		ldr	r1, [r7, #1184]
 7744 0e62 1346     		mov	r3, r2
 7745 0e64 DB00     		lsls	r3, r3, #3
 7746 0e66 9B1A     		subs	r3, r3, r2
 7747 0e68 1B01     		lsls	r3, r3, #4
 7748 0e6a 0B44     		add	r3, r3, r1
 7749 0e6c 03F58873 		add	r3, r3, #272
 7750 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7751              		.loc 1 960 0
 7752 0e72 1433     		adds	r3, r3, #20
 7753 0e74 DAB2     		uxtb	r2, r3
 7754 0e76 07F52573 		add	r3, r7, #660
 7755 0e7a 83F83720 		strb	r2, [r3, #55]
 977:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7756              		.loc 1 977 0
 7757 0e7e 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7758 0e82 D7F8A014 		ldr	r1, [r7, #1184]
 7759 0e86 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 180


 7760 0e88 DB00     		lsls	r3, r3, #3
 7761 0e8a 9B1A     		subs	r3, r3, r2
 7762 0e8c 1B01     		lsls	r3, r3, #4
 7763 0e8e 0B44     		add	r3, r3, r1
 7764 0e90 03F58873 		add	r3, r3, #272
 7765 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7766              		.loc 1 960 0
 7767 0e96 1433     		adds	r3, r3, #20
 7768 0e98 DAB2     		uxtb	r2, r3
 7769 0e9a 07F52573 		add	r3, r7, #660
 7770 0e9e 83F83820 		strb	r2, [r3, #56]
 7771 0ea2 97F89C34 		ldrb	r3, [r7, #1180]
 7772 0ea6 0A33     		adds	r3, r3, #10
 7773 0ea8 DAB2     		uxtb	r2, r3
 7774 0eaa 07F52573 		add	r3, r7, #660
 7775 0eae 83F83920 		strb	r2, [r3, #57]
 7776 0eb2 97F89C34 		ldrb	r3, [r7, #1180]
 7777 0eb6 0A33     		adds	r3, r3, #10
 7778 0eb8 DAB2     		uxtb	r2, r3
 7779 0eba 07F52573 		add	r3, r7, #660
 7780 0ebe 83F83A20 		strb	r2, [r3, #58]
 7781 0ec2 97F89C34 		ldrb	r3, [r7, #1180]
 7782 0ec6 0A33     		adds	r3, r3, #10
 7783 0ec8 DAB2     		uxtb	r2, r3
 7784 0eca 07F52573 		add	r3, r7, #660
 7785 0ece 83F83B20 		strb	r2, [r3, #59]
 7786 0ed2 97F89C34 		ldrb	r3, [r7, #1180]
 7787 0ed6 0A33     		adds	r3, r3, #10
 7788 0ed8 DAB2     		uxtb	r2, r3
 7789 0eda 07F52573 		add	r3, r7, #660
 7790 0ede 83F83C20 		strb	r2, [r3, #60]
 7791 0ee2 97F89C34 		ldrb	r3, [r7, #1180]
 7792 0ee6 0A33     		adds	r3, r3, #10
 7793 0ee8 DAB2     		uxtb	r2, r3
 7794 0eea 07F52573 		add	r3, r7, #660
 7795 0eee 83F83D20 		strb	r2, [r3, #61]
 7796 0ef2 97F89C34 		ldrb	r3, [r7, #1180]
 7797 0ef6 0A33     		adds	r3, r3, #10
 7798 0ef8 DAB2     		uxtb	r2, r3
 7799 0efa 07F52573 		add	r3, r7, #660
 7800 0efe 83F83E20 		strb	r2, [r3, #62]
 978:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7801              		.loc 1 978 0
 7802 0f02 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7803 0f06 D7F8A014 		ldr	r1, [r7, #1184]
 7804 0f0a 1346     		mov	r3, r2
 7805 0f0c DB00     		lsls	r3, r3, #3
 7806 0f0e 9B1A     		subs	r3, r3, r2
 7807 0f10 1B01     		lsls	r3, r3, #4
 7808 0f12 0B44     		add	r3, r3, r1
 7809 0f14 03F58873 		add	r3, r3, #272
 7810 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7811              		.loc 1 960 0
 7812 0f1a 1433     		adds	r3, r3, #20
 7813 0f1c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 181


 7814 0f1e 07F52573 		add	r3, r7, #660
 7815 0f22 83F83F20 		strb	r2, [r3, #63]
 979:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7816              		.loc 1 979 0
 7817 0f26 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 7818 0f2a D7F8A014 		ldr	r1, [r7, #1184]
 7819 0f2e 1346     		mov	r3, r2
 7820 0f30 DB00     		lsls	r3, r3, #3
 7821 0f32 9B1A     		subs	r3, r3, r2
 7822 0f34 1B01     		lsls	r3, r3, #4
 7823 0f36 0B44     		add	r3, r3, r1
 7824 0f38 03F58873 		add	r3, r3, #272
 7825 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7826              		.loc 1 960 0
 7827 0f3e 1433     		adds	r3, r3, #20
 7828 0f40 DAB2     		uxtb	r2, r3
 7829 0f42 07F52573 		add	r3, r7, #660
 7830 0f46 83F84020 		strb	r2, [r3, #64]
 7831 0f4a 07F52573 		add	r3, r7, #660
 7832 0f4e 1422     		movs	r2, #20
 7833 0f50 83F84120 		strb	r2, [r3, #65]
 7834 0f54 07F52573 		add	r3, r7, #660
 7835 0f58 1522     		movs	r2, #21
 7836 0f5a 83F84220 		strb	r2, [r3, #66]
 7837 0f5e 07F52573 		add	r3, r7, #660
 7838 0f62 3222     		movs	r2, #50
 7839 0f64 83F84320 		strb	r2, [r3, #67]
 7840 0f68 07F52573 		add	r3, r7, #660
 7841 0f6c 3222     		movs	r2, #50
 7842 0f6e 83F84420 		strb	r2, [r3, #68]
 7843 0f72 07F52573 		add	r3, r7, #660
 7844 0f76 3222     		movs	r2, #50
 7845 0f78 83F84520 		strb	r2, [r3, #69]
 7846 0f7c 07F52573 		add	r3, r7, #660
 7847 0f80 0022     		movs	r2, #0
 7848 0f82 83F84620 		strb	r2, [r3, #70]
 980:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE
 981:..\src/command_processing.c ****     };
 982:..\src/command_processing.c ****     
 983:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7849              		.loc 1 983 0
 7850 0f86 07F5BC73 		add	r3, r7, #376
 7851 0f8a CA4A     		ldr	r2, .L345
 7852 0f8c 1846     		mov	r0, r3
 7853 0f8e 1146     		mov	r1, r2
 7854 0f90 4FF48E73 		mov	r3, #284
 7855 0f94 1A46     		mov	r2, r3
 7856 0f96 FFF7FEFF 		bl	memcpy
 984:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 985:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 986:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 987:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 988:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 989:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
 990:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
 991:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 182


 992:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
 993:..\src/command_processing.c ****         
 994:..\src/command_processing.c ****         // GENERIC PARAMS
 995:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
 996:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
 997:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
 998:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
 999:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1000:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1001:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1002:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1003:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:"
1004:..\src/command_processing.c ****     };
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     //Parameters menu
1007:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7857              		.loc 1 1007 0
 7858 0f9a 07F58073 		add	r3, r7, #256
 7859 0f9e 0022     		movs	r2, #0
 7860 0fa0 1A60     		str	r2, [r3]
 7861 0fa2 0433     		adds	r3, r3, #4
 7862 0fa4 7222     		movs	r2, #114
 7863 0fa6 0021     		movs	r1, #0
 7864 0fa8 1846     		mov	r0, r3
 7865 0faa FFF7FEFF 		bl	memset
1008:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7866              		.loc 1 1008 0
 7867 0fae 07F58070 		add	r0, r7, #256
 7868 0fb2 6423     		movs	r3, #100
 7869 0fb4 0A22     		movs	r2, #10
 7870 0fb6 C049     		ldr	r1, .L345+4
 7871 0fb8 FFF7FEFF 		bl	sprintf
1009:..\src/command_processing.c **** 
1010:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7872              		.loc 1 1010 0
 7873 0fbc 07F1D803 		add	r3, r7, #216
 7874 0fc0 BE4A     		ldr	r2, .L345+8
 7875 0fc2 1A60     		str	r2, [r3]
 7876 0fc4 07F1D803 		add	r3, r7, #216
 7877 0fc8 BD4A     		ldr	r2, .L345+12
 7878 0fca 5A60     		str	r2, [r3, #4]
 7879 0fcc 07F1D803 		add	r3, r7, #216
 7880 0fd0 BC4A     		ldr	r2, .L345+16
 7881 0fd2 9A60     		str	r2, [r3, #8]
 7882 0fd4 07F1D803 		add	r3, r7, #216
 7883 0fd8 BB4A     		ldr	r2, .L345+20
 7884 0fda DA60     		str	r2, [r3, #12]
 7885 0fdc 07F1D803 		add	r3, r7, #216
 7886 0fe0 BA4A     		ldr	r2, .L345+24
 7887 0fe2 1A61     		str	r2, [r3, #16]
 7888 0fe4 07F1D803 		add	r3, r7, #216
 7889 0fe8 B94A     		ldr	r2, .L345+28
 7890 0fea 5A61     		str	r2, [r3, #20]
 7891 0fec 07F1D803 		add	r3, r7, #216
 7892 0ff0 07F58072 		add	r2, r7, #256
 7893 0ff4 9A61     		str	r2, [r3, #24]
 7894 0ff6 07F1D803 		add	r3, r7, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 183


 7895 0ffa B64A     		ldr	r2, .L345+32
 7896 0ffc DA61     		str	r2, [r3, #28]
 7897 0ffe 07F1D803 		add	r3, r7, #216
 7898 1002 B54A     		ldr	r2, .L345+36
 7899 1004 1A62     		str	r2, [r3, #32]
 7900 1006 07F1D803 		add	r3, r7, #216
 7901 100a B44A     		ldr	r2, .L345+40
 7902 100c 5A62     		str	r2, [r3, #36]
1011:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1012:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1013:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1014:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1015:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1016:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1017:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1018:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1019:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1020:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\nThe board will reset\n"                         
1021:..\src/command_processing.c ****     };   
1022:..\src/command_processing.c ****     
1023:..\src/command_processing.c ****     uint8 NUM_MENU[28] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 7903              		.loc 1 1023 0
 7904 100e 07F1BC03 		add	r3, r7, #188
 7905 1012 B34A     		ldr	r2, .L345+44
 7906 1014 1C46     		mov	r4, r3
 7907 1016 1546     		mov	r5, r2
 7908 1018 2868     		ldr	r0, [r5]	@ unaligned
 7909 101a 6968     		ldr	r1, [r5, #4]	@ unaligned
 7910 101c AA68     		ldr	r2, [r5, #8]	@ unaligned
 7911 101e EB68     		ldr	r3, [r5, #12]	@ unaligned
 7912 1020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7913 1022 2869     		ldr	r0, [r5, #16]	@ unaligned
 7914 1024 6969     		ldr	r1, [r5, #20]	@ unaligned
 7915 1026 AA69     		ldr	r2, [r5, #24]	@ unaligned
 7916 1028 07C4     		stmia	r4!, {r0, r1, r2}
1024:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 7917              		.loc 1 1024 0
 7918 102a 07F1B003 		add	r3, r7, #176
 7919 102e AD4A     		ldr	r2, .L345+48
 7920 1030 1068     		ldr	r0, [r2]	@ unaligned
 7921 1032 5168     		ldr	r1, [r2, #4]	@ unaligned
 7922 1034 03C3     		stmia	r3!, {r0, r1}
 7923 1036 127A     		ldrb	r2, [r2, #8]
 7924 1038 1A70     		strb	r2, [r3]
1025:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 7925              		.loc 1 1025 0
 7926 103a 07F19C03 		add	r3, r7, #156
 7927 103e AA4A     		ldr	r2, .L345+52
 7928 1040 1C46     		mov	r4, r3
 7929 1042 1546     		mov	r5, r2
 7930 1044 2868     		ldr	r0, [r5]	@ unaligned
 7931 1046 6968     		ldr	r1, [r5, #4]	@ unaligned
 7932 1048 AA68     		ldr	r2, [r5, #8]	@ unaligned
 7933 104a EB68     		ldr	r3, [r5, #12]	@ unaligned
 7934 104c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7935 104e 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 7936 1050 2380     		strh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 184


1026:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 7937              		.loc 1 1026 0
 7938 1052 2323     		movs	r3, #35
 7939 1054 87F89B34 		strb	r3, [r7, #1179]
1027:..\src/command_processing.c **** 
1028:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1029:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1030:..\src/command_processing.c ****     
1031:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1032:..\src/command_processing.c **** 
1033:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1034:..\src/command_processing.c ****     
1035:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1036:..\src/command_processing.c ****     j = 0;
 7940              		.loc 1 1036 0
 7941 1058 0023     		movs	r3, #0
 7942 105a 87F8A634 		strb	r3, [r7, #1190]
1037:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7943              		.loc 1 1037 0
 7944 105e 0023     		movs	r3, #0
 7945 1060 87F8A734 		strb	r3, [r7, #1191]
 7946 1064 21E0     		b	.L279
 7947              	.L282:
1038:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7948              		.loc 1 1038 0
 7949 1066 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7950 106a 07F1B002 		add	r2, r7, #176
 7951 106e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7952 1070 1A46     		mov	r2, r3
 7953 1072 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7954 1076 0133     		adds	r3, r3, #1
 7955 1078 9A42     		cmp	r2, r3
 7956 107a 0BD1     		bne	.L280
1039:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 7957              		.loc 1 1039 0
 7958 107c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7959 1080 07F15402 		add	r2, r7, #84
 7960 1084 0121     		movs	r1, #1
 7961 1086 D154     		strb	r1, [r2, r3]
1040:..\src/command_processing.c ****             j++;
 7962              		.loc 1 1040 0
 7963 1088 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7964 108c 0133     		adds	r3, r3, #1
 7965 108e 87F8A634 		strb	r3, [r7, #1190]
 7966 1092 05E0     		b	.L281
 7967              	.L280:
1041:..\src/command_processing.c ****         }
1042:..\src/command_processing.c ****         else {
1043:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 7968              		.loc 1 1043 0
 7969 1094 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7970 1098 07F15402 		add	r2, r7, #84
 7971 109c 0021     		movs	r1, #0
 7972 109e D154     		strb	r1, [r2, r3]
 7973              	.L281:
1037:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7974              		.loc 1 1037 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 185


 7975 10a0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7976 10a4 0133     		adds	r3, r3, #1
 7977 10a6 87F8A734 		strb	r3, [r7, #1191]
 7978              	.L279:
1037:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7979              		.loc 1 1037 0 is_stmt 0 discriminator 1
 7980 10aa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7981 10ae 462B     		cmp	r3, #70
 7982 10b0 D9D9     		bls	.L282
1044:..\src/command_processing.c ****         }
1045:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1046:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1047:..\src/command_processing.c ****     j = 0;
 7983              		.loc 1 1047 0 is_stmt 1
 7984 10b2 0023     		movs	r3, #0
 7985 10b4 87F8A634 		strb	r3, [r7, #1190]
1048:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7986              		.loc 1 1048 0
 7987 10b8 0023     		movs	r3, #0
 7988 10ba 87F8A734 		strb	r3, [r7, #1191]
 7989 10be 21E0     		b	.L283
 7990              	.L286:
1049:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7991              		.loc 1 1049 0
 7992 10c0 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7993 10c4 07F19C02 		add	r2, r7, #156
 7994 10c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7995 10ca 1A46     		mov	r2, r3
 7996 10cc 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7997 10d0 0133     		adds	r3, r3, #1
 7998 10d2 9A42     		cmp	r2, r3
 7999 10d4 0BD1     		bne	.L284
1050:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8000              		.loc 1 1050 0
 8001 10d6 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8002 10da 07F10C02 		add	r2, r7, #12
 8003 10de 0121     		movs	r1, #1
 8004 10e0 D154     		strb	r1, [r2, r3]
1051:..\src/command_processing.c ****             j++;
 8005              		.loc 1 1051 0
 8006 10e2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8007 10e6 0133     		adds	r3, r3, #1
 8008 10e8 87F8A634 		strb	r3, [r7, #1190]
 8009 10ec 05E0     		b	.L285
 8010              	.L284:
1052:..\src/command_processing.c ****         }
1053:..\src/command_processing.c ****         else {
1054:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8011              		.loc 1 1054 0
 8012 10ee 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8013 10f2 07F10C02 		add	r2, r7, #12
 8014 10f6 0021     		movs	r1, #0
 8015 10f8 D154     		strb	r1, [r2, r3]
 8016              	.L285:
1048:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8017              		.loc 1 1048 0 discriminator 2
 8018 10fa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 186


 8019 10fe 0133     		adds	r3, r3, #1
 8020 1100 87F8A734 		strb	r3, [r7, #1191]
 8021              	.L283:
1048:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8022              		.loc 1 1048 0 is_stmt 0 discriminator 1
 8023 1104 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8024 1108 462B     		cmp	r3, #70
 8025 110a D9D9     		bls	.L286
1055:..\src/command_processing.c ****         }
1056:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1057:..\src/command_processing.c ****         
1058:..\src/command_processing.c ****     if (!index) {
 8026              		.loc 1 1058 0 is_stmt 1
 8027 110c BB1D     		adds	r3, r7, #6
 8028 110e 1B88     		ldrh	r3, [r3]
 8029 1110 002B     		cmp	r3, #0
 8030 1112 17D1     		bne	.L287
1059:..\src/command_processing.c ****         // Get parameters list with relative types
1060:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8031              		.loc 1 1060 0
 8032 1114 07F52574 		add	r4, r7, #660
 8033 1118 07F53772 		add	r2, r7, #732
 8034 111c 07F54971 		add	r1, r7, #804
 8035 1120 07F55B70 		add	r0, r7, #876
 8036 1124 07F1D803 		add	r3, r7, #216
 8037 1128 0393     		str	r3, [sp, #12]
 8038 112a 07F15403 		add	r3, r7, #84
 8039 112e 0293     		str	r3, [sp, #8]
 8040 1130 07F5BC73 		add	r3, r7, #376
 8041 1134 0193     		str	r3, [sp, #4]
 8042 1136 07F1BC03 		add	r3, r7, #188
 8043 113a 0093     		str	r3, [sp]
 8044 113c 2346     		mov	r3, r4
 8045 113e FFF7FEFF 		bl	get_param_list
1061:..\src/command_processing.c ****     }
1062:..\src/command_processing.c ****     else {
1063:..\src/command_processing.c ****         // Set specific parameter        
1064:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1065:..\src/command_processing.c ****         
1066:..\src/command_processing.c ****         // Find size of data
1067:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1068:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1069:..\src/command_processing.c ****                 sod = 1; break;
1070:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1071:..\src/command_processing.c ****                 sod = 2; break;
1072:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1073:..\src/command_processing.c ****                 sod = 4; break;
1074:..\src/command_processing.c ****         }   
1075:..\src/command_processing.c ****             
1076:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1077:..\src/command_processing.c ****             // Use default specifications for param setting
1078:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1079:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1080:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1081:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1082:..\src/command_processing.c ****                     }
1083:..\src/command_processing.c ****                     break;                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 187


1084:..\src/command_processing.c ****                 case TYPE_STRING:
1085:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1086:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1087:..\src/command_processing.c ****                     }
1088:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1089:..\src/command_processing.c ****                 break; 
1090:..\src/command_processing.c ****                 case TYPE_INT8:
1091:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1092:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1093:..\src/command_processing.c ****                     }
1094:..\src/command_processing.c ****                     break;                    
1095:..\src/command_processing.c ****                 case TYPE_INT16:
1096:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1097:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1098:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1099:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1100:..\src/command_processing.c ****                         }
1101:..\src/command_processing.c ****                     }                   
1102:..\src/command_processing.c ****                     break;
1103:..\src/command_processing.c ****                 case TYPE_UINT16:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1106:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1107:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1108:..\src/command_processing.c ****                         }
1109:..\src/command_processing.c ****                     }
1110:..\src/command_processing.c ****                     break;
1111:..\src/command_processing.c ****                 case TYPE_INT32:
1112:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1113:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1114:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1115:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1116:..\src/command_processing.c ****                         }
1117:..\src/command_processing.c ****                     }
1118:..\src/command_processing.c ****                     break;
1119:..\src/command_processing.c ****                 case TYPE_UINT32:
1120:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1121:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1122:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1123:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1124:..\src/command_processing.c ****                         }
1125:..\src/command_processing.c ****                     }
1126:..\src/command_processing.c ****                     break;
1127:..\src/command_processing.c ****                 case TYPE_FLOAT:
1128:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1129:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1130:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1131:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1132:..\src/command_processing.c ****                         }
1133:..\src/command_processing.c ****                     }
1134:..\src/command_processing.c ****                     break;
1135:..\src/command_processing.c ****                 default:
1136:..\src/command_processing.c ****                     break;
1137:..\src/command_processing.c ****             }
1138:..\src/command_processing.c ****         }
1139:..\src/command_processing.c ****         else {  
1140:..\src/command_processing.c ****             // Use custom specifications for param setting
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 188


1141:..\src/command_processing.c ****             set_custom_param(index);
1142:..\src/command_processing.c ****         }
1143:..\src/command_processing.c ****         
1144:..\src/command_processing.c ****         // Store param also in user_emg structure
1145:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1146:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1147:..\src/command_processing.c ****         }
1148:..\src/command_processing.c ****         
1149:..\src/command_processing.c ****         // Perform chip reset if needed
1150:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1151:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1152:..\src/command_processing.c ****             do {
1153:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1154:..\src/command_processing.c ****                 idx++;
1155:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1156:..\src/command_processing.c ****             
1157:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1158:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1159:..\src/command_processing.c ****             }   
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****     }
1162:..\src/command_processing.c **** } 
 8046              		.loc 1 1162 0
 8047 1142 D9E2     		b	.L338
 8048              	.L287:
1064:..\src/command_processing.c ****         
 8049              		.loc 1 1064 0
 8050 1144 BB1D     		adds	r3, r7, #6
 8051 1146 1B88     		ldrh	r3, [r3]	@ movhi
 8052 1148 DBB2     		uxtb	r3, r3
 8053 114a 013B     		subs	r3, r3, #1
 8054 114c 87F89A34 		strb	r3, [r7, #1178]
1067:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8055              		.loc 1 1067 0
 8056 1150 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8057 1154 07F54972 		add	r2, r7, #804
 8058 1158 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8059 115a 092B     		cmp	r3, #9
 8060 115c 22D8     		bhi	.L289
 8061 115e 01A2     		adr	r2, .L291
 8062 1160 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8063              		.p2align 2
 8064              	.L291:
 8065 1164 8D110000 		.word	.L290+1
 8066 1168 8D110000 		.word	.L290+1
 8067 116c 8D110000 		.word	.L290+1
 8068 1170 95110000 		.word	.L292+1
 8069 1174 95110000 		.word	.L292+1
 8070 1178 9D110000 		.word	.L293+1
 8071 117c 9D110000 		.word	.L293+1
 8072 1180 9D110000 		.word	.L293+1
 8073 1184 A5110000 		.word	.L289+1
 8074 1188 8D110000 		.word	.L290+1
 8075              		.p2align 1
 8076              	.L290:
1069:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8077              		.loc 1 1069 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 189


 8078 118c 0123     		movs	r3, #1
 8079 118e 87F8A534 		strb	r3, [r7, #1189]
 8080 1192 07E0     		b	.L289
 8081              	.L292:
1071:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8082              		.loc 1 1071 0
 8083 1194 0223     		movs	r3, #2
 8084 1196 87F8A534 		strb	r3, [r7, #1189]
 8085 119a 03E0     		b	.L289
 8086              	.L293:
1073:..\src/command_processing.c ****         }   
 8087              		.loc 1 1073 0
 8088 119c 0423     		movs	r3, #4
 8089 119e 87F8A534 		strb	r3, [r7, #1189]
 8090 11a2 00BF     		nop
 8091              	.L289:
1076:..\src/command_processing.c ****             // Use default specifications for param setting
 8092              		.loc 1 1076 0
 8093 11a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8094 11a8 07F10C02 		add	r2, r7, #12
 8095 11ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8096 11ae 002B     		cmp	r3, #0
 8097 11b0 40F03682 		bne	.L294
1078:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8098              		.loc 1 1078 0
 8099 11b4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8100 11b8 07F54972 		add	r2, r7, #804
 8101 11bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8102 11be 092B     		cmp	r3, #9
 8103 11c0 00F23682 		bhi	.L337
 8104 11c4 01A2     		adr	r2, .L297
 8105 11c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8106 11ca 00BF     		.p2align 2
 8107              	.L297:
 8108 11cc F5110000 		.word	.L296+1
 8109 11d0 AB120000 		.word	.L298+1
 8110 11d4 F5110000 		.word	.L296+1
 8111 11d8 3B130000 		.word	.L299+1
 8112 11dc D1130000 		.word	.L300+1
 8113 11e0 65140000 		.word	.L301+1
 8114 11e4 F9140000 		.word	.L302+1
 8115 11e8 8D150000 		.word	.L303+1
 8116 11ec 31160000 		.word	.L337+1
 8117 11f0 41120000 		.word	.L304+1
 8118              		.p2align 1
 8119              	.L296:
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8120              		.loc 1 1080 0
 8121 11f4 0023     		movs	r3, #0
 8122 11f6 87F8A734 		strb	r3, [r7, #1191]
 8123 11fa 17E0     		b	.L305
 8124              	.L306:
1081:..\src/command_processing.c ****                     }
 8125              		.loc 1 1081 0 discriminator 3
 8126 11fc 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8127 1200 07F55B73 		add	r3, r7, #876
 8128 1204 53F82230 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 190


 8129 1208 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8130 120c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8131 1210 01FB02F2 		mul	r2, r1, r2
 8132 1214 1344     		add	r3, r3, r2
 8133 1216 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8134 121a 0332     		adds	r2, r2, #3
 8135 121c 3349     		ldr	r1, .L345+56
 8136 121e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8137 1220 1A70     		strb	r2, [r3]
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8138              		.loc 1 1080 0 discriminator 3
 8139 1222 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8140 1226 0133     		adds	r3, r3, #1
 8141 1228 87F8A734 		strb	r3, [r7, #1191]
 8142              	.L305:
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8143              		.loc 1 1080 0 is_stmt 0 discriminator 1
 8144 122c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8145 1230 07F53772 		add	r2, r7, #732
 8146 1234 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8147 1236 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8148 123a 9A42     		cmp	r2, r3
 8149 123c DED3     		bcc	.L306
1083:..\src/command_processing.c ****                 case TYPE_STRING:
 8150              		.loc 1 1083 0 is_stmt 1
 8151 123e F8E1     		b	.L332
 8152              	.L304:
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8153              		.loc 1 1085 0
 8154 1240 0023     		movs	r3, #0
 8155 1242 87F8A734 		strb	r3, [r7, #1191]
 8156 1246 17E0     		b	.L308
 8157              	.L309:
1086:..\src/command_processing.c ****                     }
 8158              		.loc 1 1086 0 discriminator 3
 8159 1248 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8160 124c 07F55B73 		add	r3, r7, #876
 8161 1250 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8162 1254 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8163 1258 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8164 125c 01FB02F2 		mul	r2, r1, r2
 8165 1260 1344     		add	r3, r3, r2
 8166 1262 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8167 1266 0332     		adds	r2, r2, #3
 8168 1268 2049     		ldr	r1, .L345+56
 8169 126a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8170 126c 1A70     		strb	r2, [r3]
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8171              		.loc 1 1085 0 discriminator 3
 8172 126e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8173 1272 0133     		adds	r3, r3, #1
 8174 1274 87F8A734 		strb	r3, [r7, #1191]
 8175              	.L308:
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8176              		.loc 1 1085 0 is_stmt 0 discriminator 1
 8177 1278 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8178 127c 07F53772 		add	r2, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 191


 8179 1280 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8180 1282 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8181 1286 9A42     		cmp	r2, r3
 8182 1288 DED3     		bcc	.L309
1088:..\src/command_processing.c ****                 break; 
 8183              		.loc 1 1088 0 is_stmt 1
 8184 128a 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8185 128e 07F55B73 		add	r3, r7, #876
 8186 1292 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8187 1296 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8188 129a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8189 129e 01FB02F2 		mul	r2, r1, r2
 8190 12a2 1344     		add	r3, r3, r2
 8191 12a4 0022     		movs	r2, #0
 8192 12a6 1A70     		strb	r2, [r3]
1089:..\src/command_processing.c ****                 case TYPE_INT8:
 8193              		.loc 1 1089 0
 8194 12a8 C3E1     		b	.L332
 8195              	.L298:
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8196              		.loc 1 1091 0
 8197 12aa 0023     		movs	r3, #0
 8198 12ac 87F8A734 		strb	r3, [r7, #1191]
 8199 12b0 39E0     		b	.L310
 8200              	.L346:
 8201 12b2 00BF     		.align	2
 8202              	.L345:
 8203 12b4 D00B0000 		.word	.LC106
 8204 12b8 A0010000 		.word	.LC107
 8205 12bc 14020000 		.word	.LC108
 8206 12c0 90020000 		.word	.LC109
 8207 12c4 D0020000 		.word	.LC110
 8208 12c8 FC020000 		.word	.LC111
 8209 12cc 14030000 		.word	.LC112
 8210 12d0 3C030000 		.word	.LC113
 8211 12d4 98030000 		.word	.LC114
 8212 12d8 D8030000 		.word	.LC115
 8213 12dc 20040000 		.word	.LC116
 8214 12e0 EC0C0000 		.word	.LC73
 8215 12e4 080D0000 		.word	.LC74
 8216 12e8 140D0000 		.word	.LC75
 8217 12ec 00000000 		.word	g_rx
 8218              	.L311:
1092:..\src/command_processing.c ****                     }
 8219              		.loc 1 1092 0 discriminator 3
 8220 12f0 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8221 12f4 07F55B73 		add	r3, r7, #876
 8222 12f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8223 12fc 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8224 1300 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8225 1304 01FB02F2 		mul	r2, r1, r2
 8226 1308 1344     		add	r3, r3, r2
 8227 130a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8228 130e 0332     		adds	r2, r2, #3
 8229 1310 C649     		ldr	r1, .L347
 8230 1312 0A44     		add	r2, r2, r1
 8231 1314 92F90020 		ldrsb	r2, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 192


 8232 1318 D2B2     		uxtb	r2, r2
 8233 131a 1A70     		strb	r2, [r3]
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8234              		.loc 1 1091 0 discriminator 3
 8235 131c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8236 1320 0133     		adds	r3, r3, #1
 8237 1322 87F8A734 		strb	r3, [r7, #1191]
 8238              	.L310:
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8239              		.loc 1 1091 0 is_stmt 0 discriminator 1
 8240 1326 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8241 132a 07F53772 		add	r2, r7, #732
 8242 132e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8243 1330 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8244 1334 9A42     		cmp	r2, r3
 8245 1336 DBD3     		bcc	.L311
1094:..\src/command_processing.c ****                 case TYPE_INT16:
 8246              		.loc 1 1094 0 is_stmt 1
 8247 1338 7BE1     		b	.L332
 8248              	.L299:
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8249              		.loc 1 1096 0
 8250 133a 0023     		movs	r3, #0
 8251 133c 87F8A734 		strb	r3, [r7, #1191]
 8252 1340 3CE0     		b	.L312
 8253              	.L315:
1097:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8254              		.loc 1 1097 0
 8255 1342 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8256 1346 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8257 134a 02FB03F3 		mul	r3, r2, r3
 8258 134e 0333     		adds	r3, r3, #3
 8259 1350 B64A     		ldr	r2, .L347
 8260 1352 1344     		add	r3, r3, r2
 8261 1354 B3F90030 		ldrsh	r3, [r3]
 8262 1358 A7F89834 		strh	r3, [r7, #1176]	@ movhi
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8263              		.loc 1 1098 0
 8264 135c 0023     		movs	r3, #0
 8265 135e 87F8A634 		strb	r3, [r7, #1190]
 8266 1362 20E0     		b	.L313
 8267              	.L314:
1099:..\src/command_processing.c ****                         }
 8268              		.loc 1 1099 0 discriminator 3
 8269 1364 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8270 1368 07F55B73 		add	r3, r7, #876
 8271 136c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8272 1370 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8273 1374 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8274 1378 01FB03F3 		mul	r3, r1, r3
 8275 137c 1846     		mov	r0, r3
 8276 137e 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8277 1382 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8278 1386 CB1A     		subs	r3, r1, r3
 8279 1388 0344     		add	r3, r3, r0
 8280 138a 013B     		subs	r3, r3, #1
 8281 138c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 193


 8282 138e 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8283 1392 07F59361 		add	r1, r7, #1176
 8284 1396 0A44     		add	r2, r2, r1
 8285 1398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8286 139a 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8287              		.loc 1 1098 0 discriminator 3
 8288 139c 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8289 13a0 0133     		adds	r3, r3, #1
 8290 13a2 87F8A634 		strb	r3, [r7, #1190]
 8291              	.L313:
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8292              		.loc 1 1098 0 is_stmt 0 discriminator 1
 8293 13a6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8294 13aa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8295 13ae 9A42     		cmp	r2, r3
 8296 13b0 D8D3     		bcc	.L314
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8297              		.loc 1 1096 0 is_stmt 1 discriminator 2
 8298 13b2 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8299 13b6 0133     		adds	r3, r3, #1
 8300 13b8 87F8A734 		strb	r3, [r7, #1191]
 8301              	.L312:
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8302              		.loc 1 1096 0 is_stmt 0 discriminator 1
 8303 13bc 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8304 13c0 07F53772 		add	r2, r7, #732
 8305 13c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8306 13c6 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8307 13ca 9A42     		cmp	r2, r3
 8308 13cc B9D3     		bcc	.L315
1102:..\src/command_processing.c ****                 case TYPE_UINT16:
 8309              		.loc 1 1102 0 is_stmt 1
 8310 13ce 30E1     		b	.L332
 8311              	.L300:
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8312              		.loc 1 1104 0
 8313 13d0 0023     		movs	r3, #0
 8314 13d2 87F8A734 		strb	r3, [r7, #1191]
 8315 13d6 3BE0     		b	.L316
 8316              	.L319:
1105:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8317              		.loc 1 1105 0
 8318 13d8 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8319 13dc 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8320 13e0 02FB03F3 		mul	r3, r2, r3
 8321 13e4 0333     		adds	r3, r3, #3
 8322 13e6 914A     		ldr	r2, .L347
 8323 13e8 1344     		add	r3, r3, r2
 8324 13ea 1B88     		ldrh	r3, [r3]
 8325 13ec A7F89634 		strh	r3, [r7, #1174]	@ movhi
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8326              		.loc 1 1106 0
 8327 13f0 0023     		movs	r3, #0
 8328 13f2 87F8A634 		strb	r3, [r7, #1190]
 8329 13f6 20E0     		b	.L317
 8330              	.L318:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 194


1107:..\src/command_processing.c ****                         }
 8331              		.loc 1 1107 0 discriminator 3
 8332 13f8 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8333 13fc 07F55B73 		add	r3, r7, #876
 8334 1400 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8335 1404 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8336 1408 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8337 140c 01FB03F3 		mul	r3, r1, r3
 8338 1410 1846     		mov	r0, r3
 8339 1412 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8340 1416 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8341 141a CB1A     		subs	r3, r1, r3
 8342 141c 0344     		add	r3, r3, r0
 8343 141e 013B     		subs	r3, r3, #1
 8344 1420 1344     		add	r3, r3, r2
 8345 1422 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8346 1426 07F29641 		addw	r1, r7, #1174
 8347 142a 0A44     		add	r2, r2, r1
 8348 142c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8349 142e 1A70     		strb	r2, [r3]
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8350              		.loc 1 1106 0 discriminator 3
 8351 1430 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8352 1434 0133     		adds	r3, r3, #1
 8353 1436 87F8A634 		strb	r3, [r7, #1190]
 8354              	.L317:
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8355              		.loc 1 1106 0 is_stmt 0 discriminator 1
 8356 143a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8357 143e 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8358 1442 9A42     		cmp	r2, r3
 8359 1444 D8D3     		bcc	.L318
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8360              		.loc 1 1104 0 is_stmt 1 discriminator 2
 8361 1446 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8362 144a 0133     		adds	r3, r3, #1
 8363 144c 87F8A734 		strb	r3, [r7, #1191]
 8364              	.L316:
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8365              		.loc 1 1104 0 is_stmt 0 discriminator 1
 8366 1450 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8367 1454 07F53772 		add	r2, r7, #732
 8368 1458 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8369 145a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8370 145e 9A42     		cmp	r2, r3
 8371 1460 BAD3     		bcc	.L319
1110:..\src/command_processing.c ****                 case TYPE_INT32:
 8372              		.loc 1 1110 0 is_stmt 1
 8373 1462 E6E0     		b	.L332
 8374              	.L301:
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8375              		.loc 1 1112 0
 8376 1464 0023     		movs	r3, #0
 8377 1466 87F8A734 		strb	r3, [r7, #1191]
 8378 146a 3BE0     		b	.L320
 8379              	.L323:
1113:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 195


 8380              		.loc 1 1113 0
 8381 146c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8382 1470 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8383 1474 02FB03F3 		mul	r3, r2, r3
 8384 1478 0333     		adds	r3, r3, #3
 8385 147a 6C4A     		ldr	r2, .L347
 8386 147c 1344     		add	r3, r3, r2
 8387 147e 1B68     		ldr	r3, [r3]
 8388 1480 C7F89034 		str	r3, [r7, #1168]
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8389              		.loc 1 1114 0
 8390 1484 0023     		movs	r3, #0
 8391 1486 87F8A634 		strb	r3, [r7, #1190]
 8392 148a 20E0     		b	.L321
 8393              	.L322:
1115:..\src/command_processing.c ****                         }
 8394              		.loc 1 1115 0 discriminator 3
 8395 148c 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8396 1490 07F55B73 		add	r3, r7, #876
 8397 1494 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8398 1498 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8399 149c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8400 14a0 01FB03F3 		mul	r3, r1, r3
 8401 14a4 1846     		mov	r0, r3
 8402 14a6 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8403 14aa 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8404 14ae CB1A     		subs	r3, r1, r3
 8405 14b0 0344     		add	r3, r3, r0
 8406 14b2 013B     		subs	r3, r3, #1
 8407 14b4 1344     		add	r3, r3, r2
 8408 14b6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8409 14ba 07F59261 		add	r1, r7, #1168
 8410 14be 0A44     		add	r2, r2, r1
 8411 14c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8412 14c2 1A70     		strb	r2, [r3]
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8413              		.loc 1 1114 0 discriminator 3
 8414 14c4 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8415 14c8 0133     		adds	r3, r3, #1
 8416 14ca 87F8A634 		strb	r3, [r7, #1190]
 8417              	.L321:
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8418              		.loc 1 1114 0 is_stmt 0 discriminator 1
 8419 14ce 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8420 14d2 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8421 14d6 9A42     		cmp	r2, r3
 8422 14d8 D8D3     		bcc	.L322
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8423              		.loc 1 1112 0 is_stmt 1 discriminator 2
 8424 14da 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8425 14de 0133     		adds	r3, r3, #1
 8426 14e0 87F8A734 		strb	r3, [r7, #1191]
 8427              	.L320:
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8428              		.loc 1 1112 0 is_stmt 0 discriminator 1
 8429 14e4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8430 14e8 07F53772 		add	r2, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 196


 8431 14ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8432 14ee 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8433 14f2 9A42     		cmp	r2, r3
 8434 14f4 BAD3     		bcc	.L323
1118:..\src/command_processing.c ****                 case TYPE_UINT32:
 8435              		.loc 1 1118 0 is_stmt 1
 8436 14f6 9CE0     		b	.L332
 8437              	.L302:
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8438              		.loc 1 1120 0
 8439 14f8 0023     		movs	r3, #0
 8440 14fa 87F8A734 		strb	r3, [r7, #1191]
 8441 14fe 3BE0     		b	.L324
 8442              	.L327:
1121:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8443              		.loc 1 1121 0
 8444 1500 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8445 1504 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8446 1508 02FB03F3 		mul	r3, r2, r3
 8447 150c 0333     		adds	r3, r3, #3
 8448 150e 474A     		ldr	r2, .L347
 8449 1510 1344     		add	r3, r3, r2
 8450 1512 1B68     		ldr	r3, [r3]
 8451 1514 C7F88C34 		str	r3, [r7, #1164]
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8452              		.loc 1 1122 0
 8453 1518 0023     		movs	r3, #0
 8454 151a 87F8A634 		strb	r3, [r7, #1190]
 8455 151e 20E0     		b	.L325
 8456              	.L326:
1123:..\src/command_processing.c ****                         }
 8457              		.loc 1 1123 0 discriminator 3
 8458 1520 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8459 1524 07F55B73 		add	r3, r7, #876
 8460 1528 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8461 152c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8462 1530 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8463 1534 01FB03F3 		mul	r3, r1, r3
 8464 1538 1846     		mov	r0, r3
 8465 153a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8466 153e 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8467 1542 CB1A     		subs	r3, r1, r3
 8468 1544 0344     		add	r3, r3, r0
 8469 1546 013B     		subs	r3, r3, #1
 8470 1548 1344     		add	r3, r3, r2
 8471 154a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8472 154e 07F28C41 		addw	r1, r7, #1164
 8473 1552 0A44     		add	r2, r2, r1
 8474 1554 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8475 1556 1A70     		strb	r2, [r3]
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8476              		.loc 1 1122 0 discriminator 3
 8477 1558 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8478 155c 0133     		adds	r3, r3, #1
 8479 155e 87F8A634 		strb	r3, [r7, #1190]
 8480              	.L325:
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 197


 8481              		.loc 1 1122 0 is_stmt 0 discriminator 1
 8482 1562 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8483 1566 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8484 156a 9A42     		cmp	r2, r3
 8485 156c D8D3     		bcc	.L326
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8486              		.loc 1 1120 0 is_stmt 1 discriminator 2
 8487 156e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8488 1572 0133     		adds	r3, r3, #1
 8489 1574 87F8A734 		strb	r3, [r7, #1191]
 8490              	.L324:
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8491              		.loc 1 1120 0 is_stmt 0 discriminator 1
 8492 1578 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8493 157c 07F53772 		add	r2, r7, #732
 8494 1580 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8495 1582 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8496 1586 9A42     		cmp	r2, r3
 8497 1588 BAD3     		bcc	.L327
1126:..\src/command_processing.c ****                 case TYPE_FLOAT:
 8498              		.loc 1 1126 0 is_stmt 1
 8499 158a 52E0     		b	.L332
 8500              	.L303:
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8501              		.loc 1 1128 0
 8502 158c 0023     		movs	r3, #0
 8503 158e 87F8A734 		strb	r3, [r7, #1191]
 8504 1592 3BE0     		b	.L328
 8505              	.L331:
1129:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8506              		.loc 1 1129 0
 8507 1594 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8508 1598 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 8509 159c 02FB03F3 		mul	r3, r2, r3
 8510 15a0 0333     		adds	r3, r3, #3
 8511 15a2 224A     		ldr	r2, .L347
 8512 15a4 1344     		add	r3, r3, r2
 8513 15a6 1B68     		ldr	r3, [r3]	@ float
 8514 15a8 C7F88834 		str	r3, [r7, #1160]	@ float
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8515              		.loc 1 1130 0
 8516 15ac 0023     		movs	r3, #0
 8517 15ae 87F8A634 		strb	r3, [r7, #1190]
 8518 15b2 20E0     		b	.L329
 8519              	.L330:
1131:..\src/command_processing.c ****                         }
 8520              		.loc 1 1131 0 discriminator 3
 8521 15b4 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 8522 15b8 07F55B73 		add	r3, r7, #876
 8523 15bc 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8524 15c0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8525 15c4 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8526 15c8 01FB03F3 		mul	r3, r1, r3
 8527 15cc 1846     		mov	r0, r3
 8528 15ce 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 8529 15d2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8530 15d6 CB1A     		subs	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 198


 8531 15d8 0344     		add	r3, r3, r0
 8532 15da 013B     		subs	r3, r3, #1
 8533 15dc 1344     		add	r3, r3, r2
 8534 15de 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8535 15e2 07F59161 		add	r1, r7, #1160
 8536 15e6 0A44     		add	r2, r2, r1
 8537 15e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8538 15ea 1A70     		strb	r2, [r3]
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8539              		.loc 1 1130 0 discriminator 3
 8540 15ec 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 8541 15f0 0133     		adds	r3, r3, #1
 8542 15f2 87F8A634 		strb	r3, [r7, #1190]
 8543              	.L329:
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8544              		.loc 1 1130 0 is_stmt 0 discriminator 1
 8545 15f6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 8546 15fa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 8547 15fe 9A42     		cmp	r2, r3
 8548 1600 D8D3     		bcc	.L330
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8549              		.loc 1 1128 0 is_stmt 1 discriminator 2
 8550 1602 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 8551 1606 0133     		adds	r3, r3, #1
 8552 1608 87F8A734 		strb	r3, [r7, #1191]
 8553              	.L328:
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8554              		.loc 1 1128 0 is_stmt 0 discriminator 1
 8555 160c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8556 1610 07F53772 		add	r2, r7, #732
 8557 1614 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8558 1616 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 8559 161a 9A42     		cmp	r2, r3
 8560 161c BAD3     		bcc	.L331
1134:..\src/command_processing.c ****                 default:
 8561              		.loc 1 1134 0 is_stmt 1
 8562 161e 08E0     		b	.L332
 8563              	.L294:
1141:..\src/command_processing.c ****         }
 8564              		.loc 1 1141 0
 8565 1620 BB1D     		adds	r3, r7, #6
 8566 1622 1B88     		ldrh	r3, [r3]
 8567 1624 1846     		mov	r0, r3
 8568 1626 FFF7FEFF 		bl	set_custom_param
 8569 162a 02E0     		b	.L332
 8570              	.L348:
 8571              		.align	2
 8572              	.L347:
 8573 162c 00000000 		.word	g_rx
 8574              	.L337:
1136:..\src/command_processing.c ****             }
 8575              		.loc 1 1136 0
 8576 1630 00BF     		nop
 8577              	.L332:
1145:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8578              		.loc 1 1145 0
 8579 1632 97F89B34 		ldrb	r3, [r7, #1179]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 199


 8580 1636 9BB2     		uxth	r3, r3
 8581 1638 BA1D     		adds	r2, r7, #6
 8582 163a 1288     		ldrh	r2, [r2]
 8583 163c 9A42     		cmp	r2, r3
 8584 163e 11D0     		beq	.L333
1146:..\src/command_processing.c ****         }
 8585              		.loc 1 1146 0
 8586 1640 D7F8A034 		ldr	r3, [r7, #1184]
 8587 1644 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8588 1648 5B01     		lsls	r3, r3, #5
 8589 164a 03F51273 		add	r3, r3, #584
 8590 164e D7F8A024 		ldr	r2, [r7, #1184]
 8591 1652 D018     		adds	r0, r2, r3
 8592 1654 D7F8A034 		ldr	r3, [r7, #1184]
 8593 1658 03F5F873 		add	r3, r3, #496
 8594 165c 1022     		movs	r2, #16
 8595 165e 1946     		mov	r1, r3
 8596 1660 FFF7FEFF 		bl	memcpy
 8597              	.L333:
1150:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8598              		.loc 1 1150 0
 8599 1664 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8600 1668 07F54972 		add	r2, r7, #804
 8601 166c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8602 166e 002B     		cmp	r3, #0
 8603 1670 42D1     		bne	.L338
 8604              	.LBB14:
1151:..\src/command_processing.c ****             do {
 8605              		.loc 1 1151 0
 8606 1672 0023     		movs	r3, #0
 8607 1674 87F89F34 		strb	r3, [r7, #1183]
 8608 1678 FF23     		movs	r3, #255
 8609 167a 87F89E34 		strb	r3, [r7, #1182]
 8610              	.L335:
1153:..\src/command_processing.c ****                 idx++;
 8611              		.loc 1 1153 0
 8612 167e 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 8613 1682 07F54972 		add	r2, r7, #804
 8614 1686 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8615 1688 002B     		cmp	r3, #0
 8616 168a 04D1     		bne	.L334
1153:..\src/command_processing.c ****                 idx++;
 8617              		.loc 1 1153 0 is_stmt 0 discriminator 1
 8618 168c 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8619 1690 0133     		adds	r3, r3, #1
 8620 1692 87F89E34 		strb	r3, [r7, #1182]
 8621              	.L334:
1154:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8622              		.loc 1 1154 0 is_stmt 1
 8623 1696 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 8624 169a 0133     		adds	r3, r3, #1
 8625 169c 87F89F34 		strb	r3, [r7, #1183]
1155:..\src/command_processing.c ****             
 8626              		.loc 1 1155 0
 8627 16a0 97F89F24 		ldrb	r2, [r7, #1183]	@ zero_extendqisi2
 8628 16a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 8629 16a8 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 200


 8630 16aa E8D9     		bls	.L335
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8631              		.loc 1 1157 0
 8632 16ac 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8633 16b0 07F1BC02 		add	r2, r7, #188
 8634 16b4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8635 16b6 052B     		cmp	r3, #5
 8636 16b8 1BD0     		beq	.L336
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8637              		.loc 1 1157 0 is_stmt 0 discriminator 1
 8638 16ba 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8639 16be 07F1BC02 		add	r2, r7, #188
 8640 16c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8641 16c4 062B     		cmp	r3, #6
 8642 16c6 14D0     		beq	.L336
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8643              		.loc 1 1157 0 discriminator 2
 8644 16c8 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8645 16cc 07F1BC02 		add	r2, r7, #188
 8646 16d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8647 16d2 082B     		cmp	r3, #8
 8648 16d4 0DD0     		beq	.L336
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8649              		.loc 1 1157 0 discriminator 3
 8650 16d6 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8651 16da 07F1BC02 		add	r2, r7, #188
 8652 16de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8653 16e0 092B     		cmp	r3, #9
 8654 16e2 06D0     		beq	.L336
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8655              		.loc 1 1157 0 discriminator 4
 8656 16e4 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 8657 16e8 07F1BC02 		add	r2, r7, #188
 8658 16ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8659 16ee 0A2B     		cmp	r3, #10
 8660 16f0 02D1     		bne	.L338
 8661              	.L336:
1158:..\src/command_processing.c ****             }   
 8662              		.loc 1 1158 0 is_stmt 1
 8663 16f2 044B     		ldr	r3, .L349
 8664 16f4 0122     		movs	r2, #1
 8665 16f6 1A70     		strb	r2, [r3]
 8666              	.L338:
 8667              	.LBE14:
 8668              		.loc 1 1162 0
 8669 16f8 00BF     		nop
 8670 16fa 07F59567 		add	r7, r7, #1192
 8671              		.cfi_def_cfa_offset 16
 8672 16fe BD46     		mov	sp, r7
 8673              		.cfi_def_cfa_register 13
 8674              		@ sp needed
 8675 1700 B0BD     		pop	{r4, r5, r7, pc}
 8676              	.L350:
 8677 1702 00BF     		.align	2
 8678              	.L349:
 8679 1704 00000000 		.word	reset_PSoC_flag
 8680              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 201


 8681              	.LFE68:
 8682              		.size	manage_param_list, .-manage_param_list
 8683              		.global	__aeabi_fmul
 8684              		.global	__aeabi_f2iz
 8685              		.section	.text.set_custom_param,"ax",%progbits
 8686              		.align	2
 8687              		.global	set_custom_param
 8688              		.thumb
 8689              		.thumb_func
 8690              		.type	set_custom_param, %function
 8691              	set_custom_param:
 8692              	.LFB69:
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** //==============================================================================
1165:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1166:..\src/command_processing.c **** //==============================================================================
1167:..\src/command_processing.c **** 
1168:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8693              		.loc 1 1168 0
 8694              		.cfi_startproc
 8695              		@ args = 0, pretend = 0, frame = 24
 8696              		@ frame_needed = 1, uses_anonymous_args = 0
 8697 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8698              		.cfi_def_cfa_offset 20
 8699              		.cfi_offset 4, -20
 8700              		.cfi_offset 5, -16
 8701              		.cfi_offset 6, -12
 8702              		.cfi_offset 7, -8
 8703              		.cfi_offset 14, -4
 8704 0002 87B0     		sub	sp, sp, #28
 8705              		.cfi_def_cfa_offset 48
 8706 0004 00AF     		add	r7, sp, #0
 8707              		.cfi_def_cfa_register 7
 8708 0006 0346     		mov	r3, r0
 8709 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1169:..\src/command_processing.c **** 
1170:..\src/command_processing.c ****     uint8 CYDATA i, j;
1171:..\src/command_processing.c ****     uint8 aux_uchar;
1172:..\src/command_processing.c ****     float aux_float, aux_float2;
1173:..\src/command_processing.c **** 
1174:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8710              		.loc 1 1174 0
 8711 000a 0023     		movs	r3, #0
 8712 000c 3B75     		strb	r3, [r7, #20]
1175:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8713              		.loc 1 1175 0
 8714 000e 0123     		movs	r3, #1
 8715 0010 FB74     		strb	r3, [r7, #19]
1176:..\src/command_processing.c ****     
1177:..\src/command_processing.c ****     switch(index){
 8716              		.loc 1 1177 0
 8717 0012 FB88     		ldrh	r3, [r7, #6]
 8718 0014 023B     		subs	r3, r3, #2
 8719 0016 452B     		cmp	r3, #69
 8720 0018 01F2EB81 		bhi	.L443
 8721 001c 01A2     		adr	r2, .L354
 8722 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 202


 8723 0022 00BF     		.p2align 2
 8724              	.L354:
 8725 0024 3D010000 		.word	.L353+1
 8726 0028 6F030000 		.word	.L355+1
 8727 002c F3130000 		.word	.L443+1
 8728 0030 B5050000 		.word	.L356+1
 8729 0034 F3130000 		.word	.L443+1
 8730 0038 F3130000 		.word	.L443+1
 8731 003c 01060000 		.word	.L357+1
 8732 0040 F3130000 		.word	.L443+1
 8733 0044 F3130000 		.word	.L443+1
 8734 0048 39070000 		.word	.L358+1
 8735 004c F3130000 		.word	.L443+1
 8736 0050 F3130000 		.word	.L443+1
 8737 0054 F3130000 		.word	.L443+1
 8738 0058 F3130000 		.word	.L443+1
 8739 005c F3130000 		.word	.L443+1
 8740 0060 F3130000 		.word	.L443+1
 8741 0064 F3130000 		.word	.L443+1
 8742 0068 F3130000 		.word	.L443+1
 8743 006c F3130000 		.word	.L443+1
 8744 0070 F3130000 		.word	.L443+1
 8745 0074 F3130000 		.word	.L443+1
 8746 0078 39080000 		.word	.L359+1
 8747 007c 97080000 		.word	.L360+1
 8748 0080 F3130000 		.word	.L443+1
 8749 0084 F3130000 		.word	.L443+1
 8750 0088 F3130000 		.word	.L443+1
 8751 008c D1080000 		.word	.L361+1
 8752 0090 F3130000 		.word	.L443+1
 8753 0094 F3130000 		.word	.L443+1
 8754 0098 4D0A0000 		.word	.L362+1
 8755 009c F90A0000 		.word	.L363+1
 8756 00a0 F3130000 		.word	.L443+1
 8757 00a4 F3130000 		.word	.L443+1
 8758 00a8 F3130000 		.word	.L443+1
 8759 00ac F3130000 		.word	.L443+1
 8760 00b0 F3130000 		.word	.L443+1
 8761 00b4 330B0000 		.word	.L364+1
 8762 00b8 F3130000 		.word	.L443+1
 8763 00bc F3130000 		.word	.L443+1
 8764 00c0 F3130000 		.word	.L443+1
 8765 00c4 F3130000 		.word	.L443+1
 8766 00c8 F3130000 		.word	.L443+1
 8767 00cc 6D0B0000 		.word	.L365+1
 8768 00d0 B30D0000 		.word	.L366+1
 8769 00d4 F3130000 		.word	.L443+1
 8770 00d8 F50F0000 		.word	.L367+1
 8771 00dc F3130000 		.word	.L443+1
 8772 00e0 F3130000 		.word	.L443+1
 8773 00e4 3F100000 		.word	.L368+1
 8774 00e8 F3130000 		.word	.L443+1
 8775 00ec F3130000 		.word	.L443+1
 8776 00f0 55110000 		.word	.L369+1
 8777 00f4 F3130000 		.word	.L443+1
 8778 00f8 F3130000 		.word	.L443+1
 8779 00fc F3130000 		.word	.L443+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 203


 8780 0100 F3130000 		.word	.L443+1
 8781 0104 F3130000 		.word	.L443+1
 8782 0108 F3130000 		.word	.L443+1
 8783 010c F3130000 		.word	.L443+1
 8784 0110 53120000 		.word	.L370+1
 8785 0114 F3130000 		.word	.L443+1
 8786 0118 F3130000 		.word	.L443+1
 8787 011c F3130000 		.word	.L443+1
 8788 0120 F3130000 		.word	.L443+1
 8789 0124 F3130000 		.word	.L443+1
 8790 0128 F3130000 		.word	.L443+1
 8791 012c F3130000 		.word	.L443+1
 8792 0130 F3130000 		.word	.L443+1
 8793 0134 F3130000 		.word	.L443+1
 8794 0138 A1120000 		.word	.L371+1
 8795              		.p2align 1
 8796              	.L353:
1178:..\src/command_processing.c ****         case 2:         // Position PID
1179:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8797              		.loc 1 1179 0
 8798 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8799 013e AB49     		ldr	r1, .L449
 8800 0140 1346     		mov	r3, r2
 8801 0142 DB00     		lsls	r3, r3, #3
 8802 0144 9B1A     		subs	r3, r3, r2
 8803 0146 1B01     		lsls	r3, r3, #4
 8804 0148 0B44     		add	r3, r3, r1
 8805 014a 03F20F13 		addw	r3, r3, #271
 8806 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8807 0150 032B     		cmp	r3, #3
 8808 0152 00F08680 		beq	.L372
1180:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8809              		.loc 1 1180 0
 8810 0156 A64B     		ldr	r3, .L449+4
 8811 0158 1B68     		ldr	r3, [r3]	@ float
 8812 015a FB60     		str	r3, [r7, #12]	@ float
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8813              		.loc 1 1181 0
 8814 015c 0023     		movs	r3, #0
 8815 015e BB75     		strb	r3, [r7, #22]
 8816 0160 0EE0     		b	.L373
 8817              	.L374:
1182:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8818              		.loc 1 1182 0 discriminator 3
 8819 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8820 0164 C3F10303 		rsb	r3, r3, #3
 8821 0168 07F10802 		add	r2, r7, #8
 8822 016c 1344     		add	r3, r3, r2
 8823 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8824 0170 07F10C01 		add	r1, r7, #12
 8825 0174 0A44     		add	r2, r2, r1
 8826 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8827 0178 1A70     		strb	r2, [r3]
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8828              		.loc 1 1181 0 discriminator 3
 8829 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8830 017c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 204


 8831 017e BB75     		strb	r3, [r7, #22]
 8832              	.L373:
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8833              		.loc 1 1181 0 is_stmt 0 discriminator 1
 8834 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8835 0182 032B     		cmp	r3, #3
 8836 0184 EDD9     		bls	.L374
1183:..\src/command_processing.c ****                 }
1184:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8837              		.loc 1 1184 0 is_stmt 1
 8838 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8839 0188 BB68     		ldr	r3, [r7, #8]	@ float
 8840 018a 4FF08F41 		mov	r1, #1199570944
 8841 018e 1846     		mov	r0, r3
 8842 0190 FFF7FEFF 		bl	__aeabi_fmul
 8843 0194 0346     		mov	r3, r0
 8844 0196 1846     		mov	r0, r3
 8845 0198 FFF7FEFF 		bl	__aeabi_f2iz
 8846 019c 0146     		mov	r1, r0
 8847 019e 954A     		ldr	r2, .L449+8
 8848 01a0 2346     		mov	r3, r4
 8849 01a2 DB00     		lsls	r3, r3, #3
 8850 01a4 1B1B     		subs	r3, r3, r4
 8851 01a6 1B01     		lsls	r3, r3, #4
 8852 01a8 1344     		add	r3, r3, r2
 8853 01aa B033     		adds	r3, r3, #176
 8854 01ac 1960     		str	r1, [r3]
1185:..\src/command_processing.c ****                 
1186:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8855              		.loc 1 1186 0
 8856 01ae 924B     		ldr	r3, .L449+12
 8857 01b0 1B68     		ldr	r3, [r3]	@ float
 8858 01b2 FB60     		str	r3, [r7, #12]	@ float
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8859              		.loc 1 1187 0
 8860 01b4 0023     		movs	r3, #0
 8861 01b6 BB75     		strb	r3, [r7, #22]
 8862 01b8 0EE0     		b	.L375
 8863              	.L376:
1188:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8864              		.loc 1 1188 0 discriminator 3
 8865 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8866 01bc C3F10303 		rsb	r3, r3, #3
 8867 01c0 07F10802 		add	r2, r7, #8
 8868 01c4 1344     		add	r3, r3, r2
 8869 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8870 01c8 07F10C01 		add	r1, r7, #12
 8871 01cc 0A44     		add	r2, r2, r1
 8872 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8873 01d0 1A70     		strb	r2, [r3]
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8874              		.loc 1 1187 0 discriminator 3
 8875 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8876 01d4 0133     		adds	r3, r3, #1
 8877 01d6 BB75     		strb	r3, [r7, #22]
 8878              	.L375:
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 205


 8879              		.loc 1 1187 0 is_stmt 0 discriminator 1
 8880 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8881 01da 032B     		cmp	r3, #3
 8882 01dc EDD9     		bls	.L376
1189:..\src/command_processing.c ****                 }
1190:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 8883              		.loc 1 1190 0 is_stmt 1
 8884 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8885 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 8886 01e2 4FF08F41 		mov	r1, #1199570944
 8887 01e6 1846     		mov	r0, r3
 8888 01e8 FFF7FEFF 		bl	__aeabi_fmul
 8889 01ec 0346     		mov	r3, r0
 8890 01ee 1846     		mov	r0, r3
 8891 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 8892 01f4 0146     		mov	r1, r0
 8893 01f6 7F4A     		ldr	r2, .L449+8
 8894 01f8 2346     		mov	r3, r4
 8895 01fa DB00     		lsls	r3, r3, #3
 8896 01fc 1B1B     		subs	r3, r3, r4
 8897 01fe 1B01     		lsls	r3, r3, #4
 8898 0200 1344     		add	r3, r3, r2
 8899 0202 B433     		adds	r3, r3, #180
 8900 0204 1960     		str	r1, [r3]
1191:..\src/command_processing.c ****                 
1192:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8901              		.loc 1 1192 0
 8902 0206 7D4B     		ldr	r3, .L449+16
 8903 0208 1B68     		ldr	r3, [r3]	@ float
 8904 020a FB60     		str	r3, [r7, #12]	@ float
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8905              		.loc 1 1193 0
 8906 020c 0023     		movs	r3, #0
 8907 020e BB75     		strb	r3, [r7, #22]
 8908 0210 0EE0     		b	.L377
 8909              	.L378:
1194:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8910              		.loc 1 1194 0 discriminator 3
 8911 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8912 0214 C3F10303 		rsb	r3, r3, #3
 8913 0218 07F10802 		add	r2, r7, #8
 8914 021c 1344     		add	r3, r3, r2
 8915 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8916 0220 07F10C01 		add	r1, r7, #12
 8917 0224 0A44     		add	r2, r2, r1
 8918 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8919 0228 1A70     		strb	r2, [r3]
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8920              		.loc 1 1193 0 discriminator 3
 8921 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8922 022c 0133     		adds	r3, r3, #1
 8923 022e BB75     		strb	r3, [r7, #22]
 8924              	.L377:
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8925              		.loc 1 1193 0 is_stmt 0 discriminator 1
 8926 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8927 0232 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 206


 8928 0234 EDD9     		bls	.L378
1195:..\src/command_processing.c ****                 }
1196:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 8929              		.loc 1 1196 0 is_stmt 1
 8930 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8931 0238 BB68     		ldr	r3, [r7, #8]	@ float
 8932 023a 4FF08F41 		mov	r1, #1199570944
 8933 023e 1846     		mov	r0, r3
 8934 0240 FFF7FEFF 		bl	__aeabi_fmul
 8935 0244 0346     		mov	r3, r0
 8936 0246 1846     		mov	r0, r3
 8937 0248 FFF7FEFF 		bl	__aeabi_f2iz
 8938 024c 0146     		mov	r1, r0
 8939 024e 694A     		ldr	r2, .L449+8
 8940 0250 2346     		mov	r3, r4
 8941 0252 DB00     		lsls	r3, r3, #3
 8942 0254 1B1B     		subs	r3, r3, r4
 8943 0256 1B01     		lsls	r3, r3, #4
 8944 0258 1344     		add	r3, r3, r2
 8945 025a B833     		adds	r3, r3, #184
 8946 025c 1960     		str	r1, [r3]
1197:..\src/command_processing.c ****             }
1198:..\src/command_processing.c ****             else {
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1210:..\src/command_processing.c ****                 
1211:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1214:..\src/command_processing.c ****                 }
1215:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1216:..\src/command_processing.c ****             }
1217:..\src/command_processing.c ****             break;
 8947              		.loc 1 1217 0
 8948 025e 01F0D3B8 		b	.L386
 8949              	.L372:
1199:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8950              		.loc 1 1199 0
 8951 0262 634B     		ldr	r3, .L449+4
 8952 0264 1B68     		ldr	r3, [r3]	@ float
 8953 0266 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8954              		.loc 1 1200 0
 8955 0268 0023     		movs	r3, #0
 8956 026a BB75     		strb	r3, [r7, #22]
 8957 026c 0EE0     		b	.L380
 8958              	.L381:
1201:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 207


 8959              		.loc 1 1201 0 discriminator 3
 8960 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8961 0270 C3F10303 		rsb	r3, r3, #3
 8962 0274 07F10802 		add	r2, r7, #8
 8963 0278 1344     		add	r3, r3, r2
 8964 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8965 027c 07F10C01 		add	r1, r7, #12
 8966 0280 0A44     		add	r2, r2, r1
 8967 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8968 0284 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8969              		.loc 1 1200 0 discriminator 3
 8970 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8971 0288 0133     		adds	r3, r3, #1
 8972 028a BB75     		strb	r3, [r7, #22]
 8973              	.L380:
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8974              		.loc 1 1200 0 is_stmt 0 discriminator 1
 8975 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8976 028e 032B     		cmp	r3, #3
 8977 0290 EDD9     		bls	.L381
1203:..\src/command_processing.c ****                 
 8978              		.loc 1 1203 0 is_stmt 1
 8979 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8980 0294 BB68     		ldr	r3, [r7, #8]	@ float
 8981 0296 4FF08F41 		mov	r1, #1199570944
 8982 029a 1846     		mov	r0, r3
 8983 029c FFF7FEFF 		bl	__aeabi_fmul
 8984 02a0 0346     		mov	r3, r0
 8985 02a2 1846     		mov	r0, r3
 8986 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 8987 02a8 0146     		mov	r1, r0
 8988 02aa 524A     		ldr	r2, .L449+8
 8989 02ac 2346     		mov	r3, r4
 8990 02ae DB00     		lsls	r3, r3, #3
 8991 02b0 1B1B     		subs	r3, r3, r4
 8992 02b2 1B01     		lsls	r3, r3, #4
 8993 02b4 1344     		add	r3, r3, r2
 8994 02b6 C833     		adds	r3, r3, #200
 8995 02b8 1960     		str	r1, [r3]
1205:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8996              		.loc 1 1205 0
 8997 02ba 4F4B     		ldr	r3, .L449+12
 8998 02bc 1B68     		ldr	r3, [r3]	@ float
 8999 02be FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9000              		.loc 1 1206 0
 9001 02c0 0023     		movs	r3, #0
 9002 02c2 BB75     		strb	r3, [r7, #22]
 9003 02c4 0EE0     		b	.L382
 9004              	.L383:
1207:..\src/command_processing.c ****                 }
 9005              		.loc 1 1207 0 discriminator 3
 9006 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9007 02c8 C3F10303 		rsb	r3, r3, #3
 9008 02cc 07F10802 		add	r2, r7, #8
 9009 02d0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 208


 9010 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9011 02d4 07F10C01 		add	r1, r7, #12
 9012 02d8 0A44     		add	r2, r2, r1
 9013 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9014 02dc 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9015              		.loc 1 1206 0 discriminator 3
 9016 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9017 02e0 0133     		adds	r3, r3, #1
 9018 02e2 BB75     		strb	r3, [r7, #22]
 9019              	.L382:
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9020              		.loc 1 1206 0 is_stmt 0 discriminator 1
 9021 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9022 02e6 032B     		cmp	r3, #3
 9023 02e8 EDD9     		bls	.L383
1209:..\src/command_processing.c ****                 
 9024              		.loc 1 1209 0 is_stmt 1
 9025 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9026 02ec BB68     		ldr	r3, [r7, #8]	@ float
 9027 02ee 4FF08F41 		mov	r1, #1199570944
 9028 02f2 1846     		mov	r0, r3
 9029 02f4 FFF7FEFF 		bl	__aeabi_fmul
 9030 02f8 0346     		mov	r3, r0
 9031 02fa 1846     		mov	r0, r3
 9032 02fc FFF7FEFF 		bl	__aeabi_f2iz
 9033 0300 0146     		mov	r1, r0
 9034 0302 3C4A     		ldr	r2, .L449+8
 9035 0304 2346     		mov	r3, r4
 9036 0306 DB00     		lsls	r3, r3, #3
 9037 0308 1B1B     		subs	r3, r3, r4
 9038 030a 1B01     		lsls	r3, r3, #4
 9039 030c 1344     		add	r3, r3, r2
 9040 030e CC33     		adds	r3, r3, #204
 9041 0310 1960     		str	r1, [r3]
1211:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9042              		.loc 1 1211 0
 9043 0312 3A4B     		ldr	r3, .L449+16
 9044 0314 1B68     		ldr	r3, [r3]	@ float
 9045 0316 FB60     		str	r3, [r7, #12]	@ float
1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9046              		.loc 1 1212 0
 9047 0318 0023     		movs	r3, #0
 9048 031a BB75     		strb	r3, [r7, #22]
 9049 031c 0EE0     		b	.L384
 9050              	.L385:
1213:..\src/command_processing.c ****                 }
 9051              		.loc 1 1213 0 discriminator 3
 9052 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9053 0320 C3F10303 		rsb	r3, r3, #3
 9054 0324 07F10802 		add	r2, r7, #8
 9055 0328 1344     		add	r3, r3, r2
 9056 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9057 032c 07F10C01 		add	r1, r7, #12
 9058 0330 0A44     		add	r2, r2, r1
 9059 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9060 0334 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 209


1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9061              		.loc 1 1212 0 discriminator 3
 9062 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9063 0338 0133     		adds	r3, r3, #1
 9064 033a BB75     		strb	r3, [r7, #22]
 9065              	.L384:
1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9066              		.loc 1 1212 0 is_stmt 0 discriminator 1
 9067 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9068 033e 032B     		cmp	r3, #3
 9069 0340 EDD9     		bls	.L385
1215:..\src/command_processing.c ****             }
 9070              		.loc 1 1215 0 is_stmt 1
 9071 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9072 0344 BB68     		ldr	r3, [r7, #8]	@ float
 9073 0346 4FF08F41 		mov	r1, #1199570944
 9074 034a 1846     		mov	r0, r3
 9075 034c FFF7FEFF 		bl	__aeabi_fmul
 9076 0350 0346     		mov	r3, r0
 9077 0352 1846     		mov	r0, r3
 9078 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9079 0358 0146     		mov	r1, r0
 9080 035a 264A     		ldr	r2, .L449+8
 9081 035c 2346     		mov	r3, r4
 9082 035e DB00     		lsls	r3, r3, #3
 9083 0360 1B1B     		subs	r3, r3, r4
 9084 0362 1B01     		lsls	r3, r3, #4
 9085 0364 1344     		add	r3, r3, r2
 9086 0366 D033     		adds	r3, r3, #208
 9087 0368 1960     		str	r1, [r3]
 9088              		.loc 1 1217 0
 9089 036a 01F04DB8 		b	.L386
 9090              	.L355:
1218:..\src/command_processing.c ****             
1219:..\src/command_processing.c ****         case 3:         //Current PID
1220:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9091              		.loc 1 1220 0
 9092 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9093 0370 1E49     		ldr	r1, .L449
 9094 0372 1346     		mov	r3, r2
 9095 0374 DB00     		lsls	r3, r3, #3
 9096 0376 9B1A     		subs	r3, r3, r2
 9097 0378 1B01     		lsls	r3, r3, #4
 9098 037a 0B44     		add	r3, r3, r1
 9099 037c 03F20F13 		addw	r3, r3, #271
 9100 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9101 0382 032B     		cmp	r3, #3
 9102 0384 00F09080 		beq	.L387
1221:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9103              		.loc 1 1221 0
 9104 0388 194B     		ldr	r3, .L449+4
 9105 038a 1B68     		ldr	r3, [r3]	@ float
 9106 038c FB60     		str	r3, [r7, #12]	@ float
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9107              		.loc 1 1222 0
 9108 038e 0023     		movs	r3, #0
 9109 0390 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 210


 9110 0392 0EE0     		b	.L388
 9111              	.L389:
1223:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9112              		.loc 1 1223 0 discriminator 3
 9113 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9114 0396 C3F10303 		rsb	r3, r3, #3
 9115 039a 07F10802 		add	r2, r7, #8
 9116 039e 1344     		add	r3, r3, r2
 9117 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9118 03a2 07F10C01 		add	r1, r7, #12
 9119 03a6 0A44     		add	r2, r2, r1
 9120 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9121 03aa 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9122              		.loc 1 1222 0 discriminator 3
 9123 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9124 03ae 0133     		adds	r3, r3, #1
 9125 03b0 BB75     		strb	r3, [r7, #22]
 9126              	.L388:
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9127              		.loc 1 1222 0 is_stmt 0 discriminator 1
 9128 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9129 03b4 032B     		cmp	r3, #3
 9130 03b6 EDD9     		bls	.L389
1224:..\src/command_processing.c ****                 }
1225:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9131              		.loc 1 1225 0 is_stmt 1
 9132 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9133 03ba BB68     		ldr	r3, [r7, #8]	@ float
 9134 03bc 4FF08F41 		mov	r1, #1199570944
 9135 03c0 1846     		mov	r0, r3
 9136 03c2 FFF7FEFF 		bl	__aeabi_fmul
 9137 03c6 0346     		mov	r3, r0
 9138 03c8 1846     		mov	r0, r3
 9139 03ca FFF7FEFF 		bl	__aeabi_f2iz
 9140 03ce 0146     		mov	r1, r0
 9141 03d0 084A     		ldr	r2, .L449+8
 9142 03d2 2346     		mov	r3, r4
 9143 03d4 DB00     		lsls	r3, r3, #3
 9144 03d6 1B1B     		subs	r3, r3, r4
 9145 03d8 1B01     		lsls	r3, r3, #4
 9146 03da 1344     		add	r3, r3, r2
 9147 03dc BC33     		adds	r3, r3, #188
 9148 03de 1960     		str	r1, [r3]
1226:..\src/command_processing.c ****                 
1227:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9149              		.loc 1 1227 0
 9150 03e0 054B     		ldr	r3, .L449+12
 9151 03e2 1B68     		ldr	r3, [r3]	@ float
 9152 03e4 FB60     		str	r3, [r7, #12]	@ float
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9153              		.loc 1 1228 0
 9154 03e6 0023     		movs	r3, #0
 9155 03e8 BB75     		strb	r3, [r7, #22]
 9156 03ea 18E0     		b	.L390
 9157              	.L450:
 9158              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 211


 9159              	.L449:
 9160 03ec 00000000 		.word	c_mem
 9161 03f0 03000000 		.word	g_rx+3
 9162 03f4 00000000 		.word	g_mem
 9163 03f8 07000000 		.word	g_rx+7
 9164 03fc 0B000000 		.word	g_rx+11
 9165              	.L391:
1229:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9166              		.loc 1 1229 0 discriminator 3
 9167 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9168 0402 C3F10303 		rsb	r3, r3, #3
 9169 0406 07F10802 		add	r2, r7, #8
 9170 040a 1344     		add	r3, r3, r2
 9171 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9172 040e 07F10C01 		add	r1, r7, #12
 9173 0412 0A44     		add	r2, r2, r1
 9174 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9175 0416 1A70     		strb	r2, [r3]
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9176              		.loc 1 1228 0 discriminator 3
 9177 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9178 041a 0133     		adds	r3, r3, #1
 9179 041c BB75     		strb	r3, [r7, #22]
 9180              	.L390:
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9181              		.loc 1 1228 0 is_stmt 0 discriminator 1
 9182 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9183 0420 032B     		cmp	r3, #3
 9184 0422 EDD9     		bls	.L391
1230:..\src/command_processing.c ****                 }
1231:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9185              		.loc 1 1231 0 is_stmt 1
 9186 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9187 0426 BB68     		ldr	r3, [r7, #8]	@ float
 9188 0428 4FF08F41 		mov	r1, #1199570944
 9189 042c 1846     		mov	r0, r3
 9190 042e FFF7FEFF 		bl	__aeabi_fmul
 9191 0432 0346     		mov	r3, r0
 9192 0434 1846     		mov	r0, r3
 9193 0436 FFF7FEFF 		bl	__aeabi_f2iz
 9194 043a 0146     		mov	r1, r0
 9195 043c B64A     		ldr	r2, .L451
 9196 043e 2346     		mov	r3, r4
 9197 0440 DB00     		lsls	r3, r3, #3
 9198 0442 1B1B     		subs	r3, r3, r4
 9199 0444 1B01     		lsls	r3, r3, #4
 9200 0446 1344     		add	r3, r3, r2
 9201 0448 C033     		adds	r3, r3, #192
 9202 044a 1960     		str	r1, [r3]
1232:..\src/command_processing.c ****                 
1233:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9203              		.loc 1 1233 0
 9204 044c B34B     		ldr	r3, .L451+4
 9205 044e 1B68     		ldr	r3, [r3]	@ float
 9206 0450 FB60     		str	r3, [r7, #12]	@ float
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9207              		.loc 1 1234 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 212


 9208 0452 0023     		movs	r3, #0
 9209 0454 BB75     		strb	r3, [r7, #22]
 9210 0456 0EE0     		b	.L392
 9211              	.L393:
1235:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9212              		.loc 1 1235 0 discriminator 3
 9213 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9214 045a C3F10303 		rsb	r3, r3, #3
 9215 045e 07F10802 		add	r2, r7, #8
 9216 0462 1344     		add	r3, r3, r2
 9217 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9218 0466 07F10C01 		add	r1, r7, #12
 9219 046a 0A44     		add	r2, r2, r1
 9220 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9221 046e 1A70     		strb	r2, [r3]
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9222              		.loc 1 1234 0 discriminator 3
 9223 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9224 0472 0133     		adds	r3, r3, #1
 9225 0474 BB75     		strb	r3, [r7, #22]
 9226              	.L392:
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9227              		.loc 1 1234 0 is_stmt 0 discriminator 1
 9228 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9229 0478 032B     		cmp	r3, #3
 9230 047a EDD9     		bls	.L393
1236:..\src/command_processing.c ****                 }
1237:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9231              		.loc 1 1237 0 is_stmt 1
 9232 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9233 047e BB68     		ldr	r3, [r7, #8]	@ float
 9234 0480 4FF08F41 		mov	r1, #1199570944
 9235 0484 1846     		mov	r0, r3
 9236 0486 FFF7FEFF 		bl	__aeabi_fmul
 9237 048a 0346     		mov	r3, r0
 9238 048c 1846     		mov	r0, r3
 9239 048e FFF7FEFF 		bl	__aeabi_f2iz
 9240 0492 0146     		mov	r1, r0
 9241 0494 A04A     		ldr	r2, .L451
 9242 0496 2346     		mov	r3, r4
 9243 0498 DB00     		lsls	r3, r3, #3
 9244 049a 1B1B     		subs	r3, r3, r4
 9245 049c 1B01     		lsls	r3, r3, #4
 9246 049e 1344     		add	r3, r3, r2
 9247 04a0 C433     		adds	r3, r3, #196
 9248 04a2 1960     		str	r1, [r3]
1238:..\src/command_processing.c ****             }
1239:..\src/command_processing.c ****             else {
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 213


1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1251:..\src/command_processing.c ****                 
1252:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1255:..\src/command_processing.c ****                 }
1256:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1257:..\src/command_processing.c ****             }            
1258:..\src/command_processing.c ****             break;  
 9249              		.loc 1 1258 0
 9250 04a4 00F0B0BF 		b	.L386
 9251              	.L387:
1240:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9252              		.loc 1 1240 0
 9253 04a8 9D4B     		ldr	r3, .L451+8
 9254 04aa 1B68     		ldr	r3, [r3]	@ float
 9255 04ac FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9256              		.loc 1 1241 0
 9257 04ae 0023     		movs	r3, #0
 9258 04b0 BB75     		strb	r3, [r7, #22]
 9259 04b2 0EE0     		b	.L395
 9260              	.L396:
1242:..\src/command_processing.c ****                 }
 9261              		.loc 1 1242 0 discriminator 3
 9262 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9263 04b6 C3F10303 		rsb	r3, r3, #3
 9264 04ba 07F10802 		add	r2, r7, #8
 9265 04be 1344     		add	r3, r3, r2
 9266 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9267 04c2 07F10C01 		add	r1, r7, #12
 9268 04c6 0A44     		add	r2, r2, r1
 9269 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9270 04ca 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9271              		.loc 1 1241 0 discriminator 3
 9272 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9273 04ce 0133     		adds	r3, r3, #1
 9274 04d0 BB75     		strb	r3, [r7, #22]
 9275              	.L395:
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9276              		.loc 1 1241 0 is_stmt 0 discriminator 1
 9277 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9278 04d4 032B     		cmp	r3, #3
 9279 04d6 EDD9     		bls	.L396
1244:..\src/command_processing.c ****                 
 9280              		.loc 1 1244 0 is_stmt 1
 9281 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9282 04da BB68     		ldr	r3, [r7, #8]	@ float
 9283 04dc 4FF08F41 		mov	r1, #1199570944
 9284 04e0 1846     		mov	r0, r3
 9285 04e2 FFF7FEFF 		bl	__aeabi_fmul
 9286 04e6 0346     		mov	r3, r0
 9287 04e8 1846     		mov	r0, r3
 9288 04ea FFF7FEFF 		bl	__aeabi_f2iz
 9289 04ee 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 214


 9290 04f0 894A     		ldr	r2, .L451
 9291 04f2 2346     		mov	r3, r4
 9292 04f4 DB00     		lsls	r3, r3, #3
 9293 04f6 1B1B     		subs	r3, r3, r4
 9294 04f8 1B01     		lsls	r3, r3, #4
 9295 04fa 1344     		add	r3, r3, r2
 9296 04fc D433     		adds	r3, r3, #212
 9297 04fe 1960     		str	r1, [r3]
1246:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9298              		.loc 1 1246 0
 9299 0500 884B     		ldr	r3, .L451+12
 9300 0502 1B68     		ldr	r3, [r3]	@ float
 9301 0504 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9302              		.loc 1 1247 0
 9303 0506 0023     		movs	r3, #0
 9304 0508 BB75     		strb	r3, [r7, #22]
 9305 050a 0EE0     		b	.L397
 9306              	.L398:
1248:..\src/command_processing.c ****                 }
 9307              		.loc 1 1248 0 discriminator 3
 9308 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9309 050e C3F10303 		rsb	r3, r3, #3
 9310 0512 07F10802 		add	r2, r7, #8
 9311 0516 1344     		add	r3, r3, r2
 9312 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9313 051a 07F10C01 		add	r1, r7, #12
 9314 051e 0A44     		add	r2, r2, r1
 9315 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9316 0522 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9317              		.loc 1 1247 0 discriminator 3
 9318 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9319 0526 0133     		adds	r3, r3, #1
 9320 0528 BB75     		strb	r3, [r7, #22]
 9321              	.L397:
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9322              		.loc 1 1247 0 is_stmt 0 discriminator 1
 9323 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9324 052c 032B     		cmp	r3, #3
 9325 052e EDD9     		bls	.L398
1250:..\src/command_processing.c ****                 
 9326              		.loc 1 1250 0 is_stmt 1
 9327 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9328 0532 BB68     		ldr	r3, [r7, #8]	@ float
 9329 0534 4FF08F41 		mov	r1, #1199570944
 9330 0538 1846     		mov	r0, r3
 9331 053a FFF7FEFF 		bl	__aeabi_fmul
 9332 053e 0346     		mov	r3, r0
 9333 0540 1846     		mov	r0, r3
 9334 0542 FFF7FEFF 		bl	__aeabi_f2iz
 9335 0546 0146     		mov	r1, r0
 9336 0548 734A     		ldr	r2, .L451
 9337 054a 2346     		mov	r3, r4
 9338 054c DB00     		lsls	r3, r3, #3
 9339 054e 1B1B     		subs	r3, r3, r4
 9340 0550 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 215


 9341 0552 1344     		add	r3, r3, r2
 9342 0554 D833     		adds	r3, r3, #216
 9343 0556 1960     		str	r1, [r3]
1252:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9344              		.loc 1 1252 0
 9345 0558 704B     		ldr	r3, .L451+4
 9346 055a 1B68     		ldr	r3, [r3]	@ float
 9347 055c FB60     		str	r3, [r7, #12]	@ float
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9348              		.loc 1 1253 0
 9349 055e 0023     		movs	r3, #0
 9350 0560 BB75     		strb	r3, [r7, #22]
 9351 0562 0EE0     		b	.L399
 9352              	.L400:
1254:..\src/command_processing.c ****                 }
 9353              		.loc 1 1254 0 discriminator 3
 9354 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9355 0566 C3F10303 		rsb	r3, r3, #3
 9356 056a 07F10802 		add	r2, r7, #8
 9357 056e 1344     		add	r3, r3, r2
 9358 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9359 0572 07F10C01 		add	r1, r7, #12
 9360 0576 0A44     		add	r2, r2, r1
 9361 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9362 057a 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9363              		.loc 1 1253 0 discriminator 3
 9364 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9365 057e 0133     		adds	r3, r3, #1
 9366 0580 BB75     		strb	r3, [r7, #22]
 9367              	.L399:
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9368              		.loc 1 1253 0 is_stmt 0 discriminator 1
 9369 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9370 0584 032B     		cmp	r3, #3
 9371 0586 EDD9     		bls	.L400
1256:..\src/command_processing.c ****             }            
 9372              		.loc 1 1256 0 is_stmt 1
 9373 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9374 058a BB68     		ldr	r3, [r7, #8]	@ float
 9375 058c 4FF08F41 		mov	r1, #1199570944
 9376 0590 1846     		mov	r0, r3
 9377 0592 FFF7FEFF 		bl	__aeabi_fmul
 9378 0596 0346     		mov	r3, r0
 9379 0598 1846     		mov	r0, r3
 9380 059a FFF7FEFF 		bl	__aeabi_f2iz
 9381 059e 0146     		mov	r1, r0
 9382 05a0 5D4A     		ldr	r2, .L451
 9383 05a2 2346     		mov	r3, r4
 9384 05a4 DB00     		lsls	r3, r3, #3
 9385 05a6 1B1B     		subs	r3, r3, r4
 9386 05a8 1B01     		lsls	r3, r3, #4
 9387 05aa 1344     		add	r3, r3, r2
 9388 05ac DC33     		adds	r3, r3, #220
 9389 05ae 1960     		str	r1, [r3]
 9390              		.loc 1 1258 0
 9391 05b0 00F02ABF 		b	.L386
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 216


 9392              	.L356:
1259:..\src/command_processing.c ****             
1260:..\src/command_processing.c ****         case 5:         //Input mode
1261:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9393              		.loc 1 1261 0
 9394 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9395 05b6 5C4B     		ldr	r3, .L451+16
 9396 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9397 05ba 5749     		ldr	r1, .L451
 9398 05bc 1346     		mov	r3, r2
 9399 05be DB00     		lsls	r3, r3, #3
 9400 05c0 9B1A     		subs	r3, r3, r2
 9401 05c2 1B01     		lsls	r3, r3, #4
 9402 05c4 0B44     		add	r3, r3, r1
 9403 05c6 03F58773 		add	r3, r3, #270
 9404 05ca 0246     		mov	r2, r0
 9405 05cc 1A70     		strb	r2, [r3]
1262:..\src/command_processing.c ****             
1263:..\src/command_processing.c ****             // Hold the actual position
1264:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9406              		.loc 1 1264 0
 9407 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9408 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9409 05d2 5148     		ldr	r0, .L451
 9410 05d4 1346     		mov	r3, r2
 9411 05d6 DB00     		lsls	r3, r3, #3
 9412 05d8 9B1A     		subs	r3, r3, r2
 9413 05da 1B01     		lsls	r3, r3, #4
 9414 05dc 0344     		add	r3, r3, r0
 9415 05de 03F58873 		add	r3, r3, #272
 9416 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9417 05e4 1846     		mov	r0, r3
 9418 05e6 514A     		ldr	r2, .L451+20
 9419 05e8 0346     		mov	r3, r0
 9420 05ea 5B00     		lsls	r3, r3, #1
 9421 05ec 0344     		add	r3, r3, r0
 9422 05ee 1B01     		lsls	r3, r3, #4
 9423 05f0 1344     		add	r3, r3, r2
 9424 05f2 1A68     		ldr	r2, [r3]
 9425 05f4 4E48     		ldr	r0, .L451+24
 9426 05f6 0B01     		lsls	r3, r1, #4
 9427 05f8 0344     		add	r3, r3, r0
 9428 05fa 1A60     		str	r2, [r3]
1265:..\src/command_processing.c ****             break;   
 9429              		.loc 1 1265 0
 9430 05fc 00F004BF 		b	.L386
 9431              	.L357:
1266:..\src/command_processing.c **** 
1267:..\src/command_processing.c ****         case 8:         //Measurement Offset
1268:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9432              		.loc 1 1268 0
 9433 0600 0023     		movs	r3, #0
 9434 0602 FB75     		strb	r3, [r7, #23]
 9435 0604 7FE0     		b	.L401
 9436              	.L402:
1269:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9437              		.loc 1 1269 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 217


 9438 0606 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9439 0608 4349     		ldr	r1, .L451
 9440 060a 1346     		mov	r3, r2
 9441 060c DB00     		lsls	r3, r3, #3
 9442 060e 9B1A     		subs	r3, r3, r2
 9443 0610 1B01     		lsls	r3, r3, #4
 9444 0612 0B44     		add	r3, r3, r1
 9445 0614 03F58873 		add	r3, r3, #272
 9446 0618 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9447 061a 1C46     		mov	r4, r3
 9448 061c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9449 061e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9450 0620 5B00     		lsls	r3, r3, #1
 9451 0622 0333     		adds	r3, r3, #3
 9452 0624 4049     		ldr	r1, .L451+16
 9453 0626 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9454 0628 1B02     		lsls	r3, r3, #8
 9455 062a 19B2     		sxth	r1, r3
 9456 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9457 062e 0233     		adds	r3, r3, #2
 9458 0630 5B00     		lsls	r3, r3, #1
 9459 0632 3D48     		ldr	r0, .L451+16
 9460 0634 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9461 0636 1BB2     		sxth	r3, r3
 9462 0638 0B43     		orrs	r3, r3, r1
 9463 063a 1BB2     		sxth	r3, r3
 9464 063c 1846     		mov	r0, r3
 9465 063e 3649     		ldr	r1, .L451
 9466 0640 2346     		mov	r3, r4
 9467 0642 5B00     		lsls	r3, r3, #1
 9468 0644 2344     		add	r3, r3, r4
 9469 0646 9B00     		lsls	r3, r3, #2
 9470 0648 1344     		add	r3, r3, r2
 9471 064a 6633     		adds	r3, r3, #102
 9472 064c 41F82300 		str	r0, [r1, r3, lsl #2]
1270:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 9473              		.loc 1 1270 0 discriminator 3
 9474 0650 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9475 0652 3149     		ldr	r1, .L451
 9476 0654 1346     		mov	r3, r2
 9477 0656 DB00     		lsls	r3, r3, #3
 9478 0658 9B1A     		subs	r3, r3, r2
 9479 065a 1B01     		lsls	r3, r3, #4
 9480 065c 0B44     		add	r3, r3, r1
 9481 065e 03F58873 		add	r3, r3, #272
 9482 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9483 0664 1D46     		mov	r5, r3
 9484 0666 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9485 0668 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9486 066a 2B48     		ldr	r0, .L451
 9487 066c 1346     		mov	r3, r2
 9488 066e DB00     		lsls	r3, r3, #3
 9489 0670 9B1A     		subs	r3, r3, r2
 9490 0672 1B01     		lsls	r3, r3, #4
 9491 0674 0344     		add	r3, r3, r0
 9492 0676 03F58873 		add	r3, r3, #272
 9493 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 218


 9494 067c 1C46     		mov	r4, r3
 9495 067e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9496 0680 2548     		ldr	r0, .L451
 9497 0682 2346     		mov	r3, r4
 9498 0684 5B00     		lsls	r3, r3, #1
 9499 0686 2344     		add	r3, r3, r4
 9500 0688 9B00     		lsls	r3, r3, #2
 9501 068a 1344     		add	r3, r3, r2
 9502 068c 6633     		adds	r3, r3, #102
 9503 068e 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9504 0692 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9505 0694 204C     		ldr	r4, .L451
 9506 0696 1346     		mov	r3, r2
 9507 0698 DB00     		lsls	r3, r3, #3
 9508 069a 9B1A     		subs	r3, r3, r2
 9509 069c 1B01     		lsls	r3, r3, #4
 9510 069e 2344     		add	r3, r3, r4
 9511 06a0 03F58873 		add	r3, r3, #272
 9512 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9513 06a6 1E46     		mov	r6, r3
 9514 06a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9515 06aa 1B4C     		ldr	r4, .L451
 9516 06ac 3346     		mov	r3, r6
 9517 06ae 5B00     		lsls	r3, r3, #1
 9518 06b0 3344     		add	r3, r3, r6
 9519 06b2 1B01     		lsls	r3, r3, #4
 9520 06b4 2344     		add	r3, r3, r4
 9521 06b6 1344     		add	r3, r3, r2
 9522 06b8 03F29513 		addw	r3, r3, #405
 9523 06bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9524 06be 00FA03F2 		lsl	r2, r0, r3
 9525 06c2 1548     		ldr	r0, .L451
 9526 06c4 2B46     		mov	r3, r5
 9527 06c6 5B00     		lsls	r3, r3, #1
 9528 06c8 2B44     		add	r3, r3, r5
 9529 06ca 9B00     		lsls	r3, r3, #2
 9530 06cc 0B44     		add	r3, r3, r1
 9531 06ce 6633     		adds	r3, r3, #102
 9532 06d0 40F82320 		str	r2, [r0, r3, lsl #2]
1271:..\src/command_processing.c **** 
1272:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 9533              		.loc 1 1272 0 discriminator 3
 9534 06d4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9535 06d6 1049     		ldr	r1, .L451
 9536 06d8 1346     		mov	r3, r2
 9537 06da DB00     		lsls	r3, r3, #3
 9538 06dc 9B1A     		subs	r3, r3, r2
 9539 06de 1B01     		lsls	r3, r3, #4
 9540 06e0 0B44     		add	r3, r3, r1
 9541 06e2 03F58873 		add	r3, r3, #272
 9542 06e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9543 06e8 1846     		mov	r0, r3
 9544 06ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9545 06ec 0F49     		ldr	r1, .L451+20
 9546 06ee 0346     		mov	r3, r0
 9547 06f0 5B00     		lsls	r3, r3, #1
 9548 06f2 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 219


 9549 06f4 1B01     		lsls	r3, r3, #4
 9550 06f6 0B44     		add	r3, r3, r1
 9551 06f8 1344     		add	r3, r3, r2
 9552 06fa 1433     		adds	r3, r3, #20
 9553 06fc 0022     		movs	r2, #0
 9554 06fe 1A70     		strb	r2, [r3]
1268:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9555              		.loc 1 1268 0 discriminator 3
 9556 0700 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9557 0702 0133     		adds	r3, r3, #1
 9558 0704 FB75     		strb	r3, [r7, #23]
 9559              	.L401:
1268:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9560              		.loc 1 1268 0 is_stmt 0 discriminator 1
 9561 0706 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9562 0708 022B     		cmp	r3, #2
 9563 070a 7FF67CAF 		bls	.L402
1273:..\src/command_processing.c ****             }
1274:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9564              		.loc 1 1274 0 is_stmt 1
 9565 070e 094B     		ldr	r3, .L451+28
 9566 0710 0122     		movs	r2, #1
 9567 0712 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             break;
 9568              		.loc 1 1275 0
 9569 0714 00F078BE 		b	.L386
 9570              	.L452:
 9571              		.align	2
 9572              	.L451:
 9573 0718 00000000 		.word	g_mem
 9574 071c 0B000000 		.word	g_rx+11
 9575 0720 03000000 		.word	g_rx+3
 9576 0724 07000000 		.word	g_rx+7
 9577 0728 00000000 		.word	g_rx
 9578 072c 00000000 		.word	g_meas
 9579 0730 00000000 		.word	g_refNew
 9580 0734 00000000 		.word	reset_last_value_flag
 9581              	.L358:
1276:..\src/command_processing.c ****     
1277:..\src/command_processing.c ****         case 11:        //Position limits
1278:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9582              		.loc 1 1278 0
 9583 0738 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9584 073a C14B     		ldr	r3, .L453
 9585 073c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9586 073e 1906     		lsls	r1, r3, #24
 9587 0740 BF4B     		ldr	r3, .L453
 9588 0742 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9589 0744 1B04     		lsls	r3, r3, #16
 9590 0746 1943     		orrs	r1, r1, r3
 9591 0748 BD4B     		ldr	r3, .L453
 9592 074a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9593 074c 1B02     		lsls	r3, r3, #8
 9594 074e 0B43     		orrs	r3, r3, r1
 9595 0750 BB49     		ldr	r1, .L453
 9596 0752 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9597 0754 1943     		orrs	r1, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 220


 9598 0756 BB48     		ldr	r0, .L453+4
 9599 0758 1346     		mov	r3, r2
 9600 075a DB00     		lsls	r3, r3, #3
 9601 075c 9B1A     		subs	r3, r3, r2
 9602 075e 1B01     		lsls	r3, r3, #4
 9603 0760 0344     		add	r3, r3, r0
 9604 0762 E433     		adds	r3, r3, #228
 9605 0764 1960     		str	r1, [r3]
1279:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9606              		.loc 1 1279 0
 9607 0766 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9608 0768 B54B     		ldr	r3, .L453
 9609 076a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9610 076c 1906     		lsls	r1, r3, #24
 9611 076e B44B     		ldr	r3, .L453
 9612 0770 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9613 0772 1B04     		lsls	r3, r3, #16
 9614 0774 1943     		orrs	r1, r1, r3
 9615 0776 B24B     		ldr	r3, .L453
 9616 0778 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9617 077a 1B02     		lsls	r3, r3, #8
 9618 077c 0B43     		orrs	r3, r3, r1
 9619 077e B049     		ldr	r1, .L453
 9620 0780 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9621 0782 1943     		orrs	r1, r1, r3
 9622 0784 AF48     		ldr	r0, .L453+4
 9623 0786 1346     		mov	r3, r2
 9624 0788 DB00     		lsls	r3, r3, #3
 9625 078a 9B1A     		subs	r3, r3, r2
 9626 078c 1B01     		lsls	r3, r3, #4
 9627 078e 0344     		add	r3, r3, r0
 9628 0790 E833     		adds	r3, r3, #232
 9629 0792 1960     		str	r1, [r3]
1280:..\src/command_processing.c **** 
1281:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9630              		.loc 1 1281 0
 9631 0794 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9632 0796 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9633 0798 AA48     		ldr	r0, .L453+4
 9634 079a 0B46     		mov	r3, r1
 9635 079c DB00     		lsls	r3, r3, #3
 9636 079e 5B1A     		subs	r3, r3, r1
 9637 07a0 1B01     		lsls	r3, r3, #4
 9638 07a2 0344     		add	r3, r3, r0
 9639 07a4 E433     		adds	r3, r3, #228
 9640 07a6 1868     		ldr	r0, [r3]
 9641 07a8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9642 07aa A64C     		ldr	r4, .L453+4
 9643 07ac 0B46     		mov	r3, r1
 9644 07ae DB00     		lsls	r3, r3, #3
 9645 07b0 5B1A     		subs	r3, r3, r1
 9646 07b2 1B01     		lsls	r3, r3, #4
 9647 07b4 2344     		add	r3, r3, r4
 9648 07b6 03F58873 		add	r3, r3, #272
 9649 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9650 07bc 1C46     		mov	r4, r3
 9651 07be A149     		ldr	r1, .L453+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 221


 9652 07c0 2346     		mov	r3, r4
 9653 07c2 5B00     		lsls	r3, r3, #1
 9654 07c4 2344     		add	r3, r3, r4
 9655 07c6 1B01     		lsls	r3, r3, #4
 9656 07c8 0B44     		add	r3, r3, r1
 9657 07ca 03F29513 		addw	r3, r3, #405
 9658 07ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9659 07d0 00FA03F1 		lsl	r1, r0, r3
 9660 07d4 9B48     		ldr	r0, .L453+4
 9661 07d6 1346     		mov	r3, r2
 9662 07d8 DB00     		lsls	r3, r3, #3
 9663 07da 9B1A     		subs	r3, r3, r2
 9664 07dc 1B01     		lsls	r3, r3, #4
 9665 07de 0344     		add	r3, r3, r0
 9666 07e0 E433     		adds	r3, r3, #228
 9667 07e2 1960     		str	r1, [r3]
1282:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 9668              		.loc 1 1282 0
 9669 07e4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9670 07e6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9671 07e8 9648     		ldr	r0, .L453+4
 9672 07ea 0B46     		mov	r3, r1
 9673 07ec DB00     		lsls	r3, r3, #3
 9674 07ee 5B1A     		subs	r3, r3, r1
 9675 07f0 1B01     		lsls	r3, r3, #4
 9676 07f2 0344     		add	r3, r3, r0
 9677 07f4 E833     		adds	r3, r3, #232
 9678 07f6 1868     		ldr	r0, [r3]
 9679 07f8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9680 07fa 924C     		ldr	r4, .L453+4
 9681 07fc 0B46     		mov	r3, r1
 9682 07fe DB00     		lsls	r3, r3, #3
 9683 0800 5B1A     		subs	r3, r3, r1
 9684 0802 1B01     		lsls	r3, r3, #4
 9685 0804 2344     		add	r3, r3, r4
 9686 0806 03F58873 		add	r3, r3, #272
 9687 080a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9688 080c 1C46     		mov	r4, r3
 9689 080e 8D49     		ldr	r1, .L453+4
 9690 0810 2346     		mov	r3, r4
 9691 0812 5B00     		lsls	r3, r3, #1
 9692 0814 2344     		add	r3, r3, r4
 9693 0816 1B01     		lsls	r3, r3, #4
 9694 0818 0B44     		add	r3, r3, r1
 9695 081a 03F29513 		addw	r3, r3, #405
 9696 081e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9697 0820 00FA03F1 		lsl	r1, r0, r3
 9698 0824 8748     		ldr	r0, .L453+4
 9699 0826 1346     		mov	r3, r2
 9700 0828 DB00     		lsls	r3, r3, #3
 9701 082a 9B1A     		subs	r3, r3, r2
 9702 082c 1B01     		lsls	r3, r3, #4
 9703 082e 0344     		add	r3, r3, r0
 9704 0830 E833     		adds	r3, r3, #232
 9705 0832 1960     		str	r1, [r3]
1283:..\src/command_processing.c ****             break;            
 9706              		.loc 1 1283 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 222


 9707 0834 00F0E8BD 		b	.L386
 9708              	.L359:
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****         case 23:        //Rest Position
1286:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9709              		.loc 1 1286 0
 9710 0838 814B     		ldr	r3, .L453
 9711 083a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9712 083c 1A06     		lsls	r2, r3, #24
 9713 083e 804B     		ldr	r3, .L453
 9714 0840 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9715 0842 1B04     		lsls	r3, r3, #16
 9716 0844 1A43     		orrs	r2, r2, r3
 9717 0846 7E4B     		ldr	r3, .L453
 9718 0848 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9719 084a 1B02     		lsls	r3, r3, #8
 9720 084c 1343     		orrs	r3, r3, r2
 9721 084e 7C4A     		ldr	r2, .L453
 9722 0850 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9723 0852 1343     		orrs	r3, r3, r2
 9724 0854 7B4A     		ldr	r2, .L453+4
 9725 0856 C2F8A032 		str	r3, [r2, #672]
1287:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9726              		.loc 1 1287 0
 9727 085a 7A4B     		ldr	r3, .L453+4
 9728 085c D3F8A012 		ldr	r1, [r3, #672]
 9729 0860 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9730 0862 7848     		ldr	r0, .L453+4
 9731 0864 1346     		mov	r3, r2
 9732 0866 DB00     		lsls	r3, r3, #3
 9733 0868 9B1A     		subs	r3, r3, r2
 9734 086a 1B01     		lsls	r3, r3, #4
 9735 086c 0344     		add	r3, r3, r0
 9736 086e 03F58873 		add	r3, r3, #272
 9737 0872 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9738 0874 1846     		mov	r0, r3
 9739 0876 734A     		ldr	r2, .L453+4
 9740 0878 0346     		mov	r3, r0
 9741 087a 5B00     		lsls	r3, r3, #1
 9742 087c 0344     		add	r3, r3, r0
 9743 087e 1B01     		lsls	r3, r3, #4
 9744 0880 1344     		add	r3, r3, r2
 9745 0882 03F29513 		addw	r3, r3, #405
 9746 0886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9747 0888 01FA03F3 		lsl	r3, r1, r3
 9748 088c 6D4A     		ldr	r2, .L453+4
 9749 088e C2F8A032 		str	r3, [r2, #672]
1288:..\src/command_processing.c ****             break; 
 9750              		.loc 1 1288 0
 9751 0892 00F0B9BD 		b	.L386
 9752              	.L360:
1289:..\src/command_processing.c ****             
1290:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1291:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9753              		.loc 1 1291 0
 9754 0896 6A4B     		ldr	r3, .L453
 9755 0898 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 223


 9756 089a 1A06     		lsls	r2, r3, #24
 9757 089c 684B     		ldr	r3, .L453
 9758 089e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9759 08a0 1B04     		lsls	r3, r3, #16
 9760 08a2 1A43     		orrs	r2, r2, r3
 9761 08a4 664B     		ldr	r3, .L453
 9762 08a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9763 08a8 1B02     		lsls	r3, r3, #8
 9764 08aa 1343     		orrs	r3, r3, r2
 9765 08ac 644A     		ldr	r2, .L453
 9766 08ae 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9767 08b0 1343     		orrs	r3, r3, r2
 9768 08b2 644A     		ldr	r2, .L453+4
 9769 08b4 C2F8A432 		str	r3, [r2, #676]
1292:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9770              		.loc 1 1292 0
 9771 08b8 624B     		ldr	r3, .L453+4
 9772 08ba D3F8A432 		ldr	r3, [r3, #676]
 9773 08be 092B     		cmp	r3, #9
 9774 08c0 00F39985 		bgt	.L444
 9775              		.loc 1 1292 0 is_stmt 0 discriminator 1
 9776 08c4 5F4B     		ldr	r3, .L453+4
 9777 08c6 0A22     		movs	r2, #10
 9778 08c8 C3F8A422 		str	r2, [r3, #676]
1293:..\src/command_processing.c ****            break; 
 9779              		.loc 1 1293 0 is_stmt 1 discriminator 1
 9780 08cc 00F093BD 		b	.L444
 9781              	.L361:
1294:..\src/command_processing.c ****             
1295:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1296:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9782              		.loc 1 1296 0
 9783 08d0 5B4B     		ldr	r3, .L453
 9784 08d2 DB78     		ldrb	r3, [r3, #3]
 9785 08d4 BB74     		strb	r3, [r7, #18]
1297:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9786              		.loc 1 1297 0
 9787 08d6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9788 08d8 002B     		cmp	r3, #0
 9789 08da 04D0     		beq	.L404
1298:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9790              		.loc 1 1298 0
 9791 08dc 594B     		ldr	r3, .L453+4
 9792 08de 0122     		movs	r2, #1
 9793 08e0 83F8A720 		strb	r2, [r3, #167]
 9794 08e4 03E0     		b	.L405
 9795              	.L404:
1299:..\src/command_processing.c ****             } else {            // 0
1300:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9796              		.loc 1 1300 0
 9797 08e6 574B     		ldr	r3, .L453+4
 9798 08e8 0022     		movs	r2, #0
 9799 08ea 83F8A720 		strb	r2, [r3, #167]
 9800              	.L405:
1301:..\src/command_processing.c ****             }
1302:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 9801              		.loc 1 1302 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 224


 9802 08ee 564B     		ldr	r3, .L453+8
 9803 08f0 0122     		movs	r2, #1
 9804 08f2 1A70     		strb	r2, [r3]
1303:..\src/command_processing.c **** 
1304:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9805              		.loc 1 1304 0
 9806 08f4 534B     		ldr	r3, .L453+4
 9807 08f6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9808 08fa 002B     		cmp	r3, #0
 9809 08fc 40F07D85 		bne	.L445
1305:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1306:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9810              		.loc 1 1306 0
 9811 0900 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9812 0902 504B     		ldr	r3, .L453+4
 9813 0904 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9814 0908 4E49     		ldr	r1, .L453+4
 9815 090a 1346     		mov	r3, r2
 9816 090c DB00     		lsls	r3, r3, #3
 9817 090e 9B1A     		subs	r3, r3, r2
 9818 0910 1B01     		lsls	r3, r3, #4
 9819 0912 0B44     		add	r3, r3, r1
 9820 0914 03F58873 		add	r3, r3, #272
 9821 0918 0246     		mov	r2, r0
 9822 091a 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                 
1308:..\src/command_processing.c ****                 // Change also gears parameters
1309:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9823              		.loc 1 1309 0
 9824 091c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9825 091e 4949     		ldr	r1, .L453+4
 9826 0920 1346     		mov	r3, r2
 9827 0922 DB00     		lsls	r3, r3, #3
 9828 0924 9B1A     		subs	r3, r3, r2
 9829 0926 1B01     		lsls	r3, r3, #4
 9830 0928 0B44     		add	r3, r3, r1
 9831 092a 03F58873 		add	r3, r3, #272
 9832 092e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9833 0930 1946     		mov	r1, r3
 9834 0932 444A     		ldr	r2, .L453+4
 9835 0934 0B46     		mov	r3, r1
 9836 0936 5B00     		lsls	r3, r3, #1
 9837 0938 0B44     		add	r3, r3, r1
 9838 093a 1B01     		lsls	r3, r3, #4
 9839 093c 1344     		add	r3, r3, r2
 9840 093e 03F5D873 		add	r3, r3, #432
 9841 0942 0122     		movs	r2, #1
 9842 0944 1A70     		strb	r2, [r3]
1310:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9843              		.loc 1 1310 0
 9844 0946 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9845 0948 3E49     		ldr	r1, .L453+4
 9846 094a 1346     		mov	r3, r2
 9847 094c DB00     		lsls	r3, r3, #3
 9848 094e 9B1A     		subs	r3, r3, r2
 9849 0950 1B01     		lsls	r3, r3, #4
 9850 0952 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 225


 9851 0954 03F58873 		add	r3, r3, #272
 9852 0958 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9853 095a 1946     		mov	r1, r3
 9854 095c 394A     		ldr	r2, .L453+4
 9855 095e 0B46     		mov	r3, r1
 9856 0960 5B00     		lsls	r3, r3, #1
 9857 0962 0B44     		add	r3, r3, r1
 9858 0964 1B01     		lsls	r3, r3, #4
 9859 0966 1344     		add	r3, r3, r2
 9860 0968 03F2B513 		addw	r3, r3, #437
 9861 096c 2322     		movs	r2, #35
 9862 096e 1A70     		strb	r2, [r3]
1311:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9863              		.loc 1 1311 0
 9864 0970 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9865 0972 3449     		ldr	r1, .L453+4
 9866 0974 1346     		mov	r3, r2
 9867 0976 DB00     		lsls	r3, r3, #3
 9868 0978 9B1A     		subs	r3, r3, r2
 9869 097a 1B01     		lsls	r3, r3, #4
 9870 097c 0B44     		add	r3, r3, r1
 9871 097e 03F58873 		add	r3, r3, #272
 9872 0982 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9873 0984 1946     		mov	r1, r3
 9874 0986 2F4A     		ldr	r2, .L453+4
 9875 0988 0B46     		mov	r3, r1
 9876 098a 5B00     		lsls	r3, r3, #1
 9877 098c 0B44     		add	r3, r3, r1
 9878 098e 1B01     		lsls	r3, r3, #4
 9879 0990 1344     		add	r3, r3, r2
 9880 0992 03F5DB73 		add	r3, r3, #438
 9881 0996 0322     		movs	r2, #3
 9882 0998 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9883              		.loc 1 1312 0
 9884 099a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9885 099c 2949     		ldr	r1, .L453+4
 9886 099e 1346     		mov	r3, r2
 9887 09a0 DB00     		lsls	r3, r3, #3
 9888 09a2 9B1A     		subs	r3, r3, r2
 9889 09a4 1B01     		lsls	r3, r3, #4
 9890 09a6 0B44     		add	r3, r3, r1
 9891 09a8 03F58873 		add	r3, r3, #272
 9892 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9893 09ae 1946     		mov	r1, r3
 9894 09b0 244A     		ldr	r2, .L453+4
 9895 09b2 0B46     		mov	r3, r1
 9896 09b4 5B00     		lsls	r3, r3, #1
 9897 09b6 0B44     		add	r3, r3, r1
 9898 09b8 1B01     		lsls	r3, r3, #4
 9899 09ba 1344     		add	r3, r3, r2
 9900 09bc 03F2B713 		addw	r3, r3, #439
 9901 09c0 FF22     		movs	r2, #255
 9902 09c2 1A70     		strb	r2, [r3]
1313:..\src/command_processing.c ****                 
1314:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 226


 9903              		.loc 1 1315 0
 9904 09c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9905 09c6 1F49     		ldr	r1, .L453+4
 9906 09c8 1346     		mov	r3, r2
 9907 09ca DB00     		lsls	r3, r3, #3
 9908 09cc 9B1A     		subs	r3, r3, r2
 9909 09ce 1B01     		lsls	r3, r3, #4
 9910 09d0 0B44     		add	r3, r3, r1
 9911 09d2 03F21113 		addw	r3, r3, #273
 9912 09d6 0122     		movs	r2, #1
 9913 09d8 1A70     		strb	r2, [r3]
1316:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 9914              		.loc 1 1316 0
 9915 09da 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9916 09dc 1949     		ldr	r1, .L453+4
 9917 09de 1346     		mov	r3, r2
 9918 09e0 DB00     		lsls	r3, r3, #3
 9919 09e2 9B1A     		subs	r3, r3, r2
 9920 09e4 1B01     		lsls	r3, r3, #4
 9921 09e6 0B44     		add	r3, r3, r1
 9922 09e8 03F58973 		add	r3, r3, #274
 9923 09ec 0122     		movs	r2, #1
 9924 09ee 1A70     		strb	r2, [r3]
1317:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9925              		.loc 1 1317 0
 9926 09f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9927 09f2 1449     		ldr	r1, .L453+4
 9928 09f4 1346     		mov	r3, r2
 9929 09f6 DB00     		lsls	r3, r3, #3
 9930 09f8 9B1A     		subs	r3, r3, r2
 9931 09fa 1B01     		lsls	r3, r3, #4
 9932 09fc 0B44     		add	r3, r3, r1
 9933 09fe E433     		adds	r3, r3, #228
 9934 0a00 0022     		movs	r2, #0
 9935 0a02 1A60     		str	r2, [r3]
1318:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9936              		.loc 1 1318 0
 9937 0a04 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9938 0a06 0F4B     		ldr	r3, .L453+4
 9939 0a08 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9940 0a0c 1846     		mov	r0, r3
 9941 0a0e 0D49     		ldr	r1, .L453+4
 9942 0a10 0346     		mov	r3, r0
 9943 0a12 5B00     		lsls	r3, r3, #1
 9944 0a14 0344     		add	r3, r3, r0
 9945 0a16 1B01     		lsls	r3, r3, #4
 9946 0a18 0B44     		add	r3, r3, r1
 9947 0a1a 03F29513 		addw	r3, r3, #405
 9948 0a1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9949 0a20 1946     		mov	r1, r3
 9950 0a22 4FF47A53 		mov	r3, #16000
 9951 0a26 03FA01F1 		lsl	r1, r3, r1
 9952 0a2a 0648     		ldr	r0, .L453+4
 9953 0a2c 1346     		mov	r3, r2
 9954 0a2e DB00     		lsls	r3, r3, #3
 9955 0a30 9B1A     		subs	r3, r3, r2
 9956 0a32 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 227


 9957 0a34 0344     		add	r3, r3, r0
 9958 0a36 E833     		adds	r3, r3, #232
 9959 0a38 1960     		str	r1, [r3]
1319:..\src/command_processing.c ****             }    
1320:..\src/command_processing.c **** 
1321:..\src/command_processing.c ****             break; 
 9960              		.loc 1 1321 0
 9961 0a3a 00F0DEBC 		b	.L445
 9962              	.L454:
 9963 0a3e 00BF     		.align	2
 9964              	.L453:
 9965 0a40 00000000 		.word	g_rx
 9966 0a44 00000000 		.word	g_mem
 9967 0a48 00000000 		.word	reset_last_value_flag
 9968              	.L362:
1322:..\src/command_processing.c **** 
1323:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1324:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9969              		.loc 1 1324 0
 9970 0a4c A94B     		ldr	r3, .L455
 9971 0a4e DB78     		ldrb	r3, [r3, #3]
 9972 0a50 BB74     		strb	r3, [r7, #18]
1325:..\src/command_processing.c ****             if (aux_uchar) {
 9973              		.loc 1 1325 0
 9974 0a52 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9975 0a54 002B     		cmp	r3, #0
 9976 0a56 05D0     		beq	.L407
1326:..\src/command_processing.c ****                 reset_counters();
 9977              		.loc 1 1326 0
 9978 0a58 FFF7FEFF 		bl	reset_counters
1327:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 9979              		.loc 1 1327 0
 9980 0a5c A64B     		ldr	r3, .L455+4
 9981 0a5e 0022     		movs	r2, #0
 9982 0a60 83F8A820 		strb	r2, [r3, #168]
 9983              	.L407:
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             
1330:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9984              		.loc 1 1330 0
 9985 0a64 A54B     		ldr	r3, .L455+8
 9986 0a66 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9987 0a6a 012B     		cmp	r3, #1
 9988 0a6c 40F0C784 		bne	.L446
1331:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1332:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 9989              		.loc 1 1332 0
 9990 0a70 8720     		movs	r0, #135
 9991 0a72 FFF7FEFF 		bl	DS1302_read
 9992 0a76 0346     		mov	r3, r0
 9993 0a78 BB74     		strb	r3, [r7, #18]
1333:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 9994              		.loc 1 1333 0
 9995 0a7a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9996 0a7c 1B09     		lsrs	r3, r3, #4
 9997 0a7e DBB2     		uxtb	r3, r3
 9998 0a80 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 228


 9999 0a82 9200     		lsls	r2, r2, #2
 10000 0a84 1344     		add	r3, r3, r2
 10001 0a86 5B00     		lsls	r3, r3, #1
 10002 0a88 DAB2     		uxtb	r2, r3
 10003 0a8a BB7C     		ldrb	r3, [r7, #18]
 10004 0a8c 03F00F03 		and	r3, r3, #15
 10005 0a90 DBB2     		uxtb	r3, r3
 10006 0a92 1344     		add	r3, r3, r2
 10007 0a94 DAB2     		uxtb	r2, r3
 10008 0a96 984B     		ldr	r3, .L455+4
 10009 0a98 83F8A420 		strb	r2, [r3, #164]
1334:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10010              		.loc 1 1334 0
 10011 0a9c 8920     		movs	r0, #137
 10012 0a9e FFF7FEFF 		bl	DS1302_read
 10013 0aa2 0346     		mov	r3, r0
 10014 0aa4 BB74     		strb	r3, [r7, #18]
1335:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10015              		.loc 1 1335 0
 10016 0aa6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10017 0aa8 1B09     		lsrs	r3, r3, #4
 10018 0aaa DBB2     		uxtb	r3, r3
 10019 0aac 1A46     		mov	r2, r3
 10020 0aae 9200     		lsls	r2, r2, #2
 10021 0ab0 1344     		add	r3, r3, r2
 10022 0ab2 5B00     		lsls	r3, r3, #1
 10023 0ab4 DAB2     		uxtb	r2, r3
 10024 0ab6 BB7C     		ldrb	r3, [r7, #18]
 10025 0ab8 03F00F03 		and	r3, r3, #15
 10026 0abc DBB2     		uxtb	r3, r3
 10027 0abe 1344     		add	r3, r3, r2
 10028 0ac0 DAB2     		uxtb	r2, r3
 10029 0ac2 8D4B     		ldr	r3, .L455+4
 10030 0ac4 83F8A520 		strb	r2, [r3, #165]
1336:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10031              		.loc 1 1336 0
 10032 0ac8 8D20     		movs	r0, #141
 10033 0aca FFF7FEFF 		bl	DS1302_read
 10034 0ace 0346     		mov	r3, r0
 10035 0ad0 BB74     		strb	r3, [r7, #18]
1337:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10036              		.loc 1 1337 0
 10037 0ad2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10038 0ad4 1B09     		lsrs	r3, r3, #4
 10039 0ad6 DBB2     		uxtb	r3, r3
 10040 0ad8 1A46     		mov	r2, r3
 10041 0ada 9200     		lsls	r2, r2, #2
 10042 0adc 1344     		add	r3, r3, r2
 10043 0ade 5B00     		lsls	r3, r3, #1
 10044 0ae0 DAB2     		uxtb	r2, r3
 10045 0ae2 BB7C     		ldrb	r3, [r7, #18]
 10046 0ae4 03F00F03 		and	r3, r3, #15
 10047 0ae8 DBB2     		uxtb	r3, r3
 10048 0aea 1344     		add	r3, r3, r2
 10049 0aec DAB2     		uxtb	r2, r3
 10050 0aee 824B     		ldr	r3, .L455+4
 10051 0af0 83F8A620 		strb	r2, [r3, #166]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 229


1338:..\src/command_processing.c ****             }
1339:..\src/command_processing.c ****             break;             
 10052              		.loc 1 1339 0
 10053 0af4 00F083BC 		b	.L446
 10054              	.L363:
 10055              	.LBB15:
1340:..\src/command_processing.c ****             
1341:..\src/command_processing.c ****         case 32:         //Current Time
1342:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10056              		.loc 1 1342 0
 10057 0af8 0023     		movs	r3, #0
 10058 0afa 7B75     		strb	r3, [r7, #21]
 10059 0afc 0CE0     		b	.L409
 10060              	.L410:
1343:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10061              		.loc 1 1343 0 discriminator 3
 10062 0afe 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10063 0b00 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10064 0b02 0332     		adds	r2, r2, #3
 10065 0b04 7B49     		ldr	r1, .L455
 10066 0b06 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10067 0b08 7B4A     		ldr	r2, .L455+4
 10068 0b0a 1344     		add	r3, r3, r2
 10069 0b0c 0A46     		mov	r2, r1
 10070 0b0e 83F82022 		strb	r2, [r3, #544]
1342:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10071              		.loc 1 1342 0 discriminator 3
 10072 0b12 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10073 0b14 0133     		adds	r3, r3, #1
 10074 0b16 7B75     		strb	r3, [r7, #21]
 10075              	.L409:
1342:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10076              		.loc 1 1342 0 is_stmt 0 discriminator 1
 10077 0b18 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10078 0b1a 052B     		cmp	r3, #5
 10079 0b1c EFD9     		bls	.L410
 10080              	.LBE15:
1344:..\src/command_processing.c ****             }
1345:..\src/command_processing.c ****             
1346:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10081              		.loc 1 1346 0 is_stmt 1
 10082 0b1e 764B     		ldr	r3, .L455+4
 10083 0b20 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10084 0b24 012B     		cmp	r3, #1
 10085 0b26 40F06C84 		bne	.L447
1347:..\src/command_processing.c ****                 set_RTC_time();
 10086              		.loc 1 1347 0
 10087 0b2a FFF7FEFF 		bl	set_RTC_time
1348:..\src/command_processing.c ****             }
1349:..\src/command_processing.c ****             break;
 10088              		.loc 1 1349 0
 10089 0b2e 00F068BC 		b	.L447
 10090              	.L364:
1350:..\src/command_processing.c ****            
1351:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1352:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10091              		.loc 1 1352 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 230


 10092 0b32 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10093 0b34 6F4B     		ldr	r3, .L455
 10094 0b36 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10095 0b38 6F49     		ldr	r1, .L455+4
 10096 0b3a 1346     		mov	r3, r2
 10097 0b3c DB00     		lsls	r3, r3, #3
 10098 0b3e 9B1A     		subs	r3, r3, r2
 10099 0b40 1B01     		lsls	r3, r3, #4
 10100 0b42 0B44     		add	r3, r3, r1
 10101 0b44 E233     		adds	r3, r3, #226
 10102 0b46 0246     		mov	r2, r0
 10103 0b48 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10104              		.loc 1 1353 0
 10105 0b4a 6B4B     		ldr	r3, .L455+4
 10106 0b4c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10107 0b50 5B00     		lsls	r3, r3, #1
 10108 0b52 5AB2     		sxtb	r2, r3
 10109 0b54 684B     		ldr	r3, .L455+4
 10110 0b56 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10111 0b5a 5BB2     		sxtb	r3, r3
 10112 0b5c 1343     		orrs	r3, r3, r2
 10113 0b5e 5BB2     		sxtb	r3, r3
 10114 0b60 DBB2     		uxtb	r3, r3
 10115 0b62 1846     		mov	r0, r3
 10116 0b64 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1354:..\src/command_processing.c ****             break;
 10117              		.loc 1 1354 0
 10118 0b68 00F04EBC 		b	.L386
 10119              	.L365:
1355:..\src/command_processing.c ****             
1356:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1357:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10120              		.loc 1 1357 0
 10121 0b6c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10122 0b6e 6349     		ldr	r1, .L455+8
 10123 0b70 1346     		mov	r3, r2
 10124 0b72 DB00     		lsls	r3, r3, #3
 10125 0b74 9B1A     		subs	r3, r3, r2
 10126 0b76 1B01     		lsls	r3, r3, #4
 10127 0b78 0B44     		add	r3, r3, r1
 10128 0b7a 03F20F13 		addw	r3, r3, #271
 10129 0b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10130 0b80 032B     		cmp	r3, #3
 10131 0b82 00F08580 		beq	.L412
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10132              		.loc 1 1358 0
 10133 0b86 5E4B     		ldr	r3, .L455+12
 10134 0b88 1B68     		ldr	r3, [r3]	@ float
 10135 0b8a FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10136              		.loc 1 1359 0
 10137 0b8c 0023     		movs	r3, #0
 10138 0b8e BB75     		strb	r3, [r7, #22]
 10139 0b90 0EE0     		b	.L413
 10140              	.L414:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 231


 10141              		.loc 1 1360 0 discriminator 3
 10142 0b92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10143 0b94 C3F10303 		rsb	r3, r3, #3
 10144 0b98 07F10802 		add	r2, r7, #8
 10145 0b9c 1344     		add	r3, r3, r2
 10146 0b9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10147 0ba0 07F10C01 		add	r1, r7, #12
 10148 0ba4 0A44     		add	r2, r2, r1
 10149 0ba6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10150 0ba8 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10151              		.loc 1 1359 0 discriminator 3
 10152 0baa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10153 0bac 0133     		adds	r3, r3, #1
 10154 0bae BB75     		strb	r3, [r7, #22]
 10155              	.L413:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10156              		.loc 1 1359 0 is_stmt 0 discriminator 1
 10157 0bb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10158 0bb2 032B     		cmp	r3, #3
 10159 0bb4 EDD9     		bls	.L414
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10160              		.loc 1 1362 0 is_stmt 1
 10161 0bb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10162 0bb8 BB68     		ldr	r3, [r7, #8]	@ float
 10163 0bba 4FF08F41 		mov	r1, #1199570944
 10164 0bbe 1846     		mov	r0, r3
 10165 0bc0 FFF7FEFF 		bl	__aeabi_fmul
 10166 0bc4 0346     		mov	r3, r0
 10167 0bc6 1846     		mov	r0, r3
 10168 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 10169 0bcc 0146     		mov	r1, r0
 10170 0bce 4A4A     		ldr	r2, .L455+4
 10171 0bd0 2346     		mov	r3, r4
 10172 0bd2 DB00     		lsls	r3, r3, #3
 10173 0bd4 1B1B     		subs	r3, r3, r4
 10174 0bd6 1B01     		lsls	r3, r3, #4
 10175 0bd8 1344     		add	r3, r3, r2
 10176 0bda B033     		adds	r3, r3, #176
 10177 0bdc 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10178              		.loc 1 1364 0
 10179 0bde 494B     		ldr	r3, .L455+16
 10180 0be0 1B68     		ldr	r3, [r3]	@ float
 10181 0be2 FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10182              		.loc 1 1365 0
 10183 0be4 0023     		movs	r3, #0
 10184 0be6 BB75     		strb	r3, [r7, #22]
 10185 0be8 0EE0     		b	.L415
 10186              	.L416:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10187              		.loc 1 1366 0 discriminator 3
 10188 0bea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10189 0bec C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 232


 10190 0bf0 07F10802 		add	r2, r7, #8
 10191 0bf4 1344     		add	r3, r3, r2
 10192 0bf6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10193 0bf8 07F10C01 		add	r1, r7, #12
 10194 0bfc 0A44     		add	r2, r2, r1
 10195 0bfe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10196 0c00 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10197              		.loc 1 1365 0 discriminator 3
 10198 0c02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10199 0c04 0133     		adds	r3, r3, #1
 10200 0c06 BB75     		strb	r3, [r7, #22]
 10201              	.L415:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10202              		.loc 1 1365 0 is_stmt 0 discriminator 1
 10203 0c08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10204 0c0a 032B     		cmp	r3, #3
 10205 0c0c EDD9     		bls	.L416
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10206              		.loc 1 1368 0 is_stmt 1
 10207 0c0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10208 0c10 BB68     		ldr	r3, [r7, #8]	@ float
 10209 0c12 4FF08F41 		mov	r1, #1199570944
 10210 0c16 1846     		mov	r0, r3
 10211 0c18 FFF7FEFF 		bl	__aeabi_fmul
 10212 0c1c 0346     		mov	r3, r0
 10213 0c1e 1846     		mov	r0, r3
 10214 0c20 FFF7FEFF 		bl	__aeabi_f2iz
 10215 0c24 0146     		mov	r1, r0
 10216 0c26 344A     		ldr	r2, .L455+4
 10217 0c28 2346     		mov	r3, r4
 10218 0c2a DB00     		lsls	r3, r3, #3
 10219 0c2c 1B1B     		subs	r3, r3, r4
 10220 0c2e 1B01     		lsls	r3, r3, #4
 10221 0c30 1344     		add	r3, r3, r2
 10222 0c32 B433     		adds	r3, r3, #180
 10223 0c34 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****                 
1370:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10224              		.loc 1 1370 0
 10225 0c36 344B     		ldr	r3, .L455+20
 10226 0c38 1B68     		ldr	r3, [r3]	@ float
 10227 0c3a FB60     		str	r3, [r7, #12]	@ float
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10228              		.loc 1 1371 0
 10229 0c3c 0023     		movs	r3, #0
 10230 0c3e BB75     		strb	r3, [r7, #22]
 10231 0c40 0EE0     		b	.L417
 10232              	.L418:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10233              		.loc 1 1372 0 discriminator 3
 10234 0c42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10235 0c44 C3F10303 		rsb	r3, r3, #3
 10236 0c48 07F10802 		add	r2, r7, #8
 10237 0c4c 1344     		add	r3, r3, r2
 10238 0c4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 233


 10239 0c50 07F10C01 		add	r1, r7, #12
 10240 0c54 0A44     		add	r2, r2, r1
 10241 0c56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10242 0c58 1A70     		strb	r2, [r3]
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10243              		.loc 1 1371 0 discriminator 3
 10244 0c5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10245 0c5c 0133     		adds	r3, r3, #1
 10246 0c5e BB75     		strb	r3, [r7, #22]
 10247              	.L417:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10248              		.loc 1 1371 0 is_stmt 0 discriminator 1
 10249 0c60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10250 0c62 032B     		cmp	r3, #3
 10251 0c64 EDD9     		bls	.L418
1373:..\src/command_processing.c ****                 }
1374:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10252              		.loc 1 1374 0 is_stmt 1
 10253 0c66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10254 0c68 BB68     		ldr	r3, [r7, #8]	@ float
 10255 0c6a 4FF08F41 		mov	r1, #1199570944
 10256 0c6e 1846     		mov	r0, r3
 10257 0c70 FFF7FEFF 		bl	__aeabi_fmul
 10258 0c74 0346     		mov	r3, r0
 10259 0c76 1846     		mov	r0, r3
 10260 0c78 FFF7FEFF 		bl	__aeabi_f2iz
 10261 0c7c 0146     		mov	r1, r0
 10262 0c7e 1E4A     		ldr	r2, .L455+4
 10263 0c80 2346     		mov	r3, r4
 10264 0c82 DB00     		lsls	r3, r3, #3
 10265 0c84 1B1B     		subs	r3, r3, r4
 10266 0c86 1B01     		lsls	r3, r3, #4
 10267 0c88 1344     		add	r3, r3, r2
 10268 0c8a B833     		adds	r3, r3, #184
 10269 0c8c 1960     		str	r1, [r3]
1375:..\src/command_processing.c ****             }
1376:..\src/command_processing.c ****             else {
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****                 
1389:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1392:..\src/command_processing.c ****                 }
1393:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1394:..\src/command_processing.c ****             }
1395:..\src/command_processing.c ****             break;
 10270              		.loc 1 1395 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 234


 10271 0c8e BBE3     		b	.L386
 10272              	.L412:
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10273              		.loc 1 1377 0
 10274 0c90 1B4B     		ldr	r3, .L455+12
 10275 0c92 1B68     		ldr	r3, [r3]	@ float
 10276 0c94 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10277              		.loc 1 1378 0
 10278 0c96 0023     		movs	r3, #0
 10279 0c98 BB75     		strb	r3, [r7, #22]
 10280 0c9a 0EE0     		b	.L420
 10281              	.L421:
1379:..\src/command_processing.c ****                 }
 10282              		.loc 1 1379 0 discriminator 3
 10283 0c9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10284 0c9e C3F10303 		rsb	r3, r3, #3
 10285 0ca2 07F10802 		add	r2, r7, #8
 10286 0ca6 1344     		add	r3, r3, r2
 10287 0ca8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10288 0caa 07F10C01 		add	r1, r7, #12
 10289 0cae 0A44     		add	r2, r2, r1
 10290 0cb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10291 0cb2 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10292              		.loc 1 1378 0 discriminator 3
 10293 0cb4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10294 0cb6 0133     		adds	r3, r3, #1
 10295 0cb8 BB75     		strb	r3, [r7, #22]
 10296              	.L420:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10297              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10298 0cba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10299 0cbc 032B     		cmp	r3, #3
 10300 0cbe EDD9     		bls	.L421
1381:..\src/command_processing.c ****                 
 10301              		.loc 1 1381 0 is_stmt 1
 10302 0cc0 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10303 0cc2 BB68     		ldr	r3, [r7, #8]	@ float
 10304 0cc4 4FF08F41 		mov	r1, #1199570944
 10305 0cc8 1846     		mov	r0, r3
 10306 0cca FFF7FEFF 		bl	__aeabi_fmul
 10307 0cce 0346     		mov	r3, r0
 10308 0cd0 1846     		mov	r0, r3
 10309 0cd2 FFF7FEFF 		bl	__aeabi_f2iz
 10310 0cd6 0146     		mov	r1, r0
 10311 0cd8 074A     		ldr	r2, .L455+4
 10312 0cda 2346     		mov	r3, r4
 10313 0cdc DB00     		lsls	r3, r3, #3
 10314 0cde 1B1B     		subs	r3, r3, r4
 10315 0ce0 1B01     		lsls	r3, r3, #4
 10316 0ce2 1344     		add	r3, r3, r2
 10317 0ce4 C833     		adds	r3, r3, #200
 10318 0ce6 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10319              		.loc 1 1383 0
 10320 0ce8 064B     		ldr	r3, .L455+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 235


 10321 0cea 1B68     		ldr	r3, [r3]	@ float
 10322 0cec FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10323              		.loc 1 1384 0
 10324 0cee 0023     		movs	r3, #0
 10325 0cf0 BB75     		strb	r3, [r7, #22]
 10326 0cf2 1AE0     		b	.L422
 10327              	.L456:
 10328              		.align	2
 10329              	.L455:
 10330 0cf4 00000000 		.word	g_rx
 10331 0cf8 00000000 		.word	g_mem
 10332 0cfc 00000000 		.word	c_mem
 10333 0d00 03000000 		.word	g_rx+3
 10334 0d04 07000000 		.word	g_rx+7
 10335 0d08 0B000000 		.word	g_rx+11
 10336              	.L423:
1385:..\src/command_processing.c ****                 }
 10337              		.loc 1 1385 0 discriminator 3
 10338 0d0c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10339 0d0e C3F10303 		rsb	r3, r3, #3
 10340 0d12 07F10802 		add	r2, r7, #8
 10341 0d16 1344     		add	r3, r3, r2
 10342 0d18 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10343 0d1a 07F10C01 		add	r1, r7, #12
 10344 0d1e 0A44     		add	r2, r2, r1
 10345 0d20 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10346 0d22 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10347              		.loc 1 1384 0 discriminator 3
 10348 0d24 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10349 0d26 0133     		adds	r3, r3, #1
 10350 0d28 BB75     		strb	r3, [r7, #22]
 10351              	.L422:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10352              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10353 0d2a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10354 0d2c 032B     		cmp	r3, #3
 10355 0d2e EDD9     		bls	.L423
1387:..\src/command_processing.c ****                 
 10356              		.loc 1 1387 0 is_stmt 1
 10357 0d30 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10358 0d32 BB68     		ldr	r3, [r7, #8]	@ float
 10359 0d34 4FF08F41 		mov	r1, #1199570944
 10360 0d38 1846     		mov	r0, r3
 10361 0d3a FFF7FEFF 		bl	__aeabi_fmul
 10362 0d3e 0346     		mov	r3, r0
 10363 0d40 1846     		mov	r0, r3
 10364 0d42 FFF7FEFF 		bl	__aeabi_f2iz
 10365 0d46 0146     		mov	r1, r0
 10366 0d48 A54A     		ldr	r2, .L457
 10367 0d4a 2346     		mov	r3, r4
 10368 0d4c DB00     		lsls	r3, r3, #3
 10369 0d4e 1B1B     		subs	r3, r3, r4
 10370 0d50 1B01     		lsls	r3, r3, #4
 10371 0d52 1344     		add	r3, r3, r2
 10372 0d54 CC33     		adds	r3, r3, #204
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 236


 10373 0d56 1960     		str	r1, [r3]
1389:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10374              		.loc 1 1389 0
 10375 0d58 A24B     		ldr	r3, .L457+4
 10376 0d5a 1B68     		ldr	r3, [r3]	@ float
 10377 0d5c FB60     		str	r3, [r7, #12]	@ float
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10378              		.loc 1 1390 0
 10379 0d5e 0023     		movs	r3, #0
 10380 0d60 BB75     		strb	r3, [r7, #22]
 10381 0d62 0EE0     		b	.L424
 10382              	.L425:
1391:..\src/command_processing.c ****                 }
 10383              		.loc 1 1391 0 discriminator 3
 10384 0d64 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10385 0d66 C3F10303 		rsb	r3, r3, #3
 10386 0d6a 07F10802 		add	r2, r7, #8
 10387 0d6e 1344     		add	r3, r3, r2
 10388 0d70 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10389 0d72 07F10C01 		add	r1, r7, #12
 10390 0d76 0A44     		add	r2, r2, r1
 10391 0d78 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10392 0d7a 1A70     		strb	r2, [r3]
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10393              		.loc 1 1390 0 discriminator 3
 10394 0d7c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10395 0d7e 0133     		adds	r3, r3, #1
 10396 0d80 BB75     		strb	r3, [r7, #22]
 10397              	.L424:
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10398              		.loc 1 1390 0 is_stmt 0 discriminator 1
 10399 0d82 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10400 0d84 032B     		cmp	r3, #3
 10401 0d86 EDD9     		bls	.L425
1393:..\src/command_processing.c ****             }
 10402              		.loc 1 1393 0 is_stmt 1
 10403 0d88 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10404 0d8a BB68     		ldr	r3, [r7, #8]	@ float
 10405 0d8c 4FF08F41 		mov	r1, #1199570944
 10406 0d90 1846     		mov	r0, r3
 10407 0d92 FFF7FEFF 		bl	__aeabi_fmul
 10408 0d96 0346     		mov	r3, r0
 10409 0d98 1846     		mov	r0, r3
 10410 0d9a FFF7FEFF 		bl	__aeabi_f2iz
 10411 0d9e 0146     		mov	r1, r0
 10412 0da0 8F4A     		ldr	r2, .L457
 10413 0da2 2346     		mov	r3, r4
 10414 0da4 DB00     		lsls	r3, r3, #3
 10415 0da6 1B1B     		subs	r3, r3, r4
 10416 0da8 1B01     		lsls	r3, r3, #4
 10417 0daa 1344     		add	r3, r3, r2
 10418 0dac D033     		adds	r3, r3, #208
 10419 0dae 1960     		str	r1, [r3]
 10420              		.loc 1 1395 0
 10421 0db0 2AE3     		b	.L386
 10422              	.L366:
1396:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 237


1397:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1398:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10423              		.loc 1 1398 0
 10424 0db2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10425 0db4 8C49     		ldr	r1, .L457+8
 10426 0db6 1346     		mov	r3, r2
 10427 0db8 DB00     		lsls	r3, r3, #3
 10428 0dba 9B1A     		subs	r3, r3, r2
 10429 0dbc 1B01     		lsls	r3, r3, #4
 10430 0dbe 0B44     		add	r3, r3, r1
 10431 0dc0 03F20F13 		addw	r3, r3, #271
 10432 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10433 0dc6 032B     		cmp	r3, #3
 10434 0dc8 00F08580 		beq	.L426
1399:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10435              		.loc 1 1399 0
 10436 0dcc 874B     		ldr	r3, .L457+12
 10437 0dce 1B68     		ldr	r3, [r3]	@ float
 10438 0dd0 FB60     		str	r3, [r7, #12]	@ float
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10439              		.loc 1 1400 0
 10440 0dd2 0023     		movs	r3, #0
 10441 0dd4 BB75     		strb	r3, [r7, #22]
 10442 0dd6 0EE0     		b	.L427
 10443              	.L428:
1401:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10444              		.loc 1 1401 0 discriminator 3
 10445 0dd8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10446 0dda C3F10303 		rsb	r3, r3, #3
 10447 0dde 07F10802 		add	r2, r7, #8
 10448 0de2 1344     		add	r3, r3, r2
 10449 0de4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10450 0de6 07F10C01 		add	r1, r7, #12
 10451 0dea 0A44     		add	r2, r2, r1
 10452 0dec 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10453 0dee 1A70     		strb	r2, [r3]
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10454              		.loc 1 1400 0 discriminator 3
 10455 0df0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10456 0df2 0133     		adds	r3, r3, #1
 10457 0df4 BB75     		strb	r3, [r7, #22]
 10458              	.L427:
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10459              		.loc 1 1400 0 is_stmt 0 discriminator 1
 10460 0df6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10461 0df8 032B     		cmp	r3, #3
 10462 0dfa EDD9     		bls	.L428
1402:..\src/command_processing.c ****                 }
1403:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10463              		.loc 1 1403 0 is_stmt 1
 10464 0dfc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10465 0dfe BB68     		ldr	r3, [r7, #8]	@ float
 10466 0e00 4FF08F41 		mov	r1, #1199570944
 10467 0e04 1846     		mov	r0, r3
 10468 0e06 FFF7FEFF 		bl	__aeabi_fmul
 10469 0e0a 0346     		mov	r3, r0
 10470 0e0c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 238


 10471 0e0e FFF7FEFF 		bl	__aeabi_f2iz
 10472 0e12 0146     		mov	r1, r0
 10473 0e14 724A     		ldr	r2, .L457
 10474 0e16 2346     		mov	r3, r4
 10475 0e18 DB00     		lsls	r3, r3, #3
 10476 0e1a 1B1B     		subs	r3, r3, r4
 10477 0e1c 1B01     		lsls	r3, r3, #4
 10478 0e1e 1344     		add	r3, r3, r2
 10479 0e20 BC33     		adds	r3, r3, #188
 10480 0e22 1960     		str	r1, [r3]
1404:..\src/command_processing.c ****                 
1405:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10481              		.loc 1 1405 0
 10482 0e24 724B     		ldr	r3, .L457+16
 10483 0e26 1B68     		ldr	r3, [r3]	@ float
 10484 0e28 FB60     		str	r3, [r7, #12]	@ float
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10485              		.loc 1 1406 0
 10486 0e2a 0023     		movs	r3, #0
 10487 0e2c BB75     		strb	r3, [r7, #22]
 10488 0e2e 0EE0     		b	.L429
 10489              	.L430:
1407:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10490              		.loc 1 1407 0 discriminator 3
 10491 0e30 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10492 0e32 C3F10303 		rsb	r3, r3, #3
 10493 0e36 07F10802 		add	r2, r7, #8
 10494 0e3a 1344     		add	r3, r3, r2
 10495 0e3c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10496 0e3e 07F10C01 		add	r1, r7, #12
 10497 0e42 0A44     		add	r2, r2, r1
 10498 0e44 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10499 0e46 1A70     		strb	r2, [r3]
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10500              		.loc 1 1406 0 discriminator 3
 10501 0e48 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10502 0e4a 0133     		adds	r3, r3, #1
 10503 0e4c BB75     		strb	r3, [r7, #22]
 10504              	.L429:
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10505              		.loc 1 1406 0 is_stmt 0 discriminator 1
 10506 0e4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10507 0e50 032B     		cmp	r3, #3
 10508 0e52 EDD9     		bls	.L430
1408:..\src/command_processing.c ****                 }
1409:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10509              		.loc 1 1409 0 is_stmt 1
 10510 0e54 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10511 0e56 BB68     		ldr	r3, [r7, #8]	@ float
 10512 0e58 4FF08F41 		mov	r1, #1199570944
 10513 0e5c 1846     		mov	r0, r3
 10514 0e5e FFF7FEFF 		bl	__aeabi_fmul
 10515 0e62 0346     		mov	r3, r0
 10516 0e64 1846     		mov	r0, r3
 10517 0e66 FFF7FEFF 		bl	__aeabi_f2iz
 10518 0e6a 0146     		mov	r1, r0
 10519 0e6c 5C4A     		ldr	r2, .L457
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 239


 10520 0e6e 2346     		mov	r3, r4
 10521 0e70 DB00     		lsls	r3, r3, #3
 10522 0e72 1B1B     		subs	r3, r3, r4
 10523 0e74 1B01     		lsls	r3, r3, #4
 10524 0e76 1344     		add	r3, r3, r2
 10525 0e78 C033     		adds	r3, r3, #192
 10526 0e7a 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****                 
1411:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10527              		.loc 1 1411 0
 10528 0e7c 594B     		ldr	r3, .L457+4
 10529 0e7e 1B68     		ldr	r3, [r3]	@ float
 10530 0e80 FB60     		str	r3, [r7, #12]	@ float
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10531              		.loc 1 1412 0
 10532 0e82 0023     		movs	r3, #0
 10533 0e84 BB75     		strb	r3, [r7, #22]
 10534 0e86 0EE0     		b	.L431
 10535              	.L432:
1413:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10536              		.loc 1 1413 0 discriminator 3
 10537 0e88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10538 0e8a C3F10303 		rsb	r3, r3, #3
 10539 0e8e 07F10802 		add	r2, r7, #8
 10540 0e92 1344     		add	r3, r3, r2
 10541 0e94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10542 0e96 07F10C01 		add	r1, r7, #12
 10543 0e9a 0A44     		add	r2, r2, r1
 10544 0e9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10545 0e9e 1A70     		strb	r2, [r3]
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10546              		.loc 1 1412 0 discriminator 3
 10547 0ea0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10548 0ea2 0133     		adds	r3, r3, #1
 10549 0ea4 BB75     		strb	r3, [r7, #22]
 10550              	.L431:
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10551              		.loc 1 1412 0 is_stmt 0 discriminator 1
 10552 0ea6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10553 0ea8 032B     		cmp	r3, #3
 10554 0eaa EDD9     		bls	.L432
1414:..\src/command_processing.c ****                 }
1415:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10555              		.loc 1 1415 0 is_stmt 1
 10556 0eac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10557 0eae BB68     		ldr	r3, [r7, #8]	@ float
 10558 0eb0 4FF08F41 		mov	r1, #1199570944
 10559 0eb4 1846     		mov	r0, r3
 10560 0eb6 FFF7FEFF 		bl	__aeabi_fmul
 10561 0eba 0346     		mov	r3, r0
 10562 0ebc 1846     		mov	r0, r3
 10563 0ebe FFF7FEFF 		bl	__aeabi_f2iz
 10564 0ec2 0146     		mov	r1, r0
 10565 0ec4 464A     		ldr	r2, .L457
 10566 0ec6 2346     		mov	r3, r4
 10567 0ec8 DB00     		lsls	r3, r3, #3
 10568 0eca 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 240


 10569 0ecc 1B01     		lsls	r3, r3, #4
 10570 0ece 1344     		add	r3, r3, r2
 10571 0ed0 C433     		adds	r3, r3, #196
 10572 0ed2 1960     		str	r1, [r3]
1416:..\src/command_processing.c ****             }
1417:..\src/command_processing.c ****             else {
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1429:..\src/command_processing.c ****                 
1430:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1433:..\src/command_processing.c ****                 }
1434:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1435:..\src/command_processing.c ****             }            
1436:..\src/command_processing.c ****             break;  
 10573              		.loc 1 1436 0
 10574 0ed4 98E2     		b	.L386
 10575              	.L426:
1418:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10576              		.loc 1 1418 0
 10577 0ed6 454B     		ldr	r3, .L457+12
 10578 0ed8 1B68     		ldr	r3, [r3]	@ float
 10579 0eda FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10580              		.loc 1 1419 0
 10581 0edc 0023     		movs	r3, #0
 10582 0ede BB75     		strb	r3, [r7, #22]
 10583 0ee0 0EE0     		b	.L434
 10584              	.L435:
1420:..\src/command_processing.c ****                 }
 10585              		.loc 1 1420 0 discriminator 3
 10586 0ee2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10587 0ee4 C3F10303 		rsb	r3, r3, #3
 10588 0ee8 07F10802 		add	r2, r7, #8
 10589 0eec 1344     		add	r3, r3, r2
 10590 0eee BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10591 0ef0 07F10C01 		add	r1, r7, #12
 10592 0ef4 0A44     		add	r2, r2, r1
 10593 0ef6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10594 0ef8 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10595              		.loc 1 1419 0 discriminator 3
 10596 0efa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10597 0efc 0133     		adds	r3, r3, #1
 10598 0efe BB75     		strb	r3, [r7, #22]
 10599              	.L434:
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 241


 10600              		.loc 1 1419 0 is_stmt 0 discriminator 1
 10601 0f00 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10602 0f02 032B     		cmp	r3, #3
 10603 0f04 EDD9     		bls	.L435
1422:..\src/command_processing.c ****                 
 10604              		.loc 1 1422 0 is_stmt 1
 10605 0f06 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10606 0f08 BB68     		ldr	r3, [r7, #8]	@ float
 10607 0f0a 4FF08F41 		mov	r1, #1199570944
 10608 0f0e 1846     		mov	r0, r3
 10609 0f10 FFF7FEFF 		bl	__aeabi_fmul
 10610 0f14 0346     		mov	r3, r0
 10611 0f16 1846     		mov	r0, r3
 10612 0f18 FFF7FEFF 		bl	__aeabi_f2iz
 10613 0f1c 0146     		mov	r1, r0
 10614 0f1e 304A     		ldr	r2, .L457
 10615 0f20 2346     		mov	r3, r4
 10616 0f22 DB00     		lsls	r3, r3, #3
 10617 0f24 1B1B     		subs	r3, r3, r4
 10618 0f26 1B01     		lsls	r3, r3, #4
 10619 0f28 1344     		add	r3, r3, r2
 10620 0f2a D433     		adds	r3, r3, #212
 10621 0f2c 1960     		str	r1, [r3]
1424:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10622              		.loc 1 1424 0
 10623 0f2e 304B     		ldr	r3, .L457+16
 10624 0f30 1B68     		ldr	r3, [r3]	@ float
 10625 0f32 FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10626              		.loc 1 1425 0
 10627 0f34 0023     		movs	r3, #0
 10628 0f36 BB75     		strb	r3, [r7, #22]
 10629 0f38 0EE0     		b	.L436
 10630              	.L437:
1426:..\src/command_processing.c ****                 }
 10631              		.loc 1 1426 0 discriminator 3
 10632 0f3a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10633 0f3c C3F10303 		rsb	r3, r3, #3
 10634 0f40 07F10802 		add	r2, r7, #8
 10635 0f44 1344     		add	r3, r3, r2
 10636 0f46 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10637 0f48 07F10C01 		add	r1, r7, #12
 10638 0f4c 0A44     		add	r2, r2, r1
 10639 0f4e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10640 0f50 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10641              		.loc 1 1425 0 discriminator 3
 10642 0f52 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10643 0f54 0133     		adds	r3, r3, #1
 10644 0f56 BB75     		strb	r3, [r7, #22]
 10645              	.L436:
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10646              		.loc 1 1425 0 is_stmt 0 discriminator 1
 10647 0f58 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10648 0f5a 032B     		cmp	r3, #3
 10649 0f5c EDD9     		bls	.L437
1428:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 242


 10650              		.loc 1 1428 0 is_stmt 1
 10651 0f5e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10652 0f60 BB68     		ldr	r3, [r7, #8]	@ float
 10653 0f62 4FF08F41 		mov	r1, #1199570944
 10654 0f66 1846     		mov	r0, r3
 10655 0f68 FFF7FEFF 		bl	__aeabi_fmul
 10656 0f6c 0346     		mov	r3, r0
 10657 0f6e 1846     		mov	r0, r3
 10658 0f70 FFF7FEFF 		bl	__aeabi_f2iz
 10659 0f74 0146     		mov	r1, r0
 10660 0f76 1A4A     		ldr	r2, .L457
 10661 0f78 2346     		mov	r3, r4
 10662 0f7a DB00     		lsls	r3, r3, #3
 10663 0f7c 1B1B     		subs	r3, r3, r4
 10664 0f7e 1B01     		lsls	r3, r3, #4
 10665 0f80 1344     		add	r3, r3, r2
 10666 0f82 D833     		adds	r3, r3, #216
 10667 0f84 1960     		str	r1, [r3]
1430:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10668              		.loc 1 1430 0
 10669 0f86 174B     		ldr	r3, .L457+4
 10670 0f88 1B68     		ldr	r3, [r3]	@ float
 10671 0f8a FB60     		str	r3, [r7, #12]	@ float
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10672              		.loc 1 1431 0
 10673 0f8c 0023     		movs	r3, #0
 10674 0f8e BB75     		strb	r3, [r7, #22]
 10675 0f90 0EE0     		b	.L438
 10676              	.L439:
1432:..\src/command_processing.c ****                 }
 10677              		.loc 1 1432 0 discriminator 3
 10678 0f92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10679 0f94 C3F10303 		rsb	r3, r3, #3
 10680 0f98 07F10802 		add	r2, r7, #8
 10681 0f9c 1344     		add	r3, r3, r2
 10682 0f9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10683 0fa0 07F10C01 		add	r1, r7, #12
 10684 0fa4 0A44     		add	r2, r2, r1
 10685 0fa6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10686 0fa8 1A70     		strb	r2, [r3]
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10687              		.loc 1 1431 0 discriminator 3
 10688 0faa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10689 0fac 0133     		adds	r3, r3, #1
 10690 0fae BB75     		strb	r3, [r7, #22]
 10691              	.L438:
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10692              		.loc 1 1431 0 is_stmt 0 discriminator 1
 10693 0fb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10694 0fb2 032B     		cmp	r3, #3
 10695 0fb4 EDD9     		bls	.L439
1434:..\src/command_processing.c ****             }            
 10696              		.loc 1 1434 0 is_stmt 1
 10697 0fb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10698 0fb8 BB68     		ldr	r3, [r7, #8]	@ float
 10699 0fba 4FF08F41 		mov	r1, #1199570944
 10700 0fbe 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 243


 10701 0fc0 FFF7FEFF 		bl	__aeabi_fmul
 10702 0fc4 0346     		mov	r3, r0
 10703 0fc6 1846     		mov	r0, r3
 10704 0fc8 FFF7FEFF 		bl	__aeabi_f2iz
 10705 0fcc 0146     		mov	r1, r0
 10706 0fce 044A     		ldr	r2, .L457
 10707 0fd0 2346     		mov	r3, r4
 10708 0fd2 DB00     		lsls	r3, r3, #3
 10709 0fd4 1B1B     		subs	r3, r3, r4
 10710 0fd6 1B01     		lsls	r3, r3, #4
 10711 0fd8 1344     		add	r3, r3, r2
 10712 0fda DC33     		adds	r3, r3, #220
 10713 0fdc 1960     		str	r1, [r3]
 10714              		.loc 1 1436 0
 10715 0fde 13E2     		b	.L386
 10716              	.L458:
 10717              		.align	2
 10718              	.L457:
 10719 0fe0 00000000 		.word	g_mem
 10720 0fe4 0B000000 		.word	g_rx+11
 10721 0fe8 00000000 		.word	c_mem
 10722 0fec 03000000 		.word	g_rx+3
 10723 0ff0 07000000 		.word	g_rx+7
 10724              	.L367:
1437:..\src/command_processing.c ****             
1438:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1439:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10725              		.loc 1 1439 0
 10726 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10727 0ff6 A54B     		ldr	r3, .L459
 10728 0ff8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10729 0ffa A549     		ldr	r1, .L459+4
 10730 0ffc 1346     		mov	r3, r2
 10731 0ffe DB00     		lsls	r3, r3, #3
 10732 1000 9B1A     		subs	r3, r3, r2
 10733 1002 1B01     		lsls	r3, r3, #4
 10734 1004 0B44     		add	r3, r3, r1
 10735 1006 03F58773 		add	r3, r3, #270
 10736 100a 0246     		mov	r2, r0
 10737 100c 1A70     		strb	r2, [r3]
1440:..\src/command_processing.c ****             
1441:..\src/command_processing.c ****             // Hold the actual position
1442:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10738              		.loc 1 1442 0
 10739 100e F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10740 1010 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10741 1012 9F48     		ldr	r0, .L459+4
 10742 1014 1346     		mov	r3, r2
 10743 1016 DB00     		lsls	r3, r3, #3
 10744 1018 9B1A     		subs	r3, r3, r2
 10745 101a 1B01     		lsls	r3, r3, #4
 10746 101c 0344     		add	r3, r3, r0
 10747 101e 03F58873 		add	r3, r3, #272
 10748 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10749 1024 1846     		mov	r0, r3
 10750 1026 9B4A     		ldr	r2, .L459+8
 10751 1028 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 244


 10752 102a 5B00     		lsls	r3, r3, #1
 10753 102c 0344     		add	r3, r3, r0
 10754 102e 1B01     		lsls	r3, r3, #4
 10755 1030 1344     		add	r3, r3, r2
 10756 1032 1A68     		ldr	r2, [r3]
 10757 1034 9848     		ldr	r0, .L459+12
 10758 1036 0B01     		lsls	r3, r1, #4
 10759 1038 0344     		add	r3, r3, r0
 10760 103a 1A60     		str	r2, [r3]
1443:..\src/command_processing.c ****             break;   
 10761              		.loc 1 1443 0
 10762 103c E4E1     		b	.L386
 10763              	.L368:
1444:..\src/command_processing.c **** 
1445:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1446:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10764              		.loc 1 1446 0
 10765 103e 0023     		movs	r3, #0
 10766 1040 FB75     		strb	r3, [r7, #23]
 10767 1042 7FE0     		b	.L440
 10768              	.L441:
1447:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10769              		.loc 1 1447 0 discriminator 3
 10770 1044 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10771 1046 9249     		ldr	r1, .L459+4
 10772 1048 1346     		mov	r3, r2
 10773 104a DB00     		lsls	r3, r3, #3
 10774 104c 9B1A     		subs	r3, r3, r2
 10775 104e 1B01     		lsls	r3, r3, #4
 10776 1050 0B44     		add	r3, r3, r1
 10777 1052 03F58873 		add	r3, r3, #272
 10778 1056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10779 1058 1C46     		mov	r4, r3
 10780 105a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10781 105c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10782 105e 5B00     		lsls	r3, r3, #1
 10783 1060 0333     		adds	r3, r3, #3
 10784 1062 8A49     		ldr	r1, .L459
 10785 1064 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10786 1066 1B02     		lsls	r3, r3, #8
 10787 1068 19B2     		sxth	r1, r3
 10788 106a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10789 106c 0233     		adds	r3, r3, #2
 10790 106e 5B00     		lsls	r3, r3, #1
 10791 1070 8648     		ldr	r0, .L459
 10792 1072 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10793 1074 1BB2     		sxth	r3, r3
 10794 1076 0B43     		orrs	r3, r3, r1
 10795 1078 1BB2     		sxth	r3, r3
 10796 107a 1846     		mov	r0, r3
 10797 107c 8449     		ldr	r1, .L459+4
 10798 107e 2346     		mov	r3, r4
 10799 1080 5B00     		lsls	r3, r3, #1
 10800 1082 2344     		add	r3, r3, r4
 10801 1084 9B00     		lsls	r3, r3, #2
 10802 1086 1344     		add	r3, r3, r2
 10803 1088 6633     		adds	r3, r3, #102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 245


 10804 108a 41F82300 		str	r0, [r1, r3, lsl #2]
1448:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10805              		.loc 1 1448 0 discriminator 3
 10806 108e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10807 1090 7F49     		ldr	r1, .L459+4
 10808 1092 1346     		mov	r3, r2
 10809 1094 DB00     		lsls	r3, r3, #3
 10810 1096 9B1A     		subs	r3, r3, r2
 10811 1098 1B01     		lsls	r3, r3, #4
 10812 109a 0B44     		add	r3, r3, r1
 10813 109c 03F58873 		add	r3, r3, #272
 10814 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10815 10a2 1D46     		mov	r5, r3
 10816 10a4 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10817 10a6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10818 10a8 7948     		ldr	r0, .L459+4
 10819 10aa 1346     		mov	r3, r2
 10820 10ac DB00     		lsls	r3, r3, #3
 10821 10ae 9B1A     		subs	r3, r3, r2
 10822 10b0 1B01     		lsls	r3, r3, #4
 10823 10b2 0344     		add	r3, r3, r0
 10824 10b4 03F58873 		add	r3, r3, #272
 10825 10b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10826 10ba 1C46     		mov	r4, r3
 10827 10bc FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10828 10be 7448     		ldr	r0, .L459+4
 10829 10c0 2346     		mov	r3, r4
 10830 10c2 5B00     		lsls	r3, r3, #1
 10831 10c4 2344     		add	r3, r3, r4
 10832 10c6 9B00     		lsls	r3, r3, #2
 10833 10c8 1344     		add	r3, r3, r2
 10834 10ca 6633     		adds	r3, r3, #102
 10835 10cc 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10836 10d0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10837 10d2 6F4C     		ldr	r4, .L459+4
 10838 10d4 1346     		mov	r3, r2
 10839 10d6 DB00     		lsls	r3, r3, #3
 10840 10d8 9B1A     		subs	r3, r3, r2
 10841 10da 1B01     		lsls	r3, r3, #4
 10842 10dc 2344     		add	r3, r3, r4
 10843 10de 03F58873 		add	r3, r3, #272
 10844 10e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10845 10e4 1E46     		mov	r6, r3
 10846 10e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10847 10e8 694C     		ldr	r4, .L459+4
 10848 10ea 3346     		mov	r3, r6
 10849 10ec 5B00     		lsls	r3, r3, #1
 10850 10ee 3344     		add	r3, r3, r6
 10851 10f0 1B01     		lsls	r3, r3, #4
 10852 10f2 2344     		add	r3, r3, r4
 10853 10f4 1344     		add	r3, r3, r2
 10854 10f6 03F29513 		addw	r3, r3, #405
 10855 10fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10856 10fc 00FA03F2 		lsl	r2, r0, r3
 10857 1100 6348     		ldr	r0, .L459+4
 10858 1102 2B46     		mov	r3, r5
 10859 1104 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 246


 10860 1106 2B44     		add	r3, r3, r5
 10861 1108 9B00     		lsls	r3, r3, #2
 10862 110a 0B44     		add	r3, r3, r1
 10863 110c 6633     		adds	r3, r3, #102
 10864 110e 40F82320 		str	r2, [r0, r3, lsl #2]
1449:..\src/command_processing.c **** 
1450:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 10865              		.loc 1 1450 0 discriminator 3
 10866 1112 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10867 1114 5E49     		ldr	r1, .L459+4
 10868 1116 1346     		mov	r3, r2
 10869 1118 DB00     		lsls	r3, r3, #3
 10870 111a 9B1A     		subs	r3, r3, r2
 10871 111c 1B01     		lsls	r3, r3, #4
 10872 111e 0B44     		add	r3, r3, r1
 10873 1120 03F58873 		add	r3, r3, #272
 10874 1124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10875 1126 1846     		mov	r0, r3
 10876 1128 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10877 112a 5A49     		ldr	r1, .L459+8
 10878 112c 0346     		mov	r3, r0
 10879 112e 5B00     		lsls	r3, r3, #1
 10880 1130 0344     		add	r3, r3, r0
 10881 1132 1B01     		lsls	r3, r3, #4
 10882 1134 0B44     		add	r3, r3, r1
 10883 1136 1344     		add	r3, r3, r2
 10884 1138 1433     		adds	r3, r3, #20
 10885 113a 0022     		movs	r2, #0
 10886 113c 1A70     		strb	r2, [r3]
1446:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10887              		.loc 1 1446 0 discriminator 3
 10888 113e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10889 1140 0133     		adds	r3, r3, #1
 10890 1142 FB75     		strb	r3, [r7, #23]
 10891              	.L440:
1446:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10892              		.loc 1 1446 0 is_stmt 0 discriminator 1
 10893 1144 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10894 1146 022B     		cmp	r3, #2
 10895 1148 7FF67CAF 		bls	.L441
1451:..\src/command_processing.c ****             }
1452:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10896              		.loc 1 1452 0 is_stmt 1
 10897 114c 534B     		ldr	r3, .L459+16
 10898 114e 0122     		movs	r2, #1
 10899 1150 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             break;
 10900              		.loc 1 1453 0
 10901 1152 59E1     		b	.L386
 10902              	.L369:
1454:..\src/command_processing.c ****     
1455:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1456:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 10903              		.loc 1 1456 0
 10904 1154 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10905 1156 4D4B     		ldr	r3, .L459
 10906 1158 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 247


 10907 115a 1906     		lsls	r1, r3, #24
 10908 115c 4B4B     		ldr	r3, .L459
 10909 115e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10910 1160 1B04     		lsls	r3, r3, #16
 10911 1162 1943     		orrs	r1, r1, r3
 10912 1164 494B     		ldr	r3, .L459
 10913 1166 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10914 1168 1B02     		lsls	r3, r3, #8
 10915 116a 0B43     		orrs	r3, r3, r1
 10916 116c 4749     		ldr	r1, .L459
 10917 116e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10918 1170 1943     		orrs	r1, r1, r3
 10919 1172 4748     		ldr	r0, .L459+4
 10920 1174 1346     		mov	r3, r2
 10921 1176 DB00     		lsls	r3, r3, #3
 10922 1178 9B1A     		subs	r3, r3, r2
 10923 117a 1B01     		lsls	r3, r3, #4
 10924 117c 0344     		add	r3, r3, r0
 10925 117e E433     		adds	r3, r3, #228
 10926 1180 1960     		str	r1, [r3]
1457:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 10927              		.loc 1 1457 0
 10928 1182 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10929 1184 414B     		ldr	r3, .L459
 10930 1186 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10931 1188 1906     		lsls	r1, r3, #24
 10932 118a 404B     		ldr	r3, .L459
 10933 118c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10934 118e 1B04     		lsls	r3, r3, #16
 10935 1190 1943     		orrs	r1, r1, r3
 10936 1192 3E4B     		ldr	r3, .L459
 10937 1194 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10938 1196 1B02     		lsls	r3, r3, #8
 10939 1198 0B43     		orrs	r3, r3, r1
 10940 119a 3C49     		ldr	r1, .L459
 10941 119c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10942 119e 1943     		orrs	r1, r1, r3
 10943 11a0 3B48     		ldr	r0, .L459+4
 10944 11a2 1346     		mov	r3, r2
 10945 11a4 DB00     		lsls	r3, r3, #3
 10946 11a6 9B1A     		subs	r3, r3, r2
 10947 11a8 1B01     		lsls	r3, r3, #4
 10948 11aa 0344     		add	r3, r3, r0
 10949 11ac E833     		adds	r3, r3, #232
 10950 11ae 1960     		str	r1, [r3]
1458:..\src/command_processing.c **** 
1459:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 10951              		.loc 1 1459 0
 10952 11b0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10953 11b2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10954 11b4 3648     		ldr	r0, .L459+4
 10955 11b6 0B46     		mov	r3, r1
 10956 11b8 DB00     		lsls	r3, r3, #3
 10957 11ba 5B1A     		subs	r3, r3, r1
 10958 11bc 1B01     		lsls	r3, r3, #4
 10959 11be 0344     		add	r3, r3, r0
 10960 11c0 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 248


 10961 11c2 1868     		ldr	r0, [r3]
 10962 11c4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10963 11c6 324C     		ldr	r4, .L459+4
 10964 11c8 0B46     		mov	r3, r1
 10965 11ca DB00     		lsls	r3, r3, #3
 10966 11cc 5B1A     		subs	r3, r3, r1
 10967 11ce 1B01     		lsls	r3, r3, #4
 10968 11d0 2344     		add	r3, r3, r4
 10969 11d2 03F58873 		add	r3, r3, #272
 10970 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10971 11d8 1C46     		mov	r4, r3
 10972 11da 2D49     		ldr	r1, .L459+4
 10973 11dc 2346     		mov	r3, r4
 10974 11de 5B00     		lsls	r3, r3, #1
 10975 11e0 2344     		add	r3, r3, r4
 10976 11e2 1B01     		lsls	r3, r3, #4
 10977 11e4 0B44     		add	r3, r3, r1
 10978 11e6 03F29513 		addw	r3, r3, #405
 10979 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10980 11ec 00FA03F1 		lsl	r1, r0, r3
 10981 11f0 2748     		ldr	r0, .L459+4
 10982 11f2 1346     		mov	r3, r2
 10983 11f4 DB00     		lsls	r3, r3, #3
 10984 11f6 9B1A     		subs	r3, r3, r2
 10985 11f8 1B01     		lsls	r3, r3, #4
 10986 11fa 0344     		add	r3, r3, r0
 10987 11fc E433     		adds	r3, r3, #228
 10988 11fe 1960     		str	r1, [r3]
1460:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 10989              		.loc 1 1460 0
 10990 1200 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10991 1202 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10992 1204 2248     		ldr	r0, .L459+4
 10993 1206 0B46     		mov	r3, r1
 10994 1208 DB00     		lsls	r3, r3, #3
 10995 120a 5B1A     		subs	r3, r3, r1
 10996 120c 1B01     		lsls	r3, r3, #4
 10997 120e 0344     		add	r3, r3, r0
 10998 1210 E833     		adds	r3, r3, #232
 10999 1212 1868     		ldr	r0, [r3]
 11000 1214 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11001 1216 1E4C     		ldr	r4, .L459+4
 11002 1218 0B46     		mov	r3, r1
 11003 121a DB00     		lsls	r3, r3, #3
 11004 121c 5B1A     		subs	r3, r3, r1
 11005 121e 1B01     		lsls	r3, r3, #4
 11006 1220 2344     		add	r3, r3, r4
 11007 1222 03F58873 		add	r3, r3, #272
 11008 1226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11009 1228 1C46     		mov	r4, r3
 11010 122a 1949     		ldr	r1, .L459+4
 11011 122c 2346     		mov	r3, r4
 11012 122e 5B00     		lsls	r3, r3, #1
 11013 1230 2344     		add	r3, r3, r4
 11014 1232 1B01     		lsls	r3, r3, #4
 11015 1234 0B44     		add	r3, r3, r1
 11016 1236 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 249


 11017 123a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11018 123c 00FA03F1 		lsl	r1, r0, r3
 11019 1240 1348     		ldr	r0, .L459+4
 11020 1242 1346     		mov	r3, r2
 11021 1244 DB00     		lsls	r3, r3, #3
 11022 1246 9B1A     		subs	r3, r3, r2
 11023 1248 1B01     		lsls	r3, r3, #4
 11024 124a 0344     		add	r3, r3, r0
 11025 124c E833     		adds	r3, r3, #232
 11026 124e 1960     		str	r1, [r3]
1461:..\src/command_processing.c ****             break;
 11027              		.loc 1 1461 0
 11028 1250 DAE0     		b	.L386
 11029              	.L370:
1462:..\src/command_processing.c ****             
1463:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1464:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11030              		.loc 1 1464 0
 11031 1252 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11032 1254 0D4B     		ldr	r3, .L459
 11033 1256 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11034 1258 0D49     		ldr	r1, .L459+4
 11035 125a 1346     		mov	r3, r2
 11036 125c DB00     		lsls	r3, r3, #3
 11037 125e 9B1A     		subs	r3, r3, r2
 11038 1260 1B01     		lsls	r3, r3, #4
 11039 1262 0B44     		add	r3, r3, r1
 11040 1264 E233     		adds	r3, r3, #226
 11041 1266 0246     		mov	r2, r0
 11042 1268 1A70     		strb	r2, [r3]
1465:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11043              		.loc 1 1465 0
 11044 126a 094B     		ldr	r3, .L459+4
 11045 126c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11046 1270 5B00     		lsls	r3, r3, #1
 11047 1272 5AB2     		sxtb	r2, r3
 11048 1274 064B     		ldr	r3, .L459+4
 11049 1276 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11050 127a 5BB2     		sxtb	r3, r3
 11051 127c 1343     		orrs	r3, r3, r2
 11052 127e 5BB2     		sxtb	r3, r3
 11053 1280 DBB2     		uxtb	r3, r3
 11054 1282 1846     		mov	r0, r3
 11055 1284 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1466:..\src/command_processing.c ****             break;
 11056              		.loc 1 1466 0
 11057 1288 BEE0     		b	.L386
 11058              	.L460:
 11059 128a 00BF     		.align	2
 11060              	.L459:
 11061 128c 00000000 		.word	g_rx
 11062 1290 00000000 		.word	g_mem
 11063 1294 00000000 		.word	g_meas
 11064 1298 00000000 		.word	g_refNew
 11065 129c 00000000 		.word	reset_last_value_flag
 11066              	.L371:
1467:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 250


1468:..\src/command_processing.c ****         case 71:        // Device type
1469:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11067              		.loc 1 1469 0
 11068 12a0 5B4B     		ldr	r3, .L461
 11069 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11070 12a4 5B4B     		ldr	r3, .L461+4
 11071 12a6 83F8AC20 		strb	r2, [r3, #172]
1470:..\src/command_processing.c ****             
1471:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11072              		.loc 1 1471 0
 11073 12aa 5A4B     		ldr	r3, .L461+4
 11074 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11075 12b0 002B     		cmp	r3, #0
 11076 12b2 40F0A880 		bne	.L448
1472:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11077              		.loc 1 1472 0
 11078 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11079 12b8 5649     		ldr	r1, .L461+4
 11080 12ba 1346     		mov	r3, r2
 11081 12bc DB00     		lsls	r3, r3, #3
 11082 12be 9B1A     		subs	r3, r3, r2
 11083 12c0 1B01     		lsls	r3, r3, #4
 11084 12c2 0B44     		add	r3, r3, r1
 11085 12c4 03F58873 		add	r3, r3, #272
 11086 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11087 12ca 1946     		mov	r1, r3
 11088 12cc 514A     		ldr	r2, .L461+4
 11089 12ce 0B46     		mov	r3, r1
 11090 12d0 5B00     		lsls	r3, r3, #1
 11091 12d2 0B44     		add	r3, r3, r1
 11092 12d4 1B01     		lsls	r3, r3, #4
 11093 12d6 1344     		add	r3, r3, r2
 11094 12d8 03F5D873 		add	r3, r3, #432
 11095 12dc 0122     		movs	r2, #1
 11096 12de 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11097              		.loc 1 1473 0
 11098 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11099 12e2 4C49     		ldr	r1, .L461+4
 11100 12e4 1346     		mov	r3, r2
 11101 12e6 DB00     		lsls	r3, r3, #3
 11102 12e8 9B1A     		subs	r3, r3, r2
 11103 12ea 1B01     		lsls	r3, r3, #4
 11104 12ec 0B44     		add	r3, r3, r1
 11105 12ee 03F58873 		add	r3, r3, #272
 11106 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11107 12f4 1946     		mov	r1, r3
 11108 12f6 474A     		ldr	r2, .L461+4
 11109 12f8 0B46     		mov	r3, r1
 11110 12fa 5B00     		lsls	r3, r3, #1
 11111 12fc 0B44     		add	r3, r3, r1
 11112 12fe 1B01     		lsls	r3, r3, #4
 11113 1300 1344     		add	r3, r3, r2
 11114 1302 03F2B513 		addw	r3, r3, #437
 11115 1306 2322     		movs	r2, #35
 11116 1308 1A70     		strb	r2, [r3]
1474:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 251


 11117              		.loc 1 1474 0
 11118 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11119 130c 4149     		ldr	r1, .L461+4
 11120 130e 1346     		mov	r3, r2
 11121 1310 DB00     		lsls	r3, r3, #3
 11122 1312 9B1A     		subs	r3, r3, r2
 11123 1314 1B01     		lsls	r3, r3, #4
 11124 1316 0B44     		add	r3, r3, r1
 11125 1318 03F58873 		add	r3, r3, #272
 11126 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11127 131e 1946     		mov	r1, r3
 11128 1320 3C4A     		ldr	r2, .L461+4
 11129 1322 0B46     		mov	r3, r1
 11130 1324 5B00     		lsls	r3, r3, #1
 11131 1326 0B44     		add	r3, r3, r1
 11132 1328 1B01     		lsls	r3, r3, #4
 11133 132a 1344     		add	r3, r3, r2
 11134 132c 03F5DB73 		add	r3, r3, #438
 11135 1330 0322     		movs	r2, #3
 11136 1332 1A70     		strb	r2, [r3]
1475:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11137              		.loc 1 1475 0
 11138 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11139 1336 3749     		ldr	r1, .L461+4
 11140 1338 1346     		mov	r3, r2
 11141 133a DB00     		lsls	r3, r3, #3
 11142 133c 9B1A     		subs	r3, r3, r2
 11143 133e 1B01     		lsls	r3, r3, #4
 11144 1340 0B44     		add	r3, r3, r1
 11145 1342 03F58873 		add	r3, r3, #272
 11146 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11147 1348 1946     		mov	r1, r3
 11148 134a 324A     		ldr	r2, .L461+4
 11149 134c 0B46     		mov	r3, r1
 11150 134e 5B00     		lsls	r3, r3, #1
 11151 1350 0B44     		add	r3, r3, r1
 11152 1352 1B01     		lsls	r3, r3, #4
 11153 1354 1344     		add	r3, r3, r2
 11154 1356 03F2B713 		addw	r3, r3, #439
 11155 135a FF22     		movs	r2, #255
 11156 135c 1A70     		strb	r2, [r3]
1476:..\src/command_processing.c ****                 
1477:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1478:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11157              		.loc 1 1478 0
 11158 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11159 1360 2C4B     		ldr	r3, .L461+4
 11160 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11161 1366 2B49     		ldr	r1, .L461+4
 11162 1368 1346     		mov	r3, r2
 11163 136a DB00     		lsls	r3, r3, #3
 11164 136c 9B1A     		subs	r3, r3, r2
 11165 136e 1B01     		lsls	r3, r3, #4
 11166 1370 0B44     		add	r3, r3, r1
 11167 1372 03F58873 		add	r3, r3, #272
 11168 1376 0246     		mov	r2, r0
 11169 1378 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 252


1479:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11170              		.loc 1 1479 0
 11171 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11172 137c 2549     		ldr	r1, .L461+4
 11173 137e 1346     		mov	r3, r2
 11174 1380 DB00     		lsls	r3, r3, #3
 11175 1382 9B1A     		subs	r3, r3, r2
 11176 1384 1B01     		lsls	r3, r3, #4
 11177 1386 0B44     		add	r3, r3, r1
 11178 1388 03F21113 		addw	r3, r3, #273
 11179 138c 0122     		movs	r2, #1
 11180 138e 1A70     		strb	r2, [r3]
1480:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11181              		.loc 1 1480 0
 11182 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11183 1392 2049     		ldr	r1, .L461+4
 11184 1394 1346     		mov	r3, r2
 11185 1396 DB00     		lsls	r3, r3, #3
 11186 1398 9B1A     		subs	r3, r3, r2
 11187 139a 1B01     		lsls	r3, r3, #4
 11188 139c 0B44     		add	r3, r3, r1
 11189 139e 03F58973 		add	r3, r3, #274
 11190 13a2 0122     		movs	r2, #1
 11191 13a4 1A70     		strb	r2, [r3]
1481:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11192              		.loc 1 1481 0
 11193 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11194 13a8 1A49     		ldr	r1, .L461+4
 11195 13aa 1346     		mov	r3, r2
 11196 13ac DB00     		lsls	r3, r3, #3
 11197 13ae 9B1A     		subs	r3, r3, r2
 11198 13b0 1B01     		lsls	r3, r3, #4
 11199 13b2 0B44     		add	r3, r3, r1
 11200 13b4 E433     		adds	r3, r3, #228
 11201 13b6 0022     		movs	r2, #0
 11202 13b8 1A60     		str	r2, [r3]
1482:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11203              		.loc 1 1482 0
 11204 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11205 13bc 154B     		ldr	r3, .L461+4
 11206 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11207 13c2 1846     		mov	r0, r3
 11208 13c4 1349     		ldr	r1, .L461+4
 11209 13c6 0346     		mov	r3, r0
 11210 13c8 5B00     		lsls	r3, r3, #1
 11211 13ca 0344     		add	r3, r3, r0
 11212 13cc 1B01     		lsls	r3, r3, #4
 11213 13ce 0B44     		add	r3, r3, r1
 11214 13d0 03F29513 		addw	r3, r3, #405
 11215 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11216 13d6 1946     		mov	r1, r3
 11217 13d8 4FF47A53 		mov	r3, #16000
 11218 13dc 03FA01F1 		lsl	r1, r3, r1
 11219 13e0 0C48     		ldr	r0, .L461+4
 11220 13e2 1346     		mov	r3, r2
 11221 13e4 DB00     		lsls	r3, r3, #3
 11222 13e6 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 253


 11223 13e8 1B01     		lsls	r3, r3, #4
 11224 13ea 0344     		add	r3, r3, r0
 11225 13ec E833     		adds	r3, r3, #232
 11226 13ee 1960     		str	r1, [r3]
1483:..\src/command_processing.c ****             }        
1484:..\src/command_processing.c ****             break;
 11227              		.loc 1 1484 0
 11228 13f0 09E0     		b	.L448
 11229              	.L443:
1485:..\src/command_processing.c ****             
1486:..\src/command_processing.c ****         default:
1487:..\src/command_processing.c ****             break;
 11230              		.loc 1 1487 0
 11231 13f2 00BF     		nop
 11232 13f4 08E0     		b	.L386
 11233              	.L444:
1293:..\src/command_processing.c ****             
 11234              		.loc 1 1293 0
 11235 13f6 00BF     		nop
 11236 13f8 06E0     		b	.L386
 11237              	.L445:
1321:..\src/command_processing.c **** 
 11238              		.loc 1 1321 0
 11239 13fa 00BF     		nop
 11240 13fc 04E0     		b	.L386
 11241              	.L446:
1339:..\src/command_processing.c ****             
 11242              		.loc 1 1339 0
 11243 13fe 00BF     		nop
 11244 1400 02E0     		b	.L386
 11245              	.L447:
1349:..\src/command_processing.c ****            
 11246              		.loc 1 1349 0
 11247 1402 00BF     		nop
 11248 1404 00E0     		b	.L386
 11249              	.L448:
1484:..\src/command_processing.c ****             
 11250              		.loc 1 1484 0
 11251 1406 00BF     		nop
 11252              	.L386:
1488:..\src/command_processing.c ****     }
1489:..\src/command_processing.c **** }
 11253              		.loc 1 1489 0 discriminator 1
 11254 1408 00BF     		nop
 11255 140a 1C37     		adds	r7, r7, #28
 11256              		.cfi_def_cfa_offset 20
 11257 140c BD46     		mov	sp, r7
 11258              		.cfi_def_cfa_register 13
 11259              		@ sp needed
 11260 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 11261              	.L462:
 11262              		.align	2
 11263              	.L461:
 11264 1410 00000000 		.word	g_rx
 11265 1414 00000000 		.word	g_mem
 11266              		.cfi_endproc
 11267              	.LFE69:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 254


 11268              		.size	set_custom_param, .-set_custom_param
 11269              		.section	.rodata
 11270 0d26 0000     		.align	2
 11271              	.LC119:
 11272 0d28 506F7274 		.ascii	"Port %u ID:\000"
 11272      20257520 
 11272      49443A00 
 11273              		.align	2
 11274              	.LC120:
 11275 0d34 2575202D 		.ascii	"%u - Device ID:\000"
 11275      20446576 
 11275      69636520 
 11275      49443A00 
 11276              		.align	2
 11277              	.LC121:
 11278 0d44 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11278      20494D55 
 11278      20256420 
 11278      636F6E66 
 11278      69677572 
 11279 0d5f 00       		.align	2
 11280              	.LC122:
 11281 0d60 2575202D 		.ascii	"%u - SPI read delay:\000"
 11281      20535049 
 11281      20726561 
 11281      64206465 
 11281      6C61793A 
 11282 0d75 000000   		.align	2
 11283              	.LC123:
 11284 0d78 204E6F6E 		.ascii	" None\000"
 11284      6500
 11285 0d7e 0000     		.align	2
 11286              	.LC124:
 11287 0d80 204C6F77 		.ascii	" Low\000"
 11287      00
 11288 0d85 000000   		.align	2
 11289              	.LC125:
 11290 0d88 20486967 		.ascii	" High\000"
 11290      6800
 11291 0d8e 0000     		.align	2
 11292              	.LC117:
 11293 0d90 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11293      6572206F 
 11293      6620636F 
 11293      6E6E6563 
 11293      74656420 
 11294 0daa 0000     		.align	2
 11295              	.LC118:
 11296 0dac 4D616720 		.ascii	"Mag cal parameters:\000"
 11296      63616C20 
 11296      70617261 
 11296      6D657465 
 11296      72733A00 
 11297              		.section	.text.get_IMU_param_list,"ax",%progbits
 11298              		.align	2
 11299              		.global	get_IMU_param_list
 11300              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 255


 11301              		.thumb_func
 11302              		.type	get_IMU_param_list, %function
 11303              	get_IMU_param_list:
 11304              	.LFB70:
1490:..\src/command_processing.c **** 
1491:..\src/command_processing.c **** //==============================================================================
1492:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1493:..\src/command_processing.c **** //==============================================================================
1494:..\src/command_processing.c **** 
1495:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1496:..\src/command_processing.c **** {
 11305              		.loc 1 1496 0
 11306              		.cfi_startproc
 11307              		@ args = 0, pretend = 0, frame = 1704
 11308              		@ frame_needed = 1, uses_anonymous_args = 0
 11309 0000 B0B5     		push	{r4, r5, r7, lr}
 11310              		.cfi_def_cfa_offset 16
 11311              		.cfi_offset 4, -16
 11312              		.cfi_offset 5, -12
 11313              		.cfi_offset 7, -8
 11314              		.cfi_offset 14, -4
 11315 0002 ADF5D56D 		sub	sp, sp, #1704
 11316              		.cfi_def_cfa_offset 1720
 11317 0006 00AF     		add	r7, sp, #0
 11318              		.cfi_def_cfa_register 7
 11319 0008 0246     		mov	r2, r0
 11320 000a BB1D     		adds	r3, r7, #6
 11321 000c 1A80     		strh	r2, [r3]	@ movhi
1497:..\src/command_processing.c ****     //Package to be sent variables
1498:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11322              		.loc 1 1498 0
 11323 000e 07F58A73 		add	r3, r7, #276
 11324 0012 0022     		movs	r2, #0
 11325 0014 1A60     		str	r2, [r3]
 11326 0016 0433     		adds	r3, r3, #4
 11327 0018 40F27552 		movw	r2, #1397
 11328 001c 0021     		movs	r1, #0
 11329 001e 1846     		mov	r0, r3
 11330 0020 FFF7FEFF 		bl	memset
1499:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1500:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1501:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1502:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1503:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1504:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1505:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11331              		.loc 1 1505 0
 11332 0024 0723     		movs	r3, #7
 11333 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1506:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11334              		.loc 1 1506 0
 11335 002a 0023     		movs	r3, #0
 11336 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1507:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11337              		.loc 1 1507 0
 11338 0030 0223     		movs	r3, #2
 11339 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 256


1508:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11340              		.loc 1 1508 0
 11341 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11342 003a 5A1C     		adds	r2, r3, #1
1509:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11343              		.loc 1 1509 0
 11344 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11345 0040 1344     		add	r3, r3, r2
1510:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11346              		.loc 1 1510 0
 11347 0042 0133     		adds	r3, r3, #1
1508:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11348              		.loc 1 1508 0
 11349 0044 9AB2     		uxth	r2, r3
 11350 0046 D24B     		ldr	r3, .L509
 11351 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11352 004a 9BB2     		uxth	r3, r3
 11353 004c 1344     		add	r3, r3, r2
 11354 004e 9BB2     		uxth	r3, r3
 11355 0050 1A46     		mov	r2, r3	@ movhi
 11356 0052 9200     		lsls	r2, r2, #2
 11357 0054 1344     		add	r3, r3, r2
 11358 0056 1A46     		mov	r2, r3	@ movhi
 11359 0058 9100     		lsls	r1, r2, #2
 11360 005a 1A46     		mov	r2, r3	@ movhi
 11361 005c 0B46     		mov	r3, r1	@ movhi
 11362 005e 1344     		add	r3, r3, r2
 11363 0060 5B00     		lsls	r3, r3, #1
 11364 0062 9BB2     		uxth	r3, r3
 11365 0064 FB33     		adds	r3, r3, #251
 11366 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1511:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1512:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1513:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1514:..\src/command_processing.c **** 
1515:..\src/command_processing.c ****     //Auxiliary variables
1516:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1517:..\src/command_processing.c ****     uint16 start_byte = 0;
 11367              		.loc 1 1517 0
 11368 006a 0023     		movs	r3, #0
 11369 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1518:..\src/command_processing.c **** 
1519:..\src/command_processing.c ****     //Parameters menu string definitions
1520:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11370              		.loc 1 1520 0
 11371 0070 07F1F803 		add	r3, r7, #248
 11372 0074 C74A     		ldr	r2, .L509+4
 11373 0076 1C46     		mov	r4, r3
 11374 0078 1546     		mov	r5, r2
 11375 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11376 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11377 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11378 0082 03C4     		stmia	r4!, {r0, r1}
 11379 0084 2280     		strh	r2, [r4]	@ movhi
1521:..\src/command_processing.c ****     char ids_str[11]            = "";
 11380              		.loc 1 1521 0
 11381 0086 07F1EC03 		add	r3, r7, #236
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 257


 11382 008a 0022     		movs	r2, #0
 11383 008c 1A60     		str	r2, [r3]
 11384 008e 0433     		adds	r3, r3, #4
 11385 0090 0022     		movs	r2, #0
 11386 0092 1A60     		str	r2, [r3]
 11387 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1522:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11388              		.loc 1 1522 0
 11389 0098 07F1D803 		add	r3, r7, #216
 11390 009c BE4A     		ldr	r2, .L509+8
 11391 009e 1C46     		mov	r4, r3
 11392 00a0 1546     		mov	r5, r2
 11393 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11394 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11395 00a6 2B68     		ldr	r3, [r5]
 11396 00a8 2360     		str	r3, [r4]
1523:..\src/command_processing.c ****     char id_str[16]             = "";
 11397              		.loc 1 1523 0
 11398 00aa 07F1C803 		add	r3, r7, #200
 11399 00ae 0022     		movs	r2, #0
 11400 00b0 1A60     		str	r2, [r3]
 11401 00b2 0433     		adds	r3, r3, #4
 11402 00b4 0022     		movs	r2, #0
 11403 00b6 1A60     		str	r2, [r3]
 11404 00b8 5A60     		str	r2, [r3, #4]
 11405 00ba 9A60     		str	r2, [r3, #8]
1524:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11406              		.loc 1 1524 0
 11407 00bc 07F19C03 		add	r3, r7, #156
 11408 00c0 0022     		movs	r2, #0
 11409 00c2 1A60     		str	r2, [r3]
 11410 00c4 0433     		adds	r3, r3, #4
 11411 00c6 2622     		movs	r2, #38
 11412 00c8 0021     		movs	r1, #0
 11413 00ca 1846     		mov	r0, r3
 11414 00cc FFF7FEFF 		bl	memset
1525:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11415              		.loc 1 1525 0
 11416 00d0 07F18003 		add	r3, r7, #128
 11417 00d4 0022     		movs	r2, #0
 11418 00d6 1A60     		str	r2, [r3]
 11419 00d8 0433     		adds	r3, r3, #4
 11420 00da 0022     		movs	r2, #0
 11421 00dc 1A60     		str	r2, [r3]
 11422 00de 5A60     		str	r2, [r3, #4]
 11423 00e0 9A60     		str	r2, [r3, #8]
 11424 00e2 DA60     		str	r2, [r3, #12]
 11425 00e4 1A61     		str	r2, [r3, #16]
 11426 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1526:..\src/command_processing.c ****     
1527:..\src/command_processing.c ****     //Strings lenghts
1528:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11427              		.loc 1 1528 0
 11428 00e8 07F1C803 		add	r3, r7, #200
 11429 00ec 1846     		mov	r0, r3
 11430 00ee FFF7FEFF 		bl	strlen
 11431 00f2 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 258


 11432 00f4 87F89336 		strb	r3, [r7, #1683]
1529:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 11433              		.loc 1 1529 0
 11434 00f8 07F1F803 		add	r3, r7, #248
 11435 00fc 1846     		mov	r0, r3
 11436 00fe FFF7FEFF 		bl	strlen
 11437 0102 0346     		mov	r3, r0
 11438 0104 87F89236 		strb	r3, [r7, #1682]
1530:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11439              		.loc 1 1530 0
 11440 0108 07F1EC03 		add	r3, r7, #236
 11441 010c 1846     		mov	r0, r3
 11442 010e FFF7FEFF 		bl	strlen
 11443 0112 0346     		mov	r3, r0
 11444 0114 87F89136 		strb	r3, [r7, #1681]
1531:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 11445              		.loc 1 1531 0
 11446 0118 07F1D803 		add	r3, r7, #216
 11447 011c 1846     		mov	r0, r3
 11448 011e FFF7FEFF 		bl	strlen
 11449 0122 0346     		mov	r3, r0
 11450 0124 87F89036 		strb	r3, [r7, #1680]
1532:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 11451              		.loc 1 1532 0
 11452 0128 07F19C03 		add	r3, r7, #156
 11453 012c 1846     		mov	r0, r3
 11454 012e FFF7FEFF 		bl	strlen
 11455 0132 0346     		mov	r3, r0
 11456 0134 87F88F36 		strb	r3, [r7, #1679]
1533:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 11457              		.loc 1 1533 0
 11458 0138 07F18003 		add	r3, r7, #128
 11459 013c 1846     		mov	r0, r3
 11460 013e FFF7FEFF 		bl	strlen
 11461 0142 0346     		mov	r3, r0
 11462 0144 87F89D36 		strb	r3, [r7, #1693]
1534:..\src/command_processing.c ****     
1535:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 11463              		.loc 1 1535 0
 11464 0148 07F10803 		add	r3, r7, #8
 11465 014c 0022     		movs	r2, #0
 11466 014e 1A60     		str	r2, [r3]
 11467 0150 0433     		adds	r3, r3, #4
 11468 0152 7222     		movs	r2, #114
 11469 0154 0021     		movs	r1, #0
 11470 0156 1846     		mov	r0, r3
 11471 0158 FFF7FEFF 		bl	memset
1536:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1537:..\src/command_processing.c ****  
1538:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 11472              		.loc 1 1538 0
 11473 015c 07F10800 		add	r0, r7, #8
 11474 0160 6423     		movs	r3, #100
 11475 0162 0A22     		movs	r2, #10
 11476 0164 8D49     		ldr	r1, .L509+12
 11477 0166 FFF7FEFF 		bl	sprintf
1539:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 259


 11478              		.loc 1 1539 0
 11479 016a 07F10803 		add	r3, r7, #8
 11480 016e 1846     		mov	r0, r3
 11481 0170 FFF7FEFF 		bl	strlen
 11482 0174 0346     		mov	r3, r0
 11483 0176 87F88E36 		strb	r3, [r7, #1678]
1540:..\src/command_processing.c **** 
1541:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1542:..\src/command_processing.c ****     // update packet_length
1543:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11484              		.loc 1 1543 0
 11485 017a 854B     		ldr	r3, .L509
 11486 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11487 017e 5B08     		lsrs	r3, r3, #1
 11488 0180 DBB2     		uxtb	r3, r3
 11489 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1544:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11490              		.loc 1 1544 0
 11491 0186 824B     		ldr	r3, .L509
 11492 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11493 018a 1A46     		mov	r2, r3
 11494 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11495 0190 5B00     		lsls	r3, r3, #1
 11496 0192 D31A     		subs	r3, r2, r3
 11497 0194 002B     		cmp	r3, #0
 11498 0196 04DD     		ble	.L464
 11499              		.loc 1 1544 0 is_stmt 0 discriminator 1
 11500 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11501 019c 0133     		adds	r3, r3, #1
 11502 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11503              	.L464:
1545:..\src/command_processing.c ****     
1546:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11504              		.loc 1 1546 0 is_stmt 1
 11505 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 11506 01a6 5A1C     		adds	r2, r3, #1
1547:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11507              		.loc 1 1547 0
 11508 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11509 01ac 1344     		add	r3, r3, r2
1548:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11510              		.loc 1 1548 0
 11511 01ae 0133     		adds	r3, r3, #1
1546:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11512              		.loc 1 1546 0
 11513 01b0 9AB2     		uxth	r2, r3
 11514 01b2 774B     		ldr	r3, .L509
 11515 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11516 01b6 9BB2     		uxth	r3, r3
 11517 01b8 1344     		add	r3, r3, r2
 11518 01ba 9BB2     		uxth	r3, r3
 11519 01bc 1A46     		mov	r2, r3	@ movhi
 11520 01be 9200     		lsls	r2, r2, #2
 11521 01c0 1344     		add	r3, r3, r2
 11522 01c2 1A46     		mov	r2, r3	@ movhi
 11523 01c4 9100     		lsls	r1, r2, #2
 11524 01c6 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 260


 11525 01c8 0B46     		mov	r3, r1	@ movhi
 11526 01ca 1344     		add	r3, r3, r2
 11527 01cc 5B00     		lsls	r3, r3, #1
 11528 01ce 9BB2     		uxth	r3, r3
 11529 01d0 C933     		adds	r3, r3, #201
 11530 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1549:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1550:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1551:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1552:..\src/command_processing.c **** 
1553:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11531              		.loc 1 1553 0
 11532 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11533 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11534 01de 1344     		add	r3, r3, r2
 11535 01e0 9BB2     		uxth	r3, r3
 11536 01e2 0333     		adds	r3, r3, #3
 11537 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1554:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 11538              		.loc 1 1554 0
 11539 01e8 07F58A73 		add	r3, r7, #276
 11540 01ec A222     		movs	r2, #162
 11541 01ee 1A70     		strb	r2, [r3]
1555:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11542              		.loc 1 1555 0
 11543 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11544 01f4 DAB2     		uxtb	r2, r3
 11545 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11546 01fa DBB2     		uxtb	r3, r3
 11547 01fc 1344     		add	r3, r3, r2
 11548 01fe DAB2     		uxtb	r2, r3
 11549 0200 634B     		ldr	r3, .L509
 11550 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11551 0204 1344     		add	r3, r3, r2
 11552 0206 DBB2     		uxtb	r3, r3
 11553 0208 0333     		adds	r3, r3, #3
 11554 020a DAB2     		uxtb	r2, r3
 11555 020c 07F58A73 		add	r3, r7, #276
 11556 0210 5A70     		strb	r2, [r3, #1]
1556:..\src/command_processing.c **** 
1557:..\src/command_processing.c ****     switch(index) {
 11557              		.loc 1 1557 0
 11558 0212 BB1D     		adds	r3, r7, #6
 11559 0214 1B88     		ldrh	r3, [r3]
 11560 0216 002B     		cmp	r3, #0
 11561 0218 40F0D084 		bne	.L507
1558:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1559:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1560:..\src/command_processing.c ****             start_byte = 0;
 11562              		.loc 1 1560 0
 11563 021c 0023     		movs	r3, #0
 11564 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1561:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11565              		.loc 1 1561 0
 11566 0222 07F58A73 		add	r3, r7, #276
 11567 0226 0222     		movs	r2, #2
 11568 0228 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 261


1562:..\src/command_processing.c ****             packet_data[3] = 1;
 11569              		.loc 1 1562 0
 11570 022a 07F58A73 		add	r3, r7, #276
 11571 022e 0122     		movs	r2, #1
 11572 0230 DA70     		strb	r2, [r3, #3]
1563:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11573              		.loc 1 1563 0
 11574 0232 574B     		ldr	r3, .L509
 11575 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11576 0236 07F58A73 		add	r3, r7, #276
 11577 023a 1A71     		strb	r2, [r3, #4]
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11578              		.loc 1 1564 0
 11579 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11580 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11581 0244 15E0     		b	.L467
 11582              	.L468:
1565:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11583              		.loc 1 1565 0 discriminator 3
 11584 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11585 024a 5A1D     		adds	r2, r3, #5
 11586 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11587 0250 D31A     		subs	r3, r2, r3
 11588 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11589 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11590 025a 8A1A     		subs	r2, r1, r2
 11591 025c 07F1F801 		add	r1, r7, #248
 11592 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11593 0262 07F58A72 		add	r2, r7, #276
 11594 0266 D154     		strb	r1, [r2, r3]
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11595              		.loc 1 1564 0 discriminator 3
 11596 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11597 026c 013B     		subs	r3, r3, #1
 11598 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11599              	.L467:
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11600              		.loc 1 1564 0 is_stmt 0 discriminator 1
 11601 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11602 0276 002B     		cmp	r3, #0
 11603 0278 E5D1     		bne	.L468
1566:..\src/command_processing.c ****                 
1567:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1568:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11604              		.loc 1 1568 0 is_stmt 1
 11605 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11606 027e 3233     		adds	r3, r3, #50
 11607 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1569:..\src/command_processing.c ****             i = 0;
 11608              		.loc 1 1569 0
 11609 0284 0023     		movs	r3, #0
 11610 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1570:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11611              		.loc 1 1570 0
 11612 028a 0023     		movs	r3, #0
 11613 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11614 0290 B2E0     		b	.L469
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 262


 11615              	.L476:
1571:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11616              		.loc 1 1571 0
 11617 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11618 0296 07F1EC03 		add	r3, r7, #236
 11619 029a 4149     		ldr	r1, .L509+16
 11620 029c 1846     		mov	r0, r3
 11621 029e FFF7FEFF 		bl	sprintf
1572:..\src/command_processing.c ****                 h = 4;
 11622              		.loc 1 1572 0
 11623 02a2 0423     		movs	r3, #4
 11624 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1573:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11625              		.loc 1 1573 0
 11626 02a8 07F1EC03 		add	r3, r7, #236
 11627 02ac 1846     		mov	r0, r3
 11628 02ae FFF7FEFF 		bl	strlen
 11629 02b2 0346     		mov	r3, r0
 11630 02b4 87F89136 		strb	r3, [r7, #1681]
1574:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11631              		.loc 1 1574 0
 11632 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11633 02bc 9A1C     		adds	r2, r3, #2
 11634 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11635 02c2 3221     		movs	r1, #50
 11636 02c4 01FB03F3 		mul	r3, r1, r3
 11637 02c8 1344     		add	r3, r3, r2
 11638 02ca 07F58A72 		add	r2, r7, #276
 11639 02ce 0221     		movs	r1, #2
 11640 02d0 D154     		strb	r1, [r2, r3]
1575:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11641              		.loc 1 1575 0
 11642 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11643 02d6 DA1C     		adds	r2, r3, #3
 11644 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11645 02dc 3221     		movs	r1, #50
 11646 02de 01FB03F3 		mul	r3, r1, r3
 11647 02e2 1344     		add	r3, r3, r2
 11648 02e4 07F58A72 		add	r2, r7, #276
 11649 02e8 0321     		movs	r1, #3
 11650 02ea D154     		strb	r1, [r2, r3]
1576:..\src/command_processing.c ****                 
1577:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11651              		.loc 1 1577 0
 11652 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11653 02f0 1A46     		mov	r2, r3	@ movhi
 11654 02f2 5200     		lsls	r2, r2, #1
 11655 02f4 1344     		add	r3, r3, r2
 11656 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11657 02fa 39E0     		b	.L470
 11658              	.L473:
1578:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11659              		.loc 1 1578 0
 11660 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11661 0300 284A     		ldr	r2, .L509+20
 11662 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11663 0304 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 263


 11664 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11665 030a 9A42     		cmp	r2, r3
 11666 030c 17D1     		bne	.L471
1579:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11667              		.loc 1 1579 0
 11668 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11669 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11670 0316 1A44     		add	r2, r2, r3
 11671 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11672 031c 3221     		movs	r1, #50
 11673 031e 01FB03F3 		mul	r3, r1, r3
 11674 0322 1344     		add	r3, r3, r2
 11675 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11676 0328 1E49     		ldr	r1, .L509+20
 11677 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11678 032c 07F58A72 		add	r2, r7, #276
 11679 0330 D154     		strb	r1, [r2, r3]
1580:..\src/command_processing.c ****                         i++;
 11680              		.loc 1 1580 0
 11681 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11682 0336 0133     		adds	r3, r3, #1
 11683 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11684 033c 0EE0     		b	.L472
 11685              	.L471:
1581:..\src/command_processing.c ****                     } 
1582:..\src/command_processing.c ****                     else {
1583:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11686              		.loc 1 1583 0
 11687 033e B7F89E26 		ldrh	r2, [r7, #1694]
 11688 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11689 0346 1A44     		add	r2, r2, r3
 11690 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11691 034c 3221     		movs	r1, #50
 11692 034e 01FB03F3 		mul	r3, r1, r3
 11693 0352 1344     		add	r3, r3, r2
 11694 0354 07F58A72 		add	r2, r7, #276
 11695 0358 FF21     		movs	r1, #255
 11696 035a D154     		strb	r1, [r2, r3]
 11697              	.L472:
1584:..\src/command_processing.c ****                     }
1585:..\src/command_processing.c ****                     h++;
 11698              		.loc 1 1585 0 discriminator 2
 11699 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11700 0360 0133     		adds	r3, r3, #1
 11701 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1577:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11702              		.loc 1 1577 0 discriminator 2
 11703 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 11704 036a 0133     		adds	r3, r3, #1
 11705 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11706              	.L470:
1577:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11707              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11708 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11709 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11710 0378 1346     		mov	r3, r2
 11711 037a 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 264


 11712 037c 1344     		add	r3, r3, r2
 11713 037e 0233     		adds	r3, r3, #2
 11714 0380 9942     		cmp	r1, r3
 11715 0382 BBDD     		ble	.L473
1586:..\src/command_processing.c ****                 }
1587:..\src/command_processing.c **** 
1588:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1589:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11716              		.loc 1 1589 0 is_stmt 1
 11717 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11718 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11719 038c 2BE0     		b	.L474
 11720              	.L510:
 11721 038e 00BF     		.align	2
 11722              	.L509:
 11723 0390 00000000 		.word	N_IMU_Connected
 11724 0394 900D0000 		.word	.LC117
 11725 0398 AC0D0000 		.word	.LC118
 11726 039c A0010000 		.word	.LC107
 11727 03a0 280D0000 		.word	.LC119
 11728 03a4 00000000 		.word	IMU_connected
 11729              	.L475:
1590:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11730              		.loc 1 1590 0 discriminator 3
 11731 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11732 03ac DA1D     		adds	r2, r3, #7
 11733 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11734 03b2 3221     		movs	r1, #50
 11735 03b4 01FB03F3 		mul	r3, r1, r3
 11736 03b8 1A44     		add	r2, r2, r3
 11737 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11738 03be 1A44     		add	r2, r2, r3
 11739 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11740 03c4 D31A     		subs	r3, r2, r3
 11741 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 11742 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11743 03ce 8A1A     		subs	r2, r1, r2
 11744 03d0 07F1EC01 		add	r1, r7, #236
 11745 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11746 03d6 07F58A72 		add	r2, r7, #276
 11747 03da D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11748              		.loc 1 1589 0 discriminator 3
 11749 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11750 03e0 013B     		subs	r3, r3, #1
 11751 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11752              	.L474:
1589:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11753              		.loc 1 1589 0 is_stmt 0 discriminator 1
 11754 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11755 03ea 002B     		cmp	r3, #0
 11756 03ec DCD1     		bne	.L475
1570:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11757              		.loc 1 1570 0 is_stmt 1 discriminator 2
 11758 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11759 03f2 0133     		adds	r3, r3, #1
 11760 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 265


 11761              	.L469:
1570:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11762              		.loc 1 1570 0 is_stmt 0 discriminator 1
 11763 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11764 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11765 0400 9A42     		cmp	r2, r3
 11766 0402 FFF446AF 		bcc	.L476
1591:..\src/command_processing.c ****             }
1592:..\src/command_processing.c ****             
1593:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1594:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11767              		.loc 1 1594 0 is_stmt 1
 11768 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11769 040a 1A46     		mov	r2, r3	@ movhi
 11770 040c 9200     		lsls	r2, r2, #2
 11771 040e 1344     		add	r3, r3, r2
 11772 0410 1A46     		mov	r2, r3	@ movhi
 11773 0412 9100     		lsls	r1, r2, #2
 11774 0414 1A46     		mov	r2, r3	@ movhi
 11775 0416 0B46     		mov	r3, r1	@ movhi
 11776 0418 1344     		add	r3, r3, r2
 11777 041a 5B00     		lsls	r3, r3, #1
 11778 041c 9AB2     		uxth	r2, r3
 11779 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11780 0422 1344     		add	r3, r3, r2
 11781 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1595:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11782              		.loc 1 1595 0
 11783 0428 0023     		movs	r3, #0
 11784 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11785 042e 1FE1     		b	.L477
 11786              	.L484:
1596:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11787              		.loc 1 1596 0
 11788 0430 B7F89436 		ldrh	r3, [r7, #1684]
 11789 0434 9A1C     		adds	r2, r3, #2
 11790 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11791 043a 3221     		movs	r1, #50
 11792 043c 01FB03F3 		mul	r3, r1, r3
 11793 0440 1344     		add	r3, r3, r2
 11794 0442 07F58A72 		add	r2, r7, #276
 11795 0446 0221     		movs	r1, #2
 11796 0448 D154     		strb	r1, [r2, r3]
1597:..\src/command_processing.c ****                 
1598:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11797              		.loc 1 1598 0
 11798 044a B7F89436 		ldrh	r3, [r7, #1684]
 11799 044e DA1C     		adds	r2, r3, #3
 11800 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11801 0454 3221     		movs	r1, #50
 11802 0456 01FB03F3 		mul	r3, r1, r3
 11803 045a 1344     		add	r3, r3, r2
 11804 045c 07F58A72 		add	r2, r7, #276
 11805 0460 0321     		movs	r1, #3
 11806 0462 D154     		strb	r1, [r2, r3]
1599:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11807              		.loc 1 1599 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 266


 11808 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11809 0468 1A1D     		adds	r2, r3, #4
 11810 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11811 046e 3221     		movs	r1, #50
 11812 0470 01FB03F3 		mul	r3, r1, r3
 11813 0474 1A44     		add	r2, r2, r3
 11814 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11815 047a 5B00     		lsls	r3, r3, #1
 11816 047c B249     		ldr	r1, .L511
 11817 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11818 0480 1846     		mov	r0, r3
 11819 0482 B249     		ldr	r1, .L511+4
 11820 0484 0346     		mov	r3, r0
 11821 0486 5B00     		lsls	r3, r3, #1
 11822 0488 0344     		add	r3, r3, r0
 11823 048a 0B44     		add	r3, r3, r1
 11824 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11825 048e 07F58A73 		add	r3, r7, #276
 11826 0492 9954     		strb	r1, [r3, r2]
1600:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11827              		.loc 1 1600 0
 11828 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11829 0498 5A1D     		adds	r2, r3, #5
 11830 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11831 049e 3221     		movs	r1, #50
 11832 04a0 01FB03F3 		mul	r3, r1, r3
 11833 04a4 1A44     		add	r2, r2, r3
 11834 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11835 04aa 5B00     		lsls	r3, r3, #1
 11836 04ac A649     		ldr	r1, .L511
 11837 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11838 04b0 1846     		mov	r0, r3
 11839 04b2 A649     		ldr	r1, .L511+4
 11840 04b4 0346     		mov	r3, r0
 11841 04b6 5B00     		lsls	r3, r3, #1
 11842 04b8 0344     		add	r3, r3, r0
 11843 04ba 0B44     		add	r3, r3, r1
 11844 04bc 0133     		adds	r3, r3, #1
 11845 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11846 04c0 07F58A73 		add	r3, r7, #276
 11847 04c4 9954     		strb	r1, [r3, r2]
1601:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11848              		.loc 1 1601 0
 11849 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 11850 04ca 9A1D     		adds	r2, r3, #6
 11851 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 11852 04d0 3221     		movs	r1, #50
 11853 04d2 01FB03F3 		mul	r3, r1, r3
 11854 04d6 1A44     		add	r2, r2, r3
 11855 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11856 04dc 5B00     		lsls	r3, r3, #1
 11857 04de 9A49     		ldr	r1, .L511
 11858 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11859 04e2 1846     		mov	r0, r3
 11860 04e4 9949     		ldr	r1, .L511+4
 11861 04e6 0346     		mov	r3, r0
 11862 04e8 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 267


 11863 04ea 0344     		add	r3, r3, r0
 11864 04ec 0B44     		add	r3, r3, r1
 11865 04ee 0233     		adds	r3, r3, #2
 11866 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11867 04f2 07F58A73 		add	r3, r7, #276
 11868 04f6 9954     		strb	r1, [r3, r2]
1602:..\src/command_processing.c ****                 
1603:..\src/command_processing.c ****                 // check if there is a second value
1604:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 11869              		.loc 1 1604 0
 11870 04f8 954B     		ldr	r3, .L511+8
 11871 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11872 04fc 1A46     		mov	r2, r3
 11873 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 11874 0502 0133     		adds	r3, r3, #1
 11875 0504 5B00     		lsls	r3, r3, #1
 11876 0506 9A42     		cmp	r2, r3
 11877 0508 28DA     		bge	.L478
1605:..\src/command_processing.c ****                     // there is only one value
1606:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11878              		.loc 1 1606 0
 11879 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11880 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11881 0512 1EE0     		b	.L479
 11882              	.L480:
1607:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11883              		.loc 1 1607 0 discriminator 3
 11884 0514 B7F89436 		ldrh	r3, [r7, #1684]
 11885 0518 DA1D     		adds	r2, r3, #7
 11886 051a B7F8A036 		ldrh	r3, [r7, #1696]
 11887 051e 3221     		movs	r1, #50
 11888 0520 01FB03F3 		mul	r3, r1, r3
 11889 0524 1A44     		add	r2, r2, r3
 11890 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11891 052a 1A44     		add	r2, r2, r3
 11892 052c B7F8A236 		ldrh	r3, [r7, #1698]
 11893 0530 D31A     		subs	r3, r2, r3
 11894 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11895 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 11896 053a 8A1A     		subs	r2, r1, r2
 11897 053c 07F1D801 		add	r1, r7, #216
 11898 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11899 0542 07F58A72 		add	r2, r7, #276
 11900 0546 D154     		strb	r1, [r2, r3]
1606:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11901              		.loc 1 1606 0 discriminator 3
 11902 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 11903 054c 013B     		subs	r3, r3, #1
 11904 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11905              	.L479:
1606:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11906              		.loc 1 1606 0 is_stmt 0 discriminator 1
 11907 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 11908 0556 002B     		cmp	r3, #0
 11909 0558 DCD1     		bne	.L480
 11910 055a 84E0     		b	.L481
 11911              	.L478:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 268


1608:..\src/command_processing.c ****                 }
1609:..\src/command_processing.c ****                 else {
1610:..\src/command_processing.c ****                     // fill the second value
1611:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 11912              		.loc 1 1611 0 is_stmt 1
 11913 055c B7F89436 		ldrh	r3, [r7, #1684]
 11914 0560 DA1C     		adds	r2, r3, #3
 11915 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 11916 0566 3221     		movs	r1, #50
 11917 0568 01FB03F3 		mul	r3, r1, r3
 11918 056c 1344     		add	r3, r3, r2
 11919 056e 07F58A72 		add	r2, r7, #276
 11920 0572 0621     		movs	r1, #6
 11921 0574 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11922              		.loc 1 1612 0
 11923 0576 B7F89436 		ldrh	r3, [r7, #1684]
 11924 057a DA1D     		adds	r2, r3, #7
 11925 057c B7F8A036 		ldrh	r3, [r7, #1696]
 11926 0580 3221     		movs	r1, #50
 11927 0582 01FB03F3 		mul	r3, r1, r3
 11928 0586 1A44     		add	r2, r2, r3
 11929 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 11930 058c 5B00     		lsls	r3, r3, #1
 11931 058e 0133     		adds	r3, r3, #1
 11932 0590 6D49     		ldr	r1, .L511
 11933 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11934 0594 1846     		mov	r0, r3
 11935 0596 6D49     		ldr	r1, .L511+4
 11936 0598 0346     		mov	r3, r0
 11937 059a 5B00     		lsls	r3, r3, #1
 11938 059c 0344     		add	r3, r3, r0
 11939 059e 0B44     		add	r3, r3, r1
 11940 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11941 05a2 07F58A73 		add	r3, r7, #276
 11942 05a6 9954     		strb	r1, [r3, r2]
1613:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11943              		.loc 1 1613 0
 11944 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 11945 05ac 03F10802 		add	r2, r3, #8
 11946 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 11947 05b4 3221     		movs	r1, #50
 11948 05b6 01FB03F3 		mul	r3, r1, r3
 11949 05ba 1A44     		add	r2, r2, r3
 11950 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 11951 05c0 5B00     		lsls	r3, r3, #1
 11952 05c2 0133     		adds	r3, r3, #1
 11953 05c4 6049     		ldr	r1, .L511
 11954 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11955 05c8 1846     		mov	r0, r3
 11956 05ca 6049     		ldr	r1, .L511+4
 11957 05cc 0346     		mov	r3, r0
 11958 05ce 5B00     		lsls	r3, r3, #1
 11959 05d0 0344     		add	r3, r3, r0
 11960 05d2 0B44     		add	r3, r3, r1
 11961 05d4 0133     		adds	r3, r3, #1
 11962 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 269


 11963 05d8 07F58A73 		add	r3, r7, #276
 11964 05dc 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11965              		.loc 1 1614 0
 11966 05de B7F89436 		ldrh	r3, [r7, #1684]
 11967 05e2 03F10902 		add	r2, r3, #9
 11968 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 11969 05ea 3221     		movs	r1, #50
 11970 05ec 01FB03F3 		mul	r3, r1, r3
 11971 05f0 1A44     		add	r2, r2, r3
 11972 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 11973 05f6 5B00     		lsls	r3, r3, #1
 11974 05f8 0133     		adds	r3, r3, #1
 11975 05fa 5349     		ldr	r1, .L511
 11976 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11977 05fe 1846     		mov	r0, r3
 11978 0600 5249     		ldr	r1, .L511+4
 11979 0602 0346     		mov	r3, r0
 11980 0604 5B00     		lsls	r3, r3, #1
 11981 0606 0344     		add	r3, r3, r0
 11982 0608 0B44     		add	r3, r3, r1
 11983 060a 0233     		adds	r3, r3, #2
 11984 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11985 060e 07F58A73 		add	r3, r7, #276
 11986 0612 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11987              		.loc 1 1616 0
 11988 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11989 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11990 061c 1FE0     		b	.L482
 11991              	.L483:
1617:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11992              		.loc 1 1617 0 discriminator 3
 11993 061e B7F89436 		ldrh	r3, [r7, #1684]
 11994 0622 03F10A02 		add	r2, r3, #10
 11995 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 11996 062a 3221     		movs	r1, #50
 11997 062c 01FB03F3 		mul	r3, r1, r3
 11998 0630 1A44     		add	r2, r2, r3
 11999 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12000 0636 1A44     		add	r2, r2, r3
 12001 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12002 063c D31A     		subs	r3, r2, r3
 12003 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12004 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12005 0646 8A1A     		subs	r2, r1, r2
 12006 0648 07F1D801 		add	r1, r7, #216
 12007 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12008 064e 07F58A72 		add	r2, r7, #276
 12009 0652 D154     		strb	r1, [r2, r3]
1616:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12010              		.loc 1 1616 0 discriminator 3
 12011 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12012 0658 013B     		subs	r3, r3, #1
 12013 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12014              	.L482:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 270


1616:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12015              		.loc 1 1616 0 is_stmt 0 discriminator 1
 12016 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12017 0662 002B     		cmp	r3, #0
 12018 0664 DBD1     		bne	.L483
 12019              	.L481:
1595:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12020              		.loc 1 1595 0 is_stmt 1 discriminator 2
 12021 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12022 066a 0133     		adds	r3, r3, #1
 12023 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12024              	.L477:
1595:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12025              		.loc 1 1595 0 is_stmt 0 discriminator 1
 12026 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12027 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12028 0678 9A42     		cmp	r2, r3
 12029 067a FFF4D9AE 		bcc	.L484
1618:..\src/command_processing.c ****                 }
1619:..\src/command_processing.c ****             }
1620:..\src/command_processing.c ****             
1621:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1622:..\src/command_processing.c ****             
1623:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12030              		.loc 1 1623 0 is_stmt 1
 12031 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12032 0682 1A46     		mov	r2, r3	@ movhi
 12033 0684 9200     		lsls	r2, r2, #2
 12034 0686 1344     		add	r3, r3, r2
 12035 0688 1A46     		mov	r2, r3	@ movhi
 12036 068a 9100     		lsls	r1, r2, #2
 12037 068c 1A46     		mov	r2, r3	@ movhi
 12038 068e 0B46     		mov	r3, r1	@ movhi
 12039 0690 1344     		add	r3, r3, r2
 12040 0692 5B00     		lsls	r3, r3, #1
 12041 0694 9AB2     		uxth	r2, r3
 12042 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12043 069a 1344     		add	r3, r3, r2
 12044 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1624:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12045              		.loc 1 1624 0
 12046 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12047 06a4 5A1E     		subs	r2, r3, #1
 12048 06a6 07F1C803 		add	r3, r7, #200
 12049 06aa 2A49     		ldr	r1, .L511+12
 12050 06ac 1846     		mov	r0, r3
 12051 06ae FFF7FEFF 		bl	sprintf
1625:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12052              		.loc 1 1625 0
 12053 06b2 07F1C803 		add	r3, r7, #200
 12054 06b6 1846     		mov	r0, r3
 12055 06b8 FFF7FEFF 		bl	strlen
 12056 06bc 0346     		mov	r3, r0
 12057 06be 87F89336 		strb	r3, [r7, #1683]
1626:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12058              		.loc 1 1626 0
 12059 06c2 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 271


 12060 06c6 0233     		adds	r3, r3, #2
 12061 06c8 07F58A72 		add	r2, r7, #276
 12062 06cc 0221     		movs	r1, #2
 12063 06ce D154     		strb	r1, [r2, r3]
1627:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12064              		.loc 1 1627 0
 12065 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12066 06d4 0333     		adds	r3, r3, #3
 12067 06d6 07F58A72 		add	r2, r7, #276
 12068 06da 0121     		movs	r1, #1
 12069 06dc D154     		strb	r1, [r2, r3]
1628:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12070              		.loc 1 1628 0
 12071 06de B7F89436 		ldrh	r3, [r7, #1684]
 12072 06e2 0433     		adds	r3, r3, #4
 12073 06e4 1C4A     		ldr	r2, .L511+16
 12074 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12075 06ea 07F58A72 		add	r2, r7, #276
 12076 06ee D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12077              		.loc 1 1629 0
 12078 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12079 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12080 06f8 18E0     		b	.L485
 12081              	.L486:
1630:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12082              		.loc 1 1630 0 discriminator 3
 12083 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12084 06fe 5A1D     		adds	r2, r3, #5
 12085 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12086 0704 1A44     		add	r2, r2, r3
 12087 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12088 070a D31A     		subs	r3, r2, r3
 12089 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12090 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12091 0714 8A1A     		subs	r2, r1, r2
 12092 0716 07F1C801 		add	r1, r7, #200
 12093 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12094 071c 07F58A72 		add	r2, r7, #276
 12095 0720 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12096              		.loc 1 1629 0 discriminator 3
 12097 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12098 0726 013B     		subs	r3, r3, #1
 12099 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12100              	.L485:
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12101              		.loc 1 1629 0 is_stmt 0 discriminator 1
 12102 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12103 0730 002B     		cmp	r3, #0
 12104 0732 E2D1     		bne	.L486
1631:..\src/command_processing.c ****                 
1632:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12105              		.loc 1 1634 0 is_stmt 1
 12106 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 272


 12107 0738 3233     		adds	r3, r3, #50
 12108 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1635:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12109              		.loc 1 1635 0
 12110 073e 0023     		movs	r3, #0
 12111 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12112 0744 38E1     		b	.L487
 12113              	.L512:
 12114 0746 00BF     		.align	2
 12115              	.L511:
 12116 0748 00000000 		.word	IMU_connected
 12117 074c 00000000 		.word	MagCal
 12118 0750 00000000 		.word	N_IMU_Connected
 12119 0754 340D0000 		.word	.LC120
 12120 0758 00000000 		.word	c_mem
 12121              	.L490:
1636:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12122              		.loc 1 1636 0
 12123 075c B7F89826 		ldrh	r2, [r7, #1688]
 12124 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12125 0764 D118     		adds	r1, r2, r3
 12126 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12127 076a D54A     		ldr	r2, .L513
 12128 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12129 076e 07F19C00 		add	r0, r7, #156
 12130 0772 0A46     		mov	r2, r1
 12131 0774 D349     		ldr	r1, .L513+4
 12132 0776 FFF7FEFF 		bl	sprintf
1637:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12133              		.loc 1 1637 0
 12134 077a 07F19C03 		add	r3, r7, #156
 12135 077e 1846     		mov	r0, r3
 12136 0780 FFF7FEFF 		bl	strlen
 12137 0784 0346     		mov	r3, r0
 12138 0786 87F88F36 		strb	r3, [r7, #1679]
1638:..\src/command_processing.c ****             
1639:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12139              		.loc 1 1639 0
 12140 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12141 078e 1A46     		mov	r2, r3	@ movhi
 12142 0790 9200     		lsls	r2, r2, #2
 12143 0792 1344     		add	r3, r3, r2
 12144 0794 1A46     		mov	r2, r3	@ movhi
 12145 0796 9100     		lsls	r1, r2, #2
 12146 0798 1A46     		mov	r2, r3	@ movhi
 12147 079a 0B46     		mov	r3, r1	@ movhi
 12148 079c 1344     		add	r3, r3, r2
 12149 079e 5B00     		lsls	r3, r3, #1
 12150 07a0 9AB2     		uxth	r2, r3
 12151 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12152 07a6 1344     		add	r3, r3, r2
 12153 07a8 9BB2     		uxth	r3, r3
 12154 07aa 0233     		adds	r3, r3, #2
 12155 07ac 9BB2     		uxth	r3, r3
 12156 07ae 1A46     		mov	r2, r3
 12157 07b0 07F58A73 		add	r3, r7, #276
 12158 07b4 0221     		movs	r1, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 273


 12159 07b6 9954     		strb	r1, [r3, r2]
1640:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12160              		.loc 1 1640 0
 12161 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12162 07bc 1A46     		mov	r2, r3	@ movhi
 12163 07be 9200     		lsls	r2, r2, #2
 12164 07c0 1344     		add	r3, r3, r2
 12165 07c2 1A46     		mov	r2, r3	@ movhi
 12166 07c4 9100     		lsls	r1, r2, #2
 12167 07c6 1A46     		mov	r2, r3	@ movhi
 12168 07c8 0B46     		mov	r3, r1	@ movhi
 12169 07ca 1344     		add	r3, r3, r2
 12170 07cc 5B00     		lsls	r3, r3, #1
 12171 07ce 9AB2     		uxth	r2, r3
 12172 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12173 07d4 1344     		add	r3, r3, r2
 12174 07d6 9BB2     		uxth	r3, r3
 12175 07d8 0333     		adds	r3, r3, #3
 12176 07da 9BB2     		uxth	r3, r3
 12177 07dc 1A46     		mov	r2, r3
 12178 07de 07F58A73 		add	r3, r7, #276
 12179 07e2 0521     		movs	r1, #5
 12180 07e4 9954     		strb	r1, [r3, r2]
1641:..\src/command_processing.c ****                 
1642:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12181              		.loc 1 1642 0
 12182 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12183 07ea 1A46     		mov	r2, r3	@ movhi
 12184 07ec 9200     		lsls	r2, r2, #2
 12185 07ee 1344     		add	r3, r3, r2
 12186 07f0 1A46     		mov	r2, r3	@ movhi
 12187 07f2 9100     		lsls	r1, r2, #2
 12188 07f4 1A46     		mov	r2, r3	@ movhi
 12189 07f6 0B46     		mov	r3, r1	@ movhi
 12190 07f8 1344     		add	r3, r3, r2
 12191 07fa 5B00     		lsls	r3, r3, #1
 12192 07fc 9AB2     		uxth	r2, r3
 12193 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12194 0802 1344     		add	r3, r3, r2
 12195 0804 9BB2     		uxth	r3, r3
 12196 0806 0433     		adds	r3, r3, #4
 12197 0808 9BB2     		uxth	r3, r3
 12198 080a 1846     		mov	r0, r3
 12199 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12200 0810 AB4A     		ldr	r2, .L513
 12201 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12202 0814 1946     		mov	r1, r3
 12203 0816 AC4A     		ldr	r2, .L513+8
 12204 0818 0B46     		mov	r3, r1
 12205 081a 9B00     		lsls	r3, r3, #2
 12206 081c 0B44     		add	r3, r3, r1
 12207 081e 1344     		add	r3, r3, r2
 12208 0820 03F20223 		addw	r3, r3, #514
 12209 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12210 0826 07F58A73 		add	r3, r7, #276
 12211 082a 1A54     		strb	r2, [r3, r0]
1643:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 274


 12212              		.loc 1 1643 0
 12213 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12214 0830 1A46     		mov	r2, r3	@ movhi
 12215 0832 9200     		lsls	r2, r2, #2
 12216 0834 1344     		add	r3, r3, r2
 12217 0836 1A46     		mov	r2, r3	@ movhi
 12218 0838 9100     		lsls	r1, r2, #2
 12219 083a 1A46     		mov	r2, r3	@ movhi
 12220 083c 0B46     		mov	r3, r1	@ movhi
 12221 083e 1344     		add	r3, r3, r2
 12222 0840 5B00     		lsls	r3, r3, #1
 12223 0842 9AB2     		uxth	r2, r3
 12224 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12225 0848 1344     		add	r3, r3, r2
 12226 084a 9BB2     		uxth	r3, r3
 12227 084c 0533     		adds	r3, r3, #5
 12228 084e 9BB2     		uxth	r3, r3
 12229 0850 1846     		mov	r0, r3
 12230 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12231 0856 9A4A     		ldr	r2, .L513
 12232 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12233 085a 1946     		mov	r1, r3
 12234 085c 9A4A     		ldr	r2, .L513+8
 12235 085e 0B46     		mov	r3, r1
 12236 0860 9B00     		lsls	r3, r3, #2
 12237 0862 0B44     		add	r3, r3, r1
 12238 0864 1344     		add	r3, r3, r2
 12239 0866 03F20323 		addw	r3, r3, #515
 12240 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12241 086c 07F58A73 		add	r3, r7, #276
 12242 0870 1A54     		strb	r2, [r3, r0]
1644:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12243              		.loc 1 1644 0
 12244 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12245 0876 1A46     		mov	r2, r3	@ movhi
 12246 0878 9200     		lsls	r2, r2, #2
 12247 087a 1344     		add	r3, r3, r2
 12248 087c 1A46     		mov	r2, r3	@ movhi
 12249 087e 9100     		lsls	r1, r2, #2
 12250 0880 1A46     		mov	r2, r3	@ movhi
 12251 0882 0B46     		mov	r3, r1	@ movhi
 12252 0884 1344     		add	r3, r3, r2
 12253 0886 5B00     		lsls	r3, r3, #1
 12254 0888 9AB2     		uxth	r2, r3
 12255 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12256 088e 1344     		add	r3, r3, r2
 12257 0890 9BB2     		uxth	r3, r3
 12258 0892 0633     		adds	r3, r3, #6
 12259 0894 9BB2     		uxth	r3, r3
 12260 0896 1846     		mov	r0, r3
 12261 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12262 089c 884A     		ldr	r2, .L513
 12263 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12264 08a0 1946     		mov	r1, r3
 12265 08a2 894A     		ldr	r2, .L513+8
 12266 08a4 0B46     		mov	r3, r1
 12267 08a6 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 275


 12268 08a8 0B44     		add	r3, r3, r1
 12269 08aa 1344     		add	r3, r3, r2
 12270 08ac 03F50173 		add	r3, r3, #516
 12271 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12272 08b2 07F58A73 		add	r3, r7, #276
 12273 08b6 1A54     		strb	r2, [r3, r0]
1645:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12274              		.loc 1 1645 0
 12275 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12276 08bc 1A46     		mov	r2, r3	@ movhi
 12277 08be 9200     		lsls	r2, r2, #2
 12278 08c0 1344     		add	r3, r3, r2
 12279 08c2 1A46     		mov	r2, r3	@ movhi
 12280 08c4 9100     		lsls	r1, r2, #2
 12281 08c6 1A46     		mov	r2, r3	@ movhi
 12282 08c8 0B46     		mov	r3, r1	@ movhi
 12283 08ca 1344     		add	r3, r3, r2
 12284 08cc 5B00     		lsls	r3, r3, #1
 12285 08ce 9AB2     		uxth	r2, r3
 12286 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12287 08d4 1344     		add	r3, r3, r2
 12288 08d6 9BB2     		uxth	r3, r3
 12289 08d8 0733     		adds	r3, r3, #7
 12290 08da 9BB2     		uxth	r3, r3
 12291 08dc 1846     		mov	r0, r3
 12292 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12293 08e2 774A     		ldr	r2, .L513
 12294 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12295 08e6 1946     		mov	r1, r3
 12296 08e8 774A     		ldr	r2, .L513+8
 12297 08ea 0B46     		mov	r3, r1
 12298 08ec 9B00     		lsls	r3, r3, #2
 12299 08ee 0B44     		add	r3, r3, r1
 12300 08f0 1344     		add	r3, r3, r2
 12301 08f2 03F20523 		addw	r3, r3, #517
 12302 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12303 08f8 07F58A73 		add	r3, r7, #276
 12304 08fc 1A54     		strb	r2, [r3, r0]
1646:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12305              		.loc 1 1646 0
 12306 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12307 0902 1A46     		mov	r2, r3	@ movhi
 12308 0904 9200     		lsls	r2, r2, #2
 12309 0906 1344     		add	r3, r3, r2
 12310 0908 1A46     		mov	r2, r3	@ movhi
 12311 090a 9100     		lsls	r1, r2, #2
 12312 090c 1A46     		mov	r2, r3	@ movhi
 12313 090e 0B46     		mov	r3, r1	@ movhi
 12314 0910 1344     		add	r3, r3, r2
 12315 0912 5B00     		lsls	r3, r3, #1
 12316 0914 9AB2     		uxth	r2, r3
 12317 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12318 091a 1344     		add	r3, r3, r2
 12319 091c 9BB2     		uxth	r3, r3
 12320 091e 0833     		adds	r3, r3, #8
 12321 0920 9BB2     		uxth	r3, r3
 12322 0922 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 276


 12323 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12324 0928 654A     		ldr	r2, .L513
 12325 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12326 092c 1946     		mov	r1, r3
 12327 092e 664A     		ldr	r2, .L513+8
 12328 0930 0B46     		mov	r3, r1
 12329 0932 9B00     		lsls	r3, r3, #2
 12330 0934 0B44     		add	r3, r3, r1
 12331 0936 1344     		add	r3, r3, r2
 12332 0938 03F20623 		addw	r3, r3, #518
 12333 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12334 093e 07F58A73 		add	r3, r7, #276
 12335 0942 1A54     		strb	r2, [r3, r0]
1647:..\src/command_processing.c **** 
1648:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12336              		.loc 1 1648 0
 12337 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12338 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12339 094c 2BE0     		b	.L488
 12340              	.L489:
1649:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12341              		.loc 1 1649 0 discriminator 3
 12342 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12343 0952 1A46     		mov	r2, r3	@ movhi
 12344 0954 9200     		lsls	r2, r2, #2
 12345 0956 1344     		add	r3, r3, r2
 12346 0958 1A46     		mov	r2, r3	@ movhi
 12347 095a 9100     		lsls	r1, r2, #2
 12348 095c 1A46     		mov	r2, r3	@ movhi
 12349 095e 0B46     		mov	r3, r1	@ movhi
 12350 0960 1344     		add	r3, r3, r2
 12351 0962 5B00     		lsls	r3, r3, #1
 12352 0964 9AB2     		uxth	r2, r3
 12353 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12354 096a 1344     		add	r3, r3, r2
 12355 096c 9AB2     		uxth	r2, r3
 12356 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12357 0972 9BB2     		uxth	r3, r3
 12358 0974 1344     		add	r3, r3, r2
 12359 0976 9AB2     		uxth	r2, r3
 12360 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12361 097c D31A     		subs	r3, r2, r3
 12362 097e 9BB2     		uxth	r3, r3
 12363 0980 0933     		adds	r3, r3, #9
 12364 0982 9BB2     		uxth	r3, r3
 12365 0984 1946     		mov	r1, r3
 12366 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12367 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12368 098e D31A     		subs	r3, r2, r3
 12369 0990 07F19C02 		add	r2, r7, #156
 12370 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12371 0996 07F58A73 		add	r3, r7, #276
 12372 099a 5A54     		strb	r2, [r3, r1]
1648:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12373              		.loc 1 1648 0 discriminator 3
 12374 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12375 09a0 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 277


 12376 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12377              	.L488:
1648:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12378              		.loc 1 1648 0 is_stmt 0 discriminator 1
 12379 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12380 09aa 002B     		cmp	r3, #0
 12381 09ac CFD1     		bne	.L489
1635:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12382              		.loc 1 1635 0 is_stmt 1 discriminator 2
 12383 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12384 09b2 0133     		adds	r3, r3, #1
 12385 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12386              	.L487:
1635:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12387              		.loc 1 1635 0 is_stmt 0 discriminator 1
 12388 09b8 444B     		ldr	r3, .L513+12
 12389 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12390 09bc 9BB2     		uxth	r3, r3
 12391 09be B7F8A426 		ldrh	r2, [r7, #1700]
 12392 09c2 9A42     		cmp	r2, r3
 12393 09c4 FFF4CAAE 		bcc	.L490
1650:..\src/command_processing.c ****             }  
1651:..\src/command_processing.c ****           
1652:..\src/command_processing.c **** 
1653:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1654:..\src/command_processing.c ****             
1655:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12394              		.loc 1 1655 0 is_stmt 1
 12395 09c8 404B     		ldr	r3, .L513+12
 12396 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12397 09cc 9BB2     		uxth	r3, r3
 12398 09ce 1A46     		mov	r2, r3	@ movhi
 12399 09d0 9200     		lsls	r2, r2, #2
 12400 09d2 1344     		add	r3, r3, r2
 12401 09d4 1A46     		mov	r2, r3	@ movhi
 12402 09d6 9100     		lsls	r1, r2, #2
 12403 09d8 1A46     		mov	r2, r3	@ movhi
 12404 09da 0B46     		mov	r3, r1	@ movhi
 12405 09dc 1344     		add	r3, r3, r2
 12406 09de 5B00     		lsls	r3, r3, #1
 12407 09e0 9AB2     		uxth	r2, r3
 12408 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12409 09e6 1344     		add	r3, r3, r2
 12410 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1656:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12411              		.loc 1 1656 0
 12412 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12413 09f0 364A     		ldr	r2, .L513+12
 12414 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12415 09f4 1A44     		add	r2, r2, r3
 12416 09f6 07F18003 		add	r3, r7, #128
 12417 09fa 3549     		ldr	r1, .L513+16
 12418 09fc 1846     		mov	r0, r3
 12419 09fe FFF7FEFF 		bl	sprintf
1657:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12420              		.loc 1 1657 0
 12421 0a02 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 278


 12422 0a06 0233     		adds	r3, r3, #2
 12423 0a08 07F58A72 		add	r2, r7, #276
 12424 0a0c 0021     		movs	r1, #0
 12425 0a0e D154     		strb	r1, [r2, r3]
1658:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12426              		.loc 1 1658 0
 12427 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12428 0a14 0333     		adds	r3, r3, #3
 12429 0a16 07F58A72 		add	r2, r7, #276
 12430 0a1a 0121     		movs	r1, #1
 12431 0a1c D154     		strb	r1, [r2, r3]
1659:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12432              		.loc 1 1659 0
 12433 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12434 0a22 0433     		adds	r3, r3, #4
 12435 0a24 284A     		ldr	r2, .L513+8
 12436 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 12437 0a2a 07F58A72 		add	r2, r7, #276
 12438 0a2e D154     		strb	r1, [r2, r3]
1660:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12439              		.loc 1 1660 0
 12440 0a30 254B     		ldr	r3, .L513+8
 12441 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 12442 0a36 012B     		cmp	r3, #1
 12443 0a38 17D0     		beq	.L492
 12444 0a3a 022B     		cmp	r3, #2
 12445 0a3c 28D0     		beq	.L493
 12446 0a3e 002B     		cmp	r3, #0
 12447 0a40 00D0     		beq	.L494
1661:..\src/command_processing.c ****                 case 0: 
1662:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1663:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1664:..\src/command_processing.c ****                     break;
1665:..\src/command_processing.c ****                 case 1: 
1666:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1667:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1668:..\src/command_processing.c ****                     break;
1669:..\src/command_processing.c ****                 case 2: 
1670:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1671:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1672:..\src/command_processing.c ****                     break;
1673:..\src/command_processing.c ****                 default:
1674:..\src/command_processing.c ****                     break;
 12448              		.loc 1 1674 0
 12449 0a42 38E0     		b	.L495
 12450              	.L494:
1662:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12451              		.loc 1 1662 0
 12452 0a44 07F18003 		add	r3, r7, #128
 12453 0a48 1846     		mov	r0, r3
 12454 0a4a FFF7FEFF 		bl	strlen
 12455 0a4e 0346     		mov	r3, r0
 12456 0a50 1A46     		mov	r2, r3
 12457 0a52 07F18003 		add	r3, r7, #128
 12458 0a56 1344     		add	r3, r3, r2
 12459 0a58 1E4A     		ldr	r2, .L513+20
 12460 0a5a 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 279


 12461 0a5c 1860     		str	r0, [r3]	@ unaligned
 12462 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12463 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1663:..\src/command_processing.c ****                     break;
 12464              		.loc 1 1663 0
 12465 0a62 1A23     		movs	r3, #26
 12466 0a64 87F89D36 		strb	r3, [r7, #1693]
1664:..\src/command_processing.c ****                 case 1: 
 12467              		.loc 1 1664 0
 12468 0a68 25E0     		b	.L495
 12469              	.L492:
1666:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 12470              		.loc 1 1666 0
 12471 0a6a 07F18003 		add	r3, r7, #128
 12472 0a6e 1846     		mov	r0, r3
 12473 0a70 FFF7FEFF 		bl	strlen
 12474 0a74 0346     		mov	r3, r0
 12475 0a76 1A46     		mov	r2, r3
 12476 0a78 07F18003 		add	r3, r7, #128
 12477 0a7c 1344     		add	r3, r3, r2
 12478 0a7e 164A     		ldr	r2, .L513+24
 12479 0a80 1068     		ldr	r0, [r2]	@ unaligned
 12480 0a82 1860     		str	r0, [r3]	@ unaligned
 12481 0a84 1279     		ldrb	r2, [r2, #4]
 12482 0a86 1A71     		strb	r2, [r3, #4]
1667:..\src/command_processing.c ****                     break;
 12483              		.loc 1 1667 0
 12484 0a88 1923     		movs	r3, #25
 12485 0a8a 87F89D36 		strb	r3, [r7, #1693]
1668:..\src/command_processing.c ****                 case 2: 
 12486              		.loc 1 1668 0
 12487 0a8e 12E0     		b	.L495
 12488              	.L493:
1670:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12489              		.loc 1 1670 0
 12490 0a90 07F18003 		add	r3, r7, #128
 12491 0a94 1846     		mov	r0, r3
 12492 0a96 FFF7FEFF 		bl	strlen
 12493 0a9a 0346     		mov	r3, r0
 12494 0a9c 1A46     		mov	r2, r3
 12495 0a9e 07F18003 		add	r3, r7, #128
 12496 0aa2 1344     		add	r3, r3, r2
 12497 0aa4 0D4A     		ldr	r2, .L513+28
 12498 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12499 0aa8 1860     		str	r0, [r3]	@ unaligned
 12500 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12501 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1671:..\src/command_processing.c ****                     break;
 12502              		.loc 1 1671 0
 12503 0aae 1A23     		movs	r3, #26
 12504 0ab0 87F89D36 		strb	r3, [r7, #1693]
1672:..\src/command_processing.c ****                 default:
 12505              		.loc 1 1672 0
 12506 0ab4 00BF     		nop
 12507              	.L495:
1675:..\src/command_processing.c ****             }            
1676:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 280


 12508              		.loc 1 1676 0
 12509 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12510 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12511 0abe 28E0     		b	.L496
 12512              	.L514:
 12513              		.align	2
 12514              	.L513:
 12515 0ac0 00000000 		.word	IMU_connected
 12516 0ac4 440D0000 		.word	.LC121
 12517 0ac8 00000000 		.word	c_mem
 12518 0acc 00000000 		.word	N_IMU_Connected
 12519 0ad0 600D0000 		.word	.LC122
 12520 0ad4 780D0000 		.word	.LC123
 12521 0ad8 800D0000 		.word	.LC124
 12522 0adc 880D0000 		.word	.LC125
 12523              	.L497:
1677:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12524              		.loc 1 1677 0 discriminator 3
 12525 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 12526 0ae4 5A1D     		adds	r2, r3, #5
 12527 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12528 0aea 1A44     		add	r2, r2, r3
 12529 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12530 0af0 D31A     		subs	r3, r2, r3
 12531 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12532 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12533 0afa 8A1A     		subs	r2, r1, r2
 12534 0afc 07F18001 		add	r1, r7, #128
 12535 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12536 0b02 07F58A72 		add	r2, r7, #276
 12537 0b06 D154     		strb	r1, [r2, r3]
1676:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12538              		.loc 1 1676 0 discriminator 3
 12539 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12540 0b0c 013B     		subs	r3, r3, #1
 12541 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12542              	.L496:
1676:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12543              		.loc 1 1676 0 is_stmt 0 discriminator 1
 12544 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12545 0b16 002B     		cmp	r3, #0
 12546 0b18 E2D1     		bne	.L497
1678:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1679:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12547              		.loc 1 1679 0 is_stmt 1
 12548 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12549 0b1e 5A1D     		adds	r2, r3, #5
 12550 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12551 0b24 1344     		add	r3, r3, r2
 12552 0b26 07F58A72 		add	r2, r7, #276
 12553 0b2a 0121     		movs	r1, #1
 12554 0b2c D154     		strb	r1, [r2, r3]
1680:..\src/command_processing.c ****                   
1681:..\src/command_processing.c ****             
1682:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1683:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12555              		.loc 1 1683 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 281


 12556 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12557 0b32 3233     		adds	r3, r3, #50
 12558 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12559              		.loc 1 1684 0
 12560 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12561 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12562 0b40 1AE0     		b	.L498
 12563              	.L499:
1685:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12564              		.loc 1 1685 0 discriminator 3
 12565 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12566 0b46 0233     		adds	r3, r3, #2
 12567 0b48 9BB2     		uxth	r3, r3
 12568 0b4a 1A46     		mov	r2, r3
 12569 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12570 0b50 1A44     		add	r2, r2, r3
 12571 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12572 0b56 D31A     		subs	r3, r2, r3
 12573 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12574 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12575 0b60 8A1A     		subs	r2, r1, r2
 12576 0b62 07F10801 		add	r1, r7, #8
 12577 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12578 0b68 07F58A72 		add	r2, r7, #276
 12579 0b6c D154     		strb	r1, [r2, r3]
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12580              		.loc 1 1684 0 discriminator 3
 12581 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 12582 0b72 013B     		subs	r3, r3, #1
 12583 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12584              	.L498:
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12585              		.loc 1 1684 0 is_stmt 0 discriminator 1
 12586 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 12587 0b7c 002B     		cmp	r3, #0
 12588 0b7e E0D1     		bne	.L499
1686:..\src/command_processing.c **** 
1687:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12589              		.loc 1 1687 0 is_stmt 1
 12590 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12591 0b84 5C1E     		subs	r4, r3, #1
 12592 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12593 0b8a DBB2     		uxtb	r3, r3
 12594 0b8c 013B     		subs	r3, r3, #1
 12595 0b8e DAB2     		uxtb	r2, r3
 12596 0b90 07F58A73 		add	r3, r7, #276
 12597 0b94 1146     		mov	r1, r2
 12598 0b96 1846     		mov	r0, r3
 12599 0b98 FFF7FEFF 		bl	LCRChecksum
 12600 0b9c 0346     		mov	r3, r0
 12601 0b9e 1A46     		mov	r2, r3
 12602 0ba0 07F58A73 		add	r3, r7, #276
 12603 0ba4 1A55     		strb	r2, [r3, r4]
1688:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12604              		.loc 1 1688 0
 12605 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 282


 12606 0baa 07F58A73 		add	r3, r7, #276
 12607 0bae 1146     		mov	r1, r2
 12608 0bb0 1846     		mov	r0, r3
 12609 0bb2 FFF7FEFF 		bl	commWrite
1689:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12610              		.loc 1 1689 0
 12611 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1690:..\src/command_processing.c ****         break;
 12612              		.loc 1 1690 0
 12613 0bba 09E1     		b	.L500
 12614              	.L507:
1691:..\src/command_processing.c **** 
1692:..\src/command_processing.c **** //=========================================================     other_params
1693:..\src/command_processing.c ****         default: 
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12615              		.loc 1 1695 0
 12616 0bbc BB1D     		adds	r3, r7, #6
 12617 0bbe 1A88     		ldrh	r2, [r3]
 12618 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12619 0bc4 013B     		subs	r3, r3, #1
 12620 0bc6 9A42     		cmp	r2, r3
 12621 0bc8 C0F20181 		blt	.L508
1696:..\src/command_processing.c ****                 break;
1697:..\src/command_processing.c ****             
1698:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12622              		.loc 1 1698 0
 12623 0bcc BB1D     		adds	r3, r7, #6
 12624 0bce 1A88     		ldrh	r2, [r3]
 12625 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12626 0bd4 8149     		ldr	r1, .L515
 12627 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12628 0bd8 0B44     		add	r3, r3, r1
 12629 0bda 9A42     		cmp	r2, r3
 12630 0bdc 05D1     		bne	.L502
1699:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12631              		.loc 1 1699 0
 12632 0bde 804B     		ldr	r3, .L515+4
 12633 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12634 0be2 804B     		ldr	r3, .L515+8
 12635 0be4 83F80122 		strb	r2, [r3, #513]
1700:..\src/command_processing.c ****                 break;
 12636              		.loc 1 1700 0
 12637 0be8 F2E0     		b	.L500
 12638              	.L502:
1701:..\src/command_processing.c ****             }
1702:..\src/command_processing.c ****             
1703:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 12639              		.loc 1 1703 0
 12640 0bea BB1D     		adds	r3, r7, #6
 12641 0bec 1A88     		ldrh	r2, [r3]
 12642 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12643 0bf2 013B     		subs	r3, r3, #1
 12644 0bf4 9A42     		cmp	r2, r3
 12645 0bf6 05D1     		bne	.L503
1704:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12646              		.loc 1 1704 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 283


 12647 0bf8 794B     		ldr	r3, .L515+4
 12648 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12649 0bfc 794B     		ldr	r3, .L515+8
 12650 0bfe 83F8A020 		strb	r2, [r3, #160]
1705:..\src/command_processing.c ****             }
1706:..\src/command_processing.c ****             else {
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1711:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1712:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1713:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1714:..\src/command_processing.c ****                 
1715:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1716:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1717:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1718:..\src/command_processing.c ****                 {
1719:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1720:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1721:..\src/command_processing.c ****                 }
1722:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1723:..\src/command_processing.c ****             
1724:..\src/command_processing.c ****             }
1725:..\src/command_processing.c ****             
1726:..\src/command_processing.c ****         break;
 12651              		.loc 1 1726 0
 12652 0c02 E5E0     		b	.L500
 12653              	.L503:
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12654              		.loc 1 1709 0
 12655 0c04 BB1D     		adds	r3, r7, #6
 12656 0c06 1A88     		ldrh	r2, [r3]
 12657 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12658 0c0c D31A     		subs	r3, r2, r3
 12659 0c0e 764A     		ldr	r2, .L515+12
 12660 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12661 0c12 1946     		mov	r1, r3
 12662 0c14 724B     		ldr	r3, .L515+4
 12663 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12664 0c18 724A     		ldr	r2, .L515+8
 12665 0c1a 0B46     		mov	r3, r1
 12666 0c1c 9B00     		lsls	r3, r3, #2
 12667 0c1e 0B44     		add	r3, r3, r1
 12668 0c20 1344     		add	r3, r3, r2
 12669 0c22 03F20223 		addw	r3, r3, #514
 12670 0c26 0246     		mov	r2, r0
 12671 0c28 1A70     		strb	r2, [r3]
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12672              		.loc 1 1710 0
 12673 0c2a BB1D     		adds	r3, r7, #6
 12674 0c2c 1A88     		ldrh	r2, [r3]
 12675 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12676 0c32 D31A     		subs	r3, r2, r3
 12677 0c34 6C4A     		ldr	r2, .L515+12
 12678 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12679 0c38 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 284


 12680 0c3a 694B     		ldr	r3, .L515+4
 12681 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12682 0c3e 694A     		ldr	r2, .L515+8
 12683 0c40 0B46     		mov	r3, r1
 12684 0c42 9B00     		lsls	r3, r3, #2
 12685 0c44 0B44     		add	r3, r3, r1
 12686 0c46 1344     		add	r3, r3, r2
 12687 0c48 03F20323 		addw	r3, r3, #515
 12688 0c4c 0246     		mov	r2, r0
 12689 0c4e 1A70     		strb	r2, [r3]
1711:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12690              		.loc 1 1711 0
 12691 0c50 BB1D     		adds	r3, r7, #6
 12692 0c52 1A88     		ldrh	r2, [r3]
 12693 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12694 0c58 D31A     		subs	r3, r2, r3
 12695 0c5a 634A     		ldr	r2, .L515+12
 12696 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12697 0c5e 1946     		mov	r1, r3
 12698 0c60 5F4B     		ldr	r3, .L515+4
 12699 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12700 0c64 5F4A     		ldr	r2, .L515+8
 12701 0c66 0B46     		mov	r3, r1
 12702 0c68 9B00     		lsls	r3, r3, #2
 12703 0c6a 0B44     		add	r3, r3, r1
 12704 0c6c 1344     		add	r3, r3, r2
 12705 0c6e 03F50173 		add	r3, r3, #516
 12706 0c72 0246     		mov	r2, r0
 12707 0c74 1A70     		strb	r2, [r3]
1712:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12708              		.loc 1 1712 0
 12709 0c76 BB1D     		adds	r3, r7, #6
 12710 0c78 1A88     		ldrh	r2, [r3]
 12711 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12712 0c7e D31A     		subs	r3, r2, r3
 12713 0c80 594A     		ldr	r2, .L515+12
 12714 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12715 0c84 1946     		mov	r1, r3
 12716 0c86 564B     		ldr	r3, .L515+4
 12717 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12718 0c8a 564A     		ldr	r2, .L515+8
 12719 0c8c 0B46     		mov	r3, r1
 12720 0c8e 9B00     		lsls	r3, r3, #2
 12721 0c90 0B44     		add	r3, r3, r1
 12722 0c92 1344     		add	r3, r3, r2
 12723 0c94 03F20523 		addw	r3, r3, #517
 12724 0c98 0246     		mov	r2, r0
 12725 0c9a 1A70     		strb	r2, [r3]
1713:..\src/command_processing.c ****                 
 12726              		.loc 1 1713 0
 12727 0c9c BB1D     		adds	r3, r7, #6
 12728 0c9e 1A88     		ldrh	r2, [r3]
 12729 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12730 0ca4 D31A     		subs	r3, r2, r3
 12731 0ca6 504A     		ldr	r2, .L515+12
 12732 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12733 0caa 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 285


 12734 0cac 4C4B     		ldr	r3, .L515+4
 12735 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12736 0cb0 4C4A     		ldr	r2, .L515+8
 12737 0cb2 0B46     		mov	r3, r1
 12738 0cb4 9B00     		lsls	r3, r3, #2
 12739 0cb6 0B44     		add	r3, r3, r1
 12740 0cb8 1344     		add	r3, r3, r2
 12741 0cba 03F20623 		addw	r3, r3, #518
 12742 0cbe 0246     		mov	r2, r0
 12743 0cc0 1A70     		strb	r2, [r3]
1716:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12744              		.loc 1 1716 0
 12745 0cc2 4A4B     		ldr	r3, .L515+16
 12746 0cc4 0122     		movs	r2, #1
 12747 0cc6 1A60     		str	r2, [r3]
1717:..\src/command_processing.c ****                 {
 12748              		.loc 1 1717 0
 12749 0cc8 0023     		movs	r3, #0
 12750 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12751 0cce 71E0     		b	.L505
 12752              	.L506:
1719:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12753              		.loc 1 1719 0 discriminator 3
 12754 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12755 0cd4 444A     		ldr	r2, .L515+12
 12756 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12757 0cd8 1C46     		mov	r4, r3
 12758 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12759 0cde 424A     		ldr	r2, .L515+12
 12760 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12761 0ce2 1946     		mov	r1, r3
 12762 0ce4 3F4A     		ldr	r2, .L515+8
 12763 0ce6 0B46     		mov	r3, r1
 12764 0ce8 9B00     		lsls	r3, r3, #2
 12765 0cea 0B44     		add	r3, r3, r1
 12766 0cec 1344     		add	r3, r3, r2
 12767 0cee 03F20223 		addw	r3, r3, #514
 12768 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12769 0cf4 1A46     		mov	r2, r3
 12770 0cf6 1346     		mov	r3, r2
 12771 0cf8 5B00     		lsls	r3, r3, #1
 12772 0cfa 1344     		add	r3, r3, r2
 12773 0cfc 5B00     		lsls	r3, r3, #1
 12774 0cfe 5A1C     		adds	r2, r3, #1
 12775 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12776 0d04 3849     		ldr	r1, .L515+12
 12777 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12778 0d08 1846     		mov	r0, r3
 12779 0d0a 3649     		ldr	r1, .L515+8
 12780 0d0c 0346     		mov	r3, r0
 12781 0d0e 9B00     		lsls	r3, r3, #2
 12782 0d10 0344     		add	r3, r3, r0
 12783 0d12 0B44     		add	r3, r3, r1
 12784 0d14 03F20323 		addw	r3, r3, #515
 12785 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12786 0d1a 1946     		mov	r1, r3
 12787 0d1c 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 286


 12788 0d1e 5B00     		lsls	r3, r3, #1
 12789 0d20 0B44     		add	r3, r3, r1
 12790 0d22 5B00     		lsls	r3, r3, #1
 12791 0d24 1A44     		add	r2, r2, r3
 12792 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12793 0d2a 2F49     		ldr	r1, .L515+12
 12794 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12795 0d2e 1846     		mov	r0, r3
 12796 0d30 2C49     		ldr	r1, .L515+8
 12797 0d32 0346     		mov	r3, r0
 12798 0d34 9B00     		lsls	r3, r3, #2
 12799 0d36 0344     		add	r3, r3, r0
 12800 0d38 0B44     		add	r3, r3, r1
 12801 0d3a 03F50173 		add	r3, r3, #516
 12802 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12803 0d40 1946     		mov	r1, r3
 12804 0d42 0B46     		mov	r3, r1
 12805 0d44 5B00     		lsls	r3, r3, #1
 12806 0d46 0B44     		add	r3, r3, r1
 12807 0d48 5B00     		lsls	r3, r3, #1
 12808 0d4a 1A44     		add	r2, r2, r3
 12809 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12810 0d50 2549     		ldr	r1, .L515+12
 12811 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12812 0d54 1846     		mov	r0, r3
 12813 0d56 2349     		ldr	r1, .L515+8
 12814 0d58 0346     		mov	r3, r0
 12815 0d5a 9B00     		lsls	r3, r3, #2
 12816 0d5c 0344     		add	r3, r3, r0
 12817 0d5e 0B44     		add	r3, r3, r1
 12818 0d60 03F20523 		addw	r3, r3, #517
 12819 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12820 0d66 1B01     		lsls	r3, r3, #4
 12821 0d68 1A44     		add	r2, r2, r3
 12822 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 12823 0d6e 1E49     		ldr	r1, .L515+12
 12824 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12825 0d72 1846     		mov	r0, r3
 12826 0d74 1B49     		ldr	r1, .L515+8
 12827 0d76 0346     		mov	r3, r0
 12828 0d78 9B00     		lsls	r3, r3, #2
 12829 0d7a 0344     		add	r3, r3, r0
 12830 0d7c 0B44     		add	r3, r3, r1
 12831 0d7e 03F20623 		addw	r3, r3, #518
 12832 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12833 0d84 5B00     		lsls	r3, r3, #1
 12834 0d86 1344     		add	r3, r3, r2
 12835 0d88 0133     		adds	r3, r3, #1
 12836 0d8a 194A     		ldr	r2, .L515+20
 12837 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1720:..\src/command_processing.c ****                 }
 12838              		.loc 1 1720 0 discriminator 3
 12839 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12840 0d94 144A     		ldr	r2, .L515+12
 12841 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12842 0d98 1A46     		mov	r2, r3
 12843 0d9a 154B     		ldr	r3, .L515+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 287


 12844 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12845 0da0 124B     		ldr	r3, .L515+16
 12846 0da2 1B68     		ldr	r3, [r3]
 12847 0da4 1344     		add	r3, r3, r2
 12848 0da6 114A     		ldr	r2, .L515+16
 12849 0da8 1360     		str	r3, [r2]
1717:..\src/command_processing.c ****                 {
 12850              		.loc 1 1717 0 discriminator 3
 12851 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 12852 0dae 0133     		adds	r3, r3, #1
 12853 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12854              	.L505:
1717:..\src/command_processing.c ****                 {
 12855              		.loc 1 1717 0 is_stmt 0 discriminator 1
 12856 0db4 094B     		ldr	r3, .L515
 12857 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12858 0db8 9BB2     		uxth	r3, r3
 12859 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 12860 0dbe 9A42     		cmp	r2, r3
 12861 0dc0 86D3     		bcc	.L506
1722:..\src/command_processing.c ****             
 12862              		.loc 1 1722 0 is_stmt 1
 12863 0dc2 0A4B     		ldr	r3, .L515+16
 12864 0dc4 1B68     		ldr	r3, [r3]
 12865 0dc6 0133     		adds	r3, r3, #1
 12866 0dc8 084A     		ldr	r2, .L515+16
 12867 0dca 1360     		str	r3, [r2]
 12868              		.loc 1 1726 0
 12869 0dcc 00E0     		b	.L500
 12870              	.L508:
1696:..\src/command_processing.c ****             
 12871              		.loc 1 1696 0
 12872 0dce 00BF     		nop
 12873              	.L500:
1727:..\src/command_processing.c ****     }
1728:..\src/command_processing.c **** }
 12874              		.loc 1 1728 0 discriminator 1
 12875 0dd0 00BF     		nop
 12876 0dd2 07F5D567 		add	r7, r7, #1704
 12877              		.cfi_def_cfa_offset 16
 12878 0dd6 BD46     		mov	sp, r7
 12879              		.cfi_def_cfa_register 13
 12880              		@ sp needed
 12881 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 12882              	.L516:
 12883 0dda 00BF     		.align	2
 12884              	.L515:
 12885 0ddc 00000000 		.word	N_IMU_Connected
 12886 0de0 00000000 		.word	g_rx
 12887 0de4 00000000 		.word	g_mem
 12888 0de8 00000000 		.word	IMU_connected
 12889 0dec 00000000 		.word	imus_data_size
 12890 0df0 00000000 		.word	single_imu_size
 12891              		.cfi_endproc
 12892              	.LFE70:
 12893              		.size	get_IMU_param_list, .-get_IMU_param_list
 12894              		.section	.text.setZeros,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 288


 12895              		.align	2
 12896              		.global	setZeros
 12897              		.thumb
 12898              		.thumb_func
 12899              		.type	setZeros, %function
 12900              	setZeros:
 12901              	.LFB71:
1729:..\src/command_processing.c **** 
1730:..\src/command_processing.c **** //==============================================================================
1731:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1732:..\src/command_processing.c **** //==============================================================================
1733:..\src/command_processing.c **** 
1734:..\src/command_processing.c **** void setZeros()
1735:..\src/command_processing.c **** {
 12902              		.loc 1 1735 0
 12903              		.cfi_startproc
 12904              		@ args = 0, pretend = 0, frame = 8
 12905              		@ frame_needed = 1, uses_anonymous_args = 0
 12906 0000 90B5     		push	{r4, r7, lr}
 12907              		.cfi_def_cfa_offset 12
 12908              		.cfi_offset 4, -12
 12909              		.cfi_offset 7, -8
 12910              		.cfi_offset 14, -4
 12911 0002 83B0     		sub	sp, sp, #12
 12912              		.cfi_def_cfa_offset 24
 12913 0004 00AF     		add	r7, sp, #0
 12914              		.cfi_def_cfa_register 7
1736:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1737:..\src/command_processing.c ****     
1738:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 12915              		.loc 1 1738 0
 12916 0006 0023     		movs	r3, #0
 12917 0008 BB71     		strb	r3, [r7, #6]
 12918 000a 27E0     		b	.L518
 12919              	.L521:
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12920              		.loc 1 1739 0
 12921 000c 0023     		movs	r3, #0
 12922 000e FB71     		strb	r3, [r7, #7]
 12923 0010 1EE0     		b	.L519
 12924              	.L520:
1740:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 12925              		.loc 1 1740 0 discriminator 3
 12926 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12927 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 12928 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12929 0018 1748     		ldr	r0, .L522
 12930 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 12931 001e 1C46     		mov	r4, r3
 12932 0020 1648     		ldr	r0, .L522+4
 12933 0022 1346     		mov	r3, r2
 12934 0024 5B00     		lsls	r3, r3, #1
 12935 0026 1344     		add	r3, r3, r2
 12936 0028 9B00     		lsls	r3, r3, #2
 12937 002a 0B44     		add	r3, r3, r1
 12938 002c 6633     		adds	r3, r3, #102
 12939 002e 40F82340 		str	r4, [r0, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 289


1741:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 12940              		.loc 1 1741 0 discriminator 3
 12941 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12942 0034 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 12943 0036 1248     		ldr	r0, .L522+8
 12944 0038 1346     		mov	r3, r2
 12945 003a 5B00     		lsls	r3, r3, #1
 12946 003c 1344     		add	r3, r3, r2
 12947 003e 1B01     		lsls	r3, r3, #4
 12948 0040 0344     		add	r3, r3, r0
 12949 0042 0B44     		add	r3, r3, r1
 12950 0044 1433     		adds	r3, r3, #20
 12951 0046 0022     		movs	r2, #0
 12952 0048 1A70     		strb	r2, [r3]
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12953              		.loc 1 1739 0 discriminator 3
 12954 004a FB79     		ldrb	r3, [r7, #7]
 12955 004c 0133     		adds	r3, r3, #1
 12956 004e FB71     		strb	r3, [r7, #7]
 12957              	.L519:
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12958              		.loc 1 1739 0 is_stmt 0 discriminator 1
 12959 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12960 0052 022B     		cmp	r3, #2
 12961 0054 DDD9     		bls	.L520
1738:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12962              		.loc 1 1738 0 is_stmt 1 discriminator 2
 12963 0056 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12964 0058 0133     		adds	r3, r3, #1
 12965 005a BB71     		strb	r3, [r7, #6]
 12966              	.L518:
1738:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12967              		.loc 1 1738 0 is_stmt 0 discriminator 1
 12968 005c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12969 005e 012B     		cmp	r3, #1
 12970 0060 D4D9     		bls	.L521
1742:..\src/command_processing.c ****         }
1743:..\src/command_processing.c ****     }
1744:..\src/command_processing.c ****     reset_last_value_flag = 1;
 12971              		.loc 1 1744 0 is_stmt 1
 12972 0062 084B     		ldr	r3, .L522+12
 12973 0064 0122     		movs	r2, #1
 12974 0066 1A70     		strb	r2, [r3]
1745:..\src/command_processing.c **** 
1746:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 12975              		.loc 1 1746 0
 12976 0068 0120     		movs	r0, #1
 12977 006a FFF7FEFF 		bl	sendAcknowledgment
1747:..\src/command_processing.c **** }
 12978              		.loc 1 1747 0
 12979 006e 00BF     		nop
 12980 0070 0C37     		adds	r7, r7, #12
 12981              		.cfi_def_cfa_offset 12
 12982 0072 BD46     		mov	sp, r7
 12983              		.cfi_def_cfa_register 13
 12984              		@ sp needed
 12985 0074 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 290


 12986              	.L523:
 12987 0076 00BF     		.align	2
 12988              	.L522:
 12989 0078 00000000 		.word	data_encoder_raw
 12990 007c 00000000 		.word	g_mem
 12991 0080 00000000 		.word	g_meas
 12992 0084 00000000 		.word	reset_last_value_flag
 12993              		.cfi_endproc
 12994              	.LFE71:
 12995              		.size	setZeros, .-setZeros
 12996              		.section	.rodata
 12997              		.align	2
 12998              	.LC126:
 12999 0dc0 0D0A00   		.ascii	"\015\012\000"
 13000 0dc3 00       		.align	2
 13001              	.LC127:
 13002 0dc4 4669726D 		.ascii	"Firmware version: \000"
 13002      77617265 
 13002      20766572 
 13002      73696F6E 
 13002      3A2000
 13003 0dd7 00       		.align	2
 13004              	.LC128:
 13005 0dd8 47656E65 		.ascii	"Generic firmware v. 1.7.2 (PSoC5)\000"
 13005      72696320 
 13005      6669726D 
 13005      77617265 
 13005      20762E20 
 13006 0dfa 0000     		.align	2
 13007              	.LC129:
 13008 0dfc 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13008      0A00
 13009 0e02 0000     		.align	2
 13010              	.LC130:
 13011 0e04 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13011      43452049 
 13011      4E464F0D 
 13011      0A00
 13012 0e12 0000     		.align	2
 13013              	.LC131:
 13014 0e14 49443A20 		.ascii	"ID: %d\015\012\000"
 13014      25640D0A 
 13014      00
 13015 0e1d 000000   		.align	2
 13016              	.LC132:
 13017 0e20 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13017      63653A20 
 13017      534F4654 
 13017      48414E44 
 13017      2050524F 
 13018 0e37 00       		.align	2
 13019              	.LC133:
 13020 0e38 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13020      63653A20 
 13020      47454E45 
 13020      52494320 
 13020      32204D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 291


 13021 0e53 00       		.align	2
 13022              	.LC134:
 13023 0e54 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13023      20736964 
 13023      653A2052 
 13023      49474854 
 13023      0D0A00
 13024 0e67 00       		.align	2
 13025              	.LC135:
 13026 0e68 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13026      20736964 
 13026      653A204C 
 13026      4546540D 
 13026      0A00
 13027 0e7a 0000     		.align	2
 13028              	.LC136:
 13029 0e7c 55736572 		.ascii	"User: MARIA\015\012\000"
 13029      3A204D41 
 13029      5249410D 
 13029      0A00
 13030 0e8a 0000     		.align	2
 13031              	.LC137:
 13032 0e8c 55736572 		.ascii	"User: ROZA\015\012\000"
 13032      3A20524F 
 13032      5A410D0A 
 13032      00
 13033 0e99 000000   		.align	2
 13034              	.LC138:
 13035 0e9c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13035      3A204745 
 13035      4E455249 
 13035      43205553 
 13035      45520D0A 
 13036 0eb1 000000   		.align	2
 13037              	.LC139:
 13038 0eb4 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13038      52202564 
 13038      20494E46 
 13038      4F0D0A00 
 13039              		.align	2
 13040              	.LC140:
 13041 0ec4 4D6F746F 		.ascii	"Motor reference\000"
 13041      72207265 
 13041      66657265 
 13041      6E636500 
 13042              		.align	2
 13043              	.LC141:
 13044 0ed4 202D2043 		.ascii	" - Currents: \000"
 13044      75727265 
 13044      6E74733A 
 13044      2000
 13045 0ee2 0000     		.align	2
 13046              	.LC142:
 13047 0ee4 202D2050 		.ascii	" - Pwm: \000"
 13047      776D3A20 
 13047      00
 13048 0eed 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 292


 13049              	.LC143:
 13050 0ef0 202D2050 		.ascii	" - Position: \000"
 13050      6F736974 
 13050      696F6E3A 
 13050      2000
 13051 0efe 0000     		.align	2
 13052              	.LC144:
 13053 0f00 25642000 		.ascii	"%d \000"
 13054              		.align	2
 13055              	.LC145:
 13056 0f04 4D6F746F 		.ascii	"Motor enabled: \000"
 13056      7220656E 
 13056      61626C65 
 13056      643A2000 
 13057              		.align	2
 13058              	.LC146:
 13059 0f14 5945530D 		.ascii	"YES\015\012\000"
 13059      0A00
 13060 0f1a 0000     		.align	2
 13061              	.LC147:
 13062 0f1c 4E4F0D0A 		.ascii	"NO\015\012\000"
 13062      00
 13063 0f21 000000   		.align	2
 13064              	.LC148:
 13065 0f24 50574D20 		.ascii	"PWM rescaling activation: \000"
 13065      72657363 
 13065      616C696E 
 13065      67206163 
 13065      74697661 
 13066 0f3f 00       		.align	2
 13067              	.LC149:
 13068 0f40 5945530A 		.ascii	"YES\012\000"
 13068      00
 13069 0f45 000000   		.align	2
 13070              	.LC150:
 13071 0f48 4E4F0A00 		.ascii	"NO\012\000"
 13072              		.align	2
 13073              	.LC151:
 13074 0f4c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13074      4C696D69 
 13074      743A2025 
 13074      640D0A00 
 13075              		.align	2
 13076              	.LC152:
 13077 0f5c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13077      41535552 
 13077      454D454E 
 13077      54532049 
 13077      4E464F0D 
 13078 0f72 0000     		.align	2
 13079              	.LC153:
 13080 0f74 53656E73 		.ascii	"Sensor value: \000"
 13080      6F722076 
 13080      616C7565 
 13080      3A2000
 13081 0f83 00       		.align	2
 13082              	.LC154:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 293


 13083 0f84 256400   		.ascii	"%d\000"
 13084 0f87 00       		.align	2
 13085              	.LC155:
 13086 0f88 2C2000   		.ascii	", \000"
 13087 0f8b 00       		.align	2
 13088              	.LC156:
 13089 0f8c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13089      65727920 
 13089      25642056 
 13089      6F6C7461 
 13089      67652028 
 13090 0fa9 000000   		.align	2
 13091              	.LC157:
 13092 0fac 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13092      20636861 
 13092      72676520 
 13092      706F7765 
 13092      72207465 
 13093 0fd3 00       		.align	2
 13094              	.LC158:
 13095 0fd4 43757272 		.ascii	"Current %d (mA): %ld\000"
 13095      656E7420 
 13095      25642028 
 13095      6D41293A 
 13095      20256C64 
 13096 0fe9 000000   		.align	2
 13097              	.LC159:
 13098 0fec 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13098      544F5220 
 13098      25642043 
 13098      4F4E4649 
 13098      47555241 
 13099 1007 00       		.align	2
 13100              	.LC160:
 13101 1008 50494420 		.ascii	"PID Controller: \000"
 13101      436F6E74 
 13101      726F6C6C 
 13101      65723A20 
 13101      00
 13102              		.global	__aeabi_i2d
 13103              		.global	__aeabi_ddiv
 13104 1019 000000   		.align	2
 13105              	.LC161:
 13106 101c 50202D3E 		.ascii	"P -> %f  \000"
 13106      20256620 
 13106      2000
 13107 1026 0000     		.align	2
 13108              	.LC162:
 13109 1028 49202D3E 		.ascii	"I -> %f  \000"
 13109      20256620 
 13109      2000
 13110 1032 0000     		.align	2
 13111              	.LC163:
 13112 1034 44202D3E 		.ascii	"D -> %f\015\012\000"
 13112      2025660D 
 13112      0A00
 13113 103e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 294


 13114              	.LC164:
 13115 1040 43757272 		.ascii	"Current PID Controller: \000"
 13115      656E7420 
 13115      50494420 
 13115      436F6E74 
 13115      726F6C6C 
 13116 1059 000000   		.align	2
 13117              	.LC165:
 13118 105c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13118      74757020 
 13118      61637469 
 13118      76617469 
 13118      6F6E3A20 
 13119 1076 0000     		.align	2
 13120              	.LC166:
 13121 1078 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13121      74757020 
 13121      61637469 
 13121      76617469 
 13121      6F6E3A20 
 13122 1091 000000   		.align	2
 13123              	.LC167:
 13124 1094 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13124      74206D6F 
 13124      64653A20 
 13124      5553420D 
 13124      0A00
 13125 10a6 0000     		.align	2
 13126              	.LC168:
 13127 10a8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13127      74206D6F 
 13127      64653A20 
 13127      48616E64 
 13127      6C650D0A 
 13128 10bd 000000   		.align	2
 13129              	.LC169:
 13130 10c0 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13130      74206D6F 
 13130      64653A20 
 13130      454D4720 
 13130      70726F70 
 13131 10df 00       		.align	2
 13132              	.LC170:
 13133 10e0 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13133      74206D6F 
 13133      64653A20 
 13133      454D4720 
 13133      696E7465 
 13134 10fb 00       		.align	2
 13135              	.LC171:
 13136 10fc 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13136      74206D6F 
 13136      64653A20 
 13136      454D4720 
 13136      46434653 
 13137 1113 00       		.align	2
 13138              	.LC172:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 295


 13139 1114 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13139      74206D6F 
 13139      64653A20 
 13139      454D4720 
 13139      46434653 
 13140 112f 00       		.align	2
 13141              	.LC173:
 13142 1130 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13142      74206D6F 
 13142      64653A20 
 13142      454D4720 
 13142      70726F70 
 13143 115e 00       		.ascii	"\000"
 13144 115f 00       		.align	2
 13145              	.LC174:
 13146 1160 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13146      726F6C20 
 13146      6D6F6465 
 13146      3A20506F 
 13146      73697469 
 13147 1179 000000   		.align	2
 13148              	.LC175:
 13149 117c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13149      726F6C20 
 13149      6D6F6465 
 13149      3A205057 
 13149      4D0D0A00 
 13150              		.align	2
 13151              	.LC176:
 13152 1190 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13152      726F6C20 
 13152      6D6F6465 
 13152      3A204375 
 13152      7272656E 
 13153              		.align	2
 13154              	.LC177:
 13155 11a8 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13155      726F6C20 
 13155      6D6F6465 
 13155      3A20506F 
 13155      73697469 
 13156 11cd 000000   		.align	2
 13157              	.LC178:
 13158 11d0 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13158      6C757465 
 13158      20656E63 
 13158      6F646572 
 13158      20706F73 
 13159 11f1 000000   		.align	2
 13160              	.LC179:
 13161 11f4 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13161      6C757465 
 13161      20656E63 
 13161      6F646572 
 13161      20706F73 
 13162              		.align	2
 13163              	.LC180:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 296


 13164 1214 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13164      722D4861 
 13164      6E646C65 
 13164      20526174 
 13164      696F3A20 
 13165 122d 000000   		.align	2
 13166              	.LC181:
 13167 1230 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13167      64657220 
 13167      696E6469 
 13167      63657320 
 13167      75736564 
 13168 1259 000000   		.align	2
 13169              	.LC182:
 13170 125c 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13170      74204765 
 13170      61723A20 
 13170      25642074 
 13170      65657468 
 13171 1273 00       		.align	2
 13172              	.LC183:
 13173 1274 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13173      6E642047 
 13173      6561723A 
 13173      20256420 
 13173      74656574 
 13174              		.align	2
 13175              	.LC184:
 13176 128c 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13176      20696E76 
 13176      61726961 
 13176      6E743A20 
 13176      25640D0A 
 13177 12a1 000000   		.align	2
 13178              	.LC185:
 13179 12a4 53656E73 		.ascii	"Sensor resolution: \000"
 13179      6F722072 
 13179      65736F6C 
 13179      7574696F 
 13179      6E3A2000 
 13180              		.align	2
 13181              	.LC186:
 13182 12b8 4D656173 		.ascii	"Measurement Offset: \000"
 13182      7572656D 
 13182      656E7420 
 13182      4F666673 
 13182      65743A20 
 13183 12cd 000000   		.align	2
 13184              	.LC187:
 13185 12d0 256C6400 		.ascii	"%ld\000"
 13186              		.align	2
 13187              	.LC188:
 13188 12d4 4D656173 		.ascii	"Measurement Multiplier: \000"
 13188      7572656D 
 13188      656E7420 
 13188      4D756C74 
 13188      69706C69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 297


 13189              		.global	__aeabi_f2d
 13190 12ed 000000   		.align	2
 13191              	.LC189:
 13192 12f0 256600   		.ascii	"%f\000"
 13193 12f3 00       		.align	2
 13194              	.LC190:
 13195 12f4 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13195      656E7420 
 13195      6C6F6F6B 
 13195      75702074 
 13195      61626C65 
 13196 1322 00       		.ascii	"\000"
 13197 1323 00       		.align	2
 13198              	.LC191:
 13199 1324 506F7369 		.ascii	"Position limit active: %d\000"
 13199      74696F6E 
 13199      206C696D 
 13199      69742061 
 13199      63746976 
 13200 133e 0000     		.align	2
 13201              	.LC192:
 13202 1340 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13202      74696F6E 
 13202      206C696D 
 13202      6974206D 
 13202      6F746F72 
 13203 1363 00       		.align	2
 13204              	.LC193:
 13205 1364 73757020 		.ascii	"sup -> %ld\015\012\000"
 13205      2D3E2025 
 13205      6C640D0A 
 13205      00
 13206 1371 000000   		.align	2
 13207              	.LC194:
 13208 1374 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13208      73746570 
 13208      20706F73 
 13208      20616E64 
 13208      206E6567 
 13209              		.align	2
 13210              	.LC195:
 13211 1390 43757272 		.ascii	"Current limit: %d\015\012\000"
 13211      656E7420 
 13211      6C696D69 
 13211      743A2025 
 13211      640D0A00 
 13212              		.align	2
 13213              	.LC196:
 13214 13a4 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13214      7220626F 
 13214      61726420 
 13214      6173736F 
 13214      63696174 
 13215 13ce 0000     		.align	2
 13216              	.LC197:
 13217 13d0 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 13217      65722074 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 298


 13217      7970653A 
 13217      204D4333 
 13217      33383837 
 13218 13f2 0000     		.align	2
 13219              	.LC198:
 13220 13f4 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13220      65722074 
 13220      7970653A 
 13220      20564E48 
 13220      35303139 
 13221              		.align	2
 13222              	.LC199:
 13223 1418 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13223      72617465 
 13223      206C696D 
 13223      69746572 
 13223      2076616C 
 13224 1435 000000   		.align	2
 13225              	.LC200:
 13226 1438 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13226      72657665 
 13226      72736962 
 13226      6C65206D 
 13226      6F746F72 
 13227              		.align	2
 13228              	.LC201:
 13229 1454 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13229      72657665 
 13229      72736962 
 13229      6C65206D 
 13229      6F746F72 
 13230 146f 00       		.align	2
 13231              	.LC202:
 13232 1470 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13232      434F4E46 
 13232      49475552 
 13232      4154494F 
 13232      4E0D0A00 
 13233              		.align	2
 13234              	.LC203:
 13235 1484 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13235      74687265 
 13235      73686F6C 
 13235      6473205B 
 13235      30202D20 
 13236 14a6 0000     		.align	2
 13237              	.LC204:
 13238 14a8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13238      6D617820 
 13238      76616C75 
 13238      6573205B 
 13238      30202D20 
 13239              		.align	2
 13240              	.LC205:
 13241 14cc 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13241      696E7665 
 13241      7273696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 299


 13241      6E3A2059 
 13241      45530D0A 
 13242 14e1 000000   		.align	2
 13243              	.LC206:
 13244 14e4 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13244      696E7665 
 13244      7273696F 
 13244      6E3A204E 
 13244      4F0D0A00 
 13245              		.align	2
 13246              	.LC207:
 13247 14f8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13247      62726174 
 13247      696F6E20 
 13247      656E6162 
 13247      6C65643A 
 13248 1513 00       		.align	2
 13249              	.LC208:
 13250 1514 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13250      62726174 
 13250      696F6E20 
 13250      656E6162 
 13250      6C65643A 
 13251 152e 0000     		.align	2
 13252              	.LC209:
 13253 1530 454D4720 		.ascii	"EMG max speed: %d\000"
 13253      6D617820 
 13253      73706565 
 13253      643A2025 
 13253      6400
 13254 1542 0000     		.align	2
 13255              	.LC210:
 13256 1544 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13256      74696F6E 
 13256      616C2041 
 13256      44432073 
 13256      656E736F 
 13257              		.align	2
 13258              	.LC211:
 13259 1564 41444320 		.ascii	"ADC %d -> %d\000"
 13259      2564202D 
 13259      3E202564 
 13259      00
 13260 1571 000000   		.align	2
 13261              	.LC212:
 13262 1574 454D4720 		.ascii	"EMG input %d -> %d\000"
 13262      696E7075 
 13262      74202564 
 13262      202D3E20 
 13262      256400
 13263 1587 00       		.align	2
 13264              	.LC213:
 13265 1588 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13265      2074696D 
 13265      65206465 
 13265      6C617920 
 13265      286D7329 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 300


 13266 15a1 000000   		.align	2
 13267              	.LC214:
 13268 15a4 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13268      2076656C 
 13268      6F636974 
 13268      7920636C 
 13268      6F737572 
 13269 15ca 0000     		.align	2
 13270              	.LC215:
 13271 15cc 52657374 		.ascii	"Rest position: %d\000"
 13271      20706F73 
 13271      6974696F 
 13271      6E3A2025 
 13271      6400
 13272 15de 0000     		.align	2
 13273              	.LC216:
 13274 15e0 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13274      436F6E6E 
 13274      65637465 
 13274      643A2025 
 13274      640D0A00 
 13275              		.align	2
 13276              	.LC217:
 13277 15f4 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13277      20434F4E 
 13277      46494755 
 13277      52415449 
 13277      4F4E0D0A 
 13278 1609 000000   		.align	2
 13279              	.LC218:
 13280 160c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13280      2564200D 
 13280      0A094944 
 13280      3A202564 
 13280      0D0A00
 13281 161f 00       		.align	2
 13282              	.LC219:
 13283 1620 09416363 		.ascii	"\011Accelerometers: \000"
 13283      656C6572 
 13283      6F6D6574 
 13283      6572733A 
 13283      2000
 13284 1632 0000     		.align	2
 13285              	.LC220:
 13286 1634 09477972 		.ascii	"\011Gyroscopes: \000"
 13286      6F73636F 
 13286      7065733A 
 13286      2000
 13287 1642 0000     		.align	2
 13288              	.LC221:
 13289 1644 094D6167 		.ascii	"\011Magnetometers: \000"
 13289      6E65746F 
 13289      6D657465 
 13289      72733A20 
 13289      00
 13290 1655 000000   		.align	2
 13291              	.LC222:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 301


 13292 1658 09517561 		.ascii	"\011Quaternion: \000"
 13292      7465726E 
 13292      696F6E3A 
 13292      2000
 13293 1666 0000     		.align	2
 13294              	.LC223:
 13295 1668 0954656D 		.ascii	"\011Temperature: \000"
 13295      70657261 
 13295      74757265 
 13295      3A2000
 13296 1677 00       		.align	2
 13297              	.LC224:
 13298 1678 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 13298      44455220 
 13298      434F4E46 
 13298      49475552 
 13298      4154494F 
 13299              		.align	2
 13300              	.LC225:
 13301 1690 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 13301      64657220 
 13301      436F6E6E 
 13301      65637465 
 13301      64204C69 
 13302 16ae 0000     		.align	2
 13303              	.LC226:
 13304 16b0 4C454654 		.ascii	"LEFT\000"
 13304      00
 13305 16b5 000000   		.align	2
 13306              	.LC227:
 13307 16b8 52494748 		.ascii	"RIGHT\000"
 13307      5400
 13308 16be 0000     		.align	2
 13309              	.LC228:
 13310 16c0 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 13310      2048414E 
 13310      44206D61 
 13310      696E2065 
 13310      6E636F64 
 13311 16dd 000000   		.align	2
 13312              	.LC229:
 13313 16e0 52617720 		.ascii	"Raw value [status]:\015\012\000"
 13313      76616C75 
 13313      65205B73 
 13313      74617475 
 13313      735D3A0D 
 13314 16f6 0000     		.align	2
 13315              	.LC230:
 13316 16f8 4F4B00   		.ascii	"OK\000"
 13317 16fb 00       		.align	2
 13318              	.LC231:
 13319 16fc 5800     		.ascii	"X\000"
 13320 16fe 0000     		.align	2
 13321              	.LC232:
 13322 1700 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 13322      25735D0D 
 13322      0A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 302


 13323 170a 0000     		.align	2
 13324              	.LC233:
 13325 170c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13325      20465720 
 13325      6379636C 
 13325      65207469 
 13325      6D653A20 
 13326              		.align	2
 13327              	.LC234:
 13328 1728 0D0A0000 		.ascii	"\015\012\000\000"
 13329              		.section	.text.prepare_generic_info,"ax",%progbits
 13330              		.align	2
 13331              		.global	prepare_generic_info
 13332              		.thumb
 13333              		.thumb_func
 13334              		.type	prepare_generic_info, %function
 13335              	prepare_generic_info:
 13336              	.LFB72:
1748:..\src/command_processing.c **** 
1749:..\src/command_processing.c **** //==============================================================================
1750:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1751:..\src/command_processing.c **** //==============================================================================
1752:..\src/command_processing.c **** 
1753:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1754:..\src/command_processing.c **** {
 13337              		.loc 1 1754 0
 13338              		.cfi_startproc
 13339              		@ args = 0, pretend = 0, frame = 152
 13340              		@ frame_needed = 1, uses_anonymous_args = 0
 13341 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13342              		.cfi_def_cfa_offset 36
 13343              		.cfi_offset 4, -36
 13344              		.cfi_offset 5, -32
 13345              		.cfi_offset 6, -28
 13346              		.cfi_offset 7, -24
 13347              		.cfi_offset 8, -20
 13348              		.cfi_offset 9, -16
 13349              		.cfi_offset 10, -12
 13350              		.cfi_offset 11, -8
 13351              		.cfi_offset 14, -4
 13352 0004 B1B0     		sub	sp, sp, #196
 13353              		.cfi_def_cfa_offset 232
 13354 0006 0AAF     		add	r7, sp, #40
 13355              		.cfi_def_cfa 7, 192
 13356 0008 7861     		str	r0, [r7, #20]
1755:..\src/command_processing.c ****     int i;
1756:..\src/command_processing.c **** 
1757:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13357              		.loc 1 1757 0
 13358 000a C74B     		ldr	r3, .L637
 13359 000c C7F88830 		str	r3, [r7, #136]
1758:..\src/command_processing.c ****     
1759:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13360              		.loc 1 1759 0
 13361 0010 C54B     		ldr	r3, .L637
 13362 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13363 0016 FA2B     		cmp	r3, #250
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 303


 13364 0018 01F01487 		beq	.L635
 13365              	.LBB16:
1760:..\src/command_processing.c ****         char str[100];
1761:..\src/command_processing.c ****         strcpy(info_string, "");
 13366              		.loc 1 1761 0
 13367 001c 7B69     		ldr	r3, [r7, #20]
 13368 001e 0022     		movs	r2, #0
 13369 0020 1A70     		strb	r2, [r3]
1762:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13370              		.loc 1 1762 0
 13371 0022 7869     		ldr	r0, [r7, #20]
 13372 0024 FFF7FEFF 		bl	strlen
 13373 0028 0346     		mov	r3, r0
 13374 002a 1A46     		mov	r2, r3
 13375 002c 7B69     		ldr	r3, [r7, #20]
 13376 002e 1344     		add	r3, r3, r2
 13377 0030 BE4A     		ldr	r2, .L637+4
 13378 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13379 0034 9278     		ldrb	r2, [r2, #2]
 13380 0036 1980     		strh	r1, [r3]	@ unaligned
 13381 0038 9A70     		strb	r2, [r3, #2]
1763:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13382              		.loc 1 1763 0
 13383 003a 7869     		ldr	r0, [r7, #20]
 13384 003c FFF7FEFF 		bl	strlen
 13385 0040 0346     		mov	r3, r0
 13386 0042 1A46     		mov	r2, r3
 13387 0044 7B69     		ldr	r3, [r7, #20]
 13388 0046 1344     		add	r3, r3, r2
 13389 0048 B94A     		ldr	r2, .L637+8
 13390 004a 1D46     		mov	r5, r3
 13391 004c 1446     		mov	r4, r2
 13392 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13393 0050 2860     		str	r0, [r5]	@ unaligned
 13394 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13395 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13396 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13397 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13398 005a A278     		ldrb	r2, [r4, #2]
 13399 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13400 005e 1346     		mov	r3, r2
 13401 0060 AB74     		strb	r3, [r5, #18]
1764:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13402              		.loc 1 1764 0
 13403 0062 7869     		ldr	r0, [r7, #20]
 13404 0064 FFF7FEFF 		bl	strlen
 13405 0068 0346     		mov	r3, r0
 13406 006a 1A46     		mov	r2, r3
 13407 006c 7B69     		ldr	r3, [r7, #20]
 13408 006e 1344     		add	r3, r3, r2
 13409 0070 B04A     		ldr	r2, .L637+12
 13410 0072 1446     		mov	r4, r2
 13411 0074 9E46     		mov	lr, r3
 13412 0076 04F1200C 		add	ip, r4, #32
 13413              	.L526:
 13414 007a 7546     		mov	r5, lr
 13415 007c 2646     		mov	r6, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 304


 13416 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13417 0080 2860     		str	r0, [r5]	@ unaligned
 13418 0082 6960     		str	r1, [r5, #4]	@ unaligned
 13419 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 13420 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 13421 0088 1034     		adds	r4, r4, #16
 13422 008a 0EF1100E 		add	lr, lr, #16
 13423 008e 6445     		cmp	r4, ip
 13424 0090 F3D1     		bne	.L526
 13425 0092 7246     		mov	r2, lr
 13426 0094 2346     		mov	r3, r4
 13427 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 13428 0098 1380     		strh	r3, [r2]	@ unaligned
1765:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 13429              		.loc 1 1765 0
 13430 009a 7869     		ldr	r0, [r7, #20]
 13431 009c FFF7FEFF 		bl	strlen
 13432 00a0 0346     		mov	r3, r0
 13433 00a2 1A46     		mov	r2, r3
 13434 00a4 7B69     		ldr	r3, [r7, #20]
 13435 00a6 1344     		add	r3, r3, r2
 13436 00a8 A34A     		ldr	r2, .L637+16
 13437 00aa 1068     		ldr	r0, [r2]	@ unaligned
 13438 00ac 1860     		str	r0, [r3]	@ unaligned
 13439 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13440 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1766:..\src/command_processing.c **** 
1767:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13441              		.loc 1 1767 0
 13442 00b2 7869     		ldr	r0, [r7, #20]
 13443 00b4 FFF7FEFF 		bl	strlen
 13444 00b8 0346     		mov	r3, r0
 13445 00ba 1A46     		mov	r2, r3
 13446 00bc 7B69     		ldr	r3, [r7, #20]
 13447 00be 1344     		add	r3, r3, r2
 13448 00c0 9E4A     		ldr	r2, .L637+20
 13449 00c2 1C46     		mov	r4, r3
 13450 00c4 1346     		mov	r3, r2
 13451 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 13452 00c8 2060     		str	r0, [r4]	@ unaligned
 13453 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 13454 00cc A260     		str	r2, [r4, #8]	@ unaligned
 13455 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 13456 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1768:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13457              		.loc 1 1768 0
 13458 00d2 D7F88830 		ldr	r3, [r7, #136]
 13459 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13460 00da 1A46     		mov	r2, r3
 13461 00dc 07F11803 		add	r3, r7, #24
 13462 00e0 9749     		ldr	r1, .L637+24
 13463 00e2 1846     		mov	r0, r3
 13464 00e4 FFF7FEFF 		bl	sprintf
1769:..\src/command_processing.c ****         strcat(info_string, str);
 13465              		.loc 1 1769 0
 13466 00e8 07F11803 		add	r3, r7, #24
 13467 00ec 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 305


 13468 00ee 7869     		ldr	r0, [r7, #20]
 13469 00f0 FFF7FEFF 		bl	strcat
1770:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13470              		.loc 1 1770 0
 13471 00f4 D7F88830 		ldr	r3, [r7, #136]
 13472 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 13473 00fc 002B     		cmp	r3, #0
 13474 00fe 02D0     		beq	.L528
 13475 0100 012B     		cmp	r3, #1
 13476 0102 17D0     		beq	.L529
1771:..\src/command_processing.c ****             case SOFTHAND_PRO:
1772:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1773:..\src/command_processing.c ****                 break;
1774:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1775:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1776:..\src/command_processing.c ****                 break;
1777:..\src/command_processing.c ****             default:
1778:..\src/command_processing.c ****                 break;
 13477              		.loc 1 1778 0
 13478 0104 2EE0     		b	.L530
 13479              	.L528:
1772:..\src/command_processing.c ****                 break;
 13480              		.loc 1 1772 0
 13481 0106 7869     		ldr	r0, [r7, #20]
 13482 0108 FFF7FEFF 		bl	strlen
 13483 010c 0346     		mov	r3, r0
 13484 010e 1A46     		mov	r2, r3
 13485 0110 7B69     		ldr	r3, [r7, #20]
 13486 0112 1344     		add	r3, r3, r2
 13487 0114 8B4A     		ldr	r2, .L637+28
 13488 0116 1C46     		mov	r4, r3
 13489 0118 1546     		mov	r5, r2
 13490 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13491 011c 2060     		str	r0, [r4]	@ unaligned
 13492 011e 6160     		str	r1, [r4, #4]	@ unaligned
 13493 0120 A260     		str	r2, [r4, #8]	@ unaligned
 13494 0122 E360     		str	r3, [r4, #12]	@ unaligned
 13495 0124 2868     		ldr	r0, [r5]	@ unaligned
 13496 0126 2061     		str	r0, [r4, #16]	@ unaligned
 13497 0128 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13498 012a AA79     		ldrb	r2, [r5, #6]
 13499 012c A382     		strh	r3, [r4, #20]	@ unaligned
 13500 012e 1346     		mov	r3, r2
 13501 0130 A375     		strb	r3, [r4, #22]
1773:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 13502              		.loc 1 1773 0
 13503 0132 17E0     		b	.L530
 13504              	.L529:
1775:..\src/command_processing.c ****                 break;
 13505              		.loc 1 1775 0
 13506 0134 7869     		ldr	r0, [r7, #20]
 13507 0136 FFF7FEFF 		bl	strlen
 13508 013a 0346     		mov	r3, r0
 13509 013c 1A46     		mov	r2, r3
 13510 013e 7B69     		ldr	r3, [r7, #20]
 13511 0140 1344     		add	r3, r3, r2
 13512 0142 814A     		ldr	r2, .L637+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 306


 13513 0144 1D46     		mov	r5, r3
 13514 0146 1446     		mov	r4, r2
 13515 0148 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13516 014a 2860     		str	r0, [r5]	@ unaligned
 13517 014c 6960     		str	r1, [r5, #4]	@ unaligned
 13518 014e AA60     		str	r2, [r5, #8]	@ unaligned
 13519 0150 EB60     		str	r3, [r5, #12]	@ unaligned
 13520 0152 03CC     		ldmia	r4!, {r0, r1}
 13521 0154 2861     		str	r0, [r5, #16]	@ unaligned
 13522 0156 6961     		str	r1, [r5, #20]	@ unaligned
 13523 0158 2388     		ldrh	r3, [r4]	@ unaligned
 13524 015a A278     		ldrb	r2, [r4, #2]
 13525 015c 2B83     		strh	r3, [r5, #24]	@ unaligned
 13526 015e 1346     		mov	r3, r2
 13527 0160 AB76     		strb	r3, [r5, #26]
1776:..\src/command_processing.c ****             default:
 13528              		.loc 1 1776 0
 13529 0162 00BF     		nop
 13530              	.L530:
1779:..\src/command_processing.c ****         }
1780:..\src/command_processing.c ****         
1781:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13531              		.loc 1 1781 0
 13532 0164 D7F88830 		ldr	r3, [r7, #136]
 13533 0168 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13534 016c 002B     		cmp	r3, #0
 13535 016e 02D0     		beq	.L532
 13536 0170 012B     		cmp	r3, #1
 13537 0172 15D0     		beq	.L533
 13538 0174 26E0     		b	.L531
 13539              	.L532:
1782:..\src/command_processing.c ****             case RIGHT_HAND:
1783:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13540              		.loc 1 1783 0
 13541 0176 7869     		ldr	r0, [r7, #20]
 13542 0178 FFF7FEFF 		bl	strlen
 13543 017c 0346     		mov	r3, r0
 13544 017e 1A46     		mov	r2, r3
 13545 0180 7B69     		ldr	r3, [r7, #20]
 13546 0182 1344     		add	r3, r3, r2
 13547 0184 714A     		ldr	r2, .L637+36
 13548 0186 1D46     		mov	r5, r3
 13549 0188 1446     		mov	r4, r2
 13550 018a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13551 018c 2860     		str	r0, [r5]	@ unaligned
 13552 018e 6960     		str	r1, [r5, #4]	@ unaligned
 13553 0190 AA60     		str	r2, [r5, #8]	@ unaligned
 13554 0192 EB60     		str	r3, [r5, #12]	@ unaligned
 13555 0194 2388     		ldrh	r3, [r4]	@ unaligned
 13556 0196 A278     		ldrb	r2, [r4, #2]
 13557 0198 2B82     		strh	r3, [r5, #16]	@ unaligned
 13558 019a 1346     		mov	r3, r2
 13559 019c AB74     		strb	r3, [r5, #18]
1784:..\src/command_processing.c ****                 break;
 13560              		.loc 1 1784 0
 13561 019e 11E0     		b	.L531
 13562              	.L533:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 307


1785:..\src/command_processing.c ****             case LEFT_HAND:
1786:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13563              		.loc 1 1786 0
 13564 01a0 7869     		ldr	r0, [r7, #20]
 13565 01a2 FFF7FEFF 		bl	strlen
 13566 01a6 0346     		mov	r3, r0
 13567 01a8 1A46     		mov	r2, r3
 13568 01aa 7B69     		ldr	r3, [r7, #20]
 13569 01ac 1344     		add	r3, r3, r2
 13570 01ae 684A     		ldr	r2, .L637+40
 13571 01b0 1D46     		mov	r5, r3
 13572 01b2 1446     		mov	r4, r2
 13573 01b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13574 01b6 2860     		str	r0, [r5]	@ unaligned
 13575 01b8 6960     		str	r1, [r5, #4]	@ unaligned
 13576 01ba AA60     		str	r2, [r5, #8]	@ unaligned
 13577 01bc EB60     		str	r3, [r5, #12]	@ unaligned
 13578 01be 2388     		ldrh	r3, [r4]	@ unaligned
 13579 01c0 2B82     		strh	r3, [r5, #16]	@ unaligned
1787:..\src/command_processing.c ****                 break;
 13580              		.loc 1 1787 0
 13581 01c2 00BF     		nop
 13582              	.L531:
1788:..\src/command_processing.c ****         }
1789:..\src/command_processing.c **** 
1790:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13583              		.loc 1 1790 0
 13584 01c4 D7F88830 		ldr	r3, [r7, #136]
 13585 01c8 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13586 01cc 012B     		cmp	r3, #1
 13587 01ce 02D0     		beq	.L535
 13588 01d0 022B     		cmp	r3, #2
 13589 01d2 11D0     		beq	.L536
 13590 01d4 21E0     		b	.L634
 13591              	.L535:
1791:..\src/command_processing.c ****             case MARIA:
1792:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13592              		.loc 1 1792 0
 13593 01d6 7869     		ldr	r0, [r7, #20]
 13594 01d8 FFF7FEFF 		bl	strlen
 13595 01dc 0346     		mov	r3, r0
 13596 01de 1A46     		mov	r2, r3
 13597 01e0 7B69     		ldr	r3, [r7, #20]
 13598 01e2 1344     		add	r3, r3, r2
 13599 01e4 5B4A     		ldr	r2, .L637+44
 13600 01e6 1C46     		mov	r4, r3
 13601 01e8 1346     		mov	r3, r2
 13602 01ea 07CB     		ldmia	r3!, {r0, r1, r2}
 13603 01ec 2060     		str	r0, [r4]	@ unaligned
 13604 01ee 6160     		str	r1, [r4, #4]	@ unaligned
 13605 01f0 A260     		str	r2, [r4, #8]	@ unaligned
 13606 01f2 1B88     		ldrh	r3, [r3]	@ unaligned
 13607 01f4 A381     		strh	r3, [r4, #12]	@ unaligned
1793:..\src/command_processing.c ****                 break;
 13608              		.loc 1 1793 0
 13609 01f6 24E0     		b	.L537
 13610              	.L536:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 308


1794:..\src/command_processing.c ****             case ROZA:
1795:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 13611              		.loc 1 1795 0
 13612 01f8 7869     		ldr	r0, [r7, #20]
 13613 01fa FFF7FEFF 		bl	strlen
 13614 01fe 0346     		mov	r3, r0
 13615 0200 1A46     		mov	r2, r3
 13616 0202 7B69     		ldr	r3, [r7, #20]
 13617 0204 1344     		add	r3, r3, r2
 13618 0206 544A     		ldr	r2, .L637+48
 13619 0208 1C46     		mov	r4, r3
 13620 020a 1346     		mov	r3, r2
 13621 020c 07CB     		ldmia	r3!, {r0, r1, r2}
 13622 020e 2060     		str	r0, [r4]	@ unaligned
 13623 0210 6160     		str	r1, [r4, #4]	@ unaligned
 13624 0212 A260     		str	r2, [r4, #8]	@ unaligned
 13625 0214 1B78     		ldrb	r3, [r3]
 13626 0216 2373     		strb	r3, [r4, #12]
1796:..\src/command_processing.c ****                 break;
 13627              		.loc 1 1796 0
 13628 0218 13E0     		b	.L537
 13629              	.L634:
1797:..\src/command_processing.c ****             default:
1798:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13630              		.loc 1 1798 0
 13631 021a 7869     		ldr	r0, [r7, #20]
 13632 021c FFF7FEFF 		bl	strlen
 13633 0220 0346     		mov	r3, r0
 13634 0222 1A46     		mov	r2, r3
 13635 0224 7B69     		ldr	r3, [r7, #20]
 13636 0226 1344     		add	r3, r3, r2
 13637 0228 4C4A     		ldr	r2, .L637+52
 13638 022a 1D46     		mov	r5, r3
 13639 022c 1446     		mov	r4, r2
 13640 022e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13641 0230 2860     		str	r0, [r5]	@ unaligned
 13642 0232 6960     		str	r1, [r5, #4]	@ unaligned
 13643 0234 AA60     		str	r2, [r5, #8]	@ unaligned
 13644 0236 EB60     		str	r3, [r5, #12]	@ unaligned
 13645 0238 2068     		ldr	r0, [r4]	@ unaligned
 13646 023a 2861     		str	r0, [r5, #16]	@ unaligned
 13647 023c 2379     		ldrb	r3, [r4, #4]
 13648 023e 2B75     		strb	r3, [r5, #20]
1799:..\src/command_processing.c ****                 break;
 13649              		.loc 1 1799 0
 13650 0240 00BF     		nop
 13651              	.L537:
1800:..\src/command_processing.c ****         }
1801:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13652              		.loc 1 1801 0
 13653 0242 7869     		ldr	r0, [r7, #20]
 13654 0244 FFF7FEFF 		bl	strlen
 13655 0248 0346     		mov	r3, r0
 13656 024a 1A46     		mov	r2, r3
 13657 024c 7B69     		ldr	r3, [r7, #20]
 13658 024e 1344     		add	r3, r3, r2
 13659 0250 364A     		ldr	r2, .L637+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 309


 13660 0252 1188     		ldrh	r1, [r2]	@ unaligned
 13661 0254 9278     		ldrb	r2, [r2, #2]
 13662 0256 1980     		strh	r1, [r3]	@ unaligned
 13663 0258 9A70     		strb	r2, [r3, #2]
 13664              	.LBB17:
1802:..\src/command_processing.c ****         
1803:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13665              		.loc 1 1803 0
 13666 025a 0023     		movs	r3, #0
 13667 025c 87F89330 		strb	r3, [r7, #147]
 13668 0260 01F066B9 		b	.L538
 13669              	.L600:
 13670              	.LBB18:
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13671              		.loc 1 1805 0
 13672 0264 97F89330 		ldrb	r3, [r7, #147]
 13673 0268 87F88730 		strb	r3, [r7, #135]
1806:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13674              		.loc 1 1806 0
 13675 026c 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 13676 0270 1346     		mov	r3, r2
 13677 0272 DB00     		lsls	r3, r3, #3
 13678 0274 9B1A     		subs	r3, r3, r2
 13679 0276 1B01     		lsls	r3, r3, #4
 13680 0278 B033     		adds	r3, r3, #176
 13681 027a D7F88820 		ldr	r2, [r7, #136]
 13682 027e 1344     		add	r3, r3, r2
 13683 0280 C7F88030 		str	r3, [r7, #128]
1807:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 13684              		.loc 1 1807 0
 13685 0284 D7F88030 		ldr	r3, [r7, #128]
 13686 0288 93F86030 		ldrb	r3, [r3, #96]
 13687 028c 87F87F30 		strb	r3, [r7, #127]
1808:..\src/command_processing.c ****                   
1809:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13688              		.loc 1 1809 0
 13689 0290 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13690 0294 5A1C     		adds	r2, r3, #1
 13691 0296 07F11803 		add	r3, r7, #24
 13692 029a 3149     		ldr	r1, .L637+56
 13693 029c 1846     		mov	r0, r3
 13694 029e FFF7FEFF 		bl	sprintf
1810:..\src/command_processing.c ****             strcat(info_string, str);
 13695              		.loc 1 1810 0
 13696 02a2 07F11803 		add	r3, r7, #24
 13697 02a6 1946     		mov	r1, r3
 13698 02a8 7869     		ldr	r0, [r7, #20]
 13699 02aa FFF7FEFF 		bl	strcat
1811:..\src/command_processing.c ****                         
1812:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13700              		.loc 1 1812 0
 13701 02ae 7869     		ldr	r0, [r7, #20]
 13702 02b0 FFF7FEFF 		bl	strlen
 13703 02b4 0346     		mov	r3, r0
 13704 02b6 1A46     		mov	r2, r3
 13705 02b8 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 310


 13706 02ba 1344     		add	r3, r3, r2
 13707 02bc 294A     		ldr	r2, .L637+60
 13708 02be 1C46     		mov	r4, r3
 13709 02c0 1546     		mov	r5, r2
 13710 02c2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13711 02c4 2060     		str	r0, [r4]	@ unaligned
 13712 02c6 6160     		str	r1, [r4, #4]	@ unaligned
 13713 02c8 A260     		str	r2, [r4, #8]	@ unaligned
 13714 02ca E360     		str	r3, [r4, #12]	@ unaligned
1813:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13715              		.loc 1 1813 0
 13716 02cc D7F88030 		ldr	r3, [r7, #128]
 13717 02d0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13718 02d4 022B     		cmp	r3, #2
 13719 02d6 10D1     		bne	.L539
1814:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13720              		.loc 1 1814 0
 13721 02d8 7869     		ldr	r0, [r7, #20]
 13722 02da FFF7FEFF 		bl	strlen
 13723 02de 0346     		mov	r3, r0
 13724 02e0 1A46     		mov	r2, r3
 13725 02e2 7B69     		ldr	r3, [r7, #20]
 13726 02e4 1344     		add	r3, r3, r2
 13727 02e6 204A     		ldr	r2, .L637+64
 13728 02e8 1C46     		mov	r4, r3
 13729 02ea 1346     		mov	r3, r2
 13730 02ec 07CB     		ldmia	r3!, {r0, r1, r2}
 13731 02ee 2060     		str	r0, [r4]	@ unaligned
 13732 02f0 6160     		str	r1, [r4, #4]	@ unaligned
 13733 02f2 A260     		str	r2, [r4, #8]	@ unaligned
 13734 02f4 1B88     		ldrh	r3, [r3]	@ unaligned
 13735 02f6 A381     		strh	r3, [r4, #12]	@ unaligned
 13736 02f8 4AE0     		b	.L540
 13737              	.L539:
1815:..\src/command_processing.c ****             else {
1816:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13738              		.loc 1 1816 0
 13739 02fa D7F88030 		ldr	r3, [r7, #128]
 13740 02fe 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13741 0302 012B     		cmp	r3, #1
 13742 0304 34D1     		bne	.L541
1817:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13743              		.loc 1 1817 0
 13744 0306 7869     		ldr	r0, [r7, #20]
 13745 0308 FFF7FEFF 		bl	strlen
 13746 030c 0346     		mov	r3, r0
 13747 030e 1A46     		mov	r2, r3
 13748 0310 7B69     		ldr	r3, [r7, #20]
 13749 0312 1344     		add	r3, r3, r2
 13750 0314 1549     		ldr	r1, .L637+68
 13751 0316 1A46     		mov	r2, r3
 13752 0318 0B46     		mov	r3, r1
 13753 031a 03CB     		ldmia	r3!, {r0, r1}
 13754 031c 1060     		str	r0, [r2]	@ unaligned
 13755 031e 5160     		str	r1, [r2, #4]	@ unaligned
 13756 0320 1B78     		ldrb	r3, [r3]
 13757 0322 1372     		strb	r3, [r2, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 311


 13758 0324 34E0     		b	.L540
 13759              	.L638:
 13760 0326 00BF     		.align	2
 13761              	.L637:
 13762 0328 00000000 		.word	c_mem
 13763 032c C00D0000 		.word	.LC126
 13764 0330 C40D0000 		.word	.LC127
 13765 0334 D80D0000 		.word	.LC128
 13766 0338 FC0D0000 		.word	.LC129
 13767 033c 040E0000 		.word	.LC130
 13768 0340 140E0000 		.word	.LC131
 13769 0344 200E0000 		.word	.LC132
 13770 0348 380E0000 		.word	.LC133
 13771 034c 540E0000 		.word	.LC134
 13772 0350 680E0000 		.word	.LC135
 13773 0354 7C0E0000 		.word	.LC136
 13774 0358 8C0E0000 		.word	.LC137
 13775 035c 9C0E0000 		.word	.LC138
 13776 0360 B40E0000 		.word	.LC139
 13777 0364 C40E0000 		.word	.LC140
 13778 0368 D40E0000 		.word	.LC141
 13779 036c E40E0000 		.word	.LC142
 13780              	.L541:
1818:..\src/command_processing.c ****                 else
1819:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13781              		.loc 1 1819 0
 13782 0370 7869     		ldr	r0, [r7, #20]
 13783 0372 FFF7FEFF 		bl	strlen
 13784 0376 0346     		mov	r3, r0
 13785 0378 1A46     		mov	r2, r3
 13786 037a 7B69     		ldr	r3, [r7, #20]
 13787 037c 1344     		add	r3, r3, r2
 13788 037e 874A     		ldr	r2, .L639
 13789 0380 1C46     		mov	r4, r3
 13790 0382 1346     		mov	r3, r2
 13791 0384 07CB     		ldmia	r3!, {r0, r1, r2}
 13792 0386 2060     		str	r0, [r4]	@ unaligned
 13793 0388 6160     		str	r1, [r4, #4]	@ unaligned
 13794 038a A260     		str	r2, [r4, #8]	@ unaligned
 13795 038c 1B88     		ldrh	r3, [r3]	@ unaligned
 13796 038e A381     		strh	r3, [r4, #12]	@ unaligned
 13797              	.L540:
1820:..\src/command_processing.c ****             }
1821:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13798              		.loc 1 1821 0
 13799 0390 D7F88030 		ldr	r3, [r7, #128]
 13800 0394 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13801 0398 022B     		cmp	r3, #2
 13802 039a 13D1     		bne	.L542
1822:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13803              		.loc 1 1822 0
 13804 039c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13805 03a0 7F4A     		ldr	r2, .L639+4
 13806 03a2 1B01     		lsls	r3, r3, #4
 13807 03a4 1344     		add	r3, r3, r2
 13808 03a6 0433     		adds	r3, r3, #4
 13809 03a8 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 312


 13810 03aa 07F11803 		add	r3, r7, #24
 13811 03ae 7D49     		ldr	r1, .L639+8
 13812 03b0 1846     		mov	r0, r3
 13813 03b2 FFF7FEFF 		bl	sprintf
1823:..\src/command_processing.c ****                 strcat(info_string,str);
 13814              		.loc 1 1823 0
 13815 03b6 07F11803 		add	r3, r7, #24
 13816 03ba 1946     		mov	r1, r3
 13817 03bc 7869     		ldr	r0, [r7, #20]
 13818 03be FFF7FEFF 		bl	strcat
 13819 03c2 39E0     		b	.L543
 13820              	.L542:
1824:..\src/command_processing.c ****             }
1825:..\src/command_processing.c ****             else {
1826:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13821              		.loc 1 1826 0
 13822 03c4 D7F88030 		ldr	r3, [r7, #128]
 13823 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13824 03cc 012B     		cmp	r3, #1
 13825 03ce 13D1     		bne	.L544
1827:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13826              		.loc 1 1827 0
 13827 03d0 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13828 03d4 724A     		ldr	r2, .L639+4
 13829 03d6 1B01     		lsls	r3, r3, #4
 13830 03d8 1344     		add	r3, r3, r2
 13831 03da 0833     		adds	r3, r3, #8
 13832 03dc 1A68     		ldr	r2, [r3]
 13833 03de 07F11803 		add	r3, r7, #24
 13834 03e2 7049     		ldr	r1, .L639+8
 13835 03e4 1846     		mov	r0, r3
 13836 03e6 FFF7FEFF 		bl	sprintf
1828:..\src/command_processing.c ****                     strcat(info_string,str);
 13837              		.loc 1 1828 0
 13838 03ea 07F11803 		add	r3, r7, #24
 13839 03ee 1946     		mov	r1, r3
 13840 03f0 7869     		ldr	r0, [r7, #20]
 13841 03f2 FFF7FEFF 		bl	strcat
 13842 03f6 1FE0     		b	.L543
 13843              	.L544:
1829:..\src/command_processing.c ****                 }
1830:..\src/command_processing.c ****                 else {
1831:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13844              		.loc 1 1831 0
 13845 03f8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13846 03fc 684A     		ldr	r2, .L639+4
 13847 03fe 1B01     		lsls	r3, r3, #4
 13848 0400 1344     		add	r3, r3, r2
 13849 0402 1968     		ldr	r1, [r3]
 13850 0404 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 13851 0408 D7F88800 		ldr	r0, [r7, #136]
 13852 040c 1346     		mov	r3, r2
 13853 040e 5B00     		lsls	r3, r3, #1
 13854 0410 1344     		add	r3, r3, r2
 13855 0412 1B01     		lsls	r3, r3, #4
 13856 0414 0344     		add	r3, r3, r0
 13857 0416 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 313


 13858 041a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13859 041c 41FA03F2 		asr	r2, r1, r3
 13860 0420 07F11803 		add	r3, r7, #24
 13861 0424 5F49     		ldr	r1, .L639+8
 13862 0426 1846     		mov	r0, r3
 13863 0428 FFF7FEFF 		bl	sprintf
1832:..\src/command_processing.c ****                     strcat(info_string,str);
 13864              		.loc 1 1832 0
 13865 042c 07F11803 		add	r3, r7, #24
 13866 0430 1946     		mov	r1, r3
 13867 0432 7869     		ldr	r0, [r7, #20]
 13868 0434 FFF7FEFF 		bl	strcat
 13869              	.L543:
1833:..\src/command_processing.c ****                 }
1834:..\src/command_processing.c ****             }
1835:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 13870              		.loc 1 1835 0
 13871 0438 7869     		ldr	r0, [r7, #20]
 13872 043a FFF7FEFF 		bl	strlen
 13873 043e 0346     		mov	r3, r0
 13874 0440 1A46     		mov	r2, r3
 13875 0442 7B69     		ldr	r3, [r7, #20]
 13876 0444 1344     		add	r3, r3, r2
 13877 0446 584A     		ldr	r2, .L639+12
 13878 0448 1188     		ldrh	r1, [r2]	@ unaligned
 13879 044a 9278     		ldrb	r2, [r2, #2]
 13880 044c 1980     		strh	r1, [r3]	@ unaligned
 13881 044e 9A70     		strb	r2, [r3, #2]
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 13882              		.loc 1 1837 0
 13883 0450 07F11803 		add	r3, r7, #24
 13884 0454 554A     		ldr	r2, .L639+16
 13885 0456 1C46     		mov	r4, r3
 13886 0458 1346     		mov	r3, r2
 13887 045a 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 13888 045c 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1838:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 13889              		.loc 1 1838 0
 13890 0460 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13891 0464 524A     		ldr	r2, .L639+20
 13892 0466 1B01     		lsls	r3, r3, #4
 13893 0468 1344     		add	r3, r3, r2
 13894 046a 0C33     		adds	r3, r3, #12
 13895 046c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13896 046e 03F00103 		and	r3, r3, #1
 13897 0472 002B     		cmp	r3, #0
 13898 0474 0FD0     		beq	.L545
1839:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 13899              		.loc 1 1839 0
 13900 0476 07F11803 		add	r3, r7, #24
 13901 047a 1846     		mov	r0, r3
 13902 047c FFF7FEFF 		bl	strlen
 13903 0480 0346     		mov	r3, r0
 13904 0482 1A46     		mov	r2, r3
 13905 0484 07F11803 		add	r3, r7, #24
 13906 0488 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 314


 13907 048a 4A4A     		ldr	r2, .L639+24
 13908 048c 1068     		ldr	r0, [r2]	@ unaligned
 13909 048e 1860     		str	r0, [r3]	@ unaligned
 13910 0490 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13911 0492 9A80     		strh	r2, [r3, #4]	@ unaligned
 13912 0494 0EE0     		b	.L546
 13913              	.L545:
1840:..\src/command_processing.c ****             } else {
1841:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 13914              		.loc 1 1841 0
 13915 0496 07F11803 		add	r3, r7, #24
 13916 049a 1846     		mov	r0, r3
 13917 049c FFF7FEFF 		bl	strlen
 13918 04a0 0346     		mov	r3, r0
 13919 04a2 1A46     		mov	r2, r3
 13920 04a4 07F11803 		add	r3, r7, #24
 13921 04a8 1344     		add	r3, r3, r2
 13922 04aa 434A     		ldr	r2, .L639+28
 13923 04ac 1068     		ldr	r0, [r2]	@ unaligned
 13924 04ae 1860     		str	r0, [r3]	@ unaligned
 13925 04b0 1279     		ldrb	r2, [r2, #4]
 13926 04b2 1A71     		strb	r2, [r3, #4]
 13927              	.L546:
1842:..\src/command_processing.c ****             }
1843:..\src/command_processing.c ****             strcat(info_string, str);
 13928              		.loc 1 1843 0
 13929 04b4 07F11803 		add	r3, r7, #24
 13930 04b8 1946     		mov	r1, r3
 13931 04ba 7869     		ldr	r0, [r7, #20]
 13932 04bc FFF7FEFF 		bl	strcat
1844:..\src/command_processing.c ****                         
1845:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 13933              		.loc 1 1845 0
 13934 04c0 7869     		ldr	r0, [r7, #20]
 13935 04c2 FFF7FEFF 		bl	strlen
 13936 04c6 0346     		mov	r3, r0
 13937 04c8 1A46     		mov	r2, r3
 13938 04ca 7B69     		ldr	r3, [r7, #20]
 13939 04cc 1344     		add	r3, r3, r2
 13940 04ce 3B4A     		ldr	r2, .L639+32
 13941 04d0 1D46     		mov	r5, r3
 13942 04d2 1446     		mov	r4, r2
 13943 04d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13944 04d6 2860     		str	r0, [r5]	@ unaligned
 13945 04d8 6960     		str	r1, [r5, #4]	@ unaligned
 13946 04da AA60     		str	r2, [r5, #8]	@ unaligned
 13947 04dc EB60     		str	r3, [r5, #12]	@ unaligned
 13948 04de 03CC     		ldmia	r4!, {r0, r1}
 13949 04e0 2861     		str	r0, [r5, #16]	@ unaligned
 13950 04e2 6961     		str	r1, [r5, #20]	@ unaligned
 13951 04e4 2388     		ldrh	r3, [r4]	@ unaligned
 13952 04e6 A278     		ldrb	r2, [r4, #2]
 13953 04e8 2B83     		strh	r3, [r5, #24]	@ unaligned
 13954 04ea 1346     		mov	r3, r2
 13955 04ec AB76     		strb	r3, [r5, #26]
1846:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 13956              		.loc 1 1846 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 315


 13957 04ee D7F88030 		ldr	r3, [r7, #128]
 13958 04f2 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 13959 04f6 012B     		cmp	r3, #1
 13960 04f8 0CD1     		bne	.L547
1847:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 13961              		.loc 1 1847 0
 13962 04fa 7869     		ldr	r0, [r7, #20]
 13963 04fc FFF7FEFF 		bl	strlen
 13964 0500 0346     		mov	r3, r0
 13965 0502 1A46     		mov	r2, r3
 13966 0504 7B69     		ldr	r3, [r7, #20]
 13967 0506 1344     		add	r3, r3, r2
 13968 0508 2D4A     		ldr	r2, .L639+36
 13969 050a 1068     		ldr	r0, [r2]	@ unaligned
 13970 050c 1860     		str	r0, [r3]	@ unaligned
 13971 050e 1279     		ldrb	r2, [r2, #4]
 13972 0510 1A71     		strb	r2, [r3, #4]
 13973 0512 09E0     		b	.L548
 13974              	.L547:
1848:..\src/command_processing.c ****             else
1849:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 13975              		.loc 1 1849 0
 13976 0514 7869     		ldr	r0, [r7, #20]
 13977 0516 FFF7FEFF 		bl	strlen
 13978 051a 0346     		mov	r3, r0
 13979 051c 1A46     		mov	r2, r3
 13980 051e 7B69     		ldr	r3, [r7, #20]
 13981 0520 1344     		add	r3, r3, r2
 13982 0522 284A     		ldr	r2, .L639+40
 13983 0524 1068     		ldr	r0, [r2]	@ unaligned
 13984 0526 1860     		str	r0, [r3]	@ unaligned
 13985              	.L548:
1850:..\src/command_processing.c ****             
1851:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 13986              		.loc 1 1851 0
 13987 0528 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13988 052c 264A     		ldr	r2, .L639+44
 13989 052e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13990 0530 1A46     		mov	r2, r3
 13991 0532 07F11803 		add	r3, r7, #24
 13992 0536 2549     		ldr	r1, .L639+48
 13993 0538 1846     		mov	r0, r3
 13994 053a FFF7FEFF 		bl	sprintf
1852:..\src/command_processing.c ****             strcat(info_string, str);
 13995              		.loc 1 1852 0
 13996 053e 07F11803 		add	r3, r7, #24
 13997 0542 1946     		mov	r1, r3
 13998 0544 7869     		ldr	r0, [r7, #20]
 13999 0546 FFF7FEFF 		bl	strcat
1853:..\src/command_processing.c **** 
1854:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14000              		.loc 1 1854 0
 14001 054a 7869     		ldr	r0, [r7, #20]
 14002 054c FFF7FEFF 		bl	strlen
 14003 0550 0346     		mov	r3, r0
 14004 0552 1A46     		mov	r2, r3
 14005 0554 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 316


 14006 0556 1344     		add	r3, r3, r2
 14007 0558 1D4A     		ldr	r2, .L639+52
 14008 055a 1D46     		mov	r5, r3
 14009 055c 1446     		mov	r4, r2
 14010 055e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14011 0560 2860     		str	r0, [r5]	@ unaligned
 14012 0562 6960     		str	r1, [r5, #4]	@ unaligned
 14013 0564 AA60     		str	r2, [r5, #8]	@ unaligned
 14014 0566 EB60     		str	r3, [r5, #12]	@ unaligned
 14015 0568 2068     		ldr	r0, [r4]	@ unaligned
 14016 056a 2861     		str	r0, [r5, #16]	@ unaligned
 14017 056c A388     		ldrh	r3, [r4, #4]	@ unaligned
 14018 056e AB82     		strh	r3, [r5, #20]	@ unaligned
1855:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14019              		.loc 1 1855 0
 14020 0570 7869     		ldr	r0, [r7, #20]
 14021 0572 FFF7FEFF 		bl	strlen
 14022 0576 0346     		mov	r3, r0
 14023 0578 1A46     		mov	r2, r3
 14024 057a 7B69     		ldr	r3, [r7, #20]
 14025 057c 1344     		add	r3, r3, r2
 14026 057e 154A     		ldr	r2, .L639+56
 14027 0580 1C46     		mov	r4, r3
 14028 0582 1346     		mov	r3, r2
 14029 0584 07CB     		ldmia	r3!, {r0, r1, r2}
 14030 0586 2060     		str	r0, [r4]	@ unaligned
 14031 0588 6160     		str	r1, [r4, #4]	@ unaligned
 14032 058a A260     		str	r2, [r4, #8]	@ unaligned
 14033 058c 1A88     		ldrh	r2, [r3]	@ unaligned
 14034 058e 9B78     		ldrb	r3, [r3, #2]
 14035 0590 A281     		strh	r2, [r4, #12]	@ unaligned
 14036 0592 A373     		strb	r3, [r4, #14]
1856:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14037              		.loc 1 1856 0
 14038 0594 0023     		movs	r3, #0
 14039 0596 C7F89430 		str	r3, [r7, #148]
 14040 059a 5BE0     		b	.L549
 14041              	.L640:
 14042              		.align	2
 14043              	.L639:
 14044 059c F00E0000 		.word	.LC143
 14045 05a0 00000000 		.word	g_refOld
 14046 05a4 000F0000 		.word	.LC144
 14047 05a8 C00D0000 		.word	.LC126
 14048 05ac 040F0000 		.word	.LC145
 14049 05b0 00000000 		.word	g_ref
 14050 05b4 140F0000 		.word	.LC146
 14051 05b8 1C0F0000 		.word	.LC147
 14052 05bc 240F0000 		.word	.LC148
 14053 05c0 400F0000 		.word	.LC149
 14054 05c4 480F0000 		.word	.LC150
 14055 05c8 00000000 		.word	dev_pwm_limit
 14056 05cc 4C0F0000 		.word	.LC151
 14057 05d0 5C0F0000 		.word	.LC152
 14058 05d4 740F0000 		.word	.LC153
 14059              	.L551:
1857:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 317


 14060              		.loc 1 1857 0
 14061 05d8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14062 05dc 9249     		ldr	r1, .L641
 14063 05de 1346     		mov	r3, r2
 14064 05e0 5B00     		lsls	r3, r3, #1
 14065 05e2 1344     		add	r3, r3, r2
 14066 05e4 9B00     		lsls	r3, r3, #2
 14067 05e6 D7F89420 		ldr	r2, [r7, #148]
 14068 05ea 1344     		add	r3, r3, r2
 14069 05ec 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14070 05f0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14071 05f4 D7F88800 		ldr	r0, [r7, #136]
 14072 05f8 1346     		mov	r3, r2
 14073 05fa 5B00     		lsls	r3, r3, #1
 14074 05fc 1344     		add	r3, r3, r2
 14075 05fe 1B01     		lsls	r3, r3, #4
 14076 0600 C218     		adds	r2, r0, r3
 14077 0602 D7F89430 		ldr	r3, [r7, #148]
 14078 0606 1344     		add	r3, r3, r2
 14079 0608 03F29513 		addw	r3, r3, #405
 14080 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14081 060e 41FA03F2 		asr	r2, r1, r3
 14082 0612 07F11803 		add	r3, r7, #24
 14083 0616 8549     		ldr	r1, .L641+4
 14084 0618 1846     		mov	r0, r3
 14085 061a FFF7FEFF 		bl	sprintf
1858:..\src/command_processing.c ****                 strcat(info_string, str);
 14086              		.loc 1 1858 0
 14087 061e 07F11803 		add	r3, r7, #24
 14088 0622 1946     		mov	r1, r3
 14089 0624 7869     		ldr	r0, [r7, #20]
 14090 0626 FFF7FEFF 		bl	strcat
1859:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14091              		.loc 1 1859 0
 14092 062a D7F89430 		ldr	r3, [r7, #148]
 14093 062e 022B     		cmp	r3, #2
 14094 0630 0BD0     		beq	.L550
1860:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14095              		.loc 1 1860 0
 14096 0632 7869     		ldr	r0, [r7, #20]
 14097 0634 FFF7FEFF 		bl	strlen
 14098 0638 0346     		mov	r3, r0
 14099 063a 1A46     		mov	r2, r3
 14100 063c 7B69     		ldr	r3, [r7, #20]
 14101 063e 1344     		add	r3, r3, r2
 14102 0640 7B4A     		ldr	r2, .L641+8
 14103 0642 1188     		ldrh	r1, [r2]	@ unaligned
 14104 0644 9278     		ldrb	r2, [r2, #2]
 14105 0646 1980     		strh	r1, [r3]	@ unaligned
 14106 0648 9A70     		strb	r2, [r3, #2]
 14107              	.L550:
1856:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14108              		.loc 1 1856 0 discriminator 2
 14109 064a D7F89430 		ldr	r3, [r7, #148]
 14110 064e 0133     		adds	r3, r3, #1
 14111 0650 C7F89430 		str	r3, [r7, #148]
 14112              	.L549:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 318


1856:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14113              		.loc 1 1856 0 is_stmt 0 discriminator 1
 14114 0654 D7F89430 		ldr	r3, [r7, #148]
 14115 0658 022B     		cmp	r3, #2
 14116 065a BDDD     		ble	.L551
1861:..\src/command_processing.c ****                 }                
1862:..\src/command_processing.c ****             }
1863:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14117              		.loc 1 1863 0 is_stmt 1
 14118 065c 7869     		ldr	r0, [r7, #20]
 14119 065e FFF7FEFF 		bl	strlen
 14120 0662 0346     		mov	r3, r0
 14121 0664 1A46     		mov	r2, r3
 14122 0666 7B69     		ldr	r3, [r7, #20]
 14123 0668 1344     		add	r3, r3, r2
 14124 066a 724A     		ldr	r2, .L641+12
 14125 066c 1188     		ldrh	r1, [r2]	@ unaligned
 14126 066e 9278     		ldrb	r2, [r2, #2]
 14127 0670 1980     		strh	r1, [r3]	@ unaligned
 14128 0672 9A70     		strb	r2, [r3, #2]
1864:..\src/command_processing.c **** 
1865:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14129              		.loc 1 1865 0
 14130 0674 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14131 0678 591C     		adds	r1, r3, #1
 14132 067a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14133 067e 6E4A     		ldr	r2, .L641+16
 14134 0680 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14135 0684 07F11800 		add	r0, r7, #24
 14136 0688 0A46     		mov	r2, r1
 14137 068a 6C49     		ldr	r1, .L641+20
 14138 068c FFF7FEFF 		bl	sprintf
1866:..\src/command_processing.c ****             strcat(info_string, str);
 14139              		.loc 1 1866 0
 14140 0690 07F11803 		add	r3, r7, #24
 14141 0694 1946     		mov	r1, r3
 14142 0696 7869     		ldr	r0, [r7, #20]
 14143 0698 FFF7FEFF 		bl	strcat
1867:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14144              		.loc 1 1867 0
 14145 069c 7869     		ldr	r0, [r7, #20]
 14146 069e FFF7FEFF 		bl	strlen
 14147 06a2 0346     		mov	r3, r0
 14148 06a4 1A46     		mov	r2, r3
 14149 06a6 7B69     		ldr	r3, [r7, #20]
 14150 06a8 1344     		add	r3, r3, r2
 14151 06aa 624A     		ldr	r2, .L641+12
 14152 06ac 1188     		ldrh	r1, [r2]	@ unaligned
 14153 06ae 9278     		ldrb	r2, [r2, #2]
 14154 06b0 1980     		strh	r1, [r3]	@ unaligned
 14155 06b2 9A70     		strb	r2, [r3, #2]
1868:..\src/command_processing.c ****             
1869:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14156              		.loc 1 1869 0
 14157 06b4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14158 06b8 591C     		adds	r1, r3, #1
 14159 06ba 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 319


 14160 06be 604A     		ldr	r2, .L641+24
 14161 06c0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14162 06c4 07F11800 		add	r0, r7, #24
 14163 06c8 0A46     		mov	r2, r1
 14164 06ca 5E49     		ldr	r1, .L641+28
 14165 06cc FFF7FEFF 		bl	sprintf
1870:..\src/command_processing.c ****             strcat(info_string, str);
 14166              		.loc 1 1870 0
 14167 06d0 07F11803 		add	r3, r7, #24
 14168 06d4 1946     		mov	r1, r3
 14169 06d6 7869     		ldr	r0, [r7, #20]
 14170 06d8 FFF7FEFF 		bl	strcat
1871:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14171              		.loc 1 1871 0
 14172 06dc 7869     		ldr	r0, [r7, #20]
 14173 06de FFF7FEFF 		bl	strlen
 14174 06e2 0346     		mov	r3, r0
 14175 06e4 1A46     		mov	r2, r3
 14176 06e6 7B69     		ldr	r3, [r7, #20]
 14177 06e8 1344     		add	r3, r3, r2
 14178 06ea 524A     		ldr	r2, .L641+12
 14179 06ec 1188     		ldrh	r1, [r2]	@ unaligned
 14180 06ee 9278     		ldrb	r2, [r2, #2]
 14181 06f0 1980     		strh	r1, [r3]	@ unaligned
 14182 06f2 9A70     		strb	r2, [r3, #2]
1872:..\src/command_processing.c **** 
1873:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14183              		.loc 1 1873 0
 14184 06f4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14185 06f8 5C1C     		adds	r4, r3, #1
 14186 06fa 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14187 06fe 4A49     		ldr	r1, .L641
 14188 0700 1346     		mov	r3, r2
 14189 0702 5B00     		lsls	r3, r3, #1
 14190 0704 1344     		add	r3, r3, r2
 14191 0706 1B01     		lsls	r3, r3, #4
 14192 0708 0B44     		add	r3, r3, r1
 14193 070a 0C33     		adds	r3, r3, #12
 14194 070c 1B68     		ldr	r3, [r3]
 14195 070e 07F11800 		add	r0, r7, #24
 14196 0712 2246     		mov	r2, r4
 14197 0714 4C49     		ldr	r1, .L641+32
 14198 0716 FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****             strcat(info_string, str);
 14199              		.loc 1 1874 0
 14200 071a 07F11803 		add	r3, r7, #24
 14201 071e 1946     		mov	r1, r3
 14202 0720 7869     		ldr	r0, [r7, #20]
 14203 0722 FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14204              		.loc 1 1875 0
 14205 0726 7869     		ldr	r0, [r7, #20]
 14206 0728 FFF7FEFF 		bl	strlen
 14207 072c 0346     		mov	r3, r0
 14208 072e 1A46     		mov	r2, r3
 14209 0730 7B69     		ldr	r3, [r7, #20]
 14210 0732 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 320


 14211 0734 3F4A     		ldr	r2, .L641+12
 14212 0736 1188     		ldrh	r1, [r2]	@ unaligned
 14213 0738 9278     		ldrb	r2, [r2, #2]
 14214 073a 1980     		strh	r1, [r3]	@ unaligned
 14215 073c 9A70     		strb	r2, [r3, #2]
1876:..\src/command_processing.c ****             
1877:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14216              		.loc 1 1877 0
 14217 073e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14218 0742 5A1C     		adds	r2, r3, #1
 14219 0744 07F11803 		add	r3, r7, #24
 14220 0748 4049     		ldr	r1, .L641+36
 14221 074a 1846     		mov	r0, r3
 14222 074c FFF7FEFF 		bl	sprintf
1878:..\src/command_processing.c ****             strcat(info_string, str);
 14223              		.loc 1 1878 0
 14224 0750 07F11803 		add	r3, r7, #24
 14225 0754 1946     		mov	r1, r3
 14226 0756 7869     		ldr	r0, [r7, #20]
 14227 0758 FFF7FEFF 		bl	strcat
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14228              		.loc 1 1880 0
 14229 075c 7869     		ldr	r0, [r7, #20]
 14230 075e FFF7FEFF 		bl	strlen
 14231 0762 0346     		mov	r3, r0
 14232 0764 1A46     		mov	r2, r3
 14233 0766 7B69     		ldr	r3, [r7, #20]
 14234 0768 1344     		add	r3, r3, r2
 14235 076a 394A     		ldr	r2, .L641+40
 14236 076c 1D46     		mov	r5, r3
 14237 076e 1446     		mov	r4, r2
 14238 0770 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14239 0772 2860     		str	r0, [r5]	@ unaligned
 14240 0774 6960     		str	r1, [r5, #4]	@ unaligned
 14241 0776 AA60     		str	r2, [r5, #8]	@ unaligned
 14242 0778 EB60     		str	r3, [r5, #12]	@ unaligned
 14243 077a 2378     		ldrb	r3, [r4]
 14244 077c 2B74     		strb	r3, [r5, #16]
1881:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14245              		.loc 1 1881 0
 14246 077e D7F88030 		ldr	r3, [r7, #128]
 14247 0782 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14248 0786 032B     		cmp	r3, #3
 14249 0788 6CD0     		beq	.L552
1882:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14250              		.loc 1 1882 0
 14251 078a D7F88030 		ldr	r3, [r7, #128]
 14252 078e 1B68     		ldr	r3, [r3]
 14253 0790 1846     		mov	r0, r3
 14254 0792 FFF7FEFF 		bl	__aeabi_i2d
 14255 0796 4FF00002 		mov	r2, #0
 14256 079a 2E4B     		ldr	r3, .L641+44
 14257 079c FFF7FEFF 		bl	__aeabi_ddiv
 14258 07a0 0346     		mov	r3, r0
 14259 07a2 0C46     		mov	r4, r1
 14260 07a4 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 321


 14261 07a8 1A46     		mov	r2, r3
 14262 07aa 2346     		mov	r3, r4
 14263 07ac 2A49     		ldr	r1, .L641+48
 14264 07ae FFF7FEFF 		bl	sprintf
1883:..\src/command_processing.c ****                 strcat(info_string, str);
 14265              		.loc 1 1883 0
 14266 07b2 07F11803 		add	r3, r7, #24
 14267 07b6 1946     		mov	r1, r3
 14268 07b8 7869     		ldr	r0, [r7, #20]
 14269 07ba FFF7FEFF 		bl	strcat
1884:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14270              		.loc 1 1884 0
 14271 07be D7F88030 		ldr	r3, [r7, #128]
 14272 07c2 5B68     		ldr	r3, [r3, #4]
 14273 07c4 1846     		mov	r0, r3
 14274 07c6 FFF7FEFF 		bl	__aeabi_i2d
 14275 07ca 4FF00002 		mov	r2, #0
 14276 07ce 214B     		ldr	r3, .L641+44
 14277 07d0 FFF7FEFF 		bl	__aeabi_ddiv
 14278 07d4 0346     		mov	r3, r0
 14279 07d6 0C46     		mov	r4, r1
 14280 07d8 07F11800 		add	r0, r7, #24
 14281 07dc 1A46     		mov	r2, r3
 14282 07de 2346     		mov	r3, r4
 14283 07e0 1E49     		ldr	r1, .L641+52
 14284 07e2 FFF7FEFF 		bl	sprintf
1885:..\src/command_processing.c ****                 strcat(info_string, str);
 14285              		.loc 1 1885 0
 14286 07e6 07F11803 		add	r3, r7, #24
 14287 07ea 1946     		mov	r1, r3
 14288 07ec 7869     		ldr	r0, [r7, #20]
 14289 07ee FFF7FEFF 		bl	strcat
1886:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14290              		.loc 1 1886 0
 14291 07f2 D7F88030 		ldr	r3, [r7, #128]
 14292 07f6 9B68     		ldr	r3, [r3, #8]
 14293 07f8 1846     		mov	r0, r3
 14294 07fa FFF7FEFF 		bl	__aeabi_i2d
 14295 07fe 4FF00002 		mov	r2, #0
 14296 0802 144B     		ldr	r3, .L641+44
 14297 0804 FFF7FEFF 		bl	__aeabi_ddiv
 14298 0808 0346     		mov	r3, r0
 14299 080a 0C46     		mov	r4, r1
 14300 080c 07F11800 		add	r0, r7, #24
 14301 0810 1A46     		mov	r2, r3
 14302 0812 2346     		mov	r3, r4
 14303 0814 1249     		ldr	r1, .L641+56
 14304 0816 FFF7FEFF 		bl	sprintf
1887:..\src/command_processing.c ****                 strcat(info_string, str);
 14305              		.loc 1 1887 0
 14306 081a 07F11803 		add	r3, r7, #24
 14307 081e 1946     		mov	r1, r3
 14308 0820 7869     		ldr	r0, [r7, #20]
 14309 0822 FFF7FEFF 		bl	strcat
 14310 0826 6BE0     		b	.L553
 14311              	.L642:
 14312              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 322


 14313              	.L641:
 14314 0828 00000000 		.word	g_meas
 14315 082c 840F0000 		.word	.LC154
 14316 0830 880F0000 		.word	.LC155
 14317 0834 C00D0000 		.word	.LC126
 14318 0838 00000000 		.word	dev_tension
 14319 083c 8C0F0000 		.word	.LC156
 14320 0840 00000000 		.word	pow_tension
 14321 0844 AC0F0000 		.word	.LC157
 14322 0848 D40F0000 		.word	.LC158
 14323 084c EC0F0000 		.word	.LC159
 14324 0850 08100000 		.word	.LC160
 14325 0854 0000F040 		.word	1089470464
 14326 0858 1C100000 		.word	.LC161
 14327 085c 28100000 		.word	.LC162
 14328 0860 34100000 		.word	.LC163
 14329              	.L552:
1888:..\src/command_processing.c ****             }
1889:..\src/command_processing.c ****             else { 
1890:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14330              		.loc 1 1890 0
 14331 0864 D7F88030 		ldr	r3, [r7, #128]
 14332 0868 9B69     		ldr	r3, [r3, #24]
 14333 086a 1846     		mov	r0, r3
 14334 086c FFF7FEFF 		bl	__aeabi_i2d
 14335 0870 4FF00002 		mov	r2, #0
 14336 0874 CD4B     		ldr	r3, .L643
 14337 0876 FFF7FEFF 		bl	__aeabi_ddiv
 14338 087a 0346     		mov	r3, r0
 14339 087c 0C46     		mov	r4, r1
 14340 087e 07F11800 		add	r0, r7, #24
 14341 0882 1A46     		mov	r2, r3
 14342 0884 2346     		mov	r3, r4
 14343 0886 CA49     		ldr	r1, .L643+4
 14344 0888 FFF7FEFF 		bl	sprintf
1891:..\src/command_processing.c ****                 strcat(info_string, str);
 14345              		.loc 1 1891 0
 14346 088c 07F11803 		add	r3, r7, #24
 14347 0890 1946     		mov	r1, r3
 14348 0892 7869     		ldr	r0, [r7, #20]
 14349 0894 FFF7FEFF 		bl	strcat
1892:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14350              		.loc 1 1892 0
 14351 0898 D7F88030 		ldr	r3, [r7, #128]
 14352 089c DB69     		ldr	r3, [r3, #28]
 14353 089e 1846     		mov	r0, r3
 14354 08a0 FFF7FEFF 		bl	__aeabi_i2d
 14355 08a4 4FF00002 		mov	r2, #0
 14356 08a8 C04B     		ldr	r3, .L643
 14357 08aa FFF7FEFF 		bl	__aeabi_ddiv
 14358 08ae 0346     		mov	r3, r0
 14359 08b0 0C46     		mov	r4, r1
 14360 08b2 07F11800 		add	r0, r7, #24
 14361 08b6 1A46     		mov	r2, r3
 14362 08b8 2346     		mov	r3, r4
 14363 08ba BE49     		ldr	r1, .L643+8
 14364 08bc FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 323


1893:..\src/command_processing.c ****                 strcat(info_string, str);
 14365              		.loc 1 1893 0
 14366 08c0 07F11803 		add	r3, r7, #24
 14367 08c4 1946     		mov	r1, r3
 14368 08c6 7869     		ldr	r0, [r7, #20]
 14369 08c8 FFF7FEFF 		bl	strcat
1894:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14370              		.loc 1 1894 0
 14371 08cc D7F88030 		ldr	r3, [r7, #128]
 14372 08d0 1B6A     		ldr	r3, [r3, #32]
 14373 08d2 1846     		mov	r0, r3
 14374 08d4 FFF7FEFF 		bl	__aeabi_i2d
 14375 08d8 4FF00002 		mov	r2, #0
 14376 08dc B34B     		ldr	r3, .L643
 14377 08de FFF7FEFF 		bl	__aeabi_ddiv
 14378 08e2 0346     		mov	r3, r0
 14379 08e4 0C46     		mov	r4, r1
 14380 08e6 07F11800 		add	r0, r7, #24
 14381 08ea 1A46     		mov	r2, r3
 14382 08ec 2346     		mov	r3, r4
 14383 08ee B249     		ldr	r1, .L643+12
 14384 08f0 FFF7FEFF 		bl	sprintf
1895:..\src/command_processing.c ****                 strcat(info_string, str);
 14385              		.loc 1 1895 0
 14386 08f4 07F11803 		add	r3, r7, #24
 14387 08f8 1946     		mov	r1, r3
 14388 08fa 7869     		ldr	r0, [r7, #20]
 14389 08fc FFF7FEFF 		bl	strcat
 14390              	.L553:
1896:..\src/command_processing.c ****             }
1897:..\src/command_processing.c **** 
1898:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14391              		.loc 1 1898 0
 14392 0900 7869     		ldr	r0, [r7, #20]
 14393 0902 FFF7FEFF 		bl	strlen
 14394 0906 0346     		mov	r3, r0
 14395 0908 1A46     		mov	r2, r3
 14396 090a 7B69     		ldr	r3, [r7, #20]
 14397 090c 1344     		add	r3, r3, r2
 14398 090e AB4A     		ldr	r2, .L643+16
 14399 0910 1D46     		mov	r5, r3
 14400 0912 1446     		mov	r4, r2
 14401 0914 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14402 0916 2860     		str	r0, [r5]	@ unaligned
 14403 0918 6960     		str	r1, [r5, #4]	@ unaligned
 14404 091a AA60     		str	r2, [r5, #8]	@ unaligned
 14405 091c EB60     		str	r3, [r5, #12]	@ unaligned
 14406 091e 03CC     		ldmia	r4!, {r0, r1}
 14407 0920 2861     		str	r0, [r5, #16]	@ unaligned
 14408 0922 6961     		str	r1, [r5, #20]	@ unaligned
 14409 0924 2378     		ldrb	r3, [r4]
 14410 0926 2B76     		strb	r3, [r5, #24]
1899:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14411              		.loc 1 1899 0
 14412 0928 D7F88030 		ldr	r3, [r7, #128]
 14413 092c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14414 0930 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 324


 14415 0932 4ED0     		beq	.L554
1900:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14416              		.loc 1 1900 0
 14417 0934 D7F88030 		ldr	r3, [r7, #128]
 14418 0938 DB68     		ldr	r3, [r3, #12]
 14419 093a 1846     		mov	r0, r3
 14420 093c FFF7FEFF 		bl	__aeabi_i2d
 14421 0940 4FF00002 		mov	r2, #0
 14422 0944 994B     		ldr	r3, .L643
 14423 0946 FFF7FEFF 		bl	__aeabi_ddiv
 14424 094a 0346     		mov	r3, r0
 14425 094c 0C46     		mov	r4, r1
 14426 094e 07F11800 		add	r0, r7, #24
 14427 0952 1A46     		mov	r2, r3
 14428 0954 2346     		mov	r3, r4
 14429 0956 9649     		ldr	r1, .L643+4
 14430 0958 FFF7FEFF 		bl	sprintf
1901:..\src/command_processing.c ****                 strcat(info_string, str);
 14431              		.loc 1 1901 0
 14432 095c 07F11803 		add	r3, r7, #24
 14433 0960 1946     		mov	r1, r3
 14434 0962 7869     		ldr	r0, [r7, #20]
 14435 0964 FFF7FEFF 		bl	strcat
1902:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14436              		.loc 1 1902 0
 14437 0968 D7F88030 		ldr	r3, [r7, #128]
 14438 096c 1B69     		ldr	r3, [r3, #16]
 14439 096e 1846     		mov	r0, r3
 14440 0970 FFF7FEFF 		bl	__aeabi_i2d
 14441 0974 4FF00002 		mov	r2, #0
 14442 0978 8C4B     		ldr	r3, .L643
 14443 097a FFF7FEFF 		bl	__aeabi_ddiv
 14444 097e 0346     		mov	r3, r0
 14445 0980 0C46     		mov	r4, r1
 14446 0982 07F11800 		add	r0, r7, #24
 14447 0986 1A46     		mov	r2, r3
 14448 0988 2346     		mov	r3, r4
 14449 098a 8A49     		ldr	r1, .L643+8
 14450 098c FFF7FEFF 		bl	sprintf
1903:..\src/command_processing.c ****                 strcat(info_string, str);
 14451              		.loc 1 1903 0
 14452 0990 07F11803 		add	r3, r7, #24
 14453 0994 1946     		mov	r1, r3
 14454 0996 7869     		ldr	r0, [r7, #20]
 14455 0998 FFF7FEFF 		bl	strcat
1904:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14456              		.loc 1 1904 0
 14457 099c D7F88030 		ldr	r3, [r7, #128]
 14458 09a0 5B69     		ldr	r3, [r3, #20]
 14459 09a2 1846     		mov	r0, r3
 14460 09a4 FFF7FEFF 		bl	__aeabi_i2d
 14461 09a8 4FF00002 		mov	r2, #0
 14462 09ac 7F4B     		ldr	r3, .L643
 14463 09ae FFF7FEFF 		bl	__aeabi_ddiv
 14464 09b2 0346     		mov	r3, r0
 14465 09b4 0C46     		mov	r4, r1
 14466 09b6 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 325


 14467 09ba 1A46     		mov	r2, r3
 14468 09bc 2346     		mov	r3, r4
 14469 09be 7E49     		ldr	r1, .L643+12
 14470 09c0 FFF7FEFF 		bl	sprintf
1905:..\src/command_processing.c ****                 strcat(info_string, str);
 14471              		.loc 1 1905 0
 14472 09c4 07F11803 		add	r3, r7, #24
 14473 09c8 1946     		mov	r1, r3
 14474 09ca 7869     		ldr	r0, [r7, #20]
 14475 09cc FFF7FEFF 		bl	strcat
 14476 09d0 4DE0     		b	.L555
 14477              	.L554:
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****             }
1908:..\src/command_processing.c ****             else {
1909:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14478              		.loc 1 1909 0
 14479 09d2 D7F88030 		ldr	r3, [r7, #128]
 14480 09d6 5B6A     		ldr	r3, [r3, #36]
 14481 09d8 1846     		mov	r0, r3
 14482 09da FFF7FEFF 		bl	__aeabi_i2d
 14483 09de 4FF00002 		mov	r2, #0
 14484 09e2 724B     		ldr	r3, .L643
 14485 09e4 FFF7FEFF 		bl	__aeabi_ddiv
 14486 09e8 0346     		mov	r3, r0
 14487 09ea 0C46     		mov	r4, r1
 14488 09ec 07F11800 		add	r0, r7, #24
 14489 09f0 1A46     		mov	r2, r3
 14490 09f2 2346     		mov	r3, r4
 14491 09f4 6E49     		ldr	r1, .L643+4
 14492 09f6 FFF7FEFF 		bl	sprintf
1910:..\src/command_processing.c ****                 strcat(info_string, str);
 14493              		.loc 1 1910 0
 14494 09fa 07F11803 		add	r3, r7, #24
 14495 09fe 1946     		mov	r1, r3
 14496 0a00 7869     		ldr	r0, [r7, #20]
 14497 0a02 FFF7FEFF 		bl	strcat
1911:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14498              		.loc 1 1911 0
 14499 0a06 D7F88030 		ldr	r3, [r7, #128]
 14500 0a0a 9B6A     		ldr	r3, [r3, #40]
 14501 0a0c 1846     		mov	r0, r3
 14502 0a0e FFF7FEFF 		bl	__aeabi_i2d
 14503 0a12 4FF00002 		mov	r2, #0
 14504 0a16 654B     		ldr	r3, .L643
 14505 0a18 FFF7FEFF 		bl	__aeabi_ddiv
 14506 0a1c 0346     		mov	r3, r0
 14507 0a1e 0C46     		mov	r4, r1
 14508 0a20 07F11800 		add	r0, r7, #24
 14509 0a24 1A46     		mov	r2, r3
 14510 0a26 2346     		mov	r3, r4
 14511 0a28 6249     		ldr	r1, .L643+8
 14512 0a2a FFF7FEFF 		bl	sprintf
1912:..\src/command_processing.c ****                 strcat(info_string, str);
 14513              		.loc 1 1912 0
 14514 0a2e 07F11803 		add	r3, r7, #24
 14515 0a32 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 326


 14516 0a34 7869     		ldr	r0, [r7, #20]
 14517 0a36 FFF7FEFF 		bl	strcat
1913:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14518              		.loc 1 1913 0
 14519 0a3a D7F88030 		ldr	r3, [r7, #128]
 14520 0a3e DB6A     		ldr	r3, [r3, #44]
 14521 0a40 1846     		mov	r0, r3
 14522 0a42 FFF7FEFF 		bl	__aeabi_i2d
 14523 0a46 4FF00002 		mov	r2, #0
 14524 0a4a 584B     		ldr	r3, .L643
 14525 0a4c FFF7FEFF 		bl	__aeabi_ddiv
 14526 0a50 0346     		mov	r3, r0
 14527 0a52 0C46     		mov	r4, r1
 14528 0a54 07F11800 		add	r0, r7, #24
 14529 0a58 1A46     		mov	r2, r3
 14530 0a5a 2346     		mov	r3, r4
 14531 0a5c 5649     		ldr	r1, .L643+12
 14532 0a5e FFF7FEFF 		bl	sprintf
1914:..\src/command_processing.c ****                 strcat(info_string, str);
 14533              		.loc 1 1914 0
 14534 0a62 07F11803 		add	r3, r7, #24
 14535 0a66 1946     		mov	r1, r3
 14536 0a68 7869     		ldr	r0, [r7, #20]
 14537 0a6a FFF7FEFF 		bl	strcat
 14538              	.L555:
1915:..\src/command_processing.c ****             }
1916:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 14539              		.loc 1 1916 0
 14540 0a6e D7F88030 		ldr	r3, [r7, #128]
 14541 0a72 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14542 0a76 012B     		cmp	r3, #1
 14543 0a78 14D1     		bne	.L556
1917:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14544              		.loc 1 1917 0
 14545 0a7a 7869     		ldr	r0, [r7, #20]
 14546 0a7c FFF7FEFF 		bl	strlen
 14547 0a80 0346     		mov	r3, r0
 14548 0a82 1A46     		mov	r2, r3
 14549 0a84 7B69     		ldr	r3, [r7, #20]
 14550 0a86 1344     		add	r3, r3, r2
 14551 0a88 4D4A     		ldr	r2, .L643+20
 14552 0a8a 1D46     		mov	r5, r3
 14553 0a8c 1446     		mov	r4, r2
 14554 0a8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14555 0a90 2860     		str	r0, [r5]	@ unaligned
 14556 0a92 6960     		str	r1, [r5, #4]	@ unaligned
 14557 0a94 AA60     		str	r2, [r5, #8]	@ unaligned
 14558 0a96 EB60     		str	r3, [r5, #12]	@ unaligned
 14559 0a98 03CC     		ldmia	r4!, {r0, r1}
 14560 0a9a 2861     		str	r0, [r5, #16]	@ unaligned
 14561 0a9c 6961     		str	r1, [r5, #20]	@ unaligned
 14562 0a9e 2388     		ldrh	r3, [r4]	@ unaligned
 14563 0aa0 2B83     		strh	r3, [r5, #24]	@ unaligned
 14564 0aa2 13E0     		b	.L557
 14565              	.L556:
1918:..\src/command_processing.c ****             else
1919:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 327


 14566              		.loc 1 1919 0
 14567 0aa4 7869     		ldr	r0, [r7, #20]
 14568 0aa6 FFF7FEFF 		bl	strlen
 14569 0aaa 0346     		mov	r3, r0
 14570 0aac 1A46     		mov	r2, r3
 14571 0aae 7B69     		ldr	r3, [r7, #20]
 14572 0ab0 1344     		add	r3, r3, r2
 14573 0ab2 444A     		ldr	r2, .L643+24
 14574 0ab4 1D46     		mov	r5, r3
 14575 0ab6 1446     		mov	r4, r2
 14576 0ab8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14577 0aba 2860     		str	r0, [r5]	@ unaligned
 14578 0abc 6960     		str	r1, [r5, #4]	@ unaligned
 14579 0abe AA60     		str	r2, [r5, #8]	@ unaligned
 14580 0ac0 EB60     		str	r3, [r5, #12]	@ unaligned
 14581 0ac2 03CC     		ldmia	r4!, {r0, r1}
 14582 0ac4 2861     		str	r0, [r5, #16]	@ unaligned
 14583 0ac6 6961     		str	r1, [r5, #20]	@ unaligned
 14584 0ac8 2378     		ldrb	r3, [r4]
 14585 0aca 2B76     		strb	r3, [r5, #24]
 14586              	.L557:
1920:..\src/command_processing.c **** 
1921:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14587              		.loc 1 1921 0
 14588 0acc D7F88030 		ldr	r3, [r7, #128]
 14589 0ad0 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14590 0ad4 062B     		cmp	r3, #6
 14591 0ad6 00F2D180 		bhi	.L558
 14592 0ada 01A2     		adr	r2, .L560
 14593 0adc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14594              		.p2align 2
 14595              	.L560:
 14596 0ae0 FD0A0000 		.word	.L559+1
 14597 0ae4 210B0000 		.word	.L561+1
 14598 0ae8 490B0000 		.word	.L562+1
 14599 0aec 7B0B0000 		.word	.L563+1
 14600 0af0 D90B0000 		.word	.L564+1
 14601 0af4 070C0000 		.word	.L565+1
 14602 0af8 370C0000 		.word	.L566+1
 14603              		.p2align 1
 14604              	.L559:
1922:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1923:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 14605              		.loc 1 1923 0
 14606 0afc 7869     		ldr	r0, [r7, #20]
 14607 0afe FFF7FEFF 		bl	strlen
 14608 0b02 0346     		mov	r3, r0
 14609 0b04 1A46     		mov	r2, r3
 14610 0b06 7B69     		ldr	r3, [r7, #20]
 14611 0b08 1344     		add	r3, r3, r2
 14612 0b0a 2F4A     		ldr	r2, .L643+28
 14613 0b0c 1D46     		mov	r5, r3
 14614 0b0e 1446     		mov	r4, r2
 14615 0b10 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14616 0b12 2860     		str	r0, [r5]	@ unaligned
 14617 0b14 6960     		str	r1, [r5, #4]	@ unaligned
 14618 0b16 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 328


 14619 0b18 EB60     		str	r3, [r5, #12]	@ unaligned
 14620 0b1a 2388     		ldrh	r3, [r4]	@ unaligned
 14621 0b1c 2B82     		strh	r3, [r5, #16]	@ unaligned
1924:..\src/command_processing.c ****                     break;
 14622              		.loc 1 1924 0
 14623 0b1e ADE0     		b	.L558
 14624              	.L561:
1925:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1926:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14625              		.loc 1 1926 0
 14626 0b20 7869     		ldr	r0, [r7, #20]
 14627 0b22 FFF7FEFF 		bl	strlen
 14628 0b26 0346     		mov	r3, r0
 14629 0b28 1A46     		mov	r2, r3
 14630 0b2a 7B69     		ldr	r3, [r7, #20]
 14631 0b2c 1344     		add	r3, r3, r2
 14632 0b2e 274A     		ldr	r2, .L643+32
 14633 0b30 1D46     		mov	r5, r3
 14634 0b32 1446     		mov	r4, r2
 14635 0b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14636 0b36 2860     		str	r0, [r5]	@ unaligned
 14637 0b38 6960     		str	r1, [r5, #4]	@ unaligned
 14638 0b3a AA60     		str	r2, [r5, #8]	@ unaligned
 14639 0b3c EB60     		str	r3, [r5, #12]	@ unaligned
 14640 0b3e 2068     		ldr	r0, [r4]	@ unaligned
 14641 0b40 2861     		str	r0, [r5, #16]	@ unaligned
 14642 0b42 2379     		ldrb	r3, [r4, #4]
 14643 0b44 2B75     		strb	r3, [r5, #20]
1927:..\src/command_processing.c ****                     break;
 14644              		.loc 1 1927 0
 14645 0b46 99E0     		b	.L558
 14646              	.L562:
1928:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1929:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14647              		.loc 1 1929 0
 14648 0b48 7869     		ldr	r0, [r7, #20]
 14649 0b4a FFF7FEFF 		bl	strlen
 14650 0b4e 0346     		mov	r3, r0
 14651 0b50 1A46     		mov	r2, r3
 14652 0b52 7B69     		ldr	r3, [r7, #20]
 14653 0b54 1344     		add	r3, r3, r2
 14654 0b56 1E4A     		ldr	r2, .L643+36
 14655 0b58 1D46     		mov	r5, r3
 14656 0b5a 1446     		mov	r4, r2
 14657 0b5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14658 0b5e 2860     		str	r0, [r5]	@ unaligned
 14659 0b60 6960     		str	r1, [r5, #4]	@ unaligned
 14660 0b62 AA60     		str	r2, [r5, #8]	@ unaligned
 14661 0b64 EB60     		str	r3, [r5, #12]	@ unaligned
 14662 0b66 07CC     		ldmia	r4!, {r0, r1, r2}
 14663 0b68 2861     		str	r0, [r5, #16]	@ unaligned
 14664 0b6a 6961     		str	r1, [r5, #20]	@ unaligned
 14665 0b6c AA61     		str	r2, [r5, #24]	@ unaligned
 14666 0b6e 2388     		ldrh	r3, [r4]	@ unaligned
 14667 0b70 A278     		ldrb	r2, [r4, #2]
 14668 0b72 AB83     		strh	r3, [r5, #28]	@ unaligned
 14669 0b74 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 329


 14670 0b76 AB77     		strb	r3, [r5, #30]
1930:..\src/command_processing.c ****                     break;
 14671              		.loc 1 1930 0
 14672 0b78 80E0     		b	.L558
 14673              	.L563:
1931:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1932:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 14674              		.loc 1 1932 0
 14675 0b7a 7869     		ldr	r0, [r7, #20]
 14676 0b7c FFF7FEFF 		bl	strlen
 14677 0b80 0346     		mov	r3, r0
 14678 0b82 1A46     		mov	r2, r3
 14679 0b84 7B69     		ldr	r3, [r7, #20]
 14680 0b86 1344     		add	r3, r3, r2
 14681 0b88 124A     		ldr	r2, .L643+40
 14682 0b8a 1D46     		mov	r5, r3
 14683 0b8c 1446     		mov	r4, r2
 14684 0b8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14685 0b90 2860     		str	r0, [r5]	@ unaligned
 14686 0b92 6960     		str	r1, [r5, #4]	@ unaligned
 14687 0b94 AA60     		str	r2, [r5, #8]	@ unaligned
 14688 0b96 EB60     		str	r3, [r5, #12]	@ unaligned
 14689 0b98 03CC     		ldmia	r4!, {r0, r1}
 14690 0b9a 2861     		str	r0, [r5, #16]	@ unaligned
 14691 0b9c 6961     		str	r1, [r5, #20]	@ unaligned
 14692 0b9e 2388     		ldrh	r3, [r4]	@ unaligned
 14693 0ba0 A278     		ldrb	r2, [r4, #2]
 14694 0ba2 2B83     		strh	r3, [r5, #24]	@ unaligned
 14695 0ba4 1346     		mov	r3, r2
 14696 0ba6 AB76     		strb	r3, [r5, #26]
1933:..\src/command_processing.c ****                     break;
 14697              		.loc 1 1933 0
 14698 0ba8 68E0     		b	.L558
 14699              	.L644:
 14700 0baa 00BF     		.align	2
 14701              	.L643:
 14702 0bac 0000F040 		.word	1089470464
 14703 0bb0 1C100000 		.word	.LC161
 14704 0bb4 28100000 		.word	.LC162
 14705 0bb8 34100000 		.word	.LC163
 14706 0bbc 40100000 		.word	.LC164
 14707 0bc0 5C100000 		.word	.LC165
 14708 0bc4 78100000 		.word	.LC166
 14709 0bc8 94100000 		.word	.LC167
 14710 0bcc A8100000 		.word	.LC168
 14711 0bd0 C0100000 		.word	.LC169
 14712 0bd4 E0100000 		.word	.LC170
 14713              	.L564:
1934:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1935:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14714              		.loc 1 1935 0
 14715 0bd8 7869     		ldr	r0, [r7, #20]
 14716 0bda FFF7FEFF 		bl	strlen
 14717 0bde 0346     		mov	r3, r0
 14718 0be0 1A46     		mov	r2, r3
 14719 0be2 7B69     		ldr	r3, [r7, #20]
 14720 0be4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 330


 14721 0be6 994A     		ldr	r2, .L645
 14722 0be8 1C46     		mov	r4, r3
 14723 0bea 1546     		mov	r5, r2
 14724 0bec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14725 0bee 2060     		str	r0, [r4]	@ unaligned
 14726 0bf0 6160     		str	r1, [r4, #4]	@ unaligned
 14727 0bf2 A260     		str	r2, [r4, #8]	@ unaligned
 14728 0bf4 E360     		str	r3, [r4, #12]	@ unaligned
 14729 0bf6 2868     		ldr	r0, [r5]	@ unaligned
 14730 0bf8 2061     		str	r0, [r4, #16]	@ unaligned
 14731 0bfa AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14732 0bfc AA79     		ldrb	r2, [r5, #6]
 14733 0bfe A382     		strh	r3, [r4, #20]	@ unaligned
 14734 0c00 1346     		mov	r3, r2
 14735 0c02 A375     		strb	r3, [r4, #22]
1936:..\src/command_processing.c ****                     break;
 14736              		.loc 1 1936 0
 14737 0c04 3AE0     		b	.L558
 14738              	.L565:
1937:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1938:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14739              		.loc 1 1938 0
 14740 0c06 7869     		ldr	r0, [r7, #20]
 14741 0c08 FFF7FEFF 		bl	strlen
 14742 0c0c 0346     		mov	r3, r0
 14743 0c0e 1A46     		mov	r2, r3
 14744 0c10 7B69     		ldr	r3, [r7, #20]
 14745 0c12 1344     		add	r3, r3, r2
 14746 0c14 8E4A     		ldr	r2, .L645+4
 14747 0c16 1D46     		mov	r5, r3
 14748 0c18 1446     		mov	r4, r2
 14749 0c1a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14750 0c1c 2860     		str	r0, [r5]	@ unaligned
 14751 0c1e 6960     		str	r1, [r5, #4]	@ unaligned
 14752 0c20 AA60     		str	r2, [r5, #8]	@ unaligned
 14753 0c22 EB60     		str	r3, [r5, #12]	@ unaligned
 14754 0c24 03CC     		ldmia	r4!, {r0, r1}
 14755 0c26 2861     		str	r0, [r5, #16]	@ unaligned
 14756 0c28 6961     		str	r1, [r5, #20]	@ unaligned
 14757 0c2a 2388     		ldrh	r3, [r4]	@ unaligned
 14758 0c2c A278     		ldrb	r2, [r4, #2]
 14759 0c2e 2B83     		strh	r3, [r5, #24]	@ unaligned
 14760 0c30 1346     		mov	r3, r2
 14761 0c32 AB76     		strb	r3, [r5, #26]
1939:..\src/command_processing.c ****                     break;
 14762              		.loc 1 1939 0
 14763 0c34 22E0     		b	.L558
 14764              	.L566:
1940:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1941:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 14765              		.loc 1 1941 0
 14766 0c36 7869     		ldr	r0, [r7, #20]
 14767 0c38 FFF7FEFF 		bl	strlen
 14768 0c3c 0346     		mov	r3, r0
 14769 0c3e 1A46     		mov	r2, r3
 14770 0c40 7B69     		ldr	r3, [r7, #20]
 14771 0c42 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 331


 14772 0c44 834A     		ldr	r2, .L645+8
 14773 0c46 1546     		mov	r5, r2
 14774 0c48 9E46     		mov	lr, r3
 14775 0c4a 05F1200C 		add	ip, r5, #32
 14776              	.L567:
 14777 0c4e 7446     		mov	r4, lr
 14778 0c50 2E46     		mov	r6, r5
 14779 0c52 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14780 0c54 2060     		str	r0, [r4]	@ unaligned
 14781 0c56 6160     		str	r1, [r4, #4]	@ unaligned
 14782 0c58 A260     		str	r2, [r4, #8]	@ unaligned
 14783 0c5a E360     		str	r3, [r4, #12]	@ unaligned
 14784 0c5c 1035     		adds	r5, r5, #16
 14785 0c5e 0EF1100E 		add	lr, lr, #16
 14786 0c62 6545     		cmp	r5, ip
 14787 0c64 F3D1     		bne	.L567
 14788 0c66 7446     		mov	r4, lr
 14789 0c68 2B46     		mov	r3, r5
 14790 0c6a 07CB     		ldmia	r3!, {r0, r1, r2}
 14791 0c6c 2060     		str	r0, [r4]	@ unaligned
 14792 0c6e 6160     		str	r1, [r4, #4]	@ unaligned
 14793 0c70 A260     		str	r2, [r4, #8]	@ unaligned
 14794 0c72 1A88     		ldrh	r2, [r3]	@ unaligned
 14795 0c74 9B78     		ldrb	r3, [r3, #2]
 14796 0c76 A281     		strh	r2, [r4, #12]	@ unaligned
 14797 0c78 A373     		strb	r3, [r4, #14]
1942:..\src/command_processing.c ****                     break;
 14798              		.loc 1 1942 0
 14799 0c7a 00BF     		nop
 14800              	.L558:
1943:..\src/command_processing.c ****             }
1944:..\src/command_processing.c **** 
1945:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14801              		.loc 1 1945 0
 14802 0c7c D7F88030 		ldr	r3, [r7, #128]
 14803 0c80 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14804 0c84 032B     		cmp	r3, #3
 14805 0c86 64D8     		bhi	.L636
 14806 0c88 01A2     		adr	r2, .L570
 14807 0c8a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14808 0c8e 00BF     		.p2align 2
 14809              	.L570:
 14810 0c90 A10C0000 		.word	.L569+1
 14811 0c94 CB0C0000 		.word	.L571+1
 14812 0c98 EF0C0000 		.word	.L572+1
 14813 0c9c 150D0000 		.word	.L573+1
 14814              		.p2align 1
 14815              	.L569:
1946:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1947:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14816              		.loc 1 1947 0
 14817 0ca0 7869     		ldr	r0, [r7, #20]
 14818 0ca2 FFF7FEFF 		bl	strlen
 14819 0ca6 0346     		mov	r3, r0
 14820 0ca8 1A46     		mov	r2, r3
 14821 0caa 7B69     		ldr	r3, [r7, #20]
 14822 0cac 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 332


 14823 0cae 6A4A     		ldr	r2, .L645+12
 14824 0cb0 1D46     		mov	r5, r3
 14825 0cb2 1446     		mov	r4, r2
 14826 0cb4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14827 0cb6 2860     		str	r0, [r5]	@ unaligned
 14828 0cb8 6960     		str	r1, [r5, #4]	@ unaligned
 14829 0cba AA60     		str	r2, [r5, #8]	@ unaligned
 14830 0cbc EB60     		str	r3, [r5, #12]	@ unaligned
 14831 0cbe 03CC     		ldmia	r4!, {r0, r1}
 14832 0cc0 2861     		str	r0, [r5, #16]	@ unaligned
 14833 0cc2 6961     		str	r1, [r5, #20]	@ unaligned
 14834 0cc4 2378     		ldrb	r3, [r4]
 14835 0cc6 2B76     		strb	r3, [r5, #24]
1948:..\src/command_processing.c ****                     break;
 14836              		.loc 1 1948 0
 14837 0cc8 44E0     		b	.L574
 14838              	.L571:
1949:..\src/command_processing.c ****                 case CONTROL_PWM:
1950:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 14839              		.loc 1 1950 0
 14840 0cca 7869     		ldr	r0, [r7, #20]
 14841 0ccc FFF7FEFF 		bl	strlen
 14842 0cd0 0346     		mov	r3, r0
 14843 0cd2 1A46     		mov	r2, r3
 14844 0cd4 7B69     		ldr	r3, [r7, #20]
 14845 0cd6 1344     		add	r3, r3, r2
 14846 0cd8 604A     		ldr	r2, .L645+16
 14847 0cda 1D46     		mov	r5, r3
 14848 0cdc 1446     		mov	r4, r2
 14849 0cde 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14850 0ce0 2860     		str	r0, [r5]	@ unaligned
 14851 0ce2 6960     		str	r1, [r5, #4]	@ unaligned
 14852 0ce4 AA60     		str	r2, [r5, #8]	@ unaligned
 14853 0ce6 EB60     		str	r3, [r5, #12]	@ unaligned
 14854 0ce8 2068     		ldr	r0, [r4]	@ unaligned
 14855 0cea 2861     		str	r0, [r5, #16]	@ unaligned
1951:..\src/command_processing.c ****                     break;
 14856              		.loc 1 1951 0
 14857 0cec 32E0     		b	.L574
 14858              	.L572:
1952:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1953:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 14859              		.loc 1 1953 0
 14860 0cee 7869     		ldr	r0, [r7, #20]
 14861 0cf0 FFF7FEFF 		bl	strlen
 14862 0cf4 0346     		mov	r3, r0
 14863 0cf6 1A46     		mov	r2, r3
 14864 0cf8 7B69     		ldr	r3, [r7, #20]
 14865 0cfa 1344     		add	r3, r3, r2
 14866 0cfc 584A     		ldr	r2, .L645+20
 14867 0cfe 1D46     		mov	r5, r3
 14868 0d00 1446     		mov	r4, r2
 14869 0d02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14870 0d04 2860     		str	r0, [r5]	@ unaligned
 14871 0d06 6960     		str	r1, [r5, #4]	@ unaligned
 14872 0d08 AA60     		str	r2, [r5, #8]	@ unaligned
 14873 0d0a EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 333


 14874 0d0c 03CC     		ldmia	r4!, {r0, r1}
 14875 0d0e 2861     		str	r0, [r5, #16]	@ unaligned
 14876 0d10 6961     		str	r1, [r5, #20]	@ unaligned
1954:..\src/command_processing.c ****                     break;
 14877              		.loc 1 1954 0
 14878 0d12 1FE0     		b	.L574
 14879              	.L573:
1955:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1956:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 14880              		.loc 1 1956 0
 14881 0d14 7869     		ldr	r0, [r7, #20]
 14882 0d16 FFF7FEFF 		bl	strlen
 14883 0d1a 0346     		mov	r3, r0
 14884 0d1c 1A46     		mov	r2, r3
 14885 0d1e 7B69     		ldr	r3, [r7, #20]
 14886 0d20 1344     		add	r3, r3, r2
 14887 0d22 504A     		ldr	r2, .L645+24
 14888 0d24 1446     		mov	r4, r2
 14889 0d26 9E46     		mov	lr, r3
 14890 0d28 04F1200C 		add	ip, r4, #32
 14891              	.L575:
 14892 0d2c 7546     		mov	r5, lr
 14893 0d2e 2646     		mov	r6, r4
 14894 0d30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14895 0d32 2860     		str	r0, [r5]	@ unaligned
 14896 0d34 6960     		str	r1, [r5, #4]	@ unaligned
 14897 0d36 AA60     		str	r2, [r5, #8]	@ unaligned
 14898 0d38 EB60     		str	r3, [r5, #12]	@ unaligned
 14899 0d3a 1034     		adds	r4, r4, #16
 14900 0d3c 0EF1100E 		add	lr, lr, #16
 14901 0d40 6445     		cmp	r4, ip
 14902 0d42 F3D1     		bne	.L575
 14903 0d44 7346     		mov	r3, lr
 14904 0d46 2246     		mov	r2, r4
 14905 0d48 1068     		ldr	r0, [r2]	@ unaligned
 14906 0d4a 1860     		str	r0, [r3]	@ unaligned
 14907 0d4c 1279     		ldrb	r2, [r2, #4]
 14908 0d4e 1A71     		strb	r2, [r3, #4]
1957:..\src/command_processing.c ****                     break;
 14909              		.loc 1 1957 0
 14910 0d50 00E0     		b	.L574
 14911              	.L636:
1958:..\src/command_processing.c ****                 default:
1959:..\src/command_processing.c ****                     break;
 14912              		.loc 1 1959 0
 14913 0d52 00BF     		nop
 14914              	.L574:
1960:..\src/command_processing.c ****             }
1961:..\src/command_processing.c **** 
1962:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 14915              		.loc 1 1962 0
 14916 0d54 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14917 0d58 D7F88810 		ldr	r1, [r7, #136]
 14918 0d5c 1346     		mov	r3, r2
 14919 0d5e 5B00     		lsls	r3, r3, #1
 14920 0d60 1344     		add	r3, r3, r2
 14921 0d62 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 334


 14922 0d64 0B44     		add	r3, r3, r1
 14923 0d66 03F5D873 		add	r3, r3, #432
 14924 0d6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14925 0d6c 002B     		cmp	r3, #0
 14926 0d6e 1CD0     		beq	.L576
1963:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 14927              		.loc 1 1963 0
 14928 0d70 7869     		ldr	r0, [r7, #20]
 14929 0d72 FFF7FEFF 		bl	strlen
 14930 0d76 0346     		mov	r3, r0
 14931 0d78 1A46     		mov	r2, r3
 14932 0d7a 7B69     		ldr	r3, [r7, #20]
 14933 0d7c 1344     		add	r3, r3, r2
 14934 0d7e 3A4A     		ldr	r2, .L645+28
 14935 0d80 1446     		mov	r4, r2
 14936 0d82 9E46     		mov	lr, r3
 14937 0d84 04F1200C 		add	ip, r4, #32
 14938              	.L577:
 14939 0d88 7546     		mov	r5, lr
 14940 0d8a 2646     		mov	r6, r4
 14941 0d8c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14942 0d8e 2860     		str	r0, [r5]	@ unaligned
 14943 0d90 6960     		str	r1, [r5, #4]	@ unaligned
 14944 0d92 AA60     		str	r2, [r5, #8]	@ unaligned
 14945 0d94 EB60     		str	r3, [r5, #12]	@ unaligned
 14946 0d96 1034     		adds	r4, r4, #16
 14947 0d98 0EF1100E 		add	lr, lr, #16
 14948 0d9c 6445     		cmp	r4, ip
 14949 0d9e F3D1     		bne	.L577
 14950 0da0 7346     		mov	r3, lr
 14951 0da2 2246     		mov	r2, r4
 14952 0da4 1278     		ldrb	r2, [r2]
 14953 0da6 1A70     		strb	r2, [r3]
 14954 0da8 13E0     		b	.L578
 14955              	.L576:
1964:..\src/command_processing.c ****             else
1965:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 14956              		.loc 1 1965 0
 14957 0daa 7869     		ldr	r0, [r7, #20]
 14958 0dac FFF7FEFF 		bl	strlen
 14959 0db0 0346     		mov	r3, r0
 14960 0db2 1A46     		mov	r2, r3
 14961 0db4 7B69     		ldr	r3, [r7, #20]
 14962 0db6 1344     		add	r3, r3, r2
 14963 0db8 2C4A     		ldr	r2, .L645+32
 14964 0dba 1C46     		mov	r4, r3
 14965 0dbc 1546     		mov	r5, r2
 14966 0dbe 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14967 0dc0 2060     		str	r0, [r4]	@ unaligned
 14968 0dc2 6160     		str	r1, [r4, #4]	@ unaligned
 14969 0dc4 A260     		str	r2, [r4, #8]	@ unaligned
 14970 0dc6 E360     		str	r3, [r4, #12]	@ unaligned
 14971 0dc8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14972 0dca 2061     		str	r0, [r4, #16]	@ unaligned
 14973 0dcc 6161     		str	r1, [r4, #20]	@ unaligned
 14974 0dce A261     		str	r2, [r4, #24]	@ unaligned
 14975 0dd0 E361     		str	r3, [r4, #28]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 335


 14976              	.L578:
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 14977              		.loc 1 1967 0
 14978 0dd2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14979 0dd6 D7F88810 		ldr	r1, [r7, #136]
 14980 0dda 1346     		mov	r3, r2
 14981 0ddc 5B00     		lsls	r3, r3, #1
 14982 0dde 1344     		add	r3, r3, r2
 14983 0de0 1B01     		lsls	r3, r3, #4
 14984 0de2 0B44     		add	r3, r3, r1
 14985 0de4 03F5DA73 		add	r3, r3, #436
 14986 0de8 93F90030 		ldrsb	r3, [r3]
 14987 0dec 1A46     		mov	r2, r3
 14988 0dee 07F11803 		add	r3, r7, #24
 14989 0df2 1F49     		ldr	r1, .L645+36
 14990 0df4 1846     		mov	r0, r3
 14991 0df6 FFF7FEFF 		bl	sprintf
1968:..\src/command_processing.c ****             strcat(info_string, str);
 14992              		.loc 1 1968 0
 14993 0dfa 07F11803 		add	r3, r7, #24
 14994 0dfe 1946     		mov	r1, r3
 14995 0e00 7869     		ldr	r0, [r7, #20]
 14996 0e02 FFF7FEFF 		bl	strcat
1969:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1970:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 14997              		.loc 1 1970 0
 14998 0e06 7869     		ldr	r0, [r7, #20]
 14999 0e08 FFF7FEFF 		bl	strlen
 15000 0e0c 0346     		mov	r3, r0
 15001 0e0e 1A46     		mov	r2, r3
 15002 0e10 7B69     		ldr	r3, [r7, #20]
 15003 0e12 1344     		add	r3, r3, r2
 15004 0e14 174A     		ldr	r2, .L645+40
 15005 0e16 1446     		mov	r4, r2
 15006 0e18 9E46     		mov	lr, r3
 15007 0e1a 04F1200C 		add	ip, r4, #32
 15008              	.L579:
 15009 0e1e 7546     		mov	r5, lr
 15010 0e20 2646     		mov	r6, r4
 15011 0e22 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15012 0e24 2860     		str	r0, [r5]	@ unaligned
 15013 0e26 6960     		str	r1, [r5, #4]	@ unaligned
 15014 0e28 AA60     		str	r2, [r5, #8]	@ unaligned
 15015 0e2a EB60     		str	r3, [r5, #12]	@ unaligned
 15016 0e2c 1034     		adds	r4, r4, #16
 15017 0e2e 0EF1100E 		add	lr, lr, #16
 15018 0e32 6445     		cmp	r4, ip
 15019 0e34 F3D1     		bne	.L579
 15020 0e36 7246     		mov	r2, lr
 15021 0e38 2346     		mov	r3, r4
 15022 0e3a 03CB     		ldmia	r3!, {r0, r1}
 15023 0e3c 1060     		str	r0, [r2]	@ unaligned
 15024 0e3e 5160     		str	r1, [r2, #4]	@ unaligned
 15025 0e40 1B78     		ldrb	r3, [r3]
 15026 0e42 1372     		strb	r3, [r2, #8]
1971:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 336


 15027              		.loc 1 1971 0
 15028 0e44 0023     		movs	r3, #0
 15029 0e46 C7F89430 		str	r3, [r7, #148]
 15030 0e4a 46E0     		b	.L580
 15031              	.L646:
 15032              		.align	2
 15033              	.L645:
 15034 0e4c FC100000 		.word	.LC171
 15035 0e50 14110000 		.word	.LC172
 15036 0e54 30110000 		.word	.LC173
 15037 0e58 60110000 		.word	.LC174
 15038 0e5c 7C110000 		.word	.LC175
 15039 0e60 90110000 		.word	.LC176
 15040 0e64 A8110000 		.word	.LC177
 15041 0e68 D0110000 		.word	.LC178
 15042 0e6c F4110000 		.word	.LC179
 15043 0e70 14120000 		.word	.LC180
 15044 0e74 30120000 		.word	.LC181
 15045              	.L582:
1972:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15046              		.loc 1 1972 0
 15047 0e78 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15048 0e7c D7F88810 		ldr	r1, [r7, #136]
 15049 0e80 1346     		mov	r3, r2
 15050 0e82 5B00     		lsls	r3, r3, #1
 15051 0e84 1344     		add	r3, r3, r2
 15052 0e86 1B01     		lsls	r3, r3, #4
 15053 0e88 CA18     		adds	r2, r1, r3
 15054 0e8a D7F89430 		ldr	r3, [r7, #148]
 15055 0e8e 1344     		add	r3, r3, r2
 15056 0e90 03F2B113 		addw	r3, r3, #433
 15057 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15058 0e96 1A46     		mov	r2, r3
 15059 0e98 07F11803 		add	r3, r7, #24
 15060 0e9c AE49     		ldr	r1, .L647
 15061 0e9e 1846     		mov	r0, r3
 15062 0ea0 FFF7FEFF 		bl	sprintf
1973:..\src/command_processing.c ****                 strcat(info_string, str);
 15063              		.loc 1 1973 0
 15064 0ea4 07F11803 		add	r3, r7, #24
 15065 0ea8 1946     		mov	r1, r3
 15066 0eaa 7869     		ldr	r0, [r7, #20]
 15067 0eac FFF7FEFF 		bl	strcat
1974:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15068              		.loc 1 1974 0
 15069 0eb0 D7F89430 		ldr	r3, [r7, #148]
 15070 0eb4 022B     		cmp	r3, #2
 15071 0eb6 0BD0     		beq	.L581
1975:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15072              		.loc 1 1975 0
 15073 0eb8 7869     		ldr	r0, [r7, #20]
 15074 0eba FFF7FEFF 		bl	strlen
 15075 0ebe 0346     		mov	r3, r0
 15076 0ec0 1A46     		mov	r2, r3
 15077 0ec2 7B69     		ldr	r3, [r7, #20]
 15078 0ec4 1344     		add	r3, r3, r2
 15079 0ec6 A54A     		ldr	r2, .L647+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 337


 15080 0ec8 1188     		ldrh	r1, [r2]	@ unaligned
 15081 0eca 9278     		ldrb	r2, [r2, #2]
 15082 0ecc 1980     		strh	r1, [r3]	@ unaligned
 15083 0ece 9A70     		strb	r2, [r3, #2]
 15084              	.L581:
1971:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15085              		.loc 1 1971 0 discriminator 2
 15086 0ed0 D7F89430 		ldr	r3, [r7, #148]
 15087 0ed4 0133     		adds	r3, r3, #1
 15088 0ed6 C7F89430 		str	r3, [r7, #148]
 15089              	.L580:
1971:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15090              		.loc 1 1971 0 is_stmt 0 discriminator 1
 15091 0eda D7F89430 		ldr	r3, [r7, #148]
 15092 0ede 022B     		cmp	r3, #2
 15093 0ee0 CADD     		ble	.L582
1976:..\src/command_processing.c ****                 }                
1977:..\src/command_processing.c ****             }
1978:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15094              		.loc 1 1978 0 is_stmt 1
 15095 0ee2 7869     		ldr	r0, [r7, #20]
 15096 0ee4 FFF7FEFF 		bl	strlen
 15097 0ee8 0346     		mov	r3, r0
 15098 0eea 1A46     		mov	r2, r3
 15099 0eec 7B69     		ldr	r3, [r7, #20]
 15100 0eee 1344     		add	r3, r3, r2
 15101 0ef0 9B4A     		ldr	r2, .L647+8
 15102 0ef2 1188     		ldrh	r1, [r2]	@ unaligned
 15103 0ef4 9278     		ldrb	r2, [r2, #2]
 15104 0ef6 1980     		strh	r1, [r3]	@ unaligned
 15105 0ef8 9A70     		strb	r2, [r3, #2]
1979:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 15106              		.loc 1 1979 0
 15107 0efa 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15108 0efe D7F88810 		ldr	r1, [r7, #136]
 15109 0f02 1346     		mov	r3, r2
 15110 0f04 5B00     		lsls	r3, r3, #1
 15111 0f06 1344     		add	r3, r3, r2
 15112 0f08 1B01     		lsls	r3, r3, #4
 15113 0f0a 0B44     		add	r3, r3, r1
 15114 0f0c 03F2B513 		addw	r3, r3, #437
 15115 0f10 93F90030 		ldrsb	r3, [r3]
 15116 0f14 1A46     		mov	r2, r3
 15117 0f16 07F11803 		add	r3, r7, #24
 15118 0f1a 9249     		ldr	r1, .L647+12
 15119 0f1c 1846     		mov	r0, r3
 15120 0f1e FFF7FEFF 		bl	sprintf
1980:..\src/command_processing.c ****             strcat(info_string, str);
 15121              		.loc 1 1980 0
 15122 0f22 07F11803 		add	r3, r7, #24
 15123 0f26 1946     		mov	r1, r3
 15124 0f28 7869     		ldr	r0, [r7, #20]
 15125 0f2a FFF7FEFF 		bl	strcat
1981:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 15126              		.loc 1 1981 0
 15127 0f2e 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15128 0f32 D7F88810 		ldr	r1, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 338


 15129 0f36 1346     		mov	r3, r2
 15130 0f38 5B00     		lsls	r3, r3, #1
 15131 0f3a 1344     		add	r3, r3, r2
 15132 0f3c 1B01     		lsls	r3, r3, #4
 15133 0f3e 0B44     		add	r3, r3, r1
 15134 0f40 03F5DB73 		add	r3, r3, #438
 15135 0f44 93F90030 		ldrsb	r3, [r3]
 15136 0f48 1A46     		mov	r2, r3
 15137 0f4a 07F11803 		add	r3, r7, #24
 15138 0f4e 8649     		ldr	r1, .L647+16
 15139 0f50 1846     		mov	r0, r3
 15140 0f52 FFF7FEFF 		bl	sprintf
1982:..\src/command_processing.c ****             strcat(info_string, str);
 15141              		.loc 1 1982 0
 15142 0f56 07F11803 		add	r3, r7, #24
 15143 0f5a 1946     		mov	r1, r3
 15144 0f5c 7869     		ldr	r0, [r7, #20]
 15145 0f5e FFF7FEFF 		bl	strcat
1983:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 15146              		.loc 1 1983 0
 15147 0f62 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15148 0f66 D7F88810 		ldr	r1, [r7, #136]
 15149 0f6a 1346     		mov	r3, r2
 15150 0f6c 5B00     		lsls	r3, r3, #1
 15151 0f6e 1344     		add	r3, r3, r2
 15152 0f70 1B01     		lsls	r3, r3, #4
 15153 0f72 0B44     		add	r3, r3, r1
 15154 0f74 03F2B713 		addw	r3, r3, #439
 15155 0f78 93F90030 		ldrsb	r3, [r3]
 15156 0f7c 1A46     		mov	r2, r3
 15157 0f7e 07F11803 		add	r3, r7, #24
 15158 0f82 7A49     		ldr	r1, .L647+20
 15159 0f84 1846     		mov	r0, r3
 15160 0f86 FFF7FEFF 		bl	sprintf
1984:..\src/command_processing.c ****             strcat(info_string, str);
 15161              		.loc 1 1984 0
 15162 0f8a 07F11803 		add	r3, r7, #24
 15163 0f8e 1946     		mov	r1, r3
 15164 0f90 7869     		ldr	r0, [r7, #20]
 15165 0f92 FFF7FEFF 		bl	strcat
1985:..\src/command_processing.c **** #endif            
1986:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15166              		.loc 1 1986 0
 15167 0f96 7869     		ldr	r0, [r7, #20]
 15168 0f98 FFF7FEFF 		bl	strlen
 15169 0f9c 0346     		mov	r3, r0
 15170 0f9e 1A46     		mov	r2, r3
 15171 0fa0 7B69     		ldr	r3, [r7, #20]
 15172 0fa2 1344     		add	r3, r3, r2
 15173 0fa4 6E4A     		ldr	r2, .L647+8
 15174 0fa6 1188     		ldrh	r1, [r2]	@ unaligned
 15175 0fa8 9278     		ldrb	r2, [r2, #2]
 15176 0faa 1980     		strh	r1, [r3]	@ unaligned
 15177 0fac 9A70     		strb	r2, [r3, #2]
1987:..\src/command_processing.c **** 
1988:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15178              		.loc 1 1988 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 339


 15179 0fae 7869     		ldr	r0, [r7, #20]
 15180 0fb0 FFF7FEFF 		bl	strlen
 15181 0fb4 0346     		mov	r3, r0
 15182 0fb6 1A46     		mov	r2, r3
 15183 0fb8 7B69     		ldr	r3, [r7, #20]
 15184 0fba 1344     		add	r3, r3, r2
 15185 0fbc 6C4A     		ldr	r2, .L647+24
 15186 0fbe 1D46     		mov	r5, r3
 15187 0fc0 1446     		mov	r4, r2
 15188 0fc2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15189 0fc4 2860     		str	r0, [r5]	@ unaligned
 15190 0fc6 6960     		str	r1, [r5, #4]	@ unaligned
 15191 0fc8 AA60     		str	r2, [r5, #8]	@ unaligned
 15192 0fca EB60     		str	r3, [r5, #12]	@ unaligned
 15193 0fcc 2068     		ldr	r0, [r4]	@ unaligned
 15194 0fce 2861     		str	r0, [r5, #16]	@ unaligned
1989:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15195              		.loc 1 1989 0
 15196 0fd0 0023     		movs	r3, #0
 15197 0fd2 C7F89430 		str	r3, [r7, #148]
 15198 0fd6 30E0     		b	.L583
 15199              	.L585:
1990:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15200              		.loc 1 1990 0
 15201 0fd8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15202 0fdc D7F88810 		ldr	r1, [r7, #136]
 15203 0fe0 1346     		mov	r3, r2
 15204 0fe2 5B00     		lsls	r3, r3, #1
 15205 0fe4 1344     		add	r3, r3, r2
 15206 0fe6 1B01     		lsls	r3, r3, #4
 15207 0fe8 CA18     		adds	r2, r1, r3
 15208 0fea D7F89430 		ldr	r3, [r7, #148]
 15209 0fee 1344     		add	r3, r3, r2
 15210 0ff0 03F29513 		addw	r3, r3, #405
 15211 0ff4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15212 0ff6 1A46     		mov	r2, r3
 15213 0ff8 07F11803 		add	r3, r7, #24
 15214 0ffc 5649     		ldr	r1, .L647
 15215 0ffe 1846     		mov	r0, r3
 15216 1000 FFF7FEFF 		bl	sprintf
1991:..\src/command_processing.c ****                 strcat(info_string, str);
 15217              		.loc 1 1991 0
 15218 1004 07F11803 		add	r3, r7, #24
 15219 1008 1946     		mov	r1, r3
 15220 100a 7869     		ldr	r0, [r7, #20]
 15221 100c FFF7FEFF 		bl	strcat
1992:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15222              		.loc 1 1992 0
 15223 1010 D7F89430 		ldr	r3, [r7, #148]
 15224 1014 022B     		cmp	r3, #2
 15225 1016 0BD0     		beq	.L584
1993:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15226              		.loc 1 1993 0
 15227 1018 7869     		ldr	r0, [r7, #20]
 15228 101a FFF7FEFF 		bl	strlen
 15229 101e 0346     		mov	r3, r0
 15230 1020 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 340


 15231 1022 7B69     		ldr	r3, [r7, #20]
 15232 1024 1344     		add	r3, r3, r2
 15233 1026 4D4A     		ldr	r2, .L647+4
 15234 1028 1188     		ldrh	r1, [r2]	@ unaligned
 15235 102a 9278     		ldrb	r2, [r2, #2]
 15236 102c 1980     		strh	r1, [r3]	@ unaligned
 15237 102e 9A70     		strb	r2, [r3, #2]
 15238              	.L584:
1989:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15239              		.loc 1 1989 0 discriminator 2
 15240 1030 D7F89430 		ldr	r3, [r7, #148]
 15241 1034 0133     		adds	r3, r3, #1
 15242 1036 C7F89430 		str	r3, [r7, #148]
 15243              	.L583:
1989:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15244              		.loc 1 1989 0 is_stmt 0 discriminator 1
 15245 103a D7F89430 		ldr	r3, [r7, #148]
 15246 103e 022B     		cmp	r3, #2
 15247 1040 CADD     		ble	.L585
1994:..\src/command_processing.c ****                 }                
1995:..\src/command_processing.c ****             }
1996:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15248              		.loc 1 1996 0 is_stmt 1
 15249 1042 7869     		ldr	r0, [r7, #20]
 15250 1044 FFF7FEFF 		bl	strlen
 15251 1048 0346     		mov	r3, r0
 15252 104a 1A46     		mov	r2, r3
 15253 104c 7B69     		ldr	r3, [r7, #20]
 15254 104e 1344     		add	r3, r3, r2
 15255 1050 434A     		ldr	r2, .L647+8
 15256 1052 1188     		ldrh	r1, [r2]	@ unaligned
 15257 1054 9278     		ldrb	r2, [r2, #2]
 15258 1056 1980     		strh	r1, [r3]	@ unaligned
 15259 1058 9A70     		strb	r2, [r3, #2]
1997:..\src/command_processing.c **** 
1998:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 15260              		.loc 1 1998 0
 15261 105a 7869     		ldr	r0, [r7, #20]
 15262 105c FFF7FEFF 		bl	strlen
 15263 1060 0346     		mov	r3, r0
 15264 1062 1A46     		mov	r2, r3
 15265 1064 7B69     		ldr	r3, [r7, #20]
 15266 1066 1344     		add	r3, r3, r2
 15267 1068 424A     		ldr	r2, .L647+28
 15268 106a 1D46     		mov	r5, r3
 15269 106c 1446     		mov	r4, r2
 15270 106e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15271 1070 2860     		str	r0, [r5]	@ unaligned
 15272 1072 6960     		str	r1, [r5, #4]	@ unaligned
 15273 1074 AA60     		str	r2, [r5, #8]	@ unaligned
 15274 1076 EB60     		str	r3, [r5, #12]	@ unaligned
 15275 1078 2068     		ldr	r0, [r4]	@ unaligned
 15276 107a 2861     		str	r0, [r5, #16]	@ unaligned
 15277 107c 2379     		ldrb	r3, [r4, #4]
 15278 107e 2B75     		strb	r3, [r5, #20]
1999:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15279              		.loc 1 1999 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 341


 15280 1080 0023     		movs	r3, #0
 15281 1082 C7F89430 		str	r3, [r7, #148]
 15282 1086 3FE0     		b	.L586
 15283              	.L588:
2000:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15284              		.loc 1 2000 0
 15285 1088 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15286 108c D7F88810 		ldr	r1, [r7, #136]
 15287 1090 1346     		mov	r3, r2
 15288 1092 5B00     		lsls	r3, r3, #1
 15289 1094 1344     		add	r3, r3, r2
 15290 1096 9B00     		lsls	r3, r3, #2
 15291 1098 D7F89420 		ldr	r2, [r7, #148]
 15292 109c 1344     		add	r3, r3, r2
 15293 109e 6633     		adds	r3, r3, #102
 15294 10a0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15295 10a4 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15296 10a8 D7F88800 		ldr	r0, [r7, #136]
 15297 10ac 1346     		mov	r3, r2
 15298 10ae 5B00     		lsls	r3, r3, #1
 15299 10b0 1344     		add	r3, r3, r2
 15300 10b2 1B01     		lsls	r3, r3, #4
 15301 10b4 C218     		adds	r2, r0, r3
 15302 10b6 D7F89430 		ldr	r3, [r7, #148]
 15303 10ba 1344     		add	r3, r3, r2
 15304 10bc 03F29513 		addw	r3, r3, #405
 15305 10c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15306 10c2 41FA03F2 		asr	r2, r1, r3
 15307 10c6 07F11803 		add	r3, r7, #24
 15308 10ca 2B49     		ldr	r1, .L647+32
 15309 10cc 1846     		mov	r0, r3
 15310 10ce FFF7FEFF 		bl	sprintf
2001:..\src/command_processing.c ****                 strcat(info_string, str);
 15311              		.loc 1 2001 0
 15312 10d2 07F11803 		add	r3, r7, #24
 15313 10d6 1946     		mov	r1, r3
 15314 10d8 7869     		ldr	r0, [r7, #20]
 15315 10da FFF7FEFF 		bl	strcat
2002:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15316              		.loc 1 2002 0
 15317 10de D7F89430 		ldr	r3, [r7, #148]
 15318 10e2 022B     		cmp	r3, #2
 15319 10e4 0BD0     		beq	.L587
2003:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15320              		.loc 1 2003 0
 15321 10e6 7869     		ldr	r0, [r7, #20]
 15322 10e8 FFF7FEFF 		bl	strlen
 15323 10ec 0346     		mov	r3, r0
 15324 10ee 1A46     		mov	r2, r3
 15325 10f0 7B69     		ldr	r3, [r7, #20]
 15326 10f2 1344     		add	r3, r3, r2
 15327 10f4 194A     		ldr	r2, .L647+4
 15328 10f6 1188     		ldrh	r1, [r2]	@ unaligned
 15329 10f8 9278     		ldrb	r2, [r2, #2]
 15330 10fa 1980     		strh	r1, [r3]	@ unaligned
 15331 10fc 9A70     		strb	r2, [r3, #2]
 15332              	.L587:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 342


1999:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15333              		.loc 1 1999 0 discriminator 2
 15334 10fe D7F89430 		ldr	r3, [r7, #148]
 15335 1102 0133     		adds	r3, r3, #1
 15336 1104 C7F89430 		str	r3, [r7, #148]
 15337              	.L586:
1999:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15338              		.loc 1 1999 0 is_stmt 0 discriminator 1
 15339 1108 D7F89430 		ldr	r3, [r7, #148]
 15340 110c 022B     		cmp	r3, #2
 15341 110e BBDD     		ble	.L588
2004:..\src/command_processing.c ****                 }
2005:..\src/command_processing.c ****             }
2006:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15342              		.loc 1 2006 0 is_stmt 1
 15343 1110 7869     		ldr	r0, [r7, #20]
 15344 1112 FFF7FEFF 		bl	strlen
 15345 1116 0346     		mov	r3, r0
 15346 1118 1A46     		mov	r2, r3
 15347 111a 7B69     		ldr	r3, [r7, #20]
 15348 111c 1344     		add	r3, r3, r2
 15349 111e 104A     		ldr	r2, .L647+8
 15350 1120 1188     		ldrh	r1, [r2]	@ unaligned
 15351 1122 9278     		ldrb	r2, [r2, #2]
 15352 1124 1980     		strh	r1, [r3]	@ unaligned
 15353 1126 9A70     		strb	r2, [r3, #2]
2007:..\src/command_processing.c ****                 
2008:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15354              		.loc 1 2008 0
 15355 1128 7869     		ldr	r0, [r7, #20]
 15356 112a FFF7FEFF 		bl	strlen
 15357 112e 0346     		mov	r3, r0
 15358 1130 1A46     		mov	r2, r3
 15359 1132 7B69     		ldr	r3, [r7, #20]
 15360 1134 1344     		add	r3, r3, r2
 15361 1136 114A     		ldr	r2, .L647+36
 15362 1138 1D46     		mov	r5, r3
 15363 113a 1446     		mov	r4, r2
 15364 113c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15365 113e 2860     		str	r0, [r5]	@ unaligned
 15366 1140 6960     		str	r1, [r5, #4]	@ unaligned
 15367 1142 AA60     		str	r2, [r5, #8]	@ unaligned
 15368 1144 EB60     		str	r3, [r5, #12]	@ unaligned
 15369 1146 03CC     		ldmia	r4!, {r0, r1}
 15370 1148 2861     		str	r0, [r5, #16]	@ unaligned
 15371 114a 6961     		str	r1, [r5, #20]	@ unaligned
 15372 114c 2378     		ldrb	r3, [r4]
 15373 114e 2B76     		strb	r3, [r5, #24]
2009:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15374              		.loc 1 2009 0
 15375 1150 0023     		movs	r3, #0
 15376 1152 C7F89430 		str	r3, [r7, #148]
 15377 1156 49E0     		b	.L589
 15378              	.L648:
 15379              		.align	2
 15380              	.L647:
 15381 1158 840F0000 		.word	.LC154
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 343


 15382 115c 880F0000 		.word	.LC155
 15383 1160 C00D0000 		.word	.LC126
 15384 1164 5C120000 		.word	.LC182
 15385 1168 74120000 		.word	.LC183
 15386 116c 8C120000 		.word	.LC184
 15387 1170 A4120000 		.word	.LC185
 15388 1174 B8120000 		.word	.LC186
 15389 1178 D0120000 		.word	.LC187
 15390 117c D4120000 		.word	.LC188
 15391              	.L591:
2010:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15392              		.loc 1 2010 0
 15393 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15394 1184 D7F88810 		ldr	r1, [r7, #136]
 15395 1188 1346     		mov	r3, r2
 15396 118a 5B00     		lsls	r3, r3, #1
 15397 118c 1344     		add	r3, r3, r2
 15398 118e 9B00     		lsls	r3, r3, #2
 15399 1190 D7F89420 		ldr	r2, [r7, #148]
 15400 1194 1344     		add	r3, r3, r2
 15401 1196 6833     		adds	r3, r3, #104
 15402 1198 9B00     		lsls	r3, r3, #2
 15403 119a 0B44     		add	r3, r3, r1
 15404 119c 5B68     		ldr	r3, [r3, #4]	@ float
 15405 119e 1846     		mov	r0, r3
 15406 11a0 FFF7FEFF 		bl	__aeabi_f2d
 15407 11a4 0346     		mov	r3, r0
 15408 11a6 0C46     		mov	r4, r1
 15409 11a8 07F11800 		add	r0, r7, #24
 15410 11ac 1A46     		mov	r2, r3
 15411 11ae 2346     		mov	r3, r4
 15412 11b0 BD49     		ldr	r1, .L649
 15413 11b2 FFF7FEFF 		bl	sprintf
2011:..\src/command_processing.c ****                 strcat(info_string, str);
 15414              		.loc 1 2011 0
 15415 11b6 07F11803 		add	r3, r7, #24
 15416 11ba 1946     		mov	r1, r3
 15417 11bc 7869     		ldr	r0, [r7, #20]
 15418 11be FFF7FEFF 		bl	strcat
2012:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15419              		.loc 1 2012 0
 15420 11c2 D7F89430 		ldr	r3, [r7, #148]
 15421 11c6 022B     		cmp	r3, #2
 15422 11c8 0BD0     		beq	.L590
2013:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15423              		.loc 1 2013 0
 15424 11ca 7869     		ldr	r0, [r7, #20]
 15425 11cc FFF7FEFF 		bl	strlen
 15426 11d0 0346     		mov	r3, r0
 15427 11d2 1A46     		mov	r2, r3
 15428 11d4 7B69     		ldr	r3, [r7, #20]
 15429 11d6 1344     		add	r3, r3, r2
 15430 11d8 B44A     		ldr	r2, .L649+4
 15431 11da 1188     		ldrh	r1, [r2]	@ unaligned
 15432 11dc 9278     		ldrb	r2, [r2, #2]
 15433 11de 1980     		strh	r1, [r3]	@ unaligned
 15434 11e0 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 344


 15435              	.L590:
2009:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15436              		.loc 1 2009 0 discriminator 2
 15437 11e2 D7F89430 		ldr	r3, [r7, #148]
 15438 11e6 0133     		adds	r3, r3, #1
 15439 11e8 C7F89430 		str	r3, [r7, #148]
 15440              	.L589:
2009:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15441              		.loc 1 2009 0 is_stmt 0 discriminator 1
 15442 11ec D7F89430 		ldr	r3, [r7, #148]
 15443 11f0 022B     		cmp	r3, #2
 15444 11f2 C5DD     		ble	.L591
2014:..\src/command_processing.c ****                 }
2015:..\src/command_processing.c ****             }
2016:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15445              		.loc 1 2016 0 is_stmt 1
 15446 11f4 7869     		ldr	r0, [r7, #20]
 15447 11f6 FFF7FEFF 		bl	strlen
 15448 11fa 0346     		mov	r3, r0
 15449 11fc 1A46     		mov	r2, r3
 15450 11fe 7B69     		ldr	r3, [r7, #20]
 15451 1200 1344     		add	r3, r3, r2
 15452 1202 AB4A     		ldr	r2, .L649+8
 15453 1204 1188     		ldrh	r1, [r2]	@ unaligned
 15454 1206 9278     		ldrb	r2, [r2, #2]
 15455 1208 1980     		strh	r1, [r3]	@ unaligned
 15456 120a 9A70     		strb	r2, [r3, #2]
2017:..\src/command_processing.c ****             
2018:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2019:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15457              		.loc 1 2019 0
 15458 120c D7F88030 		ldr	r3, [r7, #128]
 15459 1210 5B6C     		ldr	r3, [r3, #68]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15460              		.loc 1 2018 0
 15461 1212 1846     		mov	r0, r3
 15462 1214 FFF7FEFF 		bl	__aeabi_f2d
 15463 1218 C7E90201 		strd	r0, [r7, #8]
 15464              		.loc 1 2019 0
 15465 121c D7F88030 		ldr	r3, [r7, #128]
 15466 1220 9B6C     		ldr	r3, [r3, #72]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15467              		.loc 1 2018 0
 15468 1222 1846     		mov	r0, r3
 15469 1224 FFF7FEFF 		bl	__aeabi_f2d
 15470 1228 0446     		mov	r4, r0
 15471 122a 0D46     		mov	r5, r1
 15472              		.loc 1 2019 0
 15473 122c D7F88030 		ldr	r3, [r7, #128]
 15474 1230 DB6C     		ldr	r3, [r3, #76]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15475              		.loc 1 2018 0
 15476 1232 1846     		mov	r0, r3
 15477 1234 FFF7FEFF 		bl	__aeabi_f2d
 15478 1238 8046     		mov	r8, r0
 15479 123a 8946     		mov	r9, r1
2020:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 345


 15480              		.loc 1 2020 0
 15481 123c D7F88030 		ldr	r3, [r7, #128]
 15482 1240 1B6D     		ldr	r3, [r3, #80]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15483              		.loc 1 2018 0
 15484 1242 1846     		mov	r0, r3
 15485 1244 FFF7FEFF 		bl	__aeabi_f2d
 15486 1248 8246     		mov	r10, r0
 15487 124a 8B46     		mov	fp, r1
 15488              		.loc 1 2020 0
 15489 124c D7F88030 		ldr	r3, [r7, #128]
 15490 1250 5B6D     		ldr	r3, [r3, #84]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15491              		.loc 1 2018 0
 15492 1252 1846     		mov	r0, r3
 15493 1254 FFF7FEFF 		bl	__aeabi_f2d
 15494 1258 C7E90001 		strd	r0, [r7]
 15495              		.loc 1 2020 0
 15496 125c D7F88030 		ldr	r3, [r7, #128]
 15497 1260 9B6D     		ldr	r3, [r3, #88]	@ float
2018:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15498              		.loc 1 2018 0
 15499 1262 1846     		mov	r0, r3
 15500 1264 FFF7FEFF 		bl	__aeabi_f2d
 15501 1268 0246     		mov	r2, r0
 15502 126a 0B46     		mov	r3, r1
 15503 126c 07F11800 		add	r0, r7, #24
 15504 1270 CDE90823 		strd	r2, [sp, #32]
 15505 1274 D7E90012 		ldrd	r1, [r7]
 15506 1278 CDE90612 		strd	r1, [sp, #24]
 15507 127c CDE904AB 		strd	r10, [sp, #16]
 15508 1280 CDE90289 		strd	r8, [sp, #8]
 15509 1284 CDE90045 		strd	r4, [sp]
 15510 1288 D7E90223 		ldrd	r2, [r7, #8]
 15511 128c 8949     		ldr	r1, .L649+12
 15512 128e FFF7FEFF 		bl	sprintf
2021:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15513              		.loc 1 2021 0
 15514 1292 07F11803 		add	r3, r7, #24
 15515 1296 1946     		mov	r1, r3
 15516 1298 7869     		ldr	r0, [r7, #20]
 15517 129a FFF7FEFF 		bl	strcat
2022:..\src/command_processing.c **** 
2023:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15518              		.loc 1 2023 0
 15519 129e D7F88030 		ldr	r3, [r7, #128]
 15520 12a2 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15521 12a6 1A46     		mov	r2, r3
 15522 12a8 07F11803 		add	r3, r7, #24
 15523 12ac 8249     		ldr	r1, .L649+16
 15524 12ae 1846     		mov	r0, r3
 15525 12b0 FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****             strcat(info_string, str);
 15526              		.loc 1 2024 0
 15527 12b4 07F11803 		add	r3, r7, #24
 15528 12b8 1946     		mov	r1, r3
 15529 12ba 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 346


 15530 12bc FFF7FEFF 		bl	strcat
2025:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15531              		.loc 1 2025 0
 15532 12c0 7869     		ldr	r0, [r7, #20]
 15533 12c2 FFF7FEFF 		bl	strlen
 15534 12c6 0346     		mov	r3, r0
 15535 12c8 1A46     		mov	r2, r3
 15536 12ca 7B69     		ldr	r3, [r7, #20]
 15537 12cc 1344     		add	r3, r3, r2
 15538 12ce 784A     		ldr	r2, .L649+8
 15539 12d0 1188     		ldrh	r1, [r2]	@ unaligned
 15540 12d2 9278     		ldrb	r2, [r2, #2]
 15541 12d4 1980     		strh	r1, [r3]	@ unaligned
 15542 12d6 9A70     		strb	r2, [r3, #2]
2026:..\src/command_processing.c **** 
2027:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15543              		.loc 1 2027 0
 15544 12d8 D7F88030 		ldr	r3, [r7, #128]
 15545 12dc 596B     		ldr	r1, [r3, #52]
 15546 12de 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15547 12e2 D7F88800 		ldr	r0, [r7, #136]
 15548 12e6 1346     		mov	r3, r2
 15549 12e8 5B00     		lsls	r3, r3, #1
 15550 12ea 1344     		add	r3, r3, r2
 15551 12ec 1B01     		lsls	r3, r3, #4
 15552 12ee 0344     		add	r3, r3, r0
 15553 12f0 03F29513 		addw	r3, r3, #405
 15554 12f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15555 12f6 41FA03F2 		asr	r2, r1, r3
 15556 12fa 07F11803 		add	r3, r7, #24
 15557 12fe 6F49     		ldr	r1, .L649+20
 15558 1300 1846     		mov	r0, r3
 15559 1302 FFF7FEFF 		bl	sprintf
2028:..\src/command_processing.c ****             strcat(info_string, str);
 15560              		.loc 1 2028 0
 15561 1306 07F11803 		add	r3, r7, #24
 15562 130a 1946     		mov	r1, r3
 15563 130c 7869     		ldr	r0, [r7, #20]
 15564 130e FFF7FEFF 		bl	strcat
2029:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15565              		.loc 1 2029 0
 15566 1312 D7F88030 		ldr	r3, [r7, #128]
 15567 1316 996B     		ldr	r1, [r3, #56]
 15568 1318 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15569 131c D7F88800 		ldr	r0, [r7, #136]
 15570 1320 1346     		mov	r3, r2
 15571 1322 5B00     		lsls	r3, r3, #1
 15572 1324 1344     		add	r3, r3, r2
 15573 1326 1B01     		lsls	r3, r3, #4
 15574 1328 0344     		add	r3, r3, r0
 15575 132a 03F29513 		addw	r3, r3, #405
 15576 132e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15577 1330 41FA03F2 		asr	r2, r1, r3
 15578 1334 07F11803 		add	r3, r7, #24
 15579 1338 6149     		ldr	r1, .L649+24
 15580 133a 1846     		mov	r0, r3
 15581 133c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 347


2030:..\src/command_processing.c ****             strcat(info_string, str);
 15582              		.loc 1 2030 0
 15583 1340 07F11803 		add	r3, r7, #24
 15584 1344 1946     		mov	r1, r3
 15585 1346 7869     		ldr	r0, [r7, #20]
 15586 1348 FFF7FEFF 		bl	strcat
2031:..\src/command_processing.c **** 
2032:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15587              		.loc 1 2032 0
 15588 134c D7F88030 		ldr	r3, [r7, #128]
 15589 1350 1A6C     		ldr	r2, [r3, #64]
 15590 1352 D7F88030 		ldr	r3, [r7, #128]
 15591 1356 DB6B     		ldr	r3, [r3, #60]
 15592 1358 07F11800 		add	r0, r7, #24
 15593 135c 5949     		ldr	r1, .L649+28
 15594 135e FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****             strcat(info_string, str);
 15595              		.loc 1 2033 0
 15596 1362 07F11803 		add	r3, r7, #24
 15597 1366 1946     		mov	r1, r3
 15598 1368 7869     		ldr	r0, [r7, #20]
 15599 136a FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15600              		.loc 1 2034 0
 15601 136e 7869     		ldr	r0, [r7, #20]
 15602 1370 FFF7FEFF 		bl	strlen
 15603 1374 0346     		mov	r3, r0
 15604 1376 1A46     		mov	r2, r3
 15605 1378 7B69     		ldr	r3, [r7, #20]
 15606 137a 1344     		add	r3, r3, r2
 15607 137c 4C4A     		ldr	r2, .L649+8
 15608 137e 1188     		ldrh	r1, [r2]	@ unaligned
 15609 1380 9278     		ldrb	r2, [r2, #2]
 15610 1382 1980     		strh	r1, [r3]	@ unaligned
 15611 1384 9A70     		strb	r2, [r3, #2]
2035:..\src/command_processing.c **** 
2036:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15612              		.loc 1 2036 0
 15613 1386 D7F88030 		ldr	r3, [r7, #128]
 15614 138a B3F95C30 		ldrsh	r3, [r3, #92]
 15615 138e 1A46     		mov	r2, r3
 15616 1390 07F11803 		add	r3, r7, #24
 15617 1394 4C49     		ldr	r1, .L649+32
 15618 1396 1846     		mov	r0, r3
 15619 1398 FFF7FEFF 		bl	sprintf
2037:..\src/command_processing.c ****             strcat(info_string, str);
 15620              		.loc 1 2037 0
 15621 139c 07F11803 		add	r3, r7, #24
 15622 13a0 1946     		mov	r1, r3
 15623 13a2 7869     		ldr	r0, [r7, #20]
 15624 13a4 FFF7FEFF 		bl	strcat
2038:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2039:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 15625              		.loc 1 2039 0
 15626 13a8 D7F88030 		ldr	r3, [r7, #128]
 15627 13ac 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 15628 13b0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 348


 15629 13b2 07F11803 		add	r3, r7, #24
 15630 13b6 4549     		ldr	r1, .L649+36
 15631 13b8 1846     		mov	r0, r3
 15632 13ba FFF7FEFF 		bl	sprintf
2040:..\src/command_processing.c ****             strcat(info_string, str);
 15633              		.loc 1 2040 0
 15634 13be 07F11803 		add	r3, r7, #24
 15635 13c2 1946     		mov	r1, r3
 15636 13c4 7869     		ldr	r0, [r7, #20]
 15637 13c6 FFF7FEFF 		bl	strcat
2041:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 15638              		.loc 1 2041 0
 15639 13ca D7F88030 		ldr	r3, [r7, #128]
 15640 13ce 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 15641 13d2 002B     		cmp	r3, #0
 15642 13d4 02D0     		beq	.L593
 15643 13d6 012B     		cmp	r3, #1
 15644 13d8 1DD0     		beq	.L594
2042:..\src/command_processing.c ****                 case DRIVER_MC33887:
2043:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2044:..\src/command_processing.c ****                     break;
2045:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2046:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2047:..\src/command_processing.c ****                     break;
2048:..\src/command_processing.c ****                 default:
2049:..\src/command_processing.c ****                     break;
 15645              		.loc 1 2049 0
 15646 13da 39E0     		b	.L596
 15647              	.L593:
2043:..\src/command_processing.c ****                     break;
 15648              		.loc 1 2043 0
 15649 13dc 7869     		ldr	r0, [r7, #20]
 15650 13de FFF7FEFF 		bl	strlen
 15651 13e2 0346     		mov	r3, r0
 15652 13e4 1A46     		mov	r2, r3
 15653 13e6 7B69     		ldr	r3, [r7, #20]
 15654 13e8 1344     		add	r3, r3, r2
 15655 13ea 394A     		ldr	r2, .L649+40
 15656 13ec 1446     		mov	r4, r2
 15657 13ee 9E46     		mov	lr, r3
 15658 13f0 04F1200C 		add	ip, r4, #32
 15659              	.L595:
 15660 13f4 7546     		mov	r5, lr
 15661 13f6 2646     		mov	r6, r4
 15662 13f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15663 13fa 2860     		str	r0, [r5]	@ unaligned
 15664 13fc 6960     		str	r1, [r5, #4]	@ unaligned
 15665 13fe AA60     		str	r2, [r5, #8]	@ unaligned
 15666 1400 EB60     		str	r3, [r5, #12]	@ unaligned
 15667 1402 1034     		adds	r4, r4, #16
 15668 1404 0EF1100E 		add	lr, lr, #16
 15669 1408 6445     		cmp	r4, ip
 15670 140a F3D1     		bne	.L595
 15671 140c 7246     		mov	r2, lr
 15672 140e 2346     		mov	r3, r4
 15673 1410 1B88     		ldrh	r3, [r3]	@ unaligned
 15674 1412 1380     		strh	r3, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 349


2044:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 15675              		.loc 1 2044 0
 15676 1414 1CE0     		b	.L596
 15677              	.L594:
2046:..\src/command_processing.c ****                     break;
 15678              		.loc 1 2046 0
 15679 1416 7869     		ldr	r0, [r7, #20]
 15680 1418 FFF7FEFF 		bl	strlen
 15681 141c 0346     		mov	r3, r0
 15682 141e 1A46     		mov	r2, r3
 15683 1420 7B69     		ldr	r3, [r7, #20]
 15684 1422 1344     		add	r3, r3, r2
 15685 1424 2B4A     		ldr	r2, .L649+44
 15686 1426 1446     		mov	r4, r2
 15687 1428 9E46     		mov	lr, r3
 15688 142a 04F1200C 		add	ip, r4, #32
 15689              	.L597:
 15690 142e 7546     		mov	r5, lr
 15691 1430 2646     		mov	r6, r4
 15692 1432 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15693 1434 2860     		str	r0, [r5]	@ unaligned
 15694 1436 6960     		str	r1, [r5, #4]	@ unaligned
 15695 1438 AA60     		str	r2, [r5, #8]	@ unaligned
 15696 143a EB60     		str	r3, [r5, #12]	@ unaligned
 15697 143c 1034     		adds	r4, r4, #16
 15698 143e 0EF1100E 		add	lr, lr, #16
 15699 1442 6445     		cmp	r4, ip
 15700 1444 F3D1     		bne	.L597
 15701 1446 7346     		mov	r3, lr
 15702 1448 2246     		mov	r2, r4
 15703 144a 1068     		ldr	r0, [r2]	@ unaligned
 15704 144c 1860     		str	r0, [r3]	@ unaligned
2047:..\src/command_processing.c ****                 default:
 15705              		.loc 1 2047 0
 15706 144e 00BF     		nop
 15707              	.L596:
2050:..\src/command_processing.c ****             }
2051:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 15708              		.loc 1 2051 0
 15709 1450 D7F88030 		ldr	r3, [r7, #128]
 15710 1454 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 15711 1458 1A46     		mov	r2, r3
 15712 145a 07F11803 		add	r3, r7, #24
 15713 145e 1E49     		ldr	r1, .L649+48
 15714 1460 1846     		mov	r0, r3
 15715 1462 FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****             strcat(info_string, str);
 15716              		.loc 1 2052 0
 15717 1466 07F11803 		add	r3, r7, #24
 15718 146a 1946     		mov	r1, r3
 15719 146c 7869     		ldr	r0, [r7, #20]
 15720 146e FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 15721              		.loc 1 2053 0
 15722 1472 D7F88030 		ldr	r3, [r7, #128]
 15723 1476 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15724 147a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 350


 15725 147c 30D0     		beq	.L598
2054:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 15726              		.loc 1 2054 0
 15727 147e 7869     		ldr	r0, [r7, #20]
 15728 1480 FFF7FEFF 		bl	strlen
 15729 1484 0346     		mov	r3, r0
 15730 1486 1A46     		mov	r2, r3
 15731 1488 7B69     		ldr	r3, [r7, #20]
 15732 148a 1344     		add	r3, r3, r2
 15733 148c 134A     		ldr	r2, .L649+52
 15734 148e 1D46     		mov	r5, r3
 15735 1490 1446     		mov	r4, r2
 15736 1492 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15737 1494 2860     		str	r0, [r5]	@ unaligned
 15738 1496 6960     		str	r1, [r5, #4]	@ unaligned
 15739 1498 AA60     		str	r2, [r5, #8]	@ unaligned
 15740 149a EB60     		str	r3, [r5, #12]	@ unaligned
 15741 149c 07CC     		ldmia	r4!, {r0, r1, r2}
 15742 149e 2861     		str	r0, [r5, #16]	@ unaligned
 15743 14a0 6961     		str	r1, [r5, #20]	@ unaligned
 15744 14a2 AA61     		str	r2, [r5, #24]	@ unaligned
 15745 14a4 33E0     		b	.L599
 15746              	.L650:
 15747 14a6 00BF     		.align	2
 15748              	.L649:
 15749 14a8 F0120000 		.word	.LC189
 15750 14ac 880F0000 		.word	.LC155
 15751 14b0 C00D0000 		.word	.LC126
 15752 14b4 F4120000 		.word	.LC190
 15753 14b8 24130000 		.word	.LC191
 15754 14bc 40130000 		.word	.LC192
 15755 14c0 64130000 		.word	.LC193
 15756 14c4 74130000 		.word	.LC194
 15757 14c8 90130000 		.word	.LC195
 15758 14cc A4130000 		.word	.LC196
 15759 14d0 D0130000 		.word	.LC197
 15760 14d4 F4130000 		.word	.LC198
 15761 14d8 18140000 		.word	.LC199
 15762 14dc 38140000 		.word	.LC200
 15763              	.L598:
2055:..\src/command_processing.c ****             else
2056:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 15764              		.loc 1 2056 0
 15765 14e0 7869     		ldr	r0, [r7, #20]
 15766 14e2 FFF7FEFF 		bl	strlen
 15767 14e6 0346     		mov	r3, r0
 15768 14e8 1A46     		mov	r2, r3
 15769 14ea 7B69     		ldr	r3, [r7, #20]
 15770 14ec 1344     		add	r3, r3, r2
 15771 14ee A04A     		ldr	r2, .L651
 15772 14f0 1D46     		mov	r5, r3
 15773 14f2 1446     		mov	r4, r2
 15774 14f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15775 14f6 2860     		str	r0, [r5]	@ unaligned
 15776 14f8 6960     		str	r1, [r5, #4]	@ unaligned
 15777 14fa AA60     		str	r2, [r5, #8]	@ unaligned
 15778 14fc EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 351


 15779 14fe 03CC     		ldmia	r4!, {r0, r1}
 15780 1500 2861     		str	r0, [r5, #16]	@ unaligned
 15781 1502 6961     		str	r1, [r5, #20]	@ unaligned
 15782 1504 2388     		ldrh	r3, [r4]	@ unaligned
 15783 1506 A278     		ldrb	r2, [r4, #2]
 15784 1508 2B83     		strh	r3, [r5, #24]	@ unaligned
 15785 150a 1346     		mov	r3, r2
 15786 150c AB76     		strb	r3, [r5, #26]
 15787              	.L599:
2057:..\src/command_processing.c **** #endif                
2058:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15788              		.loc 1 2058 0 discriminator 2
 15789 150e 7869     		ldr	r0, [r7, #20]
 15790 1510 FFF7FEFF 		bl	strlen
 15791 1514 0346     		mov	r3, r0
 15792 1516 1A46     		mov	r2, r3
 15793 1518 7B69     		ldr	r3, [r7, #20]
 15794 151a 1344     		add	r3, r3, r2
 15795 151c 954A     		ldr	r2, .L651+4
 15796 151e 1188     		ldrh	r1, [r2]	@ unaligned
 15797 1520 9278     		ldrb	r2, [r2, #2]
 15798 1522 1980     		strh	r1, [r3]	@ unaligned
 15799 1524 9A70     		strb	r2, [r3, #2]
 15800              	.LBE18:
1803:..\src/command_processing.c ****             
 15801              		.loc 1 1803 0 discriminator 2
 15802 1526 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15803 152a 0133     		adds	r3, r3, #1
 15804 152c 87F89330 		strb	r3, [r7, #147]
 15805              	.L538:
1803:..\src/command_processing.c ****             
 15806              		.loc 1 1803 0 is_stmt 0 discriminator 1
 15807 1530 D7F88830 		ldr	r3, [r7, #136]
 15808 1534 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15809 1538 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15810 153c 9A42     		cmp	r2, r3
 15811 153e 7EF691AE 		bls	.L600
 15812              	.LBE17:
2059:..\src/command_processing.c ****         }
2060:..\src/command_processing.c ****       
2061:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 15813              		.loc 1 2061 0 is_stmt 1
 15814 1542 7869     		ldr	r0, [r7, #20]
 15815 1544 FFF7FEFF 		bl	strlen
 15816 1548 0346     		mov	r3, r0
 15817 154a 1A46     		mov	r2, r3
 15818 154c 7B69     		ldr	r3, [r7, #20]
 15819 154e 1344     		add	r3, r3, r2
 15820 1550 894A     		ldr	r2, .L651+8
 15821 1552 1D46     		mov	r5, r3
 15822 1554 1446     		mov	r4, r2
 15823 1556 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15824 1558 2860     		str	r0, [r5]	@ unaligned
 15825 155a 6960     		str	r1, [r5, #4]	@ unaligned
 15826 155c AA60     		str	r2, [r5, #8]	@ unaligned
 15827 155e EB60     		str	r3, [r5, #12]	@ unaligned
 15828 1560 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 352


 15829 1562 2861     		str	r0, [r5, #16]	@ unaligned
2062:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 15830              		.loc 1 2062 0
 15831 1564 D7F88830 		ldr	r3, [r7, #136]
 15832 1568 B3F8F031 		ldrh	r3, [r3, #496]
 15833 156c 1A46     		mov	r2, r3
 15834 156e D7F88830 		ldr	r3, [r7, #136]
 15835 1572 B3F8F231 		ldrh	r3, [r3, #498]
 15836 1576 07F11800 		add	r0, r7, #24
 15837 157a 8049     		ldr	r1, .L651+12
 15838 157c FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****         strcat(info_string, str);
 15839              		.loc 1 2063 0
 15840 1580 07F11803 		add	r3, r7, #24
 15841 1584 1946     		mov	r1, r3
 15842 1586 7869     		ldr	r0, [r7, #20]
 15843 1588 FFF7FEFF 		bl	strcat
2064:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15844              		.loc 1 2064 0
 15845 158c 7869     		ldr	r0, [r7, #20]
 15846 158e FFF7FEFF 		bl	strlen
 15847 1592 0346     		mov	r3, r0
 15848 1594 1A46     		mov	r2, r3
 15849 1596 7B69     		ldr	r3, [r7, #20]
 15850 1598 1344     		add	r3, r3, r2
 15851 159a 764A     		ldr	r2, .L651+4
 15852 159c 1188     		ldrh	r1, [r2]	@ unaligned
 15853 159e 9278     		ldrb	r2, [r2, #2]
 15854 15a0 1980     		strh	r1, [r3]	@ unaligned
 15855 15a2 9A70     		strb	r2, [r3, #2]
2065:..\src/command_processing.c **** 
2066:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 15856              		.loc 1 2066 0
 15857 15a4 D7F88830 		ldr	r3, [r7, #136]
 15858 15a8 D3F8F421 		ldr	r2, [r3, #500]
 15859 15ac D7F88830 		ldr	r3, [r7, #136]
 15860 15b0 D3F8F831 		ldr	r3, [r3, #504]
 15861 15b4 07F11800 		add	r0, r7, #24
 15862 15b8 7149     		ldr	r1, .L651+16
 15863 15ba FFF7FEFF 		bl	sprintf
2067:..\src/command_processing.c ****         strcat(info_string, str);
 15864              		.loc 1 2067 0
 15865 15be 07F11803 		add	r3, r7, #24
 15866 15c2 1946     		mov	r1, r3
 15867 15c4 7869     		ldr	r0, [r7, #20]
 15868 15c6 FFF7FEFF 		bl	strcat
2068:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15869              		.loc 1 2068 0
 15870 15ca 7869     		ldr	r0, [r7, #20]
 15871 15cc FFF7FEFF 		bl	strlen
 15872 15d0 0346     		mov	r3, r0
 15873 15d2 1A46     		mov	r2, r3
 15874 15d4 7B69     		ldr	r3, [r7, #20]
 15875 15d6 1344     		add	r3, r3, r2
 15876 15d8 664A     		ldr	r2, .L651+4
 15877 15da 1188     		ldrh	r1, [r2]	@ unaligned
 15878 15dc 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 353


 15879 15de 1980     		strh	r1, [r3]	@ unaligned
 15880 15e0 9A70     		strb	r2, [r3, #2]
2069:..\src/command_processing.c **** 
2070:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 15881              		.loc 1 2070 0
 15882 15e2 D7F88830 		ldr	r3, [r7, #136]
 15883 15e6 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 15884 15ea 002B     		cmp	r3, #0
 15885 15ec 13D0     		beq	.L601
2071:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 15886              		.loc 1 2071 0
 15887 15ee 7869     		ldr	r0, [r7, #20]
 15888 15f0 FFF7FEFF 		bl	strlen
 15889 15f4 0346     		mov	r3, r0
 15890 15f6 1A46     		mov	r2, r3
 15891 15f8 7B69     		ldr	r3, [r7, #20]
 15892 15fa 1344     		add	r3, r3, r2
 15893 15fc 614A     		ldr	r2, .L651+20
 15894 15fe 1D46     		mov	r5, r3
 15895 1600 1446     		mov	r4, r2
 15896 1602 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15897 1604 2860     		str	r0, [r5]	@ unaligned
 15898 1606 6960     		str	r1, [r5, #4]	@ unaligned
 15899 1608 AA60     		str	r2, [r5, #8]	@ unaligned
 15900 160a EB60     		str	r3, [r5, #12]	@ unaligned
 15901 160c 2068     		ldr	r0, [r4]	@ unaligned
 15902 160e 2861     		str	r0, [r5, #16]	@ unaligned
 15903 1610 2379     		ldrb	r3, [r4, #4]
 15904 1612 2B75     		strb	r3, [r5, #20]
 15905 1614 10E0     		b	.L602
 15906              	.L601:
2072:..\src/command_processing.c ****         else
2073:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 15907              		.loc 1 2073 0
 15908 1616 7869     		ldr	r0, [r7, #20]
 15909 1618 FFF7FEFF 		bl	strlen
 15910 161c 0346     		mov	r3, r0
 15911 161e 1A46     		mov	r2, r3
 15912 1620 7B69     		ldr	r3, [r7, #20]
 15913 1622 1344     		add	r3, r3, r2
 15914 1624 584A     		ldr	r2, .L651+24
 15915 1626 1D46     		mov	r5, r3
 15916 1628 1446     		mov	r4, r2
 15917 162a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15918 162c 2860     		str	r0, [r5]	@ unaligned
 15919 162e 6960     		str	r1, [r5, #4]	@ unaligned
 15920 1630 AA60     		str	r2, [r5, #8]	@ unaligned
 15921 1632 EB60     		str	r3, [r5, #12]	@ unaligned
 15922 1634 2068     		ldr	r0, [r4]	@ unaligned
 15923 1636 2861     		str	r0, [r5, #16]	@ unaligned
 15924              	.L602:
2074:..\src/command_processing.c ****             
2075:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 15925              		.loc 1 2075 0
 15926 1638 D7F88830 		ldr	r3, [r7, #136]
 15927 163c 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 15928 1640 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 354


 15929 1642 17D0     		beq	.L603
2076:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 15930              		.loc 1 2076 0
 15931 1644 7869     		ldr	r0, [r7, #20]
 15932 1646 FFF7FEFF 		bl	strlen
 15933 164a 0346     		mov	r3, r0
 15934 164c 1A46     		mov	r2, r3
 15935 164e 7B69     		ldr	r3, [r7, #20]
 15936 1650 1344     		add	r3, r3, r2
 15937 1652 4E4A     		ldr	r2, .L651+28
 15938 1654 1D46     		mov	r5, r3
 15939 1656 1446     		mov	r4, r2
 15940 1658 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15941 165a 2860     		str	r0, [r5]	@ unaligned
 15942 165c 6960     		str	r1, [r5, #4]	@ unaligned
 15943 165e AA60     		str	r2, [r5, #8]	@ unaligned
 15944 1660 EB60     		str	r3, [r5, #12]	@ unaligned
 15945 1662 03CC     		ldmia	r4!, {r0, r1}
 15946 1664 2861     		str	r0, [r5, #16]	@ unaligned
 15947 1666 6961     		str	r1, [r5, #20]	@ unaligned
 15948 1668 2388     		ldrh	r3, [r4]	@ unaligned
 15949 166a A278     		ldrb	r2, [r4, #2]
 15950 166c 2B83     		strh	r3, [r5, #24]	@ unaligned
 15951 166e 1346     		mov	r3, r2
 15952 1670 AB76     		strb	r3, [r5, #26]
 15953 1672 13E0     		b	.L604
 15954              	.L603:
2077:..\src/command_processing.c ****         else
2078:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 15955              		.loc 1 2078 0
 15956 1674 7869     		ldr	r0, [r7, #20]
 15957 1676 FFF7FEFF 		bl	strlen
 15958 167a 0346     		mov	r3, r0
 15959 167c 1A46     		mov	r2, r3
 15960 167e 7B69     		ldr	r3, [r7, #20]
 15961 1680 1344     		add	r3, r3, r2
 15962 1682 434A     		ldr	r2, .L651+32
 15963 1684 1D46     		mov	r5, r3
 15964 1686 1446     		mov	r4, r2
 15965 1688 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15966 168a 2860     		str	r0, [r5]	@ unaligned
 15967 168c 6960     		str	r1, [r5, #4]	@ unaligned
 15968 168e AA60     		str	r2, [r5, #8]	@ unaligned
 15969 1690 EB60     		str	r3, [r5, #12]	@ unaligned
 15970 1692 03CC     		ldmia	r4!, {r0, r1}
 15971 1694 2861     		str	r0, [r5, #16]	@ unaligned
 15972 1696 6961     		str	r1, [r5, #20]	@ unaligned
 15973 1698 2388     		ldrh	r3, [r4]	@ unaligned
 15974 169a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15975              	.L604:
2079:..\src/command_processing.c **** 
2080:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 15976              		.loc 1 2080 0
 15977 169c D7F88830 		ldr	r3, [r7, #136]
 15978 16a0 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 15979 16a4 1A46     		mov	r2, r3
 15980 16a6 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 355


 15981 16aa 3A49     		ldr	r1, .L651+36
 15982 16ac 1846     		mov	r0, r3
 15983 16ae FFF7FEFF 		bl	sprintf
2081:..\src/command_processing.c ****         strcat(info_string, str);
 15984              		.loc 1 2081 0
 15985 16b2 07F11803 		add	r3, r7, #24
 15986 16b6 1946     		mov	r1, r3
 15987 16b8 7869     		ldr	r0, [r7, #20]
 15988 16ba FFF7FEFF 		bl	strcat
2082:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15989              		.loc 1 2082 0
 15990 16be 7869     		ldr	r0, [r7, #20]
 15991 16c0 FFF7FEFF 		bl	strlen
 15992 16c4 0346     		mov	r3, r0
 15993 16c6 1A46     		mov	r2, r3
 15994 16c8 7B69     		ldr	r3, [r7, #20]
 15995 16ca 1344     		add	r3, r3, r2
 15996 16cc 294A     		ldr	r2, .L651+4
 15997 16ce 1188     		ldrh	r1, [r2]	@ unaligned
 15998 16d0 9278     		ldrb	r2, [r2, #2]
 15999 16d2 1980     		strh	r1, [r3]	@ unaligned
 16000 16d4 9A70     		strb	r2, [r3, #2]
2083:..\src/command_processing.c **** 
2084:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16001              		.loc 1 2084 0
 16002 16d6 D7F88830 		ldr	r3, [r7, #136]
 16003 16da 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16004 16de 012B     		cmp	r3, #1
 16005 16e0 40F08980 		bne	.L605
2085:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16006              		.loc 1 2085 0
 16007 16e4 7869     		ldr	r0, [r7, #20]
 16008 16e6 FFF7FEFF 		bl	strlen
 16009 16ea 0346     		mov	r3, r0
 16010 16ec 1A46     		mov	r2, r3
 16011 16ee 7B69     		ldr	r3, [r7, #20]
 16012 16f0 1344     		add	r3, r3, r2
 16013 16f2 294A     		ldr	r2, .L651+40
 16014 16f4 1C46     		mov	r4, r3
 16015 16f6 1546     		mov	r5, r2
 16016 16f8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16017 16fa 2060     		str	r0, [r4]	@ unaligned
 16018 16fc 6160     		str	r1, [r4, #4]	@ unaligned
 16019 16fe A260     		str	r2, [r4, #8]	@ unaligned
 16020 1700 E360     		str	r3, [r4, #12]	@ unaligned
 16021 1702 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16022 1704 2061     		str	r0, [r4, #16]	@ unaligned
 16023 1706 6161     		str	r1, [r4, #20]	@ unaligned
 16024 1708 A261     		str	r2, [r4, #24]	@ unaligned
 16025 170a E361     		str	r3, [r4, #28]	@ unaligned
2086:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16026              		.loc 1 2086 0
 16027 170c 0023     		movs	r3, #0
 16028 170e C7F89430 		str	r3, [r7, #148]
 16029 1712 25E0     		b	.L606
 16030              	.L607:
2087:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 356


 16031              		.loc 1 2087 0 discriminator 3
 16032 1714 D7F89430 		ldr	r3, [r7, #148]
 16033 1718 591C     		adds	r1, r3, #1
 16034 171a 204A     		ldr	r2, .L651+44
 16035 171c D7F89430 		ldr	r3, [r7, #148]
 16036 1720 0233     		adds	r3, r3, #2
 16037 1722 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16038 1726 07F11800 		add	r0, r7, #24
 16039 172a 0A46     		mov	r2, r1
 16040 172c 1C49     		ldr	r1, .L651+48
 16041 172e FFF7FEFF 		bl	sprintf
2088:..\src/command_processing.c ****                 strcat(info_string, str);
 16042              		.loc 1 2088 0 discriminator 3
 16043 1732 07F11803 		add	r3, r7, #24
 16044 1736 1946     		mov	r1, r3
 16045 1738 7869     		ldr	r0, [r7, #20]
 16046 173a FFF7FEFF 		bl	strcat
2089:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16047              		.loc 1 2089 0 discriminator 3
 16048 173e 7869     		ldr	r0, [r7, #20]
 16049 1740 FFF7FEFF 		bl	strlen
 16050 1744 0346     		mov	r3, r0
 16051 1746 1A46     		mov	r2, r3
 16052 1748 7B69     		ldr	r3, [r7, #20]
 16053 174a 1344     		add	r3, r3, r2
 16054 174c 094A     		ldr	r2, .L651+4
 16055 174e 1188     		ldrh	r1, [r2]	@ unaligned
 16056 1750 9278     		ldrb	r2, [r2, #2]
 16057 1752 1980     		strh	r1, [r3]	@ unaligned
 16058 1754 9A70     		strb	r2, [r3, #2]
2086:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16059              		.loc 1 2086 0 discriminator 3
 16060 1756 D7F89430 		ldr	r3, [r7, #148]
 16061 175a 0133     		adds	r3, r3, #1
 16062 175c C7F89430 		str	r3, [r7, #148]
 16063              	.L606:
2086:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16064              		.loc 1 2086 0 is_stmt 0 discriminator 1
 16065 1760 D7F89430 		ldr	r3, [r7, #148]
 16066 1764 052B     		cmp	r3, #5
 16067 1766 D5DD     		ble	.L607
2090:..\src/command_processing.c ****             }
2091:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16068              		.loc 1 2091 0 is_stmt 1
 16069 1768 0023     		movs	r3, #0
 16070 176a C7F89430 		str	r3, [r7, #148]
 16071 176e 3EE0     		b	.L608
 16072              	.L652:
 16073              		.align	2
 16074              	.L651:
 16075 1770 54140000 		.word	.LC201
 16076 1774 C00D0000 		.word	.LC126
 16077 1778 70140000 		.word	.LC202
 16078 177c 84140000 		.word	.LC203
 16079 1780 A8140000 		.word	.LC204
 16080 1784 CC140000 		.word	.LC205
 16081 1788 E4140000 		.word	.LC206
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 357


 16082 178c F8140000 		.word	.LC207
 16083 1790 14150000 		.word	.LC208
 16084 1794 30150000 		.word	.LC209
 16085 1798 44150000 		.word	.LC210
 16086 179c 00000000 		.word	g_emg_meas
 16087 17a0 64150000 		.word	.LC211
 16088              	.L609:
2092:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16089              		.loc 1 2092 0 discriminator 3
 16090 17a4 D7F89430 		ldr	r3, [r7, #148]
 16091 17a8 591C     		adds	r1, r3, #1
 16092 17aa C64A     		ldr	r2, .L653
 16093 17ac D7F89430 		ldr	r3, [r7, #148]
 16094 17b0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16095 17b4 07F11800 		add	r0, r7, #24
 16096 17b8 0A46     		mov	r2, r1
 16097 17ba C349     		ldr	r1, .L653+4
 16098 17bc FFF7FEFF 		bl	sprintf
2093:..\src/command_processing.c ****                 strcat(info_string, str);
 16099              		.loc 1 2093 0 discriminator 3
 16100 17c0 07F11803 		add	r3, r7, #24
 16101 17c4 1946     		mov	r1, r3
 16102 17c6 7869     		ldr	r0, [r7, #20]
 16103 17c8 FFF7FEFF 		bl	strcat
2094:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16104              		.loc 1 2094 0 discriminator 3
 16105 17cc 7869     		ldr	r0, [r7, #20]
 16106 17ce FFF7FEFF 		bl	strlen
 16107 17d2 0346     		mov	r3, r0
 16108 17d4 1A46     		mov	r2, r3
 16109 17d6 7B69     		ldr	r3, [r7, #20]
 16110 17d8 1344     		add	r3, r3, r2
 16111 17da BC4A     		ldr	r2, .L653+8
 16112 17dc 1188     		ldrh	r1, [r2]	@ unaligned
 16113 17de 9278     		ldrb	r2, [r2, #2]
 16114 17e0 1980     		strh	r1, [r3]	@ unaligned
 16115 17e2 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16116              		.loc 1 2091 0 discriminator 3
 16117 17e4 D7F89430 		ldr	r3, [r7, #148]
 16118 17e8 0133     		adds	r3, r3, #1
 16119 17ea C7F89430 		str	r3, [r7, #148]
 16120              	.L608:
2091:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16121              		.loc 1 2091 0 is_stmt 0 discriminator 1
 16122 17ee D7F89430 		ldr	r3, [r7, #148]
 16123 17f2 012B     		cmp	r3, #1
 16124 17f4 D6DD     		ble	.L609
 16125              	.L605:
2095:..\src/command_processing.c ****             }
2096:..\src/command_processing.c ****         }
2097:..\src/command_processing.c ****         
2098:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16126              		.loc 1 2098 0 is_stmt 1
 16127 17f6 D7F88830 		ldr	r3, [r7, #136]
 16128 17fa 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16129 17fe 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 358


 16130 1800 63D0     		beq	.L610
2099:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16131              		.loc 1 2099 0
 16132 1802 D7F88830 		ldr	r3, [r7, #136]
 16133 1806 D3F8A422 		ldr	r2, [r3, #676]
 16134 180a 07F11803 		add	r3, r7, #24
 16135 180e B049     		ldr	r1, .L653+12
 16136 1810 1846     		mov	r0, r3
 16137 1812 FFF7FEFF 		bl	sprintf
2100:..\src/command_processing.c ****             strcat(info_string, str);
 16138              		.loc 1 2100 0
 16139 1816 07F11803 		add	r3, r7, #24
 16140 181a 1946     		mov	r1, r3
 16141 181c 7869     		ldr	r0, [r7, #20]
 16142 181e FFF7FEFF 		bl	strcat
2101:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16143              		.loc 1 2101 0
 16144 1822 7869     		ldr	r0, [r7, #20]
 16145 1824 FFF7FEFF 		bl	strlen
 16146 1828 0346     		mov	r3, r0
 16147 182a 1A46     		mov	r2, r3
 16148 182c 7B69     		ldr	r3, [r7, #20]
 16149 182e 1344     		add	r3, r3, r2
 16150 1830 A64A     		ldr	r2, .L653+8
 16151 1832 1188     		ldrh	r1, [r2]	@ unaligned
 16152 1834 9278     		ldrb	r2, [r2, #2]
 16153 1836 1980     		strh	r1, [r3]	@ unaligned
 16154 1838 9A70     		strb	r2, [r3, #2]
2102:..\src/command_processing.c ****             
2103:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16155              		.loc 1 2103 0
 16156 183a D7F88830 		ldr	r3, [r7, #136]
 16157 183e D3F8A822 		ldr	r2, [r3, #680]
 16158 1842 07F11803 		add	r3, r7, #24
 16159 1846 A349     		ldr	r1, .L653+16
 16160 1848 1846     		mov	r0, r3
 16161 184a FFF7FEFF 		bl	sprintf
2104:..\src/command_processing.c ****             strcat(info_string, str);
 16162              		.loc 1 2104 0
 16163 184e 07F11803 		add	r3, r7, #24
 16164 1852 1946     		mov	r1, r3
 16165 1854 7869     		ldr	r0, [r7, #20]
 16166 1856 FFF7FEFF 		bl	strcat
2105:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16167              		.loc 1 2105 0
 16168 185a 7869     		ldr	r0, [r7, #20]
 16169 185c FFF7FEFF 		bl	strlen
 16170 1860 0346     		mov	r3, r0
 16171 1862 1A46     		mov	r2, r3
 16172 1864 7B69     		ldr	r3, [r7, #20]
 16173 1866 1344     		add	r3, r3, r2
 16174 1868 984A     		ldr	r2, .L653+8
 16175 186a 1188     		ldrh	r1, [r2]	@ unaligned
 16176 186c 9278     		ldrb	r2, [r2, #2]
 16177 186e 1980     		strh	r1, [r3]	@ unaligned
 16178 1870 9A70     		strb	r2, [r3, #2]
2106:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 359


2107:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16179              		.loc 1 2107 0
 16180 1872 D7F88830 		ldr	r3, [r7, #136]
 16181 1876 D3F8A022 		ldr	r2, [r3, #672]
 16182 187a D7F88830 		ldr	r3, [r7, #136]
 16183 187e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16184 1882 1846     		mov	r0, r3
 16185 1884 D7F88810 		ldr	r1, [r7, #136]
 16186 1888 0346     		mov	r3, r0
 16187 188a 5B00     		lsls	r3, r3, #1
 16188 188c 0344     		add	r3, r3, r0
 16189 188e 1B01     		lsls	r3, r3, #4
 16190 1890 0B44     		add	r3, r3, r1
 16191 1892 03F29513 		addw	r3, r3, #405
 16192 1896 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16193 1898 1A41     		asrs	r2, r2, r3
 16194 189a 07F11803 		add	r3, r7, #24
 16195 189e 8E49     		ldr	r1, .L653+20
 16196 18a0 1846     		mov	r0, r3
 16197 18a2 FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****             strcat(info_string, str);
 16198              		.loc 1 2108 0
 16199 18a6 07F11803 		add	r3, r7, #24
 16200 18aa 1946     		mov	r1, r3
 16201 18ac 7869     		ldr	r0, [r7, #20]
 16202 18ae FFF7FEFF 		bl	strcat
2109:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16203              		.loc 1 2109 0
 16204 18b2 7869     		ldr	r0, [r7, #20]
 16205 18b4 FFF7FEFF 		bl	strlen
 16206 18b8 0346     		mov	r3, r0
 16207 18ba 1A46     		mov	r2, r3
 16208 18bc 7B69     		ldr	r3, [r7, #20]
 16209 18be 1344     		add	r3, r3, r2
 16210 18c0 824A     		ldr	r2, .L653+8
 16211 18c2 1188     		ldrh	r1, [r2]	@ unaligned
 16212 18c4 9278     		ldrb	r2, [r2, #2]
 16213 18c6 1980     		strh	r1, [r3]	@ unaligned
 16214 18c8 9A70     		strb	r2, [r3, #2]
 16215              	.L610:
2110:..\src/command_processing.c ****         }
2111:..\src/command_processing.c **** 
2112:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16216              		.loc 1 2112 0
 16217 18ca D7F88830 		ldr	r3, [r7, #136]
 16218 18ce 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16219 18d2 002B     		cmp	r3, #0
 16220 18d4 00F0CF81 		beq	.L611
2113:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16221              		.loc 1 2113 0
 16222 18d8 804B     		ldr	r3, .L653+24
 16223 18da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16224 18dc 1A46     		mov	r2, r3
 16225 18de 07F11803 		add	r3, r7, #24
 16226 18e2 7F49     		ldr	r1, .L653+28
 16227 18e4 1846     		mov	r0, r3
 16228 18e6 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 360


2114:..\src/command_processing.c ****             strcat(info_string, str);
 16229              		.loc 1 2114 0
 16230 18ea 07F11803 		add	r3, r7, #24
 16231 18ee 1946     		mov	r1, r3
 16232 18f0 7869     		ldr	r0, [r7, #20]
 16233 18f2 FFF7FEFF 		bl	strcat
2115:..\src/command_processing.c ****             
2116:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16234              		.loc 1 2116 0
 16235 18f6 7869     		ldr	r0, [r7, #20]
 16236 18f8 FFF7FEFF 		bl	strlen
 16237 18fc 0346     		mov	r3, r0
 16238 18fe 1A46     		mov	r2, r3
 16239 1900 7B69     		ldr	r3, [r7, #20]
 16240 1902 1344     		add	r3, r3, r2
 16241 1904 714A     		ldr	r2, .L653+8
 16242 1906 1188     		ldrh	r1, [r2]	@ unaligned
 16243 1908 9278     		ldrb	r2, [r2, #2]
 16244 190a 1980     		strh	r1, [r3]	@ unaligned
 16245 190c 9A70     		strb	r2, [r3, #2]
2117:..\src/command_processing.c ****             
2118:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16246              		.loc 1 2118 0
 16247 190e 7869     		ldr	r0, [r7, #20]
 16248 1910 FFF7FEFF 		bl	strlen
 16249 1914 0346     		mov	r3, r0
 16250 1916 1A46     		mov	r2, r3
 16251 1918 7B69     		ldr	r3, [r7, #20]
 16252 191a 1344     		add	r3, r3, r2
 16253 191c 714A     		ldr	r2, .L653+32
 16254 191e 1D46     		mov	r5, r3
 16255 1920 1446     		mov	r4, r2
 16256 1922 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16257 1924 2860     		str	r0, [r5]	@ unaligned
 16258 1926 6960     		str	r1, [r5, #4]	@ unaligned
 16259 1928 AA60     		str	r2, [r5, #8]	@ unaligned
 16260 192a EB60     		str	r3, [r5, #12]	@ unaligned
 16261 192c 2068     		ldr	r0, [r4]	@ unaligned
 16262 192e 2861     		str	r0, [r5, #16]	@ unaligned
 16263 1930 2379     		ldrb	r3, [r4, #4]
 16264 1932 2B75     		strb	r3, [r5, #20]
2119:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16265              		.loc 1 2119 0
 16266 1934 0023     		movs	r3, #0
 16267 1936 C7F89430 		str	r3, [r7, #148]
 16268 193a 85E1     		b	.L612
 16269              	.L623:
2120:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16270              		.loc 1 2120 0
 16271 193c 6A4A     		ldr	r2, .L653+36
 16272 193e D7F89430 		ldr	r3, [r7, #148]
 16273 1942 1344     		add	r3, r3, r2
 16274 1944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16275 1946 07F11800 		add	r0, r7, #24
 16276 194a D7F89420 		ldr	r2, [r7, #148]
 16277 194e 6749     		ldr	r1, .L653+40
 16278 1950 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 361


2121:..\src/command_processing.c ****                 strcat(info_string, str);
 16279              		.loc 1 2121 0
 16280 1954 07F11803 		add	r3, r7, #24
 16281 1958 1946     		mov	r1, r3
 16282 195a 7869     		ldr	r0, [r7, #20]
 16283 195c FFF7FEFF 		bl	strcat
2122:..\src/command_processing.c ****                 
2123:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16284              		.loc 1 2123 0
 16285 1960 07F11803 		add	r3, r7, #24
 16286 1964 624A     		ldr	r2, .L653+44
 16287 1966 1C46     		mov	r4, r3
 16288 1968 1546     		mov	r5, r2
 16289 196a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16290 196c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16291 196e 2B68     		ldr	r3, [r5]
 16292 1970 2380     		strh	r3, [r4]	@ movhi
2124:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16293              		.loc 1 2124 0
 16294 1972 5D4A     		ldr	r2, .L653+36
 16295 1974 D7F89430 		ldr	r3, [r7, #148]
 16296 1978 1344     		add	r3, r3, r2
 16297 197a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16298 197c 1946     		mov	r1, r3
 16299 197e D7F88820 		ldr	r2, [r7, #136]
 16300 1982 0B46     		mov	r3, r1
 16301 1984 9B00     		lsls	r3, r3, #2
 16302 1986 0B44     		add	r3, r3, r1
 16303 1988 1344     		add	r3, r3, r2
 16304 198a 03F20223 		addw	r3, r3, #514
 16305 198e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16306 1990 002B     		cmp	r3, #0
 16307 1992 0FD0     		beq	.L613
2125:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16308              		.loc 1 2125 0
 16309 1994 07F11803 		add	r3, r7, #24
 16310 1998 1846     		mov	r0, r3
 16311 199a FFF7FEFF 		bl	strlen
 16312 199e 0346     		mov	r3, r0
 16313 19a0 1A46     		mov	r2, r3
 16314 19a2 07F11803 		add	r3, r7, #24
 16315 19a6 1344     		add	r3, r3, r2
 16316 19a8 524A     		ldr	r2, .L653+48
 16317 19aa 1068     		ldr	r0, [r2]	@ unaligned
 16318 19ac 1860     		str	r0, [r3]	@ unaligned
 16319 19ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16320 19b0 9A80     		strh	r2, [r3, #4]	@ unaligned
 16321 19b2 0EE0     		b	.L614
 16322              	.L613:
2126:..\src/command_processing.c ****                 else
2127:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16323              		.loc 1 2127 0
 16324 19b4 07F11803 		add	r3, r7, #24
 16325 19b8 1846     		mov	r0, r3
 16326 19ba FFF7FEFF 		bl	strlen
 16327 19be 0346     		mov	r3, r0
 16328 19c0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 362


 16329 19c2 07F11803 		add	r3, r7, #24
 16330 19c6 1344     		add	r3, r3, r2
 16331 19c8 4B4A     		ldr	r2, .L653+52
 16332 19ca 1068     		ldr	r0, [r2]	@ unaligned
 16333 19cc 1860     		str	r0, [r3]	@ unaligned
 16334 19ce 1279     		ldrb	r2, [r2, #4]
 16335 19d0 1A71     		strb	r2, [r3, #4]
 16336              	.L614:
2128:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16337              		.loc 1 2128 0
 16338 19d2 07F11803 		add	r3, r7, #24
 16339 19d6 1846     		mov	r0, r3
 16340 19d8 FFF7FEFF 		bl	strlen
 16341 19dc 0346     		mov	r3, r0
 16342 19de 1A46     		mov	r2, r3
 16343 19e0 07F11803 		add	r3, r7, #24
 16344 19e4 1344     		add	r3, r3, r2
 16345 19e6 454A     		ldr	r2, .L653+56
 16346 19e8 1C46     		mov	r4, r3
 16347 19ea 1346     		mov	r3, r2
 16348 19ec 07CB     		ldmia	r3!, {r0, r1, r2}
 16349 19ee 2060     		str	r0, [r4]	@ unaligned
 16350 19f0 6160     		str	r1, [r4, #4]	@ unaligned
 16351 19f2 A260     		str	r2, [r4, #8]	@ unaligned
 16352 19f4 1B88     		ldrh	r3, [r3]	@ unaligned
 16353 19f6 A381     		strh	r3, [r4, #12]	@ unaligned
2129:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16354              		.loc 1 2129 0
 16355 19f8 3B4A     		ldr	r2, .L653+36
 16356 19fa D7F89430 		ldr	r3, [r7, #148]
 16357 19fe 1344     		add	r3, r3, r2
 16358 1a00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16359 1a02 1946     		mov	r1, r3
 16360 1a04 D7F88820 		ldr	r2, [r7, #136]
 16361 1a08 0B46     		mov	r3, r1
 16362 1a0a 9B00     		lsls	r3, r3, #2
 16363 1a0c 0B44     		add	r3, r3, r1
 16364 1a0e 1344     		add	r3, r3, r2
 16365 1a10 03F20323 		addw	r3, r3, #515
 16366 1a14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16367 1a16 002B     		cmp	r3, #0
 16368 1a18 0FD0     		beq	.L615
2130:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16369              		.loc 1 2130 0
 16370 1a1a 07F11803 		add	r3, r7, #24
 16371 1a1e 1846     		mov	r0, r3
 16372 1a20 FFF7FEFF 		bl	strlen
 16373 1a24 0346     		mov	r3, r0
 16374 1a26 1A46     		mov	r2, r3
 16375 1a28 07F11803 		add	r3, r7, #24
 16376 1a2c 1344     		add	r3, r3, r2
 16377 1a2e 314A     		ldr	r2, .L653+48
 16378 1a30 1068     		ldr	r0, [r2]	@ unaligned
 16379 1a32 1860     		str	r0, [r3]	@ unaligned
 16380 1a34 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16381 1a36 9A80     		strh	r2, [r3, #4]	@ unaligned
 16382 1a38 0EE0     		b	.L616
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 363


 16383              	.L615:
2131:..\src/command_processing.c ****                 else
2132:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16384              		.loc 1 2132 0
 16385 1a3a 07F11803 		add	r3, r7, #24
 16386 1a3e 1846     		mov	r0, r3
 16387 1a40 FFF7FEFF 		bl	strlen
 16388 1a44 0346     		mov	r3, r0
 16389 1a46 1A46     		mov	r2, r3
 16390 1a48 07F11803 		add	r3, r7, #24
 16391 1a4c 1344     		add	r3, r3, r2
 16392 1a4e 2A4A     		ldr	r2, .L653+52
 16393 1a50 1068     		ldr	r0, [r2]	@ unaligned
 16394 1a52 1860     		str	r0, [r3]	@ unaligned
 16395 1a54 1279     		ldrb	r2, [r2, #4]
 16396 1a56 1A71     		strb	r2, [r3, #4]
 16397              	.L616:
2133:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16398              		.loc 1 2133 0
 16399 1a58 07F11803 		add	r3, r7, #24
 16400 1a5c 1846     		mov	r0, r3
 16401 1a5e FFF7FEFF 		bl	strlen
 16402 1a62 0346     		mov	r3, r0
 16403 1a64 1A46     		mov	r2, r3
 16404 1a66 07F11803 		add	r3, r7, #24
 16405 1a6a 1344     		add	r3, r3, r2
 16406 1a6c 244A     		ldr	r2, .L653+60
 16407 1a6e 1D46     		mov	r5, r3
 16408 1a70 1446     		mov	r4, r2
 16409 1a72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16410 1a74 2860     		str	r0, [r5]	@ unaligned
 16411 1a76 6960     		str	r1, [r5, #4]	@ unaligned
 16412 1a78 AA60     		str	r2, [r5, #8]	@ unaligned
 16413 1a7a EB60     		str	r3, [r5, #12]	@ unaligned
 16414 1a7c 2378     		ldrb	r3, [r4]
 16415 1a7e 2B74     		strb	r3, [r5, #16]
2134:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16416              		.loc 1 2134 0
 16417 1a80 194A     		ldr	r2, .L653+36
 16418 1a82 D7F89430 		ldr	r3, [r7, #148]
 16419 1a86 1344     		add	r3, r3, r2
 16420 1a88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16421 1a8a 1946     		mov	r1, r3
 16422 1a8c D7F88820 		ldr	r2, [r7, #136]
 16423 1a90 0B46     		mov	r3, r1
 16424 1a92 9B00     		lsls	r3, r3, #2
 16425 1a94 0B44     		add	r3, r3, r1
 16426 1a96 1344     		add	r3, r3, r2
 16427 1a98 03F50173 		add	r3, r3, #516
 16428 1a9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16429 1a9e 002B     		cmp	r3, #0
 16430 1aa0 30D0     		beq	.L617
2135:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16431              		.loc 1 2135 0
 16432 1aa2 07F11803 		add	r3, r7, #24
 16433 1aa6 1846     		mov	r0, r3
 16434 1aa8 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 364


 16435 1aac 0346     		mov	r3, r0
 16436 1aae 1A46     		mov	r2, r3
 16437 1ab0 07F11803 		add	r3, r7, #24
 16438 1ab4 1344     		add	r3, r3, r2
 16439 1ab6 0F4A     		ldr	r2, .L653+48
 16440 1ab8 1068     		ldr	r0, [r2]	@ unaligned
 16441 1aba 1860     		str	r0, [r3]	@ unaligned
 16442 1abc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16443 1abe 9A80     		strh	r2, [r3, #4]	@ unaligned
 16444 1ac0 2FE0     		b	.L618
 16445              	.L654:
 16446 1ac2 00BF     		.align	2
 16447              	.L653:
 16448 1ac4 00000000 		.word	g_emg_meas
 16449 1ac8 74150000 		.word	.LC212
 16450 1acc C00D0000 		.word	.LC126
 16451 1ad0 88150000 		.word	.LC213
 16452 1ad4 A4150000 		.word	.LC214
 16453 1ad8 CC150000 		.word	.LC215
 16454 1adc 00000000 		.word	N_IMU_Connected
 16455 1ae0 E0150000 		.word	.LC216
 16456 1ae4 F4150000 		.word	.LC217
 16457 1ae8 00000000 		.word	IMU_connected
 16458 1aec 0C160000 		.word	.LC218
 16459 1af0 20160000 		.word	.LC219
 16460 1af4 140F0000 		.word	.LC146
 16461 1af8 1C0F0000 		.word	.LC147
 16462 1afc 34160000 		.word	.LC220
 16463 1b00 44160000 		.word	.LC221
 16464              	.L617:
2136:..\src/command_processing.c ****                 else
2137:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16465              		.loc 1 2137 0
 16466 1b04 07F11803 		add	r3, r7, #24
 16467 1b08 1846     		mov	r0, r3
 16468 1b0a FFF7FEFF 		bl	strlen
 16469 1b0e 0346     		mov	r3, r0
 16470 1b10 1A46     		mov	r2, r3
 16471 1b12 07F11803 		add	r3, r7, #24
 16472 1b16 1344     		add	r3, r3, r2
 16473 1b18 CD4A     		ldr	r2, .L655
 16474 1b1a 1068     		ldr	r0, [r2]	@ unaligned
 16475 1b1c 1860     		str	r0, [r3]	@ unaligned
 16476 1b1e 1279     		ldrb	r2, [r2, #4]
 16477 1b20 1A71     		strb	r2, [r3, #4]
 16478              	.L618:
2138:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 16479              		.loc 1 2138 0
 16480 1b22 07F11803 		add	r3, r7, #24
 16481 1b26 1846     		mov	r0, r3
 16482 1b28 FFF7FEFF 		bl	strlen
 16483 1b2c 0346     		mov	r3, r0
 16484 1b2e 1A46     		mov	r2, r3
 16485 1b30 07F11803 		add	r3, r7, #24
 16486 1b34 1344     		add	r3, r3, r2
 16487 1b36 C74A     		ldr	r2, .L655+4
 16488 1b38 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 365


 16489 1b3a 1346     		mov	r3, r2
 16490 1b3c 07CB     		ldmia	r3!, {r0, r1, r2}
 16491 1b3e 2060     		str	r0, [r4]	@ unaligned
 16492 1b40 6160     		str	r1, [r4, #4]	@ unaligned
 16493 1b42 A260     		str	r2, [r4, #8]	@ unaligned
 16494 1b44 1B88     		ldrh	r3, [r3]	@ unaligned
 16495 1b46 A381     		strh	r3, [r4, #12]	@ unaligned
2139:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16496              		.loc 1 2139 0
 16497 1b48 C34A     		ldr	r2, .L655+8
 16498 1b4a D7F89430 		ldr	r3, [r7, #148]
 16499 1b4e 1344     		add	r3, r3, r2
 16500 1b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16501 1b52 1946     		mov	r1, r3
 16502 1b54 D7F88820 		ldr	r2, [r7, #136]
 16503 1b58 0B46     		mov	r3, r1
 16504 1b5a 9B00     		lsls	r3, r3, #2
 16505 1b5c 0B44     		add	r3, r3, r1
 16506 1b5e 1344     		add	r3, r3, r2
 16507 1b60 03F20523 		addw	r3, r3, #517
 16508 1b64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16509 1b66 002B     		cmp	r3, #0
 16510 1b68 0FD0     		beq	.L619
2140:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16511              		.loc 1 2140 0
 16512 1b6a 07F11803 		add	r3, r7, #24
 16513 1b6e 1846     		mov	r0, r3
 16514 1b70 FFF7FEFF 		bl	strlen
 16515 1b74 0346     		mov	r3, r0
 16516 1b76 1A46     		mov	r2, r3
 16517 1b78 07F11803 		add	r3, r7, #24
 16518 1b7c 1344     		add	r3, r3, r2
 16519 1b7e B74A     		ldr	r2, .L655+12
 16520 1b80 1068     		ldr	r0, [r2]	@ unaligned
 16521 1b82 1860     		str	r0, [r3]	@ unaligned
 16522 1b84 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16523 1b86 9A80     		strh	r2, [r3, #4]	@ unaligned
 16524 1b88 0EE0     		b	.L620
 16525              	.L619:
2141:..\src/command_processing.c ****                 else
2142:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16526              		.loc 1 2142 0
 16527 1b8a 07F11803 		add	r3, r7, #24
 16528 1b8e 1846     		mov	r0, r3
 16529 1b90 FFF7FEFF 		bl	strlen
 16530 1b94 0346     		mov	r3, r0
 16531 1b96 1A46     		mov	r2, r3
 16532 1b98 07F11803 		add	r3, r7, #24
 16533 1b9c 1344     		add	r3, r3, r2
 16534 1b9e AC4A     		ldr	r2, .L655
 16535 1ba0 1068     		ldr	r0, [r2]	@ unaligned
 16536 1ba2 1860     		str	r0, [r3]	@ unaligned
 16537 1ba4 1279     		ldrb	r2, [r2, #4]
 16538 1ba6 1A71     		strb	r2, [r3, #4]
 16539              	.L620:
2143:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16540              		.loc 1 2143 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 366


 16541 1ba8 07F11803 		add	r3, r7, #24
 16542 1bac 1846     		mov	r0, r3
 16543 1bae FFF7FEFF 		bl	strlen
 16544 1bb2 0346     		mov	r3, r0
 16545 1bb4 1A46     		mov	r2, r3
 16546 1bb6 07F11803 		add	r3, r7, #24
 16547 1bba 1344     		add	r3, r3, r2
 16548 1bbc A84A     		ldr	r2, .L655+16
 16549 1bbe 1C46     		mov	r4, r3
 16550 1bc0 1346     		mov	r3, r2
 16551 1bc2 07CB     		ldmia	r3!, {r0, r1, r2}
 16552 1bc4 2060     		str	r0, [r4]	@ unaligned
 16553 1bc6 6160     		str	r1, [r4, #4]	@ unaligned
 16554 1bc8 A260     		str	r2, [r4, #8]	@ unaligned
 16555 1bca 1A88     		ldrh	r2, [r3]	@ unaligned
 16556 1bcc 9B78     		ldrb	r3, [r3, #2]
 16557 1bce A281     		strh	r2, [r4, #12]	@ unaligned
 16558 1bd0 A373     		strb	r3, [r4, #14]
2144:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16559              		.loc 1 2144 0
 16560 1bd2 A14A     		ldr	r2, .L655+8
 16561 1bd4 D7F89430 		ldr	r3, [r7, #148]
 16562 1bd8 1344     		add	r3, r3, r2
 16563 1bda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16564 1bdc 1946     		mov	r1, r3
 16565 1bde D7F88820 		ldr	r2, [r7, #136]
 16566 1be2 0B46     		mov	r3, r1
 16567 1be4 9B00     		lsls	r3, r3, #2
 16568 1be6 0B44     		add	r3, r3, r1
 16569 1be8 1344     		add	r3, r3, r2
 16570 1bea 03F20623 		addw	r3, r3, #518
 16571 1bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16572 1bf0 002B     		cmp	r3, #0
 16573 1bf2 0FD0     		beq	.L621
2145:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16574              		.loc 1 2145 0
 16575 1bf4 07F11803 		add	r3, r7, #24
 16576 1bf8 1846     		mov	r0, r3
 16577 1bfa FFF7FEFF 		bl	strlen
 16578 1bfe 0346     		mov	r3, r0
 16579 1c00 1A46     		mov	r2, r3
 16580 1c02 07F11803 		add	r3, r7, #24
 16581 1c06 1344     		add	r3, r3, r2
 16582 1c08 944A     		ldr	r2, .L655+12
 16583 1c0a 1068     		ldr	r0, [r2]	@ unaligned
 16584 1c0c 1860     		str	r0, [r3]	@ unaligned
 16585 1c0e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16586 1c10 9A80     		strh	r2, [r3, #4]	@ unaligned
 16587 1c12 0EE0     		b	.L622
 16588              	.L621:
2146:..\src/command_processing.c ****                 else
2147:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16589              		.loc 1 2147 0
 16590 1c14 07F11803 		add	r3, r7, #24
 16591 1c18 1846     		mov	r0, r3
 16592 1c1a FFF7FEFF 		bl	strlen
 16593 1c1e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 367


 16594 1c20 1A46     		mov	r2, r3
 16595 1c22 07F11803 		add	r3, r7, #24
 16596 1c26 1344     		add	r3, r3, r2
 16597 1c28 894A     		ldr	r2, .L655
 16598 1c2a 1068     		ldr	r0, [r2]	@ unaligned
 16599 1c2c 1860     		str	r0, [r3]	@ unaligned
 16600 1c2e 1279     		ldrb	r2, [r2, #4]
 16601 1c30 1A71     		strb	r2, [r3, #4]
 16602              	.L622:
2148:..\src/command_processing.c ****                      
2149:..\src/command_processing.c ****                 strcat(info_string, str);
 16603              		.loc 1 2149 0 discriminator 2
 16604 1c32 07F11803 		add	r3, r7, #24
 16605 1c36 1946     		mov	r1, r3
 16606 1c38 7869     		ldr	r0, [r7, #20]
 16607 1c3a FFF7FEFF 		bl	strcat
2119:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16608              		.loc 1 2119 0 discriminator 2
 16609 1c3e D7F89430 		ldr	r3, [r7, #148]
 16610 1c42 0133     		adds	r3, r3, #1
 16611 1c44 C7F89430 		str	r3, [r7, #148]
 16612              	.L612:
2119:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16613              		.loc 1 2119 0 is_stmt 0 discriminator 1
 16614 1c48 864B     		ldr	r3, .L655+20
 16615 1c4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16616 1c4c 1A46     		mov	r2, r3
 16617 1c4e D7F89430 		ldr	r3, [r7, #148]
 16618 1c52 9A42     		cmp	r2, r3
 16619 1c54 3FF772AE 		bgt	.L623
2150:..\src/command_processing.c ****             }       
2151:..\src/command_processing.c ****             
2152:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16620              		.loc 1 2152 0 is_stmt 1
 16621 1c58 7869     		ldr	r0, [r7, #20]
 16622 1c5a FFF7FEFF 		bl	strlen
 16623 1c5e 0346     		mov	r3, r0
 16624 1c60 1A46     		mov	r2, r3
 16625 1c62 7B69     		ldr	r3, [r7, #20]
 16626 1c64 1344     		add	r3, r3, r2
 16627 1c66 804A     		ldr	r2, .L655+24
 16628 1c68 1188     		ldrh	r1, [r2]	@ unaligned
 16629 1c6a 9278     		ldrb	r2, [r2, #2]
 16630 1c6c 1980     		strh	r1, [r3]	@ unaligned
 16631 1c6e 9A70     		strb	r2, [r3, #2]
2153:..\src/command_processing.c ****           
2154:..\src/command_processing.c ****             IMU_reading_info(info_string);
 16632              		.loc 1 2154 0
 16633 1c70 7869     		ldr	r0, [r7, #20]
 16634 1c72 FFF7FEFF 		bl	IMU_reading_info
 16635              	.L611:
2155:..\src/command_processing.c ****         }
2156:..\src/command_processing.c ****         
2157:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16636              		.loc 1 2157 0
 16637 1c76 7869     		ldr	r0, [r7, #20]
 16638 1c78 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 368


 16639 1c7c 0346     		mov	r3, r0
 16640 1c7e 1A46     		mov	r2, r3
 16641 1c80 7B69     		ldr	r3, [r7, #20]
 16642 1c82 1344     		add	r3, r3, r2
 16643 1c84 784A     		ldr	r2, .L655+24
 16644 1c86 1188     		ldrh	r1, [r2]	@ unaligned
 16645 1c88 9278     		ldrb	r2, [r2, #2]
 16646 1c8a 1980     		strh	r1, [r3]	@ unaligned
 16647 1c8c 9A70     		strb	r2, [r3, #2]
2158:..\src/command_processing.c **** 
2159:..\src/command_processing.c **** #ifdef GENERIC_FW   
2160:..\src/command_processing.c ****         int j;
2161:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 16648              		.loc 1 2161 0
 16649 1c8e 7869     		ldr	r0, [r7, #20]
 16650 1c90 FFF7FEFF 		bl	strlen
 16651 1c94 0346     		mov	r3, r0
 16652 1c96 1A46     		mov	r2, r3
 16653 1c98 7B69     		ldr	r3, [r7, #20]
 16654 1c9a 1344     		add	r3, r3, r2
 16655 1c9c 734A     		ldr	r2, .L655+28
 16656 1c9e 1D46     		mov	r5, r3
 16657 1ca0 1446     		mov	r4, r2
 16658 1ca2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16659 1ca4 2860     		str	r0, [r5]	@ unaligned
 16660 1ca6 6960     		str	r1, [r5, #4]	@ unaligned
 16661 1ca8 AA60     		str	r2, [r5, #8]	@ unaligned
 16662 1caa EB60     		str	r3, [r5, #12]	@ unaligned
 16663 1cac 03CC     		ldmia	r4!, {r0, r1}
 16664 1cae 2861     		str	r0, [r5, #16]	@ unaligned
 16665 1cb0 6961     		str	r1, [r5, #20]	@ unaligned
2162:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 16666              		.loc 1 2162 0
 16667 1cb2 0023     		movs	r3, #0
 16668 1cb4 C7F89430 		str	r3, [r7, #148]
 16669 1cb8 A1E0     		b	.L624
 16670              	.L633:
2163:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16671              		.loc 1 2163 0
 16672 1cba 6D4A     		ldr	r2, .L655+32
 16673 1cbc D7F89430 		ldr	r3, [r7, #148]
 16674 1cc0 1344     		add	r3, r3, r2
 16675 1cc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16676 1cc4 07F11800 		add	r0, r7, #24
 16677 1cc8 D7F89420 		ldr	r2, [r7, #148]
 16678 1ccc 6949     		ldr	r1, .L655+36
 16679 1cce FFF7FEFF 		bl	sprintf
2164:..\src/command_processing.c ****             strcat(info_string, str);
 16680              		.loc 1 2164 0
 16681 1cd2 07F11803 		add	r3, r7, #24
 16682 1cd6 1946     		mov	r1, r3
 16683 1cd8 7869     		ldr	r0, [r7, #20]
 16684 1cda FFF7FEFF 		bl	strcat
2165:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 16685              		.loc 1 2165 0
 16686 1cde D7F88830 		ldr	r3, [r7, #136]
 16687 1ce2 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 369


 16688 1ce6 1A46     		mov	r2, r3
 16689 1ce8 D7F89430 		ldr	r3, [r7, #148]
 16690 1cec 9A42     		cmp	r2, r3
 16691 1cee 14D1     		bne	.L625
2166:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 16692              		.loc 1 2166 0
 16693 1cf0 D7F88830 		ldr	r3, [r7, #136]
 16694 1cf4 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16695 1cf8 002B     		cmp	r3, #0
 16696 1cfa 01D0     		beq	.L626
 16697              		.loc 1 2166 0 is_stmt 0 discriminator 1
 16698 1cfc 5E4A     		ldr	r2, .L655+40
 16699 1cfe 00E0     		b	.L627
 16700              	.L626:
 16701              		.loc 1 2166 0 discriminator 2
 16702 1d00 5E4A     		ldr	r2, .L655+44
 16703              	.L627:
 16704              		.loc 1 2166 0 discriminator 4
 16705 1d02 07F11803 		add	r3, r7, #24
 16706 1d06 5E49     		ldr	r1, .L655+48
 16707 1d08 1846     		mov	r0, r3
 16708 1d0a FFF7FEFF 		bl	sprintf
2167:..\src/command_processing.c ****                 strcat(info_string, str);
 16709              		.loc 1 2167 0 is_stmt 1 discriminator 4
 16710 1d0e 07F11803 		add	r3, r7, #24
 16711 1d12 1946     		mov	r1, r3
 16712 1d14 7869     		ldr	r0, [r7, #20]
 16713 1d16 FFF7FEFF 		bl	strcat
 16714              	.L625:
2168:..\src/command_processing.c ****             }
2169:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16715              		.loc 1 2169 0
 16716 1d1a 7869     		ldr	r0, [r7, #20]
 16717 1d1c FFF7FEFF 		bl	strlen
 16718 1d20 0346     		mov	r3, r0
 16719 1d22 1A46     		mov	r2, r3
 16720 1d24 7B69     		ldr	r3, [r7, #20]
 16721 1d26 1344     		add	r3, r3, r2
 16722 1d28 4F4A     		ldr	r2, .L655+24
 16723 1d2a 1188     		ldrh	r1, [r2]	@ unaligned
 16724 1d2c 9278     		ldrb	r2, [r2, #2]
 16725 1d2e 1980     		strh	r1, [r3]	@ unaligned
 16726 1d30 9A70     		strb	r2, [r3, #2]
2170:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 16727              		.loc 1 2170 0
 16728 1d32 4F4A     		ldr	r2, .L655+32
 16729 1d34 D7F89430 		ldr	r3, [r7, #148]
 16730 1d38 1344     		add	r3, r3, r2
 16731 1d3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16732 1d3c 002B     		cmp	r3, #0
 16733 1d3e 59D0     		beq	.L628
2171:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 16734              		.loc 1 2171 0
 16735 1d40 7869     		ldr	r0, [r7, #20]
 16736 1d42 FFF7FEFF 		bl	strlen
 16737 1d46 0346     		mov	r3, r0
 16738 1d48 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 370


 16739 1d4a 7B69     		ldr	r3, [r7, #20]
 16740 1d4c 1344     		add	r3, r3, r2
 16741 1d4e 4D4A     		ldr	r2, .L655+52
 16742 1d50 1D46     		mov	r5, r3
 16743 1d52 1446     		mov	r4, r2
 16744 1d54 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16745 1d56 2860     		str	r0, [r5]	@ unaligned
 16746 1d58 6960     		str	r1, [r5, #4]	@ unaligned
 16747 1d5a AA60     		str	r2, [r5, #8]	@ unaligned
 16748 1d5c EB60     		str	r3, [r5, #12]	@ unaligned
 16749 1d5e 2068     		ldr	r0, [r4]	@ unaligned
 16750 1d60 2861     		str	r0, [r5, #16]	@ unaligned
 16751 1d62 A388     		ldrh	r3, [r4, #4]	@ unaligned
 16752 1d64 AB82     		strh	r3, [r5, #20]	@ unaligned
2172:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16753              		.loc 1 2172 0
 16754 1d66 0023     		movs	r3, #0
 16755 1d68 C7F88C30 		str	r3, [r7, #140]
 16756 1d6c 2CE0     		b	.L629
 16757              	.L632:
2173:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 16758              		.loc 1 2173 0
 16759 1d6e 4649     		ldr	r1, .L655+56
 16760 1d70 D7F89420 		ldr	r2, [r7, #148]
 16761 1d74 1346     		mov	r3, r2
 16762 1d76 9B00     		lsls	r3, r3, #2
 16763 1d78 1344     		add	r3, r3, r2
 16764 1d7a D7F88C20 		ldr	r2, [r7, #140]
 16765 1d7e 1344     		add	r3, r3, r2
 16766 1d80 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 16767 1d84 1C46     		mov	r4, r3
 16768 1d86 4149     		ldr	r1, .L655+60
 16769 1d88 D7F89420 		ldr	r2, [r7, #148]
 16770 1d8c 1346     		mov	r3, r2
 16771 1d8e 9B00     		lsls	r3, r3, #2
 16772 1d90 1344     		add	r3, r3, r2
 16773 1d92 CA18     		adds	r2, r1, r3
 16774 1d94 D7F88C30 		ldr	r3, [r7, #140]
 16775 1d98 1344     		add	r3, r3, r2
 16776 1d9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16777 1d9c 102B     		cmp	r3, #16
 16778 1d9e 01D1     		bne	.L630
 16779              		.loc 1 2173 0 is_stmt 0 discriminator 1
 16780 1da0 3B4B     		ldr	r3, .L655+64
 16781 1da2 00E0     		b	.L631
 16782              	.L630:
 16783              		.loc 1 2173 0 discriminator 2
 16784 1da4 3B4B     		ldr	r3, .L655+68
 16785              	.L631:
 16786              		.loc 1 2173 0 discriminator 4
 16787 1da6 07F11800 		add	r0, r7, #24
 16788 1daa 2246     		mov	r2, r4
 16789 1dac 3A49     		ldr	r1, .L655+72
 16790 1dae FFF7FEFF 		bl	sprintf
2174:..\src/command_processing.c ****                     strcat(info_string, str);
 16791              		.loc 1 2174 0 is_stmt 1 discriminator 4
 16792 1db2 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 371


 16793 1db6 1946     		mov	r1, r3
 16794 1db8 7869     		ldr	r0, [r7, #20]
 16795 1dba FFF7FEFF 		bl	strcat
2172:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16796              		.loc 1 2172 0 discriminator 4
 16797 1dbe D7F88C30 		ldr	r3, [r7, #140]
 16798 1dc2 0133     		adds	r3, r3, #1
 16799 1dc4 C7F88C30 		str	r3, [r7, #140]
 16800              	.L629:
2172:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16801              		.loc 1 2172 0 is_stmt 0 discriminator 2
 16802 1dc8 294A     		ldr	r2, .L655+32
 16803 1dca D7F89430 		ldr	r3, [r7, #148]
 16804 1dce 1344     		add	r3, r3, r2
 16805 1dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16806 1dd2 1A46     		mov	r2, r3
 16807 1dd4 D7F88C30 		ldr	r3, [r7, #140]
 16808 1dd8 9A42     		cmp	r2, r3
 16809 1dda C8DC     		bgt	.L632
2175:..\src/command_processing.c ****                 }
2176:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 16810              		.loc 1 2176 0 is_stmt 1
 16811 1ddc 7869     		ldr	r0, [r7, #20]
 16812 1dde FFF7FEFF 		bl	strlen
 16813 1de2 0346     		mov	r3, r0
 16814 1de4 1A46     		mov	r2, r3
 16815 1de6 7B69     		ldr	r3, [r7, #20]
 16816 1de8 1344     		add	r3, r3, r2
 16817 1dea 1F4A     		ldr	r2, .L655+24
 16818 1dec 1188     		ldrh	r1, [r2]	@ unaligned
 16819 1dee 9278     		ldrb	r2, [r2, #2]
 16820 1df0 1980     		strh	r1, [r3]	@ unaligned
 16821 1df2 9A70     		strb	r2, [r3, #2]
 16822              	.L628:
2162:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16823              		.loc 1 2162 0 discriminator 2
 16824 1df4 D7F89430 		ldr	r3, [r7, #148]
 16825 1df8 0133     		adds	r3, r3, #1
 16826 1dfa C7F89430 		str	r3, [r7, #148]
 16827              	.L624:
2162:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16828              		.loc 1 2162 0 is_stmt 0 discriminator 1
 16829 1dfe D7F89430 		ldr	r3, [r7, #148]
 16830 1e02 012B     		cmp	r3, #1
 16831 1e04 7FF759AF 		ble	.L633
2177:..\src/command_processing.c ****             }
2178:..\src/command_processing.c ****         }
2179:..\src/command_processing.c **** #endif   
2180:..\src/command_processing.c ****         
2181:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 16832              		.loc 1 2181 0 is_stmt 1
 16833 1e08 244B     		ldr	r3, .L655+76
 16834 1e0a 1B88     		ldrh	r3, [r3]
 16835 1e0c 1A46     		mov	r2, r3
 16836 1e0e 244B     		ldr	r3, .L655+80
 16837 1e10 1B88     		ldrh	r3, [r3]
 16838 1e12 D21A     		subs	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 372


 16839 1e14 07F11803 		add	r3, r7, #24
 16840 1e18 2249     		ldr	r1, .L655+84
 16841 1e1a 1846     		mov	r0, r3
 16842 1e1c FFF7FEFF 		bl	sprintf
2182:..\src/command_processing.c ****         strcat(info_string, str);
 16843              		.loc 1 2182 0
 16844 1e20 07F11803 		add	r3, r7, #24
 16845 1e24 1946     		mov	r1, r3
 16846 1e26 7869     		ldr	r0, [r7, #20]
 16847 1e28 FFF7FEFF 		bl	strcat
2183:..\src/command_processing.c ****   
2184:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 16848              		.loc 1 2184 0
 16849 1e2c 7869     		ldr	r0, [r7, #20]
 16850 1e2e FFF7FEFF 		bl	strlen
 16851 1e32 0346     		mov	r3, r0
 16852 1e34 1A46     		mov	r2, r3
 16853 1e36 7B69     		ldr	r3, [r7, #20]
 16854 1e38 1344     		add	r3, r3, r2
 16855 1e3a 1B4A     		ldr	r2, .L655+88
 16856 1e3c 1188     		ldrh	r1, [r2]	@ unaligned
 16857 1e3e 9278     		ldrb	r2, [r2, #2]
 16858 1e40 1980     		strh	r1, [r3]	@ unaligned
 16859 1e42 9A70     		strb	r2, [r3, #2]
 16860              	.L635:
 16861              	.LBE16:
2185:..\src/command_processing.c ****     }
2186:..\src/command_processing.c **** }
 16862              		.loc 1 2186 0
 16863 1e44 00BF     		nop
 16864 1e46 9C37     		adds	r7, r7, #156
 16865              		.cfi_def_cfa_offset 36
 16866 1e48 BD46     		mov	sp, r7
 16867              		.cfi_def_cfa_register 13
 16868              		@ sp needed
 16869 1e4a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 16870              	.L656:
 16871 1e4e 00BF     		.align	2
 16872              	.L655:
 16873 1e50 1C0F0000 		.word	.LC147
 16874 1e54 58160000 		.word	.LC222
 16875 1e58 00000000 		.word	IMU_connected
 16876 1e5c 140F0000 		.word	.LC146
 16877 1e60 68160000 		.word	.LC223
 16878 1e64 00000000 		.word	N_IMU_Connected
 16879 1e68 C00D0000 		.word	.LC126
 16880 1e6c 78160000 		.word	.LC224
 16881 1e70 00000000 		.word	N_Encoder_Line_Connected
 16882 1e74 90160000 		.word	.LC225
 16883 1e78 B0160000 		.word	.LC226
 16884 1e7c B8160000 		.word	.LC227
 16885 1e80 C0160000 		.word	.LC228
 16886 1e84 E0160000 		.word	.LC229
 16887 1e88 00000000 		.word	Encoder_Value
 16888 1e8c 00000000 		.word	Encoder_Check
 16889 1e90 F8160000 		.word	.LC230
 16890 1e94 FC160000 		.word	.LC231
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 373


 16891 1e98 00170000 		.word	.LC232
 16892 1e9c 00000000 		.word	timer_value0
 16893 1ea0 00000000 		.word	timer_value
 16894 1ea4 0C170000 		.word	.LC233
 16895 1ea8 28170000 		.word	.LC234
 16896              		.cfi_endproc
 16897              	.LFE72:
 16898              		.size	prepare_generic_info, .-prepare_generic_info
 16899              		.section	.rodata
 16900              		.align	2
 16901              	.LC235:
 16902 172c 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 16902      41474520 
 16902      53544154 
 16902      49535449 
 16902      43530D0A 
 16903 1741 000000   		.align	2
 16904              	.LC236:
 16905 1744 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 16905      206F6620 
 16905      4857206D 
 16905      61696E74 
 16905      656E616E 
 16906 176f 00       		.align	2
 16907              	.LC237:
 16908 1770 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 16908      206F6620 
 16908      75736167 
 16908      65207374 
 16908      61747320 
 16909 17a3 0A00     		.ascii	"\012\000"
 16910 17a5 000000   		.align	2
 16911              	.LC238:
 16912 17a8 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 16912      20636865 
 16912      636B6564 
 16912      2054696D 
 16912      653A2025 
 16913 17db 0A00     		.ascii	"\012\000"
 16914 17dd 000000   		.align	2
 16915              	.LC239:
 16916 17e0 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 16916      74696F6E 
 16916      73206869 
 16916      73746F67 
 16916      72616D20 
 16917 17ff 00       		.align	2
 16918              	.LC240:
 16919 1800 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 16919      2564205B 
 16919      25642D25 
 16919      645D3A20 
 16919      256C750D 
 16920 1816 0000     		.align	2
 16921              	.LC241:
 16922 1818 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 16922      656E7420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 374


 16922      68697374 
 16922      6F677261 
 16922      6D20286D 
 16923 1832 0000     		.align	2
 16924              	.LC242:
 16925 1834 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 16925      73686F6C 
 16925      64202564 
 16925      205B2564 
 16925      2D25645D 
 16926              		.align	2
 16927              	.LC243:
 16928 1850 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 16928      61637469 
 16928      76617469 
 16928      6F6E7320 
 16928      636F756E 
 16929 1872 0000     		.align	2
 16930              	.LC244:
 16931 1874 52657374 		.ascii	"Rest position occurrences: %lu\000"
 16931      20706F73 
 16931      6974696F 
 16931      6E206F63 
 16931      63757272 
 16932 1893 00       		.align	2
 16933              	.LC245:
 16934 1894 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 16934      6520746F 
 16934      74616C20 
 16934      64697370 
 16934      6C616365 
 16935 18ba 0000     		.align	2
 16936              	.LC246:
 16937 18bc 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 16937      6C20706F 
 16937      77657220 
 16937      6F6E2074 
 16937      696D6520 
 16938 18db 00       		.align	2
 16939              	.LC247:
 16940 18dc 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 16940      6C207265 
 16940      73742070 
 16940      6F736974 
 16940      696F6E20 
 16941              		.section	.text.prepare_counter_info,"ax",%progbits
 16942              		.align	2
 16943              		.global	prepare_counter_info
 16944              		.thumb
 16945              		.thumb_func
 16946              		.type	prepare_counter_info, %function
 16947              	prepare_counter_info:
 16948              	.LFB73:
2187:..\src/command_processing.c **** 
2188:..\src/command_processing.c **** //==============================================================================
2189:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2190:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 375


2191:..\src/command_processing.c **** 
2192:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2193:..\src/command_processing.c **** {
 16949              		.loc 1 2193 0
 16950              		.cfi_startproc
 16951              		@ args = 0, pretend = 0, frame = 128
 16952              		@ frame_needed = 1, uses_anonymous_args = 0
 16953 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 16954              		.cfi_def_cfa_offset 20
 16955              		.cfi_offset 4, -20
 16956              		.cfi_offset 5, -16
 16957              		.cfi_offset 6, -12
 16958              		.cfi_offset 7, -8
 16959              		.cfi_offset 14, -4
 16960 0002 A5B0     		sub	sp, sp, #148
 16961              		.cfi_def_cfa_offset 168
 16962 0004 04AF     		add	r7, sp, #16
 16963              		.cfi_def_cfa 7, 152
 16964 0006 7860     		str	r0, [r7, #4]
2194:..\src/command_processing.c ****     char str[100];  
2195:..\src/command_processing.c ****     int i;
2196:..\src/command_processing.c ****     int step;
2197:..\src/command_processing.c **** 
2198:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16965              		.loc 1 2198 0
 16966 0008 7D4B     		ldr	r3, .L663
 16967 000a BB67     		str	r3, [r7, #120]
2199:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 16968              		.loc 1 2199 0
 16969 000c BB6F     		ldr	r3, [r7, #120]
 16970 000e B033     		adds	r3, r3, #176
 16971 0010 7B67     		str	r3, [r7, #116]
2200:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 16972              		.loc 1 2200 0
 16973 0012 7B6F     		ldr	r3, [r7, #116]
 16974 0014 93F86030 		ldrb	r3, [r3, #96]
 16975 0018 87F87330 		strb	r3, [r7, #115]
2201:..\src/command_processing.c ****     
2202:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 16976              		.loc 1 2202 0
 16977 001c 7868     		ldr	r0, [r7, #4]
 16978 001e FFF7FEFF 		bl	strlen
 16979 0022 0346     		mov	r3, r0
 16980 0024 1A46     		mov	r2, r3
 16981 0026 7B68     		ldr	r3, [r7, #4]
 16982 0028 1344     		add	r3, r3, r2
 16983 002a 764A     		ldr	r2, .L663+4
 16984 002c 1D46     		mov	r5, r3
 16985 002e 1446     		mov	r4, r2
 16986 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16987 0032 2860     		str	r0, [r5]	@ unaligned
 16988 0034 6960     		str	r1, [r5, #4]	@ unaligned
 16989 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 16990 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 16991 003a 2068     		ldr	r0, [r4]	@ unaligned
 16992 003c 2861     		str	r0, [r5, #16]	@ unaligned
 16993 003e 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 376


 16994 0040 2B75     		strb	r3, [r5, #20]
2203:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16995              		.loc 1 2203 0
 16996 0042 7868     		ldr	r0, [r7, #4]
 16997 0044 FFF7FEFF 		bl	strlen
 16998 0048 0346     		mov	r3, r0
 16999 004a 1A46     		mov	r2, r3
 17000 004c 7B68     		ldr	r3, [r7, #4]
 17001 004e 1344     		add	r3, r3, r2
 17002 0050 6D4A     		ldr	r2, .L663+8
 17003 0052 1188     		ldrh	r1, [r2]	@ unaligned
 17004 0054 9278     		ldrb	r2, [r2, #2]
 17005 0056 1980     		strh	r1, [r3]	@ unaligned
 17006 0058 9A70     		strb	r2, [r3, #2]
2204:..\src/command_processing.c ****     
2205:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17007              		.loc 1 2205 0
 17008 005a BB6F     		ldr	r3, [r7, #120]
 17009 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17010 0060 1A46     		mov	r2, r3
 17011 0062 BB6F     		ldr	r3, [r7, #120]
 17012 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17013 0068 1946     		mov	r1, r3
 17014 006a BB6F     		ldr	r3, [r7, #120]
 17015 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17016 0070 07F10800 		add	r0, r7, #8
 17017 0074 0093     		str	r3, [sp]
 17018 0076 0B46     		mov	r3, r1
 17019 0078 6449     		ldr	r1, .L663+12
 17020 007a FFF7FEFF 		bl	sprintf
2206:..\src/command_processing.c ****     strcat(info_string, str);
 17021              		.loc 1 2206 0
 17022 007e 07F10803 		add	r3, r7, #8
 17023 0082 1946     		mov	r1, r3
 17024 0084 7868     		ldr	r0, [r7, #4]
 17025 0086 FFF7FEFF 		bl	strcat
2207:..\src/command_processing.c ****     
2208:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17026              		.loc 1 2208 0
 17027 008a BB6F     		ldr	r3, [r7, #120]
 17028 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17029 0090 1A46     		mov	r2, r3
 17030 0092 BB6F     		ldr	r3, [r7, #120]
 17031 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17032 0098 1946     		mov	r1, r3
 17033 009a BB6F     		ldr	r3, [r7, #120]
 17034 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17035 00a0 07F10800 		add	r0, r7, #8
 17036 00a4 0093     		str	r3, [sp]
 17037 00a6 0B46     		mov	r3, r1
 17038 00a8 5949     		ldr	r1, .L663+16
 17039 00aa FFF7FEFF 		bl	sprintf
2209:..\src/command_processing.c ****     strcat(info_string, str);
 17040              		.loc 1 2209 0
 17041 00ae 07F10803 		add	r3, r7, #8
 17042 00b2 1946     		mov	r1, r3
 17043 00b4 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 377


 17044 00b6 FFF7FEFF 		bl	strcat
2210:..\src/command_processing.c ****             
2211:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17045              		.loc 1 2211 0
 17046 00ba BB6F     		ldr	r3, [r7, #120]
 17047 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17048 00c0 1D46     		mov	r5, r3
 17049 00c2 BB6F     		ldr	r3, [r7, #120]
 17050 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17051 00c8 1E46     		mov	r6, r3
 17052 00ca BB6F     		ldr	r3, [r7, #120]
 17053 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17054 00d0 1A46     		mov	r2, r3
 17055 00d2 BB6F     		ldr	r3, [r7, #120]
 17056 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17057 00d8 1946     		mov	r1, r3
 17058 00da BB6F     		ldr	r3, [r7, #120]
 17059 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17060 00e0 1C46     		mov	r4, r3
 17061 00e2 BB6F     		ldr	r3, [r7, #120]
 17062 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17063 00e8 07F10800 		add	r0, r7, #8
 17064 00ec 0393     		str	r3, [sp, #12]
 17065 00ee 0294     		str	r4, [sp, #8]
 17066 00f0 0191     		str	r1, [sp, #4]
 17067 00f2 0092     		str	r2, [sp]
 17068 00f4 3346     		mov	r3, r6
 17069 00f6 2A46     		mov	r2, r5
 17070 00f8 4649     		ldr	r1, .L663+20
 17071 00fa FFF7FEFF 		bl	sprintf
2212:..\src/command_processing.c ****     strcat(info_string, str);
 17072              		.loc 1 2212 0
 17073 00fe 07F10803 		add	r3, r7, #8
 17074 0102 1946     		mov	r1, r3
 17075 0104 7868     		ldr	r0, [r7, #4]
 17076 0106 FFF7FEFF 		bl	strcat
2213:..\src/command_processing.c ****     
2214:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17077              		.loc 1 2214 0
 17078 010a 07F10803 		add	r3, r7, #8
 17079 010e 424A     		ldr	r2, .L663+24
 17080 0110 1C46     		mov	r4, r3
 17081 0112 1546     		mov	r5, r2
 17082 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17083 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17084 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17085 011c 07C4     		stmia	r4!, {r0, r1, r2}
 17086 011e 2380     		strh	r3, [r4]	@ movhi
 17087 0120 0234     		adds	r4, r4, #2
 17088 0122 1B0C     		lsrs	r3, r3, #16
 17089 0124 2370     		strb	r3, [r4]
2215:..\src/command_processing.c ****     strcat(info_string, str);
 17090              		.loc 1 2215 0
 17091 0126 07F10803 		add	r3, r7, #8
 17092 012a 1946     		mov	r1, r3
 17093 012c 7868     		ldr	r0, [r7, #4]
 17094 012e FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 378


2216:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17095              		.loc 1 2216 0
 17096 0132 7B6F     		ldr	r3, [r7, #116]
 17097 0134 996B     		ldr	r1, [r3, #56]
 17098 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 17099 013a B86F     		ldr	r0, [r7, #120]
 17100 013c 1346     		mov	r3, r2
 17101 013e 5B00     		lsls	r3, r3, #1
 17102 0140 1344     		add	r3, r3, r2
 17103 0142 1B01     		lsls	r3, r3, #4
 17104 0144 0344     		add	r3, r3, r0
 17105 0146 03F29513 		addw	r3, r3, #405
 17106 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17107 014c 41FA03F3 		asr	r3, r1, r3
 17108 0150 324A     		ldr	r2, .L663+28
 17109 0152 82FB0312 		smull	r1, r2, r2, r3
 17110 0156 9210     		asrs	r2, r2, #2
 17111 0158 DB17     		asrs	r3, r3, #31
 17112 015a D31A     		subs	r3, r2, r3
 17113 015c FB66     		str	r3, [r7, #108]
2217:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17114              		.loc 1 2217 0
 17115 015e 0123     		movs	r3, #1
 17116 0160 FB67     		str	r3, [r7, #124]
 17117 0162 21E0     		b	.L658
 17118              	.L659:
2218:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17119              		.loc 1 2218 0 discriminator 3
 17120 0164 FB6F     		ldr	r3, [r7, #124]
 17121 0166 013B     		subs	r3, r3, #1
 17122 0168 FA6E     		ldr	r2, [r7, #108]
 17123 016a 02FB03F3 		mul	r3, r2, r3
 17124 016e 5C1C     		adds	r4, r3, #1
 17125 0170 FB6E     		ldr	r3, [r7, #108]
 17126 0172 FA6F     		ldr	r2, [r7, #124]
 17127 0174 02FB03F3 		mul	r3, r2, r3
 17128 0178 FA6F     		ldr	r2, [r7, #124]
 17129 017a 511E     		subs	r1, r2, #1
 17130 017c BA6F     		ldr	r2, [r7, #120]
 17131 017e 0631     		adds	r1, r1, #6
 17132 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17133 0184 07F10800 		add	r0, r7, #8
 17134 0188 0192     		str	r2, [sp, #4]
 17135 018a 0093     		str	r3, [sp]
 17136 018c 2346     		mov	r3, r4
 17137 018e FA6F     		ldr	r2, [r7, #124]
 17138 0190 2349     		ldr	r1, .L663+32
 17139 0192 FFF7FEFF 		bl	sprintf
2219:..\src/command_processing.c ****         strcat(info_string, str);
 17140              		.loc 1 2219 0 discriminator 3
 17141 0196 07F10803 		add	r3, r7, #8
 17142 019a 1946     		mov	r1, r3
 17143 019c 7868     		ldr	r0, [r7, #4]
 17144 019e FFF7FEFF 		bl	strcat
2217:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17145              		.loc 1 2217 0 discriminator 3
 17146 01a2 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 379


 17147 01a4 0133     		adds	r3, r3, #1
 17148 01a6 FB67     		str	r3, [r7, #124]
 17149              	.L658:
2217:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17150              		.loc 1 2217 0 is_stmt 0 discriminator 1
 17151 01a8 FB6F     		ldr	r3, [r7, #124]
 17152 01aa 0A2B     		cmp	r3, #10
 17153 01ac DADD     		ble	.L659
2220:..\src/command_processing.c ****     }
2221:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17154              		.loc 1 2221 0 is_stmt 1
 17155 01ae 7868     		ldr	r0, [r7, #4]
 17156 01b0 FFF7FEFF 		bl	strlen
 17157 01b4 0346     		mov	r3, r0
 17158 01b6 1A46     		mov	r2, r3
 17159 01b8 7B68     		ldr	r3, [r7, #4]
 17160 01ba 1344     		add	r3, r3, r2
 17161 01bc 124A     		ldr	r2, .L663+8
 17162 01be 1188     		ldrh	r1, [r2]	@ unaligned
 17163 01c0 9278     		ldrb	r2, [r2, #2]
 17164 01c2 1980     		strh	r1, [r3]	@ unaligned
 17165 01c4 9A70     		strb	r2, [r3, #2]
2222:..\src/command_processing.c ****     
2223:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17166              		.loc 1 2223 0
 17167 01c6 07F10803 		add	r3, r7, #8
 17168 01ca 164A     		ldr	r2, .L663+36
 17169 01cc 1C46     		mov	r4, r3
 17170 01ce 1546     		mov	r5, r2
 17171 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17172 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17173 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 17174 01d8 03C4     		stmia	r4!, {r0, r1}
 17175 01da 2280     		strh	r2, [r4]	@ movhi
2224:..\src/command_processing.c ****     strcat(info_string, str);
 17176              		.loc 1 2224 0
 17177 01dc 07F10803 		add	r3, r7, #8
 17178 01e0 1946     		mov	r1, r3
 17179 01e2 7868     		ldr	r0, [r7, #4]
 17180 01e4 FFF7FEFF 		bl	strcat
2225:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17181              		.loc 1 2225 0
 17182 01e8 7B6F     		ldr	r3, [r7, #116]
 17183 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 17184 01ee 002B     		cmp	r3, #0
 17185 01f0 00DA     		bge	.L660
 17186 01f2 0333     		adds	r3, r3, #3
 17187              	.L660:
 17188 01f4 9B10     		asrs	r3, r3, #2
 17189 01f6 1BB2     		sxth	r3, r3
 17190 01f8 FB66     		str	r3, [r7, #108]
2226:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17191              		.loc 1 2226 0
 17192 01fa 0123     		movs	r3, #1
 17193 01fc FB67     		str	r3, [r7, #124]
 17194 01fe 34E0     		b	.L661
 17195              	.L664:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 380


 17196              		.align	2
 17197              	.L663:
 17198 0200 00000000 		.word	g_mem
 17199 0204 2C170000 		.word	.LC235
 17200 0208 C00D0000 		.word	.LC126
 17201 020c 44170000 		.word	.LC236
 17202 0210 70170000 		.word	.LC237
 17203 0214 A8170000 		.word	.LC238
 17204 0218 E0170000 		.word	.LC239
 17205 021c 67666666 		.word	1717986919
 17206 0220 00180000 		.word	.LC240
 17207 0224 18180000 		.word	.LC241
 17208              	.L662:
2227:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17209              		.loc 1 2227 0 discriminator 3
 17210 0228 FB6F     		ldr	r3, [r7, #124]
 17211 022a 013B     		subs	r3, r3, #1
 17212 022c FA6E     		ldr	r2, [r7, #108]
 17213 022e 02FB03F4 		mul	r4, r2, r3
 17214 0232 FB6E     		ldr	r3, [r7, #108]
 17215 0234 FA6F     		ldr	r2, [r7, #124]
 17216 0236 02FB03F3 		mul	r3, r2, r3
 17217 023a FA6F     		ldr	r2, [r7, #124]
 17218 023c 511E     		subs	r1, r2, #1
 17219 023e BA6F     		ldr	r2, [r7, #120]
 17220 0240 1031     		adds	r1, r1, #16
 17221 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17222 0246 07F10800 		add	r0, r7, #8
 17223 024a 0192     		str	r2, [sp, #4]
 17224 024c 0093     		str	r3, [sp]
 17225 024e 2346     		mov	r3, r4
 17226 0250 FA6F     		ldr	r2, [r7, #124]
 17227 0252 5149     		ldr	r1, .L665
 17228 0254 FFF7FEFF 		bl	sprintf
2228:..\src/command_processing.c ****         strcat(info_string, str);
 17229              		.loc 1 2228 0 discriminator 3
 17230 0258 07F10803 		add	r3, r7, #8
 17231 025c 1946     		mov	r1, r3
 17232 025e 7868     		ldr	r0, [r7, #4]
 17233 0260 FFF7FEFF 		bl	strcat
2226:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17234              		.loc 1 2226 0 discriminator 3
 17235 0264 FB6F     		ldr	r3, [r7, #124]
 17236 0266 0133     		adds	r3, r3, #1
 17237 0268 FB67     		str	r3, [r7, #124]
 17238              	.L661:
2226:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17239              		.loc 1 2226 0 is_stmt 0 discriminator 1
 17240 026a FB6F     		ldr	r3, [r7, #124]
 17241 026c 042B     		cmp	r3, #4
 17242 026e DBDD     		ble	.L662
2229:..\src/command_processing.c ****     }
2230:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17243              		.loc 1 2230 0 is_stmt 1
 17244 0270 7868     		ldr	r0, [r7, #4]
 17245 0272 FFF7FEFF 		bl	strlen
 17246 0276 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 381


 17247 0278 1A46     		mov	r2, r3
 17248 027a 7B68     		ldr	r3, [r7, #4]
 17249 027c 1344     		add	r3, r3, r2
 17250 027e 474A     		ldr	r2, .L665+4
 17251 0280 1188     		ldrh	r1, [r2]	@ unaligned
 17252 0282 9278     		ldrb	r2, [r2, #2]
 17253 0284 1980     		strh	r1, [r3]	@ unaligned
 17254 0286 9A70     		strb	r2, [r3, #2]
2231:..\src/command_processing.c ****             
2232:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 17255              		.loc 1 2232 0
 17256 0288 BB6F     		ldr	r3, [r7, #120]
 17257 028a 1A69     		ldr	r2, [r3, #16]
 17258 028c BB6F     		ldr	r3, [r7, #120]
 17259 028e 5B69     		ldr	r3, [r3, #20]
 17260 0290 07F10800 		add	r0, r7, #8
 17261 0294 4249     		ldr	r1, .L665+8
 17262 0296 FFF7FEFF 		bl	sprintf
2233:..\src/command_processing.c ****     strcat(info_string, str);
 17263              		.loc 1 2233 0
 17264 029a 07F10803 		add	r3, r7, #8
 17265 029e 1946     		mov	r1, r3
 17266 02a0 7868     		ldr	r0, [r7, #4]
 17267 02a2 FFF7FEFF 		bl	strcat
2234:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17268              		.loc 1 2234 0
 17269 02a6 7868     		ldr	r0, [r7, #4]
 17270 02a8 FFF7FEFF 		bl	strlen
 17271 02ac 0346     		mov	r3, r0
 17272 02ae 1A46     		mov	r2, r3
 17273 02b0 7B68     		ldr	r3, [r7, #4]
 17274 02b2 1344     		add	r3, r3, r2
 17275 02b4 394A     		ldr	r2, .L665+4
 17276 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17277 02b8 9278     		ldrb	r2, [r2, #2]
 17278 02ba 1980     		strh	r1, [r3]	@ unaligned
 17279 02bc 9A70     		strb	r2, [r3, #2]
2235:..\src/command_processing.c ****     
2236:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17280              		.loc 1 2236 0
 17281 02be BB6F     		ldr	r3, [r7, #120]
 17282 02c0 1A6D     		ldr	r2, [r3, #80]
 17283 02c2 07F10803 		add	r3, r7, #8
 17284 02c6 3749     		ldr	r1, .L665+12
 17285 02c8 1846     		mov	r0, r3
 17286 02ca FFF7FEFF 		bl	sprintf
2237:..\src/command_processing.c ****     strcat(info_string, str);
 17287              		.loc 1 2237 0
 17288 02ce 07F10803 		add	r3, r7, #8
 17289 02d2 1946     		mov	r1, r3
 17290 02d4 7868     		ldr	r0, [r7, #4]
 17291 02d6 FFF7FEFF 		bl	strcat
2238:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17292              		.loc 1 2238 0
 17293 02da 7868     		ldr	r0, [r7, #4]
 17294 02dc FFF7FEFF 		bl	strlen
 17295 02e0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 382


 17296 02e2 1A46     		mov	r2, r3
 17297 02e4 7B68     		ldr	r3, [r7, #4]
 17298 02e6 1344     		add	r3, r3, r2
 17299 02e8 2C4A     		ldr	r2, .L665+4
 17300 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17301 02ec 9278     		ldrb	r2, [r2, #2]
 17302 02ee 1980     		strh	r1, [r3]	@ unaligned
 17303 02f0 9A70     		strb	r2, [r3, #2]
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17304              		.loc 1 2240 0
 17305 02f2 BB6F     		ldr	r3, [r7, #120]
 17306 02f4 5A6D     		ldr	r2, [r3, #84]
 17307 02f6 07F10803 		add	r3, r7, #8
 17308 02fa 2B49     		ldr	r1, .L665+16
 17309 02fc 1846     		mov	r0, r3
 17310 02fe FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****     strcat(info_string, str);
 17311              		.loc 1 2241 0
 17312 0302 07F10803 		add	r3, r7, #8
 17313 0306 1946     		mov	r1, r3
 17314 0308 7868     		ldr	r0, [r7, #4]
 17315 030a FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17316              		.loc 1 2242 0
 17317 030e 7868     		ldr	r0, [r7, #4]
 17318 0310 FFF7FEFF 		bl	strlen
 17319 0314 0346     		mov	r3, r0
 17320 0316 1A46     		mov	r2, r3
 17321 0318 7B68     		ldr	r3, [r7, #4]
 17322 031a 1344     		add	r3, r3, r2
 17323 031c 1F4A     		ldr	r2, .L665+4
 17324 031e 1188     		ldrh	r1, [r2]	@ unaligned
 17325 0320 9278     		ldrb	r2, [r2, #2]
 17326 0322 1980     		strh	r1, [r3]	@ unaligned
 17327 0324 9A70     		strb	r2, [r3, #2]
2243:..\src/command_processing.c ****     
2244:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17328              		.loc 1 2244 0
 17329 0326 BB6F     		ldr	r3, [r7, #120]
 17330 0328 9A6D     		ldr	r2, [r3, #88]
 17331 032a 07F10803 		add	r3, r7, #8
 17332 032e 1F49     		ldr	r1, .L665+20
 17333 0330 1846     		mov	r0, r3
 17334 0332 FFF7FEFF 		bl	sprintf
2245:..\src/command_processing.c ****     strcat(info_string, str);
 17335              		.loc 1 2245 0
 17336 0336 07F10803 		add	r3, r7, #8
 17337 033a 1946     		mov	r1, r3
 17338 033c 7868     		ldr	r0, [r7, #4]
 17339 033e FFF7FEFF 		bl	strcat
2246:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17340              		.loc 1 2246 0
 17341 0342 7868     		ldr	r0, [r7, #4]
 17342 0344 FFF7FEFF 		bl	strlen
 17343 0348 0346     		mov	r3, r0
 17344 034a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 383


 17345 034c 7B68     		ldr	r3, [r7, #4]
 17346 034e 1344     		add	r3, r3, r2
 17347 0350 124A     		ldr	r2, .L665+4
 17348 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17349 0354 9278     		ldrb	r2, [r2, #2]
 17350 0356 1980     		strh	r1, [r3]	@ unaligned
 17351 0358 9A70     		strb	r2, [r3, #2]
2247:..\src/command_processing.c ****     
2248:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17352              		.loc 1 2248 0
 17353 035a BB6F     		ldr	r3, [r7, #120]
 17354 035c DA6D     		ldr	r2, [r3, #92]
 17355 035e 07F10803 		add	r3, r7, #8
 17356 0362 1349     		ldr	r1, .L665+24
 17357 0364 1846     		mov	r0, r3
 17358 0366 FFF7FEFF 		bl	sprintf
2249:..\src/command_processing.c ****     strcat(info_string, str);
 17359              		.loc 1 2249 0
 17360 036a 07F10803 		add	r3, r7, #8
 17361 036e 1946     		mov	r1, r3
 17362 0370 7868     		ldr	r0, [r7, #4]
 17363 0372 FFF7FEFF 		bl	strcat
2250:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17364              		.loc 1 2250 0
 17365 0376 7868     		ldr	r0, [r7, #4]
 17366 0378 FFF7FEFF 		bl	strlen
 17367 037c 0346     		mov	r3, r0
 17368 037e 1A46     		mov	r2, r3
 17369 0380 7B68     		ldr	r3, [r7, #4]
 17370 0382 1344     		add	r3, r3, r2
 17371 0384 054A     		ldr	r2, .L665+4
 17372 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17373 0388 9278     		ldrb	r2, [r2, #2]
 17374 038a 1980     		strh	r1, [r3]	@ unaligned
 17375 038c 9A70     		strb	r2, [r3, #2]
2251:..\src/command_processing.c **** 
2252:..\src/command_processing.c **** }
 17376              		.loc 1 2252 0
 17377 038e 00BF     		nop
 17378 0390 8437     		adds	r7, r7, #132
 17379              		.cfi_def_cfa_offset 20
 17380 0392 BD46     		mov	sp, r7
 17381              		.cfi_def_cfa_register 13
 17382              		@ sp needed
 17383 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17384              	.L666:
 17385 0396 00BF     		.align	2
 17386              	.L665:
 17387 0398 34180000 		.word	.LC242
 17388 039c C00D0000 		.word	.LC126
 17389 03a0 50180000 		.word	.LC243
 17390 03a4 74180000 		.word	.LC244
 17391 03a8 94180000 		.word	.LC245
 17392 03ac BC180000 		.word	.LC246
 17393 03b0 DC180000 		.word	.LC247
 17394              		.cfi_endproc
 17395              	.LFE73:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 384


 17396              		.size	prepare_counter_info, .-prepare_counter_info
 17397              		.section	.rodata
 17398              		.align	2
 17399              	.LC248:
 17400 1900 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17400      77617265 
 17400      20766572 
 17400      73696F6E 
 17400      3A202573 
 17401 1917 00       		.align	2
 17402              	.LC249:
 17403 1918 506F7369 		.ascii	"Position PID: \000"
 17403      74696F6E 
 17403      20504944 
 17403      3A2000
 17404 1927 00       		.align	2
 17405              	.LC250:
 17406 1928 43757272 		.ascii	"Current PID: \000"
 17406      656E7420 
 17406      5049443A 
 17406      2000
 17407 1936 0000     		.align	2
 17408              	.LC251:
 17409 1938 5265736F 		.ascii	"Resolutions: \000"
 17409      6C757469 
 17409      6F6E733A 
 17409      2000
 17410 1946 0000     		.align	2
 17411              	.LC252:
 17412 1948 4F666673 		.ascii	"Offsets: \000"
 17412      6574733A 
 17412      2000
 17413 1952 0000     		.align	2
 17414              	.LC253:
 17415 1954 4D756C74 		.ascii	"Multipliers: \000"
 17415      69706C69 
 17415      6572733A 
 17415      2000
 17416 1962 0000     		.align	2
 17417              	.LC254:
 17418 1964 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17418      656E7420 
 17418      6C6F6F6B 
 17418      75702074 
 17418      61626C65 
 17419 1997 662C2025 		.ascii	"f, %f\015\012\000"
 17419      660D0A00 
 17420 199f 00       		.align	2
 17421              	.LC255:
 17422 19a0 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17422      74696F6E 
 17422      206C696D 
 17422      69742061 
 17422      63746976 
 17423              		.align	2
 17424              	.LC256:
 17425 19bc 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 385


 17425      74696F6E 
 17425      206C696D 
 17425      6974733A 
 17425      20696E66 
 17426              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17427              		.align	2
 17428              		.global	prepare_SD_param_info
 17429              		.thumb
 17430              		.thumb_func
 17431              		.type	prepare_SD_param_info, %function
 17432              	prepare_SD_param_info:
 17433              	.LFB74:
2253:..\src/command_processing.c **** 
2254:..\src/command_processing.c **** //==============================================================================
2255:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2256:..\src/command_processing.c **** //==============================================================================
2257:..\src/command_processing.c **** 
2258:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2259:..\src/command_processing.c **** {
 17434              		.loc 1 2259 0
 17435              		.cfi_startproc
 17436              		@ args = 0, pretend = 0, frame = 152
 17437              		@ frame_needed = 1, uses_anonymous_args = 0
 17438 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17439              		.cfi_def_cfa_offset 36
 17440              		.cfi_offset 4, -36
 17441              		.cfi_offset 5, -32
 17442              		.cfi_offset 6, -28
 17443              		.cfi_offset 7, -24
 17444              		.cfi_offset 8, -20
 17445              		.cfi_offset 9, -16
 17446              		.cfi_offset 10, -12
 17447              		.cfi_offset 11, -8
 17448              		.cfi_offset 14, -4
 17449 0004 B1B0     		sub	sp, sp, #196
 17450              		.cfi_def_cfa_offset 232
 17451 0006 0AAF     		add	r7, sp, #40
 17452              		.cfi_def_cfa 7, 192
 17453 0008 7861     		str	r0, [r7, #20]
2260:..\src/command_processing.c ****     char str[100];  
2261:..\src/command_processing.c ****     int i;
2262:..\src/command_processing.c ****            
2263:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2264:..\src/command_processing.c ****     
2265:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17454              		.loc 1 2265 0
 17455 000a AB4B     		ldr	r3, .L731
 17456 000c C7F88C30 		str	r3, [r7, #140]
2266:..\src/command_processing.c ****         
2267:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17457              		.loc 1 2267 0
 17458 0010 AA4A     		ldr	r2, .L731+4
 17459 0012 AB49     		ldr	r1, .L731+8
 17460 0014 7869     		ldr	r0, [r7, #20]
 17461 0016 FFF7FEFF 		bl	sprintf
2268:..\src/command_processing.c ****     
2269:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 386


 17462              		.loc 1 2269 0
 17463 001a D7F88C30 		ldr	r3, [r7, #140]
 17464 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17465 0022 1A46     		mov	r2, r3
 17466 0024 07F11C03 		add	r3, r7, #28
 17467 0028 A649     		ldr	r1, .L731+12
 17468 002a 1846     		mov	r0, r3
 17469 002c FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****     strcat(info_string, str);
 17470              		.loc 1 2270 0
 17471 0030 07F11C03 		add	r3, r7, #28
 17472 0034 1946     		mov	r1, r3
 17473 0036 7869     		ldr	r0, [r7, #20]
 17474 0038 FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17475              		.loc 1 2271 0
 17476 003c D7F88C30 		ldr	r3, [r7, #140]
 17477 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17478 0044 002B     		cmp	r3, #0
 17479 0046 02D0     		beq	.L669
 17480 0048 012B     		cmp	r3, #1
 17481 004a 15D0     		beq	.L670
 17482 004c 26E0     		b	.L668
 17483              	.L669:
2272:..\src/command_processing.c ****         case RIGHT_HAND:
2273:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17484              		.loc 1 2273 0
 17485 004e 7869     		ldr	r0, [r7, #20]
 17486 0050 FFF7FEFF 		bl	strlen
 17487 0054 0346     		mov	r3, r0
 17488 0056 1A46     		mov	r2, r3
 17489 0058 7B69     		ldr	r3, [r7, #20]
 17490 005a 1344     		add	r3, r3, r2
 17491 005c 9A4A     		ldr	r2, .L731+16
 17492 005e 1D46     		mov	r5, r3
 17493 0060 1446     		mov	r4, r2
 17494 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17495 0064 2860     		str	r0, [r5]	@ unaligned
 17496 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17497 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17498 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17499 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17500 006e A278     		ldrb	r2, [r4, #2]
 17501 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17502 0072 1346     		mov	r3, r2
 17503 0074 AB74     		strb	r3, [r5, #18]
2274:..\src/command_processing.c ****             break;
 17504              		.loc 1 2274 0
 17505 0076 11E0     		b	.L668
 17506              	.L670:
2275:..\src/command_processing.c ****         case LEFT_HAND:
2276:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17507              		.loc 1 2276 0
 17508 0078 7869     		ldr	r0, [r7, #20]
 17509 007a FFF7FEFF 		bl	strlen
 17510 007e 0346     		mov	r3, r0
 17511 0080 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 387


 17512 0082 7B69     		ldr	r3, [r7, #20]
 17513 0084 1344     		add	r3, r3, r2
 17514 0086 914A     		ldr	r2, .L731+20
 17515 0088 1D46     		mov	r5, r3
 17516 008a 1446     		mov	r4, r2
 17517 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17518 008e 2860     		str	r0, [r5]	@ unaligned
 17519 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17520 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17521 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17522 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17523 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2277:..\src/command_processing.c ****             break;
 17524              		.loc 1 2277 0
 17525 009a 00BF     		nop
 17526              	.L668:
2278:..\src/command_processing.c ****     }
2279:..\src/command_processing.c **** 
2280:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17527              		.loc 1 2280 0
 17528 009c D7F88C30 		ldr	r3, [r7, #140]
 17529 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17530 00a4 1A46     		mov	r2, r3
 17531 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17532 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17533 00ae 1946     		mov	r1, r3
 17534 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17535 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17536 00b8 07F11C00 		add	r0, r7, #28
 17537 00bc 0093     		str	r3, [sp]
 17538 00be 0B46     		mov	r3, r1
 17539 00c0 8349     		ldr	r1, .L731+24
 17540 00c2 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****     strcat(info_string, str);
 17541              		.loc 1 2281 0
 17542 00c6 07F11C03 		add	r3, r7, #28
 17543 00ca 1946     		mov	r1, r3
 17544 00cc 7869     		ldr	r0, [r7, #20]
 17545 00ce FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****     
2283:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17546              		.loc 1 2283 0
 17547 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17548 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17549 00da 1A46     		mov	r2, r3
 17550 00dc D7F88C30 		ldr	r3, [r7, #140]
 17551 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17552 00e4 1946     		mov	r1, r3
 17553 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17554 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17555 00ee 07F11C00 		add	r0, r7, #28
 17556 00f2 0093     		str	r3, [sp]
 17557 00f4 0B46     		mov	r3, r1
 17558 00f6 7749     		ldr	r1, .L731+28
 17559 00f8 FFF7FEFF 		bl	sprintf
2284:..\src/command_processing.c ****     strcat(info_string, str);
 17560              		.loc 1 2284 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 388


 17561 00fc 07F11C03 		add	r3, r7, #28
 17562 0100 1946     		mov	r1, r3
 17563 0102 7869     		ldr	r0, [r7, #20]
 17564 0104 FFF7FEFF 		bl	strcat
 17565              	.LBB19:
2285:..\src/command_processing.c ****     
2286:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17566              		.loc 1 2286 0
 17567 0108 0023     		movs	r3, #0
 17568 010a 87F89330 		strb	r3, [r7, #147]
 17569 010e 00F039BE 		b	.L671
 17570              	.L714:
 17571              	.LBB20:
2287:..\src/command_processing.c ****             
2288:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17572              		.loc 1 2288 0
 17573 0112 97F89330 		ldrb	r3, [r7, #147]
 17574 0116 87F88B30 		strb	r3, [r7, #139]
2289:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17575              		.loc 1 2289 0
 17576 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17577 011e 1346     		mov	r3, r2
 17578 0120 DB00     		lsls	r3, r3, #3
 17579 0122 9B1A     		subs	r3, r3, r2
 17580 0124 1B01     		lsls	r3, r3, #4
 17581 0126 B033     		adds	r3, r3, #176
 17582 0128 D7F88C20 		ldr	r2, [r7, #140]
 17583 012c 1344     		add	r3, r3, r2
 17584 012e C7F88430 		str	r3, [r7, #132]
2290:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17585              		.loc 1 2290 0
 17586 0132 D7F88430 		ldr	r3, [r7, #132]
 17587 0136 93F86030 		ldrb	r3, [r3, #96]
 17588 013a 87F88330 		strb	r3, [r7, #131]
2291:..\src/command_processing.c ****               
2292:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17589              		.loc 1 2292 0
 17590 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17591 0142 5A1C     		adds	r2, r3, #1
 17592 0144 07F11C03 		add	r3, r7, #28
 17593 0148 6349     		ldr	r1, .L731+32
 17594 014a 1846     		mov	r0, r3
 17595 014c FFF7FEFF 		bl	sprintf
2293:..\src/command_processing.c ****         strcat(info_string, str);
 17596              		.loc 1 2293 0
 17597 0150 07F11C03 		add	r3, r7, #28
 17598 0154 1946     		mov	r1, r3
 17599 0156 7869     		ldr	r0, [r7, #20]
 17600 0158 FFF7FEFF 		bl	strcat
2294:..\src/command_processing.c ****                     
2295:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17601              		.loc 1 2295 0
 17602 015c 7869     		ldr	r0, [r7, #20]
 17603 015e FFF7FEFF 		bl	strlen
 17604 0162 0346     		mov	r3, r0
 17605 0164 1A46     		mov	r2, r3
 17606 0166 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 389


 17607 0168 1344     		add	r3, r3, r2
 17608 016a 5C4A     		ldr	r2, .L731+36
 17609 016c 1D46     		mov	r5, r3
 17610 016e 1446     		mov	r4, r2
 17611 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17612 0172 2860     		str	r0, [r5]	@ unaligned
 17613 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17614 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17615 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17616 017a 03CC     		ldmia	r4!, {r0, r1}
 17617 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17618 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17619 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17620 0182 A278     		ldrb	r2, [r4, #2]
 17621 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17622 0186 1346     		mov	r3, r2
 17623 0188 AB76     		strb	r3, [r5, #26]
2296:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17624              		.loc 1 2296 0
 17625 018a D7F88430 		ldr	r3, [r7, #132]
 17626 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17627 0192 012B     		cmp	r3, #1
 17628 0194 0CD1     		bne	.L672
2297:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17629              		.loc 1 2297 0
 17630 0196 7869     		ldr	r0, [r7, #20]
 17631 0198 FFF7FEFF 		bl	strlen
 17632 019c 0346     		mov	r3, r0
 17633 019e 1A46     		mov	r2, r3
 17634 01a0 7B69     		ldr	r3, [r7, #20]
 17635 01a2 1344     		add	r3, r3, r2
 17636 01a4 4E4A     		ldr	r2, .L731+40
 17637 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17638 01a8 1860     		str	r0, [r3]	@ unaligned
 17639 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17640 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17641 01ae 0BE0     		b	.L673
 17642              	.L672:
2298:..\src/command_processing.c ****         else
2299:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17643              		.loc 1 2299 0
 17644 01b0 7869     		ldr	r0, [r7, #20]
 17645 01b2 FFF7FEFF 		bl	strlen
 17646 01b6 0346     		mov	r3, r0
 17647 01b8 1A46     		mov	r2, r3
 17648 01ba 7B69     		ldr	r3, [r7, #20]
 17649 01bc 1344     		add	r3, r3, r2
 17650 01be 494A     		ldr	r2, .L731+44
 17651 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17652 01c2 1860     		str	r0, [r3]	@ unaligned
 17653 01c4 1279     		ldrb	r2, [r2, #4]
 17654 01c6 1A71     		strb	r2, [r3, #4]
 17655              	.L673:
2300:..\src/command_processing.c ****         
2301:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17656              		.loc 1 2301 0
 17657 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 390


 17658 01cc 464A     		ldr	r2, .L731+48
 17659 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17660 01d0 1A46     		mov	r2, r3
 17661 01d2 07F11C03 		add	r3, r7, #28
 17662 01d6 4549     		ldr	r1, .L731+52
 17663 01d8 1846     		mov	r0, r3
 17664 01da FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****         strcat(info_string, str);
 17665              		.loc 1 2302 0
 17666 01de 07F11C03 		add	r3, r7, #28
 17667 01e2 1946     		mov	r1, r3
 17668 01e4 7869     		ldr	r0, [r7, #20]
 17669 01e6 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c **** 
2304:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17670              		.loc 1 2304 0
 17671 01ea 7869     		ldr	r0, [r7, #20]
 17672 01ec FFF7FEFF 		bl	strlen
 17673 01f0 0346     		mov	r3, r0
 17674 01f2 1A46     		mov	r2, r3
 17675 01f4 7B69     		ldr	r3, [r7, #20]
 17676 01f6 1344     		add	r3, r3, r2
 17677 01f8 3D4A     		ldr	r2, .L731+56
 17678 01fa 1C46     		mov	r4, r3
 17679 01fc 1346     		mov	r3, r2
 17680 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17681 0200 2060     		str	r0, [r4]	@ unaligned
 17682 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17683 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17684 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17685 0208 9B78     		ldrb	r3, [r3, #2]
 17686 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17687 020c A373     		strb	r3, [r4, #14]
2305:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17688              		.loc 1 2305 0
 17689 020e D7F88430 		ldr	r3, [r7, #132]
 17690 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17691 0216 032B     		cmp	r3, #3
 17692 0218 74D0     		beq	.L674
2306:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17693              		.loc 1 2306 0
 17694 021a D7F88430 		ldr	r3, [r7, #132]
 17695 021e 1B68     		ldr	r3, [r3]
 17696 0220 1846     		mov	r0, r3
 17697 0222 FFF7FEFF 		bl	__aeabi_i2d
 17698 0226 4FF00002 		mov	r2, #0
 17699 022a 324B     		ldr	r3, .L731+60
 17700 022c FFF7FEFF 		bl	__aeabi_ddiv
 17701 0230 0346     		mov	r3, r0
 17702 0232 0C46     		mov	r4, r1
 17703 0234 07F11C00 		add	r0, r7, #28
 17704 0238 1A46     		mov	r2, r3
 17705 023a 2346     		mov	r3, r4
 17706 023c 2E49     		ldr	r1, .L731+64
 17707 023e FFF7FEFF 		bl	sprintf
2307:..\src/command_processing.c ****             strcat(info_string, str);
 17708              		.loc 1 2307 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 391


 17709 0242 07F11C03 		add	r3, r7, #28
 17710 0246 1946     		mov	r1, r3
 17711 0248 7869     		ldr	r0, [r7, #20]
 17712 024a FFF7FEFF 		bl	strcat
2308:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17713              		.loc 1 2308 0
 17714 024e D7F88430 		ldr	r3, [r7, #132]
 17715 0252 5B68     		ldr	r3, [r3, #4]
 17716 0254 1846     		mov	r0, r3
 17717 0256 FFF7FEFF 		bl	__aeabi_i2d
 17718 025a 4FF00002 		mov	r2, #0
 17719 025e 254B     		ldr	r3, .L731+60
 17720 0260 FFF7FEFF 		bl	__aeabi_ddiv
 17721 0264 0346     		mov	r3, r0
 17722 0266 0C46     		mov	r4, r1
 17723 0268 07F11C00 		add	r0, r7, #28
 17724 026c 1A46     		mov	r2, r3
 17725 026e 2346     		mov	r3, r4
 17726 0270 2249     		ldr	r1, .L731+68
 17727 0272 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****             strcat(info_string, str);
 17728              		.loc 1 2309 0
 17729 0276 07F11C03 		add	r3, r7, #28
 17730 027a 1946     		mov	r1, r3
 17731 027c 7869     		ldr	r0, [r7, #20]
 17732 027e FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17733              		.loc 1 2310 0
 17734 0282 D7F88430 		ldr	r3, [r7, #132]
 17735 0286 9B68     		ldr	r3, [r3, #8]
 17736 0288 1846     		mov	r0, r3
 17737 028a FFF7FEFF 		bl	__aeabi_i2d
 17738 028e 4FF00002 		mov	r2, #0
 17739 0292 184B     		ldr	r3, .L731+60
 17740 0294 FFF7FEFF 		bl	__aeabi_ddiv
 17741 0298 0346     		mov	r3, r0
 17742 029a 0C46     		mov	r4, r1
 17743 029c 07F11C00 		add	r0, r7, #28
 17744 02a0 1A46     		mov	r2, r3
 17745 02a2 2346     		mov	r3, r4
 17746 02a4 1649     		ldr	r1, .L731+72
 17747 02a6 FFF7FEFF 		bl	sprintf
2311:..\src/command_processing.c ****             strcat(info_string, str);
 17748              		.loc 1 2311 0
 17749 02aa 07F11C03 		add	r3, r7, #28
 17750 02ae 1946     		mov	r1, r3
 17751 02b0 7869     		ldr	r0, [r7, #20]
 17752 02b2 FFF7FEFF 		bl	strcat
 17753 02b6 73E0     		b	.L675
 17754              	.L732:
 17755              		.align	2
 17756              	.L731:
 17757 02b8 00000000 		.word	g_mem
 17758 02bc D80D0000 		.word	.LC128
 17759 02c0 00190000 		.word	.LC248
 17760 02c4 140E0000 		.word	.LC131
 17761 02c8 540E0000 		.word	.LC134
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 392


 17762 02cc 680E0000 		.word	.LC135
 17763 02d0 44170000 		.word	.LC236
 17764 02d4 70170000 		.word	.LC237
 17765 02d8 B40E0000 		.word	.LC139
 17766 02dc 240F0000 		.word	.LC148
 17767 02e0 140F0000 		.word	.LC146
 17768 02e4 1C0F0000 		.word	.LC147
 17769 02e8 00000000 		.word	dev_pwm_limit
 17770 02ec 4C0F0000 		.word	.LC151
 17771 02f0 18190000 		.word	.LC249
 17772 02f4 0000F040 		.word	1089470464
 17773 02f8 1C100000 		.word	.LC161
 17774 02fc 28100000 		.word	.LC162
 17775 0300 34100000 		.word	.LC163
 17776              	.L674:
2312:..\src/command_processing.c ****         }
2313:..\src/command_processing.c ****         else { 
2314:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17777              		.loc 1 2314 0
 17778 0304 D7F88430 		ldr	r3, [r7, #132]
 17779 0308 9B69     		ldr	r3, [r3, #24]
 17780 030a 1846     		mov	r0, r3
 17781 030c FFF7FEFF 		bl	__aeabi_i2d
 17782 0310 4FF00002 		mov	r2, #0
 17783 0314 CB4B     		ldr	r3, .L733
 17784 0316 FFF7FEFF 		bl	__aeabi_ddiv
 17785 031a 0346     		mov	r3, r0
 17786 031c 0C46     		mov	r4, r1
 17787 031e 07F11C00 		add	r0, r7, #28
 17788 0322 1A46     		mov	r2, r3
 17789 0324 2346     		mov	r3, r4
 17790 0326 C849     		ldr	r1, .L733+4
 17791 0328 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****             strcat(info_string, str);
 17792              		.loc 1 2315 0
 17793 032c 07F11C03 		add	r3, r7, #28
 17794 0330 1946     		mov	r1, r3
 17795 0332 7869     		ldr	r0, [r7, #20]
 17796 0334 FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17797              		.loc 1 2316 0
 17798 0338 D7F88430 		ldr	r3, [r7, #132]
 17799 033c DB69     		ldr	r3, [r3, #28]
 17800 033e 1846     		mov	r0, r3
 17801 0340 FFF7FEFF 		bl	__aeabi_i2d
 17802 0344 4FF00002 		mov	r2, #0
 17803 0348 BE4B     		ldr	r3, .L733
 17804 034a FFF7FEFF 		bl	__aeabi_ddiv
 17805 034e 0346     		mov	r3, r0
 17806 0350 0C46     		mov	r4, r1
 17807 0352 07F11C00 		add	r0, r7, #28
 17808 0356 1A46     		mov	r2, r3
 17809 0358 2346     		mov	r3, r4
 17810 035a BC49     		ldr	r1, .L733+8
 17811 035c FFF7FEFF 		bl	sprintf
2317:..\src/command_processing.c ****             strcat(info_string, str);
 17812              		.loc 1 2317 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 393


 17813 0360 07F11C03 		add	r3, r7, #28
 17814 0364 1946     		mov	r1, r3
 17815 0366 7869     		ldr	r0, [r7, #20]
 17816 0368 FFF7FEFF 		bl	strcat
2318:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 17817              		.loc 1 2318 0
 17818 036c D7F88430 		ldr	r3, [r7, #132]
 17819 0370 1B6A     		ldr	r3, [r3, #32]
 17820 0372 1846     		mov	r0, r3
 17821 0374 FFF7FEFF 		bl	__aeabi_i2d
 17822 0378 4FF00002 		mov	r2, #0
 17823 037c B14B     		ldr	r3, .L733
 17824 037e FFF7FEFF 		bl	__aeabi_ddiv
 17825 0382 0346     		mov	r3, r0
 17826 0384 0C46     		mov	r4, r1
 17827 0386 07F11C00 		add	r0, r7, #28
 17828 038a 1A46     		mov	r2, r3
 17829 038c 2346     		mov	r3, r4
 17830 038e B049     		ldr	r1, .L733+12
 17831 0390 FFF7FEFF 		bl	sprintf
2319:..\src/command_processing.c ****             strcat(info_string, str);
 17832              		.loc 1 2319 0
 17833 0394 07F11C03 		add	r3, r7, #28
 17834 0398 1946     		mov	r1, r3
 17835 039a 7869     		ldr	r0, [r7, #20]
 17836 039c FFF7FEFF 		bl	strcat
 17837              	.L675:
2320:..\src/command_processing.c ****         }
2321:..\src/command_processing.c **** 
2322:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 17838              		.loc 1 2322 0
 17839 03a0 7869     		ldr	r0, [r7, #20]
 17840 03a2 FFF7FEFF 		bl	strlen
 17841 03a6 0346     		mov	r3, r0
 17842 03a8 1A46     		mov	r2, r3
 17843 03aa 7B69     		ldr	r3, [r7, #20]
 17844 03ac 1344     		add	r3, r3, r2
 17845 03ae A94A     		ldr	r2, .L733+16
 17846 03b0 1C46     		mov	r4, r3
 17847 03b2 1346     		mov	r3, r2
 17848 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 17849 03b6 2060     		str	r0, [r4]	@ unaligned
 17850 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 17851 03ba A260     		str	r2, [r4, #8]	@ unaligned
 17852 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 17853 03be A381     		strh	r3, [r4, #12]	@ unaligned
2323:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17854              		.loc 1 2323 0
 17855 03c0 D7F88430 		ldr	r3, [r7, #132]
 17856 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17857 03c8 032B     		cmp	r3, #3
 17858 03ca 4ED0     		beq	.L676
2324:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 17859              		.loc 1 2324 0
 17860 03cc D7F88430 		ldr	r3, [r7, #132]
 17861 03d0 DB68     		ldr	r3, [r3, #12]
 17862 03d2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 394


 17863 03d4 FFF7FEFF 		bl	__aeabi_i2d
 17864 03d8 4FF00002 		mov	r2, #0
 17865 03dc 994B     		ldr	r3, .L733
 17866 03de FFF7FEFF 		bl	__aeabi_ddiv
 17867 03e2 0346     		mov	r3, r0
 17868 03e4 0C46     		mov	r4, r1
 17869 03e6 07F11C00 		add	r0, r7, #28
 17870 03ea 1A46     		mov	r2, r3
 17871 03ec 2346     		mov	r3, r4
 17872 03ee 9649     		ldr	r1, .L733+4
 17873 03f0 FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****             strcat(info_string, str);
 17874              		.loc 1 2325 0
 17875 03f4 07F11C03 		add	r3, r7, #28
 17876 03f8 1946     		mov	r1, r3
 17877 03fa 7869     		ldr	r0, [r7, #20]
 17878 03fc FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 17879              		.loc 1 2326 0
 17880 0400 D7F88430 		ldr	r3, [r7, #132]
 17881 0404 1B69     		ldr	r3, [r3, #16]
 17882 0406 1846     		mov	r0, r3
 17883 0408 FFF7FEFF 		bl	__aeabi_i2d
 17884 040c 4FF00002 		mov	r2, #0
 17885 0410 8C4B     		ldr	r3, .L733
 17886 0412 FFF7FEFF 		bl	__aeabi_ddiv
 17887 0416 0346     		mov	r3, r0
 17888 0418 0C46     		mov	r4, r1
 17889 041a 07F11C00 		add	r0, r7, #28
 17890 041e 1A46     		mov	r2, r3
 17891 0420 2346     		mov	r3, r4
 17892 0422 8A49     		ldr	r1, .L733+8
 17893 0424 FFF7FEFF 		bl	sprintf
2327:..\src/command_processing.c ****             strcat(info_string, str);
 17894              		.loc 1 2327 0
 17895 0428 07F11C03 		add	r3, r7, #28
 17896 042c 1946     		mov	r1, r3
 17897 042e 7869     		ldr	r0, [r7, #20]
 17898 0430 FFF7FEFF 		bl	strcat
2328:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 17899              		.loc 1 2328 0
 17900 0434 D7F88430 		ldr	r3, [r7, #132]
 17901 0438 5B69     		ldr	r3, [r3, #20]
 17902 043a 1846     		mov	r0, r3
 17903 043c FFF7FEFF 		bl	__aeabi_i2d
 17904 0440 4FF00002 		mov	r2, #0
 17905 0444 7F4B     		ldr	r3, .L733
 17906 0446 FFF7FEFF 		bl	__aeabi_ddiv
 17907 044a 0346     		mov	r3, r0
 17908 044c 0C46     		mov	r4, r1
 17909 044e 07F11C00 		add	r0, r7, #28
 17910 0452 1A46     		mov	r2, r3
 17911 0454 2346     		mov	r3, r4
 17912 0456 7E49     		ldr	r1, .L733+12
 17913 0458 FFF7FEFF 		bl	sprintf
2329:..\src/command_processing.c ****             strcat(info_string, str);
 17914              		.loc 1 2329 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 395


 17915 045c 07F11C03 		add	r3, r7, #28
 17916 0460 1946     		mov	r1, r3
 17917 0462 7869     		ldr	r0, [r7, #20]
 17918 0464 FFF7FEFF 		bl	strcat
 17919 0468 4DE0     		b	.L677
 17920              	.L676:
2330:..\src/command_processing.c **** 
2331:..\src/command_processing.c ****         }
2332:..\src/command_processing.c ****         else {
2333:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 17921              		.loc 1 2333 0
 17922 046a D7F88430 		ldr	r3, [r7, #132]
 17923 046e 5B6A     		ldr	r3, [r3, #36]
 17924 0470 1846     		mov	r0, r3
 17925 0472 FFF7FEFF 		bl	__aeabi_i2d
 17926 0476 4FF00002 		mov	r2, #0
 17927 047a 724B     		ldr	r3, .L733
 17928 047c FFF7FEFF 		bl	__aeabi_ddiv
 17929 0480 0346     		mov	r3, r0
 17930 0482 0C46     		mov	r4, r1
 17931 0484 07F11C00 		add	r0, r7, #28
 17932 0488 1A46     		mov	r2, r3
 17933 048a 2346     		mov	r3, r4
 17934 048c 6E49     		ldr	r1, .L733+4
 17935 048e FFF7FEFF 		bl	sprintf
2334:..\src/command_processing.c ****             strcat(info_string, str);
 17936              		.loc 1 2334 0
 17937 0492 07F11C03 		add	r3, r7, #28
 17938 0496 1946     		mov	r1, r3
 17939 0498 7869     		ldr	r0, [r7, #20]
 17940 049a FFF7FEFF 		bl	strcat
2335:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 17941              		.loc 1 2335 0
 17942 049e D7F88430 		ldr	r3, [r7, #132]
 17943 04a2 9B6A     		ldr	r3, [r3, #40]
 17944 04a4 1846     		mov	r0, r3
 17945 04a6 FFF7FEFF 		bl	__aeabi_i2d
 17946 04aa 4FF00002 		mov	r2, #0
 17947 04ae 654B     		ldr	r3, .L733
 17948 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 17949 04b4 0346     		mov	r3, r0
 17950 04b6 0C46     		mov	r4, r1
 17951 04b8 07F11C00 		add	r0, r7, #28
 17952 04bc 1A46     		mov	r2, r3
 17953 04be 2346     		mov	r3, r4
 17954 04c0 6249     		ldr	r1, .L733+8
 17955 04c2 FFF7FEFF 		bl	sprintf
2336:..\src/command_processing.c ****             strcat(info_string, str);
 17956              		.loc 1 2336 0
 17957 04c6 07F11C03 		add	r3, r7, #28
 17958 04ca 1946     		mov	r1, r3
 17959 04cc 7869     		ldr	r0, [r7, #20]
 17960 04ce FFF7FEFF 		bl	strcat
2337:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 17961              		.loc 1 2337 0
 17962 04d2 D7F88430 		ldr	r3, [r7, #132]
 17963 04d6 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 396


 17964 04d8 1846     		mov	r0, r3
 17965 04da FFF7FEFF 		bl	__aeabi_i2d
 17966 04de 4FF00002 		mov	r2, #0
 17967 04e2 584B     		ldr	r3, .L733
 17968 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 17969 04e8 0346     		mov	r3, r0
 17970 04ea 0C46     		mov	r4, r1
 17971 04ec 07F11C00 		add	r0, r7, #28
 17972 04f0 1A46     		mov	r2, r3
 17973 04f2 2346     		mov	r3, r4
 17974 04f4 5649     		ldr	r1, .L733+12
 17975 04f6 FFF7FEFF 		bl	sprintf
2338:..\src/command_processing.c ****             strcat(info_string, str);
 17976              		.loc 1 2338 0
 17977 04fa 07F11C03 		add	r3, r7, #28
 17978 04fe 1946     		mov	r1, r3
 17979 0500 7869     		ldr	r0, [r7, #20]
 17980 0502 FFF7FEFF 		bl	strcat
 17981              	.L677:
2339:..\src/command_processing.c ****         }
2340:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 17982              		.loc 1 2340 0
 17983 0506 D7F88430 		ldr	r3, [r7, #132]
 17984 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 17985 050e 012B     		cmp	r3, #1
 17986 0510 14D1     		bne	.L678
2341:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 17987              		.loc 1 2341 0
 17988 0512 7869     		ldr	r0, [r7, #20]
 17989 0514 FFF7FEFF 		bl	strlen
 17990 0518 0346     		mov	r3, r0
 17991 051a 1A46     		mov	r2, r3
 17992 051c 7B69     		ldr	r3, [r7, #20]
 17993 051e 1344     		add	r3, r3, r2
 17994 0520 4D4A     		ldr	r2, .L733+20
 17995 0522 1D46     		mov	r5, r3
 17996 0524 1446     		mov	r4, r2
 17997 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17998 0528 2860     		str	r0, [r5]	@ unaligned
 17999 052a 6960     		str	r1, [r5, #4]	@ unaligned
 18000 052c AA60     		str	r2, [r5, #8]	@ unaligned
 18001 052e EB60     		str	r3, [r5, #12]	@ unaligned
 18002 0530 03CC     		ldmia	r4!, {r0, r1}
 18003 0532 2861     		str	r0, [r5, #16]	@ unaligned
 18004 0534 6961     		str	r1, [r5, #20]	@ unaligned
 18005 0536 2388     		ldrh	r3, [r4]	@ unaligned
 18006 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 18007 053a 13E0     		b	.L679
 18008              	.L678:
2342:..\src/command_processing.c ****         else
2343:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 18009              		.loc 1 2343 0
 18010 053c 7869     		ldr	r0, [r7, #20]
 18011 053e FFF7FEFF 		bl	strlen
 18012 0542 0346     		mov	r3, r0
 18013 0544 1A46     		mov	r2, r3
 18014 0546 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 397


 18015 0548 1344     		add	r3, r3, r2
 18016 054a 444A     		ldr	r2, .L733+24
 18017 054c 1D46     		mov	r5, r3
 18018 054e 1446     		mov	r4, r2
 18019 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18020 0552 2860     		str	r0, [r5]	@ unaligned
 18021 0554 6960     		str	r1, [r5, #4]	@ unaligned
 18022 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 18023 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 18024 055a 03CC     		ldmia	r4!, {r0, r1}
 18025 055c 2861     		str	r0, [r5, #16]	@ unaligned
 18026 055e 6961     		str	r1, [r5, #20]	@ unaligned
 18027 0560 2378     		ldrb	r3, [r4]
 18028 0562 2B76     		strb	r3, [r5, #24]
 18029              	.L679:
2344:..\src/command_processing.c **** 
2345:..\src/command_processing.c ****         switch(MOT->input_mode) {
 18030              		.loc 1 2345 0
 18031 0564 D7F88430 		ldr	r3, [r7, #132]
 18032 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18033 056c 062B     		cmp	r3, #6
 18034 056e 00F2D180 		bhi	.L680
 18035 0572 01A2     		adr	r2, .L682
 18036 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18037              		.p2align 2
 18038              	.L682:
 18039 0578 95050000 		.word	.L681+1
 18040 057c B9050000 		.word	.L683+1
 18041 0580 E1050000 		.word	.L684+1
 18042 0584 13060000 		.word	.L685+1
 18043 0588 71060000 		.word	.L686+1
 18044 058c 9F060000 		.word	.L687+1
 18045 0590 CF060000 		.word	.L688+1
 18046              		.p2align 1
 18047              	.L681:
2346:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2347:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 18048              		.loc 1 2347 0
 18049 0594 7869     		ldr	r0, [r7, #20]
 18050 0596 FFF7FEFF 		bl	strlen
 18051 059a 0346     		mov	r3, r0
 18052 059c 1A46     		mov	r2, r3
 18053 059e 7B69     		ldr	r3, [r7, #20]
 18054 05a0 1344     		add	r3, r3, r2
 18055 05a2 2F4A     		ldr	r2, .L733+28
 18056 05a4 1D46     		mov	r5, r3
 18057 05a6 1446     		mov	r4, r2
 18058 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18059 05aa 2860     		str	r0, [r5]	@ unaligned
 18060 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 18061 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 18062 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 18063 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 18064 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2348:..\src/command_processing.c ****                 break;
 18065              		.loc 1 2348 0
 18066 05b6 ADE0     		b	.L680
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 398


 18067              	.L683:
2349:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2350:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 18068              		.loc 1 2350 0
 18069 05b8 7869     		ldr	r0, [r7, #20]
 18070 05ba FFF7FEFF 		bl	strlen
 18071 05be 0346     		mov	r3, r0
 18072 05c0 1A46     		mov	r2, r3
 18073 05c2 7B69     		ldr	r3, [r7, #20]
 18074 05c4 1344     		add	r3, r3, r2
 18075 05c6 274A     		ldr	r2, .L733+32
 18076 05c8 1D46     		mov	r5, r3
 18077 05ca 1446     		mov	r4, r2
 18078 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18079 05ce 2860     		str	r0, [r5]	@ unaligned
 18080 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 18081 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 18082 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 18083 05d6 2068     		ldr	r0, [r4]	@ unaligned
 18084 05d8 2861     		str	r0, [r5, #16]	@ unaligned
 18085 05da 2379     		ldrb	r3, [r4, #4]
 18086 05dc 2B75     		strb	r3, [r5, #20]
2351:..\src/command_processing.c ****                 break;
 18087              		.loc 1 2351 0
 18088 05de 99E0     		b	.L680
 18089              	.L684:
2352:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2353:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 18090              		.loc 1 2353 0
 18091 05e0 7869     		ldr	r0, [r7, #20]
 18092 05e2 FFF7FEFF 		bl	strlen
 18093 05e6 0346     		mov	r3, r0
 18094 05e8 1A46     		mov	r2, r3
 18095 05ea 7B69     		ldr	r3, [r7, #20]
 18096 05ec 1344     		add	r3, r3, r2
 18097 05ee 1E4A     		ldr	r2, .L733+36
 18098 05f0 1D46     		mov	r5, r3
 18099 05f2 1446     		mov	r4, r2
 18100 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18101 05f6 2860     		str	r0, [r5]	@ unaligned
 18102 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 18103 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 18104 05fc EB60     		str	r3, [r5, #12]	@ unaligned
 18105 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 18106 0600 2861     		str	r0, [r5, #16]	@ unaligned
 18107 0602 6961     		str	r1, [r5, #20]	@ unaligned
 18108 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 18109 0606 2388     		ldrh	r3, [r4]	@ unaligned
 18110 0608 A278     		ldrb	r2, [r4, #2]
 18111 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 18112 060c 1346     		mov	r3, r2
 18113 060e AB77     		strb	r3, [r5, #30]
2354:..\src/command_processing.c ****                 break;
 18114              		.loc 1 2354 0
 18115 0610 80E0     		b	.L680
 18116              	.L685:
2355:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 399


2356:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 18117              		.loc 1 2356 0
 18118 0612 7869     		ldr	r0, [r7, #20]
 18119 0614 FFF7FEFF 		bl	strlen
 18120 0618 0346     		mov	r3, r0
 18121 061a 1A46     		mov	r2, r3
 18122 061c 7B69     		ldr	r3, [r7, #20]
 18123 061e 1344     		add	r3, r3, r2
 18124 0620 124A     		ldr	r2, .L733+40
 18125 0622 1D46     		mov	r5, r3
 18126 0624 1446     		mov	r4, r2
 18127 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18128 0628 2860     		str	r0, [r5]	@ unaligned
 18129 062a 6960     		str	r1, [r5, #4]	@ unaligned
 18130 062c AA60     		str	r2, [r5, #8]	@ unaligned
 18131 062e EB60     		str	r3, [r5, #12]	@ unaligned
 18132 0630 03CC     		ldmia	r4!, {r0, r1}
 18133 0632 2861     		str	r0, [r5, #16]	@ unaligned
 18134 0634 6961     		str	r1, [r5, #20]	@ unaligned
 18135 0636 2388     		ldrh	r3, [r4]	@ unaligned
 18136 0638 A278     		ldrb	r2, [r4, #2]
 18137 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 18138 063c 1346     		mov	r3, r2
 18139 063e AB76     		strb	r3, [r5, #26]
2357:..\src/command_processing.c ****                 break;
 18140              		.loc 1 2357 0
 18141 0640 68E0     		b	.L680
 18142              	.L734:
 18143 0642 00BF     		.align	2
 18144              	.L733:
 18145 0644 0000F040 		.word	1089470464
 18146 0648 1C100000 		.word	.LC161
 18147 064c 28100000 		.word	.LC162
 18148 0650 34100000 		.word	.LC163
 18149 0654 28190000 		.word	.LC250
 18150 0658 5C100000 		.word	.LC165
 18151 065c 78100000 		.word	.LC166
 18152 0660 94100000 		.word	.LC167
 18153 0664 A8100000 		.word	.LC168
 18154 0668 C0100000 		.word	.LC169
 18155 066c E0100000 		.word	.LC170
 18156              	.L686:
2358:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2359:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 18157              		.loc 1 2359 0
 18158 0670 7869     		ldr	r0, [r7, #20]
 18159 0672 FFF7FEFF 		bl	strlen
 18160 0676 0346     		mov	r3, r0
 18161 0678 1A46     		mov	r2, r3
 18162 067a 7B69     		ldr	r3, [r7, #20]
 18163 067c 1344     		add	r3, r3, r2
 18164 067e AF4A     		ldr	r2, .L735
 18165 0680 1C46     		mov	r4, r3
 18166 0682 1546     		mov	r5, r2
 18167 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18168 0686 2060     		str	r0, [r4]	@ unaligned
 18169 0688 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 400


 18170 068a A260     		str	r2, [r4, #8]	@ unaligned
 18171 068c E360     		str	r3, [r4, #12]	@ unaligned
 18172 068e 2868     		ldr	r0, [r5]	@ unaligned
 18173 0690 2061     		str	r0, [r4, #16]	@ unaligned
 18174 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18175 0694 AA79     		ldrb	r2, [r5, #6]
 18176 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 18177 0698 1346     		mov	r3, r2
 18178 069a A375     		strb	r3, [r4, #22]
2360:..\src/command_processing.c ****                 break;
 18179              		.loc 1 2360 0
 18180 069c 3AE0     		b	.L680
 18181              	.L687:
2361:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2362:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 18182              		.loc 1 2362 0
 18183 069e 7869     		ldr	r0, [r7, #20]
 18184 06a0 FFF7FEFF 		bl	strlen
 18185 06a4 0346     		mov	r3, r0
 18186 06a6 1A46     		mov	r2, r3
 18187 06a8 7B69     		ldr	r3, [r7, #20]
 18188 06aa 1344     		add	r3, r3, r2
 18189 06ac A44A     		ldr	r2, .L735+4
 18190 06ae 1D46     		mov	r5, r3
 18191 06b0 1446     		mov	r4, r2
 18192 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18193 06b4 2860     		str	r0, [r5]	@ unaligned
 18194 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 18195 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 18196 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 18197 06bc 03CC     		ldmia	r4!, {r0, r1}
 18198 06be 2861     		str	r0, [r5, #16]	@ unaligned
 18199 06c0 6961     		str	r1, [r5, #20]	@ unaligned
 18200 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 18201 06c4 A278     		ldrb	r2, [r4, #2]
 18202 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 18203 06c8 1346     		mov	r3, r2
 18204 06ca AB76     		strb	r3, [r5, #26]
2363:..\src/command_processing.c ****                 break;
 18205              		.loc 1 2363 0
 18206 06cc 22E0     		b	.L680
 18207              	.L688:
2364:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2365:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 18208              		.loc 1 2365 0
 18209 06ce 7869     		ldr	r0, [r7, #20]
 18210 06d0 FFF7FEFF 		bl	strlen
 18211 06d4 0346     		mov	r3, r0
 18212 06d6 1A46     		mov	r2, r3
 18213 06d8 7B69     		ldr	r3, [r7, #20]
 18214 06da 1344     		add	r3, r3, r2
 18215 06dc 994A     		ldr	r2, .L735+8
 18216 06de 1546     		mov	r5, r2
 18217 06e0 9E46     		mov	lr, r3
 18218 06e2 05F1200C 		add	ip, r5, #32
 18219              	.L689:
 18220 06e6 7446     		mov	r4, lr
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 401


 18221 06e8 2E46     		mov	r6, r5
 18222 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18223 06ec 2060     		str	r0, [r4]	@ unaligned
 18224 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 18225 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 18226 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 18227 06f4 1035     		adds	r5, r5, #16
 18228 06f6 0EF1100E 		add	lr, lr, #16
 18229 06fa 6545     		cmp	r5, ip
 18230 06fc F3D1     		bne	.L689
 18231 06fe 7446     		mov	r4, lr
 18232 0700 2B46     		mov	r3, r5
 18233 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 18234 0704 2060     		str	r0, [r4]	@ unaligned
 18235 0706 6160     		str	r1, [r4, #4]	@ unaligned
 18236 0708 A260     		str	r2, [r4, #8]	@ unaligned
 18237 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 18238 070c 9B78     		ldrb	r3, [r3, #2]
 18239 070e A281     		strh	r2, [r4, #12]	@ unaligned
 18240 0710 A373     		strb	r3, [r4, #14]
2366:..\src/command_processing.c ****                     break;
 18241              		.loc 1 2366 0
 18242 0712 00BF     		nop
 18243              	.L680:
2367:..\src/command_processing.c ****         }
2368:..\src/command_processing.c **** 
2369:..\src/command_processing.c ****         switch(MOT->control_mode) {
 18244              		.loc 1 2369 0
 18245 0714 D7F88430 		ldr	r3, [r7, #132]
 18246 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18247 071c 032B     		cmp	r3, #3
 18248 071e 64D8     		bhi	.L729
 18249 0720 01A2     		adr	r2, .L692
 18250 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18251 0726 00BF     		.p2align 2
 18252              	.L692:
 18253 0728 39070000 		.word	.L691+1
 18254 072c 63070000 		.word	.L693+1
 18255 0730 87070000 		.word	.L694+1
 18256 0734 AD070000 		.word	.L695+1
 18257              		.p2align 1
 18258              	.L691:
2370:..\src/command_processing.c ****             case CONTROL_ANGLE:
2371:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 18259              		.loc 1 2371 0
 18260 0738 7869     		ldr	r0, [r7, #20]
 18261 073a FFF7FEFF 		bl	strlen
 18262 073e 0346     		mov	r3, r0
 18263 0740 1A46     		mov	r2, r3
 18264 0742 7B69     		ldr	r3, [r7, #20]
 18265 0744 1344     		add	r3, r3, r2
 18266 0746 804A     		ldr	r2, .L735+12
 18267 0748 1D46     		mov	r5, r3
 18268 074a 1446     		mov	r4, r2
 18269 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18270 074e 2860     		str	r0, [r5]	@ unaligned
 18271 0750 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 402


 18272 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 18273 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 18274 0756 03CC     		ldmia	r4!, {r0, r1}
 18275 0758 2861     		str	r0, [r5, #16]	@ unaligned
 18276 075a 6961     		str	r1, [r5, #20]	@ unaligned
 18277 075c 2378     		ldrb	r3, [r4]
 18278 075e 2B76     		strb	r3, [r5, #24]
2372:..\src/command_processing.c ****                 break;
 18279              		.loc 1 2372 0
 18280 0760 44E0     		b	.L696
 18281              	.L693:
2373:..\src/command_processing.c ****             case CONTROL_PWM:
2374:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18282              		.loc 1 2374 0
 18283 0762 7869     		ldr	r0, [r7, #20]
 18284 0764 FFF7FEFF 		bl	strlen
 18285 0768 0346     		mov	r3, r0
 18286 076a 1A46     		mov	r2, r3
 18287 076c 7B69     		ldr	r3, [r7, #20]
 18288 076e 1344     		add	r3, r3, r2
 18289 0770 764A     		ldr	r2, .L735+16
 18290 0772 1D46     		mov	r5, r3
 18291 0774 1446     		mov	r4, r2
 18292 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18293 0778 2860     		str	r0, [r5]	@ unaligned
 18294 077a 6960     		str	r1, [r5, #4]	@ unaligned
 18295 077c AA60     		str	r2, [r5, #8]	@ unaligned
 18296 077e EB60     		str	r3, [r5, #12]	@ unaligned
 18297 0780 2068     		ldr	r0, [r4]	@ unaligned
 18298 0782 2861     		str	r0, [r5, #16]	@ unaligned
2375:..\src/command_processing.c ****                 break;
 18299              		.loc 1 2375 0
 18300 0784 32E0     		b	.L696
 18301              	.L694:
2376:..\src/command_processing.c ****             case CONTROL_CURRENT:
2377:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18302              		.loc 1 2377 0
 18303 0786 7869     		ldr	r0, [r7, #20]
 18304 0788 FFF7FEFF 		bl	strlen
 18305 078c 0346     		mov	r3, r0
 18306 078e 1A46     		mov	r2, r3
 18307 0790 7B69     		ldr	r3, [r7, #20]
 18308 0792 1344     		add	r3, r3, r2
 18309 0794 6E4A     		ldr	r2, .L735+20
 18310 0796 1D46     		mov	r5, r3
 18311 0798 1446     		mov	r4, r2
 18312 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18313 079c 2860     		str	r0, [r5]	@ unaligned
 18314 079e 6960     		str	r1, [r5, #4]	@ unaligned
 18315 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 18316 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 18317 07a4 03CC     		ldmia	r4!, {r0, r1}
 18318 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 18319 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2378:..\src/command_processing.c ****                 break;
 18320              		.loc 1 2378 0
 18321 07aa 1FE0     		b	.L696
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 403


 18322              	.L695:
2379:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2380:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18323              		.loc 1 2380 0
 18324 07ac 7869     		ldr	r0, [r7, #20]
 18325 07ae FFF7FEFF 		bl	strlen
 18326 07b2 0346     		mov	r3, r0
 18327 07b4 1A46     		mov	r2, r3
 18328 07b6 7B69     		ldr	r3, [r7, #20]
 18329 07b8 1344     		add	r3, r3, r2
 18330 07ba 664A     		ldr	r2, .L735+24
 18331 07bc 1446     		mov	r4, r2
 18332 07be 9E46     		mov	lr, r3
 18333 07c0 04F1200C 		add	ip, r4, #32
 18334              	.L697:
 18335 07c4 7546     		mov	r5, lr
 18336 07c6 2646     		mov	r6, r4
 18337 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18338 07ca 2860     		str	r0, [r5]	@ unaligned
 18339 07cc 6960     		str	r1, [r5, #4]	@ unaligned
 18340 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 18341 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 18342 07d2 1034     		adds	r4, r4, #16
 18343 07d4 0EF1100E 		add	lr, lr, #16
 18344 07d8 6445     		cmp	r4, ip
 18345 07da F3D1     		bne	.L697
 18346 07dc 7346     		mov	r3, lr
 18347 07de 2246     		mov	r2, r4
 18348 07e0 1068     		ldr	r0, [r2]	@ unaligned
 18349 07e2 1860     		str	r0, [r3]	@ unaligned
 18350 07e4 1279     		ldrb	r2, [r2, #4]
 18351 07e6 1A71     		strb	r2, [r3, #4]
2381:..\src/command_processing.c ****                 break;
 18352              		.loc 1 2381 0
 18353 07e8 00E0     		b	.L696
 18354              	.L729:
2382:..\src/command_processing.c ****             default:
2383:..\src/command_processing.c ****                 break;
 18355              		.loc 1 2383 0
 18356 07ea 00BF     		nop
 18357              	.L696:
2384:..\src/command_processing.c ****         }
2385:..\src/command_processing.c **** 
2386:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18358              		.loc 1 2386 0
 18359 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18360 07f0 D7F88C10 		ldr	r1, [r7, #140]
 18361 07f4 1346     		mov	r3, r2
 18362 07f6 5B00     		lsls	r3, r3, #1
 18363 07f8 1344     		add	r3, r3, r2
 18364 07fa 1B01     		lsls	r3, r3, #4
 18365 07fc 0B44     		add	r3, r3, r1
 18366 07fe 03F5D873 		add	r3, r3, #432
 18367 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18368 0804 002B     		cmp	r3, #0
 18369 0806 1CD0     		beq	.L698
2387:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 404


 18370              		.loc 1 2387 0
 18371 0808 7869     		ldr	r0, [r7, #20]
 18372 080a FFF7FEFF 		bl	strlen
 18373 080e 0346     		mov	r3, r0
 18374 0810 1A46     		mov	r2, r3
 18375 0812 7B69     		ldr	r3, [r7, #20]
 18376 0814 1344     		add	r3, r3, r2
 18377 0816 504A     		ldr	r2, .L735+28
 18378 0818 1446     		mov	r4, r2
 18379 081a 9E46     		mov	lr, r3
 18380 081c 04F1200C 		add	ip, r4, #32
 18381              	.L699:
 18382 0820 7546     		mov	r5, lr
 18383 0822 2646     		mov	r6, r4
 18384 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18385 0826 2860     		str	r0, [r5]	@ unaligned
 18386 0828 6960     		str	r1, [r5, #4]	@ unaligned
 18387 082a AA60     		str	r2, [r5, #8]	@ unaligned
 18388 082c EB60     		str	r3, [r5, #12]	@ unaligned
 18389 082e 1034     		adds	r4, r4, #16
 18390 0830 0EF1100E 		add	lr, lr, #16
 18391 0834 6445     		cmp	r4, ip
 18392 0836 F3D1     		bne	.L699
 18393 0838 7346     		mov	r3, lr
 18394 083a 2246     		mov	r2, r4
 18395 083c 1278     		ldrb	r2, [r2]
 18396 083e 1A70     		strb	r2, [r3]
 18397 0840 13E0     		b	.L700
 18398              	.L698:
2388:..\src/command_processing.c ****         else
2389:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18399              		.loc 1 2389 0
 18400 0842 7869     		ldr	r0, [r7, #20]
 18401 0844 FFF7FEFF 		bl	strlen
 18402 0848 0346     		mov	r3, r0
 18403 084a 1A46     		mov	r2, r3
 18404 084c 7B69     		ldr	r3, [r7, #20]
 18405 084e 1344     		add	r3, r3, r2
 18406 0850 424A     		ldr	r2, .L735+32
 18407 0852 1C46     		mov	r4, r3
 18408 0854 1546     		mov	r5, r2
 18409 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18410 0858 2060     		str	r0, [r4]	@ unaligned
 18411 085a 6160     		str	r1, [r4, #4]	@ unaligned
 18412 085c A260     		str	r2, [r4, #8]	@ unaligned
 18413 085e E360     		str	r3, [r4, #12]	@ unaligned
 18414 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18415 0862 2061     		str	r0, [r4, #16]	@ unaligned
 18416 0864 6161     		str	r1, [r4, #20]	@ unaligned
 18417 0866 A261     		str	r2, [r4, #24]	@ unaligned
 18418 0868 E361     		str	r3, [r4, #28]	@ unaligned
 18419              	.L700:
2390:..\src/command_processing.c **** 
2391:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18420              		.loc 1 2391 0
 18421 086a 7869     		ldr	r0, [r7, #20]
 18422 086c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 405


 18423 0870 0346     		mov	r3, r0
 18424 0872 1A46     		mov	r2, r3
 18425 0874 7B69     		ldr	r3, [r7, #20]
 18426 0876 1344     		add	r3, r3, r2
 18427 0878 394A     		ldr	r2, .L735+36
 18428 087a 1C46     		mov	r4, r3
 18429 087c 1346     		mov	r3, r2
 18430 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 18431 0880 2060     		str	r0, [r4]	@ unaligned
 18432 0882 6160     		str	r1, [r4, #4]	@ unaligned
 18433 0884 A260     		str	r2, [r4, #8]	@ unaligned
 18434 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 18435 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2392:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18436              		.loc 1 2392 0
 18437 088a 0023     		movs	r3, #0
 18438 088c C7F89430 		str	r3, [r7, #148]
 18439 0890 30E0     		b	.L701
 18440              	.L703:
2393:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18441              		.loc 1 2393 0
 18442 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18443 0896 D7F88C10 		ldr	r1, [r7, #140]
 18444 089a 1346     		mov	r3, r2
 18445 089c 5B00     		lsls	r3, r3, #1
 18446 089e 1344     		add	r3, r3, r2
 18447 08a0 1B01     		lsls	r3, r3, #4
 18448 08a2 CA18     		adds	r2, r1, r3
 18449 08a4 D7F89430 		ldr	r3, [r7, #148]
 18450 08a8 1344     		add	r3, r3, r2
 18451 08aa 03F29513 		addw	r3, r3, #405
 18452 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18453 08b0 1A46     		mov	r2, r3
 18454 08b2 07F11C03 		add	r3, r7, #28
 18455 08b6 2B49     		ldr	r1, .L735+40
 18456 08b8 1846     		mov	r0, r3
 18457 08ba FFF7FEFF 		bl	sprintf
2394:..\src/command_processing.c ****             strcat(info_string, str);
 18458              		.loc 1 2394 0
 18459 08be 07F11C03 		add	r3, r7, #28
 18460 08c2 1946     		mov	r1, r3
 18461 08c4 7869     		ldr	r0, [r7, #20]
 18462 08c6 FFF7FEFF 		bl	strcat
2395:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18463              		.loc 1 2395 0
 18464 08ca D7F89430 		ldr	r3, [r7, #148]
 18465 08ce 022B     		cmp	r3, #2
 18466 08d0 0BD0     		beq	.L702
2396:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18467              		.loc 1 2396 0
 18468 08d2 7869     		ldr	r0, [r7, #20]
 18469 08d4 FFF7FEFF 		bl	strlen
 18470 08d8 0346     		mov	r3, r0
 18471 08da 1A46     		mov	r2, r3
 18472 08dc 7B69     		ldr	r3, [r7, #20]
 18473 08de 1344     		add	r3, r3, r2
 18474 08e0 214A     		ldr	r2, .L735+44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 406


 18475 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 18476 08e4 9278     		ldrb	r2, [r2, #2]
 18477 08e6 1980     		strh	r1, [r3]	@ unaligned
 18478 08e8 9A70     		strb	r2, [r3, #2]
 18479              	.L702:
2392:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18480              		.loc 1 2392 0 discriminator 2
 18481 08ea D7F89430 		ldr	r3, [r7, #148]
 18482 08ee 0133     		adds	r3, r3, #1
 18483 08f0 C7F89430 		str	r3, [r7, #148]
 18484              	.L701:
2392:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18485              		.loc 1 2392 0 is_stmt 0 discriminator 1
 18486 08f4 D7F89430 		ldr	r3, [r7, #148]
 18487 08f8 022B     		cmp	r3, #2
 18488 08fa CADD     		ble	.L703
2397:..\src/command_processing.c ****             }                
2398:..\src/command_processing.c ****         }
2399:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18489              		.loc 1 2399 0 is_stmt 1
 18490 08fc 7869     		ldr	r0, [r7, #20]
 18491 08fe FFF7FEFF 		bl	strlen
 18492 0902 0346     		mov	r3, r0
 18493 0904 1A46     		mov	r2, r3
 18494 0906 7B69     		ldr	r3, [r7, #20]
 18495 0908 1344     		add	r3, r3, r2
 18496 090a 184A     		ldr	r2, .L735+48
 18497 090c 1188     		ldrh	r1, [r2]	@ unaligned
 18498 090e 9278     		ldrb	r2, [r2, #2]
 18499 0910 1980     		strh	r1, [r3]	@ unaligned
 18500 0912 9A70     		strb	r2, [r3, #2]
2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18501              		.loc 1 2401 0
 18502 0914 7869     		ldr	r0, [r7, #20]
 18503 0916 FFF7FEFF 		bl	strlen
 18504 091a 0346     		mov	r3, r0
 18505 091c 1A46     		mov	r2, r3
 18506 091e 7B69     		ldr	r3, [r7, #20]
 18507 0920 1344     		add	r3, r3, r2
 18508 0922 1349     		ldr	r1, .L735+52
 18509 0924 1A46     		mov	r2, r3
 18510 0926 0B46     		mov	r3, r1
 18511 0928 03CB     		ldmia	r3!, {r0, r1}
 18512 092a 1060     		str	r0, [r2]	@ unaligned
 18513 092c 5160     		str	r1, [r2, #4]	@ unaligned
 18514 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 18515 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2402:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18516              		.loc 1 2402 0
 18517 0932 0023     		movs	r3, #0
 18518 0934 C7F89430 		str	r3, [r7, #148]
 18519 0938 5CE0     		b	.L704
 18520              	.L736:
 18521 093a 00BF     		.align	2
 18522              	.L735:
 18523 093c FC100000 		.word	.LC171
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 407


 18524 0940 14110000 		.word	.LC172
 18525 0944 30110000 		.word	.LC173
 18526 0948 60110000 		.word	.LC174
 18527 094c 7C110000 		.word	.LC175
 18528 0950 90110000 		.word	.LC176
 18529 0954 A8110000 		.word	.LC177
 18530 0958 D0110000 		.word	.LC178
 18531 095c F4110000 		.word	.LC179
 18532 0960 38190000 		.word	.LC251
 18533 0964 840F0000 		.word	.LC154
 18534 0968 880F0000 		.word	.LC155
 18535 096c C00D0000 		.word	.LC126
 18536 0970 48190000 		.word	.LC252
 18537              	.L706:
2403:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18538              		.loc 1 2403 0
 18539 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18540 0978 D7F88C10 		ldr	r1, [r7, #140]
 18541 097c 1346     		mov	r3, r2
 18542 097e 5B00     		lsls	r3, r3, #1
 18543 0980 1344     		add	r3, r3, r2
 18544 0982 9B00     		lsls	r3, r3, #2
 18545 0984 D7F89420 		ldr	r2, [r7, #148]
 18546 0988 1344     		add	r3, r3, r2
 18547 098a 6633     		adds	r3, r3, #102
 18548 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18549 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18550 0994 D7F88C00 		ldr	r0, [r7, #140]
 18551 0998 1346     		mov	r3, r2
 18552 099a 5B00     		lsls	r3, r3, #1
 18553 099c 1344     		add	r3, r3, r2
 18554 099e 1B01     		lsls	r3, r3, #4
 18555 09a0 C218     		adds	r2, r0, r3
 18556 09a2 D7F89430 		ldr	r3, [r7, #148]
 18557 09a6 1344     		add	r3, r3, r2
 18558 09a8 03F29513 		addw	r3, r3, #405
 18559 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18560 09ae 41FA03F2 		asr	r2, r1, r3
 18561 09b2 07F11C03 		add	r3, r7, #28
 18562 09b6 CC49     		ldr	r1, .L737
 18563 09b8 1846     		mov	r0, r3
 18564 09ba FFF7FEFF 		bl	sprintf
2404:..\src/command_processing.c ****             strcat(info_string, str);
 18565              		.loc 1 2404 0
 18566 09be 07F11C03 		add	r3, r7, #28
 18567 09c2 1946     		mov	r1, r3
 18568 09c4 7869     		ldr	r0, [r7, #20]
 18569 09c6 FFF7FEFF 		bl	strcat
2405:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18570              		.loc 1 2405 0
 18571 09ca D7F89430 		ldr	r3, [r7, #148]
 18572 09ce 022B     		cmp	r3, #2
 18573 09d0 0BD0     		beq	.L705
2406:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18574              		.loc 1 2406 0
 18575 09d2 7869     		ldr	r0, [r7, #20]
 18576 09d4 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 408


 18577 09d8 0346     		mov	r3, r0
 18578 09da 1A46     		mov	r2, r3
 18579 09dc 7B69     		ldr	r3, [r7, #20]
 18580 09de 1344     		add	r3, r3, r2
 18581 09e0 C24A     		ldr	r2, .L737+4
 18582 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 18583 09e4 9278     		ldrb	r2, [r2, #2]
 18584 09e6 1980     		strh	r1, [r3]	@ unaligned
 18585 09e8 9A70     		strb	r2, [r3, #2]
 18586              	.L705:
2402:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18587              		.loc 1 2402 0 discriminator 2
 18588 09ea D7F89430 		ldr	r3, [r7, #148]
 18589 09ee 0133     		adds	r3, r3, #1
 18590 09f0 C7F89430 		str	r3, [r7, #148]
 18591              	.L704:
2402:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18592              		.loc 1 2402 0 is_stmt 0 discriminator 1
 18593 09f4 D7F89430 		ldr	r3, [r7, #148]
 18594 09f8 022B     		cmp	r3, #2
 18595 09fa BBDD     		ble	.L706
2407:..\src/command_processing.c ****             }
2408:..\src/command_processing.c ****         }
2409:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18596              		.loc 1 2409 0 is_stmt 1
 18597 09fc 7869     		ldr	r0, [r7, #20]
 18598 09fe FFF7FEFF 		bl	strlen
 18599 0a02 0346     		mov	r3, r0
 18600 0a04 1A46     		mov	r2, r3
 18601 0a06 7B69     		ldr	r3, [r7, #20]
 18602 0a08 1344     		add	r3, r3, r2
 18603 0a0a B94A     		ldr	r2, .L737+8
 18604 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
 18605 0a0e 9278     		ldrb	r2, [r2, #2]
 18606 0a10 1980     		strh	r1, [r3]	@ unaligned
 18607 0a12 9A70     		strb	r2, [r3, #2]
2410:..\src/command_processing.c ****             
2411:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18608              		.loc 1 2411 0
 18609 0a14 7869     		ldr	r0, [r7, #20]
 18610 0a16 FFF7FEFF 		bl	strlen
 18611 0a1a 0346     		mov	r3, r0
 18612 0a1c 1A46     		mov	r2, r3
 18613 0a1e 7B69     		ldr	r3, [r7, #20]
 18614 0a20 1344     		add	r3, r3, r2
 18615 0a22 B44A     		ldr	r2, .L737+12
 18616 0a24 1C46     		mov	r4, r3
 18617 0a26 1346     		mov	r3, r2
 18618 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 18619 0a2a 2060     		str	r0, [r4]	@ unaligned
 18620 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 18621 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 18622 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 18623 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2412:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18624              		.loc 1 2412 0
 18625 0a34 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 409


 18626 0a36 C7F89430 		str	r3, [r7, #148]
 18627 0a3a 35E0     		b	.L707
 18628              	.L709:
2413:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18629              		.loc 1 2413 0
 18630 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18631 0a40 D7F88C10 		ldr	r1, [r7, #140]
 18632 0a44 1346     		mov	r3, r2
 18633 0a46 5B00     		lsls	r3, r3, #1
 18634 0a48 1344     		add	r3, r3, r2
 18635 0a4a 9B00     		lsls	r3, r3, #2
 18636 0a4c D7F89420 		ldr	r2, [r7, #148]
 18637 0a50 1344     		add	r3, r3, r2
 18638 0a52 6833     		adds	r3, r3, #104
 18639 0a54 9B00     		lsls	r3, r3, #2
 18640 0a56 0B44     		add	r3, r3, r1
 18641 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 18642 0a5a 1846     		mov	r0, r3
 18643 0a5c FFF7FEFF 		bl	__aeabi_f2d
 18644 0a60 0346     		mov	r3, r0
 18645 0a62 0C46     		mov	r4, r1
 18646 0a64 07F11C00 		add	r0, r7, #28
 18647 0a68 1A46     		mov	r2, r3
 18648 0a6a 2346     		mov	r3, r4
 18649 0a6c A249     		ldr	r1, .L737+16
 18650 0a6e FFF7FEFF 		bl	sprintf
2414:..\src/command_processing.c ****             strcat(info_string, str);
 18651              		.loc 1 2414 0
 18652 0a72 07F11C03 		add	r3, r7, #28
 18653 0a76 1946     		mov	r1, r3
 18654 0a78 7869     		ldr	r0, [r7, #20]
 18655 0a7a FFF7FEFF 		bl	strcat
2415:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18656              		.loc 1 2415 0
 18657 0a7e D7F89430 		ldr	r3, [r7, #148]
 18658 0a82 022B     		cmp	r3, #2
 18659 0a84 0BD0     		beq	.L708
2416:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18660              		.loc 1 2416 0
 18661 0a86 7869     		ldr	r0, [r7, #20]
 18662 0a88 FFF7FEFF 		bl	strlen
 18663 0a8c 0346     		mov	r3, r0
 18664 0a8e 1A46     		mov	r2, r3
 18665 0a90 7B69     		ldr	r3, [r7, #20]
 18666 0a92 1344     		add	r3, r3, r2
 18667 0a94 954A     		ldr	r2, .L737+4
 18668 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 18669 0a98 9278     		ldrb	r2, [r2, #2]
 18670 0a9a 1980     		strh	r1, [r3]	@ unaligned
 18671 0a9c 9A70     		strb	r2, [r3, #2]
 18672              	.L708:
2412:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18673              		.loc 1 2412 0 discriminator 2
 18674 0a9e D7F89430 		ldr	r3, [r7, #148]
 18675 0aa2 0133     		adds	r3, r3, #1
 18676 0aa4 C7F89430 		str	r3, [r7, #148]
 18677              	.L707:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 410


2412:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18678              		.loc 1 2412 0 is_stmt 0 discriminator 1
 18679 0aa8 D7F89430 		ldr	r3, [r7, #148]
 18680 0aac 022B     		cmp	r3, #2
 18681 0aae C5DD     		ble	.L709
2417:..\src/command_processing.c ****             }
2418:..\src/command_processing.c ****         }
2419:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18682              		.loc 1 2419 0 is_stmt 1
 18683 0ab0 7869     		ldr	r0, [r7, #20]
 18684 0ab2 FFF7FEFF 		bl	strlen
 18685 0ab6 0346     		mov	r3, r0
 18686 0ab8 1A46     		mov	r2, r3
 18687 0aba 7B69     		ldr	r3, [r7, #20]
 18688 0abc 1344     		add	r3, r3, r2
 18689 0abe 8C4A     		ldr	r2, .L737+8
 18690 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 18691 0ac2 9278     		ldrb	r2, [r2, #2]
 18692 0ac4 1980     		strh	r1, [r3]	@ unaligned
 18693 0ac6 9A70     		strb	r2, [r3, #2]
2420:..\src/command_processing.c **** 
2421:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18694              		.loc 1 2421 0
 18695 0ac8 D7F88430 		ldr	r3, [r7, #132]
 18696 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
 18697 0ace 1846     		mov	r0, r3
 18698 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 18699 0ad4 C7E90201 		strd	r0, [r7, #8]
 18700 0ad8 D7F88430 		ldr	r3, [r7, #132]
 18701 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 18702 0ade 1846     		mov	r0, r3
 18703 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 18704 0ae4 0446     		mov	r4, r0
 18705 0ae6 0D46     		mov	r5, r1
 18706 0ae8 D7F88430 		ldr	r3, [r7, #132]
 18707 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 18708 0aee 1846     		mov	r0, r3
 18709 0af0 FFF7FEFF 		bl	__aeabi_f2d
 18710 0af4 8046     		mov	r8, r0
 18711 0af6 8946     		mov	r9, r1
 18712 0af8 D7F88430 		ldr	r3, [r7, #132]
 18713 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 18714 0afe 1846     		mov	r0, r3
 18715 0b00 FFF7FEFF 		bl	__aeabi_f2d
 18716 0b04 8246     		mov	r10, r0
 18717 0b06 8B46     		mov	fp, r1
 18718 0b08 D7F88430 		ldr	r3, [r7, #132]
 18719 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 18720 0b0e 1846     		mov	r0, r3
 18721 0b10 FFF7FEFF 		bl	__aeabi_f2d
 18722 0b14 C7E90001 		strd	r0, [r7]
 18723 0b18 D7F88430 		ldr	r3, [r7, #132]
 18724 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 18725 0b1e 1846     		mov	r0, r3
 18726 0b20 FFF7FEFF 		bl	__aeabi_f2d
 18727 0b24 0246     		mov	r2, r0
 18728 0b26 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 411


 18729 0b28 07F11C00 		add	r0, r7, #28
 18730 0b2c CDE90823 		strd	r2, [sp, #32]
 18731 0b30 D7E90012 		ldrd	r1, [r7]
 18732 0b34 CDE90612 		strd	r1, [sp, #24]
 18733 0b38 CDE904AB 		strd	r10, [sp, #16]
 18734 0b3c CDE90289 		strd	r8, [sp, #8]
 18735 0b40 CDE90045 		strd	r4, [sp]
 18736 0b44 D7E90223 		ldrd	r2, [r7, #8]
 18737 0b48 6C49     		ldr	r1, .L737+20
 18738 0b4a FFF7FEFF 		bl	sprintf
2422:..\src/command_processing.c **** 		strcat(info_string, str);
 18739              		.loc 1 2422 0
 18740 0b4e 07F11C03 		add	r3, r7, #28
 18741 0b52 1946     		mov	r1, r3
 18742 0b54 7869     		ldr	r0, [r7, #20]
 18743 0b56 FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c **** 
2424:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18744              		.loc 1 2424 0
 18745 0b5a D7F88430 		ldr	r3, [r7, #132]
 18746 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18747 0b62 1A46     		mov	r2, r3
 18748 0b64 07F11C03 		add	r3, r7, #28
 18749 0b68 6549     		ldr	r1, .L737+24
 18750 0b6a 1846     		mov	r0, r3
 18751 0b6c FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c **** 		strcat(info_string, str);
 18752              		.loc 1 2425 0
 18753 0b70 07F11C03 		add	r3, r7, #28
 18754 0b74 1946     		mov	r1, r3
 18755 0b76 7869     		ldr	r0, [r7, #20]
 18756 0b78 FFF7FEFF 		bl	strcat
2426:..\src/command_processing.c **** 
2427:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18757              		.loc 1 2427 0
 18758 0b7c D7F88430 		ldr	r3, [r7, #132]
 18759 0b80 596B     		ldr	r1, [r3, #52]
 18760 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18761 0b86 D7F88C00 		ldr	r0, [r7, #140]
 18762 0b8a 1346     		mov	r3, r2
 18763 0b8c 5B00     		lsls	r3, r3, #1
 18764 0b8e 1344     		add	r3, r3, r2
 18765 0b90 1B01     		lsls	r3, r3, #4
 18766 0b92 0344     		add	r3, r3, r0
 18767 0b94 03F29513 		addw	r3, r3, #405
 18768 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18769 0b9a 41FA03F4 		asr	r4, r1, r3
 18770 0b9e D7F88430 		ldr	r3, [r7, #132]
 18771 0ba2 996B     		ldr	r1, [r3, #56]
 18772 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18773 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 18774 0bac 1346     		mov	r3, r2
 18775 0bae 5B00     		lsls	r3, r3, #1
 18776 0bb0 1344     		add	r3, r3, r2
 18777 0bb2 1B01     		lsls	r3, r3, #4
 18778 0bb4 0344     		add	r3, r3, r0
 18779 0bb6 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 412


 18780 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18781 0bbc 41FA03F3 		asr	r3, r1, r3
 18782 0bc0 07F11C00 		add	r0, r7, #28
 18783 0bc4 2246     		mov	r2, r4
 18784 0bc6 4F49     		ldr	r1, .L737+28
 18785 0bc8 FFF7FEFF 		bl	sprintf
2428:..\src/command_processing.c **** 		strcat(info_string, str);
 18786              		.loc 1 2428 0
 18787 0bcc 07F11C03 		add	r3, r7, #28
 18788 0bd0 1946     		mov	r1, r3
 18789 0bd2 7869     		ldr	r0, [r7, #20]
 18790 0bd4 FFF7FEFF 		bl	strcat
2429:..\src/command_processing.c **** 
2430:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18791              		.loc 1 2430 0
 18792 0bd8 D7F88430 		ldr	r3, [r7, #132]
 18793 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 18794 0be0 1A46     		mov	r2, r3
 18795 0be2 07F11C03 		add	r3, r7, #28
 18796 0be6 4849     		ldr	r1, .L737+32
 18797 0be8 1846     		mov	r0, r3
 18798 0bea FFF7FEFF 		bl	sprintf
2431:..\src/command_processing.c **** 		strcat(info_string, str);
 18799              		.loc 1 2431 0
 18800 0bee 07F11C03 		add	r3, r7, #28
 18801 0bf2 1946     		mov	r1, r3
 18802 0bf4 7869     		ldr	r0, [r7, #20]
 18803 0bf6 FFF7FEFF 		bl	strcat
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18804              		.loc 1 2433 0
 18805 0bfa D7F88430 		ldr	r3, [r7, #132]
 18806 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18807 0c02 022B     		cmp	r3, #2
 18808 0c04 12D0     		beq	.L710
2434:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18809              		.loc 1 2434 0 discriminator 1
 18810 0c06 D7F88430 		ldr	r3, [r7, #132]
 18811 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2433:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18812              		.loc 1 2433 0 discriminator 1
 18813 0c0e 032B     		cmp	r3, #3
 18814 0c10 0CD0     		beq	.L710
2435:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18815              		.loc 1 2435 0
 18816 0c12 D7F88430 		ldr	r3, [r7, #132]
 18817 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2434:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18818              		.loc 1 2434 0
 18819 0c1a 042B     		cmp	r3, #4
 18820 0c1c 06D0     		beq	.L710
2436:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 18821              		.loc 1 2436 0
 18822 0c1e D7F88430 		ldr	r3, [r7, #132]
 18823 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2435:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 18824              		.loc 1 2435 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 413


 18825 0c26 052B     		cmp	r3, #5
 18826 0c28 40F0A780 		bne	.L711
 18827              	.L710:
2437:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 18828              		.loc 1 2437 0
 18829 0c2c D7F88C30 		ldr	r3, [r7, #140]
 18830 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 18831 0c34 1A46     		mov	r2, r3
 18832 0c36 D7F88C30 		ldr	r3, [r7, #140]
 18833 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 18834 0c3e 07F11C00 		add	r0, r7, #28
 18835 0c42 3249     		ldr	r1, .L737+36
 18836 0c44 FFF7FEFF 		bl	sprintf
2438:..\src/command_processing.c **** 			strcat(info_string, str);
 18837              		.loc 1 2438 0
 18838 0c48 07F11C03 		add	r3, r7, #28
 18839 0c4c 1946     		mov	r1, r3
 18840 0c4e 7869     		ldr	r0, [r7, #20]
 18841 0c50 FFF7FEFF 		bl	strcat
2439:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18842              		.loc 1 2439 0
 18843 0c54 7869     		ldr	r0, [r7, #20]
 18844 0c56 FFF7FEFF 		bl	strlen
 18845 0c5a 0346     		mov	r3, r0
 18846 0c5c 1A46     		mov	r2, r3
 18847 0c5e 7B69     		ldr	r3, [r7, #20]
 18848 0c60 1344     		add	r3, r3, r2
 18849 0c62 234A     		ldr	r2, .L737+8
 18850 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 18851 0c66 9278     		ldrb	r2, [r2, #2]
 18852 0c68 1980     		strh	r1, [r3]	@ unaligned
 18853 0c6a 9A70     		strb	r2, [r3, #2]
2440:..\src/command_processing.c **** 
2441:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 18854              		.loc 1 2441 0
 18855 0c6c D7F88C30 		ldr	r3, [r7, #140]
 18856 0c70 D3F8F421 		ldr	r2, [r3, #500]
 18857 0c74 D7F88C30 		ldr	r3, [r7, #140]
 18858 0c78 D3F8F831 		ldr	r3, [r3, #504]
 18859 0c7c 07F11C00 		add	r0, r7, #28
 18860 0c80 2349     		ldr	r1, .L737+40
 18861 0c82 FFF7FEFF 		bl	sprintf
2442:..\src/command_processing.c **** 			strcat(info_string, str);
 18862              		.loc 1 2442 0
 18863 0c86 07F11C03 		add	r3, r7, #28
 18864 0c8a 1946     		mov	r1, r3
 18865 0c8c 7869     		ldr	r0, [r7, #20]
 18866 0c8e FFF7FEFF 		bl	strcat
2443:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18867              		.loc 1 2443 0
 18868 0c92 7869     		ldr	r0, [r7, #20]
 18869 0c94 FFF7FEFF 		bl	strlen
 18870 0c98 0346     		mov	r3, r0
 18871 0c9a 1A46     		mov	r2, r3
 18872 0c9c 7B69     		ldr	r3, [r7, #20]
 18873 0c9e 1344     		add	r3, r3, r2
 18874 0ca0 134A     		ldr	r2, .L737+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 414


 18875 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 18876 0ca4 9278     		ldrb	r2, [r2, #2]
 18877 0ca6 1980     		strh	r1, [r3]	@ unaligned
 18878 0ca8 9A70     		strb	r2, [r3, #2]
2444:..\src/command_processing.c **** 
2445:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 18879              		.loc 1 2445 0
 18880 0caa D7F88C30 		ldr	r3, [r7, #140]
 18881 0cae 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 18882 0cb2 002B     		cmp	r3, #0
 18883 0cb4 30D0     		beq	.L712
2446:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 18884              		.loc 1 2446 0
 18885 0cb6 7869     		ldr	r0, [r7, #20]
 18886 0cb8 FFF7FEFF 		bl	strlen
 18887 0cbc 0346     		mov	r3, r0
 18888 0cbe 1A46     		mov	r2, r3
 18889 0cc0 7B69     		ldr	r3, [r7, #20]
 18890 0cc2 1344     		add	r3, r3, r2
 18891 0cc4 134A     		ldr	r2, .L737+44
 18892 0cc6 1D46     		mov	r5, r3
 18893 0cc8 1446     		mov	r4, r2
 18894 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18895 0ccc 2860     		str	r0, [r5]	@ unaligned
 18896 0cce 6960     		str	r1, [r5, #4]	@ unaligned
 18897 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 18898 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 18899 0cd4 03CC     		ldmia	r4!, {r0, r1}
 18900 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 18901 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 18902 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 18903 0cdc A278     		ldrb	r2, [r4, #2]
 18904 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
 18905 0ce0 1346     		mov	r3, r2
 18906 0ce2 AB76     		strb	r3, [r5, #26]
 18907 0ce4 2CE0     		b	.L713
 18908              	.L738:
 18909 0ce6 00BF     		.align	2
 18910              	.L737:
 18911 0ce8 D0120000 		.word	.LC187
 18912 0cec 880F0000 		.word	.LC155
 18913 0cf0 C00D0000 		.word	.LC126
 18914 0cf4 54190000 		.word	.LC253
 18915 0cf8 F0120000 		.word	.LC189
 18916 0cfc 64190000 		.word	.LC254
 18917 0d00 A0190000 		.word	.LC255
 18918 0d04 BC190000 		.word	.LC256
 18919 0d08 90130000 		.word	.LC195
 18920 0d0c 84140000 		.word	.LC203
 18921 0d10 A8140000 		.word	.LC204
 18922 0d14 F8140000 		.word	.LC207
 18923              	.L712:
2447:..\src/command_processing.c **** 			else
2448:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 18924              		.loc 1 2448 0
 18925 0d18 7869     		ldr	r0, [r7, #20]
 18926 0d1a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 415


 18927 0d1e 0346     		mov	r3, r0
 18928 0d20 1A46     		mov	r2, r3
 18929 0d22 7B69     		ldr	r3, [r7, #20]
 18930 0d24 1344     		add	r3, r3, r2
 18931 0d26 CF4A     		ldr	r2, .L739
 18932 0d28 1D46     		mov	r5, r3
 18933 0d2a 1446     		mov	r4, r2
 18934 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18935 0d2e 2860     		str	r0, [r5]	@ unaligned
 18936 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 18937 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 18938 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 18939 0d36 03CC     		ldmia	r4!, {r0, r1}
 18940 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 18941 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 18942 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 18943 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 18944              	.L713:
2449:..\src/command_processing.c **** 
2450:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 18945              		.loc 1 2450 0
 18946 0d40 D7F88C30 		ldr	r3, [r7, #140]
 18947 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 18948 0d48 1A46     		mov	r2, r3
 18949 0d4a 07F11C03 		add	r3, r7, #28
 18950 0d4e C649     		ldr	r1, .L739+4
 18951 0d50 1846     		mov	r0, r3
 18952 0d52 FFF7FEFF 		bl	sprintf
2451:..\src/command_processing.c **** 			strcat(info_string, str);
 18953              		.loc 1 2451 0
 18954 0d56 07F11C03 		add	r3, r7, #28
 18955 0d5a 1946     		mov	r1, r3
 18956 0d5c 7869     		ldr	r0, [r7, #20]
 18957 0d5e FFF7FEFF 		bl	strcat
2452:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 18958              		.loc 1 2452 0
 18959 0d62 7869     		ldr	r0, [r7, #20]
 18960 0d64 FFF7FEFF 		bl	strlen
 18961 0d68 0346     		mov	r3, r0
 18962 0d6a 1A46     		mov	r2, r3
 18963 0d6c 7B69     		ldr	r3, [r7, #20]
 18964 0d6e 1344     		add	r3, r3, r2
 18965 0d70 BE4A     		ldr	r2, .L739+8
 18966 0d72 1188     		ldrh	r1, [r2]	@ unaligned
 18967 0d74 9278     		ldrb	r2, [r2, #2]
 18968 0d76 1980     		strh	r1, [r3]	@ unaligned
 18969 0d78 9A70     		strb	r2, [r3, #2]
 18970              	.L711:
 18971              	.LBE20:
2286:..\src/command_processing.c ****             
 18972              		.loc 1 2286 0 discriminator 2
 18973 0d7a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 18974 0d7e 0133     		adds	r3, r3, #1
 18975 0d80 87F89330 		strb	r3, [r7, #147]
 18976              	.L671:
2286:..\src/command_processing.c ****             
 18977              		.loc 1 2286 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 416


 18978 0d84 D7F88C30 		ldr	r3, [r7, #140]
 18979 0d88 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 18980 0d8c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 18981 0d90 9A42     		cmp	r2, r3
 18982 0d92 7FF6BEA9 		bls	.L714
 18983              	.LBE19:
2453:..\src/command_processing.c **** 		}
2454:..\src/command_processing.c **** 	}
2455:..\src/command_processing.c **** 	 
2456:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 18984              		.loc 1 2456 0 is_stmt 1
 18985 0d96 D7F88C30 		ldr	r3, [r7, #140]
 18986 0d9a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 18987 0d9e 002B     		cmp	r3, #0
 18988 0da0 63D0     		beq	.L715
2457:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 18989              		.loc 1 2457 0
 18990 0da2 D7F88C30 		ldr	r3, [r7, #140]
 18991 0da6 D3F8A422 		ldr	r2, [r3, #676]
 18992 0daa 07F11C03 		add	r3, r7, #28
 18993 0dae B049     		ldr	r1, .L739+12
 18994 0db0 1846     		mov	r0, r3
 18995 0db2 FFF7FEFF 		bl	sprintf
2458:..\src/command_processing.c ****         strcat(info_string, str);
 18996              		.loc 1 2458 0
 18997 0db6 07F11C03 		add	r3, r7, #28
 18998 0dba 1946     		mov	r1, r3
 18999 0dbc 7869     		ldr	r0, [r7, #20]
 19000 0dbe FFF7FEFF 		bl	strcat
2459:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19001              		.loc 1 2459 0
 19002 0dc2 7869     		ldr	r0, [r7, #20]
 19003 0dc4 FFF7FEFF 		bl	strlen
 19004 0dc8 0346     		mov	r3, r0
 19005 0dca 1A46     		mov	r2, r3
 19006 0dcc 7B69     		ldr	r3, [r7, #20]
 19007 0dce 1344     		add	r3, r3, r2
 19008 0dd0 A64A     		ldr	r2, .L739+8
 19009 0dd2 1188     		ldrh	r1, [r2]	@ unaligned
 19010 0dd4 9278     		ldrb	r2, [r2, #2]
 19011 0dd6 1980     		strh	r1, [r3]	@ unaligned
 19012 0dd8 9A70     		strb	r2, [r3, #2]
2460:..\src/command_processing.c ****         
2461:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 19013              		.loc 1 2461 0
 19014 0dda D7F88C30 		ldr	r3, [r7, #140]
 19015 0dde D3F8A822 		ldr	r2, [r3, #680]
 19016 0de2 07F11C03 		add	r3, r7, #28
 19017 0de6 A349     		ldr	r1, .L739+16
 19018 0de8 1846     		mov	r0, r3
 19019 0dea FFF7FEFF 		bl	sprintf
2462:..\src/command_processing.c ****         strcat(info_string, str);
 19020              		.loc 1 2462 0
 19021 0dee 07F11C03 		add	r3, r7, #28
 19022 0df2 1946     		mov	r1, r3
 19023 0df4 7869     		ldr	r0, [r7, #20]
 19024 0df6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 417


2463:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19025              		.loc 1 2463 0
 19026 0dfa 7869     		ldr	r0, [r7, #20]
 19027 0dfc FFF7FEFF 		bl	strlen
 19028 0e00 0346     		mov	r3, r0
 19029 0e02 1A46     		mov	r2, r3
 19030 0e04 7B69     		ldr	r3, [r7, #20]
 19031 0e06 1344     		add	r3, r3, r2
 19032 0e08 984A     		ldr	r2, .L739+8
 19033 0e0a 1188     		ldrh	r1, [r2]	@ unaligned
 19034 0e0c 9278     		ldrb	r2, [r2, #2]
 19035 0e0e 1980     		strh	r1, [r3]	@ unaligned
 19036 0e10 9A70     		strb	r2, [r3, #2]
2464:..\src/command_processing.c ****         
2465:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 19037              		.loc 1 2465 0
 19038 0e12 D7F88C30 		ldr	r3, [r7, #140]
 19039 0e16 D3F8A022 		ldr	r2, [r3, #672]
 19040 0e1a D7F88C30 		ldr	r3, [r7, #140]
 19041 0e1e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19042 0e22 1846     		mov	r0, r3
 19043 0e24 D7F88C10 		ldr	r1, [r7, #140]
 19044 0e28 0346     		mov	r3, r0
 19045 0e2a 5B00     		lsls	r3, r3, #1
 19046 0e2c 0344     		add	r3, r3, r0
 19047 0e2e 1B01     		lsls	r3, r3, #4
 19048 0e30 0B44     		add	r3, r3, r1
 19049 0e32 03F29513 		addw	r3, r3, #405
 19050 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19051 0e38 1A41     		asrs	r2, r2, r3
 19052 0e3a 07F11C03 		add	r3, r7, #28
 19053 0e3e 8E49     		ldr	r1, .L739+20
 19054 0e40 1846     		mov	r0, r3
 19055 0e42 FFF7FEFF 		bl	sprintf
2466:..\src/command_processing.c ****         strcat(info_string, str);
 19056              		.loc 1 2466 0
 19057 0e46 07F11C03 		add	r3, r7, #28
 19058 0e4a 1946     		mov	r1, r3
 19059 0e4c 7869     		ldr	r0, [r7, #20]
 19060 0e4e FFF7FEFF 		bl	strcat
2467:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 19061              		.loc 1 2467 0
 19062 0e52 7869     		ldr	r0, [r7, #20]
 19063 0e54 FFF7FEFF 		bl	strlen
 19064 0e58 0346     		mov	r3, r0
 19065 0e5a 1A46     		mov	r2, r3
 19066 0e5c 7B69     		ldr	r3, [r7, #20]
 19067 0e5e 1344     		add	r3, r3, r2
 19068 0e60 824A     		ldr	r2, .L739+8
 19069 0e62 1188     		ldrh	r1, [r2]	@ unaligned
 19070 0e64 9278     		ldrb	r2, [r2, #2]
 19071 0e66 1980     		strh	r1, [r3]	@ unaligned
 19072 0e68 9A70     		strb	r2, [r3, #2]
 19073              	.L715:
2468:..\src/command_processing.c ****     }
2469:..\src/command_processing.c **** 	
2470:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 418


 19074              		.loc 1 2470 0
 19075 0e6a D7F88C30 		ldr	r3, [r7, #140]
 19076 0e6e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 19077 0e72 002B     		cmp	r3, #0
 19078 0e74 00F0CC81 		beq	.L730
2471:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 19079              		.loc 1 2471 0
 19080 0e78 804B     		ldr	r3, .L739+24
 19081 0e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19082 0e7c 1A46     		mov	r2, r3
 19083 0e7e 07F11C03 		add	r3, r7, #28
 19084 0e82 7F49     		ldr	r1, .L739+28
 19085 0e84 1846     		mov	r0, r3
 19086 0e86 FFF7FEFF 		bl	sprintf
2472:..\src/command_processing.c **** 		strcat(info_string, str);
 19087              		.loc 1 2472 0
 19088 0e8a 07F11C03 		add	r3, r7, #28
 19089 0e8e 1946     		mov	r1, r3
 19090 0e90 7869     		ldr	r0, [r7, #20]
 19091 0e92 FFF7FEFF 		bl	strcat
2473:..\src/command_processing.c **** 		
2474:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19092              		.loc 1 2474 0
 19093 0e96 7869     		ldr	r0, [r7, #20]
 19094 0e98 FFF7FEFF 		bl	strlen
 19095 0e9c 0346     		mov	r3, r0
 19096 0e9e 1A46     		mov	r2, r3
 19097 0ea0 7B69     		ldr	r3, [r7, #20]
 19098 0ea2 1344     		add	r3, r3, r2
 19099 0ea4 714A     		ldr	r2, .L739+8
 19100 0ea6 1188     		ldrh	r1, [r2]	@ unaligned
 19101 0ea8 9278     		ldrb	r2, [r2, #2]
 19102 0eaa 1980     		strh	r1, [r3]	@ unaligned
 19103 0eac 9A70     		strb	r2, [r3, #2]
2475:..\src/command_processing.c **** 		
2476:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 19104              		.loc 1 2476 0
 19105 0eae 7869     		ldr	r0, [r7, #20]
 19106 0eb0 FFF7FEFF 		bl	strlen
 19107 0eb4 0346     		mov	r3, r0
 19108 0eb6 1A46     		mov	r2, r3
 19109 0eb8 7B69     		ldr	r3, [r7, #20]
 19110 0eba 1344     		add	r3, r3, r2
 19111 0ebc 714A     		ldr	r2, .L739+32
 19112 0ebe 1D46     		mov	r5, r3
 19113 0ec0 1446     		mov	r4, r2
 19114 0ec2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19115 0ec4 2860     		str	r0, [r5]	@ unaligned
 19116 0ec6 6960     		str	r1, [r5, #4]	@ unaligned
 19117 0ec8 AA60     		str	r2, [r5, #8]	@ unaligned
 19118 0eca EB60     		str	r3, [r5, #12]	@ unaligned
 19119 0ecc 2068     		ldr	r0, [r4]	@ unaligned
 19120 0ece 2861     		str	r0, [r5, #16]	@ unaligned
 19121 0ed0 2379     		ldrb	r3, [r4, #4]
 19122 0ed2 2B75     		strb	r3, [r5, #20]
2477:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 19123              		.loc 1 2477 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 419


 19124 0ed4 0023     		movs	r3, #0
 19125 0ed6 C7F89430 		str	r3, [r7, #148]
 19126 0eda 85E1     		b	.L717
 19127              	.L728:
2478:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19128              		.loc 1 2478 0
 19129 0edc 6A4A     		ldr	r2, .L739+36
 19130 0ede D7F89430 		ldr	r3, [r7, #148]
 19131 0ee2 1344     		add	r3, r3, r2
 19132 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19133 0ee6 07F11C00 		add	r0, r7, #28
 19134 0eea D7F89420 		ldr	r2, [r7, #148]
 19135 0eee 6749     		ldr	r1, .L739+40
 19136 0ef0 FFF7FEFF 		bl	sprintf
2479:..\src/command_processing.c **** 			strcat(info_string, str);
 19137              		.loc 1 2479 0
 19138 0ef4 07F11C03 		add	r3, r7, #28
 19139 0ef8 1946     		mov	r1, r3
 19140 0efa 7869     		ldr	r0, [r7, #20]
 19141 0efc FFF7FEFF 		bl	strcat
2480:..\src/command_processing.c **** 			
2481:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 19142              		.loc 1 2481 0
 19143 0f00 07F11C03 		add	r3, r7, #28
 19144 0f04 624A     		ldr	r2, .L739+44
 19145 0f06 1C46     		mov	r4, r3
 19146 0f08 1546     		mov	r5, r2
 19147 0f0a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19148 0f0c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 19149 0f0e 2B68     		ldr	r3, [r5]
 19150 0f10 2380     		strh	r3, [r4]	@ movhi
2482:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 19151              		.loc 1 2482 0
 19152 0f12 5D4A     		ldr	r2, .L739+36
 19153 0f14 D7F89430 		ldr	r3, [r7, #148]
 19154 0f18 1344     		add	r3, r3, r2
 19155 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19156 0f1c 1946     		mov	r1, r3
 19157 0f1e D7F88C20 		ldr	r2, [r7, #140]
 19158 0f22 0B46     		mov	r3, r1
 19159 0f24 9B00     		lsls	r3, r3, #2
 19160 0f26 0B44     		add	r3, r3, r1
 19161 0f28 1344     		add	r3, r3, r2
 19162 0f2a 03F20223 		addw	r3, r3, #514
 19163 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19164 0f30 002B     		cmp	r3, #0
 19165 0f32 0FD0     		beq	.L718
2483:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19166              		.loc 1 2483 0
 19167 0f34 07F11C03 		add	r3, r7, #28
 19168 0f38 1846     		mov	r0, r3
 19169 0f3a FFF7FEFF 		bl	strlen
 19170 0f3e 0346     		mov	r3, r0
 19171 0f40 1A46     		mov	r2, r3
 19172 0f42 07F11C03 		add	r3, r7, #28
 19173 0f46 1344     		add	r3, r3, r2
 19174 0f48 524A     		ldr	r2, .L739+48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 420


 19175 0f4a 1068     		ldr	r0, [r2]	@ unaligned
 19176 0f4c 1860     		str	r0, [r3]	@ unaligned
 19177 0f4e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19178 0f50 9A80     		strh	r2, [r3, #4]	@ unaligned
 19179 0f52 0EE0     		b	.L719
 19180              	.L718:
2484:..\src/command_processing.c **** 			else
2485:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19181              		.loc 1 2485 0
 19182 0f54 07F11C03 		add	r3, r7, #28
 19183 0f58 1846     		mov	r0, r3
 19184 0f5a FFF7FEFF 		bl	strlen
 19185 0f5e 0346     		mov	r3, r0
 19186 0f60 1A46     		mov	r2, r3
 19187 0f62 07F11C03 		add	r3, r7, #28
 19188 0f66 1344     		add	r3, r3, r2
 19189 0f68 4B4A     		ldr	r2, .L739+52
 19190 0f6a 1068     		ldr	r0, [r2]	@ unaligned
 19191 0f6c 1860     		str	r0, [r3]	@ unaligned
 19192 0f6e 1279     		ldrb	r2, [r2, #4]
 19193 0f70 1A71     		strb	r2, [r3, #4]
 19194              	.L719:
2486:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 19195              		.loc 1 2486 0
 19196 0f72 07F11C03 		add	r3, r7, #28
 19197 0f76 1846     		mov	r0, r3
 19198 0f78 FFF7FEFF 		bl	strlen
 19199 0f7c 0346     		mov	r3, r0
 19200 0f7e 1A46     		mov	r2, r3
 19201 0f80 07F11C03 		add	r3, r7, #28
 19202 0f84 1344     		add	r3, r3, r2
 19203 0f86 454A     		ldr	r2, .L739+56
 19204 0f88 1C46     		mov	r4, r3
 19205 0f8a 1346     		mov	r3, r2
 19206 0f8c 07CB     		ldmia	r3!, {r0, r1, r2}
 19207 0f8e 2060     		str	r0, [r4]	@ unaligned
 19208 0f90 6160     		str	r1, [r4, #4]	@ unaligned
 19209 0f92 A260     		str	r2, [r4, #8]	@ unaligned
 19210 0f94 1B88     		ldrh	r3, [r3]	@ unaligned
 19211 0f96 A381     		strh	r3, [r4, #12]	@ unaligned
2487:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 19212              		.loc 1 2487 0
 19213 0f98 3B4A     		ldr	r2, .L739+36
 19214 0f9a D7F89430 		ldr	r3, [r7, #148]
 19215 0f9e 1344     		add	r3, r3, r2
 19216 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19217 0fa2 1946     		mov	r1, r3
 19218 0fa4 D7F88C20 		ldr	r2, [r7, #140]
 19219 0fa8 0B46     		mov	r3, r1
 19220 0faa 9B00     		lsls	r3, r3, #2
 19221 0fac 0B44     		add	r3, r3, r1
 19222 0fae 1344     		add	r3, r3, r2
 19223 0fb0 03F20323 		addw	r3, r3, #515
 19224 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19225 0fb6 002B     		cmp	r3, #0
 19226 0fb8 0FD0     		beq	.L720
2488:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 421


 19227              		.loc 1 2488 0
 19228 0fba 07F11C03 		add	r3, r7, #28
 19229 0fbe 1846     		mov	r0, r3
 19230 0fc0 FFF7FEFF 		bl	strlen
 19231 0fc4 0346     		mov	r3, r0
 19232 0fc6 1A46     		mov	r2, r3
 19233 0fc8 07F11C03 		add	r3, r7, #28
 19234 0fcc 1344     		add	r3, r3, r2
 19235 0fce 314A     		ldr	r2, .L739+48
 19236 0fd0 1068     		ldr	r0, [r2]	@ unaligned
 19237 0fd2 1860     		str	r0, [r3]	@ unaligned
 19238 0fd4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19239 0fd6 9A80     		strh	r2, [r3, #4]	@ unaligned
 19240 0fd8 0EE0     		b	.L721
 19241              	.L720:
2489:..\src/command_processing.c **** 			else
2490:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19242              		.loc 1 2490 0
 19243 0fda 07F11C03 		add	r3, r7, #28
 19244 0fde 1846     		mov	r0, r3
 19245 0fe0 FFF7FEFF 		bl	strlen
 19246 0fe4 0346     		mov	r3, r0
 19247 0fe6 1A46     		mov	r2, r3
 19248 0fe8 07F11C03 		add	r3, r7, #28
 19249 0fec 1344     		add	r3, r3, r2
 19250 0fee 2A4A     		ldr	r2, .L739+52
 19251 0ff0 1068     		ldr	r0, [r2]	@ unaligned
 19252 0ff2 1860     		str	r0, [r3]	@ unaligned
 19253 0ff4 1279     		ldrb	r2, [r2, #4]
 19254 0ff6 1A71     		strb	r2, [r3, #4]
 19255              	.L721:
2491:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 19256              		.loc 1 2491 0
 19257 0ff8 07F11C03 		add	r3, r7, #28
 19258 0ffc 1846     		mov	r0, r3
 19259 0ffe FFF7FEFF 		bl	strlen
 19260 1002 0346     		mov	r3, r0
 19261 1004 1A46     		mov	r2, r3
 19262 1006 07F11C03 		add	r3, r7, #28
 19263 100a 1344     		add	r3, r3, r2
 19264 100c 244A     		ldr	r2, .L739+60
 19265 100e 1D46     		mov	r5, r3
 19266 1010 1446     		mov	r4, r2
 19267 1012 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19268 1014 2860     		str	r0, [r5]	@ unaligned
 19269 1016 6960     		str	r1, [r5, #4]	@ unaligned
 19270 1018 AA60     		str	r2, [r5, #8]	@ unaligned
 19271 101a EB60     		str	r3, [r5, #12]	@ unaligned
 19272 101c 2378     		ldrb	r3, [r4]
 19273 101e 2B74     		strb	r3, [r5, #16]
2492:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19274              		.loc 1 2492 0
 19275 1020 194A     		ldr	r2, .L739+36
 19276 1022 D7F89430 		ldr	r3, [r7, #148]
 19277 1026 1344     		add	r3, r3, r2
 19278 1028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19279 102a 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 422


 19280 102c D7F88C20 		ldr	r2, [r7, #140]
 19281 1030 0B46     		mov	r3, r1
 19282 1032 9B00     		lsls	r3, r3, #2
 19283 1034 0B44     		add	r3, r3, r1
 19284 1036 1344     		add	r3, r3, r2
 19285 1038 03F50173 		add	r3, r3, #516
 19286 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19287 103e 002B     		cmp	r3, #0
 19288 1040 30D0     		beq	.L722
2493:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19289              		.loc 1 2493 0
 19290 1042 07F11C03 		add	r3, r7, #28
 19291 1046 1846     		mov	r0, r3
 19292 1048 FFF7FEFF 		bl	strlen
 19293 104c 0346     		mov	r3, r0
 19294 104e 1A46     		mov	r2, r3
 19295 1050 07F11C03 		add	r3, r7, #28
 19296 1054 1344     		add	r3, r3, r2
 19297 1056 0F4A     		ldr	r2, .L739+48
 19298 1058 1068     		ldr	r0, [r2]	@ unaligned
 19299 105a 1860     		str	r0, [r3]	@ unaligned
 19300 105c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19301 105e 9A80     		strh	r2, [r3, #4]	@ unaligned
 19302 1060 2FE0     		b	.L723
 19303              	.L740:
 19304 1062 00BF     		.align	2
 19305              	.L739:
 19306 1064 14150000 		.word	.LC208
 19307 1068 30150000 		.word	.LC209
 19308 106c C00D0000 		.word	.LC126
 19309 1070 88150000 		.word	.LC213
 19310 1074 A4150000 		.word	.LC214
 19311 1078 CC150000 		.word	.LC215
 19312 107c 00000000 		.word	N_IMU_Connected
 19313 1080 E0150000 		.word	.LC216
 19314 1084 F4150000 		.word	.LC217
 19315 1088 00000000 		.word	IMU_connected
 19316 108c 0C160000 		.word	.LC218
 19317 1090 20160000 		.word	.LC219
 19318 1094 140F0000 		.word	.LC146
 19319 1098 1C0F0000 		.word	.LC147
 19320 109c 34160000 		.word	.LC220
 19321 10a0 44160000 		.word	.LC221
 19322              	.L722:
2494:..\src/command_processing.c **** 			else
2495:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19323              		.loc 1 2495 0
 19324 10a4 07F11C03 		add	r3, r7, #28
 19325 10a8 1846     		mov	r0, r3
 19326 10aa FFF7FEFF 		bl	strlen
 19327 10ae 0346     		mov	r3, r0
 19328 10b0 1A46     		mov	r2, r3
 19329 10b2 07F11C03 		add	r3, r7, #28
 19330 10b6 1344     		add	r3, r3, r2
 19331 10b8 584A     		ldr	r2, .L741
 19332 10ba 1068     		ldr	r0, [r2]	@ unaligned
 19333 10bc 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 423


 19334 10be 1279     		ldrb	r2, [r2, #4]
 19335 10c0 1A71     		strb	r2, [r3, #4]
 19336              	.L723:
2496:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19337              		.loc 1 2496 0
 19338 10c2 07F11C03 		add	r3, r7, #28
 19339 10c6 1846     		mov	r0, r3
 19340 10c8 FFF7FEFF 		bl	strlen
 19341 10cc 0346     		mov	r3, r0
 19342 10ce 1A46     		mov	r2, r3
 19343 10d0 07F11C03 		add	r3, r7, #28
 19344 10d4 1344     		add	r3, r3, r2
 19345 10d6 524A     		ldr	r2, .L741+4
 19346 10d8 1C46     		mov	r4, r3
 19347 10da 1346     		mov	r3, r2
 19348 10dc 07CB     		ldmia	r3!, {r0, r1, r2}
 19349 10de 2060     		str	r0, [r4]	@ unaligned
 19350 10e0 6160     		str	r1, [r4, #4]	@ unaligned
 19351 10e2 A260     		str	r2, [r4, #8]	@ unaligned
 19352 10e4 1B88     		ldrh	r3, [r3]	@ unaligned
 19353 10e6 A381     		strh	r3, [r4, #12]	@ unaligned
2497:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19354              		.loc 1 2497 0
 19355 10e8 4E4A     		ldr	r2, .L741+8
 19356 10ea D7F89430 		ldr	r3, [r7, #148]
 19357 10ee 1344     		add	r3, r3, r2
 19358 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19359 10f2 1946     		mov	r1, r3
 19360 10f4 D7F88C20 		ldr	r2, [r7, #140]
 19361 10f8 0B46     		mov	r3, r1
 19362 10fa 9B00     		lsls	r3, r3, #2
 19363 10fc 0B44     		add	r3, r3, r1
 19364 10fe 1344     		add	r3, r3, r2
 19365 1100 03F20523 		addw	r3, r3, #517
 19366 1104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19367 1106 002B     		cmp	r3, #0
 19368 1108 0FD0     		beq	.L724
2498:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19369              		.loc 1 2498 0
 19370 110a 07F11C03 		add	r3, r7, #28
 19371 110e 1846     		mov	r0, r3
 19372 1110 FFF7FEFF 		bl	strlen
 19373 1114 0346     		mov	r3, r0
 19374 1116 1A46     		mov	r2, r3
 19375 1118 07F11C03 		add	r3, r7, #28
 19376 111c 1344     		add	r3, r3, r2
 19377 111e 424A     		ldr	r2, .L741+12
 19378 1120 1068     		ldr	r0, [r2]	@ unaligned
 19379 1122 1860     		str	r0, [r3]	@ unaligned
 19380 1124 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19381 1126 9A80     		strh	r2, [r3, #4]	@ unaligned
 19382 1128 0EE0     		b	.L725
 19383              	.L724:
2499:..\src/command_processing.c **** 			else
2500:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19384              		.loc 1 2500 0
 19385 112a 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 424


 19386 112e 1846     		mov	r0, r3
 19387 1130 FFF7FEFF 		bl	strlen
 19388 1134 0346     		mov	r3, r0
 19389 1136 1A46     		mov	r2, r3
 19390 1138 07F11C03 		add	r3, r7, #28
 19391 113c 1344     		add	r3, r3, r2
 19392 113e 374A     		ldr	r2, .L741
 19393 1140 1068     		ldr	r0, [r2]	@ unaligned
 19394 1142 1860     		str	r0, [r3]	@ unaligned
 19395 1144 1279     		ldrb	r2, [r2, #4]
 19396 1146 1A71     		strb	r2, [r3, #4]
 19397              	.L725:
2501:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19398              		.loc 1 2501 0
 19399 1148 07F11C03 		add	r3, r7, #28
 19400 114c 1846     		mov	r0, r3
 19401 114e FFF7FEFF 		bl	strlen
 19402 1152 0346     		mov	r3, r0
 19403 1154 1A46     		mov	r2, r3
 19404 1156 07F11C03 		add	r3, r7, #28
 19405 115a 1344     		add	r3, r3, r2
 19406 115c 334A     		ldr	r2, .L741+16
 19407 115e 1C46     		mov	r4, r3
 19408 1160 1346     		mov	r3, r2
 19409 1162 07CB     		ldmia	r3!, {r0, r1, r2}
 19410 1164 2060     		str	r0, [r4]	@ unaligned
 19411 1166 6160     		str	r1, [r4, #4]	@ unaligned
 19412 1168 A260     		str	r2, [r4, #8]	@ unaligned
 19413 116a 1A88     		ldrh	r2, [r3]	@ unaligned
 19414 116c 9B78     		ldrb	r3, [r3, #2]
 19415 116e A281     		strh	r2, [r4, #12]	@ unaligned
 19416 1170 A373     		strb	r3, [r4, #14]
2502:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 19417              		.loc 1 2502 0
 19418 1172 2C4A     		ldr	r2, .L741+8
 19419 1174 D7F89430 		ldr	r3, [r7, #148]
 19420 1178 1344     		add	r3, r3, r2
 19421 117a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19422 117c 1946     		mov	r1, r3
 19423 117e D7F88C20 		ldr	r2, [r7, #140]
 19424 1182 0B46     		mov	r3, r1
 19425 1184 9B00     		lsls	r3, r3, #2
 19426 1186 0B44     		add	r3, r3, r1
 19427 1188 1344     		add	r3, r3, r2
 19428 118a 03F20623 		addw	r3, r3, #518
 19429 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19430 1190 002B     		cmp	r3, #0
 19431 1192 0FD0     		beq	.L726
2503:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19432              		.loc 1 2503 0
 19433 1194 07F11C03 		add	r3, r7, #28
 19434 1198 1846     		mov	r0, r3
 19435 119a FFF7FEFF 		bl	strlen
 19436 119e 0346     		mov	r3, r0
 19437 11a0 1A46     		mov	r2, r3
 19438 11a2 07F11C03 		add	r3, r7, #28
 19439 11a6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 425


 19440 11a8 1F4A     		ldr	r2, .L741+12
 19441 11aa 1068     		ldr	r0, [r2]	@ unaligned
 19442 11ac 1860     		str	r0, [r3]	@ unaligned
 19443 11ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19444 11b0 9A80     		strh	r2, [r3, #4]	@ unaligned
 19445 11b2 0EE0     		b	.L727
 19446              	.L726:
2504:..\src/command_processing.c **** 			else
2505:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19447              		.loc 1 2505 0
 19448 11b4 07F11C03 		add	r3, r7, #28
 19449 11b8 1846     		mov	r0, r3
 19450 11ba FFF7FEFF 		bl	strlen
 19451 11be 0346     		mov	r3, r0
 19452 11c0 1A46     		mov	r2, r3
 19453 11c2 07F11C03 		add	r3, r7, #28
 19454 11c6 1344     		add	r3, r3, r2
 19455 11c8 144A     		ldr	r2, .L741
 19456 11ca 1068     		ldr	r0, [r2]	@ unaligned
 19457 11cc 1860     		str	r0, [r3]	@ unaligned
 19458 11ce 1279     		ldrb	r2, [r2, #4]
 19459 11d0 1A71     		strb	r2, [r3, #4]
 19460              	.L727:
2506:..\src/command_processing.c **** 				 
2507:..\src/command_processing.c **** 			strcat(info_string, str);
 19461              		.loc 1 2507 0 discriminator 2
 19462 11d2 07F11C03 		add	r3, r7, #28
 19463 11d6 1946     		mov	r1, r3
 19464 11d8 7869     		ldr	r0, [r7, #20]
 19465 11da FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19466              		.loc 1 2477 0 discriminator 2
 19467 11de D7F89430 		ldr	r3, [r7, #148]
 19468 11e2 0133     		adds	r3, r3, #1
 19469 11e4 C7F89430 		str	r3, [r7, #148]
 19470              	.L717:
2477:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19471              		.loc 1 2477 0 is_stmt 0 discriminator 1
 19472 11e8 114B     		ldr	r3, .L741+20
 19473 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19474 11ec 1A46     		mov	r2, r3
 19475 11ee D7F89430 		ldr	r3, [r7, #148]
 19476 11f2 9A42     		cmp	r2, r3
 19477 11f4 3FF772AE 		bgt	.L728
2508:..\src/command_processing.c **** 		}       
2509:..\src/command_processing.c **** 		
2510:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19478              		.loc 1 2510 0 is_stmt 1
 19479 11f8 7869     		ldr	r0, [r7, #20]
 19480 11fa FFF7FEFF 		bl	strlen
 19481 11fe 0346     		mov	r3, r0
 19482 1200 1A46     		mov	r2, r3
 19483 1202 7B69     		ldr	r3, [r7, #20]
 19484 1204 1344     		add	r3, r3, r2
 19485 1206 0B4A     		ldr	r2, .L741+24
 19486 1208 1188     		ldrh	r1, [r2]	@ unaligned
 19487 120a 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 426


 19488 120c 1980     		strh	r1, [r3]	@ unaligned
 19489 120e 9A70     		strb	r2, [r3, #2]
 19490              	.L730:
2511:..\src/command_processing.c **** 	}
2512:..\src/command_processing.c **** }
 19491              		.loc 1 2512 0
 19492 1210 00BF     		nop
 19493 1212 9C37     		adds	r7, r7, #156
 19494              		.cfi_def_cfa_offset 36
 19495 1214 BD46     		mov	sp, r7
 19496              		.cfi_def_cfa_register 13
 19497              		@ sp needed
 19498 1216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19499              	.L742:
 19500 121a 00BF     		.align	2
 19501              	.L741:
 19502 121c 1C0F0000 		.word	.LC147
 19503 1220 58160000 		.word	.LC222
 19504 1224 00000000 		.word	IMU_connected
 19505 1228 140F0000 		.word	.LC146
 19506 122c 68160000 		.word	.LC223
 19507 1230 00000000 		.word	N_IMU_Connected
 19508 1234 C00D0000 		.word	.LC126
 19509              		.cfi_endproc
 19510              	.LFE74:
 19511              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19512              		.section	.rodata
 19513 19e6 0000     		.align	2
 19514              	.LC257:
 19515 19e8 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19515      2C4D696E 
 19515      2C536563 
 19515      2C00
 19516 19f6 0000     		.align	2
 19517              	.LC258:
 19518 19f8 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19518      25645F50 
 19518      6F732C00 
 19519              		.align	2
 19520              	.LC259:
 19521 1a04 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19521      25645F43 
 19521      7572722C 
 19521      00
 19522 1a11 000000   		.align	2
 19523              	.LC260:
 19524 1a14 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19524      315F6163 
 19524      742C454D 
 19524      475F325F 
 19524      6163742C 
 19525 1a47 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19525      5F74696D 
 19525      652C546F 
 19525      74616C5F 
 19525      72657374 
 19526              		.section	.text.prepare_SD_legend,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 427


 19527              		.align	2
 19528              		.global	prepare_SD_legend
 19529              		.thumb
 19530              		.thumb_func
 19531              		.type	prepare_SD_legend, %function
 19532              	prepare_SD_legend:
 19533              	.LFB75:
2513:..\src/command_processing.c **** 
2514:..\src/command_processing.c **** 
2515:..\src/command_processing.c **** //==============================================================================
2516:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2517:..\src/command_processing.c **** //==============================================================================
2518:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2519:..\src/command_processing.c **** {
 19534              		.loc 1 2519 0
 19535              		.cfi_startproc
 19536              		@ args = 0, pretend = 0, frame = 112
 19537              		@ frame_needed = 1, uses_anonymous_args = 0
 19538 0000 90B5     		push	{r4, r7, lr}
 19539              		.cfi_def_cfa_offset 12
 19540              		.cfi_offset 4, -12
 19541              		.cfi_offset 7, -8
 19542              		.cfi_offset 14, -4
 19543 0002 9DB0     		sub	sp, sp, #116
 19544              		.cfi_def_cfa_offset 128
 19545 0004 00AF     		add	r7, sp, #0
 19546              		.cfi_def_cfa_register 7
 19547 0006 7860     		str	r0, [r7, #4]
2520:..\src/command_processing.c ****     char str[100];  
2521:..\src/command_processing.c ****     int i;
2522:..\src/command_processing.c ****         
2523:..\src/command_processing.c ****     // Legend
2524:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19548              		.loc 1 2524 0
 19549 0008 7B68     		ldr	r3, [r7, #4]
 19550 000a 2A4A     		ldr	r2, .L748
 19551 000c 1C46     		mov	r4, r3
 19552 000e 1346     		mov	r3, r2
 19553 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19554 0012 2060     		str	r0, [r4]	@ unaligned
 19555 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19556 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19557 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19558 001a A381     		strh	r3, [r4, #12]	@ unaligned
2525:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19559              		.loc 1 2525 0
 19560 001c 0123     		movs	r3, #1
 19561 001e FB66     		str	r3, [r7, #108]
 19562 0020 0FE0     		b	.L744
 19563              	.L745:
2526:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19564              		.loc 1 2526 0 discriminator 3
 19565 0022 07F10803 		add	r3, r7, #8
 19566 0026 FA6E     		ldr	r2, [r7, #108]
 19567 0028 2349     		ldr	r1, .L748+4
 19568 002a 1846     		mov	r0, r3
 19569 002c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 428


2527:..\src/command_processing.c ****         strcat(info_string, str);
 19570              		.loc 1 2527 0 discriminator 3
 19571 0030 07F10803 		add	r3, r7, #8
 19572 0034 1946     		mov	r1, r3
 19573 0036 7868     		ldr	r0, [r7, #4]
 19574 0038 FFF7FEFF 		bl	strcat
2525:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19575              		.loc 1 2525 0 discriminator 3
 19576 003c FB6E     		ldr	r3, [r7, #108]
 19577 003e 0133     		adds	r3, r3, #1
 19578 0040 FB66     		str	r3, [r7, #108]
 19579              	.L744:
2525:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19580              		.loc 1 2525 0 is_stmt 0 discriminator 1
 19581 0042 FB6E     		ldr	r3, [r7, #108]
 19582 0044 0A2B     		cmp	r3, #10
 19583 0046 ECDD     		ble	.L745
2528:..\src/command_processing.c ****     }
2529:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19584              		.loc 1 2529 0 is_stmt 1
 19585 0048 0123     		movs	r3, #1
 19586 004a FB66     		str	r3, [r7, #108]
 19587 004c 0FE0     		b	.L746
 19588              	.L747:
2530:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19589              		.loc 1 2530 0 discriminator 3
 19590 004e 07F10803 		add	r3, r7, #8
 19591 0052 FA6E     		ldr	r2, [r7, #108]
 19592 0054 1949     		ldr	r1, .L748+8
 19593 0056 1846     		mov	r0, r3
 19594 0058 FFF7FEFF 		bl	sprintf
2531:..\src/command_processing.c ****         strcat(info_string, str);
 19595              		.loc 1 2531 0 discriminator 3
 19596 005c 07F10803 		add	r3, r7, #8
 19597 0060 1946     		mov	r1, r3
 19598 0062 7868     		ldr	r0, [r7, #4]
 19599 0064 FFF7FEFF 		bl	strcat
2529:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19600              		.loc 1 2529 0 discriminator 3
 19601 0068 FB6E     		ldr	r3, [r7, #108]
 19602 006a 0133     		adds	r3, r3, #1
 19603 006c FB66     		str	r3, [r7, #108]
 19604              	.L746:
2529:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19605              		.loc 1 2529 0 is_stmt 0 discriminator 1
 19606 006e FB6E     		ldr	r3, [r7, #108]
 19607 0070 042B     		cmp	r3, #4
 19608 0072 ECDD     		ble	.L747
2532:..\src/command_processing.c ****     }
2533:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19609              		.loc 1 2533 0 is_stmt 1
 19610 0074 07F10803 		add	r3, r7, #8
 19611 0078 114A     		ldr	r2, .L748+12
 19612 007a 1846     		mov	r0, r3
 19613 007c 1146     		mov	r1, r2
 19614 007e 4D23     		movs	r3, #77
 19615 0080 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 429


 19616 0082 FFF7FEFF 		bl	memcpy
2534:..\src/command_processing.c ****     strcat(info_string, str);
 19617              		.loc 1 2534 0
 19618 0086 07F10803 		add	r3, r7, #8
 19619 008a 1946     		mov	r1, r3
 19620 008c 7868     		ldr	r0, [r7, #4]
 19621 008e FFF7FEFF 		bl	strcat
2535:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19622              		.loc 1 2535 0
 19623 0092 7868     		ldr	r0, [r7, #4]
 19624 0094 FFF7FEFF 		bl	strlen
 19625 0098 0346     		mov	r3, r0
 19626 009a 1A46     		mov	r2, r3
 19627 009c 7B68     		ldr	r3, [r7, #4]
 19628 009e 1344     		add	r3, r3, r2
 19629 00a0 084A     		ldr	r2, .L748+16
 19630 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19631 00a4 9278     		ldrb	r2, [r2, #2]
 19632 00a6 1980     		strh	r1, [r3]	@ unaligned
 19633 00a8 9A70     		strb	r2, [r3, #2]
2536:..\src/command_processing.c **** }
 19634              		.loc 1 2536 0
 19635 00aa 00BF     		nop
 19636 00ac 7437     		adds	r7, r7, #116
 19637              		.cfi_def_cfa_offset 12
 19638 00ae BD46     		mov	sp, r7
 19639              		.cfi_def_cfa_register 13
 19640              		@ sp needed
 19641 00b0 90BD     		pop	{r4, r7, pc}
 19642              	.L749:
 19643 00b2 00BF     		.align	2
 19644              	.L748:
 19645 00b4 E8190000 		.word	.LC257
 19646 00b8 F8190000 		.word	.LC258
 19647 00bc 041A0000 		.word	.LC259
 19648 00c0 141A0000 		.word	.LC260
 19649 00c4 C00D0000 		.word	.LC126
 19650              		.cfi_endproc
 19651              	.LFE75:
 19652              		.size	prepare_SD_legend, .-prepare_SD_legend
 19653              		.section	.rodata
 19654 1a61 000000   		.align	2
 19655              	.LC261:
 19656 1a64 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19656      2C253032 
 19656      642C2530 
 19656      32642C00 
 19657              		.align	2
 19658              	.LC262:
 19659 1a74 256C752C 		.ascii	"%lu,\000"
 19659      00
 19660 1a79 000000   		.align	2
 19661              	.LC263:
 19662 1a7c 256C752C 		.ascii	"%lu,%lu,\000"
 19662      256C752C 
 19662      00
 19663 1a85 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 430


 19664              	.LC264:
 19665 1a88 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19665      256C752C 
 19665      256C752C 
 19665      256C7500 
 19666              		.section	.text.prepare_SD_info,"ax",%progbits
 19667              		.align	2
 19668              		.global	prepare_SD_info
 19669              		.thumb
 19670              		.thumb_func
 19671              		.type	prepare_SD_info, %function
 19672              	prepare_SD_info:
 19673              	.LFB76:
2537:..\src/command_processing.c **** 
2538:..\src/command_processing.c **** //==============================================================================
2539:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2540:..\src/command_processing.c **** //==============================================================================
2541:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2542:..\src/command_processing.c **** {
 19674              		.loc 1 2542 0
 19675              		.cfi_startproc
 19676              		@ args = 0, pretend = 0, frame = 112
 19677              		@ frame_needed = 1, uses_anonymous_args = 0
 19678 0000 90B5     		push	{r4, r7, lr}
 19679              		.cfi_def_cfa_offset 12
 19680              		.cfi_offset 4, -12
 19681              		.cfi_offset 7, -8
 19682              		.cfi_offset 14, -4
 19683 0002 9FB0     		sub	sp, sp, #124
 19684              		.cfi_def_cfa_offset 136
 19685 0004 02AF     		add	r7, sp, #8
 19686              		.cfi_def_cfa 7, 128
 19687 0006 7860     		str	r0, [r7, #4]
2543:..\src/command_processing.c ****     char str[100];  
2544:..\src/command_processing.c ****     int i;
2545:..\src/command_processing.c ****             
2546:..\src/command_processing.c ****     strcpy(info_string, "");
 19688              		.loc 1 2546 0
 19689 0008 7B68     		ldr	r3, [r7, #4]
 19690 000a 0022     		movs	r2, #0
 19691 000c 1A70     		strb	r2, [r3]
2547:..\src/command_processing.c ****     
2548:..\src/command_processing.c ****     // Time
2549:..\src/command_processing.c ****     strcat(info_string, "");
2550:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19692              		.loc 1 2550 0
 19693 000e 424B     		ldr	r3, .L755
 19694 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19695 0014 1A46     		mov	r2, r3
 19696 0016 404B     		ldr	r3, .L755
 19697 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19698 001c 1946     		mov	r1, r3
 19699 001e 3E4B     		ldr	r3, .L755
 19700 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19701 0024 07F10800 		add	r0, r7, #8
 19702 0028 0093     		str	r3, [sp]
 19703 002a 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 431


 19704 002c 3B49     		ldr	r1, .L755+4
 19705 002e FFF7FEFF 		bl	sprintf
2551:..\src/command_processing.c ****     strcat(info_string, str);
 19706              		.loc 1 2551 0
 19707 0032 07F10803 		add	r3, r7, #8
 19708 0036 1946     		mov	r1, r3
 19709 0038 7868     		ldr	r0, [r7, #4]
 19710 003a FFF7FEFF 		bl	strcat
2552:..\src/command_processing.c **** 
2553:..\src/command_processing.c ****     // Pos_Bin
2554:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19711              		.loc 1 2554 0
 19712 003e 0123     		movs	r3, #1
 19713 0040 FB66     		str	r3, [r7, #108]
 19714 0042 14E0     		b	.L751
 19715              	.L752:
2555:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19716              		.loc 1 2555 0 discriminator 3
 19717 0044 FB6E     		ldr	r3, [r7, #108]
 19718 0046 013B     		subs	r3, r3, #1
 19719 0048 334A     		ldr	r2, .L755
 19720 004a 0633     		adds	r3, r3, #6
 19721 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19722 0050 07F10803 		add	r3, r7, #8
 19723 0054 3249     		ldr	r1, .L755+8
 19724 0056 1846     		mov	r0, r3
 19725 0058 FFF7FEFF 		bl	sprintf
2556:..\src/command_processing.c ****         strcat(info_string, str);
 19726              		.loc 1 2556 0 discriminator 3
 19727 005c 07F10803 		add	r3, r7, #8
 19728 0060 1946     		mov	r1, r3
 19729 0062 7868     		ldr	r0, [r7, #4]
 19730 0064 FFF7FEFF 		bl	strcat
2554:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19731              		.loc 1 2554 0 discriminator 3
 19732 0068 FB6E     		ldr	r3, [r7, #108]
 19733 006a 0133     		adds	r3, r3, #1
 19734 006c FB66     		str	r3, [r7, #108]
 19735              	.L751:
2554:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19736              		.loc 1 2554 0 is_stmt 0 discriminator 1
 19737 006e FB6E     		ldr	r3, [r7, #108]
 19738 0070 0A2B     		cmp	r3, #10
 19739 0072 E7DD     		ble	.L752
2557:..\src/command_processing.c ****     }
2558:..\src/command_processing.c ****     
2559:..\src/command_processing.c ****     // Curr_Bin
2560:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19740              		.loc 1 2560 0 is_stmt 1
 19741 0074 0123     		movs	r3, #1
 19742 0076 FB66     		str	r3, [r7, #108]
 19743 0078 14E0     		b	.L753
 19744              	.L754:
2561:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19745              		.loc 1 2561 0 discriminator 3
 19746 007a FB6E     		ldr	r3, [r7, #108]
 19747 007c 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 432


 19748 007e 264A     		ldr	r2, .L755
 19749 0080 1033     		adds	r3, r3, #16
 19750 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19751 0086 07F10803 		add	r3, r7, #8
 19752 008a 2549     		ldr	r1, .L755+8
 19753 008c 1846     		mov	r0, r3
 19754 008e FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****         strcat(info_string, str);
 19755              		.loc 1 2562 0 discriminator 3
 19756 0092 07F10803 		add	r3, r7, #8
 19757 0096 1946     		mov	r1, r3
 19758 0098 7868     		ldr	r0, [r7, #4]
 19759 009a FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19760              		.loc 1 2560 0 discriminator 3
 19761 009e FB6E     		ldr	r3, [r7, #108]
 19762 00a0 0133     		adds	r3, r3, #1
 19763 00a2 FB66     		str	r3, [r7, #108]
 19764              	.L753:
2560:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19765              		.loc 1 2560 0 is_stmt 0 discriminator 1
 19766 00a4 FB6E     		ldr	r3, [r7, #108]
 19767 00a6 042B     		cmp	r3, #4
 19768 00a8 E7DD     		ble	.L754
2563:..\src/command_processing.c ****     }
2564:..\src/command_processing.c ****        
2565:..\src/command_processing.c ****     // EMG_1, EMG_2
2566:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 19769              		.loc 1 2566 0 is_stmt 1
 19770 00aa 1B4B     		ldr	r3, .L755
 19771 00ac 1A69     		ldr	r2, [r3, #16]
 19772 00ae 1A4B     		ldr	r3, .L755
 19773 00b0 5B69     		ldr	r3, [r3, #20]
 19774 00b2 07F10800 		add	r0, r7, #8
 19775 00b6 1B49     		ldr	r1, .L755+12
 19776 00b8 FFF7FEFF 		bl	sprintf
2567:..\src/command_processing.c ****     strcat(info_string, str);
 19777              		.loc 1 2567 0
 19778 00bc 07F10803 		add	r3, r7, #8
 19779 00c0 1946     		mov	r1, r3
 19780 00c2 7868     		ldr	r0, [r7, #4]
 19781 00c4 FFF7FEFF 		bl	strcat
2568:..\src/command_processing.c ****     
2569:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2570:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 19782              		.loc 1 2570 0
 19783 00c8 134B     		ldr	r3, .L755
 19784 00ca 196D     		ldr	r1, [r3, #80]
 19785 00cc 124B     		ldr	r3, .L755
 19786 00ce 5C6D     		ldr	r4, [r3, #84]
 19787 00d0 114B     		ldr	r3, .L755
 19788 00d2 9B6D     		ldr	r3, [r3, #88]
 19789 00d4 104A     		ldr	r2, .L755
 19790 00d6 D26D     		ldr	r2, [r2, #92]
 19791 00d8 07F10800 		add	r0, r7, #8
 19792 00dc 0192     		str	r2, [sp, #4]
 19793 00de 0093     		str	r3, [sp]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 433


 19794 00e0 2346     		mov	r3, r4
 19795 00e2 0A46     		mov	r2, r1
 19796 00e4 1049     		ldr	r1, .L755+16
 19797 00e6 FFF7FEFF 		bl	sprintf
2571:..\src/command_processing.c ****     strcat(info_string, str);
 19798              		.loc 1 2571 0
 19799 00ea 07F10803 		add	r3, r7, #8
 19800 00ee 1946     		mov	r1, r3
 19801 00f0 7868     		ldr	r0, [r7, #4]
 19802 00f2 FFF7FEFF 		bl	strcat
2572:..\src/command_processing.c ****     
2573:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19803              		.loc 1 2573 0
 19804 00f6 7868     		ldr	r0, [r7, #4]
 19805 00f8 FFF7FEFF 		bl	strlen
 19806 00fc 0346     		mov	r3, r0
 19807 00fe 1A46     		mov	r2, r3
 19808 0100 7B68     		ldr	r3, [r7, #4]
 19809 0102 1344     		add	r3, r3, r2
 19810 0104 094A     		ldr	r2, .L755+20
 19811 0106 1188     		ldrh	r1, [r2]	@ unaligned
 19812 0108 9278     		ldrb	r2, [r2, #2]
 19813 010a 1980     		strh	r1, [r3]	@ unaligned
 19814 010c 9A70     		strb	r2, [r3, #2]
2574:..\src/command_processing.c **** }
 19815              		.loc 1 2574 0
 19816 010e 00BF     		nop
 19817 0110 7437     		adds	r7, r7, #116
 19818              		.cfi_def_cfa_offset 12
 19819 0112 BD46     		mov	sp, r7
 19820              		.cfi_def_cfa_register 13
 19821              		@ sp needed
 19822 0114 90BD     		pop	{r4, r7, pc}
 19823              	.L756:
 19824 0116 00BF     		.align	2
 19825              	.L755:
 19826 0118 00000000 		.word	g_mem
 19827 011c 641A0000 		.word	.LC261
 19828 0120 741A0000 		.word	.LC262
 19829 0124 7C1A0000 		.word	.LC263
 19830 0128 881A0000 		.word	.LC264
 19831 012c C00D0000 		.word	.LC126
 19832              		.cfi_endproc
 19833              	.LFE76:
 19834              		.size	prepare_SD_info, .-prepare_SD_info
 19835              		.section	.rodata
 19836              		.align	2
 19837              	.LC265:
 19838 1a98 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 19838      4F525320 
 19838      494E464F 
 19838      0D0A00
 19839 1aa7 00       		.align	2
 19840              	.LC266:
 19841 1aa8 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 19841      3A202564 
 19841      09256409 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 434


 19841      25640D0A 
 19841      00
 19842 1ab9 000000   		.align	2
 19843              	.LC267:
 19844 1abc 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 19844      6F3A2025 
 19844      64092564 
 19844      0925640D 
 19844      0A00
 19845 1ace 0000     		.align	2
 19846              	.LC268:
 19847 1ad0 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 19847      3A202564 
 19847      09256409 
 19847      25640D0A 
 19847      00
 19848 1ae1 000000   		.align	2
 19849              	.LC269:
 19850 1ae4 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 19850      743A2025 
 19850      2E336609 
 19850      252E3366 
 19850      09252E33 
 19851 1b01 000000   		.align	2
 19852              	.LC270:
 19853 1b04 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 19853      70657261 
 19853      74757265 
 19853      3A202564 
 19853      0D0A00
 19854              		.section	.text.IMU_reading_info,"ax",%progbits
 19855              		.align	2
 19856              		.global	IMU_reading_info
 19857              		.thumb
 19858              		.thumb_func
 19859              		.type	IMU_reading_info, %function
 19860              	IMU_reading_info:
 19861              	.LFB77:
2575:..\src/command_processing.c **** 
2576:..\src/command_processing.c **** //==============================================================================
2577:..\src/command_processing.c **** //                                                              IMU READING INFO
2578:..\src/command_processing.c **** //==============================================================================
2579:..\src/command_processing.c **** 
2580:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2581:..\src/command_processing.c **** {
 19862              		.loc 1 2581 0
 19863              		.cfi_startproc
 19864              		@ args = 0, pretend = 0, frame = 312
 19865              		@ frame_needed = 1, uses_anonymous_args = 0
 19866 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 19867              		.cfi_def_cfa_offset 32
 19868              		.cfi_offset 4, -32
 19869              		.cfi_offset 5, -28
 19870              		.cfi_offset 7, -24
 19871              		.cfi_offset 8, -20
 19872              		.cfi_offset 9, -16
 19873              		.cfi_offset 10, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 435


 19874              		.cfi_offset 11, -8
 19875              		.cfi_offset 14, -4
 19876 0004 D4B0     		sub	sp, sp, #336
 19877              		.cfi_def_cfa_offset 368
 19878 0006 06AF     		add	r7, sp, #24
 19879              		.cfi_def_cfa 7, 344
 19880 0008 3B1D     		adds	r3, r7, #4
 19881 000a 1860     		str	r0, [r3]
2582:..\src/command_processing.c ****     char str[300];  
2583:..\src/command_processing.c ****     int i;
2584:..\src/command_processing.c ****                  
2585:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 19882              		.loc 1 2585 0
 19883 000c 3B1D     		adds	r3, r7, #4
 19884 000e 1868     		ldr	r0, [r3]
 19885 0010 FFF7FEFF 		bl	strlen
 19886 0014 0346     		mov	r3, r0
 19887 0016 1A46     		mov	r2, r3
 19888 0018 3B1D     		adds	r3, r7, #4
 19889 001a 1B68     		ldr	r3, [r3]
 19890 001c 1344     		add	r3, r3, r2
 19891 001e C94A     		ldr	r2, .L765
 19892 0020 1C46     		mov	r4, r3
 19893 0022 1346     		mov	r3, r2
 19894 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 19895 0026 2060     		str	r0, [r4]	@ unaligned
 19896 0028 6160     		str	r1, [r4, #4]	@ unaligned
 19897 002a A260     		str	r2, [r4, #8]	@ unaligned
 19898 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 19899 002e 9B78     		ldrb	r3, [r3, #2]
 19900 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 19901 0032 A373     		strb	r3, [r4, #14]
2586:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 19902              		.loc 1 2586 0
 19903 0034 0023     		movs	r3, #0
 19904 0036 C7F83431 		str	r3, [r7, #308]
 19905 003a 66E1     		b	.L758
 19906              	.L764:
2587:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19907              		.loc 1 2587 0
 19908 003c C24A     		ldr	r2, .L765+4
 19909 003e D7F83431 		ldr	r3, [r7, #308]
 19910 0042 1344     		add	r3, r3, r2
 19911 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19912 0046 07F10800 		add	r0, r7, #8
 19913 004a D7F83421 		ldr	r2, [r7, #308]
 19914 004e BF49     		ldr	r1, .L765+8
 19915 0050 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****         strcat(info_string, str);
 19916              		.loc 1 2588 0
 19917 0054 07F10802 		add	r2, r7, #8
 19918 0058 3B1D     		adds	r3, r7, #4
 19919 005a 1146     		mov	r1, r2
 19920 005c 1868     		ldr	r0, [r3]
 19921 005e FFF7FEFF 		bl	strcat
2589:..\src/command_processing.c ****         
2590:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 436


 19922              		.loc 1 2590 0
 19923 0062 B94A     		ldr	r2, .L765+4
 19924 0064 D7F83431 		ldr	r3, [r7, #308]
 19925 0068 1344     		add	r3, r3, r2
 19926 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19927 006c 1946     		mov	r1, r3
 19928 006e B84A     		ldr	r2, .L765+12
 19929 0070 0B46     		mov	r3, r1
 19930 0072 9B00     		lsls	r3, r3, #2
 19931 0074 0B44     		add	r3, r3, r1
 19932 0076 1344     		add	r3, r3, r2
 19933 0078 03F20223 		addw	r3, r3, #514
 19934 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19935 007e 002B     		cmp	r3, #0
 19936 0080 31D0     		beq	.L759
2591:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 19937              		.loc 1 2591 0
 19938 0082 B449     		ldr	r1, .L765+16
 19939 0084 D7F83421 		ldr	r2, [r7, #308]
 19940 0088 1346     		mov	r3, r2
 19941 008a 9B00     		lsls	r3, r3, #2
 19942 008c 1344     		add	r3, r3, r2
 19943 008e DB00     		lsls	r3, r3, #3
 19944 0090 0B44     		add	r3, r3, r1
 19945 0092 0233     		adds	r3, r3, #2
 19946 0094 B3F90030 		ldrsh	r3, [r3]
 19947 0098 1C46     		mov	r4, r3
 19948 009a AE49     		ldr	r1, .L765+16
 19949 009c D7F83421 		ldr	r2, [r7, #308]
 19950 00a0 1346     		mov	r3, r2
 19951 00a2 9B00     		lsls	r3, r3, #2
 19952 00a4 1344     		add	r3, r3, r2
 19953 00a6 DB00     		lsls	r3, r3, #3
 19954 00a8 0B44     		add	r3, r3, r1
 19955 00aa 0433     		adds	r3, r3, #4
 19956 00ac B3F90030 		ldrsh	r3, [r3]
 19957 00b0 1D46     		mov	r5, r3
 19958 00b2 A849     		ldr	r1, .L765+16
 19959 00b4 D7F83421 		ldr	r2, [r7, #308]
 19960 00b8 1346     		mov	r3, r2
 19961 00ba 9B00     		lsls	r3, r3, #2
 19962 00bc 1344     		add	r3, r3, r2
 19963 00be DB00     		lsls	r3, r3, #3
 19964 00c0 0B44     		add	r3, r3, r1
 19965 00c2 0633     		adds	r3, r3, #6
 19966 00c4 B3F90030 		ldrsh	r3, [r3]
 19967 00c8 07F10800 		add	r0, r7, #8
 19968 00cc 0093     		str	r3, [sp]
 19969 00ce 2B46     		mov	r3, r5
 19970 00d0 2246     		mov	r2, r4
 19971 00d2 A149     		ldr	r1, .L765+20
 19972 00d4 FFF7FEFF 		bl	sprintf
2592:..\src/command_processing.c ****             strcat(info_string, str);
 19973              		.loc 1 2592 0
 19974 00d8 07F10802 		add	r2, r7, #8
 19975 00dc 3B1D     		adds	r3, r7, #4
 19976 00de 1146     		mov	r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 437


 19977 00e0 1868     		ldr	r0, [r3]
 19978 00e2 FFF7FEFF 		bl	strcat
 19979              	.L759:
2593:..\src/command_processing.c ****         }
2594:..\src/command_processing.c **** 
2595:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 19980              		.loc 1 2595 0
 19981 00e6 984A     		ldr	r2, .L765+4
 19982 00e8 D7F83431 		ldr	r3, [r7, #308]
 19983 00ec 1344     		add	r3, r3, r2
 19984 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19985 00f0 1946     		mov	r1, r3
 19986 00f2 974A     		ldr	r2, .L765+12
 19987 00f4 0B46     		mov	r3, r1
 19988 00f6 9B00     		lsls	r3, r3, #2
 19989 00f8 0B44     		add	r3, r3, r1
 19990 00fa 1344     		add	r3, r3, r2
 19991 00fc 03F20323 		addw	r3, r3, #515
 19992 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19993 0102 002B     		cmp	r3, #0
 19994 0104 31D0     		beq	.L760
2596:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 19995              		.loc 1 2596 0
 19996 0106 9349     		ldr	r1, .L765+16
 19997 0108 D7F83421 		ldr	r2, [r7, #308]
 19998 010c 1346     		mov	r3, r2
 19999 010e 9B00     		lsls	r3, r3, #2
 20000 0110 1344     		add	r3, r3, r2
 20001 0112 DB00     		lsls	r3, r3, #3
 20002 0114 0B44     		add	r3, r3, r1
 20003 0116 0833     		adds	r3, r3, #8
 20004 0118 B3F90030 		ldrsh	r3, [r3]
 20005 011c 1C46     		mov	r4, r3
 20006 011e 8D49     		ldr	r1, .L765+16
 20007 0120 D7F83421 		ldr	r2, [r7, #308]
 20008 0124 1346     		mov	r3, r2
 20009 0126 9B00     		lsls	r3, r3, #2
 20010 0128 1344     		add	r3, r3, r2
 20011 012a DB00     		lsls	r3, r3, #3
 20012 012c 0B44     		add	r3, r3, r1
 20013 012e 0A33     		adds	r3, r3, #10
 20014 0130 B3F90030 		ldrsh	r3, [r3]
 20015 0134 1D46     		mov	r5, r3
 20016 0136 8749     		ldr	r1, .L765+16
 20017 0138 D7F83421 		ldr	r2, [r7, #308]
 20018 013c 1346     		mov	r3, r2
 20019 013e 9B00     		lsls	r3, r3, #2
 20020 0140 1344     		add	r3, r3, r2
 20021 0142 DB00     		lsls	r3, r3, #3
 20022 0144 0B44     		add	r3, r3, r1
 20023 0146 0C33     		adds	r3, r3, #12
 20024 0148 B3F90030 		ldrsh	r3, [r3]
 20025 014c 07F10800 		add	r0, r7, #8
 20026 0150 0093     		str	r3, [sp]
 20027 0152 2B46     		mov	r3, r5
 20028 0154 2246     		mov	r2, r4
 20029 0156 8149     		ldr	r1, .L765+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 438


 20030 0158 FFF7FEFF 		bl	sprintf
2597:..\src/command_processing.c ****             strcat(info_string, str);
 20031              		.loc 1 2597 0
 20032 015c 07F10802 		add	r2, r7, #8
 20033 0160 3B1D     		adds	r3, r7, #4
 20034 0162 1146     		mov	r1, r2
 20035 0164 1868     		ldr	r0, [r3]
 20036 0166 FFF7FEFF 		bl	strcat
 20037              	.L760:
2598:..\src/command_processing.c ****         }
2599:..\src/command_processing.c **** 
2600:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 20038              		.loc 1 2600 0
 20039 016a 774A     		ldr	r2, .L765+4
 20040 016c D7F83431 		ldr	r3, [r7, #308]
 20041 0170 1344     		add	r3, r3, r2
 20042 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20043 0174 1946     		mov	r1, r3
 20044 0176 764A     		ldr	r2, .L765+12
 20045 0178 0B46     		mov	r3, r1
 20046 017a 9B00     		lsls	r3, r3, #2
 20047 017c 0B44     		add	r3, r3, r1
 20048 017e 1344     		add	r3, r3, r2
 20049 0180 03F50173 		add	r3, r3, #516
 20050 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20051 0186 002B     		cmp	r3, #0
 20052 0188 31D0     		beq	.L761
2601:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 20053              		.loc 1 2601 0
 20054 018a 7249     		ldr	r1, .L765+16
 20055 018c D7F83421 		ldr	r2, [r7, #308]
 20056 0190 1346     		mov	r3, r2
 20057 0192 9B00     		lsls	r3, r3, #2
 20058 0194 1344     		add	r3, r3, r2
 20059 0196 DB00     		lsls	r3, r3, #3
 20060 0198 0B44     		add	r3, r3, r1
 20061 019a 0E33     		adds	r3, r3, #14
 20062 019c B3F90030 		ldrsh	r3, [r3]
 20063 01a0 1C46     		mov	r4, r3
 20064 01a2 6C49     		ldr	r1, .L765+16
 20065 01a4 D7F83421 		ldr	r2, [r7, #308]
 20066 01a8 1346     		mov	r3, r2
 20067 01aa 9B00     		lsls	r3, r3, #2
 20068 01ac 1344     		add	r3, r3, r2
 20069 01ae DB00     		lsls	r3, r3, #3
 20070 01b0 0B44     		add	r3, r3, r1
 20071 01b2 1033     		adds	r3, r3, #16
 20072 01b4 B3F90030 		ldrsh	r3, [r3]
 20073 01b8 1D46     		mov	r5, r3
 20074 01ba 6649     		ldr	r1, .L765+16
 20075 01bc D7F83421 		ldr	r2, [r7, #308]
 20076 01c0 1346     		mov	r3, r2
 20077 01c2 9B00     		lsls	r3, r3, #2
 20078 01c4 1344     		add	r3, r3, r2
 20079 01c6 DB00     		lsls	r3, r3, #3
 20080 01c8 0B44     		add	r3, r3, r1
 20081 01ca 1233     		adds	r3, r3, #18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 439


 20082 01cc B3F90030 		ldrsh	r3, [r3]
 20083 01d0 07F10800 		add	r0, r7, #8
 20084 01d4 0093     		str	r3, [sp]
 20085 01d6 2B46     		mov	r3, r5
 20086 01d8 2246     		mov	r2, r4
 20087 01da 6149     		ldr	r1, .L765+28
 20088 01dc FFF7FEFF 		bl	sprintf
2602:..\src/command_processing.c ****             strcat(info_string, str);
 20089              		.loc 1 2602 0
 20090 01e0 07F10802 		add	r2, r7, #8
 20091 01e4 3B1D     		adds	r3, r7, #4
 20092 01e6 1146     		mov	r1, r2
 20093 01e8 1868     		ldr	r0, [r3]
 20094 01ea FFF7FEFF 		bl	strcat
 20095              	.L761:
2603:..\src/command_processing.c ****         }
2604:..\src/command_processing.c ****         
2605:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 20096              		.loc 1 2605 0
 20097 01ee 564A     		ldr	r2, .L765+4
 20098 01f0 D7F83431 		ldr	r3, [r7, #308]
 20099 01f4 1344     		add	r3, r3, r2
 20100 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20101 01f8 1946     		mov	r1, r3
 20102 01fa 554A     		ldr	r2, .L765+12
 20103 01fc 0B46     		mov	r3, r1
 20104 01fe 9B00     		lsls	r3, r3, #2
 20105 0200 0B44     		add	r3, r3, r1
 20106 0202 1344     		add	r3, r3, r2
 20107 0204 03F20523 		addw	r3, r3, #517
 20108 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20109 020a 002B     		cmp	r3, #0
 20110 020c 4FD0     		beq	.L762
2606:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 20111              		.loc 1 2606 0
 20112 020e 5149     		ldr	r1, .L765+16
 20113 0210 D7F83421 		ldr	r2, [r7, #308]
 20114 0214 1346     		mov	r3, r2
 20115 0216 9B00     		lsls	r3, r3, #2
 20116 0218 1344     		add	r3, r3, r2
 20117 021a DB00     		lsls	r3, r3, #3
 20118 021c 0B44     		add	r3, r3, r1
 20119 021e 1433     		adds	r3, r3, #20
 20120 0220 1B68     		ldr	r3, [r3]	@ float
 20121 0222 1846     		mov	r0, r3
 20122 0224 FFF7FEFF 		bl	__aeabi_f2d
 20123 0228 8246     		mov	r10, r0
 20124 022a 8B46     		mov	fp, r1
 20125 022c 4949     		ldr	r1, .L765+16
 20126 022e D7F83421 		ldr	r2, [r7, #308]
 20127 0232 1346     		mov	r3, r2
 20128 0234 9B00     		lsls	r3, r3, #2
 20129 0236 1344     		add	r3, r3, r2
 20130 0238 DB00     		lsls	r3, r3, #3
 20131 023a 0B44     		add	r3, r3, r1
 20132 023c 1833     		adds	r3, r3, #24
 20133 023e 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 440


 20134 0240 1846     		mov	r0, r3
 20135 0242 FFF7FEFF 		bl	__aeabi_f2d
 20136 0246 0446     		mov	r4, r0
 20137 0248 0D46     		mov	r5, r1
 20138 024a 4249     		ldr	r1, .L765+16
 20139 024c D7F83421 		ldr	r2, [r7, #308]
 20140 0250 1346     		mov	r3, r2
 20141 0252 9B00     		lsls	r3, r3, #2
 20142 0254 1344     		add	r3, r3, r2
 20143 0256 DB00     		lsls	r3, r3, #3
 20144 0258 0B44     		add	r3, r3, r1
 20145 025a 1C33     		adds	r3, r3, #28
 20146 025c 1B68     		ldr	r3, [r3]	@ float
 20147 025e 1846     		mov	r0, r3
 20148 0260 FFF7FEFF 		bl	__aeabi_f2d
 20149 0264 8046     		mov	r8, r0
 20150 0266 8946     		mov	r9, r1
 20151 0268 3A49     		ldr	r1, .L765+16
 20152 026a D7F83421 		ldr	r2, [r7, #308]
 20153 026e 1346     		mov	r3, r2
 20154 0270 9B00     		lsls	r3, r3, #2
 20155 0272 1344     		add	r3, r3, r2
 20156 0274 DB00     		lsls	r3, r3, #3
 20157 0276 0B44     		add	r3, r3, r1
 20158 0278 2033     		adds	r3, r3, #32
 20159 027a 1B68     		ldr	r3, [r3]	@ float
 20160 027c 1846     		mov	r0, r3
 20161 027e FFF7FEFF 		bl	__aeabi_f2d
 20162 0282 0246     		mov	r2, r0
 20163 0284 0B46     		mov	r3, r1
 20164 0286 07F10800 		add	r0, r7, #8
 20165 028a CDE90423 		strd	r2, [sp, #16]
 20166 028e CDE90289 		strd	r8, [sp, #8]
 20167 0292 CDE90045 		strd	r4, [sp]
 20168 0296 5246     		mov	r2, r10
 20169 0298 5B46     		mov	r3, fp
 20170 029a 3249     		ldr	r1, .L765+32
 20171 029c FFF7FEFF 		bl	sprintf
2607:..\src/command_processing.c ****             strcat(info_string, str);
 20172              		.loc 1 2607 0
 20173 02a0 07F10802 		add	r2, r7, #8
 20174 02a4 3B1D     		adds	r3, r7, #4
 20175 02a6 1146     		mov	r1, r2
 20176 02a8 1868     		ldr	r0, [r3]
 20177 02aa FFF7FEFF 		bl	strcat
 20178              	.L762:
2608:..\src/command_processing.c ****         }
2609:..\src/command_processing.c ****         
2610:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 20179              		.loc 1 2610 0
 20180 02ae 264A     		ldr	r2, .L765+4
 20181 02b0 D7F83431 		ldr	r3, [r7, #308]
 20182 02b4 1344     		add	r3, r3, r2
 20183 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20184 02b8 1946     		mov	r1, r3
 20185 02ba 254A     		ldr	r2, .L765+12
 20186 02bc 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 441


 20187 02be 9B00     		lsls	r3, r3, #2
 20188 02c0 0B44     		add	r3, r3, r1
 20189 02c2 1344     		add	r3, r3, r2
 20190 02c4 03F20623 		addw	r3, r3, #518
 20191 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20192 02ca 002B     		cmp	r3, #0
 20193 02cc 18D0     		beq	.L763
2611:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20194              		.loc 1 2611 0
 20195 02ce 2149     		ldr	r1, .L765+16
 20196 02d0 D7F83421 		ldr	r2, [r7, #308]
 20197 02d4 1346     		mov	r3, r2
 20198 02d6 9B00     		lsls	r3, r3, #2
 20199 02d8 1344     		add	r3, r3, r2
 20200 02da DB00     		lsls	r3, r3, #3
 20201 02dc 0B44     		add	r3, r3, r1
 20202 02de 2433     		adds	r3, r3, #36
 20203 02e0 B3F90030 		ldrsh	r3, [r3]
 20204 02e4 1A46     		mov	r2, r3
 20205 02e6 07F10803 		add	r3, r7, #8
 20206 02ea 1F49     		ldr	r1, .L765+36
 20207 02ec 1846     		mov	r0, r3
 20208 02ee FFF7FEFF 		bl	sprintf
2612:..\src/command_processing.c ****             strcat(info_string, str);
 20209              		.loc 1 2612 0
 20210 02f2 07F10802 		add	r2, r7, #8
 20211 02f6 3B1D     		adds	r3, r7, #4
 20212 02f8 1146     		mov	r1, r2
 20213 02fa 1868     		ldr	r0, [r3]
 20214 02fc FFF7FEFF 		bl	strcat
 20215              	.L763:
2586:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20216              		.loc 1 2586 0 discriminator 2
 20217 0300 D7F83431 		ldr	r3, [r7, #308]
 20218 0304 0133     		adds	r3, r3, #1
 20219 0306 C7F83431 		str	r3, [r7, #308]
 20220              	.L758:
2586:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20221              		.loc 1 2586 0 is_stmt 0 discriminator 1
 20222 030a 184B     		ldr	r3, .L765+40
 20223 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20224 030e 1A46     		mov	r2, r3
 20225 0310 D7F83431 		ldr	r3, [r7, #308]
 20226 0314 9A42     		cmp	r2, r3
 20227 0316 3FF791AE 		bgt	.L764
2613:..\src/command_processing.c ****         }
2614:..\src/command_processing.c ****         
2615:..\src/command_processing.c ****     }
2616:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20228              		.loc 1 2616 0 is_stmt 1
 20229 031a 3B1D     		adds	r3, r7, #4
 20230 031c 1868     		ldr	r0, [r3]
 20231 031e FFF7FEFF 		bl	strlen
 20232 0322 0346     		mov	r3, r0
 20233 0324 1A46     		mov	r2, r3
 20234 0326 3B1D     		adds	r3, r7, #4
 20235 0328 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 442


 20236 032a 1344     		add	r3, r3, r2
 20237 032c 104A     		ldr	r2, .L765+44
 20238 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20239 0330 9278     		ldrb	r2, [r2, #2]
 20240 0332 1980     		strh	r1, [r3]	@ unaligned
 20241 0334 9A70     		strb	r2, [r3, #2]
2617:..\src/command_processing.c **** }
 20242              		.loc 1 2617 0
 20243 0336 00BF     		nop
 20244 0338 07F59C77 		add	r7, r7, #312
 20245              		.cfi_def_cfa_offset 32
 20246 033c BD46     		mov	sp, r7
 20247              		.cfi_def_cfa_register 13
 20248              		@ sp needed
 20249 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20250              	.L766:
 20251 0342 00BF     		.align	2
 20252              	.L765:
 20253 0344 981A0000 		.word	.LC265
 20254 0348 00000000 		.word	IMU_connected
 20255 034c 0C160000 		.word	.LC218
 20256 0350 00000000 		.word	c_mem
 20257 0354 00000000 		.word	g_imu
 20258 0358 A81A0000 		.word	.LC266
 20259 035c BC1A0000 		.word	.LC267
 20260 0360 D01A0000 		.word	.LC268
 20261 0364 E41A0000 		.word	.LC269
 20262 0368 041B0000 		.word	.LC270
 20263 036c 00000000 		.word	N_IMU_Connected
 20264 0370 C00D0000 		.word	.LC126
 20265              		.cfi_endproc
 20266              	.LFE77:
 20267              		.size	IMU_reading_info, .-IMU_reading_info
 20268              		.section	.text.commWrite_old_id,"ax",%progbits
 20269              		.align	2
 20270              		.global	commWrite_old_id
 20271              		.thumb
 20272              		.thumb_func
 20273              		.type	commWrite_old_id, %function
 20274              	commWrite_old_id:
 20275              	.LFB78:
2618:..\src/command_processing.c **** 
2619:..\src/command_processing.c **** //==============================================================================
2620:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2621:..\src/command_processing.c **** //==============================================================================
2622:..\src/command_processing.c **** 
2623:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2624:..\src/command_processing.c **** {
 20276              		.loc 1 2624 0
 20277              		.cfi_startproc
 20278              		@ args = 0, pretend = 0, frame = 16
 20279              		@ frame_needed = 1, uses_anonymous_args = 0
 20280 0000 80B5     		push	{r7, lr}
 20281              		.cfi_def_cfa_offset 8
 20282              		.cfi_offset 7, -8
 20283              		.cfi_offset 14, -4
 20284 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 443


 20285              		.cfi_def_cfa_offset 24
 20286 0004 00AF     		add	r7, sp, #0
 20287              		.cfi_def_cfa_register 7
 20288 0006 7860     		str	r0, [r7, #4]
 20289 0008 0B46     		mov	r3, r1
 20290 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20291 000c 1346     		mov	r3, r2
 20292 000e 7B70     		strb	r3, [r7, #1]
2625:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2626:..\src/command_processing.c **** 
2627:..\src/command_processing.c ****     // frame - start
2628:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20293              		.loc 1 2628 0
 20294 0010 3A20     		movs	r0, #58
 20295 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2629:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20296              		.loc 1 2629 0
 20297 0016 3A20     		movs	r0, #58
 20298 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2630:..\src/command_processing.c ****     // frame - ID
2631:..\src/command_processing.c ****     //if(old_id)
2632:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20299              		.loc 1 2632 0
 20300 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20301 001e 1846     		mov	r0, r3
 20302 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2633:..\src/command_processing.c ****     //else
2634:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2635:..\src/command_processing.c ****         
2636:..\src/command_processing.c ****     // frame - length
2637:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20303              		.loc 1 2637 0
 20304 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20305 0026 DBB2     		uxtb	r3, r3
 20306 0028 1846     		mov	r0, r3
 20307 002a FFF7FEFF 		bl	UART_RS485_PutChar
2638:..\src/command_processing.c ****     // frame - packet data
2639:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20308              		.loc 1 2639 0
 20309 002e 0023     		movs	r3, #0
 20310 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20311 0032 09E0     		b	.L768
 20312              	.L769:
2640:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20313              		.loc 1 2640 0 discriminator 3
 20314 0034 FB89     		ldrh	r3, [r7, #14]
 20315 0036 7A68     		ldr	r2, [r7, #4]
 20316 0038 1344     		add	r3, r3, r2
 20317 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20318 003c 1846     		mov	r0, r3
 20319 003e FFF7FEFF 		bl	UART_RS485_PutChar
2639:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20320              		.loc 1 2639 0 discriminator 3
 20321 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20322 0044 0133     		adds	r3, r3, #1
 20323 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20324              	.L768:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 444


2639:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20325              		.loc 1 2639 0 is_stmt 0 discriminator 1
 20326 0048 FA89     		ldrh	r2, [r7, #14]
 20327 004a 7B88     		ldrh	r3, [r7, #2]
 20328 004c 9A42     		cmp	r2, r3
 20329 004e F1D3     		bcc	.L769
2641:..\src/command_processing.c ****     }
2642:..\src/command_processing.c **** 
2643:..\src/command_processing.c ****     index = 0;
 20330              		.loc 1 2643 0 is_stmt 1
 20331 0050 0023     		movs	r3, #0
 20332 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2644:..\src/command_processing.c **** 
2645:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20333              		.loc 1 2645 0
 20334 0054 00BF     		nop
 20335              	.L771:
 20336              		.loc 1 2645 0 is_stmt 0 discriminator 2
 20337 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20338 005a 0346     		mov	r3, r0
 20339 005c 03F00103 		and	r3, r3, #1
 20340 0060 002B     		cmp	r3, #0
 20341 0062 05D1     		bne	.L770
 20342              		.loc 1 2645 0 discriminator 1
 20343 0064 FB89     		ldrh	r3, [r7, #14]
 20344 0066 5A1C     		adds	r2, r3, #1
 20345 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20346 006a B3F57A7F 		cmp	r3, #1000
 20347 006e F2D9     		bls	.L771
 20348              	.L770:
2646:..\src/command_processing.c **** 
2647:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20349              		.loc 1 2647 0 is_stmt 1
 20350 0070 0120     		movs	r0, #1
 20351 0072 FFF7FEFF 		bl	RS485_CTS_Write
2648:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20352              		.loc 1 2648 0
 20353 0076 0020     		movs	r0, #0
 20354 0078 FFF7FEFF 		bl	RS485_CTS_Write
2649:..\src/command_processing.c **** }
 20355              		.loc 1 2649 0
 20356 007c 00BF     		nop
 20357 007e 1037     		adds	r7, r7, #16
 20358              		.cfi_def_cfa_offset 8
 20359 0080 BD46     		mov	sp, r7
 20360              		.cfi_def_cfa_register 13
 20361              		@ sp needed
 20362 0082 80BD     		pop	{r7, pc}
 20363              		.cfi_endproc
 20364              	.LFE78:
 20365              		.size	commWrite_old_id, .-commWrite_old_id
 20366              		.section	.text.commWrite,"ax",%progbits
 20367              		.align	2
 20368              		.global	commWrite
 20369              		.thumb
 20370              		.thumb_func
 20371              		.type	commWrite, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 445


 20372              	commWrite:
 20373              	.LFB79:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2652:..\src/command_processing.c **** {
 20374              		.loc 1 2652 0
 20375              		.cfi_startproc
 20376              		@ args = 0, pretend = 0, frame = 16
 20377              		@ frame_needed = 1, uses_anonymous_args = 0
 20378 0000 80B5     		push	{r7, lr}
 20379              		.cfi_def_cfa_offset 8
 20380              		.cfi_offset 7, -8
 20381              		.cfi_offset 14, -4
 20382 0002 84B0     		sub	sp, sp, #16
 20383              		.cfi_def_cfa_offset 24
 20384 0004 00AF     		add	r7, sp, #0
 20385              		.cfi_def_cfa_register 7
 20386 0006 7860     		str	r0, [r7, #4]
 20387 0008 0B46     		mov	r3, r1
 20388 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2653:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c ****     // frame - start
2656:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20389              		.loc 1 2656 0
 20390 000c 3A20     		movs	r0, #58
 20391 000e FFF7FEFF 		bl	UART_RS485_PutChar
2657:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20392              		.loc 1 2657 0
 20393 0012 3A20     		movs	r0, #58
 20394 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2658:..\src/command_processing.c ****     // frame - ID
2659:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20395              		.loc 1 2659 0
 20396 0018 1A4B     		ldr	r3, .L777
 20397 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20398 001e 1846     		mov	r0, r3
 20399 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2660:..\src/command_processing.c ****     // frame - length
2661:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20400              		.loc 1 2661 0
 20401 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20402 0026 DBB2     		uxtb	r3, r3
 20403 0028 1846     		mov	r0, r3
 20404 002a FFF7FEFF 		bl	UART_RS485_PutChar
2662:..\src/command_processing.c ****     // frame - packet data
2663:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20405              		.loc 1 2663 0
 20406 002e 0023     		movs	r3, #0
 20407 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20408 0032 09E0     		b	.L773
 20409              	.L774:
2664:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20410              		.loc 1 2664 0 discriminator 3
 20411 0034 FB89     		ldrh	r3, [r7, #14]
 20412 0036 7A68     		ldr	r2, [r7, #4]
 20413 0038 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 446


 20414 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20415 003c 1846     		mov	r0, r3
 20416 003e FFF7FEFF 		bl	UART_RS485_PutChar
2663:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20417              		.loc 1 2663 0 discriminator 3
 20418 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20419 0044 0133     		adds	r3, r3, #1
 20420 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20421              	.L773:
2663:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20422              		.loc 1 2663 0 is_stmt 0 discriminator 1
 20423 0048 FA89     		ldrh	r2, [r7, #14]
 20424 004a 7B88     		ldrh	r3, [r7, #2]
 20425 004c 9A42     		cmp	r2, r3
 20426 004e F1D3     		bcc	.L774
2665:..\src/command_processing.c ****     }
2666:..\src/command_processing.c **** 
2667:..\src/command_processing.c ****     index = 0;
 20427              		.loc 1 2667 0 is_stmt 1
 20428 0050 0023     		movs	r3, #0
 20429 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2668:..\src/command_processing.c **** 
2669:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20430              		.loc 1 2669 0
 20431 0054 00BF     		nop
 20432              	.L776:
 20433              		.loc 1 2669 0 is_stmt 0 discriminator 2
 20434 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20435 005a 0346     		mov	r3, r0
 20436 005c 03F00103 		and	r3, r3, #1
 20437 0060 002B     		cmp	r3, #0
 20438 0062 05D1     		bne	.L775
 20439              		.loc 1 2669 0 discriminator 1
 20440 0064 FB89     		ldrh	r3, [r7, #14]
 20441 0066 5A1C     		adds	r2, r3, #1
 20442 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20443 006a B3F57A7F 		cmp	r3, #1000
 20444 006e F2D9     		bls	.L776
 20445              	.L775:
2670:..\src/command_processing.c **** 
2671:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20446              		.loc 1 2671 0 is_stmt 1
 20447 0070 0120     		movs	r0, #1
 20448 0072 FFF7FEFF 		bl	RS485_CTS_Write
2672:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20449              		.loc 1 2672 0
 20450 0076 0020     		movs	r0, #0
 20451 0078 FFF7FEFF 		bl	RS485_CTS_Write
2673:..\src/command_processing.c **** }
 20452              		.loc 1 2673 0
 20453 007c 00BF     		nop
 20454 007e 1037     		adds	r7, r7, #16
 20455              		.cfi_def_cfa_offset 8
 20456 0080 BD46     		mov	sp, r7
 20457              		.cfi_def_cfa_register 13
 20458              		@ sp needed
 20459 0082 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 447


 20460              	.L778:
 20461              		.align	2
 20462              	.L777:
 20463 0084 00000000 		.word	g_mem
 20464              		.cfi_endproc
 20465              	.LFE79:
 20466              		.size	commWrite, .-commWrite
 20467              		.section	.text.commWrite_to_cuff,"ax",%progbits
 20468              		.align	2
 20469              		.global	commWrite_to_cuff
 20470              		.thumb
 20471              		.thumb_func
 20472              		.type	commWrite_to_cuff, %function
 20473              	commWrite_to_cuff:
 20474              	.LFB80:
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
2676:..\src/command_processing.c **** {
 20475              		.loc 1 2676 0
 20476              		.cfi_startproc
 20477              		@ args = 0, pretend = 0, frame = 16
 20478              		@ frame_needed = 1, uses_anonymous_args = 0
 20479 0000 80B5     		push	{r7, lr}
 20480              		.cfi_def_cfa_offset 8
 20481              		.cfi_offset 7, -8
 20482              		.cfi_offset 14, -4
 20483 0002 84B0     		sub	sp, sp, #16
 20484              		.cfi_def_cfa_offset 24
 20485 0004 00AF     		add	r7, sp, #0
 20486              		.cfi_def_cfa_register 7
 20487 0006 7860     		str	r0, [r7, #4]
 20488 0008 0B46     		mov	r3, r1
 20489 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2677:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2678:..\src/command_processing.c **** 
2679:..\src/command_processing.c ****     // frame - start
2680:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20490              		.loc 1 2680 0
 20491 000c 3A20     		movs	r0, #58
 20492 000e FFF7FEFF 		bl	UART_RS485_PutChar
2681:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20493              		.loc 1 2681 0
 20494 0012 3A20     		movs	r0, #58
 20495 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2682:..\src/command_processing.c ****     // frame - ID
2683:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id - 1);
 20496              		.loc 1 2683 0
 20497 0018 184B     		ldr	r3, .L785
 20498 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20499 001e 013B     		subs	r3, r3, #1
 20500 0020 DBB2     		uxtb	r3, r3
 20501 0022 1846     		mov	r0, r3
 20502 0024 FFF7FEFF 		bl	UART_RS485_PutChar
2684:..\src/command_processing.c ****     // frame - length
2685:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20503              		.loc 1 2685 0
 20504 0028 7B88     		ldrh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 448


 20505 002a DBB2     		uxtb	r3, r3
 20506 002c 1846     		mov	r0, r3
 20507 002e FFF7FEFF 		bl	UART_RS485_PutChar
2686:..\src/command_processing.c ****     // frame - packet data
2687:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20508              		.loc 1 2687 0
 20509 0032 0023     		movs	r3, #0
 20510 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 20511 0036 09E0     		b	.L780
 20512              	.L781:
2688:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20513              		.loc 1 2688 0 discriminator 3
 20514 0038 FB89     		ldrh	r3, [r7, #14]
 20515 003a 7A68     		ldr	r2, [r7, #4]
 20516 003c 1344     		add	r3, r3, r2
 20517 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20518 0040 1846     		mov	r0, r3
 20519 0042 FFF7FEFF 		bl	UART_RS485_PutChar
2687:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20520              		.loc 1 2687 0 discriminator 3
 20521 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20522 0048 0133     		adds	r3, r3, #1
 20523 004a FB81     		strh	r3, [r7, #14]	@ movhi
 20524              	.L780:
2687:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20525              		.loc 1 2687 0 is_stmt 0 discriminator 1
 20526 004c FA89     		ldrh	r2, [r7, #14]
 20527 004e 7B88     		ldrh	r3, [r7, #2]
 20528 0050 9A42     		cmp	r2, r3
 20529 0052 F1D3     		bcc	.L781
2689:..\src/command_processing.c ****     }
2690:..\src/command_processing.c **** 
2691:..\src/command_processing.c ****     index = 0;
 20530              		.loc 1 2691 0 is_stmt 1
 20531 0054 0023     		movs	r3, #0
 20532 0056 FB81     		strh	r3, [r7, #14]	@ movhi
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20533              		.loc 1 2693 0
 20534 0058 00BF     		nop
 20535              	.L783:
 20536              		.loc 1 2693 0 is_stmt 0 discriminator 2
 20537 005a FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20538 005e 0346     		mov	r3, r0
 20539 0060 03F00103 		and	r3, r3, #1
 20540 0064 002B     		cmp	r3, #0
 20541 0066 05D1     		bne	.L784
 20542              		.loc 1 2693 0 discriminator 1
 20543 0068 FB89     		ldrh	r3, [r7, #14]
 20544 006a 5A1C     		adds	r2, r3, #1
 20545 006c FA81     		strh	r2, [r7, #14]	@ movhi
 20546 006e B3F57A7F 		cmp	r3, #1000
 20547 0072 F2D9     		bls	.L783
 20548              	.L784:
2694:..\src/command_processing.c **** }
 20549              		.loc 1 2694 0 is_stmt 1
 20550 0074 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 449


 20551 0076 1037     		adds	r7, r7, #16
 20552              		.cfi_def_cfa_offset 8
 20553 0078 BD46     		mov	sp, r7
 20554              		.cfi_def_cfa_register 13
 20555              		@ sp needed
 20556 007a 80BD     		pop	{r7, pc}
 20557              	.L786:
 20558              		.align	2
 20559              	.L785:
 20560 007c 00000000 		.word	g_mem
 20561              		.cfi_endproc
 20562              	.LFE80:
 20563              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 20564              		.section	.text.LCRChecksum,"ax",%progbits
 20565              		.align	2
 20566              		.global	LCRChecksum
 20567              		.thumb
 20568              		.thumb_func
 20569              		.type	LCRChecksum, %function
 20570              	LCRChecksum:
 20571              	.LFB81:
2695:..\src/command_processing.c **** 
2696:..\src/command_processing.c **** //==============================================================================
2697:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2698:..\src/command_processing.c **** //==============================================================================
2699:..\src/command_processing.c **** 
2700:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20572              		.loc 1 2702 0
 20573              		.cfi_startproc
 20574              		@ args = 0, pretend = 0, frame = 16
 20575              		@ frame_needed = 1, uses_anonymous_args = 0
 20576              		@ link register save eliminated.
 20577 0000 80B4     		push	{r7}
 20578              		.cfi_def_cfa_offset 4
 20579              		.cfi_offset 7, -4
 20580 0002 85B0     		sub	sp, sp, #20
 20581              		.cfi_def_cfa_offset 24
 20582 0004 00AF     		add	r7, sp, #0
 20583              		.cfi_def_cfa_register 7
 20584 0006 7860     		str	r0, [r7, #4]
 20585 0008 0B46     		mov	r3, r1
 20586 000a FB70     		strb	r3, [r7, #3]
2703:..\src/command_processing.c ****     
2704:..\src/command_processing.c ****     uint8 CYDATA i;
2705:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20587              		.loc 1 2705 0
 20588 000c 0023     		movs	r3, #0
 20589 000e BB73     		strb	r3, [r7, #14]
2706:..\src/command_processing.c ****     
2707:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20590              		.loc 1 2707 0
 20591 0010 0023     		movs	r3, #0
 20592 0012 FB73     		strb	r3, [r7, #15]
 20593 0014 09E0     		b	.L788
 20594              	.L789:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 450


2708:..\src/command_processing.c ****        checksum ^= data_array[i];
 20595              		.loc 1 2708 0 discriminator 3
 20596 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20597 0018 7A68     		ldr	r2, [r7, #4]
 20598 001a 1344     		add	r3, r3, r2
 20599 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20600 001e BB7B     		ldrb	r3, [r7, #14]
 20601 0020 5340     		eors	r3, r3, r2
 20602 0022 BB73     		strb	r3, [r7, #14]
2707:..\src/command_processing.c ****        checksum ^= data_array[i];
 20603              		.loc 1 2707 0 discriminator 3
 20604 0024 FB7B     		ldrb	r3, [r7, #15]
 20605 0026 0133     		adds	r3, r3, #1
 20606 0028 FB73     		strb	r3, [r7, #15]
 20607              	.L788:
2707:..\src/command_processing.c ****        checksum ^= data_array[i];
 20608              		.loc 1 2707 0 is_stmt 0 discriminator 1
 20609 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20610 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20611 002e 9A42     		cmp	r2, r3
 20612 0030 F1D3     		bcc	.L789
2709:..\src/command_processing.c ****   
2710:..\src/command_processing.c ****     return checksum;
 20613              		.loc 1 2710 0 is_stmt 1
 20614 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2711:..\src/command_processing.c **** }
 20615              		.loc 1 2711 0
 20616 0034 1846     		mov	r0, r3
 20617 0036 1437     		adds	r7, r7, #20
 20618              		.cfi_def_cfa_offset 4
 20619 0038 BD46     		mov	sp, r7
 20620              		.cfi_def_cfa_register 13
 20621              		@ sp needed
 20622 003a 80BC     		pop	{r7}
 20623              		.cfi_restore 7
 20624              		.cfi_def_cfa_offset 0
 20625 003c 7047     		bx	lr
 20626              		.cfi_endproc
 20627              	.LFE81:
 20628              		.size	LCRChecksum, .-LCRChecksum
 20629 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20630              		.align	2
 20631              		.global	sendAcknowledgment
 20632              		.thumb
 20633              		.thumb_func
 20634              		.type	sendAcknowledgment, %function
 20635              	sendAcknowledgment:
 20636              	.LFB82:
2712:..\src/command_processing.c **** 
2713:..\src/command_processing.c **** 
2714:..\src/command_processing.c **** //==============================================================================
2715:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2716:..\src/command_processing.c **** //==============================================================================
2717:..\src/command_processing.c **** 
2718:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20637              		.loc 1 2718 0
 20638              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 451


 20639              		@ args = 0, pretend = 0, frame = 16
 20640              		@ frame_needed = 1, uses_anonymous_args = 0
 20641 0000 80B5     		push	{r7, lr}
 20642              		.cfi_def_cfa_offset 8
 20643              		.cfi_offset 7, -8
 20644              		.cfi_offset 14, -4
 20645 0002 84B0     		sub	sp, sp, #16
 20646              		.cfi_def_cfa_offset 24
 20647 0004 00AF     		add	r7, sp, #0
 20648              		.cfi_def_cfa_register 7
 20649 0006 0346     		mov	r3, r0
 20650 0008 FB71     		strb	r3, [r7, #7]
2719:..\src/command_processing.c ****     int packet_lenght = 2;
 20651              		.loc 1 2719 0
 20652 000a 0223     		movs	r3, #2
 20653 000c FB60     		str	r3, [r7, #12]
2720:..\src/command_processing.c ****     uint8 packet_data[2];
2721:..\src/command_processing.c **** 
2722:..\src/command_processing.c ****     packet_data[0] = value;
 20654              		.loc 1 2722 0
 20655 000e FB79     		ldrb	r3, [r7, #7]
 20656 0010 3B72     		strb	r3, [r7, #8]
2723:..\src/command_processing.c ****     packet_data[1] = value;
 20657              		.loc 1 2723 0
 20658 0012 FB79     		ldrb	r3, [r7, #7]
 20659 0014 7B72     		strb	r3, [r7, #9]
2724:..\src/command_processing.c **** 
2725:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20660              		.loc 1 2725 0
 20661 0016 FB68     		ldr	r3, [r7, #12]
 20662 0018 9AB2     		uxth	r2, r3
 20663 001a 07F10803 		add	r3, r7, #8
 20664 001e 1146     		mov	r1, r2
 20665 0020 1846     		mov	r0, r3
 20666 0022 FFF7FEFF 		bl	commWrite
2726:..\src/command_processing.c **** }
 20667              		.loc 1 2726 0
 20668 0026 00BF     		nop
 20669 0028 1037     		adds	r7, r7, #16
 20670              		.cfi_def_cfa_offset 8
 20671 002a BD46     		mov	sp, r7
 20672              		.cfi_def_cfa_register 13
 20673              		@ sp needed
 20674 002c 80BD     		pop	{r7, pc}
 20675              		.cfi_endproc
 20676              	.LFE82:
 20677              		.size	sendAcknowledgment, .-sendAcknowledgment
 20678 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20679              		.align	2
 20680              		.global	memStore
 20681              		.thumb
 20682              		.thumb_func
 20683              		.type	memStore, %function
 20684              	memStore:
 20685              	.LFB83:
2727:..\src/command_processing.c **** 
2728:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 452


2729:..\src/command_processing.c **** //                                                                  STORE MEMORY
2730:..\src/command_processing.c **** //==============================================================================
2731:..\src/command_processing.c **** 
2732:..\src/command_processing.c **** 
2733:..\src/command_processing.c **** uint8 memStore(int displacement)
2734:..\src/command_processing.c **** {
 20686              		.loc 1 2734 0
 20687              		.cfi_startproc
 20688              		@ args = 0, pretend = 0, frame = 24
 20689              		@ frame_needed = 1, uses_anonymous_args = 0
 20690 0000 80B5     		push	{r7, lr}
 20691              		.cfi_def_cfa_offset 8
 20692              		.cfi_offset 7, -8
 20693              		.cfi_offset 14, -4
 20694 0002 86B0     		sub	sp, sp, #24
 20695              		.cfi_def_cfa_offset 32
 20696 0004 00AF     		add	r7, sp, #0
 20697              		.cfi_def_cfa_register 7
 20698 0006 7860     		str	r0, [r7, #4]
2735:..\src/command_processing.c ****     int i;  // iterator
2736:..\src/command_processing.c ****     uint8 writeStatus;
2737:..\src/command_processing.c ****     int pages;
2738:..\src/command_processing.c ****     uint8 ret_val = 1;
 20699              		.loc 1 2738 0
 20700 0008 0123     		movs	r3, #1
 20701 000a FB74     		strb	r3, [r7, #19]
2739:..\src/command_processing.c **** 
2740:..\src/command_processing.c ****     // Disable Interrupt
2741:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20702              		.loc 1 2741 0
 20703 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2742:..\src/command_processing.c **** 
2743:..\src/command_processing.c ****     // Stop motor
2744:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20704              		.loc 1 2744 0
 20705 0010 0020     		movs	r0, #0
 20706 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2745:..\src/command_processing.c **** 
2746:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2747:..\src/command_processing.c ****     CySetTemp();
 20707              		.loc 1 2747 0
 20708 0016 FFF7FEFF 		bl	CySetTemp
2748:..\src/command_processing.c **** 
2749:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20709              		.loc 1 2749 0
 20710 001a 1D4A     		ldr	r2, .L798
 20711 001c 1D4B     		ldr	r3, .L798+4
 20712 001e 1046     		mov	r0, r2
 20713 0020 1946     		mov	r1, r3
 20714 0022 4FF42C73 		mov	r3, #688
 20715 0026 1A46     		mov	r2, r3
 20716 0028 FFF7FEFF 		bl	memcpy
2750:..\src/command_processing.c **** 
2751:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 20717              		.loc 1 2751 0
 20718 002c 2B23     		movs	r3, #43
 20719 002e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 453


2752:..\src/command_processing.c **** 
2753:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20720              		.loc 1 2753 0
 20721 0030 0023     		movs	r3, #0
 20722 0032 7B61     		str	r3, [r7, #20]
 20723 0034 18E0     		b	.L793
 20724              	.L796:
2754:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20725              		.loc 1 2754 0
 20726 0036 7B69     		ldr	r3, [r7, #20]
 20727 0038 1B01     		lsls	r3, r3, #4
 20728 003a 1A46     		mov	r2, r3
 20729 003c 154B     		ldr	r3, .L798+4
 20730 003e D018     		adds	r0, r2, r3
 20731 0040 7B69     		ldr	r3, [r7, #20]
 20732 0042 DAB2     		uxtb	r2, r3
 20733 0044 7B68     		ldr	r3, [r7, #4]
 20734 0046 DBB2     		uxtb	r3, r3
 20735 0048 1344     		add	r3, r3, r2
 20736 004a DBB2     		uxtb	r3, r3
 20737 004c 1946     		mov	r1, r3
 20738 004e FFF7FEFF 		bl	EEPROM_Write
 20739 0052 0346     		mov	r3, r0
 20740 0054 FB72     		strb	r3, [r7, #11]
2755:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20741              		.loc 1 2755 0
 20742 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20743 0058 002B     		cmp	r3, #0
 20744 005a 02D0     		beq	.L794
2756:..\src/command_processing.c ****             ret_val = 0;
 20745              		.loc 1 2756 0
 20746 005c 0023     		movs	r3, #0
 20747 005e FB74     		strb	r3, [r7, #19]
2757:..\src/command_processing.c ****             break;
 20748              		.loc 1 2757 0
 20749 0060 06E0     		b	.L795
 20750              	.L794:
2753:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20751              		.loc 1 2753 0 discriminator 2
 20752 0062 7B69     		ldr	r3, [r7, #20]
 20753 0064 0133     		adds	r3, r3, #1
 20754 0066 7B61     		str	r3, [r7, #20]
 20755              	.L793:
2753:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20756              		.loc 1 2753 0 is_stmt 0 discriminator 1
 20757 0068 7A69     		ldr	r2, [r7, #20]
 20758 006a FB68     		ldr	r3, [r7, #12]
 20759 006c 9A42     		cmp	r2, r3
 20760 006e E2DB     		blt	.L796
 20761              	.L795:
2758:..\src/command_processing.c ****         }
2759:..\src/command_processing.c ****     }
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 20762              		.loc 1 2761 0 is_stmt 1
 20763 0070 084A     		ldr	r2, .L798+4
 20764 0072 074B     		ldr	r3, .L798
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 454


 20765 0074 1046     		mov	r0, r2
 20766 0076 1946     		mov	r1, r3
 20767 0078 4FF42C73 		mov	r3, #688
 20768 007c 1A46     		mov	r2, r3
 20769 007e FFF7FEFF 		bl	memcpy
2762:..\src/command_processing.c **** 
2763:..\src/command_processing.c ****     // Re-Enable Interrupt
2764:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20770              		.loc 1 2764 0
 20771 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2765:..\src/command_processing.c **** 
2766:..\src/command_processing.c ****     return ret_val;
 20772              		.loc 1 2766 0
 20773 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2767:..\src/command_processing.c **** }
 20774              		.loc 1 2767 0
 20775 0088 1846     		mov	r0, r3
 20776 008a 1837     		adds	r7, r7, #24
 20777              		.cfi_def_cfa_offset 8
 20778 008c BD46     		mov	sp, r7
 20779              		.cfi_def_cfa_register 13
 20780              		@ sp needed
 20781 008e 80BD     		pop	{r7, pc}
 20782              	.L799:
 20783              		.align	2
 20784              	.L798:
 20785 0090 00000000 		.word	c_mem
 20786 0094 00000000 		.word	g_mem
 20787              		.cfi_endproc
 20788              	.LFE83:
 20789              		.size	memStore, .-memStore
 20790              		.section	.text.memRecall,"ax",%progbits
 20791              		.align	2
 20792              		.global	memRecall
 20793              		.thumb
 20794              		.thumb_func
 20795              		.type	memRecall, %function
 20796              	memRecall:
 20797              	.LFB84:
2768:..\src/command_processing.c **** 
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c **** //==============================================================================
2771:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2772:..\src/command_processing.c **** //==============================================================================
2773:..\src/command_processing.c **** 
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** void memRecall(void)
2776:..\src/command_processing.c **** {
 20798              		.loc 1 2776 0
 20799              		.cfi_startproc
 20800              		@ args = 0, pretend = 0, frame = 8
 20801              		@ frame_needed = 1, uses_anonymous_args = 0
 20802 0000 80B5     		push	{r7, lr}
 20803              		.cfi_def_cfa_offset 8
 20804              		.cfi_offset 7, -8
 20805              		.cfi_offset 14, -4
 20806 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 455


 20807              		.cfi_def_cfa_offset 16
 20808 0004 00AF     		add	r7, sp, #0
 20809              		.cfi_def_cfa_register 7
2777:..\src/command_processing.c ****     uint16 i;
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20810              		.loc 1 2779 0
 20811 0006 0023     		movs	r3, #0
 20812 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20813 000a 0CE0     		b	.L801
 20814              	.L802:
2780:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20815              		.loc 1 2780 0 discriminator 3
 20816 000c FB88     		ldrh	r3, [r7, #6]
 20817 000e 184A     		ldr	r2, .L806
 20818 0010 1344     		add	r3, r3, r2
 20819 0012 184A     		ldr	r2, .L806+4
 20820 0014 1168     		ldr	r1, [r2]
 20821 0016 FA88     		ldrh	r2, [r7, #6]
 20822 0018 0A44     		add	r2, r2, r1
 20823 001a 1278     		ldrb	r2, [r2]
 20824 001c D2B2     		uxtb	r2, r2
 20825 001e 1A70     		strb	r2, [r3]
2779:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20826              		.loc 1 2779 0 discriminator 3
 20827 0020 FB88     		ldrh	r3, [r7, #6]
 20828 0022 0133     		adds	r3, r3, #1
 20829 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 20830              	.L801:
2779:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 20831              		.loc 1 2779 0 is_stmt 0 discriminator 1
 20832 0026 FB88     		ldrh	r3, [r7, #6]
 20833 0028 B3F52C7F 		cmp	r3, #688
 20834 002c EED3     		bcc	.L802
2781:..\src/command_processing.c ****     }
2782:..\src/command_processing.c ****     
2783:..\src/command_processing.c ****     // Recall saved user_emg structure
2784:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 20835              		.loc 1 2784 0 is_stmt 1
 20836 002e 104B     		ldr	r3, .L806
 20837 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20838 0034 5B01     		lsls	r3, r3, #5
 20839 0036 03F51273 		add	r3, r3, #584
 20840 003a 0D4A     		ldr	r2, .L806
 20841 003c 1344     		add	r3, r3, r2
 20842 003e 1022     		movs	r2, #16
 20843 0040 1946     		mov	r1, r3
 20844 0042 0D48     		ldr	r0, .L806+8
 20845 0044 FFF7FEFF 		bl	memcpy
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c ****     //check for initialization
2787:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20846              		.loc 1 2787 0
 20847 0048 094B     		ldr	r3, .L806
 20848 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20849 004c 002B     		cmp	r3, #0
 20850 004e 02D1     		bne	.L803
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 456


2788:..\src/command_processing.c ****         memRestore();
 20851              		.loc 1 2788 0
 20852 0050 FFF7FEFF 		bl	memRestore
2789:..\src/command_processing.c ****     } else {
2790:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2791:..\src/command_processing.c ****     }        
2792:..\src/command_processing.c **** }
 20853              		.loc 1 2792 0
 20854 0054 08E0     		b	.L805
 20855              	.L803:
2790:..\src/command_processing.c ****     }        
 20856              		.loc 1 2790 0
 20857 0056 094A     		ldr	r2, .L806+12
 20858 0058 054B     		ldr	r3, .L806
 20859 005a 1046     		mov	r0, r2
 20860 005c 1946     		mov	r1, r3
 20861 005e 4FF42C73 		mov	r3, #688
 20862 0062 1A46     		mov	r2, r3
 20863 0064 FFF7FEFF 		bl	memcpy
 20864              	.L805:
 20865              		.loc 1 2792 0
 20866 0068 00BF     		nop
 20867 006a 0837     		adds	r7, r7, #8
 20868              		.cfi_def_cfa_offset 8
 20869 006c BD46     		mov	sp, r7
 20870              		.cfi_def_cfa_register 13
 20871              		@ sp needed
 20872 006e 80BD     		pop	{r7, pc}
 20873              	.L807:
 20874              		.align	2
 20875              	.L806:
 20876 0070 00000000 		.word	g_mem
 20877 0074 00000000 		.word	EEPROM_ADDR
 20878 0078 F0010000 		.word	g_mem+496
 20879 007c 00000000 		.word	c_mem
 20880              		.cfi_endproc
 20881              	.LFE84:
 20882              		.size	memRecall, .-memRecall
 20883              		.section	.text.memRestore,"ax",%progbits
 20884              		.align	2
 20885              		.global	memRestore
 20886              		.thumb
 20887              		.thumb_func
 20888              		.type	memRestore, %function
 20889              	memRestore:
 20890              	.LFB85:
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c **** 
2795:..\src/command_processing.c **** //==============================================================================
2796:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2797:..\src/command_processing.c **** //==============================================================================
2798:..\src/command_processing.c **** 
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** uint8 memRestore(void) {
 20891              		.loc 1 2800 0
 20892              		.cfi_startproc
 20893              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 457


 20894              		@ frame_needed = 1, uses_anonymous_args = 0
 20895 0000 80B5     		push	{r7, lr}
 20896              		.cfi_def_cfa_offset 8
 20897              		.cfi_offset 7, -8
 20898              		.cfi_offset 14, -4
 20899 0002 82B0     		sub	sp, sp, #8
 20900              		.cfi_def_cfa_offset 16
 20901 0004 00AF     		add	r7, sp, #0
 20902              		.cfi_def_cfa_register 7
2801:..\src/command_processing.c ****     uint16 i;
2802:..\src/command_processing.c **** 
2803:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 20903              		.loc 1 2803 0
 20904 0006 0023     		movs	r3, #0
 20905 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 20906 000a 0EE0     		b	.L809
 20907              	.L810:
2804:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20908              		.loc 1 2804 0 discriminator 3
 20909 000c FB88     		ldrh	r3, [r7, #6]
 20910 000e 114A     		ldr	r2, .L813
 20911 0010 1344     		add	r3, r3, r2
 20912 0012 114A     		ldr	r2, .L813+4
 20913 0014 1168     		ldr	r1, [r2]
 20914 0016 FA88     		ldrh	r2, [r7, #6]
 20915 0018 02F54872 		add	r2, r2, #800
 20916 001c 0A44     		add	r2, r2, r1
 20917 001e 1278     		ldrb	r2, [r2]
 20918 0020 D2B2     		uxtb	r2, r2
 20919 0022 1A70     		strb	r2, [r3]
2803:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20920              		.loc 1 2803 0 discriminator 3
 20921 0024 FB88     		ldrh	r3, [r7, #6]
 20922 0026 0133     		adds	r3, r3, #1
 20923 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 20924              	.L809:
2803:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 20925              		.loc 1 2803 0 is_stmt 0 discriminator 1
 20926 002a FB88     		ldrh	r3, [r7, #6]
 20927 002c B3F52C7F 		cmp	r3, #688
 20928 0030 ECD3     		bcc	.L810
2805:..\src/command_processing.c ****     }
2806:..\src/command_processing.c **** 
2807:..\src/command_processing.c ****     //check for initialization
2808:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 20929              		.loc 1 2808 0 is_stmt 1
 20930 0032 084B     		ldr	r3, .L813
 20931 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20932 0036 002B     		cmp	r3, #0
 20933 0038 03D1     		bne	.L811
2809:..\src/command_processing.c ****         return memInit();
 20934              		.loc 1 2809 0
 20935 003a FFF7FEFF 		bl	memInit
 20936 003e 0346     		mov	r3, r0
 20937 0040 03E0     		b	.L812
 20938              	.L811:
2810:..\src/command_processing.c ****     } else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 458


2811:..\src/command_processing.c ****         return memStore(0);
 20939              		.loc 1 2811 0
 20940 0042 0020     		movs	r0, #0
 20941 0044 FFF7FEFF 		bl	memStore
 20942 0048 0346     		mov	r3, r0
 20943              	.L812:
2812:..\src/command_processing.c ****     }  
2813:..\src/command_processing.c **** }
 20944              		.loc 1 2813 0
 20945 004a 1846     		mov	r0, r3
 20946 004c 0837     		adds	r7, r7, #8
 20947              		.cfi_def_cfa_offset 8
 20948 004e BD46     		mov	sp, r7
 20949              		.cfi_def_cfa_register 13
 20950              		@ sp needed
 20951 0050 80BD     		pop	{r7, pc}
 20952              	.L814:
 20953 0052 00BF     		.align	2
 20954              	.L813:
 20955 0054 00000000 		.word	g_mem
 20956 0058 00000000 		.word	EEPROM_ADDR
 20957              		.cfi_endproc
 20958              	.LFE85:
 20959              		.size	memRestore, .-memRestore
 20960              		.section	.rodata
 20961 1b17 00       		.align	2
 20962              	.LC271:
 20963 1b18 47454E30 		.ascii	"GEN001\000"
 20963      303100
 20964              		.section	.text.memInit,"ax",%progbits
 20965              		.align	2
 20966              		.global	memInit
 20967              		.thumb
 20968              		.thumb_func
 20969              		.type	memInit, %function
 20970              	memInit:
 20971              	.LFB86:
2814:..\src/command_processing.c **** 
2815:..\src/command_processing.c **** //==============================================================================
2816:..\src/command_processing.c **** //                                                                   MEMORY INIT
2817:..\src/command_processing.c **** //==============================================================================
2818:..\src/command_processing.c **** 
2819:..\src/command_processing.c **** uint8 memInit(void)
2820:..\src/command_processing.c **** {
 20972              		.loc 1 2820 0
 20973              		.cfi_startproc
 20974              		@ args = 0, pretend = 0, frame = 8
 20975              		@ frame_needed = 1, uses_anonymous_args = 0
 20976 0000 80B5     		push	{r7, lr}
 20977              		.cfi_def_cfa_offset 8
 20978              		.cfi_offset 7, -8
 20979              		.cfi_offset 14, -4
 20980 0002 82B0     		sub	sp, sp, #8
 20981              		.cfi_def_cfa_offset 16
 20982 0004 00AF     		add	r7, sp, #0
 20983              		.cfi_def_cfa_register 7
2821:..\src/command_processing.c ****     uint8 i, j;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 459


2822:..\src/command_processing.c **** 
2823:..\src/command_processing.c ****     //initialize memory settings
2824:..\src/command_processing.c ****     for (i=0; i<15; i++){
 20984              		.loc 1 2824 0
 20985 0006 0023     		movs	r3, #0
 20986 0008 FB71     		strb	r3, [r7, #7]
 20987 000a 07E0     		b	.L816
 20988              	.L817:
2825:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20989              		.loc 1 2825 0 discriminator 3
 20990 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20991 000e B44A     		ldr	r2, .L842
 20992 0010 1344     		add	r3, r3, r2
 20993 0012 0022     		movs	r2, #0
 20994 0014 5A70     		strb	r2, [r3, #1]
2824:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 20995              		.loc 1 2824 0 discriminator 3
 20996 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20997 0018 0133     		adds	r3, r3, #1
 20998 001a FB71     		strb	r3, [r7, #7]
 20999              	.L816:
2824:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21000              		.loc 1 2824 0 is_stmt 0 discriminator 1
 21001 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21002 001e 0E2B     		cmp	r3, #14
 21003 0020 F4D9     		bls	.L817
2826:..\src/command_processing.c ****     }
2827:..\src/command_processing.c ****         
2828:..\src/command_processing.c ****     // DEV STRUCT
2829:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 21004              		.loc 1 2829 0 is_stmt 1
 21005 0022 AF4B     		ldr	r3, .L842
 21006 0024 0122     		movs	r2, #1
 21007 0026 83F8A020 		strb	r2, [r3, #160]
2830:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 21008              		.loc 1 2830 0
 21009 002a AD4B     		ldr	r3, .L842
 21010 002c 0022     		movs	r2, #0
 21011 002e 83F8A720 		strb	r2, [r3, #167]
2831:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 21012              		.loc 1 2831 0
 21013 0032 AB4B     		ldr	r3, .L842
 21014 0034 0122     		movs	r2, #1
 21015 0036 83F8AC20 		strb	r2, [r3, #172]
2832:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 21016              		.loc 1 2832 0
 21017 003a A94B     		ldr	r3, .L842
 21018 003c 0022     		movs	r2, #0
 21019 003e 83F8A820 		strb	r2, [r3, #168]
2833:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 21020              		.loc 1 2833 0
 21021 0042 FFF7FEFF 		bl	reset_counters
2834:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21022              		.loc 1 2834 0
 21023 0046 0023     		movs	r3, #0
 21024 0048 FB71     		strb	r3, [r7, #7]
 21025 004a 08E0     		b	.L818
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 460


 21026              	.L819:
2835:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 21027              		.loc 1 2835 0 discriminator 3
 21028 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21029 004e A44A     		ldr	r2, .L842
 21030 0050 1344     		add	r3, r3, r2
 21031 0052 0022     		movs	r2, #0
 21032 0054 83F86020 		strb	r2, [r3, #96]
2834:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21033              		.loc 1 2834 0 discriminator 3
 21034 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21035 005a 0133     		adds	r3, r3, #1
 21036 005c FB71     		strb	r3, [r7, #7]
 21037              	.L818:
2834:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21038              		.loc 1 2834 0 is_stmt 0 discriminator 1
 21039 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21040 0060 3F2B     		cmp	r3, #63
 21041 0062 F3D9     		bls	.L819
2836:..\src/command_processing.c ****     }
2837:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 21042              		.loc 1 2837 0 is_stmt 1
 21043 0064 9E4B     		ldr	r3, .L842
 21044 0066 0022     		movs	r2, #0
 21045 0068 83F8A920 		strb	r2, [r3, #169]
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c ****     // MOTOR STRUCT
2840:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21046              		.loc 1 2840 0
 21047 006c 0023     		movs	r3, #0
 21048 006e FB71     		strb	r3, [r7, #7]
 21049 0070 15E1     		b	.L820
 21050              	.L823:
2841:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21051              		.loc 1 2841 0
 21052 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21053 0074 9A49     		ldr	r1, .L842
 21054 0076 1346     		mov	r3, r2
 21055 0078 DB00     		lsls	r3, r3, #3
 21056 007a 9B1A     		subs	r3, r3, r2
 21057 007c 1B01     		lsls	r3, r3, #4
 21058 007e 0B44     		add	r3, r3, r1
 21059 0080 B033     		adds	r3, r3, #176
 21060 0082 40F23942 		movw	r2, #1081
 21061 0086 1A60     		str	r2, [r3]
2842:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 21062              		.loc 1 2842 0
 21063 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21064 008a 9549     		ldr	r1, .L842
 21065 008c 1346     		mov	r3, r2
 21066 008e DB00     		lsls	r3, r3, #3
 21067 0090 9B1A     		subs	r3, r3, r2
 21068 0092 1B01     		lsls	r3, r3, #4
 21069 0094 0B44     		add	r3, r3, r1
 21070 0096 B433     		adds	r3, r3, #180
 21071 0098 0022     		movs	r2, #0
 21072 009a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 461


2843:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 21073              		.loc 1 2843 0
 21074 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21075 009e 9049     		ldr	r1, .L842
 21076 00a0 1346     		mov	r3, r2
 21077 00a2 DB00     		lsls	r3, r3, #3
 21078 00a4 9B1A     		subs	r3, r3, r2
 21079 00a6 1B01     		lsls	r3, r3, #4
 21080 00a8 0B44     		add	r3, r3, r1
 21081 00aa B833     		adds	r3, r3, #184
 21082 00ac 4FF4E572 		mov	r2, #458
 21083 00b0 1A60     		str	r2, [r3]
2844:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 21084              		.loc 1 2844 0
 21085 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21086 00b4 8A49     		ldr	r1, .L842
 21087 00b6 1346     		mov	r3, r2
 21088 00b8 DB00     		lsls	r3, r3, #3
 21089 00ba 9B1A     		subs	r3, r3, r2
 21090 00bc 1B01     		lsls	r3, r3, #4
 21091 00be 0B44     		add	r3, r3, r1
 21092 00c0 BC33     		adds	r3, r3, #188
 21093 00c2 4FF48032 		mov	r2, #65536
 21094 00c6 1A60     		str	r2, [r3]
2845:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 21095              		.loc 1 2845 0
 21096 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21097 00ca 8549     		ldr	r1, .L842
 21098 00cc 1346     		mov	r3, r2
 21099 00ce DB00     		lsls	r3, r3, #3
 21100 00d0 9B1A     		subs	r3, r3, r2
 21101 00d2 1B01     		lsls	r3, r3, #4
 21102 00d4 0B44     		add	r3, r3, r1
 21103 00d6 C033     		adds	r3, r3, #192
 21104 00d8 4122     		movs	r2, #65
 21105 00da 1A60     		str	r2, [r3]
2846:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 21106              		.loc 1 2846 0
 21107 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21108 00de 8049     		ldr	r1, .L842
 21109 00e0 1346     		mov	r3, r2
 21110 00e2 DB00     		lsls	r3, r3, #3
 21111 00e4 9B1A     		subs	r3, r3, r2
 21112 00e6 1B01     		lsls	r3, r3, #4
 21113 00e8 0B44     		add	r3, r3, r1
 21114 00ea C433     		adds	r3, r3, #196
 21115 00ec 0022     		movs	r2, #0
 21116 00ee 1A60     		str	r2, [r3]
2847:..\src/command_processing.c **** 
2848:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 21117              		.loc 1 2848 0
 21118 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21119 00f2 7B49     		ldr	r1, .L842
 21120 00f4 1346     		mov	r3, r2
 21121 00f6 DB00     		lsls	r3, r3, #3
 21122 00f8 9B1A     		subs	r3, r3, r2
 21123 00fa 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 462


 21124 00fc 0B44     		add	r3, r3, r1
 21125 00fe C833     		adds	r3, r3, #200
 21126 0100 41F69912 		movw	r2, #6553
 21127 0104 1A60     		str	r2, [r3]
2849:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 21128              		.loc 1 2849 0
 21129 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21130 0108 7549     		ldr	r1, .L842
 21131 010a 1346     		mov	r3, r2
 21132 010c DB00     		lsls	r3, r3, #3
 21133 010e 9B1A     		subs	r3, r3, r2
 21134 0110 1B01     		lsls	r3, r3, #4
 21135 0112 0B44     		add	r3, r3, r1
 21136 0114 CC33     		adds	r3, r3, #204
 21137 0116 0022     		movs	r2, #0
 21138 0118 1A60     		str	r2, [r3]
2850:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 21139              		.loc 1 2850 0
 21140 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21141 011c 7049     		ldr	r1, .L842
 21142 011e 1346     		mov	r3, r2
 21143 0120 DB00     		lsls	r3, r3, #3
 21144 0122 9B1A     		subs	r3, r3, r2
 21145 0124 1B01     		lsls	r3, r3, #4
 21146 0126 0B44     		add	r3, r3, r1
 21147 0128 D033     		adds	r3, r3, #208
 21148 012a 0022     		movs	r2, #0
 21149 012c 1A60     		str	r2, [r3]
2851:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 21150              		.loc 1 2851 0
 21151 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21152 0130 6B49     		ldr	r1, .L842
 21153 0132 1346     		mov	r3, r2
 21154 0134 DB00     		lsls	r3, r3, #3
 21155 0136 9B1A     		subs	r3, r3, r2
 21156 0138 1B01     		lsls	r3, r3, #4
 21157 013a 0B44     		add	r3, r3, r1
 21158 013c D433     		adds	r3, r3, #212
 21159 013e 44F6CC42 		movw	r2, #19660
 21160 0142 1A60     		str	r2, [r3]
2852:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 21161              		.loc 1 2852 0
 21162 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21163 0146 6649     		ldr	r1, .L842
 21164 0148 1346     		mov	r3, r2
 21165 014a DB00     		lsls	r3, r3, #3
 21166 014c 9B1A     		subs	r3, r3, r2
 21167 014e 1B01     		lsls	r3, r3, #4
 21168 0150 0B44     		add	r3, r3, r1
 21169 0152 D833     		adds	r3, r3, #216
 21170 0154 0D22     		movs	r2, #13
 21171 0156 1A60     		str	r2, [r3]
2853:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 21172              		.loc 1 2853 0
 21173 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21174 015a 6149     		ldr	r1, .L842
 21175 015c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 463


 21176 015e DB00     		lsls	r3, r3, #3
 21177 0160 9B1A     		subs	r3, r3, r2
 21178 0162 1B01     		lsls	r3, r3, #4
 21179 0164 0B44     		add	r3, r3, r1
 21180 0166 DC33     		adds	r3, r3, #220
 21181 0168 0022     		movs	r2, #0
 21182 016a 1A60     		str	r2, [r3]
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21183              		.loc 1 2855 0
 21184 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21185 016e 5C49     		ldr	r1, .L842
 21186 0170 1346     		mov	r3, r2
 21187 0172 DB00     		lsls	r3, r3, #3
 21188 0174 9B1A     		subs	r3, r3, r2
 21189 0176 1B01     		lsls	r3, r3, #4
 21190 0178 0B44     		add	r3, r3, r1
 21191 017a E033     		adds	r3, r3, #224
 21192 017c 0122     		movs	r2, #1
 21193 017e 1A70     		strb	r2, [r3]
2856:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21194              		.loc 1 2856 0
 21195 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21196 0182 5749     		ldr	r1, .L842
 21197 0184 1346     		mov	r3, r2
 21198 0186 DB00     		lsls	r3, r3, #3
 21199 0188 9B1A     		subs	r3, r3, r2
 21200 018a 1B01     		lsls	r3, r3, #4
 21201 018c 0B44     		add	r3, r3, r1
 21202 018e E133     		adds	r3, r3, #225
 21203 0190 0022     		movs	r2, #0
 21204 0192 1A70     		strb	r2, [r3]
2857:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21205              		.loc 1 2857 0
 21206 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21207 0196 5249     		ldr	r1, .L842
 21208 0198 1346     		mov	r3, r2
 21209 019a DB00     		lsls	r3, r3, #3
 21210 019c 9B1A     		subs	r3, r3, r2
 21211 019e 1B01     		lsls	r3, r3, #4
 21212 01a0 0B44     		add	r3, r3, r1
 21213 01a2 E233     		adds	r3, r3, #226
 21214 01a4 0022     		movs	r2, #0
 21215 01a6 1A70     		strb	r2, [r3]
2858:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21216              		.loc 1 2858 0
 21217 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21218 01aa 4D49     		ldr	r1, .L842
 21219 01ac 1346     		mov	r3, r2
 21220 01ae DB00     		lsls	r3, r3, #3
 21221 01b0 9B1A     		subs	r3, r3, r2
 21222 01b2 1B01     		lsls	r3, r3, #4
 21223 01b4 0B44     		add	r3, r3, r1
 21224 01b6 03F58773 		add	r3, r3, #270
 21225 01ba 0022     		movs	r2, #0
 21226 01bc 1A70     		strb	r2, [r3]
2859:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 464


 21227              		.loc 1 2859 0
 21228 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21229 01c0 4749     		ldr	r1, .L842
 21230 01c2 1346     		mov	r3, r2
 21231 01c4 DB00     		lsls	r3, r3, #3
 21232 01c6 9B1A     		subs	r3, r3, r2
 21233 01c8 1B01     		lsls	r3, r3, #4
 21234 01ca 0B44     		add	r3, r3, r1
 21235 01cc 03F20F13 		addw	r3, r3, #271
 21236 01d0 0022     		movs	r2, #0
 21237 01d2 1A70     		strb	r2, [r3]
2860:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 21238              		.loc 1 2860 0
 21239 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21240 01d6 4249     		ldr	r1, .L842
 21241 01d8 1346     		mov	r3, r2
 21242 01da DB00     		lsls	r3, r3, #3
 21243 01dc 9B1A     		subs	r3, r3, r2
 21244 01de 1B01     		lsls	r3, r3, #4
 21245 01e0 0B44     		add	r3, r3, r1
 21246 01e2 F033     		adds	r3, r3, #240
 21247 01e4 0022     		movs	r2, #0
 21248 01e6 1A60     		str	r2, [r3]
2861:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21249              		.loc 1 2861 0
 21250 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21251 01ea 3D49     		ldr	r1, .L842
 21252 01ec 1346     		mov	r3, r2
 21253 01ee DB00     		lsls	r3, r3, #3
 21254 01f0 9B1A     		subs	r3, r3, r2
 21255 01f2 1B01     		lsls	r3, r3, #4
 21256 01f4 0B44     		add	r3, r3, r1
 21257 01f6 EC33     		adds	r3, r3, #236
 21258 01f8 0022     		movs	r2, #0
 21259 01fa 1A60     		str	r2, [r3]
2862:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21260              		.loc 1 2862 0
 21261 01fc 0023     		movs	r3, #0
 21262 01fe BB71     		strb	r3, [r7, #6]
 21263 0200 10E0     		b	.L821
 21264              	.L822:
2863:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21265              		.loc 1 2863 0 discriminator 3
 21266 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21267 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21268 0206 3648     		ldr	r0, .L842
 21269 0208 1346     		mov	r3, r2
 21270 020a DB00     		lsls	r3, r3, #3
 21271 020c 9B1A     		subs	r3, r3, r2
 21272 020e 9B00     		lsls	r3, r3, #2
 21273 0210 0B44     		add	r3, r3, r1
 21274 0212 3C33     		adds	r3, r3, #60
 21275 0214 9B00     		lsls	r3, r3, #2
 21276 0216 0344     		add	r3, r3, r0
 21277 0218 4FF00002 		mov	r2, #0
 21278 021c 5A60     		str	r2, [r3, #4]	@ float
2862:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 465


 21279              		.loc 1 2862 0 discriminator 3
 21280 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21281 0220 0133     		adds	r3, r3, #1
 21282 0222 BB71     		strb	r3, [r7, #6]
 21283              	.L821:
2862:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21284              		.loc 1 2862 0 is_stmt 0 discriminator 1
 21285 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21286 0226 052B     		cmp	r3, #5
 21287 0228 EBD9     		bls	.L822
2864:..\src/command_processing.c ****         }
2865:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21288              		.loc 1 2865 0 is_stmt 1 discriminator 2
 21289 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21290 022c 2C49     		ldr	r1, .L842
 21291 022e 1346     		mov	r3, r2
 21292 0230 DB00     		lsls	r3, r3, #3
 21293 0232 9B1A     		subs	r3, r3, r2
 21294 0234 1B01     		lsls	r3, r3, #4
 21295 0236 0B44     		add	r3, r3, r1
 21296 0238 03F58673 		add	r3, r3, #268
 21297 023c 40F2DC52 		movw	r2, #1500
 21298 0240 1A80     		strh	r2, [r3]	@ movhi
2866:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21299              		.loc 1 2866 0 discriminator 2
 21300 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21301 0244 2649     		ldr	r1, .L842
 21302 0246 1346     		mov	r3, r2
 21303 0248 DB00     		lsls	r3, r3, #3
 21304 024a 9B1A     		subs	r3, r3, r2
 21305 024c 1B01     		lsls	r3, r3, #4
 21306 024e 0B44     		add	r3, r3, r1
 21307 0250 03F58873 		add	r3, r3, #272
 21308 0254 FA79     		ldrb	r2, [r7, #7]
 21309 0256 1A70     		strb	r2, [r3]
2867:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21310              		.loc 1 2867 0 discriminator 2
 21311 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21312 025a 2149     		ldr	r1, .L842
 21313 025c 1346     		mov	r3, r2
 21314 025e DB00     		lsls	r3, r3, #3
 21315 0260 9B1A     		subs	r3, r3, r2
 21316 0262 1B01     		lsls	r3, r3, #4
 21317 0264 0B44     		add	r3, r3, r1
 21318 0266 E333     		adds	r3, r3, #227
 21319 0268 0122     		movs	r2, #1
 21320 026a 1A70     		strb	r2, [r3]
2868:..\src/command_processing.c ****         
2869:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21321              		.loc 1 2869 0 discriminator 2
 21322 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21323 026e 1C49     		ldr	r1, .L842
 21324 0270 1346     		mov	r3, r2
 21325 0272 DB00     		lsls	r3, r3, #3
 21326 0274 9B1A     		subs	r3, r3, r2
 21327 0276 1B01     		lsls	r3, r3, #4
 21328 0278 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 466


 21329 027a 03F21113 		addw	r3, r3, #273
 21330 027e 0122     		movs	r2, #1
 21331 0280 1A70     		strb	r2, [r3]
2870:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21332              		.loc 1 2870 0 discriminator 2
 21333 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21334 0284 1649     		ldr	r1, .L842
 21335 0286 1346     		mov	r3, r2
 21336 0288 DB00     		lsls	r3, r3, #3
 21337 028a 9B1A     		subs	r3, r3, r2
 21338 028c 1B01     		lsls	r3, r3, #4
 21339 028e 0B44     		add	r3, r3, r1
 21340 0290 03F58973 		add	r3, r3, #274
 21341 0294 0022     		movs	r2, #0
 21342 0296 1A70     		strb	r2, [r3]
2840:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21343              		.loc 1 2840 0 discriminator 2
 21344 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21345 029a 0133     		adds	r3, r3, #1
 21346 029c FB71     		strb	r3, [r7, #7]
 21347              	.L820:
2840:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21348              		.loc 1 2840 0 is_stmt 0 discriminator 1
 21349 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21350 02a0 012B     		cmp	r3, #1
 21351 02a2 7FF6E6AE 		bls	.L823
2871:..\src/command_processing.c ****     }
2872:..\src/command_processing.c ****     
2873:..\src/command_processing.c ****     // ENC STRUCT
2874:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21352              		.loc 1 2874 0 is_stmt 1
 21353 02a6 0023     		movs	r3, #0
 21354 02a8 FB71     		strb	r3, [r7, #7]
 21355 02aa 98E0     		b	.L824
 21356              	.L831:
2875:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21357              		.loc 1 2875 0
 21358 02ac 0023     		movs	r3, #0
 21359 02ae BB71     		strb	r3, [r7, #6]
 21360 02b0 0FE0     		b	.L825
 21361              	.L826:
2876:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21362              		.loc 1 2876 0 discriminator 3
 21363 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21364 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21365 02b6 0A48     		ldr	r0, .L842
 21366 02b8 1346     		mov	r3, r2
 21367 02ba 5B00     		lsls	r3, r3, #1
 21368 02bc 1344     		add	r3, r3, r2
 21369 02be 1B01     		lsls	r3, r3, #4
 21370 02c0 0344     		add	r3, r3, r0
 21371 02c2 0B44     		add	r3, r3, r1
 21372 02c4 03F5C873 		add	r3, r3, #400
 21373 02c8 0022     		movs	r2, #0
 21374 02ca 1A70     		strb	r2, [r3]
2875:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21375              		.loc 1 2875 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 467


 21376 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21377 02ce 0133     		adds	r3, r3, #1
 21378 02d0 BB71     		strb	r3, [r7, #6]
 21379              	.L825:
2875:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21380              		.loc 1 2875 0 is_stmt 0 discriminator 1
 21381 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21382 02d4 042B     		cmp	r3, #4
 21383 02d6 ECD9     		bls	.L826
2877:..\src/command_processing.c ****         }
2878:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21384              		.loc 1 2878 0 is_stmt 1
 21385 02d8 0023     		movs	r3, #0
 21386 02da BB71     		strb	r3, [r7, #6]
 21387 02dc 2CE0     		b	.L827
 21388              	.L843:
 21389 02de 00BF     		.align	2
 21390              	.L842:
 21391 02e0 00000000 		.word	g_mem
 21392              	.L828:
2879:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21393              		.loc 1 2879 0 discriminator 3
 21394 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21395 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21396 02e8 B648     		ldr	r0, .L844
 21397 02ea 1346     		mov	r3, r2
 21398 02ec 5B00     		lsls	r3, r3, #1
 21399 02ee 1344     		add	r3, r3, r2
 21400 02f0 1B01     		lsls	r3, r3, #4
 21401 02f2 0344     		add	r3, r3, r0
 21402 02f4 0B44     		add	r3, r3, r1
 21403 02f6 03F29513 		addw	r3, r3, #405
 21404 02fa 0322     		movs	r2, #3
 21405 02fc 1A70     		strb	r2, [r3]
2880:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21406              		.loc 1 2880 0 discriminator 3
 21407 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21408 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21409 0302 B048     		ldr	r0, .L844
 21410 0304 1346     		mov	r3, r2
 21411 0306 5B00     		lsls	r3, r3, #1
 21412 0308 1344     		add	r3, r3, r2
 21413 030a 9B00     		lsls	r3, r3, #2
 21414 030c 0B44     		add	r3, r3, r1
 21415 030e 6833     		adds	r3, r3, #104
 21416 0310 9B00     		lsls	r3, r3, #2
 21417 0312 0344     		add	r3, r3, r0
 21418 0314 4FF07E52 		mov	r2, #1065353216
 21419 0318 5A60     		str	r2, [r3, #4]	@ float
2881:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21420              		.loc 1 2881 0 discriminator 3
 21421 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21422 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21423 031e A948     		ldr	r0, .L844
 21424 0320 1346     		mov	r3, r2
 21425 0322 5B00     		lsls	r3, r3, #1
 21426 0324 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 468


 21427 0326 9B00     		lsls	r3, r3, #2
 21428 0328 0B44     		add	r3, r3, r1
 21429 032a 6633     		adds	r3, r3, #102
 21430 032c 0022     		movs	r2, #0
 21431 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2878:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21432              		.loc 1 2878 0 discriminator 3
 21433 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21434 0334 0133     		adds	r3, r3, #1
 21435 0336 BB71     		strb	r3, [r7, #6]
 21436              	.L827:
2878:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21437              		.loc 1 2878 0 is_stmt 0 discriminator 1
 21438 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21439 033a 022B     		cmp	r3, #2
 21440 033c D2D9     		bls	.L828
2882:..\src/command_processing.c ****         }
2883:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21441              		.loc 1 2883 0 is_stmt 1
 21442 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21443 0340 A049     		ldr	r1, .L844
 21444 0342 1346     		mov	r3, r2
 21445 0344 5B00     		lsls	r3, r3, #1
 21446 0346 1344     		add	r3, r3, r2
 21447 0348 1B01     		lsls	r3, r3, #4
 21448 034a 0B44     		add	r3, r3, r1
 21449 034c 03F5D873 		add	r3, r3, #432
 21450 0350 0022     		movs	r2, #0
 21451 0352 1A70     		strb	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21452              		.loc 1 2884 0
 21453 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21454 0356 9B49     		ldr	r1, .L844
 21455 0358 1346     		mov	r3, r2
 21456 035a 5B00     		lsls	r3, r3, #1
 21457 035c 1344     		add	r3, r3, r2
 21458 035e 1B01     		lsls	r3, r3, #4
 21459 0360 0B44     		add	r3, r3, r1
 21460 0362 03F5DA73 		add	r3, r3, #436
 21461 0366 1622     		movs	r2, #22
 21462 0368 1A70     		strb	r2, [r3]
2885:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21463              		.loc 1 2885 0
 21464 036a 0023     		movs	r3, #0
 21465 036c BB71     		strb	r3, [r7, #6]
 21466 036e 0FE0     		b	.L829
 21467              	.L830:
2886:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21468              		.loc 1 2886 0 discriminator 3
 21469 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21470 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21471 0374 9348     		ldr	r0, .L844
 21472 0376 1346     		mov	r3, r2
 21473 0378 5B00     		lsls	r3, r3, #1
 21474 037a 1344     		add	r3, r3, r2
 21475 037c 1B01     		lsls	r3, r3, #4
 21476 037e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 469


 21477 0380 0B44     		add	r3, r3, r1
 21478 0382 03F2B113 		addw	r3, r3, #433
 21479 0386 BA79     		ldrb	r2, [r7, #6]
 21480 0388 1A70     		strb	r2, [r3]
2885:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21481              		.loc 1 2885 0 discriminator 3
 21482 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21483 038c 0133     		adds	r3, r3, #1
 21484 038e BB71     		strb	r3, [r7, #6]
 21485              	.L829:
2885:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21486              		.loc 1 2885 0 is_stmt 0 discriminator 1
 21487 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21488 0392 022B     		cmp	r3, #2
 21489 0394 ECD9     		bls	.L830
2887:..\src/command_processing.c ****         }
2888:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21490              		.loc 1 2888 0 is_stmt 1 discriminator 2
 21491 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21492 0398 8A49     		ldr	r1, .L844
 21493 039a 1346     		mov	r3, r2
 21494 039c 5B00     		lsls	r3, r3, #1
 21495 039e 1344     		add	r3, r3, r2
 21496 03a0 1B01     		lsls	r3, r3, #4
 21497 03a2 0B44     		add	r3, r3, r1
 21498 03a4 03F2B513 		addw	r3, r3, #437
 21499 03a8 0F22     		movs	r2, #15
 21500 03aa 1A70     		strb	r2, [r3]
2889:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21501              		.loc 1 2889 0 discriminator 2
 21502 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21503 03ae 8549     		ldr	r1, .L844
 21504 03b0 1346     		mov	r3, r2
 21505 03b2 5B00     		lsls	r3, r3, #1
 21506 03b4 1344     		add	r3, r3, r2
 21507 03b6 1B01     		lsls	r3, r3, #4
 21508 03b8 0B44     		add	r3, r3, r1
 21509 03ba 03F5DB73 		add	r3, r3, #438
 21510 03be 0E22     		movs	r2, #14
 21511 03c0 1A70     		strb	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21512              		.loc 1 2890 0 discriminator 2
 21513 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21514 03c4 7F49     		ldr	r1, .L844
 21515 03c6 1346     		mov	r3, r2
 21516 03c8 5B00     		lsls	r3, r3, #1
 21517 03ca 1344     		add	r3, r3, r2
 21518 03cc 1B01     		lsls	r3, r3, #4
 21519 03ce 0B44     		add	r3, r3, r1
 21520 03d0 03F2B713 		addw	r3, r3, #439
 21521 03d4 0122     		movs	r2, #1
 21522 03d6 1A70     		strb	r2, [r3]
2874:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21523              		.loc 1 2874 0 discriminator 2
 21524 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21525 03da 0133     		adds	r3, r3, #1
 21526 03dc FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 470


 21527              	.L824:
2874:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21528              		.loc 1 2874 0 is_stmt 0 discriminator 1
 21529 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21530 03e0 012B     		cmp	r3, #1
 21531 03e2 7FF663AF 		bls	.L831
2891:..\src/command_processing.c ****     }
2892:..\src/command_processing.c ****     
2893:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21532              		.loc 1 2893 0 is_stmt 1
 21533 03e6 0023     		movs	r3, #0
 21534 03e8 FB71     		strb	r3, [r7, #7]
 21535 03ea 2EE0     		b	.L832
 21536              	.L833:
2894:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21537              		.loc 1 2894 0 discriminator 3
 21538 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21539 03ee 7549     		ldr	r1, .L844
 21540 03f0 1346     		mov	r3, r2
 21541 03f2 DB00     		lsls	r3, r3, #3
 21542 03f4 9B1A     		subs	r3, r3, r2
 21543 03f6 1B01     		lsls	r3, r3, #4
 21544 03f8 0B44     		add	r3, r3, r1
 21545 03fa E433     		adds	r3, r3, #228
 21546 03fc 0022     		movs	r2, #0
 21547 03fe 1A60     		str	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21548              		.loc 1 2895 0 discriminator 3
 21549 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21550 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21551 0404 6F48     		ldr	r0, .L844
 21552 0406 0B46     		mov	r3, r1
 21553 0408 DB00     		lsls	r3, r3, #3
 21554 040a 5B1A     		subs	r3, r3, r1
 21555 040c 1B01     		lsls	r3, r3, #4
 21556 040e 0344     		add	r3, r3, r0
 21557 0410 03F58873 		add	r3, r3, #272
 21558 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21559 0416 1846     		mov	r0, r3
 21560 0418 6A49     		ldr	r1, .L844
 21561 041a 0346     		mov	r3, r0
 21562 041c 5B00     		lsls	r3, r3, #1
 21563 041e 0344     		add	r3, r3, r0
 21564 0420 1B01     		lsls	r3, r3, #4
 21565 0422 0B44     		add	r3, r3, r1
 21566 0424 03F29513 		addw	r3, r3, #405
 21567 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21568 042a 1946     		mov	r1, r3
 21569 042c 44F63823 		movw	r3, #19000
 21570 0430 03FA01F1 		lsl	r1, r3, r1
 21571 0434 6348     		ldr	r0, .L844
 21572 0436 1346     		mov	r3, r2
 21573 0438 DB00     		lsls	r3, r3, #3
 21574 043a 9B1A     		subs	r3, r3, r2
 21575 043c 1B01     		lsls	r3, r3, #4
 21576 043e 0344     		add	r3, r3, r0
 21577 0440 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 471


 21578 0442 1960     		str	r1, [r3]
2893:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21579              		.loc 1 2893 0 discriminator 3
 21580 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21581 0446 0133     		adds	r3, r3, #1
 21582 0448 FB71     		strb	r3, [r7, #7]
 21583              	.L832:
2893:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21584              		.loc 1 2893 0 is_stmt 0 discriminator 1
 21585 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21586 044c 012B     		cmp	r3, #1
 21587 044e CDD9     		bls	.L833
2896:..\src/command_processing.c ****     }
2897:..\src/command_processing.c ****     
2898:..\src/command_processing.c ****     // EMG STRUCT     
2899:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21588              		.loc 1 2899 0 is_stmt 1
 21589 0450 5C4B     		ldr	r3, .L844
 21590 0452 C822     		movs	r2, #200
 21591 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2900:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21592              		.loc 1 2900 0
 21593 0458 5A4B     		ldr	r3, .L844
 21594 045a C822     		movs	r2, #200
 21595 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2901:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21596              		.loc 1 2901 0
 21597 0460 584B     		ldr	r3, .L844
 21598 0462 4FF48062 		mov	r2, #1024
 21599 0466 C3F8F421 		str	r2, [r3, #500]
2902:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21600              		.loc 1 2902 0
 21601 046a 564B     		ldr	r3, .L844
 21602 046c 4FF48062 		mov	r2, #1024
 21603 0470 C3F8F821 		str	r2, [r3, #504]
2903:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 21604              		.loc 1 2903 0
 21605 0474 534B     		ldr	r3, .L844
 21606 0476 6422     		movs	r2, #100
 21607 0478 83F8FC21 		strb	r2, [r3, #508]
2904:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21608              		.loc 1 2904 0
 21609 047c 514B     		ldr	r3, .L844
 21610 047e 0022     		movs	r2, #0
 21611 0480 83F8FD21 		strb	r2, [r3, #509]
2905:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21612              		.loc 1 2905 0
 21613 0484 4F4B     		ldr	r3, .L844
 21614 0486 0022     		movs	r2, #0
 21615 0488 83F8FE21 		strb	r2, [r3, #510]
2906:..\src/command_processing.c **** 
2907:..\src/command_processing.c ****     // IMU STRUCT
2908:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 21616              		.loc 1 2908 0
 21617 048c 4D4B     		ldr	r3, .L844
 21618 048e 0022     		movs	r2, #0
 21619 0490 83F80022 		strb	r2, [r3, #512]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 472


2909:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21620              		.loc 1 2909 0
 21621 0494 4B4B     		ldr	r3, .L844
 21622 0496 0022     		movs	r2, #0
 21623 0498 83F80122 		strb	r2, [r3, #513]
2910:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21624              		.loc 1 2910 0
 21625 049c 0023     		movs	r3, #0
 21626 049e FB71     		strb	r3, [r7, #7]
 21627 04a0 34E0     		b	.L834
 21628              	.L835:
2911:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21629              		.loc 1 2911 0 discriminator 3
 21630 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21631 04a4 4749     		ldr	r1, .L844
 21632 04a6 1346     		mov	r3, r2
 21633 04a8 9B00     		lsls	r3, r3, #2
 21634 04aa 1344     		add	r3, r3, r2
 21635 04ac 0B44     		add	r3, r3, r1
 21636 04ae 03F20223 		addw	r3, r3, #514
 21637 04b2 0122     		movs	r2, #1
 21638 04b4 1A70     		strb	r2, [r3]
2912:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21639              		.loc 1 2912 0 discriminator 3
 21640 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21641 04b8 4249     		ldr	r1, .L844
 21642 04ba 1346     		mov	r3, r2
 21643 04bc 9B00     		lsls	r3, r3, #2
 21644 04be 1344     		add	r3, r3, r2
 21645 04c0 0B44     		add	r3, r3, r1
 21646 04c2 03F20323 		addw	r3, r3, #515
 21647 04c6 0122     		movs	r2, #1
 21648 04c8 1A70     		strb	r2, [r3]
2913:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21649              		.loc 1 2913 0 discriminator 3
 21650 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21651 04cc 3D49     		ldr	r1, .L844
 21652 04ce 1346     		mov	r3, r2
 21653 04d0 9B00     		lsls	r3, r3, #2
 21654 04d2 1344     		add	r3, r3, r2
 21655 04d4 0B44     		add	r3, r3, r1
 21656 04d6 03F50173 		add	r3, r3, #516
 21657 04da 0022     		movs	r2, #0
 21658 04dc 1A70     		strb	r2, [r3]
2914:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21659              		.loc 1 2914 0 discriminator 3
 21660 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21661 04e0 3849     		ldr	r1, .L844
 21662 04e2 1346     		mov	r3, r2
 21663 04e4 9B00     		lsls	r3, r3, #2
 21664 04e6 1344     		add	r3, r3, r2
 21665 04e8 0B44     		add	r3, r3, r1
 21666 04ea 03F20523 		addw	r3, r3, #517
 21667 04ee 0022     		movs	r2, #0
 21668 04f0 1A70     		strb	r2, [r3]
2915:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21669              		.loc 1 2915 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 473


 21670 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21671 04f4 3349     		ldr	r1, .L844
 21672 04f6 1346     		mov	r3, r2
 21673 04f8 9B00     		lsls	r3, r3, #2
 21674 04fa 1344     		add	r3, r3, r2
 21675 04fc 0B44     		add	r3, r3, r1
 21676 04fe 03F20623 		addw	r3, r3, #518
 21677 0502 0022     		movs	r2, #0
 21678 0504 1A70     		strb	r2, [r3]
2910:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21679              		.loc 1 2910 0 discriminator 3
 21680 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21681 0508 0133     		adds	r3, r3, #1
 21682 050a FB71     		strb	r3, [r7, #7]
 21683              	.L834:
2910:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21684              		.loc 1 2910 0 is_stmt 0 discriminator 1
 21685 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21686 050e 042B     		cmp	r3, #4
 21687 0510 C7D9     		bls	.L835
2916:..\src/command_processing.c ****     }
2917:..\src/command_processing.c ****      
2918:..\src/command_processing.c ****     // EXP STRUCT
2919:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21688              		.loc 1 2919 0 is_stmt 1
 21689 0512 2C4B     		ldr	r3, .L844
 21690 0514 0022     		movs	r2, #0
 21691 0516 83F82622 		strb	r2, [r3, #550]
2920:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21692              		.loc 1 2920 0
 21693 051a 2A4B     		ldr	r3, .L844
 21694 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21695 0520 1233     		adds	r3, r3, #18
 21696 0522 5B01     		lsls	r3, r3, #5
 21697 0524 274A     		ldr	r2, .L844
 21698 0526 1344     		add	r3, r3, r2
 21699 0528 274A     		ldr	r2, .L844+4
 21700 052a 1068     		ldr	r0, [r2]	@ unaligned
 21701 052c 1860     		str	r0, [r3]	@ unaligned
 21702 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21703 0530 9279     		ldrb	r2, [r2, #6]
 21704 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 21705 0534 9A71     		strb	r2, [r3, #6]
2921:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21706              		.loc 1 2921 0
 21707 0536 234B     		ldr	r3, .L844
 21708 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21709 053c 012B     		cmp	r3, #1
 21710 053e 13D1     		bne	.L836
2922:..\src/command_processing.c ****         // Set date of maintenance from RTC
2923:..\src/command_processing.c ****         store_RTC_current_time();
 21711              		.loc 1 2923 0
 21712 0540 FFF7FEFF 		bl	store_RTC_current_time
2924:..\src/command_processing.c ****         
2925:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21713              		.loc 1 2925 0
 21714 0544 1F4B     		ldr	r3, .L844
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 474


 21715 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21716 054a 1E4B     		ldr	r3, .L844
 21717 054c 83F8A420 		strb	r2, [r3, #164]
2926:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21718              		.loc 1 2926 0
 21719 0550 1C4B     		ldr	r3, .L844
 21720 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 21721 0556 1B4B     		ldr	r3, .L844
 21722 0558 83F8A520 		strb	r2, [r3, #165]
2927:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 21723              		.loc 1 2927 0
 21724 055c 194B     		ldr	r3, .L844
 21725 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21726 0562 184B     		ldr	r3, .L844
 21727 0564 83F8A620 		strb	r2, [r3, #166]
 21728              	.L836:
2928:..\src/command_processing.c ****     }
2929:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21729              		.loc 1 2929 0
 21730 0568 164B     		ldr	r3, .L844
 21731 056a 0022     		movs	r2, #0
 21732 056c 83F82722 		strb	r2, [r3, #551]
2930:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21733              		.loc 1 2930 0
 21734 0570 0023     		movs	r3, #0
 21735 0572 FB71     		strb	r3, [r7, #7]
 21736 0574 08E0     		b	.L837
 21737              	.L838:
2931:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21738              		.loc 1 2931 0 discriminator 3
 21739 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21740 0578 124A     		ldr	r2, .L844
 21741 057a 1344     		add	r3, r3, r2
 21742 057c 0022     		movs	r2, #0
 21743 057e 83F82822 		strb	r2, [r3, #552]
2930:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21744              		.loc 1 2930 0 discriminator 3
 21745 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21746 0584 0133     		adds	r3, r3, #1
 21747 0586 FB71     		strb	r3, [r7, #7]
 21748              	.L837:
2930:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21749              		.loc 1 2930 0 is_stmt 0 discriminator 1
 21750 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21751 058a 0B2B     		cmp	r3, #11
 21752 058c F3D9     		bls	.L838
2932:..\src/command_processing.c ****     }
2933:..\src/command_processing.c **** 
2934:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2935:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2936:..\src/command_processing.c ****     memInit_SoftHandPro();
2937:..\src/command_processing.c **** #endif    
2938:..\src/command_processing.c **** 
2939:..\src/command_processing.c ****     // Default generic user_id
2940:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21753              		.loc 1 2940 0 is_stmt 1
 21754 058e 0D4B     		ldr	r3, .L844
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 475


 21755 0590 0022     		movs	r2, #0
 21756 0592 83F8AB20 		strb	r2, [r3, #171]
2941:..\src/command_processing.c **** 
2942:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2943:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21757              		.loc 1 2943 0
 21758 0596 0B4B     		ldr	r3, .L844
 21759 0598 0122     		movs	r2, #1
 21760 059a 1A70     		strb	r2, [r3]
2944:..\src/command_processing.c ****     
2945:..\src/command_processing.c ****     //write that configuration to EEPROM
2946:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21761              		.loc 1 2946 0
 21762 059c 0020     		movs	r0, #0
 21763 059e FFF7FEFF 		bl	memStore
 21764 05a2 0346     		mov	r3, r0
 21765 05a4 002B     		cmp	r3, #0
 21766 05a6 07D0     		beq	.L839
 21767              		.loc 1 2946 0 is_stmt 0 discriminator 1
 21768 05a8 3220     		movs	r0, #50
 21769 05aa FFF7FEFF 		bl	memStore
 21770 05ae 0346     		mov	r3, r0
 21771 05b0 002B     		cmp	r3, #0
 21772 05b2 01D0     		beq	.L839
 21773              		.loc 1 2946 0 discriminator 3
 21774 05b4 0123     		movs	r3, #1
 21775 05b6 00E0     		b	.L840
 21776              	.L839:
 21777              		.loc 1 2946 0 discriminator 4
 21778 05b8 0023     		movs	r3, #0
 21779              	.L840:
 21780              		.loc 1 2946 0 discriminator 6
 21781 05ba DBB2     		uxtb	r3, r3
2947:..\src/command_processing.c **** }
 21782              		.loc 1 2947 0 is_stmt 1 discriminator 6
 21783 05bc 1846     		mov	r0, r3
 21784 05be 0837     		adds	r7, r7, #8
 21785              		.cfi_def_cfa_offset 8
 21786 05c0 BD46     		mov	sp, r7
 21787              		.cfi_def_cfa_register 13
 21788              		@ sp needed
 21789 05c2 80BD     		pop	{r7, pc}
 21790              	.L845:
 21791              		.align	2
 21792              	.L844:
 21793 05c4 00000000 		.word	g_mem
 21794 05c8 181B0000 		.word	.LC271
 21795              		.cfi_endproc
 21796              	.LFE86:
 21797              		.size	memInit, .-memInit
 21798              		.section	.rodata
 21799 1b1f 00       		.align	2
 21800              	.LC272:
 21801 1b20 55535230 		.ascii	"USR001\000"
 21801      303100
 21802              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 21803              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 476


 21804              		.global	memInit_SoftHandPro
 21805              		.thumb
 21806              		.thumb_func
 21807              		.type	memInit_SoftHandPro, %function
 21808              	memInit_SoftHandPro:
 21809              	.LFB87:
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c **** //==============================================================================
2950:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2951:..\src/command_processing.c **** //==============================================================================
2952:..\src/command_processing.c **** void memInit_SoftHandPro(void)
2953:..\src/command_processing.c **** {
 21810              		.loc 1 2953 0
 21811              		.cfi_startproc
 21812              		@ args = 0, pretend = 0, frame = 8
 21813              		@ frame_needed = 1, uses_anonymous_args = 0
 21814              		@ link register save eliminated.
 21815 0000 80B4     		push	{r7}
 21816              		.cfi_def_cfa_offset 4
 21817              		.cfi_offset 7, -4
 21818 0002 83B0     		sub	sp, sp, #12
 21819              		.cfi_def_cfa_offset 16
 21820 0004 00AF     		add	r7, sp, #0
 21821              		.cfi_def_cfa_register 7
2954:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 21822              		.loc 1 2954 0
 21823 0006 0023     		movs	r3, #0
 21824 0008 FB70     		strb	r3, [r7, #3]
2955:..\src/command_processing.c ****     
2956:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2957:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 21825              		.loc 1 2957 0
 21826 000a 874B     		ldr	r3, .L849
 21827 000c 0122     		movs	r2, #1
 21828 000e 83F8A720 		strb	r2, [r3, #167]
2958:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 21829              		.loc 1 2958 0
 21830 0012 854B     		ldr	r3, .L849
 21831 0014 0022     		movs	r2, #0
 21832 0016 83F8AC20 		strb	r2, [r3, #172]
2959:..\src/command_processing.c ****     
2960:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 21833              		.loc 1 2960 0
 21834 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21835 001c 8249     		ldr	r1, .L849
 21836 001e 1346     		mov	r3, r2
 21837 0020 DB00     		lsls	r3, r3, #3
 21838 0022 9B1A     		subs	r3, r3, r2
 21839 0024 1B01     		lsls	r3, r3, #4
 21840 0026 0B44     		add	r3, r3, r1
 21841 0028 E033     		adds	r3, r3, #224
 21842 002a 0122     		movs	r2, #1
 21843 002c 1A70     		strb	r2, [r3]
2961:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 21844              		.loc 1 2961 0
 21845 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21846 0030 7D49     		ldr	r1, .L849
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 477


 21847 0032 1346     		mov	r3, r2
 21848 0034 DB00     		lsls	r3, r3, #3
 21849 0036 9B1A     		subs	r3, r3, r2
 21850 0038 1B01     		lsls	r3, r3, #4
 21851 003a 0B44     		add	r3, r3, r1
 21852 003c 03F58773 		add	r3, r3, #270
 21853 0040 0022     		movs	r2, #0
 21854 0042 1A70     		strb	r2, [r3]
2962:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 21855              		.loc 1 2962 0
 21856 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21857 0046 7849     		ldr	r1, .L849
 21858 0048 1346     		mov	r3, r2
 21859 004a DB00     		lsls	r3, r3, #3
 21860 004c 9B1A     		subs	r3, r3, r2
 21861 004e 1B01     		lsls	r3, r3, #4
 21862 0050 0B44     		add	r3, r3, r1
 21863 0052 03F20F13 		addw	r3, r3, #271
 21864 0056 0022     		movs	r2, #0
 21865 0058 1A70     		strb	r2, [r3]
2963:..\src/command_processing.c ****     
2964:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
2965:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 21866              		.loc 1 2965 0
 21867 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21868 005c 724B     		ldr	r3, .L849
 21869 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 21870 0062 7149     		ldr	r1, .L849
 21871 0064 1346     		mov	r3, r2
 21872 0066 DB00     		lsls	r3, r3, #3
 21873 0068 9B1A     		subs	r3, r3, r2
 21874 006a 1B01     		lsls	r3, r3, #4
 21875 006c 0B44     		add	r3, r3, r1
 21876 006e 03F58873 		add	r3, r3, #272
 21877 0072 0246     		mov	r2, r0
 21878 0074 1A70     		strb	r2, [r3]
2966:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21879              		.loc 1 2966 0
 21880 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21881 0078 6B49     		ldr	r1, .L849
 21882 007a 1346     		mov	r3, r2
 21883 007c DB00     		lsls	r3, r3, #3
 21884 007e 9B1A     		subs	r3, r3, r2
 21885 0080 1B01     		lsls	r3, r3, #4
 21886 0082 0B44     		add	r3, r3, r1
 21887 0084 03F21113 		addw	r3, r3, #273
 21888 0088 0122     		movs	r2, #1
 21889 008a 1A70     		strb	r2, [r3]
2967:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 21890              		.loc 1 2967 0
 21891 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21892 008e 6649     		ldr	r1, .L849
 21893 0090 1346     		mov	r3, r2
 21894 0092 DB00     		lsls	r3, r3, #3
 21895 0094 9B1A     		subs	r3, r3, r2
 21896 0096 1B01     		lsls	r3, r3, #4
 21897 0098 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 478


 21898 009a 03F58973 		add	r3, r3, #274
 21899 009e 0122     		movs	r2, #1
 21900 00a0 1A70     		strb	r2, [r3]
2968:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 21901              		.loc 1 2968 0
 21902 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21903 00a4 6049     		ldr	r1, .L849
 21904 00a6 1346     		mov	r3, r2
 21905 00a8 DB00     		lsls	r3, r3, #3
 21906 00aa 9B1A     		subs	r3, r3, r2
 21907 00ac 1B01     		lsls	r3, r3, #4
 21908 00ae 0B44     		add	r3, r3, r1
 21909 00b0 E433     		adds	r3, r3, #228
 21910 00b2 0022     		movs	r2, #0
 21911 00b4 1A60     		str	r2, [r3]
2969:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 21912              		.loc 1 2969 0
 21913 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21914 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 21915 00ba 5B48     		ldr	r0, .L849
 21916 00bc 0B46     		mov	r3, r1
 21917 00be DB00     		lsls	r3, r3, #3
 21918 00c0 5B1A     		subs	r3, r3, r1
 21919 00c2 1B01     		lsls	r3, r3, #4
 21920 00c4 0344     		add	r3, r3, r0
 21921 00c6 03F58873 		add	r3, r3, #272
 21922 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21923 00cc 1846     		mov	r0, r3
 21924 00ce 5649     		ldr	r1, .L849
 21925 00d0 0346     		mov	r3, r0
 21926 00d2 5B00     		lsls	r3, r3, #1
 21927 00d4 0344     		add	r3, r3, r0
 21928 00d6 1B01     		lsls	r3, r3, #4
 21929 00d8 0B44     		add	r3, r3, r1
 21930 00da 03F29513 		addw	r3, r3, #405
 21931 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21932 00e0 1946     		mov	r1, r3
 21933 00e2 4FF47A53 		mov	r3, #16000
 21934 00e6 03FA01F1 		lsl	r1, r3, r1
 21935 00ea 4F48     		ldr	r0, .L849
 21936 00ec 1346     		mov	r3, r2
 21937 00ee DB00     		lsls	r3, r3, #3
 21938 00f0 9B1A     		subs	r3, r3, r2
 21939 00f2 1B01     		lsls	r3, r3, #4
 21940 00f4 0344     		add	r3, r3, r0
 21941 00f6 E833     		adds	r3, r3, #232
 21942 00f8 1960     		str	r1, [r3]
 21943              	.LBB21:
2970:..\src/command_processing.c ****     
2971:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 21944              		.loc 1 2971 0
 21945 00fa 0023     		movs	r3, #0
 21946 00fc 7B60     		str	r3, [r7, #4]
 21947 00fe 2EE0     		b	.L847
 21948              	.L848:
2972:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
2973:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 479


 21949              		.loc 1 2973 0 discriminator 3
 21950 0100 4949     		ldr	r1, .L849
 21951 0102 7A68     		ldr	r2, [r7, #4]
 21952 0104 1346     		mov	r3, r2
 21953 0106 5B00     		lsls	r3, r3, #1
 21954 0108 1344     		add	r3, r3, r2
 21955 010a 1B01     		lsls	r3, r3, #4
 21956 010c 0B44     		add	r3, r3, r1
 21957 010e 03F5D873 		add	r3, r3, #432
 21958 0112 0122     		movs	r2, #1
 21959 0114 1A70     		strb	r2, [r3]
2974:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 21960              		.loc 1 2974 0 discriminator 3
 21961 0116 4449     		ldr	r1, .L849
 21962 0118 7A68     		ldr	r2, [r7, #4]
 21963 011a 1346     		mov	r3, r2
 21964 011c 5B00     		lsls	r3, r3, #1
 21965 011e 1344     		add	r3, r3, r2
 21966 0120 1B01     		lsls	r3, r3, #4
 21967 0122 0B44     		add	r3, r3, r1
 21968 0124 03F2B513 		addw	r3, r3, #437
 21969 0128 2322     		movs	r2, #35
 21970 012a 1A70     		strb	r2, [r3]
2975:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 21971              		.loc 1 2975 0 discriminator 3
 21972 012c 3E49     		ldr	r1, .L849
 21973 012e 7A68     		ldr	r2, [r7, #4]
 21974 0130 1346     		mov	r3, r2
 21975 0132 5B00     		lsls	r3, r3, #1
 21976 0134 1344     		add	r3, r3, r2
 21977 0136 1B01     		lsls	r3, r3, #4
 21978 0138 0B44     		add	r3, r3, r1
 21979 013a 03F5DB73 		add	r3, r3, #438
 21980 013e 0322     		movs	r2, #3
 21981 0140 1A70     		strb	r2, [r3]
2976:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 21982              		.loc 1 2976 0 discriminator 3
 21983 0142 3949     		ldr	r1, .L849
 21984 0144 7A68     		ldr	r2, [r7, #4]
 21985 0146 1346     		mov	r3, r2
 21986 0148 5B00     		lsls	r3, r3, #1
 21987 014a 1344     		add	r3, r3, r2
 21988 014c 1B01     		lsls	r3, r3, #4
 21989 014e 0B44     		add	r3, r3, r1
 21990 0150 03F2B713 		addw	r3, r3, #439
 21991 0154 FF22     		movs	r2, #255
 21992 0156 1A70     		strb	r2, [r3]
2971:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21993              		.loc 1 2971 0 discriminator 3
 21994 0158 7B68     		ldr	r3, [r7, #4]
 21995 015a 0133     		adds	r3, r3, #1
 21996 015c 7B60     		str	r3, [r7, #4]
 21997              	.L847:
2971:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 21998              		.loc 1 2971 0 is_stmt 0 discriminator 1
 21999 015e 7B68     		ldr	r3, [r7, #4]
 22000 0160 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 480


 22001 0162 CDDD     		ble	.L848
 22002              	.LBE21:
2977:..\src/command_processing.c ****     }
2978:..\src/command_processing.c ****     
2979:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 22003              		.loc 1 2979 0 is_stmt 1
 22004 0164 304B     		ldr	r3, .L849
 22005 0166 0022     		movs	r2, #0
 22006 0168 83F8FD21 		strb	r2, [r3, #509]
2980:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22007              		.loc 1 2980 0
 22008 016c 2E4B     		ldr	r3, .L849
 22009 016e 4FF48062 		mov	r2, #1024
 22010 0172 C3F8F421 		str	r2, [r3, #500]
2981:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 22011              		.loc 1 2981 0
 22012 0176 2C4B     		ldr	r3, .L849
 22013 0178 4FF48062 		mov	r2, #1024
 22014 017c C3F8F821 		str	r2, [r3, #504]
2982:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22015              		.loc 1 2982 0
 22016 0180 294B     		ldr	r3, .L849
 22017 0182 C822     		movs	r2, #200
 22018 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2983:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22019              		.loc 1 2983 0
 22020 0188 274B     		ldr	r3, .L849
 22021 018a C822     		movs	r2, #200
 22022 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2984:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 22023              		.loc 1 2984 0
 22024 0190 254B     		ldr	r3, .L849
 22025 0192 6422     		movs	r2, #100
 22026 0194 83F8FC21 		strb	r2, [r3, #508]
2985:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 22027              		.loc 1 2985 0
 22028 0198 234B     		ldr	r3, .L849
 22029 019a 0022     		movs	r2, #0
 22030 019c 83F8FE21 		strb	r2, [r3, #510]
2986:..\src/command_processing.c ****     
2987:..\src/command_processing.c ****     //Initialize rest position parameters  
2988:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 22031              		.loc 1 2988 0
 22032 01a0 214B     		ldr	r3, .L849
 22033 01a2 0022     		movs	r2, #0
 22034 01a4 83F8AC22 		strb	r2, [r3, #684]
2989:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 22035              		.loc 1 2989 0
 22036 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22037 01aa 1F49     		ldr	r1, .L849
 22038 01ac 1346     		mov	r3, r2
 22039 01ae DB00     		lsls	r3, r3, #3
 22040 01b0 9B1A     		subs	r3, r3, r2
 22041 01b2 1B01     		lsls	r3, r3, #4
 22042 01b4 0B44     		add	r3, r3, r1
 22043 01b6 03F58873 		add	r3, r3, #272
 22044 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 481


 22045 01bc 1946     		mov	r1, r3
 22046 01be 1A4A     		ldr	r2, .L849
 22047 01c0 0B46     		mov	r3, r1
 22048 01c2 5B00     		lsls	r3, r3, #1
 22049 01c4 0B44     		add	r3, r3, r1
 22050 01c6 1B01     		lsls	r3, r3, #4
 22051 01c8 1344     		add	r3, r3, r2
 22052 01ca 03F29513 		addw	r3, r3, #405
 22053 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22054 01d0 1A46     		mov	r2, r3
 22055 01d2 41F65833 		movw	r3, #7000
 22056 01d6 9340     		lsls	r3, r3, r2
 22057 01d8 134A     		ldr	r2, .L849
 22058 01da C2F8A032 		str	r3, [r2, #672]
2990:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 22059              		.loc 1 2990 0
 22060 01de 124B     		ldr	r3, .L849
 22061 01e0 0A22     		movs	r2, #10
 22062 01e2 C3F8A422 		str	r2, [r3, #676]
2991:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 22063              		.loc 1 2991 0
 22064 01e6 104B     		ldr	r3, .L849
 22065 01e8 42F21072 		movw	r2, #10000
 22066 01ec C3F8A822 		str	r2, [r3, #680]
2992:..\src/command_processing.c **** 	
2993:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22067              		.loc 1 2993 0
 22068 01f0 0D4B     		ldr	r3, .L849
 22069 01f2 0022     		movs	r2, #0
 22070 01f4 83F80022 		strb	r2, [r3, #512]
2994:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22071              		.loc 1 2994 0
 22072 01f8 0B4B     		ldr	r3, .L849
 22073 01fa 0022     		movs	r2, #0
 22074 01fc 83F82622 		strb	r2, [r3, #550]
2995:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 22075              		.loc 1 2995 0
 22076 0200 094B     		ldr	r3, .L849
 22077 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22078 0206 1233     		adds	r3, r3, #18
 22079 0208 5B01     		lsls	r3, r3, #5
 22080 020a 074A     		ldr	r2, .L849
 22081 020c 1344     		add	r3, r3, r2
 22082 020e 074A     		ldr	r2, .L849+4
 22083 0210 1068     		ldr	r0, [r2]	@ unaligned
 22084 0212 1860     		str	r0, [r3]	@ unaligned
 22085 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22086 0216 9279     		ldrb	r2, [r2, #6]
 22087 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 22088 021a 9A71     		strb	r2, [r3, #6]
2996:..\src/command_processing.c **** }
 22089              		.loc 1 2996 0
 22090 021c 00BF     		nop
 22091 021e 0C37     		adds	r7, r7, #12
 22092              		.cfi_def_cfa_offset 4
 22093 0220 BD46     		mov	sp, r7
 22094              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 482


 22095              		@ sp needed
 22096 0222 80BC     		pop	{r7}
 22097              		.cfi_restore 7
 22098              		.cfi_def_cfa_offset 0
 22099 0224 7047     		bx	lr
 22100              	.L850:
 22101 0226 00BF     		.align	2
 22102              	.L849:
 22103 0228 00000000 		.word	g_mem
 22104 022c 201B0000 		.word	.LC272
 22105              		.cfi_endproc
 22106              	.LFE87:
 22107              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 22108              		.section	.text.cmd_get_measurements,"ax",%progbits
 22109              		.align	2
 22110              		.global	cmd_get_measurements
 22111              		.thumb
 22112              		.thumb_func
 22113              		.type	cmd_get_measurements, %function
 22114              	cmd_get_measurements:
 22115              	.LFB88:
2997:..\src/command_processing.c **** 
2998:..\src/command_processing.c **** //==============================================================================
2999:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3000:..\src/command_processing.c **** //==============================================================================
3001:..\src/command_processing.c **** /**
3002:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3003:..\src/command_processing.c **** **/
3004:..\src/command_processing.c **** 
3005:..\src/command_processing.c **** void cmd_get_measurements(){
 22116              		.loc 1 3005 0
 22117              		.cfi_startproc
 22118              		@ args = 0, pretend = 0, frame = 16
 22119              		@ frame_needed = 1, uses_anonymous_args = 0
 22120 0000 90B5     		push	{r4, r7, lr}
 22121              		.cfi_def_cfa_offset 12
 22122              		.cfi_offset 4, -12
 22123              		.cfi_offset 7, -8
 22124              		.cfi_offset 14, -4
 22125 0002 85B0     		sub	sp, sp, #20
 22126              		.cfi_def_cfa_offset 32
 22127 0004 00AF     		add	r7, sp, #0
 22128              		.cfi_def_cfa_register 7
3006:..\src/command_processing.c ****  
3007:..\src/command_processing.c ****     uint8 CYDATA index;
3008:..\src/command_processing.c ****     int16 aux_int16;
3009:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3010:..\src/command_processing.c ****     
3011:..\src/command_processing.c ****     uint8 packet_data[8]; 
3012:..\src/command_processing.c ****     
3013:..\src/command_processing.c ****     //Header package
3014:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22129              		.loc 1 3014 0
 22130 0006 8423     		movs	r3, #132
 22131 0008 3B71     		strb	r3, [r7, #4]
3015:..\src/command_processing.c ****     
3016:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 483


 22132              		.loc 1 3016 0
 22133 000a 0323     		movs	r3, #3
 22134 000c FB73     		strb	r3, [r7, #15]
 22135 000e 37E0     		b	.L852
 22136              	.L853:
3017:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22137              		.loc 1 3017 0
 22138 0010 264B     		ldr	r3, .L854
 22139 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22140 0016 1846     		mov	r0, r3
 22141 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22142 001a 2549     		ldr	r1, .L854+4
 22143 001c 0346     		mov	r3, r0
 22144 001e 5B00     		lsls	r3, r3, #1
 22145 0020 0344     		add	r3, r3, r0
 22146 0022 9B00     		lsls	r3, r3, #2
 22147 0024 1344     		add	r3, r3, r2
 22148 0026 51F82320 		ldr	r2, [r1, r3, lsl #2]
 22149 002a 204B     		ldr	r3, .L854
 22150 002c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22151 0030 1C46     		mov	r4, r3
 22152 0032 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22153 0034 1D48     		ldr	r0, .L854
 22154 0036 2346     		mov	r3, r4
 22155 0038 5B00     		lsls	r3, r3, #1
 22156 003a 2344     		add	r3, r3, r4
 22157 003c 1B01     		lsls	r3, r3, #4
 22158 003e 0344     		add	r3, r3, r0
 22159 0040 0B44     		add	r3, r3, r1
 22160 0042 03F29513 		addw	r3, r3, #405
 22161 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22162 0048 42FA03F3 		asr	r3, r2, r3
 22163 004c 1BB2     		sxth	r3, r3
 22164 004e BB81     		strh	r3, [r7, #12]	@ movhi
3018:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22165              		.loc 1 3018 0
 22166 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22167 0052 5B00     		lsls	r3, r3, #1
 22168 0054 0233     		adds	r3, r3, #2
 22169 0056 07F10C02 		add	r2, r7, #12
 22170 005a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22171 005c 07F11001 		add	r1, r7, #16
 22172 0060 0B44     		add	r3, r3, r1
 22173 0062 03F80C2C 		strb	r2, [r3, #-12]
3019:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22174              		.loc 1 3019 0
 22175 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22176 0068 5B00     		lsls	r3, r3, #1
 22177 006a 5A1C     		adds	r2, r3, #1
 22178 006c 07F10C03 		add	r3, r7, #12
 22179 0070 0133     		adds	r3, r3, #1
 22180 0072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22181 0074 07F11003 		add	r3, r7, #16
 22182 0078 1344     		add	r3, r3, r2
 22183 007a 0A46     		mov	r2, r1
 22184 007c 03F80C2C 		strb	r2, [r3, #-12]
 22185              	.L852:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 484


3016:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22186              		.loc 1 3016 0 discriminator 1
 22187 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22188 0082 5A1E     		subs	r2, r3, #1
 22189 0084 FA73     		strb	r2, [r7, #15]
 22190 0086 002B     		cmp	r3, #0
 22191 0088 C2D1     		bne	.L853
3020:..\src/command_processing.c ****     }
3021:..\src/command_processing.c **** 
3022:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3023:..\src/command_processing.c **** 
3024:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22192              		.loc 1 3024 0
 22193 008a 3B1D     		adds	r3, r7, #4
 22194 008c 0721     		movs	r1, #7
 22195 008e 1846     		mov	r0, r3
 22196 0090 FFF7FEFF 		bl	LCRChecksum
 22197 0094 0346     		mov	r3, r0
 22198 0096 FB72     		strb	r3, [r7, #11]
3025:..\src/command_processing.c **** 
3026:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22199              		.loc 1 3026 0
 22200 0098 3B1D     		adds	r3, r7, #4
 22201 009a 0821     		movs	r1, #8
 22202 009c 1846     		mov	r0, r3
 22203 009e FFF7FEFF 		bl	commWrite
3027:..\src/command_processing.c ****    
3028:..\src/command_processing.c **** }
 22204              		.loc 1 3028 0
 22205 00a2 00BF     		nop
 22206 00a4 1437     		adds	r7, r7, #20
 22207              		.cfi_def_cfa_offset 12
 22208 00a6 BD46     		mov	sp, r7
 22209              		.cfi_def_cfa_register 13
 22210              		@ sp needed
 22211 00a8 90BD     		pop	{r4, r7, pc}
 22212              	.L855:
 22213 00aa 00BF     		.align	2
 22214              	.L854:
 22215 00ac 00000000 		.word	g_mem
 22216 00b0 00000000 		.word	g_measOld
 22217              		.cfi_endproc
 22218              	.LFE88:
 22219              		.size	cmd_get_measurements, .-cmd_get_measurements
 22220              		.section	.text.cmd_get_velocities,"ax",%progbits
 22221              		.align	2
 22222              		.global	cmd_get_velocities
 22223              		.thumb
 22224              		.thumb_func
 22225              		.type	cmd_get_velocities, %function
 22226              	cmd_get_velocities:
 22227              	.LFB89:
3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c **** void cmd_get_velocities(){
 22228              		.loc 1 3030 0
 22229              		.cfi_startproc
 22230              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 485


 22231              		@ frame_needed = 1, uses_anonymous_args = 0
 22232 0000 90B5     		push	{r4, r7, lr}
 22233              		.cfi_def_cfa_offset 12
 22234              		.cfi_offset 4, -12
 22235              		.cfi_offset 7, -8
 22236              		.cfi_offset 14, -4
 22237 0002 85B0     		sub	sp, sp, #20
 22238              		.cfi_def_cfa_offset 32
 22239 0004 00AF     		add	r7, sp, #0
 22240              		.cfi_def_cfa_register 7
3031:..\src/command_processing.c ****  
3032:..\src/command_processing.c ****     uint8 CYDATA index;
3033:..\src/command_processing.c ****     int16 aux_int16;
3034:..\src/command_processing.c ****    
3035:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3036:..\src/command_processing.c ****     
3037:..\src/command_processing.c ****     uint8 packet_data[8]; 
3038:..\src/command_processing.c ****     
3039:..\src/command_processing.c ****     //Header package
3040:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22241              		.loc 1 3040 0
 22242 0006 8923     		movs	r3, #137
 22243 0008 3B71     		strb	r3, [r7, #4]
3041:..\src/command_processing.c ****     
3042:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22244              		.loc 1 3042 0
 22245 000a 0323     		movs	r3, #3
 22246 000c FB73     		strb	r3, [r7, #15]
 22247 000e 38E0     		b	.L857
 22248              	.L858:
3043:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22249              		.loc 1 3043 0
 22250 0010 264B     		ldr	r3, .L859
 22251 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22252 0016 1846     		mov	r0, r3
 22253 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22254 001a 2549     		ldr	r1, .L859+4
 22255 001c 0346     		mov	r3, r0
 22256 001e 5B00     		lsls	r3, r3, #1
 22257 0020 0344     		add	r3, r3, r0
 22258 0022 9B00     		lsls	r3, r3, #2
 22259 0024 1344     		add	r3, r3, r2
 22260 0026 0633     		adds	r3, r3, #6
 22261 0028 51F82320 		ldr	r2, [r1, r3, lsl #2]
 22262 002c 1F4B     		ldr	r3, .L859
 22263 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22264 0032 1C46     		mov	r4, r3
 22265 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22266 0036 1D48     		ldr	r0, .L859
 22267 0038 2346     		mov	r3, r4
 22268 003a 5B00     		lsls	r3, r3, #1
 22269 003c 2344     		add	r3, r3, r4
 22270 003e 1B01     		lsls	r3, r3, #4
 22271 0040 0344     		add	r3, r3, r0
 22272 0042 0B44     		add	r3, r3, r1
 22273 0044 03F29513 		addw	r3, r3, #405
 22274 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 486


 22275 004a 42FA03F3 		asr	r3, r2, r3
 22276 004e 1BB2     		sxth	r3, r3
 22277 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3044:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22278              		.loc 1 3044 0
 22279 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22280 0054 5B00     		lsls	r3, r3, #1
 22281 0056 0233     		adds	r3, r3, #2
 22282 0058 07F10C02 		add	r2, r7, #12
 22283 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22284 005e 07F11001 		add	r1, r7, #16
 22285 0062 0B44     		add	r3, r3, r1
 22286 0064 03F80C2C 		strb	r2, [r3, #-12]
3045:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22287              		.loc 1 3045 0
 22288 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22289 006a 5B00     		lsls	r3, r3, #1
 22290 006c 5A1C     		adds	r2, r3, #1
 22291 006e 07F10C03 		add	r3, r7, #12
 22292 0072 0133     		adds	r3, r3, #1
 22293 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22294 0076 07F11003 		add	r3, r7, #16
 22295 007a 1344     		add	r3, r3, r2
 22296 007c 0A46     		mov	r2, r1
 22297 007e 03F80C2C 		strb	r2, [r3, #-12]
 22298              	.L857:
3042:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22299              		.loc 1 3042 0 discriminator 1
 22300 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22301 0084 5A1E     		subs	r2, r3, #1
 22302 0086 FA73     		strb	r2, [r7, #15]
 22303 0088 002B     		cmp	r3, #0
 22304 008a C1D1     		bne	.L858
3046:..\src/command_processing.c ****     }
3047:..\src/command_processing.c ****             
3048:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3049:..\src/command_processing.c **** 
3050:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22305              		.loc 1 3050 0
 22306 008c 3B1D     		adds	r3, r7, #4
 22307 008e 0721     		movs	r1, #7
 22308 0090 1846     		mov	r0, r3
 22309 0092 FFF7FEFF 		bl	LCRChecksum
 22310 0096 0346     		mov	r3, r0
 22311 0098 FB72     		strb	r3, [r7, #11]
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22312              		.loc 1 3052 0
 22313 009a 3B1D     		adds	r3, r7, #4
 22314 009c 0821     		movs	r1, #8
 22315 009e 1846     		mov	r0, r3
 22316 00a0 FFF7FEFF 		bl	commWrite
3053:..\src/command_processing.c **** }
 22317              		.loc 1 3053 0
 22318 00a4 00BF     		nop
 22319 00a6 1437     		adds	r7, r7, #20
 22320              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 487


 22321 00a8 BD46     		mov	sp, r7
 22322              		.cfi_def_cfa_register 13
 22323              		@ sp needed
 22324 00aa 90BD     		pop	{r4, r7, pc}
 22325              	.L860:
 22326              		.align	2
 22327              	.L859:
 22328 00ac 00000000 		.word	g_mem
 22329 00b0 00000000 		.word	g_measOld
 22330              		.cfi_endproc
 22331              	.LFE89:
 22332              		.size	cmd_get_velocities, .-cmd_get_velocities
 22333              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22334              		.align	2
 22335              		.global	cmd_get_accelerations
 22336              		.thumb
 22337              		.thumb_func
 22338              		.type	cmd_get_accelerations, %function
 22339              	cmd_get_accelerations:
 22340              	.LFB90:
3054:..\src/command_processing.c **** 
3055:..\src/command_processing.c **** void cmd_get_accelerations(){
 22341              		.loc 1 3055 0
 22342              		.cfi_startproc
 22343              		@ args = 0, pretend = 0, frame = 16
 22344              		@ frame_needed = 1, uses_anonymous_args = 0
 22345 0000 90B5     		push	{r4, r7, lr}
 22346              		.cfi_def_cfa_offset 12
 22347              		.cfi_offset 4, -12
 22348              		.cfi_offset 7, -8
 22349              		.cfi_offset 14, -4
 22350 0002 85B0     		sub	sp, sp, #20
 22351              		.cfi_def_cfa_offset 32
 22352 0004 00AF     		add	r7, sp, #0
 22353              		.cfi_def_cfa_register 7
3056:..\src/command_processing.c ****  
3057:..\src/command_processing.c ****     uint8 CYDATA index;
3058:..\src/command_processing.c ****     int16 aux_int16;
3059:..\src/command_processing.c ****     
3060:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3061:..\src/command_processing.c ****     
3062:..\src/command_processing.c ****     uint8 packet_data[8]; 
3063:..\src/command_processing.c ****     
3064:..\src/command_processing.c ****     //Header package
3065:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22354              		.loc 1 3065 0
 22355 0006 8B23     		movs	r3, #139
 22356 0008 3B71     		strb	r3, [r7, #4]
3066:..\src/command_processing.c ****     
3067:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22357              		.loc 1 3067 0
 22358 000a 0323     		movs	r3, #3
 22359 000c FB73     		strb	r3, [r7, #15]
 22360 000e 39E0     		b	.L862
 22361              	.L863:
3068:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22362              		.loc 1 3068 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 488


 22363 0010 274B     		ldr	r3, .L864
 22364 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22365 0016 1846     		mov	r0, r3
 22366 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22367 001a 2649     		ldr	r1, .L864+4
 22368 001c 0346     		mov	r3, r0
 22369 001e 5B00     		lsls	r3, r3, #1
 22370 0020 0344     		add	r3, r3, r0
 22371 0022 9B00     		lsls	r3, r3, #2
 22372 0024 1344     		add	r3, r3, r2
 22373 0026 0833     		adds	r3, r3, #8
 22374 0028 9B00     		lsls	r3, r3, #2
 22375 002a 0B44     		add	r3, r3, r1
 22376 002c 5A68     		ldr	r2, [r3, #4]
 22377 002e 204B     		ldr	r3, .L864
 22378 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22379 0034 1C46     		mov	r4, r3
 22380 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22381 0038 1D48     		ldr	r0, .L864
 22382 003a 2346     		mov	r3, r4
 22383 003c 5B00     		lsls	r3, r3, #1
 22384 003e 2344     		add	r3, r3, r4
 22385 0040 1B01     		lsls	r3, r3, #4
 22386 0042 0344     		add	r3, r3, r0
 22387 0044 0B44     		add	r3, r3, r1
 22388 0046 03F29513 		addw	r3, r3, #405
 22389 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22390 004c 42FA03F3 		asr	r3, r2, r3
 22391 0050 1BB2     		sxth	r3, r3
 22392 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3069:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22393              		.loc 1 3069 0
 22394 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22395 0056 5B00     		lsls	r3, r3, #1
 22396 0058 0233     		adds	r3, r3, #2
 22397 005a 07F10C02 		add	r2, r7, #12
 22398 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22399 0060 07F11001 		add	r1, r7, #16
 22400 0064 0B44     		add	r3, r3, r1
 22401 0066 03F80C2C 		strb	r2, [r3, #-12]
3070:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22402              		.loc 1 3070 0
 22403 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22404 006c 5B00     		lsls	r3, r3, #1
 22405 006e 5A1C     		adds	r2, r3, #1
 22406 0070 07F10C03 		add	r3, r7, #12
 22407 0074 0133     		adds	r3, r3, #1
 22408 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22409 0078 07F11003 		add	r3, r7, #16
 22410 007c 1344     		add	r3, r3, r2
 22411 007e 0A46     		mov	r2, r1
 22412 0080 03F80C2C 		strb	r2, [r3, #-12]
 22413              	.L862:
3067:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22414              		.loc 1 3067 0 discriminator 1
 22415 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22416 0086 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 489


 22417 0088 FA73     		strb	r2, [r7, #15]
 22418 008a 002B     		cmp	r3, #0
 22419 008c C0D1     		bne	.L863
3071:..\src/command_processing.c ****     }
3072:..\src/command_processing.c ****     
3073:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3074:..\src/command_processing.c **** 
3075:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22420              		.loc 1 3075 0
 22421 008e 3B1D     		adds	r3, r7, #4
 22422 0090 0721     		movs	r1, #7
 22423 0092 1846     		mov	r0, r3
 22424 0094 FFF7FEFF 		bl	LCRChecksum
 22425 0098 0346     		mov	r3, r0
 22426 009a FB72     		strb	r3, [r7, #11]
3076:..\src/command_processing.c **** 
3077:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22427              		.loc 1 3077 0
 22428 009c 3B1D     		adds	r3, r7, #4
 22429 009e 0821     		movs	r1, #8
 22430 00a0 1846     		mov	r0, r3
 22431 00a2 FFF7FEFF 		bl	commWrite
3078:..\src/command_processing.c **** }
 22432              		.loc 1 3078 0
 22433 00a6 00BF     		nop
 22434 00a8 1437     		adds	r7, r7, #20
 22435              		.cfi_def_cfa_offset 12
 22436 00aa BD46     		mov	sp, r7
 22437              		.cfi_def_cfa_register 13
 22438              		@ sp needed
 22439 00ac 90BD     		pop	{r4, r7, pc}
 22440              	.L865:
 22441 00ae 00BF     		.align	2
 22442              	.L864:
 22443 00b0 00000000 		.word	g_mem
 22444 00b4 00000000 		.word	g_measOld
 22445              		.cfi_endproc
 22446              	.LFE90:
 22447              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22448              		.section	.text.cmd_set_inputs,"ax",%progbits
 22449              		.align	2
 22450              		.global	cmd_set_inputs
 22451              		.thumb
 22452              		.thumb_func
 22453              		.type	cmd_set_inputs, %function
 22454              	cmd_set_inputs:
 22455              	.LFB91:
3079:..\src/command_processing.c **** 
3080:..\src/command_processing.c **** void cmd_set_inputs(){
 22456              		.loc 1 3080 0
 22457              		.cfi_startproc
 22458              		@ args = 0, pretend = 0, frame = 8
 22459              		@ frame_needed = 1, uses_anonymous_args = 0
 22460              		@ link register save eliminated.
 22461 0000 90B4     		push	{r4, r7}
 22462              		.cfi_def_cfa_offset 8
 22463              		.cfi_offset 4, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 490


 22464              		.cfi_offset 7, -4
 22465 0002 82B0     		sub	sp, sp, #8
 22466              		.cfi_def_cfa_offset 16
 22467 0004 00AF     		add	r7, sp, #0
 22468              		.cfi_def_cfa_register 7
3081:..\src/command_processing.c ****     
3082:..\src/command_processing.c ****     // Store position setted in right variables
3083:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3084:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3085:..\src/command_processing.c ****     
3086:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22469              		.loc 1 3086 0
 22470 0006 894B     		ldr	r3, .L880
 22471 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22472 000a 1B02     		lsls	r3, r3, #8
 22473 000c 1AB2     		sxth	r2, r3
 22474 000e 874B     		ldr	r3, .L880
 22475 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22476 0012 1BB2     		sxth	r3, r3
 22477 0014 1343     		orrs	r3, r3, r2
 22478 0016 1BB2     		sxth	r3, r3
 22479 0018 3B80     		strh	r3, [r7]	@ movhi
3087:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22480              		.loc 1 3087 0
 22481 001a 844B     		ldr	r3, .L880
 22482 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22483 001e 1B02     		lsls	r3, r3, #8
 22484 0020 1AB2     		sxth	r2, r3
 22485 0022 824B     		ldr	r3, .L880
 22486 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22487 0026 1BB2     		sxth	r3, r3
 22488 0028 1343     		orrs	r3, r3, r2
 22489 002a 1BB2     		sxth	r3, r3
 22490 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22491              	.LBB22:
3088:..\src/command_processing.c ****     
3089:..\src/command_processing.c ****     // Check if last command received was the same as this 
3090:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3091:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22492              		.loc 1 3091 0
 22493 002e 0023     		movs	r3, #0
 22494 0030 FB71     		strb	r3, [r7, #7]
 22495 0032 1DE0     		b	.L867
 22496              	.L869:
3092:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22497              		.loc 1 3092 0
 22498 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22499 0036 7E4A     		ldr	r2, .L880+4
 22500 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22501 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22502 003e 5B00     		lsls	r3, r3, #1
 22503 0040 07F10801 		add	r1, r7, #8
 22504 0044 0B44     		add	r3, r3, r1
 22505 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22506 004a 9A42     		cmp	r2, r3
 22507 004c 02D0     		beq	.L868
3093:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 491


 22508              		.loc 1 3093 0
 22509 004e 794B     		ldr	r3, .L880+8
 22510 0050 0122     		movs	r2, #1
 22511 0052 1A70     		strb	r2, [r3]
 22512              	.L868:
3094:..\src/command_processing.c ****         }
3095:..\src/command_processing.c ****         // Update last command
3096:..\src/command_processing.c ****         last_aux_int16[i] = aux_int16[i];
 22513              		.loc 1 3096 0 discriminator 2
 22514 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22515 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22516 0058 5B00     		lsls	r3, r3, #1
 22517 005a 07F10801 		add	r1, r7, #8
 22518 005e 0B44     		add	r3, r3, r1
 22519 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22520 0064 724B     		ldr	r3, .L880+4
 22521 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3091:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22522              		.loc 1 3091 0 discriminator 2
 22523 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22524 006c 0133     		adds	r3, r3, #1
 22525 006e FB71     		strb	r3, [r7, #7]
 22526              	.L867:
3091:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 22527              		.loc 1 3091 0 is_stmt 0 discriminator 1
 22528 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22529 0072 714B     		ldr	r3, .L880+12
 22530 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22531 0078 0133     		adds	r3, r3, #1
 22532 007a 9A42     		cmp	r2, r3
 22533 007c DADB     		blt	.L869
 22534              	.LBE22:
3097:..\src/command_processing.c ****     }
3098:..\src/command_processing.c ****     
3099:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3100:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22535              		.loc 1 3100 0 is_stmt 1
 22536 007e 6D4B     		ldr	r3, .L880+8
 22537 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22538 0082 002B     		cmp	r3, #0
 22539 0084 00F0CC80 		beq	.L879
 22540              	.LBB23:
3101:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22541              		.loc 1 3101 0
 22542 0088 0023     		movs	r3, #0
 22543 008a BB71     		strb	r3, [r7, #6]
 22544 008c C4E0     		b	.L871
 22545              	.L878:
3102:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22546              		.loc 1 3102 0
 22547 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22548 0090 6A49     		ldr	r1, .L880+16
 22549 0092 1346     		mov	r3, r2
 22550 0094 DB00     		lsls	r3, r3, #3
 22551 0096 9B1A     		subs	r3, r3, r2
 22552 0098 1B01     		lsls	r3, r3, #4
 22553 009a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 492


 22554 009c 03F20F13 		addw	r3, r3, #271
 22555 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22556 00a2 022B     		cmp	r3, #2
 22557 00a4 0ED1     		bne	.L872
3103:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22558              		.loc 1 3103 0
 22559 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22560 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22561 00aa 5B00     		lsls	r3, r3, #1
 22562 00ac 07F10801 		add	r1, r7, #8
 22563 00b0 0B44     		add	r3, r3, r1
 22564 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22565 00b6 1846     		mov	r0, r3
 22566 00b8 6149     		ldr	r1, .L880+20
 22567 00ba 1301     		lsls	r3, r2, #4
 22568 00bc 0B44     		add	r3, r3, r1
 22569 00be 0433     		adds	r3, r3, #4
 22570 00c0 1860     		str	r0, [r3]
 22571 00c2 47E0     		b	.L873
 22572              	.L872:
3104:..\src/command_processing.c ****             }
3105:..\src/command_processing.c ****             else {
3106:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22573              		.loc 1 3106 0
 22574 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22575 00c6 5D49     		ldr	r1, .L880+16
 22576 00c8 1346     		mov	r3, r2
 22577 00ca DB00     		lsls	r3, r3, #3
 22578 00cc 9B1A     		subs	r3, r3, r2
 22579 00ce 1B01     		lsls	r3, r3, #4
 22580 00d0 0B44     		add	r3, r3, r1
 22581 00d2 03F20F13 		addw	r3, r3, #271
 22582 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22583 00d8 012B     		cmp	r3, #1
 22584 00da 0ED1     		bne	.L874
3107:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22585              		.loc 1 3107 0
 22586 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22587 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22588 00e0 5B00     		lsls	r3, r3, #1
 22589 00e2 07F10801 		add	r1, r7, #8
 22590 00e6 0B44     		add	r3, r3, r1
 22591 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22592 00ec 1846     		mov	r0, r3
 22593 00ee 5449     		ldr	r1, .L880+20
 22594 00f0 1301     		lsls	r3, r2, #4
 22595 00f2 0B44     		add	r3, r3, r1
 22596 00f4 0833     		adds	r3, r3, #8
 22597 00f6 1860     		str	r0, [r3]
 22598 00f8 2CE0     		b	.L873
 22599              	.L874:
3108:..\src/command_processing.c ****                 }
3109:..\src/command_processing.c ****                 else {
3110:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22600              		.loc 1 3110 0
 22601 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22602 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 493


 22603 00fe 5B00     		lsls	r3, r3, #1
 22604 0100 07F10801 		add	r1, r7, #8
 22605 0104 0B44     		add	r3, r3, r1
 22606 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22607 010a 1846     		mov	r0, r3
 22608 010c 4C49     		ldr	r1, .L880+20
 22609 010e 1301     		lsls	r3, r2, #4
 22610 0110 0B44     		add	r3, r3, r1
 22611 0112 1860     		str	r0, [r3]
3111:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22612              		.loc 1 3111 0
 22613 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22614 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22615 0118 494A     		ldr	r2, .L880+20
 22616 011a 1B01     		lsls	r3, r3, #4
 22617 011c 1344     		add	r3, r3, r2
 22618 011e 1868     		ldr	r0, [r3]
 22619 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22620 0122 454C     		ldr	r4, .L880+12
 22621 0124 1346     		mov	r3, r2
 22622 0126 DB00     		lsls	r3, r3, #3
 22623 0128 9B1A     		subs	r3, r3, r2
 22624 012a 1B01     		lsls	r3, r3, #4
 22625 012c 2344     		add	r3, r3, r4
 22626 012e 03F58873 		add	r3, r3, #272
 22627 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22628 0134 1C46     		mov	r4, r3
 22629 0136 414A     		ldr	r2, .L880+16
 22630 0138 2346     		mov	r3, r4
 22631 013a 5B00     		lsls	r3, r3, #1
 22632 013c 2344     		add	r3, r3, r4
 22633 013e 1B01     		lsls	r3, r3, #4
 22634 0140 1344     		add	r3, r3, r2
 22635 0142 03F29513 		addw	r3, r3, #405
 22636 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22637 0148 00FA03F2 		lsl	r2, r0, r3
 22638 014c 3C48     		ldr	r0, .L880+20
 22639 014e 0B01     		lsls	r3, r1, #4
 22640 0150 0344     		add	r3, r3, r0
 22641 0152 1A60     		str	r2, [r3]
 22642              	.L873:
3112:..\src/command_processing.c ****                 }
3113:..\src/command_processing.c ****             }  
3114:..\src/command_processing.c ****                
3115:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3116:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22643              		.loc 1 3116 0
 22644 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22645 0156 3849     		ldr	r1, .L880+12
 22646 0158 1346     		mov	r3, r2
 22647 015a DB00     		lsls	r3, r3, #3
 22648 015c 9B1A     		subs	r3, r3, r2
 22649 015e 1B01     		lsls	r3, r3, #4
 22650 0160 0B44     		add	r3, r3, r1
 22651 0162 E333     		adds	r3, r3, #227
 22652 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22653 0166 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 494


 22654 0168 53D0     		beq	.L875
 22655              		.loc 1 3116 0 is_stmt 0 discriminator 1
 22656 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22657 016c 3349     		ldr	r1, .L880+16
 22658 016e 1346     		mov	r3, r2
 22659 0170 DB00     		lsls	r3, r3, #3
 22660 0172 9B1A     		subs	r3, r3, r2
 22661 0174 1B01     		lsls	r3, r3, #4
 22662 0176 0B44     		add	r3, r3, r1
 22663 0178 03F20F13 		addw	r3, r3, #271
 22664 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22665 017e 032B     		cmp	r3, #3
 22666 0180 0BD0     		beq	.L876
 22667              		.loc 1 3116 0 discriminator 2
 22668 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22669 0184 2D49     		ldr	r1, .L880+16
 22670 0186 1346     		mov	r3, r2
 22671 0188 DB00     		lsls	r3, r3, #3
 22672 018a 9B1A     		subs	r3, r3, r2
 22673 018c 1B01     		lsls	r3, r3, #4
 22674 018e 0B44     		add	r3, r3, r1
 22675 0190 03F20F13 		addw	r3, r3, #271
 22676 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22677 0196 002B     		cmp	r3, #0
 22678 0198 3BD1     		bne	.L875
 22679              	.L876:
3117:..\src/command_processing.c ****                 
3118:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 22680              		.loc 1 3118 0 is_stmt 1
 22681 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22682 019c 284A     		ldr	r2, .L880+20
 22683 019e 1B01     		lsls	r3, r3, #4
 22684 01a0 1344     		add	r3, r3, r2
 22685 01a2 1968     		ldr	r1, [r3]
 22686 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22687 01a6 2448     		ldr	r0, .L880+12
 22688 01a8 1346     		mov	r3, r2
 22689 01aa DB00     		lsls	r3, r3, #3
 22690 01ac 9B1A     		subs	r3, r3, r2
 22691 01ae 1B01     		lsls	r3, r3, #4
 22692 01b0 0344     		add	r3, r3, r0
 22693 01b2 E433     		adds	r3, r3, #228
 22694 01b4 1B68     		ldr	r3, [r3]
 22695 01b6 9942     		cmp	r1, r3
 22696 01b8 0DDA     		bge	.L877
3119:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 22697              		.loc 1 3119 0
 22698 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22699 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22700 01be 1E48     		ldr	r0, .L880+12
 22701 01c0 1346     		mov	r3, r2
 22702 01c2 DB00     		lsls	r3, r3, #3
 22703 01c4 9B1A     		subs	r3, r3, r2
 22704 01c6 1B01     		lsls	r3, r3, #4
 22705 01c8 0344     		add	r3, r3, r0
 22706 01ca E433     		adds	r3, r3, #228
 22707 01cc 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 495


 22708 01ce 1C48     		ldr	r0, .L880+20
 22709 01d0 0B01     		lsls	r3, r1, #4
 22710 01d2 0344     		add	r3, r3, r0
 22711 01d4 1A60     		str	r2, [r3]
 22712              	.L877:
3120:..\src/command_processing.c **** 
3121:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 22713              		.loc 1 3121 0
 22714 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22715 01d8 194A     		ldr	r2, .L880+20
 22716 01da 1B01     		lsls	r3, r3, #4
 22717 01dc 1344     		add	r3, r3, r2
 22718 01de 1968     		ldr	r1, [r3]
 22719 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22720 01e2 1548     		ldr	r0, .L880+12
 22721 01e4 1346     		mov	r3, r2
 22722 01e6 DB00     		lsls	r3, r3, #3
 22723 01e8 9B1A     		subs	r3, r3, r2
 22724 01ea 1B01     		lsls	r3, r3, #4
 22725 01ec 0344     		add	r3, r3, r0
 22726 01ee E833     		adds	r3, r3, #232
 22727 01f0 1B68     		ldr	r3, [r3]
 22728 01f2 9942     		cmp	r1, r3
 22729 01f4 0DDD     		ble	.L875
3122:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 22730              		.loc 1 3122 0
 22731 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22732 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22733 01fa 0F48     		ldr	r0, .L880+12
 22734 01fc 1346     		mov	r3, r2
 22735 01fe DB00     		lsls	r3, r3, #3
 22736 0200 9B1A     		subs	r3, r3, r2
 22737 0202 1B01     		lsls	r3, r3, #4
 22738 0204 0344     		add	r3, r3, r0
 22739 0206 E833     		adds	r3, r3, #232
 22740 0208 1A68     		ldr	r2, [r3]
 22741 020a 0D48     		ldr	r0, .L880+20
 22742 020c 0B01     		lsls	r3, r1, #4
 22743 020e 0344     		add	r3, r3, r0
 22744 0210 1A60     		str	r2, [r3]
 22745              	.L875:
3101:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22746              		.loc 1 3101 0 discriminator 2
 22747 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22748 0214 0133     		adds	r3, r3, #1
 22749 0216 BB71     		strb	r3, [r7, #6]
 22750              	.L871:
3101:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22751              		.loc 1 3101 0 is_stmt 0 discriminator 1
 22752 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22753 021a 012B     		cmp	r3, #1
 22754 021c 7FF637AF 		bls	.L878
 22755              	.L879:
 22756              	.LBE23:
3123:..\src/command_processing.c ****             }
3124:..\src/command_processing.c ****         }  
3125:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 496


3126:..\src/command_processing.c **** }
 22757              		.loc 1 3126 0 is_stmt 1
 22758 0220 00BF     		nop
 22759 0222 0837     		adds	r7, r7, #8
 22760              		.cfi_def_cfa_offset 8
 22761 0224 BD46     		mov	sp, r7
 22762              		.cfi_def_cfa_register 13
 22763              		@ sp needed
 22764 0226 90BC     		pop	{r4, r7}
 22765              		.cfi_restore 7
 22766              		.cfi_restore 4
 22767              		.cfi_def_cfa_offset 0
 22768 0228 7047     		bx	lr
 22769              	.L881:
 22770 022a 00BF     		.align	2
 22771              	.L880:
 22772 022c 00000000 		.word	g_rx
 22773 0230 00000000 		.word	last_aux_int16.11245
 22774 0234 00000000 		.word	change_ext_ref_flag
 22775 0238 00000000 		.word	c_mem
 22776 023c 00000000 		.word	g_mem
 22777 0240 00000000 		.word	g_refNew
 22778              		.cfi_endproc
 22779              	.LFE91:
 22780              		.size	cmd_set_inputs, .-cmd_set_inputs
 22781              		.section	.text.cmd_activate,"ax",%progbits
 22782              		.align	2
 22783              		.global	cmd_activate
 22784              		.thumb
 22785              		.thumb_func
 22786              		.type	cmd_activate, %function
 22787              	cmd_activate:
 22788              	.LFB92:
3127:..\src/command_processing.c **** 
3128:..\src/command_processing.c **** void cmd_activate(){
 22789              		.loc 1 3128 0
 22790              		.cfi_startproc
 22791              		@ args = 0, pretend = 0, frame = 8
 22792              		@ frame_needed = 1, uses_anonymous_args = 0
 22793 0000 80B5     		push	{r7, lr}
 22794              		.cfi_def_cfa_offset 8
 22795              		.cfi_offset 7, -8
 22796              		.cfi_offset 14, -4
 22797 0002 82B0     		sub	sp, sp, #8
 22798              		.cfi_def_cfa_offset 16
 22799 0004 00AF     		add	r7, sp, #0
 22800              		.cfi_def_cfa_register 7
3129:..\src/command_processing.c ****     
3130:..\src/command_processing.c ****     // Store new value reads
3131:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 22801              		.loc 1 3131 0
 22802 0006 2A4B     		ldr	r3, .L889
 22803 0008 5B78     		ldrb	r3, [r3, #1]
 22804 000a FB71     		strb	r3, [r7, #7]
3132:..\src/command_processing.c ****     
3133:..\src/command_processing.c ****     // Check type of control mode enabled
3134:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 497


 22805              		.loc 1 3134 0
 22806 000c 294B     		ldr	r3, .L889+4
 22807 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22808 0012 002B     		cmp	r3, #0
 22809 0014 04D0     		beq	.L883
 22810              		.loc 1 3134 0 is_stmt 0 discriminator 1
 22811 0016 274B     		ldr	r3, .L889+4
 22812 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 22813 001c 032B     		cmp	r3, #3
 22814 001e 0CD1     		bne	.L884
 22815              	.L883:
3135:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 22816              		.loc 1 3135 0 is_stmt 1
 22817 0020 244B     		ldr	r3, .L889+4
 22818 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22819 0026 1946     		mov	r1, r3
 22820 0028 234A     		ldr	r2, .L889+8
 22821 002a 0B46     		mov	r3, r1
 22822 002c 5B00     		lsls	r3, r3, #1
 22823 002e 0B44     		add	r3, r3, r1
 22824 0030 1B01     		lsls	r3, r3, #4
 22825 0032 1344     		add	r3, r3, r2
 22826 0034 1B68     		ldr	r3, [r3]
 22827 0036 214A     		ldr	r2, .L889+12
 22828 0038 1360     		str	r3, [r2]
 22829              	.L884:
3136:..\src/command_processing.c ****     }
3137:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 22830              		.loc 1 3137 0
 22831 003a FB79     		ldrb	r3, [r7, #7]
 22832 003c 03F00103 		and	r3, r3, #1
 22833 0040 DAB2     		uxtb	r2, r3
 22834 0042 1E4B     		ldr	r3, .L889+12
 22835 0044 1A73     		strb	r2, [r3, #12]
3138:..\src/command_processing.c ****     // Activate/Deactivate motor
3139:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 22836              		.loc 1 3139 0
 22837 0046 1D4B     		ldr	r3, .L889+12
 22838 0048 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22839 004a 1946     		mov	r1, r3
 22840 004c 0020     		movs	r0, #0
 22841 004e FFF7FEFF 		bl	enable_motor
3140:..\src/command_processing.c ****     
3141:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22842              		.loc 1 3141 0
 22843 0052 184B     		ldr	r3, .L889+4
 22844 0054 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22845 0058 012B     		cmp	r3, #1
 22846 005a 24D1     		bne	.L888
3142:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 22847              		.loc 1 3142 0
 22848 005c 154B     		ldr	r3, .L889+4
 22849 005e 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22850 0062 002B     		cmp	r3, #0
 22851 0064 04D0     		beq	.L886
 22852              		.loc 1 3142 0 is_stmt 0 discriminator 1
 22853 0066 134B     		ldr	r3, .L889+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 498


 22854 0068 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 22855 006c 032B     		cmp	r3, #3
 22856 006e 0CD1     		bne	.L887
 22857              	.L886:
3143:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 22858              		.loc 1 3143 0 is_stmt 1
 22859 0070 104B     		ldr	r3, .L889+4
 22860 0072 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22861 0076 1946     		mov	r1, r3
 22862 0078 0F4A     		ldr	r2, .L889+8
 22863 007a 0B46     		mov	r3, r1
 22864 007c 5B00     		lsls	r3, r3, #1
 22865 007e 0B44     		add	r3, r3, r1
 22866 0080 1B01     		lsls	r3, r3, #4
 22867 0082 1344     		add	r3, r3, r2
 22868 0084 1B68     		ldr	r3, [r3]
 22869 0086 0D4A     		ldr	r2, .L889+12
 22870 0088 1361     		str	r3, [r2, #16]
 22871              	.L887:
3144:..\src/command_processing.c ****         }
3145:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 22872              		.loc 1 3145 0
 22873 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22874 008c 5B08     		lsrs	r3, r3, #1
 22875 008e DBB2     		uxtb	r3, r3
 22876 0090 03F00103 		and	r3, r3, #1
 22877 0094 DAB2     		uxtb	r2, r3
 22878 0096 094B     		ldr	r3, .L889+12
 22879 0098 1A77     		strb	r2, [r3, #28]
3146:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 22880              		.loc 1 3146 0
 22881 009a 084B     		ldr	r3, .L889+12
 22882 009c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22883 009e 1946     		mov	r1, r3
 22884 00a0 0120     		movs	r0, #1
 22885 00a2 FFF7FEFF 		bl	enable_motor
 22886              	.L888:
3147:..\src/command_processing.c ****     }
3148:..\src/command_processing.c ****     
3149:..\src/command_processing.c **** }
 22887              		.loc 1 3149 0
 22888 00a6 00BF     		nop
 22889 00a8 0837     		adds	r7, r7, #8
 22890              		.cfi_def_cfa_offset 8
 22891 00aa BD46     		mov	sp, r7
 22892              		.cfi_def_cfa_register 13
 22893              		@ sp needed
 22894 00ac 80BD     		pop	{r7, pc}
 22895              	.L890:
 22896 00ae 00BF     		.align	2
 22897              	.L889:
 22898 00b0 00000000 		.word	g_rx
 22899 00b4 00000000 		.word	g_mem
 22900 00b8 00000000 		.word	g_meas
 22901 00bc 00000000 		.word	g_refNew
 22902              		.cfi_endproc
 22903              	.LFE92:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 499


 22904              		.size	cmd_activate, .-cmd_activate
 22905              		.section	.text.cmd_get_activate,"ax",%progbits
 22906              		.align	2
 22907              		.global	cmd_get_activate
 22908              		.thumb
 22909              		.thumb_func
 22910              		.type	cmd_get_activate, %function
 22911              	cmd_get_activate:
 22912              	.LFB93:
3150:..\src/command_processing.c **** 
3151:..\src/command_processing.c **** void cmd_get_activate(){
 22913              		.loc 1 3151 0
 22914              		.cfi_startproc
 22915              		@ args = 0, pretend = 0, frame = 8
 22916              		@ frame_needed = 1, uses_anonymous_args = 0
 22917 0000 80B5     		push	{r7, lr}
 22918              		.cfi_def_cfa_offset 8
 22919              		.cfi_offset 7, -8
 22920              		.cfi_offset 14, -4
 22921 0002 82B0     		sub	sp, sp, #8
 22922              		.cfi_def_cfa_offset 16
 22923 0004 00AF     		add	r7, sp, #0
 22924              		.cfi_def_cfa_register 7
3152:..\src/command_processing.c ****     
3153:..\src/command_processing.c ****     uint8 packet_data[3];
3154:..\src/command_processing.c **** 
3155:..\src/command_processing.c ****     // Header        
3156:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 22925              		.loc 1 3156 0
 22926 0006 8123     		movs	r3, #129
 22927 0008 3B71     		strb	r3, [r7, #4]
3157:..\src/command_processing.c ****     
3158:..\src/command_processing.c ****     // Fill payload
3159:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22928              		.loc 1 3159 0
 22929 000a 124B     		ldr	r3, .L894
 22930 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22931 0010 012B     		cmp	r3, #1
 22932 0012 0BD1     		bne	.L892
3160:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 22933              		.loc 1 3160 0
 22934 0014 104B     		ldr	r3, .L894+4
 22935 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22936 0018 5B00     		lsls	r3, r3, #1
 22937 001a 5AB2     		sxtb	r2, r3
 22938 001c 0E4B     		ldr	r3, .L894+4
 22939 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22940 0020 5BB2     		sxtb	r3, r3
 22941 0022 1343     		orrs	r3, r3, r2
 22942 0024 5BB2     		sxtb	r3, r3
 22943 0026 DBB2     		uxtb	r3, r3
 22944 0028 7B71     		strb	r3, [r7, #5]
 22945 002a 02E0     		b	.L893
 22946              	.L892:
3161:..\src/command_processing.c ****     } 
3162:..\src/command_processing.c ****     else {
3163:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 500


 22947              		.loc 1 3163 0
 22948 002c 0A4B     		ldr	r3, .L894+4
 22949 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22950 0030 7B71     		strb	r3, [r7, #5]
 22951              	.L893:
3164:..\src/command_processing.c ****     }
3165:..\src/command_processing.c ****     
3166:..\src/command_processing.c ****     // Calculate checksum
3167:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 22952              		.loc 1 3167 0
 22953 0032 3B1D     		adds	r3, r7, #4
 22954 0034 0221     		movs	r1, #2
 22955 0036 1846     		mov	r0, r3
 22956 0038 FFF7FEFF 		bl	LCRChecksum
 22957 003c 0346     		mov	r3, r0
 22958 003e BB71     		strb	r3, [r7, #6]
3168:..\src/command_processing.c ****     
3169:..\src/command_processing.c ****     // Send package to UART
3170:..\src/command_processing.c ****     commWrite(packet_data, 3);
 22959              		.loc 1 3170 0
 22960 0040 3B1D     		adds	r3, r7, #4
 22961 0042 0321     		movs	r1, #3
 22962 0044 1846     		mov	r0, r3
 22963 0046 FFF7FEFF 		bl	commWrite
3171:..\src/command_processing.c **** 
3172:..\src/command_processing.c **** }
 22964              		.loc 1 3172 0
 22965 004a 00BF     		nop
 22966 004c 0837     		adds	r7, r7, #8
 22967              		.cfi_def_cfa_offset 8
 22968 004e BD46     		mov	sp, r7
 22969              		.cfi_def_cfa_register 13
 22970              		@ sp needed
 22971 0050 80BD     		pop	{r7, pc}
 22972              	.L895:
 22973 0052 00BF     		.align	2
 22974              	.L894:
 22975 0054 00000000 		.word	g_mem
 22976 0058 00000000 		.word	g_ref
 22977              		.cfi_endproc
 22978              	.LFE93:
 22979              		.size	cmd_get_activate, .-cmd_get_activate
 22980              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 22981              		.align	2
 22982              		.global	cmd_get_curr_and_meas
 22983              		.thumb
 22984              		.thumb_func
 22985              		.type	cmd_get_curr_and_meas, %function
 22986              	cmd_get_curr_and_meas:
 22987              	.LFB94:
3173:..\src/command_processing.c **** 
3174:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 22988              		.loc 1 3174 0
 22989              		.cfi_startproc
 22990              		@ args = 0, pretend = 0, frame = 16
 22991              		@ frame_needed = 1, uses_anonymous_args = 0
 22992 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 501


 22993              		.cfi_def_cfa_offset 12
 22994              		.cfi_offset 4, -12
 22995              		.cfi_offset 7, -8
 22996              		.cfi_offset 14, -4
 22997 0002 85B0     		sub	sp, sp, #20
 22998              		.cfi_def_cfa_offset 32
 22999 0004 00AF     		add	r7, sp, #0
 23000              		.cfi_def_cfa_register 7
3175:..\src/command_processing.c ****     
3176:..\src/command_processing.c ****     uint8 CYDATA index;
3177:..\src/command_processing.c ****     int16 aux_int16;
3178:..\src/command_processing.c ****    
3179:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3180:..\src/command_processing.c ****     
3181:..\src/command_processing.c ****     uint8 packet_data[12]; 
3182:..\src/command_processing.c **** 
3183:..\src/command_processing.c ****     //Header package
3184:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 23001              		.loc 1 3184 0
 23002 0006 8623     		movs	r3, #134
 23003 0008 3B70     		strb	r3, [r7]
3185:..\src/command_processing.c **** 
3186:..\src/command_processing.c ****     // Currents
3187:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 23004              		.loc 1 3187 0
 23005 000a 494B     		ldr	r3, .L901
 23006 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23007 0010 1946     		mov	r1, r3
 23008 0012 484A     		ldr	r2, .L901+4
 23009 0014 0B46     		mov	r3, r1
 23010 0016 5B00     		lsls	r3, r3, #1
 23011 0018 0B44     		add	r3, r3, r1
 23012 001a 1B01     		lsls	r3, r3, #4
 23013 001c 1344     		add	r3, r3, r2
 23014 001e 0C33     		adds	r3, r3, #12
 23015 0020 1B68     		ldr	r3, [r3]
 23016 0022 1BB2     		sxth	r3, r3
 23017 0024 BB81     		strh	r3, [r7, #12]	@ movhi
3188:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23018              		.loc 1 3188 0
 23019 0026 07F10C03 		add	r3, r7, #12
 23020 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23021 002c BB70     		strb	r3, [r7, #2]
3189:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23022              		.loc 1 3189 0
 23023 002e 07F10C03 		add	r3, r7, #12
 23024 0032 0133     		adds	r3, r3, #1
 23025 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23026 0036 7B70     		strb	r3, [r7, #1]
3190:..\src/command_processing.c ****     
3191:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23027              		.loc 1 3191 0
 23028 0038 3F4B     		ldr	r3, .L901+8
 23029 003a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23030 003e 012B     		cmp	r3, #1
 23031 0040 0ED1     		bne	.L897
3192:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 502


 23032              		.loc 1 3192 0
 23033 0042 3B4B     		ldr	r3, .L901
 23034 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23035 0048 1946     		mov	r1, r3
 23036 004a 3A4A     		ldr	r2, .L901+4
 23037 004c 0B46     		mov	r3, r1
 23038 004e 5B00     		lsls	r3, r3, #1
 23039 0050 0B44     		add	r3, r3, r1
 23040 0052 1B01     		lsls	r3, r3, #4
 23041 0054 1344     		add	r3, r3, r2
 23042 0056 0C33     		adds	r3, r3, #12
 23043 0058 1B68     		ldr	r3, [r3]
 23044 005a 1BB2     		sxth	r3, r3
 23045 005c BB81     		strh	r3, [r7, #12]	@ movhi
 23046 005e 0DE0     		b	.L898
 23047              	.L897:
3193:..\src/command_processing.c ****     }
3194:..\src/command_processing.c ****     else {
3195:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23048              		.loc 1 3195 0
 23049 0060 334B     		ldr	r3, .L901
 23050 0062 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23051 0066 1946     		mov	r1, r3
 23052 0068 324A     		ldr	r2, .L901+4
 23053 006a 0B46     		mov	r3, r1
 23054 006c 5B00     		lsls	r3, r3, #1
 23055 006e 0B44     		add	r3, r3, r1
 23056 0070 1B01     		lsls	r3, r3, #4
 23057 0072 1344     		add	r3, r3, r2
 23058 0074 1033     		adds	r3, r3, #16
 23059 0076 1B68     		ldr	r3, [r3]
 23060 0078 1BB2     		sxth	r3, r3
 23061 007a BB81     		strh	r3, [r7, #12]	@ movhi
 23062              	.L898:
3196:..\src/command_processing.c ****     }
3197:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23063              		.loc 1 3197 0
 23064 007c 07F10C03 		add	r3, r7, #12
 23065 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23066 0082 3B71     		strb	r3, [r7, #4]
3198:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23067              		.loc 1 3198 0
 23068 0084 07F10C03 		add	r3, r7, #12
 23069 0088 0133     		adds	r3, r3, #1
 23070 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23071 008c FB70     		strb	r3, [r7, #3]
3199:..\src/command_processing.c **** 
3200:..\src/command_processing.c ****     // Positions
3201:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23072              		.loc 1 3201 0
 23073 008e 0323     		movs	r3, #3
 23074 0090 FB73     		strb	r3, [r7, #15]
 23075 0092 37E0     		b	.L899
 23076              	.L900:
3202:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23077              		.loc 1 3202 0
 23078 0094 264B     		ldr	r3, .L901
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 503


 23079 0096 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23080 009a 1846     		mov	r0, r3
 23081 009c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23082 009e 2549     		ldr	r1, .L901+4
 23083 00a0 0346     		mov	r3, r0
 23084 00a2 5B00     		lsls	r3, r3, #1
 23085 00a4 0344     		add	r3, r3, r0
 23086 00a6 9B00     		lsls	r3, r3, #2
 23087 00a8 1344     		add	r3, r3, r2
 23088 00aa 51F82320 		ldr	r2, [r1, r3, lsl #2]
 23089 00ae 204B     		ldr	r3, .L901
 23090 00b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23091 00b4 1C46     		mov	r4, r3
 23092 00b6 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23093 00b8 1D48     		ldr	r0, .L901
 23094 00ba 2346     		mov	r3, r4
 23095 00bc 5B00     		lsls	r3, r3, #1
 23096 00be 2344     		add	r3, r3, r4
 23097 00c0 1B01     		lsls	r3, r3, #4
 23098 00c2 0344     		add	r3, r3, r0
 23099 00c4 0B44     		add	r3, r3, r1
 23100 00c6 03F29513 		addw	r3, r3, #405
 23101 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23102 00cc 42FA03F3 		asr	r3, r2, r3
 23103 00d0 1BB2     		sxth	r3, r3
 23104 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
3203:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23105              		.loc 1 3203 0
 23106 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23107 00d6 5B00     		lsls	r3, r3, #1
 23108 00d8 0633     		adds	r3, r3, #6
 23109 00da 07F10C02 		add	r2, r7, #12
 23110 00de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23111 00e0 07F11001 		add	r1, r7, #16
 23112 00e4 0B44     		add	r3, r3, r1
 23113 00e6 03F8102C 		strb	r2, [r3, #-16]
3204:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23114              		.loc 1 3204 0
 23115 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23116 00ec 5B00     		lsls	r3, r3, #1
 23117 00ee 5A1D     		adds	r2, r3, #5
 23118 00f0 07F10C03 		add	r3, r7, #12
 23119 00f4 0133     		adds	r3, r3, #1
 23120 00f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23121 00f8 07F11003 		add	r3, r7, #16
 23122 00fc 1344     		add	r3, r3, r2
 23123 00fe 0A46     		mov	r2, r1
 23124 0100 03F8102C 		strb	r2, [r3, #-16]
 23125              	.L899:
3201:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23126              		.loc 1 3201 0 discriminator 1
 23127 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23128 0106 5A1E     		subs	r2, r3, #1
 23129 0108 FA73     		strb	r2, [r7, #15]
 23130 010a 002B     		cmp	r3, #0
 23131 010c C2D1     		bne	.L900
3205:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 504


3206:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3207:..\src/command_processing.c ****         
3208:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23132              		.loc 1 3208 0
 23133 010e 3B46     		mov	r3, r7
 23134 0110 0B21     		movs	r1, #11
 23135 0112 1846     		mov	r0, r3
 23136 0114 FFF7FEFF 		bl	LCRChecksum
 23137 0118 0346     		mov	r3, r0
 23138 011a FB72     		strb	r3, [r7, #11]
3209:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23139              		.loc 1 3209 0
 23140 011c 3B46     		mov	r3, r7
 23141 011e 0C21     		movs	r1, #12
 23142 0120 1846     		mov	r0, r3
 23143 0122 FFF7FEFF 		bl	commWrite
3210:..\src/command_processing.c ****    
3211:..\src/command_processing.c **** }
 23144              		.loc 1 3211 0
 23145 0126 00BF     		nop
 23146 0128 1437     		adds	r7, r7, #20
 23147              		.cfi_def_cfa_offset 12
 23148 012a BD46     		mov	sp, r7
 23149              		.cfi_def_cfa_register 13
 23150              		@ sp needed
 23151 012c 90BD     		pop	{r4, r7, pc}
 23152              	.L902:
 23153 012e 00BF     		.align	2
 23154              	.L901:
 23155 0130 00000000 		.word	g_mem
 23156 0134 00000000 		.word	g_measOld
 23157 0138 00000000 		.word	c_mem
 23158              		.cfi_endproc
 23159              	.LFE94:
 23160              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23161              		.section	.text.cmd_get_currents,"ax",%progbits
 23162              		.align	2
 23163              		.global	cmd_get_currents
 23164              		.thumb
 23165              		.thumb_func
 23166              		.type	cmd_get_currents, %function
 23167              	cmd_get_currents:
 23168              	.LFB95:
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c **** void cmd_get_currents(){
 23169              		.loc 1 3213 0
 23170              		.cfi_startproc
 23171              		@ args = 0, pretend = 0, frame = 16
 23172              		@ frame_needed = 1, uses_anonymous_args = 0
 23173 0000 80B5     		push	{r7, lr}
 23174              		.cfi_def_cfa_offset 8
 23175              		.cfi_offset 7, -8
 23176              		.cfi_offset 14, -4
 23177 0002 84B0     		sub	sp, sp, #16
 23178              		.cfi_def_cfa_offset 24
 23179 0004 00AF     		add	r7, sp, #0
 23180              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 505


3214:..\src/command_processing.c ****     
3215:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3216:..\src/command_processing.c ****     
3217:..\src/command_processing.c ****     uint8 packet_data[6]; 
3218:..\src/command_processing.c ****     int16 aux_int16;
3219:..\src/command_processing.c ****     
3220:..\src/command_processing.c ****     //Header package
3221:..\src/command_processing.c **** 
3222:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23181              		.loc 1 3222 0
 23182 0006 8523     		movs	r3, #133
 23183 0008 3B72     		strb	r3, [r7, #8]
3223:..\src/command_processing.c **** 
3224:..\src/command_processing.c ****     // Currents
3225:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23184              		.loc 1 3225 0
 23185 000a 284B     		ldr	r3, .L906
 23186 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23187 0010 1946     		mov	r1, r3
 23188 0012 274A     		ldr	r2, .L906+4
 23189 0014 0B46     		mov	r3, r1
 23190 0016 5B00     		lsls	r3, r3, #1
 23191 0018 0B44     		add	r3, r3, r1
 23192 001a 1B01     		lsls	r3, r3, #4
 23193 001c 1344     		add	r3, r3, r2
 23194 001e 0C33     		adds	r3, r3, #12
 23195 0020 1B68     		ldr	r3, [r3]
 23196 0022 1BB2     		sxth	r3, r3
 23197 0024 FB80     		strh	r3, [r7, #6]	@ movhi
3226:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23198              		.loc 1 3226 0
 23199 0026 BB1D     		adds	r3, r7, #6
 23200 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23201 002a BB72     		strb	r3, [r7, #10]
3227:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23202              		.loc 1 3227 0
 23203 002c BB1D     		adds	r3, r7, #6
 23204 002e 0133     		adds	r3, r3, #1
 23205 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23206 0032 7B72     		strb	r3, [r7, #9]
3228:..\src/command_processing.c ****     
3229:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23207              		.loc 1 3229 0
 23208 0034 1F4B     		ldr	r3, .L906+8
 23209 0036 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23210 003a 012B     		cmp	r3, #1
 23211 003c 0ED1     		bne	.L904
3230:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23212              		.loc 1 3230 0
 23213 003e 1B4B     		ldr	r3, .L906
 23214 0040 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23215 0044 1946     		mov	r1, r3
 23216 0046 1A4A     		ldr	r2, .L906+4
 23217 0048 0B46     		mov	r3, r1
 23218 004a 5B00     		lsls	r3, r3, #1
 23219 004c 0B44     		add	r3, r3, r1
 23220 004e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 506


 23221 0050 1344     		add	r3, r3, r2
 23222 0052 0C33     		adds	r3, r3, #12
 23223 0054 1B68     		ldr	r3, [r3]
 23224 0056 1BB2     		sxth	r3, r3
 23225 0058 FB80     		strh	r3, [r7, #6]	@ movhi
 23226 005a 0DE0     		b	.L905
 23227              	.L904:
3231:..\src/command_processing.c ****     }
3232:..\src/command_processing.c ****     else {
3233:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23228              		.loc 1 3233 0
 23229 005c 134B     		ldr	r3, .L906
 23230 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23231 0062 1946     		mov	r1, r3
 23232 0064 124A     		ldr	r2, .L906+4
 23233 0066 0B46     		mov	r3, r1
 23234 0068 5B00     		lsls	r3, r3, #1
 23235 006a 0B44     		add	r3, r3, r1
 23236 006c 1B01     		lsls	r3, r3, #4
 23237 006e 1344     		add	r3, r3, r2
 23238 0070 1033     		adds	r3, r3, #16
 23239 0072 1B68     		ldr	r3, [r3]
 23240 0074 1BB2     		sxth	r3, r3
 23241 0076 FB80     		strh	r3, [r7, #6]	@ movhi
 23242              	.L905:
3234:..\src/command_processing.c ****     }
3235:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23243              		.loc 1 3235 0
 23244 0078 BB1D     		adds	r3, r7, #6
 23245 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23246 007c 3B73     		strb	r3, [r7, #12]
3236:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23247              		.loc 1 3236 0
 23248 007e BB1D     		adds	r3, r7, #6
 23249 0080 0133     		adds	r3, r3, #1
 23250 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23251 0084 FB72     		strb	r3, [r7, #11]
3237:..\src/command_processing.c **** 
3238:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3239:..\src/command_processing.c **** 
3240:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23252              		.loc 1 3240 0
 23253 0086 07F10803 		add	r3, r7, #8
 23254 008a 0521     		movs	r1, #5
 23255 008c 1846     		mov	r0, r3
 23256 008e FFF7FEFF 		bl	LCRChecksum
 23257 0092 0346     		mov	r3, r0
 23258 0094 7B73     		strb	r3, [r7, #13]
3241:..\src/command_processing.c ****     
3242:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23259              		.loc 1 3242 0
 23260 0096 07F10803 		add	r3, r7, #8
 23261 009a 0621     		movs	r1, #6
 23262 009c 1846     		mov	r0, r3
 23263 009e FFF7FEFF 		bl	commWrite
3243:..\src/command_processing.c **** }
 23264              		.loc 1 3243 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 507


 23265 00a2 00BF     		nop
 23266 00a4 1037     		adds	r7, r7, #16
 23267              		.cfi_def_cfa_offset 8
 23268 00a6 BD46     		mov	sp, r7
 23269              		.cfi_def_cfa_register 13
 23270              		@ sp needed
 23271 00a8 80BD     		pop	{r7, pc}
 23272              	.L907:
 23273 00aa 00BF     		.align	2
 23274              	.L906:
 23275 00ac 00000000 		.word	g_mem
 23276 00b0 00000000 		.word	g_measOld
 23277 00b4 00000000 		.word	c_mem
 23278              		.cfi_endproc
 23279              	.LFE95:
 23280              		.size	cmd_get_currents, .-cmd_get_currents
 23281              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23282              		.align	2
 23283              		.global	cmd_get_currents_for_cuff
 23284              		.thumb
 23285              		.thumb_func
 23286              		.type	cmd_get_currents_for_cuff, %function
 23287              	cmd_get_currents_for_cuff:
 23288              	.LFB96:
3244:..\src/command_processing.c **** 
3245:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23289              		.loc 1 3245 0
 23290              		.cfi_startproc
 23291              		@ args = 0, pretend = 0, frame = 8
 23292              		@ frame_needed = 1, uses_anonymous_args = 0
 23293 0000 80B5     		push	{r7, lr}
 23294              		.cfi_def_cfa_offset 8
 23295              		.cfi_offset 7, -8
 23296              		.cfi_offset 14, -4
 23297 0002 82B0     		sub	sp, sp, #8
 23298              		.cfi_def_cfa_offset 16
 23299 0004 00AF     		add	r7, sp, #0
 23300              		.cfi_def_cfa_register 7
3246:..\src/command_processing.c ****     
3247:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3248:..\src/command_processing.c ****     
3249:..\src/command_processing.c ****     uint8 packet_data[4]; 
3250:..\src/command_processing.c ****     int16 aux_int16;
3251:..\src/command_processing.c ****     
3252:..\src/command_processing.c ****     //Header package
3253:..\src/command_processing.c **** 
3254:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 23301              		.loc 1 3254 0
 23302 0006 8E23     		movs	r3, #142
 23303 0008 3B71     		strb	r3, [r7, #4]
3255:..\src/command_processing.c **** 
3256:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23304              		.loc 1 3256 0
 23305 000a 124B     		ldr	r3, .L909
 23306 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23307 0010 1946     		mov	r1, r3
 23308 0012 114A     		ldr	r2, .L909+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 508


 23309 0014 0B46     		mov	r3, r1
 23310 0016 5B00     		lsls	r3, r3, #1
 23311 0018 0B44     		add	r3, r3, r1
 23312 001a 1B01     		lsls	r3, r3, #4
 23313 001c 1344     		add	r3, r3, r2
 23314 001e 1033     		adds	r3, r3, #16
 23315 0020 1B68     		ldr	r3, [r3]
 23316 0022 1BB2     		sxth	r3, r3
 23317 0024 7B80     		strh	r3, [r7, #2]	@ movhi
3257:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23318              		.loc 1 3257 0
 23319 0026 BB1C     		adds	r3, r7, #2
 23320 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23321 002a BB71     		strb	r3, [r7, #6]
3258:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23322              		.loc 1 3258 0
 23323 002c BB1C     		adds	r3, r7, #2
 23324 002e 0133     		adds	r3, r3, #1
 23325 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23326 0032 7B71     		strb	r3, [r7, #5]
3259:..\src/command_processing.c **** 
3260:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3261:..\src/command_processing.c **** 
3262:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23327              		.loc 1 3262 0
 23328 0034 3B1D     		adds	r3, r7, #4
 23329 0036 0321     		movs	r1, #3
 23330 0038 1846     		mov	r0, r3
 23331 003a FFF7FEFF 		bl	LCRChecksum
 23332 003e 0346     		mov	r3, r0
 23333 0040 FB71     		strb	r3, [r7, #7]
3263:..\src/command_processing.c ****     
3264:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 23334              		.loc 1 3264 0
 23335 0042 3B1D     		adds	r3, r7, #4
 23336 0044 0421     		movs	r1, #4
 23337 0046 1846     		mov	r0, r3
 23338 0048 FFF7FEFF 		bl	commWrite_to_cuff
3265:..\src/command_processing.c **** }
 23339              		.loc 1 3265 0
 23340 004c 00BF     		nop
 23341 004e 0837     		adds	r7, r7, #8
 23342              		.cfi_def_cfa_offset 8
 23343 0050 BD46     		mov	sp, r7
 23344              		.cfi_def_cfa_register 13
 23345              		@ sp needed
 23346 0052 80BD     		pop	{r7, pc}
 23347              	.L910:
 23348              		.align	2
 23349              	.L909:
 23350 0054 00000000 		.word	g_mem
 23351 0058 00000000 		.word	g_measOld
 23352              		.cfi_endproc
 23353              	.LFE96:
 23354              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23355              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23356              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 509


 23357              		.global	cmd_set_baudrate
 23358              		.thumb
 23359              		.thumb_func
 23360              		.type	cmd_set_baudrate, %function
 23361              	cmd_set_baudrate:
 23362              	.LFB97:
3266:..\src/command_processing.c **** 
3267:..\src/command_processing.c **** void cmd_set_baudrate(){
 23363              		.loc 1 3267 0
 23364              		.cfi_startproc
 23365              		@ args = 0, pretend = 0, frame = 0
 23366              		@ frame_needed = 1, uses_anonymous_args = 0
 23367 0000 80B5     		push	{r7, lr}
 23368              		.cfi_def_cfa_offset 8
 23369              		.cfi_offset 7, -8
 23370              		.cfi_offset 14, -4
 23371 0002 00AF     		add	r7, sp, #0
 23372              		.cfi_def_cfa_register 7
3268:..\src/command_processing.c ****     
3269:..\src/command_processing.c ****     // Set BaudRate
3270:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23373              		.loc 1 3270 0
 23374 0004 094B     		ldr	r3, .L916
 23375 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23376 0008 094B     		ldr	r3, .L916+4
 23377 000a 83F8AA20 		strb	r2, [r3, #170]
3271:..\src/command_processing.c ****     
3272:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23378              		.loc 1 3272 0
 23379 000e 074B     		ldr	r3, .L916
 23380 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23381 0012 0D2B     		cmp	r3, #13
 23382 0014 04D1     		bne	.L915
3273:..\src/command_processing.c ****         case 13:
3274:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 23383              		.loc 1 3274 0
 23384 0016 0121     		movs	r1, #1
 23385 0018 0C20     		movs	r0, #12
 23386 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3275:..\src/command_processing.c ****             break;
 23387              		.loc 1 3275 0
 23388 001e 03E0     		b	.L914
 23389              	.L915:
3276:..\src/command_processing.c ****         default:
3277:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23390              		.loc 1 3277 0
 23391 0020 0121     		movs	r1, #1
 23392 0022 0220     		movs	r0, #2
 23393 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23394              	.L914:
3278:..\src/command_processing.c ****     }
3279:..\src/command_processing.c **** }
 23395              		.loc 1 3279 0
 23396 0028 00BF     		nop
 23397 002a 80BD     		pop	{r7, pc}
 23398              	.L917:
 23399              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 510


 23400              	.L916:
 23401 002c 00000000 		.word	g_rx
 23402 0030 00000000 		.word	c_mem
 23403              		.cfi_endproc
 23404              	.LFE97:
 23405              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23406              		.section	.text.cmd_ping,"ax",%progbits
 23407              		.align	2
 23408              		.global	cmd_ping
 23409              		.thumb
 23410              		.thumb_func
 23411              		.type	cmd_ping, %function
 23412              	cmd_ping:
 23413              	.LFB98:
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c **** void cmd_ping(){
 23414              		.loc 1 3281 0
 23415              		.cfi_startproc
 23416              		@ args = 0, pretend = 0, frame = 8
 23417              		@ frame_needed = 1, uses_anonymous_args = 0
 23418 0000 80B5     		push	{r7, lr}
 23419              		.cfi_def_cfa_offset 8
 23420              		.cfi_offset 7, -8
 23421              		.cfi_offset 14, -4
 23422 0002 82B0     		sub	sp, sp, #8
 23423              		.cfi_def_cfa_offset 16
 23424 0004 00AF     		add	r7, sp, #0
 23425              		.cfi_def_cfa_register 7
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     uint8 packet_data[2];
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c ****     // Header
3286:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23426              		.loc 1 3286 0
 23427 0006 0023     		movs	r3, #0
 23428 0008 3B71     		strb	r3, [r7, #4]
3287:..\src/command_processing.c ****     
3288:..\src/command_processing.c ****     // Load Payload
3289:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23429              		.loc 1 3289 0
 23430 000a 0023     		movs	r3, #0
 23431 000c 7B71     		strb	r3, [r7, #5]
3290:..\src/command_processing.c **** 
3291:..\src/command_processing.c ****     // Send Package to uart
3292:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23432              		.loc 1 3292 0
 23433 000e 3B1D     		adds	r3, r7, #4
 23434 0010 0221     		movs	r1, #2
 23435 0012 1846     		mov	r0, r3
 23436 0014 FFF7FEFF 		bl	commWrite
3293:..\src/command_processing.c **** }
 23437              		.loc 1 3293 0
 23438 0018 00BF     		nop
 23439 001a 0837     		adds	r7, r7, #8
 23440              		.cfi_def_cfa_offset 8
 23441 001c BD46     		mov	sp, r7
 23442              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 511


 23443              		@ sp needed
 23444 001e 80BD     		pop	{r7, pc}
 23445              		.cfi_endproc
 23446              	.LFE98:
 23447              		.size	cmd_ping, .-cmd_ping
 23448              		.section	.text.cmd_get_inputs,"ax",%progbits
 23449              		.align	2
 23450              		.global	cmd_get_inputs
 23451              		.thumb
 23452              		.thumb_func
 23453              		.type	cmd_get_inputs, %function
 23454              	cmd_get_inputs:
 23455              	.LFB99:
3294:..\src/command_processing.c **** 
3295:..\src/command_processing.c **** void cmd_get_inputs(){
 23456              		.loc 1 3295 0
 23457              		.cfi_startproc
 23458              		@ args = 0, pretend = 0, frame = 16
 23459              		@ frame_needed = 1, uses_anonymous_args = 0
 23460 0000 80B5     		push	{r7, lr}
 23461              		.cfi_def_cfa_offset 8
 23462              		.cfi_offset 7, -8
 23463              		.cfi_offset 14, -4
 23464 0002 84B0     		sub	sp, sp, #16
 23465              		.cfi_def_cfa_offset 24
 23466 0004 00AF     		add	r7, sp, #0
 23467              		.cfi_def_cfa_register 7
3296:..\src/command_processing.c **** 
3297:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3298:..\src/command_processing.c **** 
3299:..\src/command_processing.c ****     uint8 packet_data[6]; 
3300:..\src/command_processing.c ****     int16 aux_int16;
3301:..\src/command_processing.c ****     
3302:..\src/command_processing.c ****     //Header package
3303:..\src/command_processing.c **** 
3304:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23468              		.loc 1 3304 0
 23469 0006 8323     		movs	r3, #131
 23470 0008 3B72     		strb	r3, [r7, #8]
3305:..\src/command_processing.c ****         
3306:..\src/command_processing.c ****     aux_int16 = (int16) change_ext_ref_flag; //(g_refOld[0].pos  >> g_mem.enc[g_mem.motor[0].encode
 23471              		.loc 1 3306 0
 23472 000a 0E4B     		ldr	r3, .L920
 23473 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23474 000e 1BB2     		sxth	r3, r3
 23475 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3307:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23476              		.loc 1 3307 0
 23477 0012 BB1D     		adds	r3, r7, #6
 23478 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23479 0016 BB72     		strb	r3, [r7, #10]
3308:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23480              		.loc 1 3308 0
 23481 0018 BB1D     		adds	r3, r7, #6
 23482 001a 0133     		adds	r3, r3, #1
 23483 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23484 001e 7B72     		strb	r3, [r7, #9]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 512


3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3311:..\src/command_processing.c **** 
3312:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23485              		.loc 1 3312 0
 23486 0020 07F10803 		add	r3, r7, #8
 23487 0024 0521     		movs	r1, #5
 23488 0026 1846     		mov	r0, r3
 23489 0028 FFF7FEFF 		bl	LCRChecksum
 23490 002c 0346     		mov	r3, r0
 23491 002e 7B73     		strb	r3, [r7, #13]
3313:..\src/command_processing.c **** 
3314:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23492              		.loc 1 3314 0
 23493 0030 07F10803 		add	r3, r7, #8
 23494 0034 0621     		movs	r1, #6
 23495 0036 1846     		mov	r0, r3
 23496 0038 FFF7FEFF 		bl	commWrite
3315:..\src/command_processing.c **** }
 23497              		.loc 1 3315 0
 23498 003c 00BF     		nop
 23499 003e 1037     		adds	r7, r7, #16
 23500              		.cfi_def_cfa_offset 8
 23501 0040 BD46     		mov	sp, r7
 23502              		.cfi_def_cfa_register 13
 23503              		@ sp needed
 23504 0042 80BD     		pop	{r7, pc}
 23505              	.L921:
 23506              		.align	2
 23507              	.L920:
 23508 0044 00000000 		.word	change_ext_ref_flag
 23509              		.cfi_endproc
 23510              	.LFE99:
 23511              		.size	cmd_get_inputs, .-cmd_get_inputs
 23512              		.section	.text.cmd_store_params,"ax",%progbits
 23513              		.align	2
 23514              		.global	cmd_store_params
 23515              		.thumb
 23516              		.thumb_func
 23517              		.type	cmd_store_params, %function
 23518              	cmd_store_params:
 23519              	.LFB100:
3316:..\src/command_processing.c **** 
3317:..\src/command_processing.c **** void cmd_store_params(){
 23520              		.loc 1 3317 0
 23521              		.cfi_startproc
 23522              		@ args = 0, pretend = 0, frame = 16
 23523              		@ frame_needed = 1, uses_anonymous_args = 0
 23524 0000 80B5     		push	{r7, lr}
 23525              		.cfi_def_cfa_offset 8
 23526              		.cfi_offset 7, -8
 23527              		.cfi_offset 14, -4
 23528 0002 84B0     		sub	sp, sp, #16
 23529              		.cfi_def_cfa_offset 24
 23530 0004 00AF     		add	r7, sp, #0
 23531              		.cfi_def_cfa_register 7
3318:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 513


3319:..\src/command_processing.c ****     // Check input mode enabled
3320:..\src/command_processing.c ****     uint32 off_1;
3321:..\src/command_processing.c ****     float mult_1;
3322:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 23532              		.loc 1 3322 0
 23533 0006 0223     		movs	r3, #2
 23534 0008 FB73     		strb	r3, [r7, #15]
3323:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3324:..\src/command_processing.c ****     uint8 CYDATA old_id;
3325:..\src/command_processing.c ****     
3326:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 23535              		.loc 1 3326 0
 23536 000a 674B     		ldr	r3, .L933
 23537 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 23538 0010 002B     		cmp	r3, #0
 23539 0012 7CD1     		bne	.L923
3327:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 23540              		.loc 1 3327 0
 23541 0014 644B     		ldr	r3, .L933
 23542 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23543 001a 1946     		mov	r1, r3
 23544 001c 624A     		ldr	r2, .L933
 23545 001e 0B46     		mov	r3, r1
 23546 0020 5B00     		lsls	r3, r3, #1
 23547 0022 0B44     		add	r3, r3, r1
 23548 0024 1B01     		lsls	r3, r3, #4
 23549 0026 1344     		add	r3, r3, r2
 23550 0028 03F5CC73 		add	r3, r3, #408
 23551 002c 1B68     		ldr	r3, [r3]
 23552 002e BB60     		str	r3, [r7, #8]
3328:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 23553              		.loc 1 3328 0
 23554 0030 5D4B     		ldr	r3, .L933
 23555 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23556 0036 1946     		mov	r1, r3
 23557 0038 5B4A     		ldr	r2, .L933
 23558 003a 0B46     		mov	r3, r1
 23559 003c 5B00     		lsls	r3, r3, #1
 23560 003e 0B44     		add	r3, r3, r1
 23561 0040 1B01     		lsls	r3, r3, #4
 23562 0042 1344     		add	r3, r3, r2
 23563 0044 03F5D273 		add	r3, r3, #420
 23564 0048 1B68     		ldr	r3, [r3]	@ float
 23565 004a 7B60     		str	r3, [r7, #4]	@ float
3329:..\src/command_processing.c **** 
3330:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 23566              		.loc 1 3330 0
 23567 004c 574B     		ldr	r3, .L933+4
 23568 004e 1B68     		ldr	r3, [r3]
 23569 0050 1846     		mov	r0, r3
 23570 0052 FFF7FEFF 		bl	__aeabi_i2f
 23571 0056 0346     		mov	r3, r0
 23572 0058 7968     		ldr	r1, [r7, #4]	@ float
 23573 005a 1846     		mov	r0, r3
 23574 005c FFF7FEFF 		bl	__aeabi_fdiv
 23575 0060 0346     		mov	r3, r0
 23576 0062 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 514


 23577 0064 FFF7FEFF 		bl	__aeabi_f2iz
 23578 0068 0246     		mov	r2, r0
 23579 006a 504B     		ldr	r3, .L933+4
 23580 006c 1A60     		str	r2, [r3]
3331:..\src/command_processing.c **** 
3332:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 23581              		.loc 1 3332 0
 23582 006e 4F4B     		ldr	r3, .L933+4
 23583 0070 1B68     		ldr	r3, [r3]
 23584 0072 1846     		mov	r0, r3
 23585 0074 FFF7FEFF 		bl	__aeabi_i2f
 23586 0078 4B4B     		ldr	r3, .L933
 23587 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23588 007e 1946     		mov	r1, r3
 23589 0080 4B4A     		ldr	r2, .L933+8
 23590 0082 0B46     		mov	r3, r1
 23591 0084 5B00     		lsls	r3, r3, #1
 23592 0086 0B44     		add	r3, r3, r1
 23593 0088 1B01     		lsls	r3, r3, #4
 23594 008a 1344     		add	r3, r3, r2
 23595 008c 03F5D273 		add	r3, r3, #420
 23596 0090 1B68     		ldr	r3, [r3]	@ float
 23597 0092 1946     		mov	r1, r3
 23598 0094 FFF7FEFF 		bl	__aeabi_fmul
 23599 0098 0346     		mov	r3, r0
 23600 009a 1846     		mov	r0, r3
 23601 009c FFF7FEFF 		bl	__aeabi_f2iz
 23602 00a0 0246     		mov	r2, r0
 23603 00a2 424B     		ldr	r3, .L933+4
 23604 00a4 1A60     		str	r2, [r3]
3333:..\src/command_processing.c **** 
3334:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 23605              		.loc 1 3334 0
 23606 00a6 414B     		ldr	r3, .L933+4
 23607 00a8 1B68     		ldr	r3, [r3]
 23608 00aa 1846     		mov	r0, r3
 23609 00ac 3E4B     		ldr	r3, .L933
 23610 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23611 00b2 1946     		mov	r1, r3
 23612 00b4 3E4A     		ldr	r2, .L933+8
 23613 00b6 0B46     		mov	r3, r1
 23614 00b8 5B00     		lsls	r3, r3, #1
 23615 00ba 0B44     		add	r3, r3, r1
 23616 00bc 1B01     		lsls	r3, r3, #4
 23617 00be 1344     		add	r3, r3, r2
 23618 00c0 03F5CC73 		add	r3, r3, #408
 23619 00c4 1B68     		ldr	r3, [r3]
 23620 00c6 1A46     		mov	r2, r3
 23621 00c8 BB68     		ldr	r3, [r7, #8]
 23622 00ca D31A     		subs	r3, r2, r3
 23623 00cc 0344     		add	r3, r3, r0
 23624 00ce 1A46     		mov	r2, r3
 23625 00d0 364B     		ldr	r3, .L933+4
 23626 00d2 1A60     		str	r2, [r3]
3335:..\src/command_processing.c ****         
3336:..\src/command_processing.c ****         // Check position Limits
3337:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 515


3338:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 23627              		.loc 1 3338 0
 23628 00d4 344B     		ldr	r3, .L933
 23629 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 23630 00da 002B     		cmp	r3, #0
 23631 00dc 17D0     		beq	.L923
3339:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 23632              		.loc 1 3339 0
 23633 00de 334B     		ldr	r3, .L933+4
 23634 00e0 1A68     		ldr	r2, [r3]
 23635 00e2 314B     		ldr	r3, .L933
 23636 00e4 D3F8E430 		ldr	r3, [r3, #228]
 23637 00e8 9A42     		cmp	r2, r3
 23638 00ea 04DA     		bge	.L924
3340:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 23639              		.loc 1 3340 0
 23640 00ec 2E4B     		ldr	r3, .L933
 23641 00ee D3F8E430 		ldr	r3, [r3, #228]
 23642 00f2 2E4A     		ldr	r2, .L933+4
 23643 00f4 1360     		str	r3, [r2]
 23644              	.L924:
3341:..\src/command_processing.c **** 
3342:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 23645              		.loc 1 3342 0
 23646 00f6 2D4B     		ldr	r3, .L933+4
 23647 00f8 1A68     		ldr	r2, [r3]
 23648 00fa 2B4B     		ldr	r3, .L933
 23649 00fc D3F8E830 		ldr	r3, [r3, #232]
 23650 0100 9A42     		cmp	r2, r3
 23651 0102 04DD     		ble	.L923
3343:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 23652              		.loc 1 3343 0
 23653 0104 284B     		ldr	r3, .L933
 23654 0106 D3F8E830 		ldr	r3, [r3, #232]
 23655 010a 284A     		ldr	r2, .L933+4
 23656 010c 1360     		str	r3, [r2]
 23657              	.L923:
3344:..\src/command_processing.c ****         }
3345:..\src/command_processing.c ****     }
3346:..\src/command_processing.c ****     
3347:..\src/command_processing.c ****     // If SD is used, create new param and data file
3348:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23658              		.loc 1 3348 0
 23659 010e 264B     		ldr	r3, .L933
 23660 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23661 0114 012B     		cmp	r3, #1
 23662 0116 06D1     		bne	.L925
3349:..\src/command_processing.c ****         FS_FClose(pFile);
 23663              		.loc 1 3349 0
 23664 0118 264B     		ldr	r3, .L933+12
 23665 011a 1B68     		ldr	r3, [r3]
 23666 011c 1846     		mov	r0, r3
 23667 011e FFF7FEFF 		bl	FS_FClose
3350:..\src/command_processing.c ****         
3351:..\src/command_processing.c ****         InitSD_FS();
 23668              		.loc 1 3351 0
 23669 0122 FFF7FEFF 		bl	InitSD_FS
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 516


 23670              	.L925:
3352:..\src/command_processing.c ****     }
3353:..\src/command_processing.c ****    
3354:..\src/command_processing.c ****     // Store params 
3355:..\src/command_processing.c **** 
3356:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 23671              		.loc 1 3356 0
 23672 0126 204B     		ldr	r3, .L933
 23673 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 23674 012c 204B     		ldr	r3, .L933+8
 23675 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23676 0132 9A42     		cmp	r2, r3
 23677 0134 21D0     		beq	.L926
3357:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 23678              		.loc 1 3357 0
 23679 0136 1C4B     		ldr	r3, .L933
 23680 0138 93F8A030 		ldrb	r3, [r3, #160]
 23681 013c FB70     		strb	r3, [r7, #3]
3358:..\src/command_processing.c ****         if(memStore(0)) {
 23682              		.loc 1 3358 0
 23683 013e 0020     		movs	r0, #0
 23684 0140 FFF7FEFF 		bl	memStore
 23685 0144 0346     		mov	r3, r0
 23686 0146 002B     		cmp	r3, #0
 23687 0148 0BD0     		beq	.L927
3359:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 23688              		.loc 1 3359 0
 23689 014a 0123     		movs	r3, #1
 23690 014c 3B70     		strb	r3, [r7]
3360:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 23691              		.loc 1 3360 0
 23692 014e 0123     		movs	r3, #1
 23693 0150 7B70     		strb	r3, [r7, #1]
3361:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23694              		.loc 1 3361 0
 23695 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23696 0154 99B2     		uxth	r1, r3
 23697 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23698 0158 3B46     		mov	r3, r7
 23699 015a 1846     		mov	r0, r3
 23700 015c FFF7FEFF 		bl	commWrite_old_id
 23701 0160 18E0     		b	.L929
 23702              	.L927:
3362:..\src/command_processing.c ****         }    
3363:..\src/command_processing.c ****         else{
3364:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 23703              		.loc 1 3364 0
 23704 0162 0023     		movs	r3, #0
 23705 0164 3B70     		strb	r3, [r7]
3365:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 23706              		.loc 1 3365 0
 23707 0166 0023     		movs	r3, #0
 23708 0168 7B70     		strb	r3, [r7, #1]
3366:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 23709              		.loc 1 3366 0
 23710 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23711 016c 99B2     		uxth	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 517


 23712 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23713 0170 3B46     		mov	r3, r7
 23714 0172 1846     		mov	r0, r3
 23715 0174 FFF7FEFF 		bl	commWrite_old_id
 23716 0178 0CE0     		b	.L929
 23717              	.L926:
3367:..\src/command_processing.c ****         }
3368:..\src/command_processing.c ****     }    
3369:..\src/command_processing.c ****     else {
3370:..\src/command_processing.c ****         if(memStore(0))
 23718              		.loc 1 3370 0
 23719 017a 0020     		movs	r0, #0
 23720 017c FFF7FEFF 		bl	memStore
 23721 0180 0346     		mov	r3, r0
 23722 0182 002B     		cmp	r3, #0
 23723 0184 03D0     		beq	.L930
3371:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 23724              		.loc 1 3371 0
 23725 0186 0120     		movs	r0, #1
 23726 0188 FFF7FEFF 		bl	sendAcknowledgment
 23727 018c 02E0     		b	.L929
 23728              	.L930:
3372:..\src/command_processing.c ****         else
3373:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 23729              		.loc 1 3373 0
 23730 018e 0020     		movs	r0, #0
 23731 0190 FFF7FEFF 		bl	sendAcknowledgment
 23732              	.L929:
3374:..\src/command_processing.c ****     }
3375:..\src/command_processing.c ****     
3376:..\src/command_processing.c ****     // FW reset (if necessary)
3377:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 23733              		.loc 1 3377 0
 23734 0194 084B     		ldr	r3, .L933+16
 23735 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23736 0198 012B     		cmp	r3, #1
 23737 019a 01D1     		bne	.L932
3378:..\src/command_processing.c ****         CySoftwareReset();
 23738              		.loc 1 3378 0
 23739 019c FFF7FEFF 		bl	CySoftwareReset
 23740              	.L932:
3379:..\src/command_processing.c ****     }
3380:..\src/command_processing.c **** }
 23741              		.loc 1 3380 0
 23742 01a0 00BF     		nop
 23743 01a2 1037     		adds	r7, r7, #16
 23744              		.cfi_def_cfa_offset 8
 23745 01a4 BD46     		mov	sp, r7
 23746              		.cfi_def_cfa_register 13
 23747              		@ sp needed
 23748 01a6 80BD     		pop	{r7, pc}
 23749              	.L934:
 23750              		.align	2
 23751              	.L933:
 23752 01a8 00000000 		.word	c_mem
 23753 01ac 00000000 		.word	g_refNew
 23754 01b0 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 518


 23755 01b4 00000000 		.word	pFile
 23756 01b8 00000000 		.word	reset_PSoC_flag
 23757              		.cfi_endproc
 23758              	.LFE100:
 23759              		.size	cmd_store_params, .-cmd_store_params
 23760              		.section	.text.cmd_get_emg,"ax",%progbits
 23761              		.align	2
 23762              		.global	cmd_get_emg
 23763              		.thumb
 23764              		.thumb_func
 23765              		.type	cmd_get_emg, %function
 23766              	cmd_get_emg:
 23767              	.LFB101:
3381:..\src/command_processing.c **** 
3382:..\src/command_processing.c **** void cmd_get_emg(){
 23768              		.loc 1 3382 0
 23769              		.cfi_startproc
 23770              		@ args = 0, pretend = 0, frame = 16
 23771              		@ frame_needed = 1, uses_anonymous_args = 0
 23772 0000 80B5     		push	{r7, lr}
 23773              		.cfi_def_cfa_offset 8
 23774              		.cfi_offset 7, -8
 23775              		.cfi_offset 14, -4
 23776 0002 84B0     		sub	sp, sp, #16
 23777              		.cfi_def_cfa_offset 24
 23778 0004 00AF     		add	r7, sp, #0
 23779              		.cfi_def_cfa_register 7
3383:..\src/command_processing.c ****     
3384:..\src/command_processing.c ****     uint8 packet_data[6];
3385:..\src/command_processing.c ****     int16 aux_int16;
3386:..\src/command_processing.c ****     
3387:..\src/command_processing.c ****     // Header        
3388:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 23780              		.loc 1 3388 0
 23781 0006 8823     		movs	r3, #136
 23782 0008 3B72     		strb	r3, [r7, #8]
3389:..\src/command_processing.c ****     
3390:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 23783              		.loc 1 3390 0
 23784 000a 144B     		ldr	r3, .L936
 23785 000c 1B68     		ldr	r3, [r3]
 23786 000e 1BB2     		sxth	r3, r3
 23787 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3391:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23788              		.loc 1 3391 0
 23789 0012 BB1D     		adds	r3, r7, #6
 23790 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23791 0016 BB72     		strb	r3, [r7, #10]
3392:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23792              		.loc 1 3392 0
 23793 0018 BB1D     		adds	r3, r7, #6
 23794 001a 0133     		adds	r3, r3, #1
 23795 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23796 001e 7B72     		strb	r3, [r7, #9]
3393:..\src/command_processing.c ****     
3394:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 23797              		.loc 1 3394 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 519


 23798 0020 0E4B     		ldr	r3, .L936
 23799 0022 5B68     		ldr	r3, [r3, #4]
 23800 0024 1BB2     		sxth	r3, r3
 23801 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3395:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23802              		.loc 1 3395 0
 23803 0028 BB1D     		adds	r3, r7, #6
 23804 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23805 002c 3B73     		strb	r3, [r7, #12]
3396:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23806              		.loc 1 3396 0
 23807 002e BB1D     		adds	r3, r7, #6
 23808 0030 0133     		adds	r3, r3, #1
 23809 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23810 0034 FB72     		strb	r3, [r7, #11]
3397:..\src/command_processing.c **** 
3398:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23811              		.loc 1 3398 0
 23812 0036 07F10803 		add	r3, r7, #8
 23813 003a 0521     		movs	r1, #5
 23814 003c 1846     		mov	r0, r3
 23815 003e FFF7FEFF 		bl	LCRChecksum
 23816 0042 0346     		mov	r3, r0
 23817 0044 7B73     		strb	r3, [r7, #13]
3399:..\src/command_processing.c **** 
3400:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23818              		.loc 1 3400 0
 23819 0046 07F10803 		add	r3, r7, #8
 23820 004a 0621     		movs	r1, #6
 23821 004c 1846     		mov	r0, r3
 23822 004e FFF7FEFF 		bl	commWrite
3401:..\src/command_processing.c **** 
3402:..\src/command_processing.c **** }
 23823              		.loc 1 3402 0
 23824 0052 00BF     		nop
 23825 0054 1037     		adds	r7, r7, #16
 23826              		.cfi_def_cfa_offset 8
 23827 0056 BD46     		mov	sp, r7
 23828              		.cfi_def_cfa_register 13
 23829              		@ sp needed
 23830 0058 80BD     		pop	{r7, pc}
 23831              	.L937:
 23832 005a 00BF     		.align	2
 23833              	.L936:
 23834 005c 00000000 		.word	g_emg_measOld
 23835              		.cfi_endproc
 23836              	.LFE101:
 23837              		.size	cmd_get_emg, .-cmd_get_emg
 23838              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 23839              		.align	2
 23840              		.global	cmd_get_imu_readings
 23841              		.thumb
 23842              		.thumb_func
 23843              		.type	cmd_get_imu_readings, %function
 23844              	cmd_get_imu_readings:
 23845              	.LFB102:
3403:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 520


3404:..\src/command_processing.c **** void cmd_get_imu_readings(){
 23846              		.loc 1 3404 0
 23847              		.cfi_startproc
 23848              		@ args = 0, pretend = 0, frame = 400
 23849              		@ frame_needed = 1, uses_anonymous_args = 0
 23850 0000 90B5     		push	{r4, r7, lr}
 23851              		.cfi_def_cfa_offset 12
 23852              		.cfi_offset 4, -12
 23853              		.cfi_offset 7, -8
 23854              		.cfi_offset 14, -4
 23855 0002 E5B0     		sub	sp, sp, #404
 23856              		.cfi_def_cfa_offset 416
 23857 0004 00AF     		add	r7, sp, #0
 23858              		.cfi_def_cfa_register 7
3405:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3406:..\src/command_processing.c ****     
3407:..\src/command_processing.c ****     uint8 k_imu;
3408:..\src/command_processing.c ****     uint16 c = 1;
 23859              		.loc 1 3408 0
 23860 0006 0123     		movs	r3, #1
 23861 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3409:..\src/command_processing.c ****     uint8 k = 0;
 23862              		.loc 1 3409 0
 23863 000c 0023     		movs	r3, #0
 23864 000e 87F88B31 		strb	r3, [r7, #395]
3410:..\src/command_processing.c ****     uint16 gl_c = 1;
 23865              		.loc 1 3410 0
 23866 0012 0123     		movs	r3, #1
 23867 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3411:..\src/command_processing.c ****     int16 aux_int16;
3412:..\src/command_processing.c ****     float aux_float;
3413:..\src/command_processing.c ****     
3414:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3415:..\src/command_processing.c ****     uint8 packet_data[350];
3416:..\src/command_processing.c ****     uint8 single_packet[32];
3417:..\src/command_processing.c ****     
3418:..\src/command_processing.c ****     //Header package 
3419:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 23868              		.loc 1 3419 0
 23869 0018 07F12003 		add	r3, r7, #32
 23870 001c A122     		movs	r2, #161
 23871 001e 1A70     		strb	r2, [r3]
3420:..\src/command_processing.c ****  
3421:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 23872              		.loc 1 3421 0
 23873 0020 0023     		movs	r3, #0
 23874 0022 87F88F31 		strb	r3, [r7, #399]
 23875 0026 82E2     		b	.L939
 23876              	.L955:
3422:..\src/command_processing.c ****     {	
3423:..\src/command_processing.c ****             
3424:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 23877              		.loc 1 3424 0
 23878 0028 3B46     		mov	r3, r7
 23879 002a 3A22     		movs	r2, #58
 23880 002c 1A70     		strb	r2, [r3]
3425:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 521


 23881              		.loc 1 3425 0
 23882 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23883 0032 DB4A     		ldr	r2, .L956
 23884 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23885 0036 1946     		mov	r1, r3
 23886 0038 DA4A     		ldr	r2, .L956+4
 23887 003a 0B46     		mov	r3, r1
 23888 003c 9B00     		lsls	r3, r3, #2
 23889 003e 0B44     		add	r3, r3, r1
 23890 0040 1344     		add	r3, r3, r2
 23891 0042 03F20223 		addw	r3, r3, #514
 23892 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23893 0048 002B     		cmp	r3, #0
 23894 004a 5DD0     		beq	.L940
3426:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 23895              		.loc 1 3426 0
 23896 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23897 0050 D549     		ldr	r1, .L956+8
 23898 0052 1346     		mov	r3, r2
 23899 0054 9B00     		lsls	r3, r3, #2
 23900 0056 1344     		add	r3, r3, r2
 23901 0058 DB00     		lsls	r3, r3, #3
 23902 005a 0B44     		add	r3, r3, r1
 23903 005c 0233     		adds	r3, r3, #2
 23904 005e B3F90030 		ldrsh	r3, [r3]
 23905 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3427:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23906              		.loc 1 3427 0
 23907 0066 B7F88C31 		ldrh	r3, [r7, #396]
 23908 006a 0133     		adds	r3, r3, #1
 23909 006c 07F5C372 		add	r2, r7, #390
 23910 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23911 0072 3A46     		mov	r2, r7
 23912 0074 D154     		strb	r1, [r2, r3]
3428:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23913              		.loc 1 3428 0
 23914 0076 B7F88C21 		ldrh	r2, [r7, #396]
 23915 007a 07F5C373 		add	r3, r7, #390
 23916 007e 0133     		adds	r3, r3, #1
 23917 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23918 0082 3B46     		mov	r3, r7
 23919 0084 9954     		strb	r1, [r3, r2]
3429:..\src/command_processing.c **** 
3430:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 23920              		.loc 1 3430 0
 23921 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23922 008a C749     		ldr	r1, .L956+8
 23923 008c 1346     		mov	r3, r2
 23924 008e 9B00     		lsls	r3, r3, #2
 23925 0090 1344     		add	r3, r3, r2
 23926 0092 DB00     		lsls	r3, r3, #3
 23927 0094 0B44     		add	r3, r3, r1
 23928 0096 0433     		adds	r3, r3, #4
 23929 0098 B3F90030 		ldrsh	r3, [r3]
 23930 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3431:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23931              		.loc 1 3431 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 522


 23932 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 23933 00a4 0333     		adds	r3, r3, #3
 23934 00a6 07F5C372 		add	r2, r7, #390
 23935 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23936 00ac 3A46     		mov	r2, r7
 23937 00ae D154     		strb	r1, [r2, r3]
3432:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23938              		.loc 1 3432 0
 23939 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 23940 00b4 9A1C     		adds	r2, r3, #2
 23941 00b6 07F5C373 		add	r3, r7, #390
 23942 00ba 0133     		adds	r3, r3, #1
 23943 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23944 00be 3B46     		mov	r3, r7
 23945 00c0 9954     		strb	r1, [r3, r2]
3433:..\src/command_processing.c **** 
3434:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 23946              		.loc 1 3434 0
 23947 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23948 00c6 B849     		ldr	r1, .L956+8
 23949 00c8 1346     		mov	r3, r2
 23950 00ca 9B00     		lsls	r3, r3, #2
 23951 00cc 1344     		add	r3, r3, r2
 23952 00ce DB00     		lsls	r3, r3, #3
 23953 00d0 0B44     		add	r3, r3, r1
 23954 00d2 0633     		adds	r3, r3, #6
 23955 00d4 B3F90030 		ldrsh	r3, [r3]
 23956 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3435:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23957              		.loc 1 3435 0
 23958 00dc B7F88C31 		ldrh	r3, [r7, #396]
 23959 00e0 0533     		adds	r3, r3, #5
 23960 00e2 07F5C372 		add	r2, r7, #390
 23961 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23962 00e8 3A46     		mov	r2, r7
 23963 00ea D154     		strb	r1, [r2, r3]
3436:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23964              		.loc 1 3436 0
 23965 00ec B7F88C31 		ldrh	r3, [r7, #396]
 23966 00f0 1A1D     		adds	r2, r3, #4
 23967 00f2 07F5C373 		add	r3, r7, #390
 23968 00f6 0133     		adds	r3, r3, #1
 23969 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23970 00fa 3B46     		mov	r3, r7
 23971 00fc 9954     		strb	r1, [r3, r2]
3437:..\src/command_processing.c **** 
3438:..\src/command_processing.c ****             c = c + 6;
 23972              		.loc 1 3438 0
 23973 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23974 0102 0633     		adds	r3, r3, #6
 23975 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23976              	.L940:
3439:..\src/command_processing.c ****         }
3440:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 23977              		.loc 1 3440 0
 23978 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23979 010c A44A     		ldr	r2, .L956
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 523


 23980 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23981 0110 1946     		mov	r1, r3
 23982 0112 A44A     		ldr	r2, .L956+4
 23983 0114 0B46     		mov	r3, r1
 23984 0116 9B00     		lsls	r3, r3, #2
 23985 0118 0B44     		add	r3, r3, r1
 23986 011a 1344     		add	r3, r3, r2
 23987 011c 03F20323 		addw	r3, r3, #515
 23988 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23989 0122 002B     		cmp	r3, #0
 23990 0124 5DD0     		beq	.L941
3441:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 23991              		.loc 1 3441 0
 23992 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23993 012a 9F49     		ldr	r1, .L956+8
 23994 012c 1346     		mov	r3, r2
 23995 012e 9B00     		lsls	r3, r3, #2
 23996 0130 1344     		add	r3, r3, r2
 23997 0132 DB00     		lsls	r3, r3, #3
 23998 0134 0B44     		add	r3, r3, r1
 23999 0136 0833     		adds	r3, r3, #8
 24000 0138 B3F90030 		ldrsh	r3, [r3]
 24001 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3442:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24002              		.loc 1 3442 0
 24003 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24004 0144 0133     		adds	r3, r3, #1
 24005 0146 07F5C372 		add	r2, r7, #390
 24006 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24007 014c 3A46     		mov	r2, r7
 24008 014e D154     		strb	r1, [r2, r3]
3443:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24009              		.loc 1 3443 0
 24010 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24011 0154 07F5C373 		add	r3, r7, #390
 24012 0158 0133     		adds	r3, r3, #1
 24013 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24014 015c 3B46     		mov	r3, r7
 24015 015e 9954     		strb	r1, [r3, r2]
3444:..\src/command_processing.c **** 
3445:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24016              		.loc 1 3445 0
 24017 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24018 0164 9049     		ldr	r1, .L956+8
 24019 0166 1346     		mov	r3, r2
 24020 0168 9B00     		lsls	r3, r3, #2
 24021 016a 1344     		add	r3, r3, r2
 24022 016c DB00     		lsls	r3, r3, #3
 24023 016e 0B44     		add	r3, r3, r1
 24024 0170 0A33     		adds	r3, r3, #10
 24025 0172 B3F90030 		ldrsh	r3, [r3]
 24026 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3446:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24027              		.loc 1 3446 0
 24028 017a B7F88C31 		ldrh	r3, [r7, #396]
 24029 017e 0333     		adds	r3, r3, #3
 24030 0180 07F5C372 		add	r2, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 524


 24031 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24032 0186 3A46     		mov	r2, r7
 24033 0188 D154     		strb	r1, [r2, r3]
3447:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24034              		.loc 1 3447 0
 24035 018a B7F88C31 		ldrh	r3, [r7, #396]
 24036 018e 9A1C     		adds	r2, r3, #2
 24037 0190 07F5C373 		add	r3, r7, #390
 24038 0194 0133     		adds	r3, r3, #1
 24039 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24040 0198 3B46     		mov	r3, r7
 24041 019a 9954     		strb	r1, [r3, r2]
3448:..\src/command_processing.c **** 
3449:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24042              		.loc 1 3449 0
 24043 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24044 01a0 8149     		ldr	r1, .L956+8
 24045 01a2 1346     		mov	r3, r2
 24046 01a4 9B00     		lsls	r3, r3, #2
 24047 01a6 1344     		add	r3, r3, r2
 24048 01a8 DB00     		lsls	r3, r3, #3
 24049 01aa 0B44     		add	r3, r3, r1
 24050 01ac 0C33     		adds	r3, r3, #12
 24051 01ae B3F90030 		ldrsh	r3, [r3]
 24052 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3450:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24053              		.loc 1 3450 0
 24054 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24055 01ba 0533     		adds	r3, r3, #5
 24056 01bc 07F5C372 		add	r2, r7, #390
 24057 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24058 01c2 3A46     		mov	r2, r7
 24059 01c4 D154     		strb	r1, [r2, r3]
3451:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24060              		.loc 1 3451 0
 24061 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24062 01ca 1A1D     		adds	r2, r3, #4
 24063 01cc 07F5C373 		add	r3, r7, #390
 24064 01d0 0133     		adds	r3, r3, #1
 24065 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24066 01d4 3B46     		mov	r3, r7
 24067 01d6 9954     		strb	r1, [r3, r2]
3452:..\src/command_processing.c **** 
3453:..\src/command_processing.c ****             c = c + 6;
 24068              		.loc 1 3453 0
 24069 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24070 01dc 0633     		adds	r3, r3, #6
 24071 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24072              	.L941:
3454:..\src/command_processing.c ****         }
3455:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24073              		.loc 1 3455 0
 24074 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24075 01e6 6E4A     		ldr	r2, .L956
 24076 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24077 01ea 1946     		mov	r1, r3
 24078 01ec 6D4A     		ldr	r2, .L956+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 525


 24079 01ee 0B46     		mov	r3, r1
 24080 01f0 9B00     		lsls	r3, r3, #2
 24081 01f2 0B44     		add	r3, r3, r1
 24082 01f4 1344     		add	r3, r3, r2
 24083 01f6 03F50173 		add	r3, r3, #516
 24084 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24085 01fc 002B     		cmp	r3, #0
 24086 01fe 5DD0     		beq	.L942
3456:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24087              		.loc 1 3456 0
 24088 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24089 0204 6849     		ldr	r1, .L956+8
 24090 0206 1346     		mov	r3, r2
 24091 0208 9B00     		lsls	r3, r3, #2
 24092 020a 1344     		add	r3, r3, r2
 24093 020c DB00     		lsls	r3, r3, #3
 24094 020e 0B44     		add	r3, r3, r1
 24095 0210 0E33     		adds	r3, r3, #14
 24096 0212 B3F90030 		ldrsh	r3, [r3]
 24097 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3457:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24098              		.loc 1 3457 0
 24099 021a B7F88C31 		ldrh	r3, [r7, #396]
 24100 021e 0133     		adds	r3, r3, #1
 24101 0220 07F5C372 		add	r2, r7, #390
 24102 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24103 0226 3A46     		mov	r2, r7
 24104 0228 D154     		strb	r1, [r2, r3]
3458:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24105              		.loc 1 3458 0
 24106 022a B7F88C21 		ldrh	r2, [r7, #396]
 24107 022e 07F5C373 		add	r3, r7, #390
 24108 0232 0133     		adds	r3, r3, #1
 24109 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24110 0236 3B46     		mov	r3, r7
 24111 0238 9954     		strb	r1, [r3, r2]
3459:..\src/command_processing.c **** 
3460:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 24112              		.loc 1 3460 0
 24113 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24114 023e 5A49     		ldr	r1, .L956+8
 24115 0240 1346     		mov	r3, r2
 24116 0242 9B00     		lsls	r3, r3, #2
 24117 0244 1344     		add	r3, r3, r2
 24118 0246 DB00     		lsls	r3, r3, #3
 24119 0248 0B44     		add	r3, r3, r1
 24120 024a 1033     		adds	r3, r3, #16
 24121 024c B3F90030 		ldrsh	r3, [r3]
 24122 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3461:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24123              		.loc 1 3461 0
 24124 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24125 0258 0333     		adds	r3, r3, #3
 24126 025a 07F5C372 		add	r2, r7, #390
 24127 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24128 0260 3A46     		mov	r2, r7
 24129 0262 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 526


3462:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24130              		.loc 1 3462 0
 24131 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24132 0268 9A1C     		adds	r2, r3, #2
 24133 026a 07F5C373 		add	r3, r7, #390
 24134 026e 0133     		adds	r3, r3, #1
 24135 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24136 0272 3B46     		mov	r3, r7
 24137 0274 9954     		strb	r1, [r3, r2]
3463:..\src/command_processing.c **** 
3464:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24138              		.loc 1 3464 0
 24139 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24140 027a 4B49     		ldr	r1, .L956+8
 24141 027c 1346     		mov	r3, r2
 24142 027e 9B00     		lsls	r3, r3, #2
 24143 0280 1344     		add	r3, r3, r2
 24144 0282 DB00     		lsls	r3, r3, #3
 24145 0284 0B44     		add	r3, r3, r1
 24146 0286 1233     		adds	r3, r3, #18
 24147 0288 B3F90030 		ldrsh	r3, [r3]
 24148 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3465:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24149              		.loc 1 3465 0
 24150 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24151 0294 0533     		adds	r3, r3, #5
 24152 0296 07F5C372 		add	r2, r7, #390
 24153 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24154 029c 3A46     		mov	r2, r7
 24155 029e D154     		strb	r1, [r2, r3]
3466:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24156              		.loc 1 3466 0
 24157 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24158 02a4 1A1D     		adds	r2, r3, #4
 24159 02a6 07F5C373 		add	r3, r7, #390
 24160 02aa 0133     		adds	r3, r3, #1
 24161 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24162 02ae 3B46     		mov	r3, r7
 24163 02b0 9954     		strb	r1, [r3, r2]
3467:..\src/command_processing.c **** 
3468:..\src/command_processing.c ****             c = c + 6;
 24164              		.loc 1 3468 0
 24165 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24166 02b6 0633     		adds	r3, r3, #6
 24167 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24168              	.L942:
3469:..\src/command_processing.c ****         }
3470:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24169              		.loc 1 3470 0
 24170 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24171 02c0 374A     		ldr	r2, .L956
 24172 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24173 02c4 1946     		mov	r1, r3
 24174 02c6 374A     		ldr	r2, .L956+4
 24175 02c8 0B46     		mov	r3, r1
 24176 02ca 9B00     		lsls	r3, r3, #2
 24177 02cc 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 527


 24178 02ce 1344     		add	r3, r3, r2
 24179 02d0 03F20523 		addw	r3, r3, #517
 24180 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24181 02d6 002B     		cmp	r3, #0
 24182 02d8 00F0AF80 		beq	.L943
3471:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24183              		.loc 1 3471 0
 24184 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24185 02e0 3149     		ldr	r1, .L956+8
 24186 02e2 1346     		mov	r3, r2
 24187 02e4 9B00     		lsls	r3, r3, #2
 24188 02e6 1344     		add	r3, r3, r2
 24189 02e8 DB00     		lsls	r3, r3, #3
 24190 02ea 0B44     		add	r3, r3, r1
 24191 02ec 1433     		adds	r3, r3, #20
 24192 02ee 1B68     		ldr	r3, [r3]	@ float
 24193 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3472:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24194              		.loc 1 3472 0
 24195 02f4 0023     		movs	r3, #0
 24196 02f6 87F88B31 		strb	r3, [r7, #395]
 24197 02fa 13E0     		b	.L944
 24198              	.L945:
3473:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24199              		.loc 1 3473 0 discriminator 3
 24200 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24201 0300 1A1D     		adds	r2, r3, #4
 24202 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24203 0306 D31A     		subs	r3, r2, r3
 24204 0308 013B     		subs	r3, r3, #1
 24205 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24206 030e 07F5C071 		add	r1, r7, #384
 24207 0312 0A44     		add	r2, r2, r1
 24208 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24209 0316 3A46     		mov	r2, r7
 24210 0318 D154     		strb	r1, [r2, r3]
3472:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24211              		.loc 1 3472 0 discriminator 3
 24212 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24213 031e 0133     		adds	r3, r3, #1
 24214 0320 87F88B31 		strb	r3, [r7, #395]
 24215              	.L944:
3472:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24216              		.loc 1 3472 0 is_stmt 0 discriminator 1
 24217 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24218 0328 032B     		cmp	r3, #3
 24219 032a E7D9     		bls	.L945
3474:..\src/command_processing.c ****             }
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24220              		.loc 1 3476 0 is_stmt 1
 24221 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24222 0330 1D49     		ldr	r1, .L956+8
 24223 0332 1346     		mov	r3, r2
 24224 0334 9B00     		lsls	r3, r3, #2
 24225 0336 1344     		add	r3, r3, r2
 24226 0338 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 528


 24227 033a 0B44     		add	r3, r3, r1
 24228 033c 1833     		adds	r3, r3, #24
 24229 033e 1B68     		ldr	r3, [r3]	@ float
 24230 0340 C7F88031 		str	r3, [r7, #384]	@ float
3477:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24231              		.loc 1 3477 0
 24232 0344 0023     		movs	r3, #0
 24233 0346 87F88B31 		strb	r3, [r7, #395]
 24234 034a 14E0     		b	.L946
 24235              	.L947:
3478:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24236              		.loc 1 3478 0 discriminator 3
 24237 034c B7F88C31 		ldrh	r3, [r7, #396]
 24238 0350 03F10802 		add	r2, r3, #8
 24239 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24240 0358 D31A     		subs	r3, r2, r3
 24241 035a 013B     		subs	r3, r3, #1
 24242 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24243 0360 07F5C071 		add	r1, r7, #384
 24244 0364 0A44     		add	r2, r2, r1
 24245 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24246 0368 3A46     		mov	r2, r7
 24247 036a D154     		strb	r1, [r2, r3]
3477:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24248              		.loc 1 3477 0 discriminator 3
 24249 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24250 0370 0133     		adds	r3, r3, #1
 24251 0372 87F88B31 		strb	r3, [r7, #395]
 24252              	.L946:
3477:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24253              		.loc 1 3477 0 is_stmt 0 discriminator 1
 24254 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24255 037a 032B     		cmp	r3, #3
 24256 037c E6D9     		bls	.L947
3479:..\src/command_processing.c ****             }
3480:..\src/command_processing.c **** 
3481:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24257              		.loc 1 3481 0 is_stmt 1
 24258 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24259 0382 0949     		ldr	r1, .L956+8
 24260 0384 1346     		mov	r3, r2
 24261 0386 9B00     		lsls	r3, r3, #2
 24262 0388 1344     		add	r3, r3, r2
 24263 038a DB00     		lsls	r3, r3, #3
 24264 038c 0B44     		add	r3, r3, r1
 24265 038e 1C33     		adds	r3, r3, #28
 24266 0390 1B68     		ldr	r3, [r3]	@ float
 24267 0392 C7F88031 		str	r3, [r7, #384]	@ float
3482:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24268              		.loc 1 3482 0
 24269 0396 0023     		movs	r3, #0
 24270 0398 87F88B31 		strb	r3, [r7, #395]
 24271 039c 1BE0     		b	.L948
 24272              	.L957:
 24273 039e 00BF     		.align	2
 24274              	.L956:
 24275 03a0 00000000 		.word	IMU_connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 529


 24276 03a4 00000000 		.word	c_mem
 24277 03a8 00000000 		.word	g_imu
 24278              	.L949:
3483:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24279              		.loc 1 3483 0 discriminator 3
 24280 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24281 03b0 03F10C02 		add	r2, r3, #12
 24282 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24283 03b8 D31A     		subs	r3, r2, r3
 24284 03ba 013B     		subs	r3, r3, #1
 24285 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24286 03c0 07F5C071 		add	r1, r7, #384
 24287 03c4 0A44     		add	r2, r2, r1
 24288 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24289 03c8 3A46     		mov	r2, r7
 24290 03ca D154     		strb	r1, [r2, r3]
3482:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24291              		.loc 1 3482 0 discriminator 3
 24292 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24293 03d0 0133     		adds	r3, r3, #1
 24294 03d2 87F88B31 		strb	r3, [r7, #395]
 24295              	.L948:
3482:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24296              		.loc 1 3482 0 is_stmt 0 discriminator 1
 24297 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24298 03da 032B     		cmp	r3, #3
 24299 03dc E6D9     		bls	.L949
3484:..\src/command_processing.c ****             }
3485:..\src/command_processing.c **** 
3486:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24300              		.loc 1 3486 0 is_stmt 1
 24301 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24302 03e2 6749     		ldr	r1, .L958
 24303 03e4 1346     		mov	r3, r2
 24304 03e6 9B00     		lsls	r3, r3, #2
 24305 03e8 1344     		add	r3, r3, r2
 24306 03ea DB00     		lsls	r3, r3, #3
 24307 03ec 0B44     		add	r3, r3, r1
 24308 03ee 2033     		adds	r3, r3, #32
 24309 03f0 1B68     		ldr	r3, [r3]	@ float
 24310 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3487:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24311              		.loc 1 3487 0
 24312 03f6 0023     		movs	r3, #0
 24313 03f8 87F88B31 		strb	r3, [r7, #395]
 24314 03fc 14E0     		b	.L950
 24315              	.L951:
3488:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24316              		.loc 1 3488 0 discriminator 3
 24317 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24318 0402 03F11002 		add	r2, r3, #16
 24319 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24320 040a D31A     		subs	r3, r2, r3
 24321 040c 013B     		subs	r3, r3, #1
 24322 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24323 0412 07F5C071 		add	r1, r7, #384
 24324 0416 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 530


 24325 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24326 041a 3A46     		mov	r2, r7
 24327 041c D154     		strb	r1, [r2, r3]
3487:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24328              		.loc 1 3487 0 discriminator 3
 24329 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24330 0422 0133     		adds	r3, r3, #1
 24331 0424 87F88B31 		strb	r3, [r7, #395]
 24332              	.L950:
3487:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24333              		.loc 1 3487 0 is_stmt 0 discriminator 1
 24334 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24335 042c 032B     		cmp	r3, #3
 24336 042e E6D9     		bls	.L951
3489:..\src/command_processing.c ****             }
3490:..\src/command_processing.c ****             c = c + 16;
 24337              		.loc 1 3490 0 is_stmt 1
 24338 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24339 0434 1033     		adds	r3, r3, #16
 24340 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24341              	.L943:
3491:..\src/command_processing.c ****         }
3492:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 24342              		.loc 1 3492 0
 24343 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24344 043e 514A     		ldr	r2, .L958+4
 24345 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24346 0442 1946     		mov	r1, r3
 24347 0444 504A     		ldr	r2, .L958+8
 24348 0446 0B46     		mov	r3, r1
 24349 0448 9B00     		lsls	r3, r3, #2
 24350 044a 0B44     		add	r3, r3, r1
 24351 044c 1344     		add	r3, r3, r2
 24352 044e 03F20623 		addw	r3, r3, #518
 24353 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24354 0454 002B     		cmp	r3, #0
 24355 0456 21D0     		beq	.L952
3493:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 24356              		.loc 1 3493 0
 24357 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24358 045c 4849     		ldr	r1, .L958
 24359 045e 1346     		mov	r3, r2
 24360 0460 9B00     		lsls	r3, r3, #2
 24361 0462 1344     		add	r3, r3, r2
 24362 0464 DB00     		lsls	r3, r3, #3
 24363 0466 0B44     		add	r3, r3, r1
 24364 0468 2433     		adds	r3, r3, #36
 24365 046a B3F90030 		ldrsh	r3, [r3]
 24366 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3494:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24367              		.loc 1 3494 0
 24368 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24369 0476 0133     		adds	r3, r3, #1
 24370 0478 07F5C372 		add	r2, r7, #390
 24371 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24372 047e 3A46     		mov	r2, r7
 24373 0480 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 531


3495:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24374              		.loc 1 3495 0
 24375 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24376 0486 07F5C373 		add	r3, r7, #390
 24377 048a 0133     		adds	r3, r3, #1
 24378 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24379 048e 3B46     		mov	r3, r7
 24380 0490 9954     		strb	r1, [r3, r2]
3496:..\src/command_processing.c ****             c = c + 2;
 24381              		.loc 1 3496 0
 24382 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24383 0496 0233     		adds	r3, r3, #2
 24384 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24385              	.L952:
3497:..\src/command_processing.c ****         }
3498:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24386              		.loc 1 3498 0
 24387 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24388 04a0 384A     		ldr	r2, .L958+4
 24389 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24390 04a4 1A46     		mov	r2, r3
 24391 04a6 394B     		ldr	r3, .L958+12
 24392 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24393 04ac 013B     		subs	r3, r3, #1
 24394 04ae 3A46     		mov	r2, r7
 24395 04b0 3A21     		movs	r1, #58
 24396 04b2 D154     		strb	r1, [r2, r3]
3499:..\src/command_processing.c ****         c = 1;
 24397              		.loc 1 3499 0
 24398 04b4 0123     		movs	r3, #1
 24399 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3500:..\src/command_processing.c ****                
3501:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24400              		.loc 1 3501 0
 24401 04ba 0023     		movs	r3, #0
 24402 04bc 87F88B31 		strb	r3, [r7, #395]
 24403 04c0 10E0     		b	.L953
 24404              	.L954:
3502:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24405              		.loc 1 3502 0 discriminator 3
 24406 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24407 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24408 04ca 1344     		add	r3, r3, r2
 24409 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24410 04d0 3946     		mov	r1, r7
 24411 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24412 04d4 07F12002 		add	r2, r7, #32
 24413 04d8 D154     		strb	r1, [r2, r3]
3501:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24414              		.loc 1 3501 0 discriminator 3
 24415 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24416 04de 0133     		adds	r3, r3, #1
 24417 04e0 87F88B31 		strb	r3, [r7, #395]
 24418              	.L953:
3501:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24419              		.loc 1 3501 0 is_stmt 0 discriminator 1
 24420 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 532


 24421 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24422 04ec 2549     		ldr	r1, .L958+4
 24423 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24424 04f0 1946     		mov	r1, r3
 24425 04f2 264B     		ldr	r3, .L958+12
 24426 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24427 04f8 9A42     		cmp	r2, r3
 24428 04fa E2DB     		blt	.L954
3503:..\src/command_processing.c ****         }
3504:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24429              		.loc 1 3504 0 is_stmt 1 discriminator 2
 24430 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24431 0500 204A     		ldr	r2, .L958+4
 24432 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24433 0504 1A46     		mov	r2, r3
 24434 0506 214B     		ldr	r3, .L958+12
 24435 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24436 050c 9AB2     		uxth	r2, r3
 24437 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24438 0512 1344     		add	r3, r3, r2
 24439 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3505:..\src/command_processing.c ****         
3506:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 24440              		.loc 1 3506 0 discriminator 2
 24441 0518 3B46     		mov	r3, r7
 24442 051a 2022     		movs	r2, #32
 24443 051c 0021     		movs	r1, #0
 24444 051e 1846     		mov	r0, r3
 24445 0520 FFF7FEFF 		bl	memset
3421:..\src/command_processing.c ****     {	
 24446              		.loc 1 3421 0 discriminator 2
 24447 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24448 0528 0133     		adds	r3, r3, #1
 24449 052a 87F88F31 		strb	r3, [r7, #399]
 24450              	.L939:
3421:..\src/command_processing.c ****     {	
 24451              		.loc 1 3421 0 is_stmt 0 discriminator 1
 24452 052e 184B     		ldr	r3, .L958+16
 24453 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24454 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24455 0536 9A42     		cmp	r2, r3
 24456 0538 FFF476AD 		bcc	.L955
3507:..\src/command_processing.c ****         
3508:..\src/command_processing.c ****     }
3509:..\src/command_processing.c **** 
3510:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3511:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24457              		.loc 1 3511 0 is_stmt 1
 24458 053c 154B     		ldr	r3, .L958+20
 24459 053e 1B68     		ldr	r3, [r3]
 24460 0540 5C1E     		subs	r4, r3, #1
 24461 0542 144B     		ldr	r3, .L958+20
 24462 0544 1B68     		ldr	r3, [r3]
 24463 0546 DBB2     		uxtb	r3, r3
 24464 0548 013B     		subs	r3, r3, #1
 24465 054a DAB2     		uxtb	r2, r3
 24466 054c 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 533


 24467 0550 1146     		mov	r1, r2
 24468 0552 1846     		mov	r0, r3
 24469 0554 FFF7FEFF 		bl	LCRChecksum
 24470 0558 0346     		mov	r3, r0
 24471 055a 1A46     		mov	r2, r3
 24472 055c 07F12003 		add	r3, r7, #32
 24473 0560 1A55     		strb	r2, [r3, r4]
3512:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24474              		.loc 1 3512 0
 24475 0562 0C4B     		ldr	r3, .L958+20
 24476 0564 1B68     		ldr	r3, [r3]
 24477 0566 9AB2     		uxth	r2, r3
 24478 0568 07F12003 		add	r3, r7, #32
 24479 056c 1146     		mov	r1, r2
 24480 056e 1846     		mov	r0, r3
 24481 0570 FFF7FEFF 		bl	commWrite
3513:..\src/command_processing.c **** }
 24482              		.loc 1 3513 0
 24483 0574 00BF     		nop
 24484 0576 07F5CA77 		add	r7, r7, #404
 24485              		.cfi_def_cfa_offset 12
 24486 057a BD46     		mov	sp, r7
 24487              		.cfi_def_cfa_register 13
 24488              		@ sp needed
 24489 057c 90BD     		pop	{r4, r7, pc}
 24490              	.L959:
 24491 057e 00BF     		.align	2
 24492              	.L958:
 24493 0580 00000000 		.word	g_imu
 24494 0584 00000000 		.word	IMU_connected
 24495 0588 00000000 		.word	c_mem
 24496 058c 00000000 		.word	single_imu_size
 24497 0590 00000000 		.word	N_IMU_Connected
 24498 0594 00000000 		.word	imus_data_size
 24499              		.cfi_endproc
 24500              	.LFE102:
 24501              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 24502              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 24503              		.align	2
 24504              		.global	cmd_get_encoder_map
 24505              		.thumb
 24506              		.thumb_func
 24507              		.type	cmd_get_encoder_map, %function
 24508              	cmd_get_encoder_map:
 24509              	.LFB103:
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c **** void cmd_get_encoder_map(){
 24510              		.loc 1 3515 0
 24511              		.cfi_startproc
 24512              		@ args = 0, pretend = 0, frame = 16
 24513              		@ frame_needed = 1, uses_anonymous_args = 0
 24514 0000 90B5     		push	{r4, r7, lr}
 24515              		.cfi_def_cfa_offset 12
 24516              		.cfi_offset 4, -12
 24517              		.cfi_offset 7, -8
 24518              		.cfi_offset 14, -4
 24519 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 534


 24520              		.cfi_def_cfa_offset 32
 24521 0004 00AF     		add	r7, sp, #0
 24522              		.cfi_def_cfa_register 7
3516:..\src/command_processing.c ****     //Retrieve Encoder map
3517:..\src/command_processing.c ****     
3518:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3519:..\src/command_processing.c ****     uint8 CYDATA i, j;
3520:..\src/command_processing.c ****     
3521:..\src/command_processing.c ****     // Header        
3522:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 24523              		.loc 1 3522 0
 24524 0006 A323     		movs	r3, #163
 24525 0008 3B70     		strb	r3, [r7]
3523:..\src/command_processing.c ****     
3524:..\src/command_processing.c ****     // Fill payload
3525:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 24526              		.loc 1 3525 0
 24527 000a 0223     		movs	r3, #2
 24528 000c 7B70     		strb	r3, [r7, #1]
3526:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 24529              		.loc 1 3526 0
 24530 000e 0523     		movs	r3, #5
 24531 0010 BB70     		strb	r3, [r7, #2]
3527:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24532              		.loc 1 3527 0
 24533 0012 0023     		movs	r3, #0
 24534 0014 FB73     		strb	r3, [r7, #15]
 24535 0016 23E0     		b	.L961
 24536              	.L964:
3528:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24537              		.loc 1 3528 0
 24538 0018 0023     		movs	r3, #0
 24539 001a BB73     		strb	r3, [r7, #14]
 24540 001c 1AE0     		b	.L962
 24541              	.L963:
3529:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 24542              		.loc 1 3529 0 discriminator 3
 24543 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24544 0020 1346     		mov	r3, r2
 24545 0022 9B00     		lsls	r3, r3, #2
 24546 0024 1344     		add	r3, r3, r2
 24547 0026 DA1C     		adds	r2, r3, #3
 24548 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24549 002a D118     		adds	r1, r2, r3
 24550 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24551 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 24552 0030 154C     		ldr	r4, .L965
 24553 0032 1346     		mov	r3, r2
 24554 0034 5B00     		lsls	r3, r3, #1
 24555 0036 1344     		add	r3, r3, r2
 24556 0038 1B01     		lsls	r3, r3, #4
 24557 003a 2344     		add	r3, r3, r4
 24558 003c 0344     		add	r3, r3, r0
 24559 003e 03F5C873 		add	r3, r3, #400
 24560 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 24561 0044 07F11003 		add	r3, r7, #16
 24562 0048 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 535


 24563 004a 03F8102C 		strb	r2, [r3, #-16]
3528:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24564              		.loc 1 3528 0 discriminator 3
 24565 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24566 0050 0133     		adds	r3, r3, #1
 24567 0052 BB73     		strb	r3, [r7, #14]
 24568              	.L962:
3528:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 24569              		.loc 1 3528 0 is_stmt 0 discriminator 1
 24570 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24571 0056 042B     		cmp	r3, #4
 24572 0058 E1D9     		bls	.L963
3527:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24573              		.loc 1 3527 0 is_stmt 1 discriminator 2
 24574 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24575 005c 0133     		adds	r3, r3, #1
 24576 005e FB73     		strb	r3, [r7, #15]
 24577              	.L961:
3527:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24578              		.loc 1 3527 0 is_stmt 0 discriminator 1
 24579 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24580 0062 012B     		cmp	r3, #1
 24581 0064 D8D9     		bls	.L964
3530:..\src/command_processing.c ****         }
3531:..\src/command_processing.c ****     }
3532:..\src/command_processing.c ****     
3533:..\src/command_processing.c ****     // Calculate checksum
3534:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 24582              		.loc 1 3534 0 is_stmt 1
 24583 0066 3B46     		mov	r3, r7
 24584 0068 0D21     		movs	r1, #13
 24585 006a 1846     		mov	r0, r3
 24586 006c FFF7FEFF 		bl	LCRChecksum
 24587 0070 0346     		mov	r3, r0
 24588 0072 7B73     		strb	r3, [r7, #13]
3535:..\src/command_processing.c ****     
3536:..\src/command_processing.c ****     // Send package to UART
3537:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 24589              		.loc 1 3537 0
 24590 0074 3B46     		mov	r3, r7
 24591 0076 0E21     		movs	r1, #14
 24592 0078 1846     		mov	r0, r3
 24593 007a FFF7FEFF 		bl	commWrite
3538:..\src/command_processing.c **** }
 24594              		.loc 1 3538 0
 24595 007e 00BF     		nop
 24596 0080 1437     		adds	r7, r7, #20
 24597              		.cfi_def_cfa_offset 12
 24598 0082 BD46     		mov	sp, r7
 24599              		.cfi_def_cfa_register 13
 24600              		@ sp needed
 24601 0084 90BD     		pop	{r4, r7, pc}
 24602              	.L966:
 24603 0086 00BF     		.align	2
 24604              	.L965:
 24605 0088 00000000 		.word	c_mem
 24606              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 536


 24607              	.LFE103:
 24608              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 24609              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 24610              		.align	2
 24611              		.global	cmd_get_encoder_raw
 24612              		.thumb
 24613              		.thumb_func
 24614              		.type	cmd_get_encoder_raw, %function
 24615              	cmd_get_encoder_raw:
 24616              	.LFB104:
3539:..\src/command_processing.c **** 
3540:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 24617              		.loc 1 3540 0
 24618              		.cfi_startproc
 24619              		@ args = 0, pretend = 0, frame = 32
 24620              		@ frame_needed = 1, uses_anonymous_args = 0
 24621 0000 90B5     		push	{r4, r7, lr}
 24622              		.cfi_def_cfa_offset 12
 24623              		.cfi_offset 4, -12
 24624              		.cfi_offset 7, -8
 24625              		.cfi_offset 14, -4
 24626 0002 89B0     		sub	sp, sp, #36
 24627              		.cfi_def_cfa_offset 48
 24628 0004 00AF     		add	r7, sp, #0
 24629              		.cfi_def_cfa_register 7
3541:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3542:..\src/command_processing.c ****     
3543:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3544:..\src/command_processing.c ****     uint8 i, j, idx;
3545:..\src/command_processing.c ****     uint16 aux_uint16;
3546:..\src/command_processing.c ****     
3547:..\src/command_processing.c ****     //Header package 
3548:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 24630              		.loc 1 3548 0
 24631 0006 A423     		movs	r3, #164
 24632 0008 3B71     		strb	r3, [r7, #4]
3549:..\src/command_processing.c ****  
3550:..\src/command_processing.c ****     // Fill payload
3551:..\src/command_processing.c ****     idx = 0;
 24633              		.loc 1 3551 0
 24634 000a 0023     		movs	r3, #0
 24635 000c 7B77     		strb	r3, [r7, #29]
3552:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 24636              		.loc 1 3552 0
 24637 000e 0023     		movs	r3, #0
 24638 0010 FB77     		strb	r3, [r7, #31]
 24639 0012 3FE0     		b	.L968
 24640              	.L972:
3553:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24641              		.loc 1 3553 0
 24642 0014 0023     		movs	r3, #0
 24643 0016 BB77     		strb	r3, [r7, #30]
 24644 0018 33E0     		b	.L969
 24645              	.L971:
3554:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24646              		.loc 1 3554 0
 24647 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 537


 24648 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24649 001e 3048     		ldr	r0, .L973
 24650 0020 1346     		mov	r3, r2
 24651 0022 5B00     		lsls	r3, r3, #1
 24652 0024 1344     		add	r3, r3, r2
 24653 0026 1B01     		lsls	r3, r3, #4
 24654 0028 0344     		add	r3, r3, r0
 24655 002a 0B44     		add	r3, r3, r1
 24656 002c 03F5C873 		add	r3, r3, #400
 24657 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24658 0032 012B     		cmp	r3, #1
 24659 0034 22D1     		bne	.L970
3555:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 24660              		.loc 1 3555 0
 24661 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24662 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 24663 003a 2A48     		ldr	r0, .L973+4
 24664 003c 1346     		mov	r3, r2
 24665 003e 9B00     		lsls	r3, r3, #2
 24666 0040 1344     		add	r3, r3, r2
 24667 0042 0B44     		add	r3, r3, r1
 24668 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 24669 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3556:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 24670              		.loc 1 3556 0
 24671 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24672 004c 5B00     		lsls	r3, r3, #1
 24673 004e 0233     		adds	r3, r3, #2
 24674 0050 BA1C     		adds	r2, r7, #2
 24675 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24676 0054 07F12001 		add	r1, r7, #32
 24677 0058 0B44     		add	r3, r3, r1
 24678 005a 03F81C2C 		strb	r2, [r3, #-28]
3557:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 24679              		.loc 1 3557 0
 24680 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24681 0060 5B00     		lsls	r3, r3, #1
 24682 0062 5A1C     		adds	r2, r3, #1
 24683 0064 BB1C     		adds	r3, r7, #2
 24684 0066 0133     		adds	r3, r3, #1
 24685 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24686 006a 07F12003 		add	r3, r7, #32
 24687 006e 1344     		add	r3, r3, r2
 24688 0070 0A46     		mov	r2, r1
 24689 0072 03F81C2C 		strb	r2, [r3, #-28]
3558:..\src/command_processing.c ****                 idx++;
 24690              		.loc 1 3558 0
 24691 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24692 0078 0133     		adds	r3, r3, #1
 24693 007a 7B77     		strb	r3, [r7, #29]
 24694              	.L970:
3553:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24695              		.loc 1 3553 0 discriminator 2
 24696 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24697 007e 0133     		adds	r3, r3, #1
 24698 0080 BB77     		strb	r3, [r7, #30]
 24699              	.L969:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 538


3553:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 24700              		.loc 1 3553 0 is_stmt 0 discriminator 1
 24701 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24702 0084 184A     		ldr	r2, .L973+8
 24703 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24704 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 24705 008a 9A42     		cmp	r2, r3
 24706 008c C5D3     		bcc	.L971
3552:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24707              		.loc 1 3552 0 is_stmt 1 discriminator 2
 24708 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24709 0090 0133     		adds	r3, r3, #1
 24710 0092 FB77     		strb	r3, [r7, #31]
 24711              	.L968:
3552:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 24712              		.loc 1 3552 0 is_stmt 0 discriminator 1
 24713 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24714 0096 012B     		cmp	r3, #1
 24715 0098 BCD9     		bls	.L972
3559:..\src/command_processing.c ****             }
3560:..\src/command_processing.c ****         }
3561:..\src/command_processing.c ****     }
3562:..\src/command_processing.c **** 
3563:..\src/command_processing.c ****     // Calculate checksum
3564:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24716              		.loc 1 3564 0 is_stmt 1
 24717 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24718 009c 5B00     		lsls	r3, r3, #1
 24719 009e 5C1C     		adds	r4, r3, #1
 24720 00a0 7B7F     		ldrb	r3, [r7, #29]
 24721 00a2 5B00     		lsls	r3, r3, #1
 24722 00a4 DBB2     		uxtb	r3, r3
 24723 00a6 0133     		adds	r3, r3, #1
 24724 00a8 DAB2     		uxtb	r2, r3
 24725 00aa 3B1D     		adds	r3, r7, #4
 24726 00ac 1146     		mov	r1, r2
 24727 00ae 1846     		mov	r0, r3
 24728 00b0 FFF7FEFF 		bl	LCRChecksum
 24729 00b4 0346     		mov	r3, r0
 24730 00b6 1A46     		mov	r2, r3
 24731 00b8 07F12003 		add	r3, r7, #32
 24732 00bc 2344     		add	r3, r3, r4
 24733 00be 03F81C2C 		strb	r2, [r3, #-28]
3565:..\src/command_processing.c ****     
3566:..\src/command_processing.c ****     // Send package to UART
3567:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24734              		.loc 1 3567 0
 24735 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24736 00c4 0133     		adds	r3, r3, #1
 24737 00c6 9BB2     		uxth	r3, r3
 24738 00c8 5B00     		lsls	r3, r3, #1
 24739 00ca 9AB2     		uxth	r2, r3
 24740 00cc 3B1D     		adds	r3, r7, #4
 24741 00ce 1146     		mov	r1, r2
 24742 00d0 1846     		mov	r0, r3
 24743 00d2 FFF7FEFF 		bl	commWrite
3568:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 539


 24744              		.loc 1 3568 0
 24745 00d6 00BF     		nop
 24746 00d8 2437     		adds	r7, r7, #36
 24747              		.cfi_def_cfa_offset 12
 24748 00da BD46     		mov	sp, r7
 24749              		.cfi_def_cfa_register 13
 24750              		@ sp needed
 24751 00dc 90BD     		pop	{r4, r7, pc}
 24752              	.L974:
 24753 00de 00BF     		.align	2
 24754              	.L973:
 24755 00e0 00000000 		.word	c_mem
 24756 00e4 00000000 		.word	Encoder_Value
 24757 00e8 00000000 		.word	N_Encoder_Line_Connected
 24758              		.cfi_endproc
 24759              	.LFE104:
 24760              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 24761              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 24762              		.align	2
 24763              		.global	cmd_get_ADC_map
 24764              		.thumb
 24765              		.thumb_func
 24766              		.type	cmd_get_ADC_map, %function
 24767              	cmd_get_ADC_map:
 24768              	.LFB105:
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c **** void cmd_get_ADC_map(){
 24769              		.loc 1 3570 0
 24770              		.cfi_startproc
 24771              		@ args = 0, pretend = 0, frame = 16
 24772              		@ frame_needed = 1, uses_anonymous_args = 0
 24773 0000 80B5     		push	{r7, lr}
 24774              		.cfi_def_cfa_offset 8
 24775              		.cfi_offset 7, -8
 24776              		.cfi_offset 14, -4
 24777 0002 84B0     		sub	sp, sp, #16
 24778              		.cfi_def_cfa_offset 24
 24779 0004 00AF     		add	r7, sp, #0
 24780              		.cfi_def_cfa_register 7
3571:..\src/command_processing.c ****     //Retrieve Encoder map
3572:..\src/command_processing.c ****     
3573:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3574:..\src/command_processing.c ****     uint8 CYDATA i;
3575:..\src/command_processing.c ****     
3576:..\src/command_processing.c ****     // Header        
3577:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 24781              		.loc 1 3577 0
 24782 0006 A523     		movs	r3, #165
 24783 0008 3B70     		strb	r3, [r7]
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c ****     // Fill payload
3580:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 24784              		.loc 1 3580 0
 24785 000a 0C23     		movs	r3, #12
 24786 000c 7B70     		strb	r3, [r7, #1]
3581:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24787              		.loc 1 3581 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 540


 24788 000e 0023     		movs	r3, #0
 24789 0010 FB73     		strb	r3, [r7, #15]
 24790 0012 0EE0     		b	.L976
 24791              	.L977:
3582:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 24792              		.loc 1 3582 0 discriminator 3
 24793 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24794 0016 0233     		adds	r3, r3, #2
 24795 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24796 001a 0F49     		ldr	r1, .L978
 24797 001c 0A44     		add	r2, r2, r1
 24798 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 24799 0022 07F11001 		add	r1, r7, #16
 24800 0026 0B44     		add	r3, r3, r1
 24801 0028 03F8102C 		strb	r2, [r3, #-16]
3581:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24802              		.loc 1 3581 0 discriminator 3
 24803 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24804 002e 0133     		adds	r3, r3, #1
 24805 0030 FB73     		strb	r3, [r7, #15]
 24806              	.L976:
3581:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24807              		.loc 1 3581 0 is_stmt 0 discriminator 1
 24808 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24809 0034 0B2B     		cmp	r3, #11
 24810 0036 EDD9     		bls	.L977
3583:..\src/command_processing.c ****     }
3584:..\src/command_processing.c ****     
3585:..\src/command_processing.c ****     // Calculate checksum
3586:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 24811              		.loc 1 3586 0 is_stmt 1
 24812 0038 3B46     		mov	r3, r7
 24813 003a 0E21     		movs	r1, #14
 24814 003c 1846     		mov	r0, r3
 24815 003e FFF7FEFF 		bl	LCRChecksum
 24816 0042 0346     		mov	r3, r0
 24817 0044 BB73     		strb	r3, [r7, #14]
3587:..\src/command_processing.c ****     
3588:..\src/command_processing.c ****     // Send package to UART
3589:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 24818              		.loc 1 3589 0
 24819 0046 3B46     		mov	r3, r7
 24820 0048 0F21     		movs	r1, #15
 24821 004a 1846     		mov	r0, r3
 24822 004c FFF7FEFF 		bl	commWrite
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c **** }
 24823              		.loc 1 3591 0
 24824 0050 00BF     		nop
 24825 0052 1037     		adds	r7, r7, #16
 24826              		.cfi_def_cfa_offset 8
 24827 0054 BD46     		mov	sp, r7
 24828              		.cfi_def_cfa_register 13
 24829              		@ sp needed
 24830 0056 80BD     		pop	{r7, pc}
 24831              	.L979:
 24832              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 541


 24833              	.L978:
 24834 0058 00000000 		.word	c_mem
 24835              		.cfi_endproc
 24836              	.LFE105:
 24837              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 24838              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 24839              		.align	2
 24840              		.global	cmd_get_ADC_raw
 24841              		.thumb
 24842              		.thumb_func
 24843              		.type	cmd_get_ADC_raw, %function
 24844              	cmd_get_ADC_raw:
 24845              	.LFB106:
3592:..\src/command_processing.c **** 
3593:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 24846              		.loc 1 3593 0
 24847              		.cfi_startproc
 24848              		@ args = 0, pretend = 0, frame = 32
 24849              		@ frame_needed = 1, uses_anonymous_args = 0
 24850 0000 90B5     		push	{r4, r7, lr}
 24851              		.cfi_def_cfa_offset 12
 24852              		.cfi_offset 4, -12
 24853              		.cfi_offset 7, -8
 24854              		.cfi_offset 14, -4
 24855 0002 89B0     		sub	sp, sp, #36
 24856              		.cfi_def_cfa_offset 48
 24857 0004 00AF     		add	r7, sp, #0
 24858              		.cfi_def_cfa_register 7
3594:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3595:..\src/command_processing.c ****     
3596:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3597:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 24859              		.loc 1 3597 0
 24860 0006 0023     		movs	r3, #0
 24861 0008 BB77     		strb	r3, [r7, #30]
3598:..\src/command_processing.c ****     int16 aux_int16;
3599:..\src/command_processing.c ****     
3600:..\src/command_processing.c ****     // Header        
3601:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 24862              		.loc 1 3601 0
 24863 000a A623     		movs	r3, #166
 24864 000c 3B71     		strb	r3, [r7, #4]
3602:..\src/command_processing.c ****     
3603:..\src/command_processing.c ****     // Fill payload
3604:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 24865              		.loc 1 3604 0
 24866 000e 0023     		movs	r3, #0
 24867 0010 FB77     		strb	r3, [r7, #31]
 24868 0012 27E0     		b	.L981
 24869              	.L983:
3605:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24870              		.loc 1 3605 0
 24871 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24872 0016 274A     		ldr	r2, .L984
 24873 0018 1344     		add	r3, r3, r2
 24874 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 24875 001e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 542


 24876 0020 1DD1     		bne	.L982
3606:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 24877              		.loc 1 3606 0
 24878 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24879 0024 244A     		ldr	r2, .L984+4
 24880 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 24881 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3607:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 24882              		.loc 1 3607 0
 24883 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24884 002e 5B00     		lsls	r3, r3, #1
 24885 0030 0233     		adds	r3, r3, #2
 24886 0032 BA1C     		adds	r2, r7, #2
 24887 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24888 0036 07F12001 		add	r1, r7, #32
 24889 003a 0B44     		add	r3, r3, r1
 24890 003c 03F81C2C 		strb	r2, [r3, #-28]
3608:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 24891              		.loc 1 3608 0
 24892 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24893 0042 5B00     		lsls	r3, r3, #1
 24894 0044 5A1C     		adds	r2, r3, #1
 24895 0046 BB1C     		adds	r3, r7, #2
 24896 0048 0133     		adds	r3, r3, #1
 24897 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24898 004c 07F12003 		add	r3, r7, #32
 24899 0050 1344     		add	r3, r3, r2
 24900 0052 0A46     		mov	r2, r1
 24901 0054 03F81C2C 		strb	r2, [r3, #-28]
3609:..\src/command_processing.c ****             idx++;
 24902              		.loc 1 3609 0
 24903 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24904 005a 0133     		adds	r3, r3, #1
 24905 005c BB77     		strb	r3, [r7, #30]
 24906              	.L982:
3604:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24907              		.loc 1 3604 0 discriminator 2
 24908 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24909 0060 0133     		adds	r3, r3, #1
 24910 0062 FB77     		strb	r3, [r7, #31]
 24911              	.L981:
3604:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24912              		.loc 1 3604 0 is_stmt 0 discriminator 1
 24913 0064 154B     		ldr	r3, .L984+8
 24914 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24915 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24916 006a 9A42     		cmp	r2, r3
 24917 006c D2D3     		bcc	.L983
3610:..\src/command_processing.c ****         }
3611:..\src/command_processing.c ****     }
3612:..\src/command_processing.c **** 
3613:..\src/command_processing.c ****     // Calculate checksum
3614:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24918              		.loc 1 3614 0 is_stmt 1
 24919 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24920 0070 5B00     		lsls	r3, r3, #1
 24921 0072 5C1C     		adds	r4, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 543


 24922 0074 BB7F     		ldrb	r3, [r7, #30]
 24923 0076 5B00     		lsls	r3, r3, #1
 24924 0078 DBB2     		uxtb	r3, r3
 24925 007a 0133     		adds	r3, r3, #1
 24926 007c DAB2     		uxtb	r2, r3
 24927 007e 3B1D     		adds	r3, r7, #4
 24928 0080 1146     		mov	r1, r2
 24929 0082 1846     		mov	r0, r3
 24930 0084 FFF7FEFF 		bl	LCRChecksum
 24931 0088 0346     		mov	r3, r0
 24932 008a 1A46     		mov	r2, r3
 24933 008c 07F12003 		add	r3, r7, #32
 24934 0090 2344     		add	r3, r3, r4
 24935 0092 03F81C2C 		strb	r2, [r3, #-28]
3615:..\src/command_processing.c ****     
3616:..\src/command_processing.c ****     // Send package to UART
3617:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24936              		.loc 1 3617 0
 24937 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24938 0098 0133     		adds	r3, r3, #1
 24939 009a 9BB2     		uxth	r3, r3
 24940 009c 5B00     		lsls	r3, r3, #1
 24941 009e 9AB2     		uxth	r2, r3
 24942 00a0 3B1D     		adds	r3, r7, #4
 24943 00a2 1146     		mov	r1, r2
 24944 00a4 1846     		mov	r0, r3
 24945 00a6 FFF7FEFF 		bl	commWrite
3618:..\src/command_processing.c **** }
 24946              		.loc 1 3618 0
 24947 00aa 00BF     		nop
 24948 00ac 2437     		adds	r7, r7, #36
 24949              		.cfi_def_cfa_offset 12
 24950 00ae BD46     		mov	sp, r7
 24951              		.cfi_def_cfa_register 13
 24952              		@ sp needed
 24953 00b0 90BD     		pop	{r4, r7, pc}
 24954              	.L985:
 24955 00b2 00BF     		.align	2
 24956              	.L984:
 24957 00b4 00000000 		.word	c_mem
 24958 00b8 00000000 		.word	ADC_buf
 24959 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 24960              		.cfi_endproc
 24961              	.LFE106:
 24962              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 24963              		.bss
 24964              		.align	2
 24965              	last_aux_int16.11245:
 24966 0000 00000000 		.space	4
 24967              		.text
 24968              	.Letext0:
 24969              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24970              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24971              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 24972              		.file 6 "..\\src\\commands.h"
 24973              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 24974              		.file 8 "..\\src\\globals.h"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 544


 24975              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 24976              		.section	.debug_info,"",%progbits
 24977              	.Ldebug_info0:
 24978 0000 B9200000 		.4byte	0x20b9
 24979 0004 0400     		.2byte	0x4
 24980 0006 00000000 		.4byte	.Ldebug_abbrev0
 24981 000a 04       		.byte	0x4
 24982 000b 01       		.uleb128 0x1
 24983 000c B5070000 		.4byte	.LASF338
 24984 0010 0C       		.byte	0xc
 24985 0011 7C110000 		.4byte	.LASF339
 24986 0015 C8030000 		.4byte	.LASF340
 24987 0019 00000000 		.4byte	.Ldebug_ranges0+0
 24988 001d 00000000 		.4byte	0
 24989 0021 00000000 		.4byte	.Ldebug_line0
 24990 0025 02       		.uleb128 0x2
 24991 0026 01       		.byte	0x1
 24992 0027 06       		.byte	0x6
 24993 0028 0C030000 		.4byte	.LASF0
 24994 002c 02       		.uleb128 0x2
 24995 002d 01       		.byte	0x1
 24996 002e 08       		.byte	0x8
 24997 002f 6A030000 		.4byte	.LASF1
 24998 0033 02       		.uleb128 0x2
 24999 0034 02       		.byte	0x2
 25000 0035 05       		.byte	0x5
 25001 0036 4E0E0000 		.4byte	.LASF2
 25002 003a 02       		.uleb128 0x2
 25003 003b 02       		.byte	0x2
 25004 003c 07       		.byte	0x7
 25005 003d A3100000 		.4byte	.LASF3
 25006 0041 03       		.uleb128 0x3
 25007 0042 3A110000 		.4byte	.LASF5
 25008 0046 03       		.byte	0x3
 25009 0047 3F       		.byte	0x3f
 25010 0048 4C000000 		.4byte	0x4c
 25011 004c 02       		.uleb128 0x2
 25012 004d 04       		.byte	0x4
 25013 004e 05       		.byte	0x5
 25014 004f 22020000 		.4byte	.LASF4
 25015 0053 03       		.uleb128 0x3
 25016 0054 6F080000 		.4byte	.LASF6
 25017 0058 03       		.byte	0x3
 25018 0059 41       		.byte	0x41
 25019 005a 5E000000 		.4byte	0x5e
 25020 005e 02       		.uleb128 0x2
 25021 005f 04       		.byte	0x4
 25022 0060 07       		.byte	0x7
 25023 0061 78060000 		.4byte	.LASF7
 25024 0065 02       		.uleb128 0x2
 25025 0066 08       		.byte	0x8
 25026 0067 05       		.byte	0x5
 25027 0068 7A080000 		.4byte	.LASF8
 25028 006c 02       		.uleb128 0x2
 25029 006d 08       		.byte	0x8
 25030 006e 07       		.byte	0x7
 25031 006f D10B0000 		.4byte	.LASF9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 545


 25032 0073 04       		.uleb128 0x4
 25033 0074 04       		.byte	0x4
 25034 0075 05       		.byte	0x5
 25035 0076 696E7400 		.ascii	"int\000"
 25036 007a 02       		.uleb128 0x2
 25037 007b 04       		.byte	0x4
 25038 007c 07       		.byte	0x7
 25039 007d 65090000 		.4byte	.LASF10
 25040 0081 03       		.uleb128 0x3
 25041 0082 55000000 		.4byte	.LASF11
 25042 0086 04       		.byte	0x4
 25043 0087 2C       		.byte	0x2c
 25044 0088 41000000 		.4byte	0x41
 25045 008c 03       		.uleb128 0x3
 25046 008d 1A100000 		.4byte	.LASF12
 25047 0091 04       		.byte	0x4
 25048 0092 30       		.byte	0x30
 25049 0093 53000000 		.4byte	0x53
 25050 0097 05       		.uleb128 0x5
 25051 0098 3C0E0000 		.4byte	.LASF13
 25052 009c 05       		.byte	0x5
 25053 009d E401     		.2byte	0x1e4
 25054 009f 2C000000 		.4byte	0x2c
 25055 00a3 05       		.uleb128 0x5
 25056 00a4 CF110000 		.4byte	.LASF14
 25057 00a8 05       		.byte	0x5
 25058 00a9 E501     		.2byte	0x1e5
 25059 00ab 3A000000 		.4byte	0x3a
 25060 00af 05       		.uleb128 0x5
 25061 00b0 81000000 		.4byte	.LASF15
 25062 00b4 05       		.byte	0x5
 25063 00b5 E601     		.2byte	0x1e6
 25064 00b7 5E000000 		.4byte	0x5e
 25065 00bb 05       		.uleb128 0x5
 25066 00bc 6A010000 		.4byte	.LASF16
 25067 00c0 05       		.byte	0x5
 25068 00c1 E701     		.2byte	0x1e7
 25069 00c3 25000000 		.4byte	0x25
 25070 00c7 05       		.uleb128 0x5
 25071 00c8 7A0F0000 		.4byte	.LASF17
 25072 00cc 05       		.byte	0x5
 25073 00cd E801     		.2byte	0x1e8
 25074 00cf 33000000 		.4byte	0x33
 25075 00d3 05       		.uleb128 0x5
 25076 00d4 DD100000 		.4byte	.LASF18
 25077 00d8 05       		.byte	0x5
 25078 00d9 E901     		.2byte	0x1e9
 25079 00db 4C000000 		.4byte	0x4c
 25080 00df 05       		.uleb128 0x5
 25081 00e0 8F020000 		.4byte	.LASF19
 25082 00e4 05       		.byte	0x5
 25083 00e5 EA01     		.2byte	0x1ea
 25084 00e7 EB000000 		.4byte	0xeb
 25085 00eb 02       		.uleb128 0x2
 25086 00ec 04       		.byte	0x4
 25087 00ed 04       		.byte	0x4
 25088 00ee 2B090000 		.4byte	.LASF20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 546


 25089 00f2 02       		.uleb128 0x2
 25090 00f3 08       		.byte	0x8
 25091 00f4 04       		.byte	0x4
 25092 00f5 D2080000 		.4byte	.LASF21
 25093 00f9 02       		.uleb128 0x2
 25094 00fa 01       		.byte	0x1
 25095 00fb 08       		.byte	0x8
 25096 00fc 68040000 		.4byte	.LASF22
 25097 0100 05       		.uleb128 0x5
 25098 0101 B10C0000 		.4byte	.LASF23
 25099 0105 05       		.byte	0x5
 25100 0106 8E02     		.2byte	0x28e
 25101 0108 0C010000 		.4byte	0x10c
 25102 010c 06       		.uleb128 0x6
 25103 010d 97000000 		.4byte	0x97
 25104 0111 02       		.uleb128 0x2
 25105 0112 08       		.byte	0x8
 25106 0113 04       		.byte	0x4
 25107 0114 CE0A0000 		.4byte	.LASF24
 25108 0118 02       		.uleb128 0x2
 25109 0119 04       		.byte	0x4
 25110 011a 07       		.byte	0x7
 25111 011b 10000000 		.4byte	.LASF25
 25112 011f 07       		.uleb128 0x7
 25113 0120 04       		.byte	0x4
 25114 0121 F9000000 		.4byte	0xf9
 25115 0125 07       		.uleb128 0x7
 25116 0126 04       		.byte	0x4
 25117 0127 2B010000 		.4byte	0x12b
 25118 012b 08       		.uleb128 0x8
 25119 012c F9000000 		.4byte	0xf9
 25120 0130 09       		.uleb128 0x9
 25121 0131 F9000000 		.4byte	0xf9
 25122 0135 40010000 		.4byte	0x140
 25123 0139 0A       		.uleb128 0xa
 25124 013a 18010000 		.4byte	0x118
 25125 013e 19       		.byte	0x19
 25126 013f 00       		.byte	0
 25127 0140 09       		.uleb128 0x9
 25128 0141 F9000000 		.4byte	0xf9
 25129 0145 50010000 		.4byte	0x150
 25130 0149 0A       		.uleb128 0xa
 25131 014a 18010000 		.4byte	0x118
 25132 014e 07       		.byte	0x7
 25133 014f 00       		.byte	0
 25134 0150 09       		.uleb128 0x9
 25135 0151 97000000 		.4byte	0x97
 25136 0155 60010000 		.4byte	0x160
 25137 0159 0A       		.uleb128 0xa
 25138 015a 18010000 		.4byte	0x118
 25139 015e 1B       		.byte	0x1b
 25140 015f 00       		.byte	0
 25141 0160 0B       		.uleb128 0xb
 25142 0161 9E090000 		.4byte	.LASF55
 25143 0165 01       		.byte	0x1
 25144 0166 2C000000 		.4byte	0x2c
 25145 016a 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 547


 25146 016b 42       		.byte	0x42
 25147 016c 1F020000 		.4byte	0x21f
 25148 0170 0C       		.uleb128 0xc
 25149 0171 F7110000 		.4byte	.LASF26
 25150 0175 00       		.byte	0
 25151 0176 0C       		.uleb128 0xc
 25152 0177 C00E0000 		.4byte	.LASF27
 25153 017b 01       		.byte	0x1
 25154 017c 0C       		.uleb128 0xc
 25155 017d 54060000 		.4byte	.LASF28
 25156 0181 03       		.byte	0x3
 25157 0182 0C       		.uleb128 0xc
 25158 0183 A2030000 		.4byte	.LASF29
 25159 0187 04       		.byte	0x4
 25160 0188 0C       		.uleb128 0xc
 25161 0189 D90C0000 		.4byte	.LASF30
 25162 018d 05       		.byte	0x5
 25163 018e 0C       		.uleb128 0xc
 25164 018f 5D070000 		.4byte	.LASF31
 25165 0193 06       		.byte	0x6
 25166 0194 0C       		.uleb128 0xc
 25167 0195 98060000 		.4byte	.LASF32
 25168 0199 09       		.byte	0x9
 25169 019a 0C       		.uleb128 0xc
 25170 019b 19000000 		.4byte	.LASF33
 25171 019f 0A       		.byte	0xa
 25172 01a0 0C       		.uleb128 0xc
 25173 01a1 5C0F0000 		.4byte	.LASF34
 25174 01a5 0C       		.byte	0xc
 25175 01a6 0C       		.uleb128 0xc
 25176 01a7 330B0000 		.4byte	.LASF35
 25177 01ab 0D       		.byte	0xd
 25178 01ac 0C       		.uleb128 0xc
 25179 01ad 43000000 		.4byte	.LASF36
 25180 01b1 80       		.byte	0x80
 25181 01b2 0C       		.uleb128 0xc
 25182 01b3 57040000 		.4byte	.LASF37
 25183 01b7 81       		.byte	0x81
 25184 01b8 0C       		.uleb128 0xc
 25185 01b9 4D050000 		.4byte	.LASF38
 25186 01bd 82       		.byte	0x82
 25187 01be 0C       		.uleb128 0xc
 25188 01bf 8A0E0000 		.4byte	.LASF39
 25189 01c3 83       		.byte	0x83
 25190 01c4 0C       		.uleb128 0xc
 25191 01c5 130E0000 		.4byte	.LASF40
 25192 01c9 84       		.byte	0x84
 25193 01ca 0C       		.uleb128 0xc
 25194 01cb A7020000 		.4byte	.LASF41
 25195 01cf 85       		.byte	0x85
 25196 01d0 0C       		.uleb128 0xc
 25197 01d1 9F070000 		.4byte	.LASF42
 25198 01d5 86       		.byte	0x86
 25199 01d6 0C       		.uleb128 0xc
 25200 01d7 3D070000 		.4byte	.LASF43
 25201 01db 88       		.byte	0x88
 25202 01dc 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 548


 25203 01dd 3D0F0000 		.4byte	.LASF44
 25204 01e1 89       		.byte	0x89
 25205 01e2 0C       		.uleb128 0xc
 25206 01e3 2F0C0000 		.4byte	.LASF45
 25207 01e7 8B       		.byte	0x8b
 25208 01e8 0C       		.uleb128 0xc
 25209 01e9 9F0A0000 		.4byte	.LASF46
 25210 01ed 8C       		.byte	0x8c
 25211 01ee 0C       		.uleb128 0xc
 25212 01ef 4A080000 		.4byte	.LASF47
 25213 01f3 8E       		.byte	0x8e
 25214 01f4 0C       		.uleb128 0xc
 25215 01f5 670C0000 		.4byte	.LASF48
 25216 01f9 90       		.byte	0x90
 25217 01fa 0C       		.uleb128 0xc
 25218 01fb 7C100000 		.4byte	.LASF49
 25219 01ff A1       		.byte	0xa1
 25220 0200 0C       		.uleb128 0xc
 25221 0201 D60D0000 		.4byte	.LASF50
 25222 0205 A2       		.byte	0xa2
 25223 0206 0C       		.uleb128 0xc
 25224 0207 F0090000 		.4byte	.LASF51
 25225 020b A3       		.byte	0xa3
 25226 020c 0C       		.uleb128 0xc
 25227 020d E80D0000 		.4byte	.LASF52
 25228 0211 A4       		.byte	0xa4
 25229 0212 0C       		.uleb128 0xc
 25230 0213 AF0E0000 		.4byte	.LASF53
 25231 0217 A5       		.byte	0xa5
 25232 0218 0C       		.uleb128 0xc
 25233 0219 9D0D0000 		.4byte	.LASF54
 25234 021d A6       		.byte	0xa6
 25235 021e 00       		.byte	0
 25236 021f 0B       		.uleb128 0xb
 25237 0220 A6110000 		.4byte	.LASF56
 25238 0224 01       		.byte	0x1
 25239 0225 2C000000 		.4byte	0x2c
 25240 0229 06       		.byte	0x6
 25241 022a 8B       		.byte	0x8b
 25242 022b 5A020000 		.4byte	0x25a
 25243 022f 0C       		.uleb128 0xc
 25244 0230 D9050000 		.4byte	.LASF57
 25245 0234 00       		.byte	0
 25246 0235 0C       		.uleb128 0xc
 25247 0236 DC090000 		.4byte	.LASF58
 25248 023a 01       		.byte	0x1
 25249 023b 0C       		.uleb128 0xc
 25250 023c D9010000 		.4byte	.LASF59
 25251 0240 02       		.byte	0x2
 25252 0241 0C       		.uleb128 0xc
 25253 0242 4C010000 		.4byte	.LASF60
 25254 0246 03       		.byte	0x3
 25255 0247 0C       		.uleb128 0xc
 25256 0248 FF000000 		.4byte	.LASF61
 25257 024c 04       		.byte	0x4
 25258 024d 0C       		.uleb128 0xc
 25259 024e 2B000000 		.4byte	.LASF62
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 549


 25260 0252 05       		.byte	0x5
 25261 0253 0C       		.uleb128 0xc
 25262 0254 B70D0000 		.4byte	.LASF63
 25263 0258 06       		.byte	0x6
 25264 0259 00       		.byte	0
 25265 025a 0B       		.uleb128 0xb
 25266 025b 88080000 		.4byte	.LASF64
 25267 025f 01       		.byte	0x1
 25268 0260 2C000000 		.4byte	0x2c
 25269 0264 06       		.byte	0x6
 25270 0265 9E       		.byte	0x9e
 25271 0266 83020000 		.4byte	0x283
 25272 026a 0C       		.uleb128 0xc
 25273 026b 1F110000 		.4byte	.LASF65
 25274 026f 00       		.byte	0
 25275 0270 0C       		.uleb128 0xc
 25276 0271 31070000 		.4byte	.LASF66
 25277 0275 01       		.byte	0x1
 25278 0276 0C       		.uleb128 0xc
 25279 0277 BE0A0000 		.4byte	.LASF67
 25280 027b 02       		.byte	0x2
 25281 027c 0C       		.uleb128 0xc
 25282 027d 3F060000 		.4byte	.LASF68
 25283 0281 03       		.byte	0x3
 25284 0282 00       		.byte	0
 25285 0283 0B       		.uleb128 0xb
 25286 0284 4B030000 		.4byte	.LASF69
 25287 0288 01       		.byte	0x1
 25288 0289 2C000000 		.4byte	0x2c
 25289 028d 06       		.byte	0x6
 25290 028e A8       		.byte	0xa8
 25291 028f A0020000 		.4byte	0x2a0
 25292 0293 0C       		.uleb128 0xc
 25293 0294 AD0D0000 		.4byte	.LASF70
 25294 0298 00       		.byte	0
 25295 0299 0C       		.uleb128 0xc
 25296 029a B4080000 		.4byte	.LASF71
 25297 029e 01       		.byte	0x1
 25298 029f 00       		.byte	0
 25299 02a0 0B       		.uleb128 0xb
 25300 02a1 800B0000 		.4byte	.LASF72
 25301 02a5 01       		.byte	0x1
 25302 02a6 2C000000 		.4byte	0x2c
 25303 02aa 06       		.byte	0x6
 25304 02ab AD       		.byte	0xad
 25305 02ac BD020000 		.4byte	0x2bd
 25306 02b0 0C       		.uleb128 0xc
 25307 02b1 BE050000 		.4byte	.LASF73
 25308 02b5 00       		.byte	0
 25309 02b6 0C       		.uleb128 0xc
 25310 02b7 EE060000 		.4byte	.LASF74
 25311 02bb 01       		.byte	0x1
 25312 02bc 00       		.byte	0
 25313 02bd 0B       		.uleb128 0xb
 25314 02be 6F0F0000 		.4byte	.LASF75
 25315 02c2 01       		.byte	0x1
 25316 02c3 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 550


 25317 02c7 06       		.byte	0x6
 25318 02c8 B5       		.byte	0xb5
 25319 02c9 0A030000 		.4byte	0x30a
 25320 02cd 0C       		.uleb128 0xc
 25321 02ce F5060000 		.4byte	.LASF76
 25322 02d2 00       		.byte	0
 25323 02d3 0C       		.uleb128 0xc
 25324 02d4 B4110000 		.4byte	.LASF77
 25325 02d8 01       		.byte	0x1
 25326 02d9 0C       		.uleb128 0xc
 25327 02da 98080000 		.4byte	.LASF78
 25328 02de 02       		.byte	0x2
 25329 02df 0C       		.uleb128 0xc
 25330 02e0 7B0A0000 		.4byte	.LASF79
 25331 02e4 03       		.byte	0x3
 25332 02e5 0C       		.uleb128 0xc
 25333 02e6 A9090000 		.4byte	.LASF80
 25334 02ea 04       		.byte	0x4
 25335 02eb 0C       		.uleb128 0xc
 25336 02ec E80B0000 		.4byte	.LASF81
 25337 02f0 05       		.byte	0x5
 25338 02f1 0C       		.uleb128 0xc
 25339 02f2 DA0A0000 		.4byte	.LASF82
 25340 02f6 06       		.byte	0x6
 25341 02f7 0C       		.uleb128 0xc
 25342 02f8 3D0A0000 		.4byte	.LASF83
 25343 02fc 07       		.byte	0x7
 25344 02fd 0C       		.uleb128 0xc
 25345 02fe 8E050000 		.4byte	.LASF84
 25346 0302 08       		.byte	0x8
 25347 0303 0C       		.uleb128 0xc
 25348 0304 33060000 		.4byte	.LASF85
 25349 0308 09       		.byte	0x9
 25350 0309 00       		.byte	0
 25351 030a 03       		.uleb128 0x3
 25352 030b 00110000 		.4byte	.LASF86
 25353 030f 07       		.byte	0x7
 25354 0310 7E       		.byte	0x7e
 25355 0311 15030000 		.4byte	0x315
 25356 0315 0D       		.uleb128 0xd
 25357 0316 00110000 		.4byte	.LASF86
 25358 031a 07       		.uleb128 0x7
 25359 031b 04       		.byte	0x4
 25360 031c 0A030000 		.4byte	0x30a
 25361 0320 0E       		.uleb128 0xe
 25362 0321 43080000 		.4byte	.LASF89
 25363 0325 10       		.byte	0x10
 25364 0326 08       		.byte	0x8
 25365 0327 CE       		.byte	0xce
 25366 0328 5D030000 		.4byte	0x35d
 25367 032c 0F       		.uleb128 0xf
 25368 032d 706F7300 		.ascii	"pos\000"
 25369 0331 08       		.byte	0x8
 25370 0332 CF       		.byte	0xcf
 25371 0333 D3000000 		.4byte	0xd3
 25372 0337 00       		.byte	0
 25373 0338 10       		.uleb128 0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 551


 25374 0339 21070000 		.4byte	.LASF87
 25375 033d 08       		.byte	0x8
 25376 033e D0       		.byte	0xd0
 25377 033f D3000000 		.4byte	0xd3
 25378 0343 04       		.byte	0x4
 25379 0344 0F       		.uleb128 0xf
 25380 0345 70776D00 		.ascii	"pwm\000"
 25381 0349 08       		.byte	0x8
 25382 034a D1       		.byte	0xd1
 25383 034b D3000000 		.4byte	0xd3
 25384 034f 08       		.byte	0x8
 25385 0350 10       		.uleb128 0x10
 25386 0351 290C0000 		.4byte	.LASF88
 25387 0355 08       		.byte	0x8
 25388 0356 D2       		.byte	0xd2
 25389 0357 97000000 		.4byte	0x97
 25390 035b 0C       		.byte	0xc
 25391 035c 00       		.byte	0
 25392 035d 0E       		.uleb128 0xe
 25393 035e 950D0000 		.4byte	.LASF90
 25394 0362 30       		.byte	0x30
 25395 0363 08       		.byte	0x8
 25396 0364 D9       		.byte	0xd9
 25397 0365 B2030000 		.4byte	0x3b2
 25398 0369 0F       		.uleb128 0xf
 25399 036a 706F7300 		.ascii	"pos\000"
 25400 036e 08       		.byte	0x8
 25401 036f DA       		.byte	0xda
 25402 0370 B2030000 		.4byte	0x3b2
 25403 0374 00       		.byte	0
 25404 0375 10       		.uleb128 0x10
 25405 0376 21070000 		.4byte	.LASF87
 25406 037a 08       		.byte	0x8
 25407 037b DB       		.byte	0xdb
 25408 037c D3000000 		.4byte	0xd3
 25409 0380 0C       		.byte	0xc
 25410 0381 10       		.uleb128 0x10
 25411 0382 BC0F0000 		.4byte	.LASF91
 25412 0386 08       		.byte	0x8
 25413 0387 DC       		.byte	0xdc
 25414 0388 D3000000 		.4byte	0xd3
 25415 038c 10       		.byte	0x10
 25416 038d 0F       		.uleb128 0xf
 25417 038e 726F7400 		.ascii	"rot\000"
 25418 0392 08       		.byte	0x8
 25419 0393 DD       		.byte	0xdd
 25420 0394 C2030000 		.4byte	0x3c2
 25421 0398 14       		.byte	0x14
 25422 0399 0F       		.uleb128 0xf
 25423 039a 76656C00 		.ascii	"vel\000"
 25424 039e 08       		.byte	0x8
 25425 039f DE       		.byte	0xde
 25426 03a0 B2030000 		.4byte	0x3b2
 25427 03a4 18       		.byte	0x18
 25428 03a5 0F       		.uleb128 0xf
 25429 03a6 61636300 		.ascii	"acc\000"
 25430 03aa 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 552


 25431 03ab DF       		.byte	0xdf
 25432 03ac B2030000 		.4byte	0x3b2
 25433 03b0 24       		.byte	0x24
 25434 03b1 00       		.byte	0
 25435 03b2 09       		.uleb128 0x9
 25436 03b3 D3000000 		.4byte	0xd3
 25437 03b7 C2030000 		.4byte	0x3c2
 25438 03bb 0A       		.uleb128 0xa
 25439 03bc 18010000 		.4byte	0x118
 25440 03c0 02       		.byte	0x2
 25441 03c1 00       		.byte	0
 25442 03c2 09       		.uleb128 0x9
 25443 03c3 BB000000 		.4byte	0xbb
 25444 03c7 D2030000 		.4byte	0x3d2
 25445 03cb 0A       		.uleb128 0xa
 25446 03cc 18010000 		.4byte	0x118
 25447 03d0 02       		.byte	0x2
 25448 03d1 00       		.byte	0
 25449 03d2 0E       		.uleb128 0xe
 25450 03d3 E60A0000 		.4byte	.LASF92
 25451 03d7 20       		.byte	0x20
 25452 03d8 08       		.byte	0x8
 25453 03d9 E2       		.byte	0xe2
 25454 03da F7030000 		.4byte	0x3f7
 25455 03de 0F       		.uleb128 0xf
 25456 03df 656D6700 		.ascii	"emg\000"
 25457 03e3 08       		.byte	0x8
 25458 03e4 E3       		.byte	0xe3
 25459 03e5 F7030000 		.4byte	0x3f7
 25460 03e9 00       		.byte	0
 25461 03ea 10       		.uleb128 0x10
 25462 03eb 730A0000 		.4byte	.LASF93
 25463 03ef 08       		.byte	0x8
 25464 03f0 E4       		.byte	0xe4
 25465 03f1 07040000 		.4byte	0x407
 25466 03f5 08       		.byte	0x8
 25467 03f6 00       		.byte	0
 25468 03f7 09       		.uleb128 0x9
 25469 03f8 D3000000 		.4byte	0xd3
 25470 03fc 07040000 		.4byte	0x407
 25471 0400 0A       		.uleb128 0xa
 25472 0401 18010000 		.4byte	0x118
 25473 0405 01       		.byte	0x1
 25474 0406 00       		.byte	0
 25475 0407 09       		.uleb128 0x9
 25476 0408 D3000000 		.4byte	0xd3
 25477 040c 17040000 		.4byte	0x417
 25478 0410 0A       		.uleb128 0xa
 25479 0411 18010000 		.4byte	0x118
 25480 0415 05       		.byte	0x5
 25481 0416 00       		.byte	0
 25482 0417 0E       		.uleb128 0xe
 25483 0418 62000000 		.4byte	.LASF94
 25484 041c 86       		.byte	0x86
 25485 041d 08       		.byte	0x8
 25486 041e EB       		.byte	0xeb
 25487 041f 54040000 		.4byte	0x454
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 553


 25488 0423 10       		.uleb128 0x10
 25489 0424 5C050000 		.4byte	.LASF95
 25490 0428 08       		.byte	0x8
 25491 0429 EC       		.byte	0xec
 25492 042a 54040000 		.4byte	0x454
 25493 042e 00       		.byte	0
 25494 042f 10       		.uleb128 0x10
 25495 0430 FE0B0000 		.4byte	.LASF96
 25496 0434 08       		.byte	0x8
 25497 0435 ED       		.byte	0xed
 25498 0436 C7000000 		.4byte	0xc7
 25499 043a 80       		.byte	0x80
 25500 043b 0F       		.uleb128 0xf
 25501 043c 696E6400 		.ascii	"ind\000"
 25502 0440 08       		.byte	0x8
 25503 0441 EE       		.byte	0xee
 25504 0442 C7000000 		.4byte	0xc7
 25505 0446 82       		.byte	0x82
 25506 0447 10       		.uleb128 0x10
 25507 0448 B1010000 		.4byte	.LASF97
 25508 044c 08       		.byte	0x8
 25509 044d EF       		.byte	0xef
 25510 044e 97000000 		.4byte	0x97
 25511 0452 84       		.byte	0x84
 25512 0453 00       		.byte	0
 25513 0454 09       		.uleb128 0x9
 25514 0455 97000000 		.4byte	0x97
 25515 0459 64040000 		.4byte	0x464
 25516 045d 0A       		.uleb128 0xa
 25517 045e 18010000 		.4byte	0x118
 25518 0462 7F       		.byte	0x7f
 25519 0463 00       		.byte	0
 25520 0464 0E       		.uleb128 0xe
 25521 0465 7D020000 		.4byte	.LASF98
 25522 0469 50       		.byte	0x50
 25523 046a 08       		.byte	0x8
 25524 046b F8       		.byte	0xf8
 25525 046c C5040000 		.4byte	0x4c5
 25526 0470 10       		.uleb128 0x10
 25527 0471 B8020000 		.4byte	.LASF99
 25528 0475 08       		.byte	0x8
 25529 0476 F9       		.byte	0xf9
 25530 0477 C5040000 		.4byte	0x4c5
 25531 047b 00       		.byte	0
 25532 047c 10       		.uleb128 0x10
 25533 047d 91010000 		.4byte	.LASF100
 25534 0481 08       		.byte	0x8
 25535 0482 FA       		.byte	0xfa
 25536 0483 D5040000 		.4byte	0x4d5
 25537 0487 08       		.byte	0x8
 25538 0488 10       		.uleb128 0x10
 25539 0489 B10A0000 		.4byte	.LASF101
 25540 048d 08       		.byte	0x8
 25541 048e FB       		.byte	0xfb
 25542 048f E5040000 		.4byte	0x4e5
 25543 0493 30       		.byte	0x30
 25544 0494 10       		.uleb128 0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 554


 25545 0495 1F010000 		.4byte	.LASF102
 25546 0499 08       		.byte	0x8
 25547 049a FC       		.byte	0xfc
 25548 049b AF000000 		.4byte	0xaf
 25549 049f 40       		.byte	0x40
 25550 04a0 10       		.uleb128 0x10
 25551 04a1 53110000 		.4byte	.LASF103
 25552 04a5 08       		.byte	0x8
 25553 04a6 FD       		.byte	0xfd
 25554 04a7 AF000000 		.4byte	0xaf
 25555 04ab 44       		.byte	0x44
 25556 04ac 10       		.uleb128 0x10
 25557 04ad 8A060000 		.4byte	.LASF104
 25558 04b1 08       		.byte	0x8
 25559 04b2 FE       		.byte	0xfe
 25560 04b3 AF000000 		.4byte	0xaf
 25561 04b7 48       		.byte	0x48
 25562 04b8 10       		.uleb128 0x10
 25563 04b9 BD060000 		.4byte	.LASF105
 25564 04bd 08       		.byte	0x8
 25565 04be FF       		.byte	0xff
 25566 04bf AF000000 		.4byte	0xaf
 25567 04c3 4C       		.byte	0x4c
 25568 04c4 00       		.byte	0
 25569 04c5 09       		.uleb128 0x9
 25570 04c6 AF000000 		.4byte	0xaf
 25571 04ca D5040000 		.4byte	0x4d5
 25572 04ce 0A       		.uleb128 0xa
 25573 04cf 18010000 		.4byte	0x118
 25574 04d3 01       		.byte	0x1
 25575 04d4 00       		.byte	0
 25576 04d5 09       		.uleb128 0x9
 25577 04d6 AF000000 		.4byte	0xaf
 25578 04da E5040000 		.4byte	0x4e5
 25579 04de 0A       		.uleb128 0xa
 25580 04df 18010000 		.4byte	0x118
 25581 04e3 09       		.byte	0x9
 25582 04e4 00       		.byte	0
 25583 04e5 09       		.uleb128 0x9
 25584 04e6 AF000000 		.4byte	0xaf
 25585 04ea F5040000 		.4byte	0x4f5
 25586 04ee 0A       		.uleb128 0xa
 25587 04ef 18010000 		.4byte	0x118
 25588 04f3 03       		.byte	0x3
 25589 04f4 00       		.byte	0
 25590 04f5 11       		.uleb128 0x11
 25591 04f6 CF010000 		.4byte	.LASF106
 25592 04fa 10       		.byte	0x10
 25593 04fb 08       		.byte	0x8
 25594 04fc 0601     		.2byte	0x106
 25595 04fe 84050000 		.4byte	0x584
 25596 0502 12       		.uleb128 0x12
 25597 0503 696400   		.ascii	"id\000"
 25598 0506 08       		.byte	0x8
 25599 0507 0701     		.2byte	0x107
 25600 0509 97000000 		.4byte	0x97
 25601 050d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 555


 25602 050e 13       		.uleb128 0x13
 25603 050f 990E0000 		.4byte	.LASF107
 25604 0513 08       		.byte	0x8
 25605 0514 0801     		.2byte	0x108
 25606 0516 84050000 		.4byte	0x584
 25607 051a 01       		.byte	0x1
 25608 051b 13       		.uleb128 0x13
 25609 051c 090F0000 		.4byte	.LASF108
 25610 0520 08       		.byte	0x8
 25611 0521 0901     		.2byte	0x109
 25612 0523 84050000 		.4byte	0x584
 25613 0527 04       		.byte	0x4
 25614 0528 13       		.uleb128 0x13
 25615 0529 97030000 		.4byte	.LASF109
 25616 052d 08       		.byte	0x8
 25617 052e 0A01     		.2byte	0x10a
 25618 0530 97000000 		.4byte	0x97
 25619 0534 07       		.byte	0x7
 25620 0535 13       		.uleb128 0x13
 25621 0536 39020000 		.4byte	.LASF110
 25622 053a 08       		.byte	0x8
 25623 053b 0B01     		.2byte	0x10b
 25624 053d 97000000 		.4byte	0x97
 25625 0541 08       		.byte	0x8
 25626 0542 13       		.uleb128 0x13
 25627 0543 F5010000 		.4byte	.LASF111
 25628 0547 08       		.byte	0x8
 25629 0548 0C01     		.2byte	0x10c
 25630 054a 97000000 		.4byte	0x97
 25631 054e 09       		.byte	0x9
 25632 054f 13       		.uleb128 0x13
 25633 0550 4E100000 		.4byte	.LASF112
 25634 0554 08       		.byte	0x8
 25635 0555 0D01     		.2byte	0x10d
 25636 0557 97000000 		.4byte	0x97
 25637 055b 0A       		.byte	0xa
 25638 055c 13       		.uleb128 0x13
 25639 055d 12100000 		.4byte	.LASF113
 25640 0561 08       		.byte	0x8
 25641 0562 0E01     		.2byte	0x10e
 25642 0564 97000000 		.4byte	0x97
 25643 0568 0B       		.byte	0xb
 25644 0569 13       		.uleb128 0x13
 25645 056a 3F0D0000 		.4byte	.LASF114
 25646 056e 08       		.byte	0x8
 25647 056f 0F01     		.2byte	0x10f
 25648 0571 97000000 		.4byte	0x97
 25649 0575 0C       		.byte	0xc
 25650 0576 13       		.uleb128 0x13
 25651 0577 5A020000 		.4byte	.LASF115
 25652 057b 08       		.byte	0x8
 25653 057c 1001     		.2byte	0x110
 25654 057e 84050000 		.4byte	0x584
 25655 0582 0D       		.byte	0xd
 25656 0583 00       		.byte	0
 25657 0584 09       		.uleb128 0x9
 25658 0585 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 556


 25659 0589 94050000 		.4byte	0x594
 25660 058d 0A       		.uleb128 0xa
 25661 058e 18010000 		.4byte	0x118
 25662 0592 02       		.byte	0x2
 25663 0593 00       		.byte	0
 25664 0594 11       		.uleb128 0x11
 25665 0595 44090000 		.4byte	.LASF116
 25666 0599 70       		.byte	0x70
 25667 059a 08       		.byte	0x8
 25668 059b 1701     		.2byte	0x117
 25669 059d 0E070000 		.4byte	0x70e
 25670 05a1 12       		.uleb128 0x12
 25671 05a2 6B5F7000 		.ascii	"k_p\000"
 25672 05a6 08       		.byte	0x8
 25673 05a7 1801     		.2byte	0x118
 25674 05a9 D3000000 		.4byte	0xd3
 25675 05ad 00       		.byte	0
 25676 05ae 12       		.uleb128 0x12
 25677 05af 6B5F6900 		.ascii	"k_i\000"
 25678 05b3 08       		.byte	0x8
 25679 05b4 1901     		.2byte	0x119
 25680 05b6 D3000000 		.4byte	0xd3
 25681 05ba 04       		.byte	0x4
 25682 05bb 12       		.uleb128 0x12
 25683 05bc 6B5F6400 		.ascii	"k_d\000"
 25684 05c0 08       		.byte	0x8
 25685 05c1 1A01     		.2byte	0x11a
 25686 05c3 D3000000 		.4byte	0xd3
 25687 05c7 08       		.byte	0x8
 25688 05c8 13       		.uleb128 0x13
 25689 05c9 780C0000 		.4byte	.LASF117
 25690 05cd 08       		.byte	0x8
 25691 05ce 1B01     		.2byte	0x11b
 25692 05d0 D3000000 		.4byte	0xd3
 25693 05d4 0C       		.byte	0xc
 25694 05d5 13       		.uleb128 0x13
 25695 05d6 D5040000 		.4byte	.LASF118
 25696 05da 08       		.byte	0x8
 25697 05db 1C01     		.2byte	0x11c
 25698 05dd D3000000 		.4byte	0xd3
 25699 05e1 10       		.byte	0x10
 25700 05e2 13       		.uleb128 0x13
 25701 05e3 BA040000 		.4byte	.LASF119
 25702 05e7 08       		.byte	0x8
 25703 05e8 1D01     		.2byte	0x11d
 25704 05ea D3000000 		.4byte	0xd3
 25705 05ee 14       		.byte	0x14
 25706 05ef 13       		.uleb128 0x13
 25707 05f0 B50F0000 		.4byte	.LASF120
 25708 05f4 08       		.byte	0x8
 25709 05f5 1E01     		.2byte	0x11e
 25710 05f7 D3000000 		.4byte	0xd3
 25711 05fb 18       		.byte	0x18
 25712 05fc 13       		.uleb128 0x13
 25713 05fd 46050000 		.4byte	.LASF121
 25714 0601 08       		.byte	0x8
 25715 0602 1F01     		.2byte	0x11f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 557


 25716 0604 D3000000 		.4byte	0xd3
 25717 0608 1C       		.byte	0x1c
 25718 0609 13       		.uleb128 0x13
 25719 060a 640E0000 		.4byte	.LASF122
 25720 060e 08       		.byte	0x8
 25721 060f 2001     		.2byte	0x120
 25722 0611 D3000000 		.4byte	0xd3
 25723 0615 20       		.byte	0x20
 25724 0616 13       		.uleb128 0x13
 25725 0617 63050000 		.4byte	.LASF123
 25726 061b 08       		.byte	0x8
 25727 061c 2101     		.2byte	0x121
 25728 061e D3000000 		.4byte	0xd3
 25729 0622 24       		.byte	0x24
 25730 0623 13       		.uleb128 0x13
 25731 0624 0C060000 		.4byte	.LASF124
 25732 0628 08       		.byte	0x8
 25733 0629 2201     		.2byte	0x122
 25734 062b D3000000 		.4byte	0xd3
 25735 062f 28       		.byte	0x28
 25736 0630 13       		.uleb128 0x13
 25737 0631 00120000 		.4byte	.LASF125
 25738 0635 08       		.byte	0x8
 25739 0636 2301     		.2byte	0x123
 25740 0638 D3000000 		.4byte	0xd3
 25741 063c 2C       		.byte	0x2c
 25742 063d 13       		.uleb128 0x13
 25743 063e D9060000 		.4byte	.LASF126
 25744 0642 08       		.byte	0x8
 25745 0643 2401     		.2byte	0x124
 25746 0645 97000000 		.4byte	0x97
 25747 0649 30       		.byte	0x30
 25748 064a 13       		.uleb128 0x13
 25749 064b 9E0F0000 		.4byte	.LASF127
 25750 064f 08       		.byte	0x8
 25751 0650 2501     		.2byte	0x125
 25752 0652 97000000 		.4byte	0x97
 25753 0656 31       		.byte	0x31
 25754 0657 13       		.uleb128 0x13
 25755 0658 980C0000 		.4byte	.LASF128
 25756 065c 08       		.byte	0x8
 25757 065d 2601     		.2byte	0x126
 25758 065f 97000000 		.4byte	0x97
 25759 0663 32       		.byte	0x32
 25760 0664 13       		.uleb128 0x13
 25761 0665 08110000 		.4byte	.LASF129
 25762 0669 08       		.byte	0x8
 25763 066a 2701     		.2byte	0x127
 25764 066c 97000000 		.4byte	0x97
 25765 0670 33       		.byte	0x33
 25766 0671 13       		.uleb128 0x13
 25767 0672 D3000000 		.4byte	.LASF130
 25768 0676 08       		.byte	0x8
 25769 0677 2801     		.2byte	0x128
 25770 0679 D3000000 		.4byte	0xd3
 25771 067d 34       		.byte	0x34
 25772 067e 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 558


 25773 067f F4040000 		.4byte	.LASF131
 25774 0683 08       		.byte	0x8
 25775 0684 2901     		.2byte	0x129
 25776 0686 D3000000 		.4byte	0xd3
 25777 068a 38       		.byte	0x38
 25778 068b 13       		.uleb128 0x13
 25779 068c F7080000 		.4byte	.LASF132
 25780 0690 08       		.byte	0x8
 25781 0691 2A01     		.2byte	0x12a
 25782 0693 D3000000 		.4byte	0xd3
 25783 0697 3C       		.byte	0x3c
 25784 0698 13       		.uleb128 0x13
 25785 0699 6D040000 		.4byte	.LASF133
 25786 069d 08       		.byte	0x8
 25787 069e 2B01     		.2byte	0x12b
 25788 06a0 D3000000 		.4byte	0xd3
 25789 06a4 40       		.byte	0x40
 25790 06a5 13       		.uleb128 0x13
 25791 06a6 13010000 		.4byte	.LASF134
 25792 06aa 08       		.byte	0x8
 25793 06ab 2C01     		.2byte	0x12c
 25794 06ad 0E070000 		.4byte	0x70e
 25795 06b1 44       		.byte	0x44
 25796 06b2 13       		.uleb128 0x13
 25797 06b3 98110000 		.4byte	.LASF135
 25798 06b7 08       		.byte	0x8
 25799 06b8 2D01     		.2byte	0x12d
 25800 06ba C7000000 		.4byte	0xc7
 25801 06be 5C       		.byte	0x5c
 25802 06bf 13       		.uleb128 0x13
 25803 06c0 26070000 		.4byte	.LASF136
 25804 06c4 08       		.byte	0x8
 25805 06c5 2E01     		.2byte	0x12e
 25806 06c7 97000000 		.4byte	0x97
 25807 06cb 5E       		.byte	0x5e
 25808 06cc 13       		.uleb128 0x13
 25809 06cd C9090000 		.4byte	.LASF137
 25810 06d1 08       		.byte	0x8
 25811 06d2 2F01     		.2byte	0x12f
 25812 06d4 97000000 		.4byte	0x97
 25813 06d8 5F       		.byte	0x5f
 25814 06d9 13       		.uleb128 0x13
 25815 06da BB030000 		.4byte	.LASF138
 25816 06de 08       		.byte	0x8
 25817 06df 3001     		.2byte	0x130
 25818 06e1 97000000 		.4byte	0x97
 25819 06e5 60       		.byte	0x60
 25820 06e6 13       		.uleb128 0x13
 25821 06e7 A9040000 		.4byte	.LASF139
 25822 06eb 08       		.byte	0x8
 25823 06ec 3101     		.2byte	0x131
 25824 06ee 97000000 		.4byte	0x97
 25825 06f2 61       		.byte	0x61
 25826 06f3 13       		.uleb128 0x13
 25827 06f4 78030000 		.4byte	.LASF140
 25828 06f8 08       		.byte	0x8
 25829 06f9 3201     		.2byte	0x132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 559


 25830 06fb 97000000 		.4byte	0x97
 25831 06ff 62       		.byte	0x62
 25832 0700 13       		.uleb128 0x13
 25833 0701 5A020000 		.4byte	.LASF115
 25834 0705 08       		.byte	0x8
 25835 0706 3301     		.2byte	0x133
 25836 0708 1E070000 		.4byte	0x71e
 25837 070c 63       		.byte	0x63
 25838 070d 00       		.byte	0
 25839 070e 09       		.uleb128 0x9
 25840 070f EB000000 		.4byte	0xeb
 25841 0713 1E070000 		.4byte	0x71e
 25842 0717 0A       		.uleb128 0xa
 25843 0718 18010000 		.4byte	0x118
 25844 071c 05       		.byte	0x5
 25845 071d 00       		.byte	0
 25846 071e 09       		.uleb128 0x9
 25847 071f 97000000 		.4byte	0x97
 25848 0723 2E070000 		.4byte	0x72e
 25849 0727 0A       		.uleb128 0xa
 25850 0728 18010000 		.4byte	0x118
 25851 072c 0C       		.byte	0xc
 25852 072d 00       		.byte	0
 25853 072e 11       		.uleb128 0x11
 25854 072f B6100000 		.4byte	.LASF141
 25855 0733 30       		.byte	0x30
 25856 0734 08       		.byte	0x8
 25857 0735 3A01     		.2byte	0x13a
 25858 0737 B1070000 		.4byte	0x7b1
 25859 073b 13       		.uleb128 0x13
 25860 073c D9080000 		.4byte	.LASF142
 25861 0740 08       		.byte	0x8
 25862 0741 3B01     		.2byte	0x13b
 25863 0743 B1070000 		.4byte	0x7b1
 25864 0747 00       		.byte	0
 25865 0748 12       		.uleb128 0x12
 25866 0749 72657300 		.ascii	"res\000"
 25867 074d 08       		.byte	0x8
 25868 074e 3C01     		.2byte	0x13c
 25869 0750 84050000 		.4byte	0x584
 25870 0754 05       		.byte	0x5
 25871 0755 13       		.uleb128 0x13
 25872 0756 E8060000 		.4byte	.LASF143
 25873 075a 08       		.byte	0x8
 25874 075b 3D01     		.2byte	0x13d
 25875 075d B2030000 		.4byte	0x3b2
 25876 0761 08       		.byte	0x8
 25877 0762 13       		.uleb128 0x13
 25878 0763 CE040000 		.4byte	.LASF144
 25879 0767 08       		.byte	0x8
 25880 0768 3E01     		.2byte	0x13e
 25881 076a C1070000 		.4byte	0x7c1
 25882 076e 14       		.byte	0x14
 25883 076f 13       		.uleb128 0x13
 25884 0770 5B0B0000 		.4byte	.LASF145
 25885 0774 08       		.byte	0x8
 25886 0775 3F01     		.2byte	0x13f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 560


 25887 0777 97000000 		.4byte	0x97
 25888 077b 20       		.byte	0x20
 25889 077c 13       		.uleb128 0x13
 25890 077d B7010000 		.4byte	.LASF146
 25891 0781 08       		.byte	0x8
 25892 0782 4001     		.2byte	0x140
 25893 0784 84050000 		.4byte	0x584
 25894 0788 21       		.byte	0x21
 25895 0789 13       		.uleb128 0x13
 25896 078a 0E0B0000 		.4byte	.LASF147
 25897 078e 08       		.byte	0x8
 25898 078f 4101     		.2byte	0x141
 25899 0791 BB000000 		.4byte	0xbb
 25900 0795 24       		.byte	0x24
 25901 0796 13       		.uleb128 0x13
 25902 0797 660D0000 		.4byte	.LASF148
 25903 079b 08       		.byte	0x8
 25904 079c 4201     		.2byte	0x142
 25905 079e C2030000 		.4byte	0x3c2
 25906 07a2 25       		.byte	0x25
 25907 07a3 13       		.uleb128 0x13
 25908 07a4 5A020000 		.4byte	.LASF115
 25909 07a8 08       		.byte	0x8
 25910 07a9 4301     		.2byte	0x143
 25911 07ab D1070000 		.4byte	0x7d1
 25912 07af 28       		.byte	0x28
 25913 07b0 00       		.byte	0
 25914 07b1 09       		.uleb128 0x9
 25915 07b2 97000000 		.4byte	0x97
 25916 07b6 C1070000 		.4byte	0x7c1
 25917 07ba 0A       		.uleb128 0xa
 25918 07bb 18010000 		.4byte	0x118
 25919 07bf 04       		.byte	0x4
 25920 07c0 00       		.byte	0
 25921 07c1 09       		.uleb128 0x9
 25922 07c2 DF000000 		.4byte	0xdf
 25923 07c6 D1070000 		.4byte	0x7d1
 25924 07ca 0A       		.uleb128 0xa
 25925 07cb 18010000 		.4byte	0x118
 25926 07cf 02       		.byte	0x2
 25927 07d0 00       		.byte	0
 25928 07d1 09       		.uleb128 0x9
 25929 07d2 97000000 		.4byte	0x97
 25930 07d6 E1070000 		.4byte	0x7e1
 25931 07da 0A       		.uleb128 0xa
 25932 07db 18010000 		.4byte	0x118
 25933 07df 07       		.byte	0x7
 25934 07e0 00       		.byte	0
 25935 07e1 11       		.uleb128 0x11
 25936 07e2 8A010000 		.4byte	.LASF149
 25937 07e6 10       		.byte	0x10
 25938 07e7 08       		.byte	0x8
 25939 07e8 4A01     		.2byte	0x14a
 25940 07ea 3D080000 		.4byte	0x83d
 25941 07ee 13       		.uleb128 0x13
 25942 07ef 910A0000 		.4byte	.LASF150
 25943 07f3 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 561


 25944 07f4 4B01     		.2byte	0x14b
 25945 07f6 3D080000 		.4byte	0x83d
 25946 07fa 00       		.byte	0
 25947 07fb 13       		.uleb128 0x13
 25948 07fc 5D110000 		.4byte	.LASF151
 25949 0800 08       		.byte	0x8
 25950 0801 4C01     		.2byte	0x14c
 25951 0803 C5040000 		.4byte	0x4c5
 25952 0807 04       		.byte	0x4
 25953 0808 13       		.uleb128 0x13
 25954 0809 00050000 		.4byte	.LASF152
 25955 080d 08       		.byte	0x8
 25956 080e 4D01     		.2byte	0x14d
 25957 0810 97000000 		.4byte	0x97
 25958 0814 0C       		.byte	0xc
 25959 0815 13       		.uleb128 0x13
 25960 0816 800D0000 		.4byte	.LASF153
 25961 081a 08       		.byte	0x8
 25962 081b 4E01     		.2byte	0x14e
 25963 081d 97000000 		.4byte	0x97
 25964 0821 0D       		.byte	0xd
 25965 0822 13       		.uleb128 0x13
 25966 0823 930F0000 		.4byte	.LASF154
 25967 0827 08       		.byte	0x8
 25968 0828 4F01     		.2byte	0x14f
 25969 082a 97000000 		.4byte	0x97
 25970 082e 0E       		.byte	0xe
 25971 082f 13       		.uleb128 0x13
 25972 0830 5A020000 		.4byte	.LASF115
 25973 0834 08       		.byte	0x8
 25974 0835 5001     		.2byte	0x150
 25975 0837 4D080000 		.4byte	0x84d
 25976 083b 0F       		.byte	0xf
 25977 083c 00       		.byte	0
 25978 083d 09       		.uleb128 0x9
 25979 083e A3000000 		.4byte	0xa3
 25980 0842 4D080000 		.4byte	0x84d
 25981 0846 0A       		.uleb128 0xa
 25982 0847 18010000 		.4byte	0x118
 25983 084b 01       		.byte	0x1
 25984 084c 00       		.byte	0
 25985 084d 09       		.uleb128 0x9
 25986 084e 97000000 		.4byte	0x97
 25987 0852 5D080000 		.4byte	0x85d
 25988 0856 0A       		.uleb128 0xa
 25989 0857 18010000 		.4byte	0x118
 25990 085b 00       		.byte	0
 25991 085c 00       		.byte	0
 25992 085d 11       		.uleb128 0x11
 25993 085e 050A0000 		.4byte	.LASF155
 25994 0862 20       		.byte	0x20
 25995 0863 08       		.byte	0x8
 25996 0864 5701     		.2byte	0x157
 25997 0866 9F080000 		.4byte	0x89f
 25998 086a 13       		.uleb128 0x13
 25999 086b 08020000 		.4byte	.LASF156
 26000 086f 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 562


 26001 0870 5801     		.2byte	0x158
 26002 0872 97000000 		.4byte	0x97
 26003 0876 00       		.byte	0
 26004 0877 13       		.uleb128 0x13
 26005 0878 710B0000 		.4byte	.LASF157
 26006 087c 08       		.byte	0x8
 26007 087d 5901     		.2byte	0x159
 26008 087f 97000000 		.4byte	0x97
 26009 0883 01       		.byte	0x1
 26010 0884 13       		.uleb128 0x13
 26011 0885 31090000 		.4byte	.LASF158
 26012 0889 08       		.byte	0x8
 26013 088a 5A01     		.2byte	0x15a
 26014 088c 9F080000 		.4byte	0x89f
 26015 0890 02       		.byte	0x2
 26016 0891 13       		.uleb128 0x13
 26017 0892 5A020000 		.4byte	.LASF115
 26018 0896 08       		.byte	0x8
 26019 0897 5B01     		.2byte	0x15b
 26020 0899 B1070000 		.4byte	0x7b1
 26021 089d 1B       		.byte	0x1b
 26022 089e 00       		.byte	0
 26023 089f 09       		.uleb128 0x9
 26024 08a0 97000000 		.4byte	0x97
 26025 08a4 B5080000 		.4byte	0x8b5
 26026 08a8 0A       		.uleb128 0xa
 26027 08a9 18010000 		.4byte	0x118
 26028 08ad 04       		.byte	0x4
 26029 08ae 0A       		.uleb128 0xa
 26030 08af 18010000 		.4byte	0x118
 26031 08b3 04       		.byte	0x4
 26032 08b4 00       		.byte	0
 26033 08b5 11       		.uleb128 0x11
 26034 08b6 730D0000 		.4byte	.LASF159
 26035 08ba 20       		.byte	0x20
 26036 08bb 08       		.byte	0x8
 26037 08bc 6201     		.2byte	0x162
 26038 08be 04090000 		.4byte	0x904
 26039 08c2 13       		.uleb128 0x13
 26040 08c3 510B0000 		.4byte	.LASF160
 26041 08c7 08       		.byte	0x8
 26042 08c8 6301     		.2byte	0x163
 26043 08ca 04090000 		.4byte	0x904
 26044 08ce 00       		.byte	0
 26045 08cf 13       		.uleb128 0x13
 26046 08d0 800F0000 		.4byte	.LASF161
 26047 08d4 08       		.byte	0x8
 26048 08d5 6401     		.2byte	0x164
 26049 08d7 97000000 		.4byte	0x97
 26050 08db 06       		.byte	0x6
 26051 08dc 13       		.uleb128 0x13
 26052 08dd D50F0000 		.4byte	.LASF162
 26053 08e1 08       		.byte	0x8
 26054 08e2 6501     		.2byte	0x165
 26055 08e4 97000000 		.4byte	0x97
 26056 08e8 07       		.byte	0x7
 26057 08e9 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 563


 26058 08ea 25050000 		.4byte	.LASF163
 26059 08ee 08       		.byte	0x8
 26060 08ef 6601     		.2byte	0x166
 26061 08f1 14090000 		.4byte	0x914
 26062 08f5 08       		.byte	0x8
 26063 08f6 13       		.uleb128 0x13
 26064 08f7 5A020000 		.4byte	.LASF115
 26065 08fb 08       		.byte	0x8
 26066 08fc 6701     		.2byte	0x167
 26067 08fe 14090000 		.4byte	0x914
 26068 0902 14       		.byte	0x14
 26069 0903 00       		.byte	0
 26070 0904 09       		.uleb128 0x9
 26071 0905 97000000 		.4byte	0x97
 26072 0909 14090000 		.4byte	0x914
 26073 090d 0A       		.uleb128 0xa
 26074 090e 18010000 		.4byte	0x118
 26075 0912 05       		.byte	0x5
 26076 0913 00       		.byte	0
 26077 0914 09       		.uleb128 0x9
 26078 0915 97000000 		.4byte	0x97
 26079 0919 24090000 		.4byte	0x924
 26080 091d 0A       		.uleb128 0xa
 26081 091e 18010000 		.4byte	0x118
 26082 0922 0B       		.byte	0xb
 26083 0923 00       		.byte	0
 26084 0924 11       		.uleb128 0x11
 26085 0925 480D0000 		.4byte	.LASF164
 26086 0929 20       		.byte	0x20
 26087 092a 08       		.byte	0x8
 26088 092b 6E01     		.2byte	0x16e
 26089 092d 59090000 		.4byte	0x959
 26090 0931 13       		.uleb128 0x13
 26091 0932 18030000 		.4byte	.LASF165
 26092 0936 08       		.byte	0x8
 26093 0937 6F01     		.2byte	0x16f
 26094 0939 40010000 		.4byte	0x140
 26095 093d 00       		.byte	0
 26096 093e 13       		.uleb128 0x13
 26097 093f 48020000 		.4byte	.LASF166
 26098 0943 08       		.byte	0x8
 26099 0944 7001     		.2byte	0x170
 26100 0946 E1070000 		.4byte	0x7e1
 26101 094a 08       		.byte	0x8
 26102 094b 13       		.uleb128 0x13
 26103 094c 5A020000 		.4byte	.LASF115
 26104 0950 08       		.byte	0x8
 26105 0951 7101     		.2byte	0x171
 26106 0953 D1070000 		.4byte	0x7d1
 26107 0957 18       		.byte	0x18
 26108 0958 00       		.byte	0
 26109 0959 11       		.uleb128 0x11
 26110 095a 5E080000 		.4byte	.LASF167
 26111 095e 10       		.byte	0x10
 26112 095f 08       		.byte	0x8
 26113 0960 7801     		.2byte	0x178
 26114 0962 A8090000 		.4byte	0x9a8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 564


 26115 0966 13       		.uleb128 0x13
 26116 0967 18070000 		.4byte	.LASF168
 26117 096b 08       		.byte	0x8
 26118 096c 7901     		.2byte	0x179
 26119 096e D3000000 		.4byte	0xd3
 26120 0972 00       		.byte	0
 26121 0973 13       		.uleb128 0x13
 26122 0974 E4110000 		.4byte	.LASF169
 26123 0978 08       		.byte	0x8
 26124 0979 7A01     		.2byte	0x17a
 26125 097b D3000000 		.4byte	0xd3
 26126 097f 04       		.byte	0x4
 26127 0980 13       		.uleb128 0x13
 26128 0981 0A050000 		.4byte	.LASF170
 26129 0985 08       		.byte	0x8
 26130 0986 7B01     		.2byte	0x17b
 26131 0988 D3000000 		.4byte	0xd3
 26132 098c 08       		.byte	0x8
 26133 098d 13       		.uleb128 0x13
 26134 098e F3050000 		.4byte	.LASF171
 26135 0992 08       		.byte	0x8
 26136 0993 7C01     		.2byte	0x17c
 26137 0995 97000000 		.4byte	0x97
 26138 0999 0C       		.byte	0xc
 26139 099a 13       		.uleb128 0x13
 26140 099b 5A020000 		.4byte	.LASF115
 26141 099f 08       		.byte	0x8
 26142 09a0 7D01     		.2byte	0x17d
 26143 09a2 84050000 		.4byte	0x584
 26144 09a6 0D       		.byte	0xd
 26145 09a7 00       		.byte	0
 26146 09a8 14       		.uleb128 0x14
 26147 09a9 C7100000 		.4byte	.LASF172
 26148 09ad B002     		.2byte	0x2b0
 26149 09af 08       		.byte	0x8
 26150 09b0 8501     		.2byte	0x185
 26151 09b2 580A0000 		.4byte	0xa58
 26152 09b6 13       		.uleb128 0x13
 26153 09b7 B5090000 		.4byte	.LASF173
 26154 09bb 08       		.byte	0x8
 26155 09bc 8701     		.2byte	0x187
 26156 09be 97000000 		.4byte	0x97
 26157 09c2 00       		.byte	0
 26158 09c3 13       		.uleb128 0x13
 26159 09c4 5A020000 		.4byte	.LASF115
 26160 09c8 08       		.byte	0x8
 26161 09c9 8801     		.2byte	0x188
 26162 09cb 580A0000 		.4byte	0xa58
 26163 09cf 01       		.byte	0x1
 26164 09d0 12       		.uleb128 0x12
 26165 09d1 636E7400 		.ascii	"cnt\000"
 26166 09d5 08       		.byte	0x8
 26167 09d6 8901     		.2byte	0x189
 26168 09d8 64040000 		.4byte	0x464
 26169 09dc 10       		.byte	0x10
 26170 09dd 13       		.uleb128 0x13
 26171 09de 2B020000 		.4byte	.LASF174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 565


 26172 09e2 08       		.byte	0x8
 26173 09e3 8A01     		.2byte	0x18a
 26174 09e5 680A0000 		.4byte	0xa68
 26175 09e9 60       		.byte	0x60
 26176 09ea 12       		.uleb128 0x12
 26177 09eb 64657600 		.ascii	"dev\000"
 26178 09ef 08       		.byte	0x8
 26179 09f0 8B01     		.2byte	0x18b
 26180 09f2 F5040000 		.4byte	0x4f5
 26181 09f6 A0       		.byte	0xa0
 26182 09f7 13       		.uleb128 0x13
 26183 09f8 740E0000 		.4byte	.LASF175
 26184 09fc 08       		.byte	0x8
 26185 09fd 8C01     		.2byte	0x18c
 26186 09ff 780A0000 		.4byte	0xa78
 26187 0a03 B0       		.byte	0xb0
 26188 0a04 15       		.uleb128 0x15
 26189 0a05 656E6300 		.ascii	"enc\000"
 26190 0a09 08       		.byte	0x8
 26191 0a0a 8D01     		.2byte	0x18d
 26192 0a0c 880A0000 		.4byte	0xa88
 26193 0a10 9001     		.2byte	0x190
 26194 0a12 15       		.uleb128 0x15
 26195 0a13 656D6700 		.ascii	"emg\000"
 26196 0a17 08       		.byte	0x8
 26197 0a18 8E01     		.2byte	0x18e
 26198 0a1a E1070000 		.4byte	0x7e1
 26199 0a1e F001     		.2byte	0x1f0
 26200 0a20 15       		.uleb128 0x15
 26201 0a21 696D7500 		.ascii	"imu\000"
 26202 0a25 08       		.byte	0x8
 26203 0a26 8F01     		.2byte	0x18f
 26204 0a28 5D080000 		.4byte	0x85d
 26205 0a2c 0002     		.2byte	0x200
 26206 0a2e 15       		.uleb128 0x15
 26207 0a2f 65787000 		.ascii	"exp\000"
 26208 0a33 08       		.byte	0x8
 26209 0a34 9001     		.2byte	0x190
 26210 0a36 B5080000 		.4byte	0x8b5
 26211 0a3a 2002     		.2byte	0x220
 26212 0a3c 16       		.uleb128 0x16
 26213 0a3d 50000000 		.4byte	.LASF176
 26214 0a41 08       		.byte	0x8
 26215 0a42 9101     		.2byte	0x191
 26216 0a44 980A0000 		.4byte	0xa98
 26217 0a48 4002     		.2byte	0x240
 26218 0a4a 15       		.uleb128 0x15
 26219 0a4b 534800   		.ascii	"SH\000"
 26220 0a4e 08       		.byte	0x8
 26221 0a4f 9301     		.2byte	0x193
 26222 0a51 59090000 		.4byte	0x959
 26223 0a55 A002     		.2byte	0x2a0
 26224 0a57 00       		.byte	0
 26225 0a58 09       		.uleb128 0x9
 26226 0a59 97000000 		.4byte	0x97
 26227 0a5d 680A0000 		.4byte	0xa68
 26228 0a61 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 566


 26229 0a62 18010000 		.4byte	0x118
 26230 0a66 0E       		.byte	0xe
 26231 0a67 00       		.byte	0
 26232 0a68 09       		.uleb128 0x9
 26233 0a69 97000000 		.4byte	0x97
 26234 0a6d 780A0000 		.4byte	0xa78
 26235 0a71 0A       		.uleb128 0xa
 26236 0a72 18010000 		.4byte	0x118
 26237 0a76 3F       		.byte	0x3f
 26238 0a77 00       		.byte	0
 26239 0a78 09       		.uleb128 0x9
 26240 0a79 94050000 		.4byte	0x594
 26241 0a7d 880A0000 		.4byte	0xa88
 26242 0a81 0A       		.uleb128 0xa
 26243 0a82 18010000 		.4byte	0x118
 26244 0a86 01       		.byte	0x1
 26245 0a87 00       		.byte	0
 26246 0a88 09       		.uleb128 0x9
 26247 0a89 2E070000 		.4byte	0x72e
 26248 0a8d 980A0000 		.4byte	0xa98
 26249 0a91 0A       		.uleb128 0xa
 26250 0a92 18010000 		.4byte	0x118
 26251 0a96 01       		.byte	0x1
 26252 0a97 00       		.byte	0
 26253 0a98 09       		.uleb128 0x9
 26254 0a99 24090000 		.4byte	0x924
 26255 0a9d A80A0000 		.4byte	0xaa8
 26256 0aa1 0A       		.uleb128 0xa
 26257 0aa2 18010000 		.4byte	0x118
 26258 0aa6 02       		.byte	0x2
 26259 0aa7 00       		.byte	0
 26260 0aa8 11       		.uleb128 0x11
 26261 0aa9 130C0000 		.4byte	.LASF177
 26262 0aad 28       		.byte	0x28
 26263 0aae 08       		.byte	0x8
 26264 0aaf A101     		.2byte	0x1a1
 26265 0ab1 040B0000 		.4byte	0xb04
 26266 0ab5 13       		.uleb128 0x13
 26267 0ab6 3E040000 		.4byte	.LASF178
 26268 0aba 08       		.byte	0x8
 26269 0abb A201     		.2byte	0x1a2
 26270 0abd 97000000 		.4byte	0x97
 26271 0ac1 00       		.byte	0
 26272 0ac2 13       		.uleb128 0x13
 26273 0ac3 67020000 		.4byte	.LASF179
 26274 0ac7 08       		.byte	0x8
 26275 0ac8 A301     		.2byte	0x1a3
 26276 0aca 040B0000 		.4byte	0xb04
 26277 0ace 02       		.byte	0x2
 26278 0acf 13       		.uleb128 0x13
 26279 0ad0 460B0000 		.4byte	.LASF180
 26280 0ad4 08       		.byte	0x8
 26281 0ad5 A401     		.2byte	0x1a4
 26282 0ad7 040B0000 		.4byte	0xb04
 26283 0adb 08       		.byte	0x8
 26284 0adc 13       		.uleb128 0x13
 26285 0add 1F0C0000 		.4byte	.LASF181
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 567


 26286 0ae1 08       		.byte	0x8
 26287 0ae2 A501     		.2byte	0x1a5
 26288 0ae4 040B0000 		.4byte	0xb04
 26289 0ae8 0E       		.byte	0xe
 26290 0ae9 13       		.uleb128 0x13
 26291 0aea FF060000 		.4byte	.LASF182
 26292 0aee 08       		.byte	0x8
 26293 0aef A601     		.2byte	0x1a6
 26294 0af1 140B0000 		.4byte	0xb14
 26295 0af5 14       		.byte	0x14
 26296 0af6 13       		.uleb128 0x13
 26297 0af7 9F010000 		.4byte	.LASF183
 26298 0afb 08       		.byte	0x8
 26299 0afc A701     		.2byte	0x1a7
 26300 0afe C7000000 		.4byte	0xc7
 26301 0b02 24       		.byte	0x24
 26302 0b03 00       		.byte	0
 26303 0b04 09       		.uleb128 0x9
 26304 0b05 C7000000 		.4byte	0xc7
 26305 0b09 140B0000 		.4byte	0xb14
 26306 0b0d 0A       		.uleb128 0xa
 26307 0b0e 18010000 		.4byte	0x118
 26308 0b12 02       		.byte	0x2
 26309 0b13 00       		.byte	0
 26310 0b14 09       		.uleb128 0x9
 26311 0b15 EB000000 		.4byte	0xeb
 26312 0b19 240B0000 		.4byte	0xb24
 26313 0b1d 0A       		.uleb128 0xa
 26314 0b1e 18010000 		.4byte	0x118
 26315 0b22 03       		.byte	0x3
 26316 0b23 00       		.byte	0
 26317 0b24 11       		.uleb128 0x11
 26318 0b25 29030000 		.4byte	.LASF184
 26319 0b29 06       		.byte	0x6
 26320 0b2a 08       		.byte	0x8
 26321 0b2b B701     		.2byte	0x1b7
 26322 0b2d 660B0000 		.4byte	0xb66
 26323 0b31 13       		.uleb128 0x13
 26324 0b32 70060000 		.4byte	.LASF185
 26325 0b36 08       		.byte	0x8
 26326 0b37 B801     		.2byte	0x1b8
 26327 0b39 97000000 		.4byte	0x97
 26328 0b3d 00       		.byte	0
 26329 0b3e 13       		.uleb128 0x13
 26330 0b3f 09120000 		.4byte	.LASF186
 26331 0b43 08       		.byte	0x8
 26332 0b44 B901     		.2byte	0x1b9
 26333 0b46 97000000 		.4byte	0x97
 26334 0b4a 01       		.byte	0x1
 26335 0b4b 13       		.uleb128 0x13
 26336 0b4c 81050000 		.4byte	.LASF187
 26337 0b50 08       		.byte	0x8
 26338 0b51 BA01     		.2byte	0x1ba
 26339 0b53 C7000000 		.4byte	0xc7
 26340 0b57 02       		.byte	0x2
 26341 0b58 13       		.uleb128 0x13
 26342 0b59 EB080000 		.4byte	.LASF188
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 568


 26343 0b5d 08       		.byte	0x8
 26344 0b5e BB01     		.2byte	0x1bb
 26345 0b60 C7000000 		.4byte	0xc7
 26346 0b64 04       		.byte	0x4
 26347 0b65 00       		.byte	0
 26348 0b66 17       		.uleb128 0x17
 26349 0b67 1E0D0000 		.4byte	.LASF341
 26350 0b6b 02       		.byte	0x2
 26351 0b6c 1403     		.2byte	0x314
 26352 0b6e 8C000000 		.4byte	0x8c
 26353 0b72 03       		.byte	0x3
 26354 0b73 900B0000 		.4byte	0xb90
 26355 0b77 18       		.uleb128 0x18
 26356 0b78 38040000 		.4byte	.LASF268
 26357 0b7c 02       		.byte	0x2
 26358 0b7d 1403     		.2byte	0x314
 26359 0b7f 8C000000 		.4byte	0x8c
 26360 0b83 19       		.uleb128 0x19
 26361 0b84 AA010000 		.4byte	.LASF342
 26362 0b88 02       		.byte	0x2
 26363 0b89 1603     		.2byte	0x316
 26364 0b8b 8C000000 		.4byte	0x8c
 26365 0b8f 00       		.byte	0
 26366 0b90 1A       		.uleb128 0x1a
 26367 0b91 420E0000 		.4byte	.LASF189
 26368 0b95 01       		.byte	0x1
 26369 0b96 3D       		.byte	0x3d
 26370 0b97 00000000 		.4byte	.LFB64
 26371 0b9b DC040000 		.4byte	.LFE64-.LFB64
 26372 0b9f 01       		.uleb128 0x1
 26373 0ba0 9C       		.byte	0x9c
 26374 0ba1 3A0C0000 		.4byte	0xc3a
 26375 0ba5 1B       		.uleb128 0x1b
 26376 0ba6 87050000 		.4byte	.LASF191
 26377 0baa 01       		.byte	0x1
 26378 0bab 3F       		.byte	0x3f
 26379 0bac 97000000 		.4byte	0x97
 26380 0bb0 02       		.uleb128 0x2
 26381 0bb1 91       		.byte	0x91
 26382 0bb2 77       		.sleb128 -9
 26383 0bb3 1C       		.uleb128 0x1c
 26384 0bb4 660B0000 		.4byte	0xb66
 26385 0bb8 36030000 		.4byte	.LBB8
 26386 0bbc 08000000 		.4byte	.LBE8-.LBB8
 26387 0bc0 01       		.byte	0x1
 26388 0bc1 96       		.byte	0x96
 26389 0bc2 E10B0000 		.4byte	0xbe1
 26390 0bc6 1D       		.uleb128 0x1d
 26391 0bc7 770B0000 		.4byte	0xb77
 26392 0bcb 02       		.uleb128 0x2
 26393 0bcc 91       		.byte	0x91
 26394 0bcd 68       		.sleb128 -24
 26395 0bce 1E       		.uleb128 0x1e
 26396 0bcf 36030000 		.4byte	.LBB9
 26397 0bd3 08000000 		.4byte	.LBE9-.LBB9
 26398 0bd7 1F       		.uleb128 0x1f
 26399 0bd8 830B0000 		.4byte	0xb83
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 569


 26400 0bdc 02       		.uleb128 0x2
 26401 0bdd 91       		.byte	0x91
 26402 0bde 64       		.sleb128 -28
 26403 0bdf 00       		.byte	0
 26404 0be0 00       		.byte	0
 26405 0be1 1C       		.uleb128 0x1c
 26406 0be2 660B0000 		.4byte	0xb66
 26407 0be6 54030000 		.4byte	.LBB10
 26408 0bea 08000000 		.4byte	.LBE10-.LBB10
 26409 0bee 01       		.byte	0x1
 26410 0bef A2       		.byte	0xa2
 26411 0bf0 0F0C0000 		.4byte	0xc0f
 26412 0bf4 1D       		.uleb128 0x1d
 26413 0bf5 770B0000 		.4byte	0xb77
 26414 0bf9 02       		.uleb128 0x2
 26415 0bfa 91       		.byte	0x91
 26416 0bfb 70       		.sleb128 -16
 26417 0bfc 1E       		.uleb128 0x1e
 26418 0bfd 54030000 		.4byte	.LBB11
 26419 0c01 08000000 		.4byte	.LBE11-.LBB11
 26420 0c05 1F       		.uleb128 0x1f
 26421 0c06 830B0000 		.4byte	0xb83
 26422 0c0a 02       		.uleb128 0x2
 26423 0c0b 91       		.byte	0x91
 26424 0c0c 60       		.sleb128 -32
 26425 0c0d 00       		.byte	0
 26426 0c0e 00       		.byte	0
 26427 0c0f 20       		.uleb128 0x20
 26428 0c10 660B0000 		.4byte	0xb66
 26429 0c14 98040000 		.4byte	.LBB12
 26430 0c18 08000000 		.4byte	.LBE12-.LBB12
 26431 0c1c 01       		.byte	0x1
 26432 0c1d FE       		.byte	0xfe
 26433 0c1e 1D       		.uleb128 0x1d
 26434 0c1f 770B0000 		.4byte	0xb77
 26435 0c23 02       		.uleb128 0x2
 26436 0c24 91       		.byte	0x91
 26437 0c25 6C       		.sleb128 -20
 26438 0c26 1E       		.uleb128 0x1e
 26439 0c27 98040000 		.4byte	.LBB13
 26440 0c2b 08000000 		.4byte	.LBE13-.LBB13
 26441 0c2f 1F       		.uleb128 0x1f
 26442 0c30 830B0000 		.4byte	0xb83
 26443 0c34 02       		.uleb128 0x2
 26444 0c35 91       		.byte	0x91
 26445 0c36 5C       		.sleb128 -36
 26446 0c37 00       		.byte	0
 26447 0c38 00       		.byte	0
 26448 0c39 00       		.byte	0
 26449 0c3a 21       		.uleb128 0x21
 26450 0c3b 00000000 		.4byte	.LASF190
 26451 0c3f 01       		.byte	0x1
 26452 0c40 2501     		.2byte	0x125
 26453 0c42 00000000 		.4byte	.LFB65
 26454 0c46 22000000 		.4byte	.LFE65-.LFB65
 26455 0c4a 01       		.uleb128 0x1
 26456 0c4b 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 570


 26457 0c4c 610C0000 		.4byte	0xc61
 26458 0c50 22       		.uleb128 0x22
 26459 0c51 C0040000 		.4byte	.LASF192
 26460 0c55 01       		.byte	0x1
 26461 0c56 2601     		.2byte	0x126
 26462 0c58 610C0000 		.4byte	0xc61
 26463 0c5c 03       		.uleb128 0x3
 26464 0c5d 91       		.byte	0x91
 26465 0c5e 9C74     		.sleb128 -1508
 26466 0c60 00       		.byte	0
 26467 0c61 09       		.uleb128 0x9
 26468 0c62 F9000000 		.4byte	0xf9
 26469 0c66 720C0000 		.4byte	0xc72
 26470 0c6a 23       		.uleb128 0x23
 26471 0c6b 18010000 		.4byte	0x118
 26472 0c6f DB05     		.2byte	0x5db
 26473 0c71 00       		.byte	0
 26474 0c72 21       		.uleb128 0x21
 26475 0c73 F8100000 		.4byte	.LASF193
 26476 0c77 01       		.byte	0x1
 26477 0c78 3101     		.2byte	0x131
 26478 0c7a 00000000 		.4byte	.LFB66
 26479 0c7e 02010000 		.4byte	.LFE66-.LFB66
 26480 0c82 01       		.uleb128 0x1
 26481 0c83 9C       		.byte	0x9c
 26482 0c84 BB0C0000 		.4byte	0xcbb
 26483 0c88 24       		.uleb128 0x24
 26484 0c89 72100000 		.4byte	.LASF196
 26485 0c8d 01       		.byte	0x1
 26486 0c8e 3101     		.2byte	0x131
 26487 0c90 A3000000 		.4byte	0xa3
 26488 0c94 04       		.uleb128 0x4
 26489 0c95 91       		.byte	0x91
 26490 0c96 B6C47E   		.sleb128 -24010
 26491 0c99 22       		.uleb128 0x22
 26492 0c9a C0040000 		.4byte	.LASF192
 26493 0c9e 01       		.byte	0x1
 26494 0c9f 3201     		.2byte	0x132
 26495 0ca1 BB0C0000 		.4byte	0xcbb
 26496 0ca5 03       		.uleb128 0x3
 26497 0ca6 91       		.byte	0x91
 26498 0ca7 D860     		.sleb128 -4008
 26499 0ca9 22       		.uleb128 0x22
 26500 0caa CD060000 		.4byte	.LASF194
 26501 0cae 01       		.byte	0x1
 26502 0caf 3301     		.2byte	0x133
 26503 0cb1 CC0C0000 		.4byte	0xccc
 26504 0cb5 04       		.uleb128 0x4
 26505 0cb6 91       		.byte	0x91
 26506 0cb7 B8C47E   		.sleb128 -24008
 26507 0cba 00       		.byte	0
 26508 0cbb 09       		.uleb128 0x9
 26509 0cbc F9000000 		.4byte	0xf9
 26510 0cc0 CC0C0000 		.4byte	0xccc
 26511 0cc4 23       		.uleb128 0x23
 26512 0cc5 18010000 		.4byte	0x118
 26513 0cc9 9F0F     		.2byte	0xf9f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 571


 26514 0ccb 00       		.byte	0
 26515 0ccc 09       		.uleb128 0x9
 26516 0ccd F9000000 		.4byte	0xf9
 26517 0cd1 DD0C0000 		.4byte	0xcdd
 26518 0cd5 23       		.uleb128 0x23
 26519 0cd6 18010000 		.4byte	0x118
 26520 0cda 1F4E     		.2byte	0x4e1f
 26521 0cdc 00       		.byte	0
 26522 0cdd 21       		.uleb128 0x21
 26523 0cde 6F010000 		.4byte	.LASF195
 26524 0ce2 01       		.byte	0x1
 26525 0ce3 5601     		.2byte	0x156
 26526 0ce5 00000000 		.4byte	.LFB67
 26527 0ce9 362F0000 		.4byte	.LFE67-.LFB67
 26528 0ced 01       		.uleb128 0x1
 26529 0cee 9C       		.byte	0x9c
 26530 0cef 810E0000 		.4byte	0xe81
 26531 0cf3 24       		.uleb128 0x24
 26532 0cf4 F20A0000 		.4byte	.LASF197
 26533 0cf8 01       		.byte	0x1
 26534 0cf9 5601     		.2byte	0x156
 26535 0cfb 810E0000 		.4byte	0xe81
 26536 0cff 03       		.uleb128 0x3
 26537 0d00 91       		.byte	0x91
 26538 0d01 9C57     		.sleb128 -5220
 26539 0d03 24       		.uleb128 0x24
 26540 0d04 D1100000 		.4byte	.LASF198
 26541 0d08 01       		.byte	0x1
 26542 0d09 5601     		.2byte	0x156
 26543 0d0b 870E0000 		.4byte	0xe87
 26544 0d0f 03       		.uleb128 0x3
 26545 0d10 91       		.byte	0x91
 26546 0d11 9857     		.sleb128 -5224
 26547 0d13 24       		.uleb128 0x24
 26548 0d14 73020000 		.4byte	.LASF199
 26549 0d18 01       		.byte	0x1
 26550 0d19 5701     		.2byte	0x157
 26551 0d1b 870E0000 		.4byte	0xe87
 26552 0d1f 03       		.uleb128 0x3
 26553 0d20 91       		.byte	0x91
 26554 0d21 9457     		.sleb128 -5228
 26555 0d23 24       		.uleb128 0x24
 26556 0d24 5E0A0000 		.4byte	.LASF200
 26557 0d28 01       		.byte	0x1
 26558 0d29 5701     		.2byte	0x157
 26559 0d2b 870E0000 		.4byte	0xe87
 26560 0d2f 03       		.uleb128 0x3
 26561 0d30 91       		.byte	0x91
 26562 0d31 9057     		.sleb128 -5232
 26563 0d33 24       		.uleb128 0x24
 26564 0d34 3B100000 		.4byte	.LASF201
 26565 0d38 01       		.byte	0x1
 26566 0d39 5801     		.2byte	0x158
 26567 0d3b 870E0000 		.4byte	0xe87
 26568 0d3f 02       		.uleb128 0x2
 26569 0d40 91       		.byte	0x91
 26570 0d41 00       		.sleb128 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 572


 26571 0d42 24       		.uleb128 0x24
 26572 0d43 65060000 		.4byte	.LASF202
 26573 0d47 01       		.byte	0x1
 26574 0d48 5801     		.2byte	0x158
 26575 0d4a 8D0E0000 		.4byte	0xe8d
 26576 0d4e 02       		.uleb128 0x2
 26577 0d4f 91       		.byte	0x91
 26578 0d50 04       		.sleb128 4
 26579 0d51 24       		.uleb128 0x24
 26580 0d52 1A090000 		.4byte	.LASF203
 26581 0d56 01       		.byte	0x1
 26582 0d57 5901     		.2byte	0x159
 26583 0d59 870E0000 		.4byte	0xe87
 26584 0d5d 02       		.uleb128 0x2
 26585 0d5e 91       		.byte	0x91
 26586 0d5f 08       		.sleb128 8
 26587 0d60 24       		.uleb128 0x24
 26588 0d61 DF060000 		.4byte	.LASF204
 26589 0d65 01       		.byte	0x1
 26590 0d66 5901     		.2byte	0x159
 26591 0d68 8D0E0000 		.4byte	0xe8d
 26592 0d6c 02       		.uleb128 0x2
 26593 0d6d 91       		.byte	0x91
 26594 0d6e 0C       		.sleb128 12
 26595 0d6f 22       		.uleb128 0x22
 26596 0d70 13050000 		.4byte	.LASF205
 26597 0d74 01       		.byte	0x1
 26598 0d75 5C01     		.2byte	0x15c
 26599 0d77 930E0000 		.4byte	0xe93
 26600 0d7b 03       		.uleb128 0x3
 26601 0d7c 91       		.byte	0x91
 26602 0d7d E857     		.sleb128 -5144
 26603 0d7f 22       		.uleb128 0x22
 26604 0d80 B0000000 		.4byte	.LASF206
 26605 0d84 01       		.byte	0x1
 26606 0d85 5D01     		.2byte	0x15d
 26607 0d87 A3000000 		.4byte	0xa3
 26608 0d8b 02       		.uleb128 0x2
 26609 0d8c 91       		.byte	0x91
 26610 0d8d 60       		.sleb128 -32
 26611 0d8e 25       		.uleb128 0x25
 26612 0d8f 6900     		.ascii	"i\000"
 26613 0d91 01       		.byte	0x1
 26614 0d92 6001     		.2byte	0x160
 26615 0d94 97000000 		.4byte	0x97
 26616 0d98 02       		.uleb128 0x2
 26617 0d99 91       		.byte	0x91
 26618 0d9a 67       		.sleb128 -25
 26619 0d9b 25       		.uleb128 0x25
 26620 0d9c 6A00     		.ascii	"j\000"
 26621 0d9e 01       		.byte	0x1
 26622 0d9f 6001     		.2byte	0x160
 26623 0da1 97000000 		.4byte	0x97
 26624 0da5 02       		.uleb128 0x2
 26625 0da6 91       		.byte	0x91
 26626 0da7 66       		.sleb128 -26
 26627 0da8 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 573


 26628 0da9 69647800 		.ascii	"idx\000"
 26629 0dad 01       		.byte	0x1
 26630 0dae 6101     		.2byte	0x161
 26631 0db0 97000000 		.4byte	0x97
 26632 0db4 02       		.uleb128 0x2
 26633 0db5 91       		.byte	0x91
 26634 0db6 65       		.sleb128 -27
 26635 0db7 22       		.uleb128 0x22
 26636 0db8 6B0E0000 		.4byte	.LASF207
 26637 0dbc 01       		.byte	0x1
 26638 0dbd 6201     		.2byte	0x162
 26639 0dbf 97000000 		.4byte	0x97
 26640 0dc3 02       		.uleb128 0x2
 26641 0dc4 91       		.byte	0x91
 26642 0dc5 64       		.sleb128 -28
 26643 0dc6 25       		.uleb128 0x25
 26644 0dc7 736F6400 		.ascii	"sod\000"
 26645 0dcb 01       		.byte	0x1
 26646 0dcc 6301     		.2byte	0x163
 26647 0dce 97000000 		.4byte	0x97
 26648 0dd2 02       		.uleb128 0x2
 26649 0dd3 91       		.byte	0x91
 26650 0dd4 63       		.sleb128 -29
 26651 0dd5 22       		.uleb128 0x22
 26652 0dd6 2F0A0000 		.4byte	.LASF208
 26653 0dda 01       		.byte	0x1
 26654 0ddb 6401     		.2byte	0x164
 26655 0ddd 97000000 		.4byte	0x97
 26656 0de1 02       		.uleb128 0x2
 26657 0de2 91       		.byte	0x91
 26658 0de3 62       		.sleb128 -30
 26659 0de4 22       		.uleb128 0x22
 26660 0de5 EF110000 		.4byte	.LASF209
 26661 0de9 01       		.byte	0x1
 26662 0dea 6501     		.2byte	0x165
 26663 0dec A40E0000 		.4byte	0xea4
 26664 0df0 03       		.uleb128 0x3
 26665 0df1 91       		.byte	0x91
 26666 0df2 B457     		.sleb128 -5196
 26667 0df4 22       		.uleb128 0x22
 26668 0df5 23100000 		.4byte	.LASF210
 26669 0df9 01       		.byte	0x1
 26670 0dfa 6601     		.2byte	0x166
 26671 0dfc EB000000 		.4byte	0xeb
 26672 0e00 03       		.uleb128 0x3
 26673 0e01 91       		.byte	0x91
 26674 0e02 B057     		.sleb128 -5200
 26675 0e04 22       		.uleb128 0x22
 26676 0e05 F30E0000 		.4byte	.LASF211
 26677 0e09 01       		.byte	0x1
 26678 0e0a 6701     		.2byte	0x167
 26679 0e0c C7000000 		.4byte	0xc7
 26680 0e10 03       		.uleb128 0x3
 26681 0e11 91       		.byte	0x91
 26682 0e12 AE57     		.sleb128 -5202
 26683 0e14 22       		.uleb128 0x22
 26684 0e15 860A0000 		.4byte	.LASF212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 574


 26685 0e19 01       		.byte	0x1
 26686 0e1a 6801     		.2byte	0x168
 26687 0e1c A3000000 		.4byte	0xa3
 26688 0e20 03       		.uleb128 0x3
 26689 0e21 91       		.byte	0x91
 26690 0e22 AC57     		.sleb128 -5204
 26691 0e24 22       		.uleb128 0x22
 26692 0e25 44100000 		.4byte	.LASF213
 26693 0e29 01       		.byte	0x1
 26694 0e2a 6901     		.2byte	0x169
 26695 0e2c D3000000 		.4byte	0xd3
 26696 0e30 03       		.uleb128 0x3
 26697 0e31 91       		.byte	0x91
 26698 0e32 A857     		.sleb128 -5208
 26699 0e34 22       		.uleb128 0x22
 26700 0e35 F30B0000 		.4byte	.LASF214
 26701 0e39 01       		.byte	0x1
 26702 0e3a 6A01     		.2byte	0x16a
 26703 0e3c AF000000 		.4byte	0xaf
 26704 0e40 03       		.uleb128 0x3
 26705 0e41 91       		.byte	0x91
 26706 0e42 A457     		.sleb128 -5212
 26707 0e44 22       		.uleb128 0x22
 26708 0e45 960B0000 		.4byte	.LASF215
 26709 0e49 01       		.byte	0x1
 26710 0e4a 6C01     		.2byte	0x16c
 26711 0e4c 97000000 		.4byte	0x97
 26712 0e50 02       		.uleb128 0x2
 26713 0e51 91       		.byte	0x91
 26714 0e52 5F       		.sleb128 -33
 26715 0e53 22       		.uleb128 0x22
 26716 0e54 DF000000 		.4byte	.LASF216
 26717 0e58 01       		.byte	0x1
 26718 0e59 6D01     		.2byte	0x16d
 26719 0e5b 97000000 		.4byte	0x97
 26720 0e5f 02       		.uleb128 0x2
 26721 0e60 91       		.byte	0x91
 26722 0e61 5E       		.sleb128 -34
 26723 0e62 22       		.uleb128 0x22
 26724 0e63 4D090000 		.4byte	.LASF217
 26725 0e67 01       		.byte	0x1
 26726 0e68 6F01     		.2byte	0x16f
 26727 0e6a 870E0000 		.4byte	0xe87
 26728 0e6e 02       		.uleb128 0x2
 26729 0e6f 91       		.byte	0x91
 26730 0e70 58       		.sleb128 -40
 26731 0e71 22       		.uleb128 0x22
 26732 0e72 64010000 		.4byte	.LASF218
 26733 0e76 01       		.byte	0x1
 26734 0e77 7001     		.2byte	0x170
 26735 0e79 870E0000 		.4byte	0xe87
 26736 0e7d 02       		.uleb128 0x2
 26737 0e7e 91       		.byte	0x91
 26738 0e7f 54       		.sleb128 -44
 26739 0e80 00       		.byte	0
 26740 0e81 07       		.uleb128 0x7
 26741 0e82 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 575


 26742 0e83 870E0000 		.4byte	0xe87
 26743 0e87 07       		.uleb128 0x7
 26744 0e88 04       		.byte	0x4
 26745 0e89 97000000 		.4byte	0x97
 26746 0e8d 07       		.uleb128 0x7
 26747 0e8e 04       		.byte	0x4
 26748 0e8f 25010000 		.4byte	0x125
 26749 0e93 09       		.uleb128 0x9
 26750 0e94 97000000 		.4byte	0x97
 26751 0e98 A40E0000 		.4byte	0xea4
 26752 0e9c 23       		.uleb128 0x23
 26753 0e9d 18010000 		.4byte	0x118
 26754 0ea1 EB13     		.2byte	0x13eb
 26755 0ea3 00       		.byte	0
 26756 0ea4 09       		.uleb128 0x9
 26757 0ea5 F9000000 		.4byte	0xf9
 26758 0ea9 B40E0000 		.4byte	0xeb4
 26759 0ead 0A       		.uleb128 0xa
 26760 0eae 18010000 		.4byte	0x118
 26761 0eb2 31       		.byte	0x31
 26762 0eb3 00       		.byte	0
 26763 0eb4 21       		.uleb128 0x21
 26764 0eb5 C70C0000 		.4byte	.LASF219
 26765 0eb9 01       		.byte	0x1
 26766 0eba 2F03     		.2byte	0x32f
 26767 0ebc 00000000 		.4byte	.LFB68
 26768 0ec0 08170000 		.4byte	.LFE68-.LFB68
 26769 0ec4 01       		.uleb128 0x1
 26770 0ec5 9C       		.byte	0x9c
 26771 0ec6 82100000 		.4byte	0x1082
 26772 0eca 24       		.uleb128 0x24
 26773 0ecb ED050000 		.4byte	.LASF220
 26774 0ecf 01       		.byte	0x1
 26775 0ed0 2F03     		.2byte	0x32f
 26776 0ed2 A3000000 		.4byte	0xa3
 26777 0ed6 03       		.uleb128 0x3
 26778 0ed7 91       		.byte	0x91
 26779 0ed8 CE76     		.sleb128 -1202
 26780 0eda 25       		.uleb128 0x25
 26781 0edb 6900     		.ascii	"i\000"
 26782 0edd 01       		.byte	0x1
 26783 0ede 3003     		.2byte	0x330
 26784 0ee0 97000000 		.4byte	0x97
 26785 0ee4 02       		.uleb128 0x2
 26786 0ee5 91       		.byte	0x91
 26787 0ee6 6F       		.sleb128 -17
 26788 0ee7 25       		.uleb128 0x25
 26789 0ee8 6A00     		.ascii	"j\000"
 26790 0eea 01       		.byte	0x1
 26791 0eeb 3003     		.2byte	0x330
 26792 0eed 97000000 		.4byte	0x97
 26793 0ef1 02       		.uleb128 0x2
 26794 0ef2 91       		.byte	0x91
 26795 0ef3 6E       		.sleb128 -18
 26796 0ef4 25       		.uleb128 0x25
 26797 0ef5 736F6400 		.ascii	"sod\000"
 26798 0ef9 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 576


 26799 0efa 3103     		.2byte	0x331
 26800 0efc 97000000 		.4byte	0x97
 26801 0f00 02       		.uleb128 0x2
 26802 0f01 91       		.byte	0x91
 26803 0f02 6D       		.sleb128 -19
 26804 0f03 22       		.uleb128 0x22
 26805 0f04 3A090000 		.4byte	.LASF221
 26806 0f08 01       		.byte	0x1
 26807 0f09 3203     		.2byte	0x332
 26808 0f0b 97000000 		.4byte	0x97
 26809 0f0f 02       		.uleb128 0x2
 26810 0f10 91       		.byte	0x91
 26811 0f11 62       		.sleb128 -30
 26812 0f12 22       		.uleb128 0x22
 26813 0f13 F30E0000 		.4byte	.LASF211
 26814 0f17 01       		.byte	0x1
 26815 0f18 3303     		.2byte	0x333
 26816 0f1a C7000000 		.4byte	0xc7
 26817 0f1e 02       		.uleb128 0x2
 26818 0f1f 91       		.byte	0x91
 26819 0f20 60       		.sleb128 -32
 26820 0f21 22       		.uleb128 0x22
 26821 0f22 860A0000 		.4byte	.LASF212
 26822 0f26 01       		.byte	0x1
 26823 0f27 3403     		.2byte	0x334
 26824 0f29 A3000000 		.4byte	0xa3
 26825 0f2d 02       		.uleb128 0x2
 26826 0f2e 91       		.byte	0x91
 26827 0f2f 5E       		.sleb128 -34
 26828 0f30 22       		.uleb128 0x22
 26829 0f31 44100000 		.4byte	.LASF213
 26830 0f35 01       		.byte	0x1
 26831 0f36 3503     		.2byte	0x335
 26832 0f38 D3000000 		.4byte	0xd3
 26833 0f3c 02       		.uleb128 0x2
 26834 0f3d 91       		.byte	0x91
 26835 0f3e 58       		.sleb128 -40
 26836 0f3f 22       		.uleb128 0x22
 26837 0f40 F30B0000 		.4byte	.LASF214
 26838 0f44 01       		.byte	0x1
 26839 0f45 3603     		.2byte	0x336
 26840 0f47 AF000000 		.4byte	0xaf
 26841 0f4b 02       		.uleb128 0x2
 26842 0f4c 91       		.byte	0x91
 26843 0f4d 54       		.sleb128 -44
 26844 0f4e 22       		.uleb128 0x22
 26845 0f4f 23100000 		.4byte	.LASF210
 26846 0f53 01       		.byte	0x1
 26847 0f54 3703     		.2byte	0x337
 26848 0f56 EB000000 		.4byte	0xeb
 26849 0f5a 02       		.uleb128 0x2
 26850 0f5b 91       		.byte	0x91
 26851 0f5c 50       		.sleb128 -48
 26852 0f5d 22       		.uleb128 0x22
 26853 0f5e 960B0000 		.4byte	.LASF215
 26854 0f62 01       		.byte	0x1
 26855 0f63 3903     		.2byte	0x339
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 577


 26856 0f65 97000000 		.4byte	0x97
 26857 0f69 02       		.uleb128 0x2
 26858 0f6a 91       		.byte	0x91
 26859 0f6b 65       		.sleb128 -27
 26860 0f6c 22       		.uleb128 0x22
 26861 0f6d DF000000 		.4byte	.LASF216
 26862 0f71 01       		.byte	0x1
 26863 0f72 3A03     		.2byte	0x33a
 26864 0f74 97000000 		.4byte	0x97
 26865 0f78 02       		.uleb128 0x2
 26866 0f79 91       		.byte	0x91
 26867 0f7a 64       		.sleb128 -28
 26868 0f7b 22       		.uleb128 0x22
 26869 0f7c 89020000 		.4byte	.LASF222
 26870 0f80 01       		.byte	0x1
 26871 0f81 3D03     		.2byte	0x33d
 26872 0f83 82100000 		.4byte	0x1082
 26873 0f87 02       		.uleb128 0x2
 26874 0f88 91       		.byte	0x91
 26875 0f89 68       		.sleb128 -24
 26876 0f8a 22       		.uleb128 0x22
 26877 0f8b F20A0000 		.4byte	.LASF197
 26878 0f8f 01       		.byte	0x1
 26879 0f90 4503     		.2byte	0x345
 26880 0f92 88100000 		.4byte	0x1088
 26881 0f96 03       		.uleb128 0x3
 26882 0f97 91       		.byte	0x91
 26883 0f98 B47D     		.sleb128 -332
 26884 0f9a 22       		.uleb128 0x22
 26885 0f9b D1100000 		.4byte	.LASF198
 26886 0f9f 01       		.byte	0x1
 26887 0fa0 9203     		.2byte	0x392
 26888 0fa2 98100000 		.4byte	0x1098
 26889 0fa6 03       		.uleb128 0x3
 26890 0fa7 91       		.byte	0x91
 26891 0fa8 EC7C     		.sleb128 -404
 26892 0faa 22       		.uleb128 0x22
 26893 0fab 73020000 		.4byte	.LASF199
 26894 0faf 01       		.byte	0x1
 26895 0fb0 A903     		.2byte	0x3a9
 26896 0fb2 98100000 		.4byte	0x1098
 26897 0fb6 03       		.uleb128 0x3
 26898 0fb7 91       		.byte	0x91
 26899 0fb8 A47C     		.sleb128 -476
 26900 0fba 22       		.uleb128 0x22
 26901 0fbb 5E0A0000 		.4byte	.LASF200
 26902 0fbf 01       		.byte	0x1
 26903 0fc0 C003     		.2byte	0x3c0
 26904 0fc2 98100000 		.4byte	0x1098
 26905 0fc6 03       		.uleb128 0x3
 26906 0fc7 91       		.byte	0x91
 26907 0fc8 DC7B     		.sleb128 -548
 26908 0fca 22       		.uleb128 0x22
 26909 0fcb 65060000 		.4byte	.LASF202
 26910 0fcf 01       		.byte	0x1
 26911 0fd0 D703     		.2byte	0x3d7
 26912 0fd2 A8100000 		.4byte	0x10a8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 578


 26913 0fd6 03       		.uleb128 0x3
 26914 0fd7 91       		.byte	0x91
 26915 0fd8 C079     		.sleb128 -832
 26916 0fda 22       		.uleb128 0x22
 26917 0fdb 44110000 		.4byte	.LASF223
 26918 0fdf 01       		.byte	0x1
 26919 0fe0 EF03     		.2byte	0x3ef
 26920 0fe2 B8100000 		.4byte	0x10b8
 26921 0fe6 03       		.uleb128 0x3
 26922 0fe7 91       		.byte	0x91
 26923 0fe8 C878     		.sleb128 -952
 26924 0fea 22       		.uleb128 0x22
 26925 0feb DF060000 		.4byte	.LASF204
 26926 0fef 01       		.byte	0x1
 26927 0ff0 F203     		.2byte	0x3f2
 26928 0ff2 C8100000 		.4byte	0x10c8
 26929 0ff6 03       		.uleb128 0x3
 26930 0ff7 91       		.byte	0x91
 26931 0ff8 A078     		.sleb128 -992
 26932 0ffa 22       		.uleb128 0x22
 26933 0ffb 3B100000 		.4byte	.LASF201
 26934 0fff 01       		.byte	0x1
 26935 1000 FF03     		.2byte	0x3ff
 26936 1002 50010000 		.4byte	0x150
 26937 1006 03       		.uleb128 0x3
 26938 1007 91       		.byte	0x91
 26939 1008 8478     		.sleb128 -1020
 26940 100a 22       		.uleb128 0x22
 26941 100b F80A0000 		.4byte	.LASF224
 26942 100f 01       		.byte	0x1
 26943 1010 0004     		.2byte	0x400
 26944 1012 D8100000 		.4byte	0x10d8
 26945 1016 03       		.uleb128 0x3
 26946 1017 91       		.byte	0x91
 26947 1018 F877     		.sleb128 -1032
 26948 101a 22       		.uleb128 0x22
 26949 101b 480A0000 		.4byte	.LASF225
 26950 101f 01       		.byte	0x1
 26951 1020 0104     		.2byte	0x401
 26952 1022 E8100000 		.4byte	0x10e8
 26953 1026 03       		.uleb128 0x3
 26954 1027 91       		.byte	0x91
 26955 1028 E477     		.sleb128 -1052
 26956 102a 22       		.uleb128 0x22
 26957 102b 050C0000 		.4byte	.LASF226
 26958 102f 01       		.byte	0x1
 26959 1030 0204     		.2byte	0x402
 26960 1032 97000000 		.4byte	0x97
 26961 1036 02       		.uleb128 0x2
 26962 1037 91       		.byte	0x91
 26963 1038 63       		.sleb128 -29
 26964 1039 22       		.uleb128 0x22
 26965 103a 1A090000 		.4byte	.LASF203
 26966 103e 01       		.byte	0x1
 26967 103f 0B04     		.2byte	0x40b
 26968 1041 98100000 		.4byte	0x1098
 26969 1045 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 579


 26970 1046 91       		.byte	0x91
 26971 1047 9C77     		.sleb128 -1124
 26972 1049 22       		.uleb128 0x22
 26973 104a 6B110000 		.4byte	.LASF227
 26974 104e 01       		.byte	0x1
 26975 104f 1604     		.2byte	0x416
 26976 1051 98100000 		.4byte	0x1098
 26977 1055 03       		.uleb128 0x3
 26978 1056 91       		.byte	0x91
 26979 1057 D476     		.sleb128 -1196
 26980 1059 1E       		.uleb128 0x1e
 26981 105a 72160000 		.4byte	.LBB14
 26982 105e 86000000 		.4byte	.LBE14-.LBB14
 26983 1062 25       		.uleb128 0x25
 26984 1063 69647800 		.ascii	"idx\000"
 26985 1067 01       		.byte	0x1
 26986 1068 7F04     		.2byte	0x47f
 26987 106a 97000000 		.4byte	0x97
 26988 106e 02       		.uleb128 0x2
 26989 106f 91       		.byte	0x91
 26990 1070 67       		.sleb128 -25
 26991 1071 22       		.uleb128 0x22
 26992 1072 82040000 		.4byte	.LASF228
 26993 1076 01       		.byte	0x1
 26994 1077 7F04     		.2byte	0x47f
 26995 1079 97000000 		.4byte	0x97
 26996 107d 02       		.uleb128 0x2
 26997 107e 91       		.byte	0x91
 26998 107f 66       		.sleb128 -26
 26999 1080 00       		.byte	0
 27000 1081 00       		.byte	0
 27001 1082 07       		.uleb128 0x7
 27002 1083 04       		.byte	0x4
 27003 1084 A8090000 		.4byte	0x9a8
 27004 1088 09       		.uleb128 0x9
 27005 1089 870E0000 		.4byte	0xe87
 27006 108d 98100000 		.4byte	0x1098
 27007 1091 0A       		.uleb128 0xa
 27008 1092 18010000 		.4byte	0x118
 27009 1096 46       		.byte	0x46
 27010 1097 00       		.byte	0
 27011 1098 09       		.uleb128 0x9
 27012 1099 97000000 		.4byte	0x97
 27013 109d A8100000 		.4byte	0x10a8
 27014 10a1 0A       		.uleb128 0xa
 27015 10a2 18010000 		.4byte	0x118
 27016 10a6 46       		.byte	0x46
 27017 10a7 00       		.byte	0
 27018 10a8 09       		.uleb128 0x9
 27019 10a9 25010000 		.4byte	0x125
 27020 10ad B8100000 		.4byte	0x10b8
 27021 10b1 0A       		.uleb128 0xa
 27022 10b2 18010000 		.4byte	0x118
 27023 10b6 46       		.byte	0x46
 27024 10b7 00       		.byte	0
 27025 10b8 09       		.uleb128 0x9
 27026 10b9 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 580


 27027 10bd C8100000 		.4byte	0x10c8
 27028 10c1 0A       		.uleb128 0xa
 27029 10c2 18010000 		.4byte	0x118
 27030 10c6 75       		.byte	0x75
 27031 10c7 00       		.byte	0
 27032 10c8 09       		.uleb128 0x9
 27033 10c9 25010000 		.4byte	0x125
 27034 10cd D8100000 		.4byte	0x10d8
 27035 10d1 0A       		.uleb128 0xa
 27036 10d2 18010000 		.4byte	0x118
 27037 10d6 09       		.byte	0x9
 27038 10d7 00       		.byte	0
 27039 10d8 09       		.uleb128 0x9
 27040 10d9 97000000 		.4byte	0x97
 27041 10dd E8100000 		.4byte	0x10e8
 27042 10e1 0A       		.uleb128 0xa
 27043 10e2 18010000 		.4byte	0x118
 27044 10e6 08       		.byte	0x8
 27045 10e7 00       		.byte	0
 27046 10e8 09       		.uleb128 0x9
 27047 10e9 97000000 		.4byte	0x97
 27048 10ed F8100000 		.4byte	0x10f8
 27049 10f1 0A       		.uleb128 0xa
 27050 10f2 18010000 		.4byte	0x118
 27051 10f6 11       		.byte	0x11
 27052 10f7 00       		.byte	0
 27053 10f8 21       		.uleb128 0x21
 27054 10f9 FB020000 		.4byte	.LASF229
 27055 10fd 01       		.byte	0x1
 27056 10fe 9004     		.2byte	0x490
 27057 1100 00000000 		.4byte	.LFB69
 27058 1104 18140000 		.4byte	.LFE69-.LFB69
 27059 1108 01       		.uleb128 0x1
 27060 1109 9C       		.byte	0x9c
 27061 110a 9A110000 		.4byte	0x119a
 27062 110e 24       		.uleb128 0x24
 27063 110f ED050000 		.4byte	.LASF220
 27064 1113 01       		.byte	0x1
 27065 1114 9004     		.2byte	0x490
 27066 1116 A3000000 		.4byte	0xa3
 27067 111a 02       		.uleb128 0x2
 27068 111b 91       		.byte	0x91
 27069 111c 56       		.sleb128 -42
 27070 111d 25       		.uleb128 0x25
 27071 111e 6900     		.ascii	"i\000"
 27072 1120 01       		.byte	0x1
 27073 1121 9204     		.2byte	0x492
 27074 1123 97000000 		.4byte	0x97
 27075 1127 02       		.uleb128 0x2
 27076 1128 91       		.byte	0x91
 27077 1129 67       		.sleb128 -25
 27078 112a 25       		.uleb128 0x25
 27079 112b 6A00     		.ascii	"j\000"
 27080 112d 01       		.byte	0x1
 27081 112e 9204     		.2byte	0x492
 27082 1130 97000000 		.4byte	0x97
 27083 1134 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 581


 27084 1135 91       		.byte	0x91
 27085 1136 66       		.sleb128 -26
 27086 1137 22       		.uleb128 0x22
 27087 1138 690A0000 		.4byte	.LASF230
 27088 113c 01       		.byte	0x1
 27089 113d 9304     		.2byte	0x493
 27090 113f 97000000 		.4byte	0x97
 27091 1143 02       		.uleb128 0x2
 27092 1144 91       		.byte	0x91
 27093 1145 62       		.sleb128 -30
 27094 1146 22       		.uleb128 0x22
 27095 1147 23100000 		.4byte	.LASF210
 27096 114b 01       		.byte	0x1
 27097 114c 9404     		.2byte	0x494
 27098 114e EB000000 		.4byte	0xeb
 27099 1152 02       		.uleb128 0x2
 27100 1153 91       		.byte	0x91
 27101 1154 5C       		.sleb128 -36
 27102 1155 22       		.uleb128 0x22
 27103 1156 D4020000 		.4byte	.LASF231
 27104 115a 01       		.byte	0x1
 27105 115b 9404     		.2byte	0x494
 27106 115d EB000000 		.4byte	0xeb
 27107 1161 02       		.uleb128 0x2
 27108 1162 91       		.byte	0x91
 27109 1163 58       		.sleb128 -40
 27110 1164 22       		.uleb128 0x22
 27111 1165 960B0000 		.4byte	.LASF215
 27112 1169 01       		.byte	0x1
 27113 116a 9604     		.2byte	0x496
 27114 116c 97000000 		.4byte	0x97
 27115 1170 02       		.uleb128 0x2
 27116 1171 91       		.byte	0x91
 27117 1172 64       		.sleb128 -28
 27118 1173 22       		.uleb128 0x22
 27119 1174 DF000000 		.4byte	.LASF216
 27120 1178 01       		.byte	0x1
 27121 1179 9704     		.2byte	0x497
 27122 117b 97000000 		.4byte	0x97
 27123 117f 02       		.uleb128 0x2
 27124 1180 91       		.byte	0x91
 27125 1181 63       		.sleb128 -29
 27126 1182 1E       		.uleb128 0x1e
 27127 1183 F80A0000 		.4byte	.LBB15
 27128 1187 26000000 		.4byte	.LBE15-.LBB15
 27129 118b 25       		.uleb128 0x25
 27130 118c 6900     		.ascii	"i\000"
 27131 118e 01       		.byte	0x1
 27132 118f 3E05     		.2byte	0x53e
 27133 1191 97000000 		.4byte	0x97
 27134 1195 02       		.uleb128 0x2
 27135 1196 91       		.byte	0x91
 27136 1197 65       		.sleb128 -27
 27137 1198 00       		.byte	0
 27138 1199 00       		.byte	0
 27139 119a 21       		.uleb128 0x21
 27140 119b 6A070000 		.4byte	.LASF232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 582


 27141 119f 01       		.byte	0x1
 27142 11a0 D705     		.2byte	0x5d7
 27143 11a2 00000000 		.4byte	.LFB70
 27144 11a6 F40D0000 		.4byte	.LFE70-.LFB70
 27145 11aa 01       		.uleb128 0x1
 27146 11ab 9C       		.byte	0x9c
 27147 11ac 29130000 		.4byte	0x1329
 27148 11b0 24       		.uleb128 0x24
 27149 11b1 ED050000 		.4byte	.LASF220
 27150 11b5 01       		.byte	0x1
 27151 11b6 D705     		.2byte	0x5d7
 27152 11b8 A3000000 		.4byte	0xa3
 27153 11bc 03       		.uleb128 0x3
 27154 11bd 91       		.byte	0x91
 27155 11be CE72     		.sleb128 -1714
 27156 11c0 22       		.uleb128 0x22
 27157 11c1 13050000 		.4byte	.LASF205
 27158 11c5 01       		.byte	0x1
 27159 11c6 DA05     		.2byte	0x5da
 27160 11c8 29130000 		.4byte	0x1329
 27161 11cc 03       		.uleb128 0x3
 27162 11cd 91       		.byte	0x91
 27163 11ce DC74     		.sleb128 -1444
 27164 11d0 22       		.uleb128 0x22
 27165 11d1 E00E0000 		.4byte	.LASF233
 27166 11d5 01       		.byte	0x1
 27167 11d6 E105     		.2byte	0x5e1
 27168 11d8 A3000000 		.4byte	0xa3
 27169 11dc 02       		.uleb128 0x2
 27170 11dd 91       		.byte	0x91
 27171 11de 62       		.sleb128 -30
 27172 11df 22       		.uleb128 0x22
 27173 11e0 96040000 		.4byte	.LASF234
 27174 11e4 01       		.byte	0x1
 27175 11e5 E205     		.2byte	0x5e2
 27176 11e7 A3000000 		.4byte	0xa3
 27177 11eb 02       		.uleb128 0x2
 27178 11ec 91       		.byte	0x91
 27179 11ed 6E       		.sleb128 -18
 27180 11ee 22       		.uleb128 0x22
 27181 11ef 8B070000 		.4byte	.LASF235
 27182 11f3 01       		.byte	0x1
 27183 11f4 E305     		.2byte	0x5e3
 27184 11f6 A3000000 		.4byte	0xa3
 27185 11fa 02       		.uleb128 0x2
 27186 11fb 91       		.byte	0x91
 27187 11fc 60       		.sleb128 -32
 27188 11fd 22       		.uleb128 0x22
 27189 11fe 0A070000 		.4byte	.LASF236
 27190 1202 01       		.byte	0x1
 27191 1203 E405     		.2byte	0x5e4
 27192 1205 A3000000 		.4byte	0xa3
 27193 1209 02       		.uleb128 0x2
 27194 120a 91       		.byte	0x91
 27195 120b 5E       		.sleb128 -34
 27196 120c 25       		.uleb128 0x25
 27197 120d 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 583


 27198 120f 01       		.byte	0x1
 27199 1210 EC05     		.2byte	0x5ec
 27200 1212 A3000000 		.4byte	0xa3
 27201 1216 02       		.uleb128 0x2
 27202 1217 91       		.byte	0x91
 27203 1218 6C       		.sleb128 -20
 27204 1219 25       		.uleb128 0x25
 27205 121a 6A00     		.ascii	"j\000"
 27206 121c 01       		.byte	0x1
 27207 121d EC05     		.2byte	0x5ec
 27208 121f A3000000 		.4byte	0xa3
 27209 1223 02       		.uleb128 0x2
 27210 1224 91       		.byte	0x91
 27211 1225 6A       		.sleb128 -22
 27212 1226 25       		.uleb128 0x25
 27213 1227 6B00     		.ascii	"k\000"
 27214 1229 01       		.byte	0x1
 27215 122a EC05     		.2byte	0x5ec
 27216 122c A3000000 		.4byte	0xa3
 27217 1230 02       		.uleb128 0x2
 27218 1231 91       		.byte	0x91
 27219 1232 68       		.sleb128 -24
 27220 1233 25       		.uleb128 0x25
 27221 1234 6800     		.ascii	"h\000"
 27222 1236 01       		.byte	0x1
 27223 1237 EC05     		.2byte	0x5ec
 27224 1239 A3000000 		.4byte	0xa3
 27225 123d 02       		.uleb128 0x2
 27226 123e 91       		.byte	0x91
 27227 123f 66       		.sleb128 -26
 27228 1240 22       		.uleb128 0x22
 27229 1241 8B040000 		.4byte	.LASF237
 27230 1245 01       		.byte	0x1
 27231 1246 ED05     		.2byte	0x5ed
 27232 1248 A3000000 		.4byte	0xa3
 27233 124c 02       		.uleb128 0x2
 27234 124d 91       		.byte	0x91
 27235 124e 5C       		.sleb128 -36
 27236 124f 22       		.uleb128 0x22
 27237 1250 AB0B0000 		.4byte	.LASF238
 27238 1254 01       		.byte	0x1
 27239 1255 F005     		.2byte	0x5f0
 27240 1257 30010000 		.4byte	0x130
 27241 125b 03       		.uleb128 0x3
 27242 125c 91       		.byte	0x91
 27243 125d C074     		.sleb128 -1472
 27244 125f 22       		.uleb128 0x22
 27245 1260 A70E0000 		.4byte	.LASF239
 27246 1264 01       		.byte	0x1
 27247 1265 F105     		.2byte	0x5f1
 27248 1267 3A130000 		.4byte	0x133a
 27249 126b 03       		.uleb128 0x3
 27250 126c 91       		.byte	0x91
 27251 126d B474     		.sleb128 -1484
 27252 126f 22       		.uleb128 0x22
 27253 1270 15060000 		.4byte	.LASF240
 27254 1274 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 584


 27255 1275 F205     		.2byte	0x5f2
 27256 1277 4A130000 		.4byte	0x134a
 27257 127b 03       		.uleb128 0x3
 27258 127c 91       		.byte	0x91
 27259 127d A074     		.sleb128 -1504
 27260 127f 22       		.uleb128 0x22
 27261 1280 09000000 		.4byte	.LASF241
 27262 1284 01       		.byte	0x1
 27263 1285 F305     		.2byte	0x5f3
 27264 1287 5A130000 		.4byte	0x135a
 27265 128b 03       		.uleb128 0x3
 27266 128c 91       		.byte	0x91
 27267 128d 9074     		.sleb128 -1520
 27268 128f 22       		.uleb128 0x22
 27269 1290 7E0C0000 		.4byte	.LASF242
 27270 1294 01       		.byte	0x1
 27271 1295 F405     		.2byte	0x5f4
 27272 1297 6A130000 		.4byte	0x136a
 27273 129b 03       		.uleb128 0x3
 27274 129c 91       		.byte	0x91
 27275 129d E473     		.sleb128 -1564
 27276 129f 22       		.uleb128 0x22
 27277 12a0 44040000 		.4byte	.LASF243
 27278 12a4 01       		.byte	0x1
 27279 12a5 F505     		.2byte	0x5f5
 27280 12a7 30010000 		.4byte	0x130
 27281 12ab 03       		.uleb128 0x3
 27282 12ac 91       		.byte	0x91
 27283 12ad C873     		.sleb128 -1592
 27284 12af 22       		.uleb128 0x22
 27285 12b0 41010000 		.4byte	.LASF244
 27286 12b4 01       		.byte	0x1
 27287 12b5 F805     		.2byte	0x5f8
 27288 12b7 97000000 		.4byte	0x97
 27289 12bb 02       		.uleb128 0x2
 27290 12bc 91       		.byte	0x91
 27291 12bd 5B       		.sleb128 -37
 27292 12be 22       		.uleb128 0x22
 27293 12bf 18040000 		.4byte	.LASF245
 27294 12c3 01       		.byte	0x1
 27295 12c4 F905     		.2byte	0x5f9
 27296 12c6 97000000 		.4byte	0x97
 27297 12ca 02       		.uleb128 0x2
 27298 12cb 91       		.byte	0x91
 27299 12cc 5A       		.sleb128 -38
 27300 12cd 22       		.uleb128 0x22
 27301 12ce 580E0000 		.4byte	.LASF246
 27302 12d2 01       		.byte	0x1
 27303 12d3 FA05     		.2byte	0x5fa
 27304 12d5 97000000 		.4byte	0x97
 27305 12d9 02       		.uleb128 0x2
 27306 12da 91       		.byte	0x91
 27307 12db 59       		.sleb128 -39
 27308 12dc 22       		.uleb128 0x22
 27309 12dd CE0E0000 		.4byte	.LASF247
 27310 12e1 01       		.byte	0x1
 27311 12e2 FB05     		.2byte	0x5fb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 585


 27312 12e4 97000000 		.4byte	0x97
 27313 12e8 02       		.uleb128 0x2
 27314 12e9 91       		.byte	0x91
 27315 12ea 58       		.sleb128 -40
 27316 12eb 22       		.uleb128 0x22
 27317 12ec 26040000 		.4byte	.LASF248
 27318 12f0 01       		.byte	0x1
 27319 12f1 FC05     		.2byte	0x5fc
 27320 12f3 97000000 		.4byte	0x97
 27321 12f7 02       		.uleb128 0x2
 27322 12f8 91       		.byte	0x91
 27323 12f9 57       		.sleb128 -41
 27324 12fa 22       		.uleb128 0x22
 27325 12fb 99000000 		.4byte	.LASF249
 27326 12ff 01       		.byte	0x1
 27327 1300 FD05     		.2byte	0x5fd
 27328 1302 97000000 		.4byte	0x97
 27329 1306 02       		.uleb128 0x2
 27330 1307 91       		.byte	0x91
 27331 1308 65       		.sleb128 -27
 27332 1309 22       		.uleb128 0x22
 27333 130a 44110000 		.4byte	.LASF223
 27334 130e 01       		.byte	0x1
 27335 130f FF05     		.2byte	0x5ff
 27336 1311 B8100000 		.4byte	0x10b8
 27337 1315 03       		.uleb128 0x3
 27338 1316 91       		.byte	0x91
 27339 1317 D072     		.sleb128 -1712
 27340 1319 22       		.uleb128 0x22
 27341 131a E8020000 		.4byte	.LASF250
 27342 131e 01       		.byte	0x1
 27343 131f 0006     		.2byte	0x600
 27344 1321 97000000 		.4byte	0x97
 27345 1325 02       		.uleb128 0x2
 27346 1326 91       		.byte	0x91
 27347 1327 56       		.sleb128 -42
 27348 1328 00       		.byte	0
 27349 1329 09       		.uleb128 0x9
 27350 132a 97000000 		.4byte	0x97
 27351 132e 3A130000 		.4byte	0x133a
 27352 1332 23       		.uleb128 0x23
 27353 1333 18010000 		.4byte	0x118
 27354 1337 7805     		.2byte	0x578
 27355 1339 00       		.byte	0
 27356 133a 09       		.uleb128 0x9
 27357 133b F9000000 		.4byte	0xf9
 27358 133f 4A130000 		.4byte	0x134a
 27359 1343 0A       		.uleb128 0xa
 27360 1344 18010000 		.4byte	0x118
 27361 1348 0A       		.byte	0xa
 27362 1349 00       		.byte	0
 27363 134a 09       		.uleb128 0x9
 27364 134b F9000000 		.4byte	0xf9
 27365 134f 5A130000 		.4byte	0x135a
 27366 1353 0A       		.uleb128 0xa
 27367 1354 18010000 		.4byte	0x118
 27368 1358 13       		.byte	0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 586


 27369 1359 00       		.byte	0
 27370 135a 09       		.uleb128 0x9
 27371 135b F9000000 		.4byte	0xf9
 27372 135f 6A130000 		.4byte	0x136a
 27373 1363 0A       		.uleb128 0xa
 27374 1364 18010000 		.4byte	0x118
 27375 1368 0F       		.byte	0xf
 27376 1369 00       		.byte	0
 27377 136a 09       		.uleb128 0x9
 27378 136b F9000000 		.4byte	0xf9
 27379 136f 7A130000 		.4byte	0x137a
 27380 1373 0A       		.uleb128 0xa
 27381 1374 18010000 		.4byte	0x118
 27382 1378 29       		.byte	0x29
 27383 1379 00       		.byte	0
 27384 137a 26       		.uleb128 0x26
 27385 137b 51020000 		.4byte	.LASF279
 27386 137f 01       		.byte	0x1
 27387 1380 C606     		.2byte	0x6c6
 27388 1382 00000000 		.4byte	.LFB71
 27389 1386 88000000 		.4byte	.LFE71-.LFB71
 27390 138a 01       		.uleb128 0x1
 27391 138b 9C       		.byte	0x9c
 27392 138c AB130000 		.4byte	0x13ab
 27393 1390 25       		.uleb128 0x25
 27394 1391 6900     		.ascii	"i\000"
 27395 1393 01       		.byte	0x1
 27396 1394 C806     		.2byte	0x6c8
 27397 1396 97000000 		.4byte	0x97
 27398 139a 02       		.uleb128 0x2
 27399 139b 91       		.byte	0x91
 27400 139c 6F       		.sleb128 -17
 27401 139d 25       		.uleb128 0x25
 27402 139e 6A00     		.ascii	"j\000"
 27403 13a0 01       		.byte	0x1
 27404 13a1 C806     		.2byte	0x6c8
 27405 13a3 97000000 		.4byte	0x97
 27406 13a7 02       		.uleb128 0x2
 27407 13a8 91       		.byte	0x91
 27408 13a9 6E       		.sleb128 -18
 27409 13aa 00       		.byte	0
 27410 13ab 21       		.uleb128 0x21
 27411 13ac BE000000 		.4byte	.LASF251
 27412 13b0 01       		.byte	0x1
 27413 13b1 D906     		.2byte	0x6d9
 27414 13b3 00000000 		.4byte	.LFB72
 27415 13b7 AC1E0000 		.4byte	.LFE72-.LFB72
 27416 13bb 01       		.uleb128 0x1
 27417 13bc 9C       		.byte	0x9c
 27418 13bd 64140000 		.4byte	0x1464
 27419 13c1 24       		.uleb128 0x24
 27420 13c2 B50B0000 		.4byte	.LASF252
 27421 13c6 01       		.byte	0x1
 27422 13c7 D906     		.2byte	0x6d9
 27423 13c9 1F010000 		.4byte	0x11f
 27424 13cd 03       		.uleb128 0x3
 27425 13ce 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 587


 27426 13cf D47E     		.sleb128 -172
 27427 13d1 25       		.uleb128 0x25
 27428 13d2 6900     		.ascii	"i\000"
 27429 13d4 01       		.byte	0x1
 27430 13d5 DB06     		.2byte	0x6db
 27431 13d7 73000000 		.4byte	0x73
 27432 13db 02       		.uleb128 0x2
 27433 13dc 91       		.byte	0x91
 27434 13dd 54       		.sleb128 -44
 27435 13de 22       		.uleb128 0x22
 27436 13df 89020000 		.4byte	.LASF222
 27437 13e3 01       		.byte	0x1
 27438 13e4 DD06     		.2byte	0x6dd
 27439 13e6 82100000 		.4byte	0x1082
 27440 13ea 02       		.uleb128 0x2
 27441 13eb 91       		.byte	0x91
 27442 13ec 48       		.sleb128 -56
 27443 13ed 1E       		.uleb128 0x1e
 27444 13ee 1C000000 		.4byte	.LBB16
 27445 13f2 281E0000 		.4byte	.LBE16-.LBB16
 27446 13f6 25       		.uleb128 0x25
 27447 13f7 73747200 		.ascii	"str\000"
 27448 13fb 01       		.byte	0x1
 27449 13fc E006     		.2byte	0x6e0
 27450 13fe 64140000 		.4byte	0x1464
 27451 1402 03       		.uleb128 0x3
 27452 1403 91       		.byte	0x91
 27453 1404 D87E     		.sleb128 -168
 27454 1406 25       		.uleb128 0x25
 27455 1407 6A00     		.ascii	"j\000"
 27456 1409 01       		.byte	0x1
 27457 140a 7008     		.2byte	0x870
 27458 140c 73000000 		.4byte	0x73
 27459 1410 02       		.uleb128 0x2
 27460 1411 91       		.byte	0x91
 27461 1412 4C       		.sleb128 -52
 27462 1413 1E       		.uleb128 0x1e
 27463 1414 5A020000 		.4byte	.LBB17
 27464 1418 E8120000 		.4byte	.LBE17-.LBB17
 27465 141c 25       		.uleb128 0x25
 27466 141d 6B00     		.ascii	"k\000"
 27467 141f 01       		.byte	0x1
 27468 1420 0B07     		.2byte	0x70b
 27469 1422 97000000 		.4byte	0x97
 27470 1426 02       		.uleb128 0x2
 27471 1427 91       		.byte	0x91
 27472 1428 53       		.sleb128 -45
 27473 1429 1E       		.uleb128 0x1e
 27474 142a 64020000 		.4byte	.LBB18
 27475 142e C2120000 		.4byte	.LBE18-.LBB18
 27476 1432 22       		.uleb128 0x22
 27477 1433 960B0000 		.4byte	.LASF215
 27478 1437 01       		.byte	0x1
 27479 1438 0D07     		.2byte	0x70d
 27480 143a 97000000 		.4byte	0x97
 27481 143e 02       		.uleb128 0x2
 27482 143f 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 588


 27483 1440 47       		.sleb128 -57
 27484 1441 25       		.uleb128 0x25
 27485 1442 4D4F5400 		.ascii	"MOT\000"
 27486 1446 01       		.byte	0x1
 27487 1447 0E07     		.2byte	0x70e
 27488 1449 74140000 		.4byte	0x1474
 27489 144d 02       		.uleb128 0x2
 27490 144e 91       		.byte	0x91
 27491 144f 40       		.sleb128 -64
 27492 1450 22       		.uleb128 0x22
 27493 1451 C1100000 		.4byte	.LASF253
 27494 1455 01       		.byte	0x1
 27495 1456 0F07     		.2byte	0x70f
 27496 1458 97000000 		.4byte	0x97
 27497 145c 03       		.uleb128 0x3
 27498 145d 91       		.byte	0x91
 27499 145e BF7F     		.sleb128 -65
 27500 1460 00       		.byte	0
 27501 1461 00       		.byte	0
 27502 1462 00       		.byte	0
 27503 1463 00       		.byte	0
 27504 1464 09       		.uleb128 0x9
 27505 1465 F9000000 		.4byte	0xf9
 27506 1469 74140000 		.4byte	0x1474
 27507 146d 0A       		.uleb128 0xa
 27508 146e 18010000 		.4byte	0x118
 27509 1472 63       		.byte	0x63
 27510 1473 00       		.byte	0
 27511 1474 07       		.uleb128 0x7
 27512 1475 04       		.byte	0x4
 27513 1476 94050000 		.4byte	0x594
 27514 147a 21       		.uleb128 0x21
 27515 147b 020D0000 		.4byte	.LASF254
 27516 147f 01       		.byte	0x1
 27517 1480 9008     		.2byte	0x890
 27518 1482 00000000 		.4byte	.LFB73
 27519 1486 B4030000 		.4byte	.LFE73-.LFB73
 27520 148a 01       		.uleb128 0x1
 27521 148b 9C       		.byte	0x9c
 27522 148c FA140000 		.4byte	0x14fa
 27523 1490 24       		.uleb128 0x24
 27524 1491 B50B0000 		.4byte	.LASF252
 27525 1495 01       		.byte	0x1
 27526 1496 9008     		.2byte	0x890
 27527 1498 1F010000 		.4byte	0x11f
 27528 149c 03       		.uleb128 0x3
 27529 149d 91       		.byte	0x91
 27530 149e EC7E     		.sleb128 -148
 27531 14a0 25       		.uleb128 0x25
 27532 14a1 73747200 		.ascii	"str\000"
 27533 14a5 01       		.byte	0x1
 27534 14a6 9208     		.2byte	0x892
 27535 14a8 64140000 		.4byte	0x1464
 27536 14ac 03       		.uleb128 0x3
 27537 14ad 91       		.byte	0x91
 27538 14ae F07E     		.sleb128 -144
 27539 14b0 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 589


 27540 14b1 6900     		.ascii	"i\000"
 27541 14b3 01       		.byte	0x1
 27542 14b4 9308     		.2byte	0x893
 27543 14b6 73000000 		.4byte	0x73
 27544 14ba 02       		.uleb128 0x2
 27545 14bb 91       		.byte	0x91
 27546 14bc 64       		.sleb128 -28
 27547 14bd 22       		.uleb128 0x22
 27548 14be 65030000 		.4byte	.LASF255
 27549 14c2 01       		.byte	0x1
 27550 14c3 9408     		.2byte	0x894
 27551 14c5 73000000 		.4byte	0x73
 27552 14c9 02       		.uleb128 0x2
 27553 14ca 91       		.byte	0x91
 27554 14cb 54       		.sleb128 -44
 27555 14cc 22       		.uleb128 0x22
 27556 14cd 89020000 		.4byte	.LASF222
 27557 14d1 01       		.byte	0x1
 27558 14d2 9608     		.2byte	0x896
 27559 14d4 82100000 		.4byte	0x1082
 27560 14d8 02       		.uleb128 0x2
 27561 14d9 91       		.byte	0x91
 27562 14da 60       		.sleb128 -32
 27563 14db 25       		.uleb128 0x25
 27564 14dc 4D4F5400 		.ascii	"MOT\000"
 27565 14e0 01       		.byte	0x1
 27566 14e1 9708     		.2byte	0x897
 27567 14e3 74140000 		.4byte	0x1474
 27568 14e7 02       		.uleb128 0x2
 27569 14e8 91       		.byte	0x91
 27570 14e9 5C       		.sleb128 -36
 27571 14ea 22       		.uleb128 0x22
 27572 14eb C1100000 		.4byte	.LASF253
 27573 14ef 01       		.byte	0x1
 27574 14f0 9808     		.2byte	0x898
 27575 14f2 97000000 		.4byte	0x97
 27576 14f6 02       		.uleb128 0x2
 27577 14f7 91       		.byte	0x91
 27578 14f8 5B       		.sleb128 -37
 27579 14f9 00       		.byte	0
 27580 14fa 21       		.uleb128 0x21
 27581 14fb EC0C0000 		.4byte	.LASF256
 27582 14ff 01       		.byte	0x1
 27583 1500 D208     		.2byte	0x8d2
 27584 1502 00000000 		.4byte	.LFB74
 27585 1506 38120000 		.4byte	.LFE74-.LFB74
 27586 150a 01       		.uleb128 0x1
 27587 150b 9C       		.byte	0x9c
 27588 150c 9B150000 		.4byte	0x159b
 27589 1510 24       		.uleb128 0x24
 27590 1511 B50B0000 		.4byte	.LASF252
 27591 1515 01       		.byte	0x1
 27592 1516 D208     		.2byte	0x8d2
 27593 1518 1F010000 		.4byte	0x11f
 27594 151c 03       		.uleb128 0x3
 27595 151d 91       		.byte	0x91
 27596 151e D47E     		.sleb128 -172
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 590


 27597 1520 25       		.uleb128 0x25
 27598 1521 73747200 		.ascii	"str\000"
 27599 1525 01       		.byte	0x1
 27600 1526 D408     		.2byte	0x8d4
 27601 1528 64140000 		.4byte	0x1464
 27602 152c 03       		.uleb128 0x3
 27603 152d 91       		.byte	0x91
 27604 152e DC7E     		.sleb128 -164
 27605 1530 25       		.uleb128 0x25
 27606 1531 6900     		.ascii	"i\000"
 27607 1533 01       		.byte	0x1
 27608 1534 D508     		.2byte	0x8d5
 27609 1536 73000000 		.4byte	0x73
 27610 153a 02       		.uleb128 0x2
 27611 153b 91       		.byte	0x91
 27612 153c 54       		.sleb128 -44
 27613 153d 22       		.uleb128 0x22
 27614 153e 89020000 		.4byte	.LASF222
 27615 1542 01       		.byte	0x1
 27616 1543 D908     		.2byte	0x8d9
 27617 1545 82100000 		.4byte	0x1082
 27618 1549 02       		.uleb128 0x2
 27619 154a 91       		.byte	0x91
 27620 154b 4C       		.sleb128 -52
 27621 154c 1E       		.uleb128 0x1e
 27622 154d 08010000 		.4byte	.LBB19
 27623 1551 8E0C0000 		.4byte	.LBE19-.LBB19
 27624 1555 25       		.uleb128 0x25
 27625 1556 6B00     		.ascii	"k\000"
 27626 1558 01       		.byte	0x1
 27627 1559 EE08     		.2byte	0x8ee
 27628 155b 97000000 		.4byte	0x97
 27629 155f 02       		.uleb128 0x2
 27630 1560 91       		.byte	0x91
 27631 1561 53       		.sleb128 -45
 27632 1562 1E       		.uleb128 0x1e
 27633 1563 12010000 		.4byte	.LBB20
 27634 1567 680C0000 		.4byte	.LBE20-.LBB20
 27635 156b 22       		.uleb128 0x22
 27636 156c 960B0000 		.4byte	.LASF215
 27637 1570 01       		.byte	0x1
 27638 1571 F008     		.2byte	0x8f0
 27639 1573 97000000 		.4byte	0x97
 27640 1577 02       		.uleb128 0x2
 27641 1578 91       		.byte	0x91
 27642 1579 4B       		.sleb128 -53
 27643 157a 25       		.uleb128 0x25
 27644 157b 4D4F5400 		.ascii	"MOT\000"
 27645 157f 01       		.byte	0x1
 27646 1580 F108     		.2byte	0x8f1
 27647 1582 74140000 		.4byte	0x1474
 27648 1586 02       		.uleb128 0x2
 27649 1587 91       		.byte	0x91
 27650 1588 44       		.sleb128 -60
 27651 1589 22       		.uleb128 0x22
 27652 158a C1100000 		.4byte	.LASF253
 27653 158e 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 591


 27654 158f F208     		.2byte	0x8f2
 27655 1591 97000000 		.4byte	0x97
 27656 1595 02       		.uleb128 0x2
 27657 1596 91       		.byte	0x91
 27658 1597 43       		.sleb128 -61
 27659 1598 00       		.byte	0
 27660 1599 00       		.byte	0
 27661 159a 00       		.byte	0
 27662 159b 21       		.uleb128 0x21
 27663 159c 85090000 		.4byte	.LASF257
 27664 15a0 01       		.byte	0x1
 27665 15a1 D609     		.2byte	0x9d6
 27666 15a3 00000000 		.4byte	.LFB75
 27667 15a7 C8000000 		.4byte	.LFE75-.LFB75
 27668 15ab 01       		.uleb128 0x1
 27669 15ac 9C       		.byte	0x9c
 27670 15ad DF150000 		.4byte	0x15df
 27671 15b1 24       		.uleb128 0x24
 27672 15b2 B50B0000 		.4byte	.LASF252
 27673 15b6 01       		.byte	0x1
 27674 15b7 D609     		.2byte	0x9d6
 27675 15b9 1F010000 		.4byte	0x11f
 27676 15bd 03       		.uleb128 0x3
 27677 15be 91       		.byte	0x91
 27678 15bf 847F     		.sleb128 -124
 27679 15c1 25       		.uleb128 0x25
 27680 15c2 73747200 		.ascii	"str\000"
 27681 15c6 01       		.byte	0x1
 27682 15c7 D809     		.2byte	0x9d8
 27683 15c9 64140000 		.4byte	0x1464
 27684 15cd 03       		.uleb128 0x3
 27685 15ce 91       		.byte	0x91
 27686 15cf 887F     		.sleb128 -120
 27687 15d1 25       		.uleb128 0x25
 27688 15d2 6900     		.ascii	"i\000"
 27689 15d4 01       		.byte	0x1
 27690 15d5 D909     		.2byte	0x9d9
 27691 15d7 73000000 		.4byte	0x73
 27692 15db 02       		.uleb128 0x2
 27693 15dc 91       		.byte	0x91
 27694 15dd 6C       		.sleb128 -20
 27695 15de 00       		.byte	0
 27696 15df 21       		.uleb128 0x21
 27697 15e0 C10B0000 		.4byte	.LASF258
 27698 15e4 01       		.byte	0x1
 27699 15e5 ED09     		.2byte	0x9ed
 27700 15e7 00000000 		.4byte	.LFB76
 27701 15eb 30010000 		.4byte	.LFE76-.LFB76
 27702 15ef 01       		.uleb128 0x1
 27703 15f0 9C       		.byte	0x9c
 27704 15f1 23160000 		.4byte	0x1623
 27705 15f5 24       		.uleb128 0x24
 27706 15f6 B50B0000 		.4byte	.LASF252
 27707 15fa 01       		.byte	0x1
 27708 15fb ED09     		.2byte	0x9ed
 27709 15fd 1F010000 		.4byte	0x11f
 27710 1601 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 592


 27711 1602 91       		.byte	0x91
 27712 1603 847F     		.sleb128 -124
 27713 1605 25       		.uleb128 0x25
 27714 1606 73747200 		.ascii	"str\000"
 27715 160a 01       		.byte	0x1
 27716 160b EF09     		.2byte	0x9ef
 27717 160d 64140000 		.4byte	0x1464
 27718 1611 03       		.uleb128 0x3
 27719 1612 91       		.byte	0x91
 27720 1613 887F     		.sleb128 -120
 27721 1615 25       		.uleb128 0x25
 27722 1616 6900     		.ascii	"i\000"
 27723 1618 01       		.byte	0x1
 27724 1619 F009     		.2byte	0x9f0
 27725 161b 73000000 		.4byte	0x73
 27726 161f 02       		.uleb128 0x2
 27727 1620 91       		.byte	0x91
 27728 1621 6C       		.sleb128 -20
 27729 1622 00       		.byte	0
 27730 1623 21       		.uleb128 0x21
 27731 1624 BE110000 		.4byte	.LASF259
 27732 1628 01       		.byte	0x1
 27733 1629 140A     		.2byte	0xa14
 27734 162b 00000000 		.4byte	.LFB77
 27735 162f 74030000 		.4byte	.LFE77-.LFB77
 27736 1633 01       		.uleb128 0x1
 27737 1634 9C       		.byte	0x9c
 27738 1635 67160000 		.4byte	0x1667
 27739 1639 24       		.uleb128 0x24
 27740 163a B50B0000 		.4byte	.LASF252
 27741 163e 01       		.byte	0x1
 27742 163f 140A     		.2byte	0xa14
 27743 1641 1F010000 		.4byte	0x11f
 27744 1645 03       		.uleb128 0x3
 27745 1646 91       		.byte	0x91
 27746 1647 AC7D     		.sleb128 -340
 27747 1649 25       		.uleb128 0x25
 27748 164a 73747200 		.ascii	"str\000"
 27749 164e 01       		.byte	0x1
 27750 164f 160A     		.2byte	0xa16
 27751 1651 67160000 		.4byte	0x1667
 27752 1655 03       		.uleb128 0x3
 27753 1656 91       		.byte	0x91
 27754 1657 B07D     		.sleb128 -336
 27755 1659 25       		.uleb128 0x25
 27756 165a 6900     		.ascii	"i\000"
 27757 165c 01       		.byte	0x1
 27758 165d 170A     		.2byte	0xa17
 27759 165f 73000000 		.4byte	0x73
 27760 1663 02       		.uleb128 0x2
 27761 1664 91       		.byte	0x91
 27762 1665 5C       		.sleb128 -36
 27763 1666 00       		.byte	0
 27764 1667 09       		.uleb128 0x9
 27765 1668 F9000000 		.4byte	0xf9
 27766 166c 78160000 		.4byte	0x1678
 27767 1670 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 593


 27768 1671 18010000 		.4byte	0x118
 27769 1675 2B01     		.2byte	0x12b
 27770 1677 00       		.byte	0
 27771 1678 21       		.uleb128 0x21
 27772 1679 B60C0000 		.4byte	.LASF260
 27773 167d 01       		.byte	0x1
 27774 167e 3F0A     		.2byte	0xa3f
 27775 1680 00000000 		.4byte	.LFB78
 27776 1684 84000000 		.4byte	.LFE78-.LFB78
 27777 1688 01       		.uleb128 0x1
 27778 1689 9C       		.byte	0x9c
 27779 168a CB160000 		.4byte	0x16cb
 27780 168e 24       		.uleb128 0x24
 27781 168f 13050000 		.4byte	.LASF205
 27782 1693 01       		.byte	0x1
 27783 1694 3F0A     		.2byte	0xa3f
 27784 1696 870E0000 		.4byte	0xe87
 27785 169a 02       		.uleb128 0x2
 27786 169b 91       		.byte	0x91
 27787 169c 6C       		.sleb128 -20
 27788 169d 24       		.uleb128 0x24
 27789 169e B0000000 		.4byte	.LASF206
 27790 16a2 01       		.byte	0x1
 27791 16a3 3F0A     		.2byte	0xa3f
 27792 16a5 A3000000 		.4byte	0xa3
 27793 16a9 02       		.uleb128 0x2
 27794 16aa 91       		.byte	0x91
 27795 16ab 6A       		.sleb128 -22
 27796 16ac 24       		.uleb128 0x24
 27797 16ad 170D0000 		.4byte	.LASF261
 27798 16b1 01       		.byte	0x1
 27799 16b2 3F0A     		.2byte	0xa3f
 27800 16b4 97000000 		.4byte	0x97
 27801 16b8 02       		.uleb128 0x2
 27802 16b9 91       		.byte	0x91
 27803 16ba 69       		.sleb128 -23
 27804 16bb 22       		.uleb128 0x22
 27805 16bc ED050000 		.4byte	.LASF220
 27806 16c0 01       		.byte	0x1
 27807 16c1 410A     		.2byte	0xa41
 27808 16c3 A3000000 		.4byte	0xa3
 27809 16c7 02       		.uleb128 0x2
 27810 16c8 91       		.byte	0x91
 27811 16c9 76       		.sleb128 -10
 27812 16ca 00       		.byte	0
 27813 16cb 21       		.uleb128 0x21
 27814 16cc 2E050000 		.4byte	.LASF262
 27815 16d0 01       		.byte	0x1
 27816 16d1 5B0A     		.2byte	0xa5b
 27817 16d3 00000000 		.4byte	.LFB79
 27818 16d7 88000000 		.4byte	.LFE79-.LFB79
 27819 16db 01       		.uleb128 0x1
 27820 16dc 9C       		.byte	0x9c
 27821 16dd 0F170000 		.4byte	0x170f
 27822 16e1 24       		.uleb128 0x24
 27823 16e2 13050000 		.4byte	.LASF205
 27824 16e6 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 594


 27825 16e7 5B0A     		.2byte	0xa5b
 27826 16e9 870E0000 		.4byte	0xe87
 27827 16ed 02       		.uleb128 0x2
 27828 16ee 91       		.byte	0x91
 27829 16ef 6C       		.sleb128 -20
 27830 16f0 24       		.uleb128 0x24
 27831 16f1 B0000000 		.4byte	.LASF206
 27832 16f5 01       		.byte	0x1
 27833 16f6 5B0A     		.2byte	0xa5b
 27834 16f8 A3000000 		.4byte	0xa3
 27835 16fc 02       		.uleb128 0x2
 27836 16fd 91       		.byte	0x91
 27837 16fe 6A       		.sleb128 -22
 27838 16ff 22       		.uleb128 0x22
 27839 1700 ED050000 		.4byte	.LASF220
 27840 1704 01       		.byte	0x1
 27841 1705 5D0A     		.2byte	0xa5d
 27842 1707 A3000000 		.4byte	0xa3
 27843 170b 02       		.uleb128 0x2
 27844 170c 91       		.byte	0x91
 27845 170d 76       		.sleb128 -10
 27846 170e 00       		.byte	0
 27847 170f 21       		.uleb128 0x21
 27848 1710 1D0A0000 		.4byte	.LASF263
 27849 1714 01       		.byte	0x1
 27850 1715 730A     		.2byte	0xa73
 27851 1717 00000000 		.4byte	.LFB80
 27852 171b 80000000 		.4byte	.LFE80-.LFB80
 27853 171f 01       		.uleb128 0x1
 27854 1720 9C       		.byte	0x9c
 27855 1721 53170000 		.4byte	0x1753
 27856 1725 24       		.uleb128 0x24
 27857 1726 13050000 		.4byte	.LASF205
 27858 172a 01       		.byte	0x1
 27859 172b 730A     		.2byte	0xa73
 27860 172d 870E0000 		.4byte	0xe87
 27861 1731 02       		.uleb128 0x2
 27862 1732 91       		.byte	0x91
 27863 1733 6C       		.sleb128 -20
 27864 1734 24       		.uleb128 0x24
 27865 1735 B0000000 		.4byte	.LASF206
 27866 1739 01       		.byte	0x1
 27867 173a 730A     		.2byte	0xa73
 27868 173c A3000000 		.4byte	0xa3
 27869 1740 02       		.uleb128 0x2
 27870 1741 91       		.byte	0x91
 27871 1742 6A       		.sleb128 -22
 27872 1743 22       		.uleb128 0x22
 27873 1744 ED050000 		.4byte	.LASF220
 27874 1748 01       		.byte	0x1
 27875 1749 750A     		.2byte	0xa75
 27876 174b A3000000 		.4byte	0xa3
 27877 174f 02       		.uleb128 0x2
 27878 1750 91       		.byte	0x91
 27879 1751 76       		.sleb128 -10
 27880 1752 00       		.byte	0
 27881 1753 27       		.uleb128 0x27
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 595


 27882 1754 91100000 		.4byte	.LASF269
 27883 1758 01       		.byte	0x1
 27884 1759 8E0A     		.2byte	0xa8e
 27885 175b 97000000 		.4byte	0x97
 27886 175f 00000000 		.4byte	.LFB81
 27887 1763 3E000000 		.4byte	.LFE81-.LFB81
 27888 1767 01       		.uleb128 0x1
 27889 1768 9C       		.byte	0x9c
 27890 1769 A8170000 		.4byte	0x17a8
 27891 176d 24       		.uleb128 0x24
 27892 176e 5A090000 		.4byte	.LASF264
 27893 1772 01       		.byte	0x1
 27894 1773 8E0A     		.2byte	0xa8e
 27895 1775 870E0000 		.4byte	0xe87
 27896 1779 02       		.uleb128 0x2
 27897 177a 91       		.byte	0x91
 27898 177b 6C       		.sleb128 -20
 27899 177c 24       		.uleb128 0x24
 27900 177d E8040000 		.4byte	.LASF265
 27901 1781 01       		.byte	0x1
 27902 1782 8E0A     		.2byte	0xa8e
 27903 1784 97000000 		.4byte	0x97
 27904 1788 02       		.uleb128 0x2
 27905 1789 91       		.byte	0x91
 27906 178a 6B       		.sleb128 -21
 27907 178b 25       		.uleb128 0x25
 27908 178c 6900     		.ascii	"i\000"
 27909 178e 01       		.byte	0x1
 27910 178f 900A     		.2byte	0xa90
 27911 1791 97000000 		.4byte	0x97
 27912 1795 02       		.uleb128 0x2
 27913 1796 91       		.byte	0x91
 27914 1797 77       		.sleb128 -9
 27915 1798 22       		.uleb128 0x22
 27916 1799 210B0000 		.4byte	.LASF266
 27917 179d 01       		.byte	0x1
 27918 179e 910A     		.2byte	0xa91
 27919 17a0 97000000 		.4byte	0x97
 27920 17a4 02       		.uleb128 0x2
 27921 17a5 91       		.byte	0x91
 27922 17a6 76       		.sleb128 -10
 27923 17a7 00       		.byte	0
 27924 17a8 21       		.uleb128 0x21
 27925 17a9 72090000 		.4byte	.LASF267
 27926 17ad 01       		.byte	0x1
 27927 17ae 9E0A     		.2byte	0xa9e
 27928 17b0 00000000 		.4byte	.LFB82
 27929 17b4 2E000000 		.4byte	.LFE82-.LFB82
 27930 17b8 01       		.uleb128 0x1
 27931 17b9 9C       		.byte	0x9c
 27932 17ba EC170000 		.4byte	0x17ec
 27933 17be 24       		.uleb128 0x24
 27934 17bf 38040000 		.4byte	.LASF268
 27935 17c3 01       		.byte	0x1
 27936 17c4 9E0A     		.2byte	0xa9e
 27937 17c6 97000000 		.4byte	0x97
 27938 17ca 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 596


 27939 17cb 91       		.byte	0x91
 27940 17cc 6F       		.sleb128 -17
 27941 17cd 22       		.uleb128 0x22
 27942 17ce B0000000 		.4byte	.LASF206
 27943 17d2 01       		.byte	0x1
 27944 17d3 9F0A     		.2byte	0xa9f
 27945 17d5 73000000 		.4byte	0x73
 27946 17d9 02       		.uleb128 0x2
 27947 17da 91       		.byte	0x91
 27948 17db 74       		.sleb128 -12
 27949 17dc 22       		.uleb128 0x22
 27950 17dd 13050000 		.4byte	.LASF205
 27951 17e1 01       		.byte	0x1
 27952 17e2 A00A     		.2byte	0xaa0
 27953 17e4 EC170000 		.4byte	0x17ec
 27954 17e8 02       		.uleb128 0x2
 27955 17e9 91       		.byte	0x91
 27956 17ea 70       		.sleb128 -16
 27957 17eb 00       		.byte	0
 27958 17ec 09       		.uleb128 0x9
 27959 17ed 97000000 		.4byte	0x97
 27960 17f1 FC170000 		.4byte	0x17fc
 27961 17f5 0A       		.uleb128 0xa
 27962 17f6 18010000 		.4byte	0x118
 27963 17fa 01       		.byte	0x1
 27964 17fb 00       		.byte	0
 27965 17fc 28       		.uleb128 0x28
 27966 17fd 32030000 		.4byte	.LASF270
 27967 1801 01       		.byte	0x1
 27968 1802 AD0A     		.2byte	0xaad
 27969 1804 97000000 		.4byte	0x97
 27970 1808 00000000 		.4byte	.LFB83
 27971 180c 98000000 		.4byte	.LFE83-.LFB83
 27972 1810 01       		.uleb128 0x1
 27973 1811 9C       		.byte	0x9c
 27974 1812 60180000 		.4byte	0x1860
 27975 1816 24       		.uleb128 0x24
 27976 1817 DB040000 		.4byte	.LASF271
 27977 181b 01       		.byte	0x1
 27978 181c AD0A     		.2byte	0xaad
 27979 181e 73000000 		.4byte	0x73
 27980 1822 02       		.uleb128 0x2
 27981 1823 91       		.byte	0x91
 27982 1824 64       		.sleb128 -28
 27983 1825 25       		.uleb128 0x25
 27984 1826 6900     		.ascii	"i\000"
 27985 1828 01       		.byte	0x1
 27986 1829 AF0A     		.2byte	0xaaf
 27987 182b 73000000 		.4byte	0x73
 27988 182f 02       		.uleb128 0x2
 27989 1830 91       		.byte	0x91
 27990 1831 74       		.sleb128 -12
 27991 1832 22       		.uleb128 0x22
 27992 1833 75000000 		.4byte	.LASF272
 27993 1837 01       		.byte	0x1
 27994 1838 B00A     		.2byte	0xab0
 27995 183a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 597


 27996 183e 02       		.uleb128 0x2
 27997 183f 91       		.byte	0x91
 27998 1840 6B       		.sleb128 -21
 27999 1841 22       		.uleb128 0x22
 28000 1842 38050000 		.4byte	.LASF273
 28001 1846 01       		.byte	0x1
 28002 1847 B10A     		.2byte	0xab1
 28003 1849 73000000 		.4byte	0x73
 28004 184d 02       		.uleb128 0x2
 28005 184e 91       		.byte	0x91
 28006 184f 6C       		.sleb128 -20
 28007 1850 22       		.uleb128 0x22
 28008 1851 7A040000 		.4byte	.LASF274
 28009 1855 01       		.byte	0x1
 28010 1856 B20A     		.2byte	0xab2
 28011 1858 97000000 		.4byte	0x97
 28012 185c 02       		.uleb128 0x2
 28013 185d 91       		.byte	0x91
 28014 185e 73       		.sleb128 -13
 28015 185f 00       		.byte	0
 28016 1860 21       		.uleb128 0x21
 28017 1861 500C0000 		.4byte	.LASF275
 28018 1865 01       		.byte	0x1
 28019 1866 D70A     		.2byte	0xad7
 28020 1868 00000000 		.4byte	.LFB84
 28021 186c 80000000 		.4byte	.LFE84-.LFB84
 28022 1870 01       		.uleb128 0x1
 28023 1871 9C       		.byte	0x9c
 28024 1872 84180000 		.4byte	0x1884
 28025 1876 25       		.uleb128 0x25
 28026 1877 6900     		.ascii	"i\000"
 28027 1879 01       		.byte	0x1
 28028 187a D90A     		.2byte	0xad9
 28029 187c A3000000 		.4byte	0xa3
 28030 1880 02       		.uleb128 0x2
 28031 1881 91       		.byte	0x91
 28032 1882 76       		.sleb128 -10
 28033 1883 00       		.byte	0
 28034 1884 28       		.uleb128 0x28
 28035 1885 A00B0000 		.4byte	.LASF276
 28036 1889 01       		.byte	0x1
 28037 188a F00A     		.2byte	0xaf0
 28038 188c 97000000 		.4byte	0x97
 28039 1890 00000000 		.4byte	.LFB85
 28040 1894 5C000000 		.4byte	.LFE85-.LFB85
 28041 1898 01       		.uleb128 0x1
 28042 1899 9C       		.byte	0x9c
 28043 189a AC180000 		.4byte	0x18ac
 28044 189e 25       		.uleb128 0x25
 28045 189f 6900     		.ascii	"i\000"
 28046 18a1 01       		.byte	0x1
 28047 18a2 F10A     		.2byte	0xaf1
 28048 18a4 A3000000 		.4byte	0xa3
 28049 18a8 02       		.uleb128 0x2
 28050 18a9 91       		.byte	0x91
 28051 18aa 76       		.sleb128 -10
 28052 18ab 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 598


 28053 18ac 28       		.uleb128 0x28
 28054 18ad 3E050000 		.4byte	.LASF277
 28055 18b1 01       		.byte	0x1
 28056 18b2 030B     		.2byte	0xb03
 28057 18b4 97000000 		.4byte	0x97
 28058 18b8 00000000 		.4byte	.LFB86
 28059 18bc CC050000 		.4byte	.LFE86-.LFB86
 28060 18c0 01       		.uleb128 0x1
 28061 18c1 9C       		.byte	0x9c
 28062 18c2 E1180000 		.4byte	0x18e1
 28063 18c6 25       		.uleb128 0x25
 28064 18c7 6900     		.ascii	"i\000"
 28065 18c9 01       		.byte	0x1
 28066 18ca 050B     		.2byte	0xb05
 28067 18cc 97000000 		.4byte	0x97
 28068 18d0 02       		.uleb128 0x2
 28069 18d1 91       		.byte	0x91
 28070 18d2 77       		.sleb128 -9
 28071 18d3 25       		.uleb128 0x25
 28072 18d4 6A00     		.ascii	"j\000"
 28073 18d6 01       		.byte	0x1
 28074 18d7 050B     		.2byte	0xb05
 28075 18d9 97000000 		.4byte	0x97
 28076 18dd 02       		.uleb128 0x2
 28077 18de 91       		.byte	0x91
 28078 18df 76       		.sleb128 -10
 28079 18e0 00       		.byte	0
 28080 18e1 29       		.uleb128 0x29
 28081 18e2 49070000 		.4byte	.LASF278
 28082 18e6 01       		.byte	0x1
 28083 18e7 880B     		.2byte	0xb88
 28084 18e9 00000000 		.4byte	.LFB87
 28085 18ed 30020000 		.4byte	.LFE87-.LFB87
 28086 18f1 01       		.uleb128 0x1
 28087 18f2 9C       		.byte	0x9c
 28088 18f3 1E190000 		.4byte	0x191e
 28089 18f7 22       		.uleb128 0x22
 28090 18f8 960B0000 		.4byte	.LASF215
 28091 18fc 01       		.byte	0x1
 28092 18fd 8A0B     		.2byte	0xb8a
 28093 18ff 97000000 		.4byte	0x97
 28094 1903 02       		.uleb128 0x2
 28095 1904 91       		.byte	0x91
 28096 1905 73       		.sleb128 -13
 28097 1906 1E       		.uleb128 0x1e
 28098 1907 FA000000 		.4byte	.LBB21
 28099 190b 6A000000 		.4byte	.LBE21-.LBB21
 28100 190f 25       		.uleb128 0x25
 28101 1910 6900     		.ascii	"i\000"
 28102 1912 01       		.byte	0x1
 28103 1913 9B0B     		.2byte	0xb9b
 28104 1915 73000000 		.4byte	0x73
 28105 1919 02       		.uleb128 0x2
 28106 191a 91       		.byte	0x91
 28107 191b 74       		.sleb128 -12
 28108 191c 00       		.byte	0
 28109 191d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 599


 28110 191e 26       		.uleb128 0x26
 28111 191f 6C050000 		.4byte	.LASF280
 28112 1923 01       		.byte	0x1
 28113 1924 BD0B     		.2byte	0xbbd
 28114 1926 00000000 		.4byte	.LFB88
 28115 192a B4000000 		.4byte	.LFE88-.LFB88
 28116 192e 01       		.uleb128 0x1
 28117 192f 9C       		.byte	0x9c
 28118 1930 62190000 		.4byte	0x1962
 28119 1934 22       		.uleb128 0x22
 28120 1935 ED050000 		.4byte	.LASF220
 28121 1939 01       		.byte	0x1
 28122 193a BF0B     		.2byte	0xbbf
 28123 193c 97000000 		.4byte	0x97
 28124 1940 02       		.uleb128 0x2
 28125 1941 91       		.byte	0x91
 28126 1942 6F       		.sleb128 -17
 28127 1943 22       		.uleb128 0x22
 28128 1944 F30E0000 		.4byte	.LASF211
 28129 1948 01       		.byte	0x1
 28130 1949 C00B     		.2byte	0xbc0
 28131 194b C7000000 		.4byte	0xc7
 28132 194f 02       		.uleb128 0x2
 28133 1950 91       		.byte	0x91
 28134 1951 6C       		.sleb128 -20
 28135 1952 22       		.uleb128 0x22
 28136 1953 13050000 		.4byte	.LASF205
 28137 1957 01       		.byte	0x1
 28138 1958 C30B     		.2byte	0xbc3
 28139 195a D1070000 		.4byte	0x7d1
 28140 195e 02       		.uleb128 0x2
 28141 195f 91       		.byte	0x91
 28142 1960 64       		.sleb128 -28
 28143 1961 00       		.byte	0
 28144 1962 26       		.uleb128 0x26
 28145 1963 3D0C0000 		.4byte	.LASF281
 28146 1967 01       		.byte	0x1
 28147 1968 D60B     		.2byte	0xbd6
 28148 196a 00000000 		.4byte	.LFB89
 28149 196e B4000000 		.4byte	.LFE89-.LFB89
 28150 1972 01       		.uleb128 0x1
 28151 1973 9C       		.byte	0x9c
 28152 1974 A6190000 		.4byte	0x19a6
 28153 1978 22       		.uleb128 0x22
 28154 1979 ED050000 		.4byte	.LASF220
 28155 197d 01       		.byte	0x1
 28156 197e D80B     		.2byte	0xbd8
 28157 1980 97000000 		.4byte	0x97
 28158 1984 02       		.uleb128 0x2
 28159 1985 91       		.byte	0x91
 28160 1986 6F       		.sleb128 -17
 28161 1987 22       		.uleb128 0x22
 28162 1988 F30E0000 		.4byte	.LASF211
 28163 198c 01       		.byte	0x1
 28164 198d D90B     		.2byte	0xbd9
 28165 198f C7000000 		.4byte	0xc7
 28166 1993 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 600


 28167 1994 91       		.byte	0x91
 28168 1995 6C       		.sleb128 -20
 28169 1996 22       		.uleb128 0x22
 28170 1997 13050000 		.4byte	.LASF205
 28171 199b 01       		.byte	0x1
 28172 199c DD0B     		.2byte	0xbdd
 28173 199e D1070000 		.4byte	0x7d1
 28174 19a2 02       		.uleb128 0x2
 28175 19a3 91       		.byte	0x91
 28176 19a4 64       		.sleb128 -28
 28177 19a5 00       		.byte	0
 28178 19a6 26       		.uleb128 0x26
 28179 19a7 A7060000 		.4byte	.LASF282
 28180 19ab 01       		.byte	0x1
 28181 19ac EF0B     		.2byte	0xbef
 28182 19ae 00000000 		.4byte	.LFB90
 28183 19b2 B8000000 		.4byte	.LFE90-.LFB90
 28184 19b6 01       		.uleb128 0x1
 28185 19b7 9C       		.byte	0x9c
 28186 19b8 EA190000 		.4byte	0x19ea
 28187 19bc 22       		.uleb128 0x22
 28188 19bd ED050000 		.4byte	.LASF220
 28189 19c1 01       		.byte	0x1
 28190 19c2 F10B     		.2byte	0xbf1
 28191 19c4 97000000 		.4byte	0x97
 28192 19c8 02       		.uleb128 0x2
 28193 19c9 91       		.byte	0x91
 28194 19ca 6F       		.sleb128 -17
 28195 19cb 22       		.uleb128 0x22
 28196 19cc F30E0000 		.4byte	.LASF211
 28197 19d0 01       		.byte	0x1
 28198 19d1 F20B     		.2byte	0xbf2
 28199 19d3 C7000000 		.4byte	0xc7
 28200 19d7 02       		.uleb128 0x2
 28201 19d8 91       		.byte	0x91
 28202 19d9 6C       		.sleb128 -20
 28203 19da 22       		.uleb128 0x22
 28204 19db 13050000 		.4byte	.LASF205
 28205 19df 01       		.byte	0x1
 28206 19e0 F60B     		.2byte	0xbf6
 28207 19e2 D1070000 		.4byte	0x7d1
 28208 19e6 02       		.uleb128 0x2
 28209 19e7 91       		.byte	0x91
 28210 19e8 64       		.sleb128 -28
 28211 19e9 00       		.byte	0
 28212 19ea 2A       		.uleb128 0x2a
 28213 19eb BA090000 		.4byte	.LASF283
 28214 19ef 01       		.byte	0x1
 28215 19f0 080C     		.2byte	0xc08
 28216 19f2 00000000 		.4byte	.LFB91
 28217 19f6 44020000 		.4byte	.LFE91-.LFB91
 28218 19fa 01       		.uleb128 0x1
 28219 19fb 9C       		.byte	0x9c
 28220 19fc 541A0000 		.4byte	0x1a54
 28221 1a00 22       		.uleb128 0x22
 28222 1a01 F30E0000 		.4byte	.LASF211
 28223 1a05 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 601


 28224 1a06 0B0C     		.2byte	0xc0b
 28225 1a08 541A0000 		.4byte	0x1a54
 28226 1a0c 02       		.uleb128 0x2
 28227 1a0d 91       		.byte	0x91
 28228 1a0e 70       		.sleb128 -16
 28229 1a0f 22       		.uleb128 0x22
 28230 1a10 AF050000 		.4byte	.LASF284
 28231 1a14 01       		.byte	0x1
 28232 1a15 0C0C     		.2byte	0xc0c
 28233 1a17 541A0000 		.4byte	0x1a54
 28234 1a1b 05       		.uleb128 0x5
 28235 1a1c 03       		.byte	0x3
 28236 1a1d 00000000 		.4byte	last_aux_int16.11245
 28237 1a21 2B       		.uleb128 0x2b
 28238 1a22 2E000000 		.4byte	.LBB22
 28239 1a26 50000000 		.4byte	.LBE22-.LBB22
 28240 1a2a 3C1A0000 		.4byte	0x1a3c
 28241 1a2e 25       		.uleb128 0x25
 28242 1a2f 6900     		.ascii	"i\000"
 28243 1a31 01       		.byte	0x1
 28244 1a32 130C     		.2byte	0xc13
 28245 1a34 97000000 		.4byte	0x97
 28246 1a38 02       		.uleb128 0x2
 28247 1a39 91       		.byte	0x91
 28248 1a3a 77       		.sleb128 -9
 28249 1a3b 00       		.byte	0
 28250 1a3c 1E       		.uleb128 0x1e
 28251 1a3d 88000000 		.4byte	.LBB23
 28252 1a41 98010000 		.4byte	.LBE23-.LBB23
 28253 1a45 25       		.uleb128 0x25
 28254 1a46 6900     		.ascii	"i\000"
 28255 1a48 01       		.byte	0x1
 28256 1a49 1D0C     		.2byte	0xc1d
 28257 1a4b 97000000 		.4byte	0x97
 28258 1a4f 02       		.uleb128 0x2
 28259 1a50 91       		.byte	0x91
 28260 1a51 76       		.sleb128 -10
 28261 1a52 00       		.byte	0
 28262 1a53 00       		.byte	0
 28263 1a54 09       		.uleb128 0x9
 28264 1a55 C7000000 		.4byte	0xc7
 28265 1a59 641A0000 		.4byte	0x1a64
 28266 1a5d 0A       		.uleb128 0xa
 28267 1a5e 18010000 		.4byte	0x118
 28268 1a62 01       		.byte	0x1
 28269 1a63 00       		.byte	0
 28270 1a64 26       		.uleb128 0x26
 28271 1a65 2D110000 		.4byte	.LASF285
 28272 1a69 01       		.byte	0x1
 28273 1a6a 380C     		.2byte	0xc38
 28274 1a6c 00000000 		.4byte	.LFB92
 28275 1a70 C0000000 		.4byte	.LFE92-.LFB92
 28276 1a74 01       		.uleb128 0x1
 28277 1a75 9C       		.byte	0x9c
 28278 1a76 8A1A0000 		.4byte	0x1a8a
 28279 1a7a 25       		.uleb128 0x25
 28280 1a7b 61757800 		.ascii	"aux\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 602


 28281 1a7f 01       		.byte	0x1
 28282 1a80 3B0C     		.2byte	0xc3b
 28283 1a82 97000000 		.4byte	0x97
 28284 1a86 02       		.uleb128 0x2
 28285 1a87 91       		.byte	0x91
 28286 1a88 77       		.sleb128 -9
 28287 1a89 00       		.byte	0
 28288 1a8a 26       		.uleb128 0x26
 28289 1a8b 0C0A0000 		.4byte	.LASF286
 28290 1a8f 01       		.byte	0x1
 28291 1a90 4F0C     		.2byte	0xc4f
 28292 1a92 00000000 		.4byte	.LFB93
 28293 1a96 5C000000 		.4byte	.LFE93-.LFB93
 28294 1a9a 01       		.uleb128 0x1
 28295 1a9b 9C       		.byte	0x9c
 28296 1a9c B01A0000 		.4byte	0x1ab0
 28297 1aa0 22       		.uleb128 0x22
 28298 1aa1 13050000 		.4byte	.LASF205
 28299 1aa5 01       		.byte	0x1
 28300 1aa6 510C     		.2byte	0xc51
 28301 1aa8 84050000 		.4byte	0x584
 28302 1aac 02       		.uleb128 0x2
 28303 1aad 91       		.byte	0x91
 28304 1aae 74       		.sleb128 -12
 28305 1aaf 00       		.byte	0
 28306 1ab0 26       		.uleb128 0x26
 28307 1ab1 500D0000 		.4byte	.LASF287
 28308 1ab5 01       		.byte	0x1
 28309 1ab6 660C     		.2byte	0xc66
 28310 1ab8 00000000 		.4byte	.LFB94
 28311 1abc 3C010000 		.4byte	.LFE94-.LFB94
 28312 1ac0 01       		.uleb128 0x1
 28313 1ac1 9C       		.byte	0x9c
 28314 1ac2 F41A0000 		.4byte	0x1af4
 28315 1ac6 22       		.uleb128 0x22
 28316 1ac7 ED050000 		.4byte	.LASF220
 28317 1acb 01       		.byte	0x1
 28318 1acc 680C     		.2byte	0xc68
 28319 1ace 97000000 		.4byte	0x97
 28320 1ad2 02       		.uleb128 0x2
 28321 1ad3 91       		.byte	0x91
 28322 1ad4 6F       		.sleb128 -17
 28323 1ad5 22       		.uleb128 0x22
 28324 1ad6 F30E0000 		.4byte	.LASF211
 28325 1ada 01       		.byte	0x1
 28326 1adb 690C     		.2byte	0xc69
 28327 1add C7000000 		.4byte	0xc7
 28328 1ae1 02       		.uleb128 0x2
 28329 1ae2 91       		.byte	0x91
 28330 1ae3 6C       		.sleb128 -20
 28331 1ae4 22       		.uleb128 0x22
 28332 1ae5 13050000 		.4byte	.LASF205
 28333 1ae9 01       		.byte	0x1
 28334 1aea 6D0C     		.2byte	0xc6d
 28335 1aec 14090000 		.4byte	0x914
 28336 1af0 02       		.uleb128 0x2
 28337 1af1 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 603


 28338 1af2 60       		.sleb128 -32
 28339 1af3 00       		.byte	0
 28340 1af4 26       		.uleb128 0x26
 28341 1af5 A3080000 		.4byte	.LASF288
 28342 1af9 01       		.byte	0x1
 28343 1afa 8D0C     		.2byte	0xc8d
 28344 1afc 00000000 		.4byte	.LFB95
 28345 1b00 B8000000 		.4byte	.LFE95-.LFB95
 28346 1b04 01       		.uleb128 0x1
 28347 1b05 9C       		.byte	0x9c
 28348 1b06 291B0000 		.4byte	0x1b29
 28349 1b0a 22       		.uleb128 0x22
 28350 1b0b 13050000 		.4byte	.LASF205
 28351 1b0f 01       		.byte	0x1
 28352 1b10 910C     		.2byte	0xc91
 28353 1b12 04090000 		.4byte	0x904
 28354 1b16 02       		.uleb128 0x2
 28355 1b17 91       		.byte	0x91
 28356 1b18 70       		.sleb128 -16
 28357 1b19 22       		.uleb128 0x22
 28358 1b1a F30E0000 		.4byte	.LASF211
 28359 1b1e 01       		.byte	0x1
 28360 1b1f 920C     		.2byte	0xc92
 28361 1b21 C7000000 		.4byte	0xc7
 28362 1b25 02       		.uleb128 0x2
 28363 1b26 91       		.byte	0x91
 28364 1b27 6E       		.sleb128 -18
 28365 1b28 00       		.byte	0
 28366 1b29 26       		.uleb128 0x26
 28367 1b2a 58100000 		.4byte	.LASF289
 28368 1b2e 01       		.byte	0x1
 28369 1b2f AD0C     		.2byte	0xcad
 28370 1b31 00000000 		.4byte	.LFB96
 28371 1b35 5C000000 		.4byte	.LFE96-.LFB96
 28372 1b39 01       		.uleb128 0x1
 28373 1b3a 9C       		.byte	0x9c
 28374 1b3b 5E1B0000 		.4byte	0x1b5e
 28375 1b3f 22       		.uleb128 0x22
 28376 1b40 13050000 		.4byte	.LASF205
 28377 1b44 01       		.byte	0x1
 28378 1b45 B10C     		.2byte	0xcb1
 28379 1b47 5E1B0000 		.4byte	0x1b5e
 28380 1b4b 02       		.uleb128 0x2
 28381 1b4c 91       		.byte	0x91
 28382 1b4d 74       		.sleb128 -12
 28383 1b4e 22       		.uleb128 0x22
 28384 1b4f F30E0000 		.4byte	.LASF211
 28385 1b53 01       		.byte	0x1
 28386 1b54 B20C     		.2byte	0xcb2
 28387 1b56 C7000000 		.4byte	0xc7
 28388 1b5a 02       		.uleb128 0x2
 28389 1b5b 91       		.byte	0x91
 28390 1b5c 72       		.sleb128 -14
 28391 1b5d 00       		.byte	0
 28392 1b5e 09       		.uleb128 0x9
 28393 1b5f 97000000 		.4byte	0x97
 28394 1b63 6E1B0000 		.4byte	0x1b6e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 604


 28395 1b67 0A       		.uleb128 0xa
 28396 1b68 18010000 		.4byte	0x118
 28397 1b6c 03       		.byte	0x3
 28398 1b6d 00       		.byte	0
 28399 1b6e 2C       		.uleb128 0x2c
 28400 1b6f 88000000 		.4byte	.LASF343
 28401 1b73 01       		.byte	0x1
 28402 1b74 C30C     		.2byte	0xcc3
 28403 1b76 00000000 		.4byte	.LFB97
 28404 1b7a 34000000 		.4byte	.LFE97-.LFB97
 28405 1b7e 01       		.uleb128 0x1
 28406 1b7f 9C       		.byte	0x9c
 28407 1b80 26       		.uleb128 0x26
 28408 1b81 DF020000 		.4byte	.LASF290
 28409 1b85 01       		.byte	0x1
 28410 1b86 D10C     		.2byte	0xcd1
 28411 1b88 00000000 		.4byte	.LFB98
 28412 1b8c 20000000 		.4byte	.LFE98-.LFB98
 28413 1b90 01       		.uleb128 0x1
 28414 1b91 9C       		.byte	0x9c
 28415 1b92 A61B0000 		.4byte	0x1ba6
 28416 1b96 22       		.uleb128 0x22
 28417 1b97 13050000 		.4byte	.LASF205
 28418 1b9b 01       		.byte	0x1
 28419 1b9c D30C     		.2byte	0xcd3
 28420 1b9e EC170000 		.4byte	0x17ec
 28421 1ba2 02       		.uleb128 0x2
 28422 1ba3 91       		.byte	0x91
 28423 1ba4 74       		.sleb128 -12
 28424 1ba5 00       		.byte	0
 28425 1ba6 26       		.uleb128 0x26
 28426 1ba7 F0000000 		.4byte	.LASF291
 28427 1bab 01       		.byte	0x1
 28428 1bac DF0C     		.2byte	0xcdf
 28429 1bae 00000000 		.4byte	.LFB99
 28430 1bb2 48000000 		.4byte	.LFE99-.LFB99
 28431 1bb6 01       		.uleb128 0x1
 28432 1bb7 9C       		.byte	0x9c
 28433 1bb8 DB1B0000 		.4byte	0x1bdb
 28434 1bbc 22       		.uleb128 0x22
 28435 1bbd 13050000 		.4byte	.LASF205
 28436 1bc1 01       		.byte	0x1
 28437 1bc2 E30C     		.2byte	0xce3
 28438 1bc4 04090000 		.4byte	0x904
 28439 1bc8 02       		.uleb128 0x2
 28440 1bc9 91       		.byte	0x91
 28441 1bca 70       		.sleb128 -16
 28442 1bcb 22       		.uleb128 0x22
 28443 1bcc F30E0000 		.4byte	.LASF211
 28444 1bd0 01       		.byte	0x1
 28445 1bd1 E40C     		.2byte	0xce4
 28446 1bd3 C7000000 		.4byte	0xc7
 28447 1bd7 02       		.uleb128 0x2
 28448 1bd8 91       		.byte	0x91
 28449 1bd9 6E       		.sleb128 -18
 28450 1bda 00       		.byte	0
 28451 1bdb 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 605


 28452 1bdc FC0D0000 		.4byte	.LASF292
 28453 1be0 01       		.byte	0x1
 28454 1be1 F50C     		.2byte	0xcf5
 28455 1be3 00000000 		.4byte	.LFB100
 28456 1be7 BC010000 		.4byte	.LFE100-.LFB100
 28457 1beb 01       		.uleb128 0x1
 28458 1bec 9C       		.byte	0x9c
 28459 1bed 3D1C0000 		.4byte	0x1c3d
 28460 1bf1 22       		.uleb128 0x22
 28461 1bf2 D6090000 		.4byte	.LASF293
 28462 1bf6 01       		.byte	0x1
 28463 1bf7 F80C     		.2byte	0xcf8
 28464 1bf9 AF000000 		.4byte	0xaf
 28465 1bfd 02       		.uleb128 0x2
 28466 1bfe 91       		.byte	0x91
 28467 1bff 70       		.sleb128 -16
 28468 1c00 22       		.uleb128 0x22
 28469 1c01 AA0C0000 		.4byte	.LASF294
 28470 1c05 01       		.byte	0x1
 28471 1c06 F90C     		.2byte	0xcf9
 28472 1c08 EB000000 		.4byte	0xeb
 28473 1c0c 02       		.uleb128 0x2
 28474 1c0d 91       		.byte	0x91
 28475 1c0e 6C       		.sleb128 -20
 28476 1c0f 22       		.uleb128 0x22
 28477 1c10 B0000000 		.4byte	.LASF206
 28478 1c14 01       		.byte	0x1
 28479 1c15 FA0C     		.2byte	0xcfa
 28480 1c17 97000000 		.4byte	0x97
 28481 1c1b 02       		.uleb128 0x2
 28482 1c1c 91       		.byte	0x91
 28483 1c1d 77       		.sleb128 -9
 28484 1c1e 22       		.uleb128 0x22
 28485 1c1f 13050000 		.4byte	.LASF205
 28486 1c23 01       		.byte	0x1
 28487 1c24 FB0C     		.2byte	0xcfb
 28488 1c26 EC170000 		.4byte	0x17ec
 28489 1c2a 02       		.uleb128 0x2
 28490 1c2b 91       		.byte	0x91
 28491 1c2c 68       		.sleb128 -24
 28492 1c2d 22       		.uleb128 0x22
 28493 1c2e 170D0000 		.4byte	.LASF261
 28494 1c32 01       		.byte	0x1
 28495 1c33 FC0C     		.2byte	0xcfc
 28496 1c35 97000000 		.4byte	0x97
 28497 1c39 02       		.uleb128 0x2
 28498 1c3a 91       		.byte	0x91
 28499 1c3b 6B       		.sleb128 -21
 28500 1c3c 00       		.byte	0
 28501 1c3d 26       		.uleb128 0x26
 28502 1c3e 7E010000 		.4byte	.LASF295
 28503 1c42 01       		.byte	0x1
 28504 1c43 360D     		.2byte	0xd36
 28505 1c45 00000000 		.4byte	.LFB101
 28506 1c49 60000000 		.4byte	.LFE101-.LFB101
 28507 1c4d 01       		.uleb128 0x1
 28508 1c4e 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 606


 28509 1c4f 721C0000 		.4byte	0x1c72
 28510 1c53 22       		.uleb128 0x22
 28511 1c54 13050000 		.4byte	.LASF205
 28512 1c58 01       		.byte	0x1
 28513 1c59 380D     		.2byte	0xd38
 28514 1c5b 04090000 		.4byte	0x904
 28515 1c5f 02       		.uleb128 0x2
 28516 1c60 91       		.byte	0x91
 28517 1c61 70       		.sleb128 -16
 28518 1c62 22       		.uleb128 0x22
 28519 1c63 F30E0000 		.4byte	.LASF211
 28520 1c67 01       		.byte	0x1
 28521 1c68 390D     		.2byte	0xd39
 28522 1c6a C7000000 		.4byte	0xc7
 28523 1c6e 02       		.uleb128 0x2
 28524 1c6f 91       		.byte	0x91
 28525 1c70 6E       		.sleb128 -18
 28526 1c71 00       		.byte	0
 28527 1c72 26       		.uleb128 0x26
 28528 1c73 2C010000 		.4byte	.LASF296
 28529 1c77 01       		.byte	0x1
 28530 1c78 4C0D     		.2byte	0xd4c
 28531 1c7a 00000000 		.4byte	.LFB102
 28532 1c7e 98050000 		.4byte	.LFE102-.LFB102
 28533 1c82 01       		.uleb128 0x1
 28534 1c83 9C       		.byte	0x9c
 28535 1c84 FF1C0000 		.4byte	0x1cff
 28536 1c88 22       		.uleb128 0x22
 28537 1c89 9D100000 		.4byte	.LASF297
 28538 1c8d 01       		.byte	0x1
 28539 1c8e 4F0D     		.2byte	0xd4f
 28540 1c90 97000000 		.4byte	0x97
 28541 1c94 02       		.uleb128 0x2
 28542 1c95 91       		.byte	0x91
 28543 1c96 6F       		.sleb128 -17
 28544 1c97 25       		.uleb128 0x25
 28545 1c98 6300     		.ascii	"c\000"
 28546 1c9a 01       		.byte	0x1
 28547 1c9b 500D     		.2byte	0xd50
 28548 1c9d A3000000 		.4byte	0xa3
 28549 1ca1 02       		.uleb128 0x2
 28550 1ca2 91       		.byte	0x91
 28551 1ca3 6C       		.sleb128 -20
 28552 1ca4 25       		.uleb128 0x25
 28553 1ca5 6B00     		.ascii	"k\000"
 28554 1ca7 01       		.byte	0x1
 28555 1ca8 510D     		.2byte	0xd51
 28556 1caa 97000000 		.4byte	0x97
 28557 1cae 02       		.uleb128 0x2
 28558 1caf 91       		.byte	0x91
 28559 1cb0 6B       		.sleb128 -21
 28560 1cb1 22       		.uleb128 0x22
 28561 1cb2 26000000 		.4byte	.LASF298
 28562 1cb6 01       		.byte	0x1
 28563 1cb7 520D     		.2byte	0xd52
 28564 1cb9 A3000000 		.4byte	0xa3
 28565 1cbd 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 607


 28566 1cbe 91       		.byte	0x91
 28567 1cbf 68       		.sleb128 -24
 28568 1cc0 22       		.uleb128 0x22
 28569 1cc1 F30E0000 		.4byte	.LASF211
 28570 1cc5 01       		.byte	0x1
 28571 1cc6 530D     		.2byte	0xd53
 28572 1cc8 C7000000 		.4byte	0xc7
 28573 1ccc 02       		.uleb128 0x2
 28574 1ccd 91       		.byte	0x91
 28575 1cce 66       		.sleb128 -26
 28576 1ccf 22       		.uleb128 0x22
 28577 1cd0 23100000 		.4byte	.LASF210
 28578 1cd4 01       		.byte	0x1
 28579 1cd5 540D     		.2byte	0xd54
 28580 1cd7 EB000000 		.4byte	0xeb
 28581 1cdb 02       		.uleb128 0x2
 28582 1cdc 91       		.byte	0x91
 28583 1cdd 60       		.sleb128 -32
 28584 1cde 22       		.uleb128 0x22
 28585 1cdf 13050000 		.4byte	.LASF205
 28586 1ce3 01       		.byte	0x1
 28587 1ce4 570D     		.2byte	0xd57
 28588 1ce6 FF1C0000 		.4byte	0x1cff
 28589 1cea 03       		.uleb128 0x3
 28590 1ceb 91       		.byte	0x91
 28591 1cec 807D     		.sleb128 -384
 28592 1cee 22       		.uleb128 0x22
 28593 1cef 7D070000 		.4byte	.LASF299
 28594 1cf3 01       		.byte	0x1
 28595 1cf4 580D     		.2byte	0xd58
 28596 1cf6 101D0000 		.4byte	0x1d10
 28597 1cfa 03       		.uleb128 0x3
 28598 1cfb 91       		.byte	0x91
 28599 1cfc E07C     		.sleb128 -416
 28600 1cfe 00       		.byte	0
 28601 1cff 09       		.uleb128 0x9
 28602 1d00 97000000 		.4byte	0x97
 28603 1d04 101D0000 		.4byte	0x1d10
 28604 1d08 23       		.uleb128 0x23
 28605 1d09 18010000 		.4byte	0x118
 28606 1d0d 5D01     		.2byte	0x15d
 28607 1d0f 00       		.byte	0
 28608 1d10 09       		.uleb128 0x9
 28609 1d11 97000000 		.4byte	0x97
 28610 1d15 201D0000 		.4byte	0x1d20
 28611 1d19 0A       		.uleb128 0xa
 28612 1d1a 18010000 		.4byte	0x118
 28613 1d1e 1F       		.byte	0x1f
 28614 1d1f 00       		.byte	0
 28615 1d20 26       		.uleb128 0x26
 28616 1d21 FE0F0000 		.4byte	.LASF300
 28617 1d25 01       		.byte	0x1
 28618 1d26 BB0D     		.2byte	0xdbb
 28619 1d28 00000000 		.4byte	.LFB103
 28620 1d2c 8C000000 		.4byte	.LFE103-.LFB103
 28621 1d30 01       		.uleb128 0x1
 28622 1d31 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 608


 28623 1d32 601D0000 		.4byte	0x1d60
 28624 1d36 22       		.uleb128 0x22
 28625 1d37 13050000 		.4byte	.LASF205
 28626 1d3b 01       		.byte	0x1
 28627 1d3c BE0D     		.2byte	0xdbe
 28628 1d3e 601D0000 		.4byte	0x1d60
 28629 1d42 02       		.uleb128 0x2
 28630 1d43 91       		.byte	0x91
 28631 1d44 60       		.sleb128 -32
 28632 1d45 25       		.uleb128 0x25
 28633 1d46 6900     		.ascii	"i\000"
 28634 1d48 01       		.byte	0x1
 28635 1d49 BF0D     		.2byte	0xdbf
 28636 1d4b 97000000 		.4byte	0x97
 28637 1d4f 02       		.uleb128 0x2
 28638 1d50 91       		.byte	0x91
 28639 1d51 6F       		.sleb128 -17
 28640 1d52 25       		.uleb128 0x25
 28641 1d53 6A00     		.ascii	"j\000"
 28642 1d55 01       		.byte	0x1
 28643 1d56 BF0D     		.2byte	0xdbf
 28644 1d58 97000000 		.4byte	0x97
 28645 1d5c 02       		.uleb128 0x2
 28646 1d5d 91       		.byte	0x91
 28647 1d5e 6E       		.sleb128 -18
 28648 1d5f 00       		.byte	0
 28649 1d60 09       		.uleb128 0x9
 28650 1d61 97000000 		.4byte	0x97
 28651 1d65 701D0000 		.4byte	0x1d70
 28652 1d69 0A       		.uleb128 0xa
 28653 1d6a 18010000 		.4byte	0x118
 28654 1d6e 0D       		.byte	0xd
 28655 1d6f 00       		.byte	0
 28656 1d70 26       		.uleb128 0x26
 28657 1d71 280E0000 		.4byte	.LASF301
 28658 1d75 01       		.byte	0x1
 28659 1d76 D40D     		.2byte	0xdd4
 28660 1d78 00000000 		.4byte	.LFB104
 28661 1d7c EC000000 		.4byte	.LFE104-.LFB104
 28662 1d80 01       		.uleb128 0x1
 28663 1d81 9C       		.byte	0x9c
 28664 1d82 CE1D0000 		.4byte	0x1dce
 28665 1d86 22       		.uleb128 0x22
 28666 1d87 13050000 		.4byte	.LASF205
 28667 1d8b 01       		.byte	0x1
 28668 1d8c D70D     		.2byte	0xdd7
 28669 1d8e CE1D0000 		.4byte	0x1dce
 28670 1d92 02       		.uleb128 0x2
 28671 1d93 91       		.byte	0x91
 28672 1d94 54       		.sleb128 -44
 28673 1d95 25       		.uleb128 0x25
 28674 1d96 6900     		.ascii	"i\000"
 28675 1d98 01       		.byte	0x1
 28676 1d99 D80D     		.2byte	0xdd8
 28677 1d9b 97000000 		.4byte	0x97
 28678 1d9f 02       		.uleb128 0x2
 28679 1da0 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 609


 28680 1da1 6F       		.sleb128 -17
 28681 1da2 25       		.uleb128 0x25
 28682 1da3 6A00     		.ascii	"j\000"
 28683 1da5 01       		.byte	0x1
 28684 1da6 D80D     		.2byte	0xdd8
 28685 1da8 97000000 		.4byte	0x97
 28686 1dac 02       		.uleb128 0x2
 28687 1dad 91       		.byte	0x91
 28688 1dae 6E       		.sleb128 -18
 28689 1daf 25       		.uleb128 0x25
 28690 1db0 69647800 		.ascii	"idx\000"
 28691 1db4 01       		.byte	0x1
 28692 1db5 D80D     		.2byte	0xdd8
 28693 1db7 97000000 		.4byte	0x97
 28694 1dbb 02       		.uleb128 0x2
 28695 1dbc 91       		.byte	0x91
 28696 1dbd 6D       		.sleb128 -19
 28697 1dbe 22       		.uleb128 0x22
 28698 1dbf 860A0000 		.4byte	.LASF212
 28699 1dc3 01       		.byte	0x1
 28700 1dc4 D90D     		.2byte	0xdd9
 28701 1dc6 A3000000 		.4byte	0xa3
 28702 1dca 02       		.uleb128 0x2
 28703 1dcb 91       		.byte	0x91
 28704 1dcc 52       		.sleb128 -46
 28705 1dcd 00       		.byte	0
 28706 1dce 09       		.uleb128 0x9
 28707 1dcf 97000000 		.4byte	0x97
 28708 1dd3 DE1D0000 		.4byte	0x1dde
 28709 1dd7 0A       		.uleb128 0xa
 28710 1dd8 18010000 		.4byte	0x118
 28711 1ddc 15       		.byte	0x15
 28712 1ddd 00       		.byte	0
 28713 1dde 26       		.uleb128 0x26
 28714 1ddf 97020000 		.4byte	.LASF302
 28715 1de3 01       		.byte	0x1
 28716 1de4 F20D     		.2byte	0xdf2
 28717 1de6 00000000 		.4byte	.LFB105
 28718 1dea 5C000000 		.4byte	.LFE105-.LFB105
 28719 1dee 01       		.uleb128 0x1
 28720 1def 9C       		.byte	0x9c
 28721 1df0 111E0000 		.4byte	0x1e11
 28722 1df4 22       		.uleb128 0x22
 28723 1df5 13050000 		.4byte	.LASF205
 28724 1df9 01       		.byte	0x1
 28725 1dfa F50D     		.2byte	0xdf5
 28726 1dfc 580A0000 		.4byte	0xa58
 28727 1e00 02       		.uleb128 0x2
 28728 1e01 91       		.byte	0x91
 28729 1e02 68       		.sleb128 -24
 28730 1e03 25       		.uleb128 0x25
 28731 1e04 6900     		.ascii	"i\000"
 28732 1e06 01       		.byte	0x1
 28733 1e07 F60D     		.2byte	0xdf6
 28734 1e09 97000000 		.4byte	0x97
 28735 1e0d 02       		.uleb128 0x2
 28736 1e0e 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 610


 28737 1e0f 77       		.sleb128 -9
 28738 1e10 00       		.byte	0
 28739 1e11 26       		.uleb128 0x26
 28740 1e12 C4020000 		.4byte	.LASF303
 28741 1e16 01       		.byte	0x1
 28742 1e17 090E     		.2byte	0xe09
 28743 1e19 00000000 		.4byte	.LFB106
 28744 1e1d C0000000 		.4byte	.LFE106-.LFB106
 28745 1e21 01       		.uleb128 0x1
 28746 1e22 9C       		.byte	0x9c
 28747 1e23 621E0000 		.4byte	0x1e62
 28748 1e27 22       		.uleb128 0x22
 28749 1e28 13050000 		.4byte	.LASF205
 28750 1e2c 01       		.byte	0x1
 28751 1e2d 0C0E     		.2byte	0xe0c
 28752 1e2f 621E0000 		.4byte	0x1e62
 28753 1e33 02       		.uleb128 0x2
 28754 1e34 91       		.byte	0x91
 28755 1e35 54       		.sleb128 -44
 28756 1e36 25       		.uleb128 0x25
 28757 1e37 6900     		.ascii	"i\000"
 28758 1e39 01       		.byte	0x1
 28759 1e3a 0D0E     		.2byte	0xe0d
 28760 1e3c 97000000 		.4byte	0x97
 28761 1e40 02       		.uleb128 0x2
 28762 1e41 91       		.byte	0x91
 28763 1e42 6F       		.sleb128 -17
 28764 1e43 25       		.uleb128 0x25
 28765 1e44 69647800 		.ascii	"idx\000"
 28766 1e48 01       		.byte	0x1
 28767 1e49 0D0E     		.2byte	0xe0d
 28768 1e4b 97000000 		.4byte	0x97
 28769 1e4f 02       		.uleb128 0x2
 28770 1e50 91       		.byte	0x91
 28771 1e51 6E       		.sleb128 -18
 28772 1e52 22       		.uleb128 0x22
 28773 1e53 F30E0000 		.4byte	.LASF211
 28774 1e57 01       		.byte	0x1
 28775 1e58 0E0E     		.2byte	0xe0e
 28776 1e5a C7000000 		.4byte	0xc7
 28777 1e5e 02       		.uleb128 0x2
 28778 1e5f 91       		.byte	0x91
 28779 1e60 52       		.sleb128 -46
 28780 1e61 00       		.byte	0
 28781 1e62 09       		.uleb128 0x9
 28782 1e63 97000000 		.4byte	0x97
 28783 1e67 721E0000 		.4byte	0x1e72
 28784 1e6b 0A       		.uleb128 0xa
 28785 1e6c 18010000 		.4byte	0x118
 28786 1e70 19       		.byte	0x19
 28787 1e71 00       		.byte	0
 28788 1e72 2D       		.uleb128 0x2d
 28789 1e73 300F0000 		.4byte	.LASF304
 28790 1e77 09       		.byte	0x9
 28791 1e78 1207     		.2byte	0x712
 28792 1e7a 7E1E0000 		.4byte	0x1e7e
 28793 1e7e 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 611


 28794 1e7f 81000000 		.4byte	0x81
 28795 1e83 09       		.uleb128 0x9
 28796 1e84 20030000 		.4byte	0x320
 28797 1e88 931E0000 		.4byte	0x1e93
 28798 1e8c 0A       		.uleb128 0xa
 28799 1e8d 18010000 		.4byte	0x118
 28800 1e91 01       		.byte	0x1
 28801 1e92 00       		.byte	0
 28802 1e93 2D       		.uleb128 0x2d
 28803 1e94 D7100000 		.4byte	.LASF305
 28804 1e98 08       		.byte	0x8
 28805 1e99 D401     		.2byte	0x1d4
 28806 1e9b 831E0000 		.4byte	0x1e83
 28807 1e9f 2D       		.uleb128 0x2d
 28808 1ea0 8E030000 		.4byte	.LASF306
 28809 1ea4 08       		.byte	0x8
 28810 1ea5 D401     		.2byte	0x1d4
 28811 1ea7 831E0000 		.4byte	0x1e83
 28812 1eab 2D       		.uleb128 0x2d
 28813 1eac 2A0B0000 		.4byte	.LASF307
 28814 1eb0 08       		.byte	0x8
 28815 1eb1 D401     		.2byte	0x1d4
 28816 1eb3 831E0000 		.4byte	0x1e83
 28817 1eb7 09       		.uleb128 0x9
 28818 1eb8 5D030000 		.4byte	0x35d
 28819 1ebc C71E0000 		.4byte	0x1ec7
 28820 1ec0 0A       		.uleb128 0xa
 28821 1ec1 18010000 		.4byte	0x118
 28822 1ec5 01       		.byte	0x1
 28823 1ec6 00       		.byte	0
 28824 1ec7 2D       		.uleb128 0x2d
 28825 1ec8 9A050000 		.4byte	.LASF308
 28826 1ecc 08       		.byte	0x8
 28827 1ecd D501     		.2byte	0x1d5
 28828 1ecf B71E0000 		.4byte	0x1eb7
 28829 1ed3 2D       		.uleb128 0x2d
 28830 1ed4 15110000 		.4byte	.LASF309
 28831 1ed8 08       		.byte	0x8
 28832 1ed9 D501     		.2byte	0x1d5
 28833 1edb B71E0000 		.4byte	0x1eb7
 28834 1edf 2D       		.uleb128 0x2d
 28835 1ee0 6A000000 		.4byte	.LASF310
 28836 1ee4 08       		.byte	0x8
 28837 1ee5 D601     		.2byte	0x1d6
 28838 1ee7 D2030000 		.4byte	0x3d2
 28839 1eeb 2D       		.uleb128 0x2d
 28840 1eec D6110000 		.4byte	.LASF311
 28841 1ef0 08       		.byte	0x8
 28842 1ef1 D601     		.2byte	0x1d6
 28843 1ef3 D2030000 		.4byte	0x3d2
 28844 1ef7 2D       		.uleb128 0x2d
 28845 1ef8 5D000000 		.4byte	.LASF312
 28846 1efc 08       		.byte	0x8
 28847 1efd D701     		.2byte	0x1d7
 28848 1eff 17040000 		.4byte	0x417
 28849 1f03 2D       		.uleb128 0x2d
 28850 1f04 0D0E0000 		.4byte	.LASF313
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 612


 28851 1f08 08       		.byte	0x8
 28852 1f09 D801     		.2byte	0x1d8
 28853 1f0b A8090000 		.4byte	0x9a8
 28854 1f0f 2D       		.uleb128 0x2d
 28855 1f10 54090000 		.4byte	.LASF314
 28856 1f14 08       		.byte	0x8
 28857 1f15 D801     		.2byte	0x1d8
 28858 1f17 A8090000 		.4byte	0x9a8
 28859 1f1b 2D       		.uleb128 0x2d
 28860 1f1c 69080000 		.4byte	.LASF315
 28861 1f20 08       		.byte	0x8
 28862 1f21 D901     		.2byte	0x1d9
 28863 1f23 240B0000 		.4byte	0xb24
 28864 1f27 2D       		.uleb128 0x2d
 28865 1f28 16020000 		.4byte	.LASF316
 28866 1f2c 08       		.byte	0x8
 28867 1f2d DE01     		.2byte	0x1de
 28868 1f2f A3000000 		.4byte	0xa3
 28869 1f33 2D       		.uleb128 0x2d
 28870 1f34 5A0C0000 		.4byte	.LASF317
 28871 1f38 08       		.byte	0x8
 28872 1f39 DF01     		.2byte	0x1df
 28873 1f3b A3000000 		.4byte	0xa3
 28874 1f3f 2D       		.uleb128 0x2d
 28875 1f40 8C0C0000 		.4byte	.LASF318
 28876 1f44 08       		.byte	0x8
 28877 1f45 E201     		.2byte	0x1e2
 28878 1f47 F7030000 		.4byte	0x3f7
 28879 1f4b 2D       		.uleb128 0x2d
 28880 1f4c C70F0000 		.4byte	.LASF319
 28881 1f50 08       		.byte	0x8
 28882 1f51 E301     		.2byte	0x1e3
 28883 1f53 EC170000 		.4byte	0x17ec
 28884 1f57 2D       		.uleb128 0x2d
 28885 1f58 500F0000 		.4byte	.LASF320
 28886 1f5c 08       		.byte	0x8
 28887 1f5d E601     		.2byte	0x1e6
 28888 1f5f F7030000 		.4byte	0x3f7
 28889 1f63 2D       		.uleb128 0x2d
 28890 1f64 04090000 		.4byte	.LASF321
 28891 1f68 08       		.byte	0x8
 28892 1f69 ED01     		.2byte	0x1ed
 28893 1f6b 97000000 		.4byte	0x97
 28894 1f6f 2D       		.uleb128 0x2d
 28895 1f70 BE080000 		.4byte	.LASF322
 28896 1f74 08       		.byte	0x8
 28897 1f75 F601     		.2byte	0x1f6
 28898 1f77 97000000 		.4byte	0x97
 28899 1f7b 2D       		.uleb128 0x2d
 28900 1f7c 23060000 		.4byte	.LASF323
 28901 1f80 08       		.byte	0x8
 28902 1f81 F701     		.2byte	0x1f7
 28903 1f83 97000000 		.4byte	0x97
 28904 1f87 09       		.uleb128 0x9
 28905 1f88 C7000000 		.4byte	0xc7
 28906 1f8c 971F0000 		.4byte	0x1f97
 28907 1f90 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 613


 28908 1f91 18010000 		.4byte	0x118
 28909 1f95 0B       		.byte	0xb
 28910 1f96 00       		.byte	0
 28911 1f97 2D       		.uleb128 0x2d
 28912 1f98 5D030000 		.4byte	.LASF324
 28913 1f9c 08       		.byte	0x8
 28914 1f9d FA01     		.2byte	0x1fa
 28915 1f9f 871F0000 		.4byte	0x1f87
 28916 1fa3 2D       		.uleb128 0x2d
 28917 1fa4 E3100000 		.4byte	.LASF325
 28918 1fa8 08       		.byte	0x8
 28919 1fa9 FB01     		.2byte	0x1fb
 28920 1fab 97000000 		.4byte	0x97
 28921 1faf 09       		.uleb128 0x9
 28922 1fb0 AF000000 		.4byte	0xaf
 28923 1fb4 BF1F0000 		.4byte	0x1fbf
 28924 1fb8 0A       		.uleb128 0xa
 28925 1fb9 18010000 		.4byte	0x118
 28926 1fbd 04       		.byte	0x4
 28927 1fbe 00       		.byte	0
 28928 1fbf 2D       		.uleb128 0x2d
 28929 1fc0 C8050000 		.4byte	.LASF326
 28930 1fc4 08       		.byte	0x8
 28931 1fc5 0102     		.2byte	0x201
 28932 1fc7 AF1F0000 		.4byte	0x1faf
 28933 1fcb 2D       		.uleb128 0x2d
 28934 1fcc 260D0000 		.4byte	.LASF327
 28935 1fd0 08       		.byte	0x8
 28936 1fd1 0202     		.2byte	0x202
 28937 1fd3 EC170000 		.4byte	0x17ec
 28938 1fd7 09       		.uleb128 0x9
 28939 1fd8 A3000000 		.4byte	0xa3
 28940 1fdc ED1F0000 		.4byte	0x1fed
 28941 1fe0 0A       		.uleb128 0xa
 28942 1fe1 18010000 		.4byte	0x118
 28943 1fe5 01       		.byte	0x1
 28944 1fe6 0A       		.uleb128 0xa
 28945 1fe7 18010000 		.4byte	0x118
 28946 1feb 04       		.byte	0x4
 28947 1fec 00       		.byte	0
 28948 1fed 2D       		.uleb128 0x2d
 28949 1fee F00F0000 		.4byte	.LASF328
 28950 1ff2 08       		.byte	0x8
 28951 1ff3 0302     		.2byte	0x203
 28952 1ff5 D71F0000 		.4byte	0x1fd7
 28953 1ff9 09       		.uleb128 0x9
 28954 1ffa 97000000 		.4byte	0x97
 28955 1ffe 0F200000 		.4byte	0x200f
 28956 2002 0A       		.uleb128 0xa
 28957 2003 18010000 		.4byte	0x118
 28958 2007 01       		.byte	0x1
 28959 2008 0A       		.uleb128 0xa
 28960 2009 18010000 		.4byte	0x118
 28961 200d 04       		.byte	0x4
 28962 200e 00       		.byte	0
 28963 200f 2D       		.uleb128 0x2d
 28964 2010 A1050000 		.4byte	.LASF329
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 614


 28965 2014 08       		.byte	0x8
 28966 2015 0402     		.2byte	0x204
 28967 2017 F91F0000 		.4byte	0x1ff9
 28968 201b 2D       		.uleb128 0x2d
 28969 201c 1F050000 		.4byte	.LASF330
 28970 2020 08       		.byte	0x8
 28971 2021 0A02     		.2byte	0x20a
 28972 2023 1A030000 		.4byte	0x31a
 28973 2027 2D       		.uleb128 0x2d
 28974 2028 7A0E0000 		.4byte	.LASF331
 28975 202c 08       		.byte	0x8
 28976 202d 0F02     		.2byte	0x20f
 28977 202f 97000000 		.4byte	0x97
 28978 2033 2D       		.uleb128 0x2d
 28979 2034 2D100000 		.4byte	.LASF332
 28980 2038 08       		.byte	0x8
 28981 2039 1002     		.2byte	0x210
 28982 203b B1070000 		.4byte	0x7b1
 28983 203f 2D       		.uleb128 0x2d
 28984 2040 210F0000 		.4byte	.LASF333
 28985 2044 08       		.byte	0x8
 28986 2045 1102     		.2byte	0x211
 28987 2047 73000000 		.4byte	0x73
 28988 204b 09       		.uleb128 0x9
 28989 204c 73000000 		.4byte	0x73
 28990 2050 5B200000 		.4byte	0x205b
 28991 2054 0A       		.uleb128 0xa
 28992 2055 18010000 		.4byte	0x118
 28993 2059 04       		.byte	0x4
 28994 205a 00       		.byte	0
 28995 205b 2D       		.uleb128 0x2d
 28996 205c 3B030000 		.4byte	.LASF334
 28997 2060 08       		.byte	0x8
 28998 2061 1202     		.2byte	0x212
 28999 2063 4B200000 		.4byte	0x204b
 29000 2067 09       		.uleb128 0x9
 29001 2068 A80A0000 		.4byte	0xaa8
 29002 206c 77200000 		.4byte	0x2077
 29003 2070 0A       		.uleb128 0xa
 29004 2071 18010000 		.4byte	0x118
 29005 2075 04       		.byte	0x4
 29006 2076 00       		.byte	0
 29007 2077 2D       		.uleb128 0x2d
 29008 2078 06060000 		.4byte	.LASF335
 29009 207c 08       		.byte	0x8
 29010 207d 1302     		.2byte	0x213
 29011 207f 67200000 		.4byte	0x2067
 29012 2083 09       		.uleb128 0x9
 29013 2084 97000000 		.4byte	0x97
 29014 2088 99200000 		.4byte	0x2099
 29015 208c 0A       		.uleb128 0xa
 29016 208d 18010000 		.4byte	0x118
 29017 2091 04       		.byte	0x4
 29018 2092 0A       		.uleb128 0xa
 29019 2093 18010000 		.4byte	0x118
 29020 2097 02       		.byte	0x2
 29021 2098 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 615


 29022 2099 2D       		.uleb128 0x2d
 29023 209a 97090000 		.4byte	.LASF336
 29024 209e 08       		.byte	0x8
 29025 209f 1702     		.2byte	0x217
 29026 20a1 83200000 		.4byte	0x2083
 29027 20a5 2E       		.uleb128 0x2e
 29028 20a6 FD0E0000 		.4byte	.LASF337
 29029 20aa 01       		.byte	0x1
 29030 20ab 33       		.byte	0x33
 29031 20ac B6200000 		.4byte	0x20b6
 29032 20b0 05       		.uleb128 0x5
 29033 20b1 03       		.byte	0x3
 29034 20b2 00000000 		.4byte	EEPROM_ADDR
 29035 20b6 07       		.uleb128 0x7
 29036 20b7 04       		.byte	0x4
 29037 20b8 00010000 		.4byte	0x100
 29038 20bc 00       		.byte	0
 29039              		.section	.debug_abbrev,"",%progbits
 29040              	.Ldebug_abbrev0:
 29041 0000 01       		.uleb128 0x1
 29042 0001 11       		.uleb128 0x11
 29043 0002 01       		.byte	0x1
 29044 0003 25       		.uleb128 0x25
 29045 0004 0E       		.uleb128 0xe
 29046 0005 13       		.uleb128 0x13
 29047 0006 0B       		.uleb128 0xb
 29048 0007 03       		.uleb128 0x3
 29049 0008 0E       		.uleb128 0xe
 29050 0009 1B       		.uleb128 0x1b
 29051 000a 0E       		.uleb128 0xe
 29052 000b 55       		.uleb128 0x55
 29053 000c 17       		.uleb128 0x17
 29054 000d 11       		.uleb128 0x11
 29055 000e 01       		.uleb128 0x1
 29056 000f 10       		.uleb128 0x10
 29057 0010 17       		.uleb128 0x17
 29058 0011 00       		.byte	0
 29059 0012 00       		.byte	0
 29060 0013 02       		.uleb128 0x2
 29061 0014 24       		.uleb128 0x24
 29062 0015 00       		.byte	0
 29063 0016 0B       		.uleb128 0xb
 29064 0017 0B       		.uleb128 0xb
 29065 0018 3E       		.uleb128 0x3e
 29066 0019 0B       		.uleb128 0xb
 29067 001a 03       		.uleb128 0x3
 29068 001b 0E       		.uleb128 0xe
 29069 001c 00       		.byte	0
 29070 001d 00       		.byte	0
 29071 001e 03       		.uleb128 0x3
 29072 001f 16       		.uleb128 0x16
 29073 0020 00       		.byte	0
 29074 0021 03       		.uleb128 0x3
 29075 0022 0E       		.uleb128 0xe
 29076 0023 3A       		.uleb128 0x3a
 29077 0024 0B       		.uleb128 0xb
 29078 0025 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 616


 29079 0026 0B       		.uleb128 0xb
 29080 0027 49       		.uleb128 0x49
 29081 0028 13       		.uleb128 0x13
 29082 0029 00       		.byte	0
 29083 002a 00       		.byte	0
 29084 002b 04       		.uleb128 0x4
 29085 002c 24       		.uleb128 0x24
 29086 002d 00       		.byte	0
 29087 002e 0B       		.uleb128 0xb
 29088 002f 0B       		.uleb128 0xb
 29089 0030 3E       		.uleb128 0x3e
 29090 0031 0B       		.uleb128 0xb
 29091 0032 03       		.uleb128 0x3
 29092 0033 08       		.uleb128 0x8
 29093 0034 00       		.byte	0
 29094 0035 00       		.byte	0
 29095 0036 05       		.uleb128 0x5
 29096 0037 16       		.uleb128 0x16
 29097 0038 00       		.byte	0
 29098 0039 03       		.uleb128 0x3
 29099 003a 0E       		.uleb128 0xe
 29100 003b 3A       		.uleb128 0x3a
 29101 003c 0B       		.uleb128 0xb
 29102 003d 3B       		.uleb128 0x3b
 29103 003e 05       		.uleb128 0x5
 29104 003f 49       		.uleb128 0x49
 29105 0040 13       		.uleb128 0x13
 29106 0041 00       		.byte	0
 29107 0042 00       		.byte	0
 29108 0043 06       		.uleb128 0x6
 29109 0044 35       		.uleb128 0x35
 29110 0045 00       		.byte	0
 29111 0046 49       		.uleb128 0x49
 29112 0047 13       		.uleb128 0x13
 29113 0048 00       		.byte	0
 29114 0049 00       		.byte	0
 29115 004a 07       		.uleb128 0x7
 29116 004b 0F       		.uleb128 0xf
 29117 004c 00       		.byte	0
 29118 004d 0B       		.uleb128 0xb
 29119 004e 0B       		.uleb128 0xb
 29120 004f 49       		.uleb128 0x49
 29121 0050 13       		.uleb128 0x13
 29122 0051 00       		.byte	0
 29123 0052 00       		.byte	0
 29124 0053 08       		.uleb128 0x8
 29125 0054 26       		.uleb128 0x26
 29126 0055 00       		.byte	0
 29127 0056 49       		.uleb128 0x49
 29128 0057 13       		.uleb128 0x13
 29129 0058 00       		.byte	0
 29130 0059 00       		.byte	0
 29131 005a 09       		.uleb128 0x9
 29132 005b 01       		.uleb128 0x1
 29133 005c 01       		.byte	0x1
 29134 005d 49       		.uleb128 0x49
 29135 005e 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 617


 29136 005f 01       		.uleb128 0x1
 29137 0060 13       		.uleb128 0x13
 29138 0061 00       		.byte	0
 29139 0062 00       		.byte	0
 29140 0063 0A       		.uleb128 0xa
 29141 0064 21       		.uleb128 0x21
 29142 0065 00       		.byte	0
 29143 0066 49       		.uleb128 0x49
 29144 0067 13       		.uleb128 0x13
 29145 0068 2F       		.uleb128 0x2f
 29146 0069 0B       		.uleb128 0xb
 29147 006a 00       		.byte	0
 29148 006b 00       		.byte	0
 29149 006c 0B       		.uleb128 0xb
 29150 006d 04       		.uleb128 0x4
 29151 006e 01       		.byte	0x1
 29152 006f 03       		.uleb128 0x3
 29153 0070 0E       		.uleb128 0xe
 29154 0071 0B       		.uleb128 0xb
 29155 0072 0B       		.uleb128 0xb
 29156 0073 49       		.uleb128 0x49
 29157 0074 13       		.uleb128 0x13
 29158 0075 3A       		.uleb128 0x3a
 29159 0076 0B       		.uleb128 0xb
 29160 0077 3B       		.uleb128 0x3b
 29161 0078 0B       		.uleb128 0xb
 29162 0079 01       		.uleb128 0x1
 29163 007a 13       		.uleb128 0x13
 29164 007b 00       		.byte	0
 29165 007c 00       		.byte	0
 29166 007d 0C       		.uleb128 0xc
 29167 007e 28       		.uleb128 0x28
 29168 007f 00       		.byte	0
 29169 0080 03       		.uleb128 0x3
 29170 0081 0E       		.uleb128 0xe
 29171 0082 1C       		.uleb128 0x1c
 29172 0083 0B       		.uleb128 0xb
 29173 0084 00       		.byte	0
 29174 0085 00       		.byte	0
 29175 0086 0D       		.uleb128 0xd
 29176 0087 13       		.uleb128 0x13
 29177 0088 00       		.byte	0
 29178 0089 03       		.uleb128 0x3
 29179 008a 0E       		.uleb128 0xe
 29180 008b 3C       		.uleb128 0x3c
 29181 008c 19       		.uleb128 0x19
 29182 008d 00       		.byte	0
 29183 008e 00       		.byte	0
 29184 008f 0E       		.uleb128 0xe
 29185 0090 13       		.uleb128 0x13
 29186 0091 01       		.byte	0x1
 29187 0092 03       		.uleb128 0x3
 29188 0093 0E       		.uleb128 0xe
 29189 0094 0B       		.uleb128 0xb
 29190 0095 0B       		.uleb128 0xb
 29191 0096 3A       		.uleb128 0x3a
 29192 0097 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 618


 29193 0098 3B       		.uleb128 0x3b
 29194 0099 0B       		.uleb128 0xb
 29195 009a 01       		.uleb128 0x1
 29196 009b 13       		.uleb128 0x13
 29197 009c 00       		.byte	0
 29198 009d 00       		.byte	0
 29199 009e 0F       		.uleb128 0xf
 29200 009f 0D       		.uleb128 0xd
 29201 00a0 00       		.byte	0
 29202 00a1 03       		.uleb128 0x3
 29203 00a2 08       		.uleb128 0x8
 29204 00a3 3A       		.uleb128 0x3a
 29205 00a4 0B       		.uleb128 0xb
 29206 00a5 3B       		.uleb128 0x3b
 29207 00a6 0B       		.uleb128 0xb
 29208 00a7 49       		.uleb128 0x49
 29209 00a8 13       		.uleb128 0x13
 29210 00a9 38       		.uleb128 0x38
 29211 00aa 0B       		.uleb128 0xb
 29212 00ab 00       		.byte	0
 29213 00ac 00       		.byte	0
 29214 00ad 10       		.uleb128 0x10
 29215 00ae 0D       		.uleb128 0xd
 29216 00af 00       		.byte	0
 29217 00b0 03       		.uleb128 0x3
 29218 00b1 0E       		.uleb128 0xe
 29219 00b2 3A       		.uleb128 0x3a
 29220 00b3 0B       		.uleb128 0xb
 29221 00b4 3B       		.uleb128 0x3b
 29222 00b5 0B       		.uleb128 0xb
 29223 00b6 49       		.uleb128 0x49
 29224 00b7 13       		.uleb128 0x13
 29225 00b8 38       		.uleb128 0x38
 29226 00b9 0B       		.uleb128 0xb
 29227 00ba 00       		.byte	0
 29228 00bb 00       		.byte	0
 29229 00bc 11       		.uleb128 0x11
 29230 00bd 13       		.uleb128 0x13
 29231 00be 01       		.byte	0x1
 29232 00bf 03       		.uleb128 0x3
 29233 00c0 0E       		.uleb128 0xe
 29234 00c1 0B       		.uleb128 0xb
 29235 00c2 0B       		.uleb128 0xb
 29236 00c3 3A       		.uleb128 0x3a
 29237 00c4 0B       		.uleb128 0xb
 29238 00c5 3B       		.uleb128 0x3b
 29239 00c6 05       		.uleb128 0x5
 29240 00c7 01       		.uleb128 0x1
 29241 00c8 13       		.uleb128 0x13
 29242 00c9 00       		.byte	0
 29243 00ca 00       		.byte	0
 29244 00cb 12       		.uleb128 0x12
 29245 00cc 0D       		.uleb128 0xd
 29246 00cd 00       		.byte	0
 29247 00ce 03       		.uleb128 0x3
 29248 00cf 08       		.uleb128 0x8
 29249 00d0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 619


 29250 00d1 0B       		.uleb128 0xb
 29251 00d2 3B       		.uleb128 0x3b
 29252 00d3 05       		.uleb128 0x5
 29253 00d4 49       		.uleb128 0x49
 29254 00d5 13       		.uleb128 0x13
 29255 00d6 38       		.uleb128 0x38
 29256 00d7 0B       		.uleb128 0xb
 29257 00d8 00       		.byte	0
 29258 00d9 00       		.byte	0
 29259 00da 13       		.uleb128 0x13
 29260 00db 0D       		.uleb128 0xd
 29261 00dc 00       		.byte	0
 29262 00dd 03       		.uleb128 0x3
 29263 00de 0E       		.uleb128 0xe
 29264 00df 3A       		.uleb128 0x3a
 29265 00e0 0B       		.uleb128 0xb
 29266 00e1 3B       		.uleb128 0x3b
 29267 00e2 05       		.uleb128 0x5
 29268 00e3 49       		.uleb128 0x49
 29269 00e4 13       		.uleb128 0x13
 29270 00e5 38       		.uleb128 0x38
 29271 00e6 0B       		.uleb128 0xb
 29272 00e7 00       		.byte	0
 29273 00e8 00       		.byte	0
 29274 00e9 14       		.uleb128 0x14
 29275 00ea 13       		.uleb128 0x13
 29276 00eb 01       		.byte	0x1
 29277 00ec 03       		.uleb128 0x3
 29278 00ed 0E       		.uleb128 0xe
 29279 00ee 0B       		.uleb128 0xb
 29280 00ef 05       		.uleb128 0x5
 29281 00f0 3A       		.uleb128 0x3a
 29282 00f1 0B       		.uleb128 0xb
 29283 00f2 3B       		.uleb128 0x3b
 29284 00f3 05       		.uleb128 0x5
 29285 00f4 01       		.uleb128 0x1
 29286 00f5 13       		.uleb128 0x13
 29287 00f6 00       		.byte	0
 29288 00f7 00       		.byte	0
 29289 00f8 15       		.uleb128 0x15
 29290 00f9 0D       		.uleb128 0xd
 29291 00fa 00       		.byte	0
 29292 00fb 03       		.uleb128 0x3
 29293 00fc 08       		.uleb128 0x8
 29294 00fd 3A       		.uleb128 0x3a
 29295 00fe 0B       		.uleb128 0xb
 29296 00ff 3B       		.uleb128 0x3b
 29297 0100 05       		.uleb128 0x5
 29298 0101 49       		.uleb128 0x49
 29299 0102 13       		.uleb128 0x13
 29300 0103 38       		.uleb128 0x38
 29301 0104 05       		.uleb128 0x5
 29302 0105 00       		.byte	0
 29303 0106 00       		.byte	0
 29304 0107 16       		.uleb128 0x16
 29305 0108 0D       		.uleb128 0xd
 29306 0109 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 620


 29307 010a 03       		.uleb128 0x3
 29308 010b 0E       		.uleb128 0xe
 29309 010c 3A       		.uleb128 0x3a
 29310 010d 0B       		.uleb128 0xb
 29311 010e 3B       		.uleb128 0x3b
 29312 010f 05       		.uleb128 0x5
 29313 0110 49       		.uleb128 0x49
 29314 0111 13       		.uleb128 0x13
 29315 0112 38       		.uleb128 0x38
 29316 0113 05       		.uleb128 0x5
 29317 0114 00       		.byte	0
 29318 0115 00       		.byte	0
 29319 0116 17       		.uleb128 0x17
 29320 0117 2E       		.uleb128 0x2e
 29321 0118 01       		.byte	0x1
 29322 0119 03       		.uleb128 0x3
 29323 011a 0E       		.uleb128 0xe
 29324 011b 3A       		.uleb128 0x3a
 29325 011c 0B       		.uleb128 0xb
 29326 011d 3B       		.uleb128 0x3b
 29327 011e 05       		.uleb128 0x5
 29328 011f 27       		.uleb128 0x27
 29329 0120 19       		.uleb128 0x19
 29330 0121 49       		.uleb128 0x49
 29331 0122 13       		.uleb128 0x13
 29332 0123 20       		.uleb128 0x20
 29333 0124 0B       		.uleb128 0xb
 29334 0125 01       		.uleb128 0x1
 29335 0126 13       		.uleb128 0x13
 29336 0127 00       		.byte	0
 29337 0128 00       		.byte	0
 29338 0129 18       		.uleb128 0x18
 29339 012a 05       		.uleb128 0x5
 29340 012b 00       		.byte	0
 29341 012c 03       		.uleb128 0x3
 29342 012d 0E       		.uleb128 0xe
 29343 012e 3A       		.uleb128 0x3a
 29344 012f 0B       		.uleb128 0xb
 29345 0130 3B       		.uleb128 0x3b
 29346 0131 05       		.uleb128 0x5
 29347 0132 49       		.uleb128 0x49
 29348 0133 13       		.uleb128 0x13
 29349 0134 00       		.byte	0
 29350 0135 00       		.byte	0
 29351 0136 19       		.uleb128 0x19
 29352 0137 34       		.uleb128 0x34
 29353 0138 00       		.byte	0
 29354 0139 03       		.uleb128 0x3
 29355 013a 0E       		.uleb128 0xe
 29356 013b 3A       		.uleb128 0x3a
 29357 013c 0B       		.uleb128 0xb
 29358 013d 3B       		.uleb128 0x3b
 29359 013e 05       		.uleb128 0x5
 29360 013f 49       		.uleb128 0x49
 29361 0140 13       		.uleb128 0x13
 29362 0141 00       		.byte	0
 29363 0142 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 621


 29364 0143 1A       		.uleb128 0x1a
 29365 0144 2E       		.uleb128 0x2e
 29366 0145 01       		.byte	0x1
 29367 0146 3F       		.uleb128 0x3f
 29368 0147 19       		.uleb128 0x19
 29369 0148 03       		.uleb128 0x3
 29370 0149 0E       		.uleb128 0xe
 29371 014a 3A       		.uleb128 0x3a
 29372 014b 0B       		.uleb128 0xb
 29373 014c 3B       		.uleb128 0x3b
 29374 014d 0B       		.uleb128 0xb
 29375 014e 27       		.uleb128 0x27
 29376 014f 19       		.uleb128 0x19
 29377 0150 11       		.uleb128 0x11
 29378 0151 01       		.uleb128 0x1
 29379 0152 12       		.uleb128 0x12
 29380 0153 06       		.uleb128 0x6
 29381 0154 40       		.uleb128 0x40
 29382 0155 18       		.uleb128 0x18
 29383 0156 9642     		.uleb128 0x2116
 29384 0158 19       		.uleb128 0x19
 29385 0159 01       		.uleb128 0x1
 29386 015a 13       		.uleb128 0x13
 29387 015b 00       		.byte	0
 29388 015c 00       		.byte	0
 29389 015d 1B       		.uleb128 0x1b
 29390 015e 34       		.uleb128 0x34
 29391 015f 00       		.byte	0
 29392 0160 03       		.uleb128 0x3
 29393 0161 0E       		.uleb128 0xe
 29394 0162 3A       		.uleb128 0x3a
 29395 0163 0B       		.uleb128 0xb
 29396 0164 3B       		.uleb128 0x3b
 29397 0165 0B       		.uleb128 0xb
 29398 0166 49       		.uleb128 0x49
 29399 0167 13       		.uleb128 0x13
 29400 0168 02       		.uleb128 0x2
 29401 0169 18       		.uleb128 0x18
 29402 016a 00       		.byte	0
 29403 016b 00       		.byte	0
 29404 016c 1C       		.uleb128 0x1c
 29405 016d 1D       		.uleb128 0x1d
 29406 016e 01       		.byte	0x1
 29407 016f 31       		.uleb128 0x31
 29408 0170 13       		.uleb128 0x13
 29409 0171 11       		.uleb128 0x11
 29410 0172 01       		.uleb128 0x1
 29411 0173 12       		.uleb128 0x12
 29412 0174 06       		.uleb128 0x6
 29413 0175 58       		.uleb128 0x58
 29414 0176 0B       		.uleb128 0xb
 29415 0177 59       		.uleb128 0x59
 29416 0178 0B       		.uleb128 0xb
 29417 0179 01       		.uleb128 0x1
 29418 017a 13       		.uleb128 0x13
 29419 017b 00       		.byte	0
 29420 017c 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 622


 29421 017d 1D       		.uleb128 0x1d
 29422 017e 05       		.uleb128 0x5
 29423 017f 00       		.byte	0
 29424 0180 31       		.uleb128 0x31
 29425 0181 13       		.uleb128 0x13
 29426 0182 02       		.uleb128 0x2
 29427 0183 18       		.uleb128 0x18
 29428 0184 00       		.byte	0
 29429 0185 00       		.byte	0
 29430 0186 1E       		.uleb128 0x1e
 29431 0187 0B       		.uleb128 0xb
 29432 0188 01       		.byte	0x1
 29433 0189 11       		.uleb128 0x11
 29434 018a 01       		.uleb128 0x1
 29435 018b 12       		.uleb128 0x12
 29436 018c 06       		.uleb128 0x6
 29437 018d 00       		.byte	0
 29438 018e 00       		.byte	0
 29439 018f 1F       		.uleb128 0x1f
 29440 0190 34       		.uleb128 0x34
 29441 0191 00       		.byte	0
 29442 0192 31       		.uleb128 0x31
 29443 0193 13       		.uleb128 0x13
 29444 0194 02       		.uleb128 0x2
 29445 0195 18       		.uleb128 0x18
 29446 0196 00       		.byte	0
 29447 0197 00       		.byte	0
 29448 0198 20       		.uleb128 0x20
 29449 0199 1D       		.uleb128 0x1d
 29450 019a 01       		.byte	0x1
 29451 019b 31       		.uleb128 0x31
 29452 019c 13       		.uleb128 0x13
 29453 019d 11       		.uleb128 0x11
 29454 019e 01       		.uleb128 0x1
 29455 019f 12       		.uleb128 0x12
 29456 01a0 06       		.uleb128 0x6
 29457 01a1 58       		.uleb128 0x58
 29458 01a2 0B       		.uleb128 0xb
 29459 01a3 59       		.uleb128 0x59
 29460 01a4 0B       		.uleb128 0xb
 29461 01a5 00       		.byte	0
 29462 01a6 00       		.byte	0
 29463 01a7 21       		.uleb128 0x21
 29464 01a8 2E       		.uleb128 0x2e
 29465 01a9 01       		.byte	0x1
 29466 01aa 3F       		.uleb128 0x3f
 29467 01ab 19       		.uleb128 0x19
 29468 01ac 03       		.uleb128 0x3
 29469 01ad 0E       		.uleb128 0xe
 29470 01ae 3A       		.uleb128 0x3a
 29471 01af 0B       		.uleb128 0xb
 29472 01b0 3B       		.uleb128 0x3b
 29473 01b1 05       		.uleb128 0x5
 29474 01b2 27       		.uleb128 0x27
 29475 01b3 19       		.uleb128 0x19
 29476 01b4 11       		.uleb128 0x11
 29477 01b5 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 623


 29478 01b6 12       		.uleb128 0x12
 29479 01b7 06       		.uleb128 0x6
 29480 01b8 40       		.uleb128 0x40
 29481 01b9 18       		.uleb128 0x18
 29482 01ba 9642     		.uleb128 0x2116
 29483 01bc 19       		.uleb128 0x19
 29484 01bd 01       		.uleb128 0x1
 29485 01be 13       		.uleb128 0x13
 29486 01bf 00       		.byte	0
 29487 01c0 00       		.byte	0
 29488 01c1 22       		.uleb128 0x22
 29489 01c2 34       		.uleb128 0x34
 29490 01c3 00       		.byte	0
 29491 01c4 03       		.uleb128 0x3
 29492 01c5 0E       		.uleb128 0xe
 29493 01c6 3A       		.uleb128 0x3a
 29494 01c7 0B       		.uleb128 0xb
 29495 01c8 3B       		.uleb128 0x3b
 29496 01c9 05       		.uleb128 0x5
 29497 01ca 49       		.uleb128 0x49
 29498 01cb 13       		.uleb128 0x13
 29499 01cc 02       		.uleb128 0x2
 29500 01cd 18       		.uleb128 0x18
 29501 01ce 00       		.byte	0
 29502 01cf 00       		.byte	0
 29503 01d0 23       		.uleb128 0x23
 29504 01d1 21       		.uleb128 0x21
 29505 01d2 00       		.byte	0
 29506 01d3 49       		.uleb128 0x49
 29507 01d4 13       		.uleb128 0x13
 29508 01d5 2F       		.uleb128 0x2f
 29509 01d6 05       		.uleb128 0x5
 29510 01d7 00       		.byte	0
 29511 01d8 00       		.byte	0
 29512 01d9 24       		.uleb128 0x24
 29513 01da 05       		.uleb128 0x5
 29514 01db 00       		.byte	0
 29515 01dc 03       		.uleb128 0x3
 29516 01dd 0E       		.uleb128 0xe
 29517 01de 3A       		.uleb128 0x3a
 29518 01df 0B       		.uleb128 0xb
 29519 01e0 3B       		.uleb128 0x3b
 29520 01e1 05       		.uleb128 0x5
 29521 01e2 49       		.uleb128 0x49
 29522 01e3 13       		.uleb128 0x13
 29523 01e4 02       		.uleb128 0x2
 29524 01e5 18       		.uleb128 0x18
 29525 01e6 00       		.byte	0
 29526 01e7 00       		.byte	0
 29527 01e8 25       		.uleb128 0x25
 29528 01e9 34       		.uleb128 0x34
 29529 01ea 00       		.byte	0
 29530 01eb 03       		.uleb128 0x3
 29531 01ec 08       		.uleb128 0x8
 29532 01ed 3A       		.uleb128 0x3a
 29533 01ee 0B       		.uleb128 0xb
 29534 01ef 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 624


 29535 01f0 05       		.uleb128 0x5
 29536 01f1 49       		.uleb128 0x49
 29537 01f2 13       		.uleb128 0x13
 29538 01f3 02       		.uleb128 0x2
 29539 01f4 18       		.uleb128 0x18
 29540 01f5 00       		.byte	0
 29541 01f6 00       		.byte	0
 29542 01f7 26       		.uleb128 0x26
 29543 01f8 2E       		.uleb128 0x2e
 29544 01f9 01       		.byte	0x1
 29545 01fa 3F       		.uleb128 0x3f
 29546 01fb 19       		.uleb128 0x19
 29547 01fc 03       		.uleb128 0x3
 29548 01fd 0E       		.uleb128 0xe
 29549 01fe 3A       		.uleb128 0x3a
 29550 01ff 0B       		.uleb128 0xb
 29551 0200 3B       		.uleb128 0x3b
 29552 0201 05       		.uleb128 0x5
 29553 0202 11       		.uleb128 0x11
 29554 0203 01       		.uleb128 0x1
 29555 0204 12       		.uleb128 0x12
 29556 0205 06       		.uleb128 0x6
 29557 0206 40       		.uleb128 0x40
 29558 0207 18       		.uleb128 0x18
 29559 0208 9642     		.uleb128 0x2116
 29560 020a 19       		.uleb128 0x19
 29561 020b 01       		.uleb128 0x1
 29562 020c 13       		.uleb128 0x13
 29563 020d 00       		.byte	0
 29564 020e 00       		.byte	0
 29565 020f 27       		.uleb128 0x27
 29566 0210 2E       		.uleb128 0x2e
 29567 0211 01       		.byte	0x1
 29568 0212 3F       		.uleb128 0x3f
 29569 0213 19       		.uleb128 0x19
 29570 0214 03       		.uleb128 0x3
 29571 0215 0E       		.uleb128 0xe
 29572 0216 3A       		.uleb128 0x3a
 29573 0217 0B       		.uleb128 0xb
 29574 0218 3B       		.uleb128 0x3b
 29575 0219 05       		.uleb128 0x5
 29576 021a 27       		.uleb128 0x27
 29577 021b 19       		.uleb128 0x19
 29578 021c 49       		.uleb128 0x49
 29579 021d 13       		.uleb128 0x13
 29580 021e 11       		.uleb128 0x11
 29581 021f 01       		.uleb128 0x1
 29582 0220 12       		.uleb128 0x12
 29583 0221 06       		.uleb128 0x6
 29584 0222 40       		.uleb128 0x40
 29585 0223 18       		.uleb128 0x18
 29586 0224 9742     		.uleb128 0x2117
 29587 0226 19       		.uleb128 0x19
 29588 0227 01       		.uleb128 0x1
 29589 0228 13       		.uleb128 0x13
 29590 0229 00       		.byte	0
 29591 022a 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 625


 29592 022b 28       		.uleb128 0x28
 29593 022c 2E       		.uleb128 0x2e
 29594 022d 01       		.byte	0x1
 29595 022e 3F       		.uleb128 0x3f
 29596 022f 19       		.uleb128 0x19
 29597 0230 03       		.uleb128 0x3
 29598 0231 0E       		.uleb128 0xe
 29599 0232 3A       		.uleb128 0x3a
 29600 0233 0B       		.uleb128 0xb
 29601 0234 3B       		.uleb128 0x3b
 29602 0235 05       		.uleb128 0x5
 29603 0236 27       		.uleb128 0x27
 29604 0237 19       		.uleb128 0x19
 29605 0238 49       		.uleb128 0x49
 29606 0239 13       		.uleb128 0x13
 29607 023a 11       		.uleb128 0x11
 29608 023b 01       		.uleb128 0x1
 29609 023c 12       		.uleb128 0x12
 29610 023d 06       		.uleb128 0x6
 29611 023e 40       		.uleb128 0x40
 29612 023f 18       		.uleb128 0x18
 29613 0240 9642     		.uleb128 0x2116
 29614 0242 19       		.uleb128 0x19
 29615 0243 01       		.uleb128 0x1
 29616 0244 13       		.uleb128 0x13
 29617 0245 00       		.byte	0
 29618 0246 00       		.byte	0
 29619 0247 29       		.uleb128 0x29
 29620 0248 2E       		.uleb128 0x2e
 29621 0249 01       		.byte	0x1
 29622 024a 3F       		.uleb128 0x3f
 29623 024b 19       		.uleb128 0x19
 29624 024c 03       		.uleb128 0x3
 29625 024d 0E       		.uleb128 0xe
 29626 024e 3A       		.uleb128 0x3a
 29627 024f 0B       		.uleb128 0xb
 29628 0250 3B       		.uleb128 0x3b
 29629 0251 05       		.uleb128 0x5
 29630 0252 27       		.uleb128 0x27
 29631 0253 19       		.uleb128 0x19
 29632 0254 11       		.uleb128 0x11
 29633 0255 01       		.uleb128 0x1
 29634 0256 12       		.uleb128 0x12
 29635 0257 06       		.uleb128 0x6
 29636 0258 40       		.uleb128 0x40
 29637 0259 18       		.uleb128 0x18
 29638 025a 9742     		.uleb128 0x2117
 29639 025c 19       		.uleb128 0x19
 29640 025d 01       		.uleb128 0x1
 29641 025e 13       		.uleb128 0x13
 29642 025f 00       		.byte	0
 29643 0260 00       		.byte	0
 29644 0261 2A       		.uleb128 0x2a
 29645 0262 2E       		.uleb128 0x2e
 29646 0263 01       		.byte	0x1
 29647 0264 3F       		.uleb128 0x3f
 29648 0265 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 626


 29649 0266 03       		.uleb128 0x3
 29650 0267 0E       		.uleb128 0xe
 29651 0268 3A       		.uleb128 0x3a
 29652 0269 0B       		.uleb128 0xb
 29653 026a 3B       		.uleb128 0x3b
 29654 026b 05       		.uleb128 0x5
 29655 026c 11       		.uleb128 0x11
 29656 026d 01       		.uleb128 0x1
 29657 026e 12       		.uleb128 0x12
 29658 026f 06       		.uleb128 0x6
 29659 0270 40       		.uleb128 0x40
 29660 0271 18       		.uleb128 0x18
 29661 0272 9742     		.uleb128 0x2117
 29662 0274 19       		.uleb128 0x19
 29663 0275 01       		.uleb128 0x1
 29664 0276 13       		.uleb128 0x13
 29665 0277 00       		.byte	0
 29666 0278 00       		.byte	0
 29667 0279 2B       		.uleb128 0x2b
 29668 027a 0B       		.uleb128 0xb
 29669 027b 01       		.byte	0x1
 29670 027c 11       		.uleb128 0x11
 29671 027d 01       		.uleb128 0x1
 29672 027e 12       		.uleb128 0x12
 29673 027f 06       		.uleb128 0x6
 29674 0280 01       		.uleb128 0x1
 29675 0281 13       		.uleb128 0x13
 29676 0282 00       		.byte	0
 29677 0283 00       		.byte	0
 29678 0284 2C       		.uleb128 0x2c
 29679 0285 2E       		.uleb128 0x2e
 29680 0286 00       		.byte	0
 29681 0287 3F       		.uleb128 0x3f
 29682 0288 19       		.uleb128 0x19
 29683 0289 03       		.uleb128 0x3
 29684 028a 0E       		.uleb128 0xe
 29685 028b 3A       		.uleb128 0x3a
 29686 028c 0B       		.uleb128 0xb
 29687 028d 3B       		.uleb128 0x3b
 29688 028e 05       		.uleb128 0x5
 29689 028f 11       		.uleb128 0x11
 29690 0290 01       		.uleb128 0x1
 29691 0291 12       		.uleb128 0x12
 29692 0292 06       		.uleb128 0x6
 29693 0293 40       		.uleb128 0x40
 29694 0294 18       		.uleb128 0x18
 29695 0295 9642     		.uleb128 0x2116
 29696 0297 19       		.uleb128 0x19
 29697 0298 00       		.byte	0
 29698 0299 00       		.byte	0
 29699 029a 2D       		.uleb128 0x2d
 29700 029b 34       		.uleb128 0x34
 29701 029c 00       		.byte	0
 29702 029d 03       		.uleb128 0x3
 29703 029e 0E       		.uleb128 0xe
 29704 029f 3A       		.uleb128 0x3a
 29705 02a0 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 627


 29706 02a1 3B       		.uleb128 0x3b
 29707 02a2 05       		.uleb128 0x5
 29708 02a3 49       		.uleb128 0x49
 29709 02a4 13       		.uleb128 0x13
 29710 02a5 3F       		.uleb128 0x3f
 29711 02a6 19       		.uleb128 0x19
 29712 02a7 3C       		.uleb128 0x3c
 29713 02a8 19       		.uleb128 0x19
 29714 02a9 00       		.byte	0
 29715 02aa 00       		.byte	0
 29716 02ab 2E       		.uleb128 0x2e
 29717 02ac 34       		.uleb128 0x34
 29718 02ad 00       		.byte	0
 29719 02ae 03       		.uleb128 0x3
 29720 02af 0E       		.uleb128 0xe
 29721 02b0 3A       		.uleb128 0x3a
 29722 02b1 0B       		.uleb128 0xb
 29723 02b2 3B       		.uleb128 0x3b
 29724 02b3 0B       		.uleb128 0xb
 29725 02b4 49       		.uleb128 0x49
 29726 02b5 13       		.uleb128 0x13
 29727 02b6 3F       		.uleb128 0x3f
 29728 02b7 19       		.uleb128 0x19
 29729 02b8 02       		.uleb128 0x2
 29730 02b9 18       		.uleb128 0x18
 29731 02ba 00       		.byte	0
 29732 02bb 00       		.byte	0
 29733 02bc 00       		.byte	0
 29734              		.section	.debug_aranges,"",%progbits
 29735 0000 6C010000 		.4byte	0x16c
 29736 0004 0200     		.2byte	0x2
 29737 0006 00000000 		.4byte	.Ldebug_info0
 29738 000a 04       		.byte	0x4
 29739 000b 00       		.byte	0
 29740 000c 0000     		.2byte	0
 29741 000e 0000     		.2byte	0
 29742 0010 00000000 		.4byte	.LFB64
 29743 0014 DC040000 		.4byte	.LFE64-.LFB64
 29744 0018 00000000 		.4byte	.LFB65
 29745 001c 22000000 		.4byte	.LFE65-.LFB65
 29746 0020 00000000 		.4byte	.LFB66
 29747 0024 02010000 		.4byte	.LFE66-.LFB66
 29748 0028 00000000 		.4byte	.LFB67
 29749 002c 362F0000 		.4byte	.LFE67-.LFB67
 29750 0030 00000000 		.4byte	.LFB68
 29751 0034 08170000 		.4byte	.LFE68-.LFB68
 29752 0038 00000000 		.4byte	.LFB69
 29753 003c 18140000 		.4byte	.LFE69-.LFB69
 29754 0040 00000000 		.4byte	.LFB70
 29755 0044 F40D0000 		.4byte	.LFE70-.LFB70
 29756 0048 00000000 		.4byte	.LFB71
 29757 004c 88000000 		.4byte	.LFE71-.LFB71
 29758 0050 00000000 		.4byte	.LFB72
 29759 0054 AC1E0000 		.4byte	.LFE72-.LFB72
 29760 0058 00000000 		.4byte	.LFB73
 29761 005c B4030000 		.4byte	.LFE73-.LFB73
 29762 0060 00000000 		.4byte	.LFB74
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 628


 29763 0064 38120000 		.4byte	.LFE74-.LFB74
 29764 0068 00000000 		.4byte	.LFB75
 29765 006c C8000000 		.4byte	.LFE75-.LFB75
 29766 0070 00000000 		.4byte	.LFB76
 29767 0074 30010000 		.4byte	.LFE76-.LFB76
 29768 0078 00000000 		.4byte	.LFB77
 29769 007c 74030000 		.4byte	.LFE77-.LFB77
 29770 0080 00000000 		.4byte	.LFB78
 29771 0084 84000000 		.4byte	.LFE78-.LFB78
 29772 0088 00000000 		.4byte	.LFB79
 29773 008c 88000000 		.4byte	.LFE79-.LFB79
 29774 0090 00000000 		.4byte	.LFB80
 29775 0094 80000000 		.4byte	.LFE80-.LFB80
 29776 0098 00000000 		.4byte	.LFB81
 29777 009c 3E000000 		.4byte	.LFE81-.LFB81
 29778 00a0 00000000 		.4byte	.LFB82
 29779 00a4 2E000000 		.4byte	.LFE82-.LFB82
 29780 00a8 00000000 		.4byte	.LFB83
 29781 00ac 98000000 		.4byte	.LFE83-.LFB83
 29782 00b0 00000000 		.4byte	.LFB84
 29783 00b4 80000000 		.4byte	.LFE84-.LFB84
 29784 00b8 00000000 		.4byte	.LFB85
 29785 00bc 5C000000 		.4byte	.LFE85-.LFB85
 29786 00c0 00000000 		.4byte	.LFB86
 29787 00c4 CC050000 		.4byte	.LFE86-.LFB86
 29788 00c8 00000000 		.4byte	.LFB87
 29789 00cc 30020000 		.4byte	.LFE87-.LFB87
 29790 00d0 00000000 		.4byte	.LFB88
 29791 00d4 B4000000 		.4byte	.LFE88-.LFB88
 29792 00d8 00000000 		.4byte	.LFB89
 29793 00dc B4000000 		.4byte	.LFE89-.LFB89
 29794 00e0 00000000 		.4byte	.LFB90
 29795 00e4 B8000000 		.4byte	.LFE90-.LFB90
 29796 00e8 00000000 		.4byte	.LFB91
 29797 00ec 44020000 		.4byte	.LFE91-.LFB91
 29798 00f0 00000000 		.4byte	.LFB92
 29799 00f4 C0000000 		.4byte	.LFE92-.LFB92
 29800 00f8 00000000 		.4byte	.LFB93
 29801 00fc 5C000000 		.4byte	.LFE93-.LFB93
 29802 0100 00000000 		.4byte	.LFB94
 29803 0104 3C010000 		.4byte	.LFE94-.LFB94
 29804 0108 00000000 		.4byte	.LFB95
 29805 010c B8000000 		.4byte	.LFE95-.LFB95
 29806 0110 00000000 		.4byte	.LFB96
 29807 0114 5C000000 		.4byte	.LFE96-.LFB96
 29808 0118 00000000 		.4byte	.LFB97
 29809 011c 34000000 		.4byte	.LFE97-.LFB97
 29810 0120 00000000 		.4byte	.LFB98
 29811 0124 20000000 		.4byte	.LFE98-.LFB98
 29812 0128 00000000 		.4byte	.LFB99
 29813 012c 48000000 		.4byte	.LFE99-.LFB99
 29814 0130 00000000 		.4byte	.LFB100
 29815 0134 BC010000 		.4byte	.LFE100-.LFB100
 29816 0138 00000000 		.4byte	.LFB101
 29817 013c 60000000 		.4byte	.LFE101-.LFB101
 29818 0140 00000000 		.4byte	.LFB102
 29819 0144 98050000 		.4byte	.LFE102-.LFB102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 629


 29820 0148 00000000 		.4byte	.LFB103
 29821 014c 8C000000 		.4byte	.LFE103-.LFB103
 29822 0150 00000000 		.4byte	.LFB104
 29823 0154 EC000000 		.4byte	.LFE104-.LFB104
 29824 0158 00000000 		.4byte	.LFB105
 29825 015c 5C000000 		.4byte	.LFE105-.LFB105
 29826 0160 00000000 		.4byte	.LFB106
 29827 0164 C0000000 		.4byte	.LFE106-.LFB106
 29828 0168 00000000 		.4byte	0
 29829 016c 00000000 		.4byte	0
 29830              		.section	.debug_ranges,"",%progbits
 29831              	.Ldebug_ranges0:
 29832 0000 00000000 		.4byte	.LFB64
 29833 0004 DC040000 		.4byte	.LFE64
 29834 0008 00000000 		.4byte	.LFB65
 29835 000c 22000000 		.4byte	.LFE65
 29836 0010 00000000 		.4byte	.LFB66
 29837 0014 02010000 		.4byte	.LFE66
 29838 0018 00000000 		.4byte	.LFB67
 29839 001c 362F0000 		.4byte	.LFE67
 29840 0020 00000000 		.4byte	.LFB68
 29841 0024 08170000 		.4byte	.LFE68
 29842 0028 00000000 		.4byte	.LFB69
 29843 002c 18140000 		.4byte	.LFE69
 29844 0030 00000000 		.4byte	.LFB70
 29845 0034 F40D0000 		.4byte	.LFE70
 29846 0038 00000000 		.4byte	.LFB71
 29847 003c 88000000 		.4byte	.LFE71
 29848 0040 00000000 		.4byte	.LFB72
 29849 0044 AC1E0000 		.4byte	.LFE72
 29850 0048 00000000 		.4byte	.LFB73
 29851 004c B4030000 		.4byte	.LFE73
 29852 0050 00000000 		.4byte	.LFB74
 29853 0054 38120000 		.4byte	.LFE74
 29854 0058 00000000 		.4byte	.LFB75
 29855 005c C8000000 		.4byte	.LFE75
 29856 0060 00000000 		.4byte	.LFB76
 29857 0064 30010000 		.4byte	.LFE76
 29858 0068 00000000 		.4byte	.LFB77
 29859 006c 74030000 		.4byte	.LFE77
 29860 0070 00000000 		.4byte	.LFB78
 29861 0074 84000000 		.4byte	.LFE78
 29862 0078 00000000 		.4byte	.LFB79
 29863 007c 88000000 		.4byte	.LFE79
 29864 0080 00000000 		.4byte	.LFB80
 29865 0084 80000000 		.4byte	.LFE80
 29866 0088 00000000 		.4byte	.LFB81
 29867 008c 3E000000 		.4byte	.LFE81
 29868 0090 00000000 		.4byte	.LFB82
 29869 0094 2E000000 		.4byte	.LFE82
 29870 0098 00000000 		.4byte	.LFB83
 29871 009c 98000000 		.4byte	.LFE83
 29872 00a0 00000000 		.4byte	.LFB84
 29873 00a4 80000000 		.4byte	.LFE84
 29874 00a8 00000000 		.4byte	.LFB85
 29875 00ac 5C000000 		.4byte	.LFE85
 29876 00b0 00000000 		.4byte	.LFB86
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 630


 29877 00b4 CC050000 		.4byte	.LFE86
 29878 00b8 00000000 		.4byte	.LFB87
 29879 00bc 30020000 		.4byte	.LFE87
 29880 00c0 00000000 		.4byte	.LFB88
 29881 00c4 B4000000 		.4byte	.LFE88
 29882 00c8 00000000 		.4byte	.LFB89
 29883 00cc B4000000 		.4byte	.LFE89
 29884 00d0 00000000 		.4byte	.LFB90
 29885 00d4 B8000000 		.4byte	.LFE90
 29886 00d8 00000000 		.4byte	.LFB91
 29887 00dc 44020000 		.4byte	.LFE91
 29888 00e0 00000000 		.4byte	.LFB92
 29889 00e4 C0000000 		.4byte	.LFE92
 29890 00e8 00000000 		.4byte	.LFB93
 29891 00ec 5C000000 		.4byte	.LFE93
 29892 00f0 00000000 		.4byte	.LFB94
 29893 00f4 3C010000 		.4byte	.LFE94
 29894 00f8 00000000 		.4byte	.LFB95
 29895 00fc B8000000 		.4byte	.LFE95
 29896 0100 00000000 		.4byte	.LFB96
 29897 0104 5C000000 		.4byte	.LFE96
 29898 0108 00000000 		.4byte	.LFB97
 29899 010c 34000000 		.4byte	.LFE97
 29900 0110 00000000 		.4byte	.LFB98
 29901 0114 20000000 		.4byte	.LFE98
 29902 0118 00000000 		.4byte	.LFB99
 29903 011c 48000000 		.4byte	.LFE99
 29904 0120 00000000 		.4byte	.LFB100
 29905 0124 BC010000 		.4byte	.LFE100
 29906 0128 00000000 		.4byte	.LFB101
 29907 012c 60000000 		.4byte	.LFE101
 29908 0130 00000000 		.4byte	.LFB102
 29909 0134 98050000 		.4byte	.LFE102
 29910 0138 00000000 		.4byte	.LFB103
 29911 013c 8C000000 		.4byte	.LFE103
 29912 0140 00000000 		.4byte	.LFB104
 29913 0144 EC000000 		.4byte	.LFE104
 29914 0148 00000000 		.4byte	.LFB105
 29915 014c 5C000000 		.4byte	.LFE105
 29916 0150 00000000 		.4byte	.LFB106
 29917 0154 C0000000 		.4byte	.LFE106
 29918 0158 00000000 		.4byte	0
 29919 015c 00000000 		.4byte	0
 29920              		.section	.debug_line,"",%progbits
 29921              	.Ldebug_line0:
 29922 0000 A31B0000 		.section	.debug_str,"MS",%progbits,1
 29922      0200C001 
 29922      00000201 
 29922      FB0E0D00 
 29922      01010101 
 29923              	.LASF190:
 29924 0000 696E666F 		.ascii	"infoSend\000"
 29924      53656E64 
 29924      00
 29925              	.LASF241:
 29926 0009 69645F73 		.ascii	"id_str\000"
 29926      747200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 631


 29927              	.LASF25:
 29928 0010 73697A65 		.ascii	"sizetype\000"
 29928      74797065 
 29928      00
 29929              	.LASF33:
 29930 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 29930      494E4954 
 29930      5F4D454D 
 29930      00
 29931              	.LASF298:
 29932 0026 676C5F63 		.ascii	"gl_c\000"
 29932      00
 29933              	.LASF62:
 29934 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 29934      545F4D4F 
 29934      44455F45 
 29934      4D475F46 
 29934      4346535F 
 29935              	.LASF36:
 29936 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 29936      41435449 
 29936      56415445 
 29936      00
 29937              	.LASF176:
 29938 0050 75736572 		.ascii	"user\000"
 29938      00
 29939              	.LASF11:
 29940 0055 696E7433 		.ascii	"int32_t\000"
 29940      325F7400 
 29941              	.LASF312:
 29942 005d 675F7278 		.ascii	"g_rx\000"
 29942      00
 29943              	.LASF94:
 29944 0062 73745F64 		.ascii	"st_data\000"
 29944      61746100 
 29945              	.LASF310:
 29946 006a 675F656D 		.ascii	"g_emg_meas\000"
 29946      675F6D65 
 29946      617300
 29947              	.LASF272:
 29948 0075 77726974 		.ascii	"writeStatus\000"
 29948      65537461 
 29948      74757300 
 29949              	.LASF15:
 29950 0081 75696E74 		.ascii	"uint32\000"
 29950      333200
 29951              	.LASF343:
 29952 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 29952      7365745F 
 29952      62617564 
 29952      72617465 
 29952      00
 29953              	.LASF249:
 29954 0099 7370695F 		.ascii	"spi_read_delay_str_len\000"
 29954      72656164 
 29954      5F64656C 
 29954      61795F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 632


 29954      74725F6C 
 29955              	.LASF206:
 29956 00b0 7061636B 		.ascii	"packet_lenght\000"
 29956      65745F6C 
 29956      656E6768 
 29956      7400
 29957              	.LASF251:
 29958 00be 70726570 		.ascii	"prepare_generic_info\000"
 29958      6172655F 
 29958      67656E65 
 29958      7269635F 
 29958      696E666F 
 29959              	.LASF130:
 29960 00d3 706F735F 		.ascii	"pos_lim_inf\000"
 29960      6C696D5F 
 29960      696E6600 
 29961              	.LASF216:
 29962 00df 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 29962      4E445F4D 
 29962      4F544F52 
 29962      5F494458 
 29962      00
 29963              	.LASF291:
 29964 00f0 636D645F 		.ascii	"cmd_get_inputs\000"
 29964      6765745F 
 29964      696E7075 
 29964      747300
 29965              	.LASF61:
 29966 00ff 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 29966      545F4D4F 
 29966      44455F45 
 29966      4D475F46 
 29966      43465300 
 29967              	.LASF134:
 29968 0113 63757272 		.ascii	"curr_lookup\000"
 29968      5F6C6F6F 
 29968      6B757000 
 29969              	.LASF102:
 29970 011f 72657374 		.ascii	"rest_counter\000"
 29970      5F636F75 
 29970      6E746572 
 29970      00
 29971              	.LASF296:
 29972 012c 636D645F 		.ascii	"cmd_get_imu_readings\000"
 29972      6765745F 
 29972      696D755F 
 29972      72656164 
 29972      696E6773 
 29973              	.LASF244:
 29974 0141 69645F73 		.ascii	"id_str_len\000"
 29974      74725F6C 
 29974      656E00
 29975              	.LASF60:
 29976 014c 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 29976      545F4D4F 
 29976      44455F45 
 29976      4D475F49 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 633


 29976      4E544547 
 29977              	.LASF218:
 29978 0164 6D5F746D 		.ascii	"m_tmp\000"
 29978      7000
 29979              	.LASF16:
 29980 016a 696E7438 		.ascii	"int8\000"
 29980      00
 29981              	.LASF195:
 29982 016f 6765745F 		.ascii	"get_param_list\000"
 29982      70617261 
 29982      6D5F6C69 
 29982      737400
 29983              	.LASF295:
 29984 017e 636D645F 		.ascii	"cmd_get_emg\000"
 29984      6765745F 
 29984      656D6700 
 29985              	.LASF149:
 29986 018a 73745F65 		.ascii	"st_emg\000"
 29986      6D6700
 29987              	.LASF100:
 29988 0191 706F7369 		.ascii	"position_hist\000"
 29988      74696F6E 
 29988      5F686973 
 29988      7400
 29989              	.LASF183:
 29990 019f 74656D70 		.ascii	"temp_value\000"
 29990      5F76616C 
 29990      756500
 29991              	.LASF342:
 29992 01aa 72657375 		.ascii	"result\000"
 29992      6C7400
 29993              	.LASF97:
 29994 01b1 72656164 		.ascii	"ready\000"
 29994      7900
 29995              	.LASF146:
 29996 01b7 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 29996      6964785F 
 29996      7573655F 
 29996      666F725F 
 29996      636F6E74 
 29997              	.LASF106:
 29998 01cf 73745F64 		.ascii	"st_device\000"
 29998      65766963 
 29998      6500
 29999              	.LASF59:
 30000 01d9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 30000      545F4D4F 
 30000      44455F45 
 30000      4D475F50 
 30000      524F504F 
 30001              	.LASF111:
 30002 01f5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 30002      326E645F 
 30002      6D6F746F 
 30002      725F666C 
 30002      616700
 30003              	.LASF156:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 634


 30004 0208 72656164 		.ascii	"read_imu_flag\000"
 30004      5F696D75 
 30004      5F666C61 
 30004      6700
 30005              	.LASF316:
 30006 0216 74696D65 		.ascii	"timer_value\000"
 30006      725F7661 
 30006      6C756500 
 30007              	.LASF4:
 30008 0222 6C6F6E67 		.ascii	"long int\000"
 30008      20696E74 
 30008      00
 30009              	.LASF174:
 30010 022b 756E7573 		.ascii	"unused_bytes1\000"
 30010      65645F62 
 30010      79746573 
 30010      3100
 30011              	.LASF110:
 30012 0239 72657365 		.ascii	"reset_counters\000"
 30012      745F636F 
 30012      756E7465 
 30012      727300
 30013              	.LASF166:
 30014 0248 75736572 		.ascii	"user_emg\000"
 30014      5F656D67 
 30014      00
 30015              	.LASF279:
 30016 0251 7365745A 		.ascii	"setZeros\000"
 30016      65726F73 
 30016      00
 30017              	.LASF115:
 30018 025a 756E7573 		.ascii	"unused_bytes\000"
 30018      65645F62 
 30018      79746573 
 30018      00
 30019              	.LASF179:
 30020 0267 61636365 		.ascii	"accel_value\000"
 30020      6C5F7661 
 30020      6C756500 
 30021              	.LASF199:
 30022 0273 4E554D5F 		.ascii	"NUM_ITEMS\000"
 30022      4954454D 
 30022      5300
 30023              	.LASF98:
 30024 027d 73745F63 		.ascii	"st_counters\000"
 30024      6F756E74 
 30024      65727300 
 30025              	.LASF222:
 30026 0289 4D454D5F 		.ascii	"MEM_P\000"
 30026      5000
 30027              	.LASF19:
 30028 028f 666C6F61 		.ascii	"float32\000"
 30028      74333200 
 30029              	.LASF302:
 30030 0297 636D645F 		.ascii	"cmd_get_ADC_map\000"
 30030      6765745F 
 30030      4144435F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 635


 30030      6D617000 
 30031              	.LASF41:
 30032 02a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 30032      4745545F 
 30032      43555252 
 30032      454E5453 
 30032      00
 30033              	.LASF99:
 30034 02b8 656D675F 		.ascii	"emg_counter\000"
 30034      636F756E 
 30034      74657200 
 30035              	.LASF303:
 30036 02c4 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 30036      6765745F 
 30036      4144435F 
 30036      72617700 
 30037              	.LASF231:
 30038 02d4 6175785F 		.ascii	"aux_float2\000"
 30038      666C6F61 
 30038      743200
 30039              	.LASF290:
 30040 02df 636D645F 		.ascii	"cmd_ping\000"
 30040      70696E67 
 30040      00
 30041              	.LASF250:
 30042 02e8 7370695F 		.ascii	"spi_delay_menu_len\000"
 30042      64656C61 
 30042      795F6D65 
 30042      6E755F6C 
 30042      656E00
 30043              	.LASF229:
 30044 02fb 7365745F 		.ascii	"set_custom_param\000"
 30044      63757374 
 30044      6F6D5F70 
 30044      6172616D 
 30044      00
 30045              	.LASF0:
 30046 030c 7369676E 		.ascii	"signed char\000"
 30046      65642063 
 30046      68617200 
 30047              	.LASF165:
 30048 0318 75736572 		.ascii	"user_code_string\000"
 30048      5F636F64 
 30048      655F7374 
 30048      72696E67 
 30048      00
 30049              	.LASF184:
 30050 0329 73745F63 		.ascii	"st_calib\000"
 30050      616C6962 
 30050      00
 30051              	.LASF270:
 30052 0332 6D656D53 		.ascii	"memStore\000"
 30052      746F7265 
 30052      00
 30053              	.LASF334:
 30054 033b 73696E67 		.ascii	"single_imu_size\000"
 30054      6C655F69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 636


 30054      6D755F73 
 30054      697A6500 
 30055              	.LASF69:
 30056 034b 6D6F746F 		.ascii	"motor_supply_type\000"
 30056      725F7375 
 30056      70706C79 
 30056      5F747970 
 30056      6500
 30057              	.LASF324:
 30058 035d 4144435F 		.ascii	"ADC_buf\000"
 30058      62756600 
 30059              	.LASF255:
 30060 0365 73746570 		.ascii	"step\000"
 30060      00
 30061              	.LASF1:
 30062 036a 756E7369 		.ascii	"unsigned char\000"
 30062      676E6564 
 30062      20636861 
 30062      7200
 30063              	.LASF140:
 30064 0378 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 30064      72657665 
 30064      72735F6D 
 30064      6F746F72 
 30064      5F666C61 
 30065              	.LASF306:
 30066 038e 675F7265 		.ascii	"g_refNew\000"
 30066      664E6577 
 30066      00
 30067              	.LASF109:
 30068 0397 72696768 		.ascii	"right_left\000"
 30068      745F6C65 
 30068      667400
 30069              	.LASF29:
 30070 03a2 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 30070      53544F52 
 30070      455F4445 
 30070      4641554C 
 30070      545F5041 
 30071              	.LASF138:
 30072 03bb 656E636F 		.ascii	"encoder_line\000"
 30072      6465725F 
 30072      6C696E65 
 30072      00
 30073              	.LASF340:
 30074 03c8 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 30074      73657273 
 30074      5C4D6174 
 30074      7469615C 
 30074      446F6375 
 30075 03f6 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 30075      656E6572 
 30075      69632D46 
 30075      572D5053 
 30075      6F43355C 
 30076              	.LASF245:
 30077 0418 6E5F696D 		.ascii	"n_imu_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 637


 30077      755F7374 
 30077      725F6C65 
 30077      6E00
 30078              	.LASF248:
 30079 0426 696D755F 		.ascii	"imu_table_str_len\000"
 30079      7461626C 
 30079      655F7374 
 30079      725F6C65 
 30079      6E00
 30080              	.LASF268:
 30081 0438 76616C75 		.ascii	"value\000"
 30081      6500
 30082              	.LASF178:
 30083 043e 666C6167 		.ascii	"flags\000"
 30083      7300
 30084              	.LASF243:
 30085 0444 7370695F 		.ascii	"spi_read_delay_str\000"
 30085      72656164 
 30085      5F64656C 
 30085      61795F73 
 30085      747200
 30086              	.LASF37:
 30087 0457 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 30087      4745545F 
 30087      41435449 
 30087      56415445 
 30087      00
 30088              	.LASF22:
 30089 0468 63686172 		.ascii	"char\000"
 30089      00
 30090              	.LASF133:
 30091 046d 6D61785F 		.ascii	"max_step_pos\000"
 30091      73746570 
 30091      5F706F73 
 30091      00
 30092              	.LASF274:
 30093 047a 7265745F 		.ascii	"ret_val\000"
 30093      76616C00 
 30094              	.LASF228:
 30095 0482 6D656E75 		.ascii	"menu_idx\000"
 30095      5F696478 
 30095      00
 30096              	.LASF237:
 30097 048b 73746172 		.ascii	"start_byte\000"
 30097      745F6279 
 30097      746500
 30098              	.LASF234:
 30099 0496 6E756D5F 		.ascii	"num_mag_cal_params\000"
 30099      6D61675F 
 30099      63616C5F 
 30099      70617261 
 30099      6D7300
 30100              	.LASF139:
 30101 04a9 70776D5F 		.ascii	"pwm_rate_limiter\000"
 30101      72617465 
 30101      5F6C696D 
 30101      69746572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 638


 30101      00
 30102              	.LASF119:
 30103 04ba 6B5F645F 		.ascii	"k_d_c\000"
 30103      6300
 30104              	.LASF192:
 30105 04c0 7061636B 		.ascii	"packet_string\000"
 30105      65745F73 
 30105      7472696E 
 30105      6700
 30106              	.LASF144:
 30107 04ce 6D5F6D75 		.ascii	"m_mult\000"
 30107      6C7400
 30108              	.LASF118:
 30109 04d5 6B5F695F 		.ascii	"k_i_c\000"
 30109      6300
 30110              	.LASF271:
 30111 04db 64697370 		.ascii	"displacement\000"
 30111      6C616365 
 30111      6D656E74 
 30111      00
 30112              	.LASF265:
 30113 04e8 64617461 		.ascii	"data_length\000"
 30113      5F6C656E 
 30113      67746800 
 30114              	.LASF131:
 30115 04f4 706F735F 		.ascii	"pos_lim_sup\000"
 30115      6C696D5F 
 30115      73757000 
 30116              	.LASF152:
 30117 0500 656D675F 		.ascii	"emg_speed\000"
 30117      73706565 
 30117      6400
 30118              	.LASF170:
 30119 050a 72657374 		.ascii	"rest_vel\000"
 30119      5F76656C 
 30119      00
 30120              	.LASF205:
 30121 0513 7061636B 		.ascii	"packet_data\000"
 30121      65745F64 
 30121      61746100 
 30122              	.LASF330:
 30123 051f 7046696C 		.ascii	"pFile\000"
 30123      6500
 30124              	.LASF163:
 30125 0525 4144435F 		.ascii	"ADC_conf\000"
 30125      636F6E66 
 30125      00
 30126              	.LASF262:
 30127 052e 636F6D6D 		.ascii	"commWrite\000"
 30127      57726974 
 30127      6500
 30128              	.LASF273:
 30129 0538 70616765 		.ascii	"pages\000"
 30129      7300
 30130              	.LASF277:
 30131 053e 6D656D49 		.ascii	"memInit\000"
 30131      6E697400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 639


 30132              	.LASF121:
 30133 0546 6B5F695F 		.ascii	"k_i_dl\000"
 30133      646C00
 30134              	.LASF38:
 30135 054d 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 30135      5345545F 
 30135      494E5055 
 30135      545300
 30136              	.LASF95:
 30137 055c 62756666 		.ascii	"buffer\000"
 30137      657200
 30138              	.LASF123:
 30139 0563 6B5F705F 		.ascii	"k_p_c_dl\000"
 30139      635F646C 
 30139      00
 30140              	.LASF280:
 30141 056c 636D645F 		.ascii	"cmd_get_measurements\000"
 30141      6765745F 
 30141      6D656173 
 30141      7572656D 
 30141      656E7473 
 30142              	.LASF187:
 30143 0581 73706565 		.ascii	"speed\000"
 30143      6400
 30144              	.LASF191:
 30145 0587 72785F63 		.ascii	"rx_cmd\000"
 30145      6D6400
 30146              	.LASF84:
 30147 058e 54595045 		.ascii	"TYPE_DOUBLE\000"
 30147      5F444F55 
 30147      424C4500 
 30148              	.LASF308:
 30149 059a 675F6D65 		.ascii	"g_meas\000"
 30149      617300
 30150              	.LASF329:
 30151 05a1 456E636F 		.ascii	"Encoder_Check\000"
 30151      6465725F 
 30151      43686563 
 30151      6B00
 30152              	.LASF284:
 30153 05af 6C617374 		.ascii	"last_aux_int16\000"
 30153      5F617578 
 30153      5F696E74 
 30153      313600
 30154              	.LASF73:
 30155 05be 41434B5F 		.ascii	"ACK_ERROR\000"
 30155      4552524F 
 30155      5200
 30156              	.LASF326:
 30157 05c8 64617461 		.ascii	"data_encoder_raw\000"
 30157      5F656E63 
 30157      6F646572 
 30157      5F726177 
 30157      00
 30158              	.LASF57:
 30159 05d9 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 30159      545F4D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 640


 30159      44455F45 
 30159      58544552 
 30159      4E414C00 
 30160              	.LASF220:
 30161 05ed 696E6465 		.ascii	"index\000"
 30161      7800
 30162              	.LASF171:
 30163 05f3 72657374 		.ascii	"rest_position_flag\000"
 30163      5F706F73 
 30163      6974696F 
 30163      6E5F666C 
 30163      616700
 30164              	.LASF335:
 30165 0606 675F696D 		.ascii	"g_imu\000"
 30165      7500
 30166              	.LASF124:
 30167 060c 6B5F695F 		.ascii	"k_i_c_dl\000"
 30167      635F646C 
 30167      00
 30168              	.LASF240:
 30169 0615 6D61675F 		.ascii	"mag_param_str\000"
 30169      70617261 
 30169      6D5F7374 
 30169      7200
 30170              	.LASF323:
 30171 0623 72657365 		.ascii	"reset_PSoC_flag\000"
 30171      745F5053 
 30171      6F435F66 
 30171      6C616700 
 30172              	.LASF85:
 30173 0633 54595045 		.ascii	"TYPE_STRING\000"
 30173      5F535452 
 30173      494E4700 
 30174              	.LASF68:
 30175 063f 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 30175      5F414E44 
 30175      5F504F53 
 30175      5F434F4E 
 30175      54524F4C 
 30176              	.LASF28:
 30177 0654 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 30177      53544F52 
 30177      455F5041 
 30177      52414D53 
 30177      00
 30178              	.LASF202:
 30179 0665 50415241 		.ascii	"PARAMS_STR\000"
 30179      4D535F53 
 30179      545200
 30180              	.LASF185:
 30181 0670 656E6162 		.ascii	"enabled\000"
 30181      6C656400 
 30182              	.LASF7:
 30183 0678 6C6F6E67 		.ascii	"long unsigned int\000"
 30183      20756E73 
 30183      69676E65 
 30183      6420696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 641


 30183      7400
 30184              	.LASF104:
 30185 068a 746F7461 		.ascii	"total_time_on\000"
 30185      6C5F7469 
 30185      6D655F6F 
 30185      6E00
 30186              	.LASF32:
 30187 0698 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 30187      424F4F54 
 30187      4C4F4144 
 30187      455200
 30188              	.LASF282:
 30189 06a7 636D645F 		.ascii	"cmd_get_accelerations\000"
 30189      6765745F 
 30189      61636365 
 30189      6C657261 
 30189      74696F6E 
 30190              	.LASF105:
 30191 06bd 746F7461 		.ascii	"total_time_rest\000"
 30191      6C5F7469 
 30191      6D655F72 
 30191      65737400 
 30192              	.LASF194:
 30193 06cd 7374725F 		.ascii	"str_sd_data\000"
 30193      73645F64 
 30193      61746100 
 30194              	.LASF126:
 30195 06d9 61637469 		.ascii	"activ\000"
 30195      7600
 30196              	.LASF204:
 30197 06df 4D454E55 		.ascii	"MENU_STR\000"
 30197      5F535452 
 30197      00
 30198              	.LASF143:
 30199 06e8 6D5F6F66 		.ascii	"m_off\000"
 30199      6600
 30200              	.LASF74:
 30201 06ee 41434B5F 		.ascii	"ACK_OK\000"
 30201      4F4B00
 30202              	.LASF76:
 30203 06f5 54595045 		.ascii	"TYPE_FLAG\000"
 30203      5F464C41 
 30203      4700
 30204              	.LASF182:
 30205 06ff 71756174 		.ascii	"quat_value\000"
 30205      5F76616C 
 30205      756500
 30206              	.LASF236:
 30207 070a 7061636B 		.ascii	"packet_length\000"
 30207      65745F6C 
 30207      656E6774 
 30207      6800
 30208              	.LASF168:
 30209 0718 72657374 		.ascii	"rest_pos\000"
 30209      5F706F73 
 30209      00
 30210              	.LASF87:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 642


 30211 0721 63757272 		.ascii	"curr\000"
 30211      00
 30212              	.LASF136:
 30213 0726 696E7075 		.ascii	"input_mode\000"
 30213      745F6D6F 
 30213      646500
 30214              	.LASF66:
 30215 0731 434F4E54 		.ascii	"CONTROL_PWM\000"
 30215      524F4C5F 
 30215      50574D00 
 30216              	.LASF43:
 30217 073d 434D445F 		.ascii	"CMD_GET_EMG\000"
 30217      4745545F 
 30217      454D4700 
 30218              	.LASF278:
 30219 0749 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 30219      6E69745F 
 30219      536F6674 
 30219      48616E64 
 30219      50726F00 
 30220              	.LASF31:
 30221 075d 434D445F 		.ascii	"CMD_GET_INFO\000"
 30221      4745545F 
 30221      494E464F 
 30221      00
 30222              	.LASF232:
 30223 076a 6765745F 		.ascii	"get_IMU_param_list\000"
 30223      494D555F 
 30223      70617261 
 30223      6D5F6C69 
 30223      737400
 30224              	.LASF299:
 30225 077d 73696E67 		.ascii	"single_packet\000"
 30225      6C655F70 
 30225      61636B65 
 30225      7400
 30226              	.LASF235:
 30227 078b 66697273 		.ascii	"first_imu_parameter\000"
 30227      745F696D 
 30227      755F7061 
 30227      72616D65 
 30227      74657200 
 30228              	.LASF42:
 30229 079f 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 30229      4745545F 
 30229      43555252 
 30229      5F414E44 
 30229      5F4D4541 
 30230              	.LASF338:
 30231 07b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 30231      43313120 
 30231      352E342E 
 30231      31203230 
 30231      31363036 
 30232 07e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 30232      20726576 
 30232      6973696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 643


 30232      6E203233 
 30232      37373135 
 30233 081b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 30233      66756E63 
 30233      74696F6E 
 30233      2D736563 
 30233      74696F6E 
 30234              	.LASF89:
 30235 0843 73745F72 		.ascii	"st_ref\000"
 30235      656600
 30236              	.LASF47:
 30237 084a 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 30237      5345545F 
 30237      43554646 
 30237      5F494E50 
 30237      55545300 
 30238              	.LASF167:
 30239 085e 73745F53 		.ascii	"st_SH_spec\000"
 30239      485F7370 
 30239      656300
 30240              	.LASF315:
 30241 0869 63616C69 		.ascii	"calib\000"
 30241      6200
 30242              	.LASF6:
 30243 086f 5F5F7569 		.ascii	"__uint32_t\000"
 30243      6E743332 
 30243      5F7400
 30244              	.LASF8:
 30245 087a 6C6F6E67 		.ascii	"long long int\000"
 30245      206C6F6E 
 30245      6720696E 
 30245      7400
 30246              	.LASF64:
 30247 0888 53485F63 		.ascii	"SH_control_mode\000"
 30247      6F6E7472 
 30247      6F6C5F6D 
 30247      6F646500 
 30248              	.LASF78:
 30249 0898 54595045 		.ascii	"TYPE_UINT8\000"
 30249      5F55494E 
 30249      543800
 30250              	.LASF288:
 30251 08a3 636D645F 		.ascii	"cmd_get_currents\000"
 30251      6765745F 
 30251      63757272 
 30251      656E7473 
 30251      00
 30252              	.LASF71:
 30253 08b4 4D41584F 		.ascii	"MAXON_12V\000"
 30253      4E5F3132 
 30253      5600
 30254              	.LASF322:
 30255 08be 6368616E 		.ascii	"change_ext_ref_flag\000"
 30255      67655F65 
 30255      78745F72 
 30255      65665F66 
 30255      6C616700 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 644


 30256              	.LASF21:
 30257 08d2 646F7562 		.ascii	"double\000"
 30257      6C6500
 30258              	.LASF142:
 30259 08d9 456E635F 		.ascii	"Enc_raw_read_conf\000"
 30259      7261775F 
 30259      72656164 
 30259      5F636F6E 
 30259      6600
 30260              	.LASF188:
 30261 08eb 72657065 		.ascii	"repetitions\000"
 30261      74697469 
 30261      6F6E7300 
 30262              	.LASF132:
 30263 08f7 6D61785F 		.ascii	"max_step_neg\000"
 30263      73746570 
 30263      5F6E6567 
 30263      00
 30264              	.LASF321:
 30265 0904 72657365 		.ascii	"reset_last_value_flag\000"
 30265      745F6C61 
 30265      73745F76 
 30265      616C7565 
 30265      5F666C61 
 30266              	.LASF203:
 30267 091a 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 30267      4F4D5F50 
 30267      4152414D 
 30267      5F474554 
 30267      00
 30268              	.LASF20:
 30269 092b 666C6F61 		.ascii	"float\000"
 30269      7400
 30270              	.LASF158:
 30271 0931 494D555F 		.ascii	"IMU_conf\000"
 30271      636F6E66 
 30271      00
 30272              	.LASF221:
 30273 093a 50415241 		.ascii	"PARAM_IDX\000"
 30273      4D5F4944 
 30273      5800
 30274              	.LASF116:
 30275 0944 73745F6D 		.ascii	"st_motor\000"
 30275      6F746F72 
 30275      00
 30276              	.LASF217:
 30277 094d 6D5F6164 		.ascii	"m_addr\000"
 30277      647200
 30278              	.LASF314:
 30279 0954 635F6D65 		.ascii	"c_mem\000"
 30279      6D00
 30280              	.LASF264:
 30281 095a 64617461 		.ascii	"data_array\000"
 30281      5F617272 
 30281      617900
 30282              	.LASF10:
 30283 0965 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 645


 30283      676E6564 
 30283      20696E74 
 30283      00
 30284              	.LASF267:
 30285 0972 73656E64 		.ascii	"sendAcknowledgment\000"
 30285      41636B6E 
 30285      6F776C65 
 30285      64676D65 
 30285      6E7400
 30286              	.LASF257:
 30287 0985 70726570 		.ascii	"prepare_SD_legend\000"
 30287      6172655F 
 30287      53445F6C 
 30287      6567656E 
 30287      6400
 30288              	.LASF336:
 30289 0997 4D616743 		.ascii	"MagCal\000"
 30289      616C00
 30290              	.LASF55:
 30291 099e 53485F63 		.ascii	"SH_command\000"
 30291      6F6D6D61 
 30291      6E6400
 30292              	.LASF80:
 30293 09a9 54595045 		.ascii	"TYPE_UINT16\000"
 30293      5F55494E 
 30293      54313600 
 30294              	.LASF173:
 30295 09b5 666C6167 		.ascii	"flag\000"
 30295      00
 30296              	.LASF283:
 30297 09ba 636D645F 		.ascii	"cmd_set_inputs\000"
 30297      7365745F 
 30297      696E7075 
 30297      747300
 30298              	.LASF137:
 30299 09c9 636F6E74 		.ascii	"control_mode\000"
 30299      726F6C5F 
 30299      6D6F6465 
 30299      00
 30300              	.LASF293:
 30301 09d6 6F66665F 		.ascii	"off_1\000"
 30301      3100
 30302              	.LASF58:
 30303 09dc 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 30303      545F4D4F 
 30303      44455F45 
 30303      4E434F44 
 30303      45523300 
 30304              	.LASF51:
 30305 09f0 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 30305      4745545F 
 30305      454E434F 
 30305      4445525F 
 30305      434F4E46 
 30306              	.LASF155:
 30307 0a05 73745F69 		.ascii	"st_imu\000"
 30307      6D7500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 646


 30308              	.LASF286:
 30309 0a0c 636D645F 		.ascii	"cmd_get_activate\000"
 30309      6765745F 
 30309      61637469 
 30309      76617465 
 30309      00
 30310              	.LASF263:
 30311 0a1d 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 30311      57726974 
 30311      655F746F 
 30311      5F637566 
 30311      6600
 30312              	.LASF208:
 30313 0a2f 73747269 		.ascii	"string_lenght\000"
 30313      6E675F6C 
 30313      656E6768 
 30313      7400
 30314              	.LASF83:
 30315 0a3d 54595045 		.ascii	"TYPE_FLOAT\000"
 30315      5F464C4F 
 30315      415400
 30316              	.LASF225:
 30317 0a48 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 30317      4F4D5F50 
 30317      4152414D 
 30317      5F534554 
 30317      5F4C4953 
 30318              	.LASF200:
 30319 0a5e 4E554D5F 		.ascii	"NUM_STRUCT\000"
 30319      53545255 
 30319      435400
 30320              	.LASF230:
 30321 0a69 6175785F 		.ascii	"aux_uchar\000"
 30321      75636861 
 30321      7200
 30322              	.LASF93:
 30323 0a73 6164645F 		.ascii	"add_emg\000"
 30323      656D6700 
 30324              	.LASF79:
 30325 0a7b 54595045 		.ascii	"TYPE_INT16\000"
 30325      5F494E54 
 30325      313600
 30326              	.LASF212:
 30327 0a86 6175785F 		.ascii	"aux_uint16\000"
 30327      75696E74 
 30327      313600
 30328              	.LASF150:
 30329 0a91 656D675F 		.ascii	"emg_threshold\000"
 30329      74687265 
 30329      73686F6C 
 30329      6400
 30330              	.LASF46:
 30331 0a9f 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 30331      4745545F 
 30331      43555252 
 30331      5F444946 
 30331      4600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 647


 30332              	.LASF101:
 30333 0ab1 63757272 		.ascii	"current_hist\000"
 30333      656E745F 
 30333      68697374 
 30333      00
 30334              	.LASF67:
 30335 0abe 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 30335      524F4C5F 
 30335      43555252 
 30335      454E5400 
 30336              	.LASF24:
 30337 0ace 6C6F6E67 		.ascii	"long double\000"
 30337      20646F75 
 30337      626C6500 
 30338              	.LASF82:
 30339 0ada 54595045 		.ascii	"TYPE_UINT32\000"
 30339      5F55494E 
 30339      54333200 
 30340              	.LASF92:
 30341 0ae6 73745F65 		.ascii	"st_emg_meas\000"
 30341      6D675F6D 
 30341      65617300 
 30342              	.LASF197:
 30343 0af2 5641525F 		.ascii	"VAR_P\000"
 30343      5000
 30344              	.LASF224:
 30345 0af8 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 30345      4F4D5F50 
 30345      4152414D 
 30345      5F474554 
 30345      5F4C4953 
 30346              	.LASF147:
 30347 0b0e 6D6F746F 		.ascii	"motor_handle_ratio\000"
 30347      725F6861 
 30347      6E646C65 
 30347      5F726174 
 30347      696F00
 30348              	.LASF266:
 30349 0b21 63686563 		.ascii	"checksum\000"
 30349      6B73756D 
 30349      00
 30350              	.LASF307:
 30351 0b2a 675F7265 		.ascii	"g_refOld\000"
 30351      664F6C64 
 30351      00
 30352              	.LASF35:
 30353 0b33 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 30353      48414E44 
 30353      5F43414C 
 30353      49425241 
 30353      544500
 30354              	.LASF180:
 30355 0b46 6779726F 		.ascii	"gyro_value\000"
 30355      5F76616C 
 30355      756500
 30356              	.LASF160:
 30357 0b51 63757272 		.ascii	"curr_time\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 648


 30357      5F74696D 
 30357      6500
 30358              	.LASF145:
 30359 0b5b 646F7562 		.ascii	"double_encoder_on_off\000"
 30359      6C655F65 
 30359      6E636F64 
 30359      65725F6F 
 30359      6E5F6F66 
 30360              	.LASF157:
 30361 0b71 5350495F 		.ascii	"SPI_read_delay\000"
 30361      72656164 
 30361      5F64656C 
 30361      617900
 30362              	.LASF72:
 30363 0b80 61636B6E 		.ascii	"acknowledgment_values\000"
 30363      6F776C65 
 30363      64676D65 
 30363      6E745F76 
 30363      616C7565 
 30364              	.LASF215:
 30365 0b96 4D4F544F 		.ascii	"MOTOR_IDX\000"
 30365      525F4944 
 30365      5800
 30366              	.LASF276:
 30367 0ba0 6D656D52 		.ascii	"memRestore\000"
 30367      6573746F 
 30367      726500
 30368              	.LASF238:
 30369 0bab 6E5F696D 		.ascii	"n_imu_str\000"
 30369      755F7374 
 30369      7200
 30370              	.LASF252:
 30371 0bb5 696E666F 		.ascii	"info_string\000"
 30371      5F737472 
 30371      696E6700 
 30372              	.LASF258:
 30373 0bc1 70726570 		.ascii	"prepare_SD_info\000"
 30373      6172655F 
 30373      53445F69 
 30373      6E666F00 
 30374              	.LASF9:
 30375 0bd1 6C6F6E67 		.ascii	"long long unsigned int\000"
 30375      206C6F6E 
 30375      6720756E 
 30375      7369676E 
 30375      65642069 
 30376              	.LASF81:
 30377 0be8 54595045 		.ascii	"TYPE_INT32\000"
 30377      5F494E54 
 30377      333200
 30378              	.LASF214:
 30379 0bf3 6175785F 		.ascii	"aux_uint32\000"
 30379      75696E74 
 30379      333200
 30380              	.LASF96:
 30381 0bfe 6C656E67 		.ascii	"length\000"
 30381      746800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 649


 30382              	.LASF226:
 30383 0c05 55534552 		.ascii	"USER_ID_PARAM\000"
 30383      5F49445F 
 30383      50415241 
 30383      4D00
 30384              	.LASF177:
 30385 0c13 73745F69 		.ascii	"st_imu_data\000"
 30385      6D755F64 
 30385      61746100 
 30386              	.LASF181:
 30387 0c1f 6D61675F 		.ascii	"mag_value\000"
 30387      76616C75 
 30387      6500
 30388              	.LASF88:
 30389 0c29 6F6E6F66 		.ascii	"onoff\000"
 30389      6600
 30390              	.LASF45:
 30391 0c2f 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 30391      4745545F 
 30391      41434345 
 30391      4C00
 30392              	.LASF281:
 30393 0c3d 636D645F 		.ascii	"cmd_get_velocities\000"
 30393      6765745F 
 30393      76656C6F 
 30393      63697469 
 30393      657300
 30394              	.LASF275:
 30395 0c50 6D656D52 		.ascii	"memRecall\000"
 30395      6563616C 
 30395      6C00
 30396              	.LASF317:
 30397 0c5a 74696D65 		.ascii	"timer_value0\000"
 30397      725F7661 
 30397      6C756530 
 30397      00
 30398              	.LASF48:
 30399 0c67 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 30399      5345545F 
 30399      42415544 
 30399      52415445 
 30399      00
 30400              	.LASF117:
 30401 0c78 6B5F705F 		.ascii	"k_p_c\000"
 30401      6300
 30402              	.LASF242:
 30403 0c7e 696D755F 		.ascii	"imu_table_str\000"
 30403      7461626C 
 30403      655F7374 
 30403      7200
 30404              	.LASF318:
 30405 0c8c 6465765F 		.ascii	"dev_tension\000"
 30405      74656E73 
 30405      696F6E00 
 30406              	.LASF128:
 30407 0c98 6D6F746F 		.ascii	"motor_driver_type\000"
 30407      725F6472 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 650


 30407      69766572 
 30407      5F747970 
 30407      6500
 30408              	.LASF294:
 30409 0caa 6D756C74 		.ascii	"mult_1\000"
 30409      5F3100
 30410              	.LASF23:
 30411 0cb1 72656738 		.ascii	"reg8\000"
 30411      00
 30412              	.LASF260:
 30413 0cb6 636F6D6D 		.ascii	"commWrite_old_id\000"
 30413      57726974 
 30413      655F6F6C 
 30413      645F6964 
 30413      00
 30414              	.LASF219:
 30415 0cc7 6D616E61 		.ascii	"manage_param_list\000"
 30415      67655F70 
 30415      6172616D 
 30415      5F6C6973 
 30415      7400
 30416              	.LASF30:
 30417 0cd9 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 30417      52455354 
 30417      4F52455F 
 30417      50415241 
 30417      4D5300
 30418              	.LASF256:
 30419 0cec 70726570 		.ascii	"prepare_SD_param_info\000"
 30419      6172655F 
 30419      53445F70 
 30419      6172616D 
 30419      5F696E66 
 30420              	.LASF254:
 30421 0d02 70726570 		.ascii	"prepare_counter_info\000"
 30421      6172655F 
 30421      636F756E 
 30421      7465725F 
 30421      696E666F 
 30422              	.LASF261:
 30423 0d17 6F6C645F 		.ascii	"old_id\000"
 30423      696400
 30424              	.LASF341:
 30425 0d1e 5F5F5245 		.ascii	"__REV16\000"
 30425      56313600 
 30426              	.LASF327:
 30427 0d26 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 30427      636F6465 
 30427      725F4C69 
 30427      6E655F43 
 30427      6F6E6E65 
 30428              	.LASF114:
 30429 0d3f 6465765F 		.ascii	"dev_type\000"
 30429      74797065 
 30429      00
 30430              	.LASF164:
 30431 0d48 73745F75 		.ascii	"st_user\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 651


 30431      73657200 
 30432              	.LASF287:
 30433 0d50 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 30433      6765745F 
 30433      63757272 
 30433      5F616E64 
 30433      5F6D6561 
 30434              	.LASF148:
 30435 0d66 67656172 		.ascii	"gears_params\000"
 30435      735F7061 
 30435      72616D73 
 30435      00
 30436              	.LASF159:
 30437 0d73 73745F65 		.ascii	"st_expansion\000"
 30437      7870616E 
 30437      73696F6E 
 30437      00
 30438              	.LASF153:
 30439 0d80 656D675F 		.ascii	"emg_calibration_flag\000"
 30439      63616C69 
 30439      62726174 
 30439      696F6E5F 
 30439      666C6167 
 30440              	.LASF90:
 30441 0d95 73745F6D 		.ascii	"st_meas\000"
 30441      65617300 
 30442              	.LASF54:
 30443 0d9d 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 30443      4745545F 
 30443      4144435F 
 30443      52415700 
 30444              	.LASF70:
 30445 0dad 4D41584F 		.ascii	"MAXON_24V\000"
 30445      4E5F3234 
 30445      5600
 30446              	.LASF63:
 30447 0db7 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 30447      545F4D4F 
 30447      44455F45 
 30447      4D475F50 
 30447      524F504F 
 30448              	.LASF50:
 30449 0dd6 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 30449      4745545F 
 30449      494D555F 
 30449      50415241 
 30449      4D00
 30450              	.LASF52:
 30451 0de8 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 30451      4745545F 
 30451      454E434F 
 30451      4445525F 
 30451      52415700 
 30452              	.LASF292:
 30453 0dfc 636D645F 		.ascii	"cmd_store_params\000"
 30453      73746F72 
 30453      655F7061 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 652


 30453      72616D73 
 30453      00
 30454              	.LASF313:
 30455 0e0d 675F6D65 		.ascii	"g_mem\000"
 30455      6D00
 30456              	.LASF40:
 30457 0e13 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 30457      4745545F 
 30457      4D454153 
 30457      5552454D 
 30457      454E5453 
 30458              	.LASF301:
 30459 0e28 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 30459      6765745F 
 30459      656E636F 
 30459      6465725F 
 30459      72617700 
 30460              	.LASF13:
 30461 0e3c 75696E74 		.ascii	"uint8\000"
 30461      3800
 30462              	.LASF189:
 30463 0e42 636F6D6D 		.ascii	"commProcess\000"
 30463      50726F63 
 30463      65737300 
 30464              	.LASF2:
 30465 0e4e 73686F72 		.ascii	"short int\000"
 30465      7420696E 
 30465      7400
 30466              	.LASF246:
 30467 0e58 6964735F 		.ascii	"ids_str_len\000"
 30467      7374725F 
 30467      6C656E00 
 30468              	.LASF122:
 30469 0e64 6B5F645F 		.ascii	"k_d_dl\000"
 30469      646C00
 30470              	.LASF207:
 30471 0e6b 6964785F 		.ascii	"idx_menu\000"
 30471      6D656E75 
 30471      00
 30472              	.LASF175:
 30473 0e74 6D6F746F 		.ascii	"motor\000"
 30473      7200
 30474              	.LASF331:
 30475 0e7a 4E5F494D 		.ascii	"N_IMU_Connected\000"
 30475      555F436F 
 30475      6E6E6563 
 30475      74656400 
 30476              	.LASF39:
 30477 0e8a 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 30477      4745545F 
 30477      494E5055 
 30477      545300
 30478              	.LASF107:
 30479 0e99 68775F6D 		.ascii	"hw_maint_date\000"
 30479      61696E74 
 30479      5F646174 
 30479      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 653


 30480              	.LASF239:
 30481 0ea7 6964735F 		.ascii	"ids_str\000"
 30481      73747200 
 30482              	.LASF53:
 30483 0eaf 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 30483      4745545F 
 30483      4144435F 
 30483      434F4E46 
 30483      00
 30484              	.LASF27:
 30485 0ec0 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 30485      5345545F 
 30485      5A45524F 
 30485      5300
 30486              	.LASF247:
 30487 0ece 6D61675F 		.ascii	"mag_param_str_len\000"
 30487      70617261 
 30487      6D5F7374 
 30487      725F6C65 
 30487      6E00
 30488              	.LASF233:
 30489 0ee0 6E756D5F 		.ascii	"num_imus_id_params\000"
 30489      696D7573 
 30489      5F69645F 
 30489      70617261 
 30489      6D7300
 30490              	.LASF211:
 30491 0ef3 6175785F 		.ascii	"aux_int16\000"
 30491      696E7431 
 30491      3600
 30492              	.LASF337:
 30493 0efd 45455052 		.ascii	"EEPROM_ADDR\000"
 30493      4F4D5F41 
 30493      44445200 
 30494              	.LASF108:
 30495 0f09 73746174 		.ascii	"stats_period_begin_date\000"
 30495      735F7065 
 30495      72696F64 
 30495      5F626567 
 30495      696E5F64 
 30496              	.LASF333:
 30497 0f21 696D7573 		.ascii	"imus_data_size\000"
 30497      5F646174 
 30497      615F7369 
 30497      7A6500
 30498              	.LASF304:
 30499 0f30 49544D5F 		.ascii	"ITM_RxBuffer\000"
 30499      52784275 
 30499      66666572 
 30499      00
 30500              	.LASF44:
 30501 0f3d 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 30501      4745545F 
 30501      56454C4F 
 30501      43495449 
 30501      455300
 30502              	.LASF320:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 654


 30503 0f50 706F775F 		.ascii	"pow_tension\000"
 30503      74656E73 
 30503      696F6E00 
 30504              	.LASF34:
 30505 0f5c 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 30505      4745545F 
 30505      50415241 
 30505      4D5F4C49 
 30505      535400
 30506              	.LASF75:
 30507 0f6f 64617461 		.ascii	"data_types\000"
 30507      5F747970 
 30507      657300
 30508              	.LASF17:
 30509 0f7a 696E7431 		.ascii	"int16\000"
 30509      3600
 30510              	.LASF161:
 30511 0f80 72656164 		.ascii	"read_exp_port_flag\000"
 30511      5F657870 
 30511      5F706F72 
 30511      745F666C 
 30511      616700
 30512              	.LASF154:
 30513 0f93 73776974 		.ascii	"switch_emg\000"
 30513      63685F65 
 30513      6D6700
 30514              	.LASF127:
 30515 0f9e 61637469 		.ascii	"activate_pwm_rescaling\000"
 30515      76617465 
 30515      5F70776D 
 30515      5F726573 
 30515      63616C69 
 30516              	.LASF120:
 30517 0fb5 6B5F705F 		.ascii	"k_p_dl\000"
 30517      646C00
 30518              	.LASF91:
 30519 0fbc 65737469 		.ascii	"estim_curr\000"
 30519      6D5F6375 
 30519      727200
 30520              	.LASF319:
 30521 0fc7 6465765F 		.ascii	"dev_pwm_limit\000"
 30521      70776D5F 
 30521      6C696D69 
 30521      7400
 30522              	.LASF162:
 30523 0fd5 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 30523      5F414443 
 30523      5F73656E 
 30523      736F7273 
 30523      5F706F72 
 30524              	.LASF328:
 30525 0ff0 456E636F 		.ascii	"Encoder_Value\000"
 30525      6465725F 
 30525      56616C75 
 30525      6500
 30526              	.LASF300:
 30527 0ffe 636D645F 		.ascii	"cmd_get_encoder_map\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 655


 30527      6765745F 
 30527      656E636F 
 30527      6465725F 
 30527      6D617000 
 30528              	.LASF113:
 30529 1012 75736572 		.ascii	"user_id\000"
 30529      5F696400 
 30530              	.LASF12:
 30531 101a 75696E74 		.ascii	"uint32_t\000"
 30531      33325F74 
 30531      00
 30532              	.LASF210:
 30533 1023 6175785F 		.ascii	"aux_float\000"
 30533      666C6F61 
 30533      7400
 30534              	.LASF332:
 30535 102d 494D555F 		.ascii	"IMU_connected\000"
 30535      636F6E6E 
 30535      65637465 
 30535      6400
 30536              	.LASF201:
 30537 103b 4E554D5F 		.ascii	"NUM_MENU\000"
 30537      4D454E55 
 30537      00
 30538              	.LASF213:
 30539 1044 6175785F 		.ascii	"aux_int32\000"
 30539      696E7433 
 30539      3200
 30540              	.LASF112:
 30541 104e 62617564 		.ascii	"baud_rate\000"
 30541      5F726174 
 30541      6500
 30542              	.LASF289:
 30543 1058 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 30543      6765745F 
 30543      63757272 
 30543      656E7473 
 30543      5F666F72 
 30544              	.LASF196:
 30545 1072 696E666F 		.ascii	"info_type\000"
 30545      5F747970 
 30545      6500
 30546              	.LASF49:
 30547 107c 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 30547      4745545F 
 30547      494D555F 
 30547      52454144 
 30547      494E4753 
 30548              	.LASF269:
 30549 1091 4C435243 		.ascii	"LCRChecksum\000"
 30549      6865636B 
 30549      73756D00 
 30550              	.LASF297:
 30551 109d 6B5F696D 		.ascii	"k_imu\000"
 30551      7500
 30552              	.LASF3:
 30553 10a3 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 656


 30553      7420756E 
 30553      7369676E 
 30553      65642069 
 30553      6E7400
 30554              	.LASF141:
 30555 10b6 73745F65 		.ascii	"st_encoder\000"
 30555      6E636F64 
 30555      657200
 30556              	.LASF253:
 30557 10c1 454E435F 		.ascii	"ENC_L\000"
 30557      4C00
 30558              	.LASF172:
 30559 10c7 73745F65 		.ascii	"st_eeprom\000"
 30559      6570726F 
 30559      6D00
 30560              	.LASF198:
 30561 10d1 54595045 		.ascii	"TYPES\000"
 30561      5300
 30562              	.LASF305:
 30563 10d7 675F7265 		.ascii	"g_ref\000"
 30563      6600
 30564              	.LASF18:
 30565 10dd 696E7433 		.ascii	"int32\000"
 30565      3200
 30566              	.LASF325:
 30567 10e3 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 30567      4F465F41 
 30567      4E414C4F 
 30567      475F494E 
 30567      50555453 
 30568              	.LASF193:
 30569 10f8 696E666F 		.ascii	"infoGet\000"
 30569      47657400 
 30570              	.LASF86:
 30571 1100 46535F46 		.ascii	"FS_FILE\000"
 30571      494C4500 
 30572              	.LASF129:
 30573 1108 706F735F 		.ascii	"pos_lim_flag\000"
 30573      6C696D5F 
 30573      666C6167 
 30573      00
 30574              	.LASF309:
 30575 1115 675F6D65 		.ascii	"g_measOld\000"
 30575      61734F6C 
 30575      6400
 30576              	.LASF65:
 30577 111f 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 30577      524F4C5F 
 30577      414E474C 
 30577      4500
 30578              	.LASF285:
 30579 112d 636D645F 		.ascii	"cmd_activate\000"
 30579      61637469 
 30579      76617465 
 30579      00
 30580              	.LASF5:
 30581 113a 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 657


 30581      7433325F 
 30581      7400
 30582              	.LASF223:
 30583 1144 7370695F 		.ascii	"spi_delay_menu\000"
 30583      64656C61 
 30583      795F6D65 
 30583      6E7500
 30584              	.LASF103:
 30585 1153 77697265 		.ascii	"wire_disp\000"
 30585      5F646973 
 30585      7000
 30586              	.LASF151:
 30587 115d 656D675F 		.ascii	"emg_max_value\000"
 30587      6D61785F 
 30587      76616C75 
 30587      6500
 30588              	.LASF227:
 30589 116b 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 30589      4F4D5F50 
 30589      4152414D 
 30589      5F534554 
 30589      00
 30590              	.LASF339:
 30591 117c 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 30591      72635C63 
 30591      6F6D6D61 
 30591      6E645F70 
 30591      726F6365 
 30592              	.LASF135:
 30593 1198 63757272 		.ascii	"current_limit\000"
 30593      656E745F 
 30593      6C696D69 
 30593      7400
 30594              	.LASF56:
 30595 11a6 53485F69 		.ascii	"SH_input_mode\000"
 30595      6E707574 
 30595      5F6D6F64 
 30595      6500
 30596              	.LASF77:
 30597 11b4 54595045 		.ascii	"TYPE_INT8\000"
 30597      5F494E54 
 30597      3800
 30598              	.LASF259:
 30599 11be 494D555F 		.ascii	"IMU_reading_info\000"
 30599      72656164 
 30599      696E675F 
 30599      696E666F 
 30599      00
 30600              	.LASF14:
 30601 11cf 75696E74 		.ascii	"uint16\000"
 30601      313600
 30602              	.LASF311:
 30603 11d6 675F656D 		.ascii	"g_emg_measOld\000"
 30603      675F6D65 
 30603      61734F6C 
 30603      6400
 30604              	.LASF169:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccm0Upm4.s 			page 658


 30605 11e4 72657374 		.ascii	"rest_delay\000"
 30605      5F64656C 
 30605      617900
 30606              	.LASF209:
 30607 11ef 6175785F 		.ascii	"aux_str\000"
 30607      73747200 
 30608              	.LASF26:
 30609 11f7 434D445F 		.ascii	"CMD_PING\000"
 30609      50494E47 
 30609      00
 30610              	.LASF125:
 30611 1200 6B5F645F 		.ascii	"k_d_c_dl\000"
 30611      635F646C 
 30611      00
 30612              	.LASF186:
 30613 1209 64697265 		.ascii	"direction\000"
 30613      6374696F 
 30613      6E00
 30614              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
