ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 40
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8AB0     		sub	sp, sp, #40
  44              		.cfi_def_cfa_offset 48
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L51
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E14B     		ldr	r3, .L51
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DD48     		ldr	r0, .L51
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DB4B     		ldr	r3, .L51
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e D94A     		ldr	r2, .L51
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D74B     		ldr	r3, .L51
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 53E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  78 0044 A72B     		cmp	r3, #167
  79 0046 00F24E82 		bhi	.L50
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 75030000 		.word	.L5+1
  85 0054 57030000 		.word	.L7+1
  86 0058 E7040000 		.word	.L50+1
  87 005c 7B030000 		.word	.L8+1
  88 0060 81030000 		.word	.L9+1
  89 0064 A5030000 		.word	.L10+1
  90 0068 3F030000 		.word	.L11+1
  91 006c E7040000 		.word	.L50+1
  92 0070 E7040000 		.word	.L50+1
  93 0074 D9030000 		.word	.L12+1
  94 0078 BF030000 		.word	.L13+1
  95 007c E7040000 		.word	.L50+1
  96 0080 5D030000 		.word	.L14+1
  97 0084 FB030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 4


  98 0088 E7040000 		.word	.L50+1
  99 008c E7040000 		.word	.L50+1
 100 0090 E7040000 		.word	.L50+1
 101 0094 E7040000 		.word	.L50+1
 102 0098 E7040000 		.word	.L50+1
 103 009c E7040000 		.word	.L50+1
 104 00a0 E7040000 		.word	.L50+1
 105 00a4 E7040000 		.word	.L50+1
 106 00a8 E7040000 		.word	.L50+1
 107 00ac E7040000 		.word	.L50+1
 108 00b0 E7040000 		.word	.L50+1
 109 00b4 E7040000 		.word	.L50+1
 110 00b8 E7040000 		.word	.L50+1
 111 00bc E7040000 		.word	.L50+1
 112 00c0 E7040000 		.word	.L50+1
 113 00c4 E7040000 		.word	.L50+1
 114 00c8 E7040000 		.word	.L50+1
 115 00cc E7040000 		.word	.L50+1
 116 00d0 E7040000 		.word	.L50+1
 117 00d4 E7040000 		.word	.L50+1
 118 00d8 E7040000 		.word	.L50+1
 119 00dc E7040000 		.word	.L50+1
 120 00e0 E7040000 		.word	.L50+1
 121 00e4 E7040000 		.word	.L50+1
 122 00e8 E7040000 		.word	.L50+1
 123 00ec E7040000 		.word	.L50+1
 124 00f0 E7040000 		.word	.L50+1
 125 00f4 E7040000 		.word	.L50+1
 126 00f8 E7040000 		.word	.L50+1
 127 00fc E7040000 		.word	.L50+1
 128 0100 E7040000 		.word	.L50+1
 129 0104 E7040000 		.word	.L50+1
 130 0108 E7040000 		.word	.L50+1
 131 010c E7040000 		.word	.L50+1
 132 0110 E7040000 		.word	.L50+1
 133 0114 E7040000 		.word	.L50+1
 134 0118 E7040000 		.word	.L50+1
 135 011c E7040000 		.word	.L50+1
 136 0120 E7040000 		.word	.L50+1
 137 0124 E7040000 		.word	.L50+1
 138 0128 E7040000 		.word	.L50+1
 139 012c E7040000 		.word	.L50+1
 140 0130 E7040000 		.word	.L50+1
 141 0134 E7040000 		.word	.L50+1
 142 0138 E7040000 		.word	.L50+1
 143 013c E7040000 		.word	.L50+1
 144 0140 E7040000 		.word	.L50+1
 145 0144 E7040000 		.word	.L50+1
 146 0148 E7040000 		.word	.L50+1
 147 014c E7040000 		.word	.L50+1
 148 0150 E7040000 		.word	.L50+1
 149 0154 E7040000 		.word	.L50+1
 150 0158 E7040000 		.word	.L50+1
 151 015c E7040000 		.word	.L50+1
 152 0160 E7040000 		.word	.L50+1
 153 0164 E7040000 		.word	.L50+1
 154 0168 E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 5


 155 016c E7040000 		.word	.L50+1
 156 0170 E7040000 		.word	.L50+1
 157 0174 E7040000 		.word	.L50+1
 158 0178 E7040000 		.word	.L50+1
 159 017c E7040000 		.word	.L50+1
 160 0180 E7040000 		.word	.L50+1
 161 0184 E7040000 		.word	.L50+1
 162 0188 E7040000 		.word	.L50+1
 163 018c E7040000 		.word	.L50+1
 164 0190 E7040000 		.word	.L50+1
 165 0194 E7040000 		.word	.L50+1
 166 0198 E7040000 		.word	.L50+1
 167 019c E7040000 		.word	.L50+1
 168 01a0 E7040000 		.word	.L50+1
 169 01a4 E7040000 		.word	.L50+1
 170 01a8 E7040000 		.word	.L50+1
 171 01ac E7040000 		.word	.L50+1
 172 01b0 E7040000 		.word	.L50+1
 173 01b4 E7040000 		.word	.L50+1
 174 01b8 E7040000 		.word	.L50+1
 175 01bc E7040000 		.word	.L50+1
 176 01c0 E7040000 		.word	.L50+1
 177 01c4 E7040000 		.word	.L50+1
 178 01c8 E7040000 		.word	.L50+1
 179 01cc E7040000 		.word	.L50+1
 180 01d0 E7040000 		.word	.L50+1
 181 01d4 E7040000 		.word	.L50+1
 182 01d8 E7040000 		.word	.L50+1
 183 01dc E7040000 		.word	.L50+1
 184 01e0 E7040000 		.word	.L50+1
 185 01e4 E7040000 		.word	.L50+1
 186 01e8 E7040000 		.word	.L50+1
 187 01ec E7040000 		.word	.L50+1
 188 01f0 E7040000 		.word	.L50+1
 189 01f4 E7040000 		.word	.L50+1
 190 01f8 E7040000 		.word	.L50+1
 191 01fc E7040000 		.word	.L50+1
 192 0200 E7040000 		.word	.L50+1
 193 0204 E7040000 		.word	.L50+1
 194 0208 E7040000 		.word	.L50+1
 195 020c E7040000 		.word	.L50+1
 196 0210 E7040000 		.word	.L50+1
 197 0214 E7040000 		.word	.L50+1
 198 0218 E7040000 		.word	.L50+1
 199 021c E7040000 		.word	.L50+1
 200 0220 E7040000 		.word	.L50+1
 201 0224 E7040000 		.word	.L50+1
 202 0228 E7040000 		.word	.L50+1
 203 022c E7040000 		.word	.L50+1
 204 0230 E7040000 		.word	.L50+1
 205 0234 E7040000 		.word	.L50+1
 206 0238 E7040000 		.word	.L50+1
 207 023c E7040000 		.word	.L50+1
 208 0240 E7040000 		.word	.L50+1
 209 0244 E7040000 		.word	.L50+1
 210 0248 E7040000 		.word	.L50+1
 211 024c E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 6


 212 0250 F1020000 		.word	.L16+1
 213 0254 2D030000 		.word	.L17+1
 214 0258 F7020000 		.word	.L18+1
 215 025c 39030000 		.word	.L19+1
 216 0260 FD020000 		.word	.L20+1
 217 0264 09030000 		.word	.L21+1
 218 0268 03030000 		.word	.L22+1
 219 026c E7040000 		.word	.L50+1
 220 0270 27030000 		.word	.L23+1
 221 0274 15030000 		.word	.L24+1
 222 0278 E7040000 		.word	.L50+1
 223 027c 1B030000 		.word	.L25+1
 224 0280 0F030000 		.word	.L26+1
 225 0284 E7040000 		.word	.L50+1
 226 0288 E7040000 		.word	.L50+1
 227 028c E7040000 		.word	.L50+1
 228 0290 33030000 		.word	.L27+1
 229 0294 E7040000 		.word	.L50+1
 230 0298 21030000 		.word	.L28+1
 231 029c E7040000 		.word	.L50+1
 232 02a0 E7040000 		.word	.L50+1
 233 02a4 E7040000 		.word	.L50+1
 234 02a8 E7040000 		.word	.L50+1
 235 02ac E7040000 		.word	.L50+1
 236 02b0 E7040000 		.word	.L50+1
 237 02b4 E7040000 		.word	.L50+1
 238 02b8 E7040000 		.word	.L50+1
 239 02bc E7040000 		.word	.L50+1
 240 02c0 E7040000 		.word	.L50+1
 241 02c4 E7040000 		.word	.L50+1
 242 02c8 E7040000 		.word	.L50+1
 243 02cc E7040000 		.word	.L50+1
 244 02d0 E7040000 		.word	.L50+1
 245 02d4 99040000 		.word	.L29+1
 246 02d8 9F040000 		.word	.L30+1
 247 02dc B7040000 		.word	.L31+1
 248 02e0 BD040000 		.word	.L32+1
 249 02e4 C3040000 		.word	.L33+1
 250 02e8 C9040000 		.word	.L34+1
 251 02ec CF040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02f0 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f4 F8E0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 7


 259              		.loc 1 84 0
 260 02f6 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02fa F5E0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02fc FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 0300 F2E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 0302 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0306 EFE0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0308 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 030c ECE0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 0312 E9E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0314 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0318 E6E0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 031a FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031e E3E0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 0320 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0324 E0E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0326 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 032a DDE0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 032c FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 0330 DAE0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 0332 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 9


 312 0336 D7E0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0338 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 033c D4E0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033e 164B     		ldr	r3, .L51+4
 321 0340 1B88     		ldrh	r3, [r3]
 322 0342 7B61     		str	r3, [r7, #20]
 323              	.LBB10:
 324              	.LBB11:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0344 7B69     		ldr	r3, [r7, #20]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0346 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0348 3B61     		str	r3, [r7, #16]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 034a 3B69     		ldr	r3, [r7, #16]
 337              	.LBE11:
 338              	.LBE10:
 339              		.loc 1 156 0
 340 034c 9BB2     		uxth	r3, r3
 341 034e 1846     		mov	r0, r3
 342 0350 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0354 C8E0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0356 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 035a C5E0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 24


 351              		.loc 1 168 0
 352 035c 0E4B     		ldr	r3, .L51+4
 353 035e 1B88     		ldrh	r3, [r3]
 354 0360 3B62     		str	r3, [r7, #32]
 355              	.LBB12:
 356              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 0362 3B6A     		ldr	r3, [r7, #32]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0364 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0366 FB60     		str	r3, [r7, #12]
 366              		.loc 2 793 0
 367 0368 FB68     		ldr	r3, [r7, #12]
 368              	.LBE13:
 369              	.LBE12:
 370              		.loc 1 168 0
 371 036a 9BB2     		uxth	r3, r3
 372 036c 1846     		mov	r0, r3
 373 036e FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 0372 B9E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0374 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0378 B6E0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 037a FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037e B3E0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 0380 3220     		movs	r0, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 25


 389 0382 FFF7FEFF 		bl	memStore
 390 0386 0346     		mov	r3, r0
 391 0388 002B     		cmp	r3, #0
 392 038a 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 038c 0120     		movs	r0, #1
 395 038e FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 0392 A9E0     		b	.L1
 398              	.L52:
 399              		.align	2
 400              	.L51:
 401 0394 00000000 		.word	g_rx
 402 0398 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 039c 0020     		movs	r0, #0
 406 039e FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 03a2 A1E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a4 FFF7FEFF 		bl	memRestore
 412 03a8 0346     		mov	r3, r0
 413 03aa 002B     		cmp	r3, #0
 414 03ac 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03ae 0120     		movs	r0, #1
 417 03b0 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b4 98E0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b6 0020     		movs	r0, #0
 423 03b8 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03bc 94E0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03be FFF7FEFF 		bl	memInit
 429 03c2 0346     		mov	r3, r0
 430 03c4 002B     		cmp	r3, #0
 431 03c6 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c8 0120     		movs	r0, #1
 434 03ca FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ce 8BE0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03d0 0020     		movs	r0, #0
 440 03d2 FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d6 87E0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d8 0120     		movs	r0, #1
 446 03da FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03de 4FF47A70 		mov	r0, #1000
 449 03e2 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e6 0020     		movs	r0, #0
 452 03e8 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03ec 4FF47A70 		mov	r0, #1000
 455 03f0 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f4 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f8 76E0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 27


 462 03fa 3D4B     		ldr	r3, .L53
 463 03fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fe 1B02     		lsls	r3, r3, #8
 465 0400 1AB2     		sxth	r2, r3
 466 0402 3B4B     		ldr	r3, .L53
 467 0404 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0406 1BB2     		sxth	r3, r3
 469 0408 1343     		orrs	r3, r3, r2
 470 040a 1AB2     		sxth	r2, r3
 471 040c 394B     		ldr	r3, .L53+4
 472 040e 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 0410 374B     		ldr	r3, .L53
 475 0412 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0414 1B02     		lsls	r3, r3, #8
 477 0416 1AB2     		sxth	r2, r3
 478 0418 354B     		ldr	r3, .L53
 479 041a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 041c 1BB2     		sxth	r3, r3
 481 041e 1343     		orrs	r3, r3, r2
 482 0420 1AB2     		sxth	r2, r3
 483 0422 344B     		ldr	r3, .L53+4
 484 0424 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0426 334B     		ldr	r3, .L53+4
 487 0428 B3F90230 		ldrsh	r3, [r3, #2]
 488 042c B3F1FF3F 		cmp	r3, #-1
 489 0430 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 0432 304B     		ldr	r3, .L53+4
 492 0434 B3F90430 		ldrsh	r3, [r3, #4]
 493 0438 B3F1FF3F 		cmp	r3, #-1
 494 043c 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043e 2D4B     		ldr	r3, .L53+4
 497 0440 0022     		movs	r2, #0
 498 0442 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0444 2B4B     		ldr	r3, .L53+4
 501 0446 0022     		movs	r2, #0
 502 0448 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 044a 2A4B     		ldr	r3, .L53+4
 505 044c 0022     		movs	r2, #0
 506 044e 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 0450 4AE0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 0452 284B     		ldr	r3, .L53+4
 512 0454 B3F90230 		ldrsh	r3, [r3, #2]
 513 0458 002B     		cmp	r3, #0
 514 045a 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 045c 254B     		ldr	r3, .L53+4
 517 045e 0022     		movs	r2, #0
 518 0460 5A80     		strh	r2, [r3, #2]	@ movhi
 519 0462 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0464 234B     		ldr	r3, .L53+4
 523 0466 B3F90230 		ldrsh	r3, [r3, #2]
 524 046a C82B     		cmp	r3, #200
 525 046c 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046e 214B     		ldr	r3, .L53+4
 528 0470 C822     		movs	r2, #200
 529 0472 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0474 1F4B     		ldr	r3, .L53+4
 533 0476 B3F90430 		ldrsh	r3, [r3, #4]
 534 047a 002B     		cmp	r3, #0
 535 047c 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047e 1D4B     		ldr	r3, .L53+4
 538 0480 0022     		movs	r2, #0
 539 0482 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0484 1C4B     		ldr	r3, .L53+8
 543 0486 0022     		movs	r2, #0
 544 0488 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 048a 1A4B     		ldr	r3, .L53+4
 547 048c 0122     		movs	r2, #1
 548 048e 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 0490 0120     		movs	r0, #1
 551 0492 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0496 27E0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0498 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 049c 24E0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049e 174B     		ldr	r3, .L53+12
 562 04a0 1B88     		ldrh	r3, [r3]
 563 04a2 FB61     		str	r3, [r7, #28]
 564              	.LBB14:
 565              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a4 FB69     		ldr	r3, [r7, #28]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a6 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a8 BB60     		str	r3, [r7, #8]
 575              		.loc 2 793 0
 576 04aa BB68     		ldr	r3, [r7, #8]
 577              	.LBE15:
 578              	.LBE14:
 579              		.loc 1 260 0
 580 04ac 9BB2     		uxth	r3, r3
 581 04ae 1846     		mov	r0, r3
 582 04b0 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b4 18E0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b6 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 30


 589 04ba 15E0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04bc FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04c0 12E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04c2 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c6 0FE0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c8 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04cc 0CE0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 606              		.loc 1 290 0
 607 04ce 0B4B     		ldr	r3, .L53+12
 608 04d0 1B88     		ldrh	r3, [r3]
 609 04d2 BB61     		str	r3, [r7, #24]
 610              	.LBB16:
 611              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 612              		.loc 2 792 0
 613 04d4 BB69     		ldr	r3, [r7, #24]
 614              		.syntax unified
 615              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 616 04d6 5BBA     		rev16 r3, r3
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620 04d8 7B60     		str	r3, [r7, #4]
 621              		.loc 2 793 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 31


 622 04da 7B68     		ldr	r3, [r7, #4]
 623              	.LBE17:
 624              	.LBE16:
 625              		.loc 1 290 0
 626 04dc 9BB2     		uxth	r3, r3
 627 04de 1846     		mov	r0, r3
 628 04e0 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 629              		.loc 1 291 0
 630 04e4 00E0     		b	.L1
 631              	.L50:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 632              		.loc 1 296 0
 633 04e6 00BF     		nop
 634              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
 635              		.loc 1 299 0
 636 04e8 2837     		adds	r7, r7, #40
 637              		.cfi_def_cfa_offset 8
 638 04ea BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 04ec 80BD     		pop	{r7, pc}
 642              	.L54:
 643 04ee 00BF     		.align	2
 644              	.L53:
 645 04f0 00000000 		.word	g_rx
 646 04f4 00000000 		.word	calib
 647 04f8 00000000 		.word	g_refNew
 648 04fc 01000000 		.word	g_rx+1
 649              		.cfi_endproc
 650              	.LFE64:
 651              		.size	commProcess, .-commProcess
 652              		.section	.text.infoSend,"ax",%progbits
 653              		.align	2
 654              		.global	infoSend
 655              		.thumb
 656              		.thumb_func
 657              		.type	infoSend, %function
 658              	infoSend:
 659              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 660              		.loc 1 305 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 1504
 663              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 32


 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 ADF5BC6D 		sub	sp, sp, #1504
 669              		.cfi_def_cfa_offset 1512
 670 0006 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 672              		.loc 1 308 0
 673 0008 3B1D     		adds	r3, r7, #4
 674 000a 1846     		mov	r0, r3
 675 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 676              		.loc 1 309 0
 677 0010 3B1D     		adds	r3, r7, #4
 678 0012 1846     		mov	r0, r3
 679 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 680              		.loc 1 310 0
 681 0018 00BF     		nop
 682 001a 07F5BC67 		add	r7, r7, #1504
 683              		.cfi_def_cfa_offset 8
 684 001e BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0020 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE65:
 690              		.size	infoSend, .-infoSend
 691 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 692              		.align	2
 693              		.global	infoGet
 694              		.thumb
 695              		.thumb_func
 696              		.type	infoGet, %function
 697              	infoGet:
 698              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 699              		.loc 1 317 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 24008
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 ADF5BB4D 		sub	sp, sp, #23936
 708              		.cfi_def_cfa_offset 23944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 33


 709 0006 92B0     		sub	sp, sp, #72
 710              		.cfi_def_cfa_offset 24016
 711 0008 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 000a 0246     		mov	r2, r0
 714 000c 07F14803 		add	r3, r7, #72
 715 0010 423B     		subs	r3, r3, #66
 716 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char packet_string[4000] = "";
 717              		.loc 1 318 0
 718 0014 07F59C43 		add	r3, r7, #19968
 719 0018 03F12803 		add	r3, r3, #40
 720 001c 0022     		movs	r2, #0
 721 001e 1A60     		str	r2, [r3]
 722 0020 0433     		adds	r3, r3, #4
 723 0022 40F69C72 		movw	r2, #3996
 724 0026 0021     		movs	r1, #0
 725 0028 1846     		mov	r0, r3
 726 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 727              		.loc 1 319 0
 728 002e 07F14803 		add	r3, r7, #72
 729 0032 403B     		subs	r3, r3, #64
 730 0034 0022     		movs	r2, #0
 731 0036 1A60     		str	r2, [r3]
 732 0038 0433     		adds	r3, r3, #4
 733 003a 44F61C62 		movw	r2, #19996
 734 003e 0021     		movs	r1, #0
 735 0040 1846     		mov	r0, r3
 736 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 737              		.loc 1 322 0
 738 0046 07F14803 		add	r3, r7, #72
 739 004a 423B     		subs	r3, r3, #66
 740 004c 1B88     		ldrh	r3, [r3]
 741 004e 042B     		cmp	r3, #4
 742 0050 62D8     		bhi	.L65
 743 0052 01A2     		adr	r2, .L59
 744 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 745              		.p2align 2
 746              	.L59:
 747 0058 6D000000 		.word	.L58+1
 748 005c 8F000000 		.word	.L60+1
 749 0060 B1000000 		.word	.L61+1
 750 0064 D9000000 		.word	.L62+1
 751 0068 FB000000 		.word	.L63+1
 752              		.p2align 1
 753              	.L58:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 754              		.loc 1 324 0
 755 006c 07F59C43 		add	r3, r7, #19968
 756 0070 03F12803 		add	r3, r3, #40
 757 0074 1846     		mov	r0, r3
 758 0076 FFF7FEFF 		bl	prepare_generic_info
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 34


 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 759              		.loc 1 325 0
 760 007a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 761              		.loc 1 326 0
 762 007e 07F59C43 		add	r3, r7, #19968
 763 0082 03F12803 		add	r3, r3, #40
 764 0086 1846     		mov	r0, r3
 765 0088 FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 766              		.loc 1 327 0
 767 008c 45E0     		b	.L64
 768              	.L60:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 769              		.loc 1 329 0
 770 008e 07F59C43 		add	r3, r7, #19968
 771 0092 03F12803 		add	r3, r3, #40
 772 0096 1846     		mov	r0, r3
 773 0098 FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 774              		.loc 1 330 0
 775 009c FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 776              		.loc 1 331 0
 777 00a0 07F59C43 		add	r3, r7, #19968
 778 00a4 03F12803 		add	r3, r3, #40
 779 00a8 1846     		mov	r0, r3
 780 00aa FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 781              		.loc 1 332 0
 782 00ae 34E0     		b	.L64
 783              	.L61:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 784              		.loc 1 334 0
 785 00b0 07F59C43 		add	r3, r7, #19968
 786 00b4 03F12803 		add	r3, r3, #40
 787 00b8 4FF47A62 		mov	r2, #4000
 788 00bc 1946     		mov	r1, r3
 789 00be 1A48     		ldr	r0, .L66
 790 00c0 FFF7FEFF 		bl	Read_SD_Closed_File
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 791              		.loc 1 335 0
 792 00c4 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 793              		.loc 1 336 0
 794 00c8 07F59C43 		add	r3, r7, #19968
 795 00cc 03F12803 		add	r3, r3, #40
 796 00d0 1846     		mov	r0, r3
 797 00d2 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 798              		.loc 1 337 0
 799 00d6 20E0     		b	.L64
 800              	.L62:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
 339:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 35


 801              		.loc 1 339 0
 802 00d8 07F14803 		add	r3, r7, #72
 803 00dc 403B     		subs	r3, r3, #64
 804 00de 44F62061 		movw	r1, #20000
 805 00e2 1846     		mov	r0, r3
 806 00e4 FFF7FEFF 		bl	Read_SD_Current_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 807              		.loc 1 340 0
 808 00e8 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 809              		.loc 1 341 0
 810 00ec 07F14803 		add	r3, r7, #72
 811 00f0 403B     		subs	r3, r3, #64
 812 00f2 1846     		mov	r0, r3
 813 00f4 FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 814              		.loc 1 342 0
 815 00f8 0FE0     		b	.L64
 816              	.L63:
 343:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 344:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 817              		.loc 1 344 0
 818 00fa 07F14803 		add	r3, r7, #72
 819 00fe 403B     		subs	r3, r3, #64
 820 0100 1846     		mov	r0, r3
 821 0102 FFF7FEFF 		bl	Get_SD_FS
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 822              		.loc 1 345 0
 823 0106 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 824              		.loc 1 346 0
 825 010a 07F14803 		add	r3, r7, #72
 826 010e 403B     		subs	r3, r3, #64
 827 0110 1846     		mov	r0, r3
 828 0112 FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 829              		.loc 1 347 0
 830 0116 00E0     		b	.L64
 831              	.L65:
 348:..\src/command_processing.c ****         default:
 349:..\src/command_processing.c ****             break;
 832              		.loc 1 349 0
 833 0118 00BF     		nop
 834              	.L64:
 350:..\src/command_processing.c ****     }
 351:..\src/command_processing.c **** }
 835              		.loc 1 351 0 discriminator 1
 836 011a 00BF     		nop
 837 011c 07F5BB47 		add	r7, r7, #23936
 838 0120 4837     		adds	r7, r7, #72
 839              		.cfi_def_cfa_offset 8
 840 0122 BD46     		mov	sp, r7
 841              		.cfi_def_cfa_register 13
 842              		@ sp needed
 843 0124 80BD     		pop	{r7, pc}
 844              	.L67:
 845 0126 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 36


 846              	.L66:
 847 0128 00000000 		.word	sdParam
 848              		.cfi_endproc
 849              	.LFE66:
 850              		.size	infoGet, .-infoGet
 851              		.global	__aeabi_i2f
 852              		.global	__aeabi_fdiv
 853              		.section	.rodata
 854              		.align	2
 855              	.LC87:
 856 0000 20557362 		.ascii	" Usb\000"
 856      00
 857 0005 000000   		.align	2
 858              	.LC88:
 859 0008 2048616E 		.ascii	" Handle\000"
 859      646C6500 
 860              		.align	2
 861              	.LC89:
 862 0010 20454D47 		.ascii	" EMG proportional\000"
 862      2070726F 
 862      706F7274 
 862      696F6E61 
 862      6C00
 863 0022 0000     		.align	2
 864              	.LC90:
 865 0024 20454D47 		.ascii	" EMG integral\000"
 865      20696E74 
 865      65677261 
 865      6C00
 866 0032 0000     		.align	2
 867              	.LC91:
 868 0034 20454D47 		.ascii	" EMG FCFS\000"
 868      20464346 
 868      5300
 869 003e 0000     		.align	2
 870              	.LC92:
 871 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 871      20464346 
 871      53204164 
 871      76616E63 
 871      656400
 872 0053 00       		.align	2
 873              	.LC93:
 874 0054 204A6F79 		.ascii	" Joystick\000"
 874      73746963 
 874      6B00
 875 005e 0000     		.align	2
 876              	.LC94:
 877 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 877      2070726F 
 877      706F7274 
 877      696F6E61 
 877      6C204E6F 
 878 0082 0000     		.align	2
 879              	.LC95:
 880 0084 20506F73 		.ascii	" Position\000"
 880      6974696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 37


 880      6E00
 881 008e 0000     		.align	2
 882              	.LC96:
 883 0090 2050574D 		.ascii	" PWM\000"
 883      00
 884 0095 000000   		.align	2
 885              	.LC97:
 886 0098 20437572 		.ascii	" Current\000"
 886      72656E74 
 886      00
 887 00a1 000000   		.align	2
 888              	.LC98:
 889 00a4 20506F73 		.ascii	" Position and Current\000"
 889      6974696F 
 889      6E20616E 
 889      64204375 
 889      7272656E 
 890 00ba 0000     		.align	2
 891              	.LC99:
 892 00bc 20594553 		.ascii	" YES\000\000"
 892      0000
 893 00c2 0000     		.align	2
 894              	.LC100:
 895 00c4 204E4F00 		.ascii	" NO\000\000"
 895      00
 896 00c9 000000   		.align	2
 897              	.LC101:
 898 00cc 20526967 		.ascii	" Right\000\000"
 898      68740000 
 899              		.align	2
 900              	.LC102:
 901 00d4 204C6566 		.ascii	" Left\000\000"
 901      740000
 902 00db 00       		.align	2
 903              	.LC103:
 904 00dc 204F4646 		.ascii	" OFF\000\000"
 904      0000
 905 00e2 0000     		.align	2
 906              	.LC104:
 907 00e4 204F4E00 		.ascii	" ON\000\000"
 907      00
 908 00e9 000000   		.align	2
 909              	.LC105:
 910 00ec 204E6F6E 		.ascii	" None\000\000"
 910      650000
 911 00f3 00       		.align	2
 912              	.LC106:
 913 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 913      52544320 
 913      626F6172 
 913      640000
 914 0103 00       		.align	2
 915              	.LC107:
 916 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 916      6920626F 
 916      61726420 
 916      5B4E2F41 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 38


 916      5D0000
 917 0117 00       		.align	2
 918              	.LC108:
 919 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 919      6572205B 
 919      4E2F415D 
 919      0000
 920 0126 0000     		.align	2
 921              	.LC109:
 922 0128 204C6F77 		.ascii	" Low\000\000"
 922      0000
 923 012e 0000     		.align	2
 924              	.LC110:
 925 0130 20486967 		.ascii	" High\000\000"
 925      680000
 926 0137 00       		.align	2
 927              	.LC111:
 928 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 928      45524943 
 928      20555345 
 928      520000
 929 0147 00       		.align	2
 930              	.LC112:
 931 0148 204D4152 		.ascii	" MARIA\000\000"
 931      49410000 
 932              		.align	2
 933              	.LC113:
 934 0150 20524F5A 		.ascii	" ROZA\000\000"
 934      410000
 935 0157 00       		.align	2
 936              	.LC114:
 937 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 937      33383837 
 937      20285374 
 937      616E6461 
 937      72642900 
 938 016d 000000   		.align	2
 939              	.LC115:
 940 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 940      35303139 
 940      20284869 
 940      67682070 
 940      6F776572 
 941 0187 00       		.align	2
 942              	.LC116:
 943 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 943      5448414E 
 943      44205052 
 943      4F0000
 944 0197 00       		.align	2
 945              	.LC117:
 946 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 946      45524943 
 946      2032204D 
 946      4F544F52 
 946      530000
 947 01ab 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 39


 948              	.LC118:
 949 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 949      20434841 
 949      4D424552 
 949      530000
 950 01bb 00       		.align	2
 951              	.LC119:
 952 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 952      4F424F43 
 952      4B205752 
 952      49535400 
 952      00
 953 01cd 000000   		.align	2
 954              	.LC120:
 955 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 955      5448414E 
 955      44203220 
 955      4D4F544F 
 955      52530000 
 956              		.align	2
 957              	.LC121:
 958 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 958      743A7379 
 958      6E322C20 
 958      536C6F77 
 958      3A73796E 
 959 01fb 00       		.align	2
 960              	.LC122:
 961 01fc 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 961      743A7772 
 961      6973742C 
 961      20536C6F 
 961      773A6861 
 962              		.align	2
 963              	.LC123:
 964 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 964      773A7379 
 964      6E322C20 
 964      46617374 
 964      3A73796E 
 965 022b 00       		.align	2
 966              	.LC124:
 967 022c 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 967      773A7772 
 967      6973742C 
 967      20466173 
 967      743A6861 
 968              		.align	2
 969              	.LC125:
 970 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 970      73653A43 
 970      572C204F 
 970      70656E3A 
 970      43435700 
 971 0259 000000   		.align	2
 972              	.LC126:
 973 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 40


 973      73653A43 
 973      43572C20 
 973      4F70656E 
 973      3A435700 
 974              		.section	.text.get_param_list,"ax",%progbits
 975              		.align	2
 976              		.global	get_param_list
 977              		.thumb
 978              		.thumb_func
 979              		.type	get_param_list, %function
 980              	get_param_list:
 981              	.LFB67:
 352:..\src/command_processing.c **** 
 353:..\src/command_processing.c **** 
 354:..\src/command_processing.c **** //==============================================================================
 355:..\src/command_processing.c **** //                                                                GET PARAM LIST
 356:..\src/command_processing.c **** //==============================================================================
 357:..\src/command_processing.c **** 
 358:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 359:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 360:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 361:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 982              		.loc 1 361 0
 983              		.cfi_startproc
 984              		@ args = 16, pretend = 0, frame = 5608
 985              		@ frame_needed = 1, uses_anonymous_args = 0
 986 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 987              		.cfi_def_cfa_offset 20
 988              		.cfi_offset 4, -20
 989              		.cfi_offset 5, -16
 990              		.cfi_offset 6, -12
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 ADF5AF5D 		sub	sp, sp, #5600
 994              		.cfi_def_cfa_offset 5620
 995 0006 83B0     		sub	sp, sp, #12
 996              		.cfi_def_cfa_offset 5632
 997 0008 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 000a 07F12804 		add	r4, r7, #40
 1000 000e 1C3C     		subs	r4, r4, #28
 1001 0010 2060     		str	r0, [r4]
 1002 0012 07F10800 		add	r0, r7, #8
 1003 0016 0160     		str	r1, [r0]
 1004 0018 07F10801 		add	r1, r7, #8
 1005 001c 0439     		subs	r1, r1, #4
 1006 001e 0A60     		str	r2, [r1]
 1007 0020 07F10802 		add	r2, r7, #8
 1008 0024 083A     		subs	r2, r2, #8
 1009 0026 1360     		str	r3, [r2]
 362:..\src/command_processing.c ****     
 363:..\src/command_processing.c ****     //Package to be sent variables
 364:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1010              		.loc 1 364 0
 1011 0028 07F16803 		add	r3, r7, #104
 1012 002c 103B     		subs	r3, r3, #16
 1013 002e 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 41


 1014 0030 1A60     		str	r2, [r3]
 1015 0032 0433     		adds	r3, r3, #4
 1016 0034 41F27852 		movw	r2, #5496
 1017 0038 0021     		movs	r1, #0
 1018 003a 1846     		mov	r0, r3
 1019 003c FFF7FEFF 		bl	memset
 365:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1020              		.loc 1 365 0
 1021 0040 41F27C53 		movw	r3, #5500
 1022 0044 07F5AF52 		add	r2, r7, #5600
 1023 0048 1380     		strh	r3, [r2]	@ movhi
 366:..\src/command_processing.c **** 
 367:..\src/command_processing.c ****     //Auxiliary variables
 368:..\src/command_processing.c ****     uint8 CYDATA i, j;
 369:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1024              		.loc 1 369 0
 1025 004a 0023     		movs	r3, #0
 1026 004c 07F5AF52 		add	r2, r7, #5600
 1027 0050 02F10502 		add	r2, r2, #5
 1028 0054 1370     		strb	r3, [r2]
 370:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1029              		.loc 1 370 0
 1030 0056 0023     		movs	r3, #0
 1031 0058 07F5AF52 		add	r2, r7, #5600
 1032 005c 02F10402 		add	r2, r2, #4
 1033 0060 1370     		strb	r3, [r2]
 371:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1034              		.loc 1 371 0
 1035 0062 0023     		movs	r3, #0
 1036 0064 07F5AF52 		add	r2, r7, #5600
 1037 0068 02F10302 		add	r2, r2, #3
 1038 006c 1370     		strb	r3, [r2]
 372:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 373:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1039              		.loc 1 373 0
 1040 006e 07F12803 		add	r3, r7, #40
 1041 0072 043B     		subs	r3, r3, #4
 1042 0074 0022     		movs	r2, #0
 1043 0076 1A60     		str	r2, [r3]
 1044 0078 0433     		adds	r3, r3, #4
 1045 007a 2E22     		movs	r2, #46
 1046 007c 0021     		movs	r1, #0
 1047 007e 1846     		mov	r0, r3
 1048 0080 FFF7FEFF 		bl	memset
 374:..\src/command_processing.c ****     float aux_float;
 375:..\src/command_processing.c ****     int16 aux_int16;
 376:..\src/command_processing.c ****     uint16 aux_uint16;
 377:..\src/command_processing.c ****     int32 aux_int32;
 378:..\src/command_processing.c ****     uint32 aux_uint32;
 379:..\src/command_processing.c **** 
 380:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1049              		.loc 1 380 0
 1050 0084 0023     		movs	r3, #0
 1051 0086 07F5AE52 		add	r2, r7, #5568
 1052 008a 02F11F02 		add	r2, r2, #31
 1053 008e 1370     		strb	r3, [r2]
 381:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 42


 1054              		.loc 1 381 0
 1055 0090 0123     		movs	r3, #1
 1056 0092 07F5AE52 		add	r2, r7, #5568
 1057 0096 02F11E02 		add	r2, r2, #30
 1058 009a 1370     		strb	r3, [r2]
 382:..\src/command_processing.c ****   
 383:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1059              		.loc 1 383 0
 1060 009c 07F12803 		add	r3, r7, #40
 1061 00a0 1C3B     		subs	r3, r3, #28
 1062 00a2 1B68     		ldr	r3, [r3]
 1063 00a4 1B68     		ldr	r3, [r3]
 1064 00a6 07F5AE52 		add	r2, r7, #5568
 1065 00aa 02F11802 		add	r2, r2, #24
 1066 00ae 1360     		str	r3, [r2]
 384:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1067              		.loc 1 384 0
 1068 00b0 07F5AE53 		add	r3, r7, #5568
 1069 00b4 03F11803 		add	r3, r3, #24
 1070 00b8 1B68     		ldr	r3, [r3]
 1071 00ba 07F5AE52 		add	r2, r7, #5568
 1072 00be 02F11402 		add	r2, r2, #20
 1073 00c2 1360     		str	r3, [r2]
 385:..\src/command_processing.c ****         
 386:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1074              		.loc 1 386 0
 1075 00c4 07F16803 		add	r3, r7, #104
 1076 00c8 103B     		subs	r3, r3, #16
 1077 00ca 0C22     		movs	r2, #12
 1078 00cc 1A70     		strb	r2, [r3]
 387:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1079              		.loc 1 387 0
 1080 00ce 07F16803 		add	r3, r7, #104
 1081 00d2 103B     		subs	r3, r3, #16
 1082 00d4 4C22     		movs	r2, #76
 1083 00d6 5A70     		strb	r2, [r3, #1]
 388:..\src/command_processing.c ****     
 389:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1084              		.loc 1 389 0
 1085 00d8 0023     		movs	r3, #0
 1086 00da 07F5AF52 		add	r2, r7, #5600
 1087 00de 02F10502 		add	r2, r2, #5
 1088 00e2 1370     		strb	r3, [r2]
 1089 00e4 02F0E3BF 		b	.L69
 1090              	.L271:
 390:..\src/command_processing.c ****         
 391:..\src/command_processing.c ****         // Assign m_addr memory address
 392:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1091              		.loc 1 392 0
 1092 00e8 07F5AF53 		add	r3, r7, #5600
 1093 00ec 03F10503 		add	r3, r3, #5
 1094 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1095 00f2 9A00     		lsls	r2, r3, #2
 1096 00f4 07F12803 		add	r3, r7, #40
 1097 00f8 1C3B     		subs	r3, r3, #28
 1098 00fa 1B68     		ldr	r3, [r3]
 1099 00fc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 43


 1100 00fe 1B68     		ldr	r3, [r3]
 1101 0100 07F5AE52 		add	r2, r7, #5568
 1102 0104 02F11802 		add	r2, r2, #24
 1103 0108 1360     		str	r3, [r2]
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Add parameter type and size to packet
 395:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1104              		.loc 1 395 0
 1105 010a 07F5AF53 		add	r3, r7, #5600
 1106 010e 03F10503 		add	r3, r3, #5
 1107 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1108 0114 3222     		movs	r2, #50
 1109 0116 02FB03F3 		mul	r3, r2, r3
 1110 011a 9A1C     		adds	r2, r3, #2
 1111 011c 07F5AF53 		add	r3, r7, #5600
 1112 0120 03F10503 		add	r3, r3, #5
 1113 0124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 0126 07F10801 		add	r1, r7, #8
 1115 012a 0968     		ldr	r1, [r1]
 1116 012c 0B44     		add	r3, r3, r1
 1117 012e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1118 0130 07F16803 		add	r3, r7, #104
 1119 0134 103B     		subs	r3, r3, #16
 1120 0136 9954     		strb	r1, [r3, r2]
 396:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1121              		.loc 1 396 0
 1122 0138 07F5AF53 		add	r3, r7, #5600
 1123 013c 03F10503 		add	r3, r3, #5
 1124 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 0142 3222     		movs	r2, #50
 1126 0144 02FB03F3 		mul	r3, r2, r3
 1127 0148 DA1C     		adds	r2, r3, #3
 1128 014a 07F5AF53 		add	r3, r7, #5600
 1129 014e 03F10503 		add	r3, r3, #5
 1130 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1131 0154 07F10803 		add	r3, r7, #8
 1132 0158 043B     		subs	r3, r3, #4
 1133 015a 1B68     		ldr	r3, [r3]
 1134 015c 0B44     		add	r3, r3, r1
 1135 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1136 0160 07F16803 		add	r3, r7, #104
 1137 0164 103B     		subs	r3, r3, #16
 1138 0166 9954     		strb	r1, [r3, r2]
 397:..\src/command_processing.c ****         
 398:..\src/command_processing.c ****         // Find size of data
 399:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1139              		.loc 1 399 0
 1140 0168 07F5AF53 		add	r3, r7, #5600
 1141 016c 03F10503 		add	r3, r3, #5
 1142 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1143 0172 07F10802 		add	r2, r7, #8
 1144 0176 1268     		ldr	r2, [r2]
 1145 0178 1344     		add	r3, r3, r2
 1146 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1147 017c 092B     		cmp	r3, #9
 1148 017e 2CD8     		bhi	.L70
 1149 0180 01A2     		adr	r2, .L72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 44


 1150 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1151 0186 00BF     		.p2align 2
 1152              	.L72:
 1153 0188 B1010000 		.word	.L71+1
 1154 018c B1010000 		.word	.L71+1
 1155 0190 B1010000 		.word	.L71+1
 1156 0194 BF010000 		.word	.L73+1
 1157 0198 BF010000 		.word	.L73+1
 1158 019c CD010000 		.word	.L74+1
 1159 01a0 CD010000 		.word	.L74+1
 1160 01a4 CD010000 		.word	.L74+1
 1161 01a8 DB010000 		.word	.L70+1
 1162 01ac B1010000 		.word	.L71+1
 1163              		.p2align 1
 1164              	.L71:
 400:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 401:..\src/command_processing.c ****                 sod = 1; break;
 1165              		.loc 1 401 0
 1166 01b0 0123     		movs	r3, #1
 1167 01b2 07F5AF52 		add	r2, r7, #5600
 1168 01b6 02F10302 		add	r2, r2, #3
 1169 01ba 1370     		strb	r3, [r2]
 1170 01bc 0DE0     		b	.L70
 1171              	.L73:
 402:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 403:..\src/command_processing.c ****                 sod = 2; break;
 1172              		.loc 1 403 0
 1173 01be 0223     		movs	r3, #2
 1174 01c0 07F5AF52 		add	r2, r7, #5600
 1175 01c4 02F10302 		add	r2, r2, #3
 1176 01c8 1370     		strb	r3, [r2]
 1177 01ca 06E0     		b	.L70
 1178              	.L74:
 404:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 405:..\src/command_processing.c ****                 sod = 4; break;
 1179              		.loc 1 405 0
 1180 01cc 0423     		movs	r3, #4
 1181 01ce 07F5AF52 		add	r2, r7, #5600
 1182 01d2 02F10302 		add	r2, r2, #3
 1183 01d6 1370     		strb	r3, [r2]
 1184 01d8 00BF     		nop
 1185              	.L70:
 406:..\src/command_processing.c ****         }
 407:..\src/command_processing.c ****             
 408:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1186              		.loc 1 408 0
 1187 01da 07F5AF53 		add	r3, r7, #5600
 1188 01de 03F10503 		add	r3, r3, #5
 1189 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1190 01e4 07F5B052 		add	r2, r7, #5632
 1191 01e8 02F10802 		add	r2, r2, #8
 1192 01ec 1268     		ldr	r2, [r2]
 1193 01ee 1344     		add	r3, r3, r2
 1194 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1195 01f2 002B     		cmp	r3, #0
 1196 01f4 40F0DA83 		bne	.L75
 409:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 45


 410:..\src/command_processing.c ****             // Add parameter data to packet
 411:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1197              		.loc 1 411 0
 1198 01f8 07F5AF53 		add	r3, r7, #5600
 1199 01fc 03F10503 		add	r3, r3, #5
 1200 0200 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1201 0202 07F10802 		add	r2, r7, #8
 1202 0206 1268     		ldr	r2, [r2]
 1203 0208 1344     		add	r3, r3, r2
 1204 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 020c 092B     		cmp	r3, #9
 1206 020e 02F23481 		bhi	.L109
 1207 0212 01A2     		adr	r2, .L78
 1208 0214 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1209              		.p2align 2
 1210              	.L78:
 1211 0218 41020000 		.word	.L77+1
 1212 021c FD020000 		.word	.L79+1
 1213 0220 41020000 		.word	.L77+1
 1214 0224 B9030000 		.word	.L80+1
 1215 0228 EB040000 		.word	.L81+1
 1216 022c 1B060000 		.word	.L82+1
 1217 0230 4B070000 		.word	.L83+1
 1218 0234 7B080000 		.word	.L84+1
 1219 0238 7B240000 		.word	.L109+1
 1220 023c 41020000 		.word	.L77+1
 1221              		.p2align 1
 1222              	.L77:
 412:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 413:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1223              		.loc 1 413 0
 1224 0240 0023     		movs	r3, #0
 1225 0242 07F5AF52 		add	r2, r7, #5600
 1226 0246 02F10702 		add	r2, r2, #7
 1227 024a 1370     		strb	r3, [r2]
 1228 024c 42E0     		b	.L85
 1229              	.L86:
 414:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1230              		.loc 1 414 0 discriminator 3
 1231 024e 07F5AF53 		add	r3, r7, #5600
 1232 0252 03F10703 		add	r3, r3, #7
 1233 0256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 0258 07F5AF52 		add	r2, r7, #5600
 1235 025c 02F10302 		add	r2, r2, #3
 1236 0260 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1237 0262 02FB03F3 		mul	r3, r2, r3
 1238 0266 1A46     		mov	r2, r3
 1239 0268 07F5AE53 		add	r3, r7, #5568
 1240 026c 03F11803 		add	r3, r3, #24
 1241 0270 1B68     		ldr	r3, [r3]
 1242 0272 1344     		add	r3, r3, r2
 1243 0274 07F5AE52 		add	r2, r7, #5568
 1244 0278 02F11402 		add	r2, r2, #20
 1245 027c 1360     		str	r3, [r2]
 415:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1246              		.loc 1 415 0 discriminator 3
 1247 027e 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 46


 1248 0282 03F10503 		add	r3, r3, #5
 1249 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1250 0288 3222     		movs	r2, #50
 1251 028a 02FB03F3 		mul	r3, r2, r3
 1252 028e 1A1D     		adds	r2, r3, #4
 1253 0290 07F5AF53 		add	r3, r7, #5600
 1254 0294 03F10703 		add	r3, r3, #7
 1255 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1256 029a 07F5AF51 		add	r1, r7, #5600
 1257 029e 01F10301 		add	r1, r1, #3
 1258 02a2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1259 02a4 01FB03F3 		mul	r3, r1, r3
 1260 02a8 1A44     		add	r2, r2, r3
 1261 02aa 07F5AE53 		add	r3, r7, #5568
 1262 02ae 03F11403 		add	r3, r3, #20
 1263 02b2 1B68     		ldr	r3, [r3]
 1264 02b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1265 02b6 07F16803 		add	r3, r7, #104
 1266 02ba 103B     		subs	r3, r3, #16
 1267 02bc 9954     		strb	r1, [r3, r2]
 413:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1268              		.loc 1 413 0 discriminator 3
 1269 02be 07F5AF53 		add	r3, r7, #5600
 1270 02c2 03F10703 		add	r3, r3, #7
 1271 02c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1272 02c8 0133     		adds	r3, r3, #1
 1273 02ca 07F5AF52 		add	r2, r7, #5600
 1274 02ce 02F10702 		add	r2, r2, #7
 1275 02d2 1370     		strb	r3, [r2]
 1276              	.L85:
 413:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1277              		.loc 1 413 0 is_stmt 0 discriminator 1
 1278 02d4 07F5AF53 		add	r3, r7, #5600
 1279 02d8 03F10503 		add	r3, r3, #5
 1280 02dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1281 02de 07F10803 		add	r3, r7, #8
 1282 02e2 043B     		subs	r3, r3, #4
 1283 02e4 1B68     		ldr	r3, [r3]
 1284 02e6 1344     		add	r3, r3, r2
 1285 02e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1286 02ea 07F5AF52 		add	r2, r7, #5600
 1287 02ee 02F10702 		add	r2, r2, #7
 1288 02f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1289 02f4 9A42     		cmp	r2, r3
 1290 02f6 AAD3     		bcc	.L86
 416:..\src/command_processing.c ****                     }
 417:..\src/command_processing.c ****                     break;                
 1291              		.loc 1 417 0 is_stmt 1
 1292 02f8 02F0BFB8 		b	.L109
 1293              	.L79:
 418:..\src/command_processing.c ****                 case TYPE_INT8:
 419:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1294              		.loc 1 419 0
 1295 02fc 0023     		movs	r3, #0
 1296 02fe 07F5AF52 		add	r2, r7, #5600
 1297 0302 02F10702 		add	r2, r2, #7
 1298 0306 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 47


 1299 0308 42E0     		b	.L87
 1300              	.L88:
 420:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1301              		.loc 1 420 0 discriminator 3
 1302 030a 07F5AF53 		add	r3, r7, #5600
 1303 030e 03F10703 		add	r3, r3, #7
 1304 0312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1305 0314 07F5AF52 		add	r2, r7, #5600
 1306 0318 02F10302 		add	r2, r2, #3
 1307 031c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1308 031e 02FB03F3 		mul	r3, r2, r3
 1309 0322 1A46     		mov	r2, r3
 1310 0324 07F5AE53 		add	r3, r7, #5568
 1311 0328 03F11803 		add	r3, r3, #24
 1312 032c 1B68     		ldr	r3, [r3]
 1313 032e 1344     		add	r3, r3, r2
 1314 0330 07F5AE52 		add	r2, r7, #5568
 1315 0334 02F11402 		add	r2, r2, #20
 1316 0338 1360     		str	r3, [r2]
 421:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1317              		.loc 1 421 0 discriminator 3
 1318 033a 07F5AF53 		add	r3, r7, #5600
 1319 033e 03F10503 		add	r3, r3, #5
 1320 0342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1321 0344 3222     		movs	r2, #50
 1322 0346 02FB03F3 		mul	r3, r2, r3
 1323 034a 1A1D     		adds	r2, r3, #4
 1324 034c 07F5AF53 		add	r3, r7, #5600
 1325 0350 03F10703 		add	r3, r3, #7
 1326 0354 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 0356 07F5AF51 		add	r1, r7, #5600
 1328 035a 01F10301 		add	r1, r1, #3
 1329 035e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1330 0360 01FB03F3 		mul	r3, r1, r3
 1331 0364 1A44     		add	r2, r2, r3
 1332 0366 07F5AE53 		add	r3, r7, #5568
 1333 036a 03F11403 		add	r3, r3, #20
 1334 036e 1B68     		ldr	r3, [r3]
 1335 0370 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1336 0372 07F16803 		add	r3, r7, #104
 1337 0376 103B     		subs	r3, r3, #16
 1338 0378 9954     		strb	r1, [r3, r2]
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1339              		.loc 1 419 0 discriminator 3
 1340 037a 07F5AF53 		add	r3, r7, #5600
 1341 037e 03F10703 		add	r3, r3, #7
 1342 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 0384 0133     		adds	r3, r3, #1
 1344 0386 07F5AF52 		add	r2, r7, #5600
 1345 038a 02F10702 		add	r2, r2, #7
 1346 038e 1370     		strb	r3, [r2]
 1347              	.L87:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1348              		.loc 1 419 0 is_stmt 0 discriminator 1
 1349 0390 07F5AF53 		add	r3, r7, #5600
 1350 0394 03F10503 		add	r3, r3, #5
 1351 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 48


 1352 039a 07F10803 		add	r3, r7, #8
 1353 039e 043B     		subs	r3, r3, #4
 1354 03a0 1B68     		ldr	r3, [r3]
 1355 03a2 1344     		add	r3, r3, r2
 1356 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1357 03a6 07F5AF52 		add	r2, r7, #5600
 1358 03aa 02F10702 		add	r2, r2, #7
 1359 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1360 03b0 9A42     		cmp	r2, r3
 1361 03b2 AAD3     		bcc	.L88
 422:..\src/command_processing.c ****                     }
 423:..\src/command_processing.c ****                     break;
 1362              		.loc 1 423 0 is_stmt 1
 1363 03b4 02F061B8 		b	.L109
 1364              	.L80:
 424:..\src/command_processing.c ****                 case TYPE_INT16:
 425:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1365              		.loc 1 425 0
 1366 03b8 0023     		movs	r3, #0
 1367 03ba 07F5AF52 		add	r2, r7, #5600
 1368 03be 02F10702 		add	r2, r2, #7
 1369 03c2 1370     		strb	r3, [r2]
 1370 03c4 7CE0     		b	.L89
 1371              	.L92:
 426:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1372              		.loc 1 426 0
 1373 03c6 07F5AF53 		add	r3, r7, #5600
 1374 03ca 03F10703 		add	r3, r3, #7
 1375 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 03d0 07F5AF52 		add	r2, r7, #5600
 1377 03d4 02F10302 		add	r2, r2, #3
 1378 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1379 03da 02FB03F3 		mul	r3, r2, r3
 1380 03de 1A46     		mov	r2, r3
 1381 03e0 07F5AE53 		add	r3, r7, #5568
 1382 03e4 03F11803 		add	r3, r3, #24
 1383 03e8 1B68     		ldr	r3, [r3]
 1384 03ea 1344     		add	r3, r3, r2
 1385 03ec 07F5AE52 		add	r2, r7, #5568
 1386 03f0 02F11402 		add	r2, r2, #20
 1387 03f4 1360     		str	r3, [r2]
 427:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1388              		.loc 1 427 0
 1389 03f6 07F5AE53 		add	r3, r7, #5568
 1390 03fa 03F11403 		add	r3, r3, #20
 1391 03fe 1B68     		ldr	r3, [r3]
 1392 0400 B3F90020 		ldrsh	r2, [r3]
 1393 0404 07F12803 		add	r3, r7, #40
 1394 0408 0A3B     		subs	r3, r3, #10
 1395 040a 1A80     		strh	r2, [r3]	@ movhi
 428:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1396              		.loc 1 428 0
 1397 040c 0023     		movs	r3, #0
 1398 040e 07F5AF52 		add	r2, r7, #5600
 1399 0412 02F10602 		add	r2, r2, #6
 1400 0416 1370     		strb	r3, [r2]
 1401 0418 3BE0     		b	.L90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 49


 1402              	.L91:
 429:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1403              		.loc 1 429 0 discriminator 3
 1404 041a 07F5AF53 		add	r3, r7, #5600
 1405 041e 03F10503 		add	r3, r3, #5
 1406 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1407 0424 3222     		movs	r2, #50
 1408 0426 02FB03F3 		mul	r3, r2, r3
 1409 042a 1A1D     		adds	r2, r3, #4
 1410 042c 07F5AF53 		add	r3, r7, #5600
 1411 0430 03F10703 		add	r3, r3, #7
 1412 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 0436 07F5AF51 		add	r1, r7, #5600
 1414 043a 01F10301 		add	r1, r1, #3
 1415 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1416 0440 01FB03F3 		mul	r3, r1, r3
 1417 0444 1A44     		add	r2, r2, r3
 1418 0446 07F5AF53 		add	r3, r7, #5600
 1419 044a 03F10303 		add	r3, r3, #3
 1420 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1421 0450 1A44     		add	r2, r2, r3
 1422 0452 07F5AF53 		add	r3, r7, #5600
 1423 0456 03F10603 		add	r3, r3, #6
 1424 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1425 045c D31A     		subs	r3, r2, r3
 1426 045e 5A1E     		subs	r2, r3, #1
 1427 0460 07F5AF53 		add	r3, r7, #5600
 1428 0464 03F10603 		add	r3, r3, #6
 1429 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1430 046a 07F12803 		add	r3, r7, #40
 1431 046e 0A3B     		subs	r3, r3, #10
 1432 0470 0B44     		add	r3, r3, r1
 1433 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1434 0474 07F16803 		add	r3, r7, #104
 1435 0478 103B     		subs	r3, r3, #16
 1436 047a 9954     		strb	r1, [r3, r2]
 428:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1437              		.loc 1 428 0 discriminator 3
 1438 047c 07F5AF53 		add	r3, r7, #5600
 1439 0480 03F10603 		add	r3, r3, #6
 1440 0484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 0486 0133     		adds	r3, r3, #1
 1442 0488 07F5AF52 		add	r2, r7, #5600
 1443 048c 02F10602 		add	r2, r2, #6
 1444 0490 1370     		strb	r3, [r2]
 1445              	.L90:
 428:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1446              		.loc 1 428 0 is_stmt 0 discriminator 1
 1447 0492 07F5AF53 		add	r3, r7, #5600
 1448 0496 03F10603 		add	r3, r3, #6
 1449 049a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1450 049c 07F5AF53 		add	r3, r7, #5600
 1451 04a0 03F10303 		add	r3, r3, #3
 1452 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 04a6 9A42     		cmp	r2, r3
 1454 04a8 B7D3     		bcc	.L91
 425:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 50


 1455              		.loc 1 425 0 is_stmt 1 discriminator 2
 1456 04aa 07F5AF53 		add	r3, r7, #5600
 1457 04ae 03F10703 		add	r3, r3, #7
 1458 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1459 04b4 0133     		adds	r3, r3, #1
 1460 04b6 07F5AF52 		add	r2, r7, #5600
 1461 04ba 02F10702 		add	r2, r2, #7
 1462 04be 1370     		strb	r3, [r2]
 1463              	.L89:
 425:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1464              		.loc 1 425 0 is_stmt 0 discriminator 1
 1465 04c0 07F5AF53 		add	r3, r7, #5600
 1466 04c4 03F10503 		add	r3, r3, #5
 1467 04c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1468 04ca 07F10803 		add	r3, r7, #8
 1469 04ce 043B     		subs	r3, r3, #4
 1470 04d0 1B68     		ldr	r3, [r3]
 1471 04d2 1344     		add	r3, r3, r2
 1472 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 04d6 07F5AF52 		add	r2, r7, #5600
 1474 04da 02F10702 		add	r2, r2, #7
 1475 04de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1476 04e0 9A42     		cmp	r2, r3
 1477 04e2 FFF470AF 		bcc	.L92
 430:..\src/command_processing.c ****                         }
 431:..\src/command_processing.c ****                     }
 432:..\src/command_processing.c ****                     break;
 1478              		.loc 1 432 0 is_stmt 1
 1479 04e6 01F0C8BF 		b	.L109
 1480              	.L81:
 433:..\src/command_processing.c ****                 case TYPE_UINT16:
 434:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1481              		.loc 1 434 0
 1482 04ea 0023     		movs	r3, #0
 1483 04ec 07F5AF52 		add	r2, r7, #5600
 1484 04f0 02F10702 		add	r2, r2, #7
 1485 04f4 1370     		strb	r3, [r2]
 1486 04f6 7BE0     		b	.L93
 1487              	.L96:
 435:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1488              		.loc 1 435 0
 1489 04f8 07F5AF53 		add	r3, r7, #5600
 1490 04fc 03F10703 		add	r3, r3, #7
 1491 0500 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1492 0502 07F5AF52 		add	r2, r7, #5600
 1493 0506 02F10302 		add	r2, r2, #3
 1494 050a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1495 050c 02FB03F3 		mul	r3, r2, r3
 1496 0510 1A46     		mov	r2, r3
 1497 0512 07F5AE53 		add	r3, r7, #5568
 1498 0516 03F11803 		add	r3, r3, #24
 1499 051a 1B68     		ldr	r3, [r3]
 1500 051c 1344     		add	r3, r3, r2
 1501 051e 07F5AE52 		add	r2, r7, #5568
 1502 0522 02F11402 		add	r2, r2, #20
 1503 0526 1360     		str	r3, [r2]
 436:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 51


 1504              		.loc 1 436 0
 1505 0528 07F5AE53 		add	r3, r7, #5568
 1506 052c 03F11403 		add	r3, r3, #20
 1507 0530 1B68     		ldr	r3, [r3]
 1508 0532 1A88     		ldrh	r2, [r3]
 1509 0534 07F12803 		add	r3, r7, #40
 1510 0538 0C3B     		subs	r3, r3, #12
 1511 053a 1A80     		strh	r2, [r3]	@ movhi
 437:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1512              		.loc 1 437 0
 1513 053c 0023     		movs	r3, #0
 1514 053e 07F5AF52 		add	r2, r7, #5600
 1515 0542 02F10602 		add	r2, r2, #6
 1516 0546 1370     		strb	r3, [r2]
 1517 0548 3BE0     		b	.L94
 1518              	.L95:
 438:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1519              		.loc 1 438 0 discriminator 3
 1520 054a 07F5AF53 		add	r3, r7, #5600
 1521 054e 03F10503 		add	r3, r3, #5
 1522 0552 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1523 0554 3222     		movs	r2, #50
 1524 0556 02FB03F3 		mul	r3, r2, r3
 1525 055a 1A1D     		adds	r2, r3, #4
 1526 055c 07F5AF53 		add	r3, r7, #5600
 1527 0560 03F10703 		add	r3, r3, #7
 1528 0564 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1529 0566 07F5AF51 		add	r1, r7, #5600
 1530 056a 01F10301 		add	r1, r1, #3
 1531 056e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1532 0570 01FB03F3 		mul	r3, r1, r3
 1533 0574 1A44     		add	r2, r2, r3
 1534 0576 07F5AF53 		add	r3, r7, #5600
 1535 057a 03F10303 		add	r3, r3, #3
 1536 057e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 0580 1A44     		add	r2, r2, r3
 1538 0582 07F5AF53 		add	r3, r7, #5600
 1539 0586 03F10603 		add	r3, r3, #6
 1540 058a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1541 058c D31A     		subs	r3, r2, r3
 1542 058e 5A1E     		subs	r2, r3, #1
 1543 0590 07F5AF53 		add	r3, r7, #5600
 1544 0594 03F10603 		add	r3, r3, #6
 1545 0598 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1546 059a 07F12803 		add	r3, r7, #40
 1547 059e 0C3B     		subs	r3, r3, #12
 1548 05a0 0B44     		add	r3, r3, r1
 1549 05a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1550 05a4 07F16803 		add	r3, r7, #104
 1551 05a8 103B     		subs	r3, r3, #16
 1552 05aa 9954     		strb	r1, [r3, r2]
 437:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1553              		.loc 1 437 0 discriminator 3
 1554 05ac 07F5AF53 		add	r3, r7, #5600
 1555 05b0 03F10603 		add	r3, r3, #6
 1556 05b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1557 05b6 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 52


 1558 05b8 07F5AF52 		add	r2, r7, #5600
 1559 05bc 02F10602 		add	r2, r2, #6
 1560 05c0 1370     		strb	r3, [r2]
 1561              	.L94:
 437:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1562              		.loc 1 437 0 is_stmt 0 discriminator 1
 1563 05c2 07F5AF53 		add	r3, r7, #5600
 1564 05c6 03F10603 		add	r3, r3, #6
 1565 05ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1566 05cc 07F5AF53 		add	r3, r7, #5600
 1567 05d0 03F10303 		add	r3, r3, #3
 1568 05d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1569 05d6 9A42     		cmp	r2, r3
 1570 05d8 B7D3     		bcc	.L95
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1571              		.loc 1 434 0 is_stmt 1 discriminator 2
 1572 05da 07F5AF53 		add	r3, r7, #5600
 1573 05de 03F10703 		add	r3, r3, #7
 1574 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575 05e4 0133     		adds	r3, r3, #1
 1576 05e6 07F5AF52 		add	r2, r7, #5600
 1577 05ea 02F10702 		add	r2, r2, #7
 1578 05ee 1370     		strb	r3, [r2]
 1579              	.L93:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1580              		.loc 1 434 0 is_stmt 0 discriminator 1
 1581 05f0 07F5AF53 		add	r3, r7, #5600
 1582 05f4 03F10503 		add	r3, r3, #5
 1583 05f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1584 05fa 07F10803 		add	r3, r7, #8
 1585 05fe 043B     		subs	r3, r3, #4
 1586 0600 1B68     		ldr	r3, [r3]
 1587 0602 1344     		add	r3, r3, r2
 1588 0604 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1589 0606 07F5AF52 		add	r2, r7, #5600
 1590 060a 02F10702 		add	r2, r2, #7
 1591 060e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1592 0610 9A42     		cmp	r2, r3
 1593 0612 FFF471AF 		bcc	.L96
 439:..\src/command_processing.c ****                         }
 440:..\src/command_processing.c ****                     }
 441:..\src/command_processing.c ****                     break;
 1594              		.loc 1 441 0 is_stmt 1
 1595 0616 01F030BF 		b	.L109
 1596              	.L82:
 442:..\src/command_processing.c ****                 case TYPE_INT32: 
 443:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1597              		.loc 1 443 0
 1598 061a 0023     		movs	r3, #0
 1599 061c 07F5AF52 		add	r2, r7, #5600
 1600 0620 02F10702 		add	r2, r2, #7
 1601 0624 1370     		strb	r3, [r2]
 1602 0626 7BE0     		b	.L97
 1603              	.L100:
 444:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1604              		.loc 1 444 0
 1605 0628 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 53


 1606 062c 03F10703 		add	r3, r3, #7
 1607 0630 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1608 0632 07F5AF52 		add	r2, r7, #5600
 1609 0636 02F10302 		add	r2, r2, #3
 1610 063a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1611 063c 02FB03F3 		mul	r3, r2, r3
 1612 0640 1A46     		mov	r2, r3
 1613 0642 07F5AE53 		add	r3, r7, #5568
 1614 0646 03F11803 		add	r3, r3, #24
 1615 064a 1B68     		ldr	r3, [r3]
 1616 064c 1344     		add	r3, r3, r2
 1617 064e 07F5AE52 		add	r2, r7, #5568
 1618 0652 02F11402 		add	r2, r2, #20
 1619 0656 1360     		str	r3, [r2]
 445:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1620              		.loc 1 445 0
 1621 0658 07F5AE53 		add	r3, r7, #5568
 1622 065c 03F11403 		add	r3, r3, #20
 1623 0660 1B68     		ldr	r3, [r3]
 1624 0662 1A68     		ldr	r2, [r3]
 1625 0664 07F12803 		add	r3, r7, #40
 1626 0668 103B     		subs	r3, r3, #16
 1627 066a 1A60     		str	r2, [r3]
 446:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1628              		.loc 1 446 0
 1629 066c 0023     		movs	r3, #0
 1630 066e 07F5AF52 		add	r2, r7, #5600
 1631 0672 02F10602 		add	r2, r2, #6
 1632 0676 1370     		strb	r3, [r2]
 1633 0678 3BE0     		b	.L98
 1634              	.L99:
 447:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1635              		.loc 1 447 0 discriminator 3
 1636 067a 07F5AF53 		add	r3, r7, #5600
 1637 067e 03F10503 		add	r3, r3, #5
 1638 0682 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1639 0684 3222     		movs	r2, #50
 1640 0686 02FB03F3 		mul	r3, r2, r3
 1641 068a 1A1D     		adds	r2, r3, #4
 1642 068c 07F5AF53 		add	r3, r7, #5600
 1643 0690 03F10703 		add	r3, r3, #7
 1644 0694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1645 0696 07F5AF51 		add	r1, r7, #5600
 1646 069a 01F10301 		add	r1, r1, #3
 1647 069e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1648 06a0 01FB03F3 		mul	r3, r1, r3
 1649 06a4 1A44     		add	r2, r2, r3
 1650 06a6 07F5AF53 		add	r3, r7, #5600
 1651 06aa 03F10303 		add	r3, r3, #3
 1652 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1653 06b0 1A44     		add	r2, r2, r3
 1654 06b2 07F5AF53 		add	r3, r7, #5600
 1655 06b6 03F10603 		add	r3, r3, #6
 1656 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1657 06bc D31A     		subs	r3, r2, r3
 1658 06be 5A1E     		subs	r2, r3, #1
 1659 06c0 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 54


 1660 06c4 03F10603 		add	r3, r3, #6
 1661 06c8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1662 06ca 07F12803 		add	r3, r7, #40
 1663 06ce 103B     		subs	r3, r3, #16
 1664 06d0 0B44     		add	r3, r3, r1
 1665 06d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1666 06d4 07F16803 		add	r3, r7, #104
 1667 06d8 103B     		subs	r3, r3, #16
 1668 06da 9954     		strb	r1, [r3, r2]
 446:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1669              		.loc 1 446 0 discriminator 3
 1670 06dc 07F5AF53 		add	r3, r7, #5600
 1671 06e0 03F10603 		add	r3, r3, #6
 1672 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1673 06e6 0133     		adds	r3, r3, #1
 1674 06e8 07F5AF52 		add	r2, r7, #5600
 1675 06ec 02F10602 		add	r2, r2, #6
 1676 06f0 1370     		strb	r3, [r2]
 1677              	.L98:
 446:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1678              		.loc 1 446 0 is_stmt 0 discriminator 1
 1679 06f2 07F5AF53 		add	r3, r7, #5600
 1680 06f6 03F10603 		add	r3, r3, #6
 1681 06fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1682 06fc 07F5AF53 		add	r3, r7, #5600
 1683 0700 03F10303 		add	r3, r3, #3
 1684 0704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1685 0706 9A42     		cmp	r2, r3
 1686 0708 B7D3     		bcc	.L99
 443:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1687              		.loc 1 443 0 is_stmt 1 discriminator 2
 1688 070a 07F5AF53 		add	r3, r7, #5600
 1689 070e 03F10703 		add	r3, r3, #7
 1690 0712 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 0714 0133     		adds	r3, r3, #1
 1692 0716 07F5AF52 		add	r2, r7, #5600
 1693 071a 02F10702 		add	r2, r2, #7
 1694 071e 1370     		strb	r3, [r2]
 1695              	.L97:
 443:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1696              		.loc 1 443 0 is_stmt 0 discriminator 1
 1697 0720 07F5AF53 		add	r3, r7, #5600
 1698 0724 03F10503 		add	r3, r3, #5
 1699 0728 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1700 072a 07F10803 		add	r3, r7, #8
 1701 072e 043B     		subs	r3, r3, #4
 1702 0730 1B68     		ldr	r3, [r3]
 1703 0732 1344     		add	r3, r3, r2
 1704 0734 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1705 0736 07F5AF52 		add	r2, r7, #5600
 1706 073a 02F10702 		add	r2, r2, #7
 1707 073e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1708 0740 9A42     		cmp	r2, r3
 1709 0742 FFF471AF 		bcc	.L100
 448:..\src/command_processing.c ****                         }
 449:..\src/command_processing.c ****                     }
 450:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 55


 1710              		.loc 1 450 0 is_stmt 1
 1711 0746 01F098BE 		b	.L109
 1712              	.L83:
 451:..\src/command_processing.c ****                 case TYPE_UINT32: 
 452:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1713              		.loc 1 452 0
 1714 074a 0023     		movs	r3, #0
 1715 074c 07F5AF52 		add	r2, r7, #5600
 1716 0750 02F10702 		add	r2, r2, #7
 1717 0754 1370     		strb	r3, [r2]
 1718 0756 7BE0     		b	.L101
 1719              	.L104:
 453:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1720              		.loc 1 453 0
 1721 0758 07F5AF53 		add	r3, r7, #5600
 1722 075c 03F10703 		add	r3, r3, #7
 1723 0760 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1724 0762 07F5AF52 		add	r2, r7, #5600
 1725 0766 02F10302 		add	r2, r2, #3
 1726 076a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1727 076c 02FB03F3 		mul	r3, r2, r3
 1728 0770 1A46     		mov	r2, r3
 1729 0772 07F5AE53 		add	r3, r7, #5568
 1730 0776 03F11803 		add	r3, r3, #24
 1731 077a 1B68     		ldr	r3, [r3]
 1732 077c 1344     		add	r3, r3, r2
 1733 077e 07F5AE52 		add	r2, r7, #5568
 1734 0782 02F11402 		add	r2, r2, #20
 1735 0786 1360     		str	r3, [r2]
 454:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1736              		.loc 1 454 0
 1737 0788 07F5AE53 		add	r3, r7, #5568
 1738 078c 03F11403 		add	r3, r3, #20
 1739 0790 1B68     		ldr	r3, [r3]
 1740 0792 1A68     		ldr	r2, [r3]
 1741 0794 07F12803 		add	r3, r7, #40
 1742 0798 143B     		subs	r3, r3, #20
 1743 079a 1A60     		str	r2, [r3]
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1744              		.loc 1 455 0
 1745 079c 0023     		movs	r3, #0
 1746 079e 07F5AF52 		add	r2, r7, #5600
 1747 07a2 02F10602 		add	r2, r2, #6
 1748 07a6 1370     		strb	r3, [r2]
 1749 07a8 3BE0     		b	.L102
 1750              	.L103:
 456:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1751              		.loc 1 456 0 discriminator 3
 1752 07aa 07F5AF53 		add	r3, r7, #5600
 1753 07ae 03F10503 		add	r3, r3, #5
 1754 07b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1755 07b4 3222     		movs	r2, #50
 1756 07b6 02FB03F3 		mul	r3, r2, r3
 1757 07ba 1A1D     		adds	r2, r3, #4
 1758 07bc 07F5AF53 		add	r3, r7, #5600
 1759 07c0 03F10703 		add	r3, r3, #7
 1760 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 56


 1761 07c6 07F5AF51 		add	r1, r7, #5600
 1762 07ca 01F10301 		add	r1, r1, #3
 1763 07ce 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1764 07d0 01FB03F3 		mul	r3, r1, r3
 1765 07d4 1A44     		add	r2, r2, r3
 1766 07d6 07F5AF53 		add	r3, r7, #5600
 1767 07da 03F10303 		add	r3, r3, #3
 1768 07de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 07e0 1A44     		add	r2, r2, r3
 1770 07e2 07F5AF53 		add	r3, r7, #5600
 1771 07e6 03F10603 		add	r3, r3, #6
 1772 07ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1773 07ec D31A     		subs	r3, r2, r3
 1774 07ee 5A1E     		subs	r2, r3, #1
 1775 07f0 07F5AF53 		add	r3, r7, #5600
 1776 07f4 03F10603 		add	r3, r3, #6
 1777 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1778 07fa 07F12803 		add	r3, r7, #40
 1779 07fe 143B     		subs	r3, r3, #20
 1780 0800 0B44     		add	r3, r3, r1
 1781 0802 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1782 0804 07F16803 		add	r3, r7, #104
 1783 0808 103B     		subs	r3, r3, #16
 1784 080a 9954     		strb	r1, [r3, r2]
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1785              		.loc 1 455 0 discriminator 3
 1786 080c 07F5AF53 		add	r3, r7, #5600
 1787 0810 03F10603 		add	r3, r3, #6
 1788 0814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 0816 0133     		adds	r3, r3, #1
 1790 0818 07F5AF52 		add	r2, r7, #5600
 1791 081c 02F10602 		add	r2, r2, #6
 1792 0820 1370     		strb	r3, [r2]
 1793              	.L102:
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1794              		.loc 1 455 0 is_stmt 0 discriminator 1
 1795 0822 07F5AF53 		add	r3, r7, #5600
 1796 0826 03F10603 		add	r3, r3, #6
 1797 082a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1798 082c 07F5AF53 		add	r3, r7, #5600
 1799 0830 03F10303 		add	r3, r3, #3
 1800 0834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0836 9A42     		cmp	r2, r3
 1802 0838 B7D3     		bcc	.L103
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1803              		.loc 1 452 0 is_stmt 1 discriminator 2
 1804 083a 07F5AF53 		add	r3, r7, #5600
 1805 083e 03F10703 		add	r3, r3, #7
 1806 0842 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1807 0844 0133     		adds	r3, r3, #1
 1808 0846 07F5AF52 		add	r2, r7, #5600
 1809 084a 02F10702 		add	r2, r2, #7
 1810 084e 1370     		strb	r3, [r2]
 1811              	.L101:
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1812              		.loc 1 452 0 is_stmt 0 discriminator 1
 1813 0850 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 57


 1814 0854 03F10503 		add	r3, r3, #5
 1815 0858 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1816 085a 07F10803 		add	r3, r7, #8
 1817 085e 043B     		subs	r3, r3, #4
 1818 0860 1B68     		ldr	r3, [r3]
 1819 0862 1344     		add	r3, r3, r2
 1820 0864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1821 0866 07F5AF52 		add	r2, r7, #5600
 1822 086a 02F10702 		add	r2, r2, #7
 1823 086e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1824 0870 9A42     		cmp	r2, r3
 1825 0872 FFF471AF 		bcc	.L104
 457:..\src/command_processing.c ****                         }
 458:..\src/command_processing.c ****                     }
 459:..\src/command_processing.c ****                     break;
 1826              		.loc 1 459 0 is_stmt 1
 1827 0876 01F000BE 		b	.L109
 1828              	.L84:
 460:..\src/command_processing.c ****                     
 461:..\src/command_processing.c ****                 case TYPE_FLOAT:
 462:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1829              		.loc 1 462 0
 1830 087a 0023     		movs	r3, #0
 1831 087c 07F5AF52 		add	r2, r7, #5600
 1832 0880 02F10702 		add	r2, r2, #7
 1833 0884 1370     		strb	r3, [r2]
 1834 0886 7BE0     		b	.L105
 1835              	.L108:
 463:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1836              		.loc 1 463 0
 1837 0888 07F5AF53 		add	r3, r7, #5600
 1838 088c 03F10703 		add	r3, r3, #7
 1839 0890 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1840 0892 07F5AF52 		add	r2, r7, #5600
 1841 0896 02F10302 		add	r2, r2, #3
 1842 089a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1843 089c 02FB03F3 		mul	r3, r2, r3
 1844 08a0 1A46     		mov	r2, r3
 1845 08a2 07F5AE53 		add	r3, r7, #5568
 1846 08a6 03F11803 		add	r3, r3, #24
 1847 08aa 1B68     		ldr	r3, [r3]
 1848 08ac 1344     		add	r3, r3, r2
 1849 08ae 07F5AE52 		add	r2, r7, #5568
 1850 08b2 02F11402 		add	r2, r2, #20
 1851 08b6 1360     		str	r3, [r2]
 464:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1852              		.loc 1 464 0
 1853 08b8 07F5AE53 		add	r3, r7, #5568
 1854 08bc 03F11403 		add	r3, r3, #20
 1855 08c0 1B68     		ldr	r3, [r3]
 1856 08c2 1A68     		ldr	r2, [r3]	@ float
 1857 08c4 07F12803 		add	r3, r7, #40
 1858 08c8 083B     		subs	r3, r3, #8
 1859 08ca 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1860              		.loc 1 465 0
 1861 08cc 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 58


 1862 08ce 07F5AF52 		add	r2, r7, #5600
 1863 08d2 02F10602 		add	r2, r2, #6
 1864 08d6 1370     		strb	r3, [r2]
 1865 08d8 3BE0     		b	.L106
 1866              	.L107:
 466:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1867              		.loc 1 466 0 discriminator 3
 1868 08da 07F5AF53 		add	r3, r7, #5600
 1869 08de 03F10503 		add	r3, r3, #5
 1870 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1871 08e4 3222     		movs	r2, #50
 1872 08e6 02FB03F3 		mul	r3, r2, r3
 1873 08ea 1A1D     		adds	r2, r3, #4
 1874 08ec 07F5AF53 		add	r3, r7, #5600
 1875 08f0 03F10703 		add	r3, r3, #7
 1876 08f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1877 08f6 07F5AF51 		add	r1, r7, #5600
 1878 08fa 01F10301 		add	r1, r1, #3
 1879 08fe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1880 0900 01FB03F3 		mul	r3, r1, r3
 1881 0904 1A44     		add	r2, r2, r3
 1882 0906 07F5AF53 		add	r3, r7, #5600
 1883 090a 03F10303 		add	r3, r3, #3
 1884 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1885 0910 1A44     		add	r2, r2, r3
 1886 0912 07F5AF53 		add	r3, r7, #5600
 1887 0916 03F10603 		add	r3, r3, #6
 1888 091a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1889 091c D31A     		subs	r3, r2, r3
 1890 091e 5A1E     		subs	r2, r3, #1
 1891 0920 07F5AF53 		add	r3, r7, #5600
 1892 0924 03F10603 		add	r3, r3, #6
 1893 0928 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1894 092a 07F12803 		add	r3, r7, #40
 1895 092e 083B     		subs	r3, r3, #8
 1896 0930 0B44     		add	r3, r3, r1
 1897 0932 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1898 0934 07F16803 		add	r3, r7, #104
 1899 0938 103B     		subs	r3, r3, #16
 1900 093a 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1901              		.loc 1 465 0 discriminator 3
 1902 093c 07F5AF53 		add	r3, r7, #5600
 1903 0940 03F10603 		add	r3, r3, #6
 1904 0944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1905 0946 0133     		adds	r3, r3, #1
 1906 0948 07F5AF52 		add	r2, r7, #5600
 1907 094c 02F10602 		add	r2, r2, #6
 1908 0950 1370     		strb	r3, [r2]
 1909              	.L106:
 465:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1910              		.loc 1 465 0 is_stmt 0 discriminator 1
 1911 0952 07F5AF53 		add	r3, r7, #5600
 1912 0956 03F10603 		add	r3, r3, #6
 1913 095a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1914 095c 07F5AF53 		add	r3, r7, #5600
 1915 0960 03F10303 		add	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 59


 1916 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1917 0966 9A42     		cmp	r2, r3
 1918 0968 B7D3     		bcc	.L107
 462:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1919              		.loc 1 462 0 is_stmt 1 discriminator 2
 1920 096a 07F5AF53 		add	r3, r7, #5600
 1921 096e 03F10703 		add	r3, r3, #7
 1922 0972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1923 0974 0133     		adds	r3, r3, #1
 1924 0976 07F5AF52 		add	r2, r7, #5600
 1925 097a 02F10702 		add	r2, r2, #7
 1926 097e 1370     		strb	r3, [r2]
 1927              	.L105:
 462:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1928              		.loc 1 462 0 is_stmt 0 discriminator 1
 1929 0980 07F5AF53 		add	r3, r7, #5600
 1930 0984 03F10503 		add	r3, r3, #5
 1931 0988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1932 098a 07F10803 		add	r3, r7, #8
 1933 098e 043B     		subs	r3, r3, #4
 1934 0990 1B68     		ldr	r3, [r3]
 1935 0992 1344     		add	r3, r3, r2
 1936 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1937 0996 07F5AF52 		add	r2, r7, #5600
 1938 099a 02F10702 		add	r2, r2, #7
 1939 099e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1940 09a0 9A42     		cmp	r2, r3
 1941 09a2 FFF471AF 		bcc	.L108
 467:..\src/command_processing.c ****                         }
 468:..\src/command_processing.c ****                     }
 469:..\src/command_processing.c ****                     break;   
 1942              		.loc 1 469 0 is_stmt 1 discriminator 7
 1943 09a6 00BF     		nop
 1944 09a8 01F067BD 		b	.L109
 1945              	.L75:
 470:..\src/command_processing.c ****             }
 471:..\src/command_processing.c ****         }
 472:..\src/command_processing.c ****         else {
 473:..\src/command_processing.c ****             
 474:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 475:..\src/command_processing.c ****             
 476:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 477:..\src/command_processing.c ****                 switch(idx+1){
 1946              		.loc 1 477 0
 1947 09ac 07F5AF53 		add	r3, r7, #5600
 1948 09b0 03F10503 		add	r3, r3, #5
 1949 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1950 09b6 0133     		adds	r3, r3, #1
 1951 09b8 023B     		subs	r3, r3, #2
 1952 09ba 332B     		cmp	r3, #51
 1953 09bc 01F25C85 		bhi	.L276
 1954 09c0 01A2     		adr	r2, .L112
 1955 09c2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1956 09c6 00BF     		.p2align 2
 1957              	.L112:
 1958 09c8 990A0000 		.word	.L111+1
 1959 09cc 650F0000 		.word	.L113+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 60


 1960 09d0 79240000 		.word	.L276+1
 1961 09d4 79240000 		.word	.L276+1
 1962 09d8 79240000 		.word	.L276+1
 1963 09dc 79240000 		.word	.L276+1
 1964 09e0 35140000 		.word	.L114+1
 1965 09e4 79240000 		.word	.L276+1
 1966 09e8 79240000 		.word	.L276+1
 1967 09ec 5B150000 		.word	.L115+1
 1968 09f0 79240000 		.word	.L276+1
 1969 09f4 79240000 		.word	.L276+1
 1970 09f8 79240000 		.word	.L276+1
 1971 09fc 79240000 		.word	.L276+1
 1972 0a00 79240000 		.word	.L276+1
 1973 0a04 79240000 		.word	.L276+1
 1974 0a08 79240000 		.word	.L276+1
 1975 0a0c 79240000 		.word	.L276+1
 1976 0a10 79240000 		.word	.L276+1
 1977 0a14 79240000 		.word	.L276+1
 1978 0a18 79240000 		.word	.L276+1
 1979 0a1c 1F170000 		.word	.L116+1
 1980 0a20 79240000 		.word	.L276+1
 1981 0a24 79240000 		.word	.L276+1
 1982 0a28 79240000 		.word	.L276+1
 1983 0a2c 79240000 		.word	.L276+1
 1984 0a30 79240000 		.word	.L276+1
 1985 0a34 79240000 		.word	.L276+1
 1986 0a38 79240000 		.word	.L276+1
 1987 0a3c 79240000 		.word	.L276+1
 1988 0a40 79240000 		.word	.L276+1
 1989 0a44 79240000 		.word	.L276+1
 1990 0a48 79240000 		.word	.L276+1
 1991 0a4c 79240000 		.word	.L276+1
 1992 0a50 79240000 		.word	.L276+1
 1993 0a54 79240000 		.word	.L276+1
 1994 0a58 79240000 		.word	.L276+1
 1995 0a5c 79240000 		.word	.L276+1
 1996 0a60 79240000 		.word	.L276+1
 1997 0a64 79240000 		.word	.L276+1
 1998 0a68 79240000 		.word	.L276+1
 1999 0a6c 79240000 		.word	.L276+1
 2000 0a70 F3170000 		.word	.L117+1
 2001 0a74 BB1C0000 		.word	.L118+1
 2002 0a78 79240000 		.word	.L276+1
 2003 0a7c 79240000 		.word	.L276+1
 2004 0a80 79240000 		.word	.L276+1
 2005 0a84 79240000 		.word	.L276+1
 2006 0a88 89210000 		.word	.L119+1
 2007 0a8c 79240000 		.word	.L276+1
 2008 0a90 79240000 		.word	.L276+1
 2009 0a94 AD220000 		.word	.L120+1
 2010              		.p2align 1
 2011              	.L111:
 478:..\src/command_processing.c ****                     case 2:         // Position PID
 479:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2012              		.loc 1 479 0
 2013 0a98 07F5AE53 		add	r3, r7, #5568
 2014 0a9c 03F11F03 		add	r3, r3, #31
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 61


 2015 0aa0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2016 0aa2 AC49     		ldr	r1, .L282
 2017 0aa4 1346     		mov	r3, r2
 2018 0aa6 DB00     		lsls	r3, r3, #3
 2019 0aa8 9B1A     		subs	r3, r3, r2
 2020 0aaa 1B01     		lsls	r3, r3, #4
 2021 0aac 0B44     		add	r3, r3, r1
 2022 0aae 03F20F13 		addw	r3, r3, #271
 2023 0ab2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2024 0ab4 032B     		cmp	r3, #3
 2025 0ab6 00F02981 		beq	.L121
 480:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2026              		.loc 1 480 0
 2027 0aba 07F5AE53 		add	r3, r7, #5568
 2028 0abe 03F11F03 		add	r3, r3, #31
 2029 0ac2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2030 0ac4 A349     		ldr	r1, .L282
 2031 0ac6 1346     		mov	r3, r2
 2032 0ac8 DB00     		lsls	r3, r3, #3
 2033 0aca 9B1A     		subs	r3, r3, r2
 2034 0acc 1B01     		lsls	r3, r3, #4
 2035 0ace 0B44     		add	r3, r3, r1
 2036 0ad0 B033     		adds	r3, r3, #176
 2037 0ad2 1B68     		ldr	r3, [r3]
 2038 0ad4 1846     		mov	r0, r3
 2039 0ad6 FFF7FEFF 		bl	__aeabi_i2f
 2040 0ada 0346     		mov	r3, r0
 2041 0adc 4FF08F41 		mov	r1, #1199570944
 2042 0ae0 1846     		mov	r0, r3
 2043 0ae2 FFF7FEFF 		bl	__aeabi_fdiv
 2044 0ae6 0346     		mov	r3, r0
 2045 0ae8 1A46     		mov	r2, r3
 2046 0aea 07F12803 		add	r3, r7, #40
 2047 0aee 083B     		subs	r3, r3, #8
 2048 0af0 1A60     		str	r2, [r3]	@ float
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2049              		.loc 1 481 0
 2050 0af2 0023     		movs	r3, #0
 2051 0af4 07F5AF52 		add	r2, r7, #5600
 2052 0af8 02F10702 		add	r2, r2, #7
 2053 0afc 1370     		strb	r3, [r2]
 2054 0afe 2EE0     		b	.L122
 2055              	.L123:
 482:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2056              		.loc 1 482 0 discriminator 3
 2057 0b00 07F5AF53 		add	r3, r7, #5600
 2058 0b04 03F10503 		add	r3, r3, #5
 2059 0b08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2060 0b0a 3222     		movs	r2, #50
 2061 0b0c 02FB03F3 		mul	r3, r2, r3
 2062 0b10 1A1D     		adds	r2, r3, #4
 2063 0b12 07F5AF53 		add	r3, r7, #5600
 2064 0b16 03F10303 		add	r3, r3, #3
 2065 0b1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2066 0b1c 1A44     		add	r2, r2, r3
 2067 0b1e 07F5AF53 		add	r3, r7, #5600
 2068 0b22 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 62


 2069 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2070 0b28 D31A     		subs	r3, r2, r3
 2071 0b2a 5A1E     		subs	r2, r3, #1
 2072 0b2c 07F5AF53 		add	r3, r7, #5600
 2073 0b30 03F10703 		add	r3, r3, #7
 2074 0b34 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2075 0b36 07F12803 		add	r3, r7, #40
 2076 0b3a 083B     		subs	r3, r3, #8
 2077 0b3c 0B44     		add	r3, r3, r1
 2078 0b3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2079 0b40 07F16803 		add	r3, r7, #104
 2080 0b44 103B     		subs	r3, r3, #16
 2081 0b46 9954     		strb	r1, [r3, r2]
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2082              		.loc 1 481 0 discriminator 3
 2083 0b48 07F5AF53 		add	r3, r7, #5600
 2084 0b4c 03F10703 		add	r3, r3, #7
 2085 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 0b52 0133     		adds	r3, r3, #1
 2087 0b54 07F5AF52 		add	r2, r7, #5600
 2088 0b58 02F10702 		add	r2, r2, #7
 2089 0b5c 1370     		strb	r3, [r2]
 2090              	.L122:
 481:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2091              		.loc 1 481 0 is_stmt 0 discriminator 1
 2092 0b5e 07F5AF53 		add	r3, r7, #5600
 2093 0b62 03F10703 		add	r3, r3, #7
 2094 0b66 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2095 0b68 07F5AF53 		add	r3, r7, #5600
 2096 0b6c 03F10303 		add	r3, r3, #3
 2097 0b70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2098 0b72 9A42     		cmp	r2, r3
 2099 0b74 C4D3     		bcc	.L123
 483:..\src/command_processing.c ****                             }
 484:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2100              		.loc 1 484 0 is_stmt 1
 2101 0b76 07F5AE53 		add	r3, r7, #5568
 2102 0b7a 03F11F03 		add	r3, r3, #31
 2103 0b7e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2104 0b80 7449     		ldr	r1, .L282
 2105 0b82 1346     		mov	r3, r2
 2106 0b84 DB00     		lsls	r3, r3, #3
 2107 0b86 9B1A     		subs	r3, r3, r2
 2108 0b88 1B01     		lsls	r3, r3, #4
 2109 0b8a 0B44     		add	r3, r3, r1
 2110 0b8c B433     		adds	r3, r3, #180
 2111 0b8e 1B68     		ldr	r3, [r3]
 2112 0b90 1846     		mov	r0, r3
 2113 0b92 FFF7FEFF 		bl	__aeabi_i2f
 2114 0b96 0346     		mov	r3, r0
 2115 0b98 4FF08F41 		mov	r1, #1199570944
 2116 0b9c 1846     		mov	r0, r3
 2117 0b9e FFF7FEFF 		bl	__aeabi_fdiv
 2118 0ba2 0346     		mov	r3, r0
 2119 0ba4 1A46     		mov	r2, r3
 2120 0ba6 07F12803 		add	r3, r7, #40
 2121 0baa 083B     		subs	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 63


 2122 0bac 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2123              		.loc 1 485 0
 2124 0bae 0023     		movs	r3, #0
 2125 0bb0 07F5AF52 		add	r2, r7, #5600
 2126 0bb4 02F10702 		add	r2, r2, #7
 2127 0bb8 1370     		strb	r3, [r2]
 2128 0bba 34E0     		b	.L124
 2129              	.L125:
 486:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2130              		.loc 1 486 0 discriminator 3
 2131 0bbc 07F5AF53 		add	r3, r7, #5600
 2132 0bc0 03F10503 		add	r3, r3, #5
 2133 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2134 0bc6 3222     		movs	r2, #50
 2135 0bc8 02FB03F3 		mul	r3, r2, r3
 2136 0bcc 1A1D     		adds	r2, r3, #4
 2137 0bce 07F5AF53 		add	r3, r7, #5600
 2138 0bd2 03F10303 		add	r3, r3, #3
 2139 0bd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2140 0bd8 1A44     		add	r2, r2, r3
 2141 0bda 07F5AF53 		add	r3, r7, #5600
 2142 0bde 03F10303 		add	r3, r3, #3
 2143 0be2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2144 0be4 1A44     		add	r2, r2, r3
 2145 0be6 07F5AF53 		add	r3, r7, #5600
 2146 0bea 03F10703 		add	r3, r3, #7
 2147 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2148 0bf0 D31A     		subs	r3, r2, r3
 2149 0bf2 5A1E     		subs	r2, r3, #1
 2150 0bf4 07F5AF53 		add	r3, r7, #5600
 2151 0bf8 03F10703 		add	r3, r3, #7
 2152 0bfc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2153 0bfe 07F12803 		add	r3, r7, #40
 2154 0c02 083B     		subs	r3, r3, #8
 2155 0c04 0B44     		add	r3, r3, r1
 2156 0c06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2157 0c08 07F16803 		add	r3, r7, #104
 2158 0c0c 103B     		subs	r3, r3, #16
 2159 0c0e 9954     		strb	r1, [r3, r2]
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2160              		.loc 1 485 0 discriminator 3
 2161 0c10 07F5AF53 		add	r3, r7, #5600
 2162 0c14 03F10703 		add	r3, r3, #7
 2163 0c18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2164 0c1a 0133     		adds	r3, r3, #1
 2165 0c1c 07F5AF52 		add	r2, r7, #5600
 2166 0c20 02F10702 		add	r2, r2, #7
 2167 0c24 1370     		strb	r3, [r2]
 2168              	.L124:
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2169              		.loc 1 485 0 is_stmt 0 discriminator 1
 2170 0c26 07F5AF53 		add	r3, r7, #5600
 2171 0c2a 03F10703 		add	r3, r3, #7
 2172 0c2e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2173 0c30 07F5AF53 		add	r3, r7, #5600
 2174 0c34 03F10303 		add	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 64


 2175 0c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2176 0c3a 9A42     		cmp	r2, r3
 2177 0c3c BED3     		bcc	.L125
 487:..\src/command_processing.c ****                             }
 488:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2178              		.loc 1 488 0 is_stmt 1
 2179 0c3e 07F5AE53 		add	r3, r7, #5568
 2180 0c42 03F11F03 		add	r3, r3, #31
 2181 0c46 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2182 0c48 4249     		ldr	r1, .L282
 2183 0c4a 1346     		mov	r3, r2
 2184 0c4c DB00     		lsls	r3, r3, #3
 2185 0c4e 9B1A     		subs	r3, r3, r2
 2186 0c50 1B01     		lsls	r3, r3, #4
 2187 0c52 0B44     		add	r3, r3, r1
 2188 0c54 B833     		adds	r3, r3, #184
 2189 0c56 1B68     		ldr	r3, [r3]
 2190 0c58 1846     		mov	r0, r3
 2191 0c5a FFF7FEFF 		bl	__aeabi_i2f
 2192 0c5e 0346     		mov	r3, r0
 2193 0c60 4FF08F41 		mov	r1, #1199570944
 2194 0c64 1846     		mov	r0, r3
 2195 0c66 FFF7FEFF 		bl	__aeabi_fdiv
 2196 0c6a 0346     		mov	r3, r0
 2197 0c6c 1A46     		mov	r2, r3
 2198 0c6e 07F12803 		add	r3, r7, #40
 2199 0c72 083B     		subs	r3, r3, #8
 2200 0c74 1A60     		str	r2, [r3]	@ float
 489:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2201              		.loc 1 489 0
 2202 0c76 0023     		movs	r3, #0
 2203 0c78 07F5AF52 		add	r2, r7, #5600
 2204 0c7c 02F10702 		add	r2, r2, #7
 2205 0c80 1370     		strb	r3, [r2]
 2206 0c82 35E0     		b	.L126
 2207              	.L127:
 490:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2208              		.loc 1 490 0 discriminator 3
 2209 0c84 07F5AF53 		add	r3, r7, #5600
 2210 0c88 03F10503 		add	r3, r3, #5
 2211 0c8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 0c8e 3222     		movs	r2, #50
 2213 0c90 02FB03F3 		mul	r3, r2, r3
 2214 0c94 1A1D     		adds	r2, r3, #4
 2215 0c96 07F5AF53 		add	r3, r7, #5600
 2216 0c9a 03F10303 		add	r3, r3, #3
 2217 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2218 0ca0 5B00     		lsls	r3, r3, #1
 2219 0ca2 1A44     		add	r2, r2, r3
 2220 0ca4 07F5AF53 		add	r3, r7, #5600
 2221 0ca8 03F10303 		add	r3, r3, #3
 2222 0cac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2223 0cae 1A44     		add	r2, r2, r3
 2224 0cb0 07F5AF53 		add	r3, r7, #5600
 2225 0cb4 03F10703 		add	r3, r3, #7
 2226 0cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2227 0cba D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 65


 2228 0cbc 5A1E     		subs	r2, r3, #1
 2229 0cbe 07F5AF53 		add	r3, r7, #5600
 2230 0cc2 03F10703 		add	r3, r3, #7
 2231 0cc6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2232 0cc8 07F12803 		add	r3, r7, #40
 2233 0ccc 083B     		subs	r3, r3, #8
 2234 0cce 0B44     		add	r3, r3, r1
 2235 0cd0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2236 0cd2 07F16803 		add	r3, r7, #104
 2237 0cd6 103B     		subs	r3, r3, #16
 2238 0cd8 9954     		strb	r1, [r3, r2]
 489:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2239              		.loc 1 489 0 discriminator 3
 2240 0cda 07F5AF53 		add	r3, r7, #5600
 2241 0cde 03F10703 		add	r3, r3, #7
 2242 0ce2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 0ce4 0133     		adds	r3, r3, #1
 2244 0ce6 07F5AF52 		add	r2, r7, #5600
 2245 0cea 02F10702 		add	r2, r2, #7
 2246 0cee 1370     		strb	r3, [r2]
 2247              	.L126:
 489:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2248              		.loc 1 489 0 is_stmt 0 discriminator 1
 2249 0cf0 07F5AF53 		add	r3, r7, #5600
 2250 0cf4 03F10703 		add	r3, r3, #7
 2251 0cf8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2252 0cfa 07F5AF53 		add	r3, r7, #5600
 2253 0cfe 03F10303 		add	r3, r3, #3
 2254 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2255 0d04 9A42     		cmp	r2, r3
 2256 0d06 BDD3     		bcc	.L127
 491:..\src/command_processing.c ****                             } 
 492:..\src/command_processing.c ****                         }
 493:..\src/command_processing.c ****                         else {
 494:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 495:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 496:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 497:..\src/command_processing.c ****                             }
 498:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 499:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 500:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 501:..\src/command_processing.c ****                             }
 502:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 503:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 504:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 505:..\src/command_processing.c ****                             }
 506:..\src/command_processing.c ****                         }
 507:..\src/command_processing.c ****                         break;
 2257              		.loc 1 507 0 is_stmt 1
 2258 0d08 01F0B7BB 		b	.L109
 2259              	.L121:
 494:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2260              		.loc 1 494 0
 2261 0d0c 07F5AE53 		add	r3, r7, #5568
 2262 0d10 03F11F03 		add	r3, r3, #31
 2263 0d14 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2264 0d16 0F49     		ldr	r1, .L282
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 66


 2265 0d18 1346     		mov	r3, r2
 2266 0d1a DB00     		lsls	r3, r3, #3
 2267 0d1c 9B1A     		subs	r3, r3, r2
 2268 0d1e 1B01     		lsls	r3, r3, #4
 2269 0d20 0B44     		add	r3, r3, r1
 2270 0d22 C833     		adds	r3, r3, #200
 2271 0d24 1B68     		ldr	r3, [r3]
 2272 0d26 1846     		mov	r0, r3
 2273 0d28 FFF7FEFF 		bl	__aeabi_i2f
 2274 0d2c 0346     		mov	r3, r0
 2275 0d2e 4FF08F41 		mov	r1, #1199570944
 2276 0d32 1846     		mov	r0, r3
 2277 0d34 FFF7FEFF 		bl	__aeabi_fdiv
 2278 0d38 0346     		mov	r3, r0
 2279 0d3a 1A46     		mov	r2, r3
 2280 0d3c 07F12803 		add	r3, r7, #40
 2281 0d40 083B     		subs	r3, r3, #8
 2282 0d42 1A60     		str	r2, [r3]	@ float
 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2283              		.loc 1 495 0
 2284 0d44 0023     		movs	r3, #0
 2285 0d46 07F5AF52 		add	r2, r7, #5600
 2286 0d4a 02F10702 		add	r2, r2, #7
 2287 0d4e 1370     		strb	r3, [r2]
 2288 0d50 31E0     		b	.L129
 2289              	.L283:
 2290 0d52 00BF     		.align	2
 2291              	.L282:
 2292 0d54 00000000 		.word	c_mem
 2293              	.L130:
 496:..\src/command_processing.c ****                             }
 2294              		.loc 1 496 0 discriminator 3
 2295 0d58 07F5AF53 		add	r3, r7, #5600
 2296 0d5c 03F10503 		add	r3, r3, #5
 2297 0d60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 0d62 3222     		movs	r2, #50
 2299 0d64 02FB03F3 		mul	r3, r2, r3
 2300 0d68 1A1D     		adds	r2, r3, #4
 2301 0d6a 07F5AF53 		add	r3, r7, #5600
 2302 0d6e 03F10303 		add	r3, r3, #3
 2303 0d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2304 0d74 1A44     		add	r2, r2, r3
 2305 0d76 07F5AF53 		add	r3, r7, #5600
 2306 0d7a 03F10703 		add	r3, r3, #7
 2307 0d7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2308 0d80 D31A     		subs	r3, r2, r3
 2309 0d82 5A1E     		subs	r2, r3, #1
 2310 0d84 07F5AF53 		add	r3, r7, #5600
 2311 0d88 03F10703 		add	r3, r3, #7
 2312 0d8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2313 0d8e 07F12803 		add	r3, r7, #40
 2314 0d92 083B     		subs	r3, r3, #8
 2315 0d94 0B44     		add	r3, r3, r1
 2316 0d96 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2317 0d98 07F16803 		add	r3, r7, #104
 2318 0d9c 103B     		subs	r3, r3, #16
 2319 0d9e 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 67


 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2320              		.loc 1 495 0 discriminator 3
 2321 0da0 07F5AF53 		add	r3, r7, #5600
 2322 0da4 03F10703 		add	r3, r3, #7
 2323 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2324 0daa 0133     		adds	r3, r3, #1
 2325 0dac 07F5AF52 		add	r2, r7, #5600
 2326 0db0 02F10702 		add	r2, r2, #7
 2327 0db4 1370     		strb	r3, [r2]
 2328              	.L129:
 495:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2329              		.loc 1 495 0 is_stmt 0 discriminator 1
 2330 0db6 07F5AF53 		add	r3, r7, #5600
 2331 0dba 03F10703 		add	r3, r3, #7
 2332 0dbe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2333 0dc0 07F5AF53 		add	r3, r7, #5600
 2334 0dc4 03F10303 		add	r3, r3, #3
 2335 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2336 0dca 9A42     		cmp	r2, r3
 2337 0dcc C4D3     		bcc	.L130
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2338              		.loc 1 498 0 is_stmt 1
 2339 0dce 07F5AE53 		add	r3, r7, #5568
 2340 0dd2 03F11F03 		add	r3, r3, #31
 2341 0dd6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2342 0dd8 AB49     		ldr	r1, .L284
 2343 0dda 1346     		mov	r3, r2
 2344 0ddc DB00     		lsls	r3, r3, #3
 2345 0dde 9B1A     		subs	r3, r3, r2
 2346 0de0 1B01     		lsls	r3, r3, #4
 2347 0de2 0B44     		add	r3, r3, r1
 2348 0de4 CC33     		adds	r3, r3, #204
 2349 0de6 1B68     		ldr	r3, [r3]
 2350 0de8 1846     		mov	r0, r3
 2351 0dea FFF7FEFF 		bl	__aeabi_i2f
 2352 0dee 0346     		mov	r3, r0
 2353 0df0 4FF08F41 		mov	r1, #1199570944
 2354 0df4 1846     		mov	r0, r3
 2355 0df6 FFF7FEFF 		bl	__aeabi_fdiv
 2356 0dfa 0346     		mov	r3, r0
 2357 0dfc 1A46     		mov	r2, r3
 2358 0dfe 07F12803 		add	r3, r7, #40
 2359 0e02 083B     		subs	r3, r3, #8
 2360 0e04 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2361              		.loc 1 499 0
 2362 0e06 0023     		movs	r3, #0
 2363 0e08 07F5AF52 		add	r2, r7, #5600
 2364 0e0c 02F10702 		add	r2, r2, #7
 2365 0e10 1370     		strb	r3, [r2]
 2366 0e12 34E0     		b	.L131
 2367              	.L132:
 500:..\src/command_processing.c ****                             }
 2368              		.loc 1 500 0 discriminator 3
 2369 0e14 07F5AF53 		add	r3, r7, #5600
 2370 0e18 03F10503 		add	r3, r3, #5
 2371 0e1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 68


 2372 0e1e 3222     		movs	r2, #50
 2373 0e20 02FB03F3 		mul	r3, r2, r3
 2374 0e24 1A1D     		adds	r2, r3, #4
 2375 0e26 07F5AF53 		add	r3, r7, #5600
 2376 0e2a 03F10303 		add	r3, r3, #3
 2377 0e2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2378 0e30 1A44     		add	r2, r2, r3
 2379 0e32 07F5AF53 		add	r3, r7, #5600
 2380 0e36 03F10303 		add	r3, r3, #3
 2381 0e3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2382 0e3c 1A44     		add	r2, r2, r3
 2383 0e3e 07F5AF53 		add	r3, r7, #5600
 2384 0e42 03F10703 		add	r3, r3, #7
 2385 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2386 0e48 D31A     		subs	r3, r2, r3
 2387 0e4a 5A1E     		subs	r2, r3, #1
 2388 0e4c 07F5AF53 		add	r3, r7, #5600
 2389 0e50 03F10703 		add	r3, r3, #7
 2390 0e54 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2391 0e56 07F12803 		add	r3, r7, #40
 2392 0e5a 083B     		subs	r3, r3, #8
 2393 0e5c 0B44     		add	r3, r3, r1
 2394 0e5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2395 0e60 07F16803 		add	r3, r7, #104
 2396 0e64 103B     		subs	r3, r3, #16
 2397 0e66 9954     		strb	r1, [r3, r2]
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2398              		.loc 1 499 0 discriminator 3
 2399 0e68 07F5AF53 		add	r3, r7, #5600
 2400 0e6c 03F10703 		add	r3, r3, #7
 2401 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2402 0e72 0133     		adds	r3, r3, #1
 2403 0e74 07F5AF52 		add	r2, r7, #5600
 2404 0e78 02F10702 		add	r2, r2, #7
 2405 0e7c 1370     		strb	r3, [r2]
 2406              	.L131:
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2407              		.loc 1 499 0 is_stmt 0 discriminator 1
 2408 0e7e 07F5AF53 		add	r3, r7, #5600
 2409 0e82 03F10703 		add	r3, r3, #7
 2410 0e86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2411 0e88 07F5AF53 		add	r3, r7, #5600
 2412 0e8c 03F10303 		add	r3, r3, #3
 2413 0e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2414 0e92 9A42     		cmp	r2, r3
 2415 0e94 BED3     		bcc	.L132
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2416              		.loc 1 502 0 is_stmt 1
 2417 0e96 07F5AE53 		add	r3, r7, #5568
 2418 0e9a 03F11F03 		add	r3, r3, #31
 2419 0e9e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2420 0ea0 7949     		ldr	r1, .L284
 2421 0ea2 1346     		mov	r3, r2
 2422 0ea4 DB00     		lsls	r3, r3, #3
 2423 0ea6 9B1A     		subs	r3, r3, r2
 2424 0ea8 1B01     		lsls	r3, r3, #4
 2425 0eaa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 69


 2426 0eac D033     		adds	r3, r3, #208
 2427 0eae 1B68     		ldr	r3, [r3]
 2428 0eb0 1846     		mov	r0, r3
 2429 0eb2 FFF7FEFF 		bl	__aeabi_i2f
 2430 0eb6 0346     		mov	r3, r0
 2431 0eb8 4FF08F41 		mov	r1, #1199570944
 2432 0ebc 1846     		mov	r0, r3
 2433 0ebe FFF7FEFF 		bl	__aeabi_fdiv
 2434 0ec2 0346     		mov	r3, r0
 2435 0ec4 1A46     		mov	r2, r3
 2436 0ec6 07F12803 		add	r3, r7, #40
 2437 0eca 083B     		subs	r3, r3, #8
 2438 0ecc 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2439              		.loc 1 503 0
 2440 0ece 0023     		movs	r3, #0
 2441 0ed0 07F5AF52 		add	r2, r7, #5600
 2442 0ed4 02F10702 		add	r2, r2, #7
 2443 0ed8 1370     		strb	r3, [r2]
 2444 0eda 35E0     		b	.L133
 2445              	.L134:
 504:..\src/command_processing.c ****                             }
 2446              		.loc 1 504 0 discriminator 3
 2447 0edc 07F5AF53 		add	r3, r7, #5600
 2448 0ee0 03F10503 		add	r3, r3, #5
 2449 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2450 0ee6 3222     		movs	r2, #50
 2451 0ee8 02FB03F3 		mul	r3, r2, r3
 2452 0eec 1A1D     		adds	r2, r3, #4
 2453 0eee 07F5AF53 		add	r3, r7, #5600
 2454 0ef2 03F10303 		add	r3, r3, #3
 2455 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2456 0ef8 5B00     		lsls	r3, r3, #1
 2457 0efa 1A44     		add	r2, r2, r3
 2458 0efc 07F5AF53 		add	r3, r7, #5600
 2459 0f00 03F10303 		add	r3, r3, #3
 2460 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2461 0f06 1A44     		add	r2, r2, r3
 2462 0f08 07F5AF53 		add	r3, r7, #5600
 2463 0f0c 03F10703 		add	r3, r3, #7
 2464 0f10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2465 0f12 D31A     		subs	r3, r2, r3
 2466 0f14 5A1E     		subs	r2, r3, #1
 2467 0f16 07F5AF53 		add	r3, r7, #5600
 2468 0f1a 03F10703 		add	r3, r3, #7
 2469 0f1e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2470 0f20 07F12803 		add	r3, r7, #40
 2471 0f24 083B     		subs	r3, r3, #8
 2472 0f26 0B44     		add	r3, r3, r1
 2473 0f28 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2474 0f2a 07F16803 		add	r3, r7, #104
 2475 0f2e 103B     		subs	r3, r3, #16
 2476 0f30 9954     		strb	r1, [r3, r2]
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2477              		.loc 1 503 0 discriminator 3
 2478 0f32 07F5AF53 		add	r3, r7, #5600
 2479 0f36 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 70


 2480 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 0f3c 0133     		adds	r3, r3, #1
 2482 0f3e 07F5AF52 		add	r2, r7, #5600
 2483 0f42 02F10702 		add	r2, r2, #7
 2484 0f46 1370     		strb	r3, [r2]
 2485              	.L133:
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2486              		.loc 1 503 0 is_stmt 0 discriminator 1
 2487 0f48 07F5AF53 		add	r3, r7, #5600
 2488 0f4c 03F10703 		add	r3, r3, #7
 2489 0f50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2490 0f52 07F5AF53 		add	r3, r7, #5600
 2491 0f56 03F10303 		add	r3, r3, #3
 2492 0f5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2493 0f5c 9A42     		cmp	r2, r3
 2494 0f5e BDD3     		bcc	.L134
 2495              		.loc 1 507 0 is_stmt 1
 2496 0f60 01F08BBA 		b	.L109
 2497              	.L113:
 508:..\src/command_processing.c ****                         
 509:..\src/command_processing.c ****                     case 3:         //Current PID
 510:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2498              		.loc 1 510 0
 2499 0f64 07F5AE53 		add	r3, r7, #5568
 2500 0f68 03F11F03 		add	r3, r3, #31
 2501 0f6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2502 0f6e 4649     		ldr	r1, .L284
 2503 0f70 1346     		mov	r3, r2
 2504 0f72 DB00     		lsls	r3, r3, #3
 2505 0f74 9B1A     		subs	r3, r3, r2
 2506 0f76 1B01     		lsls	r3, r3, #4
 2507 0f78 0B44     		add	r3, r3, r1
 2508 0f7a 03F20F13 		addw	r3, r3, #271
 2509 0f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2510 0f80 032B     		cmp	r3, #3
 2511 0f82 00F02B81 		beq	.L135
 511:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2512              		.loc 1 511 0
 2513 0f86 07F5AE53 		add	r3, r7, #5568
 2514 0f8a 03F11F03 		add	r3, r3, #31
 2515 0f8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2516 0f90 3D49     		ldr	r1, .L284
 2517 0f92 1346     		mov	r3, r2
 2518 0f94 DB00     		lsls	r3, r3, #3
 2519 0f96 9B1A     		subs	r3, r3, r2
 2520 0f98 1B01     		lsls	r3, r3, #4
 2521 0f9a 0B44     		add	r3, r3, r1
 2522 0f9c BC33     		adds	r3, r3, #188
 2523 0f9e 1B68     		ldr	r3, [r3]
 2524 0fa0 1846     		mov	r0, r3
 2525 0fa2 FFF7FEFF 		bl	__aeabi_i2f
 2526 0fa6 0346     		mov	r3, r0
 2527 0fa8 4FF08F41 		mov	r1, #1199570944
 2528 0fac 1846     		mov	r0, r3
 2529 0fae FFF7FEFF 		bl	__aeabi_fdiv
 2530 0fb2 0346     		mov	r3, r0
 2531 0fb4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 71


 2532 0fb6 07F12803 		add	r3, r7, #40
 2533 0fba 083B     		subs	r3, r3, #8
 2534 0fbc 1A60     		str	r2, [r3]	@ float
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2535              		.loc 1 512 0
 2536 0fbe 0023     		movs	r3, #0
 2537 0fc0 07F5AF52 		add	r2, r7, #5600
 2538 0fc4 02F10702 		add	r2, r2, #7
 2539 0fc8 1370     		strb	r3, [r2]
 2540 0fca 2EE0     		b	.L136
 2541              	.L137:
 513:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2542              		.loc 1 513 0 discriminator 3
 2543 0fcc 07F5AF53 		add	r3, r7, #5600
 2544 0fd0 03F10503 		add	r3, r3, #5
 2545 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2546 0fd6 3222     		movs	r2, #50
 2547 0fd8 02FB03F3 		mul	r3, r2, r3
 2548 0fdc 1A1D     		adds	r2, r3, #4
 2549 0fde 07F5AF53 		add	r3, r7, #5600
 2550 0fe2 03F10303 		add	r3, r3, #3
 2551 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2552 0fe8 1A44     		add	r2, r2, r3
 2553 0fea 07F5AF53 		add	r3, r7, #5600
 2554 0fee 03F10703 		add	r3, r3, #7
 2555 0ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2556 0ff4 D31A     		subs	r3, r2, r3
 2557 0ff6 5A1E     		subs	r2, r3, #1
 2558 0ff8 07F5AF53 		add	r3, r7, #5600
 2559 0ffc 03F10703 		add	r3, r3, #7
 2560 1000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2561 1002 07F12803 		add	r3, r7, #40
 2562 1006 083B     		subs	r3, r3, #8
 2563 1008 0B44     		add	r3, r3, r1
 2564 100a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2565 100c 07F16803 		add	r3, r7, #104
 2566 1010 103B     		subs	r3, r3, #16
 2567 1012 9954     		strb	r1, [r3, r2]
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2568              		.loc 1 512 0 discriminator 3
 2569 1014 07F5AF53 		add	r3, r7, #5600
 2570 1018 03F10703 		add	r3, r3, #7
 2571 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2572 101e 0133     		adds	r3, r3, #1
 2573 1020 07F5AF52 		add	r2, r7, #5600
 2574 1024 02F10702 		add	r2, r2, #7
 2575 1028 1370     		strb	r3, [r2]
 2576              	.L136:
 512:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2577              		.loc 1 512 0 is_stmt 0 discriminator 1
 2578 102a 07F5AF53 		add	r3, r7, #5600
 2579 102e 03F10703 		add	r3, r3, #7
 2580 1032 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2581 1034 07F5AF53 		add	r3, r7, #5600
 2582 1038 03F10303 		add	r3, r3, #3
 2583 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2584 103e 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 72


 2585 1040 C4D3     		bcc	.L137
 514:..\src/command_processing.c ****                             }
 515:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2586              		.loc 1 515 0 is_stmt 1
 2587 1042 07F5AE53 		add	r3, r7, #5568
 2588 1046 03F11F03 		add	r3, r3, #31
 2589 104a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2590 104c 0E49     		ldr	r1, .L284
 2591 104e 1346     		mov	r3, r2
 2592 1050 DB00     		lsls	r3, r3, #3
 2593 1052 9B1A     		subs	r3, r3, r2
 2594 1054 1B01     		lsls	r3, r3, #4
 2595 1056 0B44     		add	r3, r3, r1
 2596 1058 C033     		adds	r3, r3, #192
 2597 105a 1B68     		ldr	r3, [r3]
 2598 105c 1846     		mov	r0, r3
 2599 105e FFF7FEFF 		bl	__aeabi_i2f
 2600 1062 0346     		mov	r3, r0
 2601 1064 4FF08F41 		mov	r1, #1199570944
 2602 1068 1846     		mov	r0, r3
 2603 106a FFF7FEFF 		bl	__aeabi_fdiv
 2604 106e 0346     		mov	r3, r0
 2605 1070 1A46     		mov	r2, r3
 2606 1072 07F12803 		add	r3, r7, #40
 2607 1076 083B     		subs	r3, r3, #8
 2608 1078 1A60     		str	r2, [r3]	@ float
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2609              		.loc 1 516 0
 2610 107a 0023     		movs	r3, #0
 2611 107c 07F5AF52 		add	r2, r7, #5600
 2612 1080 02F10702 		add	r2, r2, #7
 2613 1084 1370     		strb	r3, [r2]
 2614 1086 36E0     		b	.L138
 2615              	.L285:
 2616              		.align	2
 2617              	.L284:
 2618 1088 00000000 		.word	c_mem
 2619              	.L139:
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2620              		.loc 1 517 0 discriminator 3
 2621 108c 07F5AF53 		add	r3, r7, #5600
 2622 1090 03F10503 		add	r3, r3, #5
 2623 1094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2624 1096 3222     		movs	r2, #50
 2625 1098 02FB03F3 		mul	r3, r2, r3
 2626 109c 1A1D     		adds	r2, r3, #4
 2627 109e 07F5AF53 		add	r3, r7, #5600
 2628 10a2 03F10303 		add	r3, r3, #3
 2629 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2630 10a8 1A44     		add	r2, r2, r3
 2631 10aa 07F5AF53 		add	r3, r7, #5600
 2632 10ae 03F10303 		add	r3, r3, #3
 2633 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2634 10b4 1A44     		add	r2, r2, r3
 2635 10b6 07F5AF53 		add	r3, r7, #5600
 2636 10ba 03F10703 		add	r3, r3, #7
 2637 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 73


 2638 10c0 D31A     		subs	r3, r2, r3
 2639 10c2 5A1E     		subs	r2, r3, #1
 2640 10c4 07F5AF53 		add	r3, r7, #5600
 2641 10c8 03F10703 		add	r3, r3, #7
 2642 10cc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2643 10ce 07F12803 		add	r3, r7, #40
 2644 10d2 083B     		subs	r3, r3, #8
 2645 10d4 0B44     		add	r3, r3, r1
 2646 10d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2647 10d8 07F16803 		add	r3, r7, #104
 2648 10dc 103B     		subs	r3, r3, #16
 2649 10de 9954     		strb	r1, [r3, r2]
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2650              		.loc 1 516 0 discriminator 3
 2651 10e0 07F5AF53 		add	r3, r7, #5600
 2652 10e4 03F10703 		add	r3, r3, #7
 2653 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2654 10ea 0133     		adds	r3, r3, #1
 2655 10ec 07F5AF52 		add	r2, r7, #5600
 2656 10f0 02F10702 		add	r2, r2, #7
 2657 10f4 1370     		strb	r3, [r2]
 2658              	.L138:
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2659              		.loc 1 516 0 is_stmt 0 discriminator 1
 2660 10f6 07F5AF53 		add	r3, r7, #5600
 2661 10fa 03F10703 		add	r3, r3, #7
 2662 10fe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2663 1100 07F5AF53 		add	r3, r7, #5600
 2664 1104 03F10303 		add	r3, r3, #3
 2665 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2666 110a 9A42     		cmp	r2, r3
 2667 110c BED3     		bcc	.L139
 518:..\src/command_processing.c ****                             }
 519:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2668              		.loc 1 519 0 is_stmt 1
 2669 110e 07F5AE53 		add	r3, r7, #5568
 2670 1112 03F11F03 		add	r3, r3, #31
 2671 1116 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2672 1118 C549     		ldr	r1, .L286
 2673 111a 1346     		mov	r3, r2
 2674 111c DB00     		lsls	r3, r3, #3
 2675 111e 9B1A     		subs	r3, r3, r2
 2676 1120 1B01     		lsls	r3, r3, #4
 2677 1122 0B44     		add	r3, r3, r1
 2678 1124 C433     		adds	r3, r3, #196
 2679 1126 1B68     		ldr	r3, [r3]
 2680 1128 1846     		mov	r0, r3
 2681 112a FFF7FEFF 		bl	__aeabi_i2f
 2682 112e 0346     		mov	r3, r0
 2683 1130 4FF08F41 		mov	r1, #1199570944
 2684 1134 1846     		mov	r0, r3
 2685 1136 FFF7FEFF 		bl	__aeabi_fdiv
 2686 113a 0346     		mov	r3, r0
 2687 113c 1A46     		mov	r2, r3
 2688 113e 07F12803 		add	r3, r7, #40
 2689 1142 083B     		subs	r3, r3, #8
 2690 1144 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 74


 520:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2691              		.loc 1 520 0
 2692 1146 0023     		movs	r3, #0
 2693 1148 07F5AF52 		add	r2, r7, #5600
 2694 114c 02F10702 		add	r2, r2, #7
 2695 1150 1370     		strb	r3, [r2]
 2696 1152 35E0     		b	.L140
 2697              	.L141:
 521:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2698              		.loc 1 521 0 discriminator 3
 2699 1154 07F5AF53 		add	r3, r7, #5600
 2700 1158 03F10503 		add	r3, r3, #5
 2701 115c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2702 115e 3222     		movs	r2, #50
 2703 1160 02FB03F3 		mul	r3, r2, r3
 2704 1164 1A1D     		adds	r2, r3, #4
 2705 1166 07F5AF53 		add	r3, r7, #5600
 2706 116a 03F10303 		add	r3, r3, #3
 2707 116e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2708 1170 5B00     		lsls	r3, r3, #1
 2709 1172 1A44     		add	r2, r2, r3
 2710 1174 07F5AF53 		add	r3, r7, #5600
 2711 1178 03F10303 		add	r3, r3, #3
 2712 117c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2713 117e 1A44     		add	r2, r2, r3
 2714 1180 07F5AF53 		add	r3, r7, #5600
 2715 1184 03F10703 		add	r3, r3, #7
 2716 1188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2717 118a D31A     		subs	r3, r2, r3
 2718 118c 5A1E     		subs	r2, r3, #1
 2719 118e 07F5AF53 		add	r3, r7, #5600
 2720 1192 03F10703 		add	r3, r3, #7
 2721 1196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2722 1198 07F12803 		add	r3, r7, #40
 2723 119c 083B     		subs	r3, r3, #8
 2724 119e 0B44     		add	r3, r3, r1
 2725 11a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2726 11a2 07F16803 		add	r3, r7, #104
 2727 11a6 103B     		subs	r3, r3, #16
 2728 11a8 9954     		strb	r1, [r3, r2]
 520:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2729              		.loc 1 520 0 discriminator 3
 2730 11aa 07F5AF53 		add	r3, r7, #5600
 2731 11ae 03F10703 		add	r3, r3, #7
 2732 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2733 11b4 0133     		adds	r3, r3, #1
 2734 11b6 07F5AF52 		add	r2, r7, #5600
 2735 11ba 02F10702 		add	r2, r2, #7
 2736 11be 1370     		strb	r3, [r2]
 2737              	.L140:
 520:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2738              		.loc 1 520 0 is_stmt 0 discriminator 1
 2739 11c0 07F5AF53 		add	r3, r7, #5600
 2740 11c4 03F10703 		add	r3, r3, #7
 2741 11c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2742 11ca 07F5AF53 		add	r3, r7, #5600
 2743 11ce 03F10303 		add	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 75


 2744 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2745 11d4 9A42     		cmp	r2, r3
 2746 11d6 BDD3     		bcc	.L141
 522:..\src/command_processing.c ****                             }
 523:..\src/command_processing.c ****                         }
 524:..\src/command_processing.c ****                         else {
 525:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 526:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 527:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 528:..\src/command_processing.c ****                             }
 529:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 530:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 531:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 532:..\src/command_processing.c ****                             }
 533:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 534:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 535:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 536:..\src/command_processing.c ****                             }
 537:..\src/command_processing.c ****                         }            
 538:..\src/command_processing.c ****                         break;  
 2747              		.loc 1 538 0 is_stmt 1
 2748 11d8 01F04FB9 		b	.L109
 2749              	.L135:
 525:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2750              		.loc 1 525 0
 2751 11dc 07F5AE53 		add	r3, r7, #5568
 2752 11e0 03F11F03 		add	r3, r3, #31
 2753 11e4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2754 11e6 9249     		ldr	r1, .L286
 2755 11e8 1346     		mov	r3, r2
 2756 11ea DB00     		lsls	r3, r3, #3
 2757 11ec 9B1A     		subs	r3, r3, r2
 2758 11ee 1B01     		lsls	r3, r3, #4
 2759 11f0 0B44     		add	r3, r3, r1
 2760 11f2 D433     		adds	r3, r3, #212
 2761 11f4 1B68     		ldr	r3, [r3]
 2762 11f6 1846     		mov	r0, r3
 2763 11f8 FFF7FEFF 		bl	__aeabi_i2f
 2764 11fc 0346     		mov	r3, r0
 2765 11fe 4FF08F41 		mov	r1, #1199570944
 2766 1202 1846     		mov	r0, r3
 2767 1204 FFF7FEFF 		bl	__aeabi_fdiv
 2768 1208 0346     		mov	r3, r0
 2769 120a 1A46     		mov	r2, r3
 2770 120c 07F12803 		add	r3, r7, #40
 2771 1210 083B     		subs	r3, r3, #8
 2772 1212 1A60     		str	r2, [r3]	@ float
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2773              		.loc 1 526 0
 2774 1214 0023     		movs	r3, #0
 2775 1216 07F5AF52 		add	r2, r7, #5600
 2776 121a 02F10702 		add	r2, r2, #7
 2777 121e 1370     		strb	r3, [r2]
 2778 1220 2EE0     		b	.L143
 2779              	.L144:
 527:..\src/command_processing.c ****                             }
 2780              		.loc 1 527 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 76


 2781 1222 07F5AF53 		add	r3, r7, #5600
 2782 1226 03F10503 		add	r3, r3, #5
 2783 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2784 122c 3222     		movs	r2, #50
 2785 122e 02FB03F3 		mul	r3, r2, r3
 2786 1232 1A1D     		adds	r2, r3, #4
 2787 1234 07F5AF53 		add	r3, r7, #5600
 2788 1238 03F10303 		add	r3, r3, #3
 2789 123c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2790 123e 1A44     		add	r2, r2, r3
 2791 1240 07F5AF53 		add	r3, r7, #5600
 2792 1244 03F10703 		add	r3, r3, #7
 2793 1248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2794 124a D31A     		subs	r3, r2, r3
 2795 124c 5A1E     		subs	r2, r3, #1
 2796 124e 07F5AF53 		add	r3, r7, #5600
 2797 1252 03F10703 		add	r3, r3, #7
 2798 1256 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2799 1258 07F12803 		add	r3, r7, #40
 2800 125c 083B     		subs	r3, r3, #8
 2801 125e 0B44     		add	r3, r3, r1
 2802 1260 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2803 1262 07F16803 		add	r3, r7, #104
 2804 1266 103B     		subs	r3, r3, #16
 2805 1268 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2806              		.loc 1 526 0 discriminator 3
 2807 126a 07F5AF53 		add	r3, r7, #5600
 2808 126e 03F10703 		add	r3, r3, #7
 2809 1272 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2810 1274 0133     		adds	r3, r3, #1
 2811 1276 07F5AF52 		add	r2, r7, #5600
 2812 127a 02F10702 		add	r2, r2, #7
 2813 127e 1370     		strb	r3, [r2]
 2814              	.L143:
 526:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2815              		.loc 1 526 0 is_stmt 0 discriminator 1
 2816 1280 07F5AF53 		add	r3, r7, #5600
 2817 1284 03F10703 		add	r3, r3, #7
 2818 1288 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2819 128a 07F5AF53 		add	r3, r7, #5600
 2820 128e 03F10303 		add	r3, r3, #3
 2821 1292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2822 1294 9A42     		cmp	r2, r3
 2823 1296 C4D3     		bcc	.L144
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2824              		.loc 1 529 0 is_stmt 1
 2825 1298 07F5AE53 		add	r3, r7, #5568
 2826 129c 03F11F03 		add	r3, r3, #31
 2827 12a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2828 12a2 6349     		ldr	r1, .L286
 2829 12a4 1346     		mov	r3, r2
 2830 12a6 DB00     		lsls	r3, r3, #3
 2831 12a8 9B1A     		subs	r3, r3, r2
 2832 12aa 1B01     		lsls	r3, r3, #4
 2833 12ac 0B44     		add	r3, r3, r1
 2834 12ae D833     		adds	r3, r3, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 77


 2835 12b0 1B68     		ldr	r3, [r3]
 2836 12b2 1846     		mov	r0, r3
 2837 12b4 FFF7FEFF 		bl	__aeabi_i2f
 2838 12b8 0346     		mov	r3, r0
 2839 12ba 4FF08F41 		mov	r1, #1199570944
 2840 12be 1846     		mov	r0, r3
 2841 12c0 FFF7FEFF 		bl	__aeabi_fdiv
 2842 12c4 0346     		mov	r3, r0
 2843 12c6 1A46     		mov	r2, r3
 2844 12c8 07F12803 		add	r3, r7, #40
 2845 12cc 083B     		subs	r3, r3, #8
 2846 12ce 1A60     		str	r2, [r3]	@ float
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2847              		.loc 1 530 0
 2848 12d0 0023     		movs	r3, #0
 2849 12d2 07F5AF52 		add	r2, r7, #5600
 2850 12d6 02F10702 		add	r2, r2, #7
 2851 12da 1370     		strb	r3, [r2]
 2852 12dc 34E0     		b	.L145
 2853              	.L146:
 531:..\src/command_processing.c ****                             }
 2854              		.loc 1 531 0 discriminator 3
 2855 12de 07F5AF53 		add	r3, r7, #5600
 2856 12e2 03F10503 		add	r3, r3, #5
 2857 12e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2858 12e8 3222     		movs	r2, #50
 2859 12ea 02FB03F3 		mul	r3, r2, r3
 2860 12ee 1A1D     		adds	r2, r3, #4
 2861 12f0 07F5AF53 		add	r3, r7, #5600
 2862 12f4 03F10303 		add	r3, r3, #3
 2863 12f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2864 12fa 1A44     		add	r2, r2, r3
 2865 12fc 07F5AF53 		add	r3, r7, #5600
 2866 1300 03F10303 		add	r3, r3, #3
 2867 1304 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 1306 1A44     		add	r2, r2, r3
 2869 1308 07F5AF53 		add	r3, r7, #5600
 2870 130c 03F10703 		add	r3, r3, #7
 2871 1310 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2872 1312 D31A     		subs	r3, r2, r3
 2873 1314 5A1E     		subs	r2, r3, #1
 2874 1316 07F5AF53 		add	r3, r7, #5600
 2875 131a 03F10703 		add	r3, r3, #7
 2876 131e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2877 1320 07F12803 		add	r3, r7, #40
 2878 1324 083B     		subs	r3, r3, #8
 2879 1326 0B44     		add	r3, r3, r1
 2880 1328 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2881 132a 07F16803 		add	r3, r7, #104
 2882 132e 103B     		subs	r3, r3, #16
 2883 1330 9954     		strb	r1, [r3, r2]
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2884              		.loc 1 530 0 discriminator 3
 2885 1332 07F5AF53 		add	r3, r7, #5600
 2886 1336 03F10703 		add	r3, r3, #7
 2887 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2888 133c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 78


 2889 133e 07F5AF52 		add	r2, r7, #5600
 2890 1342 02F10702 		add	r2, r2, #7
 2891 1346 1370     		strb	r3, [r2]
 2892              	.L145:
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2893              		.loc 1 530 0 is_stmt 0 discriminator 1
 2894 1348 07F5AF53 		add	r3, r7, #5600
 2895 134c 03F10703 		add	r3, r3, #7
 2896 1350 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2897 1352 07F5AF53 		add	r3, r7, #5600
 2898 1356 03F10303 		add	r3, r3, #3
 2899 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2900 135c 9A42     		cmp	r2, r3
 2901 135e BED3     		bcc	.L146
 533:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2902              		.loc 1 533 0 is_stmt 1
 2903 1360 07F5AE53 		add	r3, r7, #5568
 2904 1364 03F11F03 		add	r3, r3, #31
 2905 1368 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2906 136a 3149     		ldr	r1, .L286
 2907 136c 1346     		mov	r3, r2
 2908 136e DB00     		lsls	r3, r3, #3
 2909 1370 9B1A     		subs	r3, r3, r2
 2910 1372 1B01     		lsls	r3, r3, #4
 2911 1374 0B44     		add	r3, r3, r1
 2912 1376 DC33     		adds	r3, r3, #220
 2913 1378 1B68     		ldr	r3, [r3]
 2914 137a 1846     		mov	r0, r3
 2915 137c FFF7FEFF 		bl	__aeabi_i2f
 2916 1380 0346     		mov	r3, r0
 2917 1382 4FF08F41 		mov	r1, #1199570944
 2918 1386 1846     		mov	r0, r3
 2919 1388 FFF7FEFF 		bl	__aeabi_fdiv
 2920 138c 0346     		mov	r3, r0
 2921 138e 1A46     		mov	r2, r3
 2922 1390 07F12803 		add	r3, r7, #40
 2923 1394 083B     		subs	r3, r3, #8
 2924 1396 1A60     		str	r2, [r3]	@ float
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2925              		.loc 1 534 0
 2926 1398 0023     		movs	r3, #0
 2927 139a 07F5AF52 		add	r2, r7, #5600
 2928 139e 02F10702 		add	r2, r2, #7
 2929 13a2 1370     		strb	r3, [r2]
 2930 13a4 35E0     		b	.L147
 2931              	.L148:
 535:..\src/command_processing.c ****                             }
 2932              		.loc 1 535 0 discriminator 3
 2933 13a6 07F5AF53 		add	r3, r7, #5600
 2934 13aa 03F10503 		add	r3, r3, #5
 2935 13ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2936 13b0 3222     		movs	r2, #50
 2937 13b2 02FB03F3 		mul	r3, r2, r3
 2938 13b6 1A1D     		adds	r2, r3, #4
 2939 13b8 07F5AF53 		add	r3, r7, #5600
 2940 13bc 03F10303 		add	r3, r3, #3
 2941 13c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 79


 2942 13c2 5B00     		lsls	r3, r3, #1
 2943 13c4 1A44     		add	r2, r2, r3
 2944 13c6 07F5AF53 		add	r3, r7, #5600
 2945 13ca 03F10303 		add	r3, r3, #3
 2946 13ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2947 13d0 1A44     		add	r2, r2, r3
 2948 13d2 07F5AF53 		add	r3, r7, #5600
 2949 13d6 03F10703 		add	r3, r3, #7
 2950 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2951 13dc D31A     		subs	r3, r2, r3
 2952 13de 5A1E     		subs	r2, r3, #1
 2953 13e0 07F5AF53 		add	r3, r7, #5600
 2954 13e4 03F10703 		add	r3, r3, #7
 2955 13e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2956 13ea 07F12803 		add	r3, r7, #40
 2957 13ee 083B     		subs	r3, r3, #8
 2958 13f0 0B44     		add	r3, r3, r1
 2959 13f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2960 13f4 07F16803 		add	r3, r7, #104
 2961 13f8 103B     		subs	r3, r3, #16
 2962 13fa 9954     		strb	r1, [r3, r2]
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2963              		.loc 1 534 0 discriminator 3
 2964 13fc 07F5AF53 		add	r3, r7, #5600
 2965 1400 03F10703 		add	r3, r3, #7
 2966 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2967 1406 0133     		adds	r3, r3, #1
 2968 1408 07F5AF52 		add	r2, r7, #5600
 2969 140c 02F10702 		add	r2, r2, #7
 2970 1410 1370     		strb	r3, [r2]
 2971              	.L147:
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2972              		.loc 1 534 0 is_stmt 0 discriminator 1
 2973 1412 07F5AF53 		add	r3, r7, #5600
 2974 1416 03F10703 		add	r3, r3, #7
 2975 141a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2976 141c 07F5AF53 		add	r3, r7, #5600
 2977 1420 03F10303 		add	r3, r3, #3
 2978 1424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2979 1426 9A42     		cmp	r2, r3
 2980 1428 BDD3     		bcc	.L148
 2981              		.loc 1 538 0 is_stmt 1
 2982 142a 01F026B8 		b	.L109
 2983              	.L287:
 2984 142e 00BF     		.align	2
 2985              	.L286:
 2986 1430 00000000 		.word	c_mem
 2987              	.L114:
 539:..\src/command_processing.c **** 
 540:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 541:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2988              		.loc 1 541 0
 2989 1434 07F5AE53 		add	r3, r7, #5568
 2990 1438 03F11F03 		add	r3, r3, #31
 2991 143c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2992 143e CC49     		ldr	r1, .L288
 2993 1440 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 80


 2994 1442 DB00     		lsls	r3, r3, #3
 2995 1444 9B1A     		subs	r3, r3, r2
 2996 1446 1B01     		lsls	r3, r3, #4
 2997 1448 0B44     		add	r3, r3, r1
 2998 144a 03F58873 		add	r3, r3, #272
 2999 144e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3000 1450 1846     		mov	r0, r3
 3001 1452 07F5AF53 		add	r3, r7, #5600
 3002 1456 03F10703 		add	r3, r3, #7
 3003 145a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3004 145c C549     		ldr	r1, .L288+4
 3005 145e 0346     		mov	r3, r0
 3006 1460 5B00     		lsls	r3, r3, #1
 3007 1462 0344     		add	r3, r3, r0
 3008 1464 9B00     		lsls	r3, r3, #2
 3009 1466 1344     		add	r3, r3, r2
 3010 1468 6633     		adds	r3, r3, #102
 3011 146a 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3012 146e 07F5AE53 		add	r3, r7, #5568
 3013 1472 03F11F03 		add	r3, r3, #31
 3014 1476 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3015 1478 BD48     		ldr	r0, .L288
 3016 147a 1346     		mov	r3, r2
 3017 147c DB00     		lsls	r3, r3, #3
 3018 147e 9B1A     		subs	r3, r3, r2
 3019 1480 1B01     		lsls	r3, r3, #4
 3020 1482 0344     		add	r3, r3, r0
 3021 1484 03F58873 		add	r3, r3, #272
 3022 1488 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3023 148a 1C46     		mov	r4, r3
 3024 148c 07F5AF53 		add	r3, r7, #5600
 3025 1490 03F10703 		add	r3, r3, #7
 3026 1494 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3027 1496 B748     		ldr	r0, .L288+4
 3028 1498 2346     		mov	r3, r4
 3029 149a 5B00     		lsls	r3, r3, #1
 3030 149c 2344     		add	r3, r3, r4
 3031 149e 1B01     		lsls	r3, r3, #4
 3032 14a0 0344     		add	r3, r3, r0
 3033 14a2 1344     		add	r3, r3, r2
 3034 14a4 03F29513 		addw	r3, r3, #405
 3035 14a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3036 14aa 41FA03F3 		asr	r3, r1, r3
 3037 14ae 1AB2     		sxth	r2, r3
 3038 14b0 07F12803 		add	r3, r7, #40
 3039 14b4 0A3B     		subs	r3, r3, #10
 3040 14b6 1A80     		strh	r2, [r3]	@ movhi
 542:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3041              		.loc 1 542 0
 3042 14b8 0023     		movs	r3, #0
 3043 14ba 07F5AF52 		add	r2, r7, #5600
 3044 14be 02F10602 		add	r2, r2, #6
 3045 14c2 1370     		strb	r3, [r2]
 3046 14c4 3BE0     		b	.L149
 3047              	.L150:
 543:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3048              		.loc 1 543 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 81


 3049 14c6 07F5AF53 		add	r3, r7, #5600
 3050 14ca 03F10503 		add	r3, r3, #5
 3051 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3052 14d0 3222     		movs	r2, #50
 3053 14d2 02FB03F3 		mul	r3, r2, r3
 3054 14d6 1A1D     		adds	r2, r3, #4
 3055 14d8 07F5AF53 		add	r3, r7, #5600
 3056 14dc 03F10703 		add	r3, r3, #7
 3057 14e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3058 14e2 07F5AF51 		add	r1, r7, #5600
 3059 14e6 01F10301 		add	r1, r1, #3
 3060 14ea 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3061 14ec 01FB03F3 		mul	r3, r1, r3
 3062 14f0 1A44     		add	r2, r2, r3
 3063 14f2 07F5AF53 		add	r3, r7, #5600
 3064 14f6 03F10303 		add	r3, r3, #3
 3065 14fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3066 14fc 1A44     		add	r2, r2, r3
 3067 14fe 07F5AF53 		add	r3, r7, #5600
 3068 1502 03F10603 		add	r3, r3, #6
 3069 1506 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3070 1508 D31A     		subs	r3, r2, r3
 3071 150a 5A1E     		subs	r2, r3, #1
 3072 150c 07F5AF53 		add	r3, r7, #5600
 3073 1510 03F10603 		add	r3, r3, #6
 3074 1514 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3075 1516 07F12803 		add	r3, r7, #40
 3076 151a 0A3B     		subs	r3, r3, #10
 3077 151c 0B44     		add	r3, r3, r1
 3078 151e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3079 1520 07F16803 		add	r3, r7, #104
 3080 1524 103B     		subs	r3, r3, #16
 3081 1526 9954     		strb	r1, [r3, r2]
 542:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3082              		.loc 1 542 0 discriminator 3
 3083 1528 07F5AF53 		add	r3, r7, #5600
 3084 152c 03F10603 		add	r3, r3, #6
 3085 1530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3086 1532 0133     		adds	r3, r3, #1
 3087 1534 07F5AF52 		add	r2, r7, #5600
 3088 1538 02F10602 		add	r2, r2, #6
 3089 153c 1370     		strb	r3, [r2]
 3090              	.L149:
 542:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3091              		.loc 1 542 0 is_stmt 0 discriminator 1
 3092 153e 07F5AF53 		add	r3, r7, #5600
 3093 1542 03F10603 		add	r3, r3, #6
 3094 1546 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3095 1548 07F5AF53 		add	r3, r7, #5600
 3096 154c 03F10303 		add	r3, r3, #3
 3097 1550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3098 1552 9A42     		cmp	r2, r3
 3099 1554 B7D3     		bcc	.L150
 544:..\src/command_processing.c ****                         }
 545:..\src/command_processing.c ****                         break;
 3100              		.loc 1 545 0 is_stmt 1
 3101 1556 00F090BF 		b	.L109
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 82


 3102              	.L115:
 546:..\src/command_processing.c ****                 
 547:..\src/command_processing.c ****                     case 11:        //Position limits
 548:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3103              		.loc 1 548 0
 3104 155a 07F5AE53 		add	r3, r7, #5568
 3105 155e 03F11F03 		add	r3, r3, #31
 3106 1562 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3107 1564 8349     		ldr	r1, .L288+4
 3108 1566 1346     		mov	r3, r2
 3109 1568 DB00     		lsls	r3, r3, #3
 3110 156a 9B1A     		subs	r3, r3, r2
 3111 156c 1B01     		lsls	r3, r3, #4
 3112 156e 0B44     		add	r3, r3, r1
 3113 1570 E433     		adds	r3, r3, #228
 3114 1572 1968     		ldr	r1, [r3]
 3115 1574 07F5AE53 		add	r3, r7, #5568
 3116 1578 03F11F03 		add	r3, r3, #31
 3117 157c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3118 157e 7C48     		ldr	r0, .L288
 3119 1580 1346     		mov	r3, r2
 3120 1582 DB00     		lsls	r3, r3, #3
 3121 1584 9B1A     		subs	r3, r3, r2
 3122 1586 1B01     		lsls	r3, r3, #4
 3123 1588 0344     		add	r3, r3, r0
 3124 158a 03F58873 		add	r3, r3, #272
 3125 158e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3126 1590 1846     		mov	r0, r3
 3127 1592 784A     		ldr	r2, .L288+4
 3128 1594 0346     		mov	r3, r0
 3129 1596 5B00     		lsls	r3, r3, #1
 3130 1598 0344     		add	r3, r3, r0
 3131 159a 1B01     		lsls	r3, r3, #4
 3132 159c 1344     		add	r3, r3, r2
 3133 159e 03F29513 		addw	r3, r3, #405
 3134 15a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 15a4 41FA03F2 		asr	r2, r1, r3
 3136 15a8 07F12803 		add	r3, r7, #40
 3137 15ac 103B     		subs	r3, r3, #16
 3138 15ae 1A60     		str	r2, [r3]
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3139              		.loc 1 549 0
 3140 15b0 0023     		movs	r3, #0
 3141 15b2 07F5AF52 		add	r2, r7, #5600
 3142 15b6 02F10602 		add	r2, r2, #6
 3143 15ba 1370     		strb	r3, [r2]
 3144 15bc 2EE0     		b	.L151
 3145              	.L152:
 550:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3146              		.loc 1 550 0 discriminator 3
 3147 15be 07F5AF53 		add	r3, r7, #5600
 3148 15c2 03F10503 		add	r3, r3, #5
 3149 15c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3150 15c8 3222     		movs	r2, #50
 3151 15ca 02FB03F3 		mul	r3, r2, r3
 3152 15ce 1A1D     		adds	r2, r3, #4
 3153 15d0 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 83


 3154 15d4 03F10303 		add	r3, r3, #3
 3155 15d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3156 15da 1A44     		add	r2, r2, r3
 3157 15dc 07F5AF53 		add	r3, r7, #5600
 3158 15e0 03F10603 		add	r3, r3, #6
 3159 15e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3160 15e6 D31A     		subs	r3, r2, r3
 3161 15e8 5A1E     		subs	r2, r3, #1
 3162 15ea 07F5AF53 		add	r3, r7, #5600
 3163 15ee 03F10603 		add	r3, r3, #6
 3164 15f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3165 15f4 07F12803 		add	r3, r7, #40
 3166 15f8 103B     		subs	r3, r3, #16
 3167 15fa 0B44     		add	r3, r3, r1
 3168 15fc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3169 15fe 07F16803 		add	r3, r7, #104
 3170 1602 103B     		subs	r3, r3, #16
 3171 1604 9954     		strb	r1, [r3, r2]
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3172              		.loc 1 549 0 discriminator 3
 3173 1606 07F5AF53 		add	r3, r7, #5600
 3174 160a 03F10603 		add	r3, r3, #6
 3175 160e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3176 1610 0133     		adds	r3, r3, #1
 3177 1612 07F5AF52 		add	r2, r7, #5600
 3178 1616 02F10602 		add	r2, r2, #6
 3179 161a 1370     		strb	r3, [r2]
 3180              	.L151:
 549:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3181              		.loc 1 549 0 is_stmt 0 discriminator 1
 3182 161c 07F5AF53 		add	r3, r7, #5600
 3183 1620 03F10603 		add	r3, r3, #6
 3184 1624 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3185 1626 07F5AF53 		add	r3, r7, #5600
 3186 162a 03F10303 		add	r3, r3, #3
 3187 162e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3188 1630 9A42     		cmp	r2, r3
 3189 1632 C4D3     		bcc	.L152
 551:..\src/command_processing.c ****                         }
 552:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3190              		.loc 1 552 0 is_stmt 1
 3191 1634 07F5AE53 		add	r3, r7, #5568
 3192 1638 03F11F03 		add	r3, r3, #31
 3193 163c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3194 163e 4D49     		ldr	r1, .L288+4
 3195 1640 1346     		mov	r3, r2
 3196 1642 DB00     		lsls	r3, r3, #3
 3197 1644 9B1A     		subs	r3, r3, r2
 3198 1646 1B01     		lsls	r3, r3, #4
 3199 1648 0B44     		add	r3, r3, r1
 3200 164a E833     		adds	r3, r3, #232
 3201 164c 1968     		ldr	r1, [r3]
 3202 164e 07F5AE53 		add	r3, r7, #5568
 3203 1652 03F11F03 		add	r3, r3, #31
 3204 1656 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3205 1658 4548     		ldr	r0, .L288
 3206 165a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 84


 3207 165c DB00     		lsls	r3, r3, #3
 3208 165e 9B1A     		subs	r3, r3, r2
 3209 1660 1B01     		lsls	r3, r3, #4
 3210 1662 0344     		add	r3, r3, r0
 3211 1664 03F58873 		add	r3, r3, #272
 3212 1668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3213 166a 1846     		mov	r0, r3
 3214 166c 414A     		ldr	r2, .L288+4
 3215 166e 0346     		mov	r3, r0
 3216 1670 5B00     		lsls	r3, r3, #1
 3217 1672 0344     		add	r3, r3, r0
 3218 1674 1B01     		lsls	r3, r3, #4
 3219 1676 1344     		add	r3, r3, r2
 3220 1678 03F29513 		addw	r3, r3, #405
 3221 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3222 167e 41FA03F2 		asr	r2, r1, r3
 3223 1682 07F12803 		add	r3, r7, #40
 3224 1686 103B     		subs	r3, r3, #16
 3225 1688 1A60     		str	r2, [r3]
 553:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3226              		.loc 1 553 0
 3227 168a 0023     		movs	r3, #0
 3228 168c 07F5AF52 		add	r2, r7, #5600
 3229 1690 02F10602 		add	r2, r2, #6
 3230 1694 1370     		strb	r3, [r2]
 3231 1696 34E0     		b	.L153
 3232              	.L154:
 554:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3233              		.loc 1 554 0 discriminator 3
 3234 1698 07F5AF53 		add	r3, r7, #5600
 3235 169c 03F10503 		add	r3, r3, #5
 3236 16a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 16a2 3222     		movs	r2, #50
 3238 16a4 02FB03F3 		mul	r3, r2, r3
 3239 16a8 1A1D     		adds	r2, r3, #4
 3240 16aa 07F5AF53 		add	r3, r7, #5600
 3241 16ae 03F10303 		add	r3, r3, #3
 3242 16b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3243 16b4 1A44     		add	r2, r2, r3
 3244 16b6 07F5AF53 		add	r3, r7, #5600
 3245 16ba 03F10303 		add	r3, r3, #3
 3246 16be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 16c0 1A44     		add	r2, r2, r3
 3248 16c2 07F5AF53 		add	r3, r7, #5600
 3249 16c6 03F10603 		add	r3, r3, #6
 3250 16ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3251 16cc D31A     		subs	r3, r2, r3
 3252 16ce 5A1E     		subs	r2, r3, #1
 3253 16d0 07F5AF53 		add	r3, r7, #5600
 3254 16d4 03F10603 		add	r3, r3, #6
 3255 16d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3256 16da 07F12803 		add	r3, r7, #40
 3257 16de 103B     		subs	r3, r3, #16
 3258 16e0 0B44     		add	r3, r3, r1
 3259 16e2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3260 16e4 07F16803 		add	r3, r7, #104
 3261 16e8 103B     		subs	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 85


 3262 16ea 9954     		strb	r1, [r3, r2]
 553:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3263              		.loc 1 553 0 discriminator 3
 3264 16ec 07F5AF53 		add	r3, r7, #5600
 3265 16f0 03F10603 		add	r3, r3, #6
 3266 16f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3267 16f6 0133     		adds	r3, r3, #1
 3268 16f8 07F5AF52 		add	r2, r7, #5600
 3269 16fc 02F10602 		add	r2, r2, #6
 3270 1700 1370     		strb	r3, [r2]
 3271              	.L153:
 553:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3272              		.loc 1 553 0 is_stmt 0 discriminator 1
 3273 1702 07F5AF53 		add	r3, r7, #5600
 3274 1706 03F10603 		add	r3, r3, #6
 3275 170a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3276 170c 07F5AF53 		add	r3, r7, #5600
 3277 1710 03F10303 		add	r3, r3, #3
 3278 1714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3279 1716 9A42     		cmp	r2, r3
 3280 1718 BED3     		bcc	.L154
 555:..\src/command_processing.c ****                         }
 556:..\src/command_processing.c ****                         break;            
 3281              		.loc 1 556 0 is_stmt 1
 3282 171a 00F0AEBE 		b	.L109
 3283              	.L116:
 557:..\src/command_processing.c **** 
 558:..\src/command_processing.c ****                     case 23:        //Rest Position
 559:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3284              		.loc 1 559 0
 3285 171e 154B     		ldr	r3, .L288+4
 3286 1720 D3F8A012 		ldr	r1, [r3, #672]
 3287 1724 07F5AE53 		add	r3, r7, #5568
 3288 1728 03F11F03 		add	r3, r3, #31
 3289 172c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3290 172e 1048     		ldr	r0, .L288
 3291 1730 1346     		mov	r3, r2
 3292 1732 DB00     		lsls	r3, r3, #3
 3293 1734 9B1A     		subs	r3, r3, r2
 3294 1736 1B01     		lsls	r3, r3, #4
 3295 1738 0344     		add	r3, r3, r0
 3296 173a 03F58873 		add	r3, r3, #272
 3297 173e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3298 1740 1846     		mov	r0, r3
 3299 1742 0C4A     		ldr	r2, .L288+4
 3300 1744 0346     		mov	r3, r0
 3301 1746 5B00     		lsls	r3, r3, #1
 3302 1748 0344     		add	r3, r3, r0
 3303 174a 1B01     		lsls	r3, r3, #4
 3304 174c 1344     		add	r3, r3, r2
 3305 174e 03F29513 		addw	r3, r3, #405
 3306 1752 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3307 1754 41FA03F2 		asr	r2, r1, r3
 3308 1758 07F12803 		add	r3, r7, #40
 3309 175c 103B     		subs	r3, r3, #16
 3310 175e 1A60     		str	r2, [r3]
 560:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 86


 3311              		.loc 1 560 0
 3312 1760 0023     		movs	r3, #0
 3313 1762 07F5AF52 		add	r2, r7, #5600
 3314 1766 02F10602 		add	r2, r2, #6
 3315 176a 1370     		strb	r3, [r2]
 3316 176c 33E0     		b	.L155
 3317              	.L289:
 3318 176e 00BF     		.align	2
 3319              	.L288:
 3320 1770 00000000 		.word	g_mem
 3321 1774 00000000 		.word	c_mem
 3322              	.L156:
 561:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3323              		.loc 1 561 0 discriminator 3
 3324 1778 07F5AF53 		add	r3, r7, #5600
 3325 177c 03F10503 		add	r3, r3, #5
 3326 1780 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3327 1782 3222     		movs	r2, #50
 3328 1784 02FB03F3 		mul	r3, r2, r3
 3329 1788 1A1D     		adds	r2, r3, #4
 3330 178a 07F5AF53 		add	r3, r7, #5600
 3331 178e 03F10303 		add	r3, r3, #3
 3332 1792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3333 1794 1A44     		add	r2, r2, r3
 3334 1796 07F5AF53 		add	r3, r7, #5600
 3335 179a 03F10603 		add	r3, r3, #6
 3336 179e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3337 17a0 D31A     		subs	r3, r2, r3
 3338 17a2 5A1E     		subs	r2, r3, #1
 3339 17a4 07F5AF53 		add	r3, r7, #5600
 3340 17a8 03F10603 		add	r3, r3, #6
 3341 17ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3342 17ae 07F12803 		add	r3, r7, #40
 3343 17b2 103B     		subs	r3, r3, #16
 3344 17b4 0B44     		add	r3, r3, r1
 3345 17b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3346 17b8 07F16803 		add	r3, r7, #104
 3347 17bc 103B     		subs	r3, r3, #16
 3348 17be 9954     		strb	r1, [r3, r2]
 560:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3349              		.loc 1 560 0 discriminator 3
 3350 17c0 07F5AF53 		add	r3, r7, #5600
 3351 17c4 03F10603 		add	r3, r3, #6
 3352 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3353 17ca 0133     		adds	r3, r3, #1
 3354 17cc 07F5AF52 		add	r2, r7, #5600
 3355 17d0 02F10602 		add	r2, r2, #6
 3356 17d4 1370     		strb	r3, [r2]
 3357              	.L155:
 560:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3358              		.loc 1 560 0 is_stmt 0 discriminator 1
 3359 17d6 07F5AF53 		add	r3, r7, #5600
 3360 17da 03F10603 		add	r3, r3, #6
 3361 17de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3362 17e0 07F5AF53 		add	r3, r7, #5600
 3363 17e4 03F10303 		add	r3, r3, #3
 3364 17e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 87


 3365 17ea 9A42     		cmp	r2, r3
 3366 17ec C4D3     		bcc	.L156
 562:..\src/command_processing.c ****                         }
 563:..\src/command_processing.c ****                         break; 
 3367              		.loc 1 563 0 is_stmt 1
 3368 17ee 00F044BE 		b	.L109
 3369              	.L117:
 564:..\src/command_processing.c ****                         
 565:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 566:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3370              		.loc 1 566 0
 3371 17f2 07F5AE53 		add	r3, r7, #5568
 3372 17f6 03F11E03 		add	r3, r3, #30
 3373 17fa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3374 17fc AB49     		ldr	r1, .L290
 3375 17fe 1346     		mov	r3, r2
 3376 1800 DB00     		lsls	r3, r3, #3
 3377 1802 9B1A     		subs	r3, r3, r2
 3378 1804 1B01     		lsls	r3, r3, #4
 3379 1806 0B44     		add	r3, r3, r1
 3380 1808 03F20F13 		addw	r3, r3, #271
 3381 180c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3382 180e 032B     		cmp	r3, #3
 3383 1810 00F02981 		beq	.L157
 567:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3384              		.loc 1 567 0
 3385 1814 07F5AE53 		add	r3, r7, #5568
 3386 1818 03F11E03 		add	r3, r3, #30
 3387 181c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3388 181e A349     		ldr	r1, .L290
 3389 1820 1346     		mov	r3, r2
 3390 1822 DB00     		lsls	r3, r3, #3
 3391 1824 9B1A     		subs	r3, r3, r2
 3392 1826 1B01     		lsls	r3, r3, #4
 3393 1828 0B44     		add	r3, r3, r1
 3394 182a B033     		adds	r3, r3, #176
 3395 182c 1B68     		ldr	r3, [r3]
 3396 182e 1846     		mov	r0, r3
 3397 1830 FFF7FEFF 		bl	__aeabi_i2f
 3398 1834 0346     		mov	r3, r0
 3399 1836 4FF08F41 		mov	r1, #1199570944
 3400 183a 1846     		mov	r0, r3
 3401 183c FFF7FEFF 		bl	__aeabi_fdiv
 3402 1840 0346     		mov	r3, r0
 3403 1842 1A46     		mov	r2, r3
 3404 1844 07F12803 		add	r3, r7, #40
 3405 1848 083B     		subs	r3, r3, #8
 3406 184a 1A60     		str	r2, [r3]	@ float
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3407              		.loc 1 568 0
 3408 184c 0023     		movs	r3, #0
 3409 184e 07F5AF52 		add	r2, r7, #5600
 3410 1852 02F10702 		add	r2, r2, #7
 3411 1856 1370     		strb	r3, [r2]
 3412 1858 2EE0     		b	.L158
 3413              	.L159:
 569:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 88


 3414              		.loc 1 569 0 discriminator 3
 3415 185a 07F5AF53 		add	r3, r7, #5600
 3416 185e 03F10503 		add	r3, r3, #5
 3417 1862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3418 1864 3222     		movs	r2, #50
 3419 1866 02FB03F3 		mul	r3, r2, r3
 3420 186a 1A1D     		adds	r2, r3, #4
 3421 186c 07F5AF53 		add	r3, r7, #5600
 3422 1870 03F10303 		add	r3, r3, #3
 3423 1874 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3424 1876 1A44     		add	r2, r2, r3
 3425 1878 07F5AF53 		add	r3, r7, #5600
 3426 187c 03F10703 		add	r3, r3, #7
 3427 1880 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3428 1882 D31A     		subs	r3, r2, r3
 3429 1884 5A1E     		subs	r2, r3, #1
 3430 1886 07F5AF53 		add	r3, r7, #5600
 3431 188a 03F10703 		add	r3, r3, #7
 3432 188e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3433 1890 07F12803 		add	r3, r7, #40
 3434 1894 083B     		subs	r3, r3, #8
 3435 1896 0B44     		add	r3, r3, r1
 3436 1898 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3437 189a 07F16803 		add	r3, r7, #104
 3438 189e 103B     		subs	r3, r3, #16
 3439 18a0 9954     		strb	r1, [r3, r2]
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3440              		.loc 1 568 0 discriminator 3
 3441 18a2 07F5AF53 		add	r3, r7, #5600
 3442 18a6 03F10703 		add	r3, r3, #7
 3443 18aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3444 18ac 0133     		adds	r3, r3, #1
 3445 18ae 07F5AF52 		add	r2, r7, #5600
 3446 18b2 02F10702 		add	r2, r2, #7
 3447 18b6 1370     		strb	r3, [r2]
 3448              	.L158:
 568:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3449              		.loc 1 568 0 is_stmt 0 discriminator 1
 3450 18b8 07F5AF53 		add	r3, r7, #5600
 3451 18bc 03F10703 		add	r3, r3, #7
 3452 18c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3453 18c2 07F5AF53 		add	r3, r7, #5600
 3454 18c6 03F10303 		add	r3, r3, #3
 3455 18ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3456 18cc 9A42     		cmp	r2, r3
 3457 18ce C4D3     		bcc	.L159
 570:..\src/command_processing.c ****                             }
 571:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3458              		.loc 1 571 0 is_stmt 1
 3459 18d0 07F5AE53 		add	r3, r7, #5568
 3460 18d4 03F11E03 		add	r3, r3, #30
 3461 18d8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3462 18da 7449     		ldr	r1, .L290
 3463 18dc 1346     		mov	r3, r2
 3464 18de DB00     		lsls	r3, r3, #3
 3465 18e0 9B1A     		subs	r3, r3, r2
 3466 18e2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 89


 3467 18e4 0B44     		add	r3, r3, r1
 3468 18e6 B433     		adds	r3, r3, #180
 3469 18e8 1B68     		ldr	r3, [r3]
 3470 18ea 1846     		mov	r0, r3
 3471 18ec FFF7FEFF 		bl	__aeabi_i2f
 3472 18f0 0346     		mov	r3, r0
 3473 18f2 4FF08F41 		mov	r1, #1199570944
 3474 18f6 1846     		mov	r0, r3
 3475 18f8 FFF7FEFF 		bl	__aeabi_fdiv
 3476 18fc 0346     		mov	r3, r0
 3477 18fe 1A46     		mov	r2, r3
 3478 1900 07F12803 		add	r3, r7, #40
 3479 1904 083B     		subs	r3, r3, #8
 3480 1906 1A60     		str	r2, [r3]	@ float
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3481              		.loc 1 572 0
 3482 1908 0023     		movs	r3, #0
 3483 190a 07F5AF52 		add	r2, r7, #5600
 3484 190e 02F10702 		add	r2, r2, #7
 3485 1912 1370     		strb	r3, [r2]
 3486 1914 34E0     		b	.L160
 3487              	.L161:
 573:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3488              		.loc 1 573 0 discriminator 3
 3489 1916 07F5AF53 		add	r3, r7, #5600
 3490 191a 03F10503 		add	r3, r3, #5
 3491 191e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3492 1920 3222     		movs	r2, #50
 3493 1922 02FB03F3 		mul	r3, r2, r3
 3494 1926 1A1D     		adds	r2, r3, #4
 3495 1928 07F5AF53 		add	r3, r7, #5600
 3496 192c 03F10303 		add	r3, r3, #3
 3497 1930 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3498 1932 1A44     		add	r2, r2, r3
 3499 1934 07F5AF53 		add	r3, r7, #5600
 3500 1938 03F10303 		add	r3, r3, #3
 3501 193c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3502 193e 1A44     		add	r2, r2, r3
 3503 1940 07F5AF53 		add	r3, r7, #5600
 3504 1944 03F10703 		add	r3, r3, #7
 3505 1948 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3506 194a D31A     		subs	r3, r2, r3
 3507 194c 5A1E     		subs	r2, r3, #1
 3508 194e 07F5AF53 		add	r3, r7, #5600
 3509 1952 03F10703 		add	r3, r3, #7
 3510 1956 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3511 1958 07F12803 		add	r3, r7, #40
 3512 195c 083B     		subs	r3, r3, #8
 3513 195e 0B44     		add	r3, r3, r1
 3514 1960 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3515 1962 07F16803 		add	r3, r7, #104
 3516 1966 103B     		subs	r3, r3, #16
 3517 1968 9954     		strb	r1, [r3, r2]
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3518              		.loc 1 572 0 discriminator 3
 3519 196a 07F5AF53 		add	r3, r7, #5600
 3520 196e 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 90


 3521 1972 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3522 1974 0133     		adds	r3, r3, #1
 3523 1976 07F5AF52 		add	r2, r7, #5600
 3524 197a 02F10702 		add	r2, r2, #7
 3525 197e 1370     		strb	r3, [r2]
 3526              	.L160:
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3527              		.loc 1 572 0 is_stmt 0 discriminator 1
 3528 1980 07F5AF53 		add	r3, r7, #5600
 3529 1984 03F10703 		add	r3, r3, #7
 3530 1988 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3531 198a 07F5AF53 		add	r3, r7, #5600
 3532 198e 03F10303 		add	r3, r3, #3
 3533 1992 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3534 1994 9A42     		cmp	r2, r3
 3535 1996 BED3     		bcc	.L161
 574:..\src/command_processing.c ****                             }
 575:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3536              		.loc 1 575 0 is_stmt 1
 3537 1998 07F5AE53 		add	r3, r7, #5568
 3538 199c 03F11E03 		add	r3, r3, #30
 3539 19a0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3540 19a2 4249     		ldr	r1, .L290
 3541 19a4 1346     		mov	r3, r2
 3542 19a6 DB00     		lsls	r3, r3, #3
 3543 19a8 9B1A     		subs	r3, r3, r2
 3544 19aa 1B01     		lsls	r3, r3, #4
 3545 19ac 0B44     		add	r3, r3, r1
 3546 19ae B833     		adds	r3, r3, #184
 3547 19b0 1B68     		ldr	r3, [r3]
 3548 19b2 1846     		mov	r0, r3
 3549 19b4 FFF7FEFF 		bl	__aeabi_i2f
 3550 19b8 0346     		mov	r3, r0
 3551 19ba 4FF08F41 		mov	r1, #1199570944
 3552 19be 1846     		mov	r0, r3
 3553 19c0 FFF7FEFF 		bl	__aeabi_fdiv
 3554 19c4 0346     		mov	r3, r0
 3555 19c6 1A46     		mov	r2, r3
 3556 19c8 07F12803 		add	r3, r7, #40
 3557 19cc 083B     		subs	r3, r3, #8
 3558 19ce 1A60     		str	r2, [r3]	@ float
 576:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3559              		.loc 1 576 0
 3560 19d0 0023     		movs	r3, #0
 3561 19d2 07F5AF52 		add	r2, r7, #5600
 3562 19d6 02F10702 		add	r2, r2, #7
 3563 19da 1370     		strb	r3, [r2]
 3564 19dc 35E0     		b	.L162
 3565              	.L163:
 577:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3566              		.loc 1 577 0 discriminator 3
 3567 19de 07F5AF53 		add	r3, r7, #5600
 3568 19e2 03F10503 		add	r3, r3, #5
 3569 19e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3570 19e8 3222     		movs	r2, #50
 3571 19ea 02FB03F3 		mul	r3, r2, r3
 3572 19ee 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 91


 3573 19f0 07F5AF53 		add	r3, r7, #5600
 3574 19f4 03F10303 		add	r3, r3, #3
 3575 19f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3576 19fa 5B00     		lsls	r3, r3, #1
 3577 19fc 1A44     		add	r2, r2, r3
 3578 19fe 07F5AF53 		add	r3, r7, #5600
 3579 1a02 03F10303 		add	r3, r3, #3
 3580 1a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3581 1a08 1A44     		add	r2, r2, r3
 3582 1a0a 07F5AF53 		add	r3, r7, #5600
 3583 1a0e 03F10703 		add	r3, r3, #7
 3584 1a12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3585 1a14 D31A     		subs	r3, r2, r3
 3586 1a16 5A1E     		subs	r2, r3, #1
 3587 1a18 07F5AF53 		add	r3, r7, #5600
 3588 1a1c 03F10703 		add	r3, r3, #7
 3589 1a20 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3590 1a22 07F12803 		add	r3, r7, #40
 3591 1a26 083B     		subs	r3, r3, #8
 3592 1a28 0B44     		add	r3, r3, r1
 3593 1a2a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3594 1a2c 07F16803 		add	r3, r7, #104
 3595 1a30 103B     		subs	r3, r3, #16
 3596 1a32 9954     		strb	r1, [r3, r2]
 576:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3597              		.loc 1 576 0 discriminator 3
 3598 1a34 07F5AF53 		add	r3, r7, #5600
 3599 1a38 03F10703 		add	r3, r3, #7
 3600 1a3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3601 1a3e 0133     		adds	r3, r3, #1
 3602 1a40 07F5AF52 		add	r2, r7, #5600
 3603 1a44 02F10702 		add	r2, r2, #7
 3604 1a48 1370     		strb	r3, [r2]
 3605              	.L162:
 576:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3606              		.loc 1 576 0 is_stmt 0 discriminator 1
 3607 1a4a 07F5AF53 		add	r3, r7, #5600
 3608 1a4e 03F10703 		add	r3, r3, #7
 3609 1a52 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3610 1a54 07F5AF53 		add	r3, r7, #5600
 3611 1a58 03F10303 		add	r3, r3, #3
 3612 1a5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3613 1a5e 9A42     		cmp	r2, r3
 3614 1a60 BDD3     		bcc	.L163
 578:..\src/command_processing.c ****                             } 
 579:..\src/command_processing.c ****                         }
 580:..\src/command_processing.c ****                         else {
 581:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 582:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 583:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 584:..\src/command_processing.c ****                             }
 585:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 586:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 587:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 588:..\src/command_processing.c ****                             }
 589:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 590:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 92


 591:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 592:..\src/command_processing.c ****                             }
 593:..\src/command_processing.c ****                         }
 594:..\src/command_processing.c ****                         break;
 3615              		.loc 1 594 0 is_stmt 1
 3616 1a62 00F00ABD 		b	.L109
 3617              	.L157:
 581:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3618              		.loc 1 581 0
 3619 1a66 07F5AE53 		add	r3, r7, #5568
 3620 1a6a 03F11E03 		add	r3, r3, #30
 3621 1a6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3622 1a70 0E49     		ldr	r1, .L290
 3623 1a72 1346     		mov	r3, r2
 3624 1a74 DB00     		lsls	r3, r3, #3
 3625 1a76 9B1A     		subs	r3, r3, r2
 3626 1a78 1B01     		lsls	r3, r3, #4
 3627 1a7a 0B44     		add	r3, r3, r1
 3628 1a7c C833     		adds	r3, r3, #200
 3629 1a7e 1B68     		ldr	r3, [r3]
 3630 1a80 1846     		mov	r0, r3
 3631 1a82 FFF7FEFF 		bl	__aeabi_i2f
 3632 1a86 0346     		mov	r3, r0
 3633 1a88 4FF08F41 		mov	r1, #1199570944
 3634 1a8c 1846     		mov	r0, r3
 3635 1a8e FFF7FEFF 		bl	__aeabi_fdiv
 3636 1a92 0346     		mov	r3, r0
 3637 1a94 1A46     		mov	r2, r3
 3638 1a96 07F12803 		add	r3, r7, #40
 3639 1a9a 083B     		subs	r3, r3, #8
 3640 1a9c 1A60     		str	r2, [r3]	@ float
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3641              		.loc 1 582 0
 3642 1a9e 0023     		movs	r3, #0
 3643 1aa0 07F5AF52 		add	r2, r7, #5600
 3644 1aa4 02F10702 		add	r2, r2, #7
 3645 1aa8 1370     		strb	r3, [r2]
 3646 1aaa 30E0     		b	.L165
 3647              	.L291:
 3648              		.align	2
 3649              	.L290:
 3650 1aac 00000000 		.word	c_mem
 3651              	.L166:
 583:..\src/command_processing.c ****                             }
 3652              		.loc 1 583 0 discriminator 3
 3653 1ab0 07F5AF53 		add	r3, r7, #5600
 3654 1ab4 03F10503 		add	r3, r3, #5
 3655 1ab8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3656 1aba 3222     		movs	r2, #50
 3657 1abc 02FB03F3 		mul	r3, r2, r3
 3658 1ac0 1A1D     		adds	r2, r3, #4
 3659 1ac2 07F5AF53 		add	r3, r7, #5600
 3660 1ac6 03F10303 		add	r3, r3, #3
 3661 1aca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3662 1acc 1A44     		add	r2, r2, r3
 3663 1ace 07F5AF53 		add	r3, r7, #5600
 3664 1ad2 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 93


 3665 1ad6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3666 1ad8 D31A     		subs	r3, r2, r3
 3667 1ada 5A1E     		subs	r2, r3, #1
 3668 1adc 07F5AF53 		add	r3, r7, #5600
 3669 1ae0 03F10703 		add	r3, r3, #7
 3670 1ae4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3671 1ae6 07F12803 		add	r3, r7, #40
 3672 1aea 083B     		subs	r3, r3, #8
 3673 1aec 0B44     		add	r3, r3, r1
 3674 1aee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3675 1af0 07F16803 		add	r3, r7, #104
 3676 1af4 103B     		subs	r3, r3, #16
 3677 1af6 9954     		strb	r1, [r3, r2]
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3678              		.loc 1 582 0 discriminator 3
 3679 1af8 07F5AF53 		add	r3, r7, #5600
 3680 1afc 03F10703 		add	r3, r3, #7
 3681 1b00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3682 1b02 0133     		adds	r3, r3, #1
 3683 1b04 07F5AF52 		add	r2, r7, #5600
 3684 1b08 02F10702 		add	r2, r2, #7
 3685 1b0c 1370     		strb	r3, [r2]
 3686              	.L165:
 582:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3687              		.loc 1 582 0 is_stmt 0 discriminator 1
 3688 1b0e 07F5AF53 		add	r3, r7, #5600
 3689 1b12 03F10703 		add	r3, r3, #7
 3690 1b16 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3691 1b18 07F5AF53 		add	r3, r7, #5600
 3692 1b1c 03F10303 		add	r3, r3, #3
 3693 1b20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3694 1b22 9A42     		cmp	r2, r3
 3695 1b24 C4D3     		bcc	.L166
 585:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3696              		.loc 1 585 0 is_stmt 1
 3697 1b26 07F5AE53 		add	r3, r7, #5568
 3698 1b2a 03F11E03 		add	r3, r3, #30
 3699 1b2e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3700 1b30 AB49     		ldr	r1, .L292
 3701 1b32 1346     		mov	r3, r2
 3702 1b34 DB00     		lsls	r3, r3, #3
 3703 1b36 9B1A     		subs	r3, r3, r2
 3704 1b38 1B01     		lsls	r3, r3, #4
 3705 1b3a 0B44     		add	r3, r3, r1
 3706 1b3c CC33     		adds	r3, r3, #204
 3707 1b3e 1B68     		ldr	r3, [r3]
 3708 1b40 1846     		mov	r0, r3
 3709 1b42 FFF7FEFF 		bl	__aeabi_i2f
 3710 1b46 0346     		mov	r3, r0
 3711 1b48 4FF08F41 		mov	r1, #1199570944
 3712 1b4c 1846     		mov	r0, r3
 3713 1b4e FFF7FEFF 		bl	__aeabi_fdiv
 3714 1b52 0346     		mov	r3, r0
 3715 1b54 1A46     		mov	r2, r3
 3716 1b56 07F12803 		add	r3, r7, #40
 3717 1b5a 083B     		subs	r3, r3, #8
 3718 1b5c 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 94


 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3719              		.loc 1 586 0
 3720 1b5e 0023     		movs	r3, #0
 3721 1b60 07F5AF52 		add	r2, r7, #5600
 3722 1b64 02F10702 		add	r2, r2, #7
 3723 1b68 1370     		strb	r3, [r2]
 3724 1b6a 34E0     		b	.L167
 3725              	.L168:
 587:..\src/command_processing.c ****                             }
 3726              		.loc 1 587 0 discriminator 3
 3727 1b6c 07F5AF53 		add	r3, r7, #5600
 3728 1b70 03F10503 		add	r3, r3, #5
 3729 1b74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3730 1b76 3222     		movs	r2, #50
 3731 1b78 02FB03F3 		mul	r3, r2, r3
 3732 1b7c 1A1D     		adds	r2, r3, #4
 3733 1b7e 07F5AF53 		add	r3, r7, #5600
 3734 1b82 03F10303 		add	r3, r3, #3
 3735 1b86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3736 1b88 1A44     		add	r2, r2, r3
 3737 1b8a 07F5AF53 		add	r3, r7, #5600
 3738 1b8e 03F10303 		add	r3, r3, #3
 3739 1b92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3740 1b94 1A44     		add	r2, r2, r3
 3741 1b96 07F5AF53 		add	r3, r7, #5600
 3742 1b9a 03F10703 		add	r3, r3, #7
 3743 1b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3744 1ba0 D31A     		subs	r3, r2, r3
 3745 1ba2 5A1E     		subs	r2, r3, #1
 3746 1ba4 07F5AF53 		add	r3, r7, #5600
 3747 1ba8 03F10703 		add	r3, r3, #7
 3748 1bac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3749 1bae 07F12803 		add	r3, r7, #40
 3750 1bb2 083B     		subs	r3, r3, #8
 3751 1bb4 0B44     		add	r3, r3, r1
 3752 1bb6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3753 1bb8 07F16803 		add	r3, r7, #104
 3754 1bbc 103B     		subs	r3, r3, #16
 3755 1bbe 9954     		strb	r1, [r3, r2]
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3756              		.loc 1 586 0 discriminator 3
 3757 1bc0 07F5AF53 		add	r3, r7, #5600
 3758 1bc4 03F10703 		add	r3, r3, #7
 3759 1bc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3760 1bca 0133     		adds	r3, r3, #1
 3761 1bcc 07F5AF52 		add	r2, r7, #5600
 3762 1bd0 02F10702 		add	r2, r2, #7
 3763 1bd4 1370     		strb	r3, [r2]
 3764              	.L167:
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3765              		.loc 1 586 0 is_stmt 0 discriminator 1
 3766 1bd6 07F5AF53 		add	r3, r7, #5600
 3767 1bda 03F10703 		add	r3, r3, #7
 3768 1bde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3769 1be0 07F5AF53 		add	r3, r7, #5600
 3770 1be4 03F10303 		add	r3, r3, #3
 3771 1be8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 95


 3772 1bea 9A42     		cmp	r2, r3
 3773 1bec BED3     		bcc	.L168
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3774              		.loc 1 589 0 is_stmt 1
 3775 1bee 07F5AE53 		add	r3, r7, #5568
 3776 1bf2 03F11E03 		add	r3, r3, #30
 3777 1bf6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3778 1bf8 7949     		ldr	r1, .L292
 3779 1bfa 1346     		mov	r3, r2
 3780 1bfc DB00     		lsls	r3, r3, #3
 3781 1bfe 9B1A     		subs	r3, r3, r2
 3782 1c00 1B01     		lsls	r3, r3, #4
 3783 1c02 0B44     		add	r3, r3, r1
 3784 1c04 D033     		adds	r3, r3, #208
 3785 1c06 1B68     		ldr	r3, [r3]
 3786 1c08 1846     		mov	r0, r3
 3787 1c0a FFF7FEFF 		bl	__aeabi_i2f
 3788 1c0e 0346     		mov	r3, r0
 3789 1c10 4FF08F41 		mov	r1, #1199570944
 3790 1c14 1846     		mov	r0, r3
 3791 1c16 FFF7FEFF 		bl	__aeabi_fdiv
 3792 1c1a 0346     		mov	r3, r0
 3793 1c1c 1A46     		mov	r2, r3
 3794 1c1e 07F12803 		add	r3, r7, #40
 3795 1c22 083B     		subs	r3, r3, #8
 3796 1c24 1A60     		str	r2, [r3]	@ float
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3797              		.loc 1 590 0
 3798 1c26 0023     		movs	r3, #0
 3799 1c28 07F5AF52 		add	r2, r7, #5600
 3800 1c2c 02F10702 		add	r2, r2, #7
 3801 1c30 1370     		strb	r3, [r2]
 3802 1c32 35E0     		b	.L169
 3803              	.L170:
 591:..\src/command_processing.c ****                             }
 3804              		.loc 1 591 0 discriminator 3
 3805 1c34 07F5AF53 		add	r3, r7, #5600
 3806 1c38 03F10503 		add	r3, r3, #5
 3807 1c3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3808 1c3e 3222     		movs	r2, #50
 3809 1c40 02FB03F3 		mul	r3, r2, r3
 3810 1c44 1A1D     		adds	r2, r3, #4
 3811 1c46 07F5AF53 		add	r3, r7, #5600
 3812 1c4a 03F10303 		add	r3, r3, #3
 3813 1c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3814 1c50 5B00     		lsls	r3, r3, #1
 3815 1c52 1A44     		add	r2, r2, r3
 3816 1c54 07F5AF53 		add	r3, r7, #5600
 3817 1c58 03F10303 		add	r3, r3, #3
 3818 1c5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3819 1c5e 1A44     		add	r2, r2, r3
 3820 1c60 07F5AF53 		add	r3, r7, #5600
 3821 1c64 03F10703 		add	r3, r3, #7
 3822 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3823 1c6a D31A     		subs	r3, r2, r3
 3824 1c6c 5A1E     		subs	r2, r3, #1
 3825 1c6e 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 96


 3826 1c72 03F10703 		add	r3, r3, #7
 3827 1c76 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3828 1c78 07F12803 		add	r3, r7, #40
 3829 1c7c 083B     		subs	r3, r3, #8
 3830 1c7e 0B44     		add	r3, r3, r1
 3831 1c80 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3832 1c82 07F16803 		add	r3, r7, #104
 3833 1c86 103B     		subs	r3, r3, #16
 3834 1c88 9954     		strb	r1, [r3, r2]
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3835              		.loc 1 590 0 discriminator 3
 3836 1c8a 07F5AF53 		add	r3, r7, #5600
 3837 1c8e 03F10703 		add	r3, r3, #7
 3838 1c92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3839 1c94 0133     		adds	r3, r3, #1
 3840 1c96 07F5AF52 		add	r2, r7, #5600
 3841 1c9a 02F10702 		add	r2, r2, #7
 3842 1c9e 1370     		strb	r3, [r2]
 3843              	.L169:
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3844              		.loc 1 590 0 is_stmt 0 discriminator 1
 3845 1ca0 07F5AF53 		add	r3, r7, #5600
 3846 1ca4 03F10703 		add	r3, r3, #7
 3847 1ca8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3848 1caa 07F5AF53 		add	r3, r7, #5600
 3849 1cae 03F10303 		add	r3, r3, #3
 3850 1cb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3851 1cb4 9A42     		cmp	r2, r3
 3852 1cb6 BDD3     		bcc	.L170
 3853              		.loc 1 594 0 is_stmt 1
 3854 1cb8 DFE3     		b	.L109
 3855              	.L118:
 595:..\src/command_processing.c ****                         
 596:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 597:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3856              		.loc 1 597 0
 3857 1cba 07F5AE53 		add	r3, r7, #5568
 3858 1cbe 03F11E03 		add	r3, r3, #30
 3859 1cc2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3860 1cc4 4649     		ldr	r1, .L292
 3861 1cc6 1346     		mov	r3, r2
 3862 1cc8 DB00     		lsls	r3, r3, #3
 3863 1cca 9B1A     		subs	r3, r3, r2
 3864 1ccc 1B01     		lsls	r3, r3, #4
 3865 1cce 0B44     		add	r3, r3, r1
 3866 1cd0 03F20F13 		addw	r3, r3, #271
 3867 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 1cd6 032B     		cmp	r3, #3
 3869 1cd8 00F02B81 		beq	.L171
 598:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3870              		.loc 1 598 0
 3871 1cdc 07F5AE53 		add	r3, r7, #5568
 3872 1ce0 03F11E03 		add	r3, r3, #30
 3873 1ce4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3874 1ce6 3E49     		ldr	r1, .L292
 3875 1ce8 1346     		mov	r3, r2
 3876 1cea DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 97


 3877 1cec 9B1A     		subs	r3, r3, r2
 3878 1cee 1B01     		lsls	r3, r3, #4
 3879 1cf0 0B44     		add	r3, r3, r1
 3880 1cf2 BC33     		adds	r3, r3, #188
 3881 1cf4 1B68     		ldr	r3, [r3]
 3882 1cf6 1846     		mov	r0, r3
 3883 1cf8 FFF7FEFF 		bl	__aeabi_i2f
 3884 1cfc 0346     		mov	r3, r0
 3885 1cfe 4FF08F41 		mov	r1, #1199570944
 3886 1d02 1846     		mov	r0, r3
 3887 1d04 FFF7FEFF 		bl	__aeabi_fdiv
 3888 1d08 0346     		mov	r3, r0
 3889 1d0a 1A46     		mov	r2, r3
 3890 1d0c 07F12803 		add	r3, r7, #40
 3891 1d10 083B     		subs	r3, r3, #8
 3892 1d12 1A60     		str	r2, [r3]	@ float
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3893              		.loc 1 599 0
 3894 1d14 0023     		movs	r3, #0
 3895 1d16 07F5AF52 		add	r2, r7, #5600
 3896 1d1a 02F10702 		add	r2, r2, #7
 3897 1d1e 1370     		strb	r3, [r2]
 3898 1d20 2EE0     		b	.L172
 3899              	.L173:
 600:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3900              		.loc 1 600 0 discriminator 3
 3901 1d22 07F5AF53 		add	r3, r7, #5600
 3902 1d26 03F10503 		add	r3, r3, #5
 3903 1d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3904 1d2c 3222     		movs	r2, #50
 3905 1d2e 02FB03F3 		mul	r3, r2, r3
 3906 1d32 1A1D     		adds	r2, r3, #4
 3907 1d34 07F5AF53 		add	r3, r7, #5600
 3908 1d38 03F10303 		add	r3, r3, #3
 3909 1d3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3910 1d3e 1A44     		add	r2, r2, r3
 3911 1d40 07F5AF53 		add	r3, r7, #5600
 3912 1d44 03F10703 		add	r3, r3, #7
 3913 1d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3914 1d4a D31A     		subs	r3, r2, r3
 3915 1d4c 5A1E     		subs	r2, r3, #1
 3916 1d4e 07F5AF53 		add	r3, r7, #5600
 3917 1d52 03F10703 		add	r3, r3, #7
 3918 1d56 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3919 1d58 07F12803 		add	r3, r7, #40
 3920 1d5c 083B     		subs	r3, r3, #8
 3921 1d5e 0B44     		add	r3, r3, r1
 3922 1d60 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3923 1d62 07F16803 		add	r3, r7, #104
 3924 1d66 103B     		subs	r3, r3, #16
 3925 1d68 9954     		strb	r1, [r3, r2]
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3926              		.loc 1 599 0 discriminator 3
 3927 1d6a 07F5AF53 		add	r3, r7, #5600
 3928 1d6e 03F10703 		add	r3, r3, #7
 3929 1d72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3930 1d74 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 98


 3931 1d76 07F5AF52 		add	r2, r7, #5600
 3932 1d7a 02F10702 		add	r2, r2, #7
 3933 1d7e 1370     		strb	r3, [r2]
 3934              	.L172:
 599:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3935              		.loc 1 599 0 is_stmt 0 discriminator 1
 3936 1d80 07F5AF53 		add	r3, r7, #5600
 3937 1d84 03F10703 		add	r3, r3, #7
 3938 1d88 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3939 1d8a 07F5AF53 		add	r3, r7, #5600
 3940 1d8e 03F10303 		add	r3, r3, #3
 3941 1d92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3942 1d94 9A42     		cmp	r2, r3
 3943 1d96 C4D3     		bcc	.L173
 601:..\src/command_processing.c ****                             }
 602:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3944              		.loc 1 602 0 is_stmt 1
 3945 1d98 07F5AE53 		add	r3, r7, #5568
 3946 1d9c 03F11E03 		add	r3, r3, #30
 3947 1da0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3948 1da2 0F49     		ldr	r1, .L292
 3949 1da4 1346     		mov	r3, r2
 3950 1da6 DB00     		lsls	r3, r3, #3
 3951 1da8 9B1A     		subs	r3, r3, r2
 3952 1daa 1B01     		lsls	r3, r3, #4
 3953 1dac 0B44     		add	r3, r3, r1
 3954 1dae C033     		adds	r3, r3, #192
 3955 1db0 1B68     		ldr	r3, [r3]
 3956 1db2 1846     		mov	r0, r3
 3957 1db4 FFF7FEFF 		bl	__aeabi_i2f
 3958 1db8 0346     		mov	r3, r0
 3959 1dba 4FF08F41 		mov	r1, #1199570944
 3960 1dbe 1846     		mov	r0, r3
 3961 1dc0 FFF7FEFF 		bl	__aeabi_fdiv
 3962 1dc4 0346     		mov	r3, r0
 3963 1dc6 1A46     		mov	r2, r3
 3964 1dc8 07F12803 		add	r3, r7, #40
 3965 1dcc 083B     		subs	r3, r3, #8
 3966 1dce 1A60     		str	r2, [r3]	@ float
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3967              		.loc 1 603 0
 3968 1dd0 0023     		movs	r3, #0
 3969 1dd2 07F5AF52 		add	r2, r7, #5600
 3970 1dd6 02F10702 		add	r2, r2, #7
 3971 1dda 1370     		strb	r3, [r2]
 3972 1ddc 37E0     		b	.L174
 3973              	.L293:
 3974 1dde 00BF     		.align	2
 3975              	.L292:
 3976 1de0 00000000 		.word	c_mem
 3977              	.L175:
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3978              		.loc 1 604 0 discriminator 3
 3979 1de4 07F5AF53 		add	r3, r7, #5600
 3980 1de8 03F10503 		add	r3, r3, #5
 3981 1dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3982 1dee 3222     		movs	r2, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 99


 3983 1df0 02FB03F3 		mul	r3, r2, r3
 3984 1df4 1A1D     		adds	r2, r3, #4
 3985 1df6 07F5AF53 		add	r3, r7, #5600
 3986 1dfa 03F10303 		add	r3, r3, #3
 3987 1dfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3988 1e00 1A44     		add	r2, r2, r3
 3989 1e02 07F5AF53 		add	r3, r7, #5600
 3990 1e06 03F10303 		add	r3, r3, #3
 3991 1e0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3992 1e0c 1A44     		add	r2, r2, r3
 3993 1e0e 07F5AF53 		add	r3, r7, #5600
 3994 1e12 03F10703 		add	r3, r3, #7
 3995 1e16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3996 1e18 D31A     		subs	r3, r2, r3
 3997 1e1a 5A1E     		subs	r2, r3, #1
 3998 1e1c 07F5AF53 		add	r3, r7, #5600
 3999 1e20 03F10703 		add	r3, r3, #7
 4000 1e24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4001 1e26 07F12803 		add	r3, r7, #40
 4002 1e2a 083B     		subs	r3, r3, #8
 4003 1e2c 0B44     		add	r3, r3, r1
 4004 1e2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4005 1e30 07F16803 		add	r3, r7, #104
 4006 1e34 103B     		subs	r3, r3, #16
 4007 1e36 9954     		strb	r1, [r3, r2]
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4008              		.loc 1 603 0 discriminator 3
 4009 1e38 07F5AF53 		add	r3, r7, #5600
 4010 1e3c 03F10703 		add	r3, r3, #7
 4011 1e40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4012 1e42 0133     		adds	r3, r3, #1
 4013 1e44 07F5AF52 		add	r2, r7, #5600
 4014 1e48 02F10702 		add	r2, r2, #7
 4015 1e4c 1370     		strb	r3, [r2]
 4016              	.L174:
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4017              		.loc 1 603 0 is_stmt 0 discriminator 1
 4018 1e4e 07F5AF53 		add	r3, r7, #5600
 4019 1e52 03F10703 		add	r3, r3, #7
 4020 1e56 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4021 1e58 07F5AF53 		add	r3, r7, #5600
 4022 1e5c 03F10303 		add	r3, r3, #3
 4023 1e60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4024 1e62 9A42     		cmp	r2, r3
 4025 1e64 BED3     		bcc	.L175
 605:..\src/command_processing.c ****                             }
 606:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 4026              		.loc 1 606 0 is_stmt 1
 4027 1e66 07F5AE53 		add	r3, r7, #5568
 4028 1e6a 03F11E03 		add	r3, r3, #30
 4029 1e6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4030 1e70 C449     		ldr	r1, .L294
 4031 1e72 1346     		mov	r3, r2
 4032 1e74 DB00     		lsls	r3, r3, #3
 4033 1e76 9B1A     		subs	r3, r3, r2
 4034 1e78 1B01     		lsls	r3, r3, #4
 4035 1e7a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 100


 4036 1e7c C433     		adds	r3, r3, #196
 4037 1e7e 1B68     		ldr	r3, [r3]
 4038 1e80 1846     		mov	r0, r3
 4039 1e82 FFF7FEFF 		bl	__aeabi_i2f
 4040 1e86 0346     		mov	r3, r0
 4041 1e88 4FF08F41 		mov	r1, #1199570944
 4042 1e8c 1846     		mov	r0, r3
 4043 1e8e FFF7FEFF 		bl	__aeabi_fdiv
 4044 1e92 0346     		mov	r3, r0
 4045 1e94 1A46     		mov	r2, r3
 4046 1e96 07F12803 		add	r3, r7, #40
 4047 1e9a 083B     		subs	r3, r3, #8
 4048 1e9c 1A60     		str	r2, [r3]	@ float
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4049              		.loc 1 607 0
 4050 1e9e 0023     		movs	r3, #0
 4051 1ea0 07F5AF52 		add	r2, r7, #5600
 4052 1ea4 02F10702 		add	r2, r2, #7
 4053 1ea8 1370     		strb	r3, [r2]
 4054 1eaa 35E0     		b	.L176
 4055              	.L177:
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4056              		.loc 1 608 0 discriminator 3
 4057 1eac 07F5AF53 		add	r3, r7, #5600
 4058 1eb0 03F10503 		add	r3, r3, #5
 4059 1eb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4060 1eb6 3222     		movs	r2, #50
 4061 1eb8 02FB03F3 		mul	r3, r2, r3
 4062 1ebc 1A1D     		adds	r2, r3, #4
 4063 1ebe 07F5AF53 		add	r3, r7, #5600
 4064 1ec2 03F10303 		add	r3, r3, #3
 4065 1ec6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4066 1ec8 5B00     		lsls	r3, r3, #1
 4067 1eca 1A44     		add	r2, r2, r3
 4068 1ecc 07F5AF53 		add	r3, r7, #5600
 4069 1ed0 03F10303 		add	r3, r3, #3
 4070 1ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4071 1ed6 1A44     		add	r2, r2, r3
 4072 1ed8 07F5AF53 		add	r3, r7, #5600
 4073 1edc 03F10703 		add	r3, r3, #7
 4074 1ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4075 1ee2 D31A     		subs	r3, r2, r3
 4076 1ee4 5A1E     		subs	r2, r3, #1
 4077 1ee6 07F5AF53 		add	r3, r7, #5600
 4078 1eea 03F10703 		add	r3, r3, #7
 4079 1eee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4080 1ef0 07F12803 		add	r3, r7, #40
 4081 1ef4 083B     		subs	r3, r3, #8
 4082 1ef6 0B44     		add	r3, r3, r1
 4083 1ef8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4084 1efa 07F16803 		add	r3, r7, #104
 4085 1efe 103B     		subs	r3, r3, #16
 4086 1f00 9954     		strb	r1, [r3, r2]
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4087              		.loc 1 607 0 discriminator 3
 4088 1f02 07F5AF53 		add	r3, r7, #5600
 4089 1f06 03F10703 		add	r3, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 101


 4090 1f0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4091 1f0c 0133     		adds	r3, r3, #1
 4092 1f0e 07F5AF52 		add	r2, r7, #5600
 4093 1f12 02F10702 		add	r2, r2, #7
 4094 1f16 1370     		strb	r3, [r2]
 4095              	.L176:
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4096              		.loc 1 607 0 is_stmt 0 discriminator 1
 4097 1f18 07F5AF53 		add	r3, r7, #5600
 4098 1f1c 03F10703 		add	r3, r3, #7
 4099 1f20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4100 1f22 07F5AF53 		add	r3, r7, #5600
 4101 1f26 03F10303 		add	r3, r3, #3
 4102 1f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4103 1f2c 9A42     		cmp	r2, r3
 4104 1f2e BDD3     		bcc	.L177
 609:..\src/command_processing.c ****                             }
 610:..\src/command_processing.c ****                         }
 611:..\src/command_processing.c ****                         else {
 612:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 613:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 614:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 615:..\src/command_processing.c ****                             }
 616:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 617:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 618:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 619:..\src/command_processing.c ****                             }
 620:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 621:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 622:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 623:..\src/command_processing.c ****                             }
 624:..\src/command_processing.c ****                         }            
 625:..\src/command_processing.c ****                         break;  
 4105              		.loc 1 625 0 is_stmt 1
 4106 1f30 A3E2     		b	.L109
 4107              	.L171:
 612:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4108              		.loc 1 612 0
 4109 1f32 07F5AE53 		add	r3, r7, #5568
 4110 1f36 03F11E03 		add	r3, r3, #30
 4111 1f3a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4112 1f3c 9149     		ldr	r1, .L294
 4113 1f3e 1346     		mov	r3, r2
 4114 1f40 DB00     		lsls	r3, r3, #3
 4115 1f42 9B1A     		subs	r3, r3, r2
 4116 1f44 1B01     		lsls	r3, r3, #4
 4117 1f46 0B44     		add	r3, r3, r1
 4118 1f48 D433     		adds	r3, r3, #212
 4119 1f4a 1B68     		ldr	r3, [r3]
 4120 1f4c 1846     		mov	r0, r3
 4121 1f4e FFF7FEFF 		bl	__aeabi_i2f
 4122 1f52 0346     		mov	r3, r0
 4123 1f54 4FF08F41 		mov	r1, #1199570944
 4124 1f58 1846     		mov	r0, r3
 4125 1f5a FFF7FEFF 		bl	__aeabi_fdiv
 4126 1f5e 0346     		mov	r3, r0
 4127 1f60 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 102


 4128 1f62 07F12803 		add	r3, r7, #40
 4129 1f66 083B     		subs	r3, r3, #8
 4130 1f68 1A60     		str	r2, [r3]	@ float
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4131              		.loc 1 613 0
 4132 1f6a 0023     		movs	r3, #0
 4133 1f6c 07F5AF52 		add	r2, r7, #5600
 4134 1f70 02F10702 		add	r2, r2, #7
 4135 1f74 1370     		strb	r3, [r2]
 4136 1f76 2EE0     		b	.L179
 4137              	.L180:
 614:..\src/command_processing.c ****                             }
 4138              		.loc 1 614 0 discriminator 3
 4139 1f78 07F5AF53 		add	r3, r7, #5600
 4140 1f7c 03F10503 		add	r3, r3, #5
 4141 1f80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4142 1f82 3222     		movs	r2, #50
 4143 1f84 02FB03F3 		mul	r3, r2, r3
 4144 1f88 1A1D     		adds	r2, r3, #4
 4145 1f8a 07F5AF53 		add	r3, r7, #5600
 4146 1f8e 03F10303 		add	r3, r3, #3
 4147 1f92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4148 1f94 1A44     		add	r2, r2, r3
 4149 1f96 07F5AF53 		add	r3, r7, #5600
 4150 1f9a 03F10703 		add	r3, r3, #7
 4151 1f9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4152 1fa0 D31A     		subs	r3, r2, r3
 4153 1fa2 5A1E     		subs	r2, r3, #1
 4154 1fa4 07F5AF53 		add	r3, r7, #5600
 4155 1fa8 03F10703 		add	r3, r3, #7
 4156 1fac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4157 1fae 07F12803 		add	r3, r7, #40
 4158 1fb2 083B     		subs	r3, r3, #8
 4159 1fb4 0B44     		add	r3, r3, r1
 4160 1fb6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4161 1fb8 07F16803 		add	r3, r7, #104
 4162 1fbc 103B     		subs	r3, r3, #16
 4163 1fbe 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4164              		.loc 1 613 0 discriminator 3
 4165 1fc0 07F5AF53 		add	r3, r7, #5600
 4166 1fc4 03F10703 		add	r3, r3, #7
 4167 1fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4168 1fca 0133     		adds	r3, r3, #1
 4169 1fcc 07F5AF52 		add	r2, r7, #5600
 4170 1fd0 02F10702 		add	r2, r2, #7
 4171 1fd4 1370     		strb	r3, [r2]
 4172              	.L179:
 613:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4173              		.loc 1 613 0 is_stmt 0 discriminator 1
 4174 1fd6 07F5AF53 		add	r3, r7, #5600
 4175 1fda 03F10703 		add	r3, r3, #7
 4176 1fde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4177 1fe0 07F5AF53 		add	r3, r7, #5600
 4178 1fe4 03F10303 		add	r3, r3, #3
 4179 1fe8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4180 1fea 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 103


 4181 1fec C4D3     		bcc	.L180
 616:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4182              		.loc 1 616 0 is_stmt 1
 4183 1fee 07F5AE53 		add	r3, r7, #5568
 4184 1ff2 03F11E03 		add	r3, r3, #30
 4185 1ff6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4186 1ff8 6249     		ldr	r1, .L294
 4187 1ffa 1346     		mov	r3, r2
 4188 1ffc DB00     		lsls	r3, r3, #3
 4189 1ffe 9B1A     		subs	r3, r3, r2
 4190 2000 1B01     		lsls	r3, r3, #4
 4191 2002 0B44     		add	r3, r3, r1
 4192 2004 D833     		adds	r3, r3, #216
 4193 2006 1B68     		ldr	r3, [r3]
 4194 2008 1846     		mov	r0, r3
 4195 200a FFF7FEFF 		bl	__aeabi_i2f
 4196 200e 0346     		mov	r3, r0
 4197 2010 4FF08F41 		mov	r1, #1199570944
 4198 2014 1846     		mov	r0, r3
 4199 2016 FFF7FEFF 		bl	__aeabi_fdiv
 4200 201a 0346     		mov	r3, r0
 4201 201c 1A46     		mov	r2, r3
 4202 201e 07F12803 		add	r3, r7, #40
 4203 2022 083B     		subs	r3, r3, #8
 4204 2024 1A60     		str	r2, [r3]	@ float
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4205              		.loc 1 617 0
 4206 2026 0023     		movs	r3, #0
 4207 2028 07F5AF52 		add	r2, r7, #5600
 4208 202c 02F10702 		add	r2, r2, #7
 4209 2030 1370     		strb	r3, [r2]
 4210 2032 34E0     		b	.L181
 4211              	.L182:
 618:..\src/command_processing.c ****                             }
 4212              		.loc 1 618 0 discriminator 3
 4213 2034 07F5AF53 		add	r3, r7, #5600
 4214 2038 03F10503 		add	r3, r3, #5
 4215 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4216 203e 3222     		movs	r2, #50
 4217 2040 02FB03F3 		mul	r3, r2, r3
 4218 2044 1A1D     		adds	r2, r3, #4
 4219 2046 07F5AF53 		add	r3, r7, #5600
 4220 204a 03F10303 		add	r3, r3, #3
 4221 204e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4222 2050 1A44     		add	r2, r2, r3
 4223 2052 07F5AF53 		add	r3, r7, #5600
 4224 2056 03F10303 		add	r3, r3, #3
 4225 205a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4226 205c 1A44     		add	r2, r2, r3
 4227 205e 07F5AF53 		add	r3, r7, #5600
 4228 2062 03F10703 		add	r3, r3, #7
 4229 2066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4230 2068 D31A     		subs	r3, r2, r3
 4231 206a 5A1E     		subs	r2, r3, #1
 4232 206c 07F5AF53 		add	r3, r7, #5600
 4233 2070 03F10703 		add	r3, r3, #7
 4234 2074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 104


 4235 2076 07F12803 		add	r3, r7, #40
 4236 207a 083B     		subs	r3, r3, #8
 4237 207c 0B44     		add	r3, r3, r1
 4238 207e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4239 2080 07F16803 		add	r3, r7, #104
 4240 2084 103B     		subs	r3, r3, #16
 4241 2086 9954     		strb	r1, [r3, r2]
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4242              		.loc 1 617 0 discriminator 3
 4243 2088 07F5AF53 		add	r3, r7, #5600
 4244 208c 03F10703 		add	r3, r3, #7
 4245 2090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4246 2092 0133     		adds	r3, r3, #1
 4247 2094 07F5AF52 		add	r2, r7, #5600
 4248 2098 02F10702 		add	r2, r2, #7
 4249 209c 1370     		strb	r3, [r2]
 4250              	.L181:
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4251              		.loc 1 617 0 is_stmt 0 discriminator 1
 4252 209e 07F5AF53 		add	r3, r7, #5600
 4253 20a2 03F10703 		add	r3, r3, #7
 4254 20a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4255 20a8 07F5AF53 		add	r3, r7, #5600
 4256 20ac 03F10303 		add	r3, r3, #3
 4257 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4258 20b2 9A42     		cmp	r2, r3
 4259 20b4 BED3     		bcc	.L182
 620:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4260              		.loc 1 620 0 is_stmt 1
 4261 20b6 07F5AE53 		add	r3, r7, #5568
 4262 20ba 03F11E03 		add	r3, r3, #30
 4263 20be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4264 20c0 3049     		ldr	r1, .L294
 4265 20c2 1346     		mov	r3, r2
 4266 20c4 DB00     		lsls	r3, r3, #3
 4267 20c6 9B1A     		subs	r3, r3, r2
 4268 20c8 1B01     		lsls	r3, r3, #4
 4269 20ca 0B44     		add	r3, r3, r1
 4270 20cc DC33     		adds	r3, r3, #220
 4271 20ce 1B68     		ldr	r3, [r3]
 4272 20d0 1846     		mov	r0, r3
 4273 20d2 FFF7FEFF 		bl	__aeabi_i2f
 4274 20d6 0346     		mov	r3, r0
 4275 20d8 4FF08F41 		mov	r1, #1199570944
 4276 20dc 1846     		mov	r0, r3
 4277 20de FFF7FEFF 		bl	__aeabi_fdiv
 4278 20e2 0346     		mov	r3, r0
 4279 20e4 1A46     		mov	r2, r3
 4280 20e6 07F12803 		add	r3, r7, #40
 4281 20ea 083B     		subs	r3, r3, #8
 4282 20ec 1A60     		str	r2, [r3]	@ float
 621:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4283              		.loc 1 621 0
 4284 20ee 0023     		movs	r3, #0
 4285 20f0 07F5AF52 		add	r2, r7, #5600
 4286 20f4 02F10702 		add	r2, r2, #7
 4287 20f8 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 105


 4288 20fa 35E0     		b	.L183
 4289              	.L184:
 622:..\src/command_processing.c ****                             }
 4290              		.loc 1 622 0 discriminator 3
 4291 20fc 07F5AF53 		add	r3, r7, #5600
 4292 2100 03F10503 		add	r3, r3, #5
 4293 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4294 2106 3222     		movs	r2, #50
 4295 2108 02FB03F3 		mul	r3, r2, r3
 4296 210c 1A1D     		adds	r2, r3, #4
 4297 210e 07F5AF53 		add	r3, r7, #5600
 4298 2112 03F10303 		add	r3, r3, #3
 4299 2116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4300 2118 5B00     		lsls	r3, r3, #1
 4301 211a 1A44     		add	r2, r2, r3
 4302 211c 07F5AF53 		add	r3, r7, #5600
 4303 2120 03F10303 		add	r3, r3, #3
 4304 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4305 2126 1A44     		add	r2, r2, r3
 4306 2128 07F5AF53 		add	r3, r7, #5600
 4307 212c 03F10703 		add	r3, r3, #7
 4308 2130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4309 2132 D31A     		subs	r3, r2, r3
 4310 2134 5A1E     		subs	r2, r3, #1
 4311 2136 07F5AF53 		add	r3, r7, #5600
 4312 213a 03F10703 		add	r3, r3, #7
 4313 213e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4314 2140 07F12803 		add	r3, r7, #40
 4315 2144 083B     		subs	r3, r3, #8
 4316 2146 0B44     		add	r3, r3, r1
 4317 2148 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4318 214a 07F16803 		add	r3, r7, #104
 4319 214e 103B     		subs	r3, r3, #16
 4320 2150 9954     		strb	r1, [r3, r2]
 621:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4321              		.loc 1 621 0 discriminator 3
 4322 2152 07F5AF53 		add	r3, r7, #5600
 4323 2156 03F10703 		add	r3, r3, #7
 4324 215a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4325 215c 0133     		adds	r3, r3, #1
 4326 215e 07F5AF52 		add	r2, r7, #5600
 4327 2162 02F10702 		add	r2, r2, #7
 4328 2166 1370     		strb	r3, [r2]
 4329              	.L183:
 621:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4330              		.loc 1 621 0 is_stmt 0 discriminator 1
 4331 2168 07F5AF53 		add	r3, r7, #5600
 4332 216c 03F10703 		add	r3, r3, #7
 4333 2170 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4334 2172 07F5AF53 		add	r3, r7, #5600
 4335 2176 03F10303 		add	r3, r3, #3
 4336 217a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4337 217c 9A42     		cmp	r2, r3
 4338 217e BDD3     		bcc	.L184
 4339              		.loc 1 625 0 is_stmt 1
 4340 2180 7BE1     		b	.L109
 4341              	.L295:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 106


 4342 2182 00BF     		.align	2
 4343              	.L294:
 4344 2184 00000000 		.word	c_mem
 4345              	.L119:
 626:..\src/command_processing.c **** 
 627:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 628:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4346              		.loc 1 628 0
 4347 2188 07F5AE53 		add	r3, r7, #5568
 4348 218c 03F11E03 		add	r3, r3, #30
 4349 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4350 2192 B749     		ldr	r1, .L296
 4351 2194 1346     		mov	r3, r2
 4352 2196 DB00     		lsls	r3, r3, #3
 4353 2198 9B1A     		subs	r3, r3, r2
 4354 219a 1B01     		lsls	r3, r3, #4
 4355 219c 0B44     		add	r3, r3, r1
 4356 219e 03F58873 		add	r3, r3, #272
 4357 21a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4358 21a4 1846     		mov	r0, r3
 4359 21a6 07F5AF53 		add	r3, r7, #5600
 4360 21aa 03F10703 		add	r3, r3, #7
 4361 21ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4362 21b0 B049     		ldr	r1, .L296+4
 4363 21b2 0346     		mov	r3, r0
 4364 21b4 5B00     		lsls	r3, r3, #1
 4365 21b6 0344     		add	r3, r3, r0
 4366 21b8 9B00     		lsls	r3, r3, #2
 4367 21ba 1344     		add	r3, r3, r2
 4368 21bc 6633     		adds	r3, r3, #102
 4369 21be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4370 21c2 07F5AE53 		add	r3, r7, #5568
 4371 21c6 03F11E03 		add	r3, r3, #30
 4372 21ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4373 21cc A848     		ldr	r0, .L296
 4374 21ce 1346     		mov	r3, r2
 4375 21d0 DB00     		lsls	r3, r3, #3
 4376 21d2 9B1A     		subs	r3, r3, r2
 4377 21d4 1B01     		lsls	r3, r3, #4
 4378 21d6 0344     		add	r3, r3, r0
 4379 21d8 03F58873 		add	r3, r3, #272
 4380 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4381 21de 1C46     		mov	r4, r3
 4382 21e0 07F5AF53 		add	r3, r7, #5600
 4383 21e4 03F10703 		add	r3, r3, #7
 4384 21e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4385 21ea A248     		ldr	r0, .L296+4
 4386 21ec 2346     		mov	r3, r4
 4387 21ee 5B00     		lsls	r3, r3, #1
 4388 21f0 2344     		add	r3, r3, r4
 4389 21f2 1B01     		lsls	r3, r3, #4
 4390 21f4 0344     		add	r3, r3, r0
 4391 21f6 1344     		add	r3, r3, r2
 4392 21f8 03F29513 		addw	r3, r3, #405
 4393 21fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4394 21fe 41FA03F3 		asr	r3, r1, r3
 4395 2202 1AB2     		sxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 107


 4396 2204 07F12803 		add	r3, r7, #40
 4397 2208 0A3B     		subs	r3, r3, #10
 4398 220a 1A80     		strh	r2, [r3]	@ movhi
 629:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4399              		.loc 1 629 0
 4400 220c 0023     		movs	r3, #0
 4401 220e 07F5AF52 		add	r2, r7, #5600
 4402 2212 02F10602 		add	r2, r2, #6
 4403 2216 1370     		strb	r3, [r2]
 4404 2218 3BE0     		b	.L185
 4405              	.L186:
 630:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4406              		.loc 1 630 0 discriminator 3
 4407 221a 07F5AF53 		add	r3, r7, #5600
 4408 221e 03F10503 		add	r3, r3, #5
 4409 2222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4410 2224 3222     		movs	r2, #50
 4411 2226 02FB03F3 		mul	r3, r2, r3
 4412 222a 1A1D     		adds	r2, r3, #4
 4413 222c 07F5AF53 		add	r3, r7, #5600
 4414 2230 03F10703 		add	r3, r3, #7
 4415 2234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4416 2236 07F5AF51 		add	r1, r7, #5600
 4417 223a 01F10301 		add	r1, r1, #3
 4418 223e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4419 2240 01FB03F3 		mul	r3, r1, r3
 4420 2244 1A44     		add	r2, r2, r3
 4421 2246 07F5AF53 		add	r3, r7, #5600
 4422 224a 03F10303 		add	r3, r3, #3
 4423 224e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4424 2250 1A44     		add	r2, r2, r3
 4425 2252 07F5AF53 		add	r3, r7, #5600
 4426 2256 03F10603 		add	r3, r3, #6
 4427 225a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4428 225c D31A     		subs	r3, r2, r3
 4429 225e 5A1E     		subs	r2, r3, #1
 4430 2260 07F5AF53 		add	r3, r7, #5600
 4431 2264 03F10603 		add	r3, r3, #6
 4432 2268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4433 226a 07F12803 		add	r3, r7, #40
 4434 226e 0A3B     		subs	r3, r3, #10
 4435 2270 0B44     		add	r3, r3, r1
 4436 2272 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4437 2274 07F16803 		add	r3, r7, #104
 4438 2278 103B     		subs	r3, r3, #16
 4439 227a 9954     		strb	r1, [r3, r2]
 629:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4440              		.loc 1 629 0 discriminator 3
 4441 227c 07F5AF53 		add	r3, r7, #5600
 4442 2280 03F10603 		add	r3, r3, #6
 4443 2284 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4444 2286 0133     		adds	r3, r3, #1
 4445 2288 07F5AF52 		add	r2, r7, #5600
 4446 228c 02F10602 		add	r2, r2, #6
 4447 2290 1370     		strb	r3, [r2]
 4448              	.L185:
 629:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 108


 4449              		.loc 1 629 0 is_stmt 0 discriminator 1
 4450 2292 07F5AF53 		add	r3, r7, #5600
 4451 2296 03F10603 		add	r3, r3, #6
 4452 229a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4453 229c 07F5AF53 		add	r3, r7, #5600
 4454 22a0 03F10303 		add	r3, r3, #3
 4455 22a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4456 22a6 9A42     		cmp	r2, r3
 4457 22a8 B7D3     		bcc	.L186
 631:..\src/command_processing.c ****                         }
 632:..\src/command_processing.c ****                         break;
 4458              		.loc 1 632 0 is_stmt 1
 4459 22aa E6E0     		b	.L109
 4460              	.L120:
 633:..\src/command_processing.c ****                 
 634:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 635:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4461              		.loc 1 635 0
 4462 22ac 07F5AE53 		add	r3, r7, #5568
 4463 22b0 03F11E03 		add	r3, r3, #30
 4464 22b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4465 22b6 6F49     		ldr	r1, .L296+4
 4466 22b8 1346     		mov	r3, r2
 4467 22ba DB00     		lsls	r3, r3, #3
 4468 22bc 9B1A     		subs	r3, r3, r2
 4469 22be 1B01     		lsls	r3, r3, #4
 4470 22c0 0B44     		add	r3, r3, r1
 4471 22c2 E433     		adds	r3, r3, #228
 4472 22c4 1968     		ldr	r1, [r3]
 4473 22c6 07F5AE53 		add	r3, r7, #5568
 4474 22ca 03F11E03 		add	r3, r3, #30
 4475 22ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4476 22d0 6748     		ldr	r0, .L296
 4477 22d2 1346     		mov	r3, r2
 4478 22d4 DB00     		lsls	r3, r3, #3
 4479 22d6 9B1A     		subs	r3, r3, r2
 4480 22d8 1B01     		lsls	r3, r3, #4
 4481 22da 0344     		add	r3, r3, r0
 4482 22dc 03F58873 		add	r3, r3, #272
 4483 22e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4484 22e2 1846     		mov	r0, r3
 4485 22e4 634A     		ldr	r2, .L296+4
 4486 22e6 0346     		mov	r3, r0
 4487 22e8 5B00     		lsls	r3, r3, #1
 4488 22ea 0344     		add	r3, r3, r0
 4489 22ec 1B01     		lsls	r3, r3, #4
 4490 22ee 1344     		add	r3, r3, r2
 4491 22f0 03F29513 		addw	r3, r3, #405
 4492 22f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4493 22f6 41FA03F2 		asr	r2, r1, r3
 4494 22fa 07F12803 		add	r3, r7, #40
 4495 22fe 103B     		subs	r3, r3, #16
 4496 2300 1A60     		str	r2, [r3]
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4497              		.loc 1 636 0
 4498 2302 0023     		movs	r3, #0
 4499 2304 07F5AF52 		add	r2, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 109


 4500 2308 02F10602 		add	r2, r2, #6
 4501 230c 1370     		strb	r3, [r2]
 4502 230e 2EE0     		b	.L187
 4503              	.L188:
 637:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4504              		.loc 1 637 0 discriminator 3
 4505 2310 07F5AF53 		add	r3, r7, #5600
 4506 2314 03F10503 		add	r3, r3, #5
 4507 2318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4508 231a 3222     		movs	r2, #50
 4509 231c 02FB03F3 		mul	r3, r2, r3
 4510 2320 1A1D     		adds	r2, r3, #4
 4511 2322 07F5AF53 		add	r3, r7, #5600
 4512 2326 03F10303 		add	r3, r3, #3
 4513 232a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4514 232c 1A44     		add	r2, r2, r3
 4515 232e 07F5AF53 		add	r3, r7, #5600
 4516 2332 03F10603 		add	r3, r3, #6
 4517 2336 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4518 2338 D31A     		subs	r3, r2, r3
 4519 233a 5A1E     		subs	r2, r3, #1
 4520 233c 07F5AF53 		add	r3, r7, #5600
 4521 2340 03F10603 		add	r3, r3, #6
 4522 2344 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4523 2346 07F12803 		add	r3, r7, #40
 4524 234a 103B     		subs	r3, r3, #16
 4525 234c 0B44     		add	r3, r3, r1
 4526 234e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4527 2350 07F16803 		add	r3, r7, #104
 4528 2354 103B     		subs	r3, r3, #16
 4529 2356 9954     		strb	r1, [r3, r2]
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4530              		.loc 1 636 0 discriminator 3
 4531 2358 07F5AF53 		add	r3, r7, #5600
 4532 235c 03F10603 		add	r3, r3, #6
 4533 2360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4534 2362 0133     		adds	r3, r3, #1
 4535 2364 07F5AF52 		add	r2, r7, #5600
 4536 2368 02F10602 		add	r2, r2, #6
 4537 236c 1370     		strb	r3, [r2]
 4538              	.L187:
 636:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4539              		.loc 1 636 0 is_stmt 0 discriminator 1
 4540 236e 07F5AF53 		add	r3, r7, #5600
 4541 2372 03F10603 		add	r3, r3, #6
 4542 2376 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4543 2378 07F5AF53 		add	r3, r7, #5600
 4544 237c 03F10303 		add	r3, r3, #3
 4545 2380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4546 2382 9A42     		cmp	r2, r3
 4547 2384 C4D3     		bcc	.L188
 638:..\src/command_processing.c ****                         }
 639:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4548              		.loc 1 639 0 is_stmt 1
 4549 2386 07F5AE53 		add	r3, r7, #5568
 4550 238a 03F11E03 		add	r3, r3, #30
 4551 238e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 110


 4552 2390 3849     		ldr	r1, .L296+4
 4553 2392 1346     		mov	r3, r2
 4554 2394 DB00     		lsls	r3, r3, #3
 4555 2396 9B1A     		subs	r3, r3, r2
 4556 2398 1B01     		lsls	r3, r3, #4
 4557 239a 0B44     		add	r3, r3, r1
 4558 239c E833     		adds	r3, r3, #232
 4559 239e 1968     		ldr	r1, [r3]
 4560 23a0 07F5AE53 		add	r3, r7, #5568
 4561 23a4 03F11E03 		add	r3, r3, #30
 4562 23a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4563 23aa 3148     		ldr	r0, .L296
 4564 23ac 1346     		mov	r3, r2
 4565 23ae DB00     		lsls	r3, r3, #3
 4566 23b0 9B1A     		subs	r3, r3, r2
 4567 23b2 1B01     		lsls	r3, r3, #4
 4568 23b4 0344     		add	r3, r3, r0
 4569 23b6 03F58873 		add	r3, r3, #272
 4570 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4571 23bc 1846     		mov	r0, r3
 4572 23be 2D4A     		ldr	r2, .L296+4
 4573 23c0 0346     		mov	r3, r0
 4574 23c2 5B00     		lsls	r3, r3, #1
 4575 23c4 0344     		add	r3, r3, r0
 4576 23c6 1B01     		lsls	r3, r3, #4
 4577 23c8 1344     		add	r3, r3, r2
 4578 23ca 03F29513 		addw	r3, r3, #405
 4579 23ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4580 23d0 41FA03F2 		asr	r2, r1, r3
 4581 23d4 07F12803 		add	r3, r7, #40
 4582 23d8 103B     		subs	r3, r3, #16
 4583 23da 1A60     		str	r2, [r3]
 640:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4584              		.loc 1 640 0
 4585 23dc 0023     		movs	r3, #0
 4586 23de 07F5AF52 		add	r2, r7, #5600
 4587 23e2 02F10602 		add	r2, r2, #6
 4588 23e6 1370     		strb	r3, [r2]
 4589 23e8 34E0     		b	.L189
 4590              	.L190:
 641:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4591              		.loc 1 641 0 discriminator 3
 4592 23ea 07F5AF53 		add	r3, r7, #5600
 4593 23ee 03F10503 		add	r3, r3, #5
 4594 23f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4595 23f4 3222     		movs	r2, #50
 4596 23f6 02FB03F3 		mul	r3, r2, r3
 4597 23fa 1A1D     		adds	r2, r3, #4
 4598 23fc 07F5AF53 		add	r3, r7, #5600
 4599 2400 03F10303 		add	r3, r3, #3
 4600 2404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4601 2406 1A44     		add	r2, r2, r3
 4602 2408 07F5AF53 		add	r3, r7, #5600
 4603 240c 03F10303 		add	r3, r3, #3
 4604 2410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4605 2412 1A44     		add	r2, r2, r3
 4606 2414 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 111


 4607 2418 03F10603 		add	r3, r3, #6
 4608 241c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4609 241e D31A     		subs	r3, r2, r3
 4610 2420 5A1E     		subs	r2, r3, #1
 4611 2422 07F5AF53 		add	r3, r7, #5600
 4612 2426 03F10603 		add	r3, r3, #6
 4613 242a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4614 242c 07F12803 		add	r3, r7, #40
 4615 2430 103B     		subs	r3, r3, #16
 4616 2432 0B44     		add	r3, r3, r1
 4617 2434 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4618 2436 07F16803 		add	r3, r7, #104
 4619 243a 103B     		subs	r3, r3, #16
 4620 243c 9954     		strb	r1, [r3, r2]
 640:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4621              		.loc 1 640 0 discriminator 3
 4622 243e 07F5AF53 		add	r3, r7, #5600
 4623 2442 03F10603 		add	r3, r3, #6
 4624 2446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4625 2448 0133     		adds	r3, r3, #1
 4626 244a 07F5AF52 		add	r2, r7, #5600
 4627 244e 02F10602 		add	r2, r2, #6
 4628 2452 1370     		strb	r3, [r2]
 4629              	.L189:
 640:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4630              		.loc 1 640 0 is_stmt 0 discriminator 1
 4631 2454 07F5AF53 		add	r3, r7, #5600
 4632 2458 03F10603 		add	r3, r3, #6
 4633 245c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4634 245e 07F5AF53 		add	r3, r7, #5600
 4635 2462 03F10303 		add	r3, r3, #3
 4636 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4637 2468 9A42     		cmp	r2, r3
 4638 246a BED3     		bcc	.L190
 642:..\src/command_processing.c ****                         }
 643:..\src/command_processing.c ****                         break;
 4639              		.loc 1 643 0 is_stmt 1
 4640 246c 05E0     		b	.L109
 4641              	.L297:
 4642 246e 00BF     		.align	2
 4643              	.L296:
 4644 2470 00000000 		.word	g_mem
 4645 2474 00000000 		.word	c_mem
 4646              	.L276:
 644:..\src/command_processing.c ****                         
 645:..\src/command_processing.c ****                     default:
 646:..\src/command_processing.c ****                         break;
 4647              		.loc 1 646 0
 4648 2478 00BF     		nop
 4649              	.L109:
 647:..\src/command_processing.c ****                 }
 648:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 649:..\src/command_processing.c ****                         
 650:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 651:..\src/command_processing.c ****         }
 652:..\src/command_processing.c ****         
 653:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 112


 4650              		.loc 1 653 0
 4651 247a 07F5AF53 		add	r3, r7, #5600
 4652 247e 03F10503 		add	r3, r3, #5
 4653 2482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4654 2484 9B00     		lsls	r3, r3, #2
 4655 2486 07F5B052 		add	r2, r7, #5632
 4656 248a 02F10402 		add	r2, r2, #4
 4657 248e 1268     		ldr	r2, [r2]
 4658 2490 1344     		add	r3, r3, r2
 4659 2492 1A68     		ldr	r2, [r3]
 4660 2494 07F12803 		add	r3, r7, #40
 4661 2498 043B     		subs	r3, r3, #4
 4662 249a 1146     		mov	r1, r2
 4663 249c 1846     		mov	r0, r3
 4664 249e FFF7FEFF 		bl	sprintf
 654:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4665              		.loc 1 654 0
 4666 24a2 07F12803 		add	r3, r7, #40
 4667 24a6 043B     		subs	r3, r3, #4
 4668 24a8 1846     		mov	r0, r3
 4669 24aa FFF7FEFF 		bl	strlen
 4670 24ae 0346     		mov	r3, r0
 4671 24b0 07F5AF52 		add	r2, r7, #5600
 4672 24b4 02F10202 		add	r2, r2, #2
 4673 24b8 1370     		strb	r3, [r2]
 655:..\src/command_processing.c ****         
 656:..\src/command_processing.c ****         // Parameters with a menu
 657:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4674              		.loc 1 657 0
 4675 24ba 07F5AF53 		add	r3, r7, #5600
 4676 24be 03F10503 		add	r3, r3, #5
 4677 24c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4678 24c4 07F10802 		add	r2, r7, #8
 4679 24c8 1268     		ldr	r2, [r2]
 4680 24ca 1344     		add	r3, r3, r2
 4681 24cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4682 24ce 002B     		cmp	r3, #0
 4683 24d0 40F0C484 		bne	.L191
 658:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4684              		.loc 1 658 0
 4685 24d4 07F5AF53 		add	r3, r7, #5600
 4686 24d8 03F10403 		add	r3, r3, #4
 4687 24dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4688 24de 07F5B052 		add	r2, r7, #5632
 4689 24e2 1268     		ldr	r2, [r2]
 4690 24e4 1344     		add	r3, r3, r2
 4691 24e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4692 24e8 013B     		subs	r3, r3, #1
 4693 24ea 0B2B     		cmp	r3, #11
 4694 24ec 00F2A884 		bhi	.L192
 4695 24f0 01A2     		adr	r2, .L194
 4696 24f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4697 24f6 00BF     		.p2align 2
 4698              	.L194:
 4699 24f8 29250000 		.word	.L193+1
 4700 24fc D3260000 		.word	.L195+1
 4701 2500 A9270000 		.word	.L196+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 113


 4702 2504 FD270000 		.word	.L197+1
 4703 2508 61280000 		.word	.L198+1
 4704 250c BD280000 		.word	.L199+1
 4705 2510 D9290000 		.word	.L200+1
 4706 2514 612A0000 		.word	.L201+1
 4707 2518 F52A0000 		.word	.L202+1
 4708 251c 6D2B0000 		.word	.L203+1
 4709 2520 7F2C0000 		.word	.L204+1
 4710 2524 BF2D0000 		.word	.L205+1
 4711              		.p2align 1
 4712              	.L193:
 659:..\src/command_processing.c ****                 case 1:     // input mode menu
 660:..\src/command_processing.c ****                     switch(*m_addr) {
 4713              		.loc 1 660 0
 4714 2528 07F5AE53 		add	r3, r7, #5568
 4715 252c 03F11803 		add	r3, r3, #24
 4716 2530 1B68     		ldr	r3, [r3]
 4717 2532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4718 2534 072B     		cmp	r3, #7
 4719 2536 00F27C84 		bhi	.L277
 4720 253a 01A2     		adr	r2, .L208
 4721 253c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4722              		.p2align 2
 4723              	.L208:
 4724 2540 61250000 		.word	.L207+1
 4725 2544 85250000 		.word	.L209+1
 4726 2548 AB250000 		.word	.L210+1
 4727 254c D9250000 		.word	.L211+1
 4728 2550 05260000 		.word	.L212+1
 4729 2554 2F260000 		.word	.L213+1
 4730 2558 63260000 		.word	.L214+1
 4731 255c 8D260000 		.word	.L215+1
 4732              		.p2align 1
 4733              	.L207:
 661:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 662:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4734              		.loc 1 662 0
 4735 2560 07F12803 		add	r3, r7, #40
 4736 2564 043B     		subs	r3, r3, #4
 4737 2566 1846     		mov	r0, r3
 4738 2568 FFF7FEFF 		bl	strlen
 4739 256c 0346     		mov	r3, r0
 4740 256e 1A46     		mov	r2, r3
 4741 2570 07F12803 		add	r3, r7, #40
 4742 2574 043B     		subs	r3, r3, #4
 4743 2576 1344     		add	r3, r3, r2
 4744 2578 DA4A     		ldr	r2, .L298
 4745 257a 1068     		ldr	r0, [r2]	@ unaligned
 4746 257c 1860     		str	r0, [r3]	@ unaligned
 4747 257e 1279     		ldrb	r2, [r2, #4]
 4748 2580 1A71     		strb	r2, [r3, #4]
 663:..\src/command_processing.c ****                         break;
 4749              		.loc 1 663 0
 4750 2582 A5E0     		b	.L206
 4751              	.L209:
 664:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 665:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 114


 4752              		.loc 1 665 0
 4753 2584 07F12803 		add	r3, r7, #40
 4754 2588 043B     		subs	r3, r3, #4
 4755 258a 1846     		mov	r0, r3
 4756 258c FFF7FEFF 		bl	strlen
 4757 2590 0346     		mov	r3, r0
 4758 2592 1A46     		mov	r2, r3
 4759 2594 07F12803 		add	r3, r7, #40
 4760 2598 043B     		subs	r3, r3, #4
 4761 259a 1344     		add	r3, r3, r2
 4762 259c D249     		ldr	r1, .L298+4
 4763 259e 1A46     		mov	r2, r3
 4764 25a0 0B46     		mov	r3, r1
 4765 25a2 03CB     		ldmia	r3!, {r0, r1}
 4766 25a4 1060     		str	r0, [r2]	@ unaligned
 4767 25a6 5160     		str	r1, [r2, #4]	@ unaligned
 666:..\src/command_processing.c ****                         break;
 4768              		.loc 1 666 0
 4769 25a8 92E0     		b	.L206
 4770              	.L210:
 667:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 668:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4771              		.loc 1 668 0
 4772 25aa 07F12803 		add	r3, r7, #40
 4773 25ae 043B     		subs	r3, r3, #4
 4774 25b0 1846     		mov	r0, r3
 4775 25b2 FFF7FEFF 		bl	strlen
 4776 25b6 0346     		mov	r3, r0
 4777 25b8 1A46     		mov	r2, r3
 4778 25ba 07F12803 		add	r3, r7, #40
 4779 25be 043B     		subs	r3, r3, #4
 4780 25c0 1344     		add	r3, r3, r2
 4781 25c2 CA4A     		ldr	r2, .L298+8
 4782 25c4 1D46     		mov	r5, r3
 4783 25c6 1446     		mov	r4, r2
 4784 25c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4785 25ca 2860     		str	r0, [r5]	@ unaligned
 4786 25cc 6960     		str	r1, [r5, #4]	@ unaligned
 4787 25ce AA60     		str	r2, [r5, #8]	@ unaligned
 4788 25d0 EB60     		str	r3, [r5, #12]	@ unaligned
 4789 25d2 2388     		ldrh	r3, [r4]	@ unaligned
 4790 25d4 2B82     		strh	r3, [r5, #16]	@ unaligned
 669:..\src/command_processing.c ****                         break;
 4791              		.loc 1 669 0
 4792 25d6 7BE0     		b	.L206
 4793              	.L211:
 670:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 671:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4794              		.loc 1 671 0
 4795 25d8 07F12803 		add	r3, r7, #40
 4796 25dc 043B     		subs	r3, r3, #4
 4797 25de 1846     		mov	r0, r3
 4798 25e0 FFF7FEFF 		bl	strlen
 4799 25e4 0346     		mov	r3, r0
 4800 25e6 1A46     		mov	r2, r3
 4801 25e8 07F12803 		add	r3, r7, #40
 4802 25ec 043B     		subs	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 115


 4803 25ee 1344     		add	r3, r3, r2
 4804 25f0 BF4A     		ldr	r2, .L298+12
 4805 25f2 1C46     		mov	r4, r3
 4806 25f4 1346     		mov	r3, r2
 4807 25f6 07CB     		ldmia	r3!, {r0, r1, r2}
 4808 25f8 2060     		str	r0, [r4]	@ unaligned
 4809 25fa 6160     		str	r1, [r4, #4]	@ unaligned
 4810 25fc A260     		str	r2, [r4, #8]	@ unaligned
 4811 25fe 1B88     		ldrh	r3, [r3]	@ unaligned
 4812 2600 A381     		strh	r3, [r4, #12]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4813              		.loc 1 672 0
 4814 2602 65E0     		b	.L206
 4815              	.L212:
 673:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 674:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4816              		.loc 1 674 0
 4817 2604 07F12803 		add	r3, r7, #40
 4818 2608 043B     		subs	r3, r3, #4
 4819 260a 1846     		mov	r0, r3
 4820 260c FFF7FEFF 		bl	strlen
 4821 2610 0346     		mov	r3, r0
 4822 2612 1A46     		mov	r2, r3
 4823 2614 07F12803 		add	r3, r7, #40
 4824 2618 043B     		subs	r3, r3, #4
 4825 261a 1344     		add	r3, r3, r2
 4826 261c B549     		ldr	r1, .L298+16
 4827 261e 1A46     		mov	r2, r3
 4828 2620 0B46     		mov	r3, r1
 4829 2622 03CB     		ldmia	r3!, {r0, r1}
 4830 2624 1060     		str	r0, [r2]	@ unaligned
 4831 2626 5160     		str	r1, [r2, #4]	@ unaligned
 4832 2628 1B88     		ldrh	r3, [r3]	@ unaligned
 4833 262a 1381     		strh	r3, [r2, #8]	@ unaligned
 675:..\src/command_processing.c ****                         break;
 4834              		.loc 1 675 0
 4835 262c 50E0     		b	.L206
 4836              	.L213:
 676:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 677:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4837              		.loc 1 677 0
 4838 262e 07F12803 		add	r3, r7, #40
 4839 2632 043B     		subs	r3, r3, #4
 4840 2634 1846     		mov	r0, r3
 4841 2636 FFF7FEFF 		bl	strlen
 4842 263a 0346     		mov	r3, r0
 4843 263c 1A46     		mov	r2, r3
 4844 263e 07F12803 		add	r3, r7, #40
 4845 2642 043B     		subs	r3, r3, #4
 4846 2644 1344     		add	r3, r3, r2
 4847 2646 AC4A     		ldr	r2, .L298+20
 4848 2648 1D46     		mov	r5, r3
 4849 264a 1446     		mov	r4, r2
 4850 264c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4851 264e 2860     		str	r0, [r5]	@ unaligned
 4852 2650 6960     		str	r1, [r5, #4]	@ unaligned
 4853 2652 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 116


 4854 2654 EB60     		str	r3, [r5, #12]	@ unaligned
 4855 2656 2388     		ldrh	r3, [r4]	@ unaligned
 4856 2658 A278     		ldrb	r2, [r4, #2]
 4857 265a 2B82     		strh	r3, [r5, #16]	@ unaligned
 4858 265c 1346     		mov	r3, r2
 4859 265e AB74     		strb	r3, [r5, #18]
 678:..\src/command_processing.c ****                         break;
 4860              		.loc 1 678 0
 4861 2660 36E0     		b	.L206
 4862              	.L214:
 679:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4863              		.loc 1 680 0
 4864 2662 07F12803 		add	r3, r7, #40
 4865 2666 043B     		subs	r3, r3, #4
 4866 2668 1846     		mov	r0, r3
 4867 266a FFF7FEFF 		bl	strlen
 4868 266e 0346     		mov	r3, r0
 4869 2670 1A46     		mov	r2, r3
 4870 2672 07F12803 		add	r3, r7, #40
 4871 2676 043B     		subs	r3, r3, #4
 4872 2678 1344     		add	r3, r3, r2
 4873 267a A049     		ldr	r1, .L298+24
 4874 267c 1A46     		mov	r2, r3
 4875 267e 0B46     		mov	r3, r1
 4876 2680 03CB     		ldmia	r3!, {r0, r1}
 4877 2682 1060     		str	r0, [r2]	@ unaligned
 4878 2684 5160     		str	r1, [r2, #4]	@ unaligned
 4879 2686 1B88     		ldrh	r3, [r3]	@ unaligned
 4880 2688 1381     		strh	r3, [r2, #8]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4881              		.loc 1 681 0
 4882 268a 21E0     		b	.L206
 4883              	.L215:
 682:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 683:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4884              		.loc 1 683 0
 4885 268c 07F12803 		add	r3, r7, #40
 4886 2690 043B     		subs	r3, r3, #4
 4887 2692 1846     		mov	r0, r3
 4888 2694 FFF7FEFF 		bl	strlen
 4889 2698 0346     		mov	r3, r0
 4890 269a 1A46     		mov	r2, r3
 4891 269c 07F12803 		add	r3, r7, #40
 4892 26a0 043B     		subs	r3, r3, #4
 4893 26a2 1344     		add	r3, r3, r2
 4894 26a4 964A     		ldr	r2, .L298+28
 4895 26a6 1446     		mov	r4, r2
 4896 26a8 9E46     		mov	lr, r3
 4897 26aa 04F1200C 		add	ip, r4, #32
 4898              	.L216:
 4899 26ae 7546     		mov	r5, lr
 4900 26b0 2646     		mov	r6, r4
 4901 26b2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4902 26b4 2860     		str	r0, [r5]	@ unaligned
 4903 26b6 6960     		str	r1, [r5, #4]	@ unaligned
 4904 26b8 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 117


 4905 26ba EB60     		str	r3, [r5, #12]	@ unaligned
 4906 26bc 1034     		adds	r4, r4, #16
 4907 26be 0EF1100E 		add	lr, lr, #16
 4908 26c2 6445     		cmp	r4, ip
 4909 26c4 F3D1     		bne	.L216
 4910 26c6 7246     		mov	r2, lr
 4911 26c8 2346     		mov	r3, r4
 4912 26ca 1B88     		ldrh	r3, [r3]	@ unaligned
 4913 26cc 1380     		strh	r3, [r2]	@ unaligned
 684:..\src/command_processing.c ****                         break;
 4914              		.loc 1 684 0
 4915 26ce 00BF     		nop
 4916              	.L206:
 685:..\src/command_processing.c ****                     }
 686:..\src/command_processing.c ****                     break;
 4917              		.loc 1 686 0
 4918 26d0 AFE3     		b	.L277
 4919              	.L195:
 687:..\src/command_processing.c ****                 case 2:     // control mode menu
 688:..\src/command_processing.c ****                     switch(*m_addr){
 4920              		.loc 1 688 0
 4921 26d2 07F5AE53 		add	r3, r7, #5568
 4922 26d6 03F11803 		add	r3, r3, #24
 4923 26da 1B68     		ldr	r3, [r3]
 4924 26dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4925 26de 032B     		cmp	r3, #3
 4926 26e0 00F2A983 		bhi	.L278
 4927 26e4 01A2     		adr	r2, .L219
 4928 26e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4929 26ea 00BF     		.p2align 2
 4930              	.L219:
 4931 26ec FD260000 		.word	.L218+1
 4932 26f0 27270000 		.word	.L220+1
 4933 26f4 4B270000 		.word	.L221+1
 4934 26f8 75270000 		.word	.L222+1
 4935              		.p2align 1
 4936              	.L218:
 689:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 690:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4937              		.loc 1 690 0
 4938 26fc 07F12803 		add	r3, r7, #40
 4939 2700 043B     		subs	r3, r3, #4
 4940 2702 1846     		mov	r0, r3
 4941 2704 FFF7FEFF 		bl	strlen
 4942 2708 0346     		mov	r3, r0
 4943 270a 1A46     		mov	r2, r3
 4944 270c 07F12803 		add	r3, r7, #40
 4945 2710 043B     		subs	r3, r3, #4
 4946 2712 1344     		add	r3, r3, r2
 4947 2714 7B49     		ldr	r1, .L298+32
 4948 2716 1A46     		mov	r2, r3
 4949 2718 0B46     		mov	r3, r1
 4950 271a 03CB     		ldmia	r3!, {r0, r1}
 4951 271c 1060     		str	r0, [r2]	@ unaligned
 4952 271e 5160     		str	r1, [r2, #4]	@ unaligned
 4953 2720 1B88     		ldrh	r3, [r3]	@ unaligned
 4954 2722 1381     		strh	r3, [r2, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 118


 691:..\src/command_processing.c ****                         break;
 4955              		.loc 1 691 0
 4956 2724 3FE0     		b	.L217
 4957              	.L220:
 692:..\src/command_processing.c ****                         case CONTROL_PWM:
 693:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4958              		.loc 1 693 0
 4959 2726 07F12803 		add	r3, r7, #40
 4960 272a 043B     		subs	r3, r3, #4
 4961 272c 1846     		mov	r0, r3
 4962 272e FFF7FEFF 		bl	strlen
 4963 2732 0346     		mov	r3, r0
 4964 2734 1A46     		mov	r2, r3
 4965 2736 07F12803 		add	r3, r7, #40
 4966 273a 043B     		subs	r3, r3, #4
 4967 273c 1344     		add	r3, r3, r2
 4968 273e 724A     		ldr	r2, .L298+36
 4969 2740 1068     		ldr	r0, [r2]	@ unaligned
 4970 2742 1860     		str	r0, [r3]	@ unaligned
 4971 2744 1279     		ldrb	r2, [r2, #4]
 4972 2746 1A71     		strb	r2, [r3, #4]
 694:..\src/command_processing.c ****                         break;
 4973              		.loc 1 694 0
 4974 2748 2DE0     		b	.L217
 4975              	.L221:
 695:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 696:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4976              		.loc 1 696 0
 4977 274a 07F12803 		add	r3, r7, #40
 4978 274e 043B     		subs	r3, r3, #4
 4979 2750 1846     		mov	r0, r3
 4980 2752 FFF7FEFF 		bl	strlen
 4981 2756 0346     		mov	r3, r0
 4982 2758 1A46     		mov	r2, r3
 4983 275a 07F12803 		add	r3, r7, #40
 4984 275e 043B     		subs	r3, r3, #4
 4985 2760 1344     		add	r3, r3, r2
 4986 2762 6A49     		ldr	r1, .L298+40
 4987 2764 1A46     		mov	r2, r3
 4988 2766 0B46     		mov	r3, r1
 4989 2768 03CB     		ldmia	r3!, {r0, r1}
 4990 276a 1060     		str	r0, [r2]	@ unaligned
 4991 276c 5160     		str	r1, [r2, #4]	@ unaligned
 4992 276e 1B78     		ldrb	r3, [r3]
 4993 2770 1372     		strb	r3, [r2, #8]
 697:..\src/command_processing.c ****                         break;
 4994              		.loc 1 697 0
 4995 2772 18E0     		b	.L217
 4996              	.L222:
 698:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 699:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4997              		.loc 1 699 0
 4998 2774 07F12803 		add	r3, r7, #40
 4999 2778 043B     		subs	r3, r3, #4
 5000 277a 1846     		mov	r0, r3
 5001 277c FFF7FEFF 		bl	strlen
 5002 2780 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 119


 5003 2782 1A46     		mov	r2, r3
 5004 2784 07F12803 		add	r3, r7, #40
 5005 2788 043B     		subs	r3, r3, #4
 5006 278a 1344     		add	r3, r3, r2
 5007 278c 604A     		ldr	r2, .L298+44
 5008 278e 1D46     		mov	r5, r3
 5009 2790 1446     		mov	r4, r2
 5010 2792 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5011 2794 2860     		str	r0, [r5]	@ unaligned
 5012 2796 6960     		str	r1, [r5, #4]	@ unaligned
 5013 2798 AA60     		str	r2, [r5, #8]	@ unaligned
 5014 279a EB60     		str	r3, [r5, #12]	@ unaligned
 5015 279c 2068     		ldr	r0, [r4]	@ unaligned
 5016 279e 2861     		str	r0, [r5, #16]	@ unaligned
 5017 27a0 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5018 27a2 AB82     		strh	r3, [r5, #20]	@ unaligned
 700:..\src/command_processing.c ****                         break;
 5019              		.loc 1 700 0
 5020 27a4 00BF     		nop
 5021              	.L217:
 701:..\src/command_processing.c ****                     }
 702:..\src/command_processing.c ****                     break;
 5022              		.loc 1 702 0
 5023 27a6 46E3     		b	.L278
 5024              	.L196:
 703:..\src/command_processing.c ****                 case 3:     // yes/no menu
 704:..\src/command_processing.c ****                     if(*m_addr){
 5025              		.loc 1 704 0
 5026 27a8 07F5AE53 		add	r3, r7, #5568
 5027 27ac 03F11803 		add	r3, r3, #24
 5028 27b0 1B68     		ldr	r3, [r3]
 5029 27b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5030 27b4 002B     		cmp	r3, #0
 5031 27b6 11D0     		beq	.L223
 705:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5032              		.loc 1 705 0
 5033 27b8 07F12803 		add	r3, r7, #40
 5034 27bc 043B     		subs	r3, r3, #4
 5035 27be 1846     		mov	r0, r3
 5036 27c0 FFF7FEFF 		bl	strlen
 5037 27c4 0346     		mov	r3, r0
 5038 27c6 1A46     		mov	r2, r3
 5039 27c8 07F12803 		add	r3, r7, #40
 5040 27cc 043B     		subs	r3, r3, #4
 5041 27ce 1344     		add	r3, r3, r2
 5042 27d0 504A     		ldr	r2, .L298+48
 5043 27d2 1068     		ldr	r0, [r2]	@ unaligned
 5044 27d4 1860     		str	r0, [r3]	@ unaligned
 5045 27d6 1279     		ldrb	r2, [r2, #4]
 5046 27d8 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                     }
 707:..\src/command_processing.c ****                     else {
 708:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 709:..\src/command_processing.c ****                     }
 710:..\src/command_processing.c ****                     break;    
 5047              		.loc 1 710 0
 5048 27da 31E3     		b	.L192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 120


 5049              	.L223:
 708:..\src/command_processing.c ****                     }
 5050              		.loc 1 708 0
 5051 27dc 07F12803 		add	r3, r7, #40
 5052 27e0 043B     		subs	r3, r3, #4
 5053 27e2 1846     		mov	r0, r3
 5054 27e4 FFF7FEFF 		bl	strlen
 5055 27e8 0346     		mov	r3, r0
 5056 27ea 1A46     		mov	r2, r3
 5057 27ec 07F12803 		add	r3, r7, #40
 5058 27f0 043B     		subs	r3, r3, #4
 5059 27f2 1344     		add	r3, r3, r2
 5060 27f4 484A     		ldr	r2, .L298+52
 5061 27f6 1068     		ldr	r0, [r2]	@ unaligned
 5062 27f8 1860     		str	r0, [r3]	@ unaligned
 5063              		.loc 1 710 0
 5064 27fa 21E3     		b	.L192
 5065              	.L197:
 711:..\src/command_processing.c ****                 case 4:     // right/lef menu
 712:..\src/command_processing.c ****                     switch(*m_addr){
 5066              		.loc 1 712 0
 5067 27fc 07F5AE53 		add	r3, r7, #5568
 5068 2800 03F11803 		add	r3, r3, #24
 5069 2804 1B68     		ldr	r3, [r3]
 5070 2806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5071 2808 002B     		cmp	r3, #0
 5072 280a 02D0     		beq	.L226
 5073 280c 012B     		cmp	r3, #1
 5074 280e 14D0     		beq	.L227
 713:..\src/command_processing.c ****                         case RIGHT_HAND:
 714:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 715:..\src/command_processing.c ****                         break;
 716:..\src/command_processing.c ****                         case LEFT_HAND:
 717:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 718:..\src/command_processing.c ****                         break;
 719:..\src/command_processing.c ****                     }
 720:..\src/command_processing.c ****                     break;
 5075              		.loc 1 720 0
 5076 2810 16E3     		b	.L192
 5077              	.L226:
 714:..\src/command_processing.c ****                         break;
 5078              		.loc 1 714 0
 5079 2812 07F12803 		add	r3, r7, #40
 5080 2816 043B     		subs	r3, r3, #4
 5081 2818 1846     		mov	r0, r3
 5082 281a FFF7FEFF 		bl	strlen
 5083 281e 0346     		mov	r3, r0
 5084 2820 1A46     		mov	r2, r3
 5085 2822 07F12803 		add	r3, r7, #40
 5086 2826 043B     		subs	r3, r3, #4
 5087 2828 1344     		add	r3, r3, r2
 5088 282a 3C4A     		ldr	r2, .L298+56
 5089 282c 1068     		ldr	r0, [r2]	@ unaligned
 5090 282e 1860     		str	r0, [r3]	@ unaligned
 5091 2830 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5092 2832 9279     		ldrb	r2, [r2, #6]
 5093 2834 9980     		strh	r1, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 121


 5094 2836 9A71     		strb	r2, [r3, #6]
 715:..\src/command_processing.c ****                         case LEFT_HAND:
 5095              		.loc 1 715 0
 5096 2838 11E0     		b	.L225
 5097              	.L227:
 717:..\src/command_processing.c ****                         break;
 5098              		.loc 1 717 0
 5099 283a 07F12803 		add	r3, r7, #40
 5100 283e 043B     		subs	r3, r3, #4
 5101 2840 1846     		mov	r0, r3
 5102 2842 FFF7FEFF 		bl	strlen
 5103 2846 0346     		mov	r3, r0
 5104 2848 1A46     		mov	r2, r3
 5105 284a 07F12803 		add	r3, r7, #40
 5106 284e 043B     		subs	r3, r3, #4
 5107 2850 1344     		add	r3, r3, r2
 5108 2852 334A     		ldr	r2, .L298+60
 5109 2854 1068     		ldr	r0, [r2]	@ unaligned
 5110 2856 1860     		str	r0, [r3]	@ unaligned
 5111 2858 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5112 285a 9A80     		strh	r2, [r3, #4]	@ unaligned
 718:..\src/command_processing.c ****                     }
 5113              		.loc 1 718 0
 5114 285c 00BF     		nop
 5115              	.L225:
 5116              		.loc 1 720 0
 5117 285e EFE2     		b	.L192
 5118              	.L198:
 721:..\src/command_processing.c ****                 case 5:     // on/off menu
 722:..\src/command_processing.c ****                     switch(*m_addr){
 5119              		.loc 1 722 0
 5120 2860 07F5AE53 		add	r3, r7, #5568
 5121 2864 03F11803 		add	r3, r3, #24
 5122 2868 1B68     		ldr	r3, [r3]
 5123 286a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5124 286c 002B     		cmp	r3, #0
 5125 286e 02D0     		beq	.L229
 5126 2870 012B     		cmp	r3, #1
 5127 2872 12D0     		beq	.L230
 723:..\src/command_processing.c ****                         case 0:
 724:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 725:..\src/command_processing.c ****                         break;
 726:..\src/command_processing.c ****                         case 1:
 727:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 728:..\src/command_processing.c ****                         break;
 729:..\src/command_processing.c ****                     }
 730:..\src/command_processing.c ****                     break;
 5128              		.loc 1 730 0
 5129 2874 E4E2     		b	.L192
 5130              	.L229:
 724:..\src/command_processing.c ****                         break;
 5131              		.loc 1 724 0
 5132 2876 07F12803 		add	r3, r7, #40
 5133 287a 043B     		subs	r3, r3, #4
 5134 287c 1846     		mov	r0, r3
 5135 287e FFF7FEFF 		bl	strlen
 5136 2882 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 122


 5137 2884 1A46     		mov	r2, r3
 5138 2886 07F12803 		add	r3, r7, #40
 5139 288a 043B     		subs	r3, r3, #4
 5140 288c 1344     		add	r3, r3, r2
 5141 288e 254A     		ldr	r2, .L298+64
 5142 2890 1068     		ldr	r0, [r2]	@ unaligned
 5143 2892 1860     		str	r0, [r3]	@ unaligned
 5144 2894 1279     		ldrb	r2, [r2, #4]
 5145 2896 1A71     		strb	r2, [r3, #4]
 725:..\src/command_processing.c ****                         case 1:
 5146              		.loc 1 725 0
 5147 2898 0FE0     		b	.L228
 5148              	.L230:
 727:..\src/command_processing.c ****                         break;
 5149              		.loc 1 727 0
 5150 289a 07F12803 		add	r3, r7, #40
 5151 289e 043B     		subs	r3, r3, #4
 5152 28a0 1846     		mov	r0, r3
 5153 28a2 FFF7FEFF 		bl	strlen
 5154 28a6 0346     		mov	r3, r0
 5155 28a8 1A46     		mov	r2, r3
 5156 28aa 07F12803 		add	r3, r7, #40
 5157 28ae 043B     		subs	r3, r3, #4
 5158 28b0 1344     		add	r3, r3, r2
 5159 28b2 1D4A     		ldr	r2, .L298+68
 5160 28b4 1068     		ldr	r0, [r2]	@ unaligned
 5161 28b6 1860     		str	r0, [r3]	@ unaligned
 728:..\src/command_processing.c ****                     }
 5162              		.loc 1 728 0
 5163 28b8 00BF     		nop
 5164              	.L228:
 5165              		.loc 1 730 0
 5166 28ba C1E2     		b	.L192
 5167              	.L199:
 731:..\src/command_processing.c ****                 case 6:     // expansion port menu
 732:..\src/command_processing.c ****                     switch(*m_addr){
 5168              		.loc 1 732 0
 5169 28bc 07F5AE53 		add	r3, r7, #5568
 5170 28c0 03F11803 		add	r3, r3, #24
 5171 28c4 1B68     		ldr	r3, [r3]
 5172 28c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5173 28c8 032B     		cmp	r3, #3
 5174 28ca 00F2B682 		bhi	.L279
 5175 28ce 01A2     		adr	r2, .L233
 5176 28d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5177              		.p2align 2
 5178              	.L233:
 5179 28d4 2D290000 		.word	.L232+1
 5180 28d8 51290000 		.word	.L234+1
 5181 28dc 7D290000 		.word	.L235+1
 5182 28e0 AB290000 		.word	.L236+1
 5183              		.p2align 1
 5184              	.L299:
 5185              		.align	2
 5186              	.L298:
 5187 28e4 00000000 		.word	.LC87
 5188 28e8 08000000 		.word	.LC88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 123


 5189 28ec 10000000 		.word	.LC89
 5190 28f0 24000000 		.word	.LC90
 5191 28f4 34000000 		.word	.LC91
 5192 28f8 40000000 		.word	.LC92
 5193 28fc 54000000 		.word	.LC93
 5194 2900 60000000 		.word	.LC94
 5195 2904 84000000 		.word	.LC95
 5196 2908 90000000 		.word	.LC96
 5197 290c 98000000 		.word	.LC97
 5198 2910 A4000000 		.word	.LC98
 5199 2914 BC000000 		.word	.LC99
 5200 2918 C4000000 		.word	.LC100
 5201 291c CC000000 		.word	.LC101
 5202 2920 D4000000 		.word	.LC102
 5203 2924 DC000000 		.word	.LC103
 5204 2928 E4000000 		.word	.LC104
 5205              	.L232:
 733:..\src/command_processing.c ****                         case EXP_NONE:
 734:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5206              		.loc 1 734 0
 5207 292c 07F12803 		add	r3, r7, #40
 5208 2930 043B     		subs	r3, r3, #4
 5209 2932 1846     		mov	r0, r3
 5210 2934 FFF7FEFF 		bl	strlen
 5211 2938 0346     		mov	r3, r0
 5212 293a 1A46     		mov	r2, r3
 5213 293c 07F12803 		add	r3, r7, #40
 5214 2940 043B     		subs	r3, r3, #4
 5215 2942 1344     		add	r3, r3, r2
 5216 2944 D34A     		ldr	r2, .L300
 5217 2946 1068     		ldr	r0, [r2]	@ unaligned
 5218 2948 1860     		str	r0, [r3]	@ unaligned
 5219 294a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5220 294c 9A80     		strh	r2, [r3, #4]	@ unaligned
 735:..\src/command_processing.c ****                             break;
 5221              		.loc 1 735 0
 5222 294e 42E0     		b	.L231
 5223              	.L234:
 736:..\src/command_processing.c ****                         case EXP_SD_RTC:
 737:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5224              		.loc 1 737 0
 5225 2950 07F12803 		add	r3, r7, #40
 5226 2954 043B     		subs	r3, r3, #4
 5227 2956 1846     		mov	r0, r3
 5228 2958 FFF7FEFF 		bl	strlen
 5229 295c 0346     		mov	r3, r0
 5230 295e 1A46     		mov	r2, r3
 5231 2960 07F12803 		add	r3, r7, #40
 5232 2964 043B     		subs	r3, r3, #4
 5233 2966 1344     		add	r3, r3, r2
 5234 2968 CB4A     		ldr	r2, .L300+4
 5235 296a 1C46     		mov	r4, r3
 5236 296c 1346     		mov	r3, r2
 5237 296e 07CB     		ldmia	r3!, {r0, r1, r2}
 5238 2970 2060     		str	r0, [r4]	@ unaligned
 5239 2972 6160     		str	r1, [r4, #4]	@ unaligned
 5240 2974 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 124


 5241 2976 1B88     		ldrh	r3, [r3]	@ unaligned
 5242 2978 A381     		strh	r3, [r4, #12]	@ unaligned
 738:..\src/command_processing.c ****                             break;
 5243              		.loc 1 738 0
 5244 297a 2CE0     		b	.L231
 5245              	.L235:
 739:..\src/command_processing.c ****                         case EXP_WIFI:
 740:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5246              		.loc 1 740 0
 5247 297c 07F12803 		add	r3, r7, #40
 5248 2980 043B     		subs	r3, r3, #4
 5249 2982 1846     		mov	r0, r3
 5250 2984 FFF7FEFF 		bl	strlen
 5251 2988 0346     		mov	r3, r0
 5252 298a 1A46     		mov	r2, r3
 5253 298c 07F12803 		add	r3, r7, #40
 5254 2990 043B     		subs	r3, r3, #4
 5255 2992 1344     		add	r3, r3, r2
 5256 2994 C14A     		ldr	r2, .L300+8
 5257 2996 1D46     		mov	r5, r3
 5258 2998 1446     		mov	r4, r2
 5259 299a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5260 299c 2860     		str	r0, [r5]	@ unaligned
 5261 299e 6960     		str	r1, [r5, #4]	@ unaligned
 5262 29a0 AA60     		str	r2, [r5, #8]	@ unaligned
 5263 29a2 EB60     		str	r3, [r5, #12]	@ unaligned
 5264 29a4 2388     		ldrh	r3, [r4]	@ unaligned
 5265 29a6 2B82     		strh	r3, [r5, #16]	@ unaligned
 741:..\src/command_processing.c ****         					break;
 5266              		.loc 1 741 0
 5267 29a8 15E0     		b	.L231
 5268              	.L236:
 742:..\src/command_processing.c ****                         case EXP_OTHER:
 743:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5269              		.loc 1 743 0
 5270 29aa 07F12803 		add	r3, r7, #40
 5271 29ae 043B     		subs	r3, r3, #4
 5272 29b0 1846     		mov	r0, r3
 5273 29b2 FFF7FEFF 		bl	strlen
 5274 29b6 0346     		mov	r3, r0
 5275 29b8 1A46     		mov	r2, r3
 5276 29ba 07F12803 		add	r3, r7, #40
 5277 29be 043B     		subs	r3, r3, #4
 5278 29c0 1344     		add	r3, r3, r2
 5279 29c2 B74A     		ldr	r2, .L300+12
 5280 29c4 1C46     		mov	r4, r3
 5281 29c6 1346     		mov	r3, r2
 5282 29c8 07CB     		ldmia	r3!, {r0, r1, r2}
 5283 29ca 2060     		str	r0, [r4]	@ unaligned
 5284 29cc 6160     		str	r1, [r4, #4]	@ unaligned
 5285 29ce A260     		str	r2, [r4, #8]	@ unaligned
 5286 29d0 1B78     		ldrb	r3, [r3]
 5287 29d2 2373     		strb	r3, [r4, #12]
 744:..\src/command_processing.c ****         					break;
 5288              		.loc 1 744 0
 5289 29d4 00BF     		nop
 5290              	.L231:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 125


 745:..\src/command_processing.c ****                     }
 746:..\src/command_processing.c ****                     break;
 5291              		.loc 1 746 0
 5292 29d6 30E2     		b	.L279
 5293              	.L200:
 747:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 748:..\src/command_processing.c ****                     switch(*m_addr){
 5294              		.loc 1 748 0
 5295 29d8 07F5AE53 		add	r3, r7, #5568
 5296 29dc 03F11803 		add	r3, r3, #24
 5297 29e0 1B68     		ldr	r3, [r3]
 5298 29e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5299 29e4 012B     		cmp	r3, #1
 5300 29e6 16D0     		beq	.L238
 5301 29e8 022B     		cmp	r3, #2
 5302 29ea 26D0     		beq	.L239
 5303 29ec 002B     		cmp	r3, #0
 5304 29ee 00D0     		beq	.L240
 749:..\src/command_processing.c ****                         case 0: 
 750:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 751:..\src/command_processing.c ****                             break;
 752:..\src/command_processing.c ****                         case 1: 
 753:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 754:..\src/command_processing.c ****                             break;
 755:..\src/command_processing.c ****                         case 2: 
 756:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 757:..\src/command_processing.c ****                             break;
 758:..\src/command_processing.c ****                         default:
 759:..\src/command_processing.c ****                             break;
 5305              		.loc 1 759 0
 5306 29f0 35E0     		b	.L241
 5307              	.L240:
 750:..\src/command_processing.c ****                             break;
 5308              		.loc 1 750 0
 5309 29f2 07F12803 		add	r3, r7, #40
 5310 29f6 043B     		subs	r3, r3, #4
 5311 29f8 1846     		mov	r0, r3
 5312 29fa FFF7FEFF 		bl	strlen
 5313 29fe 0346     		mov	r3, r0
 5314 2a00 1A46     		mov	r2, r3
 5315 2a02 07F12803 		add	r3, r7, #40
 5316 2a06 043B     		subs	r3, r3, #4
 5317 2a08 1344     		add	r3, r3, r2
 5318 2a0a A24A     		ldr	r2, .L300
 5319 2a0c 1068     		ldr	r0, [r2]	@ unaligned
 5320 2a0e 1860     		str	r0, [r3]	@ unaligned
 5321 2a10 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5322 2a12 9A80     		strh	r2, [r3, #4]	@ unaligned
 751:..\src/command_processing.c ****                         case 1: 
 5323              		.loc 1 751 0
 5324 2a14 23E0     		b	.L241
 5325              	.L238:
 753:..\src/command_processing.c ****                             break;
 5326              		.loc 1 753 0
 5327 2a16 07F12803 		add	r3, r7, #40
 5328 2a1a 043B     		subs	r3, r3, #4
 5329 2a1c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 126


 5330 2a1e FFF7FEFF 		bl	strlen
 5331 2a22 0346     		mov	r3, r0
 5332 2a24 1A46     		mov	r2, r3
 5333 2a26 07F12803 		add	r3, r7, #40
 5334 2a2a 043B     		subs	r3, r3, #4
 5335 2a2c 1344     		add	r3, r3, r2
 5336 2a2e 9D4A     		ldr	r2, .L300+16
 5337 2a30 1068     		ldr	r0, [r2]	@ unaligned
 5338 2a32 1860     		str	r0, [r3]	@ unaligned
 5339 2a34 1279     		ldrb	r2, [r2, #4]
 5340 2a36 1A71     		strb	r2, [r3, #4]
 754:..\src/command_processing.c ****                         case 2: 
 5341              		.loc 1 754 0
 5342 2a38 11E0     		b	.L241
 5343              	.L239:
 756:..\src/command_processing.c ****                             break;
 5344              		.loc 1 756 0
 5345 2a3a 07F12803 		add	r3, r7, #40
 5346 2a3e 043B     		subs	r3, r3, #4
 5347 2a40 1846     		mov	r0, r3
 5348 2a42 FFF7FEFF 		bl	strlen
 5349 2a46 0346     		mov	r3, r0
 5350 2a48 1A46     		mov	r2, r3
 5351 2a4a 07F12803 		add	r3, r7, #40
 5352 2a4e 043B     		subs	r3, r3, #4
 5353 2a50 1344     		add	r3, r3, r2
 5354 2a52 954A     		ldr	r2, .L300+20
 5355 2a54 1068     		ldr	r0, [r2]	@ unaligned
 5356 2a56 1860     		str	r0, [r3]	@ unaligned
 5357 2a58 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5358 2a5a 9A80     		strh	r2, [r3, #4]	@ unaligned
 757:..\src/command_processing.c ****                         default:
 5359              		.loc 1 757 0
 5360 2a5c 00BF     		nop
 5361              	.L241:
 760:..\src/command_processing.c ****                     } 
 761:..\src/command_processing.c ****                     break;
 5362              		.loc 1 761 0 discriminator 12
 5363 2a5e EFE1     		b	.L192
 5364              	.L201:
 762:..\src/command_processing.c ****                 case 8:     // user menu          
 763:..\src/command_processing.c ****                     switch(*m_addr){
 5365              		.loc 1 763 0
 5366 2a60 07F5AE53 		add	r3, r7, #5568
 5367 2a64 03F11803 		add	r3, r3, #24
 5368 2a68 1B68     		ldr	r3, [r3]
 5369 2a6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5370 2a6c 012B     		cmp	r3, #1
 5371 2a6e 1AD0     		beq	.L243
 5372 2a70 022B     		cmp	r3, #2
 5373 2a72 2CD0     		beq	.L244
 5374 2a74 002B     		cmp	r3, #0
 5375 2a76 00D0     		beq	.L245
 764:..\src/command_processing.c ****                         case GENERIC_USER:
 765:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 766:..\src/command_processing.c ****                         break;
 767:..\src/command_processing.c ****                         case MARIA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 127


 768:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 769:..\src/command_processing.c ****                         break;
 770:..\src/command_processing.c ****                         case ROZA:
 771:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 772:..\src/command_processing.c ****                         break;
 773:..\src/command_processing.c ****                     }   
 774:..\src/command_processing.c ****                     break;                    
 5376              		.loc 1 774 0
 5377 2a78 E2E1     		b	.L192
 5378              	.L245:
 765:..\src/command_processing.c ****                         break;
 5379              		.loc 1 765 0
 5380 2a7a 07F12803 		add	r3, r7, #40
 5381 2a7e 043B     		subs	r3, r3, #4
 5382 2a80 1846     		mov	r0, r3
 5383 2a82 FFF7FEFF 		bl	strlen
 5384 2a86 0346     		mov	r3, r0
 5385 2a88 1A46     		mov	r2, r3
 5386 2a8a 07F12803 		add	r3, r7, #40
 5387 2a8e 043B     		subs	r3, r3, #4
 5388 2a90 1344     		add	r3, r3, r2
 5389 2a92 864A     		ldr	r2, .L300+24
 5390 2a94 1C46     		mov	r4, r3
 5391 2a96 1346     		mov	r3, r2
 5392 2a98 07CB     		ldmia	r3!, {r0, r1, r2}
 5393 2a9a 2060     		str	r0, [r4]	@ unaligned
 5394 2a9c 6160     		str	r1, [r4, #4]	@ unaligned
 5395 2a9e A260     		str	r2, [r4, #8]	@ unaligned
 5396 2aa0 1B88     		ldrh	r3, [r3]	@ unaligned
 5397 2aa2 A381     		strh	r3, [r4, #12]	@ unaligned
 766:..\src/command_processing.c ****                         case MARIA:
 5398              		.loc 1 766 0
 5399 2aa4 25E0     		b	.L242
 5400              	.L243:
 768:..\src/command_processing.c ****                         break;
 5401              		.loc 1 768 0
 5402 2aa6 07F12803 		add	r3, r7, #40
 5403 2aaa 043B     		subs	r3, r3, #4
 5404 2aac 1846     		mov	r0, r3
 5405 2aae FFF7FEFF 		bl	strlen
 5406 2ab2 0346     		mov	r3, r0
 5407 2ab4 1A46     		mov	r2, r3
 5408 2ab6 07F12803 		add	r3, r7, #40
 5409 2aba 043B     		subs	r3, r3, #4
 5410 2abc 1344     		add	r3, r3, r2
 5411 2abe 7C4A     		ldr	r2, .L300+28
 5412 2ac0 1068     		ldr	r0, [r2]	@ unaligned
 5413 2ac2 1860     		str	r0, [r3]	@ unaligned
 5414 2ac4 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5415 2ac6 9279     		ldrb	r2, [r2, #6]
 5416 2ac8 9980     		strh	r1, [r3, #4]	@ unaligned
 5417 2aca 9A71     		strb	r2, [r3, #6]
 769:..\src/command_processing.c ****                         case ROZA:
 5418              		.loc 1 769 0
 5419 2acc 11E0     		b	.L242
 5420              	.L244:
 771:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 128


 5421              		.loc 1 771 0
 5422 2ace 07F12803 		add	r3, r7, #40
 5423 2ad2 043B     		subs	r3, r3, #4
 5424 2ad4 1846     		mov	r0, r3
 5425 2ad6 FFF7FEFF 		bl	strlen
 5426 2ada 0346     		mov	r3, r0
 5427 2adc 1A46     		mov	r2, r3
 5428 2ade 07F12803 		add	r3, r7, #40
 5429 2ae2 043B     		subs	r3, r3, #4
 5430 2ae4 1344     		add	r3, r3, r2
 5431 2ae6 734A     		ldr	r2, .L300+32
 5432 2ae8 1068     		ldr	r0, [r2]	@ unaligned
 5433 2aea 1860     		str	r0, [r3]	@ unaligned
 5434 2aec 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5435 2aee 9A80     		strh	r2, [r3, #4]	@ unaligned
 772:..\src/command_processing.c ****                     }   
 5436              		.loc 1 772 0
 5437 2af0 00BF     		nop
 5438              	.L242:
 5439              		.loc 1 774 0
 5440 2af2 A5E1     		b	.L192
 5441              	.L202:
 775:..\src/command_processing.c ****                 case 9:     // driver type menu
 776:..\src/command_processing.c ****                     switch(*m_addr){
 5442              		.loc 1 776 0
 5443 2af4 07F5AE53 		add	r3, r7, #5568
 5444 2af8 03F11803 		add	r3, r3, #24
 5445 2afc 1B68     		ldr	r3, [r3]
 5446 2afe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5447 2b00 002B     		cmp	r3, #0
 5448 2b02 02D0     		beq	.L247
 5449 2b04 012B     		cmp	r3, #1
 5450 2b06 17D0     		beq	.L248
 777:..\src/command_processing.c ****                         case 0:
 778:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 779:..\src/command_processing.c ****                         break;
 780:..\src/command_processing.c ****                         case 1:
 781:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                     }
 784:..\src/command_processing.c ****                     break;
 5451              		.loc 1 784 0
 5452 2b08 9AE1     		b	.L192
 5453              	.L247:
 778:..\src/command_processing.c ****                         break;
 5454              		.loc 1 778 0
 5455 2b0a 07F12803 		add	r3, r7, #40
 5456 2b0e 043B     		subs	r3, r3, #4
 5457 2b10 1846     		mov	r0, r3
 5458 2b12 FFF7FEFF 		bl	strlen
 5459 2b16 0346     		mov	r3, r0
 5460 2b18 1A46     		mov	r2, r3
 5461 2b1a 07F12803 		add	r3, r7, #40
 5462 2b1e 043B     		subs	r3, r3, #4
 5463 2b20 1344     		add	r3, r3, r2
 5464 2b22 654A     		ldr	r2, .L300+36
 5465 2b24 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 129


 5466 2b26 1446     		mov	r4, r2
 5467 2b28 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5468 2b2a 2860     		str	r0, [r5]	@ unaligned
 5469 2b2c 6960     		str	r1, [r5, #4]	@ unaligned
 5470 2b2e AA60     		str	r2, [r5, #8]	@ unaligned
 5471 2b30 EB60     		str	r3, [r5, #12]	@ unaligned
 5472 2b32 2068     		ldr	r0, [r4]	@ unaligned
 5473 2b34 2861     		str	r0, [r5, #16]	@ unaligned
 779:..\src/command_processing.c ****                         case 1:
 5474              		.loc 1 779 0
 5475 2b36 18E0     		b	.L246
 5476              	.L248:
 781:..\src/command_processing.c ****                         break;
 5477              		.loc 1 781 0
 5478 2b38 07F12803 		add	r3, r7, #40
 5479 2b3c 043B     		subs	r3, r3, #4
 5480 2b3e 1846     		mov	r0, r3
 5481 2b40 FFF7FEFF 		bl	strlen
 5482 2b44 0346     		mov	r3, r0
 5483 2b46 1A46     		mov	r2, r3
 5484 2b48 07F12803 		add	r3, r7, #40
 5485 2b4c 043B     		subs	r3, r3, #4
 5486 2b4e 1344     		add	r3, r3, r2
 5487 2b50 5A4A     		ldr	r2, .L300+40
 5488 2b52 1D46     		mov	r5, r3
 5489 2b54 1446     		mov	r4, r2
 5490 2b56 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5491 2b58 2860     		str	r0, [r5]	@ unaligned
 5492 2b5a 6960     		str	r1, [r5, #4]	@ unaligned
 5493 2b5c AA60     		str	r2, [r5, #8]	@ unaligned
 5494 2b5e EB60     		str	r3, [r5, #12]	@ unaligned
 5495 2b60 2068     		ldr	r0, [r4]	@ unaligned
 5496 2b62 2861     		str	r0, [r5, #16]	@ unaligned
 5497 2b64 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5498 2b66 AB82     		strh	r3, [r5, #20]	@ unaligned
 782:..\src/command_processing.c ****                     }
 5499              		.loc 1 782 0
 5500 2b68 00BF     		nop
 5501              	.L246:
 5502              		.loc 1 784 0
 5503 2b6a 69E1     		b	.L192
 5504              	.L203:
 785:..\src/command_processing.c ****                 case 10:    // device type menu
 786:..\src/command_processing.c ****                     switch(*m_addr){
 5505              		.loc 1 786 0
 5506 2b6c 07F5AE53 		add	r3, r7, #5568
 5507 2b70 03F11803 		add	r3, r3, #24
 5508 2b74 1B68     		ldr	r3, [r3]
 5509 2b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5510 2b78 042B     		cmp	r3, #4
 5511 2b7a 00F26081 		bhi	.L280
 5512 2b7e 01A2     		adr	r2, .L251
 5513 2b80 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5514              		.p2align 2
 5515              	.L251:
 5516 2b84 992B0000 		.word	.L250+1
 5517 2b88 C52B0000 		.word	.L252+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 130


 5518 2b8c F32B0000 		.word	.L253+1
 5519 2b90 1F2C0000 		.word	.L254+1
 5520 2b94 492C0000 		.word	.L255+1
 5521              		.p2align 1
 5522              	.L250:
 787:..\src/command_processing.c ****                         case 0:
 788:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5523              		.loc 1 788 0
 5524 2b98 07F12803 		add	r3, r7, #40
 5525 2b9c 043B     		subs	r3, r3, #4
 5526 2b9e 1846     		mov	r0, r3
 5527 2ba0 FFF7FEFF 		bl	strlen
 5528 2ba4 0346     		mov	r3, r0
 5529 2ba6 1A46     		mov	r2, r3
 5530 2ba8 07F12803 		add	r3, r7, #40
 5531 2bac 043B     		subs	r3, r3, #4
 5532 2bae 1344     		add	r3, r3, r2
 5533 2bb0 434A     		ldr	r2, .L300+44
 5534 2bb2 1C46     		mov	r4, r3
 5535 2bb4 1346     		mov	r3, r2
 5536 2bb6 07CB     		ldmia	r3!, {r0, r1, r2}
 5537 2bb8 2060     		str	r0, [r4]	@ unaligned
 5538 2bba 6160     		str	r1, [r4, #4]	@ unaligned
 5539 2bbc A260     		str	r2, [r4, #8]	@ unaligned
 5540 2bbe 1B88     		ldrh	r3, [r3]	@ unaligned
 5541 2bc0 A381     		strh	r3, [r4, #12]	@ unaligned
 789:..\src/command_processing.c ****                         break;
 5542              		.loc 1 789 0
 5543 2bc2 5BE0     		b	.L249
 5544              	.L252:
 790:..\src/command_processing.c ****                         case 1:
 791:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5545              		.loc 1 791 0
 5546 2bc4 07F12803 		add	r3, r7, #40
 5547 2bc8 043B     		subs	r3, r3, #4
 5548 2bca 1846     		mov	r0, r3
 5549 2bcc FFF7FEFF 		bl	strlen
 5550 2bd0 0346     		mov	r3, r0
 5551 2bd2 1A46     		mov	r2, r3
 5552 2bd4 07F12803 		add	r3, r7, #40
 5553 2bd8 043B     		subs	r3, r3, #4
 5554 2bda 1344     		add	r3, r3, r2
 5555 2bdc 394A     		ldr	r2, .L300+48
 5556 2bde 1D46     		mov	r5, r3
 5557 2be0 1446     		mov	r4, r2
 5558 2be2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5559 2be4 2860     		str	r0, [r5]	@ unaligned
 5560 2be6 6960     		str	r1, [r5, #4]	@ unaligned
 5561 2be8 AA60     		str	r2, [r5, #8]	@ unaligned
 5562 2bea EB60     		str	r3, [r5, #12]	@ unaligned
 5563 2bec 2388     		ldrh	r3, [r4]	@ unaligned
 5564 2bee 2B82     		strh	r3, [r5, #16]	@ unaligned
 792:..\src/command_processing.c ****                         break;
 5565              		.loc 1 792 0
 5566 2bf0 44E0     		b	.L249
 5567              	.L253:
 793:..\src/command_processing.c ****                         case 2:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 131


 794:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5568              		.loc 1 794 0
 5569 2bf2 07F12803 		add	r3, r7, #40
 5570 2bf6 043B     		subs	r3, r3, #4
 5571 2bf8 1846     		mov	r0, r3
 5572 2bfa FFF7FEFF 		bl	strlen
 5573 2bfe 0346     		mov	r3, r0
 5574 2c00 1A46     		mov	r2, r3
 5575 2c02 07F12803 		add	r3, r7, #40
 5576 2c06 043B     		subs	r3, r3, #4
 5577 2c08 1344     		add	r3, r3, r2
 5578 2c0a 2F4A     		ldr	r2, .L300+52
 5579 2c0c 1C46     		mov	r4, r3
 5580 2c0e 1346     		mov	r3, r2
 5581 2c10 07CB     		ldmia	r3!, {r0, r1, r2}
 5582 2c12 2060     		str	r0, [r4]	@ unaligned
 5583 2c14 6160     		str	r1, [r4, #4]	@ unaligned
 5584 2c16 A260     		str	r2, [r4, #8]	@ unaligned
 5585 2c18 1B88     		ldrh	r3, [r3]	@ unaligned
 5586 2c1a A381     		strh	r3, [r4, #12]	@ unaligned
 795:..\src/command_processing.c ****                         break;
 5587              		.loc 1 795 0
 5588 2c1c 2EE0     		b	.L249
 5589              	.L254:
 796:..\src/command_processing.c ****                         case 3:
 797:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5590              		.loc 1 797 0
 5591 2c1e 07F12803 		add	r3, r7, #40
 5592 2c22 043B     		subs	r3, r3, #4
 5593 2c24 1846     		mov	r0, r3
 5594 2c26 FFF7FEFF 		bl	strlen
 5595 2c2a 0346     		mov	r3, r0
 5596 2c2c 1A46     		mov	r2, r3
 5597 2c2e 07F12803 		add	r3, r7, #40
 5598 2c32 043B     		subs	r3, r3, #4
 5599 2c34 1344     		add	r3, r3, r2
 5600 2c36 254A     		ldr	r2, .L300+56
 5601 2c38 1C46     		mov	r4, r3
 5602 2c3a 1546     		mov	r5, r2
 5603 2c3c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5604 2c3e 2060     		str	r0, [r4]	@ unaligned
 5605 2c40 6160     		str	r1, [r4, #4]	@ unaligned
 5606 2c42 A260     		str	r2, [r4, #8]	@ unaligned
 5607 2c44 E360     		str	r3, [r4, #12]	@ unaligned
 798:..\src/command_processing.c ****                         break;
 5608              		.loc 1 798 0
 5609 2c46 19E0     		b	.L249
 5610              	.L255:
 799:..\src/command_processing.c ****                         case 4:
 800:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5611              		.loc 1 800 0
 5612 2c48 07F12803 		add	r3, r7, #40
 5613 2c4c 043B     		subs	r3, r3, #4
 5614 2c4e 1846     		mov	r0, r3
 5615 2c50 FFF7FEFF 		bl	strlen
 5616 2c54 0346     		mov	r3, r0
 5617 2c56 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 132


 5618 2c58 07F12803 		add	r3, r7, #40
 5619 2c5c 043B     		subs	r3, r3, #4
 5620 2c5e 1344     		add	r3, r3, r2
 5621 2c60 1B4A     		ldr	r2, .L300+60
 5622 2c62 1D46     		mov	r5, r3
 5623 2c64 1446     		mov	r4, r2
 5624 2c66 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5625 2c68 2860     		str	r0, [r5]	@ unaligned
 5626 2c6a 6960     		str	r1, [r5, #4]	@ unaligned
 5627 2c6c AA60     		str	r2, [r5, #8]	@ unaligned
 5628 2c6e EB60     		str	r3, [r5, #12]	@ unaligned
 5629 2c70 2388     		ldrh	r3, [r4]	@ unaligned
 5630 2c72 A278     		ldrb	r2, [r4, #2]
 5631 2c74 2B82     		strh	r3, [r5, #16]	@ unaligned
 5632 2c76 1346     		mov	r3, r2
 5633 2c78 AB74     		strb	r3, [r5, #18]
 801:..\src/command_processing.c ****                         break;
 5634              		.loc 1 801 0
 5635 2c7a 00BF     		nop
 5636              	.L249:
 802:..\src/command_processing.c ****                     }
 803:..\src/command_processing.c ****                     break;
 5637              		.loc 1 803 0
 5638 2c7c DFE0     		b	.L280
 5639              	.L204:
 804:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 805:..\src/command_processing.c ****                     switch(*m_addr){
 5640              		.loc 1 805 0
 5641 2c7e 07F5AE53 		add	r3, r7, #5568
 5642 2c82 03F11803 		add	r3, r3, #24
 5643 2c86 1B68     		ldr	r3, [r3]
 5644 2c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5645 2c8a 002B     		cmp	r3, #0
 5646 2c8c 22D0     		beq	.L257
 5647 2c8e 012B     		cmp	r3, #1
 5648 2c90 5AD0     		beq	.L258
 806:..\src/command_processing.c ****                         case 0:
 807:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 808:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 809:..\src/command_processing.c ****                             }
 810:..\src/command_processing.c ****                             else {
 811:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist, Slow:hand\0");
 812:..\src/command_processing.c ****                             }                            
 813:..\src/command_processing.c ****                         break;
 814:..\src/command_processing.c ****                         case 1:
 815:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 816:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 817:..\src/command_processing.c ****                             }
 818:..\src/command_processing.c ****                             else {
 819:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist, Fast:hand\0");
 820:..\src/command_processing.c ****                             }
 821:..\src/command_processing.c ****                         break;
 822:..\src/command_processing.c ****                     }
 823:..\src/command_processing.c ****                     break;
 5649              		.loc 1 823 0
 5650 2c92 D5E0     		b	.L192
 5651              	.L301:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 133


 5652              		.align	2
 5653              	.L300:
 5654 2c94 EC000000 		.word	.LC105
 5655 2c98 F4000000 		.word	.LC106
 5656 2c9c 04010000 		.word	.LC107
 5657 2ca0 18010000 		.word	.LC108
 5658 2ca4 28010000 		.word	.LC109
 5659 2ca8 30010000 		.word	.LC110
 5660 2cac 38010000 		.word	.LC111
 5661 2cb0 48010000 		.word	.LC112
 5662 2cb4 50010000 		.word	.LC113
 5663 2cb8 58010000 		.word	.LC114
 5664 2cbc 70010000 		.word	.LC115
 5665 2cc0 88010000 		.word	.LC116
 5666 2cc4 98010000 		.word	.LC117
 5667 2cc8 AC010000 		.word	.LC118
 5668 2ccc BC010000 		.word	.LC119
 5669 2cd0 D0010000 		.word	.LC120
 5670              	.L257:
 807:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5671              		.loc 1 807 0
 5672 2cd4 D04B     		ldr	r3, .L302
 5673 2cd6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5674 2cda 042B     		cmp	r3, #4
 5675 2cdc 18D1     		bne	.L259
 808:..\src/command_processing.c ****                             }
 5676              		.loc 1 808 0
 5677 2cde 07F12803 		add	r3, r7, #40
 5678 2ce2 043B     		subs	r3, r3, #4
 5679 2ce4 1846     		mov	r0, r3
 5680 2ce6 FFF7FEFF 		bl	strlen
 5681 2cea 0346     		mov	r3, r0
 5682 2cec 1A46     		mov	r2, r3
 5683 2cee 07F12803 		add	r3, r7, #40
 5684 2cf2 043B     		subs	r3, r3, #4
 5685 2cf4 1344     		add	r3, r3, r2
 5686 2cf6 C94A     		ldr	r2, .L302+4
 5687 2cf8 1D46     		mov	r5, r3
 5688 2cfa 1446     		mov	r4, r2
 5689 2cfc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5690 2cfe 2860     		str	r0, [r5]	@ unaligned
 5691 2d00 6960     		str	r1, [r5, #4]	@ unaligned
 5692 2d02 AA60     		str	r2, [r5, #8]	@ unaligned
 5693 2d04 EB60     		str	r3, [r5, #12]	@ unaligned
 5694 2d06 2068     		ldr	r0, [r4]	@ unaligned
 5695 2d08 2861     		str	r0, [r5, #16]	@ unaligned
 5696 2d0a A388     		ldrh	r3, [r4, #4]	@ unaligned
 5697 2d0c AB82     		strh	r3, [r5, #20]	@ unaligned
 813:..\src/command_processing.c ****                         case 1:
 5698              		.loc 1 813 0
 5699 2d0e 55E0     		b	.L256
 5700              	.L259:
 811:..\src/command_processing.c ****                             }                            
 5701              		.loc 1 811 0
 5702 2d10 07F12803 		add	r3, r7, #40
 5703 2d14 043B     		subs	r3, r3, #4
 5704 2d16 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 134


 5705 2d18 FFF7FEFF 		bl	strlen
 5706 2d1c 0346     		mov	r3, r0
 5707 2d1e 1A46     		mov	r2, r3
 5708 2d20 07F12803 		add	r3, r7, #40
 5709 2d24 043B     		subs	r3, r3, #4
 5710 2d26 1344     		add	r3, r3, r2
 5711 2d28 BD4A     		ldr	r2, .L302+8
 5712 2d2a 1C46     		mov	r4, r3
 5713 2d2c 1546     		mov	r5, r2
 5714 2d2e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5715 2d30 2060     		str	r0, [r4]	@ unaligned
 5716 2d32 6160     		str	r1, [r4, #4]	@ unaligned
 5717 2d34 A260     		str	r2, [r4, #8]	@ unaligned
 5718 2d36 E360     		str	r3, [r4, #12]	@ unaligned
 5719 2d38 2868     		ldr	r0, [r5]	@ unaligned
 5720 2d3a 2061     		str	r0, [r4, #16]	@ unaligned
 5721 2d3c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5722 2d3e AA79     		ldrb	r2, [r5, #6]
 5723 2d40 A382     		strh	r3, [r4, #20]	@ unaligned
 5724 2d42 1346     		mov	r3, r2
 5725 2d44 A375     		strb	r3, [r4, #22]
 813:..\src/command_processing.c ****                         case 1:
 5726              		.loc 1 813 0
 5727 2d46 39E0     		b	.L256
 5728              	.L258:
 815:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5729              		.loc 1 815 0
 5730 2d48 B34B     		ldr	r3, .L302
 5731 2d4a 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5732 2d4e 042B     		cmp	r3, #4
 5733 2d50 18D1     		bne	.L261
 816:..\src/command_processing.c ****                             }
 5734              		.loc 1 816 0
 5735 2d52 07F12803 		add	r3, r7, #40
 5736 2d56 043B     		subs	r3, r3, #4
 5737 2d58 1846     		mov	r0, r3
 5738 2d5a FFF7FEFF 		bl	strlen
 5739 2d5e 0346     		mov	r3, r0
 5740 2d60 1A46     		mov	r2, r3
 5741 2d62 07F12803 		add	r3, r7, #40
 5742 2d66 043B     		subs	r3, r3, #4
 5743 2d68 1344     		add	r3, r3, r2
 5744 2d6a AE4A     		ldr	r2, .L302+12
 5745 2d6c 1D46     		mov	r5, r3
 5746 2d6e 1446     		mov	r4, r2
 5747 2d70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5748 2d72 2860     		str	r0, [r5]	@ unaligned
 5749 2d74 6960     		str	r1, [r5, #4]	@ unaligned
 5750 2d76 AA60     		str	r2, [r5, #8]	@ unaligned
 5751 2d78 EB60     		str	r3, [r5, #12]	@ unaligned
 5752 2d7a 2068     		ldr	r0, [r4]	@ unaligned
 5753 2d7c 2861     		str	r0, [r5, #16]	@ unaligned
 5754 2d7e A388     		ldrh	r3, [r4, #4]	@ unaligned
 5755 2d80 AB82     		strh	r3, [r5, #20]	@ unaligned
 821:..\src/command_processing.c ****                     }
 5756              		.loc 1 821 0
 5757 2d82 1AE0     		b	.L281
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 135


 5758              	.L261:
 819:..\src/command_processing.c ****                             }
 5759              		.loc 1 819 0
 5760 2d84 07F12803 		add	r3, r7, #40
 5761 2d88 043B     		subs	r3, r3, #4
 5762 2d8a 1846     		mov	r0, r3
 5763 2d8c FFF7FEFF 		bl	strlen
 5764 2d90 0346     		mov	r3, r0
 5765 2d92 1A46     		mov	r2, r3
 5766 2d94 07F12803 		add	r3, r7, #40
 5767 2d98 043B     		subs	r3, r3, #4
 5768 2d9a 1344     		add	r3, r3, r2
 5769 2d9c A24A     		ldr	r2, .L302+16
 5770 2d9e 1C46     		mov	r4, r3
 5771 2da0 1546     		mov	r5, r2
 5772 2da2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5773 2da4 2060     		str	r0, [r4]	@ unaligned
 5774 2da6 6160     		str	r1, [r4, #4]	@ unaligned
 5775 2da8 A260     		str	r2, [r4, #8]	@ unaligned
 5776 2daa E360     		str	r3, [r4, #12]	@ unaligned
 5777 2dac 2868     		ldr	r0, [r5]	@ unaligned
 5778 2dae 2061     		str	r0, [r4, #16]	@ unaligned
 5779 2db0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5780 2db2 AA79     		ldrb	r2, [r5, #6]
 5781 2db4 A382     		strh	r3, [r4, #20]	@ unaligned
 5782 2db6 1346     		mov	r3, r2
 5783 2db8 A375     		strb	r3, [r4, #22]
 5784              	.L281:
 821:..\src/command_processing.c ****                     }
 5785              		.loc 1 821 0
 5786 2dba 00BF     		nop
 5787              	.L256:
 5788              		.loc 1 823 0 discriminator 13
 5789 2dbc 40E0     		b	.L192
 5790              	.L205:
 824:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 825:..\src/command_processing.c ****                     switch(*m_addr){
 5791              		.loc 1 825 0
 5792 2dbe 07F5AE53 		add	r3, r7, #5568
 5793 2dc2 03F11803 		add	r3, r3, #24
 5794 2dc6 1B68     		ldr	r3, [r3]
 5795 2dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5796 2dca 002B     		cmp	r3, #0
 5797 2dcc 02D0     		beq	.L264
 5798 2dce 012B     		cmp	r3, #1
 5799 2dd0 17D0     		beq	.L265
 826:..\src/command_processing.c ****                         case 0:
 827:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 828:..\src/command_processing.c ****                         break;
 829:..\src/command_processing.c ****                         case 1:
 830:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 831:..\src/command_processing.c ****                         break;
 832:..\src/command_processing.c ****                     }
 833:..\src/command_processing.c ****                     break;
 5800              		.loc 1 833 0
 5801 2dd2 35E0     		b	.L192
 5802              	.L264:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 136


 827:..\src/command_processing.c ****                         break;
 5803              		.loc 1 827 0
 5804 2dd4 07F12803 		add	r3, r7, #40
 5805 2dd8 043B     		subs	r3, r3, #4
 5806 2dda 1846     		mov	r0, r3
 5807 2ddc FFF7FEFF 		bl	strlen
 5808 2de0 0346     		mov	r3, r0
 5809 2de2 1A46     		mov	r2, r3
 5810 2de4 07F12803 		add	r3, r7, #40
 5811 2de8 043B     		subs	r3, r3, #4
 5812 2dea 1344     		add	r3, r3, r2
 5813 2dec 8F4A     		ldr	r2, .L302+20
 5814 2dee 1D46     		mov	r5, r3
 5815 2df0 1446     		mov	r4, r2
 5816 2df2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5817 2df4 2860     		str	r0, [r5]	@ unaligned
 5818 2df6 6960     		str	r1, [r5, #4]	@ unaligned
 5819 2df8 AA60     		str	r2, [r5, #8]	@ unaligned
 5820 2dfa EB60     		str	r3, [r5, #12]	@ unaligned
 5821 2dfc 2068     		ldr	r0, [r4]	@ unaligned
 5822 2dfe 2861     		str	r0, [r5, #16]	@ unaligned
 828:..\src/command_processing.c ****                         case 1:
 5823              		.loc 1 828 0
 5824 2e00 16E0     		b	.L263
 5825              	.L265:
 830:..\src/command_processing.c ****                         break;
 5826              		.loc 1 830 0
 5827 2e02 07F12803 		add	r3, r7, #40
 5828 2e06 043B     		subs	r3, r3, #4
 5829 2e08 1846     		mov	r0, r3
 5830 2e0a FFF7FEFF 		bl	strlen
 5831 2e0e 0346     		mov	r3, r0
 5832 2e10 1A46     		mov	r2, r3
 5833 2e12 07F12803 		add	r3, r7, #40
 5834 2e16 043B     		subs	r3, r3, #4
 5835 2e18 1344     		add	r3, r3, r2
 5836 2e1a 854A     		ldr	r2, .L302+24
 5837 2e1c 1D46     		mov	r5, r3
 5838 2e1e 1446     		mov	r4, r2
 5839 2e20 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5840 2e22 2860     		str	r0, [r5]	@ unaligned
 5841 2e24 6960     		str	r1, [r5, #4]	@ unaligned
 5842 2e26 AA60     		str	r2, [r5, #8]	@ unaligned
 5843 2e28 EB60     		str	r3, [r5, #12]	@ unaligned
 5844 2e2a 2068     		ldr	r0, [r4]	@ unaligned
 5845 2e2c 2861     		str	r0, [r5, #16]	@ unaligned
 831:..\src/command_processing.c ****                     }
 5846              		.loc 1 831 0
 5847 2e2e 00BF     		nop
 5848              	.L263:
 5849              		.loc 1 833 0
 5850 2e30 06E0     		b	.L192
 5851              	.L277:
 686:..\src/command_processing.c ****                 case 2:     // control mode menu
 5852              		.loc 1 686 0
 5853 2e32 00BF     		nop
 5854 2e34 04E0     		b	.L192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 137


 5855              	.L278:
 702:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5856              		.loc 1 702 0
 5857 2e36 00BF     		nop
 5858 2e38 02E0     		b	.L192
 5859              	.L279:
 746:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5860              		.loc 1 746 0
 5861 2e3a 00BF     		nop
 5862 2e3c 00E0     		b	.L192
 5863              	.L280:
 803:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5864              		.loc 1 803 0
 5865 2e3e 00BF     		nop
 5866              	.L192:
 834:..\src/command_processing.c ****             }
 835:..\src/command_processing.c ****             //Recomputes string lenght
 836:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5867              		.loc 1 836 0
 5868 2e40 07F12803 		add	r3, r7, #40
 5869 2e44 043B     		subs	r3, r3, #4
 5870 2e46 1846     		mov	r0, r3
 5871 2e48 FFF7FEFF 		bl	strlen
 5872 2e4c 0346     		mov	r3, r0
 5873 2e4e DBB2     		uxtb	r3, r3
 5874 2e50 0133     		adds	r3, r3, #1
 5875 2e52 07F5AF52 		add	r2, r7, #5600
 5876 2e56 02F10202 		add	r2, r2, #2
 5877 2e5a 1370     		strb	r3, [r2]
 5878              	.L191:
 837:..\src/command_processing.c ****         }
 838:..\src/command_processing.c **** 
 839:..\src/command_processing.c ****         // Add parameter string to packet
 840:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5879              		.loc 1 840 0
 5880 2e5c 07F5AF53 		add	r3, r7, #5600
 5881 2e60 03F10203 		add	r3, r3, #2
 5882 2e64 1B78     		ldrb	r3, [r3]
 5883 2e66 07F5AF52 		add	r2, r7, #5600
 5884 2e6a 02F10702 		add	r2, r2, #7
 5885 2e6e 1370     		strb	r3, [r2]
 5886 2e70 45E0     		b	.L266
 5887              	.L267:
 841:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5888              		.loc 1 841 0 discriminator 3
 5889 2e72 07F5AF53 		add	r3, r7, #5600
 5890 2e76 03F10503 		add	r3, r3, #5
 5891 2e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5892 2e7c 3222     		movs	r2, #50
 5893 2e7e 02FB03F3 		mul	r3, r2, r3
 5894 2e82 1A1D     		adds	r2, r3, #4
 5895 2e84 07F5AF53 		add	r3, r7, #5600
 5896 2e88 03F10303 		add	r3, r3, #3
 5897 2e8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5898 2e8e 07F5AF53 		add	r3, r7, #5600
 5899 2e92 03F10503 		add	r3, r3, #5
 5900 2e96 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 138


 5901 2e98 07F10803 		add	r3, r7, #8
 5902 2e9c 043B     		subs	r3, r3, #4
 5903 2e9e 1B68     		ldr	r3, [r3]
 5904 2ea0 0344     		add	r3, r3, r0
 5905 2ea2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5906 2ea4 03FB01F3 		mul	r3, r3, r1
 5907 2ea8 1A44     		add	r2, r2, r3
 5908 2eaa 07F5AF53 		add	r3, r7, #5600
 5909 2eae 03F10203 		add	r3, r3, #2
 5910 2eb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5911 2eb4 1A44     		add	r2, r2, r3
 5912 2eb6 07F5AF53 		add	r3, r7, #5600
 5913 2eba 03F10703 		add	r3, r3, #7
 5914 2ebe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5915 2ec0 D21A     		subs	r2, r2, r3
 5916 2ec2 07F5AF53 		add	r3, r7, #5600
 5917 2ec6 03F10203 		add	r3, r3, #2
 5918 2eca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5919 2ecc 07F5AF53 		add	r3, r7, #5600
 5920 2ed0 03F10703 		add	r3, r3, #7
 5921 2ed4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5922 2ed6 C91A     		subs	r1, r1, r3
 5923 2ed8 07F12803 		add	r3, r7, #40
 5924 2edc 043B     		subs	r3, r3, #4
 5925 2ede 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5926 2ee0 07F16803 		add	r3, r7, #104
 5927 2ee4 103B     		subs	r3, r3, #16
 5928 2ee6 9954     		strb	r1, [r3, r2]
 840:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5929              		.loc 1 840 0 discriminator 3
 5930 2ee8 07F5AF53 		add	r3, r7, #5600
 5931 2eec 03F10703 		add	r3, r3, #7
 5932 2ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5933 2ef2 013B     		subs	r3, r3, #1
 5934 2ef4 07F5AF52 		add	r2, r7, #5600
 5935 2ef8 02F10702 		add	r2, r2, #7
 5936 2efc 1370     		strb	r3, [r2]
 5937              	.L266:
 840:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5938              		.loc 1 840 0 is_stmt 0 discriminator 1
 5939 2efe 07F5AF53 		add	r3, r7, #5600
 5940 2f02 03F10703 		add	r3, r3, #7
 5941 2f06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5942 2f08 002B     		cmp	r3, #0
 5943 2f0a B2D1     		bne	.L267
 842:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 843:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5944              		.loc 1 843 0 is_stmt 1
 5945 2f0c 07F5AF53 		add	r3, r7, #5600
 5946 2f10 03F10503 		add	r3, r3, #5
 5947 2f14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5948 2f16 07F10802 		add	r2, r7, #8
 5949 2f1a 1268     		ldr	r2, [r2]
 5950 2f1c 1344     		add	r3, r3, r2
 5951 2f1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5952 2f20 002B     		cmp	r3, #0
 5953 2f22 3AD1     		bne	.L268
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 139


 844:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5954              		.loc 1 844 0
 5955 2f24 07F5AF53 		add	r3, r7, #5600
 5956 2f28 03F10503 		add	r3, r3, #5
 5957 2f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5958 2f2e 3222     		movs	r2, #50
 5959 2f30 02FB03F3 		mul	r3, r2, r3
 5960 2f34 1A1D     		adds	r2, r3, #4
 5961 2f36 07F5AF53 		add	r3, r7, #5600
 5962 2f3a 03F10303 		add	r3, r3, #3
 5963 2f3e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5964 2f40 07F5AF53 		add	r3, r7, #5600
 5965 2f44 03F10503 		add	r3, r3, #5
 5966 2f48 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5967 2f4a 07F10803 		add	r3, r7, #8
 5968 2f4e 043B     		subs	r3, r3, #4
 5969 2f50 1B68     		ldr	r3, [r3]
 5970 2f52 0344     		add	r3, r3, r0
 5971 2f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5972 2f56 03FB01F3 		mul	r3, r3, r1
 5973 2f5a 1A44     		add	r2, r2, r3
 5974 2f5c 07F5AF53 		add	r3, r7, #5600
 5975 2f60 03F10203 		add	r3, r3, #2
 5976 2f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5977 2f66 1A44     		add	r2, r2, r3
 5978 2f68 07F5AF53 		add	r3, r7, #5600
 5979 2f6c 03F10403 		add	r3, r3, #4
 5980 2f70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5981 2f72 07F5B051 		add	r1, r7, #5632
 5982 2f76 0968     		ldr	r1, [r1]
 5983 2f78 0B44     		add	r3, r3, r1
 5984 2f7a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5985 2f7c 07F16803 		add	r3, r7, #104
 5986 2f80 103B     		subs	r3, r3, #16
 5987 2f82 9954     		strb	r1, [r3, r2]
 845:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5988              		.loc 1 845 0
 5989 2f84 07F5AF53 		add	r3, r7, #5600
 5990 2f88 03F10403 		add	r3, r3, #4
 5991 2f8c 1B78     		ldrb	r3, [r3]
 5992 2f8e 0133     		adds	r3, r3, #1
 5993 2f90 07F5AF52 		add	r2, r7, #5600
 5994 2f94 02F10402 		add	r2, r2, #4
 5995 2f98 1370     		strb	r3, [r2]
 5996              	.L268:
 846:..\src/command_processing.c ****         }      
 847:..\src/command_processing.c ****         
 848:..\src/command_processing.c ****         // Add struct index after an empty bit
 849:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 850:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5997              		.loc 1 850 0
 5998 2f9a 07F5AF53 		add	r3, r7, #5600
 5999 2f9e 03F10503 		add	r3, r3, #5
 6000 2fa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6001 2fa4 07F10802 		add	r2, r7, #8
 6002 2fa8 1268     		ldr	r2, [r2]
 6003 2faa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 140


 6004 2fac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6005 2fae 002B     		cmp	r3, #0
 6006 2fb0 40D1     		bne	.L269
 851:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6007              		.loc 1 851 0
 6008 2fb2 07F5AF53 		add	r3, r7, #5600
 6009 2fb6 03F10503 		add	r3, r3, #5
 6010 2fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6011 2fbc 3222     		movs	r2, #50
 6012 2fbe 02FB03F3 		mul	r3, r2, r3
 6013 2fc2 1A1D     		adds	r2, r3, #4
 6014 2fc4 07F5AF53 		add	r3, r7, #5600
 6015 2fc8 03F10303 		add	r3, r3, #3
 6016 2fcc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6017 2fce 07F5AF53 		add	r3, r7, #5600
 6018 2fd2 03F10503 		add	r3, r3, #5
 6019 2fd6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6020 2fd8 07F10803 		add	r3, r7, #8
 6021 2fdc 043B     		subs	r3, r3, #4
 6022 2fde 1B68     		ldr	r3, [r3]
 6023 2fe0 0344     		add	r3, r3, r0
 6024 2fe2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6025 2fe4 03FB01F3 		mul	r3, r3, r1
 6026 2fe8 1A44     		add	r2, r2, r3
 6027 2fea 07F5AF53 		add	r3, r7, #5600
 6028 2fee 03F10203 		add	r3, r3, #2
 6029 2ff2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6030 2ff4 1344     		add	r3, r3, r2
 6031 2ff6 9A1C     		adds	r2, r3, #2
 6032 2ff8 07F5AF53 		add	r3, r7, #5600
 6033 2ffc 03F10503 		add	r3, r3, #5
 6034 3000 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6035 3002 07F10803 		add	r3, r7, #8
 6036 3006 083B     		subs	r3, r3, #8
 6037 3008 1B68     		ldr	r3, [r3]
 6038 300a 0B44     		add	r3, r3, r1
 6039 300c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6040 300e 07F16803 		add	r3, r7, #104
 6041 3012 103B     		subs	r3, r3, #16
 6042 3014 9954     		strb	r1, [r3, r2]
 6043 3016 3FE0     		b	.L270
 6044              	.L303:
 6045              		.align	2
 6046              	.L302:
 6047 3018 00000000 		.word	c_mem
 6048 301c E4010000 		.word	.LC121
 6049 3020 FC010000 		.word	.LC122
 6050 3024 14020000 		.word	.LC123
 6051 3028 2C020000 		.word	.LC124
 6052 302c 44020000 		.word	.LC125
 6053 3030 5C020000 		.word	.LC126
 6054              	.L269:
 852:..\src/command_processing.c ****         }
 853:..\src/command_processing.c ****         else {
 854:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6055              		.loc 1 854 0
 6056 3034 07F5AF53 		add	r3, r7, #5600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 141


 6057 3038 03F10503 		add	r3, r3, #5
 6058 303c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6059 303e 3222     		movs	r2, #50
 6060 3040 02FB03F3 		mul	r3, r2, r3
 6061 3044 1A1D     		adds	r2, r3, #4
 6062 3046 07F5AF53 		add	r3, r7, #5600
 6063 304a 03F10303 		add	r3, r3, #3
 6064 304e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6065 3050 07F5AF53 		add	r3, r7, #5600
 6066 3054 03F10503 		add	r3, r3, #5
 6067 3058 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6068 305a 07F10803 		add	r3, r7, #8
 6069 305e 043B     		subs	r3, r3, #4
 6070 3060 1B68     		ldr	r3, [r3]
 6071 3062 0344     		add	r3, r3, r0
 6072 3064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6073 3066 03FB01F3 		mul	r3, r3, r1
 6074 306a 1A44     		add	r2, r2, r3
 6075 306c 07F5AF53 		add	r3, r7, #5600
 6076 3070 03F10203 		add	r3, r3, #2
 6077 3074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6078 3076 1344     		add	r3, r3, r2
 6079 3078 5A1C     		adds	r2, r3, #1
 6080 307a 07F5AF53 		add	r3, r7, #5600
 6081 307e 03F10503 		add	r3, r3, #5
 6082 3082 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6083 3084 07F10803 		add	r3, r7, #8
 6084 3088 083B     		subs	r3, r3, #8
 6085 308a 1B68     		ldr	r3, [r3]
 6086 308c 0B44     		add	r3, r3, r1
 6087 308e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6088 3090 07F16803 		add	r3, r7, #104
 6089 3094 103B     		subs	r3, r3, #16
 6090 3096 9954     		strb	r1, [r3, r2]
 6091              	.L270:
 389:..\src/command_processing.c ****         
 6092              		.loc 1 389 0 discriminator 2
 6093 3098 07F5AF53 		add	r3, r7, #5600
 6094 309c 03F10503 		add	r3, r3, #5
 6095 30a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6096 30a2 0133     		adds	r3, r3, #1
 6097 30a4 07F5AF52 		add	r2, r7, #5600
 6098 30a8 02F10502 		add	r2, r2, #5
 6099 30ac 1370     		strb	r3, [r2]
 6100              	.L69:
 389:..\src/command_processing.c ****         
 6101              		.loc 1 389 0 is_stmt 0 discriminator 1
 6102 30ae 07F5AF53 		add	r3, r7, #5600
 6103 30b2 03F10503 		add	r3, r3, #5
 6104 30b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6105 30b8 4B2B     		cmp	r3, #75
 6106 30ba 7DF615A8 		bls	.L271
 855:..\src/command_processing.c ****         }
 856:..\src/command_processing.c ****     }
 857:..\src/command_processing.c **** 
 858:..\src/command_processing.c ****     // Add menu
 859:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 142


 6107              		.loc 1 859 0 is_stmt 1
 6108 30be 0023     		movs	r3, #0
 6109 30c0 07F5AF52 		add	r2, r7, #5600
 6110 30c4 02F10602 		add	r2, r2, #6
 6111 30c8 1370     		strb	r3, [r2]
 6112 30ca 71E0     		b	.L272
 6113              	.L275:
 860:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6114              		.loc 1 860 0
 6115 30cc 07F5AF53 		add	r3, r7, #5600
 6116 30d0 03F10603 		add	r3, r3, #6
 6117 30d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6118 30d6 9B00     		lsls	r3, r3, #2
 6119 30d8 07F5B052 		add	r2, r7, #5632
 6120 30dc 02F10C02 		add	r2, r2, #12
 6121 30e0 1268     		ldr	r2, [r2]
 6122 30e2 1344     		add	r3, r3, r2
 6123 30e4 1B68     		ldr	r3, [r3]
 6124 30e6 1846     		mov	r0, r3
 6125 30e8 FFF7FEFF 		bl	strlen
 6126 30ec 0346     		mov	r3, r0
 6127 30ee 07F5AF52 		add	r2, r7, #5600
 6128 30f2 02F10202 		add	r2, r2, #2
 6129 30f6 1370     		strb	r3, [r2]
 861:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6130              		.loc 1 861 0
 6131 30f8 07F5AF53 		add	r3, r7, #5600
 6132 30fc 03F10203 		add	r3, r3, #2
 6133 3100 1B78     		ldrb	r3, [r3]
 6134 3102 07F5AF52 		add	r2, r7, #5600
 6135 3106 02F10702 		add	r2, r2, #7
 6136 310a 1370     		strb	r3, [r2]
 6137 310c 3EE0     		b	.L273
 6138              	.L274:
 862:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6139              		.loc 1 862 0 discriminator 3
 6140 310e 07F5AF53 		add	r3, r7, #5600
 6141 3112 03F10603 		add	r3, r3, #6
 6142 3116 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6143 3118 9622     		movs	r2, #150
 6144 311a 02FB03F3 		mul	r3, r2, r3
 6145 311e 03F6DA62 		addw	r2, r3, #3802
 6146 3122 07F5AF53 		add	r3, r7, #5600
 6147 3126 03F10203 		add	r3, r3, #2
 6148 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6149 312c 1A44     		add	r2, r2, r3
 6150 312e 07F5AF53 		add	r3, r7, #5600
 6151 3132 03F10703 		add	r3, r3, #7
 6152 3136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6153 3138 D21A     		subs	r2, r2, r3
 6154 313a 07F5AF53 		add	r3, r7, #5600
 6155 313e 03F10603 		add	r3, r3, #6
 6156 3142 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6157 3144 9B00     		lsls	r3, r3, #2
 6158 3146 07F5B051 		add	r1, r7, #5632
 6159 314a 01F10C01 		add	r1, r1, #12
 6160 314e 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 143


 6161 3150 0B44     		add	r3, r3, r1
 6162 3152 1B68     		ldr	r3, [r3]
 6163 3154 07F5AF51 		add	r1, r7, #5600
 6164 3158 01F10201 		add	r1, r1, #2
 6165 315c 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6166 315e 07F5AF51 		add	r1, r7, #5600
 6167 3162 01F10701 		add	r1, r1, #7
 6168 3166 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6169 3168 411A     		subs	r1, r0, r1
 6170 316a 0B44     		add	r3, r3, r1
 6171 316c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6172 316e 07F16803 		add	r3, r7, #104
 6173 3172 103B     		subs	r3, r3, #16
 6174 3174 9954     		strb	r1, [r3, r2]
 861:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6175              		.loc 1 861 0 discriminator 3
 6176 3176 07F5AF53 		add	r3, r7, #5600
 6177 317a 03F10703 		add	r3, r3, #7
 6178 317e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6179 3180 013B     		subs	r3, r3, #1
 6180 3182 07F5AF52 		add	r2, r7, #5600
 6181 3186 02F10702 		add	r2, r2, #7
 6182 318a 1370     		strb	r3, [r2]
 6183              	.L273:
 861:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6184              		.loc 1 861 0 is_stmt 0 discriminator 1
 6185 318c 07F5AF53 		add	r3, r7, #5600
 6186 3190 03F10703 		add	r3, r3, #7
 6187 3194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6188 3196 002B     		cmp	r3, #0
 6189 3198 B9D1     		bne	.L274
 859:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6190              		.loc 1 859 0 is_stmt 1 discriminator 2
 6191 319a 07F5AF53 		add	r3, r7, #5600
 6192 319e 03F10603 		add	r3, r3, #6
 6193 31a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6194 31a4 0133     		adds	r3, r3, #1
 6195 31a6 07F5AF52 		add	r2, r7, #5600
 6196 31aa 02F10602 		add	r2, r2, #6
 6197 31ae 1370     		strb	r3, [r2]
 6198              	.L272:
 859:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6199              		.loc 1 859 0 is_stmt 0 discriminator 1
 6200 31b0 07F5AF53 		add	r3, r7, #5600
 6201 31b4 03F10603 		add	r3, r3, #6
 6202 31b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6203 31ba 0A2B     		cmp	r3, #10
 6204 31bc 86D9     		bls	.L275
 863:..\src/command_processing.c ****     }
 864:..\src/command_processing.c ****     
 865:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6205              		.loc 1 865 0 is_stmt 1
 6206 31be 07F5AF53 		add	r3, r7, #5600
 6207 31c2 1B88     		ldrh	r3, [r3]
 6208 31c4 5C1E     		subs	r4, r3, #1
 6209 31c6 07F5AF53 		add	r3, r7, #5600
 6210 31ca 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 144


 6211 31cc DBB2     		uxtb	r3, r3
 6212 31ce 013B     		subs	r3, r3, #1
 6213 31d0 DAB2     		uxtb	r2, r3
 6214 31d2 07F16803 		add	r3, r7, #104
 6215 31d6 103B     		subs	r3, r3, #16
 6216 31d8 1146     		mov	r1, r2
 6217 31da 1846     		mov	r0, r3
 6218 31dc FFF7FEFF 		bl	LCRChecksum
 6219 31e0 0346     		mov	r3, r0
 6220 31e2 1A46     		mov	r2, r3
 6221 31e4 07F16803 		add	r3, r7, #104
 6222 31e8 103B     		subs	r3, r3, #16
 6223 31ea 1A55     		strb	r2, [r3, r4]
 866:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6224              		.loc 1 866 0
 6225 31ec 07F5AF53 		add	r3, r7, #5600
 6226 31f0 1A88     		ldrh	r2, [r3]
 6227 31f2 07F16803 		add	r3, r7, #104
 6228 31f6 103B     		subs	r3, r3, #16
 6229 31f8 1146     		mov	r1, r2
 6230 31fa 1846     		mov	r0, r3
 6231 31fc FFF7FEFF 		bl	commWrite
 867:..\src/command_processing.c **** }
 6232              		.loc 1 867 0
 6233 3200 00BF     		nop
 6234 3202 07F5AF57 		add	r7, r7, #5600
 6235 3206 0C37     		adds	r7, r7, #12
 6236              		.cfi_def_cfa_offset 20
 6237 3208 BD46     		mov	sp, r7
 6238              		.cfi_def_cfa_register 13
 6239              		@ sp needed
 6240 320a F0BD     		pop	{r4, r5, r6, r7, pc}
 6241              		.cfi_endproc
 6242              	.LFE67:
 6243              		.size	get_param_list, .-get_param_list
 6244              		.section	.rodata
 6245 0271 000000   		.align	2
 6246              	.LC128:
 6247 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 6247      204E6F6E 
 6247      650A3120 
 6247      2D3E204C 
 6247      6F772028 
 6248 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6248      74657220 
 6248      72656164 
 6248      290A3220 
 6248      2D3E2048 
 6249 02d4 62697420 		.ascii	"bit register read)\012\000"
 6249      72656769 
 6249      73746572 
 6249      20726561 
 6249      64290A00 
 6250              		.align	2
 6251              	.LC129:
 6252 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6252      20466173 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 145


 6252      743A7379 
 6252      6E322C20 
 6252      536C6F77 
 6253 0318 796E310A 		.ascii	"yn1\012\000"
 6253      00
 6254 031d 000000   		.align	2
 6255              	.LC130:
 6256 0320 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 6256      20466173 
 6256      743A7772 
 6256      6973742C 
 6256      20536C6F 
 6257 0350 3A68616E 		.ascii	":hand\012\000"
 6257      640A00
 6258 0357 00       		.align	2
 6259              	.LC131:
 6260 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6260      20557362 
 6260      0A31202D 
 6260      3E204861 
 6260      6E646C65 
 6261 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6261      20454D47 
 6261      20496E74 
 6261      65677261 
 6261      6C0A3420 
 6262 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6262      616E6365 
 6262      640A3620 
 6262      2D3E204A 
 6262      6F797374 
 6263 03dd 204E430A 		.ascii	" NC\012\000"
 6263      00
 6264 03e2 0000     		.align	2
 6265              	.LC132:
 6266 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6266      20506F73 
 6266      6974696F 
 6266      6E0A3120 
 6266      2D3E2050 
 6267 040e 6F736974 		.ascii	"osition and Current\012\000"
 6267      696F6E20 
 6267      616E6420 
 6267      43757272 
 6267      656E740A 
 6268 0423 00       		.align	2
 6269              	.LC133:
 6270 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6270      20446561 
 6270      63746976 
 6270      61746520 
 6270      5B4E4F5D 
 6271 044e 0000     		.align	2
 6272              	.LC134:
 6273 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6273      20526967 
 6273      68740A31 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 146


 6273      202D3E20 
 6273      4C656674 
 6274 0466 0000     		.align	2
 6275              	.LC135:
 6276 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6276      204F4646 
 6276      0A31202D 
 6276      3E204F4E 
 6276      0A546865 
 6277 048f 00       		.align	2
 6278              	.LC136:
 6279 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6279      204E6F6E 
 6279      650A3120 
 6279      2D3E2053 
 6279      442F5254 
 6280 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6280      0A33202D 
 6280      3E204F74 
 6280      68657220 
 6280      5B4E2F41 
 6281 04e8 00       		.ascii	"\000"
 6282 04e9 000000   		.align	2
 6283              	.LC137:
 6284 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6284      2047656E 
 6284      65726963 
 6284      20757365 
 6284      720A3120 
 6285 0516 20626F61 		.ascii	" board will reset\012\000"
 6285      72642077 
 6285      696C6C20 
 6285      72657365 
 6285      740A00
 6286 0529 000000   		.align	2
 6287              	.LC138:
 6288 052c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6288      204D4333 
 6288      33383837 
 6288      20285374 
 6288      616E6461 
 6289 055c 290A5468 		.ascii	")\012The board will reset\012\000"
 6289      6520626F 
 6289      61726420 
 6289      77696C6C 
 6289      20726573 
 6290              		.align	2
 6291              	.LC139:
 6292 0574 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6292      20534F46 
 6292      5448414E 
 6292      44205052 
 6292      4F0A3120 
 6293 05a1 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6293      4348414D 
 6293      42455253 
 6293      0A33202D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 147


 6293      3E204F54 
 6294 05ce 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6294      4D4F544F 
 6294      52530A54 
 6294      68652062 
 6294      6F617264 
 6295 05ef 00       		.align	2
 6296              	.LC140:
 6297 05f0 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6297      20436C6F 
 6297      73653A43 
 6297      572C204F 
 6297      70656E3A 
 6298 0620 00       		.ascii	"\000"
 6299 0621 000000   		.align	2
 6300              	.LC0:
 6301 0624 02       		.byte	2
 6302 0625 07       		.byte	7
 6303 0626 07       		.byte	7
 6304 0627 00       		.byte	0
 6305 0628 00       		.byte	0
 6306 0629 00       		.byte	0
 6307 062a 02       		.byte	2
 6308 062b 03       		.byte	3
 6309 062c 07       		.byte	7
 6310 062d 00       		.byte	0
 6311 062e 05       		.byte	5
 6312 062f 05       		.byte	5
 6313 0630 03       		.byte	3
 6314 0631 04       		.byte	4
 6315 0632 00       		.byte	0
 6316 0633 06       		.byte	6
 6317 0634 02       		.byte	2
 6318 0635 00       		.byte	0
 6319 0636 01       		.byte	1
 6320 0637 00       		.byte	0
 6321 0638 07       		.byte	7
 6322 0639 02       		.byte	2
 6323 063a 05       		.byte	5
 6324 063b 05       		.byte	5
 6325 063c 05       		.byte	5
 6326 063d 00       		.byte	0
 6327 063e 00       		.byte	0
 6328 063f 00       		.byte	0
 6329 0640 00       		.byte	0
 6330 0641 00       		.byte	0
 6331 0642 00       		.byte	0
 6332 0643 02       		.byte	2
 6333 0644 00       		.byte	0
 6334 0645 02       		.byte	2
 6335 0646 00       		.byte	0
 6336 0647 09       		.byte	9
 6337 0648 02       		.byte	2
 6338 0649 00       		.byte	0
 6339 064a 02       		.byte	2
 6340 064b 00       		.byte	0
 6341 064c 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 148


 6342 064d 01       		.byte	1
 6343 064e 00       		.byte	0
 6344 064f 07       		.byte	7
 6345 0650 07       		.byte	7
 6346 0651 00       		.byte	0
 6347 0652 00       		.byte	0
 6348 0653 00       		.byte	0
 6349 0654 02       		.byte	2
 6350 0655 03       		.byte	3
 6351 0656 07       		.byte	7
 6352 0657 00       		.byte	0
 6353 0658 05       		.byte	5
 6354 0659 05       		.byte	5
 6355 065a 03       		.byte	3
 6356 065b 00       		.byte	0
 6357 065c 01       		.byte	1
 6358 065d 00       		.byte	0
 6359 065e 07       		.byte	7
 6360 065f 02       		.byte	2
 6361 0660 00       		.byte	0
 6362 0661 02       		.byte	2
 6363 0662 00       		.byte	0
 6364 0663 02       		.byte	2
 6365 0664 01       		.byte	1
 6366 0665 02       		.byte	2
 6367 0666 02       		.byte	2
 6368 0667 00       		.byte	0
 6369 0668 02       		.byte	2
 6370 0669 02       		.byte	2
 6371 066a 04       		.byte	4
 6372 066b 03       		.byte	3
 6373 066c 04       		.byte	4
 6374 066d 00       		.byte	0
 6375 066e 00       		.byte	0
 6376 066f 04       		.byte	4
 6377 0670 00       		.byte	0
 6378 0671 00       		.byte	0
 6379 0672 02       		.byte	2
 6380 0673 05       		.byte	5
 6381 0674 07       		.byte	7
 6382 0675 07       		.byte	7
 6383 0676 0000     		.align	2
 6384              	.LC1:
 6385 0678 31202D20 		.ascii	"1 - Device ID:\000"
 6385      44657669 
 6385      63652049 
 6385      443A00
 6386 0687 00       		.align	2
 6387              	.LC2:
 6388 0688 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6388      506F7369 
 6388      74696F6E 
 6388      20504944 
 6388      205B502C 
 6389              		.align	2
 6390              	.LC3:
 6391 06a4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 149


 6391      43757272 
 6391      656E7420 
 6391      50494420 
 6391      5B502C20 
 6392 06bf 00       		.align	2
 6393              	.LC4:
 6394 06c0 34202D20 		.ascii	"4 - Startup Activation:\000"
 6394      53746172 
 6394      74757020 
 6394      41637469 
 6394      76617469 
 6395              		.align	2
 6396              	.LC5:
 6397 06d8 35202D20 		.ascii	"5 - Input mode:\000"
 6397      496E7075 
 6397      74206D6F 
 6397      64653A00 
 6398              		.align	2
 6399              	.LC6:
 6400 06e8 36202D20 		.ascii	"6 - Control mode:\000"
 6400      436F6E74 
 6400      726F6C20 
 6400      6D6F6465 
 6400      3A00
 6401 06fa 0000     		.align	2
 6402              	.LC7:
 6403 06fc 37202D20 		.ascii	"7 - Resolutions:\000"
 6403      5265736F 
 6403      6C757469 
 6403      6F6E733A 
 6403      00
 6404 070d 000000   		.align	2
 6405              	.LC8:
 6406 0710 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6406      4D656173 
 6406      7572656D 
 6406      656E7420 
 6406      4F666673 
 6407 0729 000000   		.align	2
 6408              	.LC9:
 6409 072c 39202D20 		.ascii	"9 - Multipliers:\000"
 6409      4D756C74 
 6409      69706C69 
 6409      6572733A 
 6409      00
 6410 073d 000000   		.align	2
 6411              	.LC10:
 6412 0740 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6412      20506F73 
 6412      2E206C69 
 6412      6D697420 
 6412      61637469 
 6413              		.align	2
 6414              	.LC11:
 6415 0758 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6415      20506F73 
 6415      2E206C69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 150


 6415      6D697473 
 6415      205B696E 
 6416 0775 000000   		.align	2
 6417              	.LC12:
 6418 0778 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6418      204D6178 
 6418      20737465 
 6418      7073205B 
 6418      6E65672C 
 6419 0793 00       		.align	2
 6420              	.LC13:
 6421 0794 3133202D 		.ascii	"13 - Current limit:\000"
 6421      20437572 
 6421      72656E74 
 6421      206C696D 
 6421      69743A00 
 6422              		.align	2
 6423              	.LC14:
 6424 07a8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6424      20454D47 
 6424      20746872 
 6424      6573686F 
 6424      6C64733A 
 6425 07bd 000000   		.align	2
 6426              	.LC15:
 6427 07c0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6427      20454D47 
 6427      2063616C 
 6427      69627261 
 6427      74696F6E 
 6428 07e1 000000   		.align	2
 6429              	.LC16:
 6430 07e4 3136202D 		.ascii	"16 - EMG max values:\000"
 6430      20454D47 
 6430      206D6178 
 6430      2076616C 
 6430      7565733A 
 6431 07f9 000000   		.align	2
 6432              	.LC17:
 6433 07fc 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6433      20454D47 
 6433      206D6178 
 6433      20737065 
 6433      6564733A 
 6434 0811 000000   		.align	2
 6435              	.LC18:
 6436 0814 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6436      20416273 
 6436      6F6C7574 
 6436      6520656E 
 6436      636F6465 
 6437              		.align	2
 6438              	.LC19:
 6439 0834 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6439      204D6F74 
 6439      6F722068 
 6439      616E646C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 151


 6439      65207261 
 6440 084d 000000   		.align	2
 6441              	.LC20:
 6442 0850 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6442      2050574D 
 6442      20726573 
 6442      63616C69 
 6442      6E673A00 
 6443              		.align	2
 6444              	.LC21:
 6445 0864 3231202D 		.ascii	"21 - Current lookup:\000"
 6445      20437572 
 6445      72656E74 
 6445      206C6F6F 
 6445      6B75703A 
 6446 0879 000000   		.align	2
 6447              	.LC22:
 6448 087c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6448      20446174 
 6448      65206F66 
 6448      206D6169 
 6448      6E74656E 
 6449 089e 0000     		.align	2
 6450              	.LC23:
 6451 08a0 3233202D 		.ascii	"23 - Rest position:\000"
 6451      20526573 
 6451      7420706F 
 6451      73697469 
 6451      6F6E3A00 
 6452              		.align	2
 6453              	.LC24:
 6454 08b4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6454      20526573 
 6454      7420706F 
 6454      73697469 
 6454      6F6E2074 
 6455              		.align	2
 6456              	.LC25:
 6457 08d8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6457      20526573 
 6457      74207665 
 6457      6C20636C 
 6457      6F737572 
 6458 08fb 00       		.align	2
 6459              	.LC26:
 6460 08fc 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6460      20526573 
 6460      7420706F 
 6460      73697469 
 6460      6F6E2065 
 6461              		.align	2
 6462              	.LC27:
 6463 0918 3237202D 		.ascii	"27 - EMG inversion:\000"
 6463      20454D47 
 6463      20696E76 
 6463      65727369 
 6463      6F6E3A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 152


 6464              		.align	2
 6465              	.LC28:
 6466 092c 3238202D 		.ascii	"28 - Hand side:\000"
 6466      2048616E 
 6466      64207369 
 6466      64653A00 
 6467              		.align	2
 6468              	.LC29:
 6469 093c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6469      20456E61 
 6469      626C6520 
 6469      494D5573 
 6469      3A00
 6470 094e 0000     		.align	2
 6471              	.LC30:
 6472 0950 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6472      20526561 
 6472      64204578 
 6472      70616E73 
 6472      696F6E20 
 6473 096a 0000     		.align	2
 6474              	.LC31:
 6475 096c 3331202D 		.ascii	"31 - Reset counters:\000"
 6475      20526573 
 6475      65742063 
 6475      6F756E74 
 6475      6572733A 
 6476 0981 000000   		.align	2
 6477              	.LC32:
 6478 0984 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6478      204C6173 
 6478      74206368 
 6478      65636B65 
 6478      64205469 
 6479 09aa 0000     		.align	2
 6480              	.LC33:
 6481 09ac 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6481      20535049 
 6481      20726561 
 6481      64206465 
 6481      6C617920 
 6482 09c7 00       		.align	2
 6483              	.LC34:
 6484 09c8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6484      204F6E20 
 6484      626F6172 
 6484      6420494D 
 6484      5520636F 
 6485 09ed 000000   		.align	2
 6486              	.LC35:
 6487 09f0 3335202D 		.ascii	"35 - User ID:\000"
 6487      20557365 
 6487      72204944 
 6487      3A00
 6488 09fe 0000     		.align	2
 6489              	.LC36:
 6490 0a00 3336202D 		.ascii	"36 - User code:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 153


 6490      20557365 
 6490      7220636F 
 6490      64653A00 
 6491              		.align	2
 6492              	.LC37:
 6493 0a10 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6493      20417373 
 6493      6F636961 
 6493      74656420 
 6493      656E636F 
 6494 0a2e 0000     		.align	2
 6495              	.LC38:
 6496 0a30 3338202D 		.ascii	"38 - Driver type:\000"
 6496      20447269 
 6496      76657220 
 6496      74797065 
 6496      3A00
 6497 0a42 0000     		.align	2
 6498              	.LC39:
 6499 0a44 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6499      2050574D 
 6499      20726174 
 6499      65206C69 
 6499      6D697465 
 6500 0a5b 00       		.align	2
 6501              	.LC40:
 6502 0a5c 3430202D 		.ascii	"40 - Not reversible:\000"
 6502      204E6F74 
 6502      20726576 
 6502      65727369 
 6502      626C653A 
 6503 0a71 000000   		.align	2
 6504              	.LC41:
 6505 0a74 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6505      20456E63 
 6505      20696478 
 6505      20757365 
 6505      6420666F 
 6506 0a93 00       		.align	2
 6507              	.LC42:
 6508 0a94 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6508      20476561 
 6508      72207061 
 6508      72616D73 
 6508      5B4E312C 
 6509 0ab2 0000     		.align	2
 6510              	.LC43:
 6511 0ab4 3433202D 		.ascii	"43 - Use second motor:\000"
 6511      20557365 
 6511      20736563 
 6511      6F6E6420 
 6511      6D6F746F 
 6512 0acb 00       		.align	2
 6513              	.LC44:
 6514 0acc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6514      20506F73 
 6514      6974696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 154


 6514      6E205049 
 6514      44205B50 
 6515 0ae9 000000   		.align	2
 6516              	.LC45:
 6517 0aec 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6517      20437572 
 6517      72656E74 
 6517      20504944 
 6517      205B502C 
 6518              		.align	2
 6519              	.LC46:
 6520 0b08 3436202D 		.ascii	"46 - Startup Activation:\000"
 6520      20537461 
 6520      72747570 
 6520      20416374 
 6520      69766174 
 6521 0b21 000000   		.align	2
 6522              	.LC47:
 6523 0b24 3437202D 		.ascii	"47 - Input mode:\000"
 6523      20496E70 
 6523      7574206D 
 6523      6F64653A 
 6523      00
 6524 0b35 000000   		.align	2
 6525              	.LC48:
 6526 0b38 3438202D 		.ascii	"48 - Control mode:\000"
 6526      20436F6E 
 6526      74726F6C 
 6526      206D6F64 
 6526      653A00
 6527 0b4b 00       		.align	2
 6528              	.LC49:
 6529 0b4c 3439202D 		.ascii	"49 - Resolutions:\000"
 6529      20526573 
 6529      6F6C7574 
 6529      696F6E73 
 6529      3A00
 6530 0b5e 0000     		.align	2
 6531              	.LC50:
 6532 0b60 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6532      204D6561 
 6532      73757265 
 6532      6D656E74 
 6532      204F6666 
 6533 0b7a 0000     		.align	2
 6534              	.LC51:
 6535 0b7c 3531202D 		.ascii	"51 - Multipliers:\000"
 6535      204D756C 
 6535      7469706C 
 6535      69657273 
 6535      3A00
 6536 0b8e 0000     		.align	2
 6537              	.LC52:
 6538 0b90 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6538      20506F73 
 6538      2E206C69 
 6538      6D697420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 155


 6538      61637469 
 6539              		.align	2
 6540              	.LC53:
 6541 0ba8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6541      20506F73 
 6541      2E206C69 
 6541      6D697473 
 6541      205B696E 
 6542 0bc5 000000   		.align	2
 6543              	.LC54:
 6544 0bc8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6544      204D6178 
 6544      20737465 
 6544      7073205B 
 6544      6E65672C 
 6545 0be3 00       		.align	2
 6546              	.LC55:
 6547 0be4 3535202D 		.ascii	"55 - Current limit:\000"
 6547      20437572 
 6547      72656E74 
 6547      206C696D 
 6547      69743A00 
 6548              		.align	2
 6549              	.LC56:
 6550 0bf8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6550      20416273 
 6550      6F6C7574 
 6550      6520656E 
 6550      636F6465 
 6551              		.align	2
 6552              	.LC57:
 6553 0c18 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6553      204D6F74 
 6553      6F722068 
 6553      616E646C 
 6553      65207261 
 6554 0c31 000000   		.align	2
 6555              	.LC58:
 6556 0c34 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6556      2050574D 
 6556      20726573 
 6556      63616C69 
 6556      6E673A00 
 6557              		.align	2
 6558              	.LC59:
 6559 0c48 3539202D 		.ascii	"59 - Current lookup:\000"
 6559      20437572 
 6559      72656E74 
 6559      206C6F6F 
 6559      6B75703A 
 6560 0c5d 000000   		.align	2
 6561              	.LC60:
 6562 0c60 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6562      20417373 
 6562      6F636961 
 6562      74656420 
 6562      656E636F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 156


 6563 0c7e 0000     		.align	2
 6564              	.LC61:
 6565 0c80 3631202D 		.ascii	"61 - Driver type:\000"
 6565      20447269 
 6565      76657220 
 6565      74797065 
 6565      3A00
 6566 0c92 0000     		.align	2
 6567              	.LC62:
 6568 0c94 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6568      2050574D 
 6568      20726174 
 6568      65206C69 
 6568      6D697465 
 6569 0cab 00       		.align	2
 6570              	.LC63:
 6571 0cac 3633202D 		.ascii	"63 - Not reversible:\000"
 6571      204E6F74 
 6571      20726576 
 6571      65727369 
 6571      626C653A 
 6572 0cc1 000000   		.align	2
 6573              	.LC64:
 6574 0cc4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6574      20456E63 
 6574      20696478 
 6574      20757365 
 6574      6420666F 
 6575 0ce3 00       		.align	2
 6576              	.LC65:
 6577 0ce4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6577      20476561 
 6577      72207061 
 6577      72616D73 
 6577      5B4E312C 
 6578 0d02 0000     		.align	2
 6579              	.LC66:
 6580 0d04 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6580      20526561 
 6580      6420656E 
 6580      63207261 
 6580      77206C69 
 6581 0d1e 0000     		.align	2
 6582              	.LC67:
 6583 0d20 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6583      20526561 
 6583      6420656E 
 6583      63207261 
 6583      77206C69 
 6584 0d3a 0000     		.align	2
 6585              	.LC68:
 6586 0d3c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6586      20526561 
 6586      64206164 
 6586      64697469 
 6586      6F6E616C 
 6587 0d5b 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 157


 6588              	.LC69:
 6589 0d5c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6589      20414443 
 6589      20636861 
 6589      6E6E656C 
 6589      205B312D 
 6590              		.align	2
 6591              	.LC70:
 6592 0d74 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6592      20414443 
 6592      20636861 
 6592      6E6E656C 
 6592      205B372D 
 6593 0d8d 000000   		.align	2
 6594              	.LC71:
 6595 0d90 3731202D 		.ascii	"71 - Joystick closure speed:\000"
 6595      204A6F79 
 6595      73746963 
 6595      6B20636C 
 6595      6F737572 
 6596 0dad 000000   		.align	2
 6597              	.LC72:
 6598 0db0 3732202D 		.ascii	"72 - Joystick threshold:\000"
 6598      204A6F79 
 6598      73746963 
 6598      6B207468 
 6598      72657368 
 6599 0dc9 000000   		.align	2
 6600              	.LC73:
 6601 0dcc 3733202D 		.ascii	"73 - Joystick gains:\000"
 6601      204A6F79 
 6601      73746963 
 6601      6B206761 
 6601      696E733A 
 6602 0de1 000000   		.align	2
 6603              	.LC74:
 6604 0de4 3734202D 		.ascii	"74 - Device type:\000"
 6604      20446576 
 6604      69636520 
 6604      74797065 
 6604      3A00
 6605 0df6 0000     		.align	2
 6606              	.LC75:
 6607 0df8 3735202D 		.ascii	"75 - EMG FSM act.mode:\000"
 6607      20454D47 
 6607      2046534D 
 6607      20616374 
 6607      2E6D6F64 
 6608 0e0f 00       		.align	2
 6609              	.LC76:
 6610 0e10 3736202D 		.ascii	"76 - Fast act.thresholds:\000"
 6610      20466173 
 6610      74206163 
 6610      742E7468 
 6610      72657368 
 6611 0e2a 0000     		.align	2
 6612              	.LC77:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 158


 6613 0e2c 3737202D 		.ascii	"77 - Wrist direction:\000"
 6613      20577269 
 6613      73742064 
 6613      69726563 
 6613      74696F6E 
 6614 0e42 0000     		.align	2
 6615              	.LC78:
 6616 0e44 3738202D 		.ascii	"78 - Slave communication active:\000"
 6616      20536C61 
 6616      76652063 
 6616      6F6D6D75 
 6616      6E696361 
 6617 0e65 000000   		.align	2
 6618              	.LC79:
 6619 0e68 3739202D 		.ascii	"79 - Slave ID:\000"
 6619      20536C61 
 6619      76652049 
 6619      443A00
 6620 0e77 00       		.align	2
 6621              	.LC80:
 6622 0e78 3830202D 		.ascii	"80 - Maximum slave residual current:\000"
 6622      204D6178 
 6622      696D756D 
 6622      20736C61 
 6622      76652072 
 6623 0e9d 000000   		.align	2
 6624              	.LC81:
 6625 0ea0 3831202D 		.ascii	"81 - Maximum pressure feedback (kPa):\000"
 6625      204D6178 
 6625      696D756D 
 6625      20707265 
 6625      73737572 
 6626 0ec6 0000     		.align	2
 6627              	.LC82:
 6628 0ec8 3832202D 		.ascii	"82 - Proportional pressure error gain:\000"
 6628      2050726F 
 6628      706F7274 
 6628      696F6E61 
 6628      6C207072 
 6629 0eef 00       		.align	2
 6630              	.LC127:
 6631 0ef0 78060000 		.word	.LC1
 6632 0ef4 88060000 		.word	.LC2
 6633 0ef8 A4060000 		.word	.LC3
 6634 0efc C0060000 		.word	.LC4
 6635 0f00 D8060000 		.word	.LC5
 6636 0f04 E8060000 		.word	.LC6
 6637 0f08 FC060000 		.word	.LC7
 6638 0f0c 10070000 		.word	.LC8
 6639 0f10 2C070000 		.word	.LC9
 6640 0f14 40070000 		.word	.LC10
 6641 0f18 58070000 		.word	.LC11
 6642 0f1c 78070000 		.word	.LC12
 6643 0f20 94070000 		.word	.LC13
 6644 0f24 A8070000 		.word	.LC14
 6645 0f28 C0070000 		.word	.LC15
 6646 0f2c E4070000 		.word	.LC16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 159


 6647 0f30 FC070000 		.word	.LC17
 6648 0f34 14080000 		.word	.LC18
 6649 0f38 34080000 		.word	.LC19
 6650 0f3c 50080000 		.word	.LC20
 6651 0f40 64080000 		.word	.LC21
 6652 0f44 7C080000 		.word	.LC22
 6653 0f48 A0080000 		.word	.LC23
 6654 0f4c B4080000 		.word	.LC24
 6655 0f50 D8080000 		.word	.LC25
 6656 0f54 FC080000 		.word	.LC26
 6657 0f58 18090000 		.word	.LC27
 6658 0f5c 2C090000 		.word	.LC28
 6659 0f60 3C090000 		.word	.LC29
 6660 0f64 50090000 		.word	.LC30
 6661 0f68 6C090000 		.word	.LC31
 6662 0f6c 84090000 		.word	.LC32
 6663 0f70 AC090000 		.word	.LC33
 6664 0f74 C8090000 		.word	.LC34
 6665 0f78 F0090000 		.word	.LC35
 6666 0f7c 000A0000 		.word	.LC36
 6667 0f80 100A0000 		.word	.LC37
 6668 0f84 300A0000 		.word	.LC38
 6669 0f88 440A0000 		.word	.LC39
 6670 0f8c 5C0A0000 		.word	.LC40
 6671 0f90 740A0000 		.word	.LC41
 6672 0f94 940A0000 		.word	.LC42
 6673 0f98 B40A0000 		.word	.LC43
 6674 0f9c CC0A0000 		.word	.LC44
 6675 0fa0 EC0A0000 		.word	.LC45
 6676 0fa4 080B0000 		.word	.LC46
 6677 0fa8 240B0000 		.word	.LC47
 6678 0fac 380B0000 		.word	.LC48
 6679 0fb0 4C0B0000 		.word	.LC49
 6680 0fb4 600B0000 		.word	.LC50
 6681 0fb8 7C0B0000 		.word	.LC51
 6682 0fbc 900B0000 		.word	.LC52
 6683 0fc0 A80B0000 		.word	.LC53
 6684 0fc4 C80B0000 		.word	.LC54
 6685 0fc8 E40B0000 		.word	.LC55
 6686 0fcc F80B0000 		.word	.LC56
 6687 0fd0 180C0000 		.word	.LC57
 6688 0fd4 340C0000 		.word	.LC58
 6689 0fd8 480C0000 		.word	.LC59
 6690 0fdc 600C0000 		.word	.LC60
 6691 0fe0 800C0000 		.word	.LC61
 6692 0fe4 940C0000 		.word	.LC62
 6693 0fe8 AC0C0000 		.word	.LC63
 6694 0fec C40C0000 		.word	.LC64
 6695 0ff0 E40C0000 		.word	.LC65
 6696 0ff4 040D0000 		.word	.LC66
 6697 0ff8 200D0000 		.word	.LC67
 6698 0ffc 3C0D0000 		.word	.LC68
 6699 1000 5C0D0000 		.word	.LC69
 6700 1004 740D0000 		.word	.LC70
 6701 1008 900D0000 		.word	.LC71
 6702 100c B00D0000 		.word	.LC72
 6703 1010 CC0D0000 		.word	.LC73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 160


 6704 1014 E40D0000 		.word	.LC74
 6705 1018 F80D0000 		.word	.LC75
 6706 101c 100E0000 		.word	.LC76
 6707 1020 2C0E0000 		.word	.LC77
 6708 1024 440E0000 		.word	.LC78
 6709 1028 680E0000 		.word	.LC79
 6710 102c 780E0000 		.word	.LC80
 6711 1030 A00E0000 		.word	.LC81
 6712 1034 C80E0000 		.word	.LC82
 6713              		.align	2
 6714              	.LC84:
 6715 1038 03       		.byte	3
 6716 1039 01       		.byte	1
 6717 103a 02       		.byte	2
 6718 103b 03       		.byte	3
 6719 103c 03       		.byte	3
 6720 103d 03       		.byte	3
 6721 103e 03       		.byte	3
 6722 103f 03       		.byte	3
 6723 1040 03       		.byte	3
 6724 1041 04       		.byte	4
 6725 1042 05       		.byte	5
 6726 1043 06       		.byte	6
 6727 1044 03       		.byte	3
 6728 1045 07       		.byte	7
 6729 1046 08       		.byte	8
 6730 1047 09       		.byte	9
 6731 1048 03       		.byte	3
 6732 1049 05       		.byte	5
 6733 104a 03       		.byte	3
 6734 104b 01       		.byte	1
 6735 104c 02       		.byte	2
 6736 104d 03       		.byte	3
 6737 104e 03       		.byte	3
 6738 104f 03       		.byte	3
 6739 1050 09       		.byte	9
 6740 1051 03       		.byte	3
 6741 1052 05       		.byte	5
 6742 1053 0A       		.byte	10
 6743 1054 0B       		.byte	11
 6744 1055 0C       		.byte	12
 6745 1056 03       		.byte	3
 6746 1057 00       		.align	2
 6747              	.LC85:
 6748 1058 02       		.byte	2
 6749 1059 03       		.byte	3
 6750 105a 08       		.byte	8
 6751 105b 0B       		.byte	11
 6752 105c 17       		.byte	23
 6753 105d 2C       		.byte	44
 6754 105e 2D       		.byte	45
 6755 105f 32       		.byte	50
 6756 1060 35       		.byte	53
 6757 1061 000000   		.align	2
 6758              	.LC86:
 6759 1064 02       		.byte	2
 6760 1065 03       		.byte	3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 161


 6761 1066 05       		.byte	5
 6762 1067 08       		.byte	8
 6763 1068 0B       		.byte	11
 6764 1069 17       		.byte	23
 6765 106a 18       		.byte	24
 6766 106b 1C       		.byte	28
 6767 106c 1F       		.byte	31
 6768 106d 20       		.byte	32
 6769 106e 26       		.byte	38
 6770 106f 2C       		.byte	44
 6771 1070 2D       		.byte	45
 6772 1071 2F       		.byte	47
 6773 1072 32       		.byte	50
 6774 1073 35       		.byte	53
 6775 1074 3D       		.byte	61
 6776 1075 4A       		.byte	74
 6777              		.section	.text.manage_param_list,"ax",%progbits
 6778              		.align	2
 6779              		.global	manage_param_list
 6780              		.thumb
 6781              		.thumb_func
 6782              		.type	manage_param_list, %function
 6783              	manage_param_list:
 6784              	.LFB68:
 868:..\src/command_processing.c **** 
 869:..\src/command_processing.c **** //==============================================================================
 870:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 871:..\src/command_processing.c **** //==============================================================================
 872:..\src/command_processing.c **** 
 873:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6785              		.loc 1 873 0
 6786              		.cfi_startproc
 6787              		@ args = 0, pretend = 0, frame = 1408
 6788              		@ frame_needed = 1, uses_anonymous_args = 0
 6789 0000 B0B5     		push	{r4, r5, r7, lr}
 6790              		.cfi_def_cfa_offset 16
 6791              		.cfi_offset 4, -16
 6792              		.cfi_offset 5, -12
 6793              		.cfi_offset 7, -8
 6794              		.cfi_offset 14, -4
 6795 0002 ADF5B26D 		sub	sp, sp, #1424
 6796              		.cfi_def_cfa_offset 1440
 6797 0006 04AF     		add	r7, sp, #16
 6798              		.cfi_def_cfa 7, 1424
 6799 0008 0246     		mov	r2, r0
 6800 000a BB1D     		adds	r3, r7, #6
 6801 000c 1A80     		strh	r2, [r3]	@ movhi
 874:..\src/command_processing.c ****     uint8 CYDATA i, j;
 875:..\src/command_processing.c ****     uint8 CYDATA sod;
 876:..\src/command_processing.c ****     uint8 PARAM_IDX;
 877:..\src/command_processing.c ****     int16 aux_int16;
 878:..\src/command_processing.c ****     uint16 aux_uint16;
 879:..\src/command_processing.c ****     int32 aux_int32;
 880:..\src/command_processing.c ****     uint32 aux_uint32;
 881:..\src/command_processing.c ****     float aux_float;
 882:..\src/command_processing.c ****  
 883:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 162


 6802              		.loc 1 883 0
 6803 000e 0023     		movs	r3, #0
 6804 0010 87F87535 		strb	r3, [r7, #1397]
 884:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6805              		.loc 1 884 0
 6806 0014 0123     		movs	r3, #1
 6807 0016 87F87435 		strb	r3, [r7, #1396]
 885:..\src/command_processing.c ****     
 886:..\src/command_processing.c ****     // Arrays
 887:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6808              		.loc 1 887 0
 6809 001a 054B     		ldr	r3, .L368
 6810 001c C7F87835 		str	r3, [r7, #1400]
 888:..\src/command_processing.c ****     
 889:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6811              		.loc 1 889 0
 6812 0020 BB1D     		adds	r3, r7, #6
 6813 0022 1B88     		ldrh	r3, [r3]
 6814 0024 002B     		cmp	r3, #0
 6815 0026 07D0     		beq	.L305
 890:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6816              		.loc 1 890 0
 6817 0028 024B     		ldr	r3, .L368+4
 6818 002a C7F87835 		str	r3, [r7, #1400]
 6819 002e 03E0     		b	.L369
 6820              	.L370:
 6821              		.align	2
 6822              	.L368:
 6823 0030 00000000 		.word	c_mem
 6824 0034 00000000 		.word	g_mem
 6825              	.L369:
 6826              	.L305:
 891:..\src/command_processing.c ****     }
 892:..\src/command_processing.c ****  
 893:..\src/command_processing.c ****     
 894:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 895:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6827              		.loc 1 896 0
 6828 0038 D7F87835 		ldr	r3, [r7, #1400]
 6829 003c 03F1A002 		add	r2, r3, #160
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6830              		.loc 1 895 0
 6831 0040 07F58363 		add	r3, r7, #1048
 6832 0044 1A60     		str	r2, [r3]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6833              		.loc 1 897 0
 6834 0046 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6835 004a 1346     		mov	r3, r2
 6836 004c DB00     		lsls	r3, r3, #3
 6837 004e 9B1A     		subs	r3, r3, r2
 6838 0050 1B01     		lsls	r3, r3, #4
 6839 0052 B033     		adds	r3, r3, #176
 6840 0054 D7F87825 		ldr	r2, [r7, #1400]
 6841 0058 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6842              		.loc 1 895 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 163


 6843 005a 07F58363 		add	r3, r7, #1048
 6844 005e 5A60     		str	r2, [r3, #4]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6845              		.loc 1 898 0
 6846 0060 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6847 0064 1346     		mov	r3, r2
 6848 0066 DB00     		lsls	r3, r3, #3
 6849 0068 9B1A     		subs	r3, r3, r2
 6850 006a 1B01     		lsls	r3, r3, #4
 6851 006c B833     		adds	r3, r3, #184
 6852 006e D7F87825 		ldr	r2, [r7, #1400]
 6853 0072 1344     		add	r3, r3, r2
 6854 0074 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6855              		.loc 1 895 0
 6856 0076 07F58363 		add	r3, r7, #1048
 6857 007a 9A60     		str	r2, [r3, #8]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6858              		.loc 1 899 0
 6859 007c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6860 0080 1346     		mov	r3, r2
 6861 0082 DB00     		lsls	r3, r3, #3
 6862 0084 9B1A     		subs	r3, r3, r2
 6863 0086 1B01     		lsls	r3, r3, #4
 6864 0088 E033     		adds	r3, r3, #224
 6865 008a D7F87825 		ldr	r2, [r7, #1400]
 6866 008e 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6867              		.loc 1 895 0
 6868 0090 07F58363 		add	r3, r7, #1048
 6869 0094 DA60     		str	r2, [r3, #12]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6870              		.loc 1 900 0
 6871 0096 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6872 009a 1346     		mov	r3, r2
 6873 009c DB00     		lsls	r3, r3, #3
 6874 009e 9B1A     		subs	r3, r3, r2
 6875 00a0 1B01     		lsls	r3, r3, #4
 6876 00a2 03F58473 		add	r3, r3, #264
 6877 00a6 D7F87825 		ldr	r2, [r7, #1400]
 6878 00aa 1344     		add	r3, r3, r2
 6879 00ac 9A1D     		adds	r2, r3, #6
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6880              		.loc 1 895 0
 6881 00ae 07F58363 		add	r3, r7, #1048
 6882 00b2 1A61     		str	r2, [r3, #16]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6883              		.loc 1 901 0
 6884 00b4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6885 00b8 1346     		mov	r3, r2
 6886 00ba DB00     		lsls	r3, r3, #3
 6887 00bc 9B1A     		subs	r3, r3, r2
 6888 00be 1B01     		lsls	r3, r3, #4
 6889 00c0 03F58473 		add	r3, r3, #264
 6890 00c4 D7F87825 		ldr	r2, [r7, #1400]
 6891 00c8 1344     		add	r3, r3, r2
 6892 00ca DA1D     		adds	r2, r3, #7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 164


 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6893              		.loc 1 895 0
 6894 00cc 07F58363 		add	r3, r7, #1048
 6895 00d0 5A61     		str	r2, [r3, #20]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6896              		.loc 1 902 0
 6897 00d2 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6898 00d6 D7F87815 		ldr	r1, [r7, #1400]
 6899 00da 1346     		mov	r3, r2
 6900 00dc DB00     		lsls	r3, r3, #3
 6901 00de 9B1A     		subs	r3, r3, r2
 6902 00e0 1B01     		lsls	r3, r3, #4
 6903 00e2 0B44     		add	r3, r3, r1
 6904 00e4 03F58873 		add	r3, r3, #272
 6905 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6906 00ea 1A46     		mov	r2, r3
 6907 00ec 1346     		mov	r3, r2
 6908 00ee 5B00     		lsls	r3, r3, #1
 6909 00f0 1344     		add	r3, r3, r2
 6910 00f2 1B01     		lsls	r3, r3, #4
 6911 00f4 03F5C873 		add	r3, r3, #400
 6912 00f8 D7F87825 		ldr	r2, [r7, #1400]
 6913 00fc 1344     		add	r3, r3, r2
 6914 00fe 5A1D     		adds	r2, r3, #5
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6915              		.loc 1 895 0
 6916 0100 07F58363 		add	r3, r7, #1048
 6917 0104 9A61     		str	r2, [r3, #24]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6918              		.loc 1 903 0
 6919 0106 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6920 010a D7F87815 		ldr	r1, [r7, #1400]
 6921 010e 1346     		mov	r3, r2
 6922 0110 DB00     		lsls	r3, r3, #3
 6923 0112 9B1A     		subs	r3, r3, r2
 6924 0114 1B01     		lsls	r3, r3, #4
 6925 0116 0B44     		add	r3, r3, r1
 6926 0118 03F58873 		add	r3, r3, #272
 6927 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6928 011e 1A46     		mov	r2, r3
 6929 0120 1346     		mov	r3, r2
 6930 0122 5B00     		lsls	r3, r3, #1
 6931 0124 1344     		add	r3, r3, r2
 6932 0126 1B01     		lsls	r3, r3, #4
 6933 0128 03F5CC73 		add	r3, r3, #408
 6934 012c D7F87825 		ldr	r2, [r7, #1400]
 6935 0130 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6936              		.loc 1 895 0
 6937 0132 07F58363 		add	r3, r7, #1048
 6938 0136 DA61     		str	r2, [r3, #28]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6939              		.loc 1 904 0
 6940 0138 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6941 013c D7F87815 		ldr	r1, [r7, #1400]
 6942 0140 1346     		mov	r3, r2
 6943 0142 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 165


 6944 0144 9B1A     		subs	r3, r3, r2
 6945 0146 1B01     		lsls	r3, r3, #4
 6946 0148 0B44     		add	r3, r3, r1
 6947 014a 03F58873 		add	r3, r3, #272
 6948 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6949 0150 1A46     		mov	r2, r3
 6950 0152 1346     		mov	r3, r2
 6951 0154 5B00     		lsls	r3, r3, #1
 6952 0156 1344     		add	r3, r3, r2
 6953 0158 1B01     		lsls	r3, r3, #4
 6954 015a 03F5D073 		add	r3, r3, #416
 6955 015e D7F87825 		ldr	r2, [r7, #1400]
 6956 0162 1344     		add	r3, r3, r2
 6957 0164 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6958              		.loc 1 895 0
 6959 0166 07F58363 		add	r3, r7, #1048
 6960 016a 1A62     		str	r2, [r3, #32]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6961              		.loc 1 905 0
 6962 016c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6963 0170 1346     		mov	r3, r2
 6964 0172 DB00     		lsls	r3, r3, #3
 6965 0174 9B1A     		subs	r3, r3, r2
 6966 0176 1B01     		lsls	r3, r3, #4
 6967 0178 E033     		adds	r3, r3, #224
 6968 017a D7F87825 		ldr	r2, [r7, #1400]
 6969 017e 1344     		add	r3, r3, r2
 6970 0180 DA1C     		adds	r2, r3, #3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6971              		.loc 1 895 0
 6972 0182 07F58363 		add	r3, r7, #1048
 6973 0186 5A62     		str	r2, [r3, #36]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6974              		.loc 1 906 0
 6975 0188 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6976 018c 1346     		mov	r3, r2
 6977 018e DB00     		lsls	r3, r3, #3
 6978 0190 9B1A     		subs	r3, r3, r2
 6979 0192 1B01     		lsls	r3, r3, #4
 6980 0194 E033     		adds	r3, r3, #224
 6981 0196 D7F87825 		ldr	r2, [r7, #1400]
 6982 019a 1344     		add	r3, r3, r2
 6983 019c 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6984              		.loc 1 895 0
 6985 019e 07F58363 		add	r3, r7, #1048
 6986 01a2 9A62     		str	r2, [r3, #40]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6987              		.loc 1 907 0
 6988 01a4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 6989 01a8 1346     		mov	r3, r2
 6990 01aa DB00     		lsls	r3, r3, #3
 6991 01ac 9B1A     		subs	r3, r3, r2
 6992 01ae 1B01     		lsls	r3, r3, #4
 6993 01b0 E833     		adds	r3, r3, #232
 6994 01b2 D7F87825 		ldr	r2, [r7, #1400]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 166


 6995 01b6 1344     		add	r3, r3, r2
 6996 01b8 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6997              		.loc 1 895 0
 6998 01ba 07F58363 		add	r3, r7, #1048
 6999 01be DA62     		str	r2, [r3, #44]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7000              		.loc 1 908 0
 7001 01c0 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7002 01c4 1346     		mov	r3, r2
 7003 01c6 DB00     		lsls	r3, r3, #3
 7004 01c8 9B1A     		subs	r3, r3, r2
 7005 01ca 1B01     		lsls	r3, r3, #4
 7006 01cc 03F58473 		add	r3, r3, #264
 7007 01d0 D7F87825 		ldr	r2, [r7, #1400]
 7008 01d4 1344     		add	r3, r3, r2
 7009 01d6 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7010              		.loc 1 895 0
 7011 01d8 07F58363 		add	r3, r7, #1048
 7012 01dc 1A63     		str	r2, [r3, #48]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7013              		.loc 1 909 0
 7014 01de D7F87835 		ldr	r3, [r7, #1400]
 7015 01e2 03F5F872 		add	r2, r3, #496
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7016              		.loc 1 895 0
 7017 01e6 07F58363 		add	r3, r7, #1048
 7018 01ea 5A63     		str	r2, [r3, #52]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7019              		.loc 1 910 0
 7020 01ec D7F87835 		ldr	r3, [r7, #1400]
 7021 01f0 03F5FF72 		add	r2, r3, #510
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7022              		.loc 1 895 0
 7023 01f4 07F58363 		add	r3, r7, #1048
 7024 01f8 9A63     		str	r2, [r3, #56]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7025              		.loc 1 911 0
 7026 01fa D7F87835 		ldr	r3, [r7, #1400]
 7027 01fe 03F5FA72 		add	r2, r3, #500
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7028              		.loc 1 895 0
 7029 0202 07F58363 		add	r3, r7, #1048
 7030 0206 DA63     		str	r2, [r3, #60]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7031              		.loc 1 912 0
 7032 0208 D7F87835 		ldr	r3, [r7, #1400]
 7033 020c 03F5FE72 		add	r2, r3, #508
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7034              		.loc 1 895 0
 7035 0210 07F58363 		add	r3, r7, #1048
 7036 0214 1A64     		str	r2, [r3, #64]
 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7037              		.loc 1 913 0
 7038 0216 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7039 021a D7F87815 		ldr	r1, [r7, #1400]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 167


 7040 021e 1346     		mov	r3, r2
 7041 0220 DB00     		lsls	r3, r3, #3
 7042 0222 9B1A     		subs	r3, r3, r2
 7043 0224 1B01     		lsls	r3, r3, #4
 7044 0226 0B44     		add	r3, r3, r1
 7045 0228 03F58873 		add	r3, r3, #272
 7046 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7047 022e 1A46     		mov	r2, r3
 7048 0230 1346     		mov	r3, r2
 7049 0232 5B00     		lsls	r3, r3, #1
 7050 0234 1344     		add	r3, r3, r2
 7051 0236 1B01     		lsls	r3, r3, #4
 7052 0238 03F5D873 		add	r3, r3, #432
 7053 023c D7F87825 		ldr	r2, [r7, #1400]
 7054 0240 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7055              		.loc 1 895 0
 7056 0242 07F58363 		add	r3, r7, #1048
 7057 0246 5A64     		str	r2, [r3, #68]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7058              		.loc 1 914 0
 7059 0248 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7060 024c D7F87815 		ldr	r1, [r7, #1400]
 7061 0250 1346     		mov	r3, r2
 7062 0252 DB00     		lsls	r3, r3, #3
 7063 0254 9B1A     		subs	r3, r3, r2
 7064 0256 1B01     		lsls	r3, r3, #4
 7065 0258 0B44     		add	r3, r3, r1
 7066 025a 03F58873 		add	r3, r3, #272
 7067 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7068 0260 1A46     		mov	r2, r3
 7069 0262 1346     		mov	r3, r2
 7070 0264 5B00     		lsls	r3, r3, #1
 7071 0266 1344     		add	r3, r3, r2
 7072 0268 1B01     		lsls	r3, r3, #4
 7073 026a 03F5D873 		add	r3, r3, #432
 7074 026e D7F87825 		ldr	r2, [r7, #1400]
 7075 0272 1344     		add	r3, r3, r2
 7076 0274 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7077              		.loc 1 895 0
 7078 0276 07F58363 		add	r3, r7, #1048
 7079 027a 9A64     		str	r2, [r3, #72]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7080              		.loc 1 915 0
 7081 027c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7082 0280 1346     		mov	r3, r2
 7083 0282 DB00     		lsls	r3, r3, #3
 7084 0284 9B1A     		subs	r3, r3, r2
 7085 0286 1B01     		lsls	r3, r3, #4
 7086 0288 E033     		adds	r3, r3, #224
 7087 028a D7F87825 		ldr	r2, [r7, #1400]
 7088 028e 1344     		add	r3, r3, r2
 7089 0290 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7090              		.loc 1 895 0
 7091 0292 07F58363 		add	r3, r7, #1048
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 168


 7092 0296 DA64     		str	r2, [r3, #76]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7093              		.loc 1 916 0
 7094 0298 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7095 029c 1346     		mov	r3, r2
 7096 029e DB00     		lsls	r3, r3, #3
 7097 02a0 9B1A     		subs	r3, r3, r2
 7098 02a2 1B01     		lsls	r3, r3, #4
 7099 02a4 F033     		adds	r3, r3, #240
 7100 02a6 D7F87825 		ldr	r2, [r7, #1400]
 7101 02aa 1344     		add	r3, r3, r2
 7102 02ac 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7103              		.loc 1 895 0
 7104 02ae 07F58363 		add	r3, r7, #1048
 7105 02b2 1A65     		str	r2, [r3, #80]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7106              		.loc 1 917 0
 7107 02b4 D7F87835 		ldr	r3, [r7, #1400]
 7108 02b8 03F1A102 		add	r2, r3, #161
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7109              		.loc 1 895 0
 7110 02bc 07F58363 		add	r3, r7, #1048
 7111 02c0 5A65     		str	r2, [r3, #84]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7112              		.loc 1 918 0
 7113 02c2 D7F87835 		ldr	r3, [r7, #1400]
 7114 02c6 03F52872 		add	r2, r3, #672
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7115              		.loc 1 895 0
 7116 02ca 07F58363 		add	r3, r7, #1048
 7117 02ce 9A65     		str	r2, [r3, #88]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7118              		.loc 1 919 0
 7119 02d0 D7F87835 		ldr	r3, [r7, #1400]
 7120 02d4 03F52972 		add	r2, r3, #676
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7121              		.loc 1 895 0
 7122 02d8 07F58363 		add	r3, r7, #1048
 7123 02dc DA65     		str	r2, [r3, #92]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7124              		.loc 1 920 0
 7125 02de D7F87835 		ldr	r3, [r7, #1400]
 7126 02e2 03F52A72 		add	r2, r3, #680
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7127              		.loc 1 895 0
 7128 02e6 07F58363 		add	r3, r7, #1048
 7129 02ea 1A66     		str	r2, [r3, #96]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7130              		.loc 1 921 0
 7131 02ec D7F87835 		ldr	r3, [r7, #1400]
 7132 02f0 03F52B72 		add	r2, r3, #684
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7133              		.loc 1 895 0
 7134 02f4 07F58363 		add	r3, r7, #1048
 7135 02f8 5A66     		str	r2, [r3, #100]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 169


 7136              		.loc 1 922 0
 7137 02fa D7F87835 		ldr	r3, [r7, #1400]
 7138 02fe 03F2FF12 		addw	r2, r3, #511
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7139              		.loc 1 895 0
 7140 0302 07F58363 		add	r3, r7, #1048
 7141 0306 9A66     		str	r2, [r3, #104]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7142              		.loc 1 923 0
 7143 0308 D7F87835 		ldr	r3, [r7, #1400]
 7144 030c 03F1A702 		add	r2, r3, #167
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7145              		.loc 1 895 0
 7146 0310 07F58363 		add	r3, r7, #1048
 7147 0314 DA66     		str	r2, [r3, #108]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7148              		.loc 1 924 0
 7149 0316 D7F87835 		ldr	r3, [r7, #1400]
 7150 031a 03F50072 		add	r2, r3, #512
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7151              		.loc 1 895 0
 7152 031e 07F58363 		add	r3, r7, #1048
 7153 0322 1A67     		str	r2, [r3, #112]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7154              		.loc 1 925 0
 7155 0324 D7F87835 		ldr	r3, [r7, #1400]
 7156 0328 03F22622 		addw	r2, r3, #550
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7157              		.loc 1 895 0
 7158 032c 07F58363 		add	r3, r7, #1048
 7159 0330 5A67     		str	r2, [r3, #116]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7160              		.loc 1 926 0
 7161 0332 D7F87835 		ldr	r3, [r7, #1400]
 7162 0336 03F1A802 		add	r2, r3, #168
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7163              		.loc 1 895 0
 7164 033a 07F58363 		add	r3, r7, #1048
 7165 033e 9A67     		str	r2, [r3, #120]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7166              		.loc 1 927 0
 7167 0340 D7F87835 		ldr	r3, [r7, #1400]
 7168 0344 03F50872 		add	r2, r3, #544
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7169              		.loc 1 895 0
 7170 0348 07F58363 		add	r3, r7, #1048
 7171 034c DA67     		str	r2, [r3, #124]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7172              		.loc 1 928 0
 7173 034e D7F87835 		ldr	r3, [r7, #1400]
 7174 0352 03F20122 		addw	r2, r3, #513
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7175              		.loc 1 895 0
 7176 0356 07F58363 		add	r3, r7, #1048
 7177 035a C3F88020 		str	r2, [r3, #128]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7178              		.loc 1 929 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 170


 7179 035e D7F87835 		ldr	r3, [r7, #1400]
 7180 0362 03F20222 		addw	r2, r3, #514
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7181              		.loc 1 895 0
 7182 0366 07F58363 		add	r3, r7, #1048
 7183 036a C3F88420 		str	r2, [r3, #132]
 930:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7184              		.loc 1 930 0
 7185 036e D7F87835 		ldr	r3, [r7, #1400]
 7186 0372 03F1AB02 		add	r2, r3, #171
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7187              		.loc 1 895 0
 7188 0376 07F58363 		add	r3, r7, #1048
 7189 037a C3F88820 		str	r2, [r3, #136]
 931:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7190              		.loc 1 931 0
 7191 037e D7F87835 		ldr	r3, [r7, #1400]
 7192 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7193 0386 1233     		adds	r3, r3, #18
 7194 0388 5B01     		lsls	r3, r3, #5
 7195 038a D7F87825 		ldr	r2, [r7, #1400]
 7196 038e 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7197              		.loc 1 895 0
 7198 0390 07F58363 		add	r3, r7, #1048
 7199 0394 C3F88C20 		str	r2, [r3, #140]
 932:..\src/command_processing.c ****         
 933:..\src/command_processing.c ****         // GENERIC PARAMS
 934:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 7200              		.loc 1 934 0
 7201 0398 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7202 039c 1346     		mov	r3, r2
 7203 039e DB00     		lsls	r3, r3, #3
 7204 03a0 9B1A     		subs	r3, r3, r2
 7205 03a2 1B01     		lsls	r3, r3, #4
 7206 03a4 03F58873 		add	r3, r3, #272
 7207 03a8 D7F87825 		ldr	r2, [r7, #1400]
 7208 03ac 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7209              		.loc 1 895 0
 7210 03ae 07F58363 		add	r3, r7, #1048
 7211 03b2 C3F89020 		str	r2, [r3, #144]
 935:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7212              		.loc 1 935 0
 7213 03b6 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7214 03ba 1346     		mov	r3, r2
 7215 03bc DB00     		lsls	r3, r3, #3
 7216 03be 9B1A     		subs	r3, r3, r2
 7217 03c0 1B01     		lsls	r3, r3, #4
 7218 03c2 E033     		adds	r3, r3, #224
 7219 03c4 D7F87825 		ldr	r2, [r7, #1400]
 7220 03c8 1344     		add	r3, r3, r2
 7221 03ca 9A1C     		adds	r2, r3, #2
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7222              		.loc 1 895 0
 7223 03cc 07F58363 		add	r3, r7, #1048
 7224 03d0 C3F89420 		str	r2, [r3, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 171


 936:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7225              		.loc 1 936 0
 7226 03d4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7227 03d8 1346     		mov	r3, r2
 7228 03da DB00     		lsls	r3, r3, #3
 7229 03dc 9B1A     		subs	r3, r3, r2
 7230 03de 1B01     		lsls	r3, r3, #4
 7231 03e0 03F58873 		add	r3, r3, #272
 7232 03e4 D7F87825 		ldr	r2, [r7, #1400]
 7233 03e8 1344     		add	r3, r3, r2
 7234 03ea 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7235              		.loc 1 895 0
 7236 03ec 07F58363 		add	r3, r7, #1048
 7237 03f0 C3F89820 		str	r2, [r3, #152]
 937:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7238              		.loc 1 937 0
 7239 03f4 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7240 03f8 1346     		mov	r3, r2
 7241 03fa DB00     		lsls	r3, r3, #3
 7242 03fc 9B1A     		subs	r3, r3, r2
 7243 03fe 1B01     		lsls	r3, r3, #4
 7244 0400 03F58873 		add	r3, r3, #272
 7245 0404 D7F87825 		ldr	r2, [r7, #1400]
 7246 0408 1344     		add	r3, r3, r2
 7247 040a 9A1C     		adds	r2, r3, #2
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7248              		.loc 1 895 0
 7249 040c 07F58363 		add	r3, r7, #1048
 7250 0410 C3F89C20 		str	r2, [r3, #156]
 938:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7251              		.loc 1 938 0
 7252 0414 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 7253 0418 D7F87815 		ldr	r1, [r7, #1400]
 7254 041c 1346     		mov	r3, r2
 7255 041e DB00     		lsls	r3, r3, #3
 7256 0420 9B1A     		subs	r3, r3, r2
 7257 0422 1B01     		lsls	r3, r3, #4
 7258 0424 0B44     		add	r3, r3, r1
 7259 0426 03F58873 		add	r3, r3, #272
 7260 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7261 042c 1A46     		mov	r2, r3
 7262 042e 1346     		mov	r3, r2
 7263 0430 5B00     		lsls	r3, r3, #1
 7264 0432 1344     		add	r3, r3, r2
 7265 0434 1B01     		lsls	r3, r3, #4
 7266 0436 03F5D873 		add	r3, r3, #432
 7267 043a D7F87825 		ldr	r2, [r7, #1400]
 7268 043e 1344     		add	r3, r3, r2
 7269 0440 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7270              		.loc 1 895 0
 7271 0442 07F58363 		add	r3, r7, #1048
 7272 0446 C3F8A020 		str	r2, [r3, #160]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7273              		.loc 1 939 0
 7274 044a 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 172


 7275 044e D7F87815 		ldr	r1, [r7, #1400]
 7276 0452 1346     		mov	r3, r2
 7277 0454 DB00     		lsls	r3, r3, #3
 7278 0456 9B1A     		subs	r3, r3, r2
 7279 0458 1B01     		lsls	r3, r3, #4
 7280 045a 0B44     		add	r3, r3, r1
 7281 045c 03F58873 		add	r3, r3, #272
 7282 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7283 0462 1A46     		mov	r2, r3
 7284 0464 1346     		mov	r3, r2
 7285 0466 5B00     		lsls	r3, r3, #1
 7286 0468 1344     		add	r3, r3, r2
 7287 046a 1B01     		lsls	r3, r3, #4
 7288 046c 03F5D873 		add	r3, r3, #432
 7289 0470 D7F87825 		ldr	r2, [r7, #1400]
 7290 0474 1344     		add	r3, r3, r2
 7291 0476 5A1D     		adds	r2, r3, #5
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7292              		.loc 1 895 0
 7293 0478 07F58363 		add	r3, r7, #1048
 7294 047c C3F8A420 		str	r2, [r3, #164]
 940:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7295              		.loc 1 940 0
 7296 0480 D7F87835 		ldr	r3, [r7, #1400]
 7297 0484 03F1A902 		add	r2, r3, #169
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7298              		.loc 1 895 0
 7299 0488 07F58363 		add	r3, r7, #1048
 7300 048c C3F8A820 		str	r2, [r3, #168]
 941:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7301              		.loc 1 941 0
 7302 0490 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7303 0494 1346     		mov	r3, r2
 7304 0496 DB00     		lsls	r3, r3, #3
 7305 0498 9B1A     		subs	r3, r3, r2
 7306 049a 1B01     		lsls	r3, r3, #4
 7307 049c B033     		adds	r3, r3, #176
 7308 049e D7F87825 		ldr	r2, [r7, #1400]
 7309 04a2 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7310              		.loc 1 895 0
 7311 04a4 07F58363 		add	r3, r7, #1048
 7312 04a8 C3F8AC20 		str	r2, [r3, #172]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7313              		.loc 1 942 0
 7314 04ac 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7315 04b0 1346     		mov	r3, r2
 7316 04b2 DB00     		lsls	r3, r3, #3
 7317 04b4 9B1A     		subs	r3, r3, r2
 7318 04b6 1B01     		lsls	r3, r3, #4
 7319 04b8 B833     		adds	r3, r3, #184
 7320 04ba D7F87825 		ldr	r2, [r7, #1400]
 7321 04be 1344     		add	r3, r3, r2
 7322 04c0 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7323              		.loc 1 895 0
 7324 04c2 07F58363 		add	r3, r7, #1048
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 173


 7325 04c6 C3F8B020 		str	r2, [r3, #176]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7326              		.loc 1 943 0
 7327 04ca 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7328 04ce 1346     		mov	r3, r2
 7329 04d0 DB00     		lsls	r3, r3, #3
 7330 04d2 9B1A     		subs	r3, r3, r2
 7331 04d4 1B01     		lsls	r3, r3, #4
 7332 04d6 E033     		adds	r3, r3, #224
 7333 04d8 D7F87825 		ldr	r2, [r7, #1400]
 7334 04dc 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7335              		.loc 1 895 0
 7336 04de 07F58363 		add	r3, r7, #1048
 7337 04e2 C3F8B420 		str	r2, [r3, #180]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7338              		.loc 1 944 0
 7339 04e6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7340 04ea 1346     		mov	r3, r2
 7341 04ec DB00     		lsls	r3, r3, #3
 7342 04ee 9B1A     		subs	r3, r3, r2
 7343 04f0 1B01     		lsls	r3, r3, #4
 7344 04f2 03F58473 		add	r3, r3, #264
 7345 04f6 D7F87825 		ldr	r2, [r7, #1400]
 7346 04fa 1344     		add	r3, r3, r2
 7347 04fc 9A1D     		adds	r2, r3, #6
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7348              		.loc 1 895 0
 7349 04fe 07F58363 		add	r3, r7, #1048
 7350 0502 C3F8B820 		str	r2, [r3, #184]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7351              		.loc 1 945 0
 7352 0506 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7353 050a 1346     		mov	r3, r2
 7354 050c DB00     		lsls	r3, r3, #3
 7355 050e 9B1A     		subs	r3, r3, r2
 7356 0510 1B01     		lsls	r3, r3, #4
 7357 0512 03F58473 		add	r3, r3, #264
 7358 0516 D7F87825 		ldr	r2, [r7, #1400]
 7359 051a 1344     		add	r3, r3, r2
 7360 051c DA1D     		adds	r2, r3, #7
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7361              		.loc 1 895 0
 7362 051e 07F58363 		add	r3, r7, #1048
 7363 0522 C3F8BC20 		str	r2, [r3, #188]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7364              		.loc 1 946 0
 7365 0526 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7366 052a D7F87815 		ldr	r1, [r7, #1400]
 7367 052e 1346     		mov	r3, r2
 7368 0530 DB00     		lsls	r3, r3, #3
 7369 0532 9B1A     		subs	r3, r3, r2
 7370 0534 1B01     		lsls	r3, r3, #4
 7371 0536 0B44     		add	r3, r3, r1
 7372 0538 03F58873 		add	r3, r3, #272
 7373 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7374 053e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 174


 7375 0540 1346     		mov	r3, r2
 7376 0542 5B00     		lsls	r3, r3, #1
 7377 0544 1344     		add	r3, r3, r2
 7378 0546 1B01     		lsls	r3, r3, #4
 7379 0548 03F5C873 		add	r3, r3, #400
 7380 054c D7F87825 		ldr	r2, [r7, #1400]
 7381 0550 1344     		add	r3, r3, r2
 7382 0552 5A1D     		adds	r2, r3, #5
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7383              		.loc 1 895 0
 7384 0554 07F58363 		add	r3, r7, #1048
 7385 0558 C3F8C020 		str	r2, [r3, #192]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7386              		.loc 1 947 0
 7387 055c 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7388 0560 D7F87815 		ldr	r1, [r7, #1400]
 7389 0564 1346     		mov	r3, r2
 7390 0566 DB00     		lsls	r3, r3, #3
 7391 0568 9B1A     		subs	r3, r3, r2
 7392 056a 1B01     		lsls	r3, r3, #4
 7393 056c 0B44     		add	r3, r3, r1
 7394 056e 03F58873 		add	r3, r3, #272
 7395 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7396 0574 1A46     		mov	r2, r3
 7397 0576 1346     		mov	r3, r2
 7398 0578 5B00     		lsls	r3, r3, #1
 7399 057a 1344     		add	r3, r3, r2
 7400 057c 1B01     		lsls	r3, r3, #4
 7401 057e 03F5CC73 		add	r3, r3, #408
 7402 0582 D7F87825 		ldr	r2, [r7, #1400]
 7403 0586 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7404              		.loc 1 895 0
 7405 0588 07F58363 		add	r3, r7, #1048
 7406 058c C3F8C420 		str	r2, [r3, #196]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7407              		.loc 1 948 0
 7408 0590 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7409 0594 D7F87815 		ldr	r1, [r7, #1400]
 7410 0598 1346     		mov	r3, r2
 7411 059a DB00     		lsls	r3, r3, #3
 7412 059c 9B1A     		subs	r3, r3, r2
 7413 059e 1B01     		lsls	r3, r3, #4
 7414 05a0 0B44     		add	r3, r3, r1
 7415 05a2 03F58873 		add	r3, r3, #272
 7416 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7417 05a8 1A46     		mov	r2, r3
 7418 05aa 1346     		mov	r3, r2
 7419 05ac 5B00     		lsls	r3, r3, #1
 7420 05ae 1344     		add	r3, r3, r2
 7421 05b0 1B01     		lsls	r3, r3, #4
 7422 05b2 03F5D073 		add	r3, r3, #416
 7423 05b6 D7F87825 		ldr	r2, [r7, #1400]
 7424 05ba 1344     		add	r3, r3, r2
 7425 05bc 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7426              		.loc 1 895 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 175


 7427 05be 07F58363 		add	r3, r7, #1048
 7428 05c2 C3F8C820 		str	r2, [r3, #200]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7429              		.loc 1 949 0
 7430 05c6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7431 05ca 1346     		mov	r3, r2
 7432 05cc DB00     		lsls	r3, r3, #3
 7433 05ce 9B1A     		subs	r3, r3, r2
 7434 05d0 1B01     		lsls	r3, r3, #4
 7435 05d2 E033     		adds	r3, r3, #224
 7436 05d4 D7F87825 		ldr	r2, [r7, #1400]
 7437 05d8 1344     		add	r3, r3, r2
 7438 05da DA1C     		adds	r2, r3, #3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7439              		.loc 1 895 0
 7440 05dc 07F58363 		add	r3, r7, #1048
 7441 05e0 C3F8CC20 		str	r2, [r3, #204]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7442              		.loc 1 950 0
 7443 05e4 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7444 05e8 1346     		mov	r3, r2
 7445 05ea DB00     		lsls	r3, r3, #3
 7446 05ec 9B1A     		subs	r3, r3, r2
 7447 05ee 1B01     		lsls	r3, r3, #4
 7448 05f0 E033     		adds	r3, r3, #224
 7449 05f2 D7F87825 		ldr	r2, [r7, #1400]
 7450 05f6 1344     		add	r3, r3, r2
 7451 05f8 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7452              		.loc 1 895 0
 7453 05fa 07F58363 		add	r3, r7, #1048
 7454 05fe C3F8D020 		str	r2, [r3, #208]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7455              		.loc 1 951 0
 7456 0602 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7457 0606 1346     		mov	r3, r2
 7458 0608 DB00     		lsls	r3, r3, #3
 7459 060a 9B1A     		subs	r3, r3, r2
 7460 060c 1B01     		lsls	r3, r3, #4
 7461 060e E833     		adds	r3, r3, #232
 7462 0610 D7F87825 		ldr	r2, [r7, #1400]
 7463 0614 1344     		add	r3, r3, r2
 7464 0616 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7465              		.loc 1 895 0
 7466 0618 07F58363 		add	r3, r7, #1048
 7467 061c C3F8D420 		str	r2, [r3, #212]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7468              		.loc 1 952 0
 7469 0620 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7470 0624 1346     		mov	r3, r2
 7471 0626 DB00     		lsls	r3, r3, #3
 7472 0628 9B1A     		subs	r3, r3, r2
 7473 062a 1B01     		lsls	r3, r3, #4
 7474 062c 03F58473 		add	r3, r3, #264
 7475 0630 D7F87825 		ldr	r2, [r7, #1400]
 7476 0634 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 176


 7477 0636 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7478              		.loc 1 895 0
 7479 0638 07F58363 		add	r3, r7, #1048
 7480 063c C3F8D820 		str	r2, [r3, #216]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7481              		.loc 1 953 0
 7482 0640 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7483 0644 D7F87815 		ldr	r1, [r7, #1400]
 7484 0648 1346     		mov	r3, r2
 7485 064a DB00     		lsls	r3, r3, #3
 7486 064c 9B1A     		subs	r3, r3, r2
 7487 064e 1B01     		lsls	r3, r3, #4
 7488 0650 0B44     		add	r3, r3, r1
 7489 0652 03F58873 		add	r3, r3, #272
 7490 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7491 0658 1A46     		mov	r2, r3
 7492 065a 1346     		mov	r3, r2
 7493 065c 5B00     		lsls	r3, r3, #1
 7494 065e 1344     		add	r3, r3, r2
 7495 0660 1B01     		lsls	r3, r3, #4
 7496 0662 03F5D873 		add	r3, r3, #432
 7497 0666 D7F87825 		ldr	r2, [r7, #1400]
 7498 066a 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7499              		.loc 1 895 0
 7500 066c 07F58363 		add	r3, r7, #1048
 7501 0670 C3F8DC20 		str	r2, [r3, #220]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7502              		.loc 1 954 0
 7503 0674 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7504 0678 D7F87815 		ldr	r1, [r7, #1400]
 7505 067c 1346     		mov	r3, r2
 7506 067e DB00     		lsls	r3, r3, #3
 7507 0680 9B1A     		subs	r3, r3, r2
 7508 0682 1B01     		lsls	r3, r3, #4
 7509 0684 0B44     		add	r3, r3, r1
 7510 0686 03F58873 		add	r3, r3, #272
 7511 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7512 068c 1A46     		mov	r2, r3
 7513 068e 1346     		mov	r3, r2
 7514 0690 5B00     		lsls	r3, r3, #1
 7515 0692 1344     		add	r3, r3, r2
 7516 0694 1B01     		lsls	r3, r3, #4
 7517 0696 03F5D873 		add	r3, r3, #432
 7518 069a D7F87825 		ldr	r2, [r7, #1400]
 7519 069e 1344     		add	r3, r3, r2
 7520 06a0 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7521              		.loc 1 895 0
 7522 06a2 07F58363 		add	r3, r7, #1048
 7523 06a6 C3F8E020 		str	r2, [r3, #224]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7524              		.loc 1 955 0
 7525 06aa 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7526 06ae 1346     		mov	r3, r2
 7527 06b0 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 177


 7528 06b2 9B1A     		subs	r3, r3, r2
 7529 06b4 1B01     		lsls	r3, r3, #4
 7530 06b6 E033     		adds	r3, r3, #224
 7531 06b8 D7F87825 		ldr	r2, [r7, #1400]
 7532 06bc 1344     		add	r3, r3, r2
 7533 06be 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7534              		.loc 1 895 0
 7535 06c0 07F58363 		add	r3, r7, #1048
 7536 06c4 C3F8E420 		str	r2, [r3, #228]
 956:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7537              		.loc 1 956 0
 7538 06c8 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7539 06cc 1346     		mov	r3, r2
 7540 06ce DB00     		lsls	r3, r3, #3
 7541 06d0 9B1A     		subs	r3, r3, r2
 7542 06d2 1B01     		lsls	r3, r3, #4
 7543 06d4 F033     		adds	r3, r3, #240
 7544 06d6 D7F87825 		ldr	r2, [r7, #1400]
 7545 06da 1344     		add	r3, r3, r2
 7546 06dc 1A1D     		adds	r2, r3, #4
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7547              		.loc 1 895 0
 7548 06de 07F58363 		add	r3, r7, #1048
 7549 06e2 C3F8E820 		str	r2, [r3, #232]
 957:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7550              		.loc 1 957 0
 7551 06e6 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7552 06ea 1346     		mov	r3, r2
 7553 06ec DB00     		lsls	r3, r3, #3
 7554 06ee 9B1A     		subs	r3, r3, r2
 7555 06f0 1B01     		lsls	r3, r3, #4
 7556 06f2 03F58873 		add	r3, r3, #272
 7557 06f6 D7F87825 		ldr	r2, [r7, #1400]
 7558 06fa 1A44     		add	r2, r2, r3
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7559              		.loc 1 895 0
 7560 06fc 07F58363 		add	r3, r7, #1048
 7561 0700 C3F8EC20 		str	r2, [r3, #236]
 958:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7562              		.loc 1 958 0
 7563 0704 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7564 0708 1346     		mov	r3, r2
 7565 070a DB00     		lsls	r3, r3, #3
 7566 070c 9B1A     		subs	r3, r3, r2
 7567 070e 1B01     		lsls	r3, r3, #4
 7568 0710 E033     		adds	r3, r3, #224
 7569 0712 D7F87825 		ldr	r2, [r7, #1400]
 7570 0716 1344     		add	r3, r3, r2
 7571 0718 9A1C     		adds	r2, r3, #2
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7572              		.loc 1 895 0
 7573 071a 07F58363 		add	r3, r7, #1048
 7574 071e C3F8F020 		str	r2, [r3, #240]
 959:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7575              		.loc 1 959 0
 7576 0722 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 178


 7577 0726 1346     		mov	r3, r2
 7578 0728 DB00     		lsls	r3, r3, #3
 7579 072a 9B1A     		subs	r3, r3, r2
 7580 072c 1B01     		lsls	r3, r3, #4
 7581 072e 03F58873 		add	r3, r3, #272
 7582 0732 D7F87825 		ldr	r2, [r7, #1400]
 7583 0736 1344     		add	r3, r3, r2
 7584 0738 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7585              		.loc 1 895 0
 7586 073a 07F58363 		add	r3, r7, #1048
 7587 073e C3F8F420 		str	r2, [r3, #244]
 960:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7588              		.loc 1 960 0
 7589 0742 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7590 0746 1346     		mov	r3, r2
 7591 0748 DB00     		lsls	r3, r3, #3
 7592 074a 9B1A     		subs	r3, r3, r2
 7593 074c 1B01     		lsls	r3, r3, #4
 7594 074e 03F58873 		add	r3, r3, #272
 7595 0752 D7F87825 		ldr	r2, [r7, #1400]
 7596 0756 1344     		add	r3, r3, r2
 7597 0758 9A1C     		adds	r2, r3, #2
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7598              		.loc 1 895 0
 7599 075a 07F58363 		add	r3, r7, #1048
 7600 075e C3F8F820 		str	r2, [r3, #248]
 961:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7601              		.loc 1 961 0
 7602 0762 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7603 0766 D7F87815 		ldr	r1, [r7, #1400]
 7604 076a 1346     		mov	r3, r2
 7605 076c DB00     		lsls	r3, r3, #3
 7606 076e 9B1A     		subs	r3, r3, r2
 7607 0770 1B01     		lsls	r3, r3, #4
 7608 0772 0B44     		add	r3, r3, r1
 7609 0774 03F58873 		add	r3, r3, #272
 7610 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7611 077a 1A46     		mov	r2, r3
 7612 077c 1346     		mov	r3, r2
 7613 077e 5B00     		lsls	r3, r3, #1
 7614 0780 1344     		add	r3, r3, r2
 7615 0782 1B01     		lsls	r3, r3, #4
 7616 0784 03F5D873 		add	r3, r3, #432
 7617 0788 D7F87825 		ldr	r2, [r7, #1400]
 7618 078c 1344     		add	r3, r3, r2
 7619 078e 5A1C     		adds	r2, r3, #1
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7620              		.loc 1 895 0
 7621 0790 07F58363 		add	r3, r7, #1048
 7622 0794 C3F8FC20 		str	r2, [r3, #252]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7623              		.loc 1 962 0
 7624 0798 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 7625 079c D7F87815 		ldr	r1, [r7, #1400]
 7626 07a0 1346     		mov	r3, r2
 7627 07a2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 179


 7628 07a4 9B1A     		subs	r3, r3, r2
 7629 07a6 1B01     		lsls	r3, r3, #4
 7630 07a8 0B44     		add	r3, r3, r1
 7631 07aa 03F58873 		add	r3, r3, #272
 7632 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7633 07b0 1A46     		mov	r2, r3
 7634 07b2 1346     		mov	r3, r2
 7635 07b4 5B00     		lsls	r3, r3, #1
 7636 07b6 1344     		add	r3, r3, r2
 7637 07b8 1B01     		lsls	r3, r3, #4
 7638 07ba 03F5D873 		add	r3, r3, #432
 7639 07be D7F87825 		ldr	r2, [r7, #1400]
 7640 07c2 1344     		add	r3, r3, r2
 7641 07c4 5A1D     		adds	r2, r3, #5
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7642              		.loc 1 895 0
 7643 07c6 07F58363 		add	r3, r7, #1048
 7644 07ca C3F80021 		str	r2, [r3, #256]
 963:..\src/command_processing.c ****         
 964:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7645              		.loc 1 964 0
 7646 07ce D7F87835 		ldr	r3, [r7, #1400]
 7647 07d2 03F5C872 		add	r2, r3, #400
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7648              		.loc 1 895 0
 7649 07d6 07F58363 		add	r3, r7, #1048
 7650 07da C3F80421 		str	r2, [r3, #260]
 965:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7651              		.loc 1 965 0
 7652 07de D7F87835 		ldr	r3, [r7, #1400]
 7653 07e2 03F5E072 		add	r2, r3, #448
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7654              		.loc 1 895 0
 7655 07e6 07F58363 		add	r3, r7, #1048
 7656 07ea C3F80821 		str	r2, [r3, #264]
 966:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7657              		.loc 1 966 0
 7658 07ee D7F87835 		ldr	r3, [r7, #1400]
 7659 07f2 03F22722 		addw	r2, r3, #551
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7660              		.loc 1 895 0
 7661 07f6 07F58363 		add	r3, r7, #1048
 7662 07fa C3F80C21 		str	r2, [r3, #268]
 967:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7663              		.loc 1 967 0
 7664 07fe D7F87835 		ldr	r3, [r7, #1400]
 7665 0802 03F50A72 		add	r2, r3, #552
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7666              		.loc 1 895 0
 7667 0806 07F58363 		add	r3, r7, #1048
 7668 080a C3F81021 		str	r2, [r3, #272]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7669              		.loc 1 968 0
 7670 080e D7F87835 		ldr	r3, [r7, #1400]
 7671 0812 03F22E22 		addw	r2, r3, #558
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7672              		.loc 1 895 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 180


 7673 0816 07F58363 		add	r3, r7, #1048
 7674 081a C3F81421 		str	r2, [r3, #276]
 969:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7675              		.loc 1 969 0
 7676 081e D7F87835 		ldr	r3, [r7, #1400]
 7677 0822 03F52C72 		add	r2, r3, #688
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7678              		.loc 1 895 0
 7679 0826 07F58363 		add	r3, r7, #1048
 7680 082a C3F81821 		str	r2, [r3, #280]
 970:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7681              		.loc 1 970 0
 7682 082e D7F87835 		ldr	r3, [r7, #1400]
 7683 0832 03F2B222 		addw	r2, r3, #690
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7684              		.loc 1 895 0
 7685 0836 07F58363 		add	r3, r7, #1048
 7686 083a C3F81C21 		str	r2, [r3, #284]
 971:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7687              		.loc 1 971 0
 7688 083e D7F87835 		ldr	r3, [r7, #1400]
 7689 0842 03F52D72 		add	r2, r3, #692
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7690              		.loc 1 895 0
 7691 0846 07F58363 		add	r3, r7, #1048
 7692 084a C3F82021 		str	r2, [r3, #288]
 972:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7693              		.loc 1 972 0
 7694 084e D7F87835 		ldr	r3, [r7, #1400]
 7695 0852 03F1AC02 		add	r2, r3, #172
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7696              		.loc 1 895 0
 7697 0856 07F58363 		add	r3, r7, #1048
 7698 085a C3F82421 		str	r2, [r3, #292]
 973:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7699              		.loc 1 973 0
 7700 085e D7F87835 		ldr	r3, [r7, #1400]
 7701 0862 03F53872 		add	r2, r3, #736
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7702              		.loc 1 895 0
 7703 0866 07F58363 		add	r3, r7, #1048
 7704 086a C3F82821 		str	r2, [r3, #296]
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7705              		.loc 1 974 0
 7706 086e D7F87835 		ldr	r3, [r7, #1400]
 7707 0872 03F2E222 		addw	r2, r3, #738
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7708              		.loc 1 895 0
 7709 0876 07F58363 		add	r3, r7, #1048
 7710 087a C3F82C21 		str	r2, [r3, #300]
 975:..\src/command_processing.c ****         
 976:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7711              		.loc 1 976 0
 7712 087e D7F87835 		ldr	r3, [r7, #1400]
 7713 0882 03F2E622 		addw	r2, r3, #742
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7714              		.loc 1 895 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 181


 7715 0886 07F58363 		add	r3, r7, #1048
 7716 088a C3F83021 		str	r2, [r3, #304]
 977:..\src/command_processing.c ****         
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7717              		.loc 1 978 0
 7718 088e D7F87835 		ldr	r3, [r7, #1400]
 7719 0892 03F53072 		add	r2, r3, #704
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7720              		.loc 1 895 0
 7721 0896 07F58363 		add	r3, r7, #1048
 7722 089a C3F83421 		str	r2, [r3, #308]
 979:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7723              		.loc 1 979 0
 7724 089e D7F87835 		ldr	r3, [r7, #1400]
 7725 08a2 03F2C122 		addw	r2, r3, #705
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7726              		.loc 1 895 0
 7727 08a6 07F58363 		add	r3, r7, #1048
 7728 08aa C3F83821 		str	r2, [r3, #312]
 980:..\src/command_processing.c ****         
 981:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7729              		.loc 1 981 0
 7730 08ae D7F87835 		ldr	r3, [r7, #1400]
 7731 08b2 03F53472 		add	r2, r3, #720
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7732              		.loc 1 895 0
 7733 08b6 07F58363 		add	r3, r7, #1048
 7734 08ba C3F83C21 		str	r2, [r3, #316]
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7735              		.loc 1 982 0
 7736 08be D7F87835 		ldr	r3, [r7, #1400]
 7737 08c2 03F53572 		add	r2, r3, #724
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7738              		.loc 1 895 0
 7739 08c6 07F58363 		add	r3, r7, #1048
 7740 08ca C3F84021 		str	r2, [r3, #320]
 983:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7741              		.loc 1 983 0
 7742 08ce D7F87835 		ldr	r3, [r7, #1400]
 7743 08d2 03F53672 		add	r2, r3, #728
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7744              		.loc 1 895 0
 7745 08d6 07F58363 		add	r3, r7, #1048
 7746 08da C3F84421 		str	r2, [r3, #324]
 984:..\src/command_processing.c ****         
 985:..\src/command_processing.c **** 
 986:..\src/command_processing.c ****     };
 987:..\src/command_processing.c ****     
 988:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7747              		.loc 1 988 0
 7748 08de 07F57173 		add	r3, r7, #964
 7749 08e2 F54A     		ldr	r2, .L371
 7750 08e4 1846     		mov	r0, r3
 7751 08e6 1146     		mov	r1, r2
 7752 08e8 5223     		movs	r3, #82
 7753 08ea 1A46     		mov	r2, r3
 7754 08ec FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 182


 989:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 990:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 991:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 992:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 993:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 994:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 995:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 996:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 997:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 998:..\src/command_processing.c ****         
 999:..\src/command_processing.c ****         // GENERIC PARAMS
1000:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1001:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1002:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1003:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1004:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1005:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1006:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1007:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1008:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_UINT16, TYPE_INT16,
1009:..\src/command_processing.c ****         TYPE_UINT16, TYPE_FLAG, TYPE_FLAG, TYPE_UINT16,
1010:..\src/command_processing.c ****         
1011:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT32,
1012:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLOAT
1013:..\src/command_processing.c ****     };
1014:..\src/command_processing.c **** 
1015:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7755              		.loc 1 1015 0
 7756 08f0 07F55C73 		add	r3, r7, #880
 7757 08f4 0122     		movs	r2, #1
 7758 08f6 1A70     		strb	r2, [r3]
 7759 08f8 07F55C73 		add	r3, r7, #880
 7760 08fc 0322     		movs	r2, #3
 7761 08fe 5A70     		strb	r2, [r3, #1]
 7762 0900 07F55C73 		add	r3, r7, #880
 7763 0904 0322     		movs	r2, #3
 7764 0906 9A70     		strb	r2, [r3, #2]
 7765 0908 07F55C73 		add	r3, r7, #880
 7766 090c 0122     		movs	r2, #1
 7767 090e DA70     		strb	r2, [r3, #3]
 7768 0910 07F55C73 		add	r3, r7, #880
 7769 0914 0122     		movs	r2, #1
 7770 0916 1A71     		strb	r2, [r3, #4]
 7771 0918 07F55C73 		add	r3, r7, #880
 7772 091c 0122     		movs	r2, #1
 7773 091e 5A71     		strb	r2, [r3, #5]
 7774 0920 07F55C73 		add	r3, r7, #880
 7775 0924 0322     		movs	r2, #3
 7776 0926 9A71     		strb	r2, [r3, #6]
 7777 0928 07F55C73 		add	r3, r7, #880
 7778 092c 0322     		movs	r2, #3
 7779 092e DA71     		strb	r2, [r3, #7]
 7780 0930 07F55C73 		add	r3, r7, #880
 7781 0934 0322     		movs	r2, #3
 7782 0936 1A72     		strb	r2, [r3, #8]
 7783 0938 07F55C73 		add	r3, r7, #880
 7784 093c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 183


 7785 093e 5A72     		strb	r2, [r3, #9]
 7786 0940 07F55C73 		add	r3, r7, #880
 7787 0944 0222     		movs	r2, #2
 7788 0946 9A72     		strb	r2, [r3, #10]
 7789 0948 07F55C73 		add	r3, r7, #880
 7790 094c 0222     		movs	r2, #2
 7791 094e DA72     		strb	r2, [r3, #11]
 7792 0950 07F55C73 		add	r3, r7, #880
 7793 0954 0122     		movs	r2, #1
 7794 0956 1A73     		strb	r2, [r3, #12]
 7795 0958 07F55C73 		add	r3, r7, #880
 7796 095c 0222     		movs	r2, #2
 7797 095e 5A73     		strb	r2, [r3, #13]
 7798 0960 07F55C73 		add	r3, r7, #880
 7799 0964 0122     		movs	r2, #1
 7800 0966 9A73     		strb	r2, [r3, #14]
 7801 0968 07F55C73 		add	r3, r7, #880
 7802 096c 0222     		movs	r2, #2
 7803 096e DA73     		strb	r2, [r3, #15]
 7804 0970 07F55C73 		add	r3, r7, #880
 7805 0974 0222     		movs	r2, #2
 7806 0976 1A74     		strb	r2, [r3, #16]
 7807 0978 07F55C73 		add	r3, r7, #880
 7808 097c 0122     		movs	r2, #1
 7809 097e 5A74     		strb	r2, [r3, #17]
 7810 0980 07F55C73 		add	r3, r7, #880
 7811 0984 0122     		movs	r2, #1
 7812 0986 9A74     		strb	r2, [r3, #18]
 7813 0988 07F55C73 		add	r3, r7, #880
 7814 098c 0122     		movs	r2, #1
 7815 098e DA74     		strb	r2, [r3, #19]
 7816 0990 07F55C73 		add	r3, r7, #880
 7817 0994 0622     		movs	r2, #6
 7818 0996 1A75     		strb	r2, [r3, #20]
 7819 0998 07F55C73 		add	r3, r7, #880
 7820 099c 0322     		movs	r2, #3
 7821 099e 5A75     		strb	r2, [r3, #21]
 7822 09a0 07F55C73 		add	r3, r7, #880
 7823 09a4 0122     		movs	r2, #1
 7824 09a6 9A75     		strb	r2, [r3, #22]
 7825 09a8 07F55C73 		add	r3, r7, #880
 7826 09ac 0122     		movs	r2, #1
 7827 09ae DA75     		strb	r2, [r3, #23]
 7828 09b0 07F55C73 		add	r3, r7, #880
 7829 09b4 0122     		movs	r2, #1
 7830 09b6 1A76     		strb	r2, [r3, #24]
 7831 09b8 07F55C73 		add	r3, r7, #880
 7832 09bc 0122     		movs	r2, #1
 7833 09be 5A76     		strb	r2, [r3, #25]
 7834 09c0 07F55C73 		add	r3, r7, #880
 7835 09c4 0122     		movs	r2, #1
 7836 09c6 9A76     		strb	r2, [r3, #26]
 7837 09c8 07F55C73 		add	r3, r7, #880
 7838 09cc 0122     		movs	r2, #1
 7839 09ce DA76     		strb	r2, [r3, #27]
 7840 09d0 07F55C73 		add	r3, r7, #880
 7841 09d4 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 184


 7842 09d6 1A77     		strb	r2, [r3, #28]
 7843 09d8 07F55C73 		add	r3, r7, #880
 7844 09dc 0122     		movs	r2, #1
 7845 09de 5A77     		strb	r2, [r3, #29]
 7846 09e0 07F55C73 		add	r3, r7, #880
 7847 09e4 0122     		movs	r2, #1
 7848 09e6 9A77     		strb	r2, [r3, #30]
 7849 09e8 07F55C73 		add	r3, r7, #880
 7850 09ec 0622     		movs	r2, #6
 7851 09ee DA77     		strb	r2, [r3, #31]
 7852 09f0 07F55C73 		add	r3, r7, #880
 7853 09f4 0122     		movs	r2, #1
 7854 09f6 83F82020 		strb	r2, [r3, #32]
 7855 09fa 07F55C73 		add	r3, r7, #880
 7856 09fe 0522     		movs	r2, #5
 7857 0a00 83F82120 		strb	r2, [r3, #33]
 7858 0a04 07F55C73 		add	r3, r7, #880
 7859 0a08 0122     		movs	r2, #1
 7860 0a0a 83F82220 		strb	r2, [r3, #34]
 7861 0a0e 07F55C73 		add	r3, r7, #880
 7862 0a12 0622     		movs	r2, #6
 7863 0a14 83F82320 		strb	r2, [r3, #35]
 7864 0a18 07F55C73 		add	r3, r7, #880
 7865 0a1c 0122     		movs	r2, #1
 7866 0a1e 83F82420 		strb	r2, [r3, #36]
 7867 0a22 07F55C73 		add	r3, r7, #880
 7868 0a26 0122     		movs	r2, #1
 7869 0a28 83F82520 		strb	r2, [r3, #37]
 7870 0a2c 07F55C73 		add	r3, r7, #880
 7871 0a30 0122     		movs	r2, #1
 7872 0a32 83F82620 		strb	r2, [r3, #38]
 7873 0a36 07F55C73 		add	r3, r7, #880
 7874 0a3a 0122     		movs	r2, #1
 7875 0a3c 83F82720 		strb	r2, [r3, #39]
 7876 0a40 07F55C73 		add	r3, r7, #880
 7877 0a44 0322     		movs	r2, #3
 7878 0a46 83F82820 		strb	r2, [r3, #40]
 7879 0a4a 07F55C73 		add	r3, r7, #880
 7880 0a4e 0322     		movs	r2, #3
 7881 0a50 83F82920 		strb	r2, [r3, #41]
 7882 0a54 07F55C73 		add	r3, r7, #880
 7883 0a58 0122     		movs	r2, #1
 7884 0a5a 83F82A20 		strb	r2, [r3, #42]
 7885 0a5e 07F55C73 		add	r3, r7, #880
 7886 0a62 0322     		movs	r2, #3
 7887 0a64 83F82B20 		strb	r2, [r3, #43]
 7888 0a68 07F55C73 		add	r3, r7, #880
 7889 0a6c 0322     		movs	r2, #3
 7890 0a6e 83F82C20 		strb	r2, [r3, #44]
 7891 0a72 07F55C73 		add	r3, r7, #880
 7892 0a76 0122     		movs	r2, #1
 7893 0a78 83F82D20 		strb	r2, [r3, #45]
 7894 0a7c 07F55C73 		add	r3, r7, #880
 7895 0a80 0122     		movs	r2, #1
 7896 0a82 83F82E20 		strb	r2, [r3, #46]
 7897 0a86 07F55C73 		add	r3, r7, #880
 7898 0a8a 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 185


 7899 0a8c 83F82F20 		strb	r2, [r3, #47]
 7900 0a90 07F55C73 		add	r3, r7, #880
 7901 0a94 0322     		movs	r2, #3
 7902 0a96 83F83020 		strb	r2, [r3, #48]
 7903 0a9a 07F55C73 		add	r3, r7, #880
 7904 0a9e 0322     		movs	r2, #3
 7905 0aa0 83F83120 		strb	r2, [r3, #49]
 7906 0aa4 07F55C73 		add	r3, r7, #880
 7907 0aa8 0322     		movs	r2, #3
 7908 0aaa 83F83220 		strb	r2, [r3, #50]
 7909 0aae 07F55C73 		add	r3, r7, #880
 7910 0ab2 0122     		movs	r2, #1
 7911 0ab4 83F83320 		strb	r2, [r3, #51]
 7912 0ab8 07F55C73 		add	r3, r7, #880
 7913 0abc 0222     		movs	r2, #2
 7914 0abe 83F83420 		strb	r2, [r3, #52]
 7915 0ac2 07F55C73 		add	r3, r7, #880
 7916 0ac6 0222     		movs	r2, #2
 7917 0ac8 83F83520 		strb	r2, [r3, #53]
 7918 0acc 07F55C73 		add	r3, r7, #880
 7919 0ad0 0122     		movs	r2, #1
 7920 0ad2 83F83620 		strb	r2, [r3, #54]
 7921 0ad6 07F55C73 		add	r3, r7, #880
 7922 0ada 0122     		movs	r2, #1
 7923 0adc 83F83720 		strb	r2, [r3, #55]
 7924 0ae0 07F55C73 		add	r3, r7, #880
 7925 0ae4 0122     		movs	r2, #1
 7926 0ae6 83F83820 		strb	r2, [r3, #56]
 7927 0aea 07F55C73 		add	r3, r7, #880
 7928 0aee 0122     		movs	r2, #1
 7929 0af0 83F83920 		strb	r2, [r3, #57]
 7930 0af4 07F55C73 		add	r3, r7, #880
 7931 0af8 0622     		movs	r2, #6
 7932 0afa 83F83A20 		strb	r2, [r3, #58]
 7933 0afe 07F55C73 		add	r3, r7, #880
 7934 0b02 0122     		movs	r2, #1
 7935 0b04 83F83B20 		strb	r2, [r3, #59]
 7936 0b08 07F55C73 		add	r3, r7, #880
 7937 0b0c 0122     		movs	r2, #1
 7938 0b0e 83F83C20 		strb	r2, [r3, #60]
 7939 0b12 07F55C73 		add	r3, r7, #880
 7940 0b16 0122     		movs	r2, #1
 7941 0b18 83F83D20 		strb	r2, [r3, #61]
 7942 0b1c 07F55C73 		add	r3, r7, #880
 7943 0b20 0122     		movs	r2, #1
 7944 0b22 83F83E20 		strb	r2, [r3, #62]
 7945 0b26 07F55C73 		add	r3, r7, #880
 7946 0b2a 0322     		movs	r2, #3
 7947 0b2c 83F83F20 		strb	r2, [r3, #63]
 7948 0b30 07F55C73 		add	r3, r7, #880
 7949 0b34 0322     		movs	r2, #3
 7950 0b36 83F84020 		strb	r2, [r3, #64]
1016:..\src/command_processing.c ****         1, 3, 3, 1, 
1017:..\src/command_processing.c ****         1, 1, 3, 3,
1018:..\src/command_processing.c ****         3, 1, 2, 2, 
1019:..\src/command_processing.c ****         1, 2, 1, 2,
1020:..\src/command_processing.c ****         2, 1, 1, 1, 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 186


1021:..\src/command_processing.c ****         6, 3, 1, 1,
1022:..\src/command_processing.c ****         1, 1, 1, 1, 
1023:..\src/command_processing.c ****         1, 1, 1, 6,
1024:..\src/command_processing.c ****         1, 5, 1, 6,
1025:..\src/command_processing.c ****         
1026:..\src/command_processing.c ****         // GENERIC PARAMS
1027:..\src/command_processing.c ****         1, 1, 1, 1,
1028:..\src/command_processing.c ****         3, 3, 1, 3,
1029:..\src/command_processing.c ****         3, 1, 1, 1,
1030:..\src/command_processing.c ****         3, 3, 3, 1,
1031:..\src/command_processing.c ****         2, 2, 1, 1,
1032:..\src/command_processing.c ****         1, 1, 6, 1,
1033:..\src/command_processing.c ****         1, 1, 1, 3, 
1034:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7951              		.loc 1 1034 0
 7952 0b3a 604B     		ldr	r3, .L371+4
 7953 0b3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1015:..\src/command_processing.c ****         1, 3, 3, 1, 
 7954              		.loc 1 1015 0
 7955 0b3e 07F55C73 		add	r3, r7, #880
 7956 0b42 83F84120 		strb	r2, [r3, #65]
 7957              		.loc 1 1034 0
 7958 0b46 5D4B     		ldr	r3, .L371+4
 7959 0b48 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1015:..\src/command_processing.c ****         1, 3, 3, 1, 
 7960              		.loc 1 1015 0
 7961 0b4a 07F55C73 		add	r3, r7, #880
 7962 0b4e 83F84220 		strb	r2, [r3, #66]
 7963 0b52 07F55C73 		add	r3, r7, #880
 7964 0b56 0122     		movs	r2, #1
 7965 0b58 83F84320 		strb	r2, [r3, #67]
 7966 0b5c 07F55C73 		add	r3, r7, #880
 7967 0b60 0622     		movs	r2, #6
 7968 0b62 83F84420 		strb	r2, [r3, #68]
 7969 0b66 07F55C73 		add	r3, r7, #880
 7970 0b6a 0622     		movs	r2, #6
 7971 0b6c 83F84520 		strb	r2, [r3, #69]
 7972 0b70 07F55C73 		add	r3, r7, #880
 7973 0b74 0122     		movs	r2, #1
 7974 0b76 83F84620 		strb	r2, [r3, #70]
 7975 0b7a 07F55C73 		add	r3, r7, #880
 7976 0b7e 0122     		movs	r2, #1
 7977 0b80 83F84720 		strb	r2, [r3, #71]
 7978 0b84 07F55C73 		add	r3, r7, #880
 7979 0b88 0222     		movs	r2, #2
 7980 0b8a 83F84820 		strb	r2, [r3, #72]
 7981 0b8e 07F55C73 		add	r3, r7, #880
 7982 0b92 0122     		movs	r2, #1
 7983 0b94 83F84920 		strb	r2, [r3, #73]
 7984 0b98 07F55C73 		add	r3, r7, #880
 7985 0b9c 0122     		movs	r2, #1
 7986 0b9e 83F84A20 		strb	r2, [r3, #74]
 7987 0ba2 07F55C73 		add	r3, r7, #880
 7988 0ba6 0222     		movs	r2, #2
 7989 0ba8 83F84B20 		strb	r2, [r3, #75]
 7990 0bac 07F55C73 		add	r3, r7, #880
 7991 0bb0 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 187


 7992 0bb2 83F84C20 		strb	r2, [r3, #76]
 7993 0bb6 07F55C73 		add	r3, r7, #880
 7994 0bba 0122     		movs	r2, #1
 7995 0bbc 83F84D20 		strb	r2, [r3, #77]
 7996 0bc0 07F55C73 		add	r3, r7, #880
 7997 0bc4 0122     		movs	r2, #1
 7998 0bc6 83F84E20 		strb	r2, [r3, #78]
 7999 0bca 07F55C73 		add	r3, r7, #880
 8000 0bce 0122     		movs	r2, #1
 8001 0bd0 83F84F20 		strb	r2, [r3, #79]
 8002 0bd4 07F55C73 		add	r3, r7, #880
 8003 0bd8 0122     		movs	r2, #1
 8004 0bda 83F85020 		strb	r2, [r3, #80]
 8005 0bde 07F55C73 		add	r3, r7, #880
 8006 0be2 0122     		movs	r2, #1
 8007 0be4 83F85120 		strb	r2, [r3, #81]
1035:..\src/command_processing.c ****         6, 6, 1, 1,
1036:..\src/command_processing.c ****         2, 1, 1, 2,
1037:..\src/command_processing.c ****         
1038:..\src/command_processing.c ****         1, 1, 1, 1,
1039:..\src/command_processing.c ****         1, 1
1040:..\src/command_processing.c ****     };
1041:..\src/command_processing.c ****     
1042:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8008              		.loc 1 1042 0
 8009 0be8 07F54773 		add	r3, r7, #796
 8010 0bec 0022     		movs	r2, #0
 8011 0bee 1A70     		strb	r2, [r3]
 8012 0bf0 97F87535 		ldrb	r3, [r7, #1397]
 8013 0bf4 0A33     		adds	r3, r3, #10
 8014 0bf6 DAB2     		uxtb	r2, r3
 8015 0bf8 07F54773 		add	r3, r7, #796
 8016 0bfc 5A70     		strb	r2, [r3, #1]
 8017 0bfe 97F87535 		ldrb	r3, [r7, #1397]
 8018 0c02 0A33     		adds	r3, r3, #10
 8019 0c04 DAB2     		uxtb	r2, r3
 8020 0c06 07F54773 		add	r3, r7, #796
 8021 0c0a 9A70     		strb	r2, [r3, #2]
 8022 0c0c 97F87535 		ldrb	r3, [r7, #1397]
 8023 0c10 0A33     		adds	r3, r3, #10
 8024 0c12 DAB2     		uxtb	r2, r3
 8025 0c14 07F54773 		add	r3, r7, #796
 8026 0c18 DA70     		strb	r2, [r3, #3]
 8027 0c1a 97F87535 		ldrb	r3, [r7, #1397]
 8028 0c1e 0A33     		adds	r3, r3, #10
 8029 0c20 DAB2     		uxtb	r2, r3
 8030 0c22 07F54773 		add	r3, r7, #796
 8031 0c26 1A71     		strb	r2, [r3, #4]
 8032 0c28 97F87535 		ldrb	r3, [r7, #1397]
 8033 0c2c 0A33     		adds	r3, r3, #10
 8034 0c2e DAB2     		uxtb	r2, r3
 8035 0c30 07F54773 		add	r3, r7, #796
 8036 0c34 5A71     		strb	r2, [r3, #5]
1043:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1044:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8037              		.loc 1 1044 0
 8038 0c36 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 188


 8039 0c3a D7F87815 		ldr	r1, [r7, #1400]
 8040 0c3e 1346     		mov	r3, r2
 8041 0c40 DB00     		lsls	r3, r3, #3
 8042 0c42 9B1A     		subs	r3, r3, r2
 8043 0c44 1B01     		lsls	r3, r3, #4
 8044 0c46 0B44     		add	r3, r3, r1
 8045 0c48 03F58873 		add	r3, r3, #272
 8046 0c4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8047              		.loc 1 1042 0
 8048 0c4e 1433     		adds	r3, r3, #20
 8049 0c50 DAB2     		uxtb	r2, r3
 8050 0c52 07F54773 		add	r3, r7, #796
 8051 0c56 9A71     		strb	r2, [r3, #6]
 8052              		.loc 1 1044 0
 8053 0c58 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8054 0c5c D7F87815 		ldr	r1, [r7, #1400]
 8055 0c60 1346     		mov	r3, r2
 8056 0c62 DB00     		lsls	r3, r3, #3
 8057 0c64 9B1A     		subs	r3, r3, r2
 8058 0c66 1B01     		lsls	r3, r3, #4
 8059 0c68 0B44     		add	r3, r3, r1
 8060 0c6a 03F58873 		add	r3, r3, #272
 8061 0c6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8062              		.loc 1 1042 0
 8063 0c70 1433     		adds	r3, r3, #20
 8064 0c72 DAB2     		uxtb	r2, r3
 8065 0c74 07F54773 		add	r3, r7, #796
 8066 0c78 DA71     		strb	r2, [r3, #7]
1045:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8067              		.loc 1 1045 0
 8068 0c7a 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8069 0c7e D7F87815 		ldr	r1, [r7, #1400]
 8070 0c82 1346     		mov	r3, r2
 8071 0c84 DB00     		lsls	r3, r3, #3
 8072 0c86 9B1A     		subs	r3, r3, r2
 8073 0c88 1B01     		lsls	r3, r3, #4
 8074 0c8a 0B44     		add	r3, r3, r1
 8075 0c8c 03F58873 		add	r3, r3, #272
 8076 0c90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8077              		.loc 1 1042 0
 8078 0c92 1433     		adds	r3, r3, #20
 8079 0c94 DAB2     		uxtb	r2, r3
 8080 0c96 07F54773 		add	r3, r7, #796
 8081 0c9a 1A72     		strb	r2, [r3, #8]
 8082 0c9c 97F87535 		ldrb	r3, [r7, #1397]
 8083 0ca0 0A33     		adds	r3, r3, #10
 8084 0ca2 DAB2     		uxtb	r2, r3
 8085 0ca4 07F54773 		add	r3, r7, #796
 8086 0ca8 5A72     		strb	r2, [r3, #9]
 8087 0caa 97F87535 		ldrb	r3, [r7, #1397]
 8088 0cae 0A33     		adds	r3, r3, #10
 8089 0cb0 DAB2     		uxtb	r2, r3
 8090 0cb2 07F54773 		add	r3, r7, #796
 8091 0cb6 03E0     		b	.L372
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 189


 8092              	.L373:
 8093              		.align	2
 8094              	.L371:
 8095 0cb8 24060000 		.word	.LC0
 8096 0cbc 00000000 		.word	N_Encoder_Line_Connected
 8097              	.L372:
 8098 0cc0 9A72     		strb	r2, [r3, #10]
 8099 0cc2 97F87535 		ldrb	r3, [r7, #1397]
 8100 0cc6 0A33     		adds	r3, r3, #10
 8101 0cc8 DAB2     		uxtb	r2, r3
 8102 0cca 07F54773 		add	r3, r7, #796
 8103 0cce DA72     		strb	r2, [r3, #11]
 8104 0cd0 97F87535 		ldrb	r3, [r7, #1397]
 8105 0cd4 0A33     		adds	r3, r3, #10
 8106 0cd6 DAB2     		uxtb	r2, r3
 8107 0cd8 07F54773 		add	r3, r7, #796
 8108 0cdc 1A73     		strb	r2, [r3, #12]
 8109 0cde 07F54773 		add	r3, r7, #796
 8110 0ce2 1E22     		movs	r2, #30
 8111 0ce4 5A73     		strb	r2, [r3, #13]
 8112 0ce6 07F54773 		add	r3, r7, #796
 8113 0cea 1E22     		movs	r2, #30
 8114 0cec 9A73     		strb	r2, [r3, #14]
 8115 0cee 07F54773 		add	r3, r7, #796
 8116 0cf2 1E22     		movs	r2, #30
 8117 0cf4 DA73     		strb	r2, [r3, #15]
 8118 0cf6 07F54773 		add	r3, r7, #796
 8119 0cfa 1E22     		movs	r2, #30
 8120 0cfc 1A74     		strb	r2, [r3, #16]
1046:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1047:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8121              		.loc 1 1047 0
 8122 0cfe 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8123 0d02 D7F87815 		ldr	r1, [r7, #1400]
 8124 0d06 1346     		mov	r3, r2
 8125 0d08 DB00     		lsls	r3, r3, #3
 8126 0d0a 9B1A     		subs	r3, r3, r2
 8127 0d0c 1B01     		lsls	r3, r3, #4
 8128 0d0e 0B44     		add	r3, r3, r1
 8129 0d10 03F58873 		add	r3, r3, #272
 8130 0d14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8131              		.loc 1 1042 0
 8132 0d16 1433     		adds	r3, r3, #20
 8133 0d18 DAB2     		uxtb	r2, r3
 8134 0d1a 07F54773 		add	r3, r7, #796
 8135 0d1e 5A74     		strb	r2, [r3, #17]
 8136              		.loc 1 1047 0
 8137 0d20 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8138 0d24 D7F87815 		ldr	r1, [r7, #1400]
 8139 0d28 1346     		mov	r3, r2
 8140 0d2a DB00     		lsls	r3, r3, #3
 8141 0d2c 9B1A     		subs	r3, r3, r2
 8142 0d2e 1B01     		lsls	r3, r3, #4
 8143 0d30 0B44     		add	r3, r3, r1
 8144 0d32 03F58873 		add	r3, r3, #272
 8145 0d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 190


1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8146              		.loc 1 1042 0
 8147 0d38 1433     		adds	r3, r3, #20
 8148 0d3a DAB2     		uxtb	r2, r3
 8149 0d3c 07F54773 		add	r3, r7, #796
 8150 0d40 9A74     		strb	r2, [r3, #18]
 8151 0d42 97F87535 		ldrb	r3, [r7, #1397]
 8152 0d46 0A33     		adds	r3, r3, #10
 8153 0d48 DAB2     		uxtb	r2, r3
 8154 0d4a 07F54773 		add	r3, r7, #796
 8155 0d4e DA74     		strb	r2, [r3, #19]
 8156 0d50 97F87535 		ldrb	r3, [r7, #1397]
 8157 0d54 0A33     		adds	r3, r3, #10
 8158 0d56 DAB2     		uxtb	r2, r3
 8159 0d58 07F54773 		add	r3, r7, #796
 8160 0d5c 1A75     		strb	r2, [r3, #20]
 8161 0d5e 07F54773 		add	r3, r7, #796
 8162 0d62 0022     		movs	r2, #0
 8163 0d64 5A75     		strb	r2, [r3, #21]
 8164 0d66 07F54773 		add	r3, r7, #796
 8165 0d6a 4622     		movs	r2, #70
 8166 0d6c 9A75     		strb	r2, [r3, #22]
 8167 0d6e 07F54773 		add	r3, r7, #796
 8168 0d72 4622     		movs	r2, #70
 8169 0d74 DA75     		strb	r2, [r3, #23]
 8170 0d76 07F54773 		add	r3, r7, #796
 8171 0d7a 4622     		movs	r2, #70
 8172 0d7c 1A76     		strb	r2, [r3, #24]
 8173 0d7e 07F54773 		add	r3, r7, #796
 8174 0d82 4622     		movs	r2, #70
 8175 0d84 5A76     		strb	r2, [r3, #25]
 8176 0d86 07F54773 		add	r3, r7, #796
 8177 0d8a 1E22     		movs	r2, #30
 8178 0d8c 9A76     		strb	r2, [r3, #26]
 8179 0d8e 07F54773 		add	r3, r7, #796
 8180 0d92 0022     		movs	r2, #0
 8181 0d94 DA76     		strb	r2, [r3, #27]
 8182 0d96 07F54773 		add	r3, r7, #796
 8183 0d9a 2822     		movs	r2, #40
 8184 0d9c 1A77     		strb	r2, [r3, #28]
 8185 0d9e 07F54773 		add	r3, r7, #796
 8186 0da2 3222     		movs	r2, #50
 8187 0da4 5A77     		strb	r2, [r3, #29]
 8188 0da6 07F54773 		add	r3, r7, #796
 8189 0daa 0022     		movs	r2, #0
 8190 0dac 9A77     		strb	r2, [r3, #30]
 8191 0dae 07F54773 		add	r3, r7, #796
 8192 0db2 3222     		movs	r2, #50
 8193 0db4 DA77     		strb	r2, [r3, #31]
 8194 0db6 07F54773 		add	r3, r7, #796
 8195 0dba 2822     		movs	r2, #40
 8196 0dbc 83F82020 		strb	r2, [r3, #32]
 8197 0dc0 07F54773 		add	r3, r7, #796
 8198 0dc4 2822     		movs	r2, #40
 8199 0dc6 83F82120 		strb	r2, [r3, #33]
 8200 0dca 07F54773 		add	r3, r7, #796
 8201 0dce 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 191


 8202 0dd0 83F82220 		strb	r2, [r3, #34]
1048:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1049:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1050:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1051:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8203              		.loc 1 1051 0
 8204 0dd4 D7F87835 		ldr	r3, [r7, #1400]
 8205 0dd8 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8206              		.loc 1 1042 0
 8207 0ddc 3C33     		adds	r3, r3, #60
 8208 0dde DAB2     		uxtb	r2, r3
 8209 0de0 07F54773 		add	r3, r7, #796
 8210 0de4 83F82320 		strb	r2, [r3, #35]
 8211 0de8 97F87535 		ldrb	r3, [r7, #1397]
 8212 0dec 0A33     		adds	r3, r3, #10
 8213 0dee DAB2     		uxtb	r2, r3
 8214 0df0 07F54773 		add	r3, r7, #796
 8215 0df4 83F82420 		strb	r2, [r3, #36]
 8216 0df8 97F87535 		ldrb	r3, [r7, #1397]
 8217 0dfc 0A33     		adds	r3, r3, #10
 8218 0dfe DAB2     		uxtb	r2, r3
 8219 0e00 07F54773 		add	r3, r7, #796
 8220 0e04 83F82520 		strb	r2, [r3, #37]
 8221 0e08 97F87535 		ldrb	r3, [r7, #1397]
 8222 0e0c 0A33     		adds	r3, r3, #10
 8223 0e0e DAB2     		uxtb	r2, r3
 8224 0e10 07F54773 		add	r3, r7, #796
 8225 0e14 83F82620 		strb	r2, [r3, #38]
 8226 0e18 97F87535 		ldrb	r3, [r7, #1397]
 8227 0e1c 0A33     		adds	r3, r3, #10
 8228 0e1e DAB2     		uxtb	r2, r3
 8229 0e20 07F54773 		add	r3, r7, #796
 8230 0e24 83F82720 		strb	r2, [r3, #39]
1052:..\src/command_processing.c ****         
1053:..\src/command_processing.c ****         // GENERIC PARAMS
1054:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1055:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8231              		.loc 1 1055 0
 8232 0e28 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8233 0e2c D7F87815 		ldr	r1, [r7, #1400]
 8234 0e30 1346     		mov	r3, r2
 8235 0e32 DB00     		lsls	r3, r3, #3
 8236 0e34 9B1A     		subs	r3, r3, r2
 8237 0e36 1B01     		lsls	r3, r3, #4
 8238 0e38 0B44     		add	r3, r3, r1
 8239 0e3a 03F58873 		add	r3, r3, #272
 8240 0e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8241              		.loc 1 1042 0
 8242 0e40 1433     		adds	r3, r3, #20
 8243 0e42 DAB2     		uxtb	r2, r3
 8244 0e44 07F54773 		add	r3, r7, #796
 8245 0e48 83F82820 		strb	r2, [r3, #40]
 8246              		.loc 1 1055 0
 8247 0e4c 97F87525 		ldrb	r2, [r7, #1397]	@ zero_extendqisi2
 8248 0e50 D7F87815 		ldr	r1, [r7, #1400]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 192


 8249 0e54 1346     		mov	r3, r2
 8250 0e56 DB00     		lsls	r3, r3, #3
 8251 0e58 9B1A     		subs	r3, r3, r2
 8252 0e5a 1B01     		lsls	r3, r3, #4
 8253 0e5c 0B44     		add	r3, r3, r1
 8254 0e5e 03F58873 		add	r3, r3, #272
 8255 0e62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8256              		.loc 1 1042 0
 8257 0e64 1433     		adds	r3, r3, #20
 8258 0e66 DAB2     		uxtb	r2, r3
 8259 0e68 07F54773 		add	r3, r7, #796
 8260 0e6c 83F82920 		strb	r2, [r3, #41]
 8261 0e70 07F54773 		add	r3, r7, #796
 8262 0e74 0022     		movs	r2, #0
 8263 0e76 83F82A20 		strb	r2, [r3, #42]
 8264 0e7a 97F87435 		ldrb	r3, [r7, #1396]
 8265 0e7e 0A33     		adds	r3, r3, #10
 8266 0e80 DAB2     		uxtb	r2, r3
 8267 0e82 07F54773 		add	r3, r7, #796
 8268 0e86 83F82B20 		strb	r2, [r3, #43]
 8269 0e8a 97F87435 		ldrb	r3, [r7, #1396]
 8270 0e8e 0A33     		adds	r3, r3, #10
 8271 0e90 DAB2     		uxtb	r2, r3
 8272 0e92 07F54773 		add	r3, r7, #796
 8273 0e96 83F82C20 		strb	r2, [r3, #44]
 8274 0e9a 97F87435 		ldrb	r3, [r7, #1396]
 8275 0e9e 0A33     		adds	r3, r3, #10
 8276 0ea0 DAB2     		uxtb	r2, r3
 8277 0ea2 07F54773 		add	r3, r7, #796
 8278 0ea6 83F82D20 		strb	r2, [r3, #45]
 8279 0eaa 97F87435 		ldrb	r3, [r7, #1396]
 8280 0eae 0A33     		adds	r3, r3, #10
 8281 0eb0 DAB2     		uxtb	r2, r3
 8282 0eb2 07F54773 		add	r3, r7, #796
 8283 0eb6 83F82E20 		strb	r2, [r3, #46]
 8284 0eba 97F87435 		ldrb	r3, [r7, #1396]
 8285 0ebe 0A33     		adds	r3, r3, #10
 8286 0ec0 DAB2     		uxtb	r2, r3
 8287 0ec2 07F54773 		add	r3, r7, #796
 8288 0ec6 83F82F20 		strb	r2, [r3, #47]
1056:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1057:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8289              		.loc 1 1057 0
 8290 0eca 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8291 0ece D7F87815 		ldr	r1, [r7, #1400]
 8292 0ed2 1346     		mov	r3, r2
 8293 0ed4 DB00     		lsls	r3, r3, #3
 8294 0ed6 9B1A     		subs	r3, r3, r2
 8295 0ed8 1B01     		lsls	r3, r3, #4
 8296 0eda 0B44     		add	r3, r3, r1
 8297 0edc 03F58873 		add	r3, r3, #272
 8298 0ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8299              		.loc 1 1042 0
 8300 0ee2 1433     		adds	r3, r3, #20
 8301 0ee4 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 193


 8302 0ee6 07F54773 		add	r3, r7, #796
 8303 0eea 83F83020 		strb	r2, [r3, #48]
 8304              		.loc 1 1057 0
 8305 0eee 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8306 0ef2 D7F87815 		ldr	r1, [r7, #1400]
 8307 0ef6 1346     		mov	r3, r2
 8308 0ef8 DB00     		lsls	r3, r3, #3
 8309 0efa 9B1A     		subs	r3, r3, r2
 8310 0efc 1B01     		lsls	r3, r3, #4
 8311 0efe 0B44     		add	r3, r3, r1
 8312 0f00 03F58873 		add	r3, r3, #272
 8313 0f04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8314              		.loc 1 1042 0
 8315 0f06 1433     		adds	r3, r3, #20
 8316 0f08 DAB2     		uxtb	r2, r3
 8317 0f0a 07F54773 		add	r3, r7, #796
 8318 0f0e 83F83120 		strb	r2, [r3, #49]
 8319              		.loc 1 1057 0
 8320 0f12 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8321 0f16 D7F87815 		ldr	r1, [r7, #1400]
 8322 0f1a 1346     		mov	r3, r2
 8323 0f1c DB00     		lsls	r3, r3, #3
 8324 0f1e 9B1A     		subs	r3, r3, r2
 8325 0f20 1B01     		lsls	r3, r3, #4
 8326 0f22 0B44     		add	r3, r3, r1
 8327 0f24 03F58873 		add	r3, r3, #272
 8328 0f28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8329              		.loc 1 1042 0
 8330 0f2a 1433     		adds	r3, r3, #20
 8331 0f2c DAB2     		uxtb	r2, r3
 8332 0f2e 07F54773 		add	r3, r7, #796
 8333 0f32 83F83220 		strb	r2, [r3, #50]
 8334 0f36 97F87435 		ldrb	r3, [r7, #1396]
 8335 0f3a 0A33     		adds	r3, r3, #10
 8336 0f3c DAB2     		uxtb	r2, r3
 8337 0f3e 07F54773 		add	r3, r7, #796
 8338 0f42 83F83320 		strb	r2, [r3, #51]
 8339 0f46 97F87435 		ldrb	r3, [r7, #1396]
 8340 0f4a 0A33     		adds	r3, r3, #10
 8341 0f4c DAB2     		uxtb	r2, r3
 8342 0f4e 07F54773 		add	r3, r7, #796
 8343 0f52 83F83420 		strb	r2, [r3, #52]
 8344 0f56 97F87435 		ldrb	r3, [r7, #1396]
 8345 0f5a 0A33     		adds	r3, r3, #10
 8346 0f5c DAB2     		uxtb	r2, r3
 8347 0f5e 07F54773 		add	r3, r7, #796
 8348 0f62 83F83520 		strb	r2, [r3, #53]
 8349 0f66 97F87435 		ldrb	r3, [r7, #1396]
 8350 0f6a 0A33     		adds	r3, r3, #10
 8351 0f6c DAB2     		uxtb	r2, r3
 8352 0f6e 07F54773 		add	r3, r7, #796
 8353 0f72 83F83620 		strb	r2, [r3, #54]
1058:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8354              		.loc 1 1058 0
 8355 0f76 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 194


 8356 0f7a D7F87815 		ldr	r1, [r7, #1400]
 8357 0f7e 1346     		mov	r3, r2
 8358 0f80 DB00     		lsls	r3, r3, #3
 8359 0f82 9B1A     		subs	r3, r3, r2
 8360 0f84 1B01     		lsls	r3, r3, #4
 8361 0f86 0B44     		add	r3, r3, r1
 8362 0f88 03F58873 		add	r3, r3, #272
 8363 0f8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8364              		.loc 1 1042 0
 8365 0f8e 1433     		adds	r3, r3, #20
 8366 0f90 DAB2     		uxtb	r2, r3
 8367 0f92 07F54773 		add	r3, r7, #796
 8368 0f96 83F83720 		strb	r2, [r3, #55]
1059:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8369              		.loc 1 1059 0
 8370 0f9a 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8371 0f9e D7F87815 		ldr	r1, [r7, #1400]
 8372 0fa2 1346     		mov	r3, r2
 8373 0fa4 DB00     		lsls	r3, r3, #3
 8374 0fa6 9B1A     		subs	r3, r3, r2
 8375 0fa8 1B01     		lsls	r3, r3, #4
 8376 0faa 0B44     		add	r3, r3, r1
 8377 0fac 03F58873 		add	r3, r3, #272
 8378 0fb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8379              		.loc 1 1042 0
 8380 0fb2 1433     		adds	r3, r3, #20
 8381 0fb4 DAB2     		uxtb	r2, r3
 8382 0fb6 07F54773 		add	r3, r7, #796
 8383 0fba 83F83820 		strb	r2, [r3, #56]
 8384 0fbe 97F87435 		ldrb	r3, [r7, #1396]
 8385 0fc2 0A33     		adds	r3, r3, #10
 8386 0fc4 DAB2     		uxtb	r2, r3
 8387 0fc6 07F54773 		add	r3, r7, #796
 8388 0fca 83F83920 		strb	r2, [r3, #57]
 8389 0fce 97F87435 		ldrb	r3, [r7, #1396]
 8390 0fd2 0A33     		adds	r3, r3, #10
 8391 0fd4 DAB2     		uxtb	r2, r3
 8392 0fd6 07F54773 		add	r3, r7, #796
 8393 0fda 83F83A20 		strb	r2, [r3, #58]
 8394 0fde 97F87435 		ldrb	r3, [r7, #1396]
 8395 0fe2 0A33     		adds	r3, r3, #10
 8396 0fe4 DAB2     		uxtb	r2, r3
 8397 0fe6 07F54773 		add	r3, r7, #796
 8398 0fea 83F83B20 		strb	r2, [r3, #59]
 8399 0fee 97F87435 		ldrb	r3, [r7, #1396]
 8400 0ff2 0A33     		adds	r3, r3, #10
 8401 0ff4 DAB2     		uxtb	r2, r3
 8402 0ff6 07F54773 		add	r3, r7, #796
 8403 0ffa 83F83C20 		strb	r2, [r3, #60]
 8404 0ffe 97F87435 		ldrb	r3, [r7, #1396]
 8405 1002 0A33     		adds	r3, r3, #10
 8406 1004 DAB2     		uxtb	r2, r3
 8407 1006 07F54773 		add	r3, r7, #796
 8408 100a 83F83D20 		strb	r2, [r3, #61]
 8409 100e 97F87435 		ldrb	r3, [r7, #1396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 195


 8410 1012 0A33     		adds	r3, r3, #10
 8411 1014 DAB2     		uxtb	r2, r3
 8412 1016 07F54773 		add	r3, r7, #796
 8413 101a 83F83E20 		strb	r2, [r3, #62]
1060:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8414              		.loc 1 1060 0
 8415 101e 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8416 1022 D7F87815 		ldr	r1, [r7, #1400]
 8417 1026 1346     		mov	r3, r2
 8418 1028 DB00     		lsls	r3, r3, #3
 8419 102a 9B1A     		subs	r3, r3, r2
 8420 102c 1B01     		lsls	r3, r3, #4
 8421 102e 0B44     		add	r3, r3, r1
 8422 1030 03F58873 		add	r3, r3, #272
 8423 1034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8424              		.loc 1 1042 0
 8425 1036 1433     		adds	r3, r3, #20
 8426 1038 DAB2     		uxtb	r2, r3
 8427 103a 07F54773 		add	r3, r7, #796
 8428 103e 83F83F20 		strb	r2, [r3, #63]
1061:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8429              		.loc 1 1061 0
 8430 1042 97F87425 		ldrb	r2, [r7, #1396]	@ zero_extendqisi2
 8431 1046 D7F87815 		ldr	r1, [r7, #1400]
 8432 104a 1346     		mov	r3, r2
 8433 104c DB00     		lsls	r3, r3, #3
 8434 104e 9B1A     		subs	r3, r3, r2
 8435 1050 1B01     		lsls	r3, r3, #4
 8436 1052 0B44     		add	r3, r3, r1
 8437 1054 03F58873 		add	r3, r3, #272
 8438 1058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1042:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8439              		.loc 1 1042 0
 8440 105a 1433     		adds	r3, r3, #20
 8441 105c DAB2     		uxtb	r2, r3
 8442 105e 07F54773 		add	r3, r7, #796
 8443 1062 83F84020 		strb	r2, [r3, #64]
 8444 1066 07F54773 		add	r3, r7, #796
 8445 106a 1422     		movs	r2, #20
 8446 106c 83F84120 		strb	r2, [r3, #65]
 8447 1070 07F54773 		add	r3, r7, #796
 8448 1074 1522     		movs	r2, #21
 8449 1076 83F84220 		strb	r2, [r3, #66]
 8450 107a 07F54773 		add	r3, r7, #796
 8451 107e 3222     		movs	r2, #50
 8452 1080 83F84320 		strb	r2, [r3, #67]
 8453 1084 07F54773 		add	r3, r7, #796
 8454 1088 3222     		movs	r2, #50
 8455 108a 83F84420 		strb	r2, [r3, #68]
 8456 108e 07F54773 		add	r3, r7, #796
 8457 1092 3222     		movs	r2, #50
 8458 1094 83F84520 		strb	r2, [r3, #69]
 8459 1098 07F54773 		add	r3, r7, #796
 8460 109c 6E22     		movs	r2, #110
 8461 109e 83F84620 		strb	r2, [r3, #70]
 8462 10a2 07F54773 		add	r3, r7, #796
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 196


 8463 10a6 6E22     		movs	r2, #110
 8464 10a8 83F84720 		strb	r2, [r3, #71]
 8465 10ac 07F54773 		add	r3, r7, #796
 8466 10b0 6E22     		movs	r2, #110
 8467 10b2 83F84820 		strb	r2, [r3, #72]
 8468 10b6 07F54773 		add	r3, r7, #796
 8469 10ba 0022     		movs	r2, #0
 8470 10bc 83F84920 		strb	r2, [r3, #73]
 8471 10c0 07F54773 		add	r3, r7, #796
 8472 10c4 6422     		movs	r2, #100
 8473 10c6 83F84A20 		strb	r2, [r3, #74]
 8474 10ca 07F54773 		add	r3, r7, #796
 8475 10ce 6422     		movs	r2, #100
 8476 10d0 83F84B20 		strb	r2, [r3, #75]
 8477 10d4 07F54773 		add	r3, r7, #796
 8478 10d8 6422     		movs	r2, #100
 8479 10da 83F84C20 		strb	r2, [r3, #76]
 8480 10de 07F54773 		add	r3, r7, #796
 8481 10e2 5022     		movs	r2, #80
 8482 10e4 83F84D20 		strb	r2, [r3, #77]
 8483 10e8 07F54773 		add	r3, r7, #796
 8484 10ec 5022     		movs	r2, #80
 8485 10ee 83F84E20 		strb	r2, [r3, #78]
 8486 10f2 07F54773 		add	r3, r7, #796
 8487 10f6 5A22     		movs	r2, #90
 8488 10f8 83F84F20 		strb	r2, [r3, #79]
 8489 10fc 07F54773 		add	r3, r7, #796
 8490 1100 5A22     		movs	r2, #90
 8491 1102 83F85020 		strb	r2, [r3, #80]
 8492 1106 07F54773 		add	r3, r7, #796
 8493 110a 5A22     		movs	r2, #90
 8494 110c 83F85120 		strb	r2, [r3, #81]
1062:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC, ST_JOY_SPEC,
1063:..\src/command_processing.c ****         ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, ST_WR_SPEC,
1064:..\src/command_processing.c ****         
1065:..\src/command_processing.c ****         ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC, ST_FB_SPEC,
1066:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC
1067:..\src/command_processing.c ****         
1068:..\src/command_processing.c ****     };
1069:..\src/command_processing.c ****     
1070:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8495              		.loc 1 1070 0
 8496 1110 07F5EA73 		add	r3, r7, #468
 8497 1114 D04A     		ldr	r2, .L374
 8498 1116 1846     		mov	r0, r3
 8499 1118 1146     		mov	r1, r2
 8500 111a 4FF4A473 		mov	r3, #328
 8501 111e 1A46     		mov	r2, r3
 8502 1120 FFF7FEFF 		bl	memcpy
1071:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1072:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1073:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1074:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1075:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1076:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1077:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1078:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 197


1079:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1080:..\src/command_processing.c ****         
1081:..\src/command_processing.c ****         // GENERIC PARAMS
1082:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1083:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1084:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1085:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1086:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1087:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1088:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1089:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1090:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Joystick closure speed:", "72 
1091:..\src/command_processing.c ****         "73 - Joystick gains:", "74 - Device type:", "75 - EMG FSM act.mode:", "76 - Fast act.thres
1092:..\src/command_processing.c ****         
1093:..\src/command_processing.c ****         "77 - Wrist direction:", "78 - Slave communication active:", "79 - Slave ID:", "80 - Maximu
1094:..\src/command_processing.c ****         "81 - Maximum pressure feedback (kPa):", "82 - Proportional pressure error gain:", 
1095:..\src/command_processing.c ****     };
1096:..\src/command_processing.c **** 
1097:..\src/command_processing.c ****     //Parameters menu
1098:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8503              		.loc 1 1098 0
 8504 1124 07F5AE73 		add	r3, r7, #348
 8505 1128 0022     		movs	r2, #0
 8506 112a 1A60     		str	r2, [r3]
 8507 112c 0433     		adds	r3, r3, #4
 8508 112e 7222     		movs	r2, #114
 8509 1130 0021     		movs	r1, #0
 8510 1132 1846     		mov	r0, r3
 8511 1134 FFF7FEFF 		bl	memset
1099:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8512              		.loc 1 1099 0
 8513 1138 07F5AE70 		add	r0, r7, #348
 8514 113c 6423     		movs	r3, #100
 8515 113e 0A22     		movs	r2, #10
 8516 1140 C649     		ldr	r1, .L374+4
 8517 1142 FFF7FEFF 		bl	sprintf
1100:..\src/command_processing.c **** 
1101:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8518              		.loc 1 1101 0
 8519 1146 07F59273 		add	r3, r7, #292
 8520 114a 0022     		movs	r2, #0
 8521 114c 1A60     		str	r2, [r3]
 8522 114e 0433     		adds	r3, r3, #4
 8523 1150 3422     		movs	r2, #52
 8524 1152 0021     		movs	r1, #0
 8525 1154 1846     		mov	r0, r3
 8526 1156 FFF7FEFF 		bl	memset
1102:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8527              		.loc 1 1102 0
 8528 115a D7F87835 		ldr	r3, [r7, #1400]
 8529 115e 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8530 1162 042B     		cmp	r3, #4
 8531 1164 10D1     		bne	.L306
1103:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8532              		.loc 1 1103 0
 8533 1166 07F59273 		add	r3, r7, #292
 8534 116a BD4A     		ldr	r2, .L374+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 198


 8535 116c 1C46     		mov	r4, r3
 8536 116e 1546     		mov	r5, r2
 8537 1170 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8538 1172 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8539 1174 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8540 1176 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8541 1178 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8542 117a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8543 117c 95E80300 		ldmia	r5, {r0, r1}
 8544 1180 2060     		str	r0, [r4]
 8545 1182 0434     		adds	r4, r4, #4
 8546 1184 2170     		strb	r1, [r4]
 8547 1186 12E0     		b	.L307
 8548              	.L306:
1104:..\src/command_processing.c ****     }
1105:..\src/command_processing.c ****     else {
1106:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n
 8549              		.loc 1 1106 0
 8550 1188 07F59273 		add	r3, r7, #292
 8551 118c B54A     		ldr	r2, .L374+12
 8552 118e 1C46     		mov	r4, r3
 8553 1190 1546     		mov	r5, r2
 8554 1192 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8555 1194 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8556 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8557 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8558 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8559 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8560 119e 95E80300 		ldmia	r5, {r0, r1}
 8561 11a2 2060     		str	r0, [r4]
 8562 11a4 0434     		adds	r4, r4, #4
 8563 11a6 2180     		strh	r1, [r4]	@ movhi
 8564 11a8 0234     		adds	r4, r4, #2
 8565 11aa 0B0C     		lsrs	r3, r1, #16
 8566 11ac 2370     		strb	r3, [r4]
 8567              	.L307:
1107:..\src/command_processing.c ****     }
1108:..\src/command_processing.c ****     
1109:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8568              		.loc 1 1109 0
 8569 11ae 07F1F403 		add	r3, r7, #244
 8570 11b2 AD4A     		ldr	r2, .L374+16
 8571 11b4 1A60     		str	r2, [r3]
 8572 11b6 07F1F403 		add	r3, r7, #244
 8573 11ba AC4A     		ldr	r2, .L374+20
 8574 11bc 5A60     		str	r2, [r3, #4]
 8575 11be 07F1F403 		add	r3, r7, #244
 8576 11c2 AB4A     		ldr	r2, .L374+24
 8577 11c4 9A60     		str	r2, [r3, #8]
 8578 11c6 07F1F403 		add	r3, r7, #244
 8579 11ca AA4A     		ldr	r2, .L374+28
 8580 11cc DA60     		str	r2, [r3, #12]
 8581 11ce 07F1F403 		add	r3, r7, #244
 8582 11d2 A94A     		ldr	r2, .L374+32
 8583 11d4 1A61     		str	r2, [r3, #16]
 8584 11d6 07F1F403 		add	r3, r7, #244
 8585 11da A84A     		ldr	r2, .L374+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 199


 8586 11dc 5A61     		str	r2, [r3, #20]
 8587 11de 07F1F403 		add	r3, r7, #244
 8588 11e2 07F5AE72 		add	r2, r7, #348
 8589 11e6 9A61     		str	r2, [r3, #24]
 8590 11e8 07F1F403 		add	r3, r7, #244
 8591 11ec A44A     		ldr	r2, .L374+40
 8592 11ee DA61     		str	r2, [r3, #28]
 8593 11f0 07F1F403 		add	r3, r7, #244
 8594 11f4 A34A     		ldr	r2, .L374+44
 8595 11f6 1A62     		str	r2, [r3, #32]
 8596 11f8 07F1F403 		add	r3, r7, #244
 8597 11fc A24A     		ldr	r2, .L374+48
 8598 11fe 5A62     		str	r2, [r3, #36]
 8599 1200 07F1F403 		add	r3, r7, #244
 8600 1204 07F59272 		add	r2, r7, #292
 8601 1208 9A62     		str	r2, [r3, #40]
 8602 120a 07F1F403 		add	r3, r7, #244
 8603 120e 9F4A     		ldr	r2, .L374+52
 8604 1210 DA62     		str	r2, [r3, #44]
1110:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1111:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1112:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1113:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1114:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1115:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1116:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1117:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1118:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1119:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1120:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1121:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1122:..\src/command_processing.c ****     };   
1123:..\src/command_processing.c ****     
1124:..\src/command_processing.c ****     uint8 NUM_MENU[31] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8605              		.loc 1 1124 0
 8606 1212 07F1D403 		add	r3, r7, #212
 8607 1216 9E4A     		ldr	r2, .L374+56
 8608 1218 1C46     		mov	r4, r3
 8609 121a 1546     		mov	r5, r2
 8610 121c 2868     		ldr	r0, [r5]	@ unaligned
 8611 121e 6968     		ldr	r1, [r5, #4]	@ unaligned
 8612 1220 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8613 1222 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8614 1224 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8615 1226 2869     		ldr	r0, [r5, #16]	@ unaligned
 8616 1228 6969     		ldr	r1, [r5, #20]	@ unaligned
 8617 122a AA69     		ldr	r2, [r5, #24]	@ unaligned
 8618 122c 07C4     		stmia	r4!, {r0, r1, r2}
 8619 122e AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 8620 1230 AA7F     		ldrb	r2, [r5, #30]
 8621 1232 2380     		strh	r3, [r4]	@ unaligned
 8622 1234 1346     		mov	r3, r2
 8623 1236 A370     		strb	r3, [r4, #2]
1125:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8624              		.loc 1 1125 0
 8625 1238 07F1C803 		add	r3, r7, #200
 8626 123c 954A     		ldr	r2, .L374+60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 200


 8627 123e 1068     		ldr	r0, [r2]	@ unaligned
 8628 1240 5168     		ldr	r1, [r2, #4]	@ unaligned
 8629 1242 03C3     		stmia	r3!, {r0, r1}
 8630 1244 127A     		ldrb	r2, [r2, #8]
 8631 1246 1A70     		strb	r2, [r3]
1126:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8632              		.loc 1 1126 0
 8633 1248 07F1B403 		add	r3, r7, #180
 8634 124c 924A     		ldr	r2, .L374+64
 8635 124e 1C46     		mov	r4, r3
 8636 1250 1546     		mov	r5, r2
 8637 1252 2868     		ldr	r0, [r5]	@ unaligned
 8638 1254 6968     		ldr	r1, [r5, #4]	@ unaligned
 8639 1256 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8640 1258 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8641 125a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8642 125c 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8643 125e 2380     		strh	r3, [r4]	@ unaligned
1127:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8644              		.loc 1 1127 0
 8645 1260 2323     		movs	r3, #35
 8646 1262 87F87335 		strb	r3, [r7, #1395]
1128:..\src/command_processing.c **** 
1129:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1130:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1131:..\src/command_processing.c ****     
1132:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1133:..\src/command_processing.c **** 
1134:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1135:..\src/command_processing.c ****     
1136:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1137:..\src/command_processing.c ****     j = 0;
 8647              		.loc 1 1137 0
 8648 1266 0023     		movs	r3, #0
 8649 1268 87F87E35 		strb	r3, [r7, #1406]
1138:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8650              		.loc 1 1138 0
 8651 126c 0023     		movs	r3, #0
 8652 126e 87F87F35 		strb	r3, [r7, #1407]
 8653 1272 21E0     		b	.L308
 8654              	.L311:
1139:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8655              		.loc 1 1139 0
 8656 1274 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8657 1278 07F1C802 		add	r2, r7, #200
 8658 127c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8659 127e 1A46     		mov	r2, r3
 8660 1280 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8661 1284 0133     		adds	r3, r3, #1
 8662 1286 9A42     		cmp	r2, r3
 8663 1288 0BD1     		bne	.L309
1140:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8664              		.loc 1 1140 0
 8665 128a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8666 128e 07F16002 		add	r2, r7, #96
 8667 1292 0121     		movs	r1, #1
 8668 1294 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 201


1141:..\src/command_processing.c ****             j++;
 8669              		.loc 1 1141 0
 8670 1296 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8671 129a 0133     		adds	r3, r3, #1
 8672 129c 87F87E35 		strb	r3, [r7, #1406]
 8673 12a0 05E0     		b	.L310
 8674              	.L309:
1142:..\src/command_processing.c ****         }
1143:..\src/command_processing.c ****         else {
1144:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8675              		.loc 1 1144 0
 8676 12a2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8677 12a6 07F16002 		add	r2, r7, #96
 8678 12aa 0021     		movs	r1, #0
 8679 12ac D154     		strb	r1, [r2, r3]
 8680              	.L310:
1138:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8681              		.loc 1 1138 0 discriminator 2
 8682 12ae 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8683 12b2 0133     		adds	r3, r3, #1
 8684 12b4 87F87F35 		strb	r3, [r7, #1407]
 8685              	.L308:
1138:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8686              		.loc 1 1138 0 is_stmt 0 discriminator 1
 8687 12b8 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8688 12bc 512B     		cmp	r3, #81
 8689 12be D9D9     		bls	.L311
1145:..\src/command_processing.c ****         }
1146:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1147:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1148:..\src/command_processing.c ****     j = 0;
 8690              		.loc 1 1148 0 is_stmt 1
 8691 12c0 0023     		movs	r3, #0
 8692 12c2 87F87E35 		strb	r3, [r7, #1406]
1149:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8693              		.loc 1 1149 0
 8694 12c6 0023     		movs	r3, #0
 8695 12c8 87F87F35 		strb	r3, [r7, #1407]
 8696 12cc 21E0     		b	.L312
 8697              	.L315:
1150:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8698              		.loc 1 1150 0
 8699 12ce 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8700 12d2 07F1B402 		add	r2, r7, #180
 8701 12d6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8702 12d8 1A46     		mov	r2, r3
 8703 12da 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8704 12de 0133     		adds	r3, r3, #1
 8705 12e0 9A42     		cmp	r2, r3
 8706 12e2 0BD1     		bne	.L313
1151:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8707              		.loc 1 1151 0
 8708 12e4 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8709 12e8 07F10C02 		add	r2, r7, #12
 8710 12ec 0121     		movs	r1, #1
 8711 12ee D154     		strb	r1, [r2, r3]
1152:..\src/command_processing.c ****             j++;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 202


 8712              		.loc 1 1152 0
 8713 12f0 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8714 12f4 0133     		adds	r3, r3, #1
 8715 12f6 87F87E35 		strb	r3, [r7, #1406]
 8716 12fa 05E0     		b	.L314
 8717              	.L313:
1153:..\src/command_processing.c ****         }
1154:..\src/command_processing.c ****         else {
1155:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8718              		.loc 1 1155 0
 8719 12fc 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8720 1300 07F10C02 		add	r2, r7, #12
 8721 1304 0021     		movs	r1, #0
 8722 1306 D154     		strb	r1, [r2, r3]
 8723              	.L314:
1149:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8724              		.loc 1 1149 0 discriminator 2
 8725 1308 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8726 130c 0133     		adds	r3, r3, #1
 8727 130e 87F87F35 		strb	r3, [r7, #1407]
 8728              	.L312:
1149:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8729              		.loc 1 1149 0 is_stmt 0 discriminator 1
 8730 1312 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8731 1316 512B     		cmp	r3, #81
 8732 1318 D9D9     		bls	.L315
1156:..\src/command_processing.c ****         }
1157:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1158:..\src/command_processing.c ****         
1159:..\src/command_processing.c ****     if (!index) {
 8733              		.loc 1 1159 0 is_stmt 1
 8734 131a BB1D     		adds	r3, r7, #6
 8735 131c 1B88     		ldrh	r3, [r3]
 8736 131e 002B     		cmp	r3, #0
 8737 1320 17D1     		bne	.L316
1160:..\src/command_processing.c ****         // Get parameters list with relative types
1161:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8738              		.loc 1 1161 0
 8739 1322 07F54774 		add	r4, r7, #796
 8740 1326 07F55C72 		add	r2, r7, #880
 8741 132a 07F57171 		add	r1, r7, #964
 8742 132e 07F58360 		add	r0, r7, #1048
 8743 1332 07F1F403 		add	r3, r7, #244
 8744 1336 0393     		str	r3, [sp, #12]
 8745 1338 07F16003 		add	r3, r7, #96
 8746 133c 0293     		str	r3, [sp, #8]
 8747 133e 07F5EA73 		add	r3, r7, #468
 8748 1342 0193     		str	r3, [sp, #4]
 8749 1344 07F1D403 		add	r3, r7, #212
 8750 1348 0093     		str	r3, [sp]
 8751 134a 2346     		mov	r3, r4
 8752 134c FFF7FEFF 		bl	get_param_list
1162:..\src/command_processing.c ****     }
1163:..\src/command_processing.c ****     else {
1164:..\src/command_processing.c ****         // Set specific parameter        
1165:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1166:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 203


1167:..\src/command_processing.c ****         // Find size of data
1168:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1169:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1170:..\src/command_processing.c ****                 sod = 1; break;
1171:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1172:..\src/command_processing.c ****                 sod = 2; break;
1173:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1174:..\src/command_processing.c ****                 sod = 4; break;
1175:..\src/command_processing.c ****         }   
1176:..\src/command_processing.c ****             
1177:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1178:..\src/command_processing.c ****             // Use default specifications for param setting
1179:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1180:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1181:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1182:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1183:..\src/command_processing.c ****                     }
1184:..\src/command_processing.c ****                     break;                
1185:..\src/command_processing.c ****                 case TYPE_STRING:
1186:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1187:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1188:..\src/command_processing.c ****                     }
1189:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1190:..\src/command_processing.c ****                 break; 
1191:..\src/command_processing.c ****                 case TYPE_INT8:
1192:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1193:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1194:..\src/command_processing.c ****                     }
1195:..\src/command_processing.c ****                     break;                    
1196:..\src/command_processing.c ****                 case TYPE_INT16:
1197:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1198:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1199:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1200:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1201:..\src/command_processing.c ****                         }
1202:..\src/command_processing.c ****                     }                   
1203:..\src/command_processing.c ****                     break;
1204:..\src/command_processing.c ****                 case TYPE_UINT16:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1207:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1208:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1209:..\src/command_processing.c ****                         }
1210:..\src/command_processing.c ****                     }
1211:..\src/command_processing.c ****                     break;
1212:..\src/command_processing.c ****                 case TYPE_INT32:
1213:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1214:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1215:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1216:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1217:..\src/command_processing.c ****                         }
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;
1220:..\src/command_processing.c ****                 case TYPE_UINT32:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 204


1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_FLOAT:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 default:
1237:..\src/command_processing.c ****                     break;
1238:..\src/command_processing.c ****             }
1239:..\src/command_processing.c ****         }
1240:..\src/command_processing.c ****         else {  
1241:..\src/command_processing.c ****             // Use custom specifications for param setting
1242:..\src/command_processing.c ****             set_custom_param(index);
1243:..\src/command_processing.c ****         }
1244:..\src/command_processing.c ****         
1245:..\src/command_processing.c ****         // Store param also in user_emg structure
1246:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1247:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1248:..\src/command_processing.c ****         }
1249:..\src/command_processing.c ****         
1250:..\src/command_processing.c ****         // Perform chip reset if needed
1251:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1252:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1253:..\src/command_processing.c ****             do {
1254:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1255:..\src/command_processing.c ****                 idx++;
1256:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1257:..\src/command_processing.c ****             
1258:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1259:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1260:..\src/command_processing.c ****             }   
1261:..\src/command_processing.c ****         }
1262:..\src/command_processing.c ****     }
1263:..\src/command_processing.c **** } 
 8753              		.loc 1 1263 0
 8754 1350 E0E2     		b	.L367
 8755              	.L316:
1165:..\src/command_processing.c ****         
 8756              		.loc 1 1165 0
 8757 1352 BB1D     		adds	r3, r7, #6
 8758 1354 1B88     		ldrh	r3, [r3]	@ movhi
 8759 1356 DBB2     		uxtb	r3, r3
 8760 1358 013B     		subs	r3, r3, #1
 8761 135a 87F87235 		strb	r3, [r7, #1394]
1168:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8762              		.loc 1 1168 0
 8763 135e 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8764 1362 07F57172 		add	r2, r7, #964
 8765 1366 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8766 1368 092B     		cmp	r3, #9
 8767 136a 23D8     		bhi	.L318
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 205


 8768 136c 01A2     		adr	r2, .L320
 8769 136e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8770 1372 00BF     		.p2align 2
 8771              	.L320:
 8772 1374 9D130000 		.word	.L319+1
 8773 1378 9D130000 		.word	.L319+1
 8774 137c 9D130000 		.word	.L319+1
 8775 1380 A5130000 		.word	.L321+1
 8776 1384 A5130000 		.word	.L321+1
 8777 1388 AD130000 		.word	.L322+1
 8778 138c AD130000 		.word	.L322+1
 8779 1390 AD130000 		.word	.L322+1
 8780 1394 B5130000 		.word	.L318+1
 8781 1398 9D130000 		.word	.L319+1
 8782              		.p2align 1
 8783              	.L319:
1170:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8784              		.loc 1 1170 0
 8785 139c 0123     		movs	r3, #1
 8786 139e 87F87D35 		strb	r3, [r7, #1405]
 8787 13a2 07E0     		b	.L318
 8788              	.L321:
1172:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8789              		.loc 1 1172 0
 8790 13a4 0223     		movs	r3, #2
 8791 13a6 87F87D35 		strb	r3, [r7, #1405]
 8792 13aa 03E0     		b	.L318
 8793              	.L322:
1174:..\src/command_processing.c ****         }   
 8794              		.loc 1 1174 0
 8795 13ac 0423     		movs	r3, #4
 8796 13ae 87F87D35 		strb	r3, [r7, #1405]
 8797 13b2 00BF     		nop
 8798              	.L318:
1177:..\src/command_processing.c ****             // Use default specifications for param setting
 8799              		.loc 1 1177 0
 8800 13b4 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8801 13b8 07F10C02 		add	r2, r7, #12
 8802 13bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8803 13be 002B     		cmp	r3, #0
 8804 13c0 40F03B82 		bne	.L323
1179:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8805              		.loc 1 1179 0
 8806 13c4 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8807 13c8 07F57172 		add	r2, r7, #964
 8808 13cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8809 13ce 092B     		cmp	r3, #9
 8810 13d0 00F23C82 		bhi	.L366
 8811 13d4 01A2     		adr	r2, .L326
 8812 13d6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8813 13da 00BF     		.p2align 2
 8814              	.L326:
 8815 13dc 05140000 		.word	.L325+1
 8816 13e0 03150000 		.word	.L327+1
 8817 13e4 05140000 		.word	.L325+1
 8818 13e8 55150000 		.word	.L328+1
 8819 13ec EB150000 		.word	.L329+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 206


 8820 13f0 7F160000 		.word	.L330+1
 8821 13f4 13170000 		.word	.L331+1
 8822 13f8 A7170000 		.word	.L332+1
 8823 13fc 4D180000 		.word	.L366+1
 8824 1400 51140000 		.word	.L333+1
 8825              		.p2align 1
 8826              	.L325:
1181:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8827              		.loc 1 1181 0
 8828 1404 0023     		movs	r3, #0
 8829 1406 87F87F35 		strb	r3, [r7, #1407]
 8830 140a 17E0     		b	.L334
 8831              	.L335:
1182:..\src/command_processing.c ****                     }
 8832              		.loc 1 1182 0 discriminator 3
 8833 140c 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8834 1410 07F58363 		add	r3, r7, #1048
 8835 1414 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8836 1418 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8837 141c 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8838 1420 01FB02F2 		mul	r2, r1, r2
 8839 1424 1344     		add	r3, r3, r2
 8840 1426 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8841 142a 0332     		adds	r2, r2, #3
 8842 142c 1B49     		ldr	r1, .L374+68
 8843 142e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8844 1430 1A70     		strb	r2, [r3]
1181:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8845              		.loc 1 1181 0 discriminator 3
 8846 1432 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8847 1436 0133     		adds	r3, r3, #1
 8848 1438 87F87F35 		strb	r3, [r7, #1407]
 8849              	.L334:
1181:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8850              		.loc 1 1181 0 is_stmt 0 discriminator 1
 8851 143c 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8852 1440 07F55C72 		add	r2, r7, #880
 8853 1444 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8854 1446 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8855 144a 9A42     		cmp	r2, r3
 8856 144c DED3     		bcc	.L335
1184:..\src/command_processing.c ****                 case TYPE_STRING:
 8857              		.loc 1 1184 0 is_stmt 1
 8858 144e FEE1     		b	.L361
 8859              	.L333:
1186:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8860              		.loc 1 1186 0
 8861 1450 0023     		movs	r3, #0
 8862 1452 87F87F35 		strb	r3, [r7, #1407]
 8863 1456 3BE0     		b	.L337
 8864              	.L375:
 8865              		.align	2
 8866              	.L374:
 8867 1458 F00E0000 		.word	.LC127
 8868 145c 74020000 		.word	.LC128
 8869 1460 E8020000 		.word	.LC129
 8870 1464 20030000 		.word	.LC130
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 207


 8871 1468 58030000 		.word	.LC131
 8872 146c E4030000 		.word	.LC132
 8873 1470 24040000 		.word	.LC133
 8874 1474 50040000 		.word	.LC134
 8875 1478 68040000 		.word	.LC135
 8876 147c 90040000 		.word	.LC136
 8877 1480 EC040000 		.word	.LC137
 8878 1484 2C050000 		.word	.LC138
 8879 1488 74050000 		.word	.LC139
 8880 148c F0050000 		.word	.LC140
 8881 1490 38100000 		.word	.LC84
 8882 1494 58100000 		.word	.LC85
 8883 1498 64100000 		.word	.LC86
 8884 149c 00000000 		.word	g_rx
 8885              	.L338:
1187:..\src/command_processing.c ****                     }
 8886              		.loc 1 1187 0 discriminator 3
 8887 14a0 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8888 14a4 07F58363 		add	r3, r7, #1048
 8889 14a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8890 14ac 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8891 14b0 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8892 14b4 01FB02F2 		mul	r2, r1, r2
 8893 14b8 1344     		add	r3, r3, r2
 8894 14ba 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8895 14be 0332     		adds	r2, r2, #3
 8896 14c0 E149     		ldr	r1, .L376
 8897 14c2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8898 14c4 1A70     		strb	r2, [r3]
1186:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8899              		.loc 1 1186 0 discriminator 3
 8900 14c6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8901 14ca 0133     		adds	r3, r3, #1
 8902 14cc 87F87F35 		strb	r3, [r7, #1407]
 8903              	.L337:
1186:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8904              		.loc 1 1186 0 is_stmt 0 discriminator 1
 8905 14d0 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8906 14d4 07F55C72 		add	r2, r7, #880
 8907 14d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8908 14da 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8909 14de 9A42     		cmp	r2, r3
 8910 14e0 DED3     		bcc	.L338
1189:..\src/command_processing.c ****                 break; 
 8911              		.loc 1 1189 0 is_stmt 1
 8912 14e2 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8913 14e6 07F58363 		add	r3, r7, #1048
 8914 14ea 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8915 14ee 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8916 14f2 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8917 14f6 01FB02F2 		mul	r2, r1, r2
 8918 14fa 1344     		add	r3, r3, r2
 8919 14fc 0022     		movs	r2, #0
 8920 14fe 1A70     		strb	r2, [r3]
1190:..\src/command_processing.c ****                 case TYPE_INT8:
 8921              		.loc 1 1190 0
 8922 1500 A5E1     		b	.L361
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 208


 8923              	.L327:
1192:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8924              		.loc 1 1192 0
 8925 1502 0023     		movs	r3, #0
 8926 1504 87F87F35 		strb	r3, [r7, #1407]
 8927 1508 1AE0     		b	.L339
 8928              	.L340:
1193:..\src/command_processing.c ****                     }
 8929              		.loc 1 1193 0 discriminator 3
 8930 150a 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8931 150e 07F58363 		add	r3, r7, #1048
 8932 1512 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8933 1516 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8934 151a 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8935 151e 01FB02F2 		mul	r2, r1, r2
 8936 1522 1344     		add	r3, r3, r2
 8937 1524 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8938 1528 0332     		adds	r2, r2, #3
 8939 152a C749     		ldr	r1, .L376
 8940 152c 0A44     		add	r2, r2, r1
 8941 152e 92F90020 		ldrsb	r2, [r2]
 8942 1532 D2B2     		uxtb	r2, r2
 8943 1534 1A70     		strb	r2, [r3]
1192:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8944              		.loc 1 1192 0 discriminator 3
 8945 1536 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8946 153a 0133     		adds	r3, r3, #1
 8947 153c 87F87F35 		strb	r3, [r7, #1407]
 8948              	.L339:
1192:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8949              		.loc 1 1192 0 is_stmt 0 discriminator 1
 8950 1540 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 8951 1544 07F55C72 		add	r2, r7, #880
 8952 1548 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8953 154a 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 8954 154e 9A42     		cmp	r2, r3
 8955 1550 DBD3     		bcc	.L340
1195:..\src/command_processing.c ****                 case TYPE_INT16:
 8956              		.loc 1 1195 0 is_stmt 1
 8957 1552 7CE1     		b	.L361
 8958              	.L328:
1197:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8959              		.loc 1 1197 0
 8960 1554 0023     		movs	r3, #0
 8961 1556 87F87F35 		strb	r3, [r7, #1407]
 8962 155a 3CE0     		b	.L341
 8963              	.L344:
1198:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8964              		.loc 1 1198 0
 8965 155c 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8966 1560 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8967 1564 02FB03F3 		mul	r3, r2, r3
 8968 1568 0333     		adds	r3, r3, #3
 8969 156a B74A     		ldr	r2, .L376
 8970 156c 1344     		add	r3, r3, r2
 8971 156e B3F90030 		ldrsh	r3, [r3]
 8972 1572 A7F87035 		strh	r3, [r7, #1392]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 209


1199:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8973              		.loc 1 1199 0
 8974 1576 0023     		movs	r3, #0
 8975 1578 87F87E35 		strb	r3, [r7, #1406]
 8976 157c 20E0     		b	.L342
 8977              	.L343:
1200:..\src/command_processing.c ****                         }
 8978              		.loc 1 1200 0 discriminator 3
 8979 157e 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 8980 1582 07F58363 		add	r3, r7, #1048
 8981 1586 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8982 158a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 8983 158e 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8984 1592 01FB03F3 		mul	r3, r1, r3
 8985 1596 1846     		mov	r0, r3
 8986 1598 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 8987 159c 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8988 15a0 CB1A     		subs	r3, r1, r3
 8989 15a2 0344     		add	r3, r3, r0
 8990 15a4 013B     		subs	r3, r3, #1
 8991 15a6 1344     		add	r3, r3, r2
 8992 15a8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 8993 15ac 07F5AE61 		add	r1, r7, #1392
 8994 15b0 0A44     		add	r2, r2, r1
 8995 15b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8996 15b4 1A70     		strb	r2, [r3]
1199:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8997              		.loc 1 1199 0 discriminator 3
 8998 15b6 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 8999 15ba 0133     		adds	r3, r3, #1
 9000 15bc 87F87E35 		strb	r3, [r7, #1406]
 9001              	.L342:
1199:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9002              		.loc 1 1199 0 is_stmt 0 discriminator 1
 9003 15c0 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9004 15c4 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9005 15c8 9A42     		cmp	r2, r3
 9006 15ca D8D3     		bcc	.L343
1197:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9007              		.loc 1 1197 0 is_stmt 1 discriminator 2
 9008 15cc 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9009 15d0 0133     		adds	r3, r3, #1
 9010 15d2 87F87F35 		strb	r3, [r7, #1407]
 9011              	.L341:
1197:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9012              		.loc 1 1197 0 is_stmt 0 discriminator 1
 9013 15d6 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9014 15da 07F55C72 		add	r2, r7, #880
 9015 15de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9016 15e0 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9017 15e4 9A42     		cmp	r2, r3
 9018 15e6 B9D3     		bcc	.L344
1203:..\src/command_processing.c ****                 case TYPE_UINT16:
 9019              		.loc 1 1203 0 is_stmt 1
 9020 15e8 31E1     		b	.L361
 9021              	.L329:
1205:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 210


 9022              		.loc 1 1205 0
 9023 15ea 0023     		movs	r3, #0
 9024 15ec 87F87F35 		strb	r3, [r7, #1407]
 9025 15f0 3BE0     		b	.L345
 9026              	.L348:
1206:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9027              		.loc 1 1206 0
 9028 15f2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9029 15f6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9030 15fa 02FB03F3 		mul	r3, r2, r3
 9031 15fe 0333     		adds	r3, r3, #3
 9032 1600 914A     		ldr	r2, .L376
 9033 1602 1344     		add	r3, r3, r2
 9034 1604 1B88     		ldrh	r3, [r3]
 9035 1606 A7F86E35 		strh	r3, [r7, #1390]	@ movhi
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9036              		.loc 1 1207 0
 9037 160a 0023     		movs	r3, #0
 9038 160c 87F87E35 		strb	r3, [r7, #1406]
 9039 1610 20E0     		b	.L346
 9040              	.L347:
1208:..\src/command_processing.c ****                         }
 9041              		.loc 1 1208 0 discriminator 3
 9042 1612 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9043 1616 07F58363 		add	r3, r7, #1048
 9044 161a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9045 161e 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9046 1622 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9047 1626 01FB03F3 		mul	r3, r1, r3
 9048 162a 1846     		mov	r0, r3
 9049 162c 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9050 1630 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9051 1634 CB1A     		subs	r3, r1, r3
 9052 1636 0344     		add	r3, r3, r0
 9053 1638 013B     		subs	r3, r3, #1
 9054 163a 1344     		add	r3, r3, r2
 9055 163c 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9056 1640 07F26E51 		addw	r1, r7, #1390
 9057 1644 0A44     		add	r2, r2, r1
 9058 1646 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9059 1648 1A70     		strb	r2, [r3]
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9060              		.loc 1 1207 0 discriminator 3
 9061 164a 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9062 164e 0133     		adds	r3, r3, #1
 9063 1650 87F87E35 		strb	r3, [r7, #1406]
 9064              	.L346:
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9065              		.loc 1 1207 0 is_stmt 0 discriminator 1
 9066 1654 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9067 1658 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9068 165c 9A42     		cmp	r2, r3
 9069 165e D8D3     		bcc	.L347
1205:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9070              		.loc 1 1205 0 is_stmt 1 discriminator 2
 9071 1660 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9072 1664 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 211


 9073 1666 87F87F35 		strb	r3, [r7, #1407]
 9074              	.L345:
1205:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9075              		.loc 1 1205 0 is_stmt 0 discriminator 1
 9076 166a 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9077 166e 07F55C72 		add	r2, r7, #880
 9078 1672 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9079 1674 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9080 1678 9A42     		cmp	r2, r3
 9081 167a BAD3     		bcc	.L348
1211:..\src/command_processing.c ****                 case TYPE_INT32:
 9082              		.loc 1 1211 0 is_stmt 1
 9083 167c E7E0     		b	.L361
 9084              	.L330:
1213:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9085              		.loc 1 1213 0
 9086 167e 0023     		movs	r3, #0
 9087 1680 87F87F35 		strb	r3, [r7, #1407]
 9088 1684 3BE0     		b	.L349
 9089              	.L352:
1214:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9090              		.loc 1 1214 0
 9091 1686 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9092 168a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9093 168e 02FB03F3 		mul	r3, r2, r3
 9094 1692 0333     		adds	r3, r3, #3
 9095 1694 6C4A     		ldr	r2, .L376
 9096 1696 1344     		add	r3, r3, r2
 9097 1698 1B68     		ldr	r3, [r3]
 9098 169a C7F86835 		str	r3, [r7, #1384]
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9099              		.loc 1 1215 0
 9100 169e 0023     		movs	r3, #0
 9101 16a0 87F87E35 		strb	r3, [r7, #1406]
 9102 16a4 20E0     		b	.L350
 9103              	.L351:
1216:..\src/command_processing.c ****                         }
 9104              		.loc 1 1216 0 discriminator 3
 9105 16a6 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9106 16aa 07F58363 		add	r3, r7, #1048
 9107 16ae 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9108 16b2 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9109 16b6 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9110 16ba 01FB03F3 		mul	r3, r1, r3
 9111 16be 1846     		mov	r0, r3
 9112 16c0 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9113 16c4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9114 16c8 CB1A     		subs	r3, r1, r3
 9115 16ca 0344     		add	r3, r3, r0
 9116 16cc 013B     		subs	r3, r3, #1
 9117 16ce 1344     		add	r3, r3, r2
 9118 16d0 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9119 16d4 07F5AD61 		add	r1, r7, #1384
 9120 16d8 0A44     		add	r2, r2, r1
 9121 16da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9122 16dc 1A70     		strb	r2, [r3]
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 212


 9123              		.loc 1 1215 0 discriminator 3
 9124 16de 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9125 16e2 0133     		adds	r3, r3, #1
 9126 16e4 87F87E35 		strb	r3, [r7, #1406]
 9127              	.L350:
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9128              		.loc 1 1215 0 is_stmt 0 discriminator 1
 9129 16e8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9130 16ec 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9131 16f0 9A42     		cmp	r2, r3
 9132 16f2 D8D3     		bcc	.L351
1213:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9133              		.loc 1 1213 0 is_stmt 1 discriminator 2
 9134 16f4 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9135 16f8 0133     		adds	r3, r3, #1
 9136 16fa 87F87F35 		strb	r3, [r7, #1407]
 9137              	.L349:
1213:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9138              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9139 16fe 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9140 1702 07F55C72 		add	r2, r7, #880
 9141 1706 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9142 1708 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9143 170c 9A42     		cmp	r2, r3
 9144 170e BAD3     		bcc	.L352
1219:..\src/command_processing.c ****                 case TYPE_UINT32:
 9145              		.loc 1 1219 0 is_stmt 1
 9146 1710 9DE0     		b	.L361
 9147              	.L331:
1221:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9148              		.loc 1 1221 0
 9149 1712 0023     		movs	r3, #0
 9150 1714 87F87F35 		strb	r3, [r7, #1407]
 9151 1718 3BE0     		b	.L353
 9152              	.L356:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9153              		.loc 1 1222 0
 9154 171a 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9155 171e 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9156 1722 02FB03F3 		mul	r3, r2, r3
 9157 1726 0333     		adds	r3, r3, #3
 9158 1728 474A     		ldr	r2, .L376
 9159 172a 1344     		add	r3, r3, r2
 9160 172c 1B68     		ldr	r3, [r3]
 9161 172e C7F86435 		str	r3, [r7, #1380]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9162              		.loc 1 1223 0
 9163 1732 0023     		movs	r3, #0
 9164 1734 87F87E35 		strb	r3, [r7, #1406]
 9165 1738 20E0     		b	.L354
 9166              	.L355:
1224:..\src/command_processing.c ****                         }
 9167              		.loc 1 1224 0 discriminator 3
 9168 173a 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9169 173e 07F58363 		add	r3, r7, #1048
 9170 1742 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9171 1746 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 213


 9172 174a 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9173 174e 01FB03F3 		mul	r3, r1, r3
 9174 1752 1846     		mov	r0, r3
 9175 1754 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9176 1758 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9177 175c CB1A     		subs	r3, r1, r3
 9178 175e 0344     		add	r3, r3, r0
 9179 1760 013B     		subs	r3, r3, #1
 9180 1762 1344     		add	r3, r3, r2
 9181 1764 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9182 1768 07F26451 		addw	r1, r7, #1380
 9183 176c 0A44     		add	r2, r2, r1
 9184 176e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9185 1770 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9186              		.loc 1 1223 0 discriminator 3
 9187 1772 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9188 1776 0133     		adds	r3, r3, #1
 9189 1778 87F87E35 		strb	r3, [r7, #1406]
 9190              	.L354:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9191              		.loc 1 1223 0 is_stmt 0 discriminator 1
 9192 177c 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9193 1780 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9194 1784 9A42     		cmp	r2, r3
 9195 1786 D8D3     		bcc	.L355
1221:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9196              		.loc 1 1221 0 is_stmt 1 discriminator 2
 9197 1788 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9198 178c 0133     		adds	r3, r3, #1
 9199 178e 87F87F35 		strb	r3, [r7, #1407]
 9200              	.L353:
1221:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9201              		.loc 1 1221 0 is_stmt 0 discriminator 1
 9202 1792 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9203 1796 07F55C72 		add	r2, r7, #880
 9204 179a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9205 179c 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9206 17a0 9A42     		cmp	r2, r3
 9207 17a2 BAD3     		bcc	.L356
1227:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9208              		.loc 1 1227 0 is_stmt 1
 9209 17a4 53E0     		b	.L361
 9210              	.L332:
1229:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9211              		.loc 1 1229 0
 9212 17a6 0023     		movs	r3, #0
 9213 17a8 87F87F35 		strb	r3, [r7, #1407]
 9214 17ac 3BE0     		b	.L357
 9215              	.L360:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9216              		.loc 1 1230 0
 9217 17ae 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9218 17b2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 9219 17b6 02FB03F3 		mul	r3, r2, r3
 9220 17ba 0333     		adds	r3, r3, #3
 9221 17bc 224A     		ldr	r2, .L376
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 214


 9222 17be 1344     		add	r3, r3, r2
 9223 17c0 1B68     		ldr	r3, [r3]	@ float
 9224 17c2 C7F86035 		str	r3, [r7, #1376]	@ float
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9225              		.loc 1 1231 0
 9226 17c6 0023     		movs	r3, #0
 9227 17c8 87F87E35 		strb	r3, [r7, #1406]
 9228 17cc 20E0     		b	.L358
 9229              	.L359:
1232:..\src/command_processing.c ****                         }
 9230              		.loc 1 1232 0 discriminator 3
 9231 17ce 97F87225 		ldrb	r2, [r7, #1394]	@ zero_extendqisi2
 9232 17d2 07F58363 		add	r3, r7, #1048
 9233 17d6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9234 17da 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9235 17de 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9236 17e2 01FB03F3 		mul	r3, r1, r3
 9237 17e6 1846     		mov	r0, r3
 9238 17e8 97F87D15 		ldrb	r1, [r7, #1405]	@ zero_extendqisi2
 9239 17ec 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9240 17f0 CB1A     		subs	r3, r1, r3
 9241 17f2 0344     		add	r3, r3, r0
 9242 17f4 013B     		subs	r3, r3, #1
 9243 17f6 1344     		add	r3, r3, r2
 9244 17f8 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9245 17fc 07F5AC61 		add	r1, r7, #1376
 9246 1800 0A44     		add	r2, r2, r1
 9247 1802 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9248 1804 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9249              		.loc 1 1231 0 discriminator 3
 9250 1806 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9251 180a 0133     		adds	r3, r3, #1
 9252 180c 87F87E35 		strb	r3, [r7, #1406]
 9253              	.L358:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9254              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9255 1810 97F87E25 		ldrb	r2, [r7, #1406]	@ zero_extendqisi2
 9256 1814 97F87D35 		ldrb	r3, [r7, #1405]	@ zero_extendqisi2
 9257 1818 9A42     		cmp	r2, r3
 9258 181a D8D3     		bcc	.L359
1229:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9259              		.loc 1 1229 0 is_stmt 1 discriminator 2
 9260 181c 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9261 1820 0133     		adds	r3, r3, #1
 9262 1822 87F87F35 		strb	r3, [r7, #1407]
 9263              	.L357:
1229:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9264              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9265 1826 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9266 182a 07F55C72 		add	r2, r7, #880
 9267 182e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9268 1830 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9269 1834 9A42     		cmp	r2, r3
 9270 1836 BAD3     		bcc	.L360
1235:..\src/command_processing.c ****                 default:
 9271              		.loc 1 1235 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 215


 9272 1838 09E0     		b	.L361
 9273              	.L323:
1242:..\src/command_processing.c ****         }
 9274              		.loc 1 1242 0
 9275 183a BB1D     		adds	r3, r7, #6
 9276 183c 1B88     		ldrh	r3, [r3]
 9277 183e 1846     		mov	r0, r3
 9278 1840 FFF7FEFF 		bl	set_custom_param
 9279 1844 03E0     		b	.L361
 9280              	.L377:
 9281 1846 00BF     		.align	2
 9282              	.L376:
 9283 1848 00000000 		.word	g_rx
 9284              	.L366:
1237:..\src/command_processing.c ****             }
 9285              		.loc 1 1237 0
 9286 184c 00BF     		nop
 9287              	.L361:
1246:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9288              		.loc 1 1246 0
 9289 184e 97F87335 		ldrb	r3, [r7, #1395]	@ zero_extendqisi2
 9290 1852 9BB2     		uxth	r3, r3
 9291 1854 BA1D     		adds	r2, r7, #6
 9292 1856 1288     		ldrh	r2, [r2]
 9293 1858 9A42     		cmp	r2, r3
 9294 185a 11D0     		beq	.L362
1247:..\src/command_processing.c ****         }
 9295              		.loc 1 1247 0
 9296 185c D7F87835 		ldr	r3, [r7, #1400]
 9297 1860 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9298 1864 5B01     		lsls	r3, r3, #5
 9299 1866 03F51273 		add	r3, r3, #584
 9300 186a D7F87825 		ldr	r2, [r7, #1400]
 9301 186e D018     		adds	r0, r2, r3
 9302 1870 D7F87835 		ldr	r3, [r7, #1400]
 9303 1874 03F5F873 		add	r3, r3, #496
 9304 1878 1022     		movs	r2, #16
 9305 187a 1946     		mov	r1, r3
 9306 187c FFF7FEFF 		bl	memcpy
 9307              	.L362:
1251:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9308              		.loc 1 1251 0
 9309 1880 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9310 1884 07F57172 		add	r2, r7, #964
 9311 1888 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9312 188a 002B     		cmp	r3, #0
 9313 188c 42D1     		bne	.L367
 9314              	.LBB18:
1252:..\src/command_processing.c ****             do {
 9315              		.loc 1 1252 0
 9316 188e 0023     		movs	r3, #0
 9317 1890 87F87735 		strb	r3, [r7, #1399]
 9318 1894 FF23     		movs	r3, #255
 9319 1896 87F87635 		strb	r3, [r7, #1398]
 9320              	.L364:
1254:..\src/command_processing.c ****                 idx++;
 9321              		.loc 1 1254 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 216


 9322 189a 97F87735 		ldrb	r3, [r7, #1399]	@ zero_extendqisi2
 9323 189e 07F57172 		add	r2, r7, #964
 9324 18a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9325 18a4 002B     		cmp	r3, #0
 9326 18a6 04D1     		bne	.L363
1254:..\src/command_processing.c ****                 idx++;
 9327              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9328 18a8 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9329 18ac 0133     		adds	r3, r3, #1
 9330 18ae 87F87635 		strb	r3, [r7, #1398]
 9331              	.L363:
1255:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9332              		.loc 1 1255 0 is_stmt 1
 9333 18b2 97F87735 		ldrb	r3, [r7, #1399]	@ zero_extendqisi2
 9334 18b6 0133     		adds	r3, r3, #1
 9335 18b8 87F87735 		strb	r3, [r7, #1399]
1256:..\src/command_processing.c ****             
 9336              		.loc 1 1256 0
 9337 18bc 97F87725 		ldrb	r2, [r7, #1399]	@ zero_extendqisi2
 9338 18c0 97F87235 		ldrb	r3, [r7, #1394]	@ zero_extendqisi2
 9339 18c4 9A42     		cmp	r2, r3
 9340 18c6 E8D9     		bls	.L364
1258:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9341              		.loc 1 1258 0
 9342 18c8 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9343 18cc 07F1D402 		add	r2, r7, #212
 9344 18d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9345 18d2 052B     		cmp	r3, #5
 9346 18d4 1BD0     		beq	.L365
1258:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9347              		.loc 1 1258 0 is_stmt 0 discriminator 1
 9348 18d6 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9349 18da 07F1D402 		add	r2, r7, #212
 9350 18de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9351 18e0 062B     		cmp	r3, #6
 9352 18e2 14D0     		beq	.L365
1258:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9353              		.loc 1 1258 0 discriminator 2
 9354 18e4 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9355 18e8 07F1D402 		add	r2, r7, #212
 9356 18ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9357 18ee 082B     		cmp	r3, #8
 9358 18f0 0DD0     		beq	.L365
1258:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9359              		.loc 1 1258 0 discriminator 3
 9360 18f2 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9361 18f6 07F1D402 		add	r2, r7, #212
 9362 18fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9363 18fc 092B     		cmp	r3, #9
 9364 18fe 06D0     		beq	.L365
1258:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9365              		.loc 1 1258 0 discriminator 4
 9366 1900 97F87635 		ldrb	r3, [r7, #1398]	@ zero_extendqisi2
 9367 1904 07F1D402 		add	r2, r7, #212
 9368 1908 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9369 190a 0A2B     		cmp	r3, #10
 9370 190c 02D1     		bne	.L367
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 217


 9371              	.L365:
1259:..\src/command_processing.c ****             }   
 9372              		.loc 1 1259 0 is_stmt 1
 9373 190e 044B     		ldr	r3, .L378
 9374 1910 0122     		movs	r2, #1
 9375 1912 1A70     		strb	r2, [r3]
 9376              	.L367:
 9377              	.LBE18:
 9378              		.loc 1 1263 0
 9379 1914 00BF     		nop
 9380 1916 07F5B067 		add	r7, r7, #1408
 9381              		.cfi_def_cfa_offset 16
 9382 191a BD46     		mov	sp, r7
 9383              		.cfi_def_cfa_register 13
 9384              		@ sp needed
 9385 191c B0BD     		pop	{r4, r5, r7, pc}
 9386              	.L379:
 9387 191e 00BF     		.align	2
 9388              	.L378:
 9389 1920 00000000 		.word	reset_PSoC_flag
 9390              		.cfi_endproc
 9391              	.LFE68:
 9392              		.size	manage_param_list, .-manage_param_list
 9393              		.global	__aeabi_fmul
 9394              		.global	__aeabi_f2iz
 9395              		.section	.text.set_custom_param,"ax",%progbits
 9396              		.align	2
 9397              		.global	set_custom_param
 9398              		.thumb
 9399              		.thumb_func
 9400              		.type	set_custom_param, %function
 9401              	set_custom_param:
 9402              	.LFB69:
1264:..\src/command_processing.c **** 
1265:..\src/command_processing.c **** //==============================================================================
1266:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1267:..\src/command_processing.c **** //==============================================================================
1268:..\src/command_processing.c **** 
1269:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9403              		.loc 1 1269 0
 9404              		.cfi_startproc
 9405              		@ args = 0, pretend = 0, frame = 24
 9406              		@ frame_needed = 1, uses_anonymous_args = 0
 9407 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9408              		.cfi_def_cfa_offset 20
 9409              		.cfi_offset 4, -20
 9410              		.cfi_offset 5, -16
 9411              		.cfi_offset 6, -12
 9412              		.cfi_offset 7, -8
 9413              		.cfi_offset 14, -4
 9414 0002 87B0     		sub	sp, sp, #28
 9415              		.cfi_def_cfa_offset 48
 9416 0004 00AF     		add	r7, sp, #0
 9417              		.cfi_def_cfa_register 7
 9418 0006 0346     		mov	r3, r0
 9419 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1270:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 218


1271:..\src/command_processing.c ****     uint8 CYDATA i, j;
1272:..\src/command_processing.c ****     uint8 aux_uchar;
1273:..\src/command_processing.c ****     float aux_float, aux_float2;
1274:..\src/command_processing.c **** 
1275:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9420              		.loc 1 1275 0
 9421 000a 0023     		movs	r3, #0
 9422 000c 3B75     		strb	r3, [r7, #20]
1276:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9423              		.loc 1 1276 0
 9424 000e 0123     		movs	r3, #1
 9425 0010 FB74     		strb	r3, [r7, #19]
1277:..\src/command_processing.c ****     
1278:..\src/command_processing.c ****     switch(index){
 9426              		.loc 1 1278 0
 9427 0012 FB88     		ldrh	r3, [r7, #6]
 9428 0014 023B     		subs	r3, r3, #2
 9429 0016 482B     		cmp	r3, #72
 9430 0018 01F22482 		bhi	.L473
 9431 001c 01A2     		adr	r2, .L383
 9432 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9433 0022 00BF     		.p2align 2
 9434              	.L383:
 9435 0024 49010000 		.word	.L382+1
 9436 0028 7B030000 		.word	.L384+1
 9437 002c 65140000 		.word	.L473+1
 9438 0030 C1050000 		.word	.L385+1
 9439 0034 65140000 		.word	.L473+1
 9440 0038 65140000 		.word	.L473+1
 9441 003c 0B060000 		.word	.L386+1
 9442 0040 65140000 		.word	.L473+1
 9443 0044 65140000 		.word	.L473+1
 9444 0048 41070000 		.word	.L387+1
 9445 004c 65140000 		.word	.L473+1
 9446 0050 65140000 		.word	.L473+1
 9447 0054 65140000 		.word	.L473+1
 9448 0058 65140000 		.word	.L473+1
 9449 005c 65140000 		.word	.L473+1
 9450 0060 65140000 		.word	.L473+1
 9451 0064 65140000 		.word	.L473+1
 9452 0068 65140000 		.word	.L473+1
 9453 006c 65140000 		.word	.L473+1
 9454 0070 65140000 		.word	.L473+1
 9455 0074 65140000 		.word	.L473+1
 9456 0078 41080000 		.word	.L388+1
 9457 007c 9F080000 		.word	.L389+1
 9458 0080 65140000 		.word	.L473+1
 9459 0084 65140000 		.word	.L473+1
 9460 0088 65140000 		.word	.L473+1
 9461 008c D9080000 		.word	.L390+1
 9462 0090 65140000 		.word	.L473+1
 9463 0094 65140000 		.word	.L473+1
 9464 0098 550A0000 		.word	.L391+1
 9465 009c 010B0000 		.word	.L392+1
 9466 00a0 65140000 		.word	.L473+1
 9467 00a4 65140000 		.word	.L473+1
 9468 00a8 65140000 		.word	.L473+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 219


 9469 00ac 65140000 		.word	.L473+1
 9470 00b0 65140000 		.word	.L473+1
 9471 00b4 3B0B0000 		.word	.L393+1
 9472 00b8 65140000 		.word	.L473+1
 9473 00bc 65140000 		.word	.L473+1
 9474 00c0 65140000 		.word	.L473+1
 9475 00c4 65140000 		.word	.L473+1
 9476 00c8 65140000 		.word	.L473+1
 9477 00cc 750B0000 		.word	.L394+1
 9478 00d0 BB0D0000 		.word	.L395+1
 9479 00d4 65140000 		.word	.L473+1
 9480 00d8 E90F0000 		.word	.L396+1
 9481 00dc 65140000 		.word	.L473+1
 9482 00e0 65140000 		.word	.L473+1
 9483 00e4 51100000 		.word	.L397+1
 9484 00e8 65140000 		.word	.L473+1
 9485 00ec 65140000 		.word	.L473+1
 9486 00f0 65110000 		.word	.L398+1
 9487 00f4 65140000 		.word	.L473+1
 9488 00f8 65140000 		.word	.L473+1
 9489 00fc 65140000 		.word	.L473+1
 9490 0100 65140000 		.word	.L473+1
 9491 0104 65140000 		.word	.L473+1
 9492 0108 65140000 		.word	.L473+1
 9493 010c 65140000 		.word	.L473+1
 9494 0110 63120000 		.word	.L399+1
 9495 0114 65140000 		.word	.L473+1
 9496 0118 65140000 		.word	.L473+1
 9497 011c 65140000 		.word	.L473+1
 9498 0120 65140000 		.word	.L473+1
 9499 0124 65140000 		.word	.L473+1
 9500 0128 65140000 		.word	.L473+1
 9501 012c 65140000 		.word	.L473+1
 9502 0130 65140000 		.word	.L473+1
 9503 0134 65140000 		.word	.L473+1
 9504 0138 65140000 		.word	.L473+1
 9505 013c 65140000 		.word	.L473+1
 9506 0140 65140000 		.word	.L473+1
 9507 0144 AD120000 		.word	.L400+1
 9508              		.p2align 1
 9509              	.L382:
1279:..\src/command_processing.c ****         case 2:         // Position PID
1280:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9510              		.loc 1 1280 0
 9511 0148 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9512 014a AB49     		ldr	r1, .L479
 9513 014c 1346     		mov	r3, r2
 9514 014e DB00     		lsls	r3, r3, #3
 9515 0150 9B1A     		subs	r3, r3, r2
 9516 0152 1B01     		lsls	r3, r3, #4
 9517 0154 0B44     		add	r3, r3, r1
 9518 0156 03F20F13 		addw	r3, r3, #271
 9519 015a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9520 015c 032B     		cmp	r3, #3
 9521 015e 00F08680 		beq	.L401
1281:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9522              		.loc 1 1281 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 220


 9523 0162 A64B     		ldr	r3, .L479+4
 9524 0164 1B68     		ldr	r3, [r3]	@ float
 9525 0166 FB60     		str	r3, [r7, #12]	@ float
1282:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9526              		.loc 1 1282 0
 9527 0168 0023     		movs	r3, #0
 9528 016a BB75     		strb	r3, [r7, #22]
 9529 016c 0EE0     		b	.L402
 9530              	.L403:
1283:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9531              		.loc 1 1283 0 discriminator 3
 9532 016e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9533 0170 C3F10303 		rsb	r3, r3, #3
 9534 0174 07F10802 		add	r2, r7, #8
 9535 0178 1344     		add	r3, r3, r2
 9536 017a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9537 017c 07F10C01 		add	r1, r7, #12
 9538 0180 0A44     		add	r2, r2, r1
 9539 0182 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9540 0184 1A70     		strb	r2, [r3]
1282:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9541              		.loc 1 1282 0 discriminator 3
 9542 0186 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9543 0188 0133     		adds	r3, r3, #1
 9544 018a BB75     		strb	r3, [r7, #22]
 9545              	.L402:
1282:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9546              		.loc 1 1282 0 is_stmt 0 discriminator 1
 9547 018c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9548 018e 032B     		cmp	r3, #3
 9549 0190 EDD9     		bls	.L403
1284:..\src/command_processing.c ****                 }
1285:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9550              		.loc 1 1285 0 is_stmt 1
 9551 0192 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9552 0194 BB68     		ldr	r3, [r7, #8]	@ float
 9553 0196 4FF08F41 		mov	r1, #1199570944
 9554 019a 1846     		mov	r0, r3
 9555 019c FFF7FEFF 		bl	__aeabi_fmul
 9556 01a0 0346     		mov	r3, r0
 9557 01a2 1846     		mov	r0, r3
 9558 01a4 FFF7FEFF 		bl	__aeabi_f2iz
 9559 01a8 0146     		mov	r1, r0
 9560 01aa 954A     		ldr	r2, .L479+8
 9561 01ac 2346     		mov	r3, r4
 9562 01ae DB00     		lsls	r3, r3, #3
 9563 01b0 1B1B     		subs	r3, r3, r4
 9564 01b2 1B01     		lsls	r3, r3, #4
 9565 01b4 1344     		add	r3, r3, r2
 9566 01b6 B033     		adds	r3, r3, #176
 9567 01b8 1960     		str	r1, [r3]
1286:..\src/command_processing.c ****                 
1287:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9568              		.loc 1 1287 0
 9569 01ba 924B     		ldr	r3, .L479+12
 9570 01bc 1B68     		ldr	r3, [r3]	@ float
 9571 01be FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 221


1288:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9572              		.loc 1 1288 0
 9573 01c0 0023     		movs	r3, #0
 9574 01c2 BB75     		strb	r3, [r7, #22]
 9575 01c4 0EE0     		b	.L404
 9576              	.L405:
1289:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9577              		.loc 1 1289 0 discriminator 3
 9578 01c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9579 01c8 C3F10303 		rsb	r3, r3, #3
 9580 01cc 07F10802 		add	r2, r7, #8
 9581 01d0 1344     		add	r3, r3, r2
 9582 01d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9583 01d4 07F10C01 		add	r1, r7, #12
 9584 01d8 0A44     		add	r2, r2, r1
 9585 01da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9586 01dc 1A70     		strb	r2, [r3]
1288:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9587              		.loc 1 1288 0 discriminator 3
 9588 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9589 01e0 0133     		adds	r3, r3, #1
 9590 01e2 BB75     		strb	r3, [r7, #22]
 9591              	.L404:
1288:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9592              		.loc 1 1288 0 is_stmt 0 discriminator 1
 9593 01e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9594 01e6 032B     		cmp	r3, #3
 9595 01e8 EDD9     		bls	.L405
1290:..\src/command_processing.c ****                 }
1291:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9596              		.loc 1 1291 0 is_stmt 1
 9597 01ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9598 01ec BB68     		ldr	r3, [r7, #8]	@ float
 9599 01ee 4FF08F41 		mov	r1, #1199570944
 9600 01f2 1846     		mov	r0, r3
 9601 01f4 FFF7FEFF 		bl	__aeabi_fmul
 9602 01f8 0346     		mov	r3, r0
 9603 01fa 1846     		mov	r0, r3
 9604 01fc FFF7FEFF 		bl	__aeabi_f2iz
 9605 0200 0146     		mov	r1, r0
 9606 0202 7F4A     		ldr	r2, .L479+8
 9607 0204 2346     		mov	r3, r4
 9608 0206 DB00     		lsls	r3, r3, #3
 9609 0208 1B1B     		subs	r3, r3, r4
 9610 020a 1B01     		lsls	r3, r3, #4
 9611 020c 1344     		add	r3, r3, r2
 9612 020e B433     		adds	r3, r3, #180
 9613 0210 1960     		str	r1, [r3]
1292:..\src/command_processing.c ****                 
1293:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9614              		.loc 1 1293 0
 9615 0212 7D4B     		ldr	r3, .L479+16
 9616 0214 1B68     		ldr	r3, [r3]	@ float
 9617 0216 FB60     		str	r3, [r7, #12]	@ float
1294:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9618              		.loc 1 1294 0
 9619 0218 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 222


 9620 021a BB75     		strb	r3, [r7, #22]
 9621 021c 0EE0     		b	.L406
 9622              	.L407:
1295:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9623              		.loc 1 1295 0 discriminator 3
 9624 021e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9625 0220 C3F10303 		rsb	r3, r3, #3
 9626 0224 07F10802 		add	r2, r7, #8
 9627 0228 1344     		add	r3, r3, r2
 9628 022a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9629 022c 07F10C01 		add	r1, r7, #12
 9630 0230 0A44     		add	r2, r2, r1
 9631 0232 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9632 0234 1A70     		strb	r2, [r3]
1294:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9633              		.loc 1 1294 0 discriminator 3
 9634 0236 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9635 0238 0133     		adds	r3, r3, #1
 9636 023a BB75     		strb	r3, [r7, #22]
 9637              	.L406:
1294:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9638              		.loc 1 1294 0 is_stmt 0 discriminator 1
 9639 023c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9640 023e 032B     		cmp	r3, #3
 9641 0240 EDD9     		bls	.L407
1296:..\src/command_processing.c ****                 }
1297:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9642              		.loc 1 1297 0 is_stmt 1
 9643 0242 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9644 0244 BB68     		ldr	r3, [r7, #8]	@ float
 9645 0246 4FF08F41 		mov	r1, #1199570944
 9646 024a 1846     		mov	r0, r3
 9647 024c FFF7FEFF 		bl	__aeabi_fmul
 9648 0250 0346     		mov	r3, r0
 9649 0252 1846     		mov	r0, r3
 9650 0254 FFF7FEFF 		bl	__aeabi_f2iz
 9651 0258 0146     		mov	r1, r0
 9652 025a 694A     		ldr	r2, .L479+8
 9653 025c 2346     		mov	r3, r4
 9654 025e DB00     		lsls	r3, r3, #3
 9655 0260 1B1B     		subs	r3, r3, r4
 9656 0262 1B01     		lsls	r3, r3, #4
 9657 0264 1344     		add	r3, r3, r2
 9658 0266 B833     		adds	r3, r3, #184
 9659 0268 1960     		str	r1, [r3]
1298:..\src/command_processing.c ****             }
1299:..\src/command_processing.c ****             else {
1300:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1301:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1302:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1303:..\src/command_processing.c ****                 }
1304:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1305:..\src/command_processing.c ****                 
1306:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1307:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1308:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1309:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 223


1310:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1311:..\src/command_processing.c ****                 
1312:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1313:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1314:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1315:..\src/command_processing.c ****                 }
1316:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1317:..\src/command_processing.c ****             }
1318:..\src/command_processing.c ****             break;
 9660              		.loc 1 1318 0
 9661 026a 01F006B9 		b	.L415
 9662              	.L401:
1300:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9663              		.loc 1 1300 0
 9664 026e 634B     		ldr	r3, .L479+4
 9665 0270 1B68     		ldr	r3, [r3]	@ float
 9666 0272 FB60     		str	r3, [r7, #12]	@ float
1301:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9667              		.loc 1 1301 0
 9668 0274 0023     		movs	r3, #0
 9669 0276 BB75     		strb	r3, [r7, #22]
 9670 0278 0EE0     		b	.L409
 9671              	.L410:
1302:..\src/command_processing.c ****                 }
 9672              		.loc 1 1302 0 discriminator 3
 9673 027a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9674 027c C3F10303 		rsb	r3, r3, #3
 9675 0280 07F10802 		add	r2, r7, #8
 9676 0284 1344     		add	r3, r3, r2
 9677 0286 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9678 0288 07F10C01 		add	r1, r7, #12
 9679 028c 0A44     		add	r2, r2, r1
 9680 028e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9681 0290 1A70     		strb	r2, [r3]
1301:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9682              		.loc 1 1301 0 discriminator 3
 9683 0292 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9684 0294 0133     		adds	r3, r3, #1
 9685 0296 BB75     		strb	r3, [r7, #22]
 9686              	.L409:
1301:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9687              		.loc 1 1301 0 is_stmt 0 discriminator 1
 9688 0298 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9689 029a 032B     		cmp	r3, #3
 9690 029c EDD9     		bls	.L410
1304:..\src/command_processing.c ****                 
 9691              		.loc 1 1304 0 is_stmt 1
 9692 029e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9693 02a0 BB68     		ldr	r3, [r7, #8]	@ float
 9694 02a2 4FF08F41 		mov	r1, #1199570944
 9695 02a6 1846     		mov	r0, r3
 9696 02a8 FFF7FEFF 		bl	__aeabi_fmul
 9697 02ac 0346     		mov	r3, r0
 9698 02ae 1846     		mov	r0, r3
 9699 02b0 FFF7FEFF 		bl	__aeabi_f2iz
 9700 02b4 0146     		mov	r1, r0
 9701 02b6 524A     		ldr	r2, .L479+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 224


 9702 02b8 2346     		mov	r3, r4
 9703 02ba DB00     		lsls	r3, r3, #3
 9704 02bc 1B1B     		subs	r3, r3, r4
 9705 02be 1B01     		lsls	r3, r3, #4
 9706 02c0 1344     		add	r3, r3, r2
 9707 02c2 C833     		adds	r3, r3, #200
 9708 02c4 1960     		str	r1, [r3]
1306:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9709              		.loc 1 1306 0
 9710 02c6 4F4B     		ldr	r3, .L479+12
 9711 02c8 1B68     		ldr	r3, [r3]	@ float
 9712 02ca FB60     		str	r3, [r7, #12]	@ float
1307:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9713              		.loc 1 1307 0
 9714 02cc 0023     		movs	r3, #0
 9715 02ce BB75     		strb	r3, [r7, #22]
 9716 02d0 0EE0     		b	.L411
 9717              	.L412:
1308:..\src/command_processing.c ****                 }
 9718              		.loc 1 1308 0 discriminator 3
 9719 02d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9720 02d4 C3F10303 		rsb	r3, r3, #3
 9721 02d8 07F10802 		add	r2, r7, #8
 9722 02dc 1344     		add	r3, r3, r2
 9723 02de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9724 02e0 07F10C01 		add	r1, r7, #12
 9725 02e4 0A44     		add	r2, r2, r1
 9726 02e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9727 02e8 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9728              		.loc 1 1307 0 discriminator 3
 9729 02ea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9730 02ec 0133     		adds	r3, r3, #1
 9731 02ee BB75     		strb	r3, [r7, #22]
 9732              	.L411:
1307:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9733              		.loc 1 1307 0 is_stmt 0 discriminator 1
 9734 02f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9735 02f2 032B     		cmp	r3, #3
 9736 02f4 EDD9     		bls	.L412
1310:..\src/command_processing.c ****                 
 9737              		.loc 1 1310 0 is_stmt 1
 9738 02f6 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9739 02f8 BB68     		ldr	r3, [r7, #8]	@ float
 9740 02fa 4FF08F41 		mov	r1, #1199570944
 9741 02fe 1846     		mov	r0, r3
 9742 0300 FFF7FEFF 		bl	__aeabi_fmul
 9743 0304 0346     		mov	r3, r0
 9744 0306 1846     		mov	r0, r3
 9745 0308 FFF7FEFF 		bl	__aeabi_f2iz
 9746 030c 0146     		mov	r1, r0
 9747 030e 3C4A     		ldr	r2, .L479+8
 9748 0310 2346     		mov	r3, r4
 9749 0312 DB00     		lsls	r3, r3, #3
 9750 0314 1B1B     		subs	r3, r3, r4
 9751 0316 1B01     		lsls	r3, r3, #4
 9752 0318 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 225


 9753 031a CC33     		adds	r3, r3, #204
 9754 031c 1960     		str	r1, [r3]
1312:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9755              		.loc 1 1312 0
 9756 031e 3A4B     		ldr	r3, .L479+16
 9757 0320 1B68     		ldr	r3, [r3]	@ float
 9758 0322 FB60     		str	r3, [r7, #12]	@ float
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9759              		.loc 1 1313 0
 9760 0324 0023     		movs	r3, #0
 9761 0326 BB75     		strb	r3, [r7, #22]
 9762 0328 0EE0     		b	.L413
 9763              	.L414:
1314:..\src/command_processing.c ****                 }
 9764              		.loc 1 1314 0 discriminator 3
 9765 032a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9766 032c C3F10303 		rsb	r3, r3, #3
 9767 0330 07F10802 		add	r2, r7, #8
 9768 0334 1344     		add	r3, r3, r2
 9769 0336 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9770 0338 07F10C01 		add	r1, r7, #12
 9771 033c 0A44     		add	r2, r2, r1
 9772 033e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9773 0340 1A70     		strb	r2, [r3]
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9774              		.loc 1 1313 0 discriminator 3
 9775 0342 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9776 0344 0133     		adds	r3, r3, #1
 9777 0346 BB75     		strb	r3, [r7, #22]
 9778              	.L413:
1313:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9779              		.loc 1 1313 0 is_stmt 0 discriminator 1
 9780 0348 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9781 034a 032B     		cmp	r3, #3
 9782 034c EDD9     		bls	.L414
1316:..\src/command_processing.c ****             }
 9783              		.loc 1 1316 0 is_stmt 1
 9784 034e 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9785 0350 BB68     		ldr	r3, [r7, #8]	@ float
 9786 0352 4FF08F41 		mov	r1, #1199570944
 9787 0356 1846     		mov	r0, r3
 9788 0358 FFF7FEFF 		bl	__aeabi_fmul
 9789 035c 0346     		mov	r3, r0
 9790 035e 1846     		mov	r0, r3
 9791 0360 FFF7FEFF 		bl	__aeabi_f2iz
 9792 0364 0146     		mov	r1, r0
 9793 0366 264A     		ldr	r2, .L479+8
 9794 0368 2346     		mov	r3, r4
 9795 036a DB00     		lsls	r3, r3, #3
 9796 036c 1B1B     		subs	r3, r3, r4
 9797 036e 1B01     		lsls	r3, r3, #4
 9798 0370 1344     		add	r3, r3, r2
 9799 0372 D033     		adds	r3, r3, #208
 9800 0374 1960     		str	r1, [r3]
 9801              		.loc 1 1318 0
 9802 0376 01F080B8 		b	.L415
 9803              	.L384:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 226


1319:..\src/command_processing.c ****             
1320:..\src/command_processing.c ****         case 3:         //Current PID
1321:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9804              		.loc 1 1321 0
 9805 037a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9806 037c 1E49     		ldr	r1, .L479
 9807 037e 1346     		mov	r3, r2
 9808 0380 DB00     		lsls	r3, r3, #3
 9809 0382 9B1A     		subs	r3, r3, r2
 9810 0384 1B01     		lsls	r3, r3, #4
 9811 0386 0B44     		add	r3, r3, r1
 9812 0388 03F20F13 		addw	r3, r3, #271
 9813 038c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9814 038e 032B     		cmp	r3, #3
 9815 0390 00F09080 		beq	.L416
1322:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9816              		.loc 1 1322 0
 9817 0394 194B     		ldr	r3, .L479+4
 9818 0396 1B68     		ldr	r3, [r3]	@ float
 9819 0398 FB60     		str	r3, [r7, #12]	@ float
1323:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9820              		.loc 1 1323 0
 9821 039a 0023     		movs	r3, #0
 9822 039c BB75     		strb	r3, [r7, #22]
 9823 039e 0EE0     		b	.L417
 9824              	.L418:
1324:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9825              		.loc 1 1324 0 discriminator 3
 9826 03a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9827 03a2 C3F10303 		rsb	r3, r3, #3
 9828 03a6 07F10802 		add	r2, r7, #8
 9829 03aa 1344     		add	r3, r3, r2
 9830 03ac BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9831 03ae 07F10C01 		add	r1, r7, #12
 9832 03b2 0A44     		add	r2, r2, r1
 9833 03b4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9834 03b6 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9835              		.loc 1 1323 0 discriminator 3
 9836 03b8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9837 03ba 0133     		adds	r3, r3, #1
 9838 03bc BB75     		strb	r3, [r7, #22]
 9839              	.L417:
1323:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9840              		.loc 1 1323 0 is_stmt 0 discriminator 1
 9841 03be BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9842 03c0 032B     		cmp	r3, #3
 9843 03c2 EDD9     		bls	.L418
1325:..\src/command_processing.c ****                 }
1326:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9844              		.loc 1 1326 0 is_stmt 1
 9845 03c4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9846 03c6 BB68     		ldr	r3, [r7, #8]	@ float
 9847 03c8 4FF08F41 		mov	r1, #1199570944
 9848 03cc 1846     		mov	r0, r3
 9849 03ce FFF7FEFF 		bl	__aeabi_fmul
 9850 03d2 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 227


 9851 03d4 1846     		mov	r0, r3
 9852 03d6 FFF7FEFF 		bl	__aeabi_f2iz
 9853 03da 0146     		mov	r1, r0
 9854 03dc 084A     		ldr	r2, .L479+8
 9855 03de 2346     		mov	r3, r4
 9856 03e0 DB00     		lsls	r3, r3, #3
 9857 03e2 1B1B     		subs	r3, r3, r4
 9858 03e4 1B01     		lsls	r3, r3, #4
 9859 03e6 1344     		add	r3, r3, r2
 9860 03e8 BC33     		adds	r3, r3, #188
 9861 03ea 1960     		str	r1, [r3]
1327:..\src/command_processing.c ****                 
1328:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9862              		.loc 1 1328 0
 9863 03ec 054B     		ldr	r3, .L479+12
 9864 03ee 1B68     		ldr	r3, [r3]	@ float
 9865 03f0 FB60     		str	r3, [r7, #12]	@ float
1329:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9866              		.loc 1 1329 0
 9867 03f2 0023     		movs	r3, #0
 9868 03f4 BB75     		strb	r3, [r7, #22]
 9869 03f6 18E0     		b	.L419
 9870              	.L480:
 9871              		.align	2
 9872              	.L479:
 9873 03f8 00000000 		.word	c_mem
 9874 03fc 03000000 		.word	g_rx+3
 9875 0400 00000000 		.word	g_mem
 9876 0404 07000000 		.word	g_rx+7
 9877 0408 0B000000 		.word	g_rx+11
 9878              	.L420:
1330:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9879              		.loc 1 1330 0 discriminator 3
 9880 040c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9881 040e C3F10303 		rsb	r3, r3, #3
 9882 0412 07F10802 		add	r2, r7, #8
 9883 0416 1344     		add	r3, r3, r2
 9884 0418 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9885 041a 07F10C01 		add	r1, r7, #12
 9886 041e 0A44     		add	r2, r2, r1
 9887 0420 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9888 0422 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9889              		.loc 1 1329 0 discriminator 3
 9890 0424 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9891 0426 0133     		adds	r3, r3, #1
 9892 0428 BB75     		strb	r3, [r7, #22]
 9893              	.L419:
1329:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9894              		.loc 1 1329 0 is_stmt 0 discriminator 1
 9895 042a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9896 042c 032B     		cmp	r3, #3
 9897 042e EDD9     		bls	.L420
1331:..\src/command_processing.c ****                 }
1332:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9898              		.loc 1 1332 0 is_stmt 1
 9899 0430 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 228


 9900 0432 BB68     		ldr	r3, [r7, #8]	@ float
 9901 0434 4FF08F41 		mov	r1, #1199570944
 9902 0438 1846     		mov	r0, r3
 9903 043a FFF7FEFF 		bl	__aeabi_fmul
 9904 043e 0346     		mov	r3, r0
 9905 0440 1846     		mov	r0, r3
 9906 0442 FFF7FEFF 		bl	__aeabi_f2iz
 9907 0446 0146     		mov	r1, r0
 9908 0448 B54A     		ldr	r2, .L481
 9909 044a 2346     		mov	r3, r4
 9910 044c DB00     		lsls	r3, r3, #3
 9911 044e 1B1B     		subs	r3, r3, r4
 9912 0450 1B01     		lsls	r3, r3, #4
 9913 0452 1344     		add	r3, r3, r2
 9914 0454 C033     		adds	r3, r3, #192
 9915 0456 1960     		str	r1, [r3]
1333:..\src/command_processing.c ****                 
1334:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9916              		.loc 1 1334 0
 9917 0458 B24B     		ldr	r3, .L481+4
 9918 045a 1B68     		ldr	r3, [r3]	@ float
 9919 045c FB60     		str	r3, [r7, #12]	@ float
1335:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9920              		.loc 1 1335 0
 9921 045e 0023     		movs	r3, #0
 9922 0460 BB75     		strb	r3, [r7, #22]
 9923 0462 0EE0     		b	.L421
 9924              	.L422:
1336:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9925              		.loc 1 1336 0 discriminator 3
 9926 0464 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9927 0466 C3F10303 		rsb	r3, r3, #3
 9928 046a 07F10802 		add	r2, r7, #8
 9929 046e 1344     		add	r3, r3, r2
 9930 0470 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9931 0472 07F10C01 		add	r1, r7, #12
 9932 0476 0A44     		add	r2, r2, r1
 9933 0478 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9934 047a 1A70     		strb	r2, [r3]
1335:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9935              		.loc 1 1335 0 discriminator 3
 9936 047c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9937 047e 0133     		adds	r3, r3, #1
 9938 0480 BB75     		strb	r3, [r7, #22]
 9939              	.L421:
1335:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9940              		.loc 1 1335 0 is_stmt 0 discriminator 1
 9941 0482 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9942 0484 032B     		cmp	r3, #3
 9943 0486 EDD9     		bls	.L422
1337:..\src/command_processing.c ****                 }
1338:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9944              		.loc 1 1338 0 is_stmt 1
 9945 0488 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9946 048a BB68     		ldr	r3, [r7, #8]	@ float
 9947 048c 4FF08F41 		mov	r1, #1199570944
 9948 0490 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 229


 9949 0492 FFF7FEFF 		bl	__aeabi_fmul
 9950 0496 0346     		mov	r3, r0
 9951 0498 1846     		mov	r0, r3
 9952 049a FFF7FEFF 		bl	__aeabi_f2iz
 9953 049e 0146     		mov	r1, r0
 9954 04a0 9F4A     		ldr	r2, .L481
 9955 04a2 2346     		mov	r3, r4
 9956 04a4 DB00     		lsls	r3, r3, #3
 9957 04a6 1B1B     		subs	r3, r3, r4
 9958 04a8 1B01     		lsls	r3, r3, #4
 9959 04aa 1344     		add	r3, r3, r2
 9960 04ac C433     		adds	r3, r3, #196
 9961 04ae 1960     		str	r1, [r3]
1339:..\src/command_processing.c ****             }
1340:..\src/command_processing.c ****             else {
1341:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1342:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1343:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1344:..\src/command_processing.c ****                 }
1345:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1346:..\src/command_processing.c ****                 
1347:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1348:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1349:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1350:..\src/command_processing.c ****                 }
1351:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1352:..\src/command_processing.c ****                 
1353:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1354:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1355:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1356:..\src/command_processing.c ****                 }
1357:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1358:..\src/command_processing.c ****             }            
1359:..\src/command_processing.c ****             break;  
 9962              		.loc 1 1359 0
 9963 04b0 00F0E3BF 		b	.L415
 9964              	.L416:
1341:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9965              		.loc 1 1341 0
 9966 04b4 9C4B     		ldr	r3, .L481+8
 9967 04b6 1B68     		ldr	r3, [r3]	@ float
 9968 04b8 FB60     		str	r3, [r7, #12]	@ float
1342:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9969              		.loc 1 1342 0
 9970 04ba 0023     		movs	r3, #0
 9971 04bc BB75     		strb	r3, [r7, #22]
 9972 04be 0EE0     		b	.L424
 9973              	.L425:
1343:..\src/command_processing.c ****                 }
 9974              		.loc 1 1343 0 discriminator 3
 9975 04c0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9976 04c2 C3F10303 		rsb	r3, r3, #3
 9977 04c6 07F10802 		add	r2, r7, #8
 9978 04ca 1344     		add	r3, r3, r2
 9979 04cc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9980 04ce 07F10C01 		add	r1, r7, #12
 9981 04d2 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 230


 9982 04d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9983 04d6 1A70     		strb	r2, [r3]
1342:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9984              		.loc 1 1342 0 discriminator 3
 9985 04d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9986 04da 0133     		adds	r3, r3, #1
 9987 04dc BB75     		strb	r3, [r7, #22]
 9988              	.L424:
1342:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9989              		.loc 1 1342 0 is_stmt 0 discriminator 1
 9990 04de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9991 04e0 032B     		cmp	r3, #3
 9992 04e2 EDD9     		bls	.L425
1345:..\src/command_processing.c ****                 
 9993              		.loc 1 1345 0 is_stmt 1
 9994 04e4 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9995 04e6 BB68     		ldr	r3, [r7, #8]	@ float
 9996 04e8 4FF08F41 		mov	r1, #1199570944
 9997 04ec 1846     		mov	r0, r3
 9998 04ee FFF7FEFF 		bl	__aeabi_fmul
 9999 04f2 0346     		mov	r3, r0
 10000 04f4 1846     		mov	r0, r3
 10001 04f6 FFF7FEFF 		bl	__aeabi_f2iz
 10002 04fa 0146     		mov	r1, r0
 10003 04fc 884A     		ldr	r2, .L481
 10004 04fe 2346     		mov	r3, r4
 10005 0500 DB00     		lsls	r3, r3, #3
 10006 0502 1B1B     		subs	r3, r3, r4
 10007 0504 1B01     		lsls	r3, r3, #4
 10008 0506 1344     		add	r3, r3, r2
 10009 0508 D433     		adds	r3, r3, #212
 10010 050a 1960     		str	r1, [r3]
1347:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10011              		.loc 1 1347 0
 10012 050c 874B     		ldr	r3, .L481+12
 10013 050e 1B68     		ldr	r3, [r3]	@ float
 10014 0510 FB60     		str	r3, [r7, #12]	@ float
1348:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10015              		.loc 1 1348 0
 10016 0512 0023     		movs	r3, #0
 10017 0514 BB75     		strb	r3, [r7, #22]
 10018 0516 0EE0     		b	.L426
 10019              	.L427:
1349:..\src/command_processing.c ****                 }
 10020              		.loc 1 1349 0 discriminator 3
 10021 0518 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10022 051a C3F10303 		rsb	r3, r3, #3
 10023 051e 07F10802 		add	r2, r7, #8
 10024 0522 1344     		add	r3, r3, r2
 10025 0524 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10026 0526 07F10C01 		add	r1, r7, #12
 10027 052a 0A44     		add	r2, r2, r1
 10028 052c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10029 052e 1A70     		strb	r2, [r3]
1348:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10030              		.loc 1 1348 0 discriminator 3
 10031 0530 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 231


 10032 0532 0133     		adds	r3, r3, #1
 10033 0534 BB75     		strb	r3, [r7, #22]
 10034              	.L426:
1348:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10035              		.loc 1 1348 0 is_stmt 0 discriminator 1
 10036 0536 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10037 0538 032B     		cmp	r3, #3
 10038 053a EDD9     		bls	.L427
1351:..\src/command_processing.c ****                 
 10039              		.loc 1 1351 0 is_stmt 1
 10040 053c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10041 053e BB68     		ldr	r3, [r7, #8]	@ float
 10042 0540 4FF08F41 		mov	r1, #1199570944
 10043 0544 1846     		mov	r0, r3
 10044 0546 FFF7FEFF 		bl	__aeabi_fmul
 10045 054a 0346     		mov	r3, r0
 10046 054c 1846     		mov	r0, r3
 10047 054e FFF7FEFF 		bl	__aeabi_f2iz
 10048 0552 0146     		mov	r1, r0
 10049 0554 724A     		ldr	r2, .L481
 10050 0556 2346     		mov	r3, r4
 10051 0558 DB00     		lsls	r3, r3, #3
 10052 055a 1B1B     		subs	r3, r3, r4
 10053 055c 1B01     		lsls	r3, r3, #4
 10054 055e 1344     		add	r3, r3, r2
 10055 0560 D833     		adds	r3, r3, #216
 10056 0562 1960     		str	r1, [r3]
1353:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10057              		.loc 1 1353 0
 10058 0564 6F4B     		ldr	r3, .L481+4
 10059 0566 1B68     		ldr	r3, [r3]	@ float
 10060 0568 FB60     		str	r3, [r7, #12]	@ float
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10061              		.loc 1 1354 0
 10062 056a 0023     		movs	r3, #0
 10063 056c BB75     		strb	r3, [r7, #22]
 10064 056e 0EE0     		b	.L428
 10065              	.L429:
1355:..\src/command_processing.c ****                 }
 10066              		.loc 1 1355 0 discriminator 3
 10067 0570 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10068 0572 C3F10303 		rsb	r3, r3, #3
 10069 0576 07F10802 		add	r2, r7, #8
 10070 057a 1344     		add	r3, r3, r2
 10071 057c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10072 057e 07F10C01 		add	r1, r7, #12
 10073 0582 0A44     		add	r2, r2, r1
 10074 0584 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10075 0586 1A70     		strb	r2, [r3]
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10076              		.loc 1 1354 0 discriminator 3
 10077 0588 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10078 058a 0133     		adds	r3, r3, #1
 10079 058c BB75     		strb	r3, [r7, #22]
 10080              	.L428:
1354:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10081              		.loc 1 1354 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 232


 10082 058e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10083 0590 032B     		cmp	r3, #3
 10084 0592 EDD9     		bls	.L429
1357:..\src/command_processing.c ****             }            
 10085              		.loc 1 1357 0 is_stmt 1
 10086 0594 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10087 0596 BB68     		ldr	r3, [r7, #8]	@ float
 10088 0598 4FF08F41 		mov	r1, #1199570944
 10089 059c 1846     		mov	r0, r3
 10090 059e FFF7FEFF 		bl	__aeabi_fmul
 10091 05a2 0346     		mov	r3, r0
 10092 05a4 1846     		mov	r0, r3
 10093 05a6 FFF7FEFF 		bl	__aeabi_f2iz
 10094 05aa 0146     		mov	r1, r0
 10095 05ac 5C4A     		ldr	r2, .L481
 10096 05ae 2346     		mov	r3, r4
 10097 05b0 DB00     		lsls	r3, r3, #3
 10098 05b2 1B1B     		subs	r3, r3, r4
 10099 05b4 1B01     		lsls	r3, r3, #4
 10100 05b6 1344     		add	r3, r3, r2
 10101 05b8 DC33     		adds	r3, r3, #220
 10102 05ba 1960     		str	r1, [r3]
 10103              		.loc 1 1359 0
 10104 05bc 00F05DBF 		b	.L415
 10105              	.L385:
1360:..\src/command_processing.c ****             
1361:..\src/command_processing.c ****         case 5:         //Input mode
1362:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10106              		.loc 1 1362 0
 10107 05c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10108 05c2 5B4B     		ldr	r3, .L481+16
 10109 05c4 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10110 05c6 5649     		ldr	r1, .L481
 10111 05c8 1346     		mov	r3, r2
 10112 05ca DB00     		lsls	r3, r3, #3
 10113 05cc 9B1A     		subs	r3, r3, r2
 10114 05ce 1B01     		lsls	r3, r3, #4
 10115 05d0 0B44     		add	r3, r3, r1
 10116 05d2 03F58773 		add	r3, r3, #270
 10117 05d6 0246     		mov	r2, r0
 10118 05d8 1A70     		strb	r2, [r3]
1363:..\src/command_processing.c ****             
1364:..\src/command_processing.c ****             // Hold the actual position
1365:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10119              		.loc 1 1365 0
 10120 05da 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10121 05dc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10122 05de 5048     		ldr	r0, .L481
 10123 05e0 1346     		mov	r3, r2
 10124 05e2 DB00     		lsls	r3, r3, #3
 10125 05e4 9B1A     		subs	r3, r3, r2
 10126 05e6 1B01     		lsls	r3, r3, #4
 10127 05e8 0344     		add	r3, r3, r0
 10128 05ea 03F58873 		add	r3, r3, #272
 10129 05ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10130 05f0 1846     		mov	r0, r3
 10131 05f2 504A     		ldr	r2, .L481+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 233


 10132 05f4 3423     		movs	r3, #52
 10133 05f6 03FB00F3 		mul	r3, r3, r0
 10134 05fa 1344     		add	r3, r3, r2
 10135 05fc 1A68     		ldr	r2, [r3]
 10136 05fe 4E48     		ldr	r0, .L481+24
 10137 0600 0B01     		lsls	r3, r1, #4
 10138 0602 0344     		add	r3, r3, r0
 10139 0604 1A60     		str	r2, [r3]
1366:..\src/command_processing.c ****             break;   
 10140              		.loc 1 1366 0
 10141 0606 00F038BF 		b	.L415
 10142              	.L386:
1367:..\src/command_processing.c **** 
1368:..\src/command_processing.c ****         case 8:         //Measurement Offset
1369:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10143              		.loc 1 1369 0
 10144 060a 0023     		movs	r3, #0
 10145 060c FB75     		strb	r3, [r7, #23]
 10146 060e 7EE0     		b	.L430
 10147              	.L431:
1370:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10148              		.loc 1 1370 0 discriminator 3
 10149 0610 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10150 0612 4349     		ldr	r1, .L481
 10151 0614 1346     		mov	r3, r2
 10152 0616 DB00     		lsls	r3, r3, #3
 10153 0618 9B1A     		subs	r3, r3, r2
 10154 061a 1B01     		lsls	r3, r3, #4
 10155 061c 0B44     		add	r3, r3, r1
 10156 061e 03F58873 		add	r3, r3, #272
 10157 0622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10158 0624 1C46     		mov	r4, r3
 10159 0626 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10160 0628 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10161 062a 5B00     		lsls	r3, r3, #1
 10162 062c 0333     		adds	r3, r3, #3
 10163 062e 4049     		ldr	r1, .L481+16
 10164 0630 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10165 0632 1B02     		lsls	r3, r3, #8
 10166 0634 19B2     		sxth	r1, r3
 10167 0636 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10168 0638 0233     		adds	r3, r3, #2
 10169 063a 5B00     		lsls	r3, r3, #1
 10170 063c 3C48     		ldr	r0, .L481+16
 10171 063e C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10172 0640 1BB2     		sxth	r3, r3
 10173 0642 0B43     		orrs	r3, r3, r1
 10174 0644 1BB2     		sxth	r3, r3
 10175 0646 1846     		mov	r0, r3
 10176 0648 3549     		ldr	r1, .L481
 10177 064a 2346     		mov	r3, r4
 10178 064c 5B00     		lsls	r3, r3, #1
 10179 064e 2344     		add	r3, r3, r4
 10180 0650 9B00     		lsls	r3, r3, #2
 10181 0652 1344     		add	r3, r3, r2
 10182 0654 6633     		adds	r3, r3, #102
 10183 0656 41F82300 		str	r0, [r1, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 234


1371:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10184              		.loc 1 1371 0 discriminator 3
 10185 065a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10186 065c 3049     		ldr	r1, .L481
 10187 065e 1346     		mov	r3, r2
 10188 0660 DB00     		lsls	r3, r3, #3
 10189 0662 9B1A     		subs	r3, r3, r2
 10190 0664 1B01     		lsls	r3, r3, #4
 10191 0666 0B44     		add	r3, r3, r1
 10192 0668 03F58873 		add	r3, r3, #272
 10193 066c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10194 066e 1D46     		mov	r5, r3
 10195 0670 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10196 0672 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10197 0674 2A48     		ldr	r0, .L481
 10198 0676 1346     		mov	r3, r2
 10199 0678 DB00     		lsls	r3, r3, #3
 10200 067a 9B1A     		subs	r3, r3, r2
 10201 067c 1B01     		lsls	r3, r3, #4
 10202 067e 0344     		add	r3, r3, r0
 10203 0680 03F58873 		add	r3, r3, #272
 10204 0684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10205 0686 1C46     		mov	r4, r3
 10206 0688 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10207 068a 2548     		ldr	r0, .L481
 10208 068c 2346     		mov	r3, r4
 10209 068e 5B00     		lsls	r3, r3, #1
 10210 0690 2344     		add	r3, r3, r4
 10211 0692 9B00     		lsls	r3, r3, #2
 10212 0694 1344     		add	r3, r3, r2
 10213 0696 6633     		adds	r3, r3, #102
 10214 0698 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10215 069c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10216 069e 204C     		ldr	r4, .L481
 10217 06a0 1346     		mov	r3, r2
 10218 06a2 DB00     		lsls	r3, r3, #3
 10219 06a4 9B1A     		subs	r3, r3, r2
 10220 06a6 1B01     		lsls	r3, r3, #4
 10221 06a8 2344     		add	r3, r3, r4
 10222 06aa 03F58873 		add	r3, r3, #272
 10223 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10224 06b0 1E46     		mov	r6, r3
 10225 06b2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10226 06b4 1A4C     		ldr	r4, .L481
 10227 06b6 3346     		mov	r3, r6
 10228 06b8 5B00     		lsls	r3, r3, #1
 10229 06ba 3344     		add	r3, r3, r6
 10230 06bc 1B01     		lsls	r3, r3, #4
 10231 06be 2344     		add	r3, r3, r4
 10232 06c0 1344     		add	r3, r3, r2
 10233 06c2 03F29513 		addw	r3, r3, #405
 10234 06c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10235 06c8 00FA03F2 		lsl	r2, r0, r3
 10236 06cc 1448     		ldr	r0, .L481
 10237 06ce 2B46     		mov	r3, r5
 10238 06d0 5B00     		lsls	r3, r3, #1
 10239 06d2 2B44     		add	r3, r3, r5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 235


 10240 06d4 9B00     		lsls	r3, r3, #2
 10241 06d6 0B44     		add	r3, r3, r1
 10242 06d8 6633     		adds	r3, r3, #102
 10243 06da 40F82320 		str	r2, [r0, r3, lsl #2]
1372:..\src/command_processing.c **** 
1373:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10244              		.loc 1 1373 0 discriminator 3
 10245 06de 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10246 06e0 0F49     		ldr	r1, .L481
 10247 06e2 1346     		mov	r3, r2
 10248 06e4 DB00     		lsls	r3, r3, #3
 10249 06e6 9B1A     		subs	r3, r3, r2
 10250 06e8 1B01     		lsls	r3, r3, #4
 10251 06ea 0B44     		add	r3, r3, r1
 10252 06ec 03F58873 		add	r3, r3, #272
 10253 06f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10254 06f2 1846     		mov	r0, r3
 10255 06f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10256 06f6 0F49     		ldr	r1, .L481+20
 10257 06f8 3422     		movs	r2, #52
 10258 06fa 02FB00F2 		mul	r2, r2, r0
 10259 06fe 0A44     		add	r2, r2, r1
 10260 0700 1344     		add	r3, r3, r2
 10261 0702 1833     		adds	r3, r3, #24
 10262 0704 0022     		movs	r2, #0
 10263 0706 1A70     		strb	r2, [r3]
1369:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10264              		.loc 1 1369 0 discriminator 3
 10265 0708 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10266 070a 0133     		adds	r3, r3, #1
 10267 070c FB75     		strb	r3, [r7, #23]
 10268              	.L430:
1369:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10269              		.loc 1 1369 0 is_stmt 0 discriminator 1
 10270 070e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10271 0710 022B     		cmp	r3, #2
 10272 0712 7FF67DAF 		bls	.L431
1374:..\src/command_processing.c ****             }
1375:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10273              		.loc 1 1375 0 is_stmt 1
 10274 0716 094B     		ldr	r3, .L481+28
 10275 0718 0122     		movs	r2, #1
 10276 071a 1A70     		strb	r2, [r3]
1376:..\src/command_processing.c ****             break;
 10277              		.loc 1 1376 0
 10278 071c 00F0ADBE 		b	.L415
 10279              	.L482:
 10280              		.align	2
 10281              	.L481:
 10282 0720 00000000 		.word	g_mem
 10283 0724 0B000000 		.word	g_rx+11
 10284 0728 03000000 		.word	g_rx+3
 10285 072c 07000000 		.word	g_rx+7
 10286 0730 00000000 		.word	g_rx
 10287 0734 00000000 		.word	g_meas
 10288 0738 00000000 		.word	g_refNew
 10289 073c 00000000 		.word	reset_last_value_flag
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 236


 10290              	.L387:
1377:..\src/command_processing.c ****     
1378:..\src/command_processing.c ****         case 11:        //Position limits
1379:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10291              		.loc 1 1379 0
 10292 0740 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10293 0742 C14B     		ldr	r3, .L483
 10294 0744 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10295 0746 1906     		lsls	r1, r3, #24
 10296 0748 BF4B     		ldr	r3, .L483
 10297 074a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10298 074c 1B04     		lsls	r3, r3, #16
 10299 074e 1943     		orrs	r1, r1, r3
 10300 0750 BD4B     		ldr	r3, .L483
 10301 0752 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10302 0754 1B02     		lsls	r3, r3, #8
 10303 0756 0B43     		orrs	r3, r3, r1
 10304 0758 BB49     		ldr	r1, .L483
 10305 075a 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10306 075c 1943     		orrs	r1, r1, r3
 10307 075e BB48     		ldr	r0, .L483+4
 10308 0760 1346     		mov	r3, r2
 10309 0762 DB00     		lsls	r3, r3, #3
 10310 0764 9B1A     		subs	r3, r3, r2
 10311 0766 1B01     		lsls	r3, r3, #4
 10312 0768 0344     		add	r3, r3, r0
 10313 076a E433     		adds	r3, r3, #228
 10314 076c 1960     		str	r1, [r3]
1380:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10315              		.loc 1 1380 0
 10316 076e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10317 0770 B54B     		ldr	r3, .L483
 10318 0772 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10319 0774 1906     		lsls	r1, r3, #24
 10320 0776 B44B     		ldr	r3, .L483
 10321 0778 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10322 077a 1B04     		lsls	r3, r3, #16
 10323 077c 1943     		orrs	r1, r1, r3
 10324 077e B24B     		ldr	r3, .L483
 10325 0780 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10326 0782 1B02     		lsls	r3, r3, #8
 10327 0784 0B43     		orrs	r3, r3, r1
 10328 0786 B049     		ldr	r1, .L483
 10329 0788 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10330 078a 1943     		orrs	r1, r1, r3
 10331 078c AF48     		ldr	r0, .L483+4
 10332 078e 1346     		mov	r3, r2
 10333 0790 DB00     		lsls	r3, r3, #3
 10334 0792 9B1A     		subs	r3, r3, r2
 10335 0794 1B01     		lsls	r3, r3, #4
 10336 0796 0344     		add	r3, r3, r0
 10337 0798 E833     		adds	r3, r3, #232
 10338 079a 1960     		str	r1, [r3]
1381:..\src/command_processing.c **** 
1382:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10339              		.loc 1 1382 0
 10340 079c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 237


 10341 079e 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10342 07a0 AA48     		ldr	r0, .L483+4
 10343 07a2 0B46     		mov	r3, r1
 10344 07a4 DB00     		lsls	r3, r3, #3
 10345 07a6 5B1A     		subs	r3, r3, r1
 10346 07a8 1B01     		lsls	r3, r3, #4
 10347 07aa 0344     		add	r3, r3, r0
 10348 07ac E433     		adds	r3, r3, #228
 10349 07ae 1868     		ldr	r0, [r3]
 10350 07b0 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10351 07b2 A64C     		ldr	r4, .L483+4
 10352 07b4 0B46     		mov	r3, r1
 10353 07b6 DB00     		lsls	r3, r3, #3
 10354 07b8 5B1A     		subs	r3, r3, r1
 10355 07ba 1B01     		lsls	r3, r3, #4
 10356 07bc 2344     		add	r3, r3, r4
 10357 07be 03F58873 		add	r3, r3, #272
 10358 07c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10359 07c4 1C46     		mov	r4, r3
 10360 07c6 A149     		ldr	r1, .L483+4
 10361 07c8 2346     		mov	r3, r4
 10362 07ca 5B00     		lsls	r3, r3, #1
 10363 07cc 2344     		add	r3, r3, r4
 10364 07ce 1B01     		lsls	r3, r3, #4
 10365 07d0 0B44     		add	r3, r3, r1
 10366 07d2 03F29513 		addw	r3, r3, #405
 10367 07d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10368 07d8 00FA03F1 		lsl	r1, r0, r3
 10369 07dc 9B48     		ldr	r0, .L483+4
 10370 07de 1346     		mov	r3, r2
 10371 07e0 DB00     		lsls	r3, r3, #3
 10372 07e2 9B1A     		subs	r3, r3, r2
 10373 07e4 1B01     		lsls	r3, r3, #4
 10374 07e6 0344     		add	r3, r3, r0
 10375 07e8 E433     		adds	r3, r3, #228
 10376 07ea 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10377              		.loc 1 1383 0
 10378 07ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10379 07ee 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10380 07f0 9648     		ldr	r0, .L483+4
 10381 07f2 0B46     		mov	r3, r1
 10382 07f4 DB00     		lsls	r3, r3, #3
 10383 07f6 5B1A     		subs	r3, r3, r1
 10384 07f8 1B01     		lsls	r3, r3, #4
 10385 07fa 0344     		add	r3, r3, r0
 10386 07fc E833     		adds	r3, r3, #232
 10387 07fe 1868     		ldr	r0, [r3]
 10388 0800 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10389 0802 924C     		ldr	r4, .L483+4
 10390 0804 0B46     		mov	r3, r1
 10391 0806 DB00     		lsls	r3, r3, #3
 10392 0808 5B1A     		subs	r3, r3, r1
 10393 080a 1B01     		lsls	r3, r3, #4
 10394 080c 2344     		add	r3, r3, r4
 10395 080e 03F58873 		add	r3, r3, #272
 10396 0812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 238


 10397 0814 1C46     		mov	r4, r3
 10398 0816 8D49     		ldr	r1, .L483+4
 10399 0818 2346     		mov	r3, r4
 10400 081a 5B00     		lsls	r3, r3, #1
 10401 081c 2344     		add	r3, r3, r4
 10402 081e 1B01     		lsls	r3, r3, #4
 10403 0820 0B44     		add	r3, r3, r1
 10404 0822 03F29513 		addw	r3, r3, #405
 10405 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10406 0828 00FA03F1 		lsl	r1, r0, r3
 10407 082c 8748     		ldr	r0, .L483+4
 10408 082e 1346     		mov	r3, r2
 10409 0830 DB00     		lsls	r3, r3, #3
 10410 0832 9B1A     		subs	r3, r3, r2
 10411 0834 1B01     		lsls	r3, r3, #4
 10412 0836 0344     		add	r3, r3, r0
 10413 0838 E833     		adds	r3, r3, #232
 10414 083a 1960     		str	r1, [r3]
1384:..\src/command_processing.c ****             break;            
 10415              		.loc 1 1384 0
 10416 083c 00F01DBE 		b	.L415
 10417              	.L388:
1385:..\src/command_processing.c **** 
1386:..\src/command_processing.c ****         case 23:        //Rest Position
1387:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10418              		.loc 1 1387 0
 10419 0840 814B     		ldr	r3, .L483
 10420 0842 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10421 0844 1A06     		lsls	r2, r3, #24
 10422 0846 804B     		ldr	r3, .L483
 10423 0848 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10424 084a 1B04     		lsls	r3, r3, #16
 10425 084c 1A43     		orrs	r2, r2, r3
 10426 084e 7E4B     		ldr	r3, .L483
 10427 0850 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10428 0852 1B02     		lsls	r3, r3, #8
 10429 0854 1343     		orrs	r3, r3, r2
 10430 0856 7C4A     		ldr	r2, .L483
 10431 0858 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10432 085a 1343     		orrs	r3, r3, r2
 10433 085c 7B4A     		ldr	r2, .L483+4
 10434 085e C2F8A032 		str	r3, [r2, #672]
1388:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10435              		.loc 1 1388 0
 10436 0862 7A4B     		ldr	r3, .L483+4
 10437 0864 D3F8A012 		ldr	r1, [r3, #672]
 10438 0868 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10439 086a 7848     		ldr	r0, .L483+4
 10440 086c 1346     		mov	r3, r2
 10441 086e DB00     		lsls	r3, r3, #3
 10442 0870 9B1A     		subs	r3, r3, r2
 10443 0872 1B01     		lsls	r3, r3, #4
 10444 0874 0344     		add	r3, r3, r0
 10445 0876 03F58873 		add	r3, r3, #272
 10446 087a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10447 087c 1846     		mov	r0, r3
 10448 087e 734A     		ldr	r2, .L483+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 239


 10449 0880 0346     		mov	r3, r0
 10450 0882 5B00     		lsls	r3, r3, #1
 10451 0884 0344     		add	r3, r3, r0
 10452 0886 1B01     		lsls	r3, r3, #4
 10453 0888 1344     		add	r3, r3, r2
 10454 088a 03F29513 		addw	r3, r3, #405
 10455 088e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10456 0890 01FA03F3 		lsl	r3, r1, r3
 10457 0894 6D4A     		ldr	r2, .L483+4
 10458 0896 C2F8A032 		str	r3, [r2, #672]
1389:..\src/command_processing.c ****             break; 
 10459              		.loc 1 1389 0
 10460 089a 00F0EEBD 		b	.L415
 10461              	.L389:
1390:..\src/command_processing.c ****             
1391:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1392:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10462              		.loc 1 1392 0
 10463 089e 6A4B     		ldr	r3, .L483
 10464 08a0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10465 08a2 1A06     		lsls	r2, r3, #24
 10466 08a4 684B     		ldr	r3, .L483
 10467 08a6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10468 08a8 1B04     		lsls	r3, r3, #16
 10469 08aa 1A43     		orrs	r2, r2, r3
 10470 08ac 664B     		ldr	r3, .L483
 10471 08ae 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10472 08b0 1B02     		lsls	r3, r3, #8
 10473 08b2 1343     		orrs	r3, r3, r2
 10474 08b4 644A     		ldr	r2, .L483
 10475 08b6 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10476 08b8 1343     		orrs	r3, r3, r2
 10477 08ba 644A     		ldr	r2, .L483+4
 10478 08bc C2F8A432 		str	r3, [r2, #676]
1393:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10479              		.loc 1 1393 0
 10480 08c0 624B     		ldr	r3, .L483+4
 10481 08c2 D3F8A432 		ldr	r3, [r3, #676]
 10482 08c6 092B     		cmp	r3, #9
 10483 08c8 00F3CE85 		bgt	.L474
 10484              		.loc 1 1393 0 is_stmt 0 discriminator 1
 10485 08cc 5F4B     		ldr	r3, .L483+4
 10486 08ce 0A22     		movs	r2, #10
 10487 08d0 C3F8A422 		str	r2, [r3, #676]
1394:..\src/command_processing.c ****            break; 
 10488              		.loc 1 1394 0 is_stmt 1 discriminator 1
 10489 08d4 00F0C8BD 		b	.L474
 10490              	.L390:
1395:..\src/command_processing.c ****             
1396:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1397:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10491              		.loc 1 1397 0
 10492 08d8 5B4B     		ldr	r3, .L483
 10493 08da DB78     		ldrb	r3, [r3, #3]
 10494 08dc BB74     		strb	r3, [r7, #18]
1398:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10495              		.loc 1 1398 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 240


 10496 08de BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10497 08e0 002B     		cmp	r3, #0
 10498 08e2 04D0     		beq	.L433
1399:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10499              		.loc 1 1399 0
 10500 08e4 594B     		ldr	r3, .L483+4
 10501 08e6 0122     		movs	r2, #1
 10502 08e8 83F8A720 		strb	r2, [r3, #167]
 10503 08ec 03E0     		b	.L434
 10504              	.L433:
1400:..\src/command_processing.c ****             } else {            // 0
1401:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10505              		.loc 1 1401 0
 10506 08ee 574B     		ldr	r3, .L483+4
 10507 08f0 0022     		movs	r2, #0
 10508 08f2 83F8A720 		strb	r2, [r3, #167]
 10509              	.L434:
1402:..\src/command_processing.c ****             }
1403:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 10510              		.loc 1 1403 0
 10511 08f6 564B     		ldr	r3, .L483+8
 10512 08f8 0122     		movs	r2, #1
 10513 08fa 1A70     		strb	r2, [r3]
1404:..\src/command_processing.c **** 
1405:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10514              		.loc 1 1405 0
 10515 08fc 534B     		ldr	r3, .L483+4
 10516 08fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10517 0902 002B     		cmp	r3, #0
 10518 0904 40F0B285 		bne	.L475
1406:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1407:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10519              		.loc 1 1407 0
 10520 0908 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10521 090a 504B     		ldr	r3, .L483+4
 10522 090c 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10523 0910 4E49     		ldr	r1, .L483+4
 10524 0912 1346     		mov	r3, r2
 10525 0914 DB00     		lsls	r3, r3, #3
 10526 0916 9B1A     		subs	r3, r3, r2
 10527 0918 1B01     		lsls	r3, r3, #4
 10528 091a 0B44     		add	r3, r3, r1
 10529 091c 03F58873 		add	r3, r3, #272
 10530 0920 0246     		mov	r2, r0
 10531 0922 1A70     		strb	r2, [r3]
1408:..\src/command_processing.c ****                 
1409:..\src/command_processing.c ****                 // Change also gears parameters
1410:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10532              		.loc 1 1410 0
 10533 0924 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10534 0926 4949     		ldr	r1, .L483+4
 10535 0928 1346     		mov	r3, r2
 10536 092a DB00     		lsls	r3, r3, #3
 10537 092c 9B1A     		subs	r3, r3, r2
 10538 092e 1B01     		lsls	r3, r3, #4
 10539 0930 0B44     		add	r3, r3, r1
 10540 0932 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 241


 10541 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10542 0938 1946     		mov	r1, r3
 10543 093a 444A     		ldr	r2, .L483+4
 10544 093c 0B46     		mov	r3, r1
 10545 093e 5B00     		lsls	r3, r3, #1
 10546 0940 0B44     		add	r3, r3, r1
 10547 0942 1B01     		lsls	r3, r3, #4
 10548 0944 1344     		add	r3, r3, r2
 10549 0946 03F5D873 		add	r3, r3, #432
 10550 094a 0122     		movs	r2, #1
 10551 094c 1A70     		strb	r2, [r3]
1411:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10552              		.loc 1 1411 0
 10553 094e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10554 0950 3E49     		ldr	r1, .L483+4
 10555 0952 1346     		mov	r3, r2
 10556 0954 DB00     		lsls	r3, r3, #3
 10557 0956 9B1A     		subs	r3, r3, r2
 10558 0958 1B01     		lsls	r3, r3, #4
 10559 095a 0B44     		add	r3, r3, r1
 10560 095c 03F58873 		add	r3, r3, #272
 10561 0960 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10562 0962 1946     		mov	r1, r3
 10563 0964 394A     		ldr	r2, .L483+4
 10564 0966 0B46     		mov	r3, r1
 10565 0968 5B00     		lsls	r3, r3, #1
 10566 096a 0B44     		add	r3, r3, r1
 10567 096c 1B01     		lsls	r3, r3, #4
 10568 096e 1344     		add	r3, r3, r2
 10569 0970 03F2B513 		addw	r3, r3, #437
 10570 0974 2322     		movs	r2, #35
 10571 0976 1A70     		strb	r2, [r3]
1412:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10572              		.loc 1 1412 0
 10573 0978 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10574 097a 3449     		ldr	r1, .L483+4
 10575 097c 1346     		mov	r3, r2
 10576 097e DB00     		lsls	r3, r3, #3
 10577 0980 9B1A     		subs	r3, r3, r2
 10578 0982 1B01     		lsls	r3, r3, #4
 10579 0984 0B44     		add	r3, r3, r1
 10580 0986 03F58873 		add	r3, r3, #272
 10581 098a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10582 098c 1946     		mov	r1, r3
 10583 098e 2F4A     		ldr	r2, .L483+4
 10584 0990 0B46     		mov	r3, r1
 10585 0992 5B00     		lsls	r3, r3, #1
 10586 0994 0B44     		add	r3, r3, r1
 10587 0996 1B01     		lsls	r3, r3, #4
 10588 0998 1344     		add	r3, r3, r2
 10589 099a 03F5DB73 		add	r3, r3, #438
 10590 099e 0322     		movs	r2, #3
 10591 09a0 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10592              		.loc 1 1413 0
 10593 09a2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10594 09a4 2949     		ldr	r1, .L483+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 242


 10595 09a6 1346     		mov	r3, r2
 10596 09a8 DB00     		lsls	r3, r3, #3
 10597 09aa 9B1A     		subs	r3, r3, r2
 10598 09ac 1B01     		lsls	r3, r3, #4
 10599 09ae 0B44     		add	r3, r3, r1
 10600 09b0 03F58873 		add	r3, r3, #272
 10601 09b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10602 09b6 1946     		mov	r1, r3
 10603 09b8 244A     		ldr	r2, .L483+4
 10604 09ba 0B46     		mov	r3, r1
 10605 09bc 5B00     		lsls	r3, r3, #1
 10606 09be 0B44     		add	r3, r3, r1
 10607 09c0 1B01     		lsls	r3, r3, #4
 10608 09c2 1344     		add	r3, r3, r2
 10609 09c4 03F2B713 		addw	r3, r3, #439
 10610 09c8 FF22     		movs	r2, #255
 10611 09ca 1A70     		strb	r2, [r3]
1414:..\src/command_processing.c ****                 
1415:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1416:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10612              		.loc 1 1416 0
 10613 09cc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10614 09ce 1F49     		ldr	r1, .L483+4
 10615 09d0 1346     		mov	r3, r2
 10616 09d2 DB00     		lsls	r3, r3, #3
 10617 09d4 9B1A     		subs	r3, r3, r2
 10618 09d6 1B01     		lsls	r3, r3, #4
 10619 09d8 0B44     		add	r3, r3, r1
 10620 09da 03F21113 		addw	r3, r3, #273
 10621 09de 0122     		movs	r2, #1
 10622 09e0 1A70     		strb	r2, [r3]
1417:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10623              		.loc 1 1417 0
 10624 09e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10625 09e4 1949     		ldr	r1, .L483+4
 10626 09e6 1346     		mov	r3, r2
 10627 09e8 DB00     		lsls	r3, r3, #3
 10628 09ea 9B1A     		subs	r3, r3, r2
 10629 09ec 1B01     		lsls	r3, r3, #4
 10630 09ee 0B44     		add	r3, r3, r1
 10631 09f0 03F58973 		add	r3, r3, #274
 10632 09f4 0122     		movs	r2, #1
 10633 09f6 1A70     		strb	r2, [r3]
1418:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10634              		.loc 1 1418 0
 10635 09f8 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10636 09fa 1449     		ldr	r1, .L483+4
 10637 09fc 1346     		mov	r3, r2
 10638 09fe DB00     		lsls	r3, r3, #3
 10639 0a00 9B1A     		subs	r3, r3, r2
 10640 0a02 1B01     		lsls	r3, r3, #4
 10641 0a04 0B44     		add	r3, r3, r1
 10642 0a06 E433     		adds	r3, r3, #228
 10643 0a08 0022     		movs	r2, #0
 10644 0a0a 1A60     		str	r2, [r3]
1419:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10645              		.loc 1 1419 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 243


 10646 0a0c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10647 0a0e 0F4B     		ldr	r3, .L483+4
 10648 0a10 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10649 0a14 1846     		mov	r0, r3
 10650 0a16 0D49     		ldr	r1, .L483+4
 10651 0a18 0346     		mov	r3, r0
 10652 0a1a 5B00     		lsls	r3, r3, #1
 10653 0a1c 0344     		add	r3, r3, r0
 10654 0a1e 1B01     		lsls	r3, r3, #4
 10655 0a20 0B44     		add	r3, r3, r1
 10656 0a22 03F29513 		addw	r3, r3, #405
 10657 0a26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10658 0a28 1946     		mov	r1, r3
 10659 0a2a 4FF47A53 		mov	r3, #16000
 10660 0a2e 03FA01F1 		lsl	r1, r3, r1
 10661 0a32 0648     		ldr	r0, .L483+4
 10662 0a34 1346     		mov	r3, r2
 10663 0a36 DB00     		lsls	r3, r3, #3
 10664 0a38 9B1A     		subs	r3, r3, r2
 10665 0a3a 1B01     		lsls	r3, r3, #4
 10666 0a3c 0344     		add	r3, r3, r0
 10667 0a3e E833     		adds	r3, r3, #232
 10668 0a40 1960     		str	r1, [r3]
1420:..\src/command_processing.c ****             }    
1421:..\src/command_processing.c **** 
1422:..\src/command_processing.c ****             break; 
 10669              		.loc 1 1422 0
 10670 0a42 00F013BD 		b	.L475
 10671              	.L484:
 10672 0a46 00BF     		.align	2
 10673              	.L483:
 10674 0a48 00000000 		.word	g_rx
 10675 0a4c 00000000 		.word	g_mem
 10676 0a50 00000000 		.word	reset_last_value_flag
 10677              	.L391:
1423:..\src/command_processing.c **** 
1424:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1425:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10678              		.loc 1 1425 0
 10679 0a54 A94B     		ldr	r3, .L485
 10680 0a56 DB78     		ldrb	r3, [r3, #3]
 10681 0a58 BB74     		strb	r3, [r7, #18]
1426:..\src/command_processing.c ****             if (aux_uchar) {
 10682              		.loc 1 1426 0
 10683 0a5a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10684 0a5c 002B     		cmp	r3, #0
 10685 0a5e 05D0     		beq	.L436
1427:..\src/command_processing.c ****                 reset_counters();
 10686              		.loc 1 1427 0
 10687 0a60 FFF7FEFF 		bl	reset_counters
1428:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10688              		.loc 1 1428 0
 10689 0a64 A64B     		ldr	r3, .L485+4
 10690 0a66 0022     		movs	r2, #0
 10691 0a68 83F8A820 		strb	r2, [r3, #168]
 10692              	.L436:
1429:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 244


1430:..\src/command_processing.c ****             
1431:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10693              		.loc 1 1431 0
 10694 0a6c A54B     		ldr	r3, .L485+8
 10695 0a6e 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10696 0a72 012B     		cmp	r3, #1
 10697 0a74 40F0FC84 		bne	.L476
1432:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1433:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10698              		.loc 1 1433 0
 10699 0a78 8720     		movs	r0, #135
 10700 0a7a FFF7FEFF 		bl	DS1302_read
 10701 0a7e 0346     		mov	r3, r0
 10702 0a80 BB74     		strb	r3, [r7, #18]
1434:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10703              		.loc 1 1434 0
 10704 0a82 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10705 0a84 1B09     		lsrs	r3, r3, #4
 10706 0a86 DBB2     		uxtb	r3, r3
 10707 0a88 1A46     		mov	r2, r3
 10708 0a8a 9200     		lsls	r2, r2, #2
 10709 0a8c 1344     		add	r3, r3, r2
 10710 0a8e 5B00     		lsls	r3, r3, #1
 10711 0a90 DAB2     		uxtb	r2, r3
 10712 0a92 BB7C     		ldrb	r3, [r7, #18]
 10713 0a94 03F00F03 		and	r3, r3, #15
 10714 0a98 DBB2     		uxtb	r3, r3
 10715 0a9a 1344     		add	r3, r3, r2
 10716 0a9c DAB2     		uxtb	r2, r3
 10717 0a9e 984B     		ldr	r3, .L485+4
 10718 0aa0 83F8A420 		strb	r2, [r3, #164]
1435:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10719              		.loc 1 1435 0
 10720 0aa4 8920     		movs	r0, #137
 10721 0aa6 FFF7FEFF 		bl	DS1302_read
 10722 0aaa 0346     		mov	r3, r0
 10723 0aac BB74     		strb	r3, [r7, #18]
1436:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10724              		.loc 1 1436 0
 10725 0aae BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10726 0ab0 1B09     		lsrs	r3, r3, #4
 10727 0ab2 DBB2     		uxtb	r3, r3
 10728 0ab4 1A46     		mov	r2, r3
 10729 0ab6 9200     		lsls	r2, r2, #2
 10730 0ab8 1344     		add	r3, r3, r2
 10731 0aba 5B00     		lsls	r3, r3, #1
 10732 0abc DAB2     		uxtb	r2, r3
 10733 0abe BB7C     		ldrb	r3, [r7, #18]
 10734 0ac0 03F00F03 		and	r3, r3, #15
 10735 0ac4 DBB2     		uxtb	r3, r3
 10736 0ac6 1344     		add	r3, r3, r2
 10737 0ac8 DAB2     		uxtb	r2, r3
 10738 0aca 8D4B     		ldr	r3, .L485+4
 10739 0acc 83F8A520 		strb	r2, [r3, #165]
1437:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10740              		.loc 1 1437 0
 10741 0ad0 8D20     		movs	r0, #141
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 245


 10742 0ad2 FFF7FEFF 		bl	DS1302_read
 10743 0ad6 0346     		mov	r3, r0
 10744 0ad8 BB74     		strb	r3, [r7, #18]
1438:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10745              		.loc 1 1438 0
 10746 0ada BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10747 0adc 1B09     		lsrs	r3, r3, #4
 10748 0ade DBB2     		uxtb	r3, r3
 10749 0ae0 1A46     		mov	r2, r3
 10750 0ae2 9200     		lsls	r2, r2, #2
 10751 0ae4 1344     		add	r3, r3, r2
 10752 0ae6 5B00     		lsls	r3, r3, #1
 10753 0ae8 DAB2     		uxtb	r2, r3
 10754 0aea BB7C     		ldrb	r3, [r7, #18]
 10755 0aec 03F00F03 		and	r3, r3, #15
 10756 0af0 DBB2     		uxtb	r3, r3
 10757 0af2 1344     		add	r3, r3, r2
 10758 0af4 DAB2     		uxtb	r2, r3
 10759 0af6 824B     		ldr	r3, .L485+4
 10760 0af8 83F8A620 		strb	r2, [r3, #166]
1439:..\src/command_processing.c ****             }
1440:..\src/command_processing.c ****             break;             
 10761              		.loc 1 1440 0
 10762 0afc 00F0B8BC 		b	.L476
 10763              	.L392:
 10764              	.LBB19:
1441:..\src/command_processing.c ****             
1442:..\src/command_processing.c ****         case 32:         //Current Time
1443:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10765              		.loc 1 1443 0
 10766 0b00 0023     		movs	r3, #0
 10767 0b02 7B75     		strb	r3, [r7, #21]
 10768 0b04 0CE0     		b	.L438
 10769              	.L439:
1444:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10770              		.loc 1 1444 0 discriminator 3
 10771 0b06 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10772 0b08 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10773 0b0a 0332     		adds	r2, r2, #3
 10774 0b0c 7B49     		ldr	r1, .L485
 10775 0b0e 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10776 0b10 7B4A     		ldr	r2, .L485+4
 10777 0b12 1344     		add	r3, r3, r2
 10778 0b14 0A46     		mov	r2, r1
 10779 0b16 83F82022 		strb	r2, [r3, #544]
1443:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10780              		.loc 1 1443 0 discriminator 3
 10781 0b1a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10782 0b1c 0133     		adds	r3, r3, #1
 10783 0b1e 7B75     		strb	r3, [r7, #21]
 10784              	.L438:
1443:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10785              		.loc 1 1443 0 is_stmt 0 discriminator 1
 10786 0b20 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10787 0b22 052B     		cmp	r3, #5
 10788 0b24 EFD9     		bls	.L439
 10789              	.LBE19:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 246


1445:..\src/command_processing.c ****             }
1446:..\src/command_processing.c ****             
1447:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10790              		.loc 1 1447 0 is_stmt 1
 10791 0b26 764B     		ldr	r3, .L485+4
 10792 0b28 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10793 0b2c 012B     		cmp	r3, #1
 10794 0b2e 40F0A184 		bne	.L477
1448:..\src/command_processing.c ****                 set_RTC_time();
 10795              		.loc 1 1448 0
 10796 0b32 FFF7FEFF 		bl	set_RTC_time
1449:..\src/command_processing.c ****             }
1450:..\src/command_processing.c ****             break;
 10797              		.loc 1 1450 0
 10798 0b36 00F09DBC 		b	.L477
 10799              	.L393:
1451:..\src/command_processing.c ****            
1452:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1453:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10800              		.loc 1 1453 0
 10801 0b3a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10802 0b3c 6F4B     		ldr	r3, .L485
 10803 0b3e D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10804 0b40 6F49     		ldr	r1, .L485+4
 10805 0b42 1346     		mov	r3, r2
 10806 0b44 DB00     		lsls	r3, r3, #3
 10807 0b46 9B1A     		subs	r3, r3, r2
 10808 0b48 1B01     		lsls	r3, r3, #4
 10809 0b4a 0B44     		add	r3, r3, r1
 10810 0b4c E233     		adds	r3, r3, #226
 10811 0b4e 0246     		mov	r2, r0
 10812 0b50 1A70     		strb	r2, [r3]
1454:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10813              		.loc 1 1454 0
 10814 0b52 6B4B     		ldr	r3, .L485+4
 10815 0b54 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10816 0b58 5B00     		lsls	r3, r3, #1
 10817 0b5a 5AB2     		sxtb	r2, r3
 10818 0b5c 684B     		ldr	r3, .L485+4
 10819 0b5e 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10820 0b62 5BB2     		sxtb	r3, r3
 10821 0b64 1343     		orrs	r3, r3, r2
 10822 0b66 5BB2     		sxtb	r3, r3
 10823 0b68 DBB2     		uxtb	r3, r3
 10824 0b6a 1846     		mov	r0, r3
 10825 0b6c FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1455:..\src/command_processing.c ****             break;
 10826              		.loc 1 1455 0
 10827 0b70 00F083BC 		b	.L415
 10828              	.L394:
1456:..\src/command_processing.c ****             
1457:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1458:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10829              		.loc 1 1458 0
 10830 0b74 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10831 0b76 6349     		ldr	r1, .L485+8
 10832 0b78 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 247


 10833 0b7a DB00     		lsls	r3, r3, #3
 10834 0b7c 9B1A     		subs	r3, r3, r2
 10835 0b7e 1B01     		lsls	r3, r3, #4
 10836 0b80 0B44     		add	r3, r3, r1
 10837 0b82 03F20F13 		addw	r3, r3, #271
 10838 0b86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10839 0b88 032B     		cmp	r3, #3
 10840 0b8a 00F08580 		beq	.L441
1459:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10841              		.loc 1 1459 0
 10842 0b8e 5E4B     		ldr	r3, .L485+12
 10843 0b90 1B68     		ldr	r3, [r3]	@ float
 10844 0b92 FB60     		str	r3, [r7, #12]	@ float
1460:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10845              		.loc 1 1460 0
 10846 0b94 0023     		movs	r3, #0
 10847 0b96 BB75     		strb	r3, [r7, #22]
 10848 0b98 0EE0     		b	.L442
 10849              	.L443:
1461:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10850              		.loc 1 1461 0 discriminator 3
 10851 0b9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10852 0b9c C3F10303 		rsb	r3, r3, #3
 10853 0ba0 07F10802 		add	r2, r7, #8
 10854 0ba4 1344     		add	r3, r3, r2
 10855 0ba6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10856 0ba8 07F10C01 		add	r1, r7, #12
 10857 0bac 0A44     		add	r2, r2, r1
 10858 0bae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10859 0bb0 1A70     		strb	r2, [r3]
1460:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10860              		.loc 1 1460 0 discriminator 3
 10861 0bb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10862 0bb4 0133     		adds	r3, r3, #1
 10863 0bb6 BB75     		strb	r3, [r7, #22]
 10864              	.L442:
1460:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10865              		.loc 1 1460 0 is_stmt 0 discriminator 1
 10866 0bb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10867 0bba 032B     		cmp	r3, #3
 10868 0bbc EDD9     		bls	.L443
1462:..\src/command_processing.c ****                 }
1463:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10869              		.loc 1 1463 0 is_stmt 1
 10870 0bbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10871 0bc0 BB68     		ldr	r3, [r7, #8]	@ float
 10872 0bc2 4FF08F41 		mov	r1, #1199570944
 10873 0bc6 1846     		mov	r0, r3
 10874 0bc8 FFF7FEFF 		bl	__aeabi_fmul
 10875 0bcc 0346     		mov	r3, r0
 10876 0bce 1846     		mov	r0, r3
 10877 0bd0 FFF7FEFF 		bl	__aeabi_f2iz
 10878 0bd4 0146     		mov	r1, r0
 10879 0bd6 4A4A     		ldr	r2, .L485+4
 10880 0bd8 2346     		mov	r3, r4
 10881 0bda DB00     		lsls	r3, r3, #3
 10882 0bdc 1B1B     		subs	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 248


 10883 0bde 1B01     		lsls	r3, r3, #4
 10884 0be0 1344     		add	r3, r3, r2
 10885 0be2 B033     		adds	r3, r3, #176
 10886 0be4 1960     		str	r1, [r3]
1464:..\src/command_processing.c ****                 
1465:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10887              		.loc 1 1465 0
 10888 0be6 494B     		ldr	r3, .L485+16
 10889 0be8 1B68     		ldr	r3, [r3]	@ float
 10890 0bea FB60     		str	r3, [r7, #12]	@ float
1466:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10891              		.loc 1 1466 0
 10892 0bec 0023     		movs	r3, #0
 10893 0bee BB75     		strb	r3, [r7, #22]
 10894 0bf0 0EE0     		b	.L444
 10895              	.L445:
1467:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10896              		.loc 1 1467 0 discriminator 3
 10897 0bf2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10898 0bf4 C3F10303 		rsb	r3, r3, #3
 10899 0bf8 07F10802 		add	r2, r7, #8
 10900 0bfc 1344     		add	r3, r3, r2
 10901 0bfe BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10902 0c00 07F10C01 		add	r1, r7, #12
 10903 0c04 0A44     		add	r2, r2, r1
 10904 0c06 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10905 0c08 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10906              		.loc 1 1466 0 discriminator 3
 10907 0c0a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10908 0c0c 0133     		adds	r3, r3, #1
 10909 0c0e BB75     		strb	r3, [r7, #22]
 10910              	.L444:
1466:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10911              		.loc 1 1466 0 is_stmt 0 discriminator 1
 10912 0c10 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10913 0c12 032B     		cmp	r3, #3
 10914 0c14 EDD9     		bls	.L445
1468:..\src/command_processing.c ****                 }
1469:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10915              		.loc 1 1469 0 is_stmt 1
 10916 0c16 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10917 0c18 BB68     		ldr	r3, [r7, #8]	@ float
 10918 0c1a 4FF08F41 		mov	r1, #1199570944
 10919 0c1e 1846     		mov	r0, r3
 10920 0c20 FFF7FEFF 		bl	__aeabi_fmul
 10921 0c24 0346     		mov	r3, r0
 10922 0c26 1846     		mov	r0, r3
 10923 0c28 FFF7FEFF 		bl	__aeabi_f2iz
 10924 0c2c 0146     		mov	r1, r0
 10925 0c2e 344A     		ldr	r2, .L485+4
 10926 0c30 2346     		mov	r3, r4
 10927 0c32 DB00     		lsls	r3, r3, #3
 10928 0c34 1B1B     		subs	r3, r3, r4
 10929 0c36 1B01     		lsls	r3, r3, #4
 10930 0c38 1344     		add	r3, r3, r2
 10931 0c3a B433     		adds	r3, r3, #180
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 249


 10932 0c3c 1960     		str	r1, [r3]
1470:..\src/command_processing.c ****                 
1471:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10933              		.loc 1 1471 0
 10934 0c3e 344B     		ldr	r3, .L485+20
 10935 0c40 1B68     		ldr	r3, [r3]	@ float
 10936 0c42 FB60     		str	r3, [r7, #12]	@ float
1472:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10937              		.loc 1 1472 0
 10938 0c44 0023     		movs	r3, #0
 10939 0c46 BB75     		strb	r3, [r7, #22]
 10940 0c48 0EE0     		b	.L446
 10941              	.L447:
1473:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10942              		.loc 1 1473 0 discriminator 3
 10943 0c4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10944 0c4c C3F10303 		rsb	r3, r3, #3
 10945 0c50 07F10802 		add	r2, r7, #8
 10946 0c54 1344     		add	r3, r3, r2
 10947 0c56 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10948 0c58 07F10C01 		add	r1, r7, #12
 10949 0c5c 0A44     		add	r2, r2, r1
 10950 0c5e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10951 0c60 1A70     		strb	r2, [r3]
1472:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10952              		.loc 1 1472 0 discriminator 3
 10953 0c62 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10954 0c64 0133     		adds	r3, r3, #1
 10955 0c66 BB75     		strb	r3, [r7, #22]
 10956              	.L446:
1472:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10957              		.loc 1 1472 0 is_stmt 0 discriminator 1
 10958 0c68 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10959 0c6a 032B     		cmp	r3, #3
 10960 0c6c EDD9     		bls	.L447
1474:..\src/command_processing.c ****                 }
1475:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10961              		.loc 1 1475 0 is_stmt 1
 10962 0c6e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10963 0c70 BB68     		ldr	r3, [r7, #8]	@ float
 10964 0c72 4FF08F41 		mov	r1, #1199570944
 10965 0c76 1846     		mov	r0, r3
 10966 0c78 FFF7FEFF 		bl	__aeabi_fmul
 10967 0c7c 0346     		mov	r3, r0
 10968 0c7e 1846     		mov	r0, r3
 10969 0c80 FFF7FEFF 		bl	__aeabi_f2iz
 10970 0c84 0146     		mov	r1, r0
 10971 0c86 1E4A     		ldr	r2, .L485+4
 10972 0c88 2346     		mov	r3, r4
 10973 0c8a DB00     		lsls	r3, r3, #3
 10974 0c8c 1B1B     		subs	r3, r3, r4
 10975 0c8e 1B01     		lsls	r3, r3, #4
 10976 0c90 1344     		add	r3, r3, r2
 10977 0c92 B833     		adds	r3, r3, #184
 10978 0c94 1960     		str	r1, [r3]
1476:..\src/command_processing.c ****             }
1477:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 250


1478:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1479:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1480:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1481:..\src/command_processing.c ****                 }
1482:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1483:..\src/command_processing.c ****                 
1484:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1485:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1486:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1487:..\src/command_processing.c ****                 }
1488:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1489:..\src/command_processing.c ****                 
1490:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1491:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1492:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1493:..\src/command_processing.c ****                 }
1494:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1495:..\src/command_processing.c ****             }
1496:..\src/command_processing.c ****             break;
 10979              		.loc 1 1496 0
 10980 0c96 F0E3     		b	.L415
 10981              	.L441:
1478:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10982              		.loc 1 1478 0
 10983 0c98 1B4B     		ldr	r3, .L485+12
 10984 0c9a 1B68     		ldr	r3, [r3]	@ float
 10985 0c9c FB60     		str	r3, [r7, #12]	@ float
1479:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10986              		.loc 1 1479 0
 10987 0c9e 0023     		movs	r3, #0
 10988 0ca0 BB75     		strb	r3, [r7, #22]
 10989 0ca2 0EE0     		b	.L449
 10990              	.L450:
1480:..\src/command_processing.c ****                 }
 10991              		.loc 1 1480 0 discriminator 3
 10992 0ca4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10993 0ca6 C3F10303 		rsb	r3, r3, #3
 10994 0caa 07F10802 		add	r2, r7, #8
 10995 0cae 1344     		add	r3, r3, r2
 10996 0cb0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10997 0cb2 07F10C01 		add	r1, r7, #12
 10998 0cb6 0A44     		add	r2, r2, r1
 10999 0cb8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11000 0cba 1A70     		strb	r2, [r3]
1479:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11001              		.loc 1 1479 0 discriminator 3
 11002 0cbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11003 0cbe 0133     		adds	r3, r3, #1
 11004 0cc0 BB75     		strb	r3, [r7, #22]
 11005              	.L449:
1479:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11006              		.loc 1 1479 0 is_stmt 0 discriminator 1
 11007 0cc2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11008 0cc4 032B     		cmp	r3, #3
 11009 0cc6 EDD9     		bls	.L450
1482:..\src/command_processing.c ****                 
 11010              		.loc 1 1482 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 251


 11011 0cc8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11012 0cca BB68     		ldr	r3, [r7, #8]	@ float
 11013 0ccc 4FF08F41 		mov	r1, #1199570944
 11014 0cd0 1846     		mov	r0, r3
 11015 0cd2 FFF7FEFF 		bl	__aeabi_fmul
 11016 0cd6 0346     		mov	r3, r0
 11017 0cd8 1846     		mov	r0, r3
 11018 0cda FFF7FEFF 		bl	__aeabi_f2iz
 11019 0cde 0146     		mov	r1, r0
 11020 0ce0 074A     		ldr	r2, .L485+4
 11021 0ce2 2346     		mov	r3, r4
 11022 0ce4 DB00     		lsls	r3, r3, #3
 11023 0ce6 1B1B     		subs	r3, r3, r4
 11024 0ce8 1B01     		lsls	r3, r3, #4
 11025 0cea 1344     		add	r3, r3, r2
 11026 0cec C833     		adds	r3, r3, #200
 11027 0cee 1960     		str	r1, [r3]
1484:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11028              		.loc 1 1484 0
 11029 0cf0 064B     		ldr	r3, .L485+16
 11030 0cf2 1B68     		ldr	r3, [r3]	@ float
 11031 0cf4 FB60     		str	r3, [r7, #12]	@ float
1485:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11032              		.loc 1 1485 0
 11033 0cf6 0023     		movs	r3, #0
 11034 0cf8 BB75     		strb	r3, [r7, #22]
 11035 0cfa 1AE0     		b	.L451
 11036              	.L486:
 11037              		.align	2
 11038              	.L485:
 11039 0cfc 00000000 		.word	g_rx
 11040 0d00 00000000 		.word	g_mem
 11041 0d04 00000000 		.word	c_mem
 11042 0d08 03000000 		.word	g_rx+3
 11043 0d0c 07000000 		.word	g_rx+7
 11044 0d10 0B000000 		.word	g_rx+11
 11045              	.L452:
1486:..\src/command_processing.c ****                 }
 11046              		.loc 1 1486 0 discriminator 3
 11047 0d14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11048 0d16 C3F10303 		rsb	r3, r3, #3
 11049 0d1a 07F10802 		add	r2, r7, #8
 11050 0d1e 1344     		add	r3, r3, r2
 11051 0d20 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11052 0d22 07F10C01 		add	r1, r7, #12
 11053 0d26 0A44     		add	r2, r2, r1
 11054 0d28 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11055 0d2a 1A70     		strb	r2, [r3]
1485:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11056              		.loc 1 1485 0 discriminator 3
 11057 0d2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11058 0d2e 0133     		adds	r3, r3, #1
 11059 0d30 BB75     		strb	r3, [r7, #22]
 11060              	.L451:
1485:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11061              		.loc 1 1485 0 is_stmt 0 discriminator 1
 11062 0d32 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 252


 11063 0d34 032B     		cmp	r3, #3
 11064 0d36 EDD9     		bls	.L452
1488:..\src/command_processing.c ****                 
 11065              		.loc 1 1488 0 is_stmt 1
 11066 0d38 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11067 0d3a BB68     		ldr	r3, [r7, #8]	@ float
 11068 0d3c 4FF08F41 		mov	r1, #1199570944
 11069 0d40 1846     		mov	r0, r3
 11070 0d42 FFF7FEFF 		bl	__aeabi_fmul
 11071 0d46 0346     		mov	r3, r0
 11072 0d48 1846     		mov	r0, r3
 11073 0d4a FFF7FEFF 		bl	__aeabi_f2iz
 11074 0d4e 0146     		mov	r1, r0
 11075 0d50 B74A     		ldr	r2, .L487
 11076 0d52 2346     		mov	r3, r4
 11077 0d54 DB00     		lsls	r3, r3, #3
 11078 0d56 1B1B     		subs	r3, r3, r4
 11079 0d58 1B01     		lsls	r3, r3, #4
 11080 0d5a 1344     		add	r3, r3, r2
 11081 0d5c CC33     		adds	r3, r3, #204
 11082 0d5e 1960     		str	r1, [r3]
1490:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11083              		.loc 1 1490 0
 11084 0d60 B44B     		ldr	r3, .L487+4
 11085 0d62 1B68     		ldr	r3, [r3]	@ float
 11086 0d64 FB60     		str	r3, [r7, #12]	@ float
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11087              		.loc 1 1491 0
 11088 0d66 0023     		movs	r3, #0
 11089 0d68 BB75     		strb	r3, [r7, #22]
 11090 0d6a 0EE0     		b	.L453
 11091              	.L454:
1492:..\src/command_processing.c ****                 }
 11092              		.loc 1 1492 0 discriminator 3
 11093 0d6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11094 0d6e C3F10303 		rsb	r3, r3, #3
 11095 0d72 07F10802 		add	r2, r7, #8
 11096 0d76 1344     		add	r3, r3, r2
 11097 0d78 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11098 0d7a 07F10C01 		add	r1, r7, #12
 11099 0d7e 0A44     		add	r2, r2, r1
 11100 0d80 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11101 0d82 1A70     		strb	r2, [r3]
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11102              		.loc 1 1491 0 discriminator 3
 11103 0d84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11104 0d86 0133     		adds	r3, r3, #1
 11105 0d88 BB75     		strb	r3, [r7, #22]
 11106              	.L453:
1491:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11107              		.loc 1 1491 0 is_stmt 0 discriminator 1
 11108 0d8a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11109 0d8c 032B     		cmp	r3, #3
 11110 0d8e EDD9     		bls	.L454
1494:..\src/command_processing.c ****             }
 11111              		.loc 1 1494 0 is_stmt 1
 11112 0d90 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 253


 11113 0d92 BB68     		ldr	r3, [r7, #8]	@ float
 11114 0d94 4FF08F41 		mov	r1, #1199570944
 11115 0d98 1846     		mov	r0, r3
 11116 0d9a FFF7FEFF 		bl	__aeabi_fmul
 11117 0d9e 0346     		mov	r3, r0
 11118 0da0 1846     		mov	r0, r3
 11119 0da2 FFF7FEFF 		bl	__aeabi_f2iz
 11120 0da6 0146     		mov	r1, r0
 11121 0da8 A14A     		ldr	r2, .L487
 11122 0daa 2346     		mov	r3, r4
 11123 0dac DB00     		lsls	r3, r3, #3
 11124 0dae 1B1B     		subs	r3, r3, r4
 11125 0db0 1B01     		lsls	r3, r3, #4
 11126 0db2 1344     		add	r3, r3, r2
 11127 0db4 D033     		adds	r3, r3, #208
 11128 0db6 1960     		str	r1, [r3]
 11129              		.loc 1 1496 0
 11130 0db8 5FE3     		b	.L415
 11131              	.L395:
1497:..\src/command_processing.c ****             
1498:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1499:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11132              		.loc 1 1499 0
 11133 0dba FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11134 0dbc 9E49     		ldr	r1, .L487+8
 11135 0dbe 1346     		mov	r3, r2
 11136 0dc0 DB00     		lsls	r3, r3, #3
 11137 0dc2 9B1A     		subs	r3, r3, r2
 11138 0dc4 1B01     		lsls	r3, r3, #4
 11139 0dc6 0B44     		add	r3, r3, r1
 11140 0dc8 03F20F13 		addw	r3, r3, #271
 11141 0dcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11142 0dce 032B     		cmp	r3, #3
 11143 0dd0 00F08580 		beq	.L455
1500:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11144              		.loc 1 1500 0
 11145 0dd4 994B     		ldr	r3, .L487+12
 11146 0dd6 1B68     		ldr	r3, [r3]	@ float
 11147 0dd8 FB60     		str	r3, [r7, #12]	@ float
1501:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11148              		.loc 1 1501 0
 11149 0dda 0023     		movs	r3, #0
 11150 0ddc BB75     		strb	r3, [r7, #22]
 11151 0dde 0EE0     		b	.L456
 11152              	.L457:
1502:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11153              		.loc 1 1502 0 discriminator 3
 11154 0de0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11155 0de2 C3F10303 		rsb	r3, r3, #3
 11156 0de6 07F10802 		add	r2, r7, #8
 11157 0dea 1344     		add	r3, r3, r2
 11158 0dec BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11159 0dee 07F10C01 		add	r1, r7, #12
 11160 0df2 0A44     		add	r2, r2, r1
 11161 0df4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11162 0df6 1A70     		strb	r2, [r3]
1501:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 254


 11163              		.loc 1 1501 0 discriminator 3
 11164 0df8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11165 0dfa 0133     		adds	r3, r3, #1
 11166 0dfc BB75     		strb	r3, [r7, #22]
 11167              	.L456:
1501:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11168              		.loc 1 1501 0 is_stmt 0 discriminator 1
 11169 0dfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11170 0e00 032B     		cmp	r3, #3
 11171 0e02 EDD9     		bls	.L457
1503:..\src/command_processing.c ****                 }
1504:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11172              		.loc 1 1504 0 is_stmt 1
 11173 0e04 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11174 0e06 BB68     		ldr	r3, [r7, #8]	@ float
 11175 0e08 4FF08F41 		mov	r1, #1199570944
 11176 0e0c 1846     		mov	r0, r3
 11177 0e0e FFF7FEFF 		bl	__aeabi_fmul
 11178 0e12 0346     		mov	r3, r0
 11179 0e14 1846     		mov	r0, r3
 11180 0e16 FFF7FEFF 		bl	__aeabi_f2iz
 11181 0e1a 0146     		mov	r1, r0
 11182 0e1c 844A     		ldr	r2, .L487
 11183 0e1e 2346     		mov	r3, r4
 11184 0e20 DB00     		lsls	r3, r3, #3
 11185 0e22 1B1B     		subs	r3, r3, r4
 11186 0e24 1B01     		lsls	r3, r3, #4
 11187 0e26 1344     		add	r3, r3, r2
 11188 0e28 BC33     		adds	r3, r3, #188
 11189 0e2a 1960     		str	r1, [r3]
1505:..\src/command_processing.c ****                 
1506:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11190              		.loc 1 1506 0
 11191 0e2c 844B     		ldr	r3, .L487+16
 11192 0e2e 1B68     		ldr	r3, [r3]	@ float
 11193 0e30 FB60     		str	r3, [r7, #12]	@ float
1507:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11194              		.loc 1 1507 0
 11195 0e32 0023     		movs	r3, #0
 11196 0e34 BB75     		strb	r3, [r7, #22]
 11197 0e36 0EE0     		b	.L458
 11198              	.L459:
1508:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11199              		.loc 1 1508 0 discriminator 3
 11200 0e38 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11201 0e3a C3F10303 		rsb	r3, r3, #3
 11202 0e3e 07F10802 		add	r2, r7, #8
 11203 0e42 1344     		add	r3, r3, r2
 11204 0e44 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11205 0e46 07F10C01 		add	r1, r7, #12
 11206 0e4a 0A44     		add	r2, r2, r1
 11207 0e4c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11208 0e4e 1A70     		strb	r2, [r3]
1507:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11209              		.loc 1 1507 0 discriminator 3
 11210 0e50 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11211 0e52 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 255


 11212 0e54 BB75     		strb	r3, [r7, #22]
 11213              	.L458:
1507:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11214              		.loc 1 1507 0 is_stmt 0 discriminator 1
 11215 0e56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11216 0e58 032B     		cmp	r3, #3
 11217 0e5a EDD9     		bls	.L459
1509:..\src/command_processing.c ****                 }
1510:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11218              		.loc 1 1510 0 is_stmt 1
 11219 0e5c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11220 0e5e BB68     		ldr	r3, [r7, #8]	@ float
 11221 0e60 4FF08F41 		mov	r1, #1199570944
 11222 0e64 1846     		mov	r0, r3
 11223 0e66 FFF7FEFF 		bl	__aeabi_fmul
 11224 0e6a 0346     		mov	r3, r0
 11225 0e6c 1846     		mov	r0, r3
 11226 0e6e FFF7FEFF 		bl	__aeabi_f2iz
 11227 0e72 0146     		mov	r1, r0
 11228 0e74 6E4A     		ldr	r2, .L487
 11229 0e76 2346     		mov	r3, r4
 11230 0e78 DB00     		lsls	r3, r3, #3
 11231 0e7a 1B1B     		subs	r3, r3, r4
 11232 0e7c 1B01     		lsls	r3, r3, #4
 11233 0e7e 1344     		add	r3, r3, r2
 11234 0e80 C033     		adds	r3, r3, #192
 11235 0e82 1960     		str	r1, [r3]
1511:..\src/command_processing.c ****                 
1512:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11236              		.loc 1 1512 0
 11237 0e84 6B4B     		ldr	r3, .L487+4
 11238 0e86 1B68     		ldr	r3, [r3]	@ float
 11239 0e88 FB60     		str	r3, [r7, #12]	@ float
1513:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11240              		.loc 1 1513 0
 11241 0e8a 0023     		movs	r3, #0
 11242 0e8c BB75     		strb	r3, [r7, #22]
 11243 0e8e 0EE0     		b	.L460
 11244              	.L461:
1514:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11245              		.loc 1 1514 0 discriminator 3
 11246 0e90 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11247 0e92 C3F10303 		rsb	r3, r3, #3
 11248 0e96 07F10802 		add	r2, r7, #8
 11249 0e9a 1344     		add	r3, r3, r2
 11250 0e9c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11251 0e9e 07F10C01 		add	r1, r7, #12
 11252 0ea2 0A44     		add	r2, r2, r1
 11253 0ea4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11254 0ea6 1A70     		strb	r2, [r3]
1513:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11255              		.loc 1 1513 0 discriminator 3
 11256 0ea8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11257 0eaa 0133     		adds	r3, r3, #1
 11258 0eac BB75     		strb	r3, [r7, #22]
 11259              	.L460:
1513:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 256


 11260              		.loc 1 1513 0 is_stmt 0 discriminator 1
 11261 0eae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11262 0eb0 032B     		cmp	r3, #3
 11263 0eb2 EDD9     		bls	.L461
1515:..\src/command_processing.c ****                 }
1516:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11264              		.loc 1 1516 0 is_stmt 1
 11265 0eb4 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11266 0eb6 BB68     		ldr	r3, [r7, #8]	@ float
 11267 0eb8 4FF08F41 		mov	r1, #1199570944
 11268 0ebc 1846     		mov	r0, r3
 11269 0ebe FFF7FEFF 		bl	__aeabi_fmul
 11270 0ec2 0346     		mov	r3, r0
 11271 0ec4 1846     		mov	r0, r3
 11272 0ec6 FFF7FEFF 		bl	__aeabi_f2iz
 11273 0eca 0146     		mov	r1, r0
 11274 0ecc 584A     		ldr	r2, .L487
 11275 0ece 2346     		mov	r3, r4
 11276 0ed0 DB00     		lsls	r3, r3, #3
 11277 0ed2 1B1B     		subs	r3, r3, r4
 11278 0ed4 1B01     		lsls	r3, r3, #4
 11279 0ed6 1344     		add	r3, r3, r2
 11280 0ed8 C433     		adds	r3, r3, #196
 11281 0eda 1960     		str	r1, [r3]
1517:..\src/command_processing.c ****             }
1518:..\src/command_processing.c ****             else {
1519:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1520:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1521:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1522:..\src/command_processing.c ****                 }
1523:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1524:..\src/command_processing.c ****                 
1525:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1526:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1527:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1528:..\src/command_processing.c ****                 }
1529:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1530:..\src/command_processing.c ****                 
1531:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1532:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1533:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1534:..\src/command_processing.c ****                 }
1535:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1536:..\src/command_processing.c ****             }            
1537:..\src/command_processing.c ****             break;  
 11282              		.loc 1 1537 0
 11283 0edc CDE2     		b	.L415
 11284              	.L455:
1519:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11285              		.loc 1 1519 0
 11286 0ede 574B     		ldr	r3, .L487+12
 11287 0ee0 1B68     		ldr	r3, [r3]	@ float
 11288 0ee2 FB60     		str	r3, [r7, #12]	@ float
1520:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11289              		.loc 1 1520 0
 11290 0ee4 0023     		movs	r3, #0
 11291 0ee6 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 257


 11292 0ee8 0EE0     		b	.L463
 11293              	.L464:
1521:..\src/command_processing.c ****                 }
 11294              		.loc 1 1521 0 discriminator 3
 11295 0eea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11296 0eec C3F10303 		rsb	r3, r3, #3
 11297 0ef0 07F10802 		add	r2, r7, #8
 11298 0ef4 1344     		add	r3, r3, r2
 11299 0ef6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11300 0ef8 07F10C01 		add	r1, r7, #12
 11301 0efc 0A44     		add	r2, r2, r1
 11302 0efe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11303 0f00 1A70     		strb	r2, [r3]
1520:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11304              		.loc 1 1520 0 discriminator 3
 11305 0f02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11306 0f04 0133     		adds	r3, r3, #1
 11307 0f06 BB75     		strb	r3, [r7, #22]
 11308              	.L463:
1520:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11309              		.loc 1 1520 0 is_stmt 0 discriminator 1
 11310 0f08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11311 0f0a 032B     		cmp	r3, #3
 11312 0f0c EDD9     		bls	.L464
1523:..\src/command_processing.c ****                 
 11313              		.loc 1 1523 0 is_stmt 1
 11314 0f0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11315 0f10 BB68     		ldr	r3, [r7, #8]	@ float
 11316 0f12 4FF08F41 		mov	r1, #1199570944
 11317 0f16 1846     		mov	r0, r3
 11318 0f18 FFF7FEFF 		bl	__aeabi_fmul
 11319 0f1c 0346     		mov	r3, r0
 11320 0f1e 1846     		mov	r0, r3
 11321 0f20 FFF7FEFF 		bl	__aeabi_f2iz
 11322 0f24 0146     		mov	r1, r0
 11323 0f26 424A     		ldr	r2, .L487
 11324 0f28 2346     		mov	r3, r4
 11325 0f2a DB00     		lsls	r3, r3, #3
 11326 0f2c 1B1B     		subs	r3, r3, r4
 11327 0f2e 1B01     		lsls	r3, r3, #4
 11328 0f30 1344     		add	r3, r3, r2
 11329 0f32 D433     		adds	r3, r3, #212
 11330 0f34 1960     		str	r1, [r3]
1525:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11331              		.loc 1 1525 0
 11332 0f36 424B     		ldr	r3, .L487+16
 11333 0f38 1B68     		ldr	r3, [r3]	@ float
 11334 0f3a FB60     		str	r3, [r7, #12]	@ float
1526:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11335              		.loc 1 1526 0
 11336 0f3c 0023     		movs	r3, #0
 11337 0f3e BB75     		strb	r3, [r7, #22]
 11338 0f40 0EE0     		b	.L465
 11339              	.L466:
1527:..\src/command_processing.c ****                 }
 11340              		.loc 1 1527 0 discriminator 3
 11341 0f42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 258


 11342 0f44 C3F10303 		rsb	r3, r3, #3
 11343 0f48 07F10802 		add	r2, r7, #8
 11344 0f4c 1344     		add	r3, r3, r2
 11345 0f4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11346 0f50 07F10C01 		add	r1, r7, #12
 11347 0f54 0A44     		add	r2, r2, r1
 11348 0f56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11349 0f58 1A70     		strb	r2, [r3]
1526:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11350              		.loc 1 1526 0 discriminator 3
 11351 0f5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11352 0f5c 0133     		adds	r3, r3, #1
 11353 0f5e BB75     		strb	r3, [r7, #22]
 11354              	.L465:
1526:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11355              		.loc 1 1526 0 is_stmt 0 discriminator 1
 11356 0f60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11357 0f62 032B     		cmp	r3, #3
 11358 0f64 EDD9     		bls	.L466
1529:..\src/command_processing.c ****                 
 11359              		.loc 1 1529 0 is_stmt 1
 11360 0f66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11361 0f68 BB68     		ldr	r3, [r7, #8]	@ float
 11362 0f6a 4FF08F41 		mov	r1, #1199570944
 11363 0f6e 1846     		mov	r0, r3
 11364 0f70 FFF7FEFF 		bl	__aeabi_fmul
 11365 0f74 0346     		mov	r3, r0
 11366 0f76 1846     		mov	r0, r3
 11367 0f78 FFF7FEFF 		bl	__aeabi_f2iz
 11368 0f7c 0146     		mov	r1, r0
 11369 0f7e 2C4A     		ldr	r2, .L487
 11370 0f80 2346     		mov	r3, r4
 11371 0f82 DB00     		lsls	r3, r3, #3
 11372 0f84 1B1B     		subs	r3, r3, r4
 11373 0f86 1B01     		lsls	r3, r3, #4
 11374 0f88 1344     		add	r3, r3, r2
 11375 0f8a D833     		adds	r3, r3, #216
 11376 0f8c 1960     		str	r1, [r3]
1531:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11377              		.loc 1 1531 0
 11378 0f8e 294B     		ldr	r3, .L487+4
 11379 0f90 1B68     		ldr	r3, [r3]	@ float
 11380 0f92 FB60     		str	r3, [r7, #12]	@ float
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11381              		.loc 1 1532 0
 11382 0f94 0023     		movs	r3, #0
 11383 0f96 BB75     		strb	r3, [r7, #22]
 11384 0f98 0EE0     		b	.L467
 11385              	.L468:
1533:..\src/command_processing.c ****                 }
 11386              		.loc 1 1533 0 discriminator 3
 11387 0f9a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11388 0f9c C3F10303 		rsb	r3, r3, #3
 11389 0fa0 07F10802 		add	r2, r7, #8
 11390 0fa4 1344     		add	r3, r3, r2
 11391 0fa6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11392 0fa8 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 259


 11393 0fac 0A44     		add	r2, r2, r1
 11394 0fae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11395 0fb0 1A70     		strb	r2, [r3]
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11396              		.loc 1 1532 0 discriminator 3
 11397 0fb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11398 0fb4 0133     		adds	r3, r3, #1
 11399 0fb6 BB75     		strb	r3, [r7, #22]
 11400              	.L467:
1532:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11401              		.loc 1 1532 0 is_stmt 0 discriminator 1
 11402 0fb8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11403 0fba 032B     		cmp	r3, #3
 11404 0fbc EDD9     		bls	.L468
1535:..\src/command_processing.c ****             }            
 11405              		.loc 1 1535 0 is_stmt 1
 11406 0fbe FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11407 0fc0 BB68     		ldr	r3, [r7, #8]	@ float
 11408 0fc2 4FF08F41 		mov	r1, #1199570944
 11409 0fc6 1846     		mov	r0, r3
 11410 0fc8 FFF7FEFF 		bl	__aeabi_fmul
 11411 0fcc 0346     		mov	r3, r0
 11412 0fce 1846     		mov	r0, r3
 11413 0fd0 FFF7FEFF 		bl	__aeabi_f2iz
 11414 0fd4 0146     		mov	r1, r0
 11415 0fd6 164A     		ldr	r2, .L487
 11416 0fd8 2346     		mov	r3, r4
 11417 0fda DB00     		lsls	r3, r3, #3
 11418 0fdc 1B1B     		subs	r3, r3, r4
 11419 0fde 1B01     		lsls	r3, r3, #4
 11420 0fe0 1344     		add	r3, r3, r2
 11421 0fe2 DC33     		adds	r3, r3, #220
 11422 0fe4 1960     		str	r1, [r3]
 11423              		.loc 1 1537 0
 11424 0fe6 48E2     		b	.L415
 11425              	.L396:
1538:..\src/command_processing.c ****             
1539:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1540:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11426              		.loc 1 1540 0
 11427 0fe8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11428 0fea 164B     		ldr	r3, .L487+20
 11429 0fec D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11430 0fee 1049     		ldr	r1, .L487
 11431 0ff0 1346     		mov	r3, r2
 11432 0ff2 DB00     		lsls	r3, r3, #3
 11433 0ff4 9B1A     		subs	r3, r3, r2
 11434 0ff6 1B01     		lsls	r3, r3, #4
 11435 0ff8 0B44     		add	r3, r3, r1
 11436 0ffa 03F58773 		add	r3, r3, #270
 11437 0ffe 0246     		mov	r2, r0
 11438 1000 1A70     		strb	r2, [r3]
1541:..\src/command_processing.c ****             
1542:..\src/command_processing.c ****             // Hold the actual position
1543:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11439              		.loc 1 1543 0
 11440 1002 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 260


 11441 1004 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11442 1006 0A48     		ldr	r0, .L487
 11443 1008 1346     		mov	r3, r2
 11444 100a DB00     		lsls	r3, r3, #3
 11445 100c 9B1A     		subs	r3, r3, r2
 11446 100e 1B01     		lsls	r3, r3, #4
 11447 1010 0344     		add	r3, r3, r0
 11448 1012 03F58873 		add	r3, r3, #272
 11449 1016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11450 1018 1846     		mov	r0, r3
 11451 101a 0B4A     		ldr	r2, .L487+24
 11452 101c 3423     		movs	r3, #52
 11453 101e 03FB00F3 		mul	r3, r3, r0
 11454 1022 1344     		add	r3, r3, r2
 11455 1024 1A68     		ldr	r2, [r3]
 11456 1026 0948     		ldr	r0, .L487+28
 11457 1028 0B01     		lsls	r3, r1, #4
 11458 102a 0344     		add	r3, r3, r0
 11459 102c 1A60     		str	r2, [r3]
1544:..\src/command_processing.c ****             break;   
 11460              		.loc 1 1544 0
 11461 102e 24E2     		b	.L415
 11462              	.L488:
 11463              		.align	2
 11464              	.L487:
 11465 1030 00000000 		.word	g_mem
 11466 1034 0B000000 		.word	g_rx+11
 11467 1038 00000000 		.word	c_mem
 11468 103c 03000000 		.word	g_rx+3
 11469 1040 07000000 		.word	g_rx+7
 11470 1044 00000000 		.word	g_rx
 11471 1048 00000000 		.word	g_meas
 11472 104c 00000000 		.word	g_refNew
 11473              	.L397:
1545:..\src/command_processing.c **** 
1546:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1547:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11474              		.loc 1 1547 0
 11475 1050 0023     		movs	r3, #0
 11476 1052 FB75     		strb	r3, [r7, #23]
 11477 1054 7EE0     		b	.L469
 11478              	.L470:
1548:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11479              		.loc 1 1548 0 discriminator 3
 11480 1056 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11481 1058 9049     		ldr	r1, .L489
 11482 105a 1346     		mov	r3, r2
 11483 105c DB00     		lsls	r3, r3, #3
 11484 105e 9B1A     		subs	r3, r3, r2
 11485 1060 1B01     		lsls	r3, r3, #4
 11486 1062 0B44     		add	r3, r3, r1
 11487 1064 03F58873 		add	r3, r3, #272
 11488 1068 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11489 106a 1C46     		mov	r4, r3
 11490 106c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11491 106e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11492 1070 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 261


 11493 1072 0333     		adds	r3, r3, #3
 11494 1074 8A49     		ldr	r1, .L489+4
 11495 1076 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11496 1078 1B02     		lsls	r3, r3, #8
 11497 107a 19B2     		sxth	r1, r3
 11498 107c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11499 107e 0233     		adds	r3, r3, #2
 11500 1080 5B00     		lsls	r3, r3, #1
 11501 1082 8748     		ldr	r0, .L489+4
 11502 1084 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11503 1086 1BB2     		sxth	r3, r3
 11504 1088 0B43     		orrs	r3, r3, r1
 11505 108a 1BB2     		sxth	r3, r3
 11506 108c 1846     		mov	r0, r3
 11507 108e 8349     		ldr	r1, .L489
 11508 1090 2346     		mov	r3, r4
 11509 1092 5B00     		lsls	r3, r3, #1
 11510 1094 2344     		add	r3, r3, r4
 11511 1096 9B00     		lsls	r3, r3, #2
 11512 1098 1344     		add	r3, r3, r2
 11513 109a 6633     		adds	r3, r3, #102
 11514 109c 41F82300 		str	r0, [r1, r3, lsl #2]
1549:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11515              		.loc 1 1549 0 discriminator 3
 11516 10a0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11517 10a2 7E49     		ldr	r1, .L489
 11518 10a4 1346     		mov	r3, r2
 11519 10a6 DB00     		lsls	r3, r3, #3
 11520 10a8 9B1A     		subs	r3, r3, r2
 11521 10aa 1B01     		lsls	r3, r3, #4
 11522 10ac 0B44     		add	r3, r3, r1
 11523 10ae 03F58873 		add	r3, r3, #272
 11524 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11525 10b4 1D46     		mov	r5, r3
 11526 10b6 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11527 10b8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11528 10ba 7848     		ldr	r0, .L489
 11529 10bc 1346     		mov	r3, r2
 11530 10be DB00     		lsls	r3, r3, #3
 11531 10c0 9B1A     		subs	r3, r3, r2
 11532 10c2 1B01     		lsls	r3, r3, #4
 11533 10c4 0344     		add	r3, r3, r0
 11534 10c6 03F58873 		add	r3, r3, #272
 11535 10ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11536 10cc 1C46     		mov	r4, r3
 11537 10ce FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11538 10d0 7248     		ldr	r0, .L489
 11539 10d2 2346     		mov	r3, r4
 11540 10d4 5B00     		lsls	r3, r3, #1
 11541 10d6 2344     		add	r3, r3, r4
 11542 10d8 9B00     		lsls	r3, r3, #2
 11543 10da 1344     		add	r3, r3, r2
 11544 10dc 6633     		adds	r3, r3, #102
 11545 10de 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11546 10e2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11547 10e4 6D4C     		ldr	r4, .L489
 11548 10e6 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 262


 11549 10e8 DB00     		lsls	r3, r3, #3
 11550 10ea 9B1A     		subs	r3, r3, r2
 11551 10ec 1B01     		lsls	r3, r3, #4
 11552 10ee 2344     		add	r3, r3, r4
 11553 10f0 03F58873 		add	r3, r3, #272
 11554 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11555 10f6 1E46     		mov	r6, r3
 11556 10f8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11557 10fa 684C     		ldr	r4, .L489
 11558 10fc 3346     		mov	r3, r6
 11559 10fe 5B00     		lsls	r3, r3, #1
 11560 1100 3344     		add	r3, r3, r6
 11561 1102 1B01     		lsls	r3, r3, #4
 11562 1104 2344     		add	r3, r3, r4
 11563 1106 1344     		add	r3, r3, r2
 11564 1108 03F29513 		addw	r3, r3, #405
 11565 110c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11566 110e 00FA03F2 		lsl	r2, r0, r3
 11567 1112 6248     		ldr	r0, .L489
 11568 1114 2B46     		mov	r3, r5
 11569 1116 5B00     		lsls	r3, r3, #1
 11570 1118 2B44     		add	r3, r3, r5
 11571 111a 9B00     		lsls	r3, r3, #2
 11572 111c 0B44     		add	r3, r3, r1
 11573 111e 6633     		adds	r3, r3, #102
 11574 1120 40F82320 		str	r2, [r0, r3, lsl #2]
1550:..\src/command_processing.c **** 
1551:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11575              		.loc 1 1551 0 discriminator 3
 11576 1124 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11577 1126 5D49     		ldr	r1, .L489
 11578 1128 1346     		mov	r3, r2
 11579 112a DB00     		lsls	r3, r3, #3
 11580 112c 9B1A     		subs	r3, r3, r2
 11581 112e 1B01     		lsls	r3, r3, #4
 11582 1130 0B44     		add	r3, r3, r1
 11583 1132 03F58873 		add	r3, r3, #272
 11584 1136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11585 1138 1846     		mov	r0, r3
 11586 113a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11587 113c 5949     		ldr	r1, .L489+8
 11588 113e 3422     		movs	r2, #52
 11589 1140 02FB00F2 		mul	r2, r2, r0
 11590 1144 0A44     		add	r2, r2, r1
 11591 1146 1344     		add	r3, r3, r2
 11592 1148 1833     		adds	r3, r3, #24
 11593 114a 0022     		movs	r2, #0
 11594 114c 1A70     		strb	r2, [r3]
1547:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11595              		.loc 1 1547 0 discriminator 3
 11596 114e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11597 1150 0133     		adds	r3, r3, #1
 11598 1152 FB75     		strb	r3, [r7, #23]
 11599              	.L469:
1547:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11600              		.loc 1 1547 0 is_stmt 0 discriminator 1
 11601 1154 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 263


 11602 1156 022B     		cmp	r3, #2
 11603 1158 7FF67DAF 		bls	.L470
1552:..\src/command_processing.c ****             }
1553:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11604              		.loc 1 1553 0 is_stmt 1
 11605 115c 524B     		ldr	r3, .L489+12
 11606 115e 0122     		movs	r2, #1
 11607 1160 1A70     		strb	r2, [r3]
1554:..\src/command_processing.c ****             break;
 11608              		.loc 1 1554 0
 11609 1162 8AE1     		b	.L415
 11610              	.L398:
1555:..\src/command_processing.c ****     
1556:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1557:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11611              		.loc 1 1557 0
 11612 1164 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11613 1166 4E4B     		ldr	r3, .L489+4
 11614 1168 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11615 116a 1906     		lsls	r1, r3, #24
 11616 116c 4C4B     		ldr	r3, .L489+4
 11617 116e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11618 1170 1B04     		lsls	r3, r3, #16
 11619 1172 1943     		orrs	r1, r1, r3
 11620 1174 4A4B     		ldr	r3, .L489+4
 11621 1176 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11622 1178 1B02     		lsls	r3, r3, #8
 11623 117a 0B43     		orrs	r3, r3, r1
 11624 117c 4849     		ldr	r1, .L489+4
 11625 117e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11626 1180 1943     		orrs	r1, r1, r3
 11627 1182 4648     		ldr	r0, .L489
 11628 1184 1346     		mov	r3, r2
 11629 1186 DB00     		lsls	r3, r3, #3
 11630 1188 9B1A     		subs	r3, r3, r2
 11631 118a 1B01     		lsls	r3, r3, #4
 11632 118c 0344     		add	r3, r3, r0
 11633 118e E433     		adds	r3, r3, #228
 11634 1190 1960     		str	r1, [r3]
1558:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11635              		.loc 1 1558 0
 11636 1192 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11637 1194 424B     		ldr	r3, .L489+4
 11638 1196 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11639 1198 1906     		lsls	r1, r3, #24
 11640 119a 414B     		ldr	r3, .L489+4
 11641 119c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11642 119e 1B04     		lsls	r3, r3, #16
 11643 11a0 1943     		orrs	r1, r1, r3
 11644 11a2 3F4B     		ldr	r3, .L489+4
 11645 11a4 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11646 11a6 1B02     		lsls	r3, r3, #8
 11647 11a8 0B43     		orrs	r3, r3, r1
 11648 11aa 3D49     		ldr	r1, .L489+4
 11649 11ac 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11650 11ae 1943     		orrs	r1, r1, r3
 11651 11b0 3A48     		ldr	r0, .L489
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 264


 11652 11b2 1346     		mov	r3, r2
 11653 11b4 DB00     		lsls	r3, r3, #3
 11654 11b6 9B1A     		subs	r3, r3, r2
 11655 11b8 1B01     		lsls	r3, r3, #4
 11656 11ba 0344     		add	r3, r3, r0
 11657 11bc E833     		adds	r3, r3, #232
 11658 11be 1960     		str	r1, [r3]
1559:..\src/command_processing.c **** 
1560:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11659              		.loc 1 1560 0
 11660 11c0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11661 11c2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11662 11c4 3548     		ldr	r0, .L489
 11663 11c6 0B46     		mov	r3, r1
 11664 11c8 DB00     		lsls	r3, r3, #3
 11665 11ca 5B1A     		subs	r3, r3, r1
 11666 11cc 1B01     		lsls	r3, r3, #4
 11667 11ce 0344     		add	r3, r3, r0
 11668 11d0 E433     		adds	r3, r3, #228
 11669 11d2 1868     		ldr	r0, [r3]
 11670 11d4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11671 11d6 314C     		ldr	r4, .L489
 11672 11d8 0B46     		mov	r3, r1
 11673 11da DB00     		lsls	r3, r3, #3
 11674 11dc 5B1A     		subs	r3, r3, r1
 11675 11de 1B01     		lsls	r3, r3, #4
 11676 11e0 2344     		add	r3, r3, r4
 11677 11e2 03F58873 		add	r3, r3, #272
 11678 11e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11679 11e8 1C46     		mov	r4, r3
 11680 11ea 2C49     		ldr	r1, .L489
 11681 11ec 2346     		mov	r3, r4
 11682 11ee 5B00     		lsls	r3, r3, #1
 11683 11f0 2344     		add	r3, r3, r4
 11684 11f2 1B01     		lsls	r3, r3, #4
 11685 11f4 0B44     		add	r3, r3, r1
 11686 11f6 03F29513 		addw	r3, r3, #405
 11687 11fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11688 11fc 00FA03F1 		lsl	r1, r0, r3
 11689 1200 2648     		ldr	r0, .L489
 11690 1202 1346     		mov	r3, r2
 11691 1204 DB00     		lsls	r3, r3, #3
 11692 1206 9B1A     		subs	r3, r3, r2
 11693 1208 1B01     		lsls	r3, r3, #4
 11694 120a 0344     		add	r3, r3, r0
 11695 120c E433     		adds	r3, r3, #228
 11696 120e 1960     		str	r1, [r3]
1561:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11697              		.loc 1 1561 0
 11698 1210 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11699 1212 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11700 1214 2148     		ldr	r0, .L489
 11701 1216 0B46     		mov	r3, r1
 11702 1218 DB00     		lsls	r3, r3, #3
 11703 121a 5B1A     		subs	r3, r3, r1
 11704 121c 1B01     		lsls	r3, r3, #4
 11705 121e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 265


 11706 1220 E833     		adds	r3, r3, #232
 11707 1222 1868     		ldr	r0, [r3]
 11708 1224 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11709 1226 1D4C     		ldr	r4, .L489
 11710 1228 0B46     		mov	r3, r1
 11711 122a DB00     		lsls	r3, r3, #3
 11712 122c 5B1A     		subs	r3, r3, r1
 11713 122e 1B01     		lsls	r3, r3, #4
 11714 1230 2344     		add	r3, r3, r4
 11715 1232 03F58873 		add	r3, r3, #272
 11716 1236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11717 1238 1C46     		mov	r4, r3
 11718 123a 1849     		ldr	r1, .L489
 11719 123c 2346     		mov	r3, r4
 11720 123e 5B00     		lsls	r3, r3, #1
 11721 1240 2344     		add	r3, r3, r4
 11722 1242 1B01     		lsls	r3, r3, #4
 11723 1244 0B44     		add	r3, r3, r1
 11724 1246 03F29513 		addw	r3, r3, #405
 11725 124a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11726 124c 00FA03F1 		lsl	r1, r0, r3
 11727 1250 1248     		ldr	r0, .L489
 11728 1252 1346     		mov	r3, r2
 11729 1254 DB00     		lsls	r3, r3, #3
 11730 1256 9B1A     		subs	r3, r3, r2
 11731 1258 1B01     		lsls	r3, r3, #4
 11732 125a 0344     		add	r3, r3, r0
 11733 125c E833     		adds	r3, r3, #232
 11734 125e 1960     		str	r1, [r3]
1562:..\src/command_processing.c ****             break;
 11735              		.loc 1 1562 0
 11736 1260 0BE1     		b	.L415
 11737              	.L399:
1563:..\src/command_processing.c ****             
1564:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1565:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11738              		.loc 1 1565 0
 11739 1262 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11740 1264 0E4B     		ldr	r3, .L489+4
 11741 1266 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11742 1268 0C49     		ldr	r1, .L489
 11743 126a 1346     		mov	r3, r2
 11744 126c DB00     		lsls	r3, r3, #3
 11745 126e 9B1A     		subs	r3, r3, r2
 11746 1270 1B01     		lsls	r3, r3, #4
 11747 1272 0B44     		add	r3, r3, r1
 11748 1274 E233     		adds	r3, r3, #226
 11749 1276 0246     		mov	r2, r0
 11750 1278 1A70     		strb	r2, [r3]
1566:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11751              		.loc 1 1566 0
 11752 127a 084B     		ldr	r3, .L489
 11753 127c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11754 1280 5B00     		lsls	r3, r3, #1
 11755 1282 5AB2     		sxtb	r2, r3
 11756 1284 054B     		ldr	r3, .L489
 11757 1286 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 266


 11758 128a 5BB2     		sxtb	r3, r3
 11759 128c 1343     		orrs	r3, r3, r2
 11760 128e 5BB2     		sxtb	r3, r3
 11761 1290 DBB2     		uxtb	r3, r3
 11762 1292 1846     		mov	r0, r3
 11763 1294 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1567:..\src/command_processing.c ****             break;
 11764              		.loc 1 1567 0
 11765 1298 EFE0     		b	.L415
 11766              	.L490:
 11767 129a 00BF     		.align	2
 11768              	.L489:
 11769 129c 00000000 		.word	g_mem
 11770 12a0 00000000 		.word	g_rx
 11771 12a4 00000000 		.word	g_meas
 11772 12a8 00000000 		.word	reset_last_value_flag
 11773              	.L400:
1568:..\src/command_processing.c **** 
1569:..\src/command_processing.c ****         case 74:        // Device type
1570:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11774              		.loc 1 1570 0
 11775 12ac 754B     		ldr	r3, .L491
 11776 12ae DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11777 12b0 754B     		ldr	r3, .L491+4
 11778 12b2 83F8AC20 		strb	r2, [r3, #172]
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11779              		.loc 1 1572 0
 11780 12b6 744B     		ldr	r3, .L491+4
 11781 12b8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11782 12bc 002B     		cmp	r3, #0
 11783 12be 40F09D80 		bne	.L471
1573:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11784              		.loc 1 1573 0
 11785 12c2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11786 12c4 7049     		ldr	r1, .L491+4
 11787 12c6 1346     		mov	r3, r2
 11788 12c8 DB00     		lsls	r3, r3, #3
 11789 12ca 9B1A     		subs	r3, r3, r2
 11790 12cc 1B01     		lsls	r3, r3, #4
 11791 12ce 0B44     		add	r3, r3, r1
 11792 12d0 03F58873 		add	r3, r3, #272
 11793 12d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11794 12d6 1946     		mov	r1, r3
 11795 12d8 6B4A     		ldr	r2, .L491+4
 11796 12da 0B46     		mov	r3, r1
 11797 12dc 5B00     		lsls	r3, r3, #1
 11798 12de 0B44     		add	r3, r3, r1
 11799 12e0 1B01     		lsls	r3, r3, #4
 11800 12e2 1344     		add	r3, r3, r2
 11801 12e4 03F5D873 		add	r3, r3, #432
 11802 12e8 0122     		movs	r2, #1
 11803 12ea 1A70     		strb	r2, [r3]
1574:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11804              		.loc 1 1574 0
 11805 12ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11806 12ee 6649     		ldr	r1, .L491+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 267


 11807 12f0 1346     		mov	r3, r2
 11808 12f2 DB00     		lsls	r3, r3, #3
 11809 12f4 9B1A     		subs	r3, r3, r2
 11810 12f6 1B01     		lsls	r3, r3, #4
 11811 12f8 0B44     		add	r3, r3, r1
 11812 12fa 03F58873 		add	r3, r3, #272
 11813 12fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11814 1300 1946     		mov	r1, r3
 11815 1302 614A     		ldr	r2, .L491+4
 11816 1304 0B46     		mov	r3, r1
 11817 1306 5B00     		lsls	r3, r3, #1
 11818 1308 0B44     		add	r3, r3, r1
 11819 130a 1B01     		lsls	r3, r3, #4
 11820 130c 1344     		add	r3, r3, r2
 11821 130e 03F2B513 		addw	r3, r3, #437
 11822 1312 2322     		movs	r2, #35
 11823 1314 1A70     		strb	r2, [r3]
1575:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11824              		.loc 1 1575 0
 11825 1316 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11826 1318 5B49     		ldr	r1, .L491+4
 11827 131a 1346     		mov	r3, r2
 11828 131c DB00     		lsls	r3, r3, #3
 11829 131e 9B1A     		subs	r3, r3, r2
 11830 1320 1B01     		lsls	r3, r3, #4
 11831 1322 0B44     		add	r3, r3, r1
 11832 1324 03F58873 		add	r3, r3, #272
 11833 1328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11834 132a 1946     		mov	r1, r3
 11835 132c 564A     		ldr	r2, .L491+4
 11836 132e 0B46     		mov	r3, r1
 11837 1330 5B00     		lsls	r3, r3, #1
 11838 1332 0B44     		add	r3, r3, r1
 11839 1334 1B01     		lsls	r3, r3, #4
 11840 1336 1344     		add	r3, r3, r2
 11841 1338 03F5DB73 		add	r3, r3, #438
 11842 133c 0322     		movs	r2, #3
 11843 133e 1A70     		strb	r2, [r3]
1576:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11844              		.loc 1 1576 0
 11845 1340 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11846 1342 5149     		ldr	r1, .L491+4
 11847 1344 1346     		mov	r3, r2
 11848 1346 DB00     		lsls	r3, r3, #3
 11849 1348 9B1A     		subs	r3, r3, r2
 11850 134a 1B01     		lsls	r3, r3, #4
 11851 134c 0B44     		add	r3, r3, r1
 11852 134e 03F58873 		add	r3, r3, #272
 11853 1352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11854 1354 1946     		mov	r1, r3
 11855 1356 4C4A     		ldr	r2, .L491+4
 11856 1358 0B46     		mov	r3, r1
 11857 135a 5B00     		lsls	r3, r3, #1
 11858 135c 0B44     		add	r3, r3, r1
 11859 135e 1B01     		lsls	r3, r3, #4
 11860 1360 1344     		add	r3, r3, r2
 11861 1362 03F2B713 		addw	r3, r3, #439
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 268


 11862 1366 FF22     		movs	r2, #255
 11863 1368 1A70     		strb	r2, [r3]
1577:..\src/command_processing.c ****                 
1578:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1579:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11864              		.loc 1 1579 0
 11865 136a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11866 136c 464B     		ldr	r3, .L491+4
 11867 136e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11868 1372 4549     		ldr	r1, .L491+4
 11869 1374 1346     		mov	r3, r2
 11870 1376 DB00     		lsls	r3, r3, #3
 11871 1378 9B1A     		subs	r3, r3, r2
 11872 137a 1B01     		lsls	r3, r3, #4
 11873 137c 0B44     		add	r3, r3, r1
 11874 137e 03F58873 		add	r3, r3, #272
 11875 1382 0246     		mov	r2, r0
 11876 1384 1A70     		strb	r2, [r3]
1580:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11877              		.loc 1 1580 0
 11878 1386 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11879 1388 3F49     		ldr	r1, .L491+4
 11880 138a 1346     		mov	r3, r2
 11881 138c DB00     		lsls	r3, r3, #3
 11882 138e 9B1A     		subs	r3, r3, r2
 11883 1390 1B01     		lsls	r3, r3, #4
 11884 1392 0B44     		add	r3, r3, r1
 11885 1394 03F21113 		addw	r3, r3, #273
 11886 1398 0122     		movs	r2, #1
 11887 139a 1A70     		strb	r2, [r3]
1581:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11888              		.loc 1 1581 0
 11889 139c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11890 139e 3A49     		ldr	r1, .L491+4
 11891 13a0 1346     		mov	r3, r2
 11892 13a2 DB00     		lsls	r3, r3, #3
 11893 13a4 9B1A     		subs	r3, r3, r2
 11894 13a6 1B01     		lsls	r3, r3, #4
 11895 13a8 0B44     		add	r3, r3, r1
 11896 13aa 03F58973 		add	r3, r3, #274
 11897 13ae 0122     		movs	r2, #1
 11898 13b0 1A70     		strb	r2, [r3]
1582:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11899              		.loc 1 1582 0
 11900 13b2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11901 13b4 3449     		ldr	r1, .L491+4
 11902 13b6 1346     		mov	r3, r2
 11903 13b8 DB00     		lsls	r3, r3, #3
 11904 13ba 9B1A     		subs	r3, r3, r2
 11905 13bc 1B01     		lsls	r3, r3, #4
 11906 13be 0B44     		add	r3, r3, r1
 11907 13c0 E433     		adds	r3, r3, #228
 11908 13c2 0022     		movs	r2, #0
 11909 13c4 1A60     		str	r2, [r3]
1583:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11910              		.loc 1 1583 0
 11911 13c6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 269


 11912 13c8 2F4B     		ldr	r3, .L491+4
 11913 13ca 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11914 13ce 1846     		mov	r0, r3
 11915 13d0 2D49     		ldr	r1, .L491+4
 11916 13d2 0346     		mov	r3, r0
 11917 13d4 5B00     		lsls	r3, r3, #1
 11918 13d6 0344     		add	r3, r3, r0
 11919 13d8 1B01     		lsls	r3, r3, #4
 11920 13da 0B44     		add	r3, r3, r1
 11921 13dc 03F29513 		addw	r3, r3, #405
 11922 13e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11923 13e2 1946     		mov	r1, r3
 11924 13e4 4FF47A53 		mov	r3, #16000
 11925 13e8 03FA01F1 		lsl	r1, r3, r1
 11926 13ec 2648     		ldr	r0, .L491+4
 11927 13ee 1346     		mov	r3, r2
 11928 13f0 DB00     		lsls	r3, r3, #3
 11929 13f2 9B1A     		subs	r3, r3, r2
 11930 13f4 1B01     		lsls	r3, r3, #4
 11931 13f6 0344     		add	r3, r3, r0
 11932 13f8 E833     		adds	r3, r3, #232
 11933 13fa 1960     		str	r1, [r3]
 11934              	.L471:
1584:..\src/command_processing.c ****             }      
1585:..\src/command_processing.c ****             
1586:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11935              		.loc 1 1586 0
 11936 13fc 224B     		ldr	r3, .L491+4
 11937 13fe 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11938 1402 042B     		cmp	r3, #4
 11939 1404 38D1     		bne	.L478
1587:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11940              		.loc 1 1587 0
 11941 1406 204B     		ldr	r3, .L491+4
 11942 1408 0122     		movs	r2, #1
 11943 140a 83F8A920 		strb	r2, [r3, #169]
1588:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11944              		.loc 1 1588 0
 11945 140e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11946 1410 1D49     		ldr	r1, .L491+4
 11947 1412 1346     		mov	r3, r2
 11948 1414 DB00     		lsls	r3, r3, #3
 11949 1416 9B1A     		subs	r3, r3, r2
 11950 1418 1B01     		lsls	r3, r3, #4
 11951 141a 0B44     		add	r3, r3, r1
 11952 141c 03F58873 		add	r3, r3, #272
 11953 1420 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11954 1422 1946     		mov	r1, r3
 11955 1424 184A     		ldr	r2, .L491+4
 11956 1426 0B46     		mov	r3, r1
 11957 1428 5B00     		lsls	r3, r3, #1
 11958 142a 0B44     		add	r3, r3, r1
 11959 142c 1B01     		lsls	r3, r3, #4
 11960 142e 1344     		add	r3, r3, r2
 11961 1430 03F5D873 		add	r3, r3, #432
 11962 1434 0122     		movs	r2, #1
 11963 1436 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 270


1589:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11964              		.loc 1 1589 0
 11965 1438 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11966 143a 1349     		ldr	r1, .L491+4
 11967 143c 1346     		mov	r3, r2
 11968 143e DB00     		lsls	r3, r3, #3
 11969 1440 9B1A     		subs	r3, r3, r2
 11970 1442 1B01     		lsls	r3, r3, #4
 11971 1444 0B44     		add	r3, r3, r1
 11972 1446 03F58873 		add	r3, r3, #272
 11973 144a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11974 144c 1946     		mov	r1, r3
 11975 144e 0E4A     		ldr	r2, .L491+4
 11976 1450 0B46     		mov	r3, r1
 11977 1452 5B00     		lsls	r3, r3, #1
 11978 1454 0B44     		add	r3, r3, r1
 11979 1456 1B01     		lsls	r3, r3, #4
 11980 1458 1344     		add	r3, r3, r2
 11981 145a 03F5D873 		add	r3, r3, #432
 11982 145e 0122     		movs	r2, #1
 11983 1460 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****             }      
1591:..\src/command_processing.c ****             
1592:..\src/command_processing.c ****             break;
 11984              		.loc 1 1592 0
 11985 1462 09E0     		b	.L478
 11986              	.L473:
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****         default:
1595:..\src/command_processing.c ****             break;
 11987              		.loc 1 1595 0
 11988 1464 00BF     		nop
 11989 1466 08E0     		b	.L415
 11990              	.L474:
1394:..\src/command_processing.c ****             
 11991              		.loc 1 1394 0
 11992 1468 00BF     		nop
 11993 146a 06E0     		b	.L415
 11994              	.L475:
1422:..\src/command_processing.c **** 
 11995              		.loc 1 1422 0
 11996 146c 00BF     		nop
 11997 146e 04E0     		b	.L415
 11998              	.L476:
1440:..\src/command_processing.c ****             
 11999              		.loc 1 1440 0
 12000 1470 00BF     		nop
 12001 1472 02E0     		b	.L415
 12002              	.L477:
1450:..\src/command_processing.c ****            
 12003              		.loc 1 1450 0
 12004 1474 00BF     		nop
 12005 1476 00E0     		b	.L415
 12006              	.L478:
1592:..\src/command_processing.c ****             
 12007              		.loc 1 1592 0
 12008 1478 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 271


 12009              	.L415:
1596:..\src/command_processing.c ****     }
1597:..\src/command_processing.c **** }
 12010              		.loc 1 1597 0 discriminator 1
 12011 147a 00BF     		nop
 12012 147c 1C37     		adds	r7, r7, #28
 12013              		.cfi_def_cfa_offset 20
 12014 147e BD46     		mov	sp, r7
 12015              		.cfi_def_cfa_register 13
 12016              		@ sp needed
 12017 1480 F0BD     		pop	{r4, r5, r6, r7, pc}
 12018              	.L492:
 12019 1482 00BF     		.align	2
 12020              	.L491:
 12021 1484 00000000 		.word	g_rx
 12022 1488 00000000 		.word	g_mem
 12023              		.cfi_endproc
 12024              	.LFE69:
 12025              		.size	set_custom_param, .-set_custom_param
 12026              		.section	.rodata
 12027 1076 0000     		.align	2
 12028              	.LC143:
 12029 1078 506F7274 		.ascii	"Port %u ID:\000"
 12029      20257520 
 12029      49443A00 
 12030              		.align	2
 12031              	.LC144:
 12032 1084 2575202D 		.ascii	"%u - Device ID:\000"
 12032      20446576 
 12032      69636520 
 12032      49443A00 
 12033              		.align	2
 12034              	.LC145:
 12035 1094 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12035      20494D55 
 12035      20256420 
 12035      636F6E66 
 12035      69677572 
 12036 10af 00       		.align	2
 12037              	.LC146:
 12038 10b0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12038      20535049 
 12038      20726561 
 12038      64206465 
 12038      6C61793A 
 12039 10c5 000000   		.align	2
 12040              	.LC147:
 12041 10c8 204E6F6E 		.ascii	" None\000"
 12041      6500
 12042 10ce 0000     		.align	2
 12043              	.LC148:
 12044 10d0 204C6F77 		.ascii	" Low\000"
 12044      00
 12045 10d5 000000   		.align	2
 12046              	.LC149:
 12047 10d8 20486967 		.ascii	" High\000"
 12047      6800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 272


 12048 10de 0000     		.align	2
 12049              	.LC141:
 12050 10e0 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12050      6572206F 
 12050      6620636F 
 12050      6E6E6563 
 12050      74656420 
 12051 10fa 0000     		.align	2
 12052              	.LC142:
 12053 10fc 4D616720 		.ascii	"Mag cal parameters:\000"
 12053      63616C20 
 12053      70617261 
 12053      6D657465 
 12053      72733A00 
 12054              		.section	.text.get_IMU_param_list,"ax",%progbits
 12055              		.align	2
 12056              		.global	get_IMU_param_list
 12057              		.thumb
 12058              		.thumb_func
 12059              		.type	get_IMU_param_list, %function
 12060              	get_IMU_param_list:
 12061              	.LFB70:
1598:..\src/command_processing.c **** 
1599:..\src/command_processing.c **** //==============================================================================
1600:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1601:..\src/command_processing.c **** //==============================================================================
1602:..\src/command_processing.c **** 
1603:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1604:..\src/command_processing.c **** {
 12062              		.loc 1 1604 0
 12063              		.cfi_startproc
 12064              		@ args = 0, pretend = 0, frame = 1704
 12065              		@ frame_needed = 1, uses_anonymous_args = 0
 12066 0000 B0B5     		push	{r4, r5, r7, lr}
 12067              		.cfi_def_cfa_offset 16
 12068              		.cfi_offset 4, -16
 12069              		.cfi_offset 5, -12
 12070              		.cfi_offset 7, -8
 12071              		.cfi_offset 14, -4
 12072 0002 ADF5D56D 		sub	sp, sp, #1704
 12073              		.cfi_def_cfa_offset 1720
 12074 0006 00AF     		add	r7, sp, #0
 12075              		.cfi_def_cfa_register 7
 12076 0008 0246     		mov	r2, r0
 12077 000a BB1D     		adds	r3, r7, #6
 12078 000c 1A80     		strh	r2, [r3]	@ movhi
1605:..\src/command_processing.c ****     //Package to be sent variables
1606:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12079              		.loc 1 1606 0
 12080 000e 07F58A73 		add	r3, r7, #276
 12081 0012 0022     		movs	r2, #0
 12082 0014 1A60     		str	r2, [r3]
 12083 0016 0433     		adds	r3, r3, #4
 12084 0018 40F27552 		movw	r2, #1397
 12085 001c 0021     		movs	r1, #0
 12086 001e 1846     		mov	r0, r3
 12087 0020 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 273


1607:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1608:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1609:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1610:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1611:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1612:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1613:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12088              		.loc 1 1613 0
 12089 0024 0723     		movs	r3, #7
 12090 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1614:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12091              		.loc 1 1614 0
 12092 002a 0023     		movs	r3, #0
 12093 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1615:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12094              		.loc 1 1615 0
 12095 0030 0223     		movs	r3, #2
 12096 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1616:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12097              		.loc 1 1616 0
 12098 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12099 003a 5A1C     		adds	r2, r3, #1
1617:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12100              		.loc 1 1617 0
 12101 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12102 0040 1344     		add	r3, r3, r2
1618:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12103              		.loc 1 1618 0
 12104 0042 0133     		adds	r3, r3, #1
1616:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12105              		.loc 1 1616 0
 12106 0044 9AB2     		uxth	r2, r3
 12107 0046 D24B     		ldr	r3, .L539
 12108 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12109 004a 9BB2     		uxth	r3, r3
 12110 004c 1344     		add	r3, r3, r2
 12111 004e 9BB2     		uxth	r3, r3
 12112 0050 1A46     		mov	r2, r3	@ movhi
 12113 0052 9200     		lsls	r2, r2, #2
 12114 0054 1344     		add	r3, r3, r2
 12115 0056 1A46     		mov	r2, r3	@ movhi
 12116 0058 9100     		lsls	r1, r2, #2
 12117 005a 1A46     		mov	r2, r3	@ movhi
 12118 005c 0B46     		mov	r3, r1	@ movhi
 12119 005e 1344     		add	r3, r3, r2
 12120 0060 5B00     		lsls	r3, r3, #1
 12121 0062 9BB2     		uxth	r3, r3
 12122 0064 FB33     		adds	r3, r3, #251
 12123 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1619:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1620:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1621:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1622:..\src/command_processing.c **** 
1623:..\src/command_processing.c ****     //Auxiliary variables
1624:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1625:..\src/command_processing.c ****     uint16 start_byte = 0;
 12124              		.loc 1 1625 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 274


 12125 006a 0023     		movs	r3, #0
 12126 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1626:..\src/command_processing.c **** 
1627:..\src/command_processing.c ****     //Parameters menu string definitions
1628:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12127              		.loc 1 1628 0
 12128 0070 07F1F803 		add	r3, r7, #248
 12129 0074 C74A     		ldr	r2, .L539+4
 12130 0076 1C46     		mov	r4, r3
 12131 0078 1546     		mov	r5, r2
 12132 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12133 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12134 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12135 0082 03C4     		stmia	r4!, {r0, r1}
 12136 0084 2280     		strh	r2, [r4]	@ movhi
1629:..\src/command_processing.c ****     char ids_str[11]            = "";
 12137              		.loc 1 1629 0
 12138 0086 07F1EC03 		add	r3, r7, #236
 12139 008a 0022     		movs	r2, #0
 12140 008c 1A60     		str	r2, [r3]
 12141 008e 0433     		adds	r3, r3, #4
 12142 0090 0022     		movs	r2, #0
 12143 0092 1A60     		str	r2, [r3]
 12144 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1630:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12145              		.loc 1 1630 0
 12146 0098 07F1D803 		add	r3, r7, #216
 12147 009c BE4A     		ldr	r2, .L539+8
 12148 009e 1C46     		mov	r4, r3
 12149 00a0 1546     		mov	r5, r2
 12150 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12151 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12152 00a6 2B68     		ldr	r3, [r5]
 12153 00a8 2360     		str	r3, [r4]
1631:..\src/command_processing.c ****     char id_str[16]             = "";
 12154              		.loc 1 1631 0
 12155 00aa 07F1C803 		add	r3, r7, #200
 12156 00ae 0022     		movs	r2, #0
 12157 00b0 1A60     		str	r2, [r3]
 12158 00b2 0433     		adds	r3, r3, #4
 12159 00b4 0022     		movs	r2, #0
 12160 00b6 1A60     		str	r2, [r3]
 12161 00b8 5A60     		str	r2, [r3, #4]
 12162 00ba 9A60     		str	r2, [r3, #8]
1632:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12163              		.loc 1 1632 0
 12164 00bc 07F19C03 		add	r3, r7, #156
 12165 00c0 0022     		movs	r2, #0
 12166 00c2 1A60     		str	r2, [r3]
 12167 00c4 0433     		adds	r3, r3, #4
 12168 00c6 2622     		movs	r2, #38
 12169 00c8 0021     		movs	r1, #0
 12170 00ca 1846     		mov	r0, r3
 12171 00cc FFF7FEFF 		bl	memset
1633:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12172              		.loc 1 1633 0
 12173 00d0 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 275


 12174 00d4 0022     		movs	r2, #0
 12175 00d6 1A60     		str	r2, [r3]
 12176 00d8 0433     		adds	r3, r3, #4
 12177 00da 0022     		movs	r2, #0
 12178 00dc 1A60     		str	r2, [r3]
 12179 00de 5A60     		str	r2, [r3, #4]
 12180 00e0 9A60     		str	r2, [r3, #8]
 12181 00e2 DA60     		str	r2, [r3, #12]
 12182 00e4 1A61     		str	r2, [r3, #16]
 12183 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1634:..\src/command_processing.c ****     
1635:..\src/command_processing.c ****     //Strings lenghts
1636:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12184              		.loc 1 1636 0
 12185 00e8 07F1C803 		add	r3, r7, #200
 12186 00ec 1846     		mov	r0, r3
 12187 00ee FFF7FEFF 		bl	strlen
 12188 00f2 0346     		mov	r3, r0
 12189 00f4 87F89336 		strb	r3, [r7, #1683]
1637:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12190              		.loc 1 1637 0
 12191 00f8 07F1F803 		add	r3, r7, #248
 12192 00fc 1846     		mov	r0, r3
 12193 00fe FFF7FEFF 		bl	strlen
 12194 0102 0346     		mov	r3, r0
 12195 0104 87F89236 		strb	r3, [r7, #1682]
1638:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12196              		.loc 1 1638 0
 12197 0108 07F1EC03 		add	r3, r7, #236
 12198 010c 1846     		mov	r0, r3
 12199 010e FFF7FEFF 		bl	strlen
 12200 0112 0346     		mov	r3, r0
 12201 0114 87F89136 		strb	r3, [r7, #1681]
1639:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12202              		.loc 1 1639 0
 12203 0118 07F1D803 		add	r3, r7, #216
 12204 011c 1846     		mov	r0, r3
 12205 011e FFF7FEFF 		bl	strlen
 12206 0122 0346     		mov	r3, r0
 12207 0124 87F89036 		strb	r3, [r7, #1680]
1640:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12208              		.loc 1 1640 0
 12209 0128 07F19C03 		add	r3, r7, #156
 12210 012c 1846     		mov	r0, r3
 12211 012e FFF7FEFF 		bl	strlen
 12212 0132 0346     		mov	r3, r0
 12213 0134 87F88F36 		strb	r3, [r7, #1679]
1641:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12214              		.loc 1 1641 0
 12215 0138 07F18003 		add	r3, r7, #128
 12216 013c 1846     		mov	r0, r3
 12217 013e FFF7FEFF 		bl	strlen
 12218 0142 0346     		mov	r3, r0
 12219 0144 87F89D36 		strb	r3, [r7, #1693]
1642:..\src/command_processing.c ****     
1643:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12220              		.loc 1 1643 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 276


 12221 0148 07F10803 		add	r3, r7, #8
 12222 014c 0022     		movs	r2, #0
 12223 014e 1A60     		str	r2, [r3]
 12224 0150 0433     		adds	r3, r3, #4
 12225 0152 7222     		movs	r2, #114
 12226 0154 0021     		movs	r1, #0
 12227 0156 1846     		mov	r0, r3
 12228 0158 FFF7FEFF 		bl	memset
1644:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1645:..\src/command_processing.c ****  
1646:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12229              		.loc 1 1646 0
 12230 015c 07F10800 		add	r0, r7, #8
 12231 0160 6423     		movs	r3, #100
 12232 0162 0A22     		movs	r2, #10
 12233 0164 8D49     		ldr	r1, .L539+12
 12234 0166 FFF7FEFF 		bl	sprintf
1647:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12235              		.loc 1 1647 0
 12236 016a 07F10803 		add	r3, r7, #8
 12237 016e 1846     		mov	r0, r3
 12238 0170 FFF7FEFF 		bl	strlen
 12239 0174 0346     		mov	r3, r0
 12240 0176 87F88E36 		strb	r3, [r7, #1678]
1648:..\src/command_processing.c **** 
1649:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1650:..\src/command_processing.c ****     // update packet_length
1651:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12241              		.loc 1 1651 0
 12242 017a 854B     		ldr	r3, .L539
 12243 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12244 017e 5B08     		lsrs	r3, r3, #1
 12245 0180 DBB2     		uxtb	r3, r3
 12246 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1652:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12247              		.loc 1 1652 0
 12248 0186 824B     		ldr	r3, .L539
 12249 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12250 018a 1A46     		mov	r2, r3
 12251 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12252 0190 5B00     		lsls	r3, r3, #1
 12253 0192 D31A     		subs	r3, r2, r3
 12254 0194 002B     		cmp	r3, #0
 12255 0196 04DD     		ble	.L494
 12256              		.loc 1 1652 0 is_stmt 0 discriminator 1
 12257 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12258 019c 0133     		adds	r3, r3, #1
 12259 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12260              	.L494:
1653:..\src/command_processing.c ****     
1654:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12261              		.loc 1 1654 0 is_stmt 1
 12262 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12263 01a6 5A1C     		adds	r2, r3, #1
1655:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12264              		.loc 1 1655 0
 12265 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 277


 12266 01ac 1344     		add	r3, r3, r2
1656:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12267              		.loc 1 1656 0
 12268 01ae 0133     		adds	r3, r3, #1
1654:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12269              		.loc 1 1654 0
 12270 01b0 9AB2     		uxth	r2, r3
 12271 01b2 774B     		ldr	r3, .L539
 12272 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12273 01b6 9BB2     		uxth	r3, r3
 12274 01b8 1344     		add	r3, r3, r2
 12275 01ba 9BB2     		uxth	r3, r3
 12276 01bc 1A46     		mov	r2, r3	@ movhi
 12277 01be 9200     		lsls	r2, r2, #2
 12278 01c0 1344     		add	r3, r3, r2
 12279 01c2 1A46     		mov	r2, r3	@ movhi
 12280 01c4 9100     		lsls	r1, r2, #2
 12281 01c6 1A46     		mov	r2, r3	@ movhi
 12282 01c8 0B46     		mov	r3, r1	@ movhi
 12283 01ca 1344     		add	r3, r3, r2
 12284 01cc 5B00     		lsls	r3, r3, #1
 12285 01ce 9BB2     		uxth	r3, r3
 12286 01d0 C933     		adds	r3, r3, #201
 12287 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1657:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1658:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1659:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12288              		.loc 1 1661 0
 12289 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12290 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12291 01de 1344     		add	r3, r3, r2
 12292 01e0 9BB2     		uxth	r3, r3
 12293 01e2 0333     		adds	r3, r3, #3
 12294 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1662:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12295              		.loc 1 1662 0
 12296 01e8 07F58A73 		add	r3, r7, #276
 12297 01ec A222     		movs	r2, #162
 12298 01ee 1A70     		strb	r2, [r3]
1663:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12299              		.loc 1 1663 0
 12300 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12301 01f4 DAB2     		uxtb	r2, r3
 12302 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12303 01fa DBB2     		uxtb	r3, r3
 12304 01fc 1344     		add	r3, r3, r2
 12305 01fe DAB2     		uxtb	r2, r3
 12306 0200 634B     		ldr	r3, .L539
 12307 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12308 0204 1344     		add	r3, r3, r2
 12309 0206 DBB2     		uxtb	r3, r3
 12310 0208 0333     		adds	r3, r3, #3
 12311 020a DAB2     		uxtb	r2, r3
 12312 020c 07F58A73 		add	r3, r7, #276
 12313 0210 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 278


1664:..\src/command_processing.c **** 
1665:..\src/command_processing.c ****     switch(index) {
 12314              		.loc 1 1665 0
 12315 0212 BB1D     		adds	r3, r7, #6
 12316 0214 1B88     		ldrh	r3, [r3]
 12317 0216 002B     		cmp	r3, #0
 12318 0218 40F0D084 		bne	.L537
1666:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1667:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1668:..\src/command_processing.c ****             start_byte = 0;
 12319              		.loc 1 1668 0
 12320 021c 0023     		movs	r3, #0
 12321 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1669:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 12322              		.loc 1 1669 0
 12323 0222 07F58A73 		add	r3, r7, #276
 12324 0226 0222     		movs	r2, #2
 12325 0228 9A70     		strb	r2, [r3, #2]
1670:..\src/command_processing.c ****             packet_data[3] = 1;
 12326              		.loc 1 1670 0
 12327 022a 07F58A73 		add	r3, r7, #276
 12328 022e 0122     		movs	r2, #1
 12329 0230 DA70     		strb	r2, [r3, #3]
1671:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12330              		.loc 1 1671 0
 12331 0232 574B     		ldr	r3, .L539
 12332 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12333 0236 07F58A73 		add	r3, r7, #276
 12334 023a 1A71     		strb	r2, [r3, #4]
1672:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12335              		.loc 1 1672 0
 12336 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12337 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12338 0244 15E0     		b	.L497
 12339              	.L498:
1673:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12340              		.loc 1 1673 0 discriminator 3
 12341 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12342 024a 5A1D     		adds	r2, r3, #5
 12343 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12344 0250 D31A     		subs	r3, r2, r3
 12345 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12346 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12347 025a 8A1A     		subs	r2, r1, r2
 12348 025c 07F1F801 		add	r1, r7, #248
 12349 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12350 0262 07F58A72 		add	r2, r7, #276
 12351 0266 D154     		strb	r1, [r2, r3]
1672:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12352              		.loc 1 1672 0 discriminator 3
 12353 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12354 026c 013B     		subs	r3, r3, #1
 12355 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12356              	.L497:
1672:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12357              		.loc 1 1672 0 is_stmt 0 discriminator 1
 12358 0272 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 279


 12359 0276 002B     		cmp	r3, #0
 12360 0278 E5D1     		bne	.L498
1674:..\src/command_processing.c ****                 
1675:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1676:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12361              		.loc 1 1676 0 is_stmt 1
 12362 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12363 027e 3233     		adds	r3, r3, #50
 12364 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1677:..\src/command_processing.c ****             i = 0;
 12365              		.loc 1 1677 0
 12366 0284 0023     		movs	r3, #0
 12367 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1678:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 12368              		.loc 1 1678 0
 12369 028a 0023     		movs	r3, #0
 12370 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12371 0290 B2E0     		b	.L499
 12372              	.L506:
1679:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12373              		.loc 1 1679 0
 12374 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12375 0296 07F1EC03 		add	r3, r7, #236
 12376 029a 4149     		ldr	r1, .L539+16
 12377 029c 1846     		mov	r0, r3
 12378 029e FFF7FEFF 		bl	sprintf
1680:..\src/command_processing.c ****                 h = 4;
 12379              		.loc 1 1680 0
 12380 02a2 0423     		movs	r3, #4
 12381 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1681:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12382              		.loc 1 1681 0
 12383 02a8 07F1EC03 		add	r3, r7, #236
 12384 02ac 1846     		mov	r0, r3
 12385 02ae FFF7FEFF 		bl	strlen
 12386 02b2 0346     		mov	r3, r0
 12387 02b4 87F89136 		strb	r3, [r7, #1681]
1682:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12388              		.loc 1 1682 0
 12389 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12390 02bc 9A1C     		adds	r2, r3, #2
 12391 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12392 02c2 3221     		movs	r1, #50
 12393 02c4 01FB03F3 		mul	r3, r1, r3
 12394 02c8 1344     		add	r3, r3, r2
 12395 02ca 07F58A72 		add	r2, r7, #276
 12396 02ce 0221     		movs	r1, #2
 12397 02d0 D154     		strb	r1, [r2, r3]
1683:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12398              		.loc 1 1683 0
 12399 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12400 02d6 DA1C     		adds	r2, r3, #3
 12401 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12402 02dc 3221     		movs	r1, #50
 12403 02de 01FB03F3 		mul	r3, r1, r3
 12404 02e2 1344     		add	r3, r3, r2
 12405 02e4 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 280


 12406 02e8 0321     		movs	r1, #3
 12407 02ea D154     		strb	r1, [r2, r3]
1684:..\src/command_processing.c ****                 
1685:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12408              		.loc 1 1685 0
 12409 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12410 02f0 1A46     		mov	r2, r3	@ movhi
 12411 02f2 5200     		lsls	r2, r2, #1
 12412 02f4 1344     		add	r3, r3, r2
 12413 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12414 02fa 39E0     		b	.L500
 12415              	.L503:
1686:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12416              		.loc 1 1686 0
 12417 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12418 0300 284A     		ldr	r2, .L539+20
 12419 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12420 0304 9BB2     		uxth	r3, r3
 12421 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12422 030a 9A42     		cmp	r2, r3
 12423 030c 17D1     		bne	.L501
1687:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12424              		.loc 1 1687 0
 12425 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12426 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12427 0316 1A44     		add	r2, r2, r3
 12428 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12429 031c 3221     		movs	r1, #50
 12430 031e 01FB03F3 		mul	r3, r1, r3
 12431 0322 1344     		add	r3, r3, r2
 12432 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12433 0328 1E49     		ldr	r1, .L539+20
 12434 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12435 032c 07F58A72 		add	r2, r7, #276
 12436 0330 D154     		strb	r1, [r2, r3]
1688:..\src/command_processing.c ****                         i++;
 12437              		.loc 1 1688 0
 12438 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12439 0336 0133     		adds	r3, r3, #1
 12440 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12441 033c 0EE0     		b	.L502
 12442              	.L501:
1689:..\src/command_processing.c ****                     } 
1690:..\src/command_processing.c ****                     else {
1691:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12443              		.loc 1 1691 0
 12444 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12445 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12446 0346 1A44     		add	r2, r2, r3
 12447 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12448 034c 3221     		movs	r1, #50
 12449 034e 01FB03F3 		mul	r3, r1, r3
 12450 0352 1344     		add	r3, r3, r2
 12451 0354 07F58A72 		add	r2, r7, #276
 12452 0358 FF21     		movs	r1, #255
 12453 035a D154     		strb	r1, [r2, r3]
 12454              	.L502:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 281


1692:..\src/command_processing.c ****                     }
1693:..\src/command_processing.c ****                     h++;
 12455              		.loc 1 1693 0 discriminator 2
 12456 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12457 0360 0133     		adds	r3, r3, #1
 12458 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1685:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12459              		.loc 1 1685 0 discriminator 2
 12460 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12461 036a 0133     		adds	r3, r3, #1
 12462 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12463              	.L500:
1685:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12464              		.loc 1 1685 0 is_stmt 0 discriminator 1
 12465 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12466 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12467 0378 1346     		mov	r3, r2
 12468 037a 5B00     		lsls	r3, r3, #1
 12469 037c 1344     		add	r3, r3, r2
 12470 037e 0233     		adds	r3, r3, #2
 12471 0380 9942     		cmp	r1, r3
 12472 0382 BBDD     		ble	.L503
1694:..\src/command_processing.c ****                 }
1695:..\src/command_processing.c **** 
1696:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1697:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12473              		.loc 1 1697 0 is_stmt 1
 12474 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12475 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12476 038c 2BE0     		b	.L504
 12477              	.L540:
 12478 038e 00BF     		.align	2
 12479              	.L539:
 12480 0390 00000000 		.word	N_IMU_Connected
 12481 0394 E0100000 		.word	.LC141
 12482 0398 FC100000 		.word	.LC142
 12483 039c 74020000 		.word	.LC128
 12484 03a0 78100000 		.word	.LC143
 12485 03a4 00000000 		.word	IMU_connected
 12486              	.L505:
1698:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12487              		.loc 1 1698 0 discriminator 3
 12488 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12489 03ac DA1D     		adds	r2, r3, #7
 12490 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12491 03b2 3221     		movs	r1, #50
 12492 03b4 01FB03F3 		mul	r3, r1, r3
 12493 03b8 1A44     		add	r2, r2, r3
 12494 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12495 03be 1A44     		add	r2, r2, r3
 12496 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12497 03c4 D31A     		subs	r3, r2, r3
 12498 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12499 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12500 03ce 8A1A     		subs	r2, r1, r2
 12501 03d0 07F1EC01 		add	r1, r7, #236
 12502 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 282


 12503 03d6 07F58A72 		add	r2, r7, #276
 12504 03da D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12505              		.loc 1 1697 0 discriminator 3
 12506 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12507 03e0 013B     		subs	r3, r3, #1
 12508 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12509              	.L504:
1697:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12510              		.loc 1 1697 0 is_stmt 0 discriminator 1
 12511 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12512 03ea 002B     		cmp	r3, #0
 12513 03ec DCD1     		bne	.L505
1678:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12514              		.loc 1 1678 0 is_stmt 1 discriminator 2
 12515 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12516 03f2 0133     		adds	r3, r3, #1
 12517 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12518              	.L499:
1678:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12519              		.loc 1 1678 0 is_stmt 0 discriminator 1
 12520 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12521 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12522 0400 9A42     		cmp	r2, r3
 12523 0402 FFF446AF 		bcc	.L506
1699:..\src/command_processing.c ****             }
1700:..\src/command_processing.c ****             
1701:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1702:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12524              		.loc 1 1702 0 is_stmt 1
 12525 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12526 040a 1A46     		mov	r2, r3	@ movhi
 12527 040c 9200     		lsls	r2, r2, #2
 12528 040e 1344     		add	r3, r3, r2
 12529 0410 1A46     		mov	r2, r3	@ movhi
 12530 0412 9100     		lsls	r1, r2, #2
 12531 0414 1A46     		mov	r2, r3	@ movhi
 12532 0416 0B46     		mov	r3, r1	@ movhi
 12533 0418 1344     		add	r3, r3, r2
 12534 041a 5B00     		lsls	r3, r3, #1
 12535 041c 9AB2     		uxth	r2, r3
 12536 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12537 0422 1344     		add	r3, r3, r2
 12538 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1703:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12539              		.loc 1 1703 0
 12540 0428 0023     		movs	r3, #0
 12541 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12542 042e 1FE1     		b	.L507
 12543              	.L514:
1704:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12544              		.loc 1 1704 0
 12545 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12546 0434 9A1C     		adds	r2, r3, #2
 12547 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12548 043a 3221     		movs	r1, #50
 12549 043c 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 283


 12550 0440 1344     		add	r3, r3, r2
 12551 0442 07F58A72 		add	r2, r7, #276
 12552 0446 0221     		movs	r1, #2
 12553 0448 D154     		strb	r1, [r2, r3]
1705:..\src/command_processing.c ****                 
1706:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12554              		.loc 1 1706 0
 12555 044a B7F89436 		ldrh	r3, [r7, #1684]
 12556 044e DA1C     		adds	r2, r3, #3
 12557 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12558 0454 3221     		movs	r1, #50
 12559 0456 01FB03F3 		mul	r3, r1, r3
 12560 045a 1344     		add	r3, r3, r2
 12561 045c 07F58A72 		add	r2, r7, #276
 12562 0460 0321     		movs	r1, #3
 12563 0462 D154     		strb	r1, [r2, r3]
1707:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12564              		.loc 1 1707 0
 12565 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12566 0468 1A1D     		adds	r2, r3, #4
 12567 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12568 046e 3221     		movs	r1, #50
 12569 0470 01FB03F3 		mul	r3, r1, r3
 12570 0474 1A44     		add	r2, r2, r3
 12571 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12572 047a 5B00     		lsls	r3, r3, #1
 12573 047c B249     		ldr	r1, .L541
 12574 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12575 0480 1846     		mov	r0, r3
 12576 0482 B249     		ldr	r1, .L541+4
 12577 0484 0346     		mov	r3, r0
 12578 0486 5B00     		lsls	r3, r3, #1
 12579 0488 0344     		add	r3, r3, r0
 12580 048a 0B44     		add	r3, r3, r1
 12581 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12582 048e 07F58A73 		add	r3, r7, #276
 12583 0492 9954     		strb	r1, [r3, r2]
1708:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12584              		.loc 1 1708 0
 12585 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12586 0498 5A1D     		adds	r2, r3, #5
 12587 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12588 049e 3221     		movs	r1, #50
 12589 04a0 01FB03F3 		mul	r3, r1, r3
 12590 04a4 1A44     		add	r2, r2, r3
 12591 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12592 04aa 5B00     		lsls	r3, r3, #1
 12593 04ac A649     		ldr	r1, .L541
 12594 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12595 04b0 1846     		mov	r0, r3
 12596 04b2 A649     		ldr	r1, .L541+4
 12597 04b4 0346     		mov	r3, r0
 12598 04b6 5B00     		lsls	r3, r3, #1
 12599 04b8 0344     		add	r3, r3, r0
 12600 04ba 0B44     		add	r3, r3, r1
 12601 04bc 0133     		adds	r3, r3, #1
 12602 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 284


 12603 04c0 07F58A73 		add	r3, r7, #276
 12604 04c4 9954     		strb	r1, [r3, r2]
1709:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12605              		.loc 1 1709 0
 12606 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12607 04ca 9A1D     		adds	r2, r3, #6
 12608 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12609 04d0 3221     		movs	r1, #50
 12610 04d2 01FB03F3 		mul	r3, r1, r3
 12611 04d6 1A44     		add	r2, r2, r3
 12612 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12613 04dc 5B00     		lsls	r3, r3, #1
 12614 04de 9A49     		ldr	r1, .L541
 12615 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12616 04e2 1846     		mov	r0, r3
 12617 04e4 9949     		ldr	r1, .L541+4
 12618 04e6 0346     		mov	r3, r0
 12619 04e8 5B00     		lsls	r3, r3, #1
 12620 04ea 0344     		add	r3, r3, r0
 12621 04ec 0B44     		add	r3, r3, r1
 12622 04ee 0233     		adds	r3, r3, #2
 12623 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12624 04f2 07F58A73 		add	r3, r7, #276
 12625 04f6 9954     		strb	r1, [r3, r2]
1710:..\src/command_processing.c ****                 
1711:..\src/command_processing.c ****                 // check if there is a second value
1712:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12626              		.loc 1 1712 0
 12627 04f8 954B     		ldr	r3, .L541+8
 12628 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12629 04fc 1A46     		mov	r2, r3
 12630 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12631 0502 0133     		adds	r3, r3, #1
 12632 0504 5B00     		lsls	r3, r3, #1
 12633 0506 9A42     		cmp	r2, r3
 12634 0508 28DA     		bge	.L508
1713:..\src/command_processing.c ****                     // there is only one value
1714:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12635              		.loc 1 1714 0
 12636 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12637 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12638 0512 1EE0     		b	.L509
 12639              	.L510:
1715:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12640              		.loc 1 1715 0 discriminator 3
 12641 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12642 0518 DA1D     		adds	r2, r3, #7
 12643 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12644 051e 3221     		movs	r1, #50
 12645 0520 01FB03F3 		mul	r3, r1, r3
 12646 0524 1A44     		add	r2, r2, r3
 12647 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12648 052a 1A44     		add	r2, r2, r3
 12649 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12650 0530 D31A     		subs	r3, r2, r3
 12651 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12652 0536 B7F8A226 		ldrh	r2, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 285


 12653 053a 8A1A     		subs	r2, r1, r2
 12654 053c 07F1D801 		add	r1, r7, #216
 12655 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12656 0542 07F58A72 		add	r2, r7, #276
 12657 0546 D154     		strb	r1, [r2, r3]
1714:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12658              		.loc 1 1714 0 discriminator 3
 12659 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12660 054c 013B     		subs	r3, r3, #1
 12661 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12662              	.L509:
1714:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12663              		.loc 1 1714 0 is_stmt 0 discriminator 1
 12664 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12665 0556 002B     		cmp	r3, #0
 12666 0558 DCD1     		bne	.L510
 12667 055a 84E0     		b	.L511
 12668              	.L508:
1716:..\src/command_processing.c ****                 }
1717:..\src/command_processing.c ****                 else {
1718:..\src/command_processing.c ****                     // fill the second value
1719:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12669              		.loc 1 1719 0 is_stmt 1
 12670 055c B7F89436 		ldrh	r3, [r7, #1684]
 12671 0560 DA1C     		adds	r2, r3, #3
 12672 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12673 0566 3221     		movs	r1, #50
 12674 0568 01FB03F3 		mul	r3, r1, r3
 12675 056c 1344     		add	r3, r3, r2
 12676 056e 07F58A72 		add	r2, r7, #276
 12677 0572 0621     		movs	r1, #6
 12678 0574 D154     		strb	r1, [r2, r3]
1720:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12679              		.loc 1 1720 0
 12680 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12681 057a DA1D     		adds	r2, r3, #7
 12682 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12683 0580 3221     		movs	r1, #50
 12684 0582 01FB03F3 		mul	r3, r1, r3
 12685 0586 1A44     		add	r2, r2, r3
 12686 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12687 058c 5B00     		lsls	r3, r3, #1
 12688 058e 0133     		adds	r3, r3, #1
 12689 0590 6D49     		ldr	r1, .L541
 12690 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12691 0594 1846     		mov	r0, r3
 12692 0596 6D49     		ldr	r1, .L541+4
 12693 0598 0346     		mov	r3, r0
 12694 059a 5B00     		lsls	r3, r3, #1
 12695 059c 0344     		add	r3, r3, r0
 12696 059e 0B44     		add	r3, r3, r1
 12697 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12698 05a2 07F58A73 		add	r3, r7, #276
 12699 05a6 9954     		strb	r1, [r3, r2]
1721:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12700              		.loc 1 1721 0
 12701 05a8 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 286


 12702 05ac 03F10802 		add	r2, r3, #8
 12703 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12704 05b4 3221     		movs	r1, #50
 12705 05b6 01FB03F3 		mul	r3, r1, r3
 12706 05ba 1A44     		add	r2, r2, r3
 12707 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12708 05c0 5B00     		lsls	r3, r3, #1
 12709 05c2 0133     		adds	r3, r3, #1
 12710 05c4 6049     		ldr	r1, .L541
 12711 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12712 05c8 1846     		mov	r0, r3
 12713 05ca 6049     		ldr	r1, .L541+4
 12714 05cc 0346     		mov	r3, r0
 12715 05ce 5B00     		lsls	r3, r3, #1
 12716 05d0 0344     		add	r3, r3, r0
 12717 05d2 0B44     		add	r3, r3, r1
 12718 05d4 0133     		adds	r3, r3, #1
 12719 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12720 05d8 07F58A73 		add	r3, r7, #276
 12721 05dc 9954     		strb	r1, [r3, r2]
1722:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12722              		.loc 1 1722 0
 12723 05de B7F89436 		ldrh	r3, [r7, #1684]
 12724 05e2 03F10902 		add	r2, r3, #9
 12725 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12726 05ea 3221     		movs	r1, #50
 12727 05ec 01FB03F3 		mul	r3, r1, r3
 12728 05f0 1A44     		add	r2, r2, r3
 12729 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12730 05f6 5B00     		lsls	r3, r3, #1
 12731 05f8 0133     		adds	r3, r3, #1
 12732 05fa 5349     		ldr	r1, .L541
 12733 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12734 05fe 1846     		mov	r0, r3
 12735 0600 5249     		ldr	r1, .L541+4
 12736 0602 0346     		mov	r3, r0
 12737 0604 5B00     		lsls	r3, r3, #1
 12738 0606 0344     		add	r3, r3, r0
 12739 0608 0B44     		add	r3, r3, r1
 12740 060a 0233     		adds	r3, r3, #2
 12741 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12742 060e 07F58A73 		add	r3, r7, #276
 12743 0612 9954     		strb	r1, [r3, r2]
1723:..\src/command_processing.c ****                 
1724:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12744              		.loc 1 1724 0
 12745 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12746 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12747 061c 1FE0     		b	.L512
 12748              	.L513:
1725:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12749              		.loc 1 1725 0 discriminator 3
 12750 061e B7F89436 		ldrh	r3, [r7, #1684]
 12751 0622 03F10A02 		add	r2, r3, #10
 12752 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12753 062a 3221     		movs	r1, #50
 12754 062c 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 287


 12755 0630 1A44     		add	r2, r2, r3
 12756 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12757 0636 1A44     		add	r2, r2, r3
 12758 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12759 063c D31A     		subs	r3, r2, r3
 12760 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12761 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12762 0646 8A1A     		subs	r2, r1, r2
 12763 0648 07F1D801 		add	r1, r7, #216
 12764 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12765 064e 07F58A72 		add	r2, r7, #276
 12766 0652 D154     		strb	r1, [r2, r3]
1724:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12767              		.loc 1 1724 0 discriminator 3
 12768 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12769 0658 013B     		subs	r3, r3, #1
 12770 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12771              	.L512:
1724:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12772              		.loc 1 1724 0 is_stmt 0 discriminator 1
 12773 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12774 0662 002B     		cmp	r3, #0
 12775 0664 DBD1     		bne	.L513
 12776              	.L511:
1703:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12777              		.loc 1 1703 0 is_stmt 1 discriminator 2
 12778 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12779 066a 0133     		adds	r3, r3, #1
 12780 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12781              	.L507:
1703:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12782              		.loc 1 1703 0 is_stmt 0 discriminator 1
 12783 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12784 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12785 0678 9A42     		cmp	r2, r3
 12786 067a FFF4D9AE 		bcc	.L514
1726:..\src/command_processing.c ****                 }
1727:..\src/command_processing.c ****             }
1728:..\src/command_processing.c ****             
1729:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1730:..\src/command_processing.c ****             
1731:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12787              		.loc 1 1731 0 is_stmt 1
 12788 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12789 0682 1A46     		mov	r2, r3	@ movhi
 12790 0684 9200     		lsls	r2, r2, #2
 12791 0686 1344     		add	r3, r3, r2
 12792 0688 1A46     		mov	r2, r3	@ movhi
 12793 068a 9100     		lsls	r1, r2, #2
 12794 068c 1A46     		mov	r2, r3	@ movhi
 12795 068e 0B46     		mov	r3, r1	@ movhi
 12796 0690 1344     		add	r3, r3, r2
 12797 0692 5B00     		lsls	r3, r3, #1
 12798 0694 9AB2     		uxth	r2, r3
 12799 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12800 069a 1344     		add	r3, r3, r2
 12801 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 288


1732:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12802              		.loc 1 1732 0
 12803 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12804 06a4 5A1E     		subs	r2, r3, #1
 12805 06a6 07F1C803 		add	r3, r7, #200
 12806 06aa 2A49     		ldr	r1, .L541+12
 12807 06ac 1846     		mov	r0, r3
 12808 06ae FFF7FEFF 		bl	sprintf
1733:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12809              		.loc 1 1733 0
 12810 06b2 07F1C803 		add	r3, r7, #200
 12811 06b6 1846     		mov	r0, r3
 12812 06b8 FFF7FEFF 		bl	strlen
 12813 06bc 0346     		mov	r3, r0
 12814 06be 87F89336 		strb	r3, [r7, #1683]
1734:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12815              		.loc 1 1734 0
 12816 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12817 06c6 0233     		adds	r3, r3, #2
 12818 06c8 07F58A72 		add	r2, r7, #276
 12819 06cc 0221     		movs	r1, #2
 12820 06ce D154     		strb	r1, [r2, r3]
1735:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12821              		.loc 1 1735 0
 12822 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12823 06d4 0333     		adds	r3, r3, #3
 12824 06d6 07F58A72 		add	r2, r7, #276
 12825 06da 0121     		movs	r1, #1
 12826 06dc D154     		strb	r1, [r2, r3]
1736:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12827              		.loc 1 1736 0
 12828 06de B7F89436 		ldrh	r3, [r7, #1684]
 12829 06e2 0433     		adds	r3, r3, #4
 12830 06e4 1C4A     		ldr	r2, .L541+16
 12831 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12832 06ea 07F58A72 		add	r2, r7, #276
 12833 06ee D154     		strb	r1, [r2, r3]
1737:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12834              		.loc 1 1737 0
 12835 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12836 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12837 06f8 18E0     		b	.L515
 12838              	.L516:
1738:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12839              		.loc 1 1738 0 discriminator 3
 12840 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12841 06fe 5A1D     		adds	r2, r3, #5
 12842 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12843 0704 1A44     		add	r2, r2, r3
 12844 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12845 070a D31A     		subs	r3, r2, r3
 12846 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12847 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12848 0714 8A1A     		subs	r2, r1, r2
 12849 0716 07F1C801 		add	r1, r7, #200
 12850 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12851 071c 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 289


 12852 0720 D154     		strb	r1, [r2, r3]
1737:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12853              		.loc 1 1737 0 discriminator 3
 12854 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12855 0726 013B     		subs	r3, r3, #1
 12856 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12857              	.L515:
1737:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12858              		.loc 1 1737 0 is_stmt 0 discriminator 1
 12859 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12860 0730 002B     		cmp	r3, #0
 12861 0732 E2D1     		bne	.L516
1739:..\src/command_processing.c ****                 
1740:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1741:..\src/command_processing.c ****             
1742:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12862              		.loc 1 1742 0 is_stmt 1
 12863 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12864 0738 3233     		adds	r3, r3, #50
 12865 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1743:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12866              		.loc 1 1743 0
 12867 073e 0023     		movs	r3, #0
 12868 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12869 0744 38E1     		b	.L517
 12870              	.L542:
 12871 0746 00BF     		.align	2
 12872              	.L541:
 12873 0748 00000000 		.word	IMU_connected
 12874 074c 00000000 		.word	MagCal
 12875 0750 00000000 		.word	N_IMU_Connected
 12876 0754 84100000 		.word	.LC144
 12877 0758 00000000 		.word	c_mem
 12878              	.L520:
1744:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12879              		.loc 1 1744 0
 12880 075c B7F89826 		ldrh	r2, [r7, #1688]
 12881 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12882 0764 D118     		adds	r1, r2, r3
 12883 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12884 076a D54A     		ldr	r2, .L543
 12885 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12886 076e 07F19C00 		add	r0, r7, #156
 12887 0772 0A46     		mov	r2, r1
 12888 0774 D349     		ldr	r1, .L543+4
 12889 0776 FFF7FEFF 		bl	sprintf
1745:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12890              		.loc 1 1745 0
 12891 077a 07F19C03 		add	r3, r7, #156
 12892 077e 1846     		mov	r0, r3
 12893 0780 FFF7FEFF 		bl	strlen
 12894 0784 0346     		mov	r3, r0
 12895 0786 87F88F36 		strb	r3, [r7, #1679]
1746:..\src/command_processing.c ****             
1747:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12896              		.loc 1 1747 0
 12897 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 290


 12898 078e 1A46     		mov	r2, r3	@ movhi
 12899 0790 9200     		lsls	r2, r2, #2
 12900 0792 1344     		add	r3, r3, r2
 12901 0794 1A46     		mov	r2, r3	@ movhi
 12902 0796 9100     		lsls	r1, r2, #2
 12903 0798 1A46     		mov	r2, r3	@ movhi
 12904 079a 0B46     		mov	r3, r1	@ movhi
 12905 079c 1344     		add	r3, r3, r2
 12906 079e 5B00     		lsls	r3, r3, #1
 12907 07a0 9AB2     		uxth	r2, r3
 12908 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12909 07a6 1344     		add	r3, r3, r2
 12910 07a8 9BB2     		uxth	r3, r3
 12911 07aa 0233     		adds	r3, r3, #2
 12912 07ac 9BB2     		uxth	r3, r3
 12913 07ae 1A46     		mov	r2, r3
 12914 07b0 07F58A73 		add	r3, r7, #276
 12915 07b4 0221     		movs	r1, #2
 12916 07b6 9954     		strb	r1, [r3, r2]
1748:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12917              		.loc 1 1748 0
 12918 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12919 07bc 1A46     		mov	r2, r3	@ movhi
 12920 07be 9200     		lsls	r2, r2, #2
 12921 07c0 1344     		add	r3, r3, r2
 12922 07c2 1A46     		mov	r2, r3	@ movhi
 12923 07c4 9100     		lsls	r1, r2, #2
 12924 07c6 1A46     		mov	r2, r3	@ movhi
 12925 07c8 0B46     		mov	r3, r1	@ movhi
 12926 07ca 1344     		add	r3, r3, r2
 12927 07cc 5B00     		lsls	r3, r3, #1
 12928 07ce 9AB2     		uxth	r2, r3
 12929 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12930 07d4 1344     		add	r3, r3, r2
 12931 07d6 9BB2     		uxth	r3, r3
 12932 07d8 0333     		adds	r3, r3, #3
 12933 07da 9BB2     		uxth	r3, r3
 12934 07dc 1A46     		mov	r2, r3
 12935 07de 07F58A73 		add	r3, r7, #276
 12936 07e2 0521     		movs	r1, #5
 12937 07e4 9954     		strb	r1, [r3, r2]
1749:..\src/command_processing.c ****                 
1750:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12938              		.loc 1 1750 0
 12939 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12940 07ea 1A46     		mov	r2, r3	@ movhi
 12941 07ec 9200     		lsls	r2, r2, #2
 12942 07ee 1344     		add	r3, r3, r2
 12943 07f0 1A46     		mov	r2, r3	@ movhi
 12944 07f2 9100     		lsls	r1, r2, #2
 12945 07f4 1A46     		mov	r2, r3	@ movhi
 12946 07f6 0B46     		mov	r3, r1	@ movhi
 12947 07f8 1344     		add	r3, r3, r2
 12948 07fa 5B00     		lsls	r3, r3, #1
 12949 07fc 9AB2     		uxth	r2, r3
 12950 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12951 0802 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 291


 12952 0804 9BB2     		uxth	r3, r3
 12953 0806 0433     		adds	r3, r3, #4
 12954 0808 9BB2     		uxth	r3, r3
 12955 080a 1846     		mov	r0, r3
 12956 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12957 0810 AB4A     		ldr	r2, .L543
 12958 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12959 0814 1946     		mov	r1, r3
 12960 0816 AC4A     		ldr	r2, .L543+8
 12961 0818 0B46     		mov	r3, r1
 12962 081a 9B00     		lsls	r3, r3, #2
 12963 081c 0B44     		add	r3, r3, r1
 12964 081e 1344     		add	r3, r3, r2
 12965 0820 03F20223 		addw	r3, r3, #514
 12966 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12967 0826 07F58A73 		add	r3, r7, #276
 12968 082a 1A54     		strb	r2, [r3, r0]
1751:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12969              		.loc 1 1751 0
 12970 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12971 0830 1A46     		mov	r2, r3	@ movhi
 12972 0832 9200     		lsls	r2, r2, #2
 12973 0834 1344     		add	r3, r3, r2
 12974 0836 1A46     		mov	r2, r3	@ movhi
 12975 0838 9100     		lsls	r1, r2, #2
 12976 083a 1A46     		mov	r2, r3	@ movhi
 12977 083c 0B46     		mov	r3, r1	@ movhi
 12978 083e 1344     		add	r3, r3, r2
 12979 0840 5B00     		lsls	r3, r3, #1
 12980 0842 9AB2     		uxth	r2, r3
 12981 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12982 0848 1344     		add	r3, r3, r2
 12983 084a 9BB2     		uxth	r3, r3
 12984 084c 0533     		adds	r3, r3, #5
 12985 084e 9BB2     		uxth	r3, r3
 12986 0850 1846     		mov	r0, r3
 12987 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 12988 0856 9A4A     		ldr	r2, .L543
 12989 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12990 085a 1946     		mov	r1, r3
 12991 085c 9A4A     		ldr	r2, .L543+8
 12992 085e 0B46     		mov	r3, r1
 12993 0860 9B00     		lsls	r3, r3, #2
 12994 0862 0B44     		add	r3, r3, r1
 12995 0864 1344     		add	r3, r3, r2
 12996 0866 03F20323 		addw	r3, r3, #515
 12997 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12998 086c 07F58A73 		add	r3, r7, #276
 12999 0870 1A54     		strb	r2, [r3, r0]
1752:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13000              		.loc 1 1752 0
 13001 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13002 0876 1A46     		mov	r2, r3	@ movhi
 13003 0878 9200     		lsls	r2, r2, #2
 13004 087a 1344     		add	r3, r3, r2
 13005 087c 1A46     		mov	r2, r3	@ movhi
 13006 087e 9100     		lsls	r1, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 292


 13007 0880 1A46     		mov	r2, r3	@ movhi
 13008 0882 0B46     		mov	r3, r1	@ movhi
 13009 0884 1344     		add	r3, r3, r2
 13010 0886 5B00     		lsls	r3, r3, #1
 13011 0888 9AB2     		uxth	r2, r3
 13012 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13013 088e 1344     		add	r3, r3, r2
 13014 0890 9BB2     		uxth	r3, r3
 13015 0892 0633     		adds	r3, r3, #6
 13016 0894 9BB2     		uxth	r3, r3
 13017 0896 1846     		mov	r0, r3
 13018 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13019 089c 884A     		ldr	r2, .L543
 13020 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13021 08a0 1946     		mov	r1, r3
 13022 08a2 894A     		ldr	r2, .L543+8
 13023 08a4 0B46     		mov	r3, r1
 13024 08a6 9B00     		lsls	r3, r3, #2
 13025 08a8 0B44     		add	r3, r3, r1
 13026 08aa 1344     		add	r3, r3, r2
 13027 08ac 03F50173 		add	r3, r3, #516
 13028 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13029 08b2 07F58A73 		add	r3, r7, #276
 13030 08b6 1A54     		strb	r2, [r3, r0]
1753:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13031              		.loc 1 1753 0
 13032 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13033 08bc 1A46     		mov	r2, r3	@ movhi
 13034 08be 9200     		lsls	r2, r2, #2
 13035 08c0 1344     		add	r3, r3, r2
 13036 08c2 1A46     		mov	r2, r3	@ movhi
 13037 08c4 9100     		lsls	r1, r2, #2
 13038 08c6 1A46     		mov	r2, r3	@ movhi
 13039 08c8 0B46     		mov	r3, r1	@ movhi
 13040 08ca 1344     		add	r3, r3, r2
 13041 08cc 5B00     		lsls	r3, r3, #1
 13042 08ce 9AB2     		uxth	r2, r3
 13043 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13044 08d4 1344     		add	r3, r3, r2
 13045 08d6 9BB2     		uxth	r3, r3
 13046 08d8 0733     		adds	r3, r3, #7
 13047 08da 9BB2     		uxth	r3, r3
 13048 08dc 1846     		mov	r0, r3
 13049 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13050 08e2 774A     		ldr	r2, .L543
 13051 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13052 08e6 1946     		mov	r1, r3
 13053 08e8 774A     		ldr	r2, .L543+8
 13054 08ea 0B46     		mov	r3, r1
 13055 08ec 9B00     		lsls	r3, r3, #2
 13056 08ee 0B44     		add	r3, r3, r1
 13057 08f0 1344     		add	r3, r3, r2
 13058 08f2 03F20523 		addw	r3, r3, #517
 13059 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13060 08f8 07F58A73 		add	r3, r7, #276
 13061 08fc 1A54     		strb	r2, [r3, r0]
1754:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 293


 13062              		.loc 1 1754 0
 13063 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13064 0902 1A46     		mov	r2, r3	@ movhi
 13065 0904 9200     		lsls	r2, r2, #2
 13066 0906 1344     		add	r3, r3, r2
 13067 0908 1A46     		mov	r2, r3	@ movhi
 13068 090a 9100     		lsls	r1, r2, #2
 13069 090c 1A46     		mov	r2, r3	@ movhi
 13070 090e 0B46     		mov	r3, r1	@ movhi
 13071 0910 1344     		add	r3, r3, r2
 13072 0912 5B00     		lsls	r3, r3, #1
 13073 0914 9AB2     		uxth	r2, r3
 13074 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13075 091a 1344     		add	r3, r3, r2
 13076 091c 9BB2     		uxth	r3, r3
 13077 091e 0833     		adds	r3, r3, #8
 13078 0920 9BB2     		uxth	r3, r3
 13079 0922 1846     		mov	r0, r3
 13080 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13081 0928 654A     		ldr	r2, .L543
 13082 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13083 092c 1946     		mov	r1, r3
 13084 092e 664A     		ldr	r2, .L543+8
 13085 0930 0B46     		mov	r3, r1
 13086 0932 9B00     		lsls	r3, r3, #2
 13087 0934 0B44     		add	r3, r3, r1
 13088 0936 1344     		add	r3, r3, r2
 13089 0938 03F20623 		addw	r3, r3, #518
 13090 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13091 093e 07F58A73 		add	r3, r7, #276
 13092 0942 1A54     		strb	r2, [r3, r0]
1755:..\src/command_processing.c **** 
1756:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13093              		.loc 1 1756 0
 13094 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13095 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13096 094c 2BE0     		b	.L518
 13097              	.L519:
1757:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13098              		.loc 1 1757 0 discriminator 3
 13099 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13100 0952 1A46     		mov	r2, r3	@ movhi
 13101 0954 9200     		lsls	r2, r2, #2
 13102 0956 1344     		add	r3, r3, r2
 13103 0958 1A46     		mov	r2, r3	@ movhi
 13104 095a 9100     		lsls	r1, r2, #2
 13105 095c 1A46     		mov	r2, r3	@ movhi
 13106 095e 0B46     		mov	r3, r1	@ movhi
 13107 0960 1344     		add	r3, r3, r2
 13108 0962 5B00     		lsls	r3, r3, #1
 13109 0964 9AB2     		uxth	r2, r3
 13110 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13111 096a 1344     		add	r3, r3, r2
 13112 096c 9AB2     		uxth	r2, r3
 13113 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13114 0972 9BB2     		uxth	r3, r3
 13115 0974 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 294


 13116 0976 9AB2     		uxth	r2, r3
 13117 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13118 097c D31A     		subs	r3, r2, r3
 13119 097e 9BB2     		uxth	r3, r3
 13120 0980 0933     		adds	r3, r3, #9
 13121 0982 9BB2     		uxth	r3, r3
 13122 0984 1946     		mov	r1, r3
 13123 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13124 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13125 098e D31A     		subs	r3, r2, r3
 13126 0990 07F19C02 		add	r2, r7, #156
 13127 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13128 0996 07F58A73 		add	r3, r7, #276
 13129 099a 5A54     		strb	r2, [r3, r1]
1756:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13130              		.loc 1 1756 0 discriminator 3
 13131 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13132 09a0 013B     		subs	r3, r3, #1
 13133 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13134              	.L518:
1756:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13135              		.loc 1 1756 0 is_stmt 0 discriminator 1
 13136 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13137 09aa 002B     		cmp	r3, #0
 13138 09ac CFD1     		bne	.L519
1743:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13139              		.loc 1 1743 0 is_stmt 1 discriminator 2
 13140 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13141 09b2 0133     		adds	r3, r3, #1
 13142 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13143              	.L517:
1743:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13144              		.loc 1 1743 0 is_stmt 0 discriminator 1
 13145 09b8 444B     		ldr	r3, .L543+12
 13146 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13147 09bc 9BB2     		uxth	r3, r3
 13148 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13149 09c2 9A42     		cmp	r2, r3
 13150 09c4 FFF4CAAE 		bcc	.L520
1758:..\src/command_processing.c ****             }  
1759:..\src/command_processing.c ****           
1760:..\src/command_processing.c **** 
1761:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1762:..\src/command_processing.c ****             
1763:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13151              		.loc 1 1763 0 is_stmt 1
 13152 09c8 404B     		ldr	r3, .L543+12
 13153 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13154 09cc 9BB2     		uxth	r3, r3
 13155 09ce 1A46     		mov	r2, r3	@ movhi
 13156 09d0 9200     		lsls	r2, r2, #2
 13157 09d2 1344     		add	r3, r3, r2
 13158 09d4 1A46     		mov	r2, r3	@ movhi
 13159 09d6 9100     		lsls	r1, r2, #2
 13160 09d8 1A46     		mov	r2, r3	@ movhi
 13161 09da 0B46     		mov	r3, r1	@ movhi
 13162 09dc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 295


 13163 09de 5B00     		lsls	r3, r3, #1
 13164 09e0 9AB2     		uxth	r2, r3
 13165 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13166 09e6 1344     		add	r3, r3, r2
 13167 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1764:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13168              		.loc 1 1764 0
 13169 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13170 09f0 364A     		ldr	r2, .L543+12
 13171 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13172 09f4 1A44     		add	r2, r2, r3
 13173 09f6 07F18003 		add	r3, r7, #128
 13174 09fa 3549     		ldr	r1, .L543+16
 13175 09fc 1846     		mov	r0, r3
 13176 09fe FFF7FEFF 		bl	sprintf
1765:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13177              		.loc 1 1765 0
 13178 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13179 0a06 0233     		adds	r3, r3, #2
 13180 0a08 07F58A72 		add	r2, r7, #276
 13181 0a0c 0021     		movs	r1, #0
 13182 0a0e D154     		strb	r1, [r2, r3]
1766:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13183              		.loc 1 1766 0
 13184 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13185 0a14 0333     		adds	r3, r3, #3
 13186 0a16 07F58A72 		add	r2, r7, #276
 13187 0a1a 0121     		movs	r1, #1
 13188 0a1c D154     		strb	r1, [r2, r3]
1767:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13189              		.loc 1 1767 0
 13190 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13191 0a22 0433     		adds	r3, r3, #4
 13192 0a24 284A     		ldr	r2, .L543+8
 13193 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13194 0a2a 07F58A72 		add	r2, r7, #276
 13195 0a2e D154     		strb	r1, [r2, r3]
1768:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13196              		.loc 1 1768 0
 13197 0a30 254B     		ldr	r3, .L543+8
 13198 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13199 0a36 012B     		cmp	r3, #1
 13200 0a38 17D0     		beq	.L522
 13201 0a3a 022B     		cmp	r3, #2
 13202 0a3c 28D0     		beq	.L523
 13203 0a3e 002B     		cmp	r3, #0
 13204 0a40 00D0     		beq	.L524
1769:..\src/command_processing.c ****                 case 0: 
1770:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1771:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1772:..\src/command_processing.c ****                     break;
1773:..\src/command_processing.c ****                 case 1: 
1774:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1775:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1776:..\src/command_processing.c ****                     break;
1777:..\src/command_processing.c ****                 case 2: 
1778:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 296


1779:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1780:..\src/command_processing.c ****                     break;
1781:..\src/command_processing.c ****                 default:
1782:..\src/command_processing.c ****                     break;
 13205              		.loc 1 1782 0
 13206 0a42 38E0     		b	.L525
 13207              	.L524:
1770:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13208              		.loc 1 1770 0
 13209 0a44 07F18003 		add	r3, r7, #128
 13210 0a48 1846     		mov	r0, r3
 13211 0a4a FFF7FEFF 		bl	strlen
 13212 0a4e 0346     		mov	r3, r0
 13213 0a50 1A46     		mov	r2, r3
 13214 0a52 07F18003 		add	r3, r7, #128
 13215 0a56 1344     		add	r3, r3, r2
 13216 0a58 1E4A     		ldr	r2, .L543+20
 13217 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13218 0a5c 1860     		str	r0, [r3]	@ unaligned
 13219 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13220 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1771:..\src/command_processing.c ****                     break;
 13221              		.loc 1 1771 0
 13222 0a62 1A23     		movs	r3, #26
 13223 0a64 87F89D36 		strb	r3, [r7, #1693]
1772:..\src/command_processing.c ****                 case 1: 
 13224              		.loc 1 1772 0
 13225 0a68 25E0     		b	.L525
 13226              	.L522:
1774:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13227              		.loc 1 1774 0
 13228 0a6a 07F18003 		add	r3, r7, #128
 13229 0a6e 1846     		mov	r0, r3
 13230 0a70 FFF7FEFF 		bl	strlen
 13231 0a74 0346     		mov	r3, r0
 13232 0a76 1A46     		mov	r2, r3
 13233 0a78 07F18003 		add	r3, r7, #128
 13234 0a7c 1344     		add	r3, r3, r2
 13235 0a7e 164A     		ldr	r2, .L543+24
 13236 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13237 0a82 1860     		str	r0, [r3]	@ unaligned
 13238 0a84 1279     		ldrb	r2, [r2, #4]
 13239 0a86 1A71     		strb	r2, [r3, #4]
1775:..\src/command_processing.c ****                     break;
 13240              		.loc 1 1775 0
 13241 0a88 1923     		movs	r3, #25
 13242 0a8a 87F89D36 		strb	r3, [r7, #1693]
1776:..\src/command_processing.c ****                 case 2: 
 13243              		.loc 1 1776 0
 13244 0a8e 12E0     		b	.L525
 13245              	.L523:
1778:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13246              		.loc 1 1778 0
 13247 0a90 07F18003 		add	r3, r7, #128
 13248 0a94 1846     		mov	r0, r3
 13249 0a96 FFF7FEFF 		bl	strlen
 13250 0a9a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 297


 13251 0a9c 1A46     		mov	r2, r3
 13252 0a9e 07F18003 		add	r3, r7, #128
 13253 0aa2 1344     		add	r3, r3, r2
 13254 0aa4 0D4A     		ldr	r2, .L543+28
 13255 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13256 0aa8 1860     		str	r0, [r3]	@ unaligned
 13257 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13258 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c ****                     break;
 13259              		.loc 1 1779 0
 13260 0aae 1A23     		movs	r3, #26
 13261 0ab0 87F89D36 		strb	r3, [r7, #1693]
1780:..\src/command_processing.c ****                 default:
 13262              		.loc 1 1780 0
 13263 0ab4 00BF     		nop
 13264              	.L525:
1783:..\src/command_processing.c ****             }            
1784:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13265              		.loc 1 1784 0
 13266 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13267 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13268 0abe 28E0     		b	.L526
 13269              	.L544:
 13270              		.align	2
 13271              	.L543:
 13272 0ac0 00000000 		.word	IMU_connected
 13273 0ac4 94100000 		.word	.LC145
 13274 0ac8 00000000 		.word	c_mem
 13275 0acc 00000000 		.word	N_IMU_Connected
 13276 0ad0 B0100000 		.word	.LC146
 13277 0ad4 C8100000 		.word	.LC147
 13278 0ad8 D0100000 		.word	.LC148
 13279 0adc D8100000 		.word	.LC149
 13280              	.L527:
1785:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13281              		.loc 1 1785 0 discriminator 3
 13282 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13283 0ae4 5A1D     		adds	r2, r3, #5
 13284 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13285 0aea 1A44     		add	r2, r2, r3
 13286 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13287 0af0 D31A     		subs	r3, r2, r3
 13288 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13289 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13290 0afa 8A1A     		subs	r2, r1, r2
 13291 0afc 07F18001 		add	r1, r7, #128
 13292 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13293 0b02 07F58A72 		add	r2, r7, #276
 13294 0b06 D154     		strb	r1, [r2, r3]
1784:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13295              		.loc 1 1784 0 discriminator 3
 13296 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13297 0b0c 013B     		subs	r3, r3, #1
 13298 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13299              	.L526:
1784:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13300              		.loc 1 1784 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 298


 13301 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13302 0b16 002B     		cmp	r3, #0
 13303 0b18 E2D1     		bne	.L527
1786:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1787:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13304              		.loc 1 1787 0 is_stmt 1
 13305 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13306 0b1e 5A1D     		adds	r2, r3, #5
 13307 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13308 0b24 1344     		add	r3, r3, r2
 13309 0b26 07F58A72 		add	r2, r7, #276
 13310 0b2a 0121     		movs	r1, #1
 13311 0b2c D154     		strb	r1, [r2, r3]
1788:..\src/command_processing.c ****                   
1789:..\src/command_processing.c ****             
1790:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1791:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13312              		.loc 1 1791 0
 13313 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13314 0b32 3233     		adds	r3, r3, #50
 13315 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1792:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13316              		.loc 1 1792 0
 13317 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13318 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13319 0b40 1AE0     		b	.L528
 13320              	.L529:
1793:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13321              		.loc 1 1793 0 discriminator 3
 13322 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13323 0b46 0233     		adds	r3, r3, #2
 13324 0b48 9BB2     		uxth	r3, r3
 13325 0b4a 1A46     		mov	r2, r3
 13326 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13327 0b50 1A44     		add	r2, r2, r3
 13328 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13329 0b56 D31A     		subs	r3, r2, r3
 13330 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13331 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13332 0b60 8A1A     		subs	r2, r1, r2
 13333 0b62 07F10801 		add	r1, r7, #8
 13334 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13335 0b68 07F58A72 		add	r2, r7, #276
 13336 0b6c D154     		strb	r1, [r2, r3]
1792:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13337              		.loc 1 1792 0 discriminator 3
 13338 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13339 0b72 013B     		subs	r3, r3, #1
 13340 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13341              	.L528:
1792:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13342              		.loc 1 1792 0 is_stmt 0 discriminator 1
 13343 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13344 0b7c 002B     		cmp	r3, #0
 13345 0b7e E0D1     		bne	.L529
1794:..\src/command_processing.c **** 
1795:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 299


 13346              		.loc 1 1795 0 is_stmt 1
 13347 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13348 0b84 5C1E     		subs	r4, r3, #1
 13349 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13350 0b8a DBB2     		uxtb	r3, r3
 13351 0b8c 013B     		subs	r3, r3, #1
 13352 0b8e DAB2     		uxtb	r2, r3
 13353 0b90 07F58A73 		add	r3, r7, #276
 13354 0b94 1146     		mov	r1, r2
 13355 0b96 1846     		mov	r0, r3
 13356 0b98 FFF7FEFF 		bl	LCRChecksum
 13357 0b9c 0346     		mov	r3, r0
 13358 0b9e 1A46     		mov	r2, r3
 13359 0ba0 07F58A73 		add	r3, r7, #276
 13360 0ba4 1A55     		strb	r2, [r3, r4]
1796:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13361              		.loc 1 1796 0
 13362 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13363 0baa 07F58A73 		add	r3, r7, #276
 13364 0bae 1146     		mov	r1, r2
 13365 0bb0 1846     		mov	r0, r3
 13366 0bb2 FFF7FEFF 		bl	commWrite
1797:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13367              		.loc 1 1797 0
 13368 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1798:..\src/command_processing.c ****         break;
 13369              		.loc 1 1798 0
 13370 0bba 09E1     		b	.L530
 13371              	.L537:
1799:..\src/command_processing.c **** 
1800:..\src/command_processing.c **** //=========================================================     other_params
1801:..\src/command_processing.c ****         default: 
1802:..\src/command_processing.c ****             
1803:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13372              		.loc 1 1803 0
 13373 0bbc BB1D     		adds	r3, r7, #6
 13374 0bbe 1A88     		ldrh	r2, [r3]
 13375 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13376 0bc4 013B     		subs	r3, r3, #1
 13377 0bc6 9A42     		cmp	r2, r3
 13378 0bc8 C0F20181 		blt	.L538
1804:..\src/command_processing.c ****                 break;
1805:..\src/command_processing.c ****             
1806:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13379              		.loc 1 1806 0
 13380 0bcc BB1D     		adds	r3, r7, #6
 13381 0bce 1A88     		ldrh	r2, [r3]
 13382 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13383 0bd4 8149     		ldr	r1, .L545
 13384 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13385 0bd8 0B44     		add	r3, r3, r1
 13386 0bda 9A42     		cmp	r2, r3
 13387 0bdc 05D1     		bne	.L532
1807:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13388              		.loc 1 1807 0
 13389 0bde 804B     		ldr	r3, .L545+4
 13390 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 300


 13391 0be2 804B     		ldr	r3, .L545+8
 13392 0be4 83F80122 		strb	r2, [r3, #513]
1808:..\src/command_processing.c ****                 break;
 13393              		.loc 1 1808 0
 13394 0be8 F2E0     		b	.L530
 13395              	.L532:
1809:..\src/command_processing.c ****             }
1810:..\src/command_processing.c ****             
1811:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13396              		.loc 1 1811 0
 13397 0bea BB1D     		adds	r3, r7, #6
 13398 0bec 1A88     		ldrh	r2, [r3]
 13399 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13400 0bf2 013B     		subs	r3, r3, #1
 13401 0bf4 9A42     		cmp	r2, r3
 13402 0bf6 05D1     		bne	.L533
1812:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13403              		.loc 1 1812 0
 13404 0bf8 794B     		ldr	r3, .L545+4
 13405 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13406 0bfc 794B     		ldr	r3, .L545+8
 13407 0bfe 83F8A020 		strb	r2, [r3, #160]
1813:..\src/command_processing.c ****             }
1814:..\src/command_processing.c ****             else {
1815:..\src/command_processing.c ****             
1816:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1817:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1818:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1819:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1820:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1821:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1822:..\src/command_processing.c ****                 
1823:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1824:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1825:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1826:..\src/command_processing.c ****                 {
1827:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1828:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1829:..\src/command_processing.c ****                 }
1830:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1831:..\src/command_processing.c ****             
1832:..\src/command_processing.c ****             }
1833:..\src/command_processing.c ****             
1834:..\src/command_processing.c ****         break;
 13408              		.loc 1 1834 0
 13409 0c02 E5E0     		b	.L530
 13410              	.L533:
1817:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13411              		.loc 1 1817 0
 13412 0c04 BB1D     		adds	r3, r7, #6
 13413 0c06 1A88     		ldrh	r2, [r3]
 13414 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13415 0c0c D31A     		subs	r3, r2, r3
 13416 0c0e 764A     		ldr	r2, .L545+12
 13417 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13418 0c12 1946     		mov	r1, r3
 13419 0c14 724B     		ldr	r3, .L545+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 301


 13420 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13421 0c18 724A     		ldr	r2, .L545+8
 13422 0c1a 0B46     		mov	r3, r1
 13423 0c1c 9B00     		lsls	r3, r3, #2
 13424 0c1e 0B44     		add	r3, r3, r1
 13425 0c20 1344     		add	r3, r3, r2
 13426 0c22 03F20223 		addw	r3, r3, #514
 13427 0c26 0246     		mov	r2, r0
 13428 0c28 1A70     		strb	r2, [r3]
1818:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13429              		.loc 1 1818 0
 13430 0c2a BB1D     		adds	r3, r7, #6
 13431 0c2c 1A88     		ldrh	r2, [r3]
 13432 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 13433 0c32 D31A     		subs	r3, r2, r3
 13434 0c34 6C4A     		ldr	r2, .L545+12
 13435 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13436 0c38 1946     		mov	r1, r3
 13437 0c3a 694B     		ldr	r3, .L545+4
 13438 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13439 0c3e 694A     		ldr	r2, .L545+8
 13440 0c40 0B46     		mov	r3, r1
 13441 0c42 9B00     		lsls	r3, r3, #2
 13442 0c44 0B44     		add	r3, r3, r1
 13443 0c46 1344     		add	r3, r3, r2
 13444 0c48 03F20323 		addw	r3, r3, #515
 13445 0c4c 0246     		mov	r2, r0
 13446 0c4e 1A70     		strb	r2, [r3]
1819:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13447              		.loc 1 1819 0
 13448 0c50 BB1D     		adds	r3, r7, #6
 13449 0c52 1A88     		ldrh	r2, [r3]
 13450 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13451 0c58 D31A     		subs	r3, r2, r3
 13452 0c5a 634A     		ldr	r2, .L545+12
 13453 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13454 0c5e 1946     		mov	r1, r3
 13455 0c60 5F4B     		ldr	r3, .L545+4
 13456 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13457 0c64 5F4A     		ldr	r2, .L545+8
 13458 0c66 0B46     		mov	r3, r1
 13459 0c68 9B00     		lsls	r3, r3, #2
 13460 0c6a 0B44     		add	r3, r3, r1
 13461 0c6c 1344     		add	r3, r3, r2
 13462 0c6e 03F50173 		add	r3, r3, #516
 13463 0c72 0246     		mov	r2, r0
 13464 0c74 1A70     		strb	r2, [r3]
1820:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13465              		.loc 1 1820 0
 13466 0c76 BB1D     		adds	r3, r7, #6
 13467 0c78 1A88     		ldrh	r2, [r3]
 13468 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13469 0c7e D31A     		subs	r3, r2, r3
 13470 0c80 594A     		ldr	r2, .L545+12
 13471 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13472 0c84 1946     		mov	r1, r3
 13473 0c86 564B     		ldr	r3, .L545+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 302


 13474 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13475 0c8a 564A     		ldr	r2, .L545+8
 13476 0c8c 0B46     		mov	r3, r1
 13477 0c8e 9B00     		lsls	r3, r3, #2
 13478 0c90 0B44     		add	r3, r3, r1
 13479 0c92 1344     		add	r3, r3, r2
 13480 0c94 03F20523 		addw	r3, r3, #517
 13481 0c98 0246     		mov	r2, r0
 13482 0c9a 1A70     		strb	r2, [r3]
1821:..\src/command_processing.c ****                 
 13483              		.loc 1 1821 0
 13484 0c9c BB1D     		adds	r3, r7, #6
 13485 0c9e 1A88     		ldrh	r2, [r3]
 13486 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 13487 0ca4 D31A     		subs	r3, r2, r3
 13488 0ca6 504A     		ldr	r2, .L545+12
 13489 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13490 0caa 1946     		mov	r1, r3
 13491 0cac 4C4B     		ldr	r3, .L545+4
 13492 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13493 0cb0 4C4A     		ldr	r2, .L545+8
 13494 0cb2 0B46     		mov	r3, r1
 13495 0cb4 9B00     		lsls	r3, r3, #2
 13496 0cb6 0B44     		add	r3, r3, r1
 13497 0cb8 1344     		add	r3, r3, r2
 13498 0cba 03F20623 		addw	r3, r3, #518
 13499 0cbe 0246     		mov	r2, r0
 13500 0cc0 1A70     		strb	r2, [r3]
1824:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13501              		.loc 1 1824 0
 13502 0cc2 4A4B     		ldr	r3, .L545+16
 13503 0cc4 0122     		movs	r2, #1
 13504 0cc6 1A60     		str	r2, [r3]
1825:..\src/command_processing.c ****                 {
 13505              		.loc 1 1825 0
 13506 0cc8 0023     		movs	r3, #0
 13507 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13508 0cce 71E0     		b	.L535
 13509              	.L536:
1827:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13510              		.loc 1 1827 0 discriminator 3
 13511 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13512 0cd4 444A     		ldr	r2, .L545+12
 13513 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13514 0cd8 1C46     		mov	r4, r3
 13515 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13516 0cde 424A     		ldr	r2, .L545+12
 13517 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13518 0ce2 1946     		mov	r1, r3
 13519 0ce4 3F4A     		ldr	r2, .L545+8
 13520 0ce6 0B46     		mov	r3, r1
 13521 0ce8 9B00     		lsls	r3, r3, #2
 13522 0cea 0B44     		add	r3, r3, r1
 13523 0cec 1344     		add	r3, r3, r2
 13524 0cee 03F20223 		addw	r3, r3, #514
 13525 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13526 0cf4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 303


 13527 0cf6 1346     		mov	r3, r2
 13528 0cf8 5B00     		lsls	r3, r3, #1
 13529 0cfa 1344     		add	r3, r3, r2
 13530 0cfc 5B00     		lsls	r3, r3, #1
 13531 0cfe 5A1C     		adds	r2, r3, #1
 13532 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13533 0d04 3849     		ldr	r1, .L545+12
 13534 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13535 0d08 1846     		mov	r0, r3
 13536 0d0a 3649     		ldr	r1, .L545+8
 13537 0d0c 0346     		mov	r3, r0
 13538 0d0e 9B00     		lsls	r3, r3, #2
 13539 0d10 0344     		add	r3, r3, r0
 13540 0d12 0B44     		add	r3, r3, r1
 13541 0d14 03F20323 		addw	r3, r3, #515
 13542 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13543 0d1a 1946     		mov	r1, r3
 13544 0d1c 0B46     		mov	r3, r1
 13545 0d1e 5B00     		lsls	r3, r3, #1
 13546 0d20 0B44     		add	r3, r3, r1
 13547 0d22 5B00     		lsls	r3, r3, #1
 13548 0d24 1A44     		add	r2, r2, r3
 13549 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13550 0d2a 2F49     		ldr	r1, .L545+12
 13551 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13552 0d2e 1846     		mov	r0, r3
 13553 0d30 2C49     		ldr	r1, .L545+8
 13554 0d32 0346     		mov	r3, r0
 13555 0d34 9B00     		lsls	r3, r3, #2
 13556 0d36 0344     		add	r3, r3, r0
 13557 0d38 0B44     		add	r3, r3, r1
 13558 0d3a 03F50173 		add	r3, r3, #516
 13559 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13560 0d40 1946     		mov	r1, r3
 13561 0d42 0B46     		mov	r3, r1
 13562 0d44 5B00     		lsls	r3, r3, #1
 13563 0d46 0B44     		add	r3, r3, r1
 13564 0d48 5B00     		lsls	r3, r3, #1
 13565 0d4a 1A44     		add	r2, r2, r3
 13566 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13567 0d50 2549     		ldr	r1, .L545+12
 13568 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13569 0d54 1846     		mov	r0, r3
 13570 0d56 2349     		ldr	r1, .L545+8
 13571 0d58 0346     		mov	r3, r0
 13572 0d5a 9B00     		lsls	r3, r3, #2
 13573 0d5c 0344     		add	r3, r3, r0
 13574 0d5e 0B44     		add	r3, r3, r1
 13575 0d60 03F20523 		addw	r3, r3, #517
 13576 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13577 0d66 1B01     		lsls	r3, r3, #4
 13578 0d68 1A44     		add	r2, r2, r3
 13579 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13580 0d6e 1E49     		ldr	r1, .L545+12
 13581 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13582 0d72 1846     		mov	r0, r3
 13583 0d74 1B49     		ldr	r1, .L545+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 304


 13584 0d76 0346     		mov	r3, r0
 13585 0d78 9B00     		lsls	r3, r3, #2
 13586 0d7a 0344     		add	r3, r3, r0
 13587 0d7c 0B44     		add	r3, r3, r1
 13588 0d7e 03F20623 		addw	r3, r3, #518
 13589 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13590 0d84 5B00     		lsls	r3, r3, #1
 13591 0d86 1344     		add	r3, r3, r2
 13592 0d88 0133     		adds	r3, r3, #1
 13593 0d8a 194A     		ldr	r2, .L545+20
 13594 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1828:..\src/command_processing.c ****                 }
 13595              		.loc 1 1828 0 discriminator 3
 13596 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 13597 0d94 144A     		ldr	r2, .L545+12
 13598 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13599 0d98 1A46     		mov	r2, r3
 13600 0d9a 154B     		ldr	r3, .L545+20
 13601 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13602 0da0 124B     		ldr	r3, .L545+16
 13603 0da2 1B68     		ldr	r3, [r3]
 13604 0da4 1344     		add	r3, r3, r2
 13605 0da6 114A     		ldr	r2, .L545+16
 13606 0da8 1360     		str	r3, [r2]
1825:..\src/command_processing.c ****                 {
 13607              		.loc 1 1825 0 discriminator 3
 13608 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13609 0dae 0133     		adds	r3, r3, #1
 13610 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13611              	.L535:
1825:..\src/command_processing.c ****                 {
 13612              		.loc 1 1825 0 is_stmt 0 discriminator 1
 13613 0db4 094B     		ldr	r3, .L545
 13614 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13615 0db8 9BB2     		uxth	r3, r3
 13616 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13617 0dbe 9A42     		cmp	r2, r3
 13618 0dc0 86D3     		bcc	.L536
1830:..\src/command_processing.c ****             
 13619              		.loc 1 1830 0 is_stmt 1
 13620 0dc2 0A4B     		ldr	r3, .L545+16
 13621 0dc4 1B68     		ldr	r3, [r3]
 13622 0dc6 0133     		adds	r3, r3, #1
 13623 0dc8 084A     		ldr	r2, .L545+16
 13624 0dca 1360     		str	r3, [r2]
 13625              		.loc 1 1834 0
 13626 0dcc 00E0     		b	.L530
 13627              	.L538:
1804:..\src/command_processing.c ****             
 13628              		.loc 1 1804 0
 13629 0dce 00BF     		nop
 13630              	.L530:
1835:..\src/command_processing.c ****     }
1836:..\src/command_processing.c **** }
 13631              		.loc 1 1836 0 discriminator 1
 13632 0dd0 00BF     		nop
 13633 0dd2 07F5D567 		add	r7, r7, #1704
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 305


 13634              		.cfi_def_cfa_offset 16
 13635 0dd6 BD46     		mov	sp, r7
 13636              		.cfi_def_cfa_register 13
 13637              		@ sp needed
 13638 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13639              	.L546:
 13640 0dda 00BF     		.align	2
 13641              	.L545:
 13642 0ddc 00000000 		.word	N_IMU_Connected
 13643 0de0 00000000 		.word	g_rx
 13644 0de4 00000000 		.word	g_mem
 13645 0de8 00000000 		.word	IMU_connected
 13646 0dec 00000000 		.word	imus_data_size
 13647 0df0 00000000 		.word	single_imu_size
 13648              		.cfi_endproc
 13649              	.LFE70:
 13650              		.size	get_IMU_param_list, .-get_IMU_param_list
 13651              		.section	.text.setZeros,"ax",%progbits
 13652              		.align	2
 13653              		.global	setZeros
 13654              		.thumb
 13655              		.thumb_func
 13656              		.type	setZeros, %function
 13657              	setZeros:
 13658              	.LFB71:
1837:..\src/command_processing.c **** 
1838:..\src/command_processing.c **** //==============================================================================
1839:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1840:..\src/command_processing.c **** //==============================================================================
1841:..\src/command_processing.c **** 
1842:..\src/command_processing.c **** void setZeros()
1843:..\src/command_processing.c **** {
 13659              		.loc 1 1843 0
 13660              		.cfi_startproc
 13661              		@ args = 0, pretend = 0, frame = 8
 13662              		@ frame_needed = 1, uses_anonymous_args = 0
 13663 0000 90B5     		push	{r4, r7, lr}
 13664              		.cfi_def_cfa_offset 12
 13665              		.cfi_offset 4, -12
 13666              		.cfi_offset 7, -8
 13667              		.cfi_offset 14, -4
 13668 0002 83B0     		sub	sp, sp, #12
 13669              		.cfi_def_cfa_offset 24
 13670 0004 00AF     		add	r7, sp, #0
 13671              		.cfi_def_cfa_register 7
1844:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1845:..\src/command_processing.c ****     
1846:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13672              		.loc 1 1846 0
 13673 0006 0023     		movs	r3, #0
 13674 0008 BB71     		strb	r3, [r7, #6]
 13675 000a 26E0     		b	.L548
 13676              	.L551:
1847:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13677              		.loc 1 1847 0
 13678 000c 0023     		movs	r3, #0
 13679 000e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 306


 13680 0010 1DE0     		b	.L549
 13681              	.L550:
1848:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13682              		.loc 1 1848 0 discriminator 3
 13683 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13684 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13685 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13686 0018 1648     		ldr	r0, .L552
 13687 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13688 001e 1C46     		mov	r4, r3
 13689 0020 1548     		ldr	r0, .L552+4
 13690 0022 1346     		mov	r3, r2
 13691 0024 5B00     		lsls	r3, r3, #1
 13692 0026 1344     		add	r3, r3, r2
 13693 0028 9B00     		lsls	r3, r3, #2
 13694 002a 0B44     		add	r3, r3, r1
 13695 002c 6633     		adds	r3, r3, #102
 13696 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1849:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13697              		.loc 1 1849 0 discriminator 3
 13698 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13699 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13700 0036 1149     		ldr	r1, .L552+8
 13701 0038 3420     		movs	r0, #52
 13702 003a 00FB02F2 		mul	r2, r0, r2
 13703 003e 0A44     		add	r2, r2, r1
 13704 0040 1344     		add	r3, r3, r2
 13705 0042 1833     		adds	r3, r3, #24
 13706 0044 0022     		movs	r2, #0
 13707 0046 1A70     		strb	r2, [r3]
1847:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13708              		.loc 1 1847 0 discriminator 3
 13709 0048 FB79     		ldrb	r3, [r7, #7]
 13710 004a 0133     		adds	r3, r3, #1
 13711 004c FB71     		strb	r3, [r7, #7]
 13712              	.L549:
1847:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13713              		.loc 1 1847 0 is_stmt 0 discriminator 1
 13714 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13715 0050 022B     		cmp	r3, #2
 13716 0052 DED9     		bls	.L550
1846:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13717              		.loc 1 1846 0 is_stmt 1 discriminator 2
 13718 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13719 0056 0133     		adds	r3, r3, #1
 13720 0058 BB71     		strb	r3, [r7, #6]
 13721              	.L548:
1846:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13722              		.loc 1 1846 0 is_stmt 0 discriminator 1
 13723 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13724 005c 012B     		cmp	r3, #1
 13725 005e D5D9     		bls	.L551
1850:..\src/command_processing.c ****         }
1851:..\src/command_processing.c ****     }
1852:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13726              		.loc 1 1852 0 is_stmt 1
 13727 0060 074B     		ldr	r3, .L552+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 307


 13728 0062 0122     		movs	r2, #1
 13729 0064 1A70     		strb	r2, [r3]
1853:..\src/command_processing.c **** 
1854:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13730              		.loc 1 1854 0
 13731 0066 0120     		movs	r0, #1
 13732 0068 FFF7FEFF 		bl	sendAcknowledgment
1855:..\src/command_processing.c **** }
 13733              		.loc 1 1855 0
 13734 006c 00BF     		nop
 13735 006e 0C37     		adds	r7, r7, #12
 13736              		.cfi_def_cfa_offset 12
 13737 0070 BD46     		mov	sp, r7
 13738              		.cfi_def_cfa_register 13
 13739              		@ sp needed
 13740 0072 90BD     		pop	{r4, r7, pc}
 13741              	.L553:
 13742              		.align	2
 13743              	.L552:
 13744 0074 00000000 		.word	data_encoder_raw
 13745 0078 00000000 		.word	g_mem
 13746 007c 00000000 		.word	g_meas
 13747 0080 00000000 		.word	reset_last_value_flag
 13748              		.cfi_endproc
 13749              	.LFE71:
 13750              		.size	setZeros, .-setZeros
 13751              		.section	.rodata
 13752              		.align	2
 13753              	.LC150:
 13754 1110 0D0A00   		.ascii	"\015\012\000"
 13755 1113 00       		.align	2
 13756              	.LC151:
 13757 1114 4669726D 		.ascii	"Firmware version: \000"
 13757      77617265 
 13757      20766572 
 13757      73696F6E 
 13757      3A2000
 13758 1127 00       		.align	2
 13759              	.LC152:
 13760 1128 47656E65 		.ascii	"Generic firmware v. 1.9 (PSoC5)\000"
 13760      72696320 
 13760      6669726D 
 13760      77617265 
 13760      20762E20 
 13761              		.align	2
 13762              	.LC153:
 13763 1148 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13763      0A00
 13764 114e 0000     		.align	2
 13765              	.LC154:
 13766 1150 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13766      43452049 
 13766      4E464F0D 
 13766      0A00
 13767 115e 0000     		.align	2
 13768              	.LC155:
 13769 1160 49443A20 		.ascii	"ID: %d\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 308


 13769      25640D0A 
 13769      00
 13770 1169 000000   		.align	2
 13771              	.LC156:
 13772 116c 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13772      63653A20 
 13772      534F4654 
 13772      48414E44 
 13772      2050524F 
 13773 1183 00       		.align	2
 13774              	.LC157:
 13775 1184 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13775      63653A20 
 13775      47454E45 
 13775      52494320 
 13775      32204D4F 
 13776 119f 00       		.align	2
 13777              	.LC158:
 13778 11a0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13778      63653A20 
 13778      41495220 
 13778      4348414D 
 13778      42455253 
 13779 11c7 00       		.align	2
 13780              	.LC159:
 13781 11c8 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13781      63653A20 
 13781      4F54544F 
 13781      424F434B 
 13781      20367620 
 13782 11f2 0000     		.align	2
 13783              	.LC160:
 13784 11f4 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13784      63653A20 
 13784      534F4654 
 13784      48414E44 
 13784      2032204D 
 13785              		.align	2
 13786              	.LC161:
 13787 1210 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13787      20736964 
 13787      653A2052 
 13787      49474854 
 13787      0D0A00
 13788 1223 00       		.align	2
 13789              	.LC162:
 13790 1224 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13790      20736964 
 13790      653A204C 
 13790      4546540D 
 13790      0A00
 13791 1236 0000     		.align	2
 13792              	.LC163:
 13793 1238 55736572 		.ascii	"User: MARIA\015\012\000"
 13793      3A204D41 
 13793      5249410D 
 13793      0A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 309


 13794 1246 0000     		.align	2
 13795              	.LC164:
 13796 1248 55736572 		.ascii	"User: ROZA\015\012\000"
 13796      3A20524F 
 13796      5A410D0A 
 13796      00
 13797 1255 000000   		.align	2
 13798              	.LC165:
 13799 1258 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13799      3A204745 
 13799      4E455249 
 13799      43205553 
 13799      45520D0A 
 13800 126d 000000   		.align	2
 13801              	.LC166:
 13802 1270 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13802      52202564 
 13802      20494E46 
 13802      4F0D0A00 
 13803              		.align	2
 13804              	.LC167:
 13805 1280 4D6F746F 		.ascii	"Motor reference\000"
 13805      72207265 
 13805      66657265 
 13805      6E636500 
 13806              		.align	2
 13807              	.LC168:
 13808 1290 202D2043 		.ascii	" - Currents: \000"
 13808      75727265 
 13808      6E74733A 
 13808      2000
 13809 129e 0000     		.align	2
 13810              	.LC169:
 13811 12a0 202D2050 		.ascii	" - Pwm: \000"
 13811      776D3A20 
 13811      00
 13812 12a9 000000   		.align	2
 13813              	.LC170:
 13814 12ac 202D2050 		.ascii	" - Position: \000"
 13814      6F736974 
 13814      696F6E3A 
 13814      2000
 13815 12ba 0000     		.align	2
 13816              	.LC171:
 13817 12bc 25642000 		.ascii	"%d \000"
 13818              		.align	2
 13819              	.LC172:
 13820 12c0 4D6F746F 		.ascii	"Motor enabled: \000"
 13820      7220656E 
 13820      61626C65 
 13820      643A2000 
 13821              		.align	2
 13822              	.LC173:
 13823 12d0 5945530D 		.ascii	"YES\015\012\000"
 13823      0A00
 13824 12d6 0000     		.align	2
 13825              	.LC174:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 310


 13826 12d8 4E4F0D0A 		.ascii	"NO\015\012\000"
 13826      00
 13827 12dd 000000   		.align	2
 13828              	.LC175:
 13829 12e0 50574D20 		.ascii	"PWM rescaling activation: \000"
 13829      72657363 
 13829      616C696E 
 13829      67206163 
 13829      74697661 
 13830 12fb 00       		.align	2
 13831              	.LC176:
 13832 12fc 5945530A 		.ascii	"YES\012\000"
 13832      00
 13833 1301 000000   		.align	2
 13834              	.LC177:
 13835 1304 4E4F0A00 		.ascii	"NO\012\000"
 13836              		.align	2
 13837              	.LC178:
 13838 1308 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13838      4C696D69 
 13838      743A2025 
 13838      640D0A00 
 13839              		.align	2
 13840              	.LC179:
 13841 1318 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13841      41535552 
 13841      454D454E 
 13841      54532049 
 13841      4E464F0D 
 13842 132e 0000     		.align	2
 13843              	.LC180:
 13844 1330 53656E73 		.ascii	"Sensor value: \000"
 13844      6F722076 
 13844      616C7565 
 13844      3A2000
 13845 133f 00       		.align	2
 13846              	.LC181:
 13847 1340 256400   		.ascii	"%d\000"
 13848 1343 00       		.align	2
 13849              	.LC182:
 13850 1344 2C2000   		.ascii	", \000"
 13851 1347 00       		.align	2
 13852              	.LC183:
 13853 1348 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13853      7469636B 
 13853      206D6561 
 13853      73757265 
 13853      6D656E74 
 13854 1366 0000     		.align	2
 13855              	.LC184:
 13856 1368 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13856      65727920 
 13856      25642056 
 13856      6F6C7461 
 13856      67652028 
 13857 1385 000000   		.align	2
 13858              	.LC185:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 311


 13859 1388 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13859      20636861 
 13859      72676520 
 13859      706F7765 
 13859      72207465 
 13860 13af 00       		.align	2
 13861              	.LC186:
 13862 13b0 43757272 		.ascii	"Current %d (mA): %ld\000"
 13862      656E7420 
 13862      25642028 
 13862      6D41293A 
 13862      20256C64 
 13863 13c5 000000   		.align	2
 13864              	.LC187:
 13865 13c8 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13865      20477261 
 13865      73702048 
 13865      6F6C6420 
 13865      43757272 
 13866 13ed 000000   		.align	2
 13867              	.LC188:
 13868 13f0 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13868      544F5220 
 13868      25642043 
 13868      4F4E4649 
 13868      47555241 
 13869 140b 00       		.align	2
 13870              	.LC189:
 13871 140c 50494420 		.ascii	"PID Controller: \000"
 13871      436F6E74 
 13871      726F6C6C 
 13871      65723A20 
 13871      00
 13872              		.global	__aeabi_i2d
 13873              		.global	__aeabi_ddiv
 13874 141d 000000   		.align	2
 13875              	.LC190:
 13876 1420 50202D3E 		.ascii	"P -> %f  \000"
 13876      20256620 
 13876      2000
 13877 142a 0000     		.align	2
 13878              	.LC191:
 13879 142c 49202D3E 		.ascii	"I -> %f  \000"
 13879      20256620 
 13879      2000
 13880 1436 0000     		.align	2
 13881              	.LC192:
 13882 1438 44202D3E 		.ascii	"D -> %f\015\012\000"
 13882      2025660D 
 13882      0A00
 13883 1442 0000     		.align	2
 13884              	.LC193:
 13885 1444 43757272 		.ascii	"Current PID Controller: \000"
 13885      656E7420 
 13885      50494420 
 13885      436F6E74 
 13885      726F6C6C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 312


 13886 145d 000000   		.align	2
 13887              	.LC194:
 13888 1460 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13888      74757020 
 13888      61637469 
 13888      76617469 
 13888      6F6E3A20 
 13889 147a 0000     		.align	2
 13890              	.LC195:
 13891 147c 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13891      74757020 
 13891      61637469 
 13891      76617469 
 13891      6F6E3A20 
 13892 1495 000000   		.align	2
 13893              	.LC196:
 13894 1498 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13894      74206D6F 
 13894      64653A20 
 13894      5553420D 
 13894      0A00
 13895 14aa 0000     		.align	2
 13896              	.LC197:
 13897 14ac 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13897      74206D6F 
 13897      64653A20 
 13897      48616E64 
 13897      6C650D0A 
 13898 14c1 000000   		.align	2
 13899              	.LC198:
 13900 14c4 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13900      74206D6F 
 13900      64653A20 
 13900      454D4720 
 13900      70726F70 
 13901 14e3 00       		.align	2
 13902              	.LC199:
 13903 14e4 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13903      74206D6F 
 13903      64653A20 
 13903      454D4720 
 13903      696E7465 
 13904 14ff 00       		.align	2
 13905              	.LC200:
 13906 1500 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13906      74206D6F 
 13906      64653A20 
 13906      454D4720 
 13906      46434653 
 13907 1517 00       		.align	2
 13908              	.LC201:
 13909 1518 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13909      74206D6F 
 13909      64653A20 
 13909      454D4720 
 13909      46434653 
 13910 1533 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 313


 13911              	.LC202:
 13912 1534 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 13912      74206D6F 
 13912      64653A20 
 13912      4A6F7973 
 13912      7469636B 
 13913 154b 00       		.align	2
 13914              	.LC203:
 13915 154c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13915      74206D6F 
 13915      64653A20 
 13915      454D4720 
 13915      70726F70 
 13916 157a 00       		.ascii	"\000"
 13917 157b 00       		.align	2
 13918              	.LC204:
 13919 157c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13919      726F6C20 
 13919      6D6F6465 
 13919      3A20506F 
 13919      73697469 
 13920 1595 000000   		.align	2
 13921              	.LC205:
 13922 1598 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13922      726F6C20 
 13922      6D6F6465 
 13922      3A205057 
 13922      4D0D0A00 
 13923              		.align	2
 13924              	.LC206:
 13925 15ac 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13925      726F6C20 
 13925      6D6F6465 
 13925      3A204375 
 13925      7272656E 
 13926              		.align	2
 13927              	.LC207:
 13928 15c4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13928      726F6C20 
 13928      6D6F6465 
 13928      3A20506F 
 13928      73697469 
 13929 15e9 000000   		.align	2
 13930              	.LC208:
 13931 15ec 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13931      6C757465 
 13931      20656E63 
 13931      6F646572 
 13931      20706F73 
 13932 160d 000000   		.align	2
 13933              	.LC209:
 13934 1610 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13934      6C757465 
 13934      20656E63 
 13934      6F646572 
 13934      20706F73 
 13935              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 314


 13936              	.LC210:
 13937 1630 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13937      722D4861 
 13937      6E646C65 
 13937      20526174 
 13937      696F3A20 
 13938 1649 000000   		.align	2
 13939              	.LC211:
 13940 164c 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13940      64657220 
 13940      696E6469 
 13940      63657320 
 13940      75736564 
 13941 1675 000000   		.align	2
 13942              	.LC212:
 13943 1678 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13943      74204765 
 13943      61723A20 
 13943      25642074 
 13943      65657468 
 13944 168f 00       		.align	2
 13945              	.LC213:
 13946 1690 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13946      6E642047 
 13946      6561723A 
 13946      20256420 
 13946      74656574 
 13947              		.align	2
 13948              	.LC214:
 13949 16a8 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13949      20696E76 
 13949      61726961 
 13949      6E743A20 
 13949      25640D0A 
 13950 16bd 000000   		.align	2
 13951              	.LC215:
 13952 16c0 53656E73 		.ascii	"Sensor resolution: \000"
 13952      6F722072 
 13952      65736F6C 
 13952      7574696F 
 13952      6E3A2000 
 13953              		.align	2
 13954              	.LC216:
 13955 16d4 4D656173 		.ascii	"Measurement Offset: \000"
 13955      7572656D 
 13955      656E7420 
 13955      4F666673 
 13955      65743A20 
 13956 16e9 000000   		.align	2
 13957              	.LC217:
 13958 16ec 256C6400 		.ascii	"%ld\000"
 13959              		.align	2
 13960              	.LC218:
 13961 16f0 4D656173 		.ascii	"Measurement Multiplier: \000"
 13961      7572656D 
 13961      656E7420 
 13961      4D756C74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 315


 13961      69706C69 
 13962              		.global	__aeabi_f2d
 13963 1709 000000   		.align	2
 13964              	.LC219:
 13965 170c 256600   		.ascii	"%f\000"
 13966 170f 00       		.align	2
 13967              	.LC220:
 13968 1710 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 13968      656E7420 
 13968      6C6F6F6B 
 13968      75702074 
 13968      61626C65 
 13969 173e 00       		.ascii	"\000"
 13970 173f 00       		.align	2
 13971              	.LC221:
 13972 1740 506F7369 		.ascii	"Position limit active: %d\000"
 13972      74696F6E 
 13972      206C696D 
 13972      69742061 
 13972      63746976 
 13973 175a 0000     		.align	2
 13974              	.LC222:
 13975 175c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13975      74696F6E 
 13975      206C696D 
 13975      6974206D 
 13975      6F746F72 
 13976 177f 00       		.align	2
 13977              	.LC223:
 13978 1780 73757020 		.ascii	"sup -> %ld\015\012\000"
 13978      2D3E2025 
 13978      6C640D0A 
 13978      00
 13979 178d 000000   		.align	2
 13980              	.LC224:
 13981 1790 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13981      73746570 
 13981      20706F73 
 13981      20616E64 
 13981      206E6567 
 13982              		.align	2
 13983              	.LC225:
 13984 17ac 43757272 		.ascii	"Current limit: %d\015\012\000"
 13984      656E7420 
 13984      6C696D69 
 13984      743A2025 
 13984      640D0A00 
 13985              		.align	2
 13986              	.LC226:
 13987 17c0 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13987      7220626F 
 13987      61726420 
 13987      6173736F 
 13987      63696174 
 13988 17ea 0000     		.align	2
 13989              	.LC227:
 13990 17ec 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 316


 13990      65722074 
 13990      7970653A 
 13990      204D4333 
 13990      33383837 
 13991 180e 0000     		.align	2
 13992              	.LC228:
 13993 1810 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13993      65722074 
 13993      7970653A 
 13993      20564E48 
 13993      35303139 
 13994              		.align	2
 13995              	.LC229:
 13996 1834 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13996      72617465 
 13996      206C696D 
 13996      69746572 
 13996      2076616C 
 13997 1851 000000   		.align	2
 13998              	.LC230:
 13999 1854 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13999      72657665 
 13999      72736962 
 13999      6C65206D 
 13999      6F746F72 
 14000              		.align	2
 14001              	.LC231:
 14002 1870 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14002      72657665 
 14002      72736962 
 14002      6C65206D 
 14002      6F746F72 
 14003 188b 00       		.align	2
 14004              	.LC232:
 14005 188c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14005      434F4E46 
 14005      49475552 
 14005      4154494F 
 14005      4E0D0A00 
 14006              		.align	2
 14007              	.LC233:
 14008 18a0 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14008      74687265 
 14008      73686F6C 
 14008      6473205B 
 14008      30202D20 
 14009 18c2 0000     		.align	2
 14010              	.LC234:
 14011 18c4 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14011      6D617820 
 14011      76616C75 
 14011      6573205B 
 14011      30202D20 
 14012              		.align	2
 14013              	.LC235:
 14014 18e8 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14014      696E7665 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 317


 14014      7273696F 
 14014      6E3A2059 
 14014      45530D0A 
 14015 18fd 000000   		.align	2
 14016              	.LC236:
 14017 1900 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14017      696E7665 
 14017      7273696F 
 14017      6E3A204E 
 14017      4F0D0A00 
 14018              		.align	2
 14019              	.LC237:
 14020 1914 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14020      62726174 
 14020      696F6E20 
 14020      656E6162 
 14020      6C65643A 
 14021 192f 00       		.align	2
 14022              	.LC238:
 14023 1930 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14023      62726174 
 14023      696F6E20 
 14023      656E6162 
 14023      6C65643A 
 14024 194a 0000     		.align	2
 14025              	.LC239:
 14026 194c 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14026      6D617820 
 14026      73706565 
 14026      643A2025 
 14026      64202564 
 14027 1961 000000   		.align	2
 14028              	.LC240:
 14029 1964 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14029      74696F6E 
 14029      616C2041 
 14029      44432073 
 14029      656E736F 
 14030              		.align	2
 14031              	.LC241:
 14032 1984 41444320 		.ascii	"ADC %d -> %d\000"
 14032      2564202D 
 14032      3E202564 
 14032      00
 14033 1991 000000   		.align	2
 14034              	.LC242:
 14035 1994 454D4720 		.ascii	"EMG input %d -> %d\000"
 14035      696E7075 
 14035      74202564 
 14035      202D3E20 
 14035      256400
 14036 19a7 00       		.align	2
 14037              	.LC243:
 14038 19a8 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14038      5449434B 
 14038      20434F4E 
 14038      46494755 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 318


 14038      52415449 
 14039 19c1 000000   		.align	2
 14040              	.LC244:
 14041 19c4 436C6F73 		.ascii	"Closure speed: %d\000"
 14041      75726520 
 14041      73706565 
 14041      643A2025 
 14041      6400
 14042 19d6 0000     		.align	2
 14043              	.LC245:
 14044 19d8 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14044      7469636B 
 14044      20546872 
 14044      6573686F 
 14044      6C643A20 
 14045 19ef 00       		.align	2
 14046              	.LC246:
 14047 19f0 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14047      7469636B 
 14047      20476169 
 14047      6E73202D 
 14047      20583A25 
 14048 1a0e 0000     		.align	2
 14049              	.LC247:
 14050 1a10 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14050      2074696D 
 14050      65206465 
 14050      6C617920 
 14050      286D7329 
 14051 1a29 000000   		.align	2
 14052              	.LC248:
 14053 1a2c 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14053      2076656C 
 14053      6F636974 
 14053      7920636C 
 14053      6F737572 
 14054 1a52 0000     		.align	2
 14055              	.LC249:
 14056 1a54 52657374 		.ascii	"Rest position: %d\000"
 14056      20706F73 
 14056      6974696F 
 14056      6E3A2025 
 14056      6400
 14057 1a66 0000     		.align	2
 14058              	.LC250:
 14059 1a68 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14059      436F6E6E 
 14059      65637465 
 14059      643A2025 
 14059      640D0A00 
 14060              		.align	2
 14061              	.LC251:
 14062 1a7c 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14062      20434F4E 
 14062      46494755 
 14062      52415449 
 14062      4F4E0D0A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 319


 14063 1a91 000000   		.align	2
 14064              	.LC252:
 14065 1a94 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14065      2564200D 
 14065      0A094944 
 14065      3A202564 
 14065      0D0A00
 14066 1aa7 00       		.align	2
 14067              	.LC253:
 14068 1aa8 09416363 		.ascii	"\011Accelerometers: \000"
 14068      656C6572 
 14068      6F6D6574 
 14068      6572733A 
 14068      2000
 14069 1aba 0000     		.align	2
 14070              	.LC254:
 14071 1abc 09477972 		.ascii	"\011Gyroscopes: \000"
 14071      6F73636F 
 14071      7065733A 
 14071      2000
 14072 1aca 0000     		.align	2
 14073              	.LC255:
 14074 1acc 094D6167 		.ascii	"\011Magnetometers: \000"
 14074      6E65746F 
 14074      6D657465 
 14074      72733A20 
 14074      00
 14075 1add 000000   		.align	2
 14076              	.LC256:
 14077 1ae0 09517561 		.ascii	"\011Quaternion: \000"
 14077      7465726E 
 14077      696F6E3A 
 14077      2000
 14078 1aee 0000     		.align	2
 14079              	.LC257:
 14080 1af0 0954656D 		.ascii	"\011Temperature: \000"
 14080      70657261 
 14080      74757265 
 14080      3A2000
 14081 1aff 00       		.align	2
 14082              	.LC258:
 14083 1b00 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14083      44455220 
 14083      434F4E46 
 14083      49475552 
 14083      4154494F 
 14084              		.align	2
 14085              	.LC259:
 14086 1b18 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14086      64657220 
 14086      436F6E6E 
 14086      65637465 
 14086      64204C69 
 14087 1b36 0000     		.align	2
 14088              	.LC260:
 14089 1b38 4C454654 		.ascii	"LEFT\000"
 14089      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 320


 14090 1b3d 000000   		.align	2
 14091              	.LC261:
 14092 1b40 52494748 		.ascii	"RIGHT\000"
 14092      5400
 14093 1b46 0000     		.align	2
 14094              	.LC262:
 14095 1b48 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14095      2048414E 
 14095      44206D61 
 14095      696E2065 
 14095      6E636F64 
 14096 1b65 000000   		.align	2
 14097              	.LC263:
 14098 1b68 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14098      76616C75 
 14098      65205B73 
 14098      74617475 
 14098      735D3A0D 
 14099 1b7e 0000     		.align	2
 14100              	.LC264:
 14101 1b80 4F4B00   		.ascii	"OK\000"
 14102 1b83 00       		.align	2
 14103              	.LC265:
 14104 1b84 5800     		.ascii	"X\000"
 14105 1b86 0000     		.align	2
 14106              	.LC266:
 14107 1b88 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14107      25735D0D 
 14107      0A00
 14108 1b92 0000     		.align	2
 14109              	.LC267:
 14110 1b94 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14110      20465720 
 14110      6379636C 
 14110      65207469 
 14110      6D653A20 
 14111              		.align	2
 14112              	.LC268:
 14113 1bb0 0D0A0000 		.ascii	"\015\012\000\000"
 14114              		.section	.text.prepare_generic_info,"ax",%progbits
 14115              		.align	2
 14116              		.global	prepare_generic_info
 14117              		.thumb
 14118              		.thumb_func
 14119              		.type	prepare_generic_info, %function
 14120              	prepare_generic_info:
 14121              	.LFB72:
1856:..\src/command_processing.c **** 
1857:..\src/command_processing.c **** //==============================================================================
1858:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1859:..\src/command_processing.c **** //==============================================================================
1860:..\src/command_processing.c **** 
1861:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1862:..\src/command_processing.c **** {
 14122              		.loc 1 1862 0
 14123              		.cfi_startproc
 14124              		@ args = 0, pretend = 0, frame = 152
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 321


 14125              		@ frame_needed = 1, uses_anonymous_args = 0
 14126 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14127              		.cfi_def_cfa_offset 36
 14128              		.cfi_offset 4, -36
 14129              		.cfi_offset 5, -32
 14130              		.cfi_offset 6, -28
 14131              		.cfi_offset 7, -24
 14132              		.cfi_offset 8, -20
 14133              		.cfi_offset 9, -16
 14134              		.cfi_offset 10, -12
 14135              		.cfi_offset 11, -8
 14136              		.cfi_offset 14, -4
 14137 0004 B1B0     		sub	sp, sp, #196
 14138              		.cfi_def_cfa_offset 232
 14139 0006 0AAF     		add	r7, sp, #40
 14140              		.cfi_def_cfa 7, 192
 14141 0008 7861     		str	r0, [r7, #20]
1863:..\src/command_processing.c ****     int i;
1864:..\src/command_processing.c **** 
1865:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14142              		.loc 1 1865 0
 14143 000a C34B     		ldr	r3, .L676
 14144 000c C7F88830 		str	r3, [r7, #136]
1866:..\src/command_processing.c ****     
1867:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14145              		.loc 1 1867 0
 14146 0010 C14B     		ldr	r3, .L676
 14147 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14148 0016 FA2B     		cmp	r3, #250
 14149 0018 02F07880 		beq	.L673
 14150              	.LBB20:
1868:..\src/command_processing.c ****         char str[100];
1869:..\src/command_processing.c ****         strcpy(info_string, "");
 14151              		.loc 1 1869 0
 14152 001c 7B69     		ldr	r3, [r7, #20]
 14153 001e 0022     		movs	r2, #0
 14154 0020 1A70     		strb	r2, [r3]
1870:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14155              		.loc 1 1870 0
 14156 0022 7869     		ldr	r0, [r7, #20]
 14157 0024 FFF7FEFF 		bl	strlen
 14158 0028 0346     		mov	r3, r0
 14159 002a 1A46     		mov	r2, r3
 14160 002c 7B69     		ldr	r3, [r7, #20]
 14161 002e 1344     		add	r3, r3, r2
 14162 0030 BA4A     		ldr	r2, .L676+4
 14163 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14164 0034 9278     		ldrb	r2, [r2, #2]
 14165 0036 1980     		strh	r1, [r3]	@ unaligned
 14166 0038 9A70     		strb	r2, [r3, #2]
1871:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14167              		.loc 1 1871 0
 14168 003a 7869     		ldr	r0, [r7, #20]
 14169 003c FFF7FEFF 		bl	strlen
 14170 0040 0346     		mov	r3, r0
 14171 0042 1A46     		mov	r2, r3
 14172 0044 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 322


 14173 0046 1344     		add	r3, r3, r2
 14174 0048 B54A     		ldr	r2, .L676+8
 14175 004a 1D46     		mov	r5, r3
 14176 004c 1446     		mov	r4, r2
 14177 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14178 0050 2860     		str	r0, [r5]	@ unaligned
 14179 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14180 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 14181 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14182 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14183 005a A278     		ldrb	r2, [r4, #2]
 14184 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14185 005e 1346     		mov	r3, r2
 14186 0060 AB74     		strb	r3, [r5, #18]
1872:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14187              		.loc 1 1872 0
 14188 0062 7869     		ldr	r0, [r7, #20]
 14189 0064 FFF7FEFF 		bl	strlen
 14190 0068 0346     		mov	r3, r0
 14191 006a 1A46     		mov	r2, r3
 14192 006c 7B69     		ldr	r3, [r7, #20]
 14193 006e 1344     		add	r3, r3, r2
 14194 0070 AC4A     		ldr	r2, .L676+12
 14195 0072 1C46     		mov	r4, r3
 14196 0074 1546     		mov	r5, r2
 14197 0076 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14198 0078 2060     		str	r0, [r4]	@ unaligned
 14199 007a 6160     		str	r1, [r4, #4]	@ unaligned
 14200 007c A260     		str	r2, [r4, #8]	@ unaligned
 14201 007e E360     		str	r3, [r4, #12]	@ unaligned
 14202 0080 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14203 0082 2061     		str	r0, [r4, #16]	@ unaligned
 14204 0084 6161     		str	r1, [r4, #20]	@ unaligned
 14205 0086 A261     		str	r2, [r4, #24]	@ unaligned
 14206 0088 E361     		str	r3, [r4, #28]	@ unaligned
1873:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14207              		.loc 1 1873 0
 14208 008a 7869     		ldr	r0, [r7, #20]
 14209 008c FFF7FEFF 		bl	strlen
 14210 0090 0346     		mov	r3, r0
 14211 0092 1A46     		mov	r2, r3
 14212 0094 7B69     		ldr	r3, [r7, #20]
 14213 0096 1344     		add	r3, r3, r2
 14214 0098 A34A     		ldr	r2, .L676+16
 14215 009a 1068     		ldr	r0, [r2]	@ unaligned
 14216 009c 1860     		str	r0, [r3]	@ unaligned
 14217 009e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14218 00a0 9A80     		strh	r2, [r3, #4]	@ unaligned
1874:..\src/command_processing.c **** 
1875:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14219              		.loc 1 1875 0
 14220 00a2 7869     		ldr	r0, [r7, #20]
 14221 00a4 FFF7FEFF 		bl	strlen
 14222 00a8 0346     		mov	r3, r0
 14223 00aa 1A46     		mov	r2, r3
 14224 00ac 7B69     		ldr	r3, [r7, #20]
 14225 00ae 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 323


 14226 00b0 9E4A     		ldr	r2, .L676+20
 14227 00b2 1C46     		mov	r4, r3
 14228 00b4 1346     		mov	r3, r2
 14229 00b6 07CB     		ldmia	r3!, {r0, r1, r2}
 14230 00b8 2060     		str	r0, [r4]	@ unaligned
 14231 00ba 6160     		str	r1, [r4, #4]	@ unaligned
 14232 00bc A260     		str	r2, [r4, #8]	@ unaligned
 14233 00be 1B88     		ldrh	r3, [r3]	@ unaligned
 14234 00c0 A381     		strh	r3, [r4, #12]	@ unaligned
1876:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14235              		.loc 1 1876 0
 14236 00c2 D7F88830 		ldr	r3, [r7, #136]
 14237 00c6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14238 00ca 1A46     		mov	r2, r3
 14239 00cc 07F11803 		add	r3, r7, #24
 14240 00d0 9749     		ldr	r1, .L676+24
 14241 00d2 1846     		mov	r0, r3
 14242 00d4 FFF7FEFF 		bl	sprintf
1877:..\src/command_processing.c ****         strcat(info_string, str);
 14243              		.loc 1 1877 0
 14244 00d8 07F11803 		add	r3, r7, #24
 14245 00dc 1946     		mov	r1, r3
 14246 00de 7869     		ldr	r0, [r7, #20]
 14247 00e0 FFF7FEFF 		bl	strcat
1878:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14248              		.loc 1 1878 0
 14249 00e4 D7F88830 		ldr	r3, [r7, #136]
 14250 00e8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14251 00ec 042B     		cmp	r3, #4
 14252 00ee 00F29180 		bhi	.L674
 14253 00f2 01A2     		adr	r2, .L558
 14254 00f4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14255              		.p2align 2
 14256              	.L558:
 14257 00f8 0D010000 		.word	.L557+1
 14258 00fc 3B010000 		.word	.L559+1
 14259 0100 6B010000 		.word	.L560+1
 14260 0104 AD010000 		.word	.L561+1
 14261 0108 ED010000 		.word	.L562+1
 14262              		.p2align 1
 14263              	.L557:
1879:..\src/command_processing.c ****             case SOFTHAND_PRO:
1880:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14264              		.loc 1 1880 0
 14265 010c 7869     		ldr	r0, [r7, #20]
 14266 010e FFF7FEFF 		bl	strlen
 14267 0112 0346     		mov	r3, r0
 14268 0114 1A46     		mov	r2, r3
 14269 0116 7B69     		ldr	r3, [r7, #20]
 14270 0118 1344     		add	r3, r3, r2
 14271 011a 864A     		ldr	r2, .L676+28
 14272 011c 1C46     		mov	r4, r3
 14273 011e 1546     		mov	r5, r2
 14274 0120 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14275 0122 2060     		str	r0, [r4]	@ unaligned
 14276 0124 6160     		str	r1, [r4, #4]	@ unaligned
 14277 0126 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 324


 14278 0128 E360     		str	r3, [r4, #12]	@ unaligned
 14279 012a 2868     		ldr	r0, [r5]	@ unaligned
 14280 012c 2061     		str	r0, [r4, #16]	@ unaligned
 14281 012e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14282 0130 AA79     		ldrb	r2, [r5, #6]
 14283 0132 A382     		strh	r3, [r4, #20]	@ unaligned
 14284 0134 1346     		mov	r3, r2
 14285 0136 A375     		strb	r3, [r4, #22]
1881:..\src/command_processing.c ****                 break;
 14286              		.loc 1 1881 0
 14287 0138 6DE0     		b	.L563
 14288              	.L559:
1882:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1883:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14289              		.loc 1 1883 0
 14290 013a 7869     		ldr	r0, [r7, #20]
 14291 013c FFF7FEFF 		bl	strlen
 14292 0140 0346     		mov	r3, r0
 14293 0142 1A46     		mov	r2, r3
 14294 0144 7B69     		ldr	r3, [r7, #20]
 14295 0146 1344     		add	r3, r3, r2
 14296 0148 7B4A     		ldr	r2, .L676+32
 14297 014a 1D46     		mov	r5, r3
 14298 014c 1446     		mov	r4, r2
 14299 014e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14300 0150 2860     		str	r0, [r5]	@ unaligned
 14301 0152 6960     		str	r1, [r5, #4]	@ unaligned
 14302 0154 AA60     		str	r2, [r5, #8]	@ unaligned
 14303 0156 EB60     		str	r3, [r5, #12]	@ unaligned
 14304 0158 03CC     		ldmia	r4!, {r0, r1}
 14305 015a 2861     		str	r0, [r5, #16]	@ unaligned
 14306 015c 6961     		str	r1, [r5, #20]	@ unaligned
 14307 015e 2388     		ldrh	r3, [r4]	@ unaligned
 14308 0160 A278     		ldrb	r2, [r4, #2]
 14309 0162 2B83     		strh	r3, [r5, #24]	@ unaligned
 14310 0164 1346     		mov	r3, r2
 14311 0166 AB76     		strb	r3, [r5, #26]
1884:..\src/command_processing.c ****                 break;
 14312              		.loc 1 1884 0
 14313 0168 55E0     		b	.L563
 14314              	.L560:
1885:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1886:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14315              		.loc 1 1886 0
 14316 016a 7869     		ldr	r0, [r7, #20]
 14317 016c FFF7FEFF 		bl	strlen
 14318 0170 0346     		mov	r3, r0
 14319 0172 1A46     		mov	r2, r3
 14320 0174 7B69     		ldr	r3, [r7, #20]
 14321 0176 1344     		add	r3, r3, r2
 14322 0178 704A     		ldr	r2, .L676+36
 14323 017a 1446     		mov	r4, r2
 14324 017c 9E46     		mov	lr, r3
 14325 017e 04F1200C 		add	ip, r4, #32
 14326              	.L564:
 14327 0182 7546     		mov	r5, lr
 14328 0184 2646     		mov	r6, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 325


 14329 0186 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14330 0188 2860     		str	r0, [r5]	@ unaligned
 14331 018a 6960     		str	r1, [r5, #4]	@ unaligned
 14332 018c AA60     		str	r2, [r5, #8]	@ unaligned
 14333 018e EB60     		str	r3, [r5, #12]	@ unaligned
 14334 0190 1034     		adds	r4, r4, #16
 14335 0192 0EF1100E 		add	lr, lr, #16
 14336 0196 6445     		cmp	r4, ip
 14337 0198 F3D1     		bne	.L564
 14338 019a 7346     		mov	r3, lr
 14339 019c 2246     		mov	r2, r4
 14340 019e 1068     		ldr	r0, [r2]	@ unaligned
 14341 01a0 1860     		str	r0, [r3]	@ unaligned
 14342 01a2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14343 01a4 9279     		ldrb	r2, [r2, #6]
 14344 01a6 9980     		strh	r1, [r3, #4]	@ unaligned
 14345 01a8 9A71     		strb	r2, [r3, #6]
1887:..\src/command_processing.c ****                 break;
 14346              		.loc 1 1887 0
 14347 01aa 34E0     		b	.L563
 14348              	.L561:
1888:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1889:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14349              		.loc 1 1889 0
 14350 01ac 7869     		ldr	r0, [r7, #20]
 14351 01ae FFF7FEFF 		bl	strlen
 14352 01b2 0346     		mov	r3, r0
 14353 01b4 1A46     		mov	r2, r3
 14354 01b6 7B69     		ldr	r3, [r7, #20]
 14355 01b8 1344     		add	r3, r3, r2
 14356 01ba 614A     		ldr	r2, .L676+40
 14357 01bc 1446     		mov	r4, r2
 14358 01be 9E46     		mov	lr, r3
 14359 01c0 04F1200C 		add	ip, r4, #32
 14360              	.L565:
 14361 01c4 7546     		mov	r5, lr
 14362 01c6 2646     		mov	r6, r4
 14363 01c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14364 01ca 2860     		str	r0, [r5]	@ unaligned
 14365 01cc 6960     		str	r1, [r5, #4]	@ unaligned
 14366 01ce AA60     		str	r2, [r5, #8]	@ unaligned
 14367 01d0 EB60     		str	r3, [r5, #12]	@ unaligned
 14368 01d2 1034     		adds	r4, r4, #16
 14369 01d4 0EF1100E 		add	lr, lr, #16
 14370 01d8 6445     		cmp	r4, ip
 14371 01da F3D1     		bne	.L565
 14372 01dc 7246     		mov	r2, lr
 14373 01de 2346     		mov	r3, r4
 14374 01e0 03CB     		ldmia	r3!, {r0, r1}
 14375 01e2 1060     		str	r0, [r2]	@ unaligned
 14376 01e4 5160     		str	r1, [r2, #4]	@ unaligned
 14377 01e6 1B88     		ldrh	r3, [r3]	@ unaligned
 14378 01e8 1381     		strh	r3, [r2, #8]	@ unaligned
1890:..\src/command_processing.c ****                 break;
 14379              		.loc 1 1890 0
 14380 01ea 14E0     		b	.L563
 14381              	.L562:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 326


1891:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
1892:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14382              		.loc 1 1892 0
 14383 01ec 7869     		ldr	r0, [r7, #20]
 14384 01ee FFF7FEFF 		bl	strlen
 14385 01f2 0346     		mov	r3, r0
 14386 01f4 1A46     		mov	r2, r3
 14387 01f6 7B69     		ldr	r3, [r7, #20]
 14388 01f8 1344     		add	r3, r3, r2
 14389 01fa 524A     		ldr	r2, .L676+44
 14390 01fc 1D46     		mov	r5, r3
 14391 01fe 1446     		mov	r4, r2
 14392 0200 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14393 0202 2860     		str	r0, [r5]	@ unaligned
 14394 0204 6960     		str	r1, [r5, #4]	@ unaligned
 14395 0206 AA60     		str	r2, [r5, #8]	@ unaligned
 14396 0208 EB60     		str	r3, [r5, #12]	@ unaligned
 14397 020a 07CC     		ldmia	r4!, {r0, r1, r2}
 14398 020c 2861     		str	r0, [r5, #16]	@ unaligned
 14399 020e 6961     		str	r1, [r5, #20]	@ unaligned
 14400 0210 AA61     		str	r2, [r5, #24]	@ unaligned
1893:..\src/command_processing.c ****                 break;
 14401              		.loc 1 1893 0
 14402 0212 00E0     		b	.L563
 14403              	.L674:
1894:..\src/command_processing.c ****             default:
1895:..\src/command_processing.c ****                 break;
 14404              		.loc 1 1895 0
 14405 0214 00BF     		nop
 14406              	.L563:
1896:..\src/command_processing.c ****         }
1897:..\src/command_processing.c ****         
1898:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14407              		.loc 1 1898 0
 14408 0216 D7F88830 		ldr	r3, [r7, #136]
 14409 021a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14410 021e 002B     		cmp	r3, #0
 14411 0220 02D0     		beq	.L567
 14412 0222 012B     		cmp	r3, #1
 14413 0224 15D0     		beq	.L568
 14414 0226 26E0     		b	.L566
 14415              	.L567:
1899:..\src/command_processing.c ****             case RIGHT_HAND:
1900:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14416              		.loc 1 1900 0
 14417 0228 7869     		ldr	r0, [r7, #20]
 14418 022a FFF7FEFF 		bl	strlen
 14419 022e 0346     		mov	r3, r0
 14420 0230 1A46     		mov	r2, r3
 14421 0232 7B69     		ldr	r3, [r7, #20]
 14422 0234 1344     		add	r3, r3, r2
 14423 0236 444A     		ldr	r2, .L676+48
 14424 0238 1D46     		mov	r5, r3
 14425 023a 1446     		mov	r4, r2
 14426 023c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14427 023e 2860     		str	r0, [r5]	@ unaligned
 14428 0240 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 327


 14429 0242 AA60     		str	r2, [r5, #8]	@ unaligned
 14430 0244 EB60     		str	r3, [r5, #12]	@ unaligned
 14431 0246 2388     		ldrh	r3, [r4]	@ unaligned
 14432 0248 A278     		ldrb	r2, [r4, #2]
 14433 024a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14434 024c 1346     		mov	r3, r2
 14435 024e AB74     		strb	r3, [r5, #18]
1901:..\src/command_processing.c ****                 break;
 14436              		.loc 1 1901 0
 14437 0250 11E0     		b	.L566
 14438              	.L568:
1902:..\src/command_processing.c ****             case LEFT_HAND:
1903:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14439              		.loc 1 1903 0
 14440 0252 7869     		ldr	r0, [r7, #20]
 14441 0254 FFF7FEFF 		bl	strlen
 14442 0258 0346     		mov	r3, r0
 14443 025a 1A46     		mov	r2, r3
 14444 025c 7B69     		ldr	r3, [r7, #20]
 14445 025e 1344     		add	r3, r3, r2
 14446 0260 3A4A     		ldr	r2, .L676+52
 14447 0262 1D46     		mov	r5, r3
 14448 0264 1446     		mov	r4, r2
 14449 0266 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14450 0268 2860     		str	r0, [r5]	@ unaligned
 14451 026a 6960     		str	r1, [r5, #4]	@ unaligned
 14452 026c AA60     		str	r2, [r5, #8]	@ unaligned
 14453 026e EB60     		str	r3, [r5, #12]	@ unaligned
 14454 0270 2388     		ldrh	r3, [r4]	@ unaligned
 14455 0272 2B82     		strh	r3, [r5, #16]	@ unaligned
1904:..\src/command_processing.c ****                 break;
 14456              		.loc 1 1904 0
 14457 0274 00BF     		nop
 14458              	.L566:
1905:..\src/command_processing.c ****         }
1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14459              		.loc 1 1907 0
 14460 0276 D7F88830 		ldr	r3, [r7, #136]
 14461 027a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14462 027e 012B     		cmp	r3, #1
 14463 0280 02D0     		beq	.L570
 14464 0282 022B     		cmp	r3, #2
 14465 0284 11D0     		beq	.L571
 14466 0286 21E0     		b	.L672
 14467              	.L570:
1908:..\src/command_processing.c ****             case MARIA:
1909:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14468              		.loc 1 1909 0
 14469 0288 7869     		ldr	r0, [r7, #20]
 14470 028a FFF7FEFF 		bl	strlen
 14471 028e 0346     		mov	r3, r0
 14472 0290 1A46     		mov	r2, r3
 14473 0292 7B69     		ldr	r3, [r7, #20]
 14474 0294 1344     		add	r3, r3, r2
 14475 0296 2E4A     		ldr	r2, .L676+56
 14476 0298 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 328


 14477 029a 1346     		mov	r3, r2
 14478 029c 07CB     		ldmia	r3!, {r0, r1, r2}
 14479 029e 2060     		str	r0, [r4]	@ unaligned
 14480 02a0 6160     		str	r1, [r4, #4]	@ unaligned
 14481 02a2 A260     		str	r2, [r4, #8]	@ unaligned
 14482 02a4 1B88     		ldrh	r3, [r3]	@ unaligned
 14483 02a6 A381     		strh	r3, [r4, #12]	@ unaligned
1910:..\src/command_processing.c ****                 break;
 14484              		.loc 1 1910 0
 14485 02a8 24E0     		b	.L572
 14486              	.L571:
1911:..\src/command_processing.c ****             case ROZA:
1912:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14487              		.loc 1 1912 0
 14488 02aa 7869     		ldr	r0, [r7, #20]
 14489 02ac FFF7FEFF 		bl	strlen
 14490 02b0 0346     		mov	r3, r0
 14491 02b2 1A46     		mov	r2, r3
 14492 02b4 7B69     		ldr	r3, [r7, #20]
 14493 02b6 1344     		add	r3, r3, r2
 14494 02b8 264A     		ldr	r2, .L676+60
 14495 02ba 1C46     		mov	r4, r3
 14496 02bc 1346     		mov	r3, r2
 14497 02be 07CB     		ldmia	r3!, {r0, r1, r2}
 14498 02c0 2060     		str	r0, [r4]	@ unaligned
 14499 02c2 6160     		str	r1, [r4, #4]	@ unaligned
 14500 02c4 A260     		str	r2, [r4, #8]	@ unaligned
 14501 02c6 1B78     		ldrb	r3, [r3]
 14502 02c8 2373     		strb	r3, [r4, #12]
1913:..\src/command_processing.c ****                 break;
 14503              		.loc 1 1913 0
 14504 02ca 13E0     		b	.L572
 14505              	.L672:
1914:..\src/command_processing.c ****             default:
1915:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14506              		.loc 1 1915 0
 14507 02cc 7869     		ldr	r0, [r7, #20]
 14508 02ce FFF7FEFF 		bl	strlen
 14509 02d2 0346     		mov	r3, r0
 14510 02d4 1A46     		mov	r2, r3
 14511 02d6 7B69     		ldr	r3, [r7, #20]
 14512 02d8 1344     		add	r3, r3, r2
 14513 02da 1F4A     		ldr	r2, .L676+64
 14514 02dc 1D46     		mov	r5, r3
 14515 02de 1446     		mov	r4, r2
 14516 02e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14517 02e2 2860     		str	r0, [r5]	@ unaligned
 14518 02e4 6960     		str	r1, [r5, #4]	@ unaligned
 14519 02e6 AA60     		str	r2, [r5, #8]	@ unaligned
 14520 02e8 EB60     		str	r3, [r5, #12]	@ unaligned
 14521 02ea 2068     		ldr	r0, [r4]	@ unaligned
 14522 02ec 2861     		str	r0, [r5, #16]	@ unaligned
 14523 02ee 2379     		ldrb	r3, [r4, #4]
 14524 02f0 2B75     		strb	r3, [r5, #20]
1916:..\src/command_processing.c ****                 break;
 14525              		.loc 1 1916 0
 14526 02f2 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 329


 14527              	.L572:
1917:..\src/command_processing.c ****         }
1918:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14528              		.loc 1 1918 0
 14529 02f4 7869     		ldr	r0, [r7, #20]
 14530 02f6 FFF7FEFF 		bl	strlen
 14531 02fa 0346     		mov	r3, r0
 14532 02fc 1A46     		mov	r2, r3
 14533 02fe 7B69     		ldr	r3, [r7, #20]
 14534 0300 1344     		add	r3, r3, r2
 14535 0302 064A     		ldr	r2, .L676+4
 14536 0304 1188     		ldrh	r1, [r2]	@ unaligned
 14537 0306 9278     		ldrb	r2, [r2, #2]
 14538 0308 1980     		strh	r1, [r3]	@ unaligned
 14539 030a 9A70     		strb	r2, [r3, #2]
 14540              	.LBB21:
1919:..\src/command_processing.c ****         
1920:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14541              		.loc 1 1920 0
 14542 030c 0023     		movs	r3, #0
 14543 030e 87F89330 		strb	r3, [r7, #147]
 14544 0312 01F0D9B9 		b	.L573
 14545              	.L677:
 14546 0316 00BF     		.align	2
 14547              	.L676:
 14548 0318 00000000 		.word	c_mem
 14549 031c 10110000 		.word	.LC150
 14550 0320 14110000 		.word	.LC151
 14551 0324 28110000 		.word	.LC152
 14552 0328 48110000 		.word	.LC153
 14553 032c 50110000 		.word	.LC154
 14554 0330 60110000 		.word	.LC155
 14555 0334 6C110000 		.word	.LC156
 14556 0338 84110000 		.word	.LC157
 14557 033c A0110000 		.word	.LC158
 14558 0340 C8110000 		.word	.LC159
 14559 0344 F4110000 		.word	.LC160
 14560 0348 10120000 		.word	.LC161
 14561 034c 24120000 		.word	.LC162
 14562 0350 38120000 		.word	.LC163
 14563 0354 48120000 		.word	.LC164
 14564 0358 58120000 		.word	.LC165
 14565              	.L638:
 14566              	.LBB22:
1921:..\src/command_processing.c ****             
1922:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14567              		.loc 1 1922 0
 14568 035c 97F89330 		ldrb	r3, [r7, #147]
 14569 0360 87F88730 		strb	r3, [r7, #135]
1923:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14570              		.loc 1 1923 0
 14571 0364 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14572 0368 1346     		mov	r3, r2
 14573 036a DB00     		lsls	r3, r3, #3
 14574 036c 9B1A     		subs	r3, r3, r2
 14575 036e 1B01     		lsls	r3, r3, #4
 14576 0370 B033     		adds	r3, r3, #176
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 330


 14577 0372 D7F88820 		ldr	r2, [r7, #136]
 14578 0376 1344     		add	r3, r3, r2
 14579 0378 C7F88030 		str	r3, [r7, #128]
1924:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14580              		.loc 1 1924 0
 14581 037c D7F88030 		ldr	r3, [r7, #128]
 14582 0380 93F86030 		ldrb	r3, [r3, #96]
 14583 0384 87F87F30 		strb	r3, [r7, #127]
1925:..\src/command_processing.c ****                   
1926:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14584              		.loc 1 1926 0
 14585 0388 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14586 038c 5A1C     		adds	r2, r3, #1
 14587 038e 07F11803 		add	r3, r7, #24
 14588 0392 AE49     		ldr	r1, .L678
 14589 0394 1846     		mov	r0, r3
 14590 0396 FFF7FEFF 		bl	sprintf
1927:..\src/command_processing.c ****             strcat(info_string, str);
 14591              		.loc 1 1927 0
 14592 039a 07F11803 		add	r3, r7, #24
 14593 039e 1946     		mov	r1, r3
 14594 03a0 7869     		ldr	r0, [r7, #20]
 14595 03a2 FFF7FEFF 		bl	strcat
1928:..\src/command_processing.c ****                         
1929:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14596              		.loc 1 1929 0
 14597 03a6 7869     		ldr	r0, [r7, #20]
 14598 03a8 FFF7FEFF 		bl	strlen
 14599 03ac 0346     		mov	r3, r0
 14600 03ae 1A46     		mov	r2, r3
 14601 03b0 7B69     		ldr	r3, [r7, #20]
 14602 03b2 1344     		add	r3, r3, r2
 14603 03b4 A64A     		ldr	r2, .L678+4
 14604 03b6 1C46     		mov	r4, r3
 14605 03b8 1546     		mov	r5, r2
 14606 03ba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14607 03bc 2060     		str	r0, [r4]	@ unaligned
 14608 03be 6160     		str	r1, [r4, #4]	@ unaligned
 14609 03c0 A260     		str	r2, [r4, #8]	@ unaligned
 14610 03c2 E360     		str	r3, [r4, #12]	@ unaligned
1930:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14611              		.loc 1 1930 0
 14612 03c4 D7F88030 		ldr	r3, [r7, #128]
 14613 03c8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14614 03cc 022B     		cmp	r3, #2
 14615 03ce 10D1     		bne	.L574
1931:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14616              		.loc 1 1931 0
 14617 03d0 7869     		ldr	r0, [r7, #20]
 14618 03d2 FFF7FEFF 		bl	strlen
 14619 03d6 0346     		mov	r3, r0
 14620 03d8 1A46     		mov	r2, r3
 14621 03da 7B69     		ldr	r3, [r7, #20]
 14622 03dc 1344     		add	r3, r3, r2
 14623 03de 9D4A     		ldr	r2, .L678+8
 14624 03e0 1C46     		mov	r4, r3
 14625 03e2 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 331


 14626 03e4 07CB     		ldmia	r3!, {r0, r1, r2}
 14627 03e6 2060     		str	r0, [r4]	@ unaligned
 14628 03e8 6160     		str	r1, [r4, #4]	@ unaligned
 14629 03ea A260     		str	r2, [r4, #8]	@ unaligned
 14630 03ec 1B88     		ldrh	r3, [r3]	@ unaligned
 14631 03ee A381     		strh	r3, [r4, #12]	@ unaligned
 14632 03f0 25E0     		b	.L575
 14633              	.L574:
1932:..\src/command_processing.c ****             else {
1933:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14634              		.loc 1 1933 0
 14635 03f2 D7F88030 		ldr	r3, [r7, #128]
 14636 03f6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14637 03fa 012B     		cmp	r3, #1
 14638 03fc 0FD1     		bne	.L576
1934:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14639              		.loc 1 1934 0
 14640 03fe 7869     		ldr	r0, [r7, #20]
 14641 0400 FFF7FEFF 		bl	strlen
 14642 0404 0346     		mov	r3, r0
 14643 0406 1A46     		mov	r2, r3
 14644 0408 7B69     		ldr	r3, [r7, #20]
 14645 040a 1344     		add	r3, r3, r2
 14646 040c 9249     		ldr	r1, .L678+12
 14647 040e 1A46     		mov	r2, r3
 14648 0410 0B46     		mov	r3, r1
 14649 0412 03CB     		ldmia	r3!, {r0, r1}
 14650 0414 1060     		str	r0, [r2]	@ unaligned
 14651 0416 5160     		str	r1, [r2, #4]	@ unaligned
 14652 0418 1B78     		ldrb	r3, [r3]
 14653 041a 1372     		strb	r3, [r2, #8]
 14654 041c 0FE0     		b	.L575
 14655              	.L576:
1935:..\src/command_processing.c ****                 else
1936:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14656              		.loc 1 1936 0
 14657 041e 7869     		ldr	r0, [r7, #20]
 14658 0420 FFF7FEFF 		bl	strlen
 14659 0424 0346     		mov	r3, r0
 14660 0426 1A46     		mov	r2, r3
 14661 0428 7B69     		ldr	r3, [r7, #20]
 14662 042a 1344     		add	r3, r3, r2
 14663 042c 8B4A     		ldr	r2, .L678+16
 14664 042e 1C46     		mov	r4, r3
 14665 0430 1346     		mov	r3, r2
 14666 0432 07CB     		ldmia	r3!, {r0, r1, r2}
 14667 0434 2060     		str	r0, [r4]	@ unaligned
 14668 0436 6160     		str	r1, [r4, #4]	@ unaligned
 14669 0438 A260     		str	r2, [r4, #8]	@ unaligned
 14670 043a 1B88     		ldrh	r3, [r3]	@ unaligned
 14671 043c A381     		strh	r3, [r4, #12]	@ unaligned
 14672              	.L575:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14673              		.loc 1 1938 0
 14674 043e D7F88030 		ldr	r3, [r7, #128]
 14675 0442 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 332


 14676 0446 022B     		cmp	r3, #2
 14677 0448 13D1     		bne	.L577
1939:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14678              		.loc 1 1939 0
 14679 044a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14680 044e 844A     		ldr	r2, .L678+20
 14681 0450 1B01     		lsls	r3, r3, #4
 14682 0452 1344     		add	r3, r3, r2
 14683 0454 0433     		adds	r3, r3, #4
 14684 0456 1A68     		ldr	r2, [r3]
 14685 0458 07F11803 		add	r3, r7, #24
 14686 045c 8149     		ldr	r1, .L678+24
 14687 045e 1846     		mov	r0, r3
 14688 0460 FFF7FEFF 		bl	sprintf
1940:..\src/command_processing.c ****                 strcat(info_string,str);
 14689              		.loc 1 1940 0
 14690 0464 07F11803 		add	r3, r7, #24
 14691 0468 1946     		mov	r1, r3
 14692 046a 7869     		ldr	r0, [r7, #20]
 14693 046c FFF7FEFF 		bl	strcat
 14694 0470 39E0     		b	.L578
 14695              	.L577:
1941:..\src/command_processing.c ****             }
1942:..\src/command_processing.c ****             else {
1943:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14696              		.loc 1 1943 0
 14697 0472 D7F88030 		ldr	r3, [r7, #128]
 14698 0476 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14699 047a 012B     		cmp	r3, #1
 14700 047c 13D1     		bne	.L579
1944:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14701              		.loc 1 1944 0
 14702 047e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14703 0482 774A     		ldr	r2, .L678+20
 14704 0484 1B01     		lsls	r3, r3, #4
 14705 0486 1344     		add	r3, r3, r2
 14706 0488 0833     		adds	r3, r3, #8
 14707 048a 1A68     		ldr	r2, [r3]
 14708 048c 07F11803 		add	r3, r7, #24
 14709 0490 7449     		ldr	r1, .L678+24
 14710 0492 1846     		mov	r0, r3
 14711 0494 FFF7FEFF 		bl	sprintf
1945:..\src/command_processing.c ****                     strcat(info_string,str);
 14712              		.loc 1 1945 0
 14713 0498 07F11803 		add	r3, r7, #24
 14714 049c 1946     		mov	r1, r3
 14715 049e 7869     		ldr	r0, [r7, #20]
 14716 04a0 FFF7FEFF 		bl	strcat
 14717 04a4 1FE0     		b	.L578
 14718              	.L579:
1946:..\src/command_processing.c ****                 }
1947:..\src/command_processing.c ****                 else {
1948:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14719              		.loc 1 1948 0
 14720 04a6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14721 04aa 6D4A     		ldr	r2, .L678+20
 14722 04ac 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 333


 14723 04ae 1344     		add	r3, r3, r2
 14724 04b0 1968     		ldr	r1, [r3]
 14725 04b2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14726 04b6 D7F88800 		ldr	r0, [r7, #136]
 14727 04ba 1346     		mov	r3, r2
 14728 04bc 5B00     		lsls	r3, r3, #1
 14729 04be 1344     		add	r3, r3, r2
 14730 04c0 1B01     		lsls	r3, r3, #4
 14731 04c2 0344     		add	r3, r3, r0
 14732 04c4 03F29513 		addw	r3, r3, #405
 14733 04c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14734 04ca 41FA03F2 		asr	r2, r1, r3
 14735 04ce 07F11803 		add	r3, r7, #24
 14736 04d2 6449     		ldr	r1, .L678+24
 14737 04d4 1846     		mov	r0, r3
 14738 04d6 FFF7FEFF 		bl	sprintf
1949:..\src/command_processing.c ****                     strcat(info_string,str);
 14739              		.loc 1 1949 0
 14740 04da 07F11803 		add	r3, r7, #24
 14741 04de 1946     		mov	r1, r3
 14742 04e0 7869     		ldr	r0, [r7, #20]
 14743 04e2 FFF7FEFF 		bl	strcat
 14744              	.L578:
1950:..\src/command_processing.c ****                 }
1951:..\src/command_processing.c ****             }
1952:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14745              		.loc 1 1952 0
 14746 04e6 7869     		ldr	r0, [r7, #20]
 14747 04e8 FFF7FEFF 		bl	strlen
 14748 04ec 0346     		mov	r3, r0
 14749 04ee 1A46     		mov	r2, r3
 14750 04f0 7B69     		ldr	r3, [r7, #20]
 14751 04f2 1344     		add	r3, r3, r2
 14752 04f4 5C4A     		ldr	r2, .L678+28
 14753 04f6 1188     		ldrh	r1, [r2]	@ unaligned
 14754 04f8 9278     		ldrb	r2, [r2, #2]
 14755 04fa 1980     		strh	r1, [r3]	@ unaligned
 14756 04fc 9A70     		strb	r2, [r3, #2]
1953:..\src/command_processing.c **** 
1954:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14757              		.loc 1 1954 0
 14758 04fe 07F11803 		add	r3, r7, #24
 14759 0502 5A4A     		ldr	r2, .L678+32
 14760 0504 1C46     		mov	r4, r3
 14761 0506 1346     		mov	r3, r2
 14762 0508 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14763 050a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1955:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14764              		.loc 1 1955 0
 14765 050e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14766 0512 574A     		ldr	r2, .L678+36
 14767 0514 1B01     		lsls	r3, r3, #4
 14768 0516 1344     		add	r3, r3, r2
 14769 0518 0C33     		adds	r3, r3, #12
 14770 051a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14771 051c 03F00103 		and	r3, r3, #1
 14772 0520 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 334


 14773 0522 0FD0     		beq	.L580
1956:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14774              		.loc 1 1956 0
 14775 0524 07F11803 		add	r3, r7, #24
 14776 0528 1846     		mov	r0, r3
 14777 052a FFF7FEFF 		bl	strlen
 14778 052e 0346     		mov	r3, r0
 14779 0530 1A46     		mov	r2, r3
 14780 0532 07F11803 		add	r3, r7, #24
 14781 0536 1344     		add	r3, r3, r2
 14782 0538 4E4A     		ldr	r2, .L678+40
 14783 053a 1068     		ldr	r0, [r2]	@ unaligned
 14784 053c 1860     		str	r0, [r3]	@ unaligned
 14785 053e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14786 0540 9A80     		strh	r2, [r3, #4]	@ unaligned
 14787 0542 0EE0     		b	.L581
 14788              	.L580:
1957:..\src/command_processing.c ****             } else {
1958:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14789              		.loc 1 1958 0
 14790 0544 07F11803 		add	r3, r7, #24
 14791 0548 1846     		mov	r0, r3
 14792 054a FFF7FEFF 		bl	strlen
 14793 054e 0346     		mov	r3, r0
 14794 0550 1A46     		mov	r2, r3
 14795 0552 07F11803 		add	r3, r7, #24
 14796 0556 1344     		add	r3, r3, r2
 14797 0558 474A     		ldr	r2, .L678+44
 14798 055a 1068     		ldr	r0, [r2]	@ unaligned
 14799 055c 1860     		str	r0, [r3]	@ unaligned
 14800 055e 1279     		ldrb	r2, [r2, #4]
 14801 0560 1A71     		strb	r2, [r3, #4]
 14802              	.L581:
1959:..\src/command_processing.c ****             }
1960:..\src/command_processing.c ****             strcat(info_string, str);
 14803              		.loc 1 1960 0
 14804 0562 07F11803 		add	r3, r7, #24
 14805 0566 1946     		mov	r1, r3
 14806 0568 7869     		ldr	r0, [r7, #20]
 14807 056a FFF7FEFF 		bl	strcat
1961:..\src/command_processing.c ****                         
1962:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14808              		.loc 1 1962 0
 14809 056e 7869     		ldr	r0, [r7, #20]
 14810 0570 FFF7FEFF 		bl	strlen
 14811 0574 0346     		mov	r3, r0
 14812 0576 1A46     		mov	r2, r3
 14813 0578 7B69     		ldr	r3, [r7, #20]
 14814 057a 1344     		add	r3, r3, r2
 14815 057c 3F4A     		ldr	r2, .L678+48
 14816 057e 1D46     		mov	r5, r3
 14817 0580 1446     		mov	r4, r2
 14818 0582 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14819 0584 2860     		str	r0, [r5]	@ unaligned
 14820 0586 6960     		str	r1, [r5, #4]	@ unaligned
 14821 0588 AA60     		str	r2, [r5, #8]	@ unaligned
 14822 058a EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 335


 14823 058c 03CC     		ldmia	r4!, {r0, r1}
 14824 058e 2861     		str	r0, [r5, #16]	@ unaligned
 14825 0590 6961     		str	r1, [r5, #20]	@ unaligned
 14826 0592 2388     		ldrh	r3, [r4]	@ unaligned
 14827 0594 A278     		ldrb	r2, [r4, #2]
 14828 0596 2B83     		strh	r3, [r5, #24]	@ unaligned
 14829 0598 1346     		mov	r3, r2
 14830 059a AB76     		strb	r3, [r5, #26]
1963:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14831              		.loc 1 1963 0
 14832 059c D7F88030 		ldr	r3, [r7, #128]
 14833 05a0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14834 05a4 012B     		cmp	r3, #1
 14835 05a6 0CD1     		bne	.L582
1964:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14836              		.loc 1 1964 0
 14837 05a8 7869     		ldr	r0, [r7, #20]
 14838 05aa FFF7FEFF 		bl	strlen
 14839 05ae 0346     		mov	r3, r0
 14840 05b0 1A46     		mov	r2, r3
 14841 05b2 7B69     		ldr	r3, [r7, #20]
 14842 05b4 1344     		add	r3, r3, r2
 14843 05b6 324A     		ldr	r2, .L678+52
 14844 05b8 1068     		ldr	r0, [r2]	@ unaligned
 14845 05ba 1860     		str	r0, [r3]	@ unaligned
 14846 05bc 1279     		ldrb	r2, [r2, #4]
 14847 05be 1A71     		strb	r2, [r3, #4]
 14848 05c0 09E0     		b	.L583
 14849              	.L582:
1965:..\src/command_processing.c ****             else
1966:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14850              		.loc 1 1966 0
 14851 05c2 7869     		ldr	r0, [r7, #20]
 14852 05c4 FFF7FEFF 		bl	strlen
 14853 05c8 0346     		mov	r3, r0
 14854 05ca 1A46     		mov	r2, r3
 14855 05cc 7B69     		ldr	r3, [r7, #20]
 14856 05ce 1344     		add	r3, r3, r2
 14857 05d0 2C4A     		ldr	r2, .L678+56
 14858 05d2 1068     		ldr	r0, [r2]	@ unaligned
 14859 05d4 1860     		str	r0, [r3]	@ unaligned
 14860              	.L583:
1967:..\src/command_processing.c ****             
1968:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14861              		.loc 1 1968 0
 14862 05d6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14863 05da 2B4A     		ldr	r2, .L678+60
 14864 05dc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14865 05de 1A46     		mov	r2, r3
 14866 05e0 07F11803 		add	r3, r7, #24
 14867 05e4 2949     		ldr	r1, .L678+64
 14868 05e6 1846     		mov	r0, r3
 14869 05e8 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****             strcat(info_string, str);
 14870              		.loc 1 1969 0
 14871 05ec 07F11803 		add	r3, r7, #24
 14872 05f0 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 336


 14873 05f2 7869     		ldr	r0, [r7, #20]
 14874 05f4 FFF7FEFF 		bl	strcat
1970:..\src/command_processing.c **** 
1971:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14875              		.loc 1 1971 0
 14876 05f8 7869     		ldr	r0, [r7, #20]
 14877 05fa FFF7FEFF 		bl	strlen
 14878 05fe 0346     		mov	r3, r0
 14879 0600 1A46     		mov	r2, r3
 14880 0602 7B69     		ldr	r3, [r7, #20]
 14881 0604 1344     		add	r3, r3, r2
 14882 0606 224A     		ldr	r2, .L678+68
 14883 0608 1D46     		mov	r5, r3
 14884 060a 1446     		mov	r4, r2
 14885 060c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14886 060e 2860     		str	r0, [r5]	@ unaligned
 14887 0610 6960     		str	r1, [r5, #4]	@ unaligned
 14888 0612 AA60     		str	r2, [r5, #8]	@ unaligned
 14889 0614 EB60     		str	r3, [r5, #12]	@ unaligned
 14890 0616 2068     		ldr	r0, [r4]	@ unaligned
 14891 0618 2861     		str	r0, [r5, #16]	@ unaligned
 14892 061a A388     		ldrh	r3, [r4, #4]	@ unaligned
 14893 061c AB82     		strh	r3, [r5, #20]	@ unaligned
1972:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14894              		.loc 1 1972 0
 14895 061e 7869     		ldr	r0, [r7, #20]
 14896 0620 FFF7FEFF 		bl	strlen
 14897 0624 0346     		mov	r3, r0
 14898 0626 1A46     		mov	r2, r3
 14899 0628 7B69     		ldr	r3, [r7, #20]
 14900 062a 1344     		add	r3, r3, r2
 14901 062c 194A     		ldr	r2, .L678+72
 14902 062e 1C46     		mov	r4, r3
 14903 0630 1346     		mov	r3, r2
 14904 0632 07CB     		ldmia	r3!, {r0, r1, r2}
 14905 0634 2060     		str	r0, [r4]	@ unaligned
 14906 0636 6160     		str	r1, [r4, #4]	@ unaligned
 14907 0638 A260     		str	r2, [r4, #8]	@ unaligned
 14908 063a 1A88     		ldrh	r2, [r3]	@ unaligned
 14909 063c 9B78     		ldrb	r3, [r3, #2]
 14910 063e A281     		strh	r2, [r4, #12]	@ unaligned
 14911 0640 A373     		strb	r3, [r4, #14]
1973:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14912              		.loc 1 1973 0
 14913 0642 0023     		movs	r3, #0
 14914 0644 C7F89430 		str	r3, [r7, #148]
 14915 0648 65E0     		b	.L584
 14916              	.L679:
 14917 064a 00BF     		.align	2
 14918              	.L678:
 14919 064c 70120000 		.word	.LC166
 14920 0650 80120000 		.word	.LC167
 14921 0654 90120000 		.word	.LC168
 14922 0658 A0120000 		.word	.LC169
 14923 065c AC120000 		.word	.LC170
 14924 0660 00000000 		.word	g_refOld
 14925 0664 BC120000 		.word	.LC171
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 337


 14926 0668 10110000 		.word	.LC150
 14927 066c C0120000 		.word	.LC172
 14928 0670 00000000 		.word	g_ref
 14929 0674 D0120000 		.word	.LC173
 14930 0678 D8120000 		.word	.LC174
 14931 067c E0120000 		.word	.LC175
 14932 0680 FC120000 		.word	.LC176
 14933 0684 04130000 		.word	.LC177
 14934 0688 00000000 		.word	dev_pwm_limit
 14935 068c 08130000 		.word	.LC178
 14936 0690 18130000 		.word	.LC179
 14937 0694 30130000 		.word	.LC180
 14938              	.L586:
1974:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14939              		.loc 1 1974 0
 14940 0698 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14941 069c B849     		ldr	r1, .L680
 14942 069e 1346     		mov	r3, r2
 14943 06a0 5B00     		lsls	r3, r3, #1
 14944 06a2 1344     		add	r3, r3, r2
 14945 06a4 9B00     		lsls	r3, r3, #2
 14946 06a6 1344     		add	r3, r3, r2
 14947 06a8 D7F89420 		ldr	r2, [r7, #148]
 14948 06ac 1344     		add	r3, r3, r2
 14949 06ae 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14950 06b2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14951 06b6 D7F88800 		ldr	r0, [r7, #136]
 14952 06ba 1346     		mov	r3, r2
 14953 06bc 5B00     		lsls	r3, r3, #1
 14954 06be 1344     		add	r3, r3, r2
 14955 06c0 1B01     		lsls	r3, r3, #4
 14956 06c2 C218     		adds	r2, r0, r3
 14957 06c4 D7F89430 		ldr	r3, [r7, #148]
 14958 06c8 1344     		add	r3, r3, r2
 14959 06ca 03F29513 		addw	r3, r3, #405
 14960 06ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14961 06d0 41FA03F2 		asr	r2, r1, r3
 14962 06d4 07F11803 		add	r3, r7, #24
 14963 06d8 AA49     		ldr	r1, .L680+4
 14964 06da 1846     		mov	r0, r3
 14965 06dc FFF7FEFF 		bl	sprintf
1975:..\src/command_processing.c ****                 strcat(info_string, str);
 14966              		.loc 1 1975 0
 14967 06e0 07F11803 		add	r3, r7, #24
 14968 06e4 1946     		mov	r1, r3
 14969 06e6 7869     		ldr	r0, [r7, #20]
 14970 06e8 FFF7FEFF 		bl	strcat
1976:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14971              		.loc 1 1976 0
 14972 06ec D7F89430 		ldr	r3, [r7, #148]
 14973 06f0 022B     		cmp	r3, #2
 14974 06f2 0BD0     		beq	.L585
1977:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14975              		.loc 1 1977 0
 14976 06f4 7869     		ldr	r0, [r7, #20]
 14977 06f6 FFF7FEFF 		bl	strlen
 14978 06fa 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 338


 14979 06fc 1A46     		mov	r2, r3
 14980 06fe 7B69     		ldr	r3, [r7, #20]
 14981 0700 1344     		add	r3, r3, r2
 14982 0702 A14A     		ldr	r2, .L680+8
 14983 0704 1188     		ldrh	r1, [r2]	@ unaligned
 14984 0706 9278     		ldrb	r2, [r2, #2]
 14985 0708 1980     		strh	r1, [r3]	@ unaligned
 14986 070a 9A70     		strb	r2, [r3, #2]
 14987              	.L585:
1973:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14988              		.loc 1 1973 0 discriminator 2
 14989 070c D7F89430 		ldr	r3, [r7, #148]
 14990 0710 0133     		adds	r3, r3, #1
 14991 0712 C7F89430 		str	r3, [r7, #148]
 14992              	.L584:
1973:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14993              		.loc 1 1973 0 is_stmt 0 discriminator 1
 14994 0716 D7F89430 		ldr	r3, [r7, #148]
 14995 071a 022B     		cmp	r3, #2
 14996 071c BCDD     		ble	.L586
1978:..\src/command_processing.c ****                 }                
1979:..\src/command_processing.c ****             }
1980:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14997              		.loc 1 1980 0 is_stmt 1
 14998 071e 7869     		ldr	r0, [r7, #20]
 14999 0720 FFF7FEFF 		bl	strlen
 15000 0724 0346     		mov	r3, r0
 15001 0726 1A46     		mov	r2, r3
 15002 0728 7B69     		ldr	r3, [r7, #20]
 15003 072a 1344     		add	r3, r3, r2
 15004 072c 974A     		ldr	r2, .L680+12
 15005 072e 1188     		ldrh	r1, [r2]	@ unaligned
 15006 0730 9278     		ldrb	r2, [r2, #2]
 15007 0732 1980     		strh	r1, [r3]	@ unaligned
 15008 0734 9A70     		strb	r2, [r3, #2]
1981:..\src/command_processing.c ****             
1982:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15009              		.loc 1 1982 0
 15010 0736 D7F88030 		ldr	r3, [r7, #128]
 15011 073a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15012 073e 062B     		cmp	r3, #6
 15013 0740 1AD1     		bne	.L587
1983:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15014              		.loc 1 1983 0
 15015 0742 934B     		ldr	r3, .L680+16
 15016 0744 1A6A     		ldr	r2, [r3, #32]
 15017 0746 924B     		ldr	r3, .L680+16
 15018 0748 5B6A     		ldr	r3, [r3, #36]
 15019 074a 07F11800 		add	r0, r7, #24
 15020 074e 9149     		ldr	r1, .L680+20
 15021 0750 FFF7FEFF 		bl	sprintf
1984:..\src/command_processing.c ****                 strcat(info_string, str);
 15022              		.loc 1 1984 0
 15023 0754 07F11803 		add	r3, r7, #24
 15024 0758 1946     		mov	r1, r3
 15025 075a 7869     		ldr	r0, [r7, #20]
 15026 075c FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 339


1985:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15027              		.loc 1 1985 0
 15028 0760 7869     		ldr	r0, [r7, #20]
 15029 0762 FFF7FEFF 		bl	strlen
 15030 0766 0346     		mov	r3, r0
 15031 0768 1A46     		mov	r2, r3
 15032 076a 7B69     		ldr	r3, [r7, #20]
 15033 076c 1344     		add	r3, r3, r2
 15034 076e 874A     		ldr	r2, .L680+12
 15035 0770 1188     		ldrh	r1, [r2]	@ unaligned
 15036 0772 9278     		ldrb	r2, [r2, #2]
 15037 0774 1980     		strh	r1, [r3]	@ unaligned
 15038 0776 9A70     		strb	r2, [r3, #2]
 15039              	.L587:
1986:..\src/command_processing.c ****             }
1987:..\src/command_processing.c **** 
1988:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15040              		.loc 1 1988 0
 15041 0778 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15042 077c 591C     		adds	r1, r3, #1
 15043 077e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15044 0782 854A     		ldr	r2, .L680+24
 15045 0784 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15046 0788 07F11800 		add	r0, r7, #24
 15047 078c 0A46     		mov	r2, r1
 15048 078e 8349     		ldr	r1, .L680+28
 15049 0790 FFF7FEFF 		bl	sprintf
1989:..\src/command_processing.c ****             strcat(info_string, str);
 15050              		.loc 1 1989 0
 15051 0794 07F11803 		add	r3, r7, #24
 15052 0798 1946     		mov	r1, r3
 15053 079a 7869     		ldr	r0, [r7, #20]
 15054 079c FFF7FEFF 		bl	strcat
1990:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15055              		.loc 1 1990 0
 15056 07a0 7869     		ldr	r0, [r7, #20]
 15057 07a2 FFF7FEFF 		bl	strlen
 15058 07a6 0346     		mov	r3, r0
 15059 07a8 1A46     		mov	r2, r3
 15060 07aa 7B69     		ldr	r3, [r7, #20]
 15061 07ac 1344     		add	r3, r3, r2
 15062 07ae 774A     		ldr	r2, .L680+12
 15063 07b0 1188     		ldrh	r1, [r2]	@ unaligned
 15064 07b2 9278     		ldrb	r2, [r2, #2]
 15065 07b4 1980     		strh	r1, [r3]	@ unaligned
 15066 07b6 9A70     		strb	r2, [r3, #2]
1991:..\src/command_processing.c ****             
1992:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15067              		.loc 1 1992 0
 15068 07b8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15069 07bc 591C     		adds	r1, r3, #1
 15070 07be 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15071 07c2 774A     		ldr	r2, .L680+32
 15072 07c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15073 07c8 07F11800 		add	r0, r7, #24
 15074 07cc 0A46     		mov	r2, r1
 15075 07ce 7549     		ldr	r1, .L680+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 340


 15076 07d0 FFF7FEFF 		bl	sprintf
1993:..\src/command_processing.c ****             strcat(info_string, str);
 15077              		.loc 1 1993 0
 15078 07d4 07F11803 		add	r3, r7, #24
 15079 07d8 1946     		mov	r1, r3
 15080 07da 7869     		ldr	r0, [r7, #20]
 15081 07dc FFF7FEFF 		bl	strcat
1994:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15082              		.loc 1 1994 0
 15083 07e0 7869     		ldr	r0, [r7, #20]
 15084 07e2 FFF7FEFF 		bl	strlen
 15085 07e6 0346     		mov	r3, r0
 15086 07e8 1A46     		mov	r2, r3
 15087 07ea 7B69     		ldr	r3, [r7, #20]
 15088 07ec 1344     		add	r3, r3, r2
 15089 07ee 674A     		ldr	r2, .L680+12
 15090 07f0 1188     		ldrh	r1, [r2]	@ unaligned
 15091 07f2 9278     		ldrb	r2, [r2, #2]
 15092 07f4 1980     		strh	r1, [r3]	@ unaligned
 15093 07f6 9A70     		strb	r2, [r3, #2]
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15094              		.loc 1 1996 0
 15095 07f8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15096 07fc 5C1C     		adds	r4, r3, #1
 15097 07fe 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15098 0802 5F4A     		ldr	r2, .L680
 15099 0804 3421     		movs	r1, #52
 15100 0806 01FB03F3 		mul	r3, r1, r3
 15101 080a 1344     		add	r3, r3, r2
 15102 080c 0C33     		adds	r3, r3, #12
 15103 080e 1B68     		ldr	r3, [r3]
 15104 0810 07F11800 		add	r0, r7, #24
 15105 0814 2246     		mov	r2, r4
 15106 0816 6449     		ldr	r1, .L680+40
 15107 0818 FFF7FEFF 		bl	sprintf
1997:..\src/command_processing.c ****             strcat(info_string, str);
 15108              		.loc 1 1997 0
 15109 081c 07F11803 		add	r3, r7, #24
 15110 0820 1946     		mov	r1, r3
 15111 0822 7869     		ldr	r0, [r7, #20]
 15112 0824 FFF7FEFF 		bl	strcat
1998:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15113              		.loc 1 1998 0
 15114 0828 7869     		ldr	r0, [r7, #20]
 15115 082a FFF7FEFF 		bl	strlen
 15116 082e 0346     		mov	r3, r0
 15117 0830 1A46     		mov	r2, r3
 15118 0832 7B69     		ldr	r3, [r7, #20]
 15119 0834 1344     		add	r3, r3, r2
 15120 0836 554A     		ldr	r2, .L680+12
 15121 0838 1188     		ldrh	r1, [r2]	@ unaligned
 15122 083a 9278     		ldrb	r2, [r2, #2]
 15123 083c 1980     		strh	r1, [r3]	@ unaligned
 15124 083e 9A70     		strb	r2, [r3, #2]
1999:..\src/command_processing.c ****             
2000:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 341


 15125              		.loc 1 2000 0
 15126 0840 D7F88030 		ldr	r3, [r7, #128]
 15127 0844 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15128 0848 012B     		cmp	r3, #1
 15129 084a 23D1     		bne	.L588
2001:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15130              		.loc 1 2001 0
 15131 084c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15132 0850 5C1C     		adds	r4, r3, #1
 15133 0852 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15134 0856 4A4A     		ldr	r2, .L680
 15135 0858 3421     		movs	r1, #52
 15136 085a 01FB03F3 		mul	r3, r1, r3
 15137 085e 1344     		add	r3, r3, r2
 15138 0860 1433     		adds	r3, r3, #20
 15139 0862 1B68     		ldr	r3, [r3]
 15140 0864 07F11800 		add	r0, r7, #24
 15141 0868 2246     		mov	r2, r4
 15142 086a 5049     		ldr	r1, .L680+44
 15143 086c FFF7FEFF 		bl	sprintf
2002:..\src/command_processing.c ****                 strcat(info_string, str);
 15144              		.loc 1 2002 0
 15145 0870 07F11803 		add	r3, r7, #24
 15146 0874 1946     		mov	r1, r3
 15147 0876 7869     		ldr	r0, [r7, #20]
 15148 0878 FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15149              		.loc 1 2003 0
 15150 087c 7869     		ldr	r0, [r7, #20]
 15151 087e FFF7FEFF 		bl	strlen
 15152 0882 0346     		mov	r3, r0
 15153 0884 1A46     		mov	r2, r3
 15154 0886 7B69     		ldr	r3, [r7, #20]
 15155 0888 1344     		add	r3, r3, r2
 15156 088a 404A     		ldr	r2, .L680+12
 15157 088c 1188     		ldrh	r1, [r2]	@ unaligned
 15158 088e 9278     		ldrb	r2, [r2, #2]
 15159 0890 1980     		strh	r1, [r3]	@ unaligned
 15160 0892 9A70     		strb	r2, [r3, #2]
 15161              	.L588:
2004:..\src/command_processing.c ****             }
2005:..\src/command_processing.c ****             
2006:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15162              		.loc 1 2006 0
 15163 0894 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15164 0898 5A1C     		adds	r2, r3, #1
 15165 089a 07F11803 		add	r3, r7, #24
 15166 089e 4449     		ldr	r1, .L680+48
 15167 08a0 1846     		mov	r0, r3
 15168 08a2 FFF7FEFF 		bl	sprintf
2007:..\src/command_processing.c ****             strcat(info_string, str);
 15169              		.loc 1 2007 0
 15170 08a6 07F11803 		add	r3, r7, #24
 15171 08aa 1946     		mov	r1, r3
 15172 08ac 7869     		ldr	r0, [r7, #20]
 15173 08ae FFF7FEFF 		bl	strcat
2008:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 342


2009:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 15174              		.loc 1 2009 0
 15175 08b2 7869     		ldr	r0, [r7, #20]
 15176 08b4 FFF7FEFF 		bl	strlen
 15177 08b8 0346     		mov	r3, r0
 15178 08ba 1A46     		mov	r2, r3
 15179 08bc 7B69     		ldr	r3, [r7, #20]
 15180 08be 1344     		add	r3, r3, r2
 15181 08c0 3C4A     		ldr	r2, .L680+52
 15182 08c2 1D46     		mov	r5, r3
 15183 08c4 1446     		mov	r4, r2
 15184 08c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15185 08c8 2860     		str	r0, [r5]	@ unaligned
 15186 08ca 6960     		str	r1, [r5, #4]	@ unaligned
 15187 08cc AA60     		str	r2, [r5, #8]	@ unaligned
 15188 08ce EB60     		str	r3, [r5, #12]	@ unaligned
 15189 08d0 2378     		ldrb	r3, [r4]
 15190 08d2 2B74     		strb	r3, [r5, #16]
2010:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15191              		.loc 1 2010 0
 15192 08d4 D7F88030 		ldr	r3, [r7, #128]
 15193 08d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15194 08dc 032B     		cmp	r3, #3
 15195 08de 73D0     		beq	.L589
2011:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15196              		.loc 1 2011 0
 15197 08e0 D7F88030 		ldr	r3, [r7, #128]
 15198 08e4 1B68     		ldr	r3, [r3]
 15199 08e6 1846     		mov	r0, r3
 15200 08e8 FFF7FEFF 		bl	__aeabi_i2d
 15201 08ec 4FF00002 		mov	r2, #0
 15202 08f0 314B     		ldr	r3, .L680+56
 15203 08f2 FFF7FEFF 		bl	__aeabi_ddiv
 15204 08f6 0346     		mov	r3, r0
 15205 08f8 0C46     		mov	r4, r1
 15206 08fa 07F11800 		add	r0, r7, #24
 15207 08fe 1A46     		mov	r2, r3
 15208 0900 2346     		mov	r3, r4
 15209 0902 2E49     		ldr	r1, .L680+60
 15210 0904 FFF7FEFF 		bl	sprintf
2012:..\src/command_processing.c ****                 strcat(info_string, str);
 15211              		.loc 1 2012 0
 15212 0908 07F11803 		add	r3, r7, #24
 15213 090c 1946     		mov	r1, r3
 15214 090e 7869     		ldr	r0, [r7, #20]
 15215 0910 FFF7FEFF 		bl	strcat
2013:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15216              		.loc 1 2013 0
 15217 0914 D7F88030 		ldr	r3, [r7, #128]
 15218 0918 5B68     		ldr	r3, [r3, #4]
 15219 091a 1846     		mov	r0, r3
 15220 091c FFF7FEFF 		bl	__aeabi_i2d
 15221 0920 4FF00002 		mov	r2, #0
 15222 0924 244B     		ldr	r3, .L680+56
 15223 0926 FFF7FEFF 		bl	__aeabi_ddiv
 15224 092a 0346     		mov	r3, r0
 15225 092c 0C46     		mov	r4, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 343


 15226 092e 07F11800 		add	r0, r7, #24
 15227 0932 1A46     		mov	r2, r3
 15228 0934 2346     		mov	r3, r4
 15229 0936 2249     		ldr	r1, .L680+64
 15230 0938 FFF7FEFF 		bl	sprintf
2014:..\src/command_processing.c ****                 strcat(info_string, str);
 15231              		.loc 1 2014 0
 15232 093c 07F11803 		add	r3, r7, #24
 15233 0940 1946     		mov	r1, r3
 15234 0942 7869     		ldr	r0, [r7, #20]
 15235 0944 FFF7FEFF 		bl	strcat
2015:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15236              		.loc 1 2015 0
 15237 0948 D7F88030 		ldr	r3, [r7, #128]
 15238 094c 9B68     		ldr	r3, [r3, #8]
 15239 094e 1846     		mov	r0, r3
 15240 0950 FFF7FEFF 		bl	__aeabi_i2d
 15241 0954 4FF00002 		mov	r2, #0
 15242 0958 174B     		ldr	r3, .L680+56
 15243 095a FFF7FEFF 		bl	__aeabi_ddiv
 15244 095e 0346     		mov	r3, r0
 15245 0960 0C46     		mov	r4, r1
 15246 0962 07F11800 		add	r0, r7, #24
 15247 0966 1A46     		mov	r2, r3
 15248 0968 2346     		mov	r3, r4
 15249 096a 1649     		ldr	r1, .L680+68
 15250 096c FFF7FEFF 		bl	sprintf
2016:..\src/command_processing.c ****                 strcat(info_string, str);
 15251              		.loc 1 2016 0
 15252 0970 07F11803 		add	r3, r7, #24
 15253 0974 1946     		mov	r1, r3
 15254 0976 7869     		ldr	r0, [r7, #20]
 15255 0978 FFF7FEFF 		bl	strcat
 15256 097c 72E0     		b	.L590
 15257              	.L681:
 15258 097e 00BF     		.align	2
 15259              	.L680:
 15260 0980 00000000 		.word	g_meas
 15261 0984 40130000 		.word	.LC181
 15262 0988 44130000 		.word	.LC182
 15263 098c 10110000 		.word	.LC150
 15264 0990 00000000 		.word	g_adc_measOld
 15265 0994 48130000 		.word	.LC183
 15266 0998 00000000 		.word	dev_tension
 15267 099c 68130000 		.word	.LC184
 15268 09a0 00000000 		.word	pow_tension
 15269 09a4 88130000 		.word	.LC185
 15270 09a8 B0130000 		.word	.LC186
 15271 09ac C8130000 		.word	.LC187
 15272 09b0 F0130000 		.word	.LC188
 15273 09b4 0C140000 		.word	.LC189
 15274 09b8 0000F040 		.word	1089470464
 15275 09bc 20140000 		.word	.LC190
 15276 09c0 2C140000 		.word	.LC191
 15277 09c4 38140000 		.word	.LC192
 15278              	.L589:
2017:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 344


2018:..\src/command_processing.c ****             else { 
2019:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15279              		.loc 1 2019 0
 15280 09c8 D7F88030 		ldr	r3, [r7, #128]
 15281 09cc 9B69     		ldr	r3, [r3, #24]
 15282 09ce 1846     		mov	r0, r3
 15283 09d0 FFF7FEFF 		bl	__aeabi_i2d
 15284 09d4 4FF00002 		mov	r2, #0
 15285 09d8 CE4B     		ldr	r3, .L682
 15286 09da FFF7FEFF 		bl	__aeabi_ddiv
 15287 09de 0346     		mov	r3, r0
 15288 09e0 0C46     		mov	r4, r1
 15289 09e2 07F11800 		add	r0, r7, #24
 15290 09e6 1A46     		mov	r2, r3
 15291 09e8 2346     		mov	r3, r4
 15292 09ea CB49     		ldr	r1, .L682+4
 15293 09ec FFF7FEFF 		bl	sprintf
2020:..\src/command_processing.c ****                 strcat(info_string, str);
 15294              		.loc 1 2020 0
 15295 09f0 07F11803 		add	r3, r7, #24
 15296 09f4 1946     		mov	r1, r3
 15297 09f6 7869     		ldr	r0, [r7, #20]
 15298 09f8 FFF7FEFF 		bl	strcat
2021:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15299              		.loc 1 2021 0
 15300 09fc D7F88030 		ldr	r3, [r7, #128]
 15301 0a00 DB69     		ldr	r3, [r3, #28]
 15302 0a02 1846     		mov	r0, r3
 15303 0a04 FFF7FEFF 		bl	__aeabi_i2d
 15304 0a08 4FF00002 		mov	r2, #0
 15305 0a0c C14B     		ldr	r3, .L682
 15306 0a0e FFF7FEFF 		bl	__aeabi_ddiv
 15307 0a12 0346     		mov	r3, r0
 15308 0a14 0C46     		mov	r4, r1
 15309 0a16 07F11800 		add	r0, r7, #24
 15310 0a1a 1A46     		mov	r2, r3
 15311 0a1c 2346     		mov	r3, r4
 15312 0a1e BF49     		ldr	r1, .L682+8
 15313 0a20 FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****                 strcat(info_string, str);
 15314              		.loc 1 2022 0
 15315 0a24 07F11803 		add	r3, r7, #24
 15316 0a28 1946     		mov	r1, r3
 15317 0a2a 7869     		ldr	r0, [r7, #20]
 15318 0a2c FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15319              		.loc 1 2023 0
 15320 0a30 D7F88030 		ldr	r3, [r7, #128]
 15321 0a34 1B6A     		ldr	r3, [r3, #32]
 15322 0a36 1846     		mov	r0, r3
 15323 0a38 FFF7FEFF 		bl	__aeabi_i2d
 15324 0a3c 4FF00002 		mov	r2, #0
 15325 0a40 B44B     		ldr	r3, .L682
 15326 0a42 FFF7FEFF 		bl	__aeabi_ddiv
 15327 0a46 0346     		mov	r3, r0
 15328 0a48 0C46     		mov	r4, r1
 15329 0a4a 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 345


 15330 0a4e 1A46     		mov	r2, r3
 15331 0a50 2346     		mov	r3, r4
 15332 0a52 B349     		ldr	r1, .L682+12
 15333 0a54 FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****                 strcat(info_string, str);
 15334              		.loc 1 2024 0
 15335 0a58 07F11803 		add	r3, r7, #24
 15336 0a5c 1946     		mov	r1, r3
 15337 0a5e 7869     		ldr	r0, [r7, #20]
 15338 0a60 FFF7FEFF 		bl	strcat
 15339              	.L590:
2025:..\src/command_processing.c ****             }
2026:..\src/command_processing.c **** 
2027:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15340              		.loc 1 2027 0
 15341 0a64 7869     		ldr	r0, [r7, #20]
 15342 0a66 FFF7FEFF 		bl	strlen
 15343 0a6a 0346     		mov	r3, r0
 15344 0a6c 1A46     		mov	r2, r3
 15345 0a6e 7B69     		ldr	r3, [r7, #20]
 15346 0a70 1344     		add	r3, r3, r2
 15347 0a72 AC4A     		ldr	r2, .L682+16
 15348 0a74 1D46     		mov	r5, r3
 15349 0a76 1446     		mov	r4, r2
 15350 0a78 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15351 0a7a 2860     		str	r0, [r5]	@ unaligned
 15352 0a7c 6960     		str	r1, [r5, #4]	@ unaligned
 15353 0a7e AA60     		str	r2, [r5, #8]	@ unaligned
 15354 0a80 EB60     		str	r3, [r5, #12]	@ unaligned
 15355 0a82 03CC     		ldmia	r4!, {r0, r1}
 15356 0a84 2861     		str	r0, [r5, #16]	@ unaligned
 15357 0a86 6961     		str	r1, [r5, #20]	@ unaligned
 15358 0a88 2378     		ldrb	r3, [r4]
 15359 0a8a 2B76     		strb	r3, [r5, #24]
2028:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15360              		.loc 1 2028 0
 15361 0a8c D7F88030 		ldr	r3, [r7, #128]
 15362 0a90 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15363 0a94 032B     		cmp	r3, #3
 15364 0a96 4ED0     		beq	.L591
2029:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15365              		.loc 1 2029 0
 15366 0a98 D7F88030 		ldr	r3, [r7, #128]
 15367 0a9c DB68     		ldr	r3, [r3, #12]
 15368 0a9e 1846     		mov	r0, r3
 15369 0aa0 FFF7FEFF 		bl	__aeabi_i2d
 15370 0aa4 4FF00002 		mov	r2, #0
 15371 0aa8 9A4B     		ldr	r3, .L682
 15372 0aaa FFF7FEFF 		bl	__aeabi_ddiv
 15373 0aae 0346     		mov	r3, r0
 15374 0ab0 0C46     		mov	r4, r1
 15375 0ab2 07F11800 		add	r0, r7, #24
 15376 0ab6 1A46     		mov	r2, r3
 15377 0ab8 2346     		mov	r3, r4
 15378 0aba 9749     		ldr	r1, .L682+4
 15379 0abc FFF7FEFF 		bl	sprintf
2030:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 346


 15380              		.loc 1 2030 0
 15381 0ac0 07F11803 		add	r3, r7, #24
 15382 0ac4 1946     		mov	r1, r3
 15383 0ac6 7869     		ldr	r0, [r7, #20]
 15384 0ac8 FFF7FEFF 		bl	strcat
2031:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15385              		.loc 1 2031 0
 15386 0acc D7F88030 		ldr	r3, [r7, #128]
 15387 0ad0 1B69     		ldr	r3, [r3, #16]
 15388 0ad2 1846     		mov	r0, r3
 15389 0ad4 FFF7FEFF 		bl	__aeabi_i2d
 15390 0ad8 4FF00002 		mov	r2, #0
 15391 0adc 8D4B     		ldr	r3, .L682
 15392 0ade FFF7FEFF 		bl	__aeabi_ddiv
 15393 0ae2 0346     		mov	r3, r0
 15394 0ae4 0C46     		mov	r4, r1
 15395 0ae6 07F11800 		add	r0, r7, #24
 15396 0aea 1A46     		mov	r2, r3
 15397 0aec 2346     		mov	r3, r4
 15398 0aee 8B49     		ldr	r1, .L682+8
 15399 0af0 FFF7FEFF 		bl	sprintf
2032:..\src/command_processing.c ****                 strcat(info_string, str);
 15400              		.loc 1 2032 0
 15401 0af4 07F11803 		add	r3, r7, #24
 15402 0af8 1946     		mov	r1, r3
 15403 0afa 7869     		ldr	r0, [r7, #20]
 15404 0afc FFF7FEFF 		bl	strcat
2033:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15405              		.loc 1 2033 0
 15406 0b00 D7F88030 		ldr	r3, [r7, #128]
 15407 0b04 5B69     		ldr	r3, [r3, #20]
 15408 0b06 1846     		mov	r0, r3
 15409 0b08 FFF7FEFF 		bl	__aeabi_i2d
 15410 0b0c 4FF00002 		mov	r2, #0
 15411 0b10 804B     		ldr	r3, .L682
 15412 0b12 FFF7FEFF 		bl	__aeabi_ddiv
 15413 0b16 0346     		mov	r3, r0
 15414 0b18 0C46     		mov	r4, r1
 15415 0b1a 07F11800 		add	r0, r7, #24
 15416 0b1e 1A46     		mov	r2, r3
 15417 0b20 2346     		mov	r3, r4
 15418 0b22 7F49     		ldr	r1, .L682+12
 15419 0b24 FFF7FEFF 		bl	sprintf
2034:..\src/command_processing.c ****                 strcat(info_string, str);
 15420              		.loc 1 2034 0
 15421 0b28 07F11803 		add	r3, r7, #24
 15422 0b2c 1946     		mov	r1, r3
 15423 0b2e 7869     		ldr	r0, [r7, #20]
 15424 0b30 FFF7FEFF 		bl	strcat
 15425 0b34 4DE0     		b	.L592
 15426              	.L591:
2035:..\src/command_processing.c **** 
2036:..\src/command_processing.c ****             }
2037:..\src/command_processing.c ****             else {
2038:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15427              		.loc 1 2038 0
 15428 0b36 D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 347


 15429 0b3a 5B6A     		ldr	r3, [r3, #36]
 15430 0b3c 1846     		mov	r0, r3
 15431 0b3e FFF7FEFF 		bl	__aeabi_i2d
 15432 0b42 4FF00002 		mov	r2, #0
 15433 0b46 734B     		ldr	r3, .L682
 15434 0b48 FFF7FEFF 		bl	__aeabi_ddiv
 15435 0b4c 0346     		mov	r3, r0
 15436 0b4e 0C46     		mov	r4, r1
 15437 0b50 07F11800 		add	r0, r7, #24
 15438 0b54 1A46     		mov	r2, r3
 15439 0b56 2346     		mov	r3, r4
 15440 0b58 6F49     		ldr	r1, .L682+4
 15441 0b5a FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****                 strcat(info_string, str);
 15442              		.loc 1 2039 0
 15443 0b5e 07F11803 		add	r3, r7, #24
 15444 0b62 1946     		mov	r1, r3
 15445 0b64 7869     		ldr	r0, [r7, #20]
 15446 0b66 FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15447              		.loc 1 2040 0
 15448 0b6a D7F88030 		ldr	r3, [r7, #128]
 15449 0b6e 9B6A     		ldr	r3, [r3, #40]
 15450 0b70 1846     		mov	r0, r3
 15451 0b72 FFF7FEFF 		bl	__aeabi_i2d
 15452 0b76 4FF00002 		mov	r2, #0
 15453 0b7a 664B     		ldr	r3, .L682
 15454 0b7c FFF7FEFF 		bl	__aeabi_ddiv
 15455 0b80 0346     		mov	r3, r0
 15456 0b82 0C46     		mov	r4, r1
 15457 0b84 07F11800 		add	r0, r7, #24
 15458 0b88 1A46     		mov	r2, r3
 15459 0b8a 2346     		mov	r3, r4
 15460 0b8c 6349     		ldr	r1, .L682+8
 15461 0b8e FFF7FEFF 		bl	sprintf
2041:..\src/command_processing.c ****                 strcat(info_string, str);
 15462              		.loc 1 2041 0
 15463 0b92 07F11803 		add	r3, r7, #24
 15464 0b96 1946     		mov	r1, r3
 15465 0b98 7869     		ldr	r0, [r7, #20]
 15466 0b9a FFF7FEFF 		bl	strcat
2042:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15467              		.loc 1 2042 0
 15468 0b9e D7F88030 		ldr	r3, [r7, #128]
 15469 0ba2 DB6A     		ldr	r3, [r3, #44]
 15470 0ba4 1846     		mov	r0, r3
 15471 0ba6 FFF7FEFF 		bl	__aeabi_i2d
 15472 0baa 4FF00002 		mov	r2, #0
 15473 0bae 594B     		ldr	r3, .L682
 15474 0bb0 FFF7FEFF 		bl	__aeabi_ddiv
 15475 0bb4 0346     		mov	r3, r0
 15476 0bb6 0C46     		mov	r4, r1
 15477 0bb8 07F11800 		add	r0, r7, #24
 15478 0bbc 1A46     		mov	r2, r3
 15479 0bbe 2346     		mov	r3, r4
 15480 0bc0 5749     		ldr	r1, .L682+12
 15481 0bc2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 348


2043:..\src/command_processing.c ****                 strcat(info_string, str);
 15482              		.loc 1 2043 0
 15483 0bc6 07F11803 		add	r3, r7, #24
 15484 0bca 1946     		mov	r1, r3
 15485 0bcc 7869     		ldr	r0, [r7, #20]
 15486 0bce FFF7FEFF 		bl	strcat
 15487              	.L592:
2044:..\src/command_processing.c ****             }
2045:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15488              		.loc 1 2045 0
 15489 0bd2 D7F88030 		ldr	r3, [r7, #128]
 15490 0bd6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15491 0bda 012B     		cmp	r3, #1
 15492 0bdc 14D1     		bne	.L593
2046:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15493              		.loc 1 2046 0
 15494 0bde 7869     		ldr	r0, [r7, #20]
 15495 0be0 FFF7FEFF 		bl	strlen
 15496 0be4 0346     		mov	r3, r0
 15497 0be6 1A46     		mov	r2, r3
 15498 0be8 7B69     		ldr	r3, [r7, #20]
 15499 0bea 1344     		add	r3, r3, r2
 15500 0bec 4E4A     		ldr	r2, .L682+20
 15501 0bee 1D46     		mov	r5, r3
 15502 0bf0 1446     		mov	r4, r2
 15503 0bf2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15504 0bf4 2860     		str	r0, [r5]	@ unaligned
 15505 0bf6 6960     		str	r1, [r5, #4]	@ unaligned
 15506 0bf8 AA60     		str	r2, [r5, #8]	@ unaligned
 15507 0bfa EB60     		str	r3, [r5, #12]	@ unaligned
 15508 0bfc 03CC     		ldmia	r4!, {r0, r1}
 15509 0bfe 2861     		str	r0, [r5, #16]	@ unaligned
 15510 0c00 6961     		str	r1, [r5, #20]	@ unaligned
 15511 0c02 2388     		ldrh	r3, [r4]	@ unaligned
 15512 0c04 2B83     		strh	r3, [r5, #24]	@ unaligned
 15513 0c06 13E0     		b	.L594
 15514              	.L593:
2047:..\src/command_processing.c ****             else
2048:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15515              		.loc 1 2048 0
 15516 0c08 7869     		ldr	r0, [r7, #20]
 15517 0c0a FFF7FEFF 		bl	strlen
 15518 0c0e 0346     		mov	r3, r0
 15519 0c10 1A46     		mov	r2, r3
 15520 0c12 7B69     		ldr	r3, [r7, #20]
 15521 0c14 1344     		add	r3, r3, r2
 15522 0c16 454A     		ldr	r2, .L682+24
 15523 0c18 1D46     		mov	r5, r3
 15524 0c1a 1446     		mov	r4, r2
 15525 0c1c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15526 0c1e 2860     		str	r0, [r5]	@ unaligned
 15527 0c20 6960     		str	r1, [r5, #4]	@ unaligned
 15528 0c22 AA60     		str	r2, [r5, #8]	@ unaligned
 15529 0c24 EB60     		str	r3, [r5, #12]	@ unaligned
 15530 0c26 03CC     		ldmia	r4!, {r0, r1}
 15531 0c28 2861     		str	r0, [r5, #16]	@ unaligned
 15532 0c2a 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 349


 15533 0c2c 2378     		ldrb	r3, [r4]
 15534 0c2e 2B76     		strb	r3, [r5, #24]
 15535              	.L594:
2049:..\src/command_processing.c **** 
2050:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15536              		.loc 1 2050 0
 15537 0c30 D7F88030 		ldr	r3, [r7, #128]
 15538 0c34 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15539 0c38 072B     		cmp	r3, #7
 15540 0c3a 00F2EA80 		bhi	.L595
 15541 0c3e 01A2     		adr	r2, .L597
 15542 0c40 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15543              		.p2align 2
 15544              	.L597:
 15545 0c44 650C0000 		.word	.L596+1
 15546 0c48 890C0000 		.word	.L598+1
 15547 0c4c B10C0000 		.word	.L599+1
 15548 0c50 E30C0000 		.word	.L600+1
 15549 0c54 410D0000 		.word	.L601+1
 15550 0c58 6F0D0000 		.word	.L602+1
 15551 0c5c 9F0D0000 		.word	.L603+1
 15552 0c60 CD0D0000 		.word	.L604+1
 15553              		.p2align 1
 15554              	.L596:
2051:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2052:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15555              		.loc 1 2052 0
 15556 0c64 7869     		ldr	r0, [r7, #20]
 15557 0c66 FFF7FEFF 		bl	strlen
 15558 0c6a 0346     		mov	r3, r0
 15559 0c6c 1A46     		mov	r2, r3
 15560 0c6e 7B69     		ldr	r3, [r7, #20]
 15561 0c70 1344     		add	r3, r3, r2
 15562 0c72 2F4A     		ldr	r2, .L682+28
 15563 0c74 1D46     		mov	r5, r3
 15564 0c76 1446     		mov	r4, r2
 15565 0c78 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15566 0c7a 2860     		str	r0, [r5]	@ unaligned
 15567 0c7c 6960     		str	r1, [r5, #4]	@ unaligned
 15568 0c7e AA60     		str	r2, [r5, #8]	@ unaligned
 15569 0c80 EB60     		str	r3, [r5, #12]	@ unaligned
 15570 0c82 2388     		ldrh	r3, [r4]	@ unaligned
 15571 0c84 2B82     		strh	r3, [r5, #16]	@ unaligned
2053:..\src/command_processing.c ****                     break;
 15572              		.loc 1 2053 0
 15573 0c86 C4E0     		b	.L595
 15574              	.L598:
2054:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2055:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15575              		.loc 1 2055 0
 15576 0c88 7869     		ldr	r0, [r7, #20]
 15577 0c8a FFF7FEFF 		bl	strlen
 15578 0c8e 0346     		mov	r3, r0
 15579 0c90 1A46     		mov	r2, r3
 15580 0c92 7B69     		ldr	r3, [r7, #20]
 15581 0c94 1344     		add	r3, r3, r2
 15582 0c96 274A     		ldr	r2, .L682+32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 350


 15583 0c98 1D46     		mov	r5, r3
 15584 0c9a 1446     		mov	r4, r2
 15585 0c9c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15586 0c9e 2860     		str	r0, [r5]	@ unaligned
 15587 0ca0 6960     		str	r1, [r5, #4]	@ unaligned
 15588 0ca2 AA60     		str	r2, [r5, #8]	@ unaligned
 15589 0ca4 EB60     		str	r3, [r5, #12]	@ unaligned
 15590 0ca6 2068     		ldr	r0, [r4]	@ unaligned
 15591 0ca8 2861     		str	r0, [r5, #16]	@ unaligned
 15592 0caa 2379     		ldrb	r3, [r4, #4]
 15593 0cac 2B75     		strb	r3, [r5, #20]
2056:..\src/command_processing.c ****                     break;
 15594              		.loc 1 2056 0
 15595 0cae B0E0     		b	.L595
 15596              	.L599:
2057:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2058:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15597              		.loc 1 2058 0
 15598 0cb0 7869     		ldr	r0, [r7, #20]
 15599 0cb2 FFF7FEFF 		bl	strlen
 15600 0cb6 0346     		mov	r3, r0
 15601 0cb8 1A46     		mov	r2, r3
 15602 0cba 7B69     		ldr	r3, [r7, #20]
 15603 0cbc 1344     		add	r3, r3, r2
 15604 0cbe 1E4A     		ldr	r2, .L682+36
 15605 0cc0 1D46     		mov	r5, r3
 15606 0cc2 1446     		mov	r4, r2
 15607 0cc4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15608 0cc6 2860     		str	r0, [r5]	@ unaligned
 15609 0cc8 6960     		str	r1, [r5, #4]	@ unaligned
 15610 0cca AA60     		str	r2, [r5, #8]	@ unaligned
 15611 0ccc EB60     		str	r3, [r5, #12]	@ unaligned
 15612 0cce 07CC     		ldmia	r4!, {r0, r1, r2}
 15613 0cd0 2861     		str	r0, [r5, #16]	@ unaligned
 15614 0cd2 6961     		str	r1, [r5, #20]	@ unaligned
 15615 0cd4 AA61     		str	r2, [r5, #24]	@ unaligned
 15616 0cd6 2388     		ldrh	r3, [r4]	@ unaligned
 15617 0cd8 A278     		ldrb	r2, [r4, #2]
 15618 0cda AB83     		strh	r3, [r5, #28]	@ unaligned
 15619 0cdc 1346     		mov	r3, r2
 15620 0cde AB77     		strb	r3, [r5, #30]
2059:..\src/command_processing.c ****                     break;
 15621              		.loc 1 2059 0
 15622 0ce0 97E0     		b	.L595
 15623              	.L600:
2060:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2061:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15624              		.loc 1 2061 0
 15625 0ce2 7869     		ldr	r0, [r7, #20]
 15626 0ce4 FFF7FEFF 		bl	strlen
 15627 0ce8 0346     		mov	r3, r0
 15628 0cea 1A46     		mov	r2, r3
 15629 0cec 7B69     		ldr	r3, [r7, #20]
 15630 0cee 1344     		add	r3, r3, r2
 15631 0cf0 124A     		ldr	r2, .L682+40
 15632 0cf2 1D46     		mov	r5, r3
 15633 0cf4 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 351


 15634 0cf6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15635 0cf8 2860     		str	r0, [r5]	@ unaligned
 15636 0cfa 6960     		str	r1, [r5, #4]	@ unaligned
 15637 0cfc AA60     		str	r2, [r5, #8]	@ unaligned
 15638 0cfe EB60     		str	r3, [r5, #12]	@ unaligned
 15639 0d00 03CC     		ldmia	r4!, {r0, r1}
 15640 0d02 2861     		str	r0, [r5, #16]	@ unaligned
 15641 0d04 6961     		str	r1, [r5, #20]	@ unaligned
 15642 0d06 2388     		ldrh	r3, [r4]	@ unaligned
 15643 0d08 A278     		ldrb	r2, [r4, #2]
 15644 0d0a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15645 0d0c 1346     		mov	r3, r2
 15646 0d0e AB76     		strb	r3, [r5, #26]
2062:..\src/command_processing.c ****                     break;
 15647              		.loc 1 2062 0
 15648 0d10 7FE0     		b	.L595
 15649              	.L683:
 15650 0d12 00BF     		.align	2
 15651              	.L682:
 15652 0d14 0000F040 		.word	1089470464
 15653 0d18 20140000 		.word	.LC190
 15654 0d1c 2C140000 		.word	.LC191
 15655 0d20 38140000 		.word	.LC192
 15656 0d24 44140000 		.word	.LC193
 15657 0d28 60140000 		.word	.LC194
 15658 0d2c 7C140000 		.word	.LC195
 15659 0d30 98140000 		.word	.LC196
 15660 0d34 AC140000 		.word	.LC197
 15661 0d38 C4140000 		.word	.LC198
 15662 0d3c E4140000 		.word	.LC199
 15663              	.L601:
2063:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2064:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15664              		.loc 1 2064 0
 15665 0d40 7869     		ldr	r0, [r7, #20]
 15666 0d42 FFF7FEFF 		bl	strlen
 15667 0d46 0346     		mov	r3, r0
 15668 0d48 1A46     		mov	r2, r3
 15669 0d4a 7B69     		ldr	r3, [r7, #20]
 15670 0d4c 1344     		add	r3, r3, r2
 15671 0d4e A44A     		ldr	r2, .L684
 15672 0d50 1C46     		mov	r4, r3
 15673 0d52 1546     		mov	r5, r2
 15674 0d54 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15675 0d56 2060     		str	r0, [r4]	@ unaligned
 15676 0d58 6160     		str	r1, [r4, #4]	@ unaligned
 15677 0d5a A260     		str	r2, [r4, #8]	@ unaligned
 15678 0d5c E360     		str	r3, [r4, #12]	@ unaligned
 15679 0d5e 2868     		ldr	r0, [r5]	@ unaligned
 15680 0d60 2061     		str	r0, [r4, #16]	@ unaligned
 15681 0d62 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15682 0d64 AA79     		ldrb	r2, [r5, #6]
 15683 0d66 A382     		strh	r3, [r4, #20]	@ unaligned
 15684 0d68 1346     		mov	r3, r2
 15685 0d6a A375     		strb	r3, [r4, #22]
2065:..\src/command_processing.c ****                     break;
 15686              		.loc 1 2065 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 352


 15687 0d6c 51E0     		b	.L595
 15688              	.L602:
2066:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2067:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15689              		.loc 1 2067 0
 15690 0d6e 7869     		ldr	r0, [r7, #20]
 15691 0d70 FFF7FEFF 		bl	strlen
 15692 0d74 0346     		mov	r3, r0
 15693 0d76 1A46     		mov	r2, r3
 15694 0d78 7B69     		ldr	r3, [r7, #20]
 15695 0d7a 1344     		add	r3, r3, r2
 15696 0d7c 994A     		ldr	r2, .L684+4
 15697 0d7e 1D46     		mov	r5, r3
 15698 0d80 1446     		mov	r4, r2
 15699 0d82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15700 0d84 2860     		str	r0, [r5]	@ unaligned
 15701 0d86 6960     		str	r1, [r5, #4]	@ unaligned
 15702 0d88 AA60     		str	r2, [r5, #8]	@ unaligned
 15703 0d8a EB60     		str	r3, [r5, #12]	@ unaligned
 15704 0d8c 03CC     		ldmia	r4!, {r0, r1}
 15705 0d8e 2861     		str	r0, [r5, #16]	@ unaligned
 15706 0d90 6961     		str	r1, [r5, #20]	@ unaligned
 15707 0d92 2388     		ldrh	r3, [r4]	@ unaligned
 15708 0d94 A278     		ldrb	r2, [r4, #2]
 15709 0d96 2B83     		strh	r3, [r5, #24]	@ unaligned
 15710 0d98 1346     		mov	r3, r2
 15711 0d9a AB76     		strb	r3, [r5, #26]
2068:..\src/command_processing.c ****                     break;
 15712              		.loc 1 2068 0
 15713 0d9c 39E0     		b	.L595
 15714              	.L603:
2069:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2070:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15715              		.loc 1 2070 0
 15716 0d9e 7869     		ldr	r0, [r7, #20]
 15717 0da0 FFF7FEFF 		bl	strlen
 15718 0da4 0346     		mov	r3, r0
 15719 0da6 1A46     		mov	r2, r3
 15720 0da8 7B69     		ldr	r3, [r7, #20]
 15721 0daa 1344     		add	r3, r3, r2
 15722 0dac 8E4A     		ldr	r2, .L684+8
 15723 0dae 1C46     		mov	r4, r3
 15724 0db0 1546     		mov	r5, r2
 15725 0db2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15726 0db4 2060     		str	r0, [r4]	@ unaligned
 15727 0db6 6160     		str	r1, [r4, #4]	@ unaligned
 15728 0db8 A260     		str	r2, [r4, #8]	@ unaligned
 15729 0dba E360     		str	r3, [r4, #12]	@ unaligned
 15730 0dbc 2868     		ldr	r0, [r5]	@ unaligned
 15731 0dbe 2061     		str	r0, [r4, #16]	@ unaligned
 15732 0dc0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15733 0dc2 AA79     		ldrb	r2, [r5, #6]
 15734 0dc4 A382     		strh	r3, [r4, #20]	@ unaligned
 15735 0dc6 1346     		mov	r3, r2
 15736 0dc8 A375     		strb	r3, [r4, #22]
2071:..\src/command_processing.c ****                     break;
 15737              		.loc 1 2071 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 353


 15738 0dca 22E0     		b	.L595
 15739              	.L604:
2072:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2073:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15740              		.loc 1 2073 0
 15741 0dcc 7869     		ldr	r0, [r7, #20]
 15742 0dce FFF7FEFF 		bl	strlen
 15743 0dd2 0346     		mov	r3, r0
 15744 0dd4 1A46     		mov	r2, r3
 15745 0dd6 7B69     		ldr	r3, [r7, #20]
 15746 0dd8 1344     		add	r3, r3, r2
 15747 0dda 844A     		ldr	r2, .L684+12
 15748 0ddc 1546     		mov	r5, r2
 15749 0dde 9E46     		mov	lr, r3
 15750 0de0 05F1200C 		add	ip, r5, #32
 15751              	.L605:
 15752 0de4 7446     		mov	r4, lr
 15753 0de6 2E46     		mov	r6, r5
 15754 0de8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15755 0dea 2060     		str	r0, [r4]	@ unaligned
 15756 0dec 6160     		str	r1, [r4, #4]	@ unaligned
 15757 0dee A260     		str	r2, [r4, #8]	@ unaligned
 15758 0df0 E360     		str	r3, [r4, #12]	@ unaligned
 15759 0df2 1035     		adds	r5, r5, #16
 15760 0df4 0EF1100E 		add	lr, lr, #16
 15761 0df8 6545     		cmp	r5, ip
 15762 0dfa F3D1     		bne	.L605
 15763 0dfc 7446     		mov	r4, lr
 15764 0dfe 2B46     		mov	r3, r5
 15765 0e00 07CB     		ldmia	r3!, {r0, r1, r2}
 15766 0e02 2060     		str	r0, [r4]	@ unaligned
 15767 0e04 6160     		str	r1, [r4, #4]	@ unaligned
 15768 0e06 A260     		str	r2, [r4, #8]	@ unaligned
 15769 0e08 1A88     		ldrh	r2, [r3]	@ unaligned
 15770 0e0a 9B78     		ldrb	r3, [r3, #2]
 15771 0e0c A281     		strh	r2, [r4, #12]	@ unaligned
 15772 0e0e A373     		strb	r3, [r4, #14]
2074:..\src/command_processing.c ****                     break;
 15773              		.loc 1 2074 0
 15774 0e10 00BF     		nop
 15775              	.L595:
2075:..\src/command_processing.c ****             }
2076:..\src/command_processing.c **** 
2077:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15776              		.loc 1 2077 0
 15777 0e12 D7F88030 		ldr	r3, [r7, #128]
 15778 0e16 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15779 0e1a 032B     		cmp	r3, #3
 15780 0e1c 63D8     		bhi	.L675
 15781 0e1e 01A2     		adr	r2, .L608
 15782 0e20 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15783              		.p2align 2
 15784              	.L608:
 15785 0e24 350E0000 		.word	.L607+1
 15786 0e28 5F0E0000 		.word	.L609+1
 15787 0e2c 830E0000 		.word	.L610+1
 15788 0e30 A90E0000 		.word	.L611+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 354


 15789              		.p2align 1
 15790              	.L607:
2078:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2079:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15791              		.loc 1 2079 0
 15792 0e34 7869     		ldr	r0, [r7, #20]
 15793 0e36 FFF7FEFF 		bl	strlen
 15794 0e3a 0346     		mov	r3, r0
 15795 0e3c 1A46     		mov	r2, r3
 15796 0e3e 7B69     		ldr	r3, [r7, #20]
 15797 0e40 1344     		add	r3, r3, r2
 15798 0e42 6B4A     		ldr	r2, .L684+16
 15799 0e44 1D46     		mov	r5, r3
 15800 0e46 1446     		mov	r4, r2
 15801 0e48 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15802 0e4a 2860     		str	r0, [r5]	@ unaligned
 15803 0e4c 6960     		str	r1, [r5, #4]	@ unaligned
 15804 0e4e AA60     		str	r2, [r5, #8]	@ unaligned
 15805 0e50 EB60     		str	r3, [r5, #12]	@ unaligned
 15806 0e52 03CC     		ldmia	r4!, {r0, r1}
 15807 0e54 2861     		str	r0, [r5, #16]	@ unaligned
 15808 0e56 6961     		str	r1, [r5, #20]	@ unaligned
 15809 0e58 2378     		ldrb	r3, [r4]
 15810 0e5a 2B76     		strb	r3, [r5, #24]
2080:..\src/command_processing.c ****                     break;
 15811              		.loc 1 2080 0
 15812 0e5c 44E0     		b	.L612
 15813              	.L609:
2081:..\src/command_processing.c ****                 case CONTROL_PWM:
2082:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15814              		.loc 1 2082 0
 15815 0e5e 7869     		ldr	r0, [r7, #20]
 15816 0e60 FFF7FEFF 		bl	strlen
 15817 0e64 0346     		mov	r3, r0
 15818 0e66 1A46     		mov	r2, r3
 15819 0e68 7B69     		ldr	r3, [r7, #20]
 15820 0e6a 1344     		add	r3, r3, r2
 15821 0e6c 614A     		ldr	r2, .L684+20
 15822 0e6e 1D46     		mov	r5, r3
 15823 0e70 1446     		mov	r4, r2
 15824 0e72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15825 0e74 2860     		str	r0, [r5]	@ unaligned
 15826 0e76 6960     		str	r1, [r5, #4]	@ unaligned
 15827 0e78 AA60     		str	r2, [r5, #8]	@ unaligned
 15828 0e7a EB60     		str	r3, [r5, #12]	@ unaligned
 15829 0e7c 2068     		ldr	r0, [r4]	@ unaligned
 15830 0e7e 2861     		str	r0, [r5, #16]	@ unaligned
2083:..\src/command_processing.c ****                     break;
 15831              		.loc 1 2083 0
 15832 0e80 32E0     		b	.L612
 15833              	.L610:
2084:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2085:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15834              		.loc 1 2085 0
 15835 0e82 7869     		ldr	r0, [r7, #20]
 15836 0e84 FFF7FEFF 		bl	strlen
 15837 0e88 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 355


 15838 0e8a 1A46     		mov	r2, r3
 15839 0e8c 7B69     		ldr	r3, [r7, #20]
 15840 0e8e 1344     		add	r3, r3, r2
 15841 0e90 594A     		ldr	r2, .L684+24
 15842 0e92 1D46     		mov	r5, r3
 15843 0e94 1446     		mov	r4, r2
 15844 0e96 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15845 0e98 2860     		str	r0, [r5]	@ unaligned
 15846 0e9a 6960     		str	r1, [r5, #4]	@ unaligned
 15847 0e9c AA60     		str	r2, [r5, #8]	@ unaligned
 15848 0e9e EB60     		str	r3, [r5, #12]	@ unaligned
 15849 0ea0 03CC     		ldmia	r4!, {r0, r1}
 15850 0ea2 2861     		str	r0, [r5, #16]	@ unaligned
 15851 0ea4 6961     		str	r1, [r5, #20]	@ unaligned
2086:..\src/command_processing.c ****                     break;
 15852              		.loc 1 2086 0
 15853 0ea6 1FE0     		b	.L612
 15854              	.L611:
2087:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2088:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15855              		.loc 1 2088 0
 15856 0ea8 7869     		ldr	r0, [r7, #20]
 15857 0eaa FFF7FEFF 		bl	strlen
 15858 0eae 0346     		mov	r3, r0
 15859 0eb0 1A46     		mov	r2, r3
 15860 0eb2 7B69     		ldr	r3, [r7, #20]
 15861 0eb4 1344     		add	r3, r3, r2
 15862 0eb6 514A     		ldr	r2, .L684+28
 15863 0eb8 1446     		mov	r4, r2
 15864 0eba 9E46     		mov	lr, r3
 15865 0ebc 04F1200C 		add	ip, r4, #32
 15866              	.L613:
 15867 0ec0 7546     		mov	r5, lr
 15868 0ec2 2646     		mov	r6, r4
 15869 0ec4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15870 0ec6 2860     		str	r0, [r5]	@ unaligned
 15871 0ec8 6960     		str	r1, [r5, #4]	@ unaligned
 15872 0eca AA60     		str	r2, [r5, #8]	@ unaligned
 15873 0ecc EB60     		str	r3, [r5, #12]	@ unaligned
 15874 0ece 1034     		adds	r4, r4, #16
 15875 0ed0 0EF1100E 		add	lr, lr, #16
 15876 0ed4 6445     		cmp	r4, ip
 15877 0ed6 F3D1     		bne	.L613
 15878 0ed8 7346     		mov	r3, lr
 15879 0eda 2246     		mov	r2, r4
 15880 0edc 1068     		ldr	r0, [r2]	@ unaligned
 15881 0ede 1860     		str	r0, [r3]	@ unaligned
 15882 0ee0 1279     		ldrb	r2, [r2, #4]
 15883 0ee2 1A71     		strb	r2, [r3, #4]
2089:..\src/command_processing.c ****                     break;
 15884              		.loc 1 2089 0
 15885 0ee4 00E0     		b	.L612
 15886              	.L675:
2090:..\src/command_processing.c ****                 default:
2091:..\src/command_processing.c ****                     break;
 15887              		.loc 1 2091 0
 15888 0ee6 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 356


 15889              	.L612:
2092:..\src/command_processing.c ****             }
2093:..\src/command_processing.c **** 
2094:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15890              		.loc 1 2094 0
 15891 0ee8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15892 0eec D7F88810 		ldr	r1, [r7, #136]
 15893 0ef0 1346     		mov	r3, r2
 15894 0ef2 5B00     		lsls	r3, r3, #1
 15895 0ef4 1344     		add	r3, r3, r2
 15896 0ef6 1B01     		lsls	r3, r3, #4
 15897 0ef8 0B44     		add	r3, r3, r1
 15898 0efa 03F5D873 		add	r3, r3, #432
 15899 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15900 0f00 002B     		cmp	r3, #0
 15901 0f02 1CD0     		beq	.L614
2095:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15902              		.loc 1 2095 0
 15903 0f04 7869     		ldr	r0, [r7, #20]
 15904 0f06 FFF7FEFF 		bl	strlen
 15905 0f0a 0346     		mov	r3, r0
 15906 0f0c 1A46     		mov	r2, r3
 15907 0f0e 7B69     		ldr	r3, [r7, #20]
 15908 0f10 1344     		add	r3, r3, r2
 15909 0f12 3B4A     		ldr	r2, .L684+32
 15910 0f14 1446     		mov	r4, r2
 15911 0f16 9E46     		mov	lr, r3
 15912 0f18 04F1200C 		add	ip, r4, #32
 15913              	.L615:
 15914 0f1c 7546     		mov	r5, lr
 15915 0f1e 2646     		mov	r6, r4
 15916 0f20 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15917 0f22 2860     		str	r0, [r5]	@ unaligned
 15918 0f24 6960     		str	r1, [r5, #4]	@ unaligned
 15919 0f26 AA60     		str	r2, [r5, #8]	@ unaligned
 15920 0f28 EB60     		str	r3, [r5, #12]	@ unaligned
 15921 0f2a 1034     		adds	r4, r4, #16
 15922 0f2c 0EF1100E 		add	lr, lr, #16
 15923 0f30 6445     		cmp	r4, ip
 15924 0f32 F3D1     		bne	.L615
 15925 0f34 7346     		mov	r3, lr
 15926 0f36 2246     		mov	r2, r4
 15927 0f38 1278     		ldrb	r2, [r2]
 15928 0f3a 1A70     		strb	r2, [r3]
 15929 0f3c 13E0     		b	.L616
 15930              	.L614:
2096:..\src/command_processing.c ****             else
2097:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15931              		.loc 1 2097 0
 15932 0f3e 7869     		ldr	r0, [r7, #20]
 15933 0f40 FFF7FEFF 		bl	strlen
 15934 0f44 0346     		mov	r3, r0
 15935 0f46 1A46     		mov	r2, r3
 15936 0f48 7B69     		ldr	r3, [r7, #20]
 15937 0f4a 1344     		add	r3, r3, r2
 15938 0f4c 2D4A     		ldr	r2, .L684+36
 15939 0f4e 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 357


 15940 0f50 1546     		mov	r5, r2
 15941 0f52 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15942 0f54 2060     		str	r0, [r4]	@ unaligned
 15943 0f56 6160     		str	r1, [r4, #4]	@ unaligned
 15944 0f58 A260     		str	r2, [r4, #8]	@ unaligned
 15945 0f5a E360     		str	r3, [r4, #12]	@ unaligned
 15946 0f5c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15947 0f5e 2061     		str	r0, [r4, #16]	@ unaligned
 15948 0f60 6161     		str	r1, [r4, #20]	@ unaligned
 15949 0f62 A261     		str	r2, [r4, #24]	@ unaligned
 15950 0f64 E361     		str	r3, [r4, #28]	@ unaligned
 15951              	.L616:
2098:..\src/command_processing.c **** 
2099:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15952              		.loc 1 2099 0
 15953 0f66 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15954 0f6a D7F88810 		ldr	r1, [r7, #136]
 15955 0f6e 1346     		mov	r3, r2
 15956 0f70 5B00     		lsls	r3, r3, #1
 15957 0f72 1344     		add	r3, r3, r2
 15958 0f74 1B01     		lsls	r3, r3, #4
 15959 0f76 0B44     		add	r3, r3, r1
 15960 0f78 03F5DA73 		add	r3, r3, #436
 15961 0f7c 93F90030 		ldrsb	r3, [r3]
 15962 0f80 1A46     		mov	r2, r3
 15963 0f82 07F11803 		add	r3, r7, #24
 15964 0f86 2049     		ldr	r1, .L684+40
 15965 0f88 1846     		mov	r0, r3
 15966 0f8a FFF7FEFF 		bl	sprintf
2100:..\src/command_processing.c ****             strcat(info_string, str);
 15967              		.loc 1 2100 0
 15968 0f8e 07F11803 		add	r3, r7, #24
 15969 0f92 1946     		mov	r1, r3
 15970 0f94 7869     		ldr	r0, [r7, #20]
 15971 0f96 FFF7FEFF 		bl	strcat
2101:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2102:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 15972              		.loc 1 2102 0
 15973 0f9a 7869     		ldr	r0, [r7, #20]
 15974 0f9c FFF7FEFF 		bl	strlen
 15975 0fa0 0346     		mov	r3, r0
 15976 0fa2 1A46     		mov	r2, r3
 15977 0fa4 7B69     		ldr	r3, [r7, #20]
 15978 0fa6 1344     		add	r3, r3, r2
 15979 0fa8 184A     		ldr	r2, .L684+44
 15980 0faa 1446     		mov	r4, r2
 15981 0fac 9E46     		mov	lr, r3
 15982 0fae 04F1200C 		add	ip, r4, #32
 15983              	.L617:
 15984 0fb2 7546     		mov	r5, lr
 15985 0fb4 2646     		mov	r6, r4
 15986 0fb6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15987 0fb8 2860     		str	r0, [r5]	@ unaligned
 15988 0fba 6960     		str	r1, [r5, #4]	@ unaligned
 15989 0fbc AA60     		str	r2, [r5, #8]	@ unaligned
 15990 0fbe EB60     		str	r3, [r5, #12]	@ unaligned
 15991 0fc0 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 358


 15992 0fc2 0EF1100E 		add	lr, lr, #16
 15993 0fc6 6445     		cmp	r4, ip
 15994 0fc8 F3D1     		bne	.L617
 15995 0fca 7246     		mov	r2, lr
 15996 0fcc 2346     		mov	r3, r4
 15997 0fce 03CB     		ldmia	r3!, {r0, r1}
 15998 0fd0 1060     		str	r0, [r2]	@ unaligned
 15999 0fd2 5160     		str	r1, [r2, #4]	@ unaligned
 16000 0fd4 1B78     		ldrb	r3, [r3]
 16001 0fd6 1372     		strb	r3, [r2, #8]
2103:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16002              		.loc 1 2103 0
 16003 0fd8 0023     		movs	r3, #0
 16004 0fda C7F89430 		str	r3, [r7, #148]
 16005 0fde 48E0     		b	.L618
 16006              	.L685:
 16007              		.align	2
 16008              	.L684:
 16009 0fe0 00150000 		.word	.LC200
 16010 0fe4 18150000 		.word	.LC201
 16011 0fe8 34150000 		.word	.LC202
 16012 0fec 4C150000 		.word	.LC203
 16013 0ff0 7C150000 		.word	.LC204
 16014 0ff4 98150000 		.word	.LC205
 16015 0ff8 AC150000 		.word	.LC206
 16016 0ffc C4150000 		.word	.LC207
 16017 1000 EC150000 		.word	.LC208
 16018 1004 10160000 		.word	.LC209
 16019 1008 30160000 		.word	.LC210
 16020 100c 4C160000 		.word	.LC211
 16021              	.L620:
2104:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16022              		.loc 1 2104 0
 16023 1010 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16024 1014 D7F88810 		ldr	r1, [r7, #136]
 16025 1018 1346     		mov	r3, r2
 16026 101a 5B00     		lsls	r3, r3, #1
 16027 101c 1344     		add	r3, r3, r2
 16028 101e 1B01     		lsls	r3, r3, #4
 16029 1020 CA18     		adds	r2, r1, r3
 16030 1022 D7F89430 		ldr	r3, [r7, #148]
 16031 1026 1344     		add	r3, r3, r2
 16032 1028 03F2B113 		addw	r3, r3, #433
 16033 102c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16034 102e 1A46     		mov	r2, r3
 16035 1030 07F11803 		add	r3, r7, #24
 16036 1034 AE49     		ldr	r1, .L686
 16037 1036 1846     		mov	r0, r3
 16038 1038 FFF7FEFF 		bl	sprintf
2105:..\src/command_processing.c ****                 strcat(info_string, str);
 16039              		.loc 1 2105 0
 16040 103c 07F11803 		add	r3, r7, #24
 16041 1040 1946     		mov	r1, r3
 16042 1042 7869     		ldr	r0, [r7, #20]
 16043 1044 FFF7FEFF 		bl	strcat
2106:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16044              		.loc 1 2106 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 359


 16045 1048 D7F89430 		ldr	r3, [r7, #148]
 16046 104c 022B     		cmp	r3, #2
 16047 104e 0BD0     		beq	.L619
2107:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16048              		.loc 1 2107 0
 16049 1050 7869     		ldr	r0, [r7, #20]
 16050 1052 FFF7FEFF 		bl	strlen
 16051 1056 0346     		mov	r3, r0
 16052 1058 1A46     		mov	r2, r3
 16053 105a 7B69     		ldr	r3, [r7, #20]
 16054 105c 1344     		add	r3, r3, r2
 16055 105e A54A     		ldr	r2, .L686+4
 16056 1060 1188     		ldrh	r1, [r2]	@ unaligned
 16057 1062 9278     		ldrb	r2, [r2, #2]
 16058 1064 1980     		strh	r1, [r3]	@ unaligned
 16059 1066 9A70     		strb	r2, [r3, #2]
 16060              	.L619:
2103:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16061              		.loc 1 2103 0 discriminator 2
 16062 1068 D7F89430 		ldr	r3, [r7, #148]
 16063 106c 0133     		adds	r3, r3, #1
 16064 106e C7F89430 		str	r3, [r7, #148]
 16065              	.L618:
2103:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16066              		.loc 1 2103 0 is_stmt 0 discriminator 1
 16067 1072 D7F89430 		ldr	r3, [r7, #148]
 16068 1076 022B     		cmp	r3, #2
 16069 1078 CADD     		ble	.L620
2108:..\src/command_processing.c ****                 }                
2109:..\src/command_processing.c ****             }
2110:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16070              		.loc 1 2110 0 is_stmt 1
 16071 107a 7869     		ldr	r0, [r7, #20]
 16072 107c FFF7FEFF 		bl	strlen
 16073 1080 0346     		mov	r3, r0
 16074 1082 1A46     		mov	r2, r3
 16075 1084 7B69     		ldr	r3, [r7, #20]
 16076 1086 1344     		add	r3, r3, r2
 16077 1088 9B4A     		ldr	r2, .L686+8
 16078 108a 1188     		ldrh	r1, [r2]	@ unaligned
 16079 108c 9278     		ldrb	r2, [r2, #2]
 16080 108e 1980     		strh	r1, [r3]	@ unaligned
 16081 1090 9A70     		strb	r2, [r3, #2]
2111:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16082              		.loc 1 2111 0
 16083 1092 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16084 1096 D7F88810 		ldr	r1, [r7, #136]
 16085 109a 1346     		mov	r3, r2
 16086 109c 5B00     		lsls	r3, r3, #1
 16087 109e 1344     		add	r3, r3, r2
 16088 10a0 1B01     		lsls	r3, r3, #4
 16089 10a2 0B44     		add	r3, r3, r1
 16090 10a4 03F2B513 		addw	r3, r3, #437
 16091 10a8 93F90030 		ldrsb	r3, [r3]
 16092 10ac 1A46     		mov	r2, r3
 16093 10ae 07F11803 		add	r3, r7, #24
 16094 10b2 9249     		ldr	r1, .L686+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 360


 16095 10b4 1846     		mov	r0, r3
 16096 10b6 FFF7FEFF 		bl	sprintf
2112:..\src/command_processing.c ****             strcat(info_string, str);
 16097              		.loc 1 2112 0
 16098 10ba 07F11803 		add	r3, r7, #24
 16099 10be 1946     		mov	r1, r3
 16100 10c0 7869     		ldr	r0, [r7, #20]
 16101 10c2 FFF7FEFF 		bl	strcat
2113:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16102              		.loc 1 2113 0
 16103 10c6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16104 10ca D7F88810 		ldr	r1, [r7, #136]
 16105 10ce 1346     		mov	r3, r2
 16106 10d0 5B00     		lsls	r3, r3, #1
 16107 10d2 1344     		add	r3, r3, r2
 16108 10d4 1B01     		lsls	r3, r3, #4
 16109 10d6 0B44     		add	r3, r3, r1
 16110 10d8 03F5DB73 		add	r3, r3, #438
 16111 10dc 93F90030 		ldrsb	r3, [r3]
 16112 10e0 1A46     		mov	r2, r3
 16113 10e2 07F11803 		add	r3, r7, #24
 16114 10e6 8649     		ldr	r1, .L686+16
 16115 10e8 1846     		mov	r0, r3
 16116 10ea FFF7FEFF 		bl	sprintf
2114:..\src/command_processing.c ****             strcat(info_string, str);
 16117              		.loc 1 2114 0
 16118 10ee 07F11803 		add	r3, r7, #24
 16119 10f2 1946     		mov	r1, r3
 16120 10f4 7869     		ldr	r0, [r7, #20]
 16121 10f6 FFF7FEFF 		bl	strcat
2115:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16122              		.loc 1 2115 0
 16123 10fa 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16124 10fe D7F88810 		ldr	r1, [r7, #136]
 16125 1102 1346     		mov	r3, r2
 16126 1104 5B00     		lsls	r3, r3, #1
 16127 1106 1344     		add	r3, r3, r2
 16128 1108 1B01     		lsls	r3, r3, #4
 16129 110a 0B44     		add	r3, r3, r1
 16130 110c 03F2B713 		addw	r3, r3, #439
 16131 1110 93F90030 		ldrsb	r3, [r3]
 16132 1114 1A46     		mov	r2, r3
 16133 1116 07F11803 		add	r3, r7, #24
 16134 111a 7A49     		ldr	r1, .L686+20
 16135 111c 1846     		mov	r0, r3
 16136 111e FFF7FEFF 		bl	sprintf
2116:..\src/command_processing.c ****             strcat(info_string, str);
 16137              		.loc 1 2116 0
 16138 1122 07F11803 		add	r3, r7, #24
 16139 1126 1946     		mov	r1, r3
 16140 1128 7869     		ldr	r0, [r7, #20]
 16141 112a FFF7FEFF 		bl	strcat
2117:..\src/command_processing.c **** #endif            
2118:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16142              		.loc 1 2118 0
 16143 112e 7869     		ldr	r0, [r7, #20]
 16144 1130 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 361


 16145 1134 0346     		mov	r3, r0
 16146 1136 1A46     		mov	r2, r3
 16147 1138 7B69     		ldr	r3, [r7, #20]
 16148 113a 1344     		add	r3, r3, r2
 16149 113c 6E4A     		ldr	r2, .L686+8
 16150 113e 1188     		ldrh	r1, [r2]	@ unaligned
 16151 1140 9278     		ldrb	r2, [r2, #2]
 16152 1142 1980     		strh	r1, [r3]	@ unaligned
 16153 1144 9A70     		strb	r2, [r3, #2]
2119:..\src/command_processing.c **** 
2120:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16154              		.loc 1 2120 0
 16155 1146 7869     		ldr	r0, [r7, #20]
 16156 1148 FFF7FEFF 		bl	strlen
 16157 114c 0346     		mov	r3, r0
 16158 114e 1A46     		mov	r2, r3
 16159 1150 7B69     		ldr	r3, [r7, #20]
 16160 1152 1344     		add	r3, r3, r2
 16161 1154 6C4A     		ldr	r2, .L686+24
 16162 1156 1D46     		mov	r5, r3
 16163 1158 1446     		mov	r4, r2
 16164 115a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16165 115c 2860     		str	r0, [r5]	@ unaligned
 16166 115e 6960     		str	r1, [r5, #4]	@ unaligned
 16167 1160 AA60     		str	r2, [r5, #8]	@ unaligned
 16168 1162 EB60     		str	r3, [r5, #12]	@ unaligned
 16169 1164 2068     		ldr	r0, [r4]	@ unaligned
 16170 1166 2861     		str	r0, [r5, #16]	@ unaligned
2121:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16171              		.loc 1 2121 0
 16172 1168 0023     		movs	r3, #0
 16173 116a C7F89430 		str	r3, [r7, #148]
 16174 116e 30E0     		b	.L621
 16175              	.L623:
2122:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16176              		.loc 1 2122 0
 16177 1170 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16178 1174 D7F88810 		ldr	r1, [r7, #136]
 16179 1178 1346     		mov	r3, r2
 16180 117a 5B00     		lsls	r3, r3, #1
 16181 117c 1344     		add	r3, r3, r2
 16182 117e 1B01     		lsls	r3, r3, #4
 16183 1180 CA18     		adds	r2, r1, r3
 16184 1182 D7F89430 		ldr	r3, [r7, #148]
 16185 1186 1344     		add	r3, r3, r2
 16186 1188 03F29513 		addw	r3, r3, #405
 16187 118c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16188 118e 1A46     		mov	r2, r3
 16189 1190 07F11803 		add	r3, r7, #24
 16190 1194 5649     		ldr	r1, .L686
 16191 1196 1846     		mov	r0, r3
 16192 1198 FFF7FEFF 		bl	sprintf
2123:..\src/command_processing.c ****                 strcat(info_string, str);
 16193              		.loc 1 2123 0
 16194 119c 07F11803 		add	r3, r7, #24
 16195 11a0 1946     		mov	r1, r3
 16196 11a2 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 362


 16197 11a4 FFF7FEFF 		bl	strcat
2124:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16198              		.loc 1 2124 0
 16199 11a8 D7F89430 		ldr	r3, [r7, #148]
 16200 11ac 022B     		cmp	r3, #2
 16201 11ae 0BD0     		beq	.L622
2125:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16202              		.loc 1 2125 0
 16203 11b0 7869     		ldr	r0, [r7, #20]
 16204 11b2 FFF7FEFF 		bl	strlen
 16205 11b6 0346     		mov	r3, r0
 16206 11b8 1A46     		mov	r2, r3
 16207 11ba 7B69     		ldr	r3, [r7, #20]
 16208 11bc 1344     		add	r3, r3, r2
 16209 11be 4D4A     		ldr	r2, .L686+4
 16210 11c0 1188     		ldrh	r1, [r2]	@ unaligned
 16211 11c2 9278     		ldrb	r2, [r2, #2]
 16212 11c4 1980     		strh	r1, [r3]	@ unaligned
 16213 11c6 9A70     		strb	r2, [r3, #2]
 16214              	.L622:
2121:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16215              		.loc 1 2121 0 discriminator 2
 16216 11c8 D7F89430 		ldr	r3, [r7, #148]
 16217 11cc 0133     		adds	r3, r3, #1
 16218 11ce C7F89430 		str	r3, [r7, #148]
 16219              	.L621:
2121:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16220              		.loc 1 2121 0 is_stmt 0 discriminator 1
 16221 11d2 D7F89430 		ldr	r3, [r7, #148]
 16222 11d6 022B     		cmp	r3, #2
 16223 11d8 CADD     		ble	.L623
2126:..\src/command_processing.c ****                 }                
2127:..\src/command_processing.c ****             }
2128:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16224              		.loc 1 2128 0 is_stmt 1
 16225 11da 7869     		ldr	r0, [r7, #20]
 16226 11dc FFF7FEFF 		bl	strlen
 16227 11e0 0346     		mov	r3, r0
 16228 11e2 1A46     		mov	r2, r3
 16229 11e4 7B69     		ldr	r3, [r7, #20]
 16230 11e6 1344     		add	r3, r3, r2
 16231 11e8 434A     		ldr	r2, .L686+8
 16232 11ea 1188     		ldrh	r1, [r2]	@ unaligned
 16233 11ec 9278     		ldrb	r2, [r2, #2]
 16234 11ee 1980     		strh	r1, [r3]	@ unaligned
 16235 11f0 9A70     		strb	r2, [r3, #2]
2129:..\src/command_processing.c **** 
2130:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16236              		.loc 1 2130 0
 16237 11f2 7869     		ldr	r0, [r7, #20]
 16238 11f4 FFF7FEFF 		bl	strlen
 16239 11f8 0346     		mov	r3, r0
 16240 11fa 1A46     		mov	r2, r3
 16241 11fc 7B69     		ldr	r3, [r7, #20]
 16242 11fe 1344     		add	r3, r3, r2
 16243 1200 424A     		ldr	r2, .L686+28
 16244 1202 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 363


 16245 1204 1446     		mov	r4, r2
 16246 1206 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16247 1208 2860     		str	r0, [r5]	@ unaligned
 16248 120a 6960     		str	r1, [r5, #4]	@ unaligned
 16249 120c AA60     		str	r2, [r5, #8]	@ unaligned
 16250 120e EB60     		str	r3, [r5, #12]	@ unaligned
 16251 1210 2068     		ldr	r0, [r4]	@ unaligned
 16252 1212 2861     		str	r0, [r5, #16]	@ unaligned
 16253 1214 2379     		ldrb	r3, [r4, #4]
 16254 1216 2B75     		strb	r3, [r5, #20]
2131:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16255              		.loc 1 2131 0
 16256 1218 0023     		movs	r3, #0
 16257 121a C7F89430 		str	r3, [r7, #148]
 16258 121e 3FE0     		b	.L624
 16259              	.L626:
2132:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16260              		.loc 1 2132 0
 16261 1220 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16262 1224 D7F88810 		ldr	r1, [r7, #136]
 16263 1228 1346     		mov	r3, r2
 16264 122a 5B00     		lsls	r3, r3, #1
 16265 122c 1344     		add	r3, r3, r2
 16266 122e 9B00     		lsls	r3, r3, #2
 16267 1230 D7F89420 		ldr	r2, [r7, #148]
 16268 1234 1344     		add	r3, r3, r2
 16269 1236 6633     		adds	r3, r3, #102
 16270 1238 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16271 123c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16272 1240 D7F88800 		ldr	r0, [r7, #136]
 16273 1244 1346     		mov	r3, r2
 16274 1246 5B00     		lsls	r3, r3, #1
 16275 1248 1344     		add	r3, r3, r2
 16276 124a 1B01     		lsls	r3, r3, #4
 16277 124c C218     		adds	r2, r0, r3
 16278 124e D7F89430 		ldr	r3, [r7, #148]
 16279 1252 1344     		add	r3, r3, r2
 16280 1254 03F29513 		addw	r3, r3, #405
 16281 1258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16282 125a 41FA03F2 		asr	r2, r1, r3
 16283 125e 07F11803 		add	r3, r7, #24
 16284 1262 2B49     		ldr	r1, .L686+32
 16285 1264 1846     		mov	r0, r3
 16286 1266 FFF7FEFF 		bl	sprintf
2133:..\src/command_processing.c ****                 strcat(info_string, str);
 16287              		.loc 1 2133 0
 16288 126a 07F11803 		add	r3, r7, #24
 16289 126e 1946     		mov	r1, r3
 16290 1270 7869     		ldr	r0, [r7, #20]
 16291 1272 FFF7FEFF 		bl	strcat
2134:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16292              		.loc 1 2134 0
 16293 1276 D7F89430 		ldr	r3, [r7, #148]
 16294 127a 022B     		cmp	r3, #2
 16295 127c 0BD0     		beq	.L625
2135:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16296              		.loc 1 2135 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 364


 16297 127e 7869     		ldr	r0, [r7, #20]
 16298 1280 FFF7FEFF 		bl	strlen
 16299 1284 0346     		mov	r3, r0
 16300 1286 1A46     		mov	r2, r3
 16301 1288 7B69     		ldr	r3, [r7, #20]
 16302 128a 1344     		add	r3, r3, r2
 16303 128c 194A     		ldr	r2, .L686+4
 16304 128e 1188     		ldrh	r1, [r2]	@ unaligned
 16305 1290 9278     		ldrb	r2, [r2, #2]
 16306 1292 1980     		strh	r1, [r3]	@ unaligned
 16307 1294 9A70     		strb	r2, [r3, #2]
 16308              	.L625:
2131:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16309              		.loc 1 2131 0 discriminator 2
 16310 1296 D7F89430 		ldr	r3, [r7, #148]
 16311 129a 0133     		adds	r3, r3, #1
 16312 129c C7F89430 		str	r3, [r7, #148]
 16313              	.L624:
2131:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16314              		.loc 1 2131 0 is_stmt 0 discriminator 1
 16315 12a0 D7F89430 		ldr	r3, [r7, #148]
 16316 12a4 022B     		cmp	r3, #2
 16317 12a6 BBDD     		ble	.L626
2136:..\src/command_processing.c ****                 }
2137:..\src/command_processing.c ****             }
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16318              		.loc 1 2138 0 is_stmt 1
 16319 12a8 7869     		ldr	r0, [r7, #20]
 16320 12aa FFF7FEFF 		bl	strlen
 16321 12ae 0346     		mov	r3, r0
 16322 12b0 1A46     		mov	r2, r3
 16323 12b2 7B69     		ldr	r3, [r7, #20]
 16324 12b4 1344     		add	r3, r3, r2
 16325 12b6 104A     		ldr	r2, .L686+8
 16326 12b8 1188     		ldrh	r1, [r2]	@ unaligned
 16327 12ba 9278     		ldrb	r2, [r2, #2]
 16328 12bc 1980     		strh	r1, [r3]	@ unaligned
 16329 12be 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****                 
2140:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16330              		.loc 1 2140 0
 16331 12c0 7869     		ldr	r0, [r7, #20]
 16332 12c2 FFF7FEFF 		bl	strlen
 16333 12c6 0346     		mov	r3, r0
 16334 12c8 1A46     		mov	r2, r3
 16335 12ca 7B69     		ldr	r3, [r7, #20]
 16336 12cc 1344     		add	r3, r3, r2
 16337 12ce 114A     		ldr	r2, .L686+36
 16338 12d0 1D46     		mov	r5, r3
 16339 12d2 1446     		mov	r4, r2
 16340 12d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16341 12d6 2860     		str	r0, [r5]	@ unaligned
 16342 12d8 6960     		str	r1, [r5, #4]	@ unaligned
 16343 12da AA60     		str	r2, [r5, #8]	@ unaligned
 16344 12dc EB60     		str	r3, [r5, #12]	@ unaligned
 16345 12de 03CC     		ldmia	r4!, {r0, r1}
 16346 12e0 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 365


 16347 12e2 6961     		str	r1, [r5, #20]	@ unaligned
 16348 12e4 2378     		ldrb	r3, [r4]
 16349 12e6 2B76     		strb	r3, [r5, #24]
2141:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16350              		.loc 1 2141 0
 16351 12e8 0023     		movs	r3, #0
 16352 12ea C7F89430 		str	r3, [r7, #148]
 16353 12ee 49E0     		b	.L627
 16354              	.L687:
 16355              		.align	2
 16356              	.L686:
 16357 12f0 40130000 		.word	.LC181
 16358 12f4 44130000 		.word	.LC182
 16359 12f8 10110000 		.word	.LC150
 16360 12fc 78160000 		.word	.LC212
 16361 1300 90160000 		.word	.LC213
 16362 1304 A8160000 		.word	.LC214
 16363 1308 C0160000 		.word	.LC215
 16364 130c D4160000 		.word	.LC216
 16365 1310 EC160000 		.word	.LC217
 16366 1314 F0160000 		.word	.LC218
 16367              	.L629:
2142:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16368              		.loc 1 2142 0
 16369 1318 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16370 131c D7F88810 		ldr	r1, [r7, #136]
 16371 1320 1346     		mov	r3, r2
 16372 1322 5B00     		lsls	r3, r3, #1
 16373 1324 1344     		add	r3, r3, r2
 16374 1326 9B00     		lsls	r3, r3, #2
 16375 1328 D7F89420 		ldr	r2, [r7, #148]
 16376 132c 1344     		add	r3, r3, r2
 16377 132e 6833     		adds	r3, r3, #104
 16378 1330 9B00     		lsls	r3, r3, #2
 16379 1332 0B44     		add	r3, r3, r1
 16380 1334 5B68     		ldr	r3, [r3, #4]	@ float
 16381 1336 1846     		mov	r0, r3
 16382 1338 FFF7FEFF 		bl	__aeabi_f2d
 16383 133c 0346     		mov	r3, r0
 16384 133e 0C46     		mov	r4, r1
 16385 1340 07F11800 		add	r0, r7, #24
 16386 1344 1A46     		mov	r2, r3
 16387 1346 2346     		mov	r3, r4
 16388 1348 BD49     		ldr	r1, .L688
 16389 134a FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16390              		.loc 1 2143 0
 16391 134e 07F11803 		add	r3, r7, #24
 16392 1352 1946     		mov	r1, r3
 16393 1354 7869     		ldr	r0, [r7, #20]
 16394 1356 FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16395              		.loc 1 2144 0
 16396 135a D7F89430 		ldr	r3, [r7, #148]
 16397 135e 022B     		cmp	r3, #2
 16398 1360 0BD0     		beq	.L628
2145:..\src/command_processing.c ****                     strcat(info_string, ", ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 366


 16399              		.loc 1 2145 0
 16400 1362 7869     		ldr	r0, [r7, #20]
 16401 1364 FFF7FEFF 		bl	strlen
 16402 1368 0346     		mov	r3, r0
 16403 136a 1A46     		mov	r2, r3
 16404 136c 7B69     		ldr	r3, [r7, #20]
 16405 136e 1344     		add	r3, r3, r2
 16406 1370 B44A     		ldr	r2, .L688+4
 16407 1372 1188     		ldrh	r1, [r2]	@ unaligned
 16408 1374 9278     		ldrb	r2, [r2, #2]
 16409 1376 1980     		strh	r1, [r3]	@ unaligned
 16410 1378 9A70     		strb	r2, [r3, #2]
 16411              	.L628:
2141:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16412              		.loc 1 2141 0 discriminator 2
 16413 137a D7F89430 		ldr	r3, [r7, #148]
 16414 137e 0133     		adds	r3, r3, #1
 16415 1380 C7F89430 		str	r3, [r7, #148]
 16416              	.L627:
2141:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16417              		.loc 1 2141 0 is_stmt 0 discriminator 1
 16418 1384 D7F89430 		ldr	r3, [r7, #148]
 16419 1388 022B     		cmp	r3, #2
 16420 138a C5DD     		ble	.L629
2146:..\src/command_processing.c ****                 }
2147:..\src/command_processing.c ****             }
2148:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16421              		.loc 1 2148 0 is_stmt 1
 16422 138c 7869     		ldr	r0, [r7, #20]
 16423 138e FFF7FEFF 		bl	strlen
 16424 1392 0346     		mov	r3, r0
 16425 1394 1A46     		mov	r2, r3
 16426 1396 7B69     		ldr	r3, [r7, #20]
 16427 1398 1344     		add	r3, r3, r2
 16428 139a AB4A     		ldr	r2, .L688+8
 16429 139c 1188     		ldrh	r1, [r2]	@ unaligned
 16430 139e 9278     		ldrb	r2, [r2, #2]
 16431 13a0 1980     		strh	r1, [r3]	@ unaligned
 16432 13a2 9A70     		strb	r2, [r3, #2]
2149:..\src/command_processing.c ****             
2150:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2151:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16433              		.loc 1 2151 0
 16434 13a4 D7F88030 		ldr	r3, [r7, #128]
 16435 13a8 5B6C     		ldr	r3, [r3, #68]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16436              		.loc 1 2150 0
 16437 13aa 1846     		mov	r0, r3
 16438 13ac FFF7FEFF 		bl	__aeabi_f2d
 16439 13b0 C7E90201 		strd	r0, [r7, #8]
 16440              		.loc 1 2151 0
 16441 13b4 D7F88030 		ldr	r3, [r7, #128]
 16442 13b8 9B6C     		ldr	r3, [r3, #72]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16443              		.loc 1 2150 0
 16444 13ba 1846     		mov	r0, r3
 16445 13bc FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 367


 16446 13c0 0446     		mov	r4, r0
 16447 13c2 0D46     		mov	r5, r1
 16448              		.loc 1 2151 0
 16449 13c4 D7F88030 		ldr	r3, [r7, #128]
 16450 13c8 DB6C     		ldr	r3, [r3, #76]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16451              		.loc 1 2150 0
 16452 13ca 1846     		mov	r0, r3
 16453 13cc FFF7FEFF 		bl	__aeabi_f2d
 16454 13d0 8046     		mov	r8, r0
 16455 13d2 8946     		mov	r9, r1
2152:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16456              		.loc 1 2152 0
 16457 13d4 D7F88030 		ldr	r3, [r7, #128]
 16458 13d8 1B6D     		ldr	r3, [r3, #80]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16459              		.loc 1 2150 0
 16460 13da 1846     		mov	r0, r3
 16461 13dc FFF7FEFF 		bl	__aeabi_f2d
 16462 13e0 8246     		mov	r10, r0
 16463 13e2 8B46     		mov	fp, r1
 16464              		.loc 1 2152 0
 16465 13e4 D7F88030 		ldr	r3, [r7, #128]
 16466 13e8 5B6D     		ldr	r3, [r3, #84]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16467              		.loc 1 2150 0
 16468 13ea 1846     		mov	r0, r3
 16469 13ec FFF7FEFF 		bl	__aeabi_f2d
 16470 13f0 C7E90001 		strd	r0, [r7]
 16471              		.loc 1 2152 0
 16472 13f4 D7F88030 		ldr	r3, [r7, #128]
 16473 13f8 9B6D     		ldr	r3, [r3, #88]	@ float
2150:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16474              		.loc 1 2150 0
 16475 13fa 1846     		mov	r0, r3
 16476 13fc FFF7FEFF 		bl	__aeabi_f2d
 16477 1400 0246     		mov	r2, r0
 16478 1402 0B46     		mov	r3, r1
 16479 1404 07F11800 		add	r0, r7, #24
 16480 1408 CDE90823 		strd	r2, [sp, #32]
 16481 140c D7E90012 		ldrd	r1, [r7]
 16482 1410 CDE90612 		strd	r1, [sp, #24]
 16483 1414 CDE904AB 		strd	r10, [sp, #16]
 16484 1418 CDE90289 		strd	r8, [sp, #8]
 16485 141c CDE90045 		strd	r4, [sp]
 16486 1420 D7E90223 		ldrd	r2, [r7, #8]
 16487 1424 8949     		ldr	r1, .L688+12
 16488 1426 FFF7FEFF 		bl	sprintf
2153:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16489              		.loc 1 2153 0
 16490 142a 07F11803 		add	r3, r7, #24
 16491 142e 1946     		mov	r1, r3
 16492 1430 7869     		ldr	r0, [r7, #20]
 16493 1432 FFF7FEFF 		bl	strcat
2154:..\src/command_processing.c **** 
2155:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16494              		.loc 1 2155 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 368


 16495 1436 D7F88030 		ldr	r3, [r7, #128]
 16496 143a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16497 143e 1A46     		mov	r2, r3
 16498 1440 07F11803 		add	r3, r7, #24
 16499 1444 8249     		ldr	r1, .L688+16
 16500 1446 1846     		mov	r0, r3
 16501 1448 FFF7FEFF 		bl	sprintf
2156:..\src/command_processing.c ****             strcat(info_string, str);
 16502              		.loc 1 2156 0
 16503 144c 07F11803 		add	r3, r7, #24
 16504 1450 1946     		mov	r1, r3
 16505 1452 7869     		ldr	r0, [r7, #20]
 16506 1454 FFF7FEFF 		bl	strcat
2157:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16507              		.loc 1 2157 0
 16508 1458 7869     		ldr	r0, [r7, #20]
 16509 145a FFF7FEFF 		bl	strlen
 16510 145e 0346     		mov	r3, r0
 16511 1460 1A46     		mov	r2, r3
 16512 1462 7B69     		ldr	r3, [r7, #20]
 16513 1464 1344     		add	r3, r3, r2
 16514 1466 784A     		ldr	r2, .L688+8
 16515 1468 1188     		ldrh	r1, [r2]	@ unaligned
 16516 146a 9278     		ldrb	r2, [r2, #2]
 16517 146c 1980     		strh	r1, [r3]	@ unaligned
 16518 146e 9A70     		strb	r2, [r3, #2]
2158:..\src/command_processing.c **** 
2159:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16519              		.loc 1 2159 0
 16520 1470 D7F88030 		ldr	r3, [r7, #128]
 16521 1474 596B     		ldr	r1, [r3, #52]
 16522 1476 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16523 147a D7F88800 		ldr	r0, [r7, #136]
 16524 147e 1346     		mov	r3, r2
 16525 1480 5B00     		lsls	r3, r3, #1
 16526 1482 1344     		add	r3, r3, r2
 16527 1484 1B01     		lsls	r3, r3, #4
 16528 1486 0344     		add	r3, r3, r0
 16529 1488 03F29513 		addw	r3, r3, #405
 16530 148c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16531 148e 41FA03F2 		asr	r2, r1, r3
 16532 1492 07F11803 		add	r3, r7, #24
 16533 1496 6F49     		ldr	r1, .L688+20
 16534 1498 1846     		mov	r0, r3
 16535 149a FFF7FEFF 		bl	sprintf
2160:..\src/command_processing.c ****             strcat(info_string, str);
 16536              		.loc 1 2160 0
 16537 149e 07F11803 		add	r3, r7, #24
 16538 14a2 1946     		mov	r1, r3
 16539 14a4 7869     		ldr	r0, [r7, #20]
 16540 14a6 FFF7FEFF 		bl	strcat
2161:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16541              		.loc 1 2161 0
 16542 14aa D7F88030 		ldr	r3, [r7, #128]
 16543 14ae 996B     		ldr	r1, [r3, #56]
 16544 14b0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16545 14b4 D7F88800 		ldr	r0, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 369


 16546 14b8 1346     		mov	r3, r2
 16547 14ba 5B00     		lsls	r3, r3, #1
 16548 14bc 1344     		add	r3, r3, r2
 16549 14be 1B01     		lsls	r3, r3, #4
 16550 14c0 0344     		add	r3, r3, r0
 16551 14c2 03F29513 		addw	r3, r3, #405
 16552 14c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16553 14c8 41FA03F2 		asr	r2, r1, r3
 16554 14cc 07F11803 		add	r3, r7, #24
 16555 14d0 6149     		ldr	r1, .L688+24
 16556 14d2 1846     		mov	r0, r3
 16557 14d4 FFF7FEFF 		bl	sprintf
2162:..\src/command_processing.c ****             strcat(info_string, str);
 16558              		.loc 1 2162 0
 16559 14d8 07F11803 		add	r3, r7, #24
 16560 14dc 1946     		mov	r1, r3
 16561 14de 7869     		ldr	r0, [r7, #20]
 16562 14e0 FFF7FEFF 		bl	strcat
2163:..\src/command_processing.c **** 
2164:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16563              		.loc 1 2164 0
 16564 14e4 D7F88030 		ldr	r3, [r7, #128]
 16565 14e8 1A6C     		ldr	r2, [r3, #64]
 16566 14ea D7F88030 		ldr	r3, [r7, #128]
 16567 14ee DB6B     		ldr	r3, [r3, #60]
 16568 14f0 07F11800 		add	r0, r7, #24
 16569 14f4 5949     		ldr	r1, .L688+28
 16570 14f6 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****             strcat(info_string, str);
 16571              		.loc 1 2165 0
 16572 14fa 07F11803 		add	r3, r7, #24
 16573 14fe 1946     		mov	r1, r3
 16574 1500 7869     		ldr	r0, [r7, #20]
 16575 1502 FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16576              		.loc 1 2166 0
 16577 1506 7869     		ldr	r0, [r7, #20]
 16578 1508 FFF7FEFF 		bl	strlen
 16579 150c 0346     		mov	r3, r0
 16580 150e 1A46     		mov	r2, r3
 16581 1510 7B69     		ldr	r3, [r7, #20]
 16582 1512 1344     		add	r3, r3, r2
 16583 1514 4C4A     		ldr	r2, .L688+8
 16584 1516 1188     		ldrh	r1, [r2]	@ unaligned
 16585 1518 9278     		ldrb	r2, [r2, #2]
 16586 151a 1980     		strh	r1, [r3]	@ unaligned
 16587 151c 9A70     		strb	r2, [r3, #2]
2167:..\src/command_processing.c **** 
2168:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16588              		.loc 1 2168 0
 16589 151e D7F88030 		ldr	r3, [r7, #128]
 16590 1522 B3F95C30 		ldrsh	r3, [r3, #92]
 16591 1526 1A46     		mov	r2, r3
 16592 1528 07F11803 		add	r3, r7, #24
 16593 152c 4C49     		ldr	r1, .L688+32
 16594 152e 1846     		mov	r0, r3
 16595 1530 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 370


2169:..\src/command_processing.c ****             strcat(info_string, str);
 16596              		.loc 1 2169 0
 16597 1534 07F11803 		add	r3, r7, #24
 16598 1538 1946     		mov	r1, r3
 16599 153a 7869     		ldr	r0, [r7, #20]
 16600 153c FFF7FEFF 		bl	strcat
2170:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2171:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16601              		.loc 1 2171 0
 16602 1540 D7F88030 		ldr	r3, [r7, #128]
 16603 1544 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16604 1548 1A46     		mov	r2, r3
 16605 154a 07F11803 		add	r3, r7, #24
 16606 154e 4549     		ldr	r1, .L688+36
 16607 1550 1846     		mov	r0, r3
 16608 1552 FFF7FEFF 		bl	sprintf
2172:..\src/command_processing.c ****             strcat(info_string, str);
 16609              		.loc 1 2172 0
 16610 1556 07F11803 		add	r3, r7, #24
 16611 155a 1946     		mov	r1, r3
 16612 155c 7869     		ldr	r0, [r7, #20]
 16613 155e FFF7FEFF 		bl	strcat
2173:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16614              		.loc 1 2173 0
 16615 1562 D7F88030 		ldr	r3, [r7, #128]
 16616 1566 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16617 156a 002B     		cmp	r3, #0
 16618 156c 02D0     		beq	.L631
 16619 156e 012B     		cmp	r3, #1
 16620 1570 1DD0     		beq	.L632
2174:..\src/command_processing.c ****                 case DRIVER_MC33887:
2175:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2176:..\src/command_processing.c ****                     break;
2177:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2178:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2179:..\src/command_processing.c ****                     break;
2180:..\src/command_processing.c ****                 default:
2181:..\src/command_processing.c ****                     break;
 16621              		.loc 1 2181 0
 16622 1572 39E0     		b	.L634
 16623              	.L631:
2175:..\src/command_processing.c ****                     break;
 16624              		.loc 1 2175 0
 16625 1574 7869     		ldr	r0, [r7, #20]
 16626 1576 FFF7FEFF 		bl	strlen
 16627 157a 0346     		mov	r3, r0
 16628 157c 1A46     		mov	r2, r3
 16629 157e 7B69     		ldr	r3, [r7, #20]
 16630 1580 1344     		add	r3, r3, r2
 16631 1582 394A     		ldr	r2, .L688+40
 16632 1584 1446     		mov	r4, r2
 16633 1586 9E46     		mov	lr, r3
 16634 1588 04F1200C 		add	ip, r4, #32
 16635              	.L633:
 16636 158c 7546     		mov	r5, lr
 16637 158e 2646     		mov	r6, r4
 16638 1590 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 371


 16639 1592 2860     		str	r0, [r5]	@ unaligned
 16640 1594 6960     		str	r1, [r5, #4]	@ unaligned
 16641 1596 AA60     		str	r2, [r5, #8]	@ unaligned
 16642 1598 EB60     		str	r3, [r5, #12]	@ unaligned
 16643 159a 1034     		adds	r4, r4, #16
 16644 159c 0EF1100E 		add	lr, lr, #16
 16645 15a0 6445     		cmp	r4, ip
 16646 15a2 F3D1     		bne	.L633
 16647 15a4 7246     		mov	r2, lr
 16648 15a6 2346     		mov	r3, r4
 16649 15a8 1B88     		ldrh	r3, [r3]	@ unaligned
 16650 15aa 1380     		strh	r3, [r2]	@ unaligned
2176:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16651              		.loc 1 2176 0
 16652 15ac 1CE0     		b	.L634
 16653              	.L632:
2178:..\src/command_processing.c ****                     break;
 16654              		.loc 1 2178 0
 16655 15ae 7869     		ldr	r0, [r7, #20]
 16656 15b0 FFF7FEFF 		bl	strlen
 16657 15b4 0346     		mov	r3, r0
 16658 15b6 1A46     		mov	r2, r3
 16659 15b8 7B69     		ldr	r3, [r7, #20]
 16660 15ba 1344     		add	r3, r3, r2
 16661 15bc 2B4A     		ldr	r2, .L688+44
 16662 15be 1446     		mov	r4, r2
 16663 15c0 9E46     		mov	lr, r3
 16664 15c2 04F1200C 		add	ip, r4, #32
 16665              	.L635:
 16666 15c6 7546     		mov	r5, lr
 16667 15c8 2646     		mov	r6, r4
 16668 15ca 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16669 15cc 2860     		str	r0, [r5]	@ unaligned
 16670 15ce 6960     		str	r1, [r5, #4]	@ unaligned
 16671 15d0 AA60     		str	r2, [r5, #8]	@ unaligned
 16672 15d2 EB60     		str	r3, [r5, #12]	@ unaligned
 16673 15d4 1034     		adds	r4, r4, #16
 16674 15d6 0EF1100E 		add	lr, lr, #16
 16675 15da 6445     		cmp	r4, ip
 16676 15dc F3D1     		bne	.L635
 16677 15de 7346     		mov	r3, lr
 16678 15e0 2246     		mov	r2, r4
 16679 15e2 1068     		ldr	r0, [r2]	@ unaligned
 16680 15e4 1860     		str	r0, [r3]	@ unaligned
2179:..\src/command_processing.c ****                 default:
 16681              		.loc 1 2179 0
 16682 15e6 00BF     		nop
 16683              	.L634:
2182:..\src/command_processing.c ****             }
2183:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16684              		.loc 1 2183 0
 16685 15e8 D7F88030 		ldr	r3, [r7, #128]
 16686 15ec 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16687 15f0 1A46     		mov	r2, r3
 16688 15f2 07F11803 		add	r3, r7, #24
 16689 15f6 1E49     		ldr	r1, .L688+48
 16690 15f8 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 372


 16691 15fa FFF7FEFF 		bl	sprintf
2184:..\src/command_processing.c ****             strcat(info_string, str);
 16692              		.loc 1 2184 0
 16693 15fe 07F11803 		add	r3, r7, #24
 16694 1602 1946     		mov	r1, r3
 16695 1604 7869     		ldr	r0, [r7, #20]
 16696 1606 FFF7FEFF 		bl	strcat
2185:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16697              		.loc 1 2185 0
 16698 160a D7F88030 		ldr	r3, [r7, #128]
 16699 160e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16700 1612 002B     		cmp	r3, #0
 16701 1614 30D0     		beq	.L636
2186:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16702              		.loc 1 2186 0
 16703 1616 7869     		ldr	r0, [r7, #20]
 16704 1618 FFF7FEFF 		bl	strlen
 16705 161c 0346     		mov	r3, r0
 16706 161e 1A46     		mov	r2, r3
 16707 1620 7B69     		ldr	r3, [r7, #20]
 16708 1622 1344     		add	r3, r3, r2
 16709 1624 134A     		ldr	r2, .L688+52
 16710 1626 1D46     		mov	r5, r3
 16711 1628 1446     		mov	r4, r2
 16712 162a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16713 162c 2860     		str	r0, [r5]	@ unaligned
 16714 162e 6960     		str	r1, [r5, #4]	@ unaligned
 16715 1630 AA60     		str	r2, [r5, #8]	@ unaligned
 16716 1632 EB60     		str	r3, [r5, #12]	@ unaligned
 16717 1634 07CC     		ldmia	r4!, {r0, r1, r2}
 16718 1636 2861     		str	r0, [r5, #16]	@ unaligned
 16719 1638 6961     		str	r1, [r5, #20]	@ unaligned
 16720 163a AA61     		str	r2, [r5, #24]	@ unaligned
 16721 163c 33E0     		b	.L637
 16722              	.L689:
 16723 163e 00BF     		.align	2
 16724              	.L688:
 16725 1640 0C170000 		.word	.LC219
 16726 1644 44130000 		.word	.LC182
 16727 1648 10110000 		.word	.LC150
 16728 164c 10170000 		.word	.LC220
 16729 1650 40170000 		.word	.LC221
 16730 1654 5C170000 		.word	.LC222
 16731 1658 80170000 		.word	.LC223
 16732 165c 90170000 		.word	.LC224
 16733 1660 AC170000 		.word	.LC225
 16734 1664 C0170000 		.word	.LC226
 16735 1668 EC170000 		.word	.LC227
 16736 166c 10180000 		.word	.LC228
 16737 1670 34180000 		.word	.LC229
 16738 1674 54180000 		.word	.LC230
 16739              	.L636:
2187:..\src/command_processing.c ****             else
2188:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16740              		.loc 1 2188 0
 16741 1678 7869     		ldr	r0, [r7, #20]
 16742 167a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 373


 16743 167e 0346     		mov	r3, r0
 16744 1680 1A46     		mov	r2, r3
 16745 1682 7B69     		ldr	r3, [r7, #20]
 16746 1684 1344     		add	r3, r3, r2
 16747 1686 A24A     		ldr	r2, .L690
 16748 1688 1D46     		mov	r5, r3
 16749 168a 1446     		mov	r4, r2
 16750 168c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16751 168e 2860     		str	r0, [r5]	@ unaligned
 16752 1690 6960     		str	r1, [r5, #4]	@ unaligned
 16753 1692 AA60     		str	r2, [r5, #8]	@ unaligned
 16754 1694 EB60     		str	r3, [r5, #12]	@ unaligned
 16755 1696 03CC     		ldmia	r4!, {r0, r1}
 16756 1698 2861     		str	r0, [r5, #16]	@ unaligned
 16757 169a 6961     		str	r1, [r5, #20]	@ unaligned
 16758 169c 2388     		ldrh	r3, [r4]	@ unaligned
 16759 169e A278     		ldrb	r2, [r4, #2]
 16760 16a0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16761 16a2 1346     		mov	r3, r2
 16762 16a4 AB76     		strb	r3, [r5, #26]
 16763              	.L637:
2189:..\src/command_processing.c **** #endif                
2190:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16764              		.loc 1 2190 0 discriminator 2
 16765 16a6 7869     		ldr	r0, [r7, #20]
 16766 16a8 FFF7FEFF 		bl	strlen
 16767 16ac 0346     		mov	r3, r0
 16768 16ae 1A46     		mov	r2, r3
 16769 16b0 7B69     		ldr	r3, [r7, #20]
 16770 16b2 1344     		add	r3, r3, r2
 16771 16b4 974A     		ldr	r2, .L690+4
 16772 16b6 1188     		ldrh	r1, [r2]	@ unaligned
 16773 16b8 9278     		ldrb	r2, [r2, #2]
 16774 16ba 1980     		strh	r1, [r3]	@ unaligned
 16775 16bc 9A70     		strb	r2, [r3, #2]
 16776              	.LBE22:
1920:..\src/command_processing.c ****             
 16777              		.loc 1 1920 0 discriminator 2
 16778 16be 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16779 16c2 0133     		adds	r3, r3, #1
 16780 16c4 87F89330 		strb	r3, [r7, #147]
 16781              	.L573:
1920:..\src/command_processing.c ****             
 16782              		.loc 1 1920 0 is_stmt 0 discriminator 1
 16783 16c8 D7F88830 		ldr	r3, [r7, #136]
 16784 16cc 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16785 16d0 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16786 16d4 9A42     		cmp	r2, r3
 16787 16d6 7EF641AE 		bls	.L638
 16788              	.LBE21:
2191:..\src/command_processing.c ****         }
2192:..\src/command_processing.c ****       
2193:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16789              		.loc 1 2193 0 is_stmt 1
 16790 16da 7869     		ldr	r0, [r7, #20]
 16791 16dc FFF7FEFF 		bl	strlen
 16792 16e0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 374


 16793 16e2 1A46     		mov	r2, r3
 16794 16e4 7B69     		ldr	r3, [r7, #20]
 16795 16e6 1344     		add	r3, r3, r2
 16796 16e8 8B4A     		ldr	r2, .L690+8
 16797 16ea 1D46     		mov	r5, r3
 16798 16ec 1446     		mov	r4, r2
 16799 16ee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16800 16f0 2860     		str	r0, [r5]	@ unaligned
 16801 16f2 6960     		str	r1, [r5, #4]	@ unaligned
 16802 16f4 AA60     		str	r2, [r5, #8]	@ unaligned
 16803 16f6 EB60     		str	r3, [r5, #12]	@ unaligned
 16804 16f8 2068     		ldr	r0, [r4]	@ unaligned
 16805 16fa 2861     		str	r0, [r5, #16]	@ unaligned
2194:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16806              		.loc 1 2194 0
 16807 16fc D7F88830 		ldr	r3, [r7, #136]
 16808 1700 B3F8F031 		ldrh	r3, [r3, #496]
 16809 1704 1A46     		mov	r2, r3
 16810 1706 D7F88830 		ldr	r3, [r7, #136]
 16811 170a B3F8F231 		ldrh	r3, [r3, #498]
 16812 170e 07F11800 		add	r0, r7, #24
 16813 1712 8249     		ldr	r1, .L690+12
 16814 1714 FFF7FEFF 		bl	sprintf
2195:..\src/command_processing.c ****         strcat(info_string, str);
 16815              		.loc 1 2195 0
 16816 1718 07F11803 		add	r3, r7, #24
 16817 171c 1946     		mov	r1, r3
 16818 171e 7869     		ldr	r0, [r7, #20]
 16819 1720 FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16820              		.loc 1 2196 0
 16821 1724 7869     		ldr	r0, [r7, #20]
 16822 1726 FFF7FEFF 		bl	strlen
 16823 172a 0346     		mov	r3, r0
 16824 172c 1A46     		mov	r2, r3
 16825 172e 7B69     		ldr	r3, [r7, #20]
 16826 1730 1344     		add	r3, r3, r2
 16827 1732 784A     		ldr	r2, .L690+4
 16828 1734 1188     		ldrh	r1, [r2]	@ unaligned
 16829 1736 9278     		ldrb	r2, [r2, #2]
 16830 1738 1980     		strh	r1, [r3]	@ unaligned
 16831 173a 9A70     		strb	r2, [r3, #2]
2197:..\src/command_processing.c **** 
2198:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16832              		.loc 1 2198 0
 16833 173c D7F88830 		ldr	r3, [r7, #136]
 16834 1740 D3F8F421 		ldr	r2, [r3, #500]
 16835 1744 D7F88830 		ldr	r3, [r7, #136]
 16836 1748 D3F8F831 		ldr	r3, [r3, #504]
 16837 174c 07F11800 		add	r0, r7, #24
 16838 1750 7349     		ldr	r1, .L690+16
 16839 1752 FFF7FEFF 		bl	sprintf
2199:..\src/command_processing.c ****         strcat(info_string, str);
 16840              		.loc 1 2199 0
 16841 1756 07F11803 		add	r3, r7, #24
 16842 175a 1946     		mov	r1, r3
 16843 175c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 375


 16844 175e FFF7FEFF 		bl	strcat
2200:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16845              		.loc 1 2200 0
 16846 1762 7869     		ldr	r0, [r7, #20]
 16847 1764 FFF7FEFF 		bl	strlen
 16848 1768 0346     		mov	r3, r0
 16849 176a 1A46     		mov	r2, r3
 16850 176c 7B69     		ldr	r3, [r7, #20]
 16851 176e 1344     		add	r3, r3, r2
 16852 1770 684A     		ldr	r2, .L690+4
 16853 1772 1188     		ldrh	r1, [r2]	@ unaligned
 16854 1774 9278     		ldrb	r2, [r2, #2]
 16855 1776 1980     		strh	r1, [r3]	@ unaligned
 16856 1778 9A70     		strb	r2, [r3, #2]
2201:..\src/command_processing.c **** 
2202:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16857              		.loc 1 2202 0
 16858 177a D7F88830 		ldr	r3, [r7, #136]
 16859 177e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16860 1782 002B     		cmp	r3, #0
 16861 1784 13D0     		beq	.L639
2203:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16862              		.loc 1 2203 0
 16863 1786 7869     		ldr	r0, [r7, #20]
 16864 1788 FFF7FEFF 		bl	strlen
 16865 178c 0346     		mov	r3, r0
 16866 178e 1A46     		mov	r2, r3
 16867 1790 7B69     		ldr	r3, [r7, #20]
 16868 1792 1344     		add	r3, r3, r2
 16869 1794 634A     		ldr	r2, .L690+20
 16870 1796 1D46     		mov	r5, r3
 16871 1798 1446     		mov	r4, r2
 16872 179a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16873 179c 2860     		str	r0, [r5]	@ unaligned
 16874 179e 6960     		str	r1, [r5, #4]	@ unaligned
 16875 17a0 AA60     		str	r2, [r5, #8]	@ unaligned
 16876 17a2 EB60     		str	r3, [r5, #12]	@ unaligned
 16877 17a4 2068     		ldr	r0, [r4]	@ unaligned
 16878 17a6 2861     		str	r0, [r5, #16]	@ unaligned
 16879 17a8 2379     		ldrb	r3, [r4, #4]
 16880 17aa 2B75     		strb	r3, [r5, #20]
 16881 17ac 10E0     		b	.L640
 16882              	.L639:
2204:..\src/command_processing.c ****         else
2205:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16883              		.loc 1 2205 0
 16884 17ae 7869     		ldr	r0, [r7, #20]
 16885 17b0 FFF7FEFF 		bl	strlen
 16886 17b4 0346     		mov	r3, r0
 16887 17b6 1A46     		mov	r2, r3
 16888 17b8 7B69     		ldr	r3, [r7, #20]
 16889 17ba 1344     		add	r3, r3, r2
 16890 17bc 5A4A     		ldr	r2, .L690+24
 16891 17be 1D46     		mov	r5, r3
 16892 17c0 1446     		mov	r4, r2
 16893 17c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16894 17c4 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 376


 16895 17c6 6960     		str	r1, [r5, #4]	@ unaligned
 16896 17c8 AA60     		str	r2, [r5, #8]	@ unaligned
 16897 17ca EB60     		str	r3, [r5, #12]	@ unaligned
 16898 17cc 2068     		ldr	r0, [r4]	@ unaligned
 16899 17ce 2861     		str	r0, [r5, #16]	@ unaligned
 16900              	.L640:
2206:..\src/command_processing.c ****             
2207:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16901              		.loc 1 2207 0
 16902 17d0 D7F88830 		ldr	r3, [r7, #136]
 16903 17d4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16904 17d8 002B     		cmp	r3, #0
 16905 17da 17D0     		beq	.L641
2208:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16906              		.loc 1 2208 0
 16907 17dc 7869     		ldr	r0, [r7, #20]
 16908 17de FFF7FEFF 		bl	strlen
 16909 17e2 0346     		mov	r3, r0
 16910 17e4 1A46     		mov	r2, r3
 16911 17e6 7B69     		ldr	r3, [r7, #20]
 16912 17e8 1344     		add	r3, r3, r2
 16913 17ea 504A     		ldr	r2, .L690+28
 16914 17ec 1D46     		mov	r5, r3
 16915 17ee 1446     		mov	r4, r2
 16916 17f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16917 17f2 2860     		str	r0, [r5]	@ unaligned
 16918 17f4 6960     		str	r1, [r5, #4]	@ unaligned
 16919 17f6 AA60     		str	r2, [r5, #8]	@ unaligned
 16920 17f8 EB60     		str	r3, [r5, #12]	@ unaligned
 16921 17fa 03CC     		ldmia	r4!, {r0, r1}
 16922 17fc 2861     		str	r0, [r5, #16]	@ unaligned
 16923 17fe 6961     		str	r1, [r5, #20]	@ unaligned
 16924 1800 2388     		ldrh	r3, [r4]	@ unaligned
 16925 1802 A278     		ldrb	r2, [r4, #2]
 16926 1804 2B83     		strh	r3, [r5, #24]	@ unaligned
 16927 1806 1346     		mov	r3, r2
 16928 1808 AB76     		strb	r3, [r5, #26]
 16929 180a 13E0     		b	.L642
 16930              	.L641:
2209:..\src/command_processing.c ****         else
2210:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16931              		.loc 1 2210 0
 16932 180c 7869     		ldr	r0, [r7, #20]
 16933 180e FFF7FEFF 		bl	strlen
 16934 1812 0346     		mov	r3, r0
 16935 1814 1A46     		mov	r2, r3
 16936 1816 7B69     		ldr	r3, [r7, #20]
 16937 1818 1344     		add	r3, r3, r2
 16938 181a 454A     		ldr	r2, .L690+32
 16939 181c 1D46     		mov	r5, r3
 16940 181e 1446     		mov	r4, r2
 16941 1820 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16942 1822 2860     		str	r0, [r5]	@ unaligned
 16943 1824 6960     		str	r1, [r5, #4]	@ unaligned
 16944 1826 AA60     		str	r2, [r5, #8]	@ unaligned
 16945 1828 EB60     		str	r3, [r5, #12]	@ unaligned
 16946 182a 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 377


 16947 182c 2861     		str	r0, [r5, #16]	@ unaligned
 16948 182e 6961     		str	r1, [r5, #20]	@ unaligned
 16949 1830 2388     		ldrh	r3, [r4]	@ unaligned
 16950 1832 2B83     		strh	r3, [r5, #24]	@ unaligned
 16951              	.L642:
2211:..\src/command_processing.c **** 
2212:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16952              		.loc 1 2212 0
 16953 1834 D7F88830 		ldr	r3, [r7, #136]
 16954 1838 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16955 183c 1A46     		mov	r2, r3
 16956 183e D7F88830 		ldr	r3, [r7, #136]
 16957 1842 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16958 1846 07F11800 		add	r0, r7, #24
 16959 184a 3A49     		ldr	r1, .L690+36
 16960 184c FFF7FEFF 		bl	sprintf
2213:..\src/command_processing.c ****         strcat(info_string, str);
 16961              		.loc 1 2213 0
 16962 1850 07F11803 		add	r3, r7, #24
 16963 1854 1946     		mov	r1, r3
 16964 1856 7869     		ldr	r0, [r7, #20]
 16965 1858 FFF7FEFF 		bl	strcat
2214:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16966              		.loc 1 2214 0
 16967 185c 7869     		ldr	r0, [r7, #20]
 16968 185e FFF7FEFF 		bl	strlen
 16969 1862 0346     		mov	r3, r0
 16970 1864 1A46     		mov	r2, r3
 16971 1866 7B69     		ldr	r3, [r7, #20]
 16972 1868 1344     		add	r3, r3, r2
 16973 186a 2A4A     		ldr	r2, .L690+4
 16974 186c 1188     		ldrh	r1, [r2]	@ unaligned
 16975 186e 9278     		ldrb	r2, [r2, #2]
 16976 1870 1980     		strh	r1, [r3]	@ unaligned
 16977 1872 9A70     		strb	r2, [r3, #2]
2215:..\src/command_processing.c **** 
2216:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16978              		.loc 1 2216 0
 16979 1874 D7F88830 		ldr	r3, [r7, #136]
 16980 1878 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16981 187c 012B     		cmp	r3, #1
 16982 187e 40F08A80 		bne	.L643
2217:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16983              		.loc 1 2217 0
 16984 1882 7869     		ldr	r0, [r7, #20]
 16985 1884 FFF7FEFF 		bl	strlen
 16986 1888 0346     		mov	r3, r0
 16987 188a 1A46     		mov	r2, r3
 16988 188c 7B69     		ldr	r3, [r7, #20]
 16989 188e 1344     		add	r3, r3, r2
 16990 1890 294A     		ldr	r2, .L690+40
 16991 1892 1C46     		mov	r4, r3
 16992 1894 1546     		mov	r5, r2
 16993 1896 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16994 1898 2060     		str	r0, [r4]	@ unaligned
 16995 189a 6160     		str	r1, [r4, #4]	@ unaligned
 16996 189c A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 378


 16997 189e E360     		str	r3, [r4, #12]	@ unaligned
 16998 18a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16999 18a2 2061     		str	r0, [r4, #16]	@ unaligned
 17000 18a4 6161     		str	r1, [r4, #20]	@ unaligned
 17001 18a6 A261     		str	r2, [r4, #24]	@ unaligned
 17002 18a8 E361     		str	r3, [r4, #28]	@ unaligned
2218:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17003              		.loc 1 2218 0
 17004 18aa 0023     		movs	r3, #0
 17005 18ac C7F89430 		str	r3, [r7, #148]
 17006 18b0 25E0     		b	.L644
 17007              	.L645:
2219:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17008              		.loc 1 2219 0 discriminator 3
 17009 18b2 D7F89430 		ldr	r3, [r7, #148]
 17010 18b6 591C     		adds	r1, r3, #1
 17011 18b8 204A     		ldr	r2, .L690+44
 17012 18ba D7F89430 		ldr	r3, [r7, #148]
 17013 18be 0233     		adds	r3, r3, #2
 17014 18c0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17015 18c4 07F11800 		add	r0, r7, #24
 17016 18c8 0A46     		mov	r2, r1
 17017 18ca 1D49     		ldr	r1, .L690+48
 17018 18cc FFF7FEFF 		bl	sprintf
2220:..\src/command_processing.c ****                 strcat(info_string, str);
 17019              		.loc 1 2220 0 discriminator 3
 17020 18d0 07F11803 		add	r3, r7, #24
 17021 18d4 1946     		mov	r1, r3
 17022 18d6 7869     		ldr	r0, [r7, #20]
 17023 18d8 FFF7FEFF 		bl	strcat
2221:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17024              		.loc 1 2221 0 discriminator 3
 17025 18dc 7869     		ldr	r0, [r7, #20]
 17026 18de FFF7FEFF 		bl	strlen
 17027 18e2 0346     		mov	r3, r0
 17028 18e4 1A46     		mov	r2, r3
 17029 18e6 7B69     		ldr	r3, [r7, #20]
 17030 18e8 1344     		add	r3, r3, r2
 17031 18ea 0A4A     		ldr	r2, .L690+4
 17032 18ec 1188     		ldrh	r1, [r2]	@ unaligned
 17033 18ee 9278     		ldrb	r2, [r2, #2]
 17034 18f0 1980     		strh	r1, [r3]	@ unaligned
 17035 18f2 9A70     		strb	r2, [r3, #2]
2218:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17036              		.loc 1 2218 0 discriminator 3
 17037 18f4 D7F89430 		ldr	r3, [r7, #148]
 17038 18f8 0133     		adds	r3, r3, #1
 17039 18fa C7F89430 		str	r3, [r7, #148]
 17040              	.L644:
2218:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17041              		.loc 1 2218 0 is_stmt 0 discriminator 1
 17042 18fe D7F89430 		ldr	r3, [r7, #148]
 17043 1902 052B     		cmp	r3, #5
 17044 1904 D5DD     		ble	.L645
2222:..\src/command_processing.c ****             }
2223:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17045              		.loc 1 2223 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 379


 17046 1906 0023     		movs	r3, #0
 17047 1908 C7F89430 		str	r3, [r7, #148]
 17048 190c 3FE0     		b	.L646
 17049              	.L691:
 17050 190e 00BF     		.align	2
 17051              	.L690:
 17052 1910 70180000 		.word	.LC231
 17053 1914 10110000 		.word	.LC150
 17054 1918 8C180000 		.word	.LC232
 17055 191c A0180000 		.word	.LC233
 17056 1920 C4180000 		.word	.LC234
 17057 1924 E8180000 		.word	.LC235
 17058 1928 00190000 		.word	.LC236
 17059 192c 14190000 		.word	.LC237
 17060 1930 30190000 		.word	.LC238
 17061 1934 4C190000 		.word	.LC239
 17062 1938 64190000 		.word	.LC240
 17063 193c 00000000 		.word	g_adc_meas
 17064 1940 84190000 		.word	.LC241
 17065              	.L647:
2224:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17066              		.loc 1 2224 0 discriminator 3
 17067 1944 D7F89430 		ldr	r3, [r7, #148]
 17068 1948 591C     		adds	r1, r3, #1
 17069 194a BD4A     		ldr	r2, .L692
 17070 194c D7F89430 		ldr	r3, [r7, #148]
 17071 1950 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17072 1954 07F11800 		add	r0, r7, #24
 17073 1958 0A46     		mov	r2, r1
 17074 195a BA49     		ldr	r1, .L692+4
 17075 195c FFF7FEFF 		bl	sprintf
2225:..\src/command_processing.c ****                 strcat(info_string, str);
 17076              		.loc 1 2225 0 discriminator 3
 17077 1960 07F11803 		add	r3, r7, #24
 17078 1964 1946     		mov	r1, r3
 17079 1966 7869     		ldr	r0, [r7, #20]
 17080 1968 FFF7FEFF 		bl	strcat
2226:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17081              		.loc 1 2226 0 discriminator 3
 17082 196c 7869     		ldr	r0, [r7, #20]
 17083 196e FFF7FEFF 		bl	strlen
 17084 1972 0346     		mov	r3, r0
 17085 1974 1A46     		mov	r2, r3
 17086 1976 7B69     		ldr	r3, [r7, #20]
 17087 1978 1344     		add	r3, r3, r2
 17088 197a B34A     		ldr	r2, .L692+8
 17089 197c 1188     		ldrh	r1, [r2]	@ unaligned
 17090 197e 9278     		ldrb	r2, [r2, #2]
 17091 1980 1980     		strh	r1, [r3]	@ unaligned
 17092 1982 9A70     		strb	r2, [r3, #2]
2223:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17093              		.loc 1 2223 0 discriminator 3
 17094 1984 D7F89430 		ldr	r3, [r7, #148]
 17095 1988 0133     		adds	r3, r3, #1
 17096 198a C7F89430 		str	r3, [r7, #148]
 17097              	.L646:
2223:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 380


 17098              		.loc 1 2223 0 is_stmt 0 discriminator 1
 17099 198e D7F89430 		ldr	r3, [r7, #148]
 17100 1992 012B     		cmp	r3, #1
 17101 1994 D6DD     		ble	.L647
 17102              	.L643:
2227:..\src/command_processing.c ****             }
2228:..\src/command_processing.c ****         }
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c **** #ifdef GENERIC_FW
2231:..\src/command_processing.c ****     
2232:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17103              		.loc 1 2232 0 is_stmt 1
 17104 1996 7869     		ldr	r0, [r7, #20]
 17105 1998 FFF7FEFF 		bl	strlen
 17106 199c 0346     		mov	r3, r0
 17107 199e 1A46     		mov	r2, r3
 17108 19a0 7B69     		ldr	r3, [r7, #20]
 17109 19a2 1344     		add	r3, r3, r2
 17110 19a4 A84A     		ldr	r2, .L692+8
 17111 19a6 1188     		ldrh	r1, [r2]	@ unaligned
 17112 19a8 9278     		ldrb	r2, [r2, #2]
 17113 19aa 1980     		strh	r1, [r3]	@ unaligned
 17114 19ac 9A70     		strb	r2, [r3, #2]
2233:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17115              		.loc 1 2233 0
 17116 19ae 7869     		ldr	r0, [r7, #20]
 17117 19b0 FFF7FEFF 		bl	strlen
 17118 19b4 0346     		mov	r3, r0
 17119 19b6 1A46     		mov	r2, r3
 17120 19b8 7B69     		ldr	r3, [r7, #20]
 17121 19ba 1344     		add	r3, r3, r2
 17122 19bc A34A     		ldr	r2, .L692+12
 17123 19be 1D46     		mov	r5, r3
 17124 19c0 1446     		mov	r4, r2
 17125 19c2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17126 19c4 2860     		str	r0, [r5]	@ unaligned
 17127 19c6 6960     		str	r1, [r5, #4]	@ unaligned
 17128 19c8 AA60     		str	r2, [r5, #8]	@ unaligned
 17129 19ca EB60     		str	r3, [r5, #12]	@ unaligned
 17130 19cc 03CC     		ldmia	r4!, {r0, r1}
 17131 19ce 2861     		str	r0, [r5, #16]	@ unaligned
 17132 19d0 6961     		str	r1, [r5, #20]	@ unaligned
 17133 19d2 2378     		ldrb	r3, [r4]
 17134 19d4 2B76     		strb	r3, [r5, #24]
2234:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17135              		.loc 1 2234 0
 17136 19d6 9E4B     		ldr	r3, .L692+16
 17137 19d8 B3F8B032 		ldrh	r3, [r3, #688]
 17138 19dc 1A46     		mov	r2, r3
 17139 19de 07F11803 		add	r3, r7, #24
 17140 19e2 9C49     		ldr	r1, .L692+20
 17141 19e4 1846     		mov	r0, r3
 17142 19e6 FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****         strcat(info_string, str);
 17143              		.loc 1 2235 0
 17144 19ea 07F11803 		add	r3, r7, #24
 17145 19ee 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 381


 17146 19f0 7869     		ldr	r0, [r7, #20]
 17147 19f2 FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17148              		.loc 1 2236 0
 17149 19f6 7869     		ldr	r0, [r7, #20]
 17150 19f8 FFF7FEFF 		bl	strlen
 17151 19fc 0346     		mov	r3, r0
 17152 19fe 1A46     		mov	r2, r3
 17153 1a00 7B69     		ldr	r3, [r7, #20]
 17154 1a02 1344     		add	r3, r3, r2
 17155 1a04 904A     		ldr	r2, .L692+8
 17156 1a06 1188     		ldrh	r1, [r2]	@ unaligned
 17157 1a08 9278     		ldrb	r2, [r2, #2]
 17158 1a0a 1980     		strh	r1, [r3]	@ unaligned
 17159 1a0c 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c **** 
2238:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17160              		.loc 1 2238 0
 17161 1a0e 904B     		ldr	r3, .L692+16
 17162 1a10 B3F9B232 		ldrsh	r3, [r3, #690]
 17163 1a14 1A46     		mov	r2, r3
 17164 1a16 07F11803 		add	r3, r7, #24
 17165 1a1a 8F49     		ldr	r1, .L692+24
 17166 1a1c 1846     		mov	r0, r3
 17167 1a1e FFF7FEFF 		bl	sprintf
2239:..\src/command_processing.c ****         strcat(info_string, str);
 17168              		.loc 1 2239 0
 17169 1a22 07F11803 		add	r3, r7, #24
 17170 1a26 1946     		mov	r1, r3
 17171 1a28 7869     		ldr	r0, [r7, #20]
 17172 1a2a FFF7FEFF 		bl	strcat
2240:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17173              		.loc 1 2240 0
 17174 1a2e 7869     		ldr	r0, [r7, #20]
 17175 1a30 FFF7FEFF 		bl	strlen
 17176 1a34 0346     		mov	r3, r0
 17177 1a36 1A46     		mov	r2, r3
 17178 1a38 7B69     		ldr	r3, [r7, #20]
 17179 1a3a 1344     		add	r3, r3, r2
 17180 1a3c 824A     		ldr	r2, .L692+8
 17181 1a3e 1188     		ldrh	r1, [r2]	@ unaligned
 17182 1a40 9278     		ldrb	r2, [r2, #2]
 17183 1a42 1980     		strh	r1, [r3]	@ unaligned
 17184 1a44 9A70     		strb	r2, [r3, #2]
2241:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17185              		.loc 1 2241 0
 17186 1a46 824B     		ldr	r3, .L692+16
 17187 1a48 B3F8B432 		ldrh	r3, [r3, #692]
 17188 1a4c 1A46     		mov	r2, r3
 17189 1a4e 804B     		ldr	r3, .L692+16
 17190 1a50 B3F8B632 		ldrh	r3, [r3, #694]
 17191 1a54 07F11800 		add	r0, r7, #24
 17192 1a58 8049     		ldr	r1, .L692+28
 17193 1a5a FFF7FEFF 		bl	sprintf
2242:..\src/command_processing.c ****         strcat(info_string, str);
 17194              		.loc 1 2242 0
 17195 1a5e 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 382


 17196 1a62 1946     		mov	r1, r3
 17197 1a64 7869     		ldr	r0, [r7, #20]
 17198 1a66 FFF7FEFF 		bl	strcat
2243:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17199              		.loc 1 2243 0
 17200 1a6a 7869     		ldr	r0, [r7, #20]
 17201 1a6c FFF7FEFF 		bl	strlen
 17202 1a70 0346     		mov	r3, r0
 17203 1a72 1A46     		mov	r2, r3
 17204 1a74 7B69     		ldr	r3, [r7, #20]
 17205 1a76 1344     		add	r3, r3, r2
 17206 1a78 734A     		ldr	r2, .L692+8
 17207 1a7a 1188     		ldrh	r1, [r2]	@ unaligned
 17208 1a7c 9278     		ldrb	r2, [r2, #2]
 17209 1a7e 1980     		strh	r1, [r3]	@ unaligned
 17210 1a80 9A70     		strb	r2, [r3, #2]
2244:..\src/command_processing.c **** 
2245:..\src/command_processing.c **** #endif
2246:..\src/command_processing.c ****         
2247:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17211              		.loc 1 2247 0
 17212 1a82 D7F88830 		ldr	r3, [r7, #136]
 17213 1a86 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17214 1a8a 002B     		cmp	r3, #0
 17215 1a8c 63D0     		beq	.L648
2248:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17216              		.loc 1 2248 0
 17217 1a8e D7F88830 		ldr	r3, [r7, #136]
 17218 1a92 D3F8A422 		ldr	r2, [r3, #676]
 17219 1a96 07F11803 		add	r3, r7, #24
 17220 1a9a 7149     		ldr	r1, .L692+32
 17221 1a9c 1846     		mov	r0, r3
 17222 1a9e FFF7FEFF 		bl	sprintf
2249:..\src/command_processing.c ****             strcat(info_string, str);
 17223              		.loc 1 2249 0
 17224 1aa2 07F11803 		add	r3, r7, #24
 17225 1aa6 1946     		mov	r1, r3
 17226 1aa8 7869     		ldr	r0, [r7, #20]
 17227 1aaa FFF7FEFF 		bl	strcat
2250:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17228              		.loc 1 2250 0
 17229 1aae 7869     		ldr	r0, [r7, #20]
 17230 1ab0 FFF7FEFF 		bl	strlen
 17231 1ab4 0346     		mov	r3, r0
 17232 1ab6 1A46     		mov	r2, r3
 17233 1ab8 7B69     		ldr	r3, [r7, #20]
 17234 1aba 1344     		add	r3, r3, r2
 17235 1abc 624A     		ldr	r2, .L692+8
 17236 1abe 1188     		ldrh	r1, [r2]	@ unaligned
 17237 1ac0 9278     		ldrb	r2, [r2, #2]
 17238 1ac2 1980     		strh	r1, [r3]	@ unaligned
 17239 1ac4 9A70     		strb	r2, [r3, #2]
2251:..\src/command_processing.c ****             
2252:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17240              		.loc 1 2252 0
 17241 1ac6 D7F88830 		ldr	r3, [r7, #136]
 17242 1aca D3F8A822 		ldr	r2, [r3, #680]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 383


 17243 1ace 07F11803 		add	r3, r7, #24
 17244 1ad2 6449     		ldr	r1, .L692+36
 17245 1ad4 1846     		mov	r0, r3
 17246 1ad6 FFF7FEFF 		bl	sprintf
2253:..\src/command_processing.c ****             strcat(info_string, str);
 17247              		.loc 1 2253 0
 17248 1ada 07F11803 		add	r3, r7, #24
 17249 1ade 1946     		mov	r1, r3
 17250 1ae0 7869     		ldr	r0, [r7, #20]
 17251 1ae2 FFF7FEFF 		bl	strcat
2254:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17252              		.loc 1 2254 0
 17253 1ae6 7869     		ldr	r0, [r7, #20]
 17254 1ae8 FFF7FEFF 		bl	strlen
 17255 1aec 0346     		mov	r3, r0
 17256 1aee 1A46     		mov	r2, r3
 17257 1af0 7B69     		ldr	r3, [r7, #20]
 17258 1af2 1344     		add	r3, r3, r2
 17259 1af4 544A     		ldr	r2, .L692+8
 17260 1af6 1188     		ldrh	r1, [r2]	@ unaligned
 17261 1af8 9278     		ldrb	r2, [r2, #2]
 17262 1afa 1980     		strh	r1, [r3]	@ unaligned
 17263 1afc 9A70     		strb	r2, [r3, #2]
2255:..\src/command_processing.c ****             
2256:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17264              		.loc 1 2256 0
 17265 1afe D7F88830 		ldr	r3, [r7, #136]
 17266 1b02 D3F8A022 		ldr	r2, [r3, #672]
 17267 1b06 D7F88830 		ldr	r3, [r7, #136]
 17268 1b0a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17269 1b0e 1846     		mov	r0, r3
 17270 1b10 D7F88810 		ldr	r1, [r7, #136]
 17271 1b14 0346     		mov	r3, r0
 17272 1b16 5B00     		lsls	r3, r3, #1
 17273 1b18 0344     		add	r3, r3, r0
 17274 1b1a 1B01     		lsls	r3, r3, #4
 17275 1b1c 0B44     		add	r3, r3, r1
 17276 1b1e 03F29513 		addw	r3, r3, #405
 17277 1b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17278 1b24 1A41     		asrs	r2, r2, r3
 17279 1b26 07F11803 		add	r3, r7, #24
 17280 1b2a 4F49     		ldr	r1, .L692+40
 17281 1b2c 1846     		mov	r0, r3
 17282 1b2e FFF7FEFF 		bl	sprintf
2257:..\src/command_processing.c ****             strcat(info_string, str);
 17283              		.loc 1 2257 0
 17284 1b32 07F11803 		add	r3, r7, #24
 17285 1b36 1946     		mov	r1, r3
 17286 1b38 7869     		ldr	r0, [r7, #20]
 17287 1b3a FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17288              		.loc 1 2258 0
 17289 1b3e 7869     		ldr	r0, [r7, #20]
 17290 1b40 FFF7FEFF 		bl	strlen
 17291 1b44 0346     		mov	r3, r0
 17292 1b46 1A46     		mov	r2, r3
 17293 1b48 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 384


 17294 1b4a 1344     		add	r3, r3, r2
 17295 1b4c 3E4A     		ldr	r2, .L692+8
 17296 1b4e 1188     		ldrh	r1, [r2]	@ unaligned
 17297 1b50 9278     		ldrb	r2, [r2, #2]
 17298 1b52 1980     		strh	r1, [r3]	@ unaligned
 17299 1b54 9A70     		strb	r2, [r3, #2]
 17300              	.L648:
2259:..\src/command_processing.c ****         }
2260:..\src/command_processing.c **** 
2261:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17301              		.loc 1 2261 0
 17302 1b56 D7F88830 		ldr	r3, [r7, #136]
 17303 1b5a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17304 1b5e 002B     		cmp	r3, #0
 17305 1b60 00F0D281 		beq	.L649
2262:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17306              		.loc 1 2262 0
 17307 1b64 414B     		ldr	r3, .L692+44
 17308 1b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17309 1b68 1A46     		mov	r2, r3
 17310 1b6a 07F11803 		add	r3, r7, #24
 17311 1b6e 4049     		ldr	r1, .L692+48
 17312 1b70 1846     		mov	r0, r3
 17313 1b72 FFF7FEFF 		bl	sprintf
2263:..\src/command_processing.c ****             strcat(info_string, str);
 17314              		.loc 1 2263 0
 17315 1b76 07F11803 		add	r3, r7, #24
 17316 1b7a 1946     		mov	r1, r3
 17317 1b7c 7869     		ldr	r0, [r7, #20]
 17318 1b7e FFF7FEFF 		bl	strcat
2264:..\src/command_processing.c ****             
2265:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17319              		.loc 1 2265 0
 17320 1b82 7869     		ldr	r0, [r7, #20]
 17321 1b84 FFF7FEFF 		bl	strlen
 17322 1b88 0346     		mov	r3, r0
 17323 1b8a 1A46     		mov	r2, r3
 17324 1b8c 7B69     		ldr	r3, [r7, #20]
 17325 1b8e 1344     		add	r3, r3, r2
 17326 1b90 2D4A     		ldr	r2, .L692+8
 17327 1b92 1188     		ldrh	r1, [r2]	@ unaligned
 17328 1b94 9278     		ldrb	r2, [r2, #2]
 17329 1b96 1980     		strh	r1, [r3]	@ unaligned
 17330 1b98 9A70     		strb	r2, [r3, #2]
2266:..\src/command_processing.c ****             
2267:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17331              		.loc 1 2267 0
 17332 1b9a 7869     		ldr	r0, [r7, #20]
 17333 1b9c FFF7FEFF 		bl	strlen
 17334 1ba0 0346     		mov	r3, r0
 17335 1ba2 1A46     		mov	r2, r3
 17336 1ba4 7B69     		ldr	r3, [r7, #20]
 17337 1ba6 1344     		add	r3, r3, r2
 17338 1ba8 324A     		ldr	r2, .L692+52
 17339 1baa 1D46     		mov	r5, r3
 17340 1bac 1446     		mov	r4, r2
 17341 1bae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 385


 17342 1bb0 2860     		str	r0, [r5]	@ unaligned
 17343 1bb2 6960     		str	r1, [r5, #4]	@ unaligned
 17344 1bb4 AA60     		str	r2, [r5, #8]	@ unaligned
 17345 1bb6 EB60     		str	r3, [r5, #12]	@ unaligned
 17346 1bb8 2068     		ldr	r0, [r4]	@ unaligned
 17347 1bba 2861     		str	r0, [r5, #16]	@ unaligned
 17348 1bbc 2379     		ldrb	r3, [r4, #4]
 17349 1bbe 2B75     		strb	r3, [r5, #20]
2268:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17350              		.loc 1 2268 0
 17351 1bc0 0023     		movs	r3, #0
 17352 1bc2 C7F89430 		str	r3, [r7, #148]
 17353 1bc6 88E1     		b	.L650
 17354              	.L661:
2269:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17355              		.loc 1 2269 0
 17356 1bc8 2B4A     		ldr	r2, .L692+56
 17357 1bca D7F89430 		ldr	r3, [r7, #148]
 17358 1bce 1344     		add	r3, r3, r2
 17359 1bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17360 1bd2 07F11800 		add	r0, r7, #24
 17361 1bd6 D7F89420 		ldr	r2, [r7, #148]
 17362 1bda 2849     		ldr	r1, .L692+60
 17363 1bdc FFF7FEFF 		bl	sprintf
2270:..\src/command_processing.c ****                 strcat(info_string, str);
 17364              		.loc 1 2270 0
 17365 1be0 07F11803 		add	r3, r7, #24
 17366 1be4 1946     		mov	r1, r3
 17367 1be6 7869     		ldr	r0, [r7, #20]
 17368 1be8 FFF7FEFF 		bl	strcat
2271:..\src/command_processing.c ****                 
2272:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17369              		.loc 1 2272 0
 17370 1bec 07F11803 		add	r3, r7, #24
 17371 1bf0 234A     		ldr	r2, .L692+64
 17372 1bf2 1C46     		mov	r4, r3
 17373 1bf4 1546     		mov	r5, r2
 17374 1bf6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17375 1bf8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17376 1bfa 2B68     		ldr	r3, [r5]
 17377 1bfc 2380     		strh	r3, [r4]	@ movhi
2273:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17378              		.loc 1 2273 0
 17379 1bfe 1E4A     		ldr	r2, .L692+56
 17380 1c00 D7F89430 		ldr	r3, [r7, #148]
 17381 1c04 1344     		add	r3, r3, r2
 17382 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17383 1c08 1946     		mov	r1, r3
 17384 1c0a D7F88820 		ldr	r2, [r7, #136]
 17385 1c0e 0B46     		mov	r3, r1
 17386 1c10 9B00     		lsls	r3, r3, #2
 17387 1c12 0B44     		add	r3, r3, r1
 17388 1c14 1344     		add	r3, r3, r2
 17389 1c16 03F20223 		addw	r3, r3, #514
 17390 1c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17391 1c1c 002B     		cmp	r3, #0
 17392 1c1e 33D0     		beq	.L651
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 386


2274:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17393              		.loc 1 2274 0
 17394 1c20 07F11803 		add	r3, r7, #24
 17395 1c24 1846     		mov	r0, r3
 17396 1c26 FFF7FEFF 		bl	strlen
 17397 1c2a 0346     		mov	r3, r0
 17398 1c2c 1A46     		mov	r2, r3
 17399 1c2e 07F11803 		add	r3, r7, #24
 17400 1c32 1344     		add	r3, r3, r2
 17401 1c34 134A     		ldr	r2, .L692+68
 17402 1c36 1068     		ldr	r0, [r2]	@ unaligned
 17403 1c38 1860     		str	r0, [r3]	@ unaligned
 17404 1c3a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17405 1c3c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17406 1c3e 32E0     		b	.L652
 17407              	.L693:
 17408              		.align	2
 17409              	.L692:
 17410 1c40 00000000 		.word	g_adc_meas
 17411 1c44 94190000 		.word	.LC242
 17412 1c48 10110000 		.word	.LC150
 17413 1c4c A8190000 		.word	.LC243
 17414 1c50 00000000 		.word	c_mem
 17415 1c54 C4190000 		.word	.LC244
 17416 1c58 D8190000 		.word	.LC245
 17417 1c5c F0190000 		.word	.LC246
 17418 1c60 101A0000 		.word	.LC247
 17419 1c64 2C1A0000 		.word	.LC248
 17420 1c68 541A0000 		.word	.LC249
 17421 1c6c 00000000 		.word	N_IMU_Connected
 17422 1c70 681A0000 		.word	.LC250
 17423 1c74 7C1A0000 		.word	.LC251
 17424 1c78 00000000 		.word	IMU_connected
 17425 1c7c 941A0000 		.word	.LC252
 17426 1c80 A81A0000 		.word	.LC253
 17427 1c84 D0120000 		.word	.LC173
 17428              	.L651:
2275:..\src/command_processing.c ****                 else
2276:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17429              		.loc 1 2276 0
 17430 1c88 07F11803 		add	r3, r7, #24
 17431 1c8c 1846     		mov	r0, r3
 17432 1c8e FFF7FEFF 		bl	strlen
 17433 1c92 0346     		mov	r3, r0
 17434 1c94 1A46     		mov	r2, r3
 17435 1c96 07F11803 		add	r3, r7, #24
 17436 1c9a 1344     		add	r3, r3, r2
 17437 1c9c BD4A     		ldr	r2, .L694
 17438 1c9e 1068     		ldr	r0, [r2]	@ unaligned
 17439 1ca0 1860     		str	r0, [r3]	@ unaligned
 17440 1ca2 1279     		ldrb	r2, [r2, #4]
 17441 1ca4 1A71     		strb	r2, [r3, #4]
 17442              	.L652:
2277:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17443              		.loc 1 2277 0
 17444 1ca6 07F11803 		add	r3, r7, #24
 17445 1caa 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 387


 17446 1cac FFF7FEFF 		bl	strlen
 17447 1cb0 0346     		mov	r3, r0
 17448 1cb2 1A46     		mov	r2, r3
 17449 1cb4 07F11803 		add	r3, r7, #24
 17450 1cb8 1344     		add	r3, r3, r2
 17451 1cba B74A     		ldr	r2, .L694+4
 17452 1cbc 1C46     		mov	r4, r3
 17453 1cbe 1346     		mov	r3, r2
 17454 1cc0 07CB     		ldmia	r3!, {r0, r1, r2}
 17455 1cc2 2060     		str	r0, [r4]	@ unaligned
 17456 1cc4 6160     		str	r1, [r4, #4]	@ unaligned
 17457 1cc6 A260     		str	r2, [r4, #8]	@ unaligned
 17458 1cc8 1B88     		ldrh	r3, [r3]	@ unaligned
 17459 1cca A381     		strh	r3, [r4, #12]	@ unaligned
2278:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17460              		.loc 1 2278 0
 17461 1ccc B34A     		ldr	r2, .L694+8
 17462 1cce D7F89430 		ldr	r3, [r7, #148]
 17463 1cd2 1344     		add	r3, r3, r2
 17464 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17465 1cd6 1946     		mov	r1, r3
 17466 1cd8 D7F88820 		ldr	r2, [r7, #136]
 17467 1cdc 0B46     		mov	r3, r1
 17468 1cde 9B00     		lsls	r3, r3, #2
 17469 1ce0 0B44     		add	r3, r3, r1
 17470 1ce2 1344     		add	r3, r3, r2
 17471 1ce4 03F20323 		addw	r3, r3, #515
 17472 1ce8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17473 1cea 002B     		cmp	r3, #0
 17474 1cec 0FD0     		beq	.L653
2279:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17475              		.loc 1 2279 0
 17476 1cee 07F11803 		add	r3, r7, #24
 17477 1cf2 1846     		mov	r0, r3
 17478 1cf4 FFF7FEFF 		bl	strlen
 17479 1cf8 0346     		mov	r3, r0
 17480 1cfa 1A46     		mov	r2, r3
 17481 1cfc 07F11803 		add	r3, r7, #24
 17482 1d00 1344     		add	r3, r3, r2
 17483 1d02 A74A     		ldr	r2, .L694+12
 17484 1d04 1068     		ldr	r0, [r2]	@ unaligned
 17485 1d06 1860     		str	r0, [r3]	@ unaligned
 17486 1d08 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17487 1d0a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17488 1d0c 0EE0     		b	.L654
 17489              	.L653:
2280:..\src/command_processing.c ****                 else
2281:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17490              		.loc 1 2281 0
 17491 1d0e 07F11803 		add	r3, r7, #24
 17492 1d12 1846     		mov	r0, r3
 17493 1d14 FFF7FEFF 		bl	strlen
 17494 1d18 0346     		mov	r3, r0
 17495 1d1a 1A46     		mov	r2, r3
 17496 1d1c 07F11803 		add	r3, r7, #24
 17497 1d20 1344     		add	r3, r3, r2
 17498 1d22 9C4A     		ldr	r2, .L694
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 388


 17499 1d24 1068     		ldr	r0, [r2]	@ unaligned
 17500 1d26 1860     		str	r0, [r3]	@ unaligned
 17501 1d28 1279     		ldrb	r2, [r2, #4]
 17502 1d2a 1A71     		strb	r2, [r3, #4]
 17503              	.L654:
2282:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17504              		.loc 1 2282 0
 17505 1d2c 07F11803 		add	r3, r7, #24
 17506 1d30 1846     		mov	r0, r3
 17507 1d32 FFF7FEFF 		bl	strlen
 17508 1d36 0346     		mov	r3, r0
 17509 1d38 1A46     		mov	r2, r3
 17510 1d3a 07F11803 		add	r3, r7, #24
 17511 1d3e 1344     		add	r3, r3, r2
 17512 1d40 984A     		ldr	r2, .L694+16
 17513 1d42 1D46     		mov	r5, r3
 17514 1d44 1446     		mov	r4, r2
 17515 1d46 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17516 1d48 2860     		str	r0, [r5]	@ unaligned
 17517 1d4a 6960     		str	r1, [r5, #4]	@ unaligned
 17518 1d4c AA60     		str	r2, [r5, #8]	@ unaligned
 17519 1d4e EB60     		str	r3, [r5, #12]	@ unaligned
 17520 1d50 2378     		ldrb	r3, [r4]
 17521 1d52 2B74     		strb	r3, [r5, #16]
2283:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17522              		.loc 1 2283 0
 17523 1d54 914A     		ldr	r2, .L694+8
 17524 1d56 D7F89430 		ldr	r3, [r7, #148]
 17525 1d5a 1344     		add	r3, r3, r2
 17526 1d5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17527 1d5e 1946     		mov	r1, r3
 17528 1d60 D7F88820 		ldr	r2, [r7, #136]
 17529 1d64 0B46     		mov	r3, r1
 17530 1d66 9B00     		lsls	r3, r3, #2
 17531 1d68 0B44     		add	r3, r3, r1
 17532 1d6a 1344     		add	r3, r3, r2
 17533 1d6c 03F50173 		add	r3, r3, #516
 17534 1d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17535 1d72 002B     		cmp	r3, #0
 17536 1d74 0FD0     		beq	.L655
2284:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17537              		.loc 1 2284 0
 17538 1d76 07F11803 		add	r3, r7, #24
 17539 1d7a 1846     		mov	r0, r3
 17540 1d7c FFF7FEFF 		bl	strlen
 17541 1d80 0346     		mov	r3, r0
 17542 1d82 1A46     		mov	r2, r3
 17543 1d84 07F11803 		add	r3, r7, #24
 17544 1d88 1344     		add	r3, r3, r2
 17545 1d8a 854A     		ldr	r2, .L694+12
 17546 1d8c 1068     		ldr	r0, [r2]	@ unaligned
 17547 1d8e 1860     		str	r0, [r3]	@ unaligned
 17548 1d90 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17549 1d92 9A80     		strh	r2, [r3, #4]	@ unaligned
 17550 1d94 0EE0     		b	.L656
 17551              	.L655:
2285:..\src/command_processing.c ****                 else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 389


2286:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17552              		.loc 1 2286 0
 17553 1d96 07F11803 		add	r3, r7, #24
 17554 1d9a 1846     		mov	r0, r3
 17555 1d9c FFF7FEFF 		bl	strlen
 17556 1da0 0346     		mov	r3, r0
 17557 1da2 1A46     		mov	r2, r3
 17558 1da4 07F11803 		add	r3, r7, #24
 17559 1da8 1344     		add	r3, r3, r2
 17560 1daa 7A4A     		ldr	r2, .L694
 17561 1dac 1068     		ldr	r0, [r2]	@ unaligned
 17562 1dae 1860     		str	r0, [r3]	@ unaligned
 17563 1db0 1279     		ldrb	r2, [r2, #4]
 17564 1db2 1A71     		strb	r2, [r3, #4]
 17565              	.L656:
2287:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17566              		.loc 1 2287 0
 17567 1db4 07F11803 		add	r3, r7, #24
 17568 1db8 1846     		mov	r0, r3
 17569 1dba FFF7FEFF 		bl	strlen
 17570 1dbe 0346     		mov	r3, r0
 17571 1dc0 1A46     		mov	r2, r3
 17572 1dc2 07F11803 		add	r3, r7, #24
 17573 1dc6 1344     		add	r3, r3, r2
 17574 1dc8 774A     		ldr	r2, .L694+20
 17575 1dca 1C46     		mov	r4, r3
 17576 1dcc 1346     		mov	r3, r2
 17577 1dce 07CB     		ldmia	r3!, {r0, r1, r2}
 17578 1dd0 2060     		str	r0, [r4]	@ unaligned
 17579 1dd2 6160     		str	r1, [r4, #4]	@ unaligned
 17580 1dd4 A260     		str	r2, [r4, #8]	@ unaligned
 17581 1dd6 1B88     		ldrh	r3, [r3]	@ unaligned
 17582 1dd8 A381     		strh	r3, [r4, #12]	@ unaligned
2288:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17583              		.loc 1 2288 0
 17584 1dda 704A     		ldr	r2, .L694+8
 17585 1ddc D7F89430 		ldr	r3, [r7, #148]
 17586 1de0 1344     		add	r3, r3, r2
 17587 1de2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17588 1de4 1946     		mov	r1, r3
 17589 1de6 D7F88820 		ldr	r2, [r7, #136]
 17590 1dea 0B46     		mov	r3, r1
 17591 1dec 9B00     		lsls	r3, r3, #2
 17592 1dee 0B44     		add	r3, r3, r1
 17593 1df0 1344     		add	r3, r3, r2
 17594 1df2 03F20523 		addw	r3, r3, #517
 17595 1df6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17596 1df8 002B     		cmp	r3, #0
 17597 1dfa 0FD0     		beq	.L657
2289:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17598              		.loc 1 2289 0
 17599 1dfc 07F11803 		add	r3, r7, #24
 17600 1e00 1846     		mov	r0, r3
 17601 1e02 FFF7FEFF 		bl	strlen
 17602 1e06 0346     		mov	r3, r0
 17603 1e08 1A46     		mov	r2, r3
 17604 1e0a 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 390


 17605 1e0e 1344     		add	r3, r3, r2
 17606 1e10 634A     		ldr	r2, .L694+12
 17607 1e12 1068     		ldr	r0, [r2]	@ unaligned
 17608 1e14 1860     		str	r0, [r3]	@ unaligned
 17609 1e16 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17610 1e18 9A80     		strh	r2, [r3, #4]	@ unaligned
 17611 1e1a 0EE0     		b	.L658
 17612              	.L657:
2290:..\src/command_processing.c ****                 else
2291:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17613              		.loc 1 2291 0
 17614 1e1c 07F11803 		add	r3, r7, #24
 17615 1e20 1846     		mov	r0, r3
 17616 1e22 FFF7FEFF 		bl	strlen
 17617 1e26 0346     		mov	r3, r0
 17618 1e28 1A46     		mov	r2, r3
 17619 1e2a 07F11803 		add	r3, r7, #24
 17620 1e2e 1344     		add	r3, r3, r2
 17621 1e30 584A     		ldr	r2, .L694
 17622 1e32 1068     		ldr	r0, [r2]	@ unaligned
 17623 1e34 1860     		str	r0, [r3]	@ unaligned
 17624 1e36 1279     		ldrb	r2, [r2, #4]
 17625 1e38 1A71     		strb	r2, [r3, #4]
 17626              	.L658:
2292:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17627              		.loc 1 2292 0
 17628 1e3a 07F11803 		add	r3, r7, #24
 17629 1e3e 1846     		mov	r0, r3
 17630 1e40 FFF7FEFF 		bl	strlen
 17631 1e44 0346     		mov	r3, r0
 17632 1e46 1A46     		mov	r2, r3
 17633 1e48 07F11803 		add	r3, r7, #24
 17634 1e4c 1344     		add	r3, r3, r2
 17635 1e4e 574A     		ldr	r2, .L694+24
 17636 1e50 1C46     		mov	r4, r3
 17637 1e52 1346     		mov	r3, r2
 17638 1e54 07CB     		ldmia	r3!, {r0, r1, r2}
 17639 1e56 2060     		str	r0, [r4]	@ unaligned
 17640 1e58 6160     		str	r1, [r4, #4]	@ unaligned
 17641 1e5a A260     		str	r2, [r4, #8]	@ unaligned
 17642 1e5c 1A88     		ldrh	r2, [r3]	@ unaligned
 17643 1e5e 9B78     		ldrb	r3, [r3, #2]
 17644 1e60 A281     		strh	r2, [r4, #12]	@ unaligned
 17645 1e62 A373     		strb	r3, [r4, #14]
2293:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17646              		.loc 1 2293 0
 17647 1e64 4D4A     		ldr	r2, .L694+8
 17648 1e66 D7F89430 		ldr	r3, [r7, #148]
 17649 1e6a 1344     		add	r3, r3, r2
 17650 1e6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17651 1e6e 1946     		mov	r1, r3
 17652 1e70 D7F88820 		ldr	r2, [r7, #136]
 17653 1e74 0B46     		mov	r3, r1
 17654 1e76 9B00     		lsls	r3, r3, #2
 17655 1e78 0B44     		add	r3, r3, r1
 17656 1e7a 1344     		add	r3, r3, r2
 17657 1e7c 03F20623 		addw	r3, r3, #518
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 391


 17658 1e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17659 1e82 002B     		cmp	r3, #0
 17660 1e84 0FD0     		beq	.L659
2294:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17661              		.loc 1 2294 0
 17662 1e86 07F11803 		add	r3, r7, #24
 17663 1e8a 1846     		mov	r0, r3
 17664 1e8c FFF7FEFF 		bl	strlen
 17665 1e90 0346     		mov	r3, r0
 17666 1e92 1A46     		mov	r2, r3
 17667 1e94 07F11803 		add	r3, r7, #24
 17668 1e98 1344     		add	r3, r3, r2
 17669 1e9a 414A     		ldr	r2, .L694+12
 17670 1e9c 1068     		ldr	r0, [r2]	@ unaligned
 17671 1e9e 1860     		str	r0, [r3]	@ unaligned
 17672 1ea0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17673 1ea2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17674 1ea4 0EE0     		b	.L660
 17675              	.L659:
2295:..\src/command_processing.c ****                 else
2296:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17676              		.loc 1 2296 0
 17677 1ea6 07F11803 		add	r3, r7, #24
 17678 1eaa 1846     		mov	r0, r3
 17679 1eac FFF7FEFF 		bl	strlen
 17680 1eb0 0346     		mov	r3, r0
 17681 1eb2 1A46     		mov	r2, r3
 17682 1eb4 07F11803 		add	r3, r7, #24
 17683 1eb8 1344     		add	r3, r3, r2
 17684 1eba 364A     		ldr	r2, .L694
 17685 1ebc 1068     		ldr	r0, [r2]	@ unaligned
 17686 1ebe 1860     		str	r0, [r3]	@ unaligned
 17687 1ec0 1279     		ldrb	r2, [r2, #4]
 17688 1ec2 1A71     		strb	r2, [r3, #4]
 17689              	.L660:
2297:..\src/command_processing.c ****                      
2298:..\src/command_processing.c ****                 strcat(info_string, str);
 17690              		.loc 1 2298 0 discriminator 2
 17691 1ec4 07F11803 		add	r3, r7, #24
 17692 1ec8 1946     		mov	r1, r3
 17693 1eca 7869     		ldr	r0, [r7, #20]
 17694 1ecc FFF7FEFF 		bl	strcat
2268:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17695              		.loc 1 2268 0 discriminator 2
 17696 1ed0 D7F89430 		ldr	r3, [r7, #148]
 17697 1ed4 0133     		adds	r3, r3, #1
 17698 1ed6 C7F89430 		str	r3, [r7, #148]
 17699              	.L650:
2268:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17700              		.loc 1 2268 0 is_stmt 0 discriminator 1
 17701 1eda 354B     		ldr	r3, .L694+28
 17702 1edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17703 1ede 1A46     		mov	r2, r3
 17704 1ee0 D7F89430 		ldr	r3, [r7, #148]
 17705 1ee4 9A42     		cmp	r2, r3
 17706 1ee6 3FF76FAE 		bgt	.L661
2299:..\src/command_processing.c ****             }       
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 392


2300:..\src/command_processing.c ****             
2301:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17707              		.loc 1 2301 0 is_stmt 1
 17708 1eea 7869     		ldr	r0, [r7, #20]
 17709 1eec FFF7FEFF 		bl	strlen
 17710 1ef0 0346     		mov	r3, r0
 17711 1ef2 1A46     		mov	r2, r3
 17712 1ef4 7B69     		ldr	r3, [r7, #20]
 17713 1ef6 1344     		add	r3, r3, r2
 17714 1ef8 2E4A     		ldr	r2, .L694+32
 17715 1efa 1188     		ldrh	r1, [r2]	@ unaligned
 17716 1efc 9278     		ldrb	r2, [r2, #2]
 17717 1efe 1980     		strh	r1, [r3]	@ unaligned
 17718 1f00 9A70     		strb	r2, [r3, #2]
2302:..\src/command_processing.c ****           
2303:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17719              		.loc 1 2303 0
 17720 1f02 7869     		ldr	r0, [r7, #20]
 17721 1f04 FFF7FEFF 		bl	IMU_reading_info
 17722              	.L649:
2304:..\src/command_processing.c ****         }
2305:..\src/command_processing.c ****         
2306:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17723              		.loc 1 2306 0
 17724 1f08 7869     		ldr	r0, [r7, #20]
 17725 1f0a FFF7FEFF 		bl	strlen
 17726 1f0e 0346     		mov	r3, r0
 17727 1f10 1A46     		mov	r2, r3
 17728 1f12 7B69     		ldr	r3, [r7, #20]
 17729 1f14 1344     		add	r3, r3, r2
 17730 1f16 274A     		ldr	r2, .L694+32
 17731 1f18 1188     		ldrh	r1, [r2]	@ unaligned
 17732 1f1a 9278     		ldrb	r2, [r2, #2]
 17733 1f1c 1980     		strh	r1, [r3]	@ unaligned
 17734 1f1e 9A70     		strb	r2, [r3, #2]
2307:..\src/command_processing.c **** 
2308:..\src/command_processing.c **** #ifdef GENERIC_FW   
2309:..\src/command_processing.c ****         int j;
2310:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17735              		.loc 1 2310 0
 17736 1f20 7869     		ldr	r0, [r7, #20]
 17737 1f22 FFF7FEFF 		bl	strlen
 17738 1f26 0346     		mov	r3, r0
 17739 1f28 1A46     		mov	r2, r3
 17740 1f2a 7B69     		ldr	r3, [r7, #20]
 17741 1f2c 1344     		add	r3, r3, r2
 17742 1f2e 224A     		ldr	r2, .L694+36
 17743 1f30 1D46     		mov	r5, r3
 17744 1f32 1446     		mov	r4, r2
 17745 1f34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17746 1f36 2860     		str	r0, [r5]	@ unaligned
 17747 1f38 6960     		str	r1, [r5, #4]	@ unaligned
 17748 1f3a AA60     		str	r2, [r5, #8]	@ unaligned
 17749 1f3c EB60     		str	r3, [r5, #12]	@ unaligned
 17750 1f3e 03CC     		ldmia	r4!, {r0, r1}
 17751 1f40 2861     		str	r0, [r5, #16]	@ unaligned
 17752 1f42 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 393


2311:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 17753              		.loc 1 2311 0
 17754 1f44 0023     		movs	r3, #0
 17755 1f46 C7F89430 		str	r3, [r7, #148]
 17756 1f4a BCE0     		b	.L662
 17757              	.L671:
2312:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17758              		.loc 1 2312 0
 17759 1f4c 1B4A     		ldr	r2, .L694+40
 17760 1f4e D7F89430 		ldr	r3, [r7, #148]
 17761 1f52 1344     		add	r3, r3, r2
 17762 1f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17763 1f56 07F11800 		add	r0, r7, #24
 17764 1f5a D7F89420 		ldr	r2, [r7, #148]
 17765 1f5e 1849     		ldr	r1, .L694+44
 17766 1f60 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****             strcat(info_string, str);
 17767              		.loc 1 2313 0
 17768 1f64 07F11803 		add	r3, r7, #24
 17769 1f68 1946     		mov	r1, r3
 17770 1f6a 7869     		ldr	r0, [r7, #20]
 17771 1f6c FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17772              		.loc 1 2314 0
 17773 1f70 D7F88830 		ldr	r3, [r7, #136]
 17774 1f74 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17775 1f78 1A46     		mov	r2, r3
 17776 1f7a D7F89430 		ldr	r3, [r7, #148]
 17777 1f7e 9A42     		cmp	r2, r3
 17778 1f80 2FD1     		bne	.L663
2315:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17779              		.loc 1 2315 0
 17780 1f82 D7F88830 		ldr	r3, [r7, #136]
 17781 1f86 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17782 1f8a 002B     		cmp	r3, #0
 17783 1f8c 1CD0     		beq	.L664
 17784              		.loc 1 2315 0 is_stmt 0 discriminator 1
 17785 1f8e 0D4A     		ldr	r2, .L694+48
 17786 1f90 1BE0     		b	.L665
 17787              	.L695:
 17788 1f92 00BF     		.align	2
 17789              	.L694:
 17790 1f94 D8120000 		.word	.LC174
 17791 1f98 BC1A0000 		.word	.LC254
 17792 1f9c 00000000 		.word	IMU_connected
 17793 1fa0 D0120000 		.word	.LC173
 17794 1fa4 CC1A0000 		.word	.LC255
 17795 1fa8 E01A0000 		.word	.LC256
 17796 1fac F01A0000 		.word	.LC257
 17797 1fb0 00000000 		.word	N_IMU_Connected
 17798 1fb4 10110000 		.word	.LC150
 17799 1fb8 001B0000 		.word	.LC258
 17800 1fbc 00000000 		.word	N_Encoder_Line_Connected
 17801 1fc0 181B0000 		.word	.LC259
 17802 1fc4 381B0000 		.word	.LC260
 17803              	.L664:
 17804              		.loc 1 2315 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 394


 17805 1fc8 534A     		ldr	r2, .L696
 17806              	.L665:
 17807              		.loc 1 2315 0 discriminator 4
 17808 1fca 07F11803 		add	r3, r7, #24
 17809 1fce 5349     		ldr	r1, .L696+4
 17810 1fd0 1846     		mov	r0, r3
 17811 1fd2 FFF7FEFF 		bl	sprintf
2316:..\src/command_processing.c ****                 strcat(info_string, str);
 17812              		.loc 1 2316 0 is_stmt 1 discriminator 4
 17813 1fd6 07F11803 		add	r3, r7, #24
 17814 1fda 1946     		mov	r1, r3
 17815 1fdc 7869     		ldr	r0, [r7, #20]
 17816 1fde FFF7FEFF 		bl	strcat
 17817              	.L663:
2317:..\src/command_processing.c ****             }
2318:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17818              		.loc 1 2318 0
 17819 1fe2 7869     		ldr	r0, [r7, #20]
 17820 1fe4 FFF7FEFF 		bl	strlen
 17821 1fe8 0346     		mov	r3, r0
 17822 1fea 1A46     		mov	r2, r3
 17823 1fec 7B69     		ldr	r3, [r7, #20]
 17824 1fee 1344     		add	r3, r3, r2
 17825 1ff0 4B4A     		ldr	r2, .L696+8
 17826 1ff2 1188     		ldrh	r1, [r2]	@ unaligned
 17827 1ff4 9278     		ldrb	r2, [r2, #2]
 17828 1ff6 1980     		strh	r1, [r3]	@ unaligned
 17829 1ff8 9A70     		strb	r2, [r3, #2]
2319:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 17830              		.loc 1 2319 0
 17831 1ffa 4A4A     		ldr	r2, .L696+12
 17832 1ffc D7F89430 		ldr	r3, [r7, #148]
 17833 2000 1344     		add	r3, r3, r2
 17834 2002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17835 2004 002B     		cmp	r3, #0
 17836 2006 59D0     		beq	.L666
2320:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 17837              		.loc 1 2320 0
 17838 2008 7869     		ldr	r0, [r7, #20]
 17839 200a FFF7FEFF 		bl	strlen
 17840 200e 0346     		mov	r3, r0
 17841 2010 1A46     		mov	r2, r3
 17842 2012 7B69     		ldr	r3, [r7, #20]
 17843 2014 1344     		add	r3, r3, r2
 17844 2016 444A     		ldr	r2, .L696+16
 17845 2018 1D46     		mov	r5, r3
 17846 201a 1446     		mov	r4, r2
 17847 201c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17848 201e 2860     		str	r0, [r5]	@ unaligned
 17849 2020 6960     		str	r1, [r5, #4]	@ unaligned
 17850 2022 AA60     		str	r2, [r5, #8]	@ unaligned
 17851 2024 EB60     		str	r3, [r5, #12]	@ unaligned
 17852 2026 2068     		ldr	r0, [r4]	@ unaligned
 17853 2028 2861     		str	r0, [r5, #16]	@ unaligned
 17854 202a A388     		ldrh	r3, [r4, #4]	@ unaligned
 17855 202c AB82     		strh	r3, [r5, #20]	@ unaligned
2321:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 395


 17856              		.loc 1 2321 0
 17857 202e 0023     		movs	r3, #0
 17858 2030 C7F88C30 		str	r3, [r7, #140]
 17859 2034 2CE0     		b	.L667
 17860              	.L670:
2322:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 17861              		.loc 1 2322 0
 17862 2036 3D49     		ldr	r1, .L696+20
 17863 2038 D7F89420 		ldr	r2, [r7, #148]
 17864 203c 1346     		mov	r3, r2
 17865 203e 9B00     		lsls	r3, r3, #2
 17866 2040 1344     		add	r3, r3, r2
 17867 2042 D7F88C20 		ldr	r2, [r7, #140]
 17868 2046 1344     		add	r3, r3, r2
 17869 2048 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 17870 204c 1C46     		mov	r4, r3
 17871 204e 3849     		ldr	r1, .L696+24
 17872 2050 D7F89420 		ldr	r2, [r7, #148]
 17873 2054 1346     		mov	r3, r2
 17874 2056 9B00     		lsls	r3, r3, #2
 17875 2058 1344     		add	r3, r3, r2
 17876 205a CA18     		adds	r2, r1, r3
 17877 205c D7F88C30 		ldr	r3, [r7, #140]
 17878 2060 1344     		add	r3, r3, r2
 17879 2062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17880 2064 102B     		cmp	r3, #16
 17881 2066 01D1     		bne	.L668
 17882              		.loc 1 2322 0 is_stmt 0 discriminator 1
 17883 2068 324B     		ldr	r3, .L696+28
 17884 206a 00E0     		b	.L669
 17885              	.L668:
 17886              		.loc 1 2322 0 discriminator 2
 17887 206c 324B     		ldr	r3, .L696+32
 17888              	.L669:
 17889              		.loc 1 2322 0 discriminator 4
 17890 206e 07F11800 		add	r0, r7, #24
 17891 2072 2246     		mov	r2, r4
 17892 2074 3149     		ldr	r1, .L696+36
 17893 2076 FFF7FEFF 		bl	sprintf
2323:..\src/command_processing.c ****                     strcat(info_string, str);
 17894              		.loc 1 2323 0 is_stmt 1 discriminator 4
 17895 207a 07F11803 		add	r3, r7, #24
 17896 207e 1946     		mov	r1, r3
 17897 2080 7869     		ldr	r0, [r7, #20]
 17898 2082 FFF7FEFF 		bl	strcat
2321:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17899              		.loc 1 2321 0 discriminator 4
 17900 2086 D7F88C30 		ldr	r3, [r7, #140]
 17901 208a 0133     		adds	r3, r3, #1
 17902 208c C7F88C30 		str	r3, [r7, #140]
 17903              	.L667:
2321:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17904              		.loc 1 2321 0 is_stmt 0 discriminator 2
 17905 2090 244A     		ldr	r2, .L696+12
 17906 2092 D7F89430 		ldr	r3, [r7, #148]
 17907 2096 1344     		add	r3, r3, r2
 17908 2098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 396


 17909 209a 1A46     		mov	r2, r3
 17910 209c D7F88C30 		ldr	r3, [r7, #140]
 17911 20a0 9A42     		cmp	r2, r3
 17912 20a2 C8DC     		bgt	.L670
2324:..\src/command_processing.c ****                 }
2325:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 17913              		.loc 1 2325 0 is_stmt 1
 17914 20a4 7869     		ldr	r0, [r7, #20]
 17915 20a6 FFF7FEFF 		bl	strlen
 17916 20aa 0346     		mov	r3, r0
 17917 20ac 1A46     		mov	r2, r3
 17918 20ae 7B69     		ldr	r3, [r7, #20]
 17919 20b0 1344     		add	r3, r3, r2
 17920 20b2 1B4A     		ldr	r2, .L696+8
 17921 20b4 1188     		ldrh	r1, [r2]	@ unaligned
 17922 20b6 9278     		ldrb	r2, [r2, #2]
 17923 20b8 1980     		strh	r1, [r3]	@ unaligned
 17924 20ba 9A70     		strb	r2, [r3, #2]
 17925              	.L666:
2311:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17926              		.loc 1 2311 0 discriminator 2
 17927 20bc D7F89430 		ldr	r3, [r7, #148]
 17928 20c0 0133     		adds	r3, r3, #1
 17929 20c2 C7F89430 		str	r3, [r7, #148]
 17930              	.L662:
2311:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17931              		.loc 1 2311 0 is_stmt 0 discriminator 1
 17932 20c6 D7F89430 		ldr	r3, [r7, #148]
 17933 20ca 012B     		cmp	r3, #1
 17934 20cc 7FF73EAF 		ble	.L671
2326:..\src/command_processing.c ****             }
2327:..\src/command_processing.c ****         }
2328:..\src/command_processing.c **** #endif   
2329:..\src/command_processing.c ****         
2330:..\src/command_processing.c **** #ifdef MASTER_FW
2331:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2332:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2333:..\src/command_processing.c ****         else
2334:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2337:..\src/command_processing.c ****         strcat(info_string, str);
2338:..\src/command_processing.c **** #endif
2339:..\src/command_processing.c **** 
2340:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17935              		.loc 1 2340 0 is_stmt 1
 17936 20d0 1B4B     		ldr	r3, .L696+40
 17937 20d2 1B88     		ldrh	r3, [r3]
 17938 20d4 1A46     		mov	r2, r3
 17939 20d6 1B4B     		ldr	r3, .L696+44
 17940 20d8 1B88     		ldrh	r3, [r3]
 17941 20da D21A     		subs	r2, r2, r3
 17942 20dc 07F11803 		add	r3, r7, #24
 17943 20e0 1949     		ldr	r1, .L696+48
 17944 20e2 1846     		mov	r0, r3
 17945 20e4 FFF7FEFF 		bl	sprintf
2341:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 397


 17946              		.loc 1 2341 0
 17947 20e8 07F11803 		add	r3, r7, #24
 17948 20ec 1946     		mov	r1, r3
 17949 20ee 7869     		ldr	r0, [r7, #20]
 17950 20f0 FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****   
2343:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17951              		.loc 1 2343 0
 17952 20f4 7869     		ldr	r0, [r7, #20]
 17953 20f6 FFF7FEFF 		bl	strlen
 17954 20fa 0346     		mov	r3, r0
 17955 20fc 1A46     		mov	r2, r3
 17956 20fe 7B69     		ldr	r3, [r7, #20]
 17957 2100 1344     		add	r3, r3, r2
 17958 2102 124A     		ldr	r2, .L696+52
 17959 2104 1188     		ldrh	r1, [r2]	@ unaligned
 17960 2106 9278     		ldrb	r2, [r2, #2]
 17961 2108 1980     		strh	r1, [r3]	@ unaligned
 17962 210a 9A70     		strb	r2, [r3, #2]
 17963              	.L673:
 17964              	.LBE20:
2344:..\src/command_processing.c ****     }
2345:..\src/command_processing.c **** }
 17965              		.loc 1 2345 0
 17966 210c 00BF     		nop
 17967 210e 9C37     		adds	r7, r7, #156
 17968              		.cfi_def_cfa_offset 36
 17969 2110 BD46     		mov	sp, r7
 17970              		.cfi_def_cfa_register 13
 17971              		@ sp needed
 17972 2112 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17973              	.L697:
 17974 2116 00BF     		.align	2
 17975              	.L696:
 17976 2118 401B0000 		.word	.LC261
 17977 211c 481B0000 		.word	.LC262
 17978 2120 10110000 		.word	.LC150
 17979 2124 00000000 		.word	N_Encoder_Line_Connected
 17980 2128 681B0000 		.word	.LC263
 17981 212c 00000000 		.word	Encoder_Value
 17982 2130 00000000 		.word	Encoder_Check
 17983 2134 801B0000 		.word	.LC264
 17984 2138 841B0000 		.word	.LC265
 17985 213c 881B0000 		.word	.LC266
 17986 2140 00000000 		.word	timer_value0
 17987 2144 00000000 		.word	timer_value
 17988 2148 941B0000 		.word	.LC267
 17989 214c B01B0000 		.word	.LC268
 17990              		.cfi_endproc
 17991              	.LFE72:
 17992              		.size	prepare_generic_info, .-prepare_generic_info
 17993              		.section	.rodata
 17994              		.align	2
 17995              	.LC269:
 17996 1bb4 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17996      41474520 
 17996      53544154 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 398


 17996      49535449 
 17996      43530D0A 
 17997 1bc9 000000   		.align	2
 17998              	.LC270:
 17999 1bcc 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17999      206F6620 
 17999      4857206D 
 17999      61696E74 
 17999      656E616E 
 18000 1bf7 00       		.align	2
 18001              	.LC271:
 18002 1bf8 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18002      206F6620 
 18002      75736167 
 18002      65207374 
 18002      61747320 
 18003 1c2b 0A00     		.ascii	"\012\000"
 18004 1c2d 000000   		.align	2
 18005              	.LC272:
 18006 1c30 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18006      20636865 
 18006      636B6564 
 18006      2054696D 
 18006      653A2025 
 18007 1c63 0A00     		.ascii	"\012\000"
 18008 1c65 000000   		.align	2
 18009              	.LC273:
 18010 1c68 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18010      74696F6E 
 18010      73206869 
 18010      73746F67 
 18010      72616D20 
 18011 1c87 00       		.align	2
 18012              	.LC274:
 18013 1c88 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18013      2564205B 
 18013      25642D25 
 18013      645D3A20 
 18013      256C750D 
 18014 1c9e 0000     		.align	2
 18015              	.LC275:
 18016 1ca0 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18016      656E7420 
 18016      68697374 
 18016      6F677261 
 18016      6D20286D 
 18017 1cba 0000     		.align	2
 18018              	.LC276:
 18019 1cbc 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18019      73686F6C 
 18019      64202564 
 18019      205B2564 
 18019      2D25645D 
 18020              		.align	2
 18021              	.LC277:
 18022 1cd8 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18022      61637469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 399


 18022      76617469 
 18022      6F6E7320 
 18022      636F756E 
 18023 1cfa 0000     		.align	2
 18024              	.LC278:
 18025 1cfc 52657374 		.ascii	"Rest position occurrences: %lu\000"
 18025      20706F73 
 18025      6974696F 
 18025      6E206F63 
 18025      63757272 
 18026 1d1b 00       		.align	2
 18027              	.LC279:
 18028 1d1c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18028      6520746F 
 18028      74616C20 
 18028      64697370 
 18028      6C616365 
 18029 1d42 0000     		.align	2
 18030              	.LC280:
 18031 1d44 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18031      6C20706F 
 18031      77657220 
 18031      6F6E2074 
 18031      696D6520 
 18032 1d63 00       		.align	2
 18033              	.LC281:
 18034 1d64 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18034      6C207265 
 18034      73742070 
 18034      6F736974 
 18034      696F6E20 
 18035              		.section	.text.prepare_counter_info,"ax",%progbits
 18036              		.align	2
 18037              		.global	prepare_counter_info
 18038              		.thumb
 18039              		.thumb_func
 18040              		.type	prepare_counter_info, %function
 18041              	prepare_counter_info:
 18042              	.LFB73:
2346:..\src/command_processing.c **** 
2347:..\src/command_processing.c **** //==============================================================================
2348:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2349:..\src/command_processing.c **** //==============================================================================
2350:..\src/command_processing.c **** 
2351:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2352:..\src/command_processing.c **** {
 18043              		.loc 1 2352 0
 18044              		.cfi_startproc
 18045              		@ args = 0, pretend = 0, frame = 128
 18046              		@ frame_needed = 1, uses_anonymous_args = 0
 18047 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18048              		.cfi_def_cfa_offset 20
 18049              		.cfi_offset 4, -20
 18050              		.cfi_offset 5, -16
 18051              		.cfi_offset 6, -12
 18052              		.cfi_offset 7, -8
 18053              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 400


 18054 0002 A5B0     		sub	sp, sp, #148
 18055              		.cfi_def_cfa_offset 168
 18056 0004 04AF     		add	r7, sp, #16
 18057              		.cfi_def_cfa 7, 152
 18058 0006 7860     		str	r0, [r7, #4]
2353:..\src/command_processing.c ****     char str[100];  
2354:..\src/command_processing.c ****     int i;
2355:..\src/command_processing.c ****     int step;
2356:..\src/command_processing.c **** 
2357:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18059              		.loc 1 2357 0
 18060 0008 7D4B     		ldr	r3, .L704
 18061 000a BB67     		str	r3, [r7, #120]
2358:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18062              		.loc 1 2358 0
 18063 000c BB6F     		ldr	r3, [r7, #120]
 18064 000e B033     		adds	r3, r3, #176
 18065 0010 7B67     		str	r3, [r7, #116]
2359:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18066              		.loc 1 2359 0
 18067 0012 7B6F     		ldr	r3, [r7, #116]
 18068 0014 93F86030 		ldrb	r3, [r3, #96]
 18069 0018 87F87330 		strb	r3, [r7, #115]
2360:..\src/command_processing.c ****     
2361:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18070              		.loc 1 2361 0
 18071 001c 7868     		ldr	r0, [r7, #4]
 18072 001e FFF7FEFF 		bl	strlen
 18073 0022 0346     		mov	r3, r0
 18074 0024 1A46     		mov	r2, r3
 18075 0026 7B68     		ldr	r3, [r7, #4]
 18076 0028 1344     		add	r3, r3, r2
 18077 002a 764A     		ldr	r2, .L704+4
 18078 002c 1D46     		mov	r5, r3
 18079 002e 1446     		mov	r4, r2
 18080 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18081 0032 2860     		str	r0, [r5]	@ unaligned
 18082 0034 6960     		str	r1, [r5, #4]	@ unaligned
 18083 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 18084 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 18085 003a 2068     		ldr	r0, [r4]	@ unaligned
 18086 003c 2861     		str	r0, [r5, #16]	@ unaligned
 18087 003e 2379     		ldrb	r3, [r4, #4]
 18088 0040 2B75     		strb	r3, [r5, #20]
2362:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18089              		.loc 1 2362 0
 18090 0042 7868     		ldr	r0, [r7, #4]
 18091 0044 FFF7FEFF 		bl	strlen
 18092 0048 0346     		mov	r3, r0
 18093 004a 1A46     		mov	r2, r3
 18094 004c 7B68     		ldr	r3, [r7, #4]
 18095 004e 1344     		add	r3, r3, r2
 18096 0050 6D4A     		ldr	r2, .L704+8
 18097 0052 1188     		ldrh	r1, [r2]	@ unaligned
 18098 0054 9278     		ldrb	r2, [r2, #2]
 18099 0056 1980     		strh	r1, [r3]	@ unaligned
 18100 0058 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 401


2363:..\src/command_processing.c ****     
2364:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18101              		.loc 1 2364 0
 18102 005a BB6F     		ldr	r3, [r7, #120]
 18103 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18104 0060 1A46     		mov	r2, r3
 18105 0062 BB6F     		ldr	r3, [r7, #120]
 18106 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18107 0068 1946     		mov	r1, r3
 18108 006a BB6F     		ldr	r3, [r7, #120]
 18109 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18110 0070 07F10800 		add	r0, r7, #8
 18111 0074 0093     		str	r3, [sp]
 18112 0076 0B46     		mov	r3, r1
 18113 0078 6449     		ldr	r1, .L704+12
 18114 007a FFF7FEFF 		bl	sprintf
2365:..\src/command_processing.c ****     strcat(info_string, str);
 18115              		.loc 1 2365 0
 18116 007e 07F10803 		add	r3, r7, #8
 18117 0082 1946     		mov	r1, r3
 18118 0084 7868     		ldr	r0, [r7, #4]
 18119 0086 FFF7FEFF 		bl	strcat
2366:..\src/command_processing.c ****     
2367:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18120              		.loc 1 2367 0
 18121 008a BB6F     		ldr	r3, [r7, #120]
 18122 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18123 0090 1A46     		mov	r2, r3
 18124 0092 BB6F     		ldr	r3, [r7, #120]
 18125 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18126 0098 1946     		mov	r1, r3
 18127 009a BB6F     		ldr	r3, [r7, #120]
 18128 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18129 00a0 07F10800 		add	r0, r7, #8
 18130 00a4 0093     		str	r3, [sp]
 18131 00a6 0B46     		mov	r3, r1
 18132 00a8 5949     		ldr	r1, .L704+16
 18133 00aa FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****     strcat(info_string, str);
 18134              		.loc 1 2368 0
 18135 00ae 07F10803 		add	r3, r7, #8
 18136 00b2 1946     		mov	r1, r3
 18137 00b4 7868     		ldr	r0, [r7, #4]
 18138 00b6 FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****             
2370:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18139              		.loc 1 2370 0
 18140 00ba BB6F     		ldr	r3, [r7, #120]
 18141 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18142 00c0 1D46     		mov	r5, r3
 18143 00c2 BB6F     		ldr	r3, [r7, #120]
 18144 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 18145 00c8 1E46     		mov	r6, r3
 18146 00ca BB6F     		ldr	r3, [r7, #120]
 18147 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18148 00d0 1A46     		mov	r2, r3
 18149 00d2 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 402


 18150 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18151 00d8 1946     		mov	r1, r3
 18152 00da BB6F     		ldr	r3, [r7, #120]
 18153 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18154 00e0 1C46     		mov	r4, r3
 18155 00e2 BB6F     		ldr	r3, [r7, #120]
 18156 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18157 00e8 07F10800 		add	r0, r7, #8
 18158 00ec 0393     		str	r3, [sp, #12]
 18159 00ee 0294     		str	r4, [sp, #8]
 18160 00f0 0191     		str	r1, [sp, #4]
 18161 00f2 0092     		str	r2, [sp]
 18162 00f4 3346     		mov	r3, r6
 18163 00f6 2A46     		mov	r2, r5
 18164 00f8 4649     		ldr	r1, .L704+20
 18165 00fa FFF7FEFF 		bl	sprintf
2371:..\src/command_processing.c ****     strcat(info_string, str);
 18166              		.loc 1 2371 0
 18167 00fe 07F10803 		add	r3, r7, #8
 18168 0102 1946     		mov	r1, r3
 18169 0104 7868     		ldr	r0, [r7, #4]
 18170 0106 FFF7FEFF 		bl	strcat
2372:..\src/command_processing.c ****     
2373:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18171              		.loc 1 2373 0
 18172 010a 07F10803 		add	r3, r7, #8
 18173 010e 424A     		ldr	r2, .L704+24
 18174 0110 1C46     		mov	r4, r3
 18175 0112 1546     		mov	r5, r2
 18176 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18177 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18178 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18179 011c 07C4     		stmia	r4!, {r0, r1, r2}
 18180 011e 2380     		strh	r3, [r4]	@ movhi
 18181 0120 0234     		adds	r4, r4, #2
 18182 0122 1B0C     		lsrs	r3, r3, #16
 18183 0124 2370     		strb	r3, [r4]
2374:..\src/command_processing.c ****     strcat(info_string, str);
 18184              		.loc 1 2374 0
 18185 0126 07F10803 		add	r3, r7, #8
 18186 012a 1946     		mov	r1, r3
 18187 012c 7868     		ldr	r0, [r7, #4]
 18188 012e FFF7FEFF 		bl	strcat
2375:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18189              		.loc 1 2375 0
 18190 0132 7B6F     		ldr	r3, [r7, #116]
 18191 0134 996B     		ldr	r1, [r3, #56]
 18192 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18193 013a B86F     		ldr	r0, [r7, #120]
 18194 013c 1346     		mov	r3, r2
 18195 013e 5B00     		lsls	r3, r3, #1
 18196 0140 1344     		add	r3, r3, r2
 18197 0142 1B01     		lsls	r3, r3, #4
 18198 0144 0344     		add	r3, r3, r0
 18199 0146 03F29513 		addw	r3, r3, #405
 18200 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18201 014c 41FA03F3 		asr	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 403


 18202 0150 324A     		ldr	r2, .L704+28
 18203 0152 82FB0312 		smull	r1, r2, r2, r3
 18204 0156 9210     		asrs	r2, r2, #2
 18205 0158 DB17     		asrs	r3, r3, #31
 18206 015a D31A     		subs	r3, r2, r3
 18207 015c FB66     		str	r3, [r7, #108]
2376:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18208              		.loc 1 2376 0
 18209 015e 0123     		movs	r3, #1
 18210 0160 FB67     		str	r3, [r7, #124]
 18211 0162 21E0     		b	.L699
 18212              	.L700:
2377:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18213              		.loc 1 2377 0 discriminator 3
 18214 0164 FB6F     		ldr	r3, [r7, #124]
 18215 0166 013B     		subs	r3, r3, #1
 18216 0168 FA6E     		ldr	r2, [r7, #108]
 18217 016a 02FB03F3 		mul	r3, r2, r3
 18218 016e 5C1C     		adds	r4, r3, #1
 18219 0170 FB6E     		ldr	r3, [r7, #108]
 18220 0172 FA6F     		ldr	r2, [r7, #124]
 18221 0174 02FB03F3 		mul	r3, r2, r3
 18222 0178 FA6F     		ldr	r2, [r7, #124]
 18223 017a 511E     		subs	r1, r2, #1
 18224 017c BA6F     		ldr	r2, [r7, #120]
 18225 017e 0631     		adds	r1, r1, #6
 18226 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18227 0184 07F10800 		add	r0, r7, #8
 18228 0188 0192     		str	r2, [sp, #4]
 18229 018a 0093     		str	r3, [sp]
 18230 018c 2346     		mov	r3, r4
 18231 018e FA6F     		ldr	r2, [r7, #124]
 18232 0190 2349     		ldr	r1, .L704+32
 18233 0192 FFF7FEFF 		bl	sprintf
2378:..\src/command_processing.c ****         strcat(info_string, str);
 18234              		.loc 1 2378 0 discriminator 3
 18235 0196 07F10803 		add	r3, r7, #8
 18236 019a 1946     		mov	r1, r3
 18237 019c 7868     		ldr	r0, [r7, #4]
 18238 019e FFF7FEFF 		bl	strcat
2376:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18239              		.loc 1 2376 0 discriminator 3
 18240 01a2 FB6F     		ldr	r3, [r7, #124]
 18241 01a4 0133     		adds	r3, r3, #1
 18242 01a6 FB67     		str	r3, [r7, #124]
 18243              	.L699:
2376:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18244              		.loc 1 2376 0 is_stmt 0 discriminator 1
 18245 01a8 FB6F     		ldr	r3, [r7, #124]
 18246 01aa 0A2B     		cmp	r3, #10
 18247 01ac DADD     		ble	.L700
2379:..\src/command_processing.c ****     }
2380:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18248              		.loc 1 2380 0 is_stmt 1
 18249 01ae 7868     		ldr	r0, [r7, #4]
 18250 01b0 FFF7FEFF 		bl	strlen
 18251 01b4 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 404


 18252 01b6 1A46     		mov	r2, r3
 18253 01b8 7B68     		ldr	r3, [r7, #4]
 18254 01ba 1344     		add	r3, r3, r2
 18255 01bc 124A     		ldr	r2, .L704+8
 18256 01be 1188     		ldrh	r1, [r2]	@ unaligned
 18257 01c0 9278     		ldrb	r2, [r2, #2]
 18258 01c2 1980     		strh	r1, [r3]	@ unaligned
 18259 01c4 9A70     		strb	r2, [r3, #2]
2381:..\src/command_processing.c ****     
2382:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18260              		.loc 1 2382 0
 18261 01c6 07F10803 		add	r3, r7, #8
 18262 01ca 164A     		ldr	r2, .L704+36
 18263 01cc 1C46     		mov	r4, r3
 18264 01ce 1546     		mov	r5, r2
 18265 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18266 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18267 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 18268 01d8 03C4     		stmia	r4!, {r0, r1}
 18269 01da 2280     		strh	r2, [r4]	@ movhi
2383:..\src/command_processing.c ****     strcat(info_string, str);
 18270              		.loc 1 2383 0
 18271 01dc 07F10803 		add	r3, r7, #8
 18272 01e0 1946     		mov	r1, r3
 18273 01e2 7868     		ldr	r0, [r7, #4]
 18274 01e4 FFF7FEFF 		bl	strcat
2384:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18275              		.loc 1 2384 0
 18276 01e8 7B6F     		ldr	r3, [r7, #116]
 18277 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 18278 01ee 002B     		cmp	r3, #0
 18279 01f0 00DA     		bge	.L701
 18280 01f2 0333     		adds	r3, r3, #3
 18281              	.L701:
 18282 01f4 9B10     		asrs	r3, r3, #2
 18283 01f6 1BB2     		sxth	r3, r3
 18284 01f8 FB66     		str	r3, [r7, #108]
2385:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18285              		.loc 1 2385 0
 18286 01fa 0123     		movs	r3, #1
 18287 01fc FB67     		str	r3, [r7, #124]
 18288 01fe 34E0     		b	.L702
 18289              	.L705:
 18290              		.align	2
 18291              	.L704:
 18292 0200 00000000 		.word	g_mem
 18293 0204 B41B0000 		.word	.LC269
 18294 0208 10110000 		.word	.LC150
 18295 020c CC1B0000 		.word	.LC270
 18296 0210 F81B0000 		.word	.LC271
 18297 0214 301C0000 		.word	.LC272
 18298 0218 681C0000 		.word	.LC273
 18299 021c 67666666 		.word	1717986919
 18300 0220 881C0000 		.word	.LC274
 18301 0224 A01C0000 		.word	.LC275
 18302              	.L703:
2386:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 405


 18303              		.loc 1 2386 0 discriminator 3
 18304 0228 FB6F     		ldr	r3, [r7, #124]
 18305 022a 013B     		subs	r3, r3, #1
 18306 022c FA6E     		ldr	r2, [r7, #108]
 18307 022e 02FB03F4 		mul	r4, r2, r3
 18308 0232 FB6E     		ldr	r3, [r7, #108]
 18309 0234 FA6F     		ldr	r2, [r7, #124]
 18310 0236 02FB03F3 		mul	r3, r2, r3
 18311 023a FA6F     		ldr	r2, [r7, #124]
 18312 023c 511E     		subs	r1, r2, #1
 18313 023e BA6F     		ldr	r2, [r7, #120]
 18314 0240 1031     		adds	r1, r1, #16
 18315 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18316 0246 07F10800 		add	r0, r7, #8
 18317 024a 0192     		str	r2, [sp, #4]
 18318 024c 0093     		str	r3, [sp]
 18319 024e 2346     		mov	r3, r4
 18320 0250 FA6F     		ldr	r2, [r7, #124]
 18321 0252 5149     		ldr	r1, .L706
 18322 0254 FFF7FEFF 		bl	sprintf
2387:..\src/command_processing.c ****         strcat(info_string, str);
 18323              		.loc 1 2387 0 discriminator 3
 18324 0258 07F10803 		add	r3, r7, #8
 18325 025c 1946     		mov	r1, r3
 18326 025e 7868     		ldr	r0, [r7, #4]
 18327 0260 FFF7FEFF 		bl	strcat
2385:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18328              		.loc 1 2385 0 discriminator 3
 18329 0264 FB6F     		ldr	r3, [r7, #124]
 18330 0266 0133     		adds	r3, r3, #1
 18331 0268 FB67     		str	r3, [r7, #124]
 18332              	.L702:
2385:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18333              		.loc 1 2385 0 is_stmt 0 discriminator 1
 18334 026a FB6F     		ldr	r3, [r7, #124]
 18335 026c 042B     		cmp	r3, #4
 18336 026e DBDD     		ble	.L703
2388:..\src/command_processing.c ****     }
2389:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18337              		.loc 1 2389 0 is_stmt 1
 18338 0270 7868     		ldr	r0, [r7, #4]
 18339 0272 FFF7FEFF 		bl	strlen
 18340 0276 0346     		mov	r3, r0
 18341 0278 1A46     		mov	r2, r3
 18342 027a 7B68     		ldr	r3, [r7, #4]
 18343 027c 1344     		add	r3, r3, r2
 18344 027e 474A     		ldr	r2, .L706+4
 18345 0280 1188     		ldrh	r1, [r2]	@ unaligned
 18346 0282 9278     		ldrb	r2, [r2, #2]
 18347 0284 1980     		strh	r1, [r3]	@ unaligned
 18348 0286 9A70     		strb	r2, [r3, #2]
2390:..\src/command_processing.c ****             
2391:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18349              		.loc 1 2391 0
 18350 0288 BB6F     		ldr	r3, [r7, #120]
 18351 028a 1A69     		ldr	r2, [r3, #16]
 18352 028c BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 406


 18353 028e 5B69     		ldr	r3, [r3, #20]
 18354 0290 07F10800 		add	r0, r7, #8
 18355 0294 4249     		ldr	r1, .L706+8
 18356 0296 FFF7FEFF 		bl	sprintf
2392:..\src/command_processing.c ****     strcat(info_string, str);
 18357              		.loc 1 2392 0
 18358 029a 07F10803 		add	r3, r7, #8
 18359 029e 1946     		mov	r1, r3
 18360 02a0 7868     		ldr	r0, [r7, #4]
 18361 02a2 FFF7FEFF 		bl	strcat
2393:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18362              		.loc 1 2393 0
 18363 02a6 7868     		ldr	r0, [r7, #4]
 18364 02a8 FFF7FEFF 		bl	strlen
 18365 02ac 0346     		mov	r3, r0
 18366 02ae 1A46     		mov	r2, r3
 18367 02b0 7B68     		ldr	r3, [r7, #4]
 18368 02b2 1344     		add	r3, r3, r2
 18369 02b4 394A     		ldr	r2, .L706+4
 18370 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 18371 02b8 9278     		ldrb	r2, [r2, #2]
 18372 02ba 1980     		strh	r1, [r3]	@ unaligned
 18373 02bc 9A70     		strb	r2, [r3, #2]
2394:..\src/command_processing.c ****     
2395:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18374              		.loc 1 2395 0
 18375 02be BB6F     		ldr	r3, [r7, #120]
 18376 02c0 1A6D     		ldr	r2, [r3, #80]
 18377 02c2 07F10803 		add	r3, r7, #8
 18378 02c6 3749     		ldr	r1, .L706+12
 18379 02c8 1846     		mov	r0, r3
 18380 02ca FFF7FEFF 		bl	sprintf
2396:..\src/command_processing.c ****     strcat(info_string, str);
 18381              		.loc 1 2396 0
 18382 02ce 07F10803 		add	r3, r7, #8
 18383 02d2 1946     		mov	r1, r3
 18384 02d4 7868     		ldr	r0, [r7, #4]
 18385 02d6 FFF7FEFF 		bl	strcat
2397:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18386              		.loc 1 2397 0
 18387 02da 7868     		ldr	r0, [r7, #4]
 18388 02dc FFF7FEFF 		bl	strlen
 18389 02e0 0346     		mov	r3, r0
 18390 02e2 1A46     		mov	r2, r3
 18391 02e4 7B68     		ldr	r3, [r7, #4]
 18392 02e6 1344     		add	r3, r3, r2
 18393 02e8 2C4A     		ldr	r2, .L706+4
 18394 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 18395 02ec 9278     		ldrb	r2, [r2, #2]
 18396 02ee 1980     		strh	r1, [r3]	@ unaligned
 18397 02f0 9A70     		strb	r2, [r3, #2]
2398:..\src/command_processing.c ****     
2399:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18398              		.loc 1 2399 0
 18399 02f2 BB6F     		ldr	r3, [r7, #120]
 18400 02f4 5A6D     		ldr	r2, [r3, #84]
 18401 02f6 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 407


 18402 02fa 2B49     		ldr	r1, .L706+16
 18403 02fc 1846     		mov	r0, r3
 18404 02fe FFF7FEFF 		bl	sprintf
2400:..\src/command_processing.c ****     strcat(info_string, str);
 18405              		.loc 1 2400 0
 18406 0302 07F10803 		add	r3, r7, #8
 18407 0306 1946     		mov	r1, r3
 18408 0308 7868     		ldr	r0, [r7, #4]
 18409 030a FFF7FEFF 		bl	strcat
2401:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18410              		.loc 1 2401 0
 18411 030e 7868     		ldr	r0, [r7, #4]
 18412 0310 FFF7FEFF 		bl	strlen
 18413 0314 0346     		mov	r3, r0
 18414 0316 1A46     		mov	r2, r3
 18415 0318 7B68     		ldr	r3, [r7, #4]
 18416 031a 1344     		add	r3, r3, r2
 18417 031c 1F4A     		ldr	r2, .L706+4
 18418 031e 1188     		ldrh	r1, [r2]	@ unaligned
 18419 0320 9278     		ldrb	r2, [r2, #2]
 18420 0322 1980     		strh	r1, [r3]	@ unaligned
 18421 0324 9A70     		strb	r2, [r3, #2]
2402:..\src/command_processing.c ****     
2403:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18422              		.loc 1 2403 0
 18423 0326 BB6F     		ldr	r3, [r7, #120]
 18424 0328 9A6D     		ldr	r2, [r3, #88]
 18425 032a 07F10803 		add	r3, r7, #8
 18426 032e 1F49     		ldr	r1, .L706+20
 18427 0330 1846     		mov	r0, r3
 18428 0332 FFF7FEFF 		bl	sprintf
2404:..\src/command_processing.c ****     strcat(info_string, str);
 18429              		.loc 1 2404 0
 18430 0336 07F10803 		add	r3, r7, #8
 18431 033a 1946     		mov	r1, r3
 18432 033c 7868     		ldr	r0, [r7, #4]
 18433 033e FFF7FEFF 		bl	strcat
2405:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18434              		.loc 1 2405 0
 18435 0342 7868     		ldr	r0, [r7, #4]
 18436 0344 FFF7FEFF 		bl	strlen
 18437 0348 0346     		mov	r3, r0
 18438 034a 1A46     		mov	r2, r3
 18439 034c 7B68     		ldr	r3, [r7, #4]
 18440 034e 1344     		add	r3, r3, r2
 18441 0350 124A     		ldr	r2, .L706+4
 18442 0352 1188     		ldrh	r1, [r2]	@ unaligned
 18443 0354 9278     		ldrb	r2, [r2, #2]
 18444 0356 1980     		strh	r1, [r3]	@ unaligned
 18445 0358 9A70     		strb	r2, [r3, #2]
2406:..\src/command_processing.c ****     
2407:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 18446              		.loc 1 2407 0
 18447 035a BB6F     		ldr	r3, [r7, #120]
 18448 035c DA6D     		ldr	r2, [r3, #92]
 18449 035e 07F10803 		add	r3, r7, #8
 18450 0362 1349     		ldr	r1, .L706+24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 408


 18451 0364 1846     		mov	r0, r3
 18452 0366 FFF7FEFF 		bl	sprintf
2408:..\src/command_processing.c ****     strcat(info_string, str);
 18453              		.loc 1 2408 0
 18454 036a 07F10803 		add	r3, r7, #8
 18455 036e 1946     		mov	r1, r3
 18456 0370 7868     		ldr	r0, [r7, #4]
 18457 0372 FFF7FEFF 		bl	strcat
2409:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18458              		.loc 1 2409 0
 18459 0376 7868     		ldr	r0, [r7, #4]
 18460 0378 FFF7FEFF 		bl	strlen
 18461 037c 0346     		mov	r3, r0
 18462 037e 1A46     		mov	r2, r3
 18463 0380 7B68     		ldr	r3, [r7, #4]
 18464 0382 1344     		add	r3, r3, r2
 18465 0384 054A     		ldr	r2, .L706+4
 18466 0386 1188     		ldrh	r1, [r2]	@ unaligned
 18467 0388 9278     		ldrb	r2, [r2, #2]
 18468 038a 1980     		strh	r1, [r3]	@ unaligned
 18469 038c 9A70     		strb	r2, [r3, #2]
2410:..\src/command_processing.c **** 
2411:..\src/command_processing.c **** }
 18470              		.loc 1 2411 0
 18471 038e 00BF     		nop
 18472 0390 8437     		adds	r7, r7, #132
 18473              		.cfi_def_cfa_offset 20
 18474 0392 BD46     		mov	sp, r7
 18475              		.cfi_def_cfa_register 13
 18476              		@ sp needed
 18477 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 18478              	.L707:
 18479 0396 00BF     		.align	2
 18480              	.L706:
 18481 0398 BC1C0000 		.word	.LC276
 18482 039c 10110000 		.word	.LC150
 18483 03a0 D81C0000 		.word	.LC277
 18484 03a4 FC1C0000 		.word	.LC278
 18485 03a8 1C1D0000 		.word	.LC279
 18486 03ac 441D0000 		.word	.LC280
 18487 03b0 641D0000 		.word	.LC281
 18488              		.cfi_endproc
 18489              	.LFE73:
 18490              		.size	prepare_counter_info, .-prepare_counter_info
 18491              		.section	.rodata
 18492              		.align	2
 18493              	.LC282:
 18494 1d88 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18494      77617265 
 18494      20766572 
 18494      73696F6E 
 18494      3A202573 
 18495 1d9f 00       		.align	2
 18496              	.LC283:
 18497 1da0 506F7369 		.ascii	"Position PID: \000"
 18497      74696F6E 
 18497      20504944 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 409


 18497      3A2000
 18498 1daf 00       		.align	2
 18499              	.LC284:
 18500 1db0 43757272 		.ascii	"Current PID: \000"
 18500      656E7420 
 18500      5049443A 
 18500      2000
 18501 1dbe 0000     		.align	2
 18502              	.LC285:
 18503 1dc0 5265736F 		.ascii	"Resolutions: \000"
 18503      6C757469 
 18503      6F6E733A 
 18503      2000
 18504 1dce 0000     		.align	2
 18505              	.LC286:
 18506 1dd0 4F666673 		.ascii	"Offsets: \000"
 18506      6574733A 
 18506      2000
 18507 1dda 0000     		.align	2
 18508              	.LC287:
 18509 1ddc 4D756C74 		.ascii	"Multipliers: \000"
 18509      69706C69 
 18509      6572733A 
 18509      2000
 18510 1dea 0000     		.align	2
 18511              	.LC288:
 18512 1dec 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18512      656E7420 
 18512      6C6F6F6B 
 18512      75702074 
 18512      61626C65 
 18513 1e1f 662C2025 		.ascii	"f, %f\015\012\000"
 18513      660D0A00 
 18514 1e27 00       		.align	2
 18515              	.LC289:
 18516 1e28 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18516      74696F6E 
 18516      206C696D 
 18516      69742061 
 18516      63746976 
 18517              		.align	2
 18518              	.LC290:
 18519 1e44 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18519      74696F6E 
 18519      206C696D 
 18519      6974733A 
 18519      20696E66 
 18520              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18521              		.align	2
 18522              		.global	prepare_SD_param_info
 18523              		.thumb
 18524              		.thumb_func
 18525              		.type	prepare_SD_param_info, %function
 18526              	prepare_SD_param_info:
 18527              	.LFB74:
2412:..\src/command_processing.c **** 
2413:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 410


2414:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2415:..\src/command_processing.c **** //==============================================================================
2416:..\src/command_processing.c **** 
2417:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2418:..\src/command_processing.c **** {
 18528              		.loc 1 2418 0
 18529              		.cfi_startproc
 18530              		@ args = 0, pretend = 0, frame = 152
 18531              		@ frame_needed = 1, uses_anonymous_args = 0
 18532 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18533              		.cfi_def_cfa_offset 36
 18534              		.cfi_offset 4, -36
 18535              		.cfi_offset 5, -32
 18536              		.cfi_offset 6, -28
 18537              		.cfi_offset 7, -24
 18538              		.cfi_offset 8, -20
 18539              		.cfi_offset 9, -16
 18540              		.cfi_offset 10, -12
 18541              		.cfi_offset 11, -8
 18542              		.cfi_offset 14, -4
 18543 0004 B1B0     		sub	sp, sp, #196
 18544              		.cfi_def_cfa_offset 232
 18545 0006 0AAF     		add	r7, sp, #40
 18546              		.cfi_def_cfa 7, 192
 18547 0008 7861     		str	r0, [r7, #20]
2419:..\src/command_processing.c ****     char str[100];  
2420:..\src/command_processing.c ****     int i;
2421:..\src/command_processing.c ****            
2422:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2423:..\src/command_processing.c ****     
2424:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18548              		.loc 1 2424 0
 18549 000a AB4B     		ldr	r3, .L773
 18550 000c C7F88C30 		str	r3, [r7, #140]
2425:..\src/command_processing.c ****         
2426:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18551              		.loc 1 2426 0
 18552 0010 AA4A     		ldr	r2, .L773+4
 18553 0012 AB49     		ldr	r1, .L773+8
 18554 0014 7869     		ldr	r0, [r7, #20]
 18555 0016 FFF7FEFF 		bl	sprintf
2427:..\src/command_processing.c ****     
2428:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18556              		.loc 1 2428 0
 18557 001a D7F88C30 		ldr	r3, [r7, #140]
 18558 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18559 0022 1A46     		mov	r2, r3
 18560 0024 07F11C03 		add	r3, r7, #28
 18561 0028 A649     		ldr	r1, .L773+12
 18562 002a 1846     		mov	r0, r3
 18563 002c FFF7FEFF 		bl	sprintf
2429:..\src/command_processing.c ****     strcat(info_string, str);
 18564              		.loc 1 2429 0
 18565 0030 07F11C03 		add	r3, r7, #28
 18566 0034 1946     		mov	r1, r3
 18567 0036 7869     		ldr	r0, [r7, #20]
 18568 0038 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 411


2430:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18569              		.loc 1 2430 0
 18570 003c D7F88C30 		ldr	r3, [r7, #140]
 18571 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18572 0044 002B     		cmp	r3, #0
 18573 0046 02D0     		beq	.L710
 18574 0048 012B     		cmp	r3, #1
 18575 004a 15D0     		beq	.L711
 18576 004c 26E0     		b	.L709
 18577              	.L710:
2431:..\src/command_processing.c ****         case RIGHT_HAND:
2432:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18578              		.loc 1 2432 0
 18579 004e 7869     		ldr	r0, [r7, #20]
 18580 0050 FFF7FEFF 		bl	strlen
 18581 0054 0346     		mov	r3, r0
 18582 0056 1A46     		mov	r2, r3
 18583 0058 7B69     		ldr	r3, [r7, #20]
 18584 005a 1344     		add	r3, r3, r2
 18585 005c 9A4A     		ldr	r2, .L773+16
 18586 005e 1D46     		mov	r5, r3
 18587 0060 1446     		mov	r4, r2
 18588 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18589 0064 2860     		str	r0, [r5]	@ unaligned
 18590 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18591 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18592 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18593 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18594 006e A278     		ldrb	r2, [r4, #2]
 18595 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18596 0072 1346     		mov	r3, r2
 18597 0074 AB74     		strb	r3, [r5, #18]
2433:..\src/command_processing.c ****             break;
 18598              		.loc 1 2433 0
 18599 0076 11E0     		b	.L709
 18600              	.L711:
2434:..\src/command_processing.c ****         case LEFT_HAND:
2435:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18601              		.loc 1 2435 0
 18602 0078 7869     		ldr	r0, [r7, #20]
 18603 007a FFF7FEFF 		bl	strlen
 18604 007e 0346     		mov	r3, r0
 18605 0080 1A46     		mov	r2, r3
 18606 0082 7B69     		ldr	r3, [r7, #20]
 18607 0084 1344     		add	r3, r3, r2
 18608 0086 914A     		ldr	r2, .L773+20
 18609 0088 1D46     		mov	r5, r3
 18610 008a 1446     		mov	r4, r2
 18611 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18612 008e 2860     		str	r0, [r5]	@ unaligned
 18613 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18614 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 18615 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18616 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18617 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2436:..\src/command_processing.c ****             break;
 18618              		.loc 1 2436 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 412


 18619 009a 00BF     		nop
 18620              	.L709:
2437:..\src/command_processing.c ****     }
2438:..\src/command_processing.c **** 
2439:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18621              		.loc 1 2439 0
 18622 009c D7F88C30 		ldr	r3, [r7, #140]
 18623 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18624 00a4 1A46     		mov	r2, r3
 18625 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18626 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18627 00ae 1946     		mov	r1, r3
 18628 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18629 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18630 00b8 07F11C00 		add	r0, r7, #28
 18631 00bc 0093     		str	r3, [sp]
 18632 00be 0B46     		mov	r3, r1
 18633 00c0 8349     		ldr	r1, .L773+24
 18634 00c2 FFF7FEFF 		bl	sprintf
2440:..\src/command_processing.c ****     strcat(info_string, str);
 18635              		.loc 1 2440 0
 18636 00c6 07F11C03 		add	r3, r7, #28
 18637 00ca 1946     		mov	r1, r3
 18638 00cc 7869     		ldr	r0, [r7, #20]
 18639 00ce FFF7FEFF 		bl	strcat
2441:..\src/command_processing.c ****     
2442:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18640              		.loc 1 2442 0
 18641 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18642 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18643 00da 1A46     		mov	r2, r3
 18644 00dc D7F88C30 		ldr	r3, [r7, #140]
 18645 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18646 00e4 1946     		mov	r1, r3
 18647 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18648 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18649 00ee 07F11C00 		add	r0, r7, #28
 18650 00f2 0093     		str	r3, [sp]
 18651 00f4 0B46     		mov	r3, r1
 18652 00f6 7749     		ldr	r1, .L773+28
 18653 00f8 FFF7FEFF 		bl	sprintf
2443:..\src/command_processing.c ****     strcat(info_string, str);
 18654              		.loc 1 2443 0
 18655 00fc 07F11C03 		add	r3, r7, #28
 18656 0100 1946     		mov	r1, r3
 18657 0102 7869     		ldr	r0, [r7, #20]
 18658 0104 FFF7FEFF 		bl	strcat
 18659              	.LBB23:
2444:..\src/command_processing.c ****     
2445:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18660              		.loc 1 2445 0
 18661 0108 0023     		movs	r3, #0
 18662 010a 87F89330 		strb	r3, [r7, #147]
 18663 010e 00F05CBE 		b	.L712
 18664              	.L756:
 18665              	.LBB24:
2446:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 413


2447:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18666              		.loc 1 2447 0
 18667 0112 97F89330 		ldrb	r3, [r7, #147]
 18668 0116 87F88B30 		strb	r3, [r7, #139]
2448:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18669              		.loc 1 2448 0
 18670 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18671 011e 1346     		mov	r3, r2
 18672 0120 DB00     		lsls	r3, r3, #3
 18673 0122 9B1A     		subs	r3, r3, r2
 18674 0124 1B01     		lsls	r3, r3, #4
 18675 0126 B033     		adds	r3, r3, #176
 18676 0128 D7F88C20 		ldr	r2, [r7, #140]
 18677 012c 1344     		add	r3, r3, r2
 18678 012e C7F88430 		str	r3, [r7, #132]
2449:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18679              		.loc 1 2449 0
 18680 0132 D7F88430 		ldr	r3, [r7, #132]
 18681 0136 93F86030 		ldrb	r3, [r3, #96]
 18682 013a 87F88330 		strb	r3, [r7, #131]
2450:..\src/command_processing.c ****               
2451:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18683              		.loc 1 2451 0
 18684 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18685 0142 5A1C     		adds	r2, r3, #1
 18686 0144 07F11C03 		add	r3, r7, #28
 18687 0148 6349     		ldr	r1, .L773+32
 18688 014a 1846     		mov	r0, r3
 18689 014c FFF7FEFF 		bl	sprintf
2452:..\src/command_processing.c ****         strcat(info_string, str);
 18690              		.loc 1 2452 0
 18691 0150 07F11C03 		add	r3, r7, #28
 18692 0154 1946     		mov	r1, r3
 18693 0156 7869     		ldr	r0, [r7, #20]
 18694 0158 FFF7FEFF 		bl	strcat
2453:..\src/command_processing.c ****                     
2454:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18695              		.loc 1 2454 0
 18696 015c 7869     		ldr	r0, [r7, #20]
 18697 015e FFF7FEFF 		bl	strlen
 18698 0162 0346     		mov	r3, r0
 18699 0164 1A46     		mov	r2, r3
 18700 0166 7B69     		ldr	r3, [r7, #20]
 18701 0168 1344     		add	r3, r3, r2
 18702 016a 5C4A     		ldr	r2, .L773+36
 18703 016c 1D46     		mov	r5, r3
 18704 016e 1446     		mov	r4, r2
 18705 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18706 0172 2860     		str	r0, [r5]	@ unaligned
 18707 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18708 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18709 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 18710 017a 03CC     		ldmia	r4!, {r0, r1}
 18711 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18712 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18713 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18714 0182 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 414


 18715 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18716 0186 1346     		mov	r3, r2
 18717 0188 AB76     		strb	r3, [r5, #26]
2455:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18718              		.loc 1 2455 0
 18719 018a D7F88430 		ldr	r3, [r7, #132]
 18720 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18721 0192 012B     		cmp	r3, #1
 18722 0194 0CD1     		bne	.L713
2456:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18723              		.loc 1 2456 0
 18724 0196 7869     		ldr	r0, [r7, #20]
 18725 0198 FFF7FEFF 		bl	strlen
 18726 019c 0346     		mov	r3, r0
 18727 019e 1A46     		mov	r2, r3
 18728 01a0 7B69     		ldr	r3, [r7, #20]
 18729 01a2 1344     		add	r3, r3, r2
 18730 01a4 4E4A     		ldr	r2, .L773+40
 18731 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18732 01a8 1860     		str	r0, [r3]	@ unaligned
 18733 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18734 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18735 01ae 0BE0     		b	.L714
 18736              	.L713:
2457:..\src/command_processing.c ****         else
2458:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18737              		.loc 1 2458 0
 18738 01b0 7869     		ldr	r0, [r7, #20]
 18739 01b2 FFF7FEFF 		bl	strlen
 18740 01b6 0346     		mov	r3, r0
 18741 01b8 1A46     		mov	r2, r3
 18742 01ba 7B69     		ldr	r3, [r7, #20]
 18743 01bc 1344     		add	r3, r3, r2
 18744 01be 494A     		ldr	r2, .L773+44
 18745 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18746 01c2 1860     		str	r0, [r3]	@ unaligned
 18747 01c4 1279     		ldrb	r2, [r2, #4]
 18748 01c6 1A71     		strb	r2, [r3, #4]
 18749              	.L714:
2459:..\src/command_processing.c ****         
2460:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18750              		.loc 1 2460 0
 18751 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18752 01cc 464A     		ldr	r2, .L773+48
 18753 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 18754 01d0 1A46     		mov	r2, r3
 18755 01d2 07F11C03 		add	r3, r7, #28
 18756 01d6 4549     		ldr	r1, .L773+52
 18757 01d8 1846     		mov	r0, r3
 18758 01da FFF7FEFF 		bl	sprintf
2461:..\src/command_processing.c ****         strcat(info_string, str);
 18759              		.loc 1 2461 0
 18760 01de 07F11C03 		add	r3, r7, #28
 18761 01e2 1946     		mov	r1, r3
 18762 01e4 7869     		ldr	r0, [r7, #20]
 18763 01e6 FFF7FEFF 		bl	strcat
2462:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 415


2463:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18764              		.loc 1 2463 0
 18765 01ea 7869     		ldr	r0, [r7, #20]
 18766 01ec FFF7FEFF 		bl	strlen
 18767 01f0 0346     		mov	r3, r0
 18768 01f2 1A46     		mov	r2, r3
 18769 01f4 7B69     		ldr	r3, [r7, #20]
 18770 01f6 1344     		add	r3, r3, r2
 18771 01f8 3D4A     		ldr	r2, .L773+56
 18772 01fa 1C46     		mov	r4, r3
 18773 01fc 1346     		mov	r3, r2
 18774 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18775 0200 2060     		str	r0, [r4]	@ unaligned
 18776 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18777 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18778 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18779 0208 9B78     		ldrb	r3, [r3, #2]
 18780 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18781 020c A373     		strb	r3, [r4, #14]
2464:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18782              		.loc 1 2464 0
 18783 020e D7F88430 		ldr	r3, [r7, #132]
 18784 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18785 0216 032B     		cmp	r3, #3
 18786 0218 74D0     		beq	.L715
2465:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18787              		.loc 1 2465 0
 18788 021a D7F88430 		ldr	r3, [r7, #132]
 18789 021e 1B68     		ldr	r3, [r3]
 18790 0220 1846     		mov	r0, r3
 18791 0222 FFF7FEFF 		bl	__aeabi_i2d
 18792 0226 4FF00002 		mov	r2, #0
 18793 022a 324B     		ldr	r3, .L773+60
 18794 022c FFF7FEFF 		bl	__aeabi_ddiv
 18795 0230 0346     		mov	r3, r0
 18796 0232 0C46     		mov	r4, r1
 18797 0234 07F11C00 		add	r0, r7, #28
 18798 0238 1A46     		mov	r2, r3
 18799 023a 2346     		mov	r3, r4
 18800 023c 2E49     		ldr	r1, .L773+64
 18801 023e FFF7FEFF 		bl	sprintf
2466:..\src/command_processing.c ****             strcat(info_string, str);
 18802              		.loc 1 2466 0
 18803 0242 07F11C03 		add	r3, r7, #28
 18804 0246 1946     		mov	r1, r3
 18805 0248 7869     		ldr	r0, [r7, #20]
 18806 024a FFF7FEFF 		bl	strcat
2467:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18807              		.loc 1 2467 0
 18808 024e D7F88430 		ldr	r3, [r7, #132]
 18809 0252 5B68     		ldr	r3, [r3, #4]
 18810 0254 1846     		mov	r0, r3
 18811 0256 FFF7FEFF 		bl	__aeabi_i2d
 18812 025a 4FF00002 		mov	r2, #0
 18813 025e 254B     		ldr	r3, .L773+60
 18814 0260 FFF7FEFF 		bl	__aeabi_ddiv
 18815 0264 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 416


 18816 0266 0C46     		mov	r4, r1
 18817 0268 07F11C00 		add	r0, r7, #28
 18818 026c 1A46     		mov	r2, r3
 18819 026e 2346     		mov	r3, r4
 18820 0270 2249     		ldr	r1, .L773+68
 18821 0272 FFF7FEFF 		bl	sprintf
2468:..\src/command_processing.c ****             strcat(info_string, str);
 18822              		.loc 1 2468 0
 18823 0276 07F11C03 		add	r3, r7, #28
 18824 027a 1946     		mov	r1, r3
 18825 027c 7869     		ldr	r0, [r7, #20]
 18826 027e FFF7FEFF 		bl	strcat
2469:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18827              		.loc 1 2469 0
 18828 0282 D7F88430 		ldr	r3, [r7, #132]
 18829 0286 9B68     		ldr	r3, [r3, #8]
 18830 0288 1846     		mov	r0, r3
 18831 028a FFF7FEFF 		bl	__aeabi_i2d
 18832 028e 4FF00002 		mov	r2, #0
 18833 0292 184B     		ldr	r3, .L773+60
 18834 0294 FFF7FEFF 		bl	__aeabi_ddiv
 18835 0298 0346     		mov	r3, r0
 18836 029a 0C46     		mov	r4, r1
 18837 029c 07F11C00 		add	r0, r7, #28
 18838 02a0 1A46     		mov	r2, r3
 18839 02a2 2346     		mov	r3, r4
 18840 02a4 1649     		ldr	r1, .L773+72
 18841 02a6 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c ****             strcat(info_string, str);
 18842              		.loc 1 2470 0
 18843 02aa 07F11C03 		add	r3, r7, #28
 18844 02ae 1946     		mov	r1, r3
 18845 02b0 7869     		ldr	r0, [r7, #20]
 18846 02b2 FFF7FEFF 		bl	strcat
 18847 02b6 73E0     		b	.L716
 18848              	.L774:
 18849              		.align	2
 18850              	.L773:
 18851 02b8 00000000 		.word	g_mem
 18852 02bc 28110000 		.word	.LC152
 18853 02c0 881D0000 		.word	.LC282
 18854 02c4 60110000 		.word	.LC155
 18855 02c8 10120000 		.word	.LC161
 18856 02cc 24120000 		.word	.LC162
 18857 02d0 CC1B0000 		.word	.LC270
 18858 02d4 F81B0000 		.word	.LC271
 18859 02d8 70120000 		.word	.LC166
 18860 02dc E0120000 		.word	.LC175
 18861 02e0 D0120000 		.word	.LC173
 18862 02e4 D8120000 		.word	.LC174
 18863 02e8 00000000 		.word	dev_pwm_limit
 18864 02ec 08130000 		.word	.LC178
 18865 02f0 A01D0000 		.word	.LC283
 18866 02f4 0000F040 		.word	1089470464
 18867 02f8 20140000 		.word	.LC190
 18868 02fc 2C140000 		.word	.LC191
 18869 0300 38140000 		.word	.LC192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 417


 18870              	.L715:
2471:..\src/command_processing.c ****         }
2472:..\src/command_processing.c ****         else { 
2473:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18871              		.loc 1 2473 0
 18872 0304 D7F88430 		ldr	r3, [r7, #132]
 18873 0308 9B69     		ldr	r3, [r3, #24]
 18874 030a 1846     		mov	r0, r3
 18875 030c FFF7FEFF 		bl	__aeabi_i2d
 18876 0310 4FF00002 		mov	r2, #0
 18877 0314 CC4B     		ldr	r3, .L775
 18878 0316 FFF7FEFF 		bl	__aeabi_ddiv
 18879 031a 0346     		mov	r3, r0
 18880 031c 0C46     		mov	r4, r1
 18881 031e 07F11C00 		add	r0, r7, #28
 18882 0322 1A46     		mov	r2, r3
 18883 0324 2346     		mov	r3, r4
 18884 0326 C949     		ldr	r1, .L775+4
 18885 0328 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c ****             strcat(info_string, str);
 18886              		.loc 1 2474 0
 18887 032c 07F11C03 		add	r3, r7, #28
 18888 0330 1946     		mov	r1, r3
 18889 0332 7869     		ldr	r0, [r7, #20]
 18890 0334 FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18891              		.loc 1 2475 0
 18892 0338 D7F88430 		ldr	r3, [r7, #132]
 18893 033c DB69     		ldr	r3, [r3, #28]
 18894 033e 1846     		mov	r0, r3
 18895 0340 FFF7FEFF 		bl	__aeabi_i2d
 18896 0344 4FF00002 		mov	r2, #0
 18897 0348 BF4B     		ldr	r3, .L775
 18898 034a FFF7FEFF 		bl	__aeabi_ddiv
 18899 034e 0346     		mov	r3, r0
 18900 0350 0C46     		mov	r4, r1
 18901 0352 07F11C00 		add	r0, r7, #28
 18902 0356 1A46     		mov	r2, r3
 18903 0358 2346     		mov	r3, r4
 18904 035a BD49     		ldr	r1, .L775+8
 18905 035c FFF7FEFF 		bl	sprintf
2476:..\src/command_processing.c ****             strcat(info_string, str);
 18906              		.loc 1 2476 0
 18907 0360 07F11C03 		add	r3, r7, #28
 18908 0364 1946     		mov	r1, r3
 18909 0366 7869     		ldr	r0, [r7, #20]
 18910 0368 FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18911              		.loc 1 2477 0
 18912 036c D7F88430 		ldr	r3, [r7, #132]
 18913 0370 1B6A     		ldr	r3, [r3, #32]
 18914 0372 1846     		mov	r0, r3
 18915 0374 FFF7FEFF 		bl	__aeabi_i2d
 18916 0378 4FF00002 		mov	r2, #0
 18917 037c B24B     		ldr	r3, .L775
 18918 037e FFF7FEFF 		bl	__aeabi_ddiv
 18919 0382 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 418


 18920 0384 0C46     		mov	r4, r1
 18921 0386 07F11C00 		add	r0, r7, #28
 18922 038a 1A46     		mov	r2, r3
 18923 038c 2346     		mov	r3, r4
 18924 038e B149     		ldr	r1, .L775+12
 18925 0390 FFF7FEFF 		bl	sprintf
2478:..\src/command_processing.c ****             strcat(info_string, str);
 18926              		.loc 1 2478 0
 18927 0394 07F11C03 		add	r3, r7, #28
 18928 0398 1946     		mov	r1, r3
 18929 039a 7869     		ldr	r0, [r7, #20]
 18930 039c FFF7FEFF 		bl	strcat
 18931              	.L716:
2479:..\src/command_processing.c ****         }
2480:..\src/command_processing.c **** 
2481:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18932              		.loc 1 2481 0
 18933 03a0 7869     		ldr	r0, [r7, #20]
 18934 03a2 FFF7FEFF 		bl	strlen
 18935 03a6 0346     		mov	r3, r0
 18936 03a8 1A46     		mov	r2, r3
 18937 03aa 7B69     		ldr	r3, [r7, #20]
 18938 03ac 1344     		add	r3, r3, r2
 18939 03ae AA4A     		ldr	r2, .L775+16
 18940 03b0 1C46     		mov	r4, r3
 18941 03b2 1346     		mov	r3, r2
 18942 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18943 03b6 2060     		str	r0, [r4]	@ unaligned
 18944 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18945 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18946 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18947 03be A381     		strh	r3, [r4, #12]	@ unaligned
2482:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18948              		.loc 1 2482 0
 18949 03c0 D7F88430 		ldr	r3, [r7, #132]
 18950 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18951 03c8 032B     		cmp	r3, #3
 18952 03ca 4ED0     		beq	.L717
2483:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18953              		.loc 1 2483 0
 18954 03cc D7F88430 		ldr	r3, [r7, #132]
 18955 03d0 DB68     		ldr	r3, [r3, #12]
 18956 03d2 1846     		mov	r0, r3
 18957 03d4 FFF7FEFF 		bl	__aeabi_i2d
 18958 03d8 4FF00002 		mov	r2, #0
 18959 03dc 9A4B     		ldr	r3, .L775
 18960 03de FFF7FEFF 		bl	__aeabi_ddiv
 18961 03e2 0346     		mov	r3, r0
 18962 03e4 0C46     		mov	r4, r1
 18963 03e6 07F11C00 		add	r0, r7, #28
 18964 03ea 1A46     		mov	r2, r3
 18965 03ec 2346     		mov	r3, r4
 18966 03ee 9749     		ldr	r1, .L775+4
 18967 03f0 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****             strcat(info_string, str);
 18968              		.loc 1 2484 0
 18969 03f4 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 419


 18970 03f8 1946     		mov	r1, r3
 18971 03fa 7869     		ldr	r0, [r7, #20]
 18972 03fc FFF7FEFF 		bl	strcat
2485:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18973              		.loc 1 2485 0
 18974 0400 D7F88430 		ldr	r3, [r7, #132]
 18975 0404 1B69     		ldr	r3, [r3, #16]
 18976 0406 1846     		mov	r0, r3
 18977 0408 FFF7FEFF 		bl	__aeabi_i2d
 18978 040c 4FF00002 		mov	r2, #0
 18979 0410 8D4B     		ldr	r3, .L775
 18980 0412 FFF7FEFF 		bl	__aeabi_ddiv
 18981 0416 0346     		mov	r3, r0
 18982 0418 0C46     		mov	r4, r1
 18983 041a 07F11C00 		add	r0, r7, #28
 18984 041e 1A46     		mov	r2, r3
 18985 0420 2346     		mov	r3, r4
 18986 0422 8B49     		ldr	r1, .L775+8
 18987 0424 FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****             strcat(info_string, str);
 18988              		.loc 1 2486 0
 18989 0428 07F11C03 		add	r3, r7, #28
 18990 042c 1946     		mov	r1, r3
 18991 042e 7869     		ldr	r0, [r7, #20]
 18992 0430 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18993              		.loc 1 2487 0
 18994 0434 D7F88430 		ldr	r3, [r7, #132]
 18995 0438 5B69     		ldr	r3, [r3, #20]
 18996 043a 1846     		mov	r0, r3
 18997 043c FFF7FEFF 		bl	__aeabi_i2d
 18998 0440 4FF00002 		mov	r2, #0
 18999 0444 804B     		ldr	r3, .L775
 19000 0446 FFF7FEFF 		bl	__aeabi_ddiv
 19001 044a 0346     		mov	r3, r0
 19002 044c 0C46     		mov	r4, r1
 19003 044e 07F11C00 		add	r0, r7, #28
 19004 0452 1A46     		mov	r2, r3
 19005 0454 2346     		mov	r3, r4
 19006 0456 7F49     		ldr	r1, .L775+12
 19007 0458 FFF7FEFF 		bl	sprintf
2488:..\src/command_processing.c ****             strcat(info_string, str);
 19008              		.loc 1 2488 0
 19009 045c 07F11C03 		add	r3, r7, #28
 19010 0460 1946     		mov	r1, r3
 19011 0462 7869     		ldr	r0, [r7, #20]
 19012 0464 FFF7FEFF 		bl	strcat
 19013 0468 4DE0     		b	.L718
 19014              	.L717:
2489:..\src/command_processing.c **** 
2490:..\src/command_processing.c ****         }
2491:..\src/command_processing.c ****         else {
2492:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19015              		.loc 1 2492 0
 19016 046a D7F88430 		ldr	r3, [r7, #132]
 19017 046e 5B6A     		ldr	r3, [r3, #36]
 19018 0470 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 420


 19019 0472 FFF7FEFF 		bl	__aeabi_i2d
 19020 0476 4FF00002 		mov	r2, #0
 19021 047a 734B     		ldr	r3, .L775
 19022 047c FFF7FEFF 		bl	__aeabi_ddiv
 19023 0480 0346     		mov	r3, r0
 19024 0482 0C46     		mov	r4, r1
 19025 0484 07F11C00 		add	r0, r7, #28
 19026 0488 1A46     		mov	r2, r3
 19027 048a 2346     		mov	r3, r4
 19028 048c 6F49     		ldr	r1, .L775+4
 19029 048e FFF7FEFF 		bl	sprintf
2493:..\src/command_processing.c ****             strcat(info_string, str);
 19030              		.loc 1 2493 0
 19031 0492 07F11C03 		add	r3, r7, #28
 19032 0496 1946     		mov	r1, r3
 19033 0498 7869     		ldr	r0, [r7, #20]
 19034 049a FFF7FEFF 		bl	strcat
2494:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19035              		.loc 1 2494 0
 19036 049e D7F88430 		ldr	r3, [r7, #132]
 19037 04a2 9B6A     		ldr	r3, [r3, #40]
 19038 04a4 1846     		mov	r0, r3
 19039 04a6 FFF7FEFF 		bl	__aeabi_i2d
 19040 04aa 4FF00002 		mov	r2, #0
 19041 04ae 664B     		ldr	r3, .L775
 19042 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19043 04b4 0346     		mov	r3, r0
 19044 04b6 0C46     		mov	r4, r1
 19045 04b8 07F11C00 		add	r0, r7, #28
 19046 04bc 1A46     		mov	r2, r3
 19047 04be 2346     		mov	r3, r4
 19048 04c0 6349     		ldr	r1, .L775+8
 19049 04c2 FFF7FEFF 		bl	sprintf
2495:..\src/command_processing.c ****             strcat(info_string, str);
 19050              		.loc 1 2495 0
 19051 04c6 07F11C03 		add	r3, r7, #28
 19052 04ca 1946     		mov	r1, r3
 19053 04cc 7869     		ldr	r0, [r7, #20]
 19054 04ce FFF7FEFF 		bl	strcat
2496:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19055              		.loc 1 2496 0
 19056 04d2 D7F88430 		ldr	r3, [r7, #132]
 19057 04d6 DB6A     		ldr	r3, [r3, #44]
 19058 04d8 1846     		mov	r0, r3
 19059 04da FFF7FEFF 		bl	__aeabi_i2d
 19060 04de 4FF00002 		mov	r2, #0
 19061 04e2 594B     		ldr	r3, .L775
 19062 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19063 04e8 0346     		mov	r3, r0
 19064 04ea 0C46     		mov	r4, r1
 19065 04ec 07F11C00 		add	r0, r7, #28
 19066 04f0 1A46     		mov	r2, r3
 19067 04f2 2346     		mov	r3, r4
 19068 04f4 5749     		ldr	r1, .L775+12
 19069 04f6 FFF7FEFF 		bl	sprintf
2497:..\src/command_processing.c ****             strcat(info_string, str);
 19070              		.loc 1 2497 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 421


 19071 04fa 07F11C03 		add	r3, r7, #28
 19072 04fe 1946     		mov	r1, r3
 19073 0500 7869     		ldr	r0, [r7, #20]
 19074 0502 FFF7FEFF 		bl	strcat
 19075              	.L718:
2498:..\src/command_processing.c ****         }
2499:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19076              		.loc 1 2499 0
 19077 0506 D7F88430 		ldr	r3, [r7, #132]
 19078 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19079 050e 012B     		cmp	r3, #1
 19080 0510 14D1     		bne	.L719
2500:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19081              		.loc 1 2500 0
 19082 0512 7869     		ldr	r0, [r7, #20]
 19083 0514 FFF7FEFF 		bl	strlen
 19084 0518 0346     		mov	r3, r0
 19085 051a 1A46     		mov	r2, r3
 19086 051c 7B69     		ldr	r3, [r7, #20]
 19087 051e 1344     		add	r3, r3, r2
 19088 0520 4E4A     		ldr	r2, .L775+20
 19089 0522 1D46     		mov	r5, r3
 19090 0524 1446     		mov	r4, r2
 19091 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19092 0528 2860     		str	r0, [r5]	@ unaligned
 19093 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19094 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19095 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19096 0530 03CC     		ldmia	r4!, {r0, r1}
 19097 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19098 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19099 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19100 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 19101 053a 13E0     		b	.L720
 19102              	.L719:
2501:..\src/command_processing.c ****         else
2502:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19103              		.loc 1 2502 0
 19104 053c 7869     		ldr	r0, [r7, #20]
 19105 053e FFF7FEFF 		bl	strlen
 19106 0542 0346     		mov	r3, r0
 19107 0544 1A46     		mov	r2, r3
 19108 0546 7B69     		ldr	r3, [r7, #20]
 19109 0548 1344     		add	r3, r3, r2
 19110 054a 454A     		ldr	r2, .L775+24
 19111 054c 1D46     		mov	r5, r3
 19112 054e 1446     		mov	r4, r2
 19113 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19114 0552 2860     		str	r0, [r5]	@ unaligned
 19115 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19116 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19117 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 19118 055a 03CC     		ldmia	r4!, {r0, r1}
 19119 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19120 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19121 0560 2378     		ldrb	r3, [r4]
 19122 0562 2B76     		strb	r3, [r5, #24]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 422


 19123              	.L720:
2503:..\src/command_processing.c **** 
2504:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19124              		.loc 1 2504 0
 19125 0564 D7F88430 		ldr	r3, [r7, #132]
 19126 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19127 056c 072B     		cmp	r3, #7
 19128 056e 00F2EA80 		bhi	.L721
 19129 0572 01A2     		adr	r2, .L723
 19130 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19131              		.p2align 2
 19132              	.L723:
 19133 0578 99050000 		.word	.L722+1
 19134 057c BD050000 		.word	.L724+1
 19135 0580 E5050000 		.word	.L725+1
 19136 0584 17060000 		.word	.L726+1
 19137 0588 75060000 		.word	.L727+1
 19138 058c A3060000 		.word	.L728+1
 19139 0590 D3060000 		.word	.L729+1
 19140 0594 01070000 		.word	.L730+1
 19141              		.p2align 1
 19142              	.L722:
2505:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2506:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19143              		.loc 1 2506 0
 19144 0598 7869     		ldr	r0, [r7, #20]
 19145 059a FFF7FEFF 		bl	strlen
 19146 059e 0346     		mov	r3, r0
 19147 05a0 1A46     		mov	r2, r3
 19148 05a2 7B69     		ldr	r3, [r7, #20]
 19149 05a4 1344     		add	r3, r3, r2
 19150 05a6 2F4A     		ldr	r2, .L775+28
 19151 05a8 1D46     		mov	r5, r3
 19152 05aa 1446     		mov	r4, r2
 19153 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19154 05ae 2860     		str	r0, [r5]	@ unaligned
 19155 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19156 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19157 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19158 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19159 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2507:..\src/command_processing.c ****                 break;
 19160              		.loc 1 2507 0
 19161 05ba C4E0     		b	.L721
 19162              	.L724:
2508:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2509:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19163              		.loc 1 2509 0
 19164 05bc 7869     		ldr	r0, [r7, #20]
 19165 05be FFF7FEFF 		bl	strlen
 19166 05c2 0346     		mov	r3, r0
 19167 05c4 1A46     		mov	r2, r3
 19168 05c6 7B69     		ldr	r3, [r7, #20]
 19169 05c8 1344     		add	r3, r3, r2
 19170 05ca 274A     		ldr	r2, .L775+32
 19171 05cc 1D46     		mov	r5, r3
 19172 05ce 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 423


 19173 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19174 05d2 2860     		str	r0, [r5]	@ unaligned
 19175 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19176 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19177 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19178 05da 2068     		ldr	r0, [r4]	@ unaligned
 19179 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19180 05de 2379     		ldrb	r3, [r4, #4]
 19181 05e0 2B75     		strb	r3, [r5, #20]
2510:..\src/command_processing.c ****                 break;
 19182              		.loc 1 2510 0
 19183 05e2 B0E0     		b	.L721
 19184              	.L725:
2511:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2512:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19185              		.loc 1 2512 0
 19186 05e4 7869     		ldr	r0, [r7, #20]
 19187 05e6 FFF7FEFF 		bl	strlen
 19188 05ea 0346     		mov	r3, r0
 19189 05ec 1A46     		mov	r2, r3
 19190 05ee 7B69     		ldr	r3, [r7, #20]
 19191 05f0 1344     		add	r3, r3, r2
 19192 05f2 1E4A     		ldr	r2, .L775+36
 19193 05f4 1D46     		mov	r5, r3
 19194 05f6 1446     		mov	r4, r2
 19195 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19196 05fa 2860     		str	r0, [r5]	@ unaligned
 19197 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19198 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19199 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19200 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19201 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19202 0606 6961     		str	r1, [r5, #20]	@ unaligned
 19203 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19204 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19205 060c A278     		ldrb	r2, [r4, #2]
 19206 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19207 0610 1346     		mov	r3, r2
 19208 0612 AB77     		strb	r3, [r5, #30]
2513:..\src/command_processing.c ****                 break;
 19209              		.loc 1 2513 0
 19210 0614 97E0     		b	.L721
 19211              	.L726:
2514:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2515:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19212              		.loc 1 2515 0
 19213 0616 7869     		ldr	r0, [r7, #20]
 19214 0618 FFF7FEFF 		bl	strlen
 19215 061c 0346     		mov	r3, r0
 19216 061e 1A46     		mov	r2, r3
 19217 0620 7B69     		ldr	r3, [r7, #20]
 19218 0622 1344     		add	r3, r3, r2
 19219 0624 124A     		ldr	r2, .L775+40
 19220 0626 1D46     		mov	r5, r3
 19221 0628 1446     		mov	r4, r2
 19222 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19223 062c 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 424


 19224 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19225 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 19226 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19227 0634 03CC     		ldmia	r4!, {r0, r1}
 19228 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19229 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19230 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19231 063c A278     		ldrb	r2, [r4, #2]
 19232 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19233 0640 1346     		mov	r3, r2
 19234 0642 AB76     		strb	r3, [r5, #26]
2516:..\src/command_processing.c ****                 break;
 19235              		.loc 1 2516 0
 19236 0644 7FE0     		b	.L721
 19237              	.L776:
 19238 0646 00BF     		.align	2
 19239              	.L775:
 19240 0648 0000F040 		.word	1089470464
 19241 064c 20140000 		.word	.LC190
 19242 0650 2C140000 		.word	.LC191
 19243 0654 38140000 		.word	.LC192
 19244 0658 B01D0000 		.word	.LC284
 19245 065c 60140000 		.word	.LC194
 19246 0660 7C140000 		.word	.LC195
 19247 0664 98140000 		.word	.LC196
 19248 0668 AC140000 		.word	.LC197
 19249 066c C4140000 		.word	.LC198
 19250 0670 E4140000 		.word	.LC199
 19251              	.L727:
2517:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2518:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19252              		.loc 1 2518 0
 19253 0674 7869     		ldr	r0, [r7, #20]
 19254 0676 FFF7FEFF 		bl	strlen
 19255 067a 0346     		mov	r3, r0
 19256 067c 1A46     		mov	r2, r3
 19257 067e 7B69     		ldr	r3, [r7, #20]
 19258 0680 1344     		add	r3, r3, r2
 19259 0682 BA4A     		ldr	r2, .L777
 19260 0684 1C46     		mov	r4, r3
 19261 0686 1546     		mov	r5, r2
 19262 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19263 068a 2060     		str	r0, [r4]	@ unaligned
 19264 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19265 068e A260     		str	r2, [r4, #8]	@ unaligned
 19266 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19267 0692 2868     		ldr	r0, [r5]	@ unaligned
 19268 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19269 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19270 0698 AA79     		ldrb	r2, [r5, #6]
 19271 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19272 069c 1346     		mov	r3, r2
 19273 069e A375     		strb	r3, [r4, #22]
2519:..\src/command_processing.c ****                 break;
 19274              		.loc 1 2519 0
 19275 06a0 51E0     		b	.L721
 19276              	.L728:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 425


2520:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2521:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19277              		.loc 1 2521 0
 19278 06a2 7869     		ldr	r0, [r7, #20]
 19279 06a4 FFF7FEFF 		bl	strlen
 19280 06a8 0346     		mov	r3, r0
 19281 06aa 1A46     		mov	r2, r3
 19282 06ac 7B69     		ldr	r3, [r7, #20]
 19283 06ae 1344     		add	r3, r3, r2
 19284 06b0 AF4A     		ldr	r2, .L777+4
 19285 06b2 1D46     		mov	r5, r3
 19286 06b4 1446     		mov	r4, r2
 19287 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19288 06b8 2860     		str	r0, [r5]	@ unaligned
 19289 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19290 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19291 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19292 06c0 03CC     		ldmia	r4!, {r0, r1}
 19293 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19294 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19295 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19296 06c8 A278     		ldrb	r2, [r4, #2]
 19297 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19298 06cc 1346     		mov	r3, r2
 19299 06ce AB76     		strb	r3, [r5, #26]
2522:..\src/command_processing.c ****                 break;
 19300              		.loc 1 2522 0
 19301 06d0 39E0     		b	.L721
 19302              	.L729:
2523:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2524:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19303              		.loc 1 2524 0
 19304 06d2 7869     		ldr	r0, [r7, #20]
 19305 06d4 FFF7FEFF 		bl	strlen
 19306 06d8 0346     		mov	r3, r0
 19307 06da 1A46     		mov	r2, r3
 19308 06dc 7B69     		ldr	r3, [r7, #20]
 19309 06de 1344     		add	r3, r3, r2
 19310 06e0 A44A     		ldr	r2, .L777+8
 19311 06e2 1C46     		mov	r4, r3
 19312 06e4 1546     		mov	r5, r2
 19313 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19314 06e8 2060     		str	r0, [r4]	@ unaligned
 19315 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19316 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19317 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19318 06f0 2868     		ldr	r0, [r5]	@ unaligned
 19319 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19320 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19321 06f6 AA79     		ldrb	r2, [r5, #6]
 19322 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19323 06fa 1346     		mov	r3, r2
 19324 06fc A375     		strb	r3, [r4, #22]
2525:..\src/command_processing.c ****                 break;
 19325              		.loc 1 2525 0
 19326 06fe 22E0     		b	.L721
 19327              	.L730:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 426


2526:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2527:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19328              		.loc 1 2527 0
 19329 0700 7869     		ldr	r0, [r7, #20]
 19330 0702 FFF7FEFF 		bl	strlen
 19331 0706 0346     		mov	r3, r0
 19332 0708 1A46     		mov	r2, r3
 19333 070a 7B69     		ldr	r3, [r7, #20]
 19334 070c 1344     		add	r3, r3, r2
 19335 070e 9A4A     		ldr	r2, .L777+12
 19336 0710 1546     		mov	r5, r2
 19337 0712 9E46     		mov	lr, r3
 19338 0714 05F1200C 		add	ip, r5, #32
 19339              	.L731:
 19340 0718 7446     		mov	r4, lr
 19341 071a 2E46     		mov	r6, r5
 19342 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19343 071e 2060     		str	r0, [r4]	@ unaligned
 19344 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19345 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19346 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19347 0726 1035     		adds	r5, r5, #16
 19348 0728 0EF1100E 		add	lr, lr, #16
 19349 072c 6545     		cmp	r5, ip
 19350 072e F3D1     		bne	.L731
 19351 0730 7446     		mov	r4, lr
 19352 0732 2B46     		mov	r3, r5
 19353 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19354 0736 2060     		str	r0, [r4]	@ unaligned
 19355 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19356 073a A260     		str	r2, [r4, #8]	@ unaligned
 19357 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19358 073e 9B78     		ldrb	r3, [r3, #2]
 19359 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19360 0742 A373     		strb	r3, [r4, #14]
2528:..\src/command_processing.c ****                 break;
 19361              		.loc 1 2528 0
 19362 0744 00BF     		nop
 19363              	.L721:
2529:..\src/command_processing.c ****         }
2530:..\src/command_processing.c **** 
2531:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19364              		.loc 1 2531 0
 19365 0746 D7F88430 		ldr	r3, [r7, #132]
 19366 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19367 074e 032B     		cmp	r3, #3
 19368 0750 63D8     		bhi	.L771
 19369 0752 01A2     		adr	r2, .L734
 19370 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19371              		.p2align 2
 19372              	.L734:
 19373 0758 69070000 		.word	.L733+1
 19374 075c 93070000 		.word	.L735+1
 19375 0760 B7070000 		.word	.L736+1
 19376 0764 DD070000 		.word	.L737+1
 19377              		.p2align 1
 19378              	.L733:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 427


2532:..\src/command_processing.c ****             case CONTROL_ANGLE:
2533:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19379              		.loc 1 2533 0
 19380 0768 7869     		ldr	r0, [r7, #20]
 19381 076a FFF7FEFF 		bl	strlen
 19382 076e 0346     		mov	r3, r0
 19383 0770 1A46     		mov	r2, r3
 19384 0772 7B69     		ldr	r3, [r7, #20]
 19385 0774 1344     		add	r3, r3, r2
 19386 0776 814A     		ldr	r2, .L777+16
 19387 0778 1D46     		mov	r5, r3
 19388 077a 1446     		mov	r4, r2
 19389 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19390 077e 2860     		str	r0, [r5]	@ unaligned
 19391 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19392 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19393 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19394 0786 03CC     		ldmia	r4!, {r0, r1}
 19395 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19396 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19397 078c 2378     		ldrb	r3, [r4]
 19398 078e 2B76     		strb	r3, [r5, #24]
2534:..\src/command_processing.c ****                 break;
 19399              		.loc 1 2534 0
 19400 0790 44E0     		b	.L738
 19401              	.L735:
2535:..\src/command_processing.c ****             case CONTROL_PWM:
2536:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19402              		.loc 1 2536 0
 19403 0792 7869     		ldr	r0, [r7, #20]
 19404 0794 FFF7FEFF 		bl	strlen
 19405 0798 0346     		mov	r3, r0
 19406 079a 1A46     		mov	r2, r3
 19407 079c 7B69     		ldr	r3, [r7, #20]
 19408 079e 1344     		add	r3, r3, r2
 19409 07a0 774A     		ldr	r2, .L777+20
 19410 07a2 1D46     		mov	r5, r3
 19411 07a4 1446     		mov	r4, r2
 19412 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19413 07a8 2860     		str	r0, [r5]	@ unaligned
 19414 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19415 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19416 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19417 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19418 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2537:..\src/command_processing.c ****                 break;
 19419              		.loc 1 2537 0
 19420 07b4 32E0     		b	.L738
 19421              	.L736:
2538:..\src/command_processing.c ****             case CONTROL_CURRENT:
2539:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19422              		.loc 1 2539 0
 19423 07b6 7869     		ldr	r0, [r7, #20]
 19424 07b8 FFF7FEFF 		bl	strlen
 19425 07bc 0346     		mov	r3, r0
 19426 07be 1A46     		mov	r2, r3
 19427 07c0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 428


 19428 07c2 1344     		add	r3, r3, r2
 19429 07c4 6F4A     		ldr	r2, .L777+24
 19430 07c6 1D46     		mov	r5, r3
 19431 07c8 1446     		mov	r4, r2
 19432 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19433 07cc 2860     		str	r0, [r5]	@ unaligned
 19434 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19435 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19436 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19437 07d4 03CC     		ldmia	r4!, {r0, r1}
 19438 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19439 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2540:..\src/command_processing.c ****                 break;
 19440              		.loc 1 2540 0
 19441 07da 1FE0     		b	.L738
 19442              	.L737:
2541:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2542:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19443              		.loc 1 2542 0
 19444 07dc 7869     		ldr	r0, [r7, #20]
 19445 07de FFF7FEFF 		bl	strlen
 19446 07e2 0346     		mov	r3, r0
 19447 07e4 1A46     		mov	r2, r3
 19448 07e6 7B69     		ldr	r3, [r7, #20]
 19449 07e8 1344     		add	r3, r3, r2
 19450 07ea 674A     		ldr	r2, .L777+28
 19451 07ec 1446     		mov	r4, r2
 19452 07ee 9E46     		mov	lr, r3
 19453 07f0 04F1200C 		add	ip, r4, #32
 19454              	.L739:
 19455 07f4 7546     		mov	r5, lr
 19456 07f6 2646     		mov	r6, r4
 19457 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19458 07fa 2860     		str	r0, [r5]	@ unaligned
 19459 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19460 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19461 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19462 0802 1034     		adds	r4, r4, #16
 19463 0804 0EF1100E 		add	lr, lr, #16
 19464 0808 6445     		cmp	r4, ip
 19465 080a F3D1     		bne	.L739
 19466 080c 7346     		mov	r3, lr
 19467 080e 2246     		mov	r2, r4
 19468 0810 1068     		ldr	r0, [r2]	@ unaligned
 19469 0812 1860     		str	r0, [r3]	@ unaligned
 19470 0814 1279     		ldrb	r2, [r2, #4]
 19471 0816 1A71     		strb	r2, [r3, #4]
2543:..\src/command_processing.c ****                 break;
 19472              		.loc 1 2543 0
 19473 0818 00E0     		b	.L738
 19474              	.L771:
2544:..\src/command_processing.c ****             default:
2545:..\src/command_processing.c ****                 break;
 19475              		.loc 1 2545 0
 19476 081a 00BF     		nop
 19477              	.L738:
2546:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 429


2547:..\src/command_processing.c **** 
2548:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19478              		.loc 1 2548 0
 19479 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19480 0820 D7F88C10 		ldr	r1, [r7, #140]
 19481 0824 1346     		mov	r3, r2
 19482 0826 5B00     		lsls	r3, r3, #1
 19483 0828 1344     		add	r3, r3, r2
 19484 082a 1B01     		lsls	r3, r3, #4
 19485 082c 0B44     		add	r3, r3, r1
 19486 082e 03F5D873 		add	r3, r3, #432
 19487 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19488 0834 002B     		cmp	r3, #0
 19489 0836 1CD0     		beq	.L740
2549:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19490              		.loc 1 2549 0
 19491 0838 7869     		ldr	r0, [r7, #20]
 19492 083a FFF7FEFF 		bl	strlen
 19493 083e 0346     		mov	r3, r0
 19494 0840 1A46     		mov	r2, r3
 19495 0842 7B69     		ldr	r3, [r7, #20]
 19496 0844 1344     		add	r3, r3, r2
 19497 0846 514A     		ldr	r2, .L777+32
 19498 0848 1446     		mov	r4, r2
 19499 084a 9E46     		mov	lr, r3
 19500 084c 04F1200C 		add	ip, r4, #32
 19501              	.L741:
 19502 0850 7546     		mov	r5, lr
 19503 0852 2646     		mov	r6, r4
 19504 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19505 0856 2860     		str	r0, [r5]	@ unaligned
 19506 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19507 085a AA60     		str	r2, [r5, #8]	@ unaligned
 19508 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19509 085e 1034     		adds	r4, r4, #16
 19510 0860 0EF1100E 		add	lr, lr, #16
 19511 0864 6445     		cmp	r4, ip
 19512 0866 F3D1     		bne	.L741
 19513 0868 7346     		mov	r3, lr
 19514 086a 2246     		mov	r2, r4
 19515 086c 1278     		ldrb	r2, [r2]
 19516 086e 1A70     		strb	r2, [r3]
 19517 0870 13E0     		b	.L742
 19518              	.L740:
2550:..\src/command_processing.c ****         else
2551:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19519              		.loc 1 2551 0
 19520 0872 7869     		ldr	r0, [r7, #20]
 19521 0874 FFF7FEFF 		bl	strlen
 19522 0878 0346     		mov	r3, r0
 19523 087a 1A46     		mov	r2, r3
 19524 087c 7B69     		ldr	r3, [r7, #20]
 19525 087e 1344     		add	r3, r3, r2
 19526 0880 434A     		ldr	r2, .L777+36
 19527 0882 1C46     		mov	r4, r3
 19528 0884 1546     		mov	r5, r2
 19529 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 430


 19530 0888 2060     		str	r0, [r4]	@ unaligned
 19531 088a 6160     		str	r1, [r4, #4]	@ unaligned
 19532 088c A260     		str	r2, [r4, #8]	@ unaligned
 19533 088e E360     		str	r3, [r4, #12]	@ unaligned
 19534 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19535 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19536 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19537 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19538 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19539              	.L742:
2552:..\src/command_processing.c **** 
2553:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19540              		.loc 1 2553 0
 19541 089a 7869     		ldr	r0, [r7, #20]
 19542 089c FFF7FEFF 		bl	strlen
 19543 08a0 0346     		mov	r3, r0
 19544 08a2 1A46     		mov	r2, r3
 19545 08a4 7B69     		ldr	r3, [r7, #20]
 19546 08a6 1344     		add	r3, r3, r2
 19547 08a8 3A4A     		ldr	r2, .L777+40
 19548 08aa 1C46     		mov	r4, r3
 19549 08ac 1346     		mov	r3, r2
 19550 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19551 08b0 2060     		str	r0, [r4]	@ unaligned
 19552 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19553 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19554 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19555 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2554:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19556              		.loc 1 2554 0
 19557 08ba 0023     		movs	r3, #0
 19558 08bc C7F89430 		str	r3, [r7, #148]
 19559 08c0 30E0     		b	.L743
 19560              	.L745:
2555:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19561              		.loc 1 2555 0
 19562 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19563 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19564 08ca 1346     		mov	r3, r2
 19565 08cc 5B00     		lsls	r3, r3, #1
 19566 08ce 1344     		add	r3, r3, r2
 19567 08d0 1B01     		lsls	r3, r3, #4
 19568 08d2 CA18     		adds	r2, r1, r3
 19569 08d4 D7F89430 		ldr	r3, [r7, #148]
 19570 08d8 1344     		add	r3, r3, r2
 19571 08da 03F29513 		addw	r3, r3, #405
 19572 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19573 08e0 1A46     		mov	r2, r3
 19574 08e2 07F11C03 		add	r3, r7, #28
 19575 08e6 2C49     		ldr	r1, .L777+44
 19576 08e8 1846     		mov	r0, r3
 19577 08ea FFF7FEFF 		bl	sprintf
2556:..\src/command_processing.c ****             strcat(info_string, str);
 19578              		.loc 1 2556 0
 19579 08ee 07F11C03 		add	r3, r7, #28
 19580 08f2 1946     		mov	r1, r3
 19581 08f4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 431


 19582 08f6 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19583              		.loc 1 2557 0
 19584 08fa D7F89430 		ldr	r3, [r7, #148]
 19585 08fe 022B     		cmp	r3, #2
 19586 0900 0BD0     		beq	.L744
2558:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19587              		.loc 1 2558 0
 19588 0902 7869     		ldr	r0, [r7, #20]
 19589 0904 FFF7FEFF 		bl	strlen
 19590 0908 0346     		mov	r3, r0
 19591 090a 1A46     		mov	r2, r3
 19592 090c 7B69     		ldr	r3, [r7, #20]
 19593 090e 1344     		add	r3, r3, r2
 19594 0910 224A     		ldr	r2, .L777+48
 19595 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19596 0914 9278     		ldrb	r2, [r2, #2]
 19597 0916 1980     		strh	r1, [r3]	@ unaligned
 19598 0918 9A70     		strb	r2, [r3, #2]
 19599              	.L744:
2554:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19600              		.loc 1 2554 0 discriminator 2
 19601 091a D7F89430 		ldr	r3, [r7, #148]
 19602 091e 0133     		adds	r3, r3, #1
 19603 0920 C7F89430 		str	r3, [r7, #148]
 19604              	.L743:
2554:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19605              		.loc 1 2554 0 is_stmt 0 discriminator 1
 19606 0924 D7F89430 		ldr	r3, [r7, #148]
 19607 0928 022B     		cmp	r3, #2
 19608 092a CADD     		ble	.L745
2559:..\src/command_processing.c ****             }                
2560:..\src/command_processing.c ****         }
2561:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19609              		.loc 1 2561 0 is_stmt 1
 19610 092c 7869     		ldr	r0, [r7, #20]
 19611 092e FFF7FEFF 		bl	strlen
 19612 0932 0346     		mov	r3, r0
 19613 0934 1A46     		mov	r2, r3
 19614 0936 7B69     		ldr	r3, [r7, #20]
 19615 0938 1344     		add	r3, r3, r2
 19616 093a 194A     		ldr	r2, .L777+52
 19617 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19618 093e 9278     		ldrb	r2, [r2, #2]
 19619 0940 1980     		strh	r1, [r3]	@ unaligned
 19620 0942 9A70     		strb	r2, [r3, #2]
2562:..\src/command_processing.c **** 
2563:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19621              		.loc 1 2563 0
 19622 0944 7869     		ldr	r0, [r7, #20]
 19623 0946 FFF7FEFF 		bl	strlen
 19624 094a 0346     		mov	r3, r0
 19625 094c 1A46     		mov	r2, r3
 19626 094e 7B69     		ldr	r3, [r7, #20]
 19627 0950 1344     		add	r3, r3, r2
 19628 0952 1449     		ldr	r1, .L777+56
 19629 0954 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 432


 19630 0956 0B46     		mov	r3, r1
 19631 0958 03CB     		ldmia	r3!, {r0, r1}
 19632 095a 1060     		str	r0, [r2]	@ unaligned
 19633 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19634 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19635 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2564:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19636              		.loc 1 2564 0
 19637 0962 0023     		movs	r3, #0
 19638 0964 C7F89430 		str	r3, [r7, #148]
 19639 0968 5EE0     		b	.L746
 19640              	.L778:
 19641 096a 00BF     		.align	2
 19642              	.L777:
 19643 096c 00150000 		.word	.LC200
 19644 0970 18150000 		.word	.LC201
 19645 0974 34150000 		.word	.LC202
 19646 0978 4C150000 		.word	.LC203
 19647 097c 7C150000 		.word	.LC204
 19648 0980 98150000 		.word	.LC205
 19649 0984 AC150000 		.word	.LC206
 19650 0988 C4150000 		.word	.LC207
 19651 098c EC150000 		.word	.LC208
 19652 0990 10160000 		.word	.LC209
 19653 0994 C01D0000 		.word	.LC285
 19654 0998 40130000 		.word	.LC181
 19655 099c 44130000 		.word	.LC182
 19656 09a0 10110000 		.word	.LC150
 19657 09a4 D01D0000 		.word	.LC286
 19658              	.L748:
2565:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19659              		.loc 1 2565 0
 19660 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19661 09ac D7F88C10 		ldr	r1, [r7, #140]
 19662 09b0 1346     		mov	r3, r2
 19663 09b2 5B00     		lsls	r3, r3, #1
 19664 09b4 1344     		add	r3, r3, r2
 19665 09b6 9B00     		lsls	r3, r3, #2
 19666 09b8 D7F89420 		ldr	r2, [r7, #148]
 19667 09bc 1344     		add	r3, r3, r2
 19668 09be 6633     		adds	r3, r3, #102
 19669 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19670 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19671 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19672 09cc 1346     		mov	r3, r2
 19673 09ce 5B00     		lsls	r3, r3, #1
 19674 09d0 1344     		add	r3, r3, r2
 19675 09d2 1B01     		lsls	r3, r3, #4
 19676 09d4 C218     		adds	r2, r0, r3
 19677 09d6 D7F89430 		ldr	r3, [r7, #148]
 19678 09da 1344     		add	r3, r3, r2
 19679 09dc 03F29513 		addw	r3, r3, #405
 19680 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19681 09e2 41FA03F2 		asr	r2, r1, r3
 19682 09e6 07F11C03 		add	r3, r7, #28
 19683 09ea CF49     		ldr	r1, .L779
 19684 09ec 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 433


 19685 09ee FFF7FEFF 		bl	sprintf
2566:..\src/command_processing.c ****             strcat(info_string, str);
 19686              		.loc 1 2566 0
 19687 09f2 07F11C03 		add	r3, r7, #28
 19688 09f6 1946     		mov	r1, r3
 19689 09f8 7869     		ldr	r0, [r7, #20]
 19690 09fa FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19691              		.loc 1 2567 0
 19692 09fe D7F89430 		ldr	r3, [r7, #148]
 19693 0a02 022B     		cmp	r3, #2
 19694 0a04 0BD0     		beq	.L747
2568:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19695              		.loc 1 2568 0
 19696 0a06 7869     		ldr	r0, [r7, #20]
 19697 0a08 FFF7FEFF 		bl	strlen
 19698 0a0c 0346     		mov	r3, r0
 19699 0a0e 1A46     		mov	r2, r3
 19700 0a10 7B69     		ldr	r3, [r7, #20]
 19701 0a12 1344     		add	r3, r3, r2
 19702 0a14 C54A     		ldr	r2, .L779+4
 19703 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19704 0a18 9278     		ldrb	r2, [r2, #2]
 19705 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19706 0a1c 9A70     		strb	r2, [r3, #2]
 19707              	.L747:
2564:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19708              		.loc 1 2564 0 discriminator 2
 19709 0a1e D7F89430 		ldr	r3, [r7, #148]
 19710 0a22 0133     		adds	r3, r3, #1
 19711 0a24 C7F89430 		str	r3, [r7, #148]
 19712              	.L746:
2564:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19713              		.loc 1 2564 0 is_stmt 0 discriminator 1
 19714 0a28 D7F89430 		ldr	r3, [r7, #148]
 19715 0a2c 022B     		cmp	r3, #2
 19716 0a2e BBDD     		ble	.L748
2569:..\src/command_processing.c ****             }
2570:..\src/command_processing.c ****         }
2571:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19717              		.loc 1 2571 0 is_stmt 1
 19718 0a30 7869     		ldr	r0, [r7, #20]
 19719 0a32 FFF7FEFF 		bl	strlen
 19720 0a36 0346     		mov	r3, r0
 19721 0a38 1A46     		mov	r2, r3
 19722 0a3a 7B69     		ldr	r3, [r7, #20]
 19723 0a3c 1344     		add	r3, r3, r2
 19724 0a3e BC4A     		ldr	r2, .L779+8
 19725 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19726 0a42 9278     		ldrb	r2, [r2, #2]
 19727 0a44 1980     		strh	r1, [r3]	@ unaligned
 19728 0a46 9A70     		strb	r2, [r3, #2]
2572:..\src/command_processing.c ****             
2573:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19729              		.loc 1 2573 0
 19730 0a48 7869     		ldr	r0, [r7, #20]
 19731 0a4a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 434


 19732 0a4e 0346     		mov	r3, r0
 19733 0a50 1A46     		mov	r2, r3
 19734 0a52 7B69     		ldr	r3, [r7, #20]
 19735 0a54 1344     		add	r3, r3, r2
 19736 0a56 B74A     		ldr	r2, .L779+12
 19737 0a58 1C46     		mov	r4, r3
 19738 0a5a 1346     		mov	r3, r2
 19739 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19740 0a5e 2060     		str	r0, [r4]	@ unaligned
 19741 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19742 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19743 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19744 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2574:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19745              		.loc 1 2574 0
 19746 0a68 0023     		movs	r3, #0
 19747 0a6a C7F89430 		str	r3, [r7, #148]
 19748 0a6e 35E0     		b	.L749
 19749              	.L751:
2575:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19750              		.loc 1 2575 0
 19751 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19752 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19753 0a78 1346     		mov	r3, r2
 19754 0a7a 5B00     		lsls	r3, r3, #1
 19755 0a7c 1344     		add	r3, r3, r2
 19756 0a7e 9B00     		lsls	r3, r3, #2
 19757 0a80 D7F89420 		ldr	r2, [r7, #148]
 19758 0a84 1344     		add	r3, r3, r2
 19759 0a86 6833     		adds	r3, r3, #104
 19760 0a88 9B00     		lsls	r3, r3, #2
 19761 0a8a 0B44     		add	r3, r3, r1
 19762 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 19763 0a8e 1846     		mov	r0, r3
 19764 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19765 0a94 0346     		mov	r3, r0
 19766 0a96 0C46     		mov	r4, r1
 19767 0a98 07F11C00 		add	r0, r7, #28
 19768 0a9c 1A46     		mov	r2, r3
 19769 0a9e 2346     		mov	r3, r4
 19770 0aa0 A549     		ldr	r1, .L779+16
 19771 0aa2 FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 19772              		.loc 1 2576 0
 19773 0aa6 07F11C03 		add	r3, r7, #28
 19774 0aaa 1946     		mov	r1, r3
 19775 0aac 7869     		ldr	r0, [r7, #20]
 19776 0aae FFF7FEFF 		bl	strcat
2577:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19777              		.loc 1 2577 0
 19778 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19779 0ab6 022B     		cmp	r3, #2
 19780 0ab8 0BD0     		beq	.L750
2578:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19781              		.loc 1 2578 0
 19782 0aba 7869     		ldr	r0, [r7, #20]
 19783 0abc FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 435


 19784 0ac0 0346     		mov	r3, r0
 19785 0ac2 1A46     		mov	r2, r3
 19786 0ac4 7B69     		ldr	r3, [r7, #20]
 19787 0ac6 1344     		add	r3, r3, r2
 19788 0ac8 984A     		ldr	r2, .L779+4
 19789 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19790 0acc 9278     		ldrb	r2, [r2, #2]
 19791 0ace 1980     		strh	r1, [r3]	@ unaligned
 19792 0ad0 9A70     		strb	r2, [r3, #2]
 19793              	.L750:
2574:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19794              		.loc 1 2574 0 discriminator 2
 19795 0ad2 D7F89430 		ldr	r3, [r7, #148]
 19796 0ad6 0133     		adds	r3, r3, #1
 19797 0ad8 C7F89430 		str	r3, [r7, #148]
 19798              	.L749:
2574:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19799              		.loc 1 2574 0 is_stmt 0 discriminator 1
 19800 0adc D7F89430 		ldr	r3, [r7, #148]
 19801 0ae0 022B     		cmp	r3, #2
 19802 0ae2 C5DD     		ble	.L751
2579:..\src/command_processing.c ****             }
2580:..\src/command_processing.c ****         }
2581:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19803              		.loc 1 2581 0 is_stmt 1
 19804 0ae4 7869     		ldr	r0, [r7, #20]
 19805 0ae6 FFF7FEFF 		bl	strlen
 19806 0aea 0346     		mov	r3, r0
 19807 0aec 1A46     		mov	r2, r3
 19808 0aee 7B69     		ldr	r3, [r7, #20]
 19809 0af0 1344     		add	r3, r3, r2
 19810 0af2 8F4A     		ldr	r2, .L779+8
 19811 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 19812 0af6 9278     		ldrb	r2, [r2, #2]
 19813 0af8 1980     		strh	r1, [r3]	@ unaligned
 19814 0afa 9A70     		strb	r2, [r3, #2]
2582:..\src/command_processing.c **** 
2583:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19815              		.loc 1 2583 0
 19816 0afc D7F88430 		ldr	r3, [r7, #132]
 19817 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 19818 0b02 1846     		mov	r0, r3
 19819 0b04 FFF7FEFF 		bl	__aeabi_f2d
 19820 0b08 C7E90201 		strd	r0, [r7, #8]
 19821 0b0c D7F88430 		ldr	r3, [r7, #132]
 19822 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 19823 0b12 1846     		mov	r0, r3
 19824 0b14 FFF7FEFF 		bl	__aeabi_f2d
 19825 0b18 0446     		mov	r4, r0
 19826 0b1a 0D46     		mov	r5, r1
 19827 0b1c D7F88430 		ldr	r3, [r7, #132]
 19828 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 19829 0b22 1846     		mov	r0, r3
 19830 0b24 FFF7FEFF 		bl	__aeabi_f2d
 19831 0b28 8046     		mov	r8, r0
 19832 0b2a 8946     		mov	r9, r1
 19833 0b2c D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 436


 19834 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 19835 0b32 1846     		mov	r0, r3
 19836 0b34 FFF7FEFF 		bl	__aeabi_f2d
 19837 0b38 8246     		mov	r10, r0
 19838 0b3a 8B46     		mov	fp, r1
 19839 0b3c D7F88430 		ldr	r3, [r7, #132]
 19840 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 19841 0b42 1846     		mov	r0, r3
 19842 0b44 FFF7FEFF 		bl	__aeabi_f2d
 19843 0b48 C7E90001 		strd	r0, [r7]
 19844 0b4c D7F88430 		ldr	r3, [r7, #132]
 19845 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 19846 0b52 1846     		mov	r0, r3
 19847 0b54 FFF7FEFF 		bl	__aeabi_f2d
 19848 0b58 0246     		mov	r2, r0
 19849 0b5a 0B46     		mov	r3, r1
 19850 0b5c 07F11C00 		add	r0, r7, #28
 19851 0b60 CDE90823 		strd	r2, [sp, #32]
 19852 0b64 D7E90012 		ldrd	r1, [r7]
 19853 0b68 CDE90612 		strd	r1, [sp, #24]
 19854 0b6c CDE904AB 		strd	r10, [sp, #16]
 19855 0b70 CDE90289 		strd	r8, [sp, #8]
 19856 0b74 CDE90045 		strd	r4, [sp]
 19857 0b78 D7E90223 		ldrd	r2, [r7, #8]
 19858 0b7c 6F49     		ldr	r1, .L779+20
 19859 0b7e FFF7FEFF 		bl	sprintf
2584:..\src/command_processing.c **** 		strcat(info_string, str);
 19860              		.loc 1 2584 0
 19861 0b82 07F11C03 		add	r3, r7, #28
 19862 0b86 1946     		mov	r1, r3
 19863 0b88 7869     		ldr	r0, [r7, #20]
 19864 0b8a FFF7FEFF 		bl	strcat
2585:..\src/command_processing.c **** 
2586:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19865              		.loc 1 2586 0
 19866 0b8e D7F88430 		ldr	r3, [r7, #132]
 19867 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19868 0b96 1A46     		mov	r2, r3
 19869 0b98 07F11C03 		add	r3, r7, #28
 19870 0b9c 6849     		ldr	r1, .L779+24
 19871 0b9e 1846     		mov	r0, r3
 19872 0ba0 FFF7FEFF 		bl	sprintf
2587:..\src/command_processing.c **** 		strcat(info_string, str);
 19873              		.loc 1 2587 0
 19874 0ba4 07F11C03 		add	r3, r7, #28
 19875 0ba8 1946     		mov	r1, r3
 19876 0baa 7869     		ldr	r0, [r7, #20]
 19877 0bac FFF7FEFF 		bl	strcat
2588:..\src/command_processing.c **** 
2589:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19878              		.loc 1 2589 0
 19879 0bb0 D7F88430 		ldr	r3, [r7, #132]
 19880 0bb4 596B     		ldr	r1, [r3, #52]
 19881 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19882 0bba D7F88C00 		ldr	r0, [r7, #140]
 19883 0bbe 1346     		mov	r3, r2
 19884 0bc0 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 437


 19885 0bc2 1344     		add	r3, r3, r2
 19886 0bc4 1B01     		lsls	r3, r3, #4
 19887 0bc6 0344     		add	r3, r3, r0
 19888 0bc8 03F29513 		addw	r3, r3, #405
 19889 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19890 0bce 41FA03F4 		asr	r4, r1, r3
 19891 0bd2 D7F88430 		ldr	r3, [r7, #132]
 19892 0bd6 996B     		ldr	r1, [r3, #56]
 19893 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19894 0bdc D7F88C00 		ldr	r0, [r7, #140]
 19895 0be0 1346     		mov	r3, r2
 19896 0be2 5B00     		lsls	r3, r3, #1
 19897 0be4 1344     		add	r3, r3, r2
 19898 0be6 1B01     		lsls	r3, r3, #4
 19899 0be8 0344     		add	r3, r3, r0
 19900 0bea 03F29513 		addw	r3, r3, #405
 19901 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19902 0bf0 41FA03F3 		asr	r3, r1, r3
 19903 0bf4 07F11C00 		add	r0, r7, #28
 19904 0bf8 2246     		mov	r2, r4
 19905 0bfa 5249     		ldr	r1, .L779+28
 19906 0bfc FFF7FEFF 		bl	sprintf
2590:..\src/command_processing.c **** 		strcat(info_string, str);
 19907              		.loc 1 2590 0
 19908 0c00 07F11C03 		add	r3, r7, #28
 19909 0c04 1946     		mov	r1, r3
 19910 0c06 7869     		ldr	r0, [r7, #20]
 19911 0c08 FFF7FEFF 		bl	strcat
2591:..\src/command_processing.c **** 
2592:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19912              		.loc 1 2592 0
 19913 0c0c D7F88430 		ldr	r3, [r7, #132]
 19914 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 19915 0c14 1A46     		mov	r2, r3
 19916 0c16 07F11C03 		add	r3, r7, #28
 19917 0c1a 4B49     		ldr	r1, .L779+32
 19918 0c1c 1846     		mov	r0, r3
 19919 0c1e FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c **** 		strcat(info_string, str);
 19920              		.loc 1 2593 0
 19921 0c22 07F11C03 		add	r3, r7, #28
 19922 0c26 1946     		mov	r1, r3
 19923 0c28 7869     		ldr	r0, [r7, #20]
 19924 0c2a FFF7FEFF 		bl	strcat
2594:..\src/command_processing.c **** 
2595:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19925              		.loc 1 2595 0
 19926 0c2e D7F88430 		ldr	r3, [r7, #132]
 19927 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19928 0c36 022B     		cmp	r3, #2
 19929 0c38 18D0     		beq	.L752
2596:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19930              		.loc 1 2596 0 discriminator 1
 19931 0c3a D7F88430 		ldr	r3, [r7, #132]
 19932 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2595:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19933              		.loc 1 2595 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 438


 19934 0c42 032B     		cmp	r3, #3
 19935 0c44 12D0     		beq	.L752
2597:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19936              		.loc 1 2597 0
 19937 0c46 D7F88430 		ldr	r3, [r7, #132]
 19938 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2596:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19939              		.loc 1 2596 0
 19940 0c4e 042B     		cmp	r3, #4
 19941 0c50 0CD0     		beq	.L752
2598:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19942              		.loc 1 2598 0
 19943 0c52 D7F88430 		ldr	r3, [r7, #132]
 19944 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2597:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19945              		.loc 1 2597 0
 19946 0c5a 052B     		cmp	r3, #5
 19947 0c5c 06D0     		beq	.L752
2599:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19948              		.loc 1 2599 0
 19949 0c5e D7F88430 		ldr	r3, [r7, #132]
 19950 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2598:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19951              		.loc 1 2598 0
 19952 0c66 072B     		cmp	r3, #7
 19953 0c68 40F0AA80 		bne	.L753
 19954              	.L752:
2600:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19955              		.loc 1 2600 0
 19956 0c6c D7F88C30 		ldr	r3, [r7, #140]
 19957 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 19958 0c74 1A46     		mov	r2, r3
 19959 0c76 D7F88C30 		ldr	r3, [r7, #140]
 19960 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 19961 0c7e 07F11C00 		add	r0, r7, #28
 19962 0c82 3249     		ldr	r1, .L779+36
 19963 0c84 FFF7FEFF 		bl	sprintf
2601:..\src/command_processing.c **** 			strcat(info_string, str);
 19964              		.loc 1 2601 0
 19965 0c88 07F11C03 		add	r3, r7, #28
 19966 0c8c 1946     		mov	r1, r3
 19967 0c8e 7869     		ldr	r0, [r7, #20]
 19968 0c90 FFF7FEFF 		bl	strcat
2602:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19969              		.loc 1 2602 0
 19970 0c94 7869     		ldr	r0, [r7, #20]
 19971 0c96 FFF7FEFF 		bl	strlen
 19972 0c9a 0346     		mov	r3, r0
 19973 0c9c 1A46     		mov	r2, r3
 19974 0c9e 7B69     		ldr	r3, [r7, #20]
 19975 0ca0 1344     		add	r3, r3, r2
 19976 0ca2 234A     		ldr	r2, .L779+8
 19977 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 19978 0ca6 9278     		ldrb	r2, [r2, #2]
 19979 0ca8 1980     		strh	r1, [r3]	@ unaligned
 19980 0caa 9A70     		strb	r2, [r3, #2]
2603:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 439


2604:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19981              		.loc 1 2604 0
 19982 0cac D7F88C30 		ldr	r3, [r7, #140]
 19983 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 19984 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 19985 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 19986 0cbc 07F11C00 		add	r0, r7, #28
 19987 0cc0 2349     		ldr	r1, .L779+40
 19988 0cc2 FFF7FEFF 		bl	sprintf
2605:..\src/command_processing.c **** 			strcat(info_string, str);
 19989              		.loc 1 2605 0
 19990 0cc6 07F11C03 		add	r3, r7, #28
 19991 0cca 1946     		mov	r1, r3
 19992 0ccc 7869     		ldr	r0, [r7, #20]
 19993 0cce FFF7FEFF 		bl	strcat
2606:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19994              		.loc 1 2606 0
 19995 0cd2 7869     		ldr	r0, [r7, #20]
 19996 0cd4 FFF7FEFF 		bl	strlen
 19997 0cd8 0346     		mov	r3, r0
 19998 0cda 1A46     		mov	r2, r3
 19999 0cdc 7B69     		ldr	r3, [r7, #20]
 20000 0cde 1344     		add	r3, r3, r2
 20001 0ce0 134A     		ldr	r2, .L779+8
 20002 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 20003 0ce4 9278     		ldrb	r2, [r2, #2]
 20004 0ce6 1980     		strh	r1, [r3]	@ unaligned
 20005 0ce8 9A70     		strb	r2, [r3, #2]
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20006              		.loc 1 2608 0
 20007 0cea D7F88C30 		ldr	r3, [r7, #140]
 20008 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20009 0cf2 002B     		cmp	r3, #0
 20010 0cf4 30D0     		beq	.L754
2609:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20011              		.loc 1 2609 0
 20012 0cf6 7869     		ldr	r0, [r7, #20]
 20013 0cf8 FFF7FEFF 		bl	strlen
 20014 0cfc 0346     		mov	r3, r0
 20015 0cfe 1A46     		mov	r2, r3
 20016 0d00 7B69     		ldr	r3, [r7, #20]
 20017 0d02 1344     		add	r3, r3, r2
 20018 0d04 134A     		ldr	r2, .L779+44
 20019 0d06 1D46     		mov	r5, r3
 20020 0d08 1446     		mov	r4, r2
 20021 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20022 0d0c 2860     		str	r0, [r5]	@ unaligned
 20023 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 20024 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 20025 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 20026 0d14 03CC     		ldmia	r4!, {r0, r1}
 20027 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 20028 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 20029 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 20030 0d1c A278     		ldrb	r2, [r4, #2]
 20031 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 440


 20032 0d20 1346     		mov	r3, r2
 20033 0d22 AB76     		strb	r3, [r5, #26]
 20034 0d24 2CE0     		b	.L755
 20035              	.L780:
 20036 0d26 00BF     		.align	2
 20037              	.L779:
 20038 0d28 EC160000 		.word	.LC217
 20039 0d2c 44130000 		.word	.LC182
 20040 0d30 10110000 		.word	.LC150
 20041 0d34 DC1D0000 		.word	.LC287
 20042 0d38 0C170000 		.word	.LC219
 20043 0d3c EC1D0000 		.word	.LC288
 20044 0d40 281E0000 		.word	.LC289
 20045 0d44 441E0000 		.word	.LC290
 20046 0d48 AC170000 		.word	.LC225
 20047 0d4c A0180000 		.word	.LC233
 20048 0d50 C4180000 		.word	.LC234
 20049 0d54 14190000 		.word	.LC237
 20050              	.L754:
2610:..\src/command_processing.c **** 			else
2611:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20051              		.loc 1 2611 0
 20052 0d58 7869     		ldr	r0, [r7, #20]
 20053 0d5a FFF7FEFF 		bl	strlen
 20054 0d5e 0346     		mov	r3, r0
 20055 0d60 1A46     		mov	r2, r3
 20056 0d62 7B69     		ldr	r3, [r7, #20]
 20057 0d64 1344     		add	r3, r3, r2
 20058 0d66 D04A     		ldr	r2, .L781
 20059 0d68 1D46     		mov	r5, r3
 20060 0d6a 1446     		mov	r4, r2
 20061 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20062 0d6e 2860     		str	r0, [r5]	@ unaligned
 20063 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20064 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20065 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20066 0d76 03CC     		ldmia	r4!, {r0, r1}
 20067 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20068 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20069 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20070 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20071              	.L755:
2612:..\src/command_processing.c **** 
2613:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20072              		.loc 1 2613 0
 20073 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20074 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20075 0d88 1A46     		mov	r2, r3
 20076 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20077 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20078 0d92 07F11C00 		add	r0, r7, #28
 20079 0d96 C549     		ldr	r1, .L781+4
 20080 0d98 FFF7FEFF 		bl	sprintf
2614:..\src/command_processing.c **** 			strcat(info_string, str);
 20081              		.loc 1 2614 0
 20082 0d9c 07F11C03 		add	r3, r7, #28
 20083 0da0 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 441


 20084 0da2 7869     		ldr	r0, [r7, #20]
 20085 0da4 FFF7FEFF 		bl	strcat
2615:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20086              		.loc 1 2615 0
 20087 0da8 7869     		ldr	r0, [r7, #20]
 20088 0daa FFF7FEFF 		bl	strlen
 20089 0dae 0346     		mov	r3, r0
 20090 0db0 1A46     		mov	r2, r3
 20091 0db2 7B69     		ldr	r3, [r7, #20]
 20092 0db4 1344     		add	r3, r3, r2
 20093 0db6 BE4A     		ldr	r2, .L781+8
 20094 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20095 0dba 9278     		ldrb	r2, [r2, #2]
 20096 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20097 0dbe 9A70     		strb	r2, [r3, #2]
 20098              	.L753:
 20099              	.LBE24:
2445:..\src/command_processing.c ****             
 20100              		.loc 1 2445 0 discriminator 2
 20101 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20102 0dc4 0133     		adds	r3, r3, #1
 20103 0dc6 87F89330 		strb	r3, [r7, #147]
 20104              	.L712:
2445:..\src/command_processing.c ****             
 20105              		.loc 1 2445 0 is_stmt 0 discriminator 1
 20106 0dca D7F88C30 		ldr	r3, [r7, #140]
 20107 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20108 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20109 0dd6 9A42     		cmp	r2, r3
 20110 0dd8 7FF69BA9 		bls	.L756
 20111              	.LBE23:
2616:..\src/command_processing.c **** 		}
2617:..\src/command_processing.c **** 	}
2618:..\src/command_processing.c **** 	 
2619:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20112              		.loc 1 2619 0 is_stmt 1
 20113 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20114 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20115 0de4 002B     		cmp	r3, #0
 20116 0de6 63D0     		beq	.L757
2620:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20117              		.loc 1 2620 0
 20118 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20119 0dec D3F8A422 		ldr	r2, [r3, #676]
 20120 0df0 07F11C03 		add	r3, r7, #28
 20121 0df4 AF49     		ldr	r1, .L781+12
 20122 0df6 1846     		mov	r0, r3
 20123 0df8 FFF7FEFF 		bl	sprintf
2621:..\src/command_processing.c ****         strcat(info_string, str);
 20124              		.loc 1 2621 0
 20125 0dfc 07F11C03 		add	r3, r7, #28
 20126 0e00 1946     		mov	r1, r3
 20127 0e02 7869     		ldr	r0, [r7, #20]
 20128 0e04 FFF7FEFF 		bl	strcat
2622:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20129              		.loc 1 2622 0
 20130 0e08 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 442


 20131 0e0a FFF7FEFF 		bl	strlen
 20132 0e0e 0346     		mov	r3, r0
 20133 0e10 1A46     		mov	r2, r3
 20134 0e12 7B69     		ldr	r3, [r7, #20]
 20135 0e14 1344     		add	r3, r3, r2
 20136 0e16 A64A     		ldr	r2, .L781+8
 20137 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20138 0e1a 9278     		ldrb	r2, [r2, #2]
 20139 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20140 0e1e 9A70     		strb	r2, [r3, #2]
2623:..\src/command_processing.c ****         
2624:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20141              		.loc 1 2624 0
 20142 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20143 0e24 D3F8A822 		ldr	r2, [r3, #680]
 20144 0e28 07F11C03 		add	r3, r7, #28
 20145 0e2c A249     		ldr	r1, .L781+16
 20146 0e2e 1846     		mov	r0, r3
 20147 0e30 FFF7FEFF 		bl	sprintf
2625:..\src/command_processing.c ****         strcat(info_string, str);
 20148              		.loc 1 2625 0
 20149 0e34 07F11C03 		add	r3, r7, #28
 20150 0e38 1946     		mov	r1, r3
 20151 0e3a 7869     		ldr	r0, [r7, #20]
 20152 0e3c FFF7FEFF 		bl	strcat
2626:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20153              		.loc 1 2626 0
 20154 0e40 7869     		ldr	r0, [r7, #20]
 20155 0e42 FFF7FEFF 		bl	strlen
 20156 0e46 0346     		mov	r3, r0
 20157 0e48 1A46     		mov	r2, r3
 20158 0e4a 7B69     		ldr	r3, [r7, #20]
 20159 0e4c 1344     		add	r3, r3, r2
 20160 0e4e 984A     		ldr	r2, .L781+8
 20161 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20162 0e52 9278     		ldrb	r2, [r2, #2]
 20163 0e54 1980     		strh	r1, [r3]	@ unaligned
 20164 0e56 9A70     		strb	r2, [r3, #2]
2627:..\src/command_processing.c ****         
2628:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20165              		.loc 1 2628 0
 20166 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20167 0e5c D3F8A022 		ldr	r2, [r3, #672]
 20168 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20169 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20170 0e68 1846     		mov	r0, r3
 20171 0e6a D7F88C10 		ldr	r1, [r7, #140]
 20172 0e6e 0346     		mov	r3, r0
 20173 0e70 5B00     		lsls	r3, r3, #1
 20174 0e72 0344     		add	r3, r3, r0
 20175 0e74 1B01     		lsls	r3, r3, #4
 20176 0e76 0B44     		add	r3, r3, r1
 20177 0e78 03F29513 		addw	r3, r3, #405
 20178 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20179 0e7e 1A41     		asrs	r2, r2, r3
 20180 0e80 07F11C03 		add	r3, r7, #28
 20181 0e84 8D49     		ldr	r1, .L781+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 443


 20182 0e86 1846     		mov	r0, r3
 20183 0e88 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c ****         strcat(info_string, str);
 20184              		.loc 1 2629 0
 20185 0e8c 07F11C03 		add	r3, r7, #28
 20186 0e90 1946     		mov	r1, r3
 20187 0e92 7869     		ldr	r0, [r7, #20]
 20188 0e94 FFF7FEFF 		bl	strcat
2630:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20189              		.loc 1 2630 0
 20190 0e98 7869     		ldr	r0, [r7, #20]
 20191 0e9a FFF7FEFF 		bl	strlen
 20192 0e9e 0346     		mov	r3, r0
 20193 0ea0 1A46     		mov	r2, r3
 20194 0ea2 7B69     		ldr	r3, [r7, #20]
 20195 0ea4 1344     		add	r3, r3, r2
 20196 0ea6 824A     		ldr	r2, .L781+8
 20197 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20198 0eaa 9278     		ldrb	r2, [r2, #2]
 20199 0eac 1980     		strh	r1, [r3]	@ unaligned
 20200 0eae 9A70     		strb	r2, [r3, #2]
 20201              	.L757:
2631:..\src/command_processing.c ****     }
2632:..\src/command_processing.c **** 	
2633:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20202              		.loc 1 2633 0
 20203 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20204 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20205 0eb8 002B     		cmp	r3, #0
 20206 0eba 00F0CB81 		beq	.L772
2634:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20207              		.loc 1 2634 0
 20208 0ebe 804B     		ldr	r3, .L781+24
 20209 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20210 0ec2 1A46     		mov	r2, r3
 20211 0ec4 07F11C03 		add	r3, r7, #28
 20212 0ec8 7E49     		ldr	r1, .L781+28
 20213 0eca 1846     		mov	r0, r3
 20214 0ecc FFF7FEFF 		bl	sprintf
2635:..\src/command_processing.c **** 		strcat(info_string, str);
 20215              		.loc 1 2635 0
 20216 0ed0 07F11C03 		add	r3, r7, #28
 20217 0ed4 1946     		mov	r1, r3
 20218 0ed6 7869     		ldr	r0, [r7, #20]
 20219 0ed8 FFF7FEFF 		bl	strcat
2636:..\src/command_processing.c **** 		
2637:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20220              		.loc 1 2637 0
 20221 0edc 7869     		ldr	r0, [r7, #20]
 20222 0ede FFF7FEFF 		bl	strlen
 20223 0ee2 0346     		mov	r3, r0
 20224 0ee4 1A46     		mov	r2, r3
 20225 0ee6 7B69     		ldr	r3, [r7, #20]
 20226 0ee8 1344     		add	r3, r3, r2
 20227 0eea 714A     		ldr	r2, .L781+8
 20228 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20229 0eee 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 444


 20230 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20231 0ef2 9A70     		strb	r2, [r3, #2]
2638:..\src/command_processing.c **** 		
2639:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20232              		.loc 1 2639 0
 20233 0ef4 7869     		ldr	r0, [r7, #20]
 20234 0ef6 FFF7FEFF 		bl	strlen
 20235 0efa 0346     		mov	r3, r0
 20236 0efc 1A46     		mov	r2, r3
 20237 0efe 7B69     		ldr	r3, [r7, #20]
 20238 0f00 1344     		add	r3, r3, r2
 20239 0f02 714A     		ldr	r2, .L781+32
 20240 0f04 1D46     		mov	r5, r3
 20241 0f06 1446     		mov	r4, r2
 20242 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20243 0f0a 2860     		str	r0, [r5]	@ unaligned
 20244 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20245 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20246 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20247 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20248 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20249 0f16 2379     		ldrb	r3, [r4, #4]
 20250 0f18 2B75     		strb	r3, [r5, #20]
2640:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20251              		.loc 1 2640 0
 20252 0f1a 0023     		movs	r3, #0
 20253 0f1c C7F89430 		str	r3, [r7, #148]
 20254 0f20 84E1     		b	.L759
 20255              	.L770:
2641:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20256              		.loc 1 2641 0
 20257 0f22 6A4A     		ldr	r2, .L781+36
 20258 0f24 D7F89430 		ldr	r3, [r7, #148]
 20259 0f28 1344     		add	r3, r3, r2
 20260 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20261 0f2c 07F11C00 		add	r0, r7, #28
 20262 0f30 D7F89420 		ldr	r2, [r7, #148]
 20263 0f34 6649     		ldr	r1, .L781+40
 20264 0f36 FFF7FEFF 		bl	sprintf
2642:..\src/command_processing.c **** 			strcat(info_string, str);
 20265              		.loc 1 2642 0
 20266 0f3a 07F11C03 		add	r3, r7, #28
 20267 0f3e 1946     		mov	r1, r3
 20268 0f40 7869     		ldr	r0, [r7, #20]
 20269 0f42 FFF7FEFF 		bl	strcat
2643:..\src/command_processing.c **** 			
2644:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20270              		.loc 1 2644 0
 20271 0f46 07F11C03 		add	r3, r7, #28
 20272 0f4a 624A     		ldr	r2, .L781+44
 20273 0f4c 1C46     		mov	r4, r3
 20274 0f4e 1546     		mov	r5, r2
 20275 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20276 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20277 0f54 2B68     		ldr	r3, [r5]
 20278 0f56 2380     		strh	r3, [r4]	@ movhi
2645:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 445


 20279              		.loc 1 2645 0
 20280 0f58 5C4A     		ldr	r2, .L781+36
 20281 0f5a D7F89430 		ldr	r3, [r7, #148]
 20282 0f5e 1344     		add	r3, r3, r2
 20283 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20284 0f62 1946     		mov	r1, r3
 20285 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20286 0f68 0B46     		mov	r3, r1
 20287 0f6a 9B00     		lsls	r3, r3, #2
 20288 0f6c 0B44     		add	r3, r3, r1
 20289 0f6e 1344     		add	r3, r3, r2
 20290 0f70 03F20223 		addw	r3, r3, #514
 20291 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20292 0f76 002B     		cmp	r3, #0
 20293 0f78 0FD0     		beq	.L760
2646:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20294              		.loc 1 2646 0
 20295 0f7a 07F11C03 		add	r3, r7, #28
 20296 0f7e 1846     		mov	r0, r3
 20297 0f80 FFF7FEFF 		bl	strlen
 20298 0f84 0346     		mov	r3, r0
 20299 0f86 1A46     		mov	r2, r3
 20300 0f88 07F11C03 		add	r3, r7, #28
 20301 0f8c 1344     		add	r3, r3, r2
 20302 0f8e 524A     		ldr	r2, .L781+48
 20303 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20304 0f92 1860     		str	r0, [r3]	@ unaligned
 20305 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20306 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20307 0f98 0EE0     		b	.L761
 20308              	.L760:
2647:..\src/command_processing.c **** 			else
2648:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20309              		.loc 1 2648 0
 20310 0f9a 07F11C03 		add	r3, r7, #28
 20311 0f9e 1846     		mov	r0, r3
 20312 0fa0 FFF7FEFF 		bl	strlen
 20313 0fa4 0346     		mov	r3, r0
 20314 0fa6 1A46     		mov	r2, r3
 20315 0fa8 07F11C03 		add	r3, r7, #28
 20316 0fac 1344     		add	r3, r3, r2
 20317 0fae 4B4A     		ldr	r2, .L781+52
 20318 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20319 0fb2 1860     		str	r0, [r3]	@ unaligned
 20320 0fb4 1279     		ldrb	r2, [r2, #4]
 20321 0fb6 1A71     		strb	r2, [r3, #4]
 20322              	.L761:
2649:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20323              		.loc 1 2649 0
 20324 0fb8 07F11C03 		add	r3, r7, #28
 20325 0fbc 1846     		mov	r0, r3
 20326 0fbe FFF7FEFF 		bl	strlen
 20327 0fc2 0346     		mov	r3, r0
 20328 0fc4 1A46     		mov	r2, r3
 20329 0fc6 07F11C03 		add	r3, r7, #28
 20330 0fca 1344     		add	r3, r3, r2
 20331 0fcc 444A     		ldr	r2, .L781+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 446


 20332 0fce 1C46     		mov	r4, r3
 20333 0fd0 1346     		mov	r3, r2
 20334 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20335 0fd4 2060     		str	r0, [r4]	@ unaligned
 20336 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20337 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20338 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20339 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2650:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20340              		.loc 1 2650 0
 20341 0fde 3B4A     		ldr	r2, .L781+36
 20342 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20343 0fe4 1344     		add	r3, r3, r2
 20344 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20345 0fe8 1946     		mov	r1, r3
 20346 0fea D7F88C20 		ldr	r2, [r7, #140]
 20347 0fee 0B46     		mov	r3, r1
 20348 0ff0 9B00     		lsls	r3, r3, #2
 20349 0ff2 0B44     		add	r3, r3, r1
 20350 0ff4 1344     		add	r3, r3, r2
 20351 0ff6 03F20323 		addw	r3, r3, #515
 20352 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20353 0ffc 002B     		cmp	r3, #0
 20354 0ffe 0FD0     		beq	.L762
2651:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20355              		.loc 1 2651 0
 20356 1000 07F11C03 		add	r3, r7, #28
 20357 1004 1846     		mov	r0, r3
 20358 1006 FFF7FEFF 		bl	strlen
 20359 100a 0346     		mov	r3, r0
 20360 100c 1A46     		mov	r2, r3
 20361 100e 07F11C03 		add	r3, r7, #28
 20362 1012 1344     		add	r3, r3, r2
 20363 1014 304A     		ldr	r2, .L781+48
 20364 1016 1068     		ldr	r0, [r2]	@ unaligned
 20365 1018 1860     		str	r0, [r3]	@ unaligned
 20366 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20367 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20368 101e 0EE0     		b	.L763
 20369              	.L762:
2652:..\src/command_processing.c **** 			else
2653:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20370              		.loc 1 2653 0
 20371 1020 07F11C03 		add	r3, r7, #28
 20372 1024 1846     		mov	r0, r3
 20373 1026 FFF7FEFF 		bl	strlen
 20374 102a 0346     		mov	r3, r0
 20375 102c 1A46     		mov	r2, r3
 20376 102e 07F11C03 		add	r3, r7, #28
 20377 1032 1344     		add	r3, r3, r2
 20378 1034 294A     		ldr	r2, .L781+52
 20379 1036 1068     		ldr	r0, [r2]	@ unaligned
 20380 1038 1860     		str	r0, [r3]	@ unaligned
 20381 103a 1279     		ldrb	r2, [r2, #4]
 20382 103c 1A71     		strb	r2, [r3, #4]
 20383              	.L763:
2654:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 447


 20384              		.loc 1 2654 0
 20385 103e 07F11C03 		add	r3, r7, #28
 20386 1042 1846     		mov	r0, r3
 20387 1044 FFF7FEFF 		bl	strlen
 20388 1048 0346     		mov	r3, r0
 20389 104a 1A46     		mov	r2, r3
 20390 104c 07F11C03 		add	r3, r7, #28
 20391 1050 1344     		add	r3, r3, r2
 20392 1052 244A     		ldr	r2, .L781+60
 20393 1054 1D46     		mov	r5, r3
 20394 1056 1446     		mov	r4, r2
 20395 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20396 105a 2860     		str	r0, [r5]	@ unaligned
 20397 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20398 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20399 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20400 1062 2378     		ldrb	r3, [r4]
 20401 1064 2B74     		strb	r3, [r5, #16]
2655:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20402              		.loc 1 2655 0
 20403 1066 194A     		ldr	r2, .L781+36
 20404 1068 D7F89430 		ldr	r3, [r7, #148]
 20405 106c 1344     		add	r3, r3, r2
 20406 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20407 1070 1946     		mov	r1, r3
 20408 1072 D7F88C20 		ldr	r2, [r7, #140]
 20409 1076 0B46     		mov	r3, r1
 20410 1078 9B00     		lsls	r3, r3, #2
 20411 107a 0B44     		add	r3, r3, r1
 20412 107c 1344     		add	r3, r3, r2
 20413 107e 03F50173 		add	r3, r3, #516
 20414 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20415 1084 002B     		cmp	r3, #0
 20416 1086 2FD0     		beq	.L764
2656:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20417              		.loc 1 2656 0
 20418 1088 07F11C03 		add	r3, r7, #28
 20419 108c 1846     		mov	r0, r3
 20420 108e FFF7FEFF 		bl	strlen
 20421 1092 0346     		mov	r3, r0
 20422 1094 1A46     		mov	r2, r3
 20423 1096 07F11C03 		add	r3, r7, #28
 20424 109a 1344     		add	r3, r3, r2
 20425 109c 0E4A     		ldr	r2, .L781+48
 20426 109e 1068     		ldr	r0, [r2]	@ unaligned
 20427 10a0 1860     		str	r0, [r3]	@ unaligned
 20428 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20429 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20430 10a6 2EE0     		b	.L765
 20431              	.L782:
 20432              		.align	2
 20433              	.L781:
 20434 10a8 30190000 		.word	.LC238
 20435 10ac 4C190000 		.word	.LC239
 20436 10b0 10110000 		.word	.LC150
 20437 10b4 101A0000 		.word	.LC247
 20438 10b8 2C1A0000 		.word	.LC248
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 448


 20439 10bc 541A0000 		.word	.LC249
 20440 10c0 00000000 		.word	N_IMU_Connected
 20441 10c4 681A0000 		.word	.LC250
 20442 10c8 7C1A0000 		.word	.LC251
 20443 10cc 00000000 		.word	IMU_connected
 20444 10d0 941A0000 		.word	.LC252
 20445 10d4 A81A0000 		.word	.LC253
 20446 10d8 D0120000 		.word	.LC173
 20447 10dc D8120000 		.word	.LC174
 20448 10e0 BC1A0000 		.word	.LC254
 20449 10e4 CC1A0000 		.word	.LC255
 20450              	.L764:
2657:..\src/command_processing.c **** 			else
2658:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20451              		.loc 1 2658 0
 20452 10e8 07F11C03 		add	r3, r7, #28
 20453 10ec 1846     		mov	r0, r3
 20454 10ee FFF7FEFF 		bl	strlen
 20455 10f2 0346     		mov	r3, r0
 20456 10f4 1A46     		mov	r2, r3
 20457 10f6 07F11C03 		add	r3, r7, #28
 20458 10fa 1344     		add	r3, r3, r2
 20459 10fc 584A     		ldr	r2, .L783
 20460 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20461 1100 1860     		str	r0, [r3]	@ unaligned
 20462 1102 1279     		ldrb	r2, [r2, #4]
 20463 1104 1A71     		strb	r2, [r3, #4]
 20464              	.L765:
2659:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20465              		.loc 1 2659 0
 20466 1106 07F11C03 		add	r3, r7, #28
 20467 110a 1846     		mov	r0, r3
 20468 110c FFF7FEFF 		bl	strlen
 20469 1110 0346     		mov	r3, r0
 20470 1112 1A46     		mov	r2, r3
 20471 1114 07F11C03 		add	r3, r7, #28
 20472 1118 1344     		add	r3, r3, r2
 20473 111a 524A     		ldr	r2, .L783+4
 20474 111c 1C46     		mov	r4, r3
 20475 111e 1346     		mov	r3, r2
 20476 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20477 1122 2060     		str	r0, [r4]	@ unaligned
 20478 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20479 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20480 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20481 112a A381     		strh	r3, [r4, #12]	@ unaligned
2660:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20482              		.loc 1 2660 0
 20483 112c 4E4A     		ldr	r2, .L783+8
 20484 112e D7F89430 		ldr	r3, [r7, #148]
 20485 1132 1344     		add	r3, r3, r2
 20486 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20487 1136 1946     		mov	r1, r3
 20488 1138 D7F88C20 		ldr	r2, [r7, #140]
 20489 113c 0B46     		mov	r3, r1
 20490 113e 9B00     		lsls	r3, r3, #2
 20491 1140 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 449


 20492 1142 1344     		add	r3, r3, r2
 20493 1144 03F20523 		addw	r3, r3, #517
 20494 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20495 114a 002B     		cmp	r3, #0
 20496 114c 0FD0     		beq	.L766
2661:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20497              		.loc 1 2661 0
 20498 114e 07F11C03 		add	r3, r7, #28
 20499 1152 1846     		mov	r0, r3
 20500 1154 FFF7FEFF 		bl	strlen
 20501 1158 0346     		mov	r3, r0
 20502 115a 1A46     		mov	r2, r3
 20503 115c 07F11C03 		add	r3, r7, #28
 20504 1160 1344     		add	r3, r3, r2
 20505 1162 424A     		ldr	r2, .L783+12
 20506 1164 1068     		ldr	r0, [r2]	@ unaligned
 20507 1166 1860     		str	r0, [r3]	@ unaligned
 20508 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20509 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20510 116c 0EE0     		b	.L767
 20511              	.L766:
2662:..\src/command_processing.c **** 			else
2663:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20512              		.loc 1 2663 0
 20513 116e 07F11C03 		add	r3, r7, #28
 20514 1172 1846     		mov	r0, r3
 20515 1174 FFF7FEFF 		bl	strlen
 20516 1178 0346     		mov	r3, r0
 20517 117a 1A46     		mov	r2, r3
 20518 117c 07F11C03 		add	r3, r7, #28
 20519 1180 1344     		add	r3, r3, r2
 20520 1182 374A     		ldr	r2, .L783
 20521 1184 1068     		ldr	r0, [r2]	@ unaligned
 20522 1186 1860     		str	r0, [r3]	@ unaligned
 20523 1188 1279     		ldrb	r2, [r2, #4]
 20524 118a 1A71     		strb	r2, [r3, #4]
 20525              	.L767:
2664:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20526              		.loc 1 2664 0
 20527 118c 07F11C03 		add	r3, r7, #28
 20528 1190 1846     		mov	r0, r3
 20529 1192 FFF7FEFF 		bl	strlen
 20530 1196 0346     		mov	r3, r0
 20531 1198 1A46     		mov	r2, r3
 20532 119a 07F11C03 		add	r3, r7, #28
 20533 119e 1344     		add	r3, r3, r2
 20534 11a0 334A     		ldr	r2, .L783+16
 20535 11a2 1C46     		mov	r4, r3
 20536 11a4 1346     		mov	r3, r2
 20537 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20538 11a8 2060     		str	r0, [r4]	@ unaligned
 20539 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 20540 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20541 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20542 11b0 9B78     		ldrb	r3, [r3, #2]
 20543 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20544 11b4 A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 450


2665:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20545              		.loc 1 2665 0
 20546 11b6 2C4A     		ldr	r2, .L783+8
 20547 11b8 D7F89430 		ldr	r3, [r7, #148]
 20548 11bc 1344     		add	r3, r3, r2
 20549 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20550 11c0 1946     		mov	r1, r3
 20551 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20552 11c6 0B46     		mov	r3, r1
 20553 11c8 9B00     		lsls	r3, r3, #2
 20554 11ca 0B44     		add	r3, r3, r1
 20555 11cc 1344     		add	r3, r3, r2
 20556 11ce 03F20623 		addw	r3, r3, #518
 20557 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20558 11d4 002B     		cmp	r3, #0
 20559 11d6 0FD0     		beq	.L768
2666:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20560              		.loc 1 2666 0
 20561 11d8 07F11C03 		add	r3, r7, #28
 20562 11dc 1846     		mov	r0, r3
 20563 11de FFF7FEFF 		bl	strlen
 20564 11e2 0346     		mov	r3, r0
 20565 11e4 1A46     		mov	r2, r3
 20566 11e6 07F11C03 		add	r3, r7, #28
 20567 11ea 1344     		add	r3, r3, r2
 20568 11ec 1F4A     		ldr	r2, .L783+12
 20569 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20570 11f0 1860     		str	r0, [r3]	@ unaligned
 20571 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20572 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20573 11f6 0EE0     		b	.L769
 20574              	.L768:
2667:..\src/command_processing.c **** 			else
2668:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20575              		.loc 1 2668 0
 20576 11f8 07F11C03 		add	r3, r7, #28
 20577 11fc 1846     		mov	r0, r3
 20578 11fe FFF7FEFF 		bl	strlen
 20579 1202 0346     		mov	r3, r0
 20580 1204 1A46     		mov	r2, r3
 20581 1206 07F11C03 		add	r3, r7, #28
 20582 120a 1344     		add	r3, r3, r2
 20583 120c 144A     		ldr	r2, .L783
 20584 120e 1068     		ldr	r0, [r2]	@ unaligned
 20585 1210 1860     		str	r0, [r3]	@ unaligned
 20586 1212 1279     		ldrb	r2, [r2, #4]
 20587 1214 1A71     		strb	r2, [r3, #4]
 20588              	.L769:
2669:..\src/command_processing.c **** 				 
2670:..\src/command_processing.c **** 			strcat(info_string, str);
 20589              		.loc 1 2670 0 discriminator 2
 20590 1216 07F11C03 		add	r3, r7, #28
 20591 121a 1946     		mov	r1, r3
 20592 121c 7869     		ldr	r0, [r7, #20]
 20593 121e FFF7FEFF 		bl	strcat
2640:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20594              		.loc 1 2640 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 451


 20595 1222 D7F89430 		ldr	r3, [r7, #148]
 20596 1226 0133     		adds	r3, r3, #1
 20597 1228 C7F89430 		str	r3, [r7, #148]
 20598              	.L759:
2640:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20599              		.loc 1 2640 0 is_stmt 0 discriminator 1
 20600 122c 114B     		ldr	r3, .L783+20
 20601 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20602 1230 1A46     		mov	r2, r3
 20603 1232 D7F89430 		ldr	r3, [r7, #148]
 20604 1236 9A42     		cmp	r2, r3
 20605 1238 3FF773AE 		bgt	.L770
2671:..\src/command_processing.c **** 		}       
2672:..\src/command_processing.c **** 		
2673:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20606              		.loc 1 2673 0 is_stmt 1
 20607 123c 7869     		ldr	r0, [r7, #20]
 20608 123e FFF7FEFF 		bl	strlen
 20609 1242 0346     		mov	r3, r0
 20610 1244 1A46     		mov	r2, r3
 20611 1246 7B69     		ldr	r3, [r7, #20]
 20612 1248 1344     		add	r3, r3, r2
 20613 124a 0B4A     		ldr	r2, .L783+24
 20614 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20615 124e 9278     		ldrb	r2, [r2, #2]
 20616 1250 1980     		strh	r1, [r3]	@ unaligned
 20617 1252 9A70     		strb	r2, [r3, #2]
 20618              	.L772:
2674:..\src/command_processing.c **** 	}
2675:..\src/command_processing.c **** }
 20619              		.loc 1 2675 0
 20620 1254 00BF     		nop
 20621 1256 9C37     		adds	r7, r7, #156
 20622              		.cfi_def_cfa_offset 36
 20623 1258 BD46     		mov	sp, r7
 20624              		.cfi_def_cfa_register 13
 20625              		@ sp needed
 20626 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20627              	.L784:
 20628 125e 00BF     		.align	2
 20629              	.L783:
 20630 1260 D8120000 		.word	.LC174
 20631 1264 E01A0000 		.word	.LC256
 20632 1268 00000000 		.word	IMU_connected
 20633 126c D0120000 		.word	.LC173
 20634 1270 F01A0000 		.word	.LC257
 20635 1274 00000000 		.word	N_IMU_Connected
 20636 1278 10110000 		.word	.LC150
 20637              		.cfi_endproc
 20638              	.LFE74:
 20639              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20640              		.section	.rodata
 20641 1e6e 0000     		.align	2
 20642              	.LC291:
 20643 1e70 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20643      2C4D696E 
 20643      2C536563 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 452


 20643      2C00
 20644 1e7e 0000     		.align	2
 20645              	.LC292:
 20646 1e80 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20646      25645F50 
 20646      6F732C00 
 20647              		.align	2
 20648              	.LC293:
 20649 1e8c 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20649      25645F43 
 20649      7572722C 
 20649      00
 20650 1e99 000000   		.align	2
 20651              	.LC294:
 20652 1e9c 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20652      315F6163 
 20652      742C454D 
 20652      475F325F 
 20652      6163742C 
 20653 1ecf 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20653      5F74696D 
 20653      652C546F 
 20653      74616C5F 
 20653      72657374 
 20654              		.section	.text.prepare_SD_legend,"ax",%progbits
 20655              		.align	2
 20656              		.global	prepare_SD_legend
 20657              		.thumb
 20658              		.thumb_func
 20659              		.type	prepare_SD_legend, %function
 20660              	prepare_SD_legend:
 20661              	.LFB75:
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c **** 
2678:..\src/command_processing.c **** //==============================================================================
2679:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2680:..\src/command_processing.c **** //==============================================================================
2681:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2682:..\src/command_processing.c **** {
 20662              		.loc 1 2682 0
 20663              		.cfi_startproc
 20664              		@ args = 0, pretend = 0, frame = 112
 20665              		@ frame_needed = 1, uses_anonymous_args = 0
 20666 0000 90B5     		push	{r4, r7, lr}
 20667              		.cfi_def_cfa_offset 12
 20668              		.cfi_offset 4, -12
 20669              		.cfi_offset 7, -8
 20670              		.cfi_offset 14, -4
 20671 0002 9DB0     		sub	sp, sp, #116
 20672              		.cfi_def_cfa_offset 128
 20673 0004 00AF     		add	r7, sp, #0
 20674              		.cfi_def_cfa_register 7
 20675 0006 7860     		str	r0, [r7, #4]
2683:..\src/command_processing.c ****     char str[100];  
2684:..\src/command_processing.c ****     int i;
2685:..\src/command_processing.c ****         
2686:..\src/command_processing.c ****     // Legend
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 453


2687:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20676              		.loc 1 2687 0
 20677 0008 7B68     		ldr	r3, [r7, #4]
 20678 000a 2A4A     		ldr	r2, .L790
 20679 000c 1C46     		mov	r4, r3
 20680 000e 1346     		mov	r3, r2
 20681 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20682 0012 2060     		str	r0, [r4]	@ unaligned
 20683 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20684 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20685 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20686 001a A381     		strh	r3, [r4, #12]	@ unaligned
2688:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20687              		.loc 1 2688 0
 20688 001c 0123     		movs	r3, #1
 20689 001e FB66     		str	r3, [r7, #108]
 20690 0020 0FE0     		b	.L786
 20691              	.L787:
2689:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20692              		.loc 1 2689 0 discriminator 3
 20693 0022 07F10803 		add	r3, r7, #8
 20694 0026 FA6E     		ldr	r2, [r7, #108]
 20695 0028 2349     		ldr	r1, .L790+4
 20696 002a 1846     		mov	r0, r3
 20697 002c FFF7FEFF 		bl	sprintf
2690:..\src/command_processing.c ****         strcat(info_string, str);
 20698              		.loc 1 2690 0 discriminator 3
 20699 0030 07F10803 		add	r3, r7, #8
 20700 0034 1946     		mov	r1, r3
 20701 0036 7868     		ldr	r0, [r7, #4]
 20702 0038 FFF7FEFF 		bl	strcat
2688:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20703              		.loc 1 2688 0 discriminator 3
 20704 003c FB6E     		ldr	r3, [r7, #108]
 20705 003e 0133     		adds	r3, r3, #1
 20706 0040 FB66     		str	r3, [r7, #108]
 20707              	.L786:
2688:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20708              		.loc 1 2688 0 is_stmt 0 discriminator 1
 20709 0042 FB6E     		ldr	r3, [r7, #108]
 20710 0044 0A2B     		cmp	r3, #10
 20711 0046 ECDD     		ble	.L787
2691:..\src/command_processing.c ****     }
2692:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20712              		.loc 1 2692 0 is_stmt 1
 20713 0048 0123     		movs	r3, #1
 20714 004a FB66     		str	r3, [r7, #108]
 20715 004c 0FE0     		b	.L788
 20716              	.L789:
2693:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20717              		.loc 1 2693 0 discriminator 3
 20718 004e 07F10803 		add	r3, r7, #8
 20719 0052 FA6E     		ldr	r2, [r7, #108]
 20720 0054 1949     		ldr	r1, .L790+8
 20721 0056 1846     		mov	r0, r3
 20722 0058 FFF7FEFF 		bl	sprintf
2694:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 454


 20723              		.loc 1 2694 0 discriminator 3
 20724 005c 07F10803 		add	r3, r7, #8
 20725 0060 1946     		mov	r1, r3
 20726 0062 7868     		ldr	r0, [r7, #4]
 20727 0064 FFF7FEFF 		bl	strcat
2692:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20728              		.loc 1 2692 0 discriminator 3
 20729 0068 FB6E     		ldr	r3, [r7, #108]
 20730 006a 0133     		adds	r3, r3, #1
 20731 006c FB66     		str	r3, [r7, #108]
 20732              	.L788:
2692:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20733              		.loc 1 2692 0 is_stmt 0 discriminator 1
 20734 006e FB6E     		ldr	r3, [r7, #108]
 20735 0070 042B     		cmp	r3, #4
 20736 0072 ECDD     		ble	.L789
2695:..\src/command_processing.c ****     }
2696:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20737              		.loc 1 2696 0 is_stmt 1
 20738 0074 07F10803 		add	r3, r7, #8
 20739 0078 114A     		ldr	r2, .L790+12
 20740 007a 1846     		mov	r0, r3
 20741 007c 1146     		mov	r1, r2
 20742 007e 4D23     		movs	r3, #77
 20743 0080 1A46     		mov	r2, r3
 20744 0082 FFF7FEFF 		bl	memcpy
2697:..\src/command_processing.c ****     strcat(info_string, str);
 20745              		.loc 1 2697 0
 20746 0086 07F10803 		add	r3, r7, #8
 20747 008a 1946     		mov	r1, r3
 20748 008c 7868     		ldr	r0, [r7, #4]
 20749 008e FFF7FEFF 		bl	strcat
2698:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20750              		.loc 1 2698 0
 20751 0092 7868     		ldr	r0, [r7, #4]
 20752 0094 FFF7FEFF 		bl	strlen
 20753 0098 0346     		mov	r3, r0
 20754 009a 1A46     		mov	r2, r3
 20755 009c 7B68     		ldr	r3, [r7, #4]
 20756 009e 1344     		add	r3, r3, r2
 20757 00a0 084A     		ldr	r2, .L790+16
 20758 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20759 00a4 9278     		ldrb	r2, [r2, #2]
 20760 00a6 1980     		strh	r1, [r3]	@ unaligned
 20761 00a8 9A70     		strb	r2, [r3, #2]
2699:..\src/command_processing.c **** }
 20762              		.loc 1 2699 0
 20763 00aa 00BF     		nop
 20764 00ac 7437     		adds	r7, r7, #116
 20765              		.cfi_def_cfa_offset 12
 20766 00ae BD46     		mov	sp, r7
 20767              		.cfi_def_cfa_register 13
 20768              		@ sp needed
 20769 00b0 90BD     		pop	{r4, r7, pc}
 20770              	.L791:
 20771 00b2 00BF     		.align	2
 20772              	.L790:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 455


 20773 00b4 701E0000 		.word	.LC291
 20774 00b8 801E0000 		.word	.LC292
 20775 00bc 8C1E0000 		.word	.LC293
 20776 00c0 9C1E0000 		.word	.LC294
 20777 00c4 10110000 		.word	.LC150
 20778              		.cfi_endproc
 20779              	.LFE75:
 20780              		.size	prepare_SD_legend, .-prepare_SD_legend
 20781              		.section	.rodata
 20782 1ee9 000000   		.align	2
 20783              	.LC295:
 20784 1eec 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20784      2C253032 
 20784      642C2530 
 20784      32642C00 
 20785              		.align	2
 20786              	.LC296:
 20787 1efc 256C752C 		.ascii	"%lu,\000"
 20787      00
 20788 1f01 000000   		.align	2
 20789              	.LC297:
 20790 1f04 256C752C 		.ascii	"%lu,%lu,\000"
 20790      256C752C 
 20790      00
 20791 1f0d 000000   		.align	2
 20792              	.LC298:
 20793 1f10 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20793      256C752C 
 20793      256C752C 
 20793      256C7500 
 20794              		.section	.text.prepare_SD_info,"ax",%progbits
 20795              		.align	2
 20796              		.global	prepare_SD_info
 20797              		.thumb
 20798              		.thumb_func
 20799              		.type	prepare_SD_info, %function
 20800              	prepare_SD_info:
 20801              	.LFB76:
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c **** //==============================================================================
2702:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2703:..\src/command_processing.c **** //==============================================================================
2704:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2705:..\src/command_processing.c **** {
 20802              		.loc 1 2705 0
 20803              		.cfi_startproc
 20804              		@ args = 0, pretend = 0, frame = 112
 20805              		@ frame_needed = 1, uses_anonymous_args = 0
 20806 0000 90B5     		push	{r4, r7, lr}
 20807              		.cfi_def_cfa_offset 12
 20808              		.cfi_offset 4, -12
 20809              		.cfi_offset 7, -8
 20810              		.cfi_offset 14, -4
 20811 0002 9FB0     		sub	sp, sp, #124
 20812              		.cfi_def_cfa_offset 136
 20813 0004 02AF     		add	r7, sp, #8
 20814              		.cfi_def_cfa 7, 128
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 456


 20815 0006 7860     		str	r0, [r7, #4]
2706:..\src/command_processing.c ****     char str[100];  
2707:..\src/command_processing.c ****     int i;
2708:..\src/command_processing.c ****             
2709:..\src/command_processing.c ****     strcpy(info_string, "");
 20816              		.loc 1 2709 0
 20817 0008 7B68     		ldr	r3, [r7, #4]
 20818 000a 0022     		movs	r2, #0
 20819 000c 1A70     		strb	r2, [r3]
2710:..\src/command_processing.c ****     
2711:..\src/command_processing.c ****     // Time
2712:..\src/command_processing.c ****     strcat(info_string, "");
2713:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20820              		.loc 1 2713 0
 20821 000e 424B     		ldr	r3, .L797
 20822 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20823 0014 1A46     		mov	r2, r3
 20824 0016 404B     		ldr	r3, .L797
 20825 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20826 001c 1946     		mov	r1, r3
 20827 001e 3E4B     		ldr	r3, .L797
 20828 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20829 0024 07F10800 		add	r0, r7, #8
 20830 0028 0093     		str	r3, [sp]
 20831 002a 0B46     		mov	r3, r1
 20832 002c 3B49     		ldr	r1, .L797+4
 20833 002e FFF7FEFF 		bl	sprintf
2714:..\src/command_processing.c ****     strcat(info_string, str);
 20834              		.loc 1 2714 0
 20835 0032 07F10803 		add	r3, r7, #8
 20836 0036 1946     		mov	r1, r3
 20837 0038 7868     		ldr	r0, [r7, #4]
 20838 003a FFF7FEFF 		bl	strcat
2715:..\src/command_processing.c **** 
2716:..\src/command_processing.c ****     // Pos_Bin
2717:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20839              		.loc 1 2717 0
 20840 003e 0123     		movs	r3, #1
 20841 0040 FB66     		str	r3, [r7, #108]
 20842 0042 14E0     		b	.L793
 20843              	.L794:
2718:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20844              		.loc 1 2718 0 discriminator 3
 20845 0044 FB6E     		ldr	r3, [r7, #108]
 20846 0046 013B     		subs	r3, r3, #1
 20847 0048 334A     		ldr	r2, .L797
 20848 004a 0633     		adds	r3, r3, #6
 20849 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20850 0050 07F10803 		add	r3, r7, #8
 20851 0054 3249     		ldr	r1, .L797+8
 20852 0056 1846     		mov	r0, r3
 20853 0058 FFF7FEFF 		bl	sprintf
2719:..\src/command_processing.c ****         strcat(info_string, str);
 20854              		.loc 1 2719 0 discriminator 3
 20855 005c 07F10803 		add	r3, r7, #8
 20856 0060 1946     		mov	r1, r3
 20857 0062 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 457


 20858 0064 FFF7FEFF 		bl	strcat
2717:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20859              		.loc 1 2717 0 discriminator 3
 20860 0068 FB6E     		ldr	r3, [r7, #108]
 20861 006a 0133     		adds	r3, r3, #1
 20862 006c FB66     		str	r3, [r7, #108]
 20863              	.L793:
2717:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20864              		.loc 1 2717 0 is_stmt 0 discriminator 1
 20865 006e FB6E     		ldr	r3, [r7, #108]
 20866 0070 0A2B     		cmp	r3, #10
 20867 0072 E7DD     		ble	.L794
2720:..\src/command_processing.c ****     }
2721:..\src/command_processing.c ****     
2722:..\src/command_processing.c ****     // Curr_Bin
2723:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20868              		.loc 1 2723 0 is_stmt 1
 20869 0074 0123     		movs	r3, #1
 20870 0076 FB66     		str	r3, [r7, #108]
 20871 0078 14E0     		b	.L795
 20872              	.L796:
2724:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20873              		.loc 1 2724 0 discriminator 3
 20874 007a FB6E     		ldr	r3, [r7, #108]
 20875 007c 013B     		subs	r3, r3, #1
 20876 007e 264A     		ldr	r2, .L797
 20877 0080 1033     		adds	r3, r3, #16
 20878 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20879 0086 07F10803 		add	r3, r7, #8
 20880 008a 2549     		ldr	r1, .L797+8
 20881 008c 1846     		mov	r0, r3
 20882 008e FFF7FEFF 		bl	sprintf
2725:..\src/command_processing.c ****         strcat(info_string, str);
 20883              		.loc 1 2725 0 discriminator 3
 20884 0092 07F10803 		add	r3, r7, #8
 20885 0096 1946     		mov	r1, r3
 20886 0098 7868     		ldr	r0, [r7, #4]
 20887 009a FFF7FEFF 		bl	strcat
2723:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20888              		.loc 1 2723 0 discriminator 3
 20889 009e FB6E     		ldr	r3, [r7, #108]
 20890 00a0 0133     		adds	r3, r3, #1
 20891 00a2 FB66     		str	r3, [r7, #108]
 20892              	.L795:
2723:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20893              		.loc 1 2723 0 is_stmt 0 discriminator 1
 20894 00a4 FB6E     		ldr	r3, [r7, #108]
 20895 00a6 042B     		cmp	r3, #4
 20896 00a8 E7DD     		ble	.L796
2726:..\src/command_processing.c ****     }
2727:..\src/command_processing.c ****        
2728:..\src/command_processing.c ****     // EMG_1, EMG_2
2729:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 20897              		.loc 1 2729 0 is_stmt 1
 20898 00aa 1B4B     		ldr	r3, .L797
 20899 00ac 1A69     		ldr	r2, [r3, #16]
 20900 00ae 1A4B     		ldr	r3, .L797
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 458


 20901 00b0 5B69     		ldr	r3, [r3, #20]
 20902 00b2 07F10800 		add	r0, r7, #8
 20903 00b6 1B49     		ldr	r1, .L797+12
 20904 00b8 FFF7FEFF 		bl	sprintf
2730:..\src/command_processing.c ****     strcat(info_string, str);
 20905              		.loc 1 2730 0
 20906 00bc 07F10803 		add	r3, r7, #8
 20907 00c0 1946     		mov	r1, r3
 20908 00c2 7868     		ldr	r0, [r7, #4]
 20909 00c4 FFF7FEFF 		bl	strcat
2731:..\src/command_processing.c ****     
2732:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2733:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 20910              		.loc 1 2733 0
 20911 00c8 134B     		ldr	r3, .L797
 20912 00ca 196D     		ldr	r1, [r3, #80]
 20913 00cc 124B     		ldr	r3, .L797
 20914 00ce 5C6D     		ldr	r4, [r3, #84]
 20915 00d0 114B     		ldr	r3, .L797
 20916 00d2 9B6D     		ldr	r3, [r3, #88]
 20917 00d4 104A     		ldr	r2, .L797
 20918 00d6 D26D     		ldr	r2, [r2, #92]
 20919 00d8 07F10800 		add	r0, r7, #8
 20920 00dc 0192     		str	r2, [sp, #4]
 20921 00de 0093     		str	r3, [sp]
 20922 00e0 2346     		mov	r3, r4
 20923 00e2 0A46     		mov	r2, r1
 20924 00e4 1049     		ldr	r1, .L797+16
 20925 00e6 FFF7FEFF 		bl	sprintf
2734:..\src/command_processing.c ****     strcat(info_string, str);
 20926              		.loc 1 2734 0
 20927 00ea 07F10803 		add	r3, r7, #8
 20928 00ee 1946     		mov	r1, r3
 20929 00f0 7868     		ldr	r0, [r7, #4]
 20930 00f2 FFF7FEFF 		bl	strcat
2735:..\src/command_processing.c ****     
2736:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20931              		.loc 1 2736 0
 20932 00f6 7868     		ldr	r0, [r7, #4]
 20933 00f8 FFF7FEFF 		bl	strlen
 20934 00fc 0346     		mov	r3, r0
 20935 00fe 1A46     		mov	r2, r3
 20936 0100 7B68     		ldr	r3, [r7, #4]
 20937 0102 1344     		add	r3, r3, r2
 20938 0104 094A     		ldr	r2, .L797+20
 20939 0106 1188     		ldrh	r1, [r2]	@ unaligned
 20940 0108 9278     		ldrb	r2, [r2, #2]
 20941 010a 1980     		strh	r1, [r3]	@ unaligned
 20942 010c 9A70     		strb	r2, [r3, #2]
2737:..\src/command_processing.c **** }
 20943              		.loc 1 2737 0
 20944 010e 00BF     		nop
 20945 0110 7437     		adds	r7, r7, #116
 20946              		.cfi_def_cfa_offset 12
 20947 0112 BD46     		mov	sp, r7
 20948              		.cfi_def_cfa_register 13
 20949              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 459


 20950 0114 90BD     		pop	{r4, r7, pc}
 20951              	.L798:
 20952 0116 00BF     		.align	2
 20953              	.L797:
 20954 0118 00000000 		.word	g_mem
 20955 011c EC1E0000 		.word	.LC295
 20956 0120 FC1E0000 		.word	.LC296
 20957 0124 041F0000 		.word	.LC297
 20958 0128 101F0000 		.word	.LC298
 20959 012c 10110000 		.word	.LC150
 20960              		.cfi_endproc
 20961              	.LFE76:
 20962              		.size	prepare_SD_info, .-prepare_SD_info
 20963              		.section	.rodata
 20964              		.align	2
 20965              	.LC299:
 20966 1f20 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 20966      4F525320 
 20966      494E464F 
 20966      0D0A00
 20967 1f2f 00       		.align	2
 20968              	.LC300:
 20969 1f30 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 20969      3A202564 
 20969      09256409 
 20969      25640D0A 
 20969      00
 20970 1f41 000000   		.align	2
 20971              	.LC301:
 20972 1f44 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 20972      6F3A2025 
 20972      64092564 
 20972      0925640D 
 20972      0A00
 20973 1f56 0000     		.align	2
 20974              	.LC302:
 20975 1f58 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 20975      3A202564 
 20975      09256409 
 20975      25640D0A 
 20975      00
 20976 1f69 000000   		.align	2
 20977              	.LC303:
 20978 1f6c 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 20978      743A2025 
 20978      2E336609 
 20978      252E3366 
 20978      09252E33 
 20979 1f89 000000   		.align	2
 20980              	.LC304:
 20981 1f8c 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 20981      70657261 
 20981      74757265 
 20981      3A202564 
 20981      0D0A00
 20982              		.section	.text.IMU_reading_info,"ax",%progbits
 20983              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 460


 20984              		.global	IMU_reading_info
 20985              		.thumb
 20986              		.thumb_func
 20987              		.type	IMU_reading_info, %function
 20988              	IMU_reading_info:
 20989              	.LFB77:
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** //==============================================================================
2740:..\src/command_processing.c **** //                                                              IMU READING INFO
2741:..\src/command_processing.c **** //==============================================================================
2742:..\src/command_processing.c **** 
2743:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2744:..\src/command_processing.c **** {
 20990              		.loc 1 2744 0
 20991              		.cfi_startproc
 20992              		@ args = 0, pretend = 0, frame = 312
 20993              		@ frame_needed = 1, uses_anonymous_args = 0
 20994 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 20995              		.cfi_def_cfa_offset 32
 20996              		.cfi_offset 4, -32
 20997              		.cfi_offset 5, -28
 20998              		.cfi_offset 7, -24
 20999              		.cfi_offset 8, -20
 21000              		.cfi_offset 9, -16
 21001              		.cfi_offset 10, -12
 21002              		.cfi_offset 11, -8
 21003              		.cfi_offset 14, -4
 21004 0004 D4B0     		sub	sp, sp, #336
 21005              		.cfi_def_cfa_offset 368
 21006 0006 06AF     		add	r7, sp, #24
 21007              		.cfi_def_cfa 7, 344
 21008 0008 3B1D     		adds	r3, r7, #4
 21009 000a 1860     		str	r0, [r3]
2745:..\src/command_processing.c ****     char str[300];  
2746:..\src/command_processing.c ****     int i;
2747:..\src/command_processing.c ****                  
2748:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21010              		.loc 1 2748 0
 21011 000c 3B1D     		adds	r3, r7, #4
 21012 000e 1868     		ldr	r0, [r3]
 21013 0010 FFF7FEFF 		bl	strlen
 21014 0014 0346     		mov	r3, r0
 21015 0016 1A46     		mov	r2, r3
 21016 0018 3B1D     		adds	r3, r7, #4
 21017 001a 1B68     		ldr	r3, [r3]
 21018 001c 1344     		add	r3, r3, r2
 21019 001e C94A     		ldr	r2, .L807
 21020 0020 1C46     		mov	r4, r3
 21021 0022 1346     		mov	r3, r2
 21022 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21023 0026 2060     		str	r0, [r4]	@ unaligned
 21024 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21025 002a A260     		str	r2, [r4, #8]	@ unaligned
 21026 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21027 002e 9B78     		ldrb	r3, [r3, #2]
 21028 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21029 0032 A373     		strb	r3, [r4, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 461


2749:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21030              		.loc 1 2749 0
 21031 0034 0023     		movs	r3, #0
 21032 0036 C7F83431 		str	r3, [r7, #308]
 21033 003a 66E1     		b	.L800
 21034              	.L806:
2750:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21035              		.loc 1 2750 0
 21036 003c C24A     		ldr	r2, .L807+4
 21037 003e D7F83431 		ldr	r3, [r7, #308]
 21038 0042 1344     		add	r3, r3, r2
 21039 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21040 0046 07F10800 		add	r0, r7, #8
 21041 004a D7F83421 		ldr	r2, [r7, #308]
 21042 004e BF49     		ldr	r1, .L807+8
 21043 0050 FFF7FEFF 		bl	sprintf
2751:..\src/command_processing.c ****         strcat(info_string, str);
 21044              		.loc 1 2751 0
 21045 0054 07F10802 		add	r2, r7, #8
 21046 0058 3B1D     		adds	r3, r7, #4
 21047 005a 1146     		mov	r1, r2
 21048 005c 1868     		ldr	r0, [r3]
 21049 005e FFF7FEFF 		bl	strcat
2752:..\src/command_processing.c ****         
2753:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21050              		.loc 1 2753 0
 21051 0062 B94A     		ldr	r2, .L807+4
 21052 0064 D7F83431 		ldr	r3, [r7, #308]
 21053 0068 1344     		add	r3, r3, r2
 21054 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21055 006c 1946     		mov	r1, r3
 21056 006e B84A     		ldr	r2, .L807+12
 21057 0070 0B46     		mov	r3, r1
 21058 0072 9B00     		lsls	r3, r3, #2
 21059 0074 0B44     		add	r3, r3, r1
 21060 0076 1344     		add	r3, r3, r2
 21061 0078 03F20223 		addw	r3, r3, #514
 21062 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21063 007e 002B     		cmp	r3, #0
 21064 0080 31D0     		beq	.L801
2754:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21065              		.loc 1 2754 0
 21066 0082 B449     		ldr	r1, .L807+16
 21067 0084 D7F83421 		ldr	r2, [r7, #308]
 21068 0088 1346     		mov	r3, r2
 21069 008a 9B00     		lsls	r3, r3, #2
 21070 008c 1344     		add	r3, r3, r2
 21071 008e DB00     		lsls	r3, r3, #3
 21072 0090 0B44     		add	r3, r3, r1
 21073 0092 0233     		adds	r3, r3, #2
 21074 0094 B3F90030 		ldrsh	r3, [r3]
 21075 0098 1C46     		mov	r4, r3
 21076 009a AE49     		ldr	r1, .L807+16
 21077 009c D7F83421 		ldr	r2, [r7, #308]
 21078 00a0 1346     		mov	r3, r2
 21079 00a2 9B00     		lsls	r3, r3, #2
 21080 00a4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 462


 21081 00a6 DB00     		lsls	r3, r3, #3
 21082 00a8 0B44     		add	r3, r3, r1
 21083 00aa 0433     		adds	r3, r3, #4
 21084 00ac B3F90030 		ldrsh	r3, [r3]
 21085 00b0 1D46     		mov	r5, r3
 21086 00b2 A849     		ldr	r1, .L807+16
 21087 00b4 D7F83421 		ldr	r2, [r7, #308]
 21088 00b8 1346     		mov	r3, r2
 21089 00ba 9B00     		lsls	r3, r3, #2
 21090 00bc 1344     		add	r3, r3, r2
 21091 00be DB00     		lsls	r3, r3, #3
 21092 00c0 0B44     		add	r3, r3, r1
 21093 00c2 0633     		adds	r3, r3, #6
 21094 00c4 B3F90030 		ldrsh	r3, [r3]
 21095 00c8 07F10800 		add	r0, r7, #8
 21096 00cc 0093     		str	r3, [sp]
 21097 00ce 2B46     		mov	r3, r5
 21098 00d0 2246     		mov	r2, r4
 21099 00d2 A149     		ldr	r1, .L807+20
 21100 00d4 FFF7FEFF 		bl	sprintf
2755:..\src/command_processing.c ****             strcat(info_string, str);
 21101              		.loc 1 2755 0
 21102 00d8 07F10802 		add	r2, r7, #8
 21103 00dc 3B1D     		adds	r3, r7, #4
 21104 00de 1146     		mov	r1, r2
 21105 00e0 1868     		ldr	r0, [r3]
 21106 00e2 FFF7FEFF 		bl	strcat
 21107              	.L801:
2756:..\src/command_processing.c ****         }
2757:..\src/command_processing.c **** 
2758:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21108              		.loc 1 2758 0
 21109 00e6 984A     		ldr	r2, .L807+4
 21110 00e8 D7F83431 		ldr	r3, [r7, #308]
 21111 00ec 1344     		add	r3, r3, r2
 21112 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21113 00f0 1946     		mov	r1, r3
 21114 00f2 974A     		ldr	r2, .L807+12
 21115 00f4 0B46     		mov	r3, r1
 21116 00f6 9B00     		lsls	r3, r3, #2
 21117 00f8 0B44     		add	r3, r3, r1
 21118 00fa 1344     		add	r3, r3, r2
 21119 00fc 03F20323 		addw	r3, r3, #515
 21120 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21121 0102 002B     		cmp	r3, #0
 21122 0104 31D0     		beq	.L802
2759:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21123              		.loc 1 2759 0
 21124 0106 9349     		ldr	r1, .L807+16
 21125 0108 D7F83421 		ldr	r2, [r7, #308]
 21126 010c 1346     		mov	r3, r2
 21127 010e 9B00     		lsls	r3, r3, #2
 21128 0110 1344     		add	r3, r3, r2
 21129 0112 DB00     		lsls	r3, r3, #3
 21130 0114 0B44     		add	r3, r3, r1
 21131 0116 0833     		adds	r3, r3, #8
 21132 0118 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 463


 21133 011c 1C46     		mov	r4, r3
 21134 011e 8D49     		ldr	r1, .L807+16
 21135 0120 D7F83421 		ldr	r2, [r7, #308]
 21136 0124 1346     		mov	r3, r2
 21137 0126 9B00     		lsls	r3, r3, #2
 21138 0128 1344     		add	r3, r3, r2
 21139 012a DB00     		lsls	r3, r3, #3
 21140 012c 0B44     		add	r3, r3, r1
 21141 012e 0A33     		adds	r3, r3, #10
 21142 0130 B3F90030 		ldrsh	r3, [r3]
 21143 0134 1D46     		mov	r5, r3
 21144 0136 8749     		ldr	r1, .L807+16
 21145 0138 D7F83421 		ldr	r2, [r7, #308]
 21146 013c 1346     		mov	r3, r2
 21147 013e 9B00     		lsls	r3, r3, #2
 21148 0140 1344     		add	r3, r3, r2
 21149 0142 DB00     		lsls	r3, r3, #3
 21150 0144 0B44     		add	r3, r3, r1
 21151 0146 0C33     		adds	r3, r3, #12
 21152 0148 B3F90030 		ldrsh	r3, [r3]
 21153 014c 07F10800 		add	r0, r7, #8
 21154 0150 0093     		str	r3, [sp]
 21155 0152 2B46     		mov	r3, r5
 21156 0154 2246     		mov	r2, r4
 21157 0156 8149     		ldr	r1, .L807+24
 21158 0158 FFF7FEFF 		bl	sprintf
2760:..\src/command_processing.c ****             strcat(info_string, str);
 21159              		.loc 1 2760 0
 21160 015c 07F10802 		add	r2, r7, #8
 21161 0160 3B1D     		adds	r3, r7, #4
 21162 0162 1146     		mov	r1, r2
 21163 0164 1868     		ldr	r0, [r3]
 21164 0166 FFF7FEFF 		bl	strcat
 21165              	.L802:
2761:..\src/command_processing.c ****         }
2762:..\src/command_processing.c **** 
2763:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21166              		.loc 1 2763 0
 21167 016a 774A     		ldr	r2, .L807+4
 21168 016c D7F83431 		ldr	r3, [r7, #308]
 21169 0170 1344     		add	r3, r3, r2
 21170 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21171 0174 1946     		mov	r1, r3
 21172 0176 764A     		ldr	r2, .L807+12
 21173 0178 0B46     		mov	r3, r1
 21174 017a 9B00     		lsls	r3, r3, #2
 21175 017c 0B44     		add	r3, r3, r1
 21176 017e 1344     		add	r3, r3, r2
 21177 0180 03F50173 		add	r3, r3, #516
 21178 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21179 0186 002B     		cmp	r3, #0
 21180 0188 31D0     		beq	.L803
2764:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21181              		.loc 1 2764 0
 21182 018a 7249     		ldr	r1, .L807+16
 21183 018c D7F83421 		ldr	r2, [r7, #308]
 21184 0190 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 464


 21185 0192 9B00     		lsls	r3, r3, #2
 21186 0194 1344     		add	r3, r3, r2
 21187 0196 DB00     		lsls	r3, r3, #3
 21188 0198 0B44     		add	r3, r3, r1
 21189 019a 0E33     		adds	r3, r3, #14
 21190 019c B3F90030 		ldrsh	r3, [r3]
 21191 01a0 1C46     		mov	r4, r3
 21192 01a2 6C49     		ldr	r1, .L807+16
 21193 01a4 D7F83421 		ldr	r2, [r7, #308]
 21194 01a8 1346     		mov	r3, r2
 21195 01aa 9B00     		lsls	r3, r3, #2
 21196 01ac 1344     		add	r3, r3, r2
 21197 01ae DB00     		lsls	r3, r3, #3
 21198 01b0 0B44     		add	r3, r3, r1
 21199 01b2 1033     		adds	r3, r3, #16
 21200 01b4 B3F90030 		ldrsh	r3, [r3]
 21201 01b8 1D46     		mov	r5, r3
 21202 01ba 6649     		ldr	r1, .L807+16
 21203 01bc D7F83421 		ldr	r2, [r7, #308]
 21204 01c0 1346     		mov	r3, r2
 21205 01c2 9B00     		lsls	r3, r3, #2
 21206 01c4 1344     		add	r3, r3, r2
 21207 01c6 DB00     		lsls	r3, r3, #3
 21208 01c8 0B44     		add	r3, r3, r1
 21209 01ca 1233     		adds	r3, r3, #18
 21210 01cc B3F90030 		ldrsh	r3, [r3]
 21211 01d0 07F10800 		add	r0, r7, #8
 21212 01d4 0093     		str	r3, [sp]
 21213 01d6 2B46     		mov	r3, r5
 21214 01d8 2246     		mov	r2, r4
 21215 01da 6149     		ldr	r1, .L807+28
 21216 01dc FFF7FEFF 		bl	sprintf
2765:..\src/command_processing.c ****             strcat(info_string, str);
 21217              		.loc 1 2765 0
 21218 01e0 07F10802 		add	r2, r7, #8
 21219 01e4 3B1D     		adds	r3, r7, #4
 21220 01e6 1146     		mov	r1, r2
 21221 01e8 1868     		ldr	r0, [r3]
 21222 01ea FFF7FEFF 		bl	strcat
 21223              	.L803:
2766:..\src/command_processing.c ****         }
2767:..\src/command_processing.c ****         
2768:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21224              		.loc 1 2768 0
 21225 01ee 564A     		ldr	r2, .L807+4
 21226 01f0 D7F83431 		ldr	r3, [r7, #308]
 21227 01f4 1344     		add	r3, r3, r2
 21228 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21229 01f8 1946     		mov	r1, r3
 21230 01fa 554A     		ldr	r2, .L807+12
 21231 01fc 0B46     		mov	r3, r1
 21232 01fe 9B00     		lsls	r3, r3, #2
 21233 0200 0B44     		add	r3, r3, r1
 21234 0202 1344     		add	r3, r3, r2
 21235 0204 03F20523 		addw	r3, r3, #517
 21236 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21237 020a 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 465


 21238 020c 4FD0     		beq	.L804
2769:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21239              		.loc 1 2769 0
 21240 020e 5149     		ldr	r1, .L807+16
 21241 0210 D7F83421 		ldr	r2, [r7, #308]
 21242 0214 1346     		mov	r3, r2
 21243 0216 9B00     		lsls	r3, r3, #2
 21244 0218 1344     		add	r3, r3, r2
 21245 021a DB00     		lsls	r3, r3, #3
 21246 021c 0B44     		add	r3, r3, r1
 21247 021e 1433     		adds	r3, r3, #20
 21248 0220 1B68     		ldr	r3, [r3]	@ float
 21249 0222 1846     		mov	r0, r3
 21250 0224 FFF7FEFF 		bl	__aeabi_f2d
 21251 0228 8246     		mov	r10, r0
 21252 022a 8B46     		mov	fp, r1
 21253 022c 4949     		ldr	r1, .L807+16
 21254 022e D7F83421 		ldr	r2, [r7, #308]
 21255 0232 1346     		mov	r3, r2
 21256 0234 9B00     		lsls	r3, r3, #2
 21257 0236 1344     		add	r3, r3, r2
 21258 0238 DB00     		lsls	r3, r3, #3
 21259 023a 0B44     		add	r3, r3, r1
 21260 023c 1833     		adds	r3, r3, #24
 21261 023e 1B68     		ldr	r3, [r3]	@ float
 21262 0240 1846     		mov	r0, r3
 21263 0242 FFF7FEFF 		bl	__aeabi_f2d
 21264 0246 0446     		mov	r4, r0
 21265 0248 0D46     		mov	r5, r1
 21266 024a 4249     		ldr	r1, .L807+16
 21267 024c D7F83421 		ldr	r2, [r7, #308]
 21268 0250 1346     		mov	r3, r2
 21269 0252 9B00     		lsls	r3, r3, #2
 21270 0254 1344     		add	r3, r3, r2
 21271 0256 DB00     		lsls	r3, r3, #3
 21272 0258 0B44     		add	r3, r3, r1
 21273 025a 1C33     		adds	r3, r3, #28
 21274 025c 1B68     		ldr	r3, [r3]	@ float
 21275 025e 1846     		mov	r0, r3
 21276 0260 FFF7FEFF 		bl	__aeabi_f2d
 21277 0264 8046     		mov	r8, r0
 21278 0266 8946     		mov	r9, r1
 21279 0268 3A49     		ldr	r1, .L807+16
 21280 026a D7F83421 		ldr	r2, [r7, #308]
 21281 026e 1346     		mov	r3, r2
 21282 0270 9B00     		lsls	r3, r3, #2
 21283 0272 1344     		add	r3, r3, r2
 21284 0274 DB00     		lsls	r3, r3, #3
 21285 0276 0B44     		add	r3, r3, r1
 21286 0278 2033     		adds	r3, r3, #32
 21287 027a 1B68     		ldr	r3, [r3]	@ float
 21288 027c 1846     		mov	r0, r3
 21289 027e FFF7FEFF 		bl	__aeabi_f2d
 21290 0282 0246     		mov	r2, r0
 21291 0284 0B46     		mov	r3, r1
 21292 0286 07F10800 		add	r0, r7, #8
 21293 028a CDE90423 		strd	r2, [sp, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 466


 21294 028e CDE90289 		strd	r8, [sp, #8]
 21295 0292 CDE90045 		strd	r4, [sp]
 21296 0296 5246     		mov	r2, r10
 21297 0298 5B46     		mov	r3, fp
 21298 029a 3249     		ldr	r1, .L807+32
 21299 029c FFF7FEFF 		bl	sprintf
2770:..\src/command_processing.c ****             strcat(info_string, str);
 21300              		.loc 1 2770 0
 21301 02a0 07F10802 		add	r2, r7, #8
 21302 02a4 3B1D     		adds	r3, r7, #4
 21303 02a6 1146     		mov	r1, r2
 21304 02a8 1868     		ldr	r0, [r3]
 21305 02aa FFF7FEFF 		bl	strcat
 21306              	.L804:
2771:..\src/command_processing.c ****         }
2772:..\src/command_processing.c ****         
2773:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21307              		.loc 1 2773 0
 21308 02ae 264A     		ldr	r2, .L807+4
 21309 02b0 D7F83431 		ldr	r3, [r7, #308]
 21310 02b4 1344     		add	r3, r3, r2
 21311 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21312 02b8 1946     		mov	r1, r3
 21313 02ba 254A     		ldr	r2, .L807+12
 21314 02bc 0B46     		mov	r3, r1
 21315 02be 9B00     		lsls	r3, r3, #2
 21316 02c0 0B44     		add	r3, r3, r1
 21317 02c2 1344     		add	r3, r3, r2
 21318 02c4 03F20623 		addw	r3, r3, #518
 21319 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21320 02ca 002B     		cmp	r3, #0
 21321 02cc 18D0     		beq	.L805
2774:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21322              		.loc 1 2774 0
 21323 02ce 2149     		ldr	r1, .L807+16
 21324 02d0 D7F83421 		ldr	r2, [r7, #308]
 21325 02d4 1346     		mov	r3, r2
 21326 02d6 9B00     		lsls	r3, r3, #2
 21327 02d8 1344     		add	r3, r3, r2
 21328 02da DB00     		lsls	r3, r3, #3
 21329 02dc 0B44     		add	r3, r3, r1
 21330 02de 2433     		adds	r3, r3, #36
 21331 02e0 B3F90030 		ldrsh	r3, [r3]
 21332 02e4 1A46     		mov	r2, r3
 21333 02e6 07F10803 		add	r3, r7, #8
 21334 02ea 1F49     		ldr	r1, .L807+36
 21335 02ec 1846     		mov	r0, r3
 21336 02ee FFF7FEFF 		bl	sprintf
2775:..\src/command_processing.c ****             strcat(info_string, str);
 21337              		.loc 1 2775 0
 21338 02f2 07F10802 		add	r2, r7, #8
 21339 02f6 3B1D     		adds	r3, r7, #4
 21340 02f8 1146     		mov	r1, r2
 21341 02fa 1868     		ldr	r0, [r3]
 21342 02fc FFF7FEFF 		bl	strcat
 21343              	.L805:
2749:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 467


 21344              		.loc 1 2749 0 discriminator 2
 21345 0300 D7F83431 		ldr	r3, [r7, #308]
 21346 0304 0133     		adds	r3, r3, #1
 21347 0306 C7F83431 		str	r3, [r7, #308]
 21348              	.L800:
2749:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21349              		.loc 1 2749 0 is_stmt 0 discriminator 1
 21350 030a 184B     		ldr	r3, .L807+40
 21351 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21352 030e 1A46     		mov	r2, r3
 21353 0310 D7F83431 		ldr	r3, [r7, #308]
 21354 0314 9A42     		cmp	r2, r3
 21355 0316 3FF791AE 		bgt	.L806
2776:..\src/command_processing.c ****         }
2777:..\src/command_processing.c ****         
2778:..\src/command_processing.c ****     }
2779:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21356              		.loc 1 2779 0 is_stmt 1
 21357 031a 3B1D     		adds	r3, r7, #4
 21358 031c 1868     		ldr	r0, [r3]
 21359 031e FFF7FEFF 		bl	strlen
 21360 0322 0346     		mov	r3, r0
 21361 0324 1A46     		mov	r2, r3
 21362 0326 3B1D     		adds	r3, r7, #4
 21363 0328 1B68     		ldr	r3, [r3]
 21364 032a 1344     		add	r3, r3, r2
 21365 032c 104A     		ldr	r2, .L807+44
 21366 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21367 0330 9278     		ldrb	r2, [r2, #2]
 21368 0332 1980     		strh	r1, [r3]	@ unaligned
 21369 0334 9A70     		strb	r2, [r3, #2]
2780:..\src/command_processing.c **** }
 21370              		.loc 1 2780 0
 21371 0336 00BF     		nop
 21372 0338 07F59C77 		add	r7, r7, #312
 21373              		.cfi_def_cfa_offset 32
 21374 033c BD46     		mov	sp, r7
 21375              		.cfi_def_cfa_register 13
 21376              		@ sp needed
 21377 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21378              	.L808:
 21379 0342 00BF     		.align	2
 21380              	.L807:
 21381 0344 201F0000 		.word	.LC299
 21382 0348 00000000 		.word	IMU_connected
 21383 034c 941A0000 		.word	.LC252
 21384 0350 00000000 		.word	c_mem
 21385 0354 00000000 		.word	g_imu
 21386 0358 301F0000 		.word	.LC300
 21387 035c 441F0000 		.word	.LC301
 21388 0360 581F0000 		.word	.LC302
 21389 0364 6C1F0000 		.word	.LC303
 21390 0368 8C1F0000 		.word	.LC304
 21391 036c 00000000 		.word	N_IMU_Connected
 21392 0370 10110000 		.word	.LC150
 21393              		.cfi_endproc
 21394              	.LFE77:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 468


 21395              		.size	IMU_reading_info, .-IMU_reading_info
 21396              		.section	.text.commWrite_old_id,"ax",%progbits
 21397              		.align	2
 21398              		.global	commWrite_old_id
 21399              		.thumb
 21400              		.thumb_func
 21401              		.type	commWrite_old_id, %function
 21402              	commWrite_old_id:
 21403              	.LFB78:
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c **** //==============================================================================
2783:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2784:..\src/command_processing.c **** //==============================================================================
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2787:..\src/command_processing.c **** {
 21404              		.loc 1 2787 0
 21405              		.cfi_startproc
 21406              		@ args = 0, pretend = 0, frame = 16
 21407              		@ frame_needed = 1, uses_anonymous_args = 0
 21408 0000 80B5     		push	{r7, lr}
 21409              		.cfi_def_cfa_offset 8
 21410              		.cfi_offset 7, -8
 21411              		.cfi_offset 14, -4
 21412 0002 84B0     		sub	sp, sp, #16
 21413              		.cfi_def_cfa_offset 24
 21414 0004 00AF     		add	r7, sp, #0
 21415              		.cfi_def_cfa_register 7
 21416 0006 7860     		str	r0, [r7, #4]
 21417 0008 0B46     		mov	r3, r1
 21418 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21419 000c 1346     		mov	r3, r2
 21420 000e 7B70     		strb	r3, [r7, #1]
2788:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     // frame - start
2791:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21421              		.loc 1 2791 0
 21422 0010 3A20     		movs	r0, #58
 21423 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2792:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21424              		.loc 1 2792 0
 21425 0016 3A20     		movs	r0, #58
 21426 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2793:..\src/command_processing.c ****     // frame - ID
2794:..\src/command_processing.c ****     //if(old_id)
2795:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21427              		.loc 1 2795 0
 21428 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21429 001e 1846     		mov	r0, r3
 21430 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2796:..\src/command_processing.c ****     //else
2797:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2798:..\src/command_processing.c ****         
2799:..\src/command_processing.c ****     // frame - length
2800:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21431              		.loc 1 2800 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 469


 21432 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21433 0026 DBB2     		uxtb	r3, r3
 21434 0028 1846     		mov	r0, r3
 21435 002a FFF7FEFF 		bl	UART_RS485_PutChar
2801:..\src/command_processing.c ****     // frame - packet data
2802:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21436              		.loc 1 2802 0
 21437 002e 0023     		movs	r3, #0
 21438 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21439 0032 09E0     		b	.L810
 21440              	.L811:
2803:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21441              		.loc 1 2803 0 discriminator 3
 21442 0034 FB89     		ldrh	r3, [r7, #14]
 21443 0036 7A68     		ldr	r2, [r7, #4]
 21444 0038 1344     		add	r3, r3, r2
 21445 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21446 003c 1846     		mov	r0, r3
 21447 003e FFF7FEFF 		bl	UART_RS485_PutChar
2802:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21448              		.loc 1 2802 0 discriminator 3
 21449 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21450 0044 0133     		adds	r3, r3, #1
 21451 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21452              	.L810:
2802:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21453              		.loc 1 2802 0 is_stmt 0 discriminator 1
 21454 0048 FA89     		ldrh	r2, [r7, #14]
 21455 004a 7B88     		ldrh	r3, [r7, #2]
 21456 004c 9A42     		cmp	r2, r3
 21457 004e F1D3     		bcc	.L811
2804:..\src/command_processing.c ****     }
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c ****     index = 0;
 21458              		.loc 1 2806 0 is_stmt 1
 21459 0050 0023     		movs	r3, #0
 21460 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21461              		.loc 1 2808 0
 21462 0054 00BF     		nop
 21463              	.L813:
 21464              		.loc 1 2808 0 is_stmt 0 discriminator 2
 21465 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21466 005a 0346     		mov	r3, r0
 21467 005c 03F00103 		and	r3, r3, #1
 21468 0060 002B     		cmp	r3, #0
 21469 0062 05D1     		bne	.L812
 21470              		.loc 1 2808 0 discriminator 1
 21471 0064 FB89     		ldrh	r3, [r7, #14]
 21472 0066 5A1C     		adds	r2, r3, #1
 21473 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21474 006a B3F57A7F 		cmp	r3, #1000
 21475 006e F2D9     		bls	.L813
 21476              	.L812:
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c ****     RS485_CTS_Write(1);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 470


 21477              		.loc 1 2810 0 is_stmt 1
 21478 0070 0120     		movs	r0, #1
 21479 0072 FFF7FEFF 		bl	RS485_CTS_Write
2811:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21480              		.loc 1 2811 0
 21481 0076 0020     		movs	r0, #0
 21482 0078 FFF7FEFF 		bl	RS485_CTS_Write
2812:..\src/command_processing.c **** }
 21483              		.loc 1 2812 0
 21484 007c 00BF     		nop
 21485 007e 1037     		adds	r7, r7, #16
 21486              		.cfi_def_cfa_offset 8
 21487 0080 BD46     		mov	sp, r7
 21488              		.cfi_def_cfa_register 13
 21489              		@ sp needed
 21490 0082 80BD     		pop	{r7, pc}
 21491              		.cfi_endproc
 21492              	.LFE78:
 21493              		.size	commWrite_old_id, .-commWrite_old_id
 21494              		.section	.text.commWrite,"ax",%progbits
 21495              		.align	2
 21496              		.global	commWrite
 21497              		.thumb
 21498              		.thumb_func
 21499              		.type	commWrite, %function
 21500              	commWrite:
 21501              	.LFB79:
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2815:..\src/command_processing.c **** {
 21502              		.loc 1 2815 0
 21503              		.cfi_startproc
 21504              		@ args = 0, pretend = 0, frame = 16
 21505              		@ frame_needed = 1, uses_anonymous_args = 0
 21506 0000 80B5     		push	{r7, lr}
 21507              		.cfi_def_cfa_offset 8
 21508              		.cfi_offset 7, -8
 21509              		.cfi_offset 14, -4
 21510 0002 84B0     		sub	sp, sp, #16
 21511              		.cfi_def_cfa_offset 24
 21512 0004 00AF     		add	r7, sp, #0
 21513              		.cfi_def_cfa_register 7
 21514 0006 7860     		str	r0, [r7, #4]
 21515 0008 0B46     		mov	r3, r1
 21516 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2816:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     // frame - start
2819:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21517              		.loc 1 2819 0
 21518 000c 3A20     		movs	r0, #58
 21519 000e FFF7FEFF 		bl	UART_RS485_PutChar
2820:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21520              		.loc 1 2820 0
 21521 0012 3A20     		movs	r0, #58
 21522 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2821:..\src/command_processing.c ****     // frame - ID
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 471


2822:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21523              		.loc 1 2822 0
 21524 0018 1A4B     		ldr	r3, .L819
 21525 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21526 001e 1846     		mov	r0, r3
 21527 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2823:..\src/command_processing.c ****     // frame - length
2824:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21528              		.loc 1 2824 0
 21529 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21530 0026 DBB2     		uxtb	r3, r3
 21531 0028 1846     		mov	r0, r3
 21532 002a FFF7FEFF 		bl	UART_RS485_PutChar
2825:..\src/command_processing.c ****     // frame - packet data
2826:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21533              		.loc 1 2826 0
 21534 002e 0023     		movs	r3, #0
 21535 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21536 0032 09E0     		b	.L815
 21537              	.L816:
2827:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21538              		.loc 1 2827 0 discriminator 3
 21539 0034 FB89     		ldrh	r3, [r7, #14]
 21540 0036 7A68     		ldr	r2, [r7, #4]
 21541 0038 1344     		add	r3, r3, r2
 21542 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21543 003c 1846     		mov	r0, r3
 21544 003e FFF7FEFF 		bl	UART_RS485_PutChar
2826:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21545              		.loc 1 2826 0 discriminator 3
 21546 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21547 0044 0133     		adds	r3, r3, #1
 21548 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21549              	.L815:
2826:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21550              		.loc 1 2826 0 is_stmt 0 discriminator 1
 21551 0048 FA89     		ldrh	r2, [r7, #14]
 21552 004a 7B88     		ldrh	r3, [r7, #2]
 21553 004c 9A42     		cmp	r2, r3
 21554 004e F1D3     		bcc	.L816
2828:..\src/command_processing.c ****     }
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c ****     index = 0;
 21555              		.loc 1 2830 0 is_stmt 1
 21556 0050 0023     		movs	r3, #0
 21557 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2831:..\src/command_processing.c **** 
2832:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21558              		.loc 1 2832 0
 21559 0054 00BF     		nop
 21560              	.L818:
 21561              		.loc 1 2832 0 is_stmt 0 discriminator 2
 21562 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21563 005a 0346     		mov	r3, r0
 21564 005c 03F00103 		and	r3, r3, #1
 21565 0060 002B     		cmp	r3, #0
 21566 0062 05D1     		bne	.L817
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 472


 21567              		.loc 1 2832 0 discriminator 1
 21568 0064 FB89     		ldrh	r3, [r7, #14]
 21569 0066 5A1C     		adds	r2, r3, #1
 21570 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21571 006a B3F57A7F 		cmp	r3, #1000
 21572 006e F2D9     		bls	.L818
 21573              	.L817:
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21574              		.loc 1 2834 0 is_stmt 1
 21575 0070 0120     		movs	r0, #1
 21576 0072 FFF7FEFF 		bl	RS485_CTS_Write
2835:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21577              		.loc 1 2835 0
 21578 0076 0020     		movs	r0, #0
 21579 0078 FFF7FEFF 		bl	RS485_CTS_Write
2836:..\src/command_processing.c **** }
 21580              		.loc 1 2836 0
 21581 007c 00BF     		nop
 21582 007e 1037     		adds	r7, r7, #16
 21583              		.cfi_def_cfa_offset 8
 21584 0080 BD46     		mov	sp, r7
 21585              		.cfi_def_cfa_register 13
 21586              		@ sp needed
 21587 0082 80BD     		pop	{r7, pc}
 21588              	.L820:
 21589              		.align	2
 21590              	.L819:
 21591 0084 00000000 		.word	g_mem
 21592              		.cfi_endproc
 21593              	.LFE79:
 21594              		.size	commWrite, .-commWrite
 21595              		.section	.text.commWriteID,"ax",%progbits
 21596              		.align	2
 21597              		.global	commWriteID
 21598              		.thumb
 21599              		.thumb_func
 21600              		.type	commWriteID, %function
 21601              	commWriteID:
 21602              	.LFB80:
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** //==============================================================================
2839:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2840:..\src/command_processing.c **** //==============================================================================
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2843:..\src/command_processing.c **** {
 21603              		.loc 1 2843 0
 21604              		.cfi_startproc
 21605              		@ args = 0, pretend = 0, frame = 8
 21606              		@ frame_needed = 1, uses_anonymous_args = 0
 21607 0000 80B5     		push	{r7, lr}
 21608              		.cfi_def_cfa_offset 8
 21609              		.cfi_offset 7, -8
 21610              		.cfi_offset 14, -4
 21611 0002 82B0     		sub	sp, sp, #8
 21612              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 473


 21613 0004 00AF     		add	r7, sp, #0
 21614              		.cfi_def_cfa_register 7
 21615 0006 7860     		str	r0, [r7, #4]
 21616 0008 0B46     		mov	r3, r1
 21617 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21618 000c 1346     		mov	r3, r2
 21619 000e 7B70     		strb	r3, [r7, #1]
2844:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     // frame - start
2847:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21620              		.loc 1 2847 0
 21621 0010 3A20     		movs	r0, #58
 21622 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2848:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21623              		.loc 1 2848 0
 21624 0016 3A20     		movs	r0, #58
 21625 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2849:..\src/command_processing.c ****     // frame - ID
2850:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21626              		.loc 1 2850 0
 21627 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21628 001e 1846     		mov	r0, r3
 21629 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2851:..\src/command_processing.c ****     // frame - length
2852:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21630              		.loc 1 2852 0
 21631 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21632 0026 DBB2     		uxtb	r3, r3
 21633 0028 1846     		mov	r0, r3
 21634 002a FFF7FEFF 		bl	UART_RS485_PutChar
2853:..\src/command_processing.c ****     // frame - packet data
2854:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21635              		.loc 1 2854 0
 21636 002e 1B4B     		ldr	r3, .L826
 21637 0030 0022     		movs	r2, #0
 21638 0032 1A80     		strh	r2, [r3]	@ movhi
 21639 0034 0EE0     		b	.L822
 21640              	.L823:
2855:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21641              		.loc 1 2855 0 discriminator 3
 21642 0036 194B     		ldr	r3, .L826
 21643 0038 1B88     		ldrh	r3, [r3]
 21644 003a 1A46     		mov	r2, r3
 21645 003c 7B68     		ldr	r3, [r7, #4]
 21646 003e 1344     		add	r3, r3, r2
 21647 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21648 0042 1846     		mov	r0, r3
 21649 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2854:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21650              		.loc 1 2854 0 discriminator 3
 21651 0048 144B     		ldr	r3, .L826
 21652 004a 1B88     		ldrh	r3, [r3]
 21653 004c 0133     		adds	r3, r3, #1
 21654 004e 9AB2     		uxth	r2, r3
 21655 0050 124B     		ldr	r3, .L826
 21656 0052 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 474


 21657              	.L822:
2854:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21658              		.loc 1 2854 0 is_stmt 0 discriminator 1
 21659 0054 114B     		ldr	r3, .L826
 21660 0056 1B88     		ldrh	r3, [r3]
 21661 0058 7A88     		ldrh	r2, [r7, #2]
 21662 005a 9A42     		cmp	r2, r3
 21663 005c EBD8     		bhi	.L823
2856:..\src/command_processing.c ****     }
2857:..\src/command_processing.c **** 
2858:..\src/command_processing.c ****     i = 0;
 21664              		.loc 1 2858 0 is_stmt 1
 21665 005e 0F4B     		ldr	r3, .L826
 21666 0060 0022     		movs	r2, #0
 21667 0062 1A80     		strh	r2, [r3]	@ movhi
2859:..\src/command_processing.c **** 
2860:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21668              		.loc 1 2860 0
 21669 0064 00BF     		nop
 21670              	.L825:
 21671              		.loc 1 2860 0 is_stmt 0 discriminator 2
 21672 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21673 006a 0346     		mov	r3, r0
 21674 006c 03F00103 		and	r3, r3, #1
 21675 0070 002B     		cmp	r3, #0
 21676 0072 08D1     		bne	.L824
 21677              		.loc 1 2860 0 discriminator 1
 21678 0074 094B     		ldr	r3, .L826
 21679 0076 1B88     		ldrh	r3, [r3]
 21680 0078 5A1C     		adds	r2, r3, #1
 21681 007a 91B2     		uxth	r1, r2
 21682 007c 074A     		ldr	r2, .L826
 21683 007e 1180     		strh	r1, [r2]	@ movhi
 21684 0080 B3F57A7F 		cmp	r3, #1000
 21685 0084 EFD9     		bls	.L825
 21686              	.L824:
2861:..\src/command_processing.c ****     
2862:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21687              		.loc 1 2862 0 is_stmt 1
 21688 0086 0120     		movs	r0, #1
 21689 0088 FFF7FEFF 		bl	RS485_CTS_Write
2863:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21690              		.loc 1 2863 0
 21691 008c 0020     		movs	r0, #0
 21692 008e FFF7FEFF 		bl	RS485_CTS_Write
2864:..\src/command_processing.c **** }
 21693              		.loc 1 2864 0
 21694 0092 00BF     		nop
 21695 0094 0837     		adds	r7, r7, #8
 21696              		.cfi_def_cfa_offset 8
 21697 0096 BD46     		mov	sp, r7
 21698              		.cfi_def_cfa_register 13
 21699              		@ sp needed
 21700 0098 80BD     		pop	{r7, pc}
 21701              	.L827:
 21702 009a 00BF     		.align	2
 21703              	.L826:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 475


 21704 009c 00000000 		.word	i.11227
 21705              		.cfi_endproc
 21706              	.LFE80:
 21707              		.size	commWriteID, .-commWriteID
 21708              		.section	.text.LCRChecksum,"ax",%progbits
 21709              		.align	2
 21710              		.global	LCRChecksum
 21711              		.thumb
 21712              		.thumb_func
 21713              		.type	LCRChecksum, %function
 21714              	LCRChecksum:
 21715              	.LFB81:
2865:..\src/command_processing.c **** 
2866:..\src/command_processing.c **** //==============================================================================
2867:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2868:..\src/command_processing.c **** //==============================================================================
2869:..\src/command_processing.c **** 
2870:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2871:..\src/command_processing.c **** 
2872:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21716              		.loc 1 2872 0
 21717              		.cfi_startproc
 21718              		@ args = 0, pretend = 0, frame = 16
 21719              		@ frame_needed = 1, uses_anonymous_args = 0
 21720              		@ link register save eliminated.
 21721 0000 80B4     		push	{r7}
 21722              		.cfi_def_cfa_offset 4
 21723              		.cfi_offset 7, -4
 21724 0002 85B0     		sub	sp, sp, #20
 21725              		.cfi_def_cfa_offset 24
 21726 0004 00AF     		add	r7, sp, #0
 21727              		.cfi_def_cfa_register 7
 21728 0006 7860     		str	r0, [r7, #4]
 21729 0008 0B46     		mov	r3, r1
 21730 000a FB70     		strb	r3, [r7, #3]
2873:..\src/command_processing.c ****     
2874:..\src/command_processing.c ****     uint8 CYDATA i;
2875:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21731              		.loc 1 2875 0
 21732 000c 0023     		movs	r3, #0
 21733 000e BB73     		strb	r3, [r7, #14]
2876:..\src/command_processing.c ****     
2877:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 21734              		.loc 1 2877 0
 21735 0010 0023     		movs	r3, #0
 21736 0012 FB73     		strb	r3, [r7, #15]
 21737 0014 09E0     		b	.L829
 21738              	.L830:
2878:..\src/command_processing.c ****        checksum ^= data_array[i];
 21739              		.loc 1 2878 0 discriminator 3
 21740 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21741 0018 7A68     		ldr	r2, [r7, #4]
 21742 001a 1344     		add	r3, r3, r2
 21743 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 21744 001e BB7B     		ldrb	r3, [r7, #14]
 21745 0020 5340     		eors	r3, r3, r2
 21746 0022 BB73     		strb	r3, [r7, #14]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 476


2877:..\src/command_processing.c ****        checksum ^= data_array[i];
 21747              		.loc 1 2877 0 discriminator 3
 21748 0024 FB7B     		ldrb	r3, [r7, #15]
 21749 0026 0133     		adds	r3, r3, #1
 21750 0028 FB73     		strb	r3, [r7, #15]
 21751              	.L829:
2877:..\src/command_processing.c ****        checksum ^= data_array[i];
 21752              		.loc 1 2877 0 is_stmt 0 discriminator 1
 21753 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21754 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 21755 002e 9A42     		cmp	r2, r3
 21756 0030 F1D3     		bcc	.L830
2879:..\src/command_processing.c ****   
2880:..\src/command_processing.c ****     return checksum;
 21757              		.loc 1 2880 0 is_stmt 1
 21758 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2881:..\src/command_processing.c **** }
 21759              		.loc 1 2881 0
 21760 0034 1846     		mov	r0, r3
 21761 0036 1437     		adds	r7, r7, #20
 21762              		.cfi_def_cfa_offset 4
 21763 0038 BD46     		mov	sp, r7
 21764              		.cfi_def_cfa_register 13
 21765              		@ sp needed
 21766 003a 80BC     		pop	{r7}
 21767              		.cfi_restore 7
 21768              		.cfi_def_cfa_offset 0
 21769 003c 7047     		bx	lr
 21770              		.cfi_endproc
 21771              	.LFE81:
 21772              		.size	LCRChecksum, .-LCRChecksum
 21773 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 21774              		.align	2
 21775              		.global	sendAcknowledgment
 21776              		.thumb
 21777              		.thumb_func
 21778              		.type	sendAcknowledgment, %function
 21779              	sendAcknowledgment:
 21780              	.LFB82:
2882:..\src/command_processing.c **** 
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c **** //==============================================================================
2885:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2886:..\src/command_processing.c **** //==============================================================================
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 21781              		.loc 1 2888 0
 21782              		.cfi_startproc
 21783              		@ args = 0, pretend = 0, frame = 16
 21784              		@ frame_needed = 1, uses_anonymous_args = 0
 21785 0000 80B5     		push	{r7, lr}
 21786              		.cfi_def_cfa_offset 8
 21787              		.cfi_offset 7, -8
 21788              		.cfi_offset 14, -4
 21789 0002 84B0     		sub	sp, sp, #16
 21790              		.cfi_def_cfa_offset 24
 21791 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 477


 21792              		.cfi_def_cfa_register 7
 21793 0006 0346     		mov	r3, r0
 21794 0008 FB71     		strb	r3, [r7, #7]
2889:..\src/command_processing.c ****     int packet_lenght = 2;
 21795              		.loc 1 2889 0
 21796 000a 0223     		movs	r3, #2
 21797 000c FB60     		str	r3, [r7, #12]
2890:..\src/command_processing.c ****     uint8 packet_data[2];
2891:..\src/command_processing.c **** 
2892:..\src/command_processing.c ****     packet_data[0] = value;
 21798              		.loc 1 2892 0
 21799 000e FB79     		ldrb	r3, [r7, #7]
 21800 0010 3B72     		strb	r3, [r7, #8]
2893:..\src/command_processing.c ****     packet_data[1] = value;
 21801              		.loc 1 2893 0
 21802 0012 FB79     		ldrb	r3, [r7, #7]
 21803 0014 7B72     		strb	r3, [r7, #9]
2894:..\src/command_processing.c **** 
2895:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 21804              		.loc 1 2895 0
 21805 0016 FB68     		ldr	r3, [r7, #12]
 21806 0018 9AB2     		uxth	r2, r3
 21807 001a 07F10803 		add	r3, r7, #8
 21808 001e 1146     		mov	r1, r2
 21809 0020 1846     		mov	r0, r3
 21810 0022 FFF7FEFF 		bl	commWrite
2896:..\src/command_processing.c **** }
 21811              		.loc 1 2896 0
 21812 0026 00BF     		nop
 21813 0028 1037     		adds	r7, r7, #16
 21814              		.cfi_def_cfa_offset 8
 21815 002a BD46     		mov	sp, r7
 21816              		.cfi_def_cfa_register 13
 21817              		@ sp needed
 21818 002c 80BD     		pop	{r7, pc}
 21819              		.cfi_endproc
 21820              	.LFE82:
 21821              		.size	sendAcknowledgment, .-sendAcknowledgment
 21822 002e 00BF     		.section	.text.memStore,"ax",%progbits
 21823              		.align	2
 21824              		.global	memStore
 21825              		.thumb
 21826              		.thumb_func
 21827              		.type	memStore, %function
 21828              	memStore:
 21829              	.LFB83:
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c **** //==============================================================================
2899:..\src/command_processing.c **** //                                                                  STORE MEMORY
2900:..\src/command_processing.c **** //==============================================================================
2901:..\src/command_processing.c **** 
2902:..\src/command_processing.c **** 
2903:..\src/command_processing.c **** uint8 memStore(int displacement)
2904:..\src/command_processing.c **** {
 21830              		.loc 1 2904 0
 21831              		.cfi_startproc
 21832              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 478


 21833              		@ frame_needed = 1, uses_anonymous_args = 0
 21834 0000 80B5     		push	{r7, lr}
 21835              		.cfi_def_cfa_offset 8
 21836              		.cfi_offset 7, -8
 21837              		.cfi_offset 14, -4
 21838 0002 86B0     		sub	sp, sp, #24
 21839              		.cfi_def_cfa_offset 32
 21840 0004 00AF     		add	r7, sp, #0
 21841              		.cfi_def_cfa_register 7
 21842 0006 7860     		str	r0, [r7, #4]
2905:..\src/command_processing.c ****     int i;  // iterator
2906:..\src/command_processing.c ****     uint8 writeStatus;
2907:..\src/command_processing.c ****     int pages;
2908:..\src/command_processing.c ****     uint8 ret_val = 1;
 21843              		.loc 1 2908 0
 21844 0008 0123     		movs	r3, #1
 21845 000a FB74     		strb	r3, [r7, #19]
2909:..\src/command_processing.c **** 
2910:..\src/command_processing.c ****     // Disable Interrupt
2911:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 21846              		.loc 1 2911 0
 21847 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2912:..\src/command_processing.c **** 
2913:..\src/command_processing.c ****     // Stop motor
2914:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 21848              		.loc 1 2914 0
 21849 0010 0020     		movs	r0, #0
 21850 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2915:..\src/command_processing.c **** 
2916:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2917:..\src/command_processing.c ****     CySetTemp();
 21851              		.loc 1 2917 0
 21852 0016 FFF7FEFF 		bl	CySetTemp
2918:..\src/command_processing.c **** 
2919:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 21853              		.loc 1 2919 0
 21854 001a 1D4A     		ldr	r2, .L839
 21855 001c 1D4B     		ldr	r3, .L839+4
 21856 001e 1046     		mov	r0, r2
 21857 0020 1946     		mov	r1, r3
 21858 0022 4FF43D73 		mov	r3, #756
 21859 0026 1A46     		mov	r2, r3
 21860 0028 FFF7FEFF 		bl	memcpy
2920:..\src/command_processing.c **** 
2921:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 21861              		.loc 1 2921 0
 21862 002c 3023     		movs	r3, #48
 21863 002e FB60     		str	r3, [r7, #12]
2922:..\src/command_processing.c **** 
2923:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 21864              		.loc 1 2923 0
 21865 0030 0023     		movs	r3, #0
 21866 0032 7B61     		str	r3, [r7, #20]
 21867 0034 18E0     		b	.L834
 21868              	.L837:
2924:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21869              		.loc 1 2924 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 479


 21870 0036 7B69     		ldr	r3, [r7, #20]
 21871 0038 1B01     		lsls	r3, r3, #4
 21872 003a 1A46     		mov	r2, r3
 21873 003c 154B     		ldr	r3, .L839+4
 21874 003e D018     		adds	r0, r2, r3
 21875 0040 7B69     		ldr	r3, [r7, #20]
 21876 0042 DAB2     		uxtb	r2, r3
 21877 0044 7B68     		ldr	r3, [r7, #4]
 21878 0046 DBB2     		uxtb	r3, r3
 21879 0048 1344     		add	r3, r3, r2
 21880 004a DBB2     		uxtb	r3, r3
 21881 004c 1946     		mov	r1, r3
 21882 004e FFF7FEFF 		bl	EEPROM_Write
 21883 0052 0346     		mov	r3, r0
 21884 0054 FB72     		strb	r3, [r7, #11]
2925:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 21885              		.loc 1 2925 0
 21886 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 21887 0058 002B     		cmp	r3, #0
 21888 005a 02D0     		beq	.L835
2926:..\src/command_processing.c ****             ret_val = 0;
 21889              		.loc 1 2926 0
 21890 005c 0023     		movs	r3, #0
 21891 005e FB74     		strb	r3, [r7, #19]
2927:..\src/command_processing.c ****             break;
 21892              		.loc 1 2927 0
 21893 0060 06E0     		b	.L836
 21894              	.L835:
2923:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21895              		.loc 1 2923 0 discriminator 2
 21896 0062 7B69     		ldr	r3, [r7, #20]
 21897 0064 0133     		adds	r3, r3, #1
 21898 0066 7B61     		str	r3, [r7, #20]
 21899              	.L834:
2923:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 21900              		.loc 1 2923 0 is_stmt 0 discriminator 1
 21901 0068 7A69     		ldr	r2, [r7, #20]
 21902 006a FB68     		ldr	r3, [r7, #12]
 21903 006c 9A42     		cmp	r2, r3
 21904 006e E2DB     		blt	.L837
 21905              	.L836:
2928:..\src/command_processing.c ****         }
2929:..\src/command_processing.c ****     }
2930:..\src/command_processing.c **** 
2931:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 21906              		.loc 1 2931 0 is_stmt 1
 21907 0070 084A     		ldr	r2, .L839+4
 21908 0072 074B     		ldr	r3, .L839
 21909 0074 1046     		mov	r0, r2
 21910 0076 1946     		mov	r1, r3
 21911 0078 4FF43D73 		mov	r3, #756
 21912 007c 1A46     		mov	r2, r3
 21913 007e FFF7FEFF 		bl	memcpy
2932:..\src/command_processing.c **** 
2933:..\src/command_processing.c ****     // Re-Enable Interrupt
2934:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 21914              		.loc 1 2934 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 480


 21915 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2935:..\src/command_processing.c **** 
2936:..\src/command_processing.c ****     return ret_val;
 21916              		.loc 1 2936 0
 21917 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2937:..\src/command_processing.c **** }
 21918              		.loc 1 2937 0
 21919 0088 1846     		mov	r0, r3
 21920 008a 1837     		adds	r7, r7, #24
 21921              		.cfi_def_cfa_offset 8
 21922 008c BD46     		mov	sp, r7
 21923              		.cfi_def_cfa_register 13
 21924              		@ sp needed
 21925 008e 80BD     		pop	{r7, pc}
 21926              	.L840:
 21927              		.align	2
 21928              	.L839:
 21929 0090 00000000 		.word	c_mem
 21930 0094 00000000 		.word	g_mem
 21931              		.cfi_endproc
 21932              	.LFE83:
 21933              		.size	memStore, .-memStore
 21934              		.section	.text.memRecall,"ax",%progbits
 21935              		.align	2
 21936              		.global	memRecall
 21937              		.thumb
 21938              		.thumb_func
 21939              		.type	memRecall, %function
 21940              	memRecall:
 21941              	.LFB84:
2938:..\src/command_processing.c **** 
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** //==============================================================================
2941:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2942:..\src/command_processing.c **** //==============================================================================
2943:..\src/command_processing.c **** 
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c **** void memRecall(void)
2946:..\src/command_processing.c **** {
 21942              		.loc 1 2946 0
 21943              		.cfi_startproc
 21944              		@ args = 0, pretend = 0, frame = 8
 21945              		@ frame_needed = 1, uses_anonymous_args = 0
 21946 0000 80B5     		push	{r7, lr}
 21947              		.cfi_def_cfa_offset 8
 21948              		.cfi_offset 7, -8
 21949              		.cfi_offset 14, -4
 21950 0002 82B0     		sub	sp, sp, #8
 21951              		.cfi_def_cfa_offset 16
 21952 0004 00AF     		add	r7, sp, #0
 21953              		.cfi_def_cfa_register 7
2947:..\src/command_processing.c ****     uint16 i;
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21954              		.loc 1 2949 0
 21955 0006 0023     		movs	r3, #0
 21956 0008 FB80     		strh	r3, [r7, #6]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 481


 21957 000a 0CE0     		b	.L842
 21958              	.L843:
2950:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21959              		.loc 1 2950 0 discriminator 3
 21960 000c FB88     		ldrh	r3, [r7, #6]
 21961 000e 184A     		ldr	r2, .L847
 21962 0010 1344     		add	r3, r3, r2
 21963 0012 184A     		ldr	r2, .L847+4
 21964 0014 1168     		ldr	r1, [r2]
 21965 0016 FA88     		ldrh	r2, [r7, #6]
 21966 0018 0A44     		add	r2, r2, r1
 21967 001a 1278     		ldrb	r2, [r2]
 21968 001c D2B2     		uxtb	r2, r2
 21969 001e 1A70     		strb	r2, [r3]
2949:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21970              		.loc 1 2949 0 discriminator 3
 21971 0020 FB88     		ldrh	r3, [r7, #6]
 21972 0022 0133     		adds	r3, r3, #1
 21973 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 21974              	.L842:
2949:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21975              		.loc 1 2949 0 is_stmt 0 discriminator 1
 21976 0026 FB88     		ldrh	r3, [r7, #6]
 21977 0028 B3F53D7F 		cmp	r3, #756
 21978 002c EED3     		bcc	.L843
2951:..\src/command_processing.c ****     }
2952:..\src/command_processing.c ****     
2953:..\src/command_processing.c ****     // Recall saved user_emg structure
2954:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 21979              		.loc 1 2954 0 is_stmt 1
 21980 002e 104B     		ldr	r3, .L847
 21981 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21982 0034 5B01     		lsls	r3, r3, #5
 21983 0036 03F51273 		add	r3, r3, #584
 21984 003a 0D4A     		ldr	r2, .L847
 21985 003c 1344     		add	r3, r3, r2
 21986 003e 1022     		movs	r2, #16
 21987 0040 1946     		mov	r1, r3
 21988 0042 0D48     		ldr	r0, .L847+8
 21989 0044 FFF7FEFF 		bl	memcpy
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c ****     //check for initialization
2957:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21990              		.loc 1 2957 0
 21991 0048 094B     		ldr	r3, .L847
 21992 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21993 004c 002B     		cmp	r3, #0
 21994 004e 02D1     		bne	.L844
2958:..\src/command_processing.c ****         memRestore();
 21995              		.loc 1 2958 0
 21996 0050 FFF7FEFF 		bl	memRestore
2959:..\src/command_processing.c ****     } else {
2960:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2961:..\src/command_processing.c ****     }        
2962:..\src/command_processing.c **** }
 21997              		.loc 1 2962 0
 21998 0054 08E0     		b	.L846
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 482


 21999              	.L844:
2960:..\src/command_processing.c ****     }        
 22000              		.loc 1 2960 0
 22001 0056 094A     		ldr	r2, .L847+12
 22002 0058 054B     		ldr	r3, .L847
 22003 005a 1046     		mov	r0, r2
 22004 005c 1946     		mov	r1, r3
 22005 005e 4FF43D73 		mov	r3, #756
 22006 0062 1A46     		mov	r2, r3
 22007 0064 FFF7FEFF 		bl	memcpy
 22008              	.L846:
 22009              		.loc 1 2962 0
 22010 0068 00BF     		nop
 22011 006a 0837     		adds	r7, r7, #8
 22012              		.cfi_def_cfa_offset 8
 22013 006c BD46     		mov	sp, r7
 22014              		.cfi_def_cfa_register 13
 22015              		@ sp needed
 22016 006e 80BD     		pop	{r7, pc}
 22017              	.L848:
 22018              		.align	2
 22019              	.L847:
 22020 0070 00000000 		.word	g_mem
 22021 0074 00000000 		.word	EEPROM_ADDR
 22022 0078 F0010000 		.word	g_mem+496
 22023 007c 00000000 		.word	c_mem
 22024              		.cfi_endproc
 22025              	.LFE84:
 22026              		.size	memRecall, .-memRecall
 22027              		.section	.text.memRestore,"ax",%progbits
 22028              		.align	2
 22029              		.global	memRestore
 22030              		.thumb
 22031              		.thumb_func
 22032              		.type	memRestore, %function
 22033              	memRestore:
 22034              	.LFB85:
2963:..\src/command_processing.c **** 
2964:..\src/command_processing.c **** 
2965:..\src/command_processing.c **** //==============================================================================
2966:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2967:..\src/command_processing.c **** //==============================================================================
2968:..\src/command_processing.c **** 
2969:..\src/command_processing.c **** 
2970:..\src/command_processing.c **** uint8 memRestore(void) {
 22035              		.loc 1 2970 0
 22036              		.cfi_startproc
 22037              		@ args = 0, pretend = 0, frame = 8
 22038              		@ frame_needed = 1, uses_anonymous_args = 0
 22039 0000 80B5     		push	{r7, lr}
 22040              		.cfi_def_cfa_offset 8
 22041              		.cfi_offset 7, -8
 22042              		.cfi_offset 14, -4
 22043 0002 82B0     		sub	sp, sp, #8
 22044              		.cfi_def_cfa_offset 16
 22045 0004 00AF     		add	r7, sp, #0
 22046              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 483


2971:..\src/command_processing.c ****     uint16 i;
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22047              		.loc 1 2973 0
 22048 0006 0023     		movs	r3, #0
 22049 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22050 000a 0EE0     		b	.L850
 22051              	.L851:
2974:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22052              		.loc 1 2974 0 discriminator 3
 22053 000c FB88     		ldrh	r3, [r7, #6]
 22054 000e 114A     		ldr	r2, .L854
 22055 0010 1344     		add	r3, r3, r2
 22056 0012 114A     		ldr	r2, .L854+4
 22057 0014 1168     		ldr	r1, [r2]
 22058 0016 FA88     		ldrh	r2, [r7, #6]
 22059 0018 02F54872 		add	r2, r2, #800
 22060 001c 0A44     		add	r2, r2, r1
 22061 001e 1278     		ldrb	r2, [r2]
 22062 0020 D2B2     		uxtb	r2, r2
 22063 0022 1A70     		strb	r2, [r3]
2973:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22064              		.loc 1 2973 0 discriminator 3
 22065 0024 FB88     		ldrh	r3, [r7, #6]
 22066 0026 0133     		adds	r3, r3, #1
 22067 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22068              	.L850:
2973:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22069              		.loc 1 2973 0 is_stmt 0 discriminator 1
 22070 002a FB88     		ldrh	r3, [r7, #6]
 22071 002c B3F53D7F 		cmp	r3, #756
 22072 0030 ECD3     		bcc	.L851
2975:..\src/command_processing.c ****     }
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c ****     //check for initialization
2978:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22073              		.loc 1 2978 0 is_stmt 1
 22074 0032 084B     		ldr	r3, .L854
 22075 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22076 0036 002B     		cmp	r3, #0
 22077 0038 03D1     		bne	.L852
2979:..\src/command_processing.c ****         return memInit();
 22078              		.loc 1 2979 0
 22079 003a FFF7FEFF 		bl	memInit
 22080 003e 0346     		mov	r3, r0
 22081 0040 03E0     		b	.L853
 22082              	.L852:
2980:..\src/command_processing.c ****     } else {
2981:..\src/command_processing.c ****         return memStore(0);
 22083              		.loc 1 2981 0
 22084 0042 0020     		movs	r0, #0
 22085 0044 FFF7FEFF 		bl	memStore
 22086 0048 0346     		mov	r3, r0
 22087              	.L853:
2982:..\src/command_processing.c ****     }  
2983:..\src/command_processing.c **** }
 22088              		.loc 1 2983 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 484


 22089 004a 1846     		mov	r0, r3
 22090 004c 0837     		adds	r7, r7, #8
 22091              		.cfi_def_cfa_offset 8
 22092 004e BD46     		mov	sp, r7
 22093              		.cfi_def_cfa_register 13
 22094              		@ sp needed
 22095 0050 80BD     		pop	{r7, pc}
 22096              	.L855:
 22097 0052 00BF     		.align	2
 22098              	.L854:
 22099 0054 00000000 		.word	g_mem
 22100 0058 00000000 		.word	EEPROM_ADDR
 22101              		.cfi_endproc
 22102              	.LFE85:
 22103              		.size	memRestore, .-memRestore
 22104              		.section	.rodata
 22105 1f9f 00       		.align	2
 22106              	.LC305:
 22107 1fa0 47454E30 		.ascii	"GEN001\000"
 22107      303100
 22108              		.section	.text.memInit,"ax",%progbits
 22109              		.align	2
 22110              		.global	memInit
 22111              		.thumb
 22112              		.thumb_func
 22113              		.type	memInit, %function
 22114              	memInit:
 22115              	.LFB86:
2984:..\src/command_processing.c **** 
2985:..\src/command_processing.c **** //==============================================================================
2986:..\src/command_processing.c **** //                                                                   MEMORY INIT
2987:..\src/command_processing.c **** //==============================================================================
2988:..\src/command_processing.c **** 
2989:..\src/command_processing.c **** uint8 memInit(void)
2990:..\src/command_processing.c **** {
 22116              		.loc 1 2990 0
 22117              		.cfi_startproc
 22118              		@ args = 0, pretend = 0, frame = 8
 22119              		@ frame_needed = 1, uses_anonymous_args = 0
 22120 0000 80B5     		push	{r7, lr}
 22121              		.cfi_def_cfa_offset 8
 22122              		.cfi_offset 7, -8
 22123              		.cfi_offset 14, -4
 22124 0002 82B0     		sub	sp, sp, #8
 22125              		.cfi_def_cfa_offset 16
 22126 0004 00AF     		add	r7, sp, #0
 22127              		.cfi_def_cfa_register 7
2991:..\src/command_processing.c ****     uint8 i, j;
2992:..\src/command_processing.c **** 
2993:..\src/command_processing.c ****     //initialize memory settings
2994:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22128              		.loc 1 2994 0
 22129 0006 0023     		movs	r3, #0
 22130 0008 FB71     		strb	r3, [r7, #7]
 22131 000a 07E0     		b	.L857
 22132              	.L858:
2995:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 485


 22133              		.loc 1 2995 0 discriminator 3
 22134 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22135 000e B44A     		ldr	r2, .L883
 22136 0010 1344     		add	r3, r3, r2
 22137 0012 0022     		movs	r2, #0
 22138 0014 5A70     		strb	r2, [r3, #1]
2994:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22139              		.loc 1 2994 0 discriminator 3
 22140 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22141 0018 0133     		adds	r3, r3, #1
 22142 001a FB71     		strb	r3, [r7, #7]
 22143              	.L857:
2994:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22144              		.loc 1 2994 0 is_stmt 0 discriminator 1
 22145 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22146 001e 0E2B     		cmp	r3, #14
 22147 0020 F4D9     		bls	.L858
2996:..\src/command_processing.c ****     }
2997:..\src/command_processing.c ****         
2998:..\src/command_processing.c ****     // DEV STRUCT
2999:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22148              		.loc 1 2999 0 is_stmt 1
 22149 0022 AF4B     		ldr	r3, .L883
 22150 0024 0122     		movs	r2, #1
 22151 0026 83F8A020 		strb	r2, [r3, #160]
3000:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22152              		.loc 1 3000 0
 22153 002a AD4B     		ldr	r3, .L883
 22154 002c 0022     		movs	r2, #0
 22155 002e 83F8A720 		strb	r2, [r3, #167]
3001:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22156              		.loc 1 3001 0
 22157 0032 AB4B     		ldr	r3, .L883
 22158 0034 0122     		movs	r2, #1
 22159 0036 83F8AC20 		strb	r2, [r3, #172]
3002:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22160              		.loc 1 3002 0
 22161 003a A94B     		ldr	r3, .L883
 22162 003c 0022     		movs	r2, #0
 22163 003e 83F8A820 		strb	r2, [r3, #168]
3003:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22164              		.loc 1 3003 0
 22165 0042 FFF7FEFF 		bl	reset_counters
3004:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22166              		.loc 1 3004 0
 22167 0046 0023     		movs	r3, #0
 22168 0048 FB71     		strb	r3, [r7, #7]
 22169 004a 08E0     		b	.L859
 22170              	.L860:
3005:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22171              		.loc 1 3005 0 discriminator 3
 22172 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22173 004e A44A     		ldr	r2, .L883
 22174 0050 1344     		add	r3, r3, r2
 22175 0052 0022     		movs	r2, #0
 22176 0054 83F86020 		strb	r2, [r3, #96]
3004:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 486


 22177              		.loc 1 3004 0 discriminator 3
 22178 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22179 005a 0133     		adds	r3, r3, #1
 22180 005c FB71     		strb	r3, [r7, #7]
 22181              	.L859:
3004:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22182              		.loc 1 3004 0 is_stmt 0 discriminator 1
 22183 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22184 0060 3F2B     		cmp	r3, #63
 22185 0062 F3D9     		bls	.L860
3006:..\src/command_processing.c ****     }
3007:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22186              		.loc 1 3007 0 is_stmt 1
 22187 0064 9E4B     		ldr	r3, .L883
 22188 0066 0022     		movs	r2, #0
 22189 0068 83F8A920 		strb	r2, [r3, #169]
3008:..\src/command_processing.c **** 
3009:..\src/command_processing.c ****     // MOTOR STRUCT
3010:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22190              		.loc 1 3010 0
 22191 006c 0023     		movs	r3, #0
 22192 006e FB71     		strb	r3, [r7, #7]
 22193 0070 15E1     		b	.L861
 22194              	.L864:
3011:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22195              		.loc 1 3011 0
 22196 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22197 0074 9A49     		ldr	r1, .L883
 22198 0076 1346     		mov	r3, r2
 22199 0078 DB00     		lsls	r3, r3, #3
 22200 007a 9B1A     		subs	r3, r3, r2
 22201 007c 1B01     		lsls	r3, r3, #4
 22202 007e 0B44     		add	r3, r3, r1
 22203 0080 B033     		adds	r3, r3, #176
 22204 0082 40F23942 		movw	r2, #1081
 22205 0086 1A60     		str	r2, [r3]
3012:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22206              		.loc 1 3012 0
 22207 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22208 008a 9549     		ldr	r1, .L883
 22209 008c 1346     		mov	r3, r2
 22210 008e DB00     		lsls	r3, r3, #3
 22211 0090 9B1A     		subs	r3, r3, r2
 22212 0092 1B01     		lsls	r3, r3, #4
 22213 0094 0B44     		add	r3, r3, r1
 22214 0096 B433     		adds	r3, r3, #180
 22215 0098 0022     		movs	r2, #0
 22216 009a 1A60     		str	r2, [r3]
3013:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22217              		.loc 1 3013 0
 22218 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22219 009e 9049     		ldr	r1, .L883
 22220 00a0 1346     		mov	r3, r2
 22221 00a2 DB00     		lsls	r3, r3, #3
 22222 00a4 9B1A     		subs	r3, r3, r2
 22223 00a6 1B01     		lsls	r3, r3, #4
 22224 00a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 487


 22225 00aa B833     		adds	r3, r3, #184
 22226 00ac 4FF4E572 		mov	r2, #458
 22227 00b0 1A60     		str	r2, [r3]
3014:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22228              		.loc 1 3014 0
 22229 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22230 00b4 8A49     		ldr	r1, .L883
 22231 00b6 1346     		mov	r3, r2
 22232 00b8 DB00     		lsls	r3, r3, #3
 22233 00ba 9B1A     		subs	r3, r3, r2
 22234 00bc 1B01     		lsls	r3, r3, #4
 22235 00be 0B44     		add	r3, r3, r1
 22236 00c0 BC33     		adds	r3, r3, #188
 22237 00c2 4FF48032 		mov	r2, #65536
 22238 00c6 1A60     		str	r2, [r3]
3015:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22239              		.loc 1 3015 0
 22240 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22241 00ca 8549     		ldr	r1, .L883
 22242 00cc 1346     		mov	r3, r2
 22243 00ce DB00     		lsls	r3, r3, #3
 22244 00d0 9B1A     		subs	r3, r3, r2
 22245 00d2 1B01     		lsls	r3, r3, #4
 22246 00d4 0B44     		add	r3, r3, r1
 22247 00d6 C033     		adds	r3, r3, #192
 22248 00d8 4122     		movs	r2, #65
 22249 00da 1A60     		str	r2, [r3]
3016:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22250              		.loc 1 3016 0
 22251 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22252 00de 8049     		ldr	r1, .L883
 22253 00e0 1346     		mov	r3, r2
 22254 00e2 DB00     		lsls	r3, r3, #3
 22255 00e4 9B1A     		subs	r3, r3, r2
 22256 00e6 1B01     		lsls	r3, r3, #4
 22257 00e8 0B44     		add	r3, r3, r1
 22258 00ea C433     		adds	r3, r3, #196
 22259 00ec 0022     		movs	r2, #0
 22260 00ee 1A60     		str	r2, [r3]
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22261              		.loc 1 3018 0
 22262 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22263 00f2 7B49     		ldr	r1, .L883
 22264 00f4 1346     		mov	r3, r2
 22265 00f6 DB00     		lsls	r3, r3, #3
 22266 00f8 9B1A     		subs	r3, r3, r2
 22267 00fa 1B01     		lsls	r3, r3, #4
 22268 00fc 0B44     		add	r3, r3, r1
 22269 00fe C833     		adds	r3, r3, #200
 22270 0100 41F69912 		movw	r2, #6553
 22271 0104 1A60     		str	r2, [r3]
3019:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22272              		.loc 1 3019 0
 22273 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22274 0108 7549     		ldr	r1, .L883
 22275 010a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 488


 22276 010c DB00     		lsls	r3, r3, #3
 22277 010e 9B1A     		subs	r3, r3, r2
 22278 0110 1B01     		lsls	r3, r3, #4
 22279 0112 0B44     		add	r3, r3, r1
 22280 0114 CC33     		adds	r3, r3, #204
 22281 0116 0022     		movs	r2, #0
 22282 0118 1A60     		str	r2, [r3]
3020:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22283              		.loc 1 3020 0
 22284 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22285 011c 7049     		ldr	r1, .L883
 22286 011e 1346     		mov	r3, r2
 22287 0120 DB00     		lsls	r3, r3, #3
 22288 0122 9B1A     		subs	r3, r3, r2
 22289 0124 1B01     		lsls	r3, r3, #4
 22290 0126 0B44     		add	r3, r3, r1
 22291 0128 D033     		adds	r3, r3, #208
 22292 012a 0022     		movs	r2, #0
 22293 012c 1A60     		str	r2, [r3]
3021:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22294              		.loc 1 3021 0
 22295 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22296 0130 6B49     		ldr	r1, .L883
 22297 0132 1346     		mov	r3, r2
 22298 0134 DB00     		lsls	r3, r3, #3
 22299 0136 9B1A     		subs	r3, r3, r2
 22300 0138 1B01     		lsls	r3, r3, #4
 22301 013a 0B44     		add	r3, r3, r1
 22302 013c D433     		adds	r3, r3, #212
 22303 013e 44F6CC42 		movw	r2, #19660
 22304 0142 1A60     		str	r2, [r3]
3022:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22305              		.loc 1 3022 0
 22306 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22307 0146 6649     		ldr	r1, .L883
 22308 0148 1346     		mov	r3, r2
 22309 014a DB00     		lsls	r3, r3, #3
 22310 014c 9B1A     		subs	r3, r3, r2
 22311 014e 1B01     		lsls	r3, r3, #4
 22312 0150 0B44     		add	r3, r3, r1
 22313 0152 D833     		adds	r3, r3, #216
 22314 0154 0D22     		movs	r2, #13
 22315 0156 1A60     		str	r2, [r3]
3023:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22316              		.loc 1 3023 0
 22317 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22318 015a 6149     		ldr	r1, .L883
 22319 015c 1346     		mov	r3, r2
 22320 015e DB00     		lsls	r3, r3, #3
 22321 0160 9B1A     		subs	r3, r3, r2
 22322 0162 1B01     		lsls	r3, r3, #4
 22323 0164 0B44     		add	r3, r3, r1
 22324 0166 DC33     		adds	r3, r3, #220
 22325 0168 0022     		movs	r2, #0
 22326 016a 1A60     		str	r2, [r3]
3024:..\src/command_processing.c **** 
3025:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 489


 22327              		.loc 1 3025 0
 22328 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22329 016e 5C49     		ldr	r1, .L883
 22330 0170 1346     		mov	r3, r2
 22331 0172 DB00     		lsls	r3, r3, #3
 22332 0174 9B1A     		subs	r3, r3, r2
 22333 0176 1B01     		lsls	r3, r3, #4
 22334 0178 0B44     		add	r3, r3, r1
 22335 017a E033     		adds	r3, r3, #224
 22336 017c 0122     		movs	r2, #1
 22337 017e 1A70     		strb	r2, [r3]
3026:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22338              		.loc 1 3026 0
 22339 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22340 0182 5749     		ldr	r1, .L883
 22341 0184 1346     		mov	r3, r2
 22342 0186 DB00     		lsls	r3, r3, #3
 22343 0188 9B1A     		subs	r3, r3, r2
 22344 018a 1B01     		lsls	r3, r3, #4
 22345 018c 0B44     		add	r3, r3, r1
 22346 018e E133     		adds	r3, r3, #225
 22347 0190 0022     		movs	r2, #0
 22348 0192 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22349              		.loc 1 3027 0
 22350 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22351 0196 5249     		ldr	r1, .L883
 22352 0198 1346     		mov	r3, r2
 22353 019a DB00     		lsls	r3, r3, #3
 22354 019c 9B1A     		subs	r3, r3, r2
 22355 019e 1B01     		lsls	r3, r3, #4
 22356 01a0 0B44     		add	r3, r3, r1
 22357 01a2 E233     		adds	r3, r3, #226
 22358 01a4 0022     		movs	r2, #0
 22359 01a6 1A70     		strb	r2, [r3]
3028:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22360              		.loc 1 3028 0
 22361 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22362 01aa 4D49     		ldr	r1, .L883
 22363 01ac 1346     		mov	r3, r2
 22364 01ae DB00     		lsls	r3, r3, #3
 22365 01b0 9B1A     		subs	r3, r3, r2
 22366 01b2 1B01     		lsls	r3, r3, #4
 22367 01b4 0B44     		add	r3, r3, r1
 22368 01b6 03F58773 		add	r3, r3, #270
 22369 01ba 0022     		movs	r2, #0
 22370 01bc 1A70     		strb	r2, [r3]
3029:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22371              		.loc 1 3029 0
 22372 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22373 01c0 4749     		ldr	r1, .L883
 22374 01c2 1346     		mov	r3, r2
 22375 01c4 DB00     		lsls	r3, r3, #3
 22376 01c6 9B1A     		subs	r3, r3, r2
 22377 01c8 1B01     		lsls	r3, r3, #4
 22378 01ca 0B44     		add	r3, r3, r1
 22379 01cc 03F20F13 		addw	r3, r3, #271
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 490


 22380 01d0 0022     		movs	r2, #0
 22381 01d2 1A70     		strb	r2, [r3]
3030:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22382              		.loc 1 3030 0
 22383 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22384 01d6 4249     		ldr	r1, .L883
 22385 01d8 1346     		mov	r3, r2
 22386 01da DB00     		lsls	r3, r3, #3
 22387 01dc 9B1A     		subs	r3, r3, r2
 22388 01de 1B01     		lsls	r3, r3, #4
 22389 01e0 0B44     		add	r3, r3, r1
 22390 01e2 F033     		adds	r3, r3, #240
 22391 01e4 0022     		movs	r2, #0
 22392 01e6 1A60     		str	r2, [r3]
3031:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22393              		.loc 1 3031 0
 22394 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22395 01ea 3D49     		ldr	r1, .L883
 22396 01ec 1346     		mov	r3, r2
 22397 01ee DB00     		lsls	r3, r3, #3
 22398 01f0 9B1A     		subs	r3, r3, r2
 22399 01f2 1B01     		lsls	r3, r3, #4
 22400 01f4 0B44     		add	r3, r3, r1
 22401 01f6 EC33     		adds	r3, r3, #236
 22402 01f8 0022     		movs	r2, #0
 22403 01fa 1A60     		str	r2, [r3]
3032:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22404              		.loc 1 3032 0
 22405 01fc 0023     		movs	r3, #0
 22406 01fe BB71     		strb	r3, [r7, #6]
 22407 0200 10E0     		b	.L862
 22408              	.L863:
3033:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22409              		.loc 1 3033 0 discriminator 3
 22410 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22411 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22412 0206 3648     		ldr	r0, .L883
 22413 0208 1346     		mov	r3, r2
 22414 020a DB00     		lsls	r3, r3, #3
 22415 020c 9B1A     		subs	r3, r3, r2
 22416 020e 9B00     		lsls	r3, r3, #2
 22417 0210 0B44     		add	r3, r3, r1
 22418 0212 3C33     		adds	r3, r3, #60
 22419 0214 9B00     		lsls	r3, r3, #2
 22420 0216 0344     		add	r3, r3, r0
 22421 0218 4FF00002 		mov	r2, #0
 22422 021c 5A60     		str	r2, [r3, #4]	@ float
3032:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22423              		.loc 1 3032 0 discriminator 3
 22424 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22425 0220 0133     		adds	r3, r3, #1
 22426 0222 BB71     		strb	r3, [r7, #6]
 22427              	.L862:
3032:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22428              		.loc 1 3032 0 is_stmt 0 discriminator 1
 22429 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22430 0226 052B     		cmp	r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 491


 22431 0228 EBD9     		bls	.L863
3034:..\src/command_processing.c ****         }
3035:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22432              		.loc 1 3035 0 is_stmt 1 discriminator 2
 22433 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22434 022c 2C49     		ldr	r1, .L883
 22435 022e 1346     		mov	r3, r2
 22436 0230 DB00     		lsls	r3, r3, #3
 22437 0232 9B1A     		subs	r3, r3, r2
 22438 0234 1B01     		lsls	r3, r3, #4
 22439 0236 0B44     		add	r3, r3, r1
 22440 0238 03F58673 		add	r3, r3, #268
 22441 023c 40F2DC52 		movw	r2, #1500
 22442 0240 1A80     		strh	r2, [r3]	@ movhi
3036:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22443              		.loc 1 3036 0 discriminator 2
 22444 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22445 0244 2649     		ldr	r1, .L883
 22446 0246 1346     		mov	r3, r2
 22447 0248 DB00     		lsls	r3, r3, #3
 22448 024a 9B1A     		subs	r3, r3, r2
 22449 024c 1B01     		lsls	r3, r3, #4
 22450 024e 0B44     		add	r3, r3, r1
 22451 0250 03F58873 		add	r3, r3, #272
 22452 0254 FA79     		ldrb	r2, [r7, #7]
 22453 0256 1A70     		strb	r2, [r3]
3037:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22454              		.loc 1 3037 0 discriminator 2
 22455 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22456 025a 2149     		ldr	r1, .L883
 22457 025c 1346     		mov	r3, r2
 22458 025e DB00     		lsls	r3, r3, #3
 22459 0260 9B1A     		subs	r3, r3, r2
 22460 0262 1B01     		lsls	r3, r3, #4
 22461 0264 0B44     		add	r3, r3, r1
 22462 0266 E333     		adds	r3, r3, #227
 22463 0268 0122     		movs	r2, #1
 22464 026a 1A70     		strb	r2, [r3]
3038:..\src/command_processing.c ****         
3039:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22465              		.loc 1 3039 0 discriminator 2
 22466 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22467 026e 1C49     		ldr	r1, .L883
 22468 0270 1346     		mov	r3, r2
 22469 0272 DB00     		lsls	r3, r3, #3
 22470 0274 9B1A     		subs	r3, r3, r2
 22471 0276 1B01     		lsls	r3, r3, #4
 22472 0278 0B44     		add	r3, r3, r1
 22473 027a 03F21113 		addw	r3, r3, #273
 22474 027e 0122     		movs	r2, #1
 22475 0280 1A70     		strb	r2, [r3]
3040:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22476              		.loc 1 3040 0 discriminator 2
 22477 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22478 0284 1649     		ldr	r1, .L883
 22479 0286 1346     		mov	r3, r2
 22480 0288 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 492


 22481 028a 9B1A     		subs	r3, r3, r2
 22482 028c 1B01     		lsls	r3, r3, #4
 22483 028e 0B44     		add	r3, r3, r1
 22484 0290 03F58973 		add	r3, r3, #274
 22485 0294 0022     		movs	r2, #0
 22486 0296 1A70     		strb	r2, [r3]
3010:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22487              		.loc 1 3010 0 discriminator 2
 22488 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22489 029a 0133     		adds	r3, r3, #1
 22490 029c FB71     		strb	r3, [r7, #7]
 22491              	.L861:
3010:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22492              		.loc 1 3010 0 is_stmt 0 discriminator 1
 22493 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22494 02a0 012B     		cmp	r3, #1
 22495 02a2 7FF6E6AE 		bls	.L864
3041:..\src/command_processing.c ****     }
3042:..\src/command_processing.c ****     
3043:..\src/command_processing.c ****     // ENC STRUCT
3044:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22496              		.loc 1 3044 0 is_stmt 1
 22497 02a6 0023     		movs	r3, #0
 22498 02a8 FB71     		strb	r3, [r7, #7]
 22499 02aa 98E0     		b	.L865
 22500              	.L872:
3045:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22501              		.loc 1 3045 0
 22502 02ac 0023     		movs	r3, #0
 22503 02ae BB71     		strb	r3, [r7, #6]
 22504 02b0 0FE0     		b	.L866
 22505              	.L867:
3046:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22506              		.loc 1 3046 0 discriminator 3
 22507 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22508 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22509 02b6 0A48     		ldr	r0, .L883
 22510 02b8 1346     		mov	r3, r2
 22511 02ba 5B00     		lsls	r3, r3, #1
 22512 02bc 1344     		add	r3, r3, r2
 22513 02be 1B01     		lsls	r3, r3, #4
 22514 02c0 0344     		add	r3, r3, r0
 22515 02c2 0B44     		add	r3, r3, r1
 22516 02c4 03F5C873 		add	r3, r3, #400
 22517 02c8 0022     		movs	r2, #0
 22518 02ca 1A70     		strb	r2, [r3]
3045:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22519              		.loc 1 3045 0 discriminator 3
 22520 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22521 02ce 0133     		adds	r3, r3, #1
 22522 02d0 BB71     		strb	r3, [r7, #6]
 22523              	.L866:
3045:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22524              		.loc 1 3045 0 is_stmt 0 discriminator 1
 22525 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22526 02d4 042B     		cmp	r3, #4
 22527 02d6 ECD9     		bls	.L867
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 493


3047:..\src/command_processing.c ****         }
3048:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22528              		.loc 1 3048 0 is_stmt 1
 22529 02d8 0023     		movs	r3, #0
 22530 02da BB71     		strb	r3, [r7, #6]
 22531 02dc 2CE0     		b	.L868
 22532              	.L884:
 22533 02de 00BF     		.align	2
 22534              	.L883:
 22535 02e0 00000000 		.word	g_mem
 22536              	.L869:
3049:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22537              		.loc 1 3049 0 discriminator 3
 22538 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22539 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22540 02e8 C548     		ldr	r0, .L885
 22541 02ea 1346     		mov	r3, r2
 22542 02ec 5B00     		lsls	r3, r3, #1
 22543 02ee 1344     		add	r3, r3, r2
 22544 02f0 1B01     		lsls	r3, r3, #4
 22545 02f2 0344     		add	r3, r3, r0
 22546 02f4 0B44     		add	r3, r3, r1
 22547 02f6 03F29513 		addw	r3, r3, #405
 22548 02fa 0322     		movs	r2, #3
 22549 02fc 1A70     		strb	r2, [r3]
3050:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22550              		.loc 1 3050 0 discriminator 3
 22551 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22552 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22553 0302 BF48     		ldr	r0, .L885
 22554 0304 1346     		mov	r3, r2
 22555 0306 5B00     		lsls	r3, r3, #1
 22556 0308 1344     		add	r3, r3, r2
 22557 030a 9B00     		lsls	r3, r3, #2
 22558 030c 0B44     		add	r3, r3, r1
 22559 030e 6833     		adds	r3, r3, #104
 22560 0310 9B00     		lsls	r3, r3, #2
 22561 0312 0344     		add	r3, r3, r0
 22562 0314 4FF07E52 		mov	r2, #1065353216
 22563 0318 5A60     		str	r2, [r3, #4]	@ float
3051:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22564              		.loc 1 3051 0 discriminator 3
 22565 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22566 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22567 031e B848     		ldr	r0, .L885
 22568 0320 1346     		mov	r3, r2
 22569 0322 5B00     		lsls	r3, r3, #1
 22570 0324 1344     		add	r3, r3, r2
 22571 0326 9B00     		lsls	r3, r3, #2
 22572 0328 0B44     		add	r3, r3, r1
 22573 032a 6633     		adds	r3, r3, #102
 22574 032c 0022     		movs	r2, #0
 22575 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3048:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22576              		.loc 1 3048 0 discriminator 3
 22577 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22578 0334 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 494


 22579 0336 BB71     		strb	r3, [r7, #6]
 22580              	.L868:
3048:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22581              		.loc 1 3048 0 is_stmt 0 discriminator 1
 22582 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22583 033a 022B     		cmp	r3, #2
 22584 033c D2D9     		bls	.L869
3052:..\src/command_processing.c ****         }
3053:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22585              		.loc 1 3053 0 is_stmt 1
 22586 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22587 0340 AF49     		ldr	r1, .L885
 22588 0342 1346     		mov	r3, r2
 22589 0344 5B00     		lsls	r3, r3, #1
 22590 0346 1344     		add	r3, r3, r2
 22591 0348 1B01     		lsls	r3, r3, #4
 22592 034a 0B44     		add	r3, r3, r1
 22593 034c 03F5D873 		add	r3, r3, #432
 22594 0350 0022     		movs	r2, #0
 22595 0352 1A70     		strb	r2, [r3]
3054:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22596              		.loc 1 3054 0
 22597 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22598 0356 AA49     		ldr	r1, .L885
 22599 0358 1346     		mov	r3, r2
 22600 035a 5B00     		lsls	r3, r3, #1
 22601 035c 1344     		add	r3, r3, r2
 22602 035e 1B01     		lsls	r3, r3, #4
 22603 0360 0B44     		add	r3, r3, r1
 22604 0362 03F5DA73 		add	r3, r3, #436
 22605 0366 1622     		movs	r2, #22
 22606 0368 1A70     		strb	r2, [r3]
3055:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22607              		.loc 1 3055 0
 22608 036a 0023     		movs	r3, #0
 22609 036c BB71     		strb	r3, [r7, #6]
 22610 036e 0FE0     		b	.L870
 22611              	.L871:
3056:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22612              		.loc 1 3056 0 discriminator 3
 22613 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22614 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22615 0374 A248     		ldr	r0, .L885
 22616 0376 1346     		mov	r3, r2
 22617 0378 5B00     		lsls	r3, r3, #1
 22618 037a 1344     		add	r3, r3, r2
 22619 037c 1B01     		lsls	r3, r3, #4
 22620 037e 0344     		add	r3, r3, r0
 22621 0380 0B44     		add	r3, r3, r1
 22622 0382 03F2B113 		addw	r3, r3, #433
 22623 0386 BA79     		ldrb	r2, [r7, #6]
 22624 0388 1A70     		strb	r2, [r3]
3055:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22625              		.loc 1 3055 0 discriminator 3
 22626 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22627 038c 0133     		adds	r3, r3, #1
 22628 038e BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 495


 22629              	.L870:
3055:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22630              		.loc 1 3055 0 is_stmt 0 discriminator 1
 22631 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22632 0392 022B     		cmp	r3, #2
 22633 0394 ECD9     		bls	.L871
3057:..\src/command_processing.c ****         }
3058:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22634              		.loc 1 3058 0 is_stmt 1 discriminator 2
 22635 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22636 0398 9949     		ldr	r1, .L885
 22637 039a 1346     		mov	r3, r2
 22638 039c 5B00     		lsls	r3, r3, #1
 22639 039e 1344     		add	r3, r3, r2
 22640 03a0 1B01     		lsls	r3, r3, #4
 22641 03a2 0B44     		add	r3, r3, r1
 22642 03a4 03F2B513 		addw	r3, r3, #437
 22643 03a8 0F22     		movs	r2, #15
 22644 03aa 1A70     		strb	r2, [r3]
3059:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22645              		.loc 1 3059 0 discriminator 2
 22646 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22647 03ae 9449     		ldr	r1, .L885
 22648 03b0 1346     		mov	r3, r2
 22649 03b2 5B00     		lsls	r3, r3, #1
 22650 03b4 1344     		add	r3, r3, r2
 22651 03b6 1B01     		lsls	r3, r3, #4
 22652 03b8 0B44     		add	r3, r3, r1
 22653 03ba 03F5DB73 		add	r3, r3, #438
 22654 03be 0E22     		movs	r2, #14
 22655 03c0 1A70     		strb	r2, [r3]
3060:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22656              		.loc 1 3060 0 discriminator 2
 22657 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22658 03c4 8E49     		ldr	r1, .L885
 22659 03c6 1346     		mov	r3, r2
 22660 03c8 5B00     		lsls	r3, r3, #1
 22661 03ca 1344     		add	r3, r3, r2
 22662 03cc 1B01     		lsls	r3, r3, #4
 22663 03ce 0B44     		add	r3, r3, r1
 22664 03d0 03F2B713 		addw	r3, r3, #439
 22665 03d4 0122     		movs	r2, #1
 22666 03d6 1A70     		strb	r2, [r3]
3044:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22667              		.loc 1 3044 0 discriminator 2
 22668 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22669 03da 0133     		adds	r3, r3, #1
 22670 03dc FB71     		strb	r3, [r7, #7]
 22671              	.L865:
3044:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22672              		.loc 1 3044 0 is_stmt 0 discriminator 1
 22673 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22674 03e0 012B     		cmp	r3, #1
 22675 03e2 7FF663AF 		bls	.L872
3061:..\src/command_processing.c ****     }
3062:..\src/command_processing.c ****     
3063:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 496


 22676              		.loc 1 3063 0 is_stmt 1
 22677 03e6 0023     		movs	r3, #0
 22678 03e8 FB71     		strb	r3, [r7, #7]
 22679 03ea 2EE0     		b	.L873
 22680              	.L874:
3064:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22681              		.loc 1 3064 0 discriminator 3
 22682 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22683 03ee 8449     		ldr	r1, .L885
 22684 03f0 1346     		mov	r3, r2
 22685 03f2 DB00     		lsls	r3, r3, #3
 22686 03f4 9B1A     		subs	r3, r3, r2
 22687 03f6 1B01     		lsls	r3, r3, #4
 22688 03f8 0B44     		add	r3, r3, r1
 22689 03fa E433     		adds	r3, r3, #228
 22690 03fc 0022     		movs	r2, #0
 22691 03fe 1A60     		str	r2, [r3]
3065:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22692              		.loc 1 3065 0 discriminator 3
 22693 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22694 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22695 0404 7E48     		ldr	r0, .L885
 22696 0406 0B46     		mov	r3, r1
 22697 0408 DB00     		lsls	r3, r3, #3
 22698 040a 5B1A     		subs	r3, r3, r1
 22699 040c 1B01     		lsls	r3, r3, #4
 22700 040e 0344     		add	r3, r3, r0
 22701 0410 03F58873 		add	r3, r3, #272
 22702 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22703 0416 1846     		mov	r0, r3
 22704 0418 7949     		ldr	r1, .L885
 22705 041a 0346     		mov	r3, r0
 22706 041c 5B00     		lsls	r3, r3, #1
 22707 041e 0344     		add	r3, r3, r0
 22708 0420 1B01     		lsls	r3, r3, #4
 22709 0422 0B44     		add	r3, r3, r1
 22710 0424 03F29513 		addw	r3, r3, #405
 22711 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22712 042a 1946     		mov	r1, r3
 22713 042c 44F63823 		movw	r3, #19000
 22714 0430 03FA01F1 		lsl	r1, r3, r1
 22715 0434 7248     		ldr	r0, .L885
 22716 0436 1346     		mov	r3, r2
 22717 0438 DB00     		lsls	r3, r3, #3
 22718 043a 9B1A     		subs	r3, r3, r2
 22719 043c 1B01     		lsls	r3, r3, #4
 22720 043e 0344     		add	r3, r3, r0
 22721 0440 E833     		adds	r3, r3, #232
 22722 0442 1960     		str	r1, [r3]
3063:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22723              		.loc 1 3063 0 discriminator 3
 22724 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22725 0446 0133     		adds	r3, r3, #1
 22726 0448 FB71     		strb	r3, [r7, #7]
 22727              	.L873:
3063:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22728              		.loc 1 3063 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 497


 22729 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22730 044c 012B     		cmp	r3, #1
 22731 044e CDD9     		bls	.L874
3066:..\src/command_processing.c ****     }
3067:..\src/command_processing.c ****     
3068:..\src/command_processing.c ****     // EMG STRUCT     
3069:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22732              		.loc 1 3069 0 is_stmt 1
 22733 0450 6B4B     		ldr	r3, .L885
 22734 0452 C822     		movs	r2, #200
 22735 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3070:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22736              		.loc 1 3070 0
 22737 0458 694B     		ldr	r3, .L885
 22738 045a C822     		movs	r2, #200
 22739 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3071:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22740              		.loc 1 3071 0
 22741 0460 674B     		ldr	r3, .L885
 22742 0462 4FF48062 		mov	r2, #1024
 22743 0466 C3F8F421 		str	r2, [r3, #500]
3072:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 22744              		.loc 1 3072 0
 22745 046a 654B     		ldr	r3, .L885
 22746 046c 4FF48062 		mov	r2, #1024
 22747 0470 C3F8F821 		str	r2, [r3, #504]
3073:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 22748              		.loc 1 3073 0
 22749 0474 624B     		ldr	r3, .L885
 22750 0476 6422     		movs	r2, #100
 22751 0478 83F8FC21 		strb	r2, [r3, #508]
3074:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 22752              		.loc 1 3074 0
 22753 047c 604B     		ldr	r3, .L885
 22754 047e 6422     		movs	r2, #100
 22755 0480 83F8FD21 		strb	r2, [r3, #509]
3075:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 22756              		.loc 1 3075 0
 22757 0484 5E4B     		ldr	r3, .L885
 22758 0486 0022     		movs	r2, #0
 22759 0488 83F8FE21 		strb	r2, [r3, #510]
3076:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 22760              		.loc 1 3076 0
 22761 048c 5C4B     		ldr	r3, .L885
 22762 048e 0022     		movs	r2, #0
 22763 0490 83F8FF21 		strb	r2, [r3, #511]
3077:..\src/command_processing.c **** 
3078:..\src/command_processing.c ****     // IMU STRUCT
3079:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22764              		.loc 1 3079 0
 22765 0494 5A4B     		ldr	r3, .L885
 22766 0496 0022     		movs	r2, #0
 22767 0498 83F80022 		strb	r2, [r3, #512]
3080:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 22768              		.loc 1 3080 0
 22769 049c 584B     		ldr	r3, .L885
 22770 049e 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 498


 22771 04a0 83F80122 		strb	r2, [r3, #513]
3081:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 22772              		.loc 1 3081 0
 22773 04a4 0023     		movs	r3, #0
 22774 04a6 FB71     		strb	r3, [r7, #7]
 22775 04a8 34E0     		b	.L875
 22776              	.L876:
3082:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22777              		.loc 1 3082 0 discriminator 3
 22778 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22779 04ac 5449     		ldr	r1, .L885
 22780 04ae 1346     		mov	r3, r2
 22781 04b0 9B00     		lsls	r3, r3, #2
 22782 04b2 1344     		add	r3, r3, r2
 22783 04b4 0B44     		add	r3, r3, r1
 22784 04b6 03F20223 		addw	r3, r3, #514
 22785 04ba 0122     		movs	r2, #1
 22786 04bc 1A70     		strb	r2, [r3]
3083:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 22787              		.loc 1 3083 0 discriminator 3
 22788 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22789 04c0 4F49     		ldr	r1, .L885
 22790 04c2 1346     		mov	r3, r2
 22791 04c4 9B00     		lsls	r3, r3, #2
 22792 04c6 1344     		add	r3, r3, r2
 22793 04c8 0B44     		add	r3, r3, r1
 22794 04ca 03F20323 		addw	r3, r3, #515
 22795 04ce 0122     		movs	r2, #1
 22796 04d0 1A70     		strb	r2, [r3]
3084:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 22797              		.loc 1 3084 0 discriminator 3
 22798 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22799 04d4 4A49     		ldr	r1, .L885
 22800 04d6 1346     		mov	r3, r2
 22801 04d8 9B00     		lsls	r3, r3, #2
 22802 04da 1344     		add	r3, r3, r2
 22803 04dc 0B44     		add	r3, r3, r1
 22804 04de 03F50173 		add	r3, r3, #516
 22805 04e2 0022     		movs	r2, #0
 22806 04e4 1A70     		strb	r2, [r3]
3085:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 22807              		.loc 1 3085 0 discriminator 3
 22808 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22809 04e8 4549     		ldr	r1, .L885
 22810 04ea 1346     		mov	r3, r2
 22811 04ec 9B00     		lsls	r3, r3, #2
 22812 04ee 1344     		add	r3, r3, r2
 22813 04f0 0B44     		add	r3, r3, r1
 22814 04f2 03F20523 		addw	r3, r3, #517
 22815 04f6 0022     		movs	r2, #0
 22816 04f8 1A70     		strb	r2, [r3]
3086:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 22817              		.loc 1 3086 0 discriminator 3
 22818 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22819 04fc 4049     		ldr	r1, .L885
 22820 04fe 1346     		mov	r3, r2
 22821 0500 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 499


 22822 0502 1344     		add	r3, r3, r2
 22823 0504 0B44     		add	r3, r3, r1
 22824 0506 03F20623 		addw	r3, r3, #518
 22825 050a 0022     		movs	r2, #0
 22826 050c 1A70     		strb	r2, [r3]
3081:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22827              		.loc 1 3081 0 discriminator 3
 22828 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22829 0510 0133     		adds	r3, r3, #1
 22830 0512 FB71     		strb	r3, [r7, #7]
 22831              	.L875:
3081:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 22832              		.loc 1 3081 0 is_stmt 0 discriminator 1
 22833 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22834 0516 042B     		cmp	r3, #4
 22835 0518 C7D9     		bls	.L876
3087:..\src/command_processing.c ****     }
3088:..\src/command_processing.c ****      
3089:..\src/command_processing.c ****     // EXP STRUCT
3090:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22836              		.loc 1 3090 0 is_stmt 1
 22837 051a 394B     		ldr	r3, .L885
 22838 051c 0022     		movs	r2, #0
 22839 051e 83F82622 		strb	r2, [r3, #550]
3091:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 22840              		.loc 1 3091 0
 22841 0522 374B     		ldr	r3, .L885
 22842 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22843 0528 1233     		adds	r3, r3, #18
 22844 052a 5B01     		lsls	r3, r3, #5
 22845 052c 344A     		ldr	r2, .L885
 22846 052e 1344     		add	r3, r3, r2
 22847 0530 344A     		ldr	r2, .L885+4
 22848 0532 1068     		ldr	r0, [r2]	@ unaligned
 22849 0534 1860     		str	r0, [r3]	@ unaligned
 22850 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22851 0538 9279     		ldrb	r2, [r2, #6]
 22852 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 22853 053c 9A71     		strb	r2, [r3, #6]
3092:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 22854              		.loc 1 3092 0
 22855 053e 304B     		ldr	r3, .L885
 22856 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 22857 0544 012B     		cmp	r3, #1
 22858 0546 13D1     		bne	.L877
3093:..\src/command_processing.c ****         // Set date of maintenance from RTC
3094:..\src/command_processing.c ****         store_RTC_current_time();
 22859              		.loc 1 3094 0
 22860 0548 FFF7FEFF 		bl	store_RTC_current_time
3095:..\src/command_processing.c ****         
3096:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 22861              		.loc 1 3096 0
 22862 054c 2C4B     		ldr	r3, .L885
 22863 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 22864 0552 2B4B     		ldr	r3, .L885
 22865 0554 83F8A420 		strb	r2, [r3, #164]
3097:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 500


 22866              		.loc 1 3097 0
 22867 0558 294B     		ldr	r3, .L885
 22868 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 22869 055e 284B     		ldr	r3, .L885
 22870 0560 83F8A520 		strb	r2, [r3, #165]
3098:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 22871              		.loc 1 3098 0
 22872 0564 264B     		ldr	r3, .L885
 22873 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 22874 056a 254B     		ldr	r3, .L885
 22875 056c 83F8A620 		strb	r2, [r3, #166]
 22876              	.L877:
3099:..\src/command_processing.c ****     }
3100:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 22877              		.loc 1 3100 0
 22878 0570 234B     		ldr	r3, .L885
 22879 0572 0022     		movs	r2, #0
 22880 0574 83F82722 		strb	r2, [r3, #551]
3101:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22881              		.loc 1 3101 0
 22882 0578 0023     		movs	r3, #0
 22883 057a FB71     		strb	r3, [r7, #7]
 22884 057c 08E0     		b	.L878
 22885              	.L879:
3102:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 22886              		.loc 1 3102 0 discriminator 3
 22887 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22888 0580 1F4A     		ldr	r2, .L885
 22889 0582 1344     		add	r3, r3, r2
 22890 0584 0022     		movs	r2, #0
 22891 0586 83F82822 		strb	r2, [r3, #552]
3101:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22892              		.loc 1 3101 0 discriminator 3
 22893 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22894 058c 0133     		adds	r3, r3, #1
 22895 058e FB71     		strb	r3, [r7, #7]
 22896              	.L878:
3101:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 22897              		.loc 1 3101 0 is_stmt 0 discriminator 1
 22898 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22899 0592 0B2B     		cmp	r3, #11
 22900 0594 F3D9     		bls	.L879
3103:..\src/command_processing.c ****     }
3104:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3105:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 22901              		.loc 1 3105 0 is_stmt 1
 22902 0596 1A4B     		ldr	r3, .L885
 22903 0598 0122     		movs	r2, #1
 22904 059a 83F82A22 		strb	r2, [r3, #554]
3106:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 22905              		.loc 1 3106 0
 22906 059e 184B     		ldr	r3, .L885
 22907 05a0 0122     		movs	r2, #1
 22908 05a2 83F82B22 		strb	r2, [r3, #555]
3107:..\src/command_processing.c **** 
3108:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3109:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 501


3110:..\src/command_processing.c ****     memInit_SoftHandPro();
3111:..\src/command_processing.c **** #endif 
3112:..\src/command_processing.c **** 
3113:..\src/command_processing.c **** #ifdef MASTER_FW
3114:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3115:..\src/command_processing.c ****     memInit_Master();
3116:..\src/command_processing.c **** #endif 
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3119:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3120:..\src/command_processing.c ****     memInit_AirChambersFb();
3121:..\src/command_processing.c **** #endif 
3122:..\src/command_processing.c **** 
3123:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3124:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3125:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3126:..\src/command_processing.c **** #endif
3127:..\src/command_processing.c **** 
3128:..\src/command_processing.c ****     // JOYSTICK STRUCT
3129:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 22909              		.loc 1 3129 0
 22910 05a6 164B     		ldr	r3, .L885
 22911 05a8 9622     		movs	r2, #150
 22912 05aa A3F8B022 		strh	r2, [r3, #688]	@ movhi
3130:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 22913              		.loc 1 3130 0
 22914 05ae 144B     		ldr	r3, .L885
 22915 05b0 6422     		movs	r2, #100
 22916 05b2 A3F8B222 		strh	r2, [r3, #690]	@ movhi
3131:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 22917              		.loc 1 3131 0
 22918 05b6 124B     		ldr	r3, .L885
 22919 05b8 4FF48062 		mov	r2, #1024
 22920 05bc A3F8B422 		strh	r2, [r3, #692]	@ movhi
3132:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 22921              		.loc 1 3132 0
 22922 05c0 0F4B     		ldr	r3, .L885
 22923 05c2 4FF48062 		mov	r2, #1024
 22924 05c6 A3F8B622 		strh	r2, [r3, #694]	@ movhi
3133:..\src/command_processing.c **** 
3134:..\src/command_processing.c ****     // Default generic user_id
3135:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 22925              		.loc 1 3135 0
 22926 05ca 0D4B     		ldr	r3, .L885
 22927 05cc 0022     		movs	r2, #0
 22928 05ce 83F8AB20 		strb	r2, [r3, #171]
3136:..\src/command_processing.c **** 
3137:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3138:..\src/command_processing.c ****     g_mem.flag = TRUE;
 22929              		.loc 1 3138 0
 22930 05d2 0B4B     		ldr	r3, .L885
 22931 05d4 0122     		movs	r2, #1
 22932 05d6 1A70     		strb	r2, [r3]
3139:..\src/command_processing.c ****     
3140:..\src/command_processing.c ****     //write that configuration to EEPROM
3141:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 22933              		.loc 1 3141 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 502


 22934 05d8 0020     		movs	r0, #0
 22935 05da FFF7FEFF 		bl	memStore
 22936 05de 0346     		mov	r3, r0
 22937 05e0 002B     		cmp	r3, #0
 22938 05e2 07D0     		beq	.L880
 22939              		.loc 1 3141 0 is_stmt 0 discriminator 1
 22940 05e4 3220     		movs	r0, #50
 22941 05e6 FFF7FEFF 		bl	memStore
 22942 05ea 0346     		mov	r3, r0
 22943 05ec 002B     		cmp	r3, #0
 22944 05ee 01D0     		beq	.L880
 22945              		.loc 1 3141 0 discriminator 3
 22946 05f0 0123     		movs	r3, #1
 22947 05f2 00E0     		b	.L881
 22948              	.L880:
 22949              		.loc 1 3141 0 discriminator 4
 22950 05f4 0023     		movs	r3, #0
 22951              	.L881:
 22952              		.loc 1 3141 0 discriminator 6
 22953 05f6 DBB2     		uxtb	r3, r3
3142:..\src/command_processing.c **** }
 22954              		.loc 1 3142 0 is_stmt 1 discriminator 6
 22955 05f8 1846     		mov	r0, r3
 22956 05fa 0837     		adds	r7, r7, #8
 22957              		.cfi_def_cfa_offset 8
 22958 05fc BD46     		mov	sp, r7
 22959              		.cfi_def_cfa_register 13
 22960              		@ sp needed
 22961 05fe 80BD     		pop	{r7, pc}
 22962              	.L886:
 22963              		.align	2
 22964              	.L885:
 22965 0600 00000000 		.word	g_mem
 22966 0604 A01F0000 		.word	.LC305
 22967              		.cfi_endproc
 22968              	.LFE86:
 22969              		.size	memInit, .-memInit
 22970              		.section	.rodata
 22971 1fa7 00       		.align	2
 22972              	.LC306:
 22973 1fa8 55535230 		.ascii	"USR001\000"
 22973      303100
 22974              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 22975              		.align	2
 22976              		.global	memInit_SoftHandPro
 22977              		.thumb
 22978              		.thumb_func
 22979              		.type	memInit_SoftHandPro, %function
 22980              	memInit_SoftHandPro:
 22981              	.LFB87:
3143:..\src/command_processing.c **** 
3144:..\src/command_processing.c **** //==============================================================================
3145:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3146:..\src/command_processing.c **** //==============================================================================
3147:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3148:..\src/command_processing.c **** {
 22982              		.loc 1 3148 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 503


 22983              		.cfi_startproc
 22984              		@ args = 0, pretend = 0, frame = 8
 22985              		@ frame_needed = 1, uses_anonymous_args = 0
 22986              		@ link register save eliminated.
 22987 0000 80B4     		push	{r7}
 22988              		.cfi_def_cfa_offset 4
 22989              		.cfi_offset 7, -4
 22990 0002 83B0     		sub	sp, sp, #12
 22991              		.cfi_def_cfa_offset 16
 22992 0004 00AF     		add	r7, sp, #0
 22993              		.cfi_def_cfa_register 7
3149:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 22994              		.loc 1 3149 0
 22995 0006 0023     		movs	r3, #0
 22996 0008 FB70     		strb	r3, [r7, #3]
3150:..\src/command_processing.c ****     
3151:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3152:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22997              		.loc 1 3152 0
 22998 000a 894B     		ldr	r3, .L890
 22999 000c 0122     		movs	r2, #1
 23000 000e 83F8A720 		strb	r2, [r3, #167]
3153:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23001              		.loc 1 3153 0
 23002 0012 874B     		ldr	r3, .L890
 23003 0014 0022     		movs	r2, #0
 23004 0016 83F8AC20 		strb	r2, [r3, #172]
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23005              		.loc 1 3155 0
 23006 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23007 001c 8449     		ldr	r1, .L890
 23008 001e 1346     		mov	r3, r2
 23009 0020 DB00     		lsls	r3, r3, #3
 23010 0022 9B1A     		subs	r3, r3, r2
 23011 0024 1B01     		lsls	r3, r3, #4
 23012 0026 0B44     		add	r3, r3, r1
 23013 0028 E033     		adds	r3, r3, #224
 23014 002a 0122     		movs	r2, #1
 23015 002c 1A70     		strb	r2, [r3]
3156:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23016              		.loc 1 3156 0
 23017 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23018 0030 7F49     		ldr	r1, .L890
 23019 0032 1346     		mov	r3, r2
 23020 0034 DB00     		lsls	r3, r3, #3
 23021 0036 9B1A     		subs	r3, r3, r2
 23022 0038 1B01     		lsls	r3, r3, #4
 23023 003a 0B44     		add	r3, r3, r1
 23024 003c 03F58773 		add	r3, r3, #270
 23025 0040 0022     		movs	r2, #0
 23026 0042 1A70     		strb	r2, [r3]
3157:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23027              		.loc 1 3157 0
 23028 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23029 0046 7A49     		ldr	r1, .L890
 23030 0048 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 504


 23031 004a DB00     		lsls	r3, r3, #3
 23032 004c 9B1A     		subs	r3, r3, r2
 23033 004e 1B01     		lsls	r3, r3, #4
 23034 0050 0B44     		add	r3, r3, r1
 23035 0052 03F20F13 		addw	r3, r3, #271
 23036 0056 0022     		movs	r2, #0
 23037 0058 1A70     		strb	r2, [r3]
3158:..\src/command_processing.c ****     
3159:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3160:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23038              		.loc 1 3160 0
 23039 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23040 005c 744B     		ldr	r3, .L890
 23041 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23042 0062 7349     		ldr	r1, .L890
 23043 0064 1346     		mov	r3, r2
 23044 0066 DB00     		lsls	r3, r3, #3
 23045 0068 9B1A     		subs	r3, r3, r2
 23046 006a 1B01     		lsls	r3, r3, #4
 23047 006c 0B44     		add	r3, r3, r1
 23048 006e 03F58873 		add	r3, r3, #272
 23049 0072 0246     		mov	r2, r0
 23050 0074 1A70     		strb	r2, [r3]
3161:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23051              		.loc 1 3161 0
 23052 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23053 0078 6D49     		ldr	r1, .L890
 23054 007a 1346     		mov	r3, r2
 23055 007c DB00     		lsls	r3, r3, #3
 23056 007e 9B1A     		subs	r3, r3, r2
 23057 0080 1B01     		lsls	r3, r3, #4
 23058 0082 0B44     		add	r3, r3, r1
 23059 0084 03F21113 		addw	r3, r3, #273
 23060 0088 0122     		movs	r2, #1
 23061 008a 1A70     		strb	r2, [r3]
3162:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23062              		.loc 1 3162 0
 23063 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23064 008e 6849     		ldr	r1, .L890
 23065 0090 1346     		mov	r3, r2
 23066 0092 DB00     		lsls	r3, r3, #3
 23067 0094 9B1A     		subs	r3, r3, r2
 23068 0096 1B01     		lsls	r3, r3, #4
 23069 0098 0B44     		add	r3, r3, r1
 23070 009a 03F58973 		add	r3, r3, #274
 23071 009e 0122     		movs	r2, #1
 23072 00a0 1A70     		strb	r2, [r3]
3163:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23073              		.loc 1 3163 0
 23074 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23075 00a4 6249     		ldr	r1, .L890
 23076 00a6 1346     		mov	r3, r2
 23077 00a8 DB00     		lsls	r3, r3, #3
 23078 00aa 9B1A     		subs	r3, r3, r2
 23079 00ac 1B01     		lsls	r3, r3, #4
 23080 00ae 0B44     		add	r3, r3, r1
 23081 00b0 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 505


 23082 00b2 0022     		movs	r2, #0
 23083 00b4 1A60     		str	r2, [r3]
3164:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23084              		.loc 1 3164 0
 23085 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23086 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23087 00ba 5D48     		ldr	r0, .L890
 23088 00bc 0B46     		mov	r3, r1
 23089 00be DB00     		lsls	r3, r3, #3
 23090 00c0 5B1A     		subs	r3, r3, r1
 23091 00c2 1B01     		lsls	r3, r3, #4
 23092 00c4 0344     		add	r3, r3, r0
 23093 00c6 03F58873 		add	r3, r3, #272
 23094 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23095 00cc 1846     		mov	r0, r3
 23096 00ce 5849     		ldr	r1, .L890
 23097 00d0 0346     		mov	r3, r0
 23098 00d2 5B00     		lsls	r3, r3, #1
 23099 00d4 0344     		add	r3, r3, r0
 23100 00d6 1B01     		lsls	r3, r3, #4
 23101 00d8 0B44     		add	r3, r3, r1
 23102 00da 03F29513 		addw	r3, r3, #405
 23103 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23104 00e0 1946     		mov	r1, r3
 23105 00e2 4FF47A53 		mov	r3, #16000
 23106 00e6 03FA01F1 		lsl	r1, r3, r1
 23107 00ea 5148     		ldr	r0, .L890
 23108 00ec 1346     		mov	r3, r2
 23109 00ee DB00     		lsls	r3, r3, #3
 23110 00f0 9B1A     		subs	r3, r3, r2
 23111 00f2 1B01     		lsls	r3, r3, #4
 23112 00f4 0344     		add	r3, r3, r0
 23113 00f6 E833     		adds	r3, r3, #232
 23114 00f8 1960     		str	r1, [r3]
 23115              	.LBB25:
3165:..\src/command_processing.c ****     
3166:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23116              		.loc 1 3166 0
 23117 00fa 0023     		movs	r3, #0
 23118 00fc 7B60     		str	r3, [r7, #4]
 23119 00fe 2EE0     		b	.L888
 23120              	.L889:
3167:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3168:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23121              		.loc 1 3168 0 discriminator 3
 23122 0100 4B49     		ldr	r1, .L890
 23123 0102 7A68     		ldr	r2, [r7, #4]
 23124 0104 1346     		mov	r3, r2
 23125 0106 5B00     		lsls	r3, r3, #1
 23126 0108 1344     		add	r3, r3, r2
 23127 010a 1B01     		lsls	r3, r3, #4
 23128 010c 0B44     		add	r3, r3, r1
 23129 010e 03F5D873 		add	r3, r3, #432
 23130 0112 0122     		movs	r2, #1
 23131 0114 1A70     		strb	r2, [r3]
3169:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23132              		.loc 1 3169 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 506


 23133 0116 4649     		ldr	r1, .L890
 23134 0118 7A68     		ldr	r2, [r7, #4]
 23135 011a 1346     		mov	r3, r2
 23136 011c 5B00     		lsls	r3, r3, #1
 23137 011e 1344     		add	r3, r3, r2
 23138 0120 1B01     		lsls	r3, r3, #4
 23139 0122 0B44     		add	r3, r3, r1
 23140 0124 03F2B513 		addw	r3, r3, #437
 23141 0128 2322     		movs	r2, #35
 23142 012a 1A70     		strb	r2, [r3]
3170:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23143              		.loc 1 3170 0 discriminator 3
 23144 012c 4049     		ldr	r1, .L890
 23145 012e 7A68     		ldr	r2, [r7, #4]
 23146 0130 1346     		mov	r3, r2
 23147 0132 5B00     		lsls	r3, r3, #1
 23148 0134 1344     		add	r3, r3, r2
 23149 0136 1B01     		lsls	r3, r3, #4
 23150 0138 0B44     		add	r3, r3, r1
 23151 013a 03F5DB73 		add	r3, r3, #438
 23152 013e 0322     		movs	r2, #3
 23153 0140 1A70     		strb	r2, [r3]
3171:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23154              		.loc 1 3171 0 discriminator 3
 23155 0142 3B49     		ldr	r1, .L890
 23156 0144 7A68     		ldr	r2, [r7, #4]
 23157 0146 1346     		mov	r3, r2
 23158 0148 5B00     		lsls	r3, r3, #1
 23159 014a 1344     		add	r3, r3, r2
 23160 014c 1B01     		lsls	r3, r3, #4
 23161 014e 0B44     		add	r3, r3, r1
 23162 0150 03F2B713 		addw	r3, r3, #439
 23163 0154 FF22     		movs	r2, #255
 23164 0156 1A70     		strb	r2, [r3]
3166:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23165              		.loc 1 3166 0 discriminator 3
 23166 0158 7B68     		ldr	r3, [r7, #4]
 23167 015a 0133     		adds	r3, r3, #1
 23168 015c 7B60     		str	r3, [r7, #4]
 23169              	.L888:
3166:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23170              		.loc 1 3166 0 is_stmt 0 discriminator 1
 23171 015e 7B68     		ldr	r3, [r7, #4]
 23172 0160 012B     		cmp	r3, #1
 23173 0162 CDDD     		ble	.L889
 23174              	.LBE25:
3172:..\src/command_processing.c ****     }
3173:..\src/command_processing.c ****     
3174:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23175              		.loc 1 3174 0 is_stmt 1
 23176 0164 324B     		ldr	r3, .L890
 23177 0166 4FF48062 		mov	r2, #1024
 23178 016a C3F8F421 		str	r2, [r3, #500]
3175:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23179              		.loc 1 3175 0
 23180 016e 304B     		ldr	r3, .L890
 23181 0170 4FF48062 		mov	r2, #1024
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 507


 23182 0174 C3F8F821 		str	r2, [r3, #504]
3176:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23183              		.loc 1 3176 0
 23184 0178 2D4B     		ldr	r3, .L890
 23185 017a C822     		movs	r2, #200
 23186 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3177:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23187              		.loc 1 3177 0
 23188 0180 2B4B     		ldr	r3, .L890
 23189 0182 C822     		movs	r2, #200
 23190 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3178:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23191              		.loc 1 3178 0
 23192 0188 294B     		ldr	r3, .L890
 23193 018a 6422     		movs	r2, #100
 23194 018c 83F8FC21 		strb	r2, [r3, #508]
3179:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23195              		.loc 1 3179 0
 23196 0190 274B     		ldr	r3, .L890
 23197 0192 6422     		movs	r2, #100
 23198 0194 83F8FD21 		strb	r2, [r3, #509]
3180:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23199              		.loc 1 3180 0
 23200 0198 254B     		ldr	r3, .L890
 23201 019a 0022     		movs	r2, #0
 23202 019c 83F8FE21 		strb	r2, [r3, #510]
3181:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23203              		.loc 1 3181 0
 23204 01a0 234B     		ldr	r3, .L890
 23205 01a2 0022     		movs	r2, #0
 23206 01a4 83F8FF21 		strb	r2, [r3, #511]
3182:..\src/command_processing.c ****     
3183:..\src/command_processing.c ****     //Initialize rest position parameters  
3184:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23207              		.loc 1 3184 0
 23208 01a8 214B     		ldr	r3, .L890
 23209 01aa 0022     		movs	r2, #0
 23210 01ac 83F8AC22 		strb	r2, [r3, #684]
3185:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23211              		.loc 1 3185 0
 23212 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23213 01b2 1F49     		ldr	r1, .L890
 23214 01b4 1346     		mov	r3, r2
 23215 01b6 DB00     		lsls	r3, r3, #3
 23216 01b8 9B1A     		subs	r3, r3, r2
 23217 01ba 1B01     		lsls	r3, r3, #4
 23218 01bc 0B44     		add	r3, r3, r1
 23219 01be 03F58873 		add	r3, r3, #272
 23220 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23221 01c4 1946     		mov	r1, r3
 23222 01c6 1A4A     		ldr	r2, .L890
 23223 01c8 0B46     		mov	r3, r1
 23224 01ca 5B00     		lsls	r3, r3, #1
 23225 01cc 0B44     		add	r3, r3, r1
 23226 01ce 1B01     		lsls	r3, r3, #4
 23227 01d0 1344     		add	r3, r3, r2
 23228 01d2 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 508


 23229 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23230 01d8 1A46     		mov	r2, r3
 23231 01da 41F65833 		movw	r3, #7000
 23232 01de 9340     		lsls	r3, r3, r2
 23233 01e0 134A     		ldr	r2, .L890
 23234 01e2 C2F8A032 		str	r3, [r2, #672]
3186:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23235              		.loc 1 3186 0
 23236 01e6 124B     		ldr	r3, .L890
 23237 01e8 0A22     		movs	r2, #10
 23238 01ea C3F8A422 		str	r2, [r3, #676]
3187:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23239              		.loc 1 3187 0
 23240 01ee 104B     		ldr	r3, .L890
 23241 01f0 42F21072 		movw	r2, #10000
 23242 01f4 C3F8A822 		str	r2, [r3, #680]
3188:..\src/command_processing.c **** 	
3189:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23243              		.loc 1 3189 0
 23244 01f8 0D4B     		ldr	r3, .L890
 23245 01fa 0022     		movs	r2, #0
 23246 01fc 83F80022 		strb	r2, [r3, #512]
3190:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23247              		.loc 1 3190 0
 23248 0200 0B4B     		ldr	r3, .L890
 23249 0202 0022     		movs	r2, #0
 23250 0204 83F82622 		strb	r2, [r3, #550]
3191:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23251              		.loc 1 3191 0
 23252 0208 094B     		ldr	r3, .L890
 23253 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23254 020e 1233     		adds	r3, r3, #18
 23255 0210 5B01     		lsls	r3, r3, #5
 23256 0212 074A     		ldr	r2, .L890
 23257 0214 1344     		add	r3, r3, r2
 23258 0216 074A     		ldr	r2, .L890+4
 23259 0218 1068     		ldr	r0, [r2]	@ unaligned
 23260 021a 1860     		str	r0, [r3]	@ unaligned
 23261 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23262 021e 9279     		ldrb	r2, [r2, #6]
 23263 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23264 0222 9A71     		strb	r2, [r3, #6]
3192:..\src/command_processing.c **** }
 23265              		.loc 1 3192 0
 23266 0224 00BF     		nop
 23267 0226 0C37     		adds	r7, r7, #12
 23268              		.cfi_def_cfa_offset 4
 23269 0228 BD46     		mov	sp, r7
 23270              		.cfi_def_cfa_register 13
 23271              		@ sp needed
 23272 022a 80BC     		pop	{r7}
 23273              		.cfi_restore 7
 23274              		.cfi_def_cfa_offset 0
 23275 022c 7047     		bx	lr
 23276              	.L891:
 23277 022e 00BF     		.align	2
 23278              	.L890:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 509


 23279 0230 00000000 		.word	g_mem
 23280 0234 A81F0000 		.word	.LC306
 23281              		.cfi_endproc
 23282              	.LFE87:
 23283              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23284              		.section	.text.memInit_Master,"ax",%progbits
 23285              		.align	2
 23286              		.global	memInit_Master
 23287              		.thumb
 23288              		.thumb_func
 23289              		.type	memInit_Master, %function
 23290              	memInit_Master:
 23291              	.LFB88:
3193:..\src/command_processing.c **** 
3194:..\src/command_processing.c **** //==============================================================================
3195:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3196:..\src/command_processing.c **** //==============================================================================
3197:..\src/command_processing.c **** void memInit_Master(void)
3198:..\src/command_processing.c **** {
 23292              		.loc 1 3198 0
 23293              		.cfi_startproc
 23294              		@ args = 0, pretend = 0, frame = 0
 23295              		@ frame_needed = 1, uses_anonymous_args = 0
 23296              		@ link register save eliminated.
 23297 0000 80B4     		push	{r7}
 23298              		.cfi_def_cfa_offset 4
 23299              		.cfi_offset 7, -4
 23300 0002 00AF     		add	r7, sp, #0
 23301              		.cfi_def_cfa_register 7
3199:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23302              		.loc 1 3199 0
 23303 0004 074B     		ldr	r3, .L893
 23304 0006 0222     		movs	r2, #2
 23305 0008 83F8A020 		strb	r2, [r3, #160]
3200:..\src/command_processing.c ****     
3201:..\src/command_processing.c ****     // MS STRUCT
3202:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23306              		.loc 1 3202 0
 23307 000c 054B     		ldr	r3, .L893
 23308 000e 0122     		movs	r2, #1
 23309 0010 83F8C122 		strb	r2, [r3, #705]
3203:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23310              		.loc 1 3203 0
 23311 0014 034B     		ldr	r3, .L893
 23312 0016 0022     		movs	r2, #0
 23313 0018 83F8C022 		strb	r2, [r3, #704]
3204:..\src/command_processing.c **** }
 23314              		.loc 1 3204 0
 23315 001c 00BF     		nop
 23316 001e BD46     		mov	sp, r7
 23317              		.cfi_def_cfa_register 13
 23318              		@ sp needed
 23319 0020 80BC     		pop	{r7}
 23320              		.cfi_restore 7
 23321              		.cfi_def_cfa_offset 0
 23322 0022 7047     		bx	lr
 23323              	.L894:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 510


 23324              		.align	2
 23325              	.L893:
 23326 0024 00000000 		.word	g_mem
 23327              		.cfi_endproc
 23328              	.LFE88:
 23329              		.size	memInit_Master, .-memInit_Master
 23330              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23331              		.align	2
 23332              		.global	memInit_AirChambersFb
 23333              		.thumb
 23334              		.thumb_func
 23335              		.type	memInit_AirChambersFb, %function
 23336              	memInit_AirChambersFb:
 23337              	.LFB89:
3205:..\src/command_processing.c **** 
3206:..\src/command_processing.c **** //==============================================================================
3207:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3208:..\src/command_processing.c **** //==============================================================================
3209:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3210:..\src/command_processing.c **** {
 23338              		.loc 1 3210 0
 23339              		.cfi_startproc
 23340              		@ args = 0, pretend = 0, frame = 0
 23341              		@ frame_needed = 1, uses_anonymous_args = 0
 23342              		@ link register save eliminated.
 23343 0000 80B4     		push	{r7}
 23344              		.cfi_def_cfa_offset 4
 23345              		.cfi_offset 7, -4
 23346 0002 00AF     		add	r7, sp, #0
 23347              		.cfi_def_cfa_register 7
3211:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3212:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23348              		.loc 1 3212 0
 23349 0004 1A4B     		ldr	r3, .L896
 23350 0006 0222     		movs	r2, #2
 23351 0008 83F8AC20 		strb	r2, [r3, #172]
3213:..\src/command_processing.c ****     
3214:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23352              		.loc 1 3214 0
 23353 000c 184B     		ldr	r3, .L896
 23354 000e 0122     		movs	r2, #1
 23355 0010 83F80F21 		strb	r2, [r3, #271]
3215:..\src/command_processing.c ****     
3216:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3217:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3218:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23356              		.loc 1 3218 0
 23357 0014 164B     		ldr	r3, .L896
 23358 0016 0422     		movs	r2, #4
 23359 0018 83F87E21 		strb	r2, [r3, #382]
3219:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23360              		.loc 1 3219 0
 23361 001c 144B     		ldr	r3, .L896
 23362 001e 0022     		movs	r2, #0
 23363 0020 C3F85421 		str	r2, [r3, #340]
3220:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23364              		.loc 1 3220 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 511


 23365 0024 124B     		ldr	r3, .L896
 23366 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23367 002a 1946     		mov	r1, r3
 23368 002c 104A     		ldr	r2, .L896
 23369 002e 0B46     		mov	r3, r1
 23370 0030 5B00     		lsls	r3, r3, #1
 23371 0032 0B44     		add	r3, r3, r1
 23372 0034 1B01     		lsls	r3, r3, #4
 23373 0036 1344     		add	r3, r3, r2
 23374 0038 03F29513 		addw	r3, r3, #405
 23375 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23376 003e 1A46     		mov	r2, r3
 23377 0040 45F2F053 		movw	r3, #22000
 23378 0044 9340     		lsls	r3, r3, r2
 23379 0046 0A4A     		ldr	r2, .L896
 23380 0048 C2F85831 		str	r3, [r2, #344]
3221:..\src/command_processing.c ****     
3222:..\src/command_processing.c ****     // FB STRUCT
3223:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23381              		.loc 1 3223 0
 23382 004c 084B     		ldr	r3, .L896
 23383 004e 4FF4E172 		mov	r2, #450
 23384 0052 C3F8D022 		str	r2, [r3, #720]
3224:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23385              		.loc 1 3224 0
 23386 0056 064B     		ldr	r3, .L896
 23387 0058 064A     		ldr	r2, .L896+4
 23388 005a C3F8D422 		str	r2, [r3, #724]	@ float
3225:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23389              		.loc 1 3225 0
 23390 005e 044B     		ldr	r3, .L896
 23391 0060 4FF07E52 		mov	r2, #1065353216
 23392 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3226:..\src/command_processing.c **** }
 23393              		.loc 1 3226 0
 23394 0068 00BF     		nop
 23395 006a BD46     		mov	sp, r7
 23396              		.cfi_def_cfa_register 13
 23397              		@ sp needed
 23398 006c 80BC     		pop	{r7}
 23399              		.cfi_restore 7
 23400              		.cfi_def_cfa_offset 0
 23401 006e 7047     		bx	lr
 23402              	.L897:
 23403              		.align	2
 23404              	.L896:
 23405 0070 00000000 		.word	g_mem
 23406 0074 0000C841 		.word	1103626240
 23407              		.cfi_endproc
 23408              	.LFE89:
 23409              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23410              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23411              		.align	2
 23412              		.global	memInit_OtbkActWristMs
 23413              		.thumb
 23414              		.thumb_func
 23415              		.type	memInit_OtbkActWristMs, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 512


 23416              	memInit_OtbkActWristMs:
 23417              	.LFB90:
3227:..\src/command_processing.c **** 
3228:..\src/command_processing.c **** //==============================================================================
3229:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3230:..\src/command_processing.c **** //==============================================================================
3231:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3232:..\src/command_processing.c **** {
 23418              		.loc 1 3232 0
 23419              		.cfi_startproc
 23420              		@ args = 0, pretend = 0, frame = 0
 23421              		@ frame_needed = 1, uses_anonymous_args = 0
 23422              		@ link register save eliminated.
 23423 0000 80B4     		push	{r7}
 23424              		.cfi_def_cfa_offset 4
 23425              		.cfi_offset 7, -4
 23426 0002 00AF     		add	r7, sp, #0
 23427              		.cfi_def_cfa_register 7
3233:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3234:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23428              		.loc 1 3234 0
 23429 0004 294B     		ldr	r3, .L899
 23430 0006 0322     		movs	r2, #3
 23431 0008 83F8AC20 		strb	r2, [r3, #172]
3235:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23432              		.loc 1 3235 0
 23433 000c 274B     		ldr	r3, .L899
 23434 000e 0122     		movs	r2, #1
 23435 0010 83F8A720 		strb	r2, [r3, #167]
3236:..\src/command_processing.c ****     
3237:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23436              		.loc 1 3237 0
 23437 0014 254B     		ldr	r3, .L899
 23438 0016 0122     		movs	r2, #1
 23439 0018 83F80F21 		strb	r2, [r3, #271]
3238:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23440              		.loc 1 3238 0
 23441 001c 234B     		ldr	r3, .L899
 23442 001e 6422     		movs	r2, #100
 23443 0020 83F81121 		strb	r2, [r3, #273]
3239:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23444              		.loc 1 3239 0
 23445 0024 214B     		ldr	r3, .L899
 23446 0026 0022     		movs	r2, #0
 23447 0028 83F81221 		strb	r2, [r3, #274]
3240:..\src/command_processing.c ****     
3241:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3242:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3243:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23448              		.loc 1 3243 0
 23449 002c 1F4B     		ldr	r3, .L899
 23450 002e 0422     		movs	r2, #4
 23451 0030 83F87E21 		strb	r2, [r3, #382]
3244:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23452              		.loc 1 3244 0
 23453 0034 1D4B     		ldr	r3, .L899
 23454 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 513


 23455 003a 1C4B     		ldr	r3, .L899
 23456 003c 83F88021 		strb	r2, [r3, #384]
3245:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23457              		.loc 1 3245 0
 23458 0040 1A4B     		ldr	r3, .L899
 23459 0042 0122     		movs	r2, #1
 23460 0044 83F88121 		strb	r2, [r3, #385]
3246:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23461              		.loc 1 3246 0
 23462 0048 184B     		ldr	r3, .L899
 23463 004a 0022     		movs	r2, #0
 23464 004c 83F88221 		strb	r2, [r3, #386]
3247:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23465              		.loc 1 3247 0
 23466 0050 164B     		ldr	r3, .L899
 23467 0052 0022     		movs	r2, #0
 23468 0054 C3F85421 		str	r2, [r3, #340]
3248:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23469              		.loc 1 3248 0
 23470 0058 144B     		ldr	r3, .L899
 23471 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23472 005e 1946     		mov	r1, r3
 23473 0060 124A     		ldr	r2, .L899
 23474 0062 0B46     		mov	r3, r1
 23475 0064 5B00     		lsls	r3, r3, #1
 23476 0066 0B44     		add	r3, r3, r1
 23477 0068 1B01     		lsls	r3, r3, #4
 23478 006a 1344     		add	r3, r3, r2
 23479 006c 03F29513 		addw	r3, r3, #405
 23480 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23481 0072 1A46     		mov	r2, r3
 23482 0074 4FF47A53 		mov	r3, #16000
 23483 0078 9340     		lsls	r3, r3, r2
 23484 007a 0C4A     		ldr	r2, .L899
 23485 007c C2F85831 		str	r3, [r2, #344]
3249:..\src/command_processing.c ****     
3250:..\src/command_processing.c ****     // WR STRUCT
3251:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23486              		.loc 1 3251 0
 23487 0080 0A4B     		ldr	r3, .L899
 23488 0082 0022     		movs	r2, #0
 23489 0084 83F8E022 		strb	r2, [r3, #736]
3252:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23490              		.loc 1 3252 0
 23491 0088 084B     		ldr	r3, .L899
 23492 008a 4FF44872 		mov	r2, #800
 23493 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3253:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23494              		.loc 1 3253 0
 23495 0092 064B     		ldr	r3, .L899
 23496 0094 4FF44872 		mov	r2, #800
 23497 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3254:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23498              		.loc 1 3254 0
 23499 009c 034B     		ldr	r3, .L899
 23500 009e 0022     		movs	r2, #0
 23501 00a0 83F8E622 		strb	r2, [r3, #742]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 514


3255:..\src/command_processing.c **** }
 23502              		.loc 1 3255 0
 23503 00a4 00BF     		nop
 23504 00a6 BD46     		mov	sp, r7
 23505              		.cfi_def_cfa_register 13
 23506              		@ sp needed
 23507 00a8 80BC     		pop	{r7}
 23508              		.cfi_restore 7
 23509              		.cfi_def_cfa_offset 0
 23510 00aa 7047     		bx	lr
 23511              	.L900:
 23512              		.align	2
 23513              	.L899:
 23514 00ac 00000000 		.word	g_mem
 23515              		.cfi_endproc
 23516              	.LFE90:
 23517              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23518              		.section	.text.cmd_get_measurements,"ax",%progbits
 23519              		.align	2
 23520              		.global	cmd_get_measurements
 23521              		.thumb
 23522              		.thumb_func
 23523              		.type	cmd_get_measurements, %function
 23524              	cmd_get_measurements:
 23525              	.LFB91:
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c **** //==============================================================================
3258:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3259:..\src/command_processing.c **** //==============================================================================
3260:..\src/command_processing.c **** /**
3261:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3262:..\src/command_processing.c **** **/
3263:..\src/command_processing.c **** 
3264:..\src/command_processing.c **** void cmd_get_measurements(){
 23526              		.loc 1 3264 0
 23527              		.cfi_startproc
 23528              		@ args = 0, pretend = 0, frame = 16
 23529              		@ frame_needed = 1, uses_anonymous_args = 0
 23530 0000 90B5     		push	{r4, r7, lr}
 23531              		.cfi_def_cfa_offset 12
 23532              		.cfi_offset 4, -12
 23533              		.cfi_offset 7, -8
 23534              		.cfi_offset 14, -4
 23535 0002 85B0     		sub	sp, sp, #20
 23536              		.cfi_def_cfa_offset 32
 23537 0004 00AF     		add	r7, sp, #0
 23538              		.cfi_def_cfa_register 7
3265:..\src/command_processing.c ****  
3266:..\src/command_processing.c ****     uint8 CYDATA index;
3267:..\src/command_processing.c ****     int16 aux_int16;
3268:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3269:..\src/command_processing.c ****     
3270:..\src/command_processing.c ****     uint8 packet_data[8]; 
3271:..\src/command_processing.c ****     
3272:..\src/command_processing.c ****     //Header package
3273:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23539              		.loc 1 3273 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 515


 23540 0006 8423     		movs	r3, #132
 23541 0008 3B71     		strb	r3, [r7, #4]
3274:..\src/command_processing.c ****     
3275:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23542              		.loc 1 3275 0
 23543 000a 0323     		movs	r3, #3
 23544 000c FB73     		strb	r3, [r7, #15]
 23545 000e 38E0     		b	.L902
 23546              	.L903:
3276:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23547              		.loc 1 3276 0
 23548 0010 264B     		ldr	r3, .L904
 23549 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23550 0016 1A46     		mov	r2, r3
 23551 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23552 001a 2548     		ldr	r0, .L904+4
 23553 001c 1346     		mov	r3, r2
 23554 001e 5B00     		lsls	r3, r3, #1
 23555 0020 1344     		add	r3, r3, r2
 23556 0022 9B00     		lsls	r3, r3, #2
 23557 0024 1344     		add	r3, r3, r2
 23558 0026 0B44     		add	r3, r3, r1
 23559 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23560 002c 1F4B     		ldr	r3, .L904
 23561 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23562 0032 1C46     		mov	r4, r3
 23563 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23564 0036 1D48     		ldr	r0, .L904
 23565 0038 2346     		mov	r3, r4
 23566 003a 5B00     		lsls	r3, r3, #1
 23567 003c 2344     		add	r3, r3, r4
 23568 003e 1B01     		lsls	r3, r3, #4
 23569 0040 0344     		add	r3, r3, r0
 23570 0042 0B44     		add	r3, r3, r1
 23571 0044 03F29513 		addw	r3, r3, #405
 23572 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23573 004a 42FA03F3 		asr	r3, r2, r3
 23574 004e 1BB2     		sxth	r3, r3
 23575 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3277:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23576              		.loc 1 3277 0
 23577 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23578 0054 5B00     		lsls	r3, r3, #1
 23579 0056 0233     		adds	r3, r3, #2
 23580 0058 07F10C02 		add	r2, r7, #12
 23581 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23582 005e 07F11001 		add	r1, r7, #16
 23583 0062 0B44     		add	r3, r3, r1
 23584 0064 03F80C2C 		strb	r2, [r3, #-12]
3278:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23585              		.loc 1 3278 0
 23586 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23587 006a 5B00     		lsls	r3, r3, #1
 23588 006c 5A1C     		adds	r2, r3, #1
 23589 006e 07F10C03 		add	r3, r7, #12
 23590 0072 0133     		adds	r3, r3, #1
 23591 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 516


 23592 0076 07F11003 		add	r3, r7, #16
 23593 007a 1344     		add	r3, r3, r2
 23594 007c 0A46     		mov	r2, r1
 23595 007e 03F80C2C 		strb	r2, [r3, #-12]
 23596              	.L902:
3275:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23597              		.loc 1 3275 0 discriminator 1
 23598 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23599 0084 5A1E     		subs	r2, r3, #1
 23600 0086 FA73     		strb	r2, [r7, #15]
 23601 0088 002B     		cmp	r3, #0
 23602 008a C1D1     		bne	.L903
3279:..\src/command_processing.c ****     }
3280:..\src/command_processing.c **** 
3281:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23603              		.loc 1 3283 0
 23604 008c 3B1D     		adds	r3, r7, #4
 23605 008e 0721     		movs	r1, #7
 23606 0090 1846     		mov	r0, r3
 23607 0092 FFF7FEFF 		bl	LCRChecksum
 23608 0096 0346     		mov	r3, r0
 23609 0098 FB72     		strb	r3, [r7, #11]
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23610              		.loc 1 3285 0
 23611 009a 3B1D     		adds	r3, r7, #4
 23612 009c 0821     		movs	r1, #8
 23613 009e 1846     		mov	r0, r3
 23614 00a0 FFF7FEFF 		bl	commWrite
3286:..\src/command_processing.c ****    
3287:..\src/command_processing.c **** }
 23615              		.loc 1 3287 0
 23616 00a4 00BF     		nop
 23617 00a6 1437     		adds	r7, r7, #20
 23618              		.cfi_def_cfa_offset 12
 23619 00a8 BD46     		mov	sp, r7
 23620              		.cfi_def_cfa_register 13
 23621              		@ sp needed
 23622 00aa 90BD     		pop	{r4, r7, pc}
 23623              	.L905:
 23624              		.align	2
 23625              	.L904:
 23626 00ac 00000000 		.word	g_mem
 23627 00b0 00000000 		.word	g_measOld
 23628              		.cfi_endproc
 23629              	.LFE91:
 23630              		.size	cmd_get_measurements, .-cmd_get_measurements
 23631              		.section	.text.cmd_get_velocities,"ax",%progbits
 23632              		.align	2
 23633              		.global	cmd_get_velocities
 23634              		.thumb
 23635              		.thumb_func
 23636              		.type	cmd_get_velocities, %function
 23637              	cmd_get_velocities:
 23638              	.LFB92:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 517


3288:..\src/command_processing.c **** 
3289:..\src/command_processing.c **** void cmd_get_velocities(){
 23639              		.loc 1 3289 0
 23640              		.cfi_startproc
 23641              		@ args = 0, pretend = 0, frame = 16
 23642              		@ frame_needed = 1, uses_anonymous_args = 0
 23643 0000 90B5     		push	{r4, r7, lr}
 23644              		.cfi_def_cfa_offset 12
 23645              		.cfi_offset 4, -12
 23646              		.cfi_offset 7, -8
 23647              		.cfi_offset 14, -4
 23648 0002 85B0     		sub	sp, sp, #20
 23649              		.cfi_def_cfa_offset 32
 23650 0004 00AF     		add	r7, sp, #0
 23651              		.cfi_def_cfa_register 7
3290:..\src/command_processing.c ****  
3291:..\src/command_processing.c ****     uint8 CYDATA index;
3292:..\src/command_processing.c ****     int16 aux_int16;
3293:..\src/command_processing.c ****    
3294:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3295:..\src/command_processing.c ****     
3296:..\src/command_processing.c ****     uint8 packet_data[8]; 
3297:..\src/command_processing.c ****     
3298:..\src/command_processing.c ****     //Header package
3299:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 23652              		.loc 1 3299 0
 23653 0006 8923     		movs	r3, #137
 23654 0008 3B71     		strb	r3, [r7, #4]
3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23655              		.loc 1 3301 0
 23656 000a 0323     		movs	r3, #3
 23657 000c FB73     		strb	r3, [r7, #15]
 23658 000e 3AE0     		b	.L907
 23659              	.L908:
3302:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23660              		.loc 1 3302 0
 23661 0010 274B     		ldr	r3, .L909
 23662 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23663 0016 1A46     		mov	r2, r3
 23664 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23665 001a 2648     		ldr	r0, .L909+4
 23666 001c 1346     		mov	r3, r2
 23667 001e 5B00     		lsls	r3, r3, #1
 23668 0020 1344     		add	r3, r3, r2
 23669 0022 9B00     		lsls	r3, r3, #2
 23670 0024 1344     		add	r3, r3, r2
 23671 0026 0B44     		add	r3, r3, r1
 23672 0028 0633     		adds	r3, r3, #6
 23673 002a 9B00     		lsls	r3, r3, #2
 23674 002c 0344     		add	r3, r3, r0
 23675 002e 5A68     		ldr	r2, [r3, #4]
 23676 0030 1F4B     		ldr	r3, .L909
 23677 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23678 0036 1C46     		mov	r4, r3
 23679 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23680 003a 1D48     		ldr	r0, .L909
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 518


 23681 003c 2346     		mov	r3, r4
 23682 003e 5B00     		lsls	r3, r3, #1
 23683 0040 2344     		add	r3, r3, r4
 23684 0042 1B01     		lsls	r3, r3, #4
 23685 0044 0344     		add	r3, r3, r0
 23686 0046 0B44     		add	r3, r3, r1
 23687 0048 03F29513 		addw	r3, r3, #405
 23688 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23689 004e 42FA03F3 		asr	r3, r2, r3
 23690 0052 1BB2     		sxth	r3, r3
 23691 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3303:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23692              		.loc 1 3303 0
 23693 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23694 0058 5B00     		lsls	r3, r3, #1
 23695 005a 0233     		adds	r3, r3, #2
 23696 005c 07F10C02 		add	r2, r7, #12
 23697 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23698 0062 07F11001 		add	r1, r7, #16
 23699 0066 0B44     		add	r3, r3, r1
 23700 0068 03F80C2C 		strb	r2, [r3, #-12]
3304:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23701              		.loc 1 3304 0
 23702 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23703 006e 5B00     		lsls	r3, r3, #1
 23704 0070 5A1C     		adds	r2, r3, #1
 23705 0072 07F10C03 		add	r3, r7, #12
 23706 0076 0133     		adds	r3, r3, #1
 23707 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23708 007a 07F11003 		add	r3, r7, #16
 23709 007e 1344     		add	r3, r3, r2
 23710 0080 0A46     		mov	r2, r1
 23711 0082 03F80C2C 		strb	r2, [r3, #-12]
 23712              	.L907:
3301:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23713              		.loc 1 3301 0 discriminator 1
 23714 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23715 0088 5A1E     		subs	r2, r3, #1
 23716 008a FA73     		strb	r2, [r7, #15]
 23717 008c 002B     		cmp	r3, #0
 23718 008e BFD1     		bne	.L908
3305:..\src/command_processing.c ****     }
3306:..\src/command_processing.c ****             
3307:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3308:..\src/command_processing.c **** 
3309:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23719              		.loc 1 3309 0
 23720 0090 3B1D     		adds	r3, r7, #4
 23721 0092 0721     		movs	r1, #7
 23722 0094 1846     		mov	r0, r3
 23723 0096 FFF7FEFF 		bl	LCRChecksum
 23724 009a 0346     		mov	r3, r0
 23725 009c FB72     		strb	r3, [r7, #11]
3310:..\src/command_processing.c **** 
3311:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23726              		.loc 1 3311 0
 23727 009e 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 519


 23728 00a0 0821     		movs	r1, #8
 23729 00a2 1846     		mov	r0, r3
 23730 00a4 FFF7FEFF 		bl	commWrite
3312:..\src/command_processing.c **** }
 23731              		.loc 1 3312 0
 23732 00a8 00BF     		nop
 23733 00aa 1437     		adds	r7, r7, #20
 23734              		.cfi_def_cfa_offset 12
 23735 00ac BD46     		mov	sp, r7
 23736              		.cfi_def_cfa_register 13
 23737              		@ sp needed
 23738 00ae 90BD     		pop	{r4, r7, pc}
 23739              	.L910:
 23740              		.align	2
 23741              	.L909:
 23742 00b0 00000000 		.word	g_mem
 23743 00b4 00000000 		.word	g_measOld
 23744              		.cfi_endproc
 23745              	.LFE92:
 23746              		.size	cmd_get_velocities, .-cmd_get_velocities
 23747              		.section	.text.cmd_get_accelerations,"ax",%progbits
 23748              		.align	2
 23749              		.global	cmd_get_accelerations
 23750              		.thumb
 23751              		.thumb_func
 23752              		.type	cmd_get_accelerations, %function
 23753              	cmd_get_accelerations:
 23754              	.LFB93:
3313:..\src/command_processing.c **** 
3314:..\src/command_processing.c **** void cmd_get_accelerations(){
 23755              		.loc 1 3314 0
 23756              		.cfi_startproc
 23757              		@ args = 0, pretend = 0, frame = 16
 23758              		@ frame_needed = 1, uses_anonymous_args = 0
 23759 0000 90B5     		push	{r4, r7, lr}
 23760              		.cfi_def_cfa_offset 12
 23761              		.cfi_offset 4, -12
 23762              		.cfi_offset 7, -8
 23763              		.cfi_offset 14, -4
 23764 0002 85B0     		sub	sp, sp, #20
 23765              		.cfi_def_cfa_offset 32
 23766 0004 00AF     		add	r7, sp, #0
 23767              		.cfi_def_cfa_register 7
3315:..\src/command_processing.c ****  
3316:..\src/command_processing.c ****     uint8 CYDATA index;
3317:..\src/command_processing.c ****     int16 aux_int16;
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3320:..\src/command_processing.c ****     
3321:..\src/command_processing.c ****     uint8 packet_data[8]; 
3322:..\src/command_processing.c ****     
3323:..\src/command_processing.c ****     //Header package
3324:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 23768              		.loc 1 3324 0
 23769 0006 8B23     		movs	r3, #139
 23770 0008 3B71     		strb	r3, [r7, #4]
3325:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 520


3326:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23771              		.loc 1 3326 0
 23772 000a 0323     		movs	r3, #3
 23773 000c FB73     		strb	r3, [r7, #15]
 23774 000e 39E0     		b	.L912
 23775              	.L913:
3327:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23776              		.loc 1 3327 0
 23777 0010 274B     		ldr	r3, .L914
 23778 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23779 0016 1A46     		mov	r2, r3
 23780 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23781 001a 2648     		ldr	r0, .L914+4
 23782 001c 1346     		mov	r3, r2
 23783 001e 5B00     		lsls	r3, r3, #1
 23784 0020 1344     		add	r3, r3, r2
 23785 0022 9B00     		lsls	r3, r3, #2
 23786 0024 1344     		add	r3, r3, r2
 23787 0026 0B44     		add	r3, r3, r1
 23788 0028 0A33     		adds	r3, r3, #10
 23789 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23790 002e 204B     		ldr	r3, .L914
 23791 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23792 0034 1C46     		mov	r4, r3
 23793 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23794 0038 1D48     		ldr	r0, .L914
 23795 003a 2346     		mov	r3, r4
 23796 003c 5B00     		lsls	r3, r3, #1
 23797 003e 2344     		add	r3, r3, r4
 23798 0040 1B01     		lsls	r3, r3, #4
 23799 0042 0344     		add	r3, r3, r0
 23800 0044 0B44     		add	r3, r3, r1
 23801 0046 03F29513 		addw	r3, r3, #405
 23802 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23803 004c 42FA03F3 		asr	r3, r2, r3
 23804 0050 1BB2     		sxth	r3, r3
 23805 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3328:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23806              		.loc 1 3328 0
 23807 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23808 0056 5B00     		lsls	r3, r3, #1
 23809 0058 0233     		adds	r3, r3, #2
 23810 005a 07F10C02 		add	r2, r7, #12
 23811 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23812 0060 07F11001 		add	r1, r7, #16
 23813 0064 0B44     		add	r3, r3, r1
 23814 0066 03F80C2C 		strb	r2, [r3, #-12]
3329:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23815              		.loc 1 3329 0
 23816 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23817 006c 5B00     		lsls	r3, r3, #1
 23818 006e 5A1C     		adds	r2, r3, #1
 23819 0070 07F10C03 		add	r3, r7, #12
 23820 0074 0133     		adds	r3, r3, #1
 23821 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23822 0078 07F11003 		add	r3, r7, #16
 23823 007c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 521


 23824 007e 0A46     		mov	r2, r1
 23825 0080 03F80C2C 		strb	r2, [r3, #-12]
 23826              	.L912:
3326:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 23827              		.loc 1 3326 0 discriminator 1
 23828 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23829 0086 5A1E     		subs	r2, r3, #1
 23830 0088 FA73     		strb	r2, [r7, #15]
 23831 008a 002B     		cmp	r3, #0
 23832 008c C0D1     		bne	.L913
3330:..\src/command_processing.c ****     }
3331:..\src/command_processing.c ****     
3332:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3333:..\src/command_processing.c **** 
3334:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23833              		.loc 1 3334 0
 23834 008e 3B1D     		adds	r3, r7, #4
 23835 0090 0721     		movs	r1, #7
 23836 0092 1846     		mov	r0, r3
 23837 0094 FFF7FEFF 		bl	LCRChecksum
 23838 0098 0346     		mov	r3, r0
 23839 009a FB72     		strb	r3, [r7, #11]
3335:..\src/command_processing.c **** 
3336:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 23840              		.loc 1 3336 0
 23841 009c 3B1D     		adds	r3, r7, #4
 23842 009e 0821     		movs	r1, #8
 23843 00a0 1846     		mov	r0, r3
 23844 00a2 FFF7FEFF 		bl	commWrite
3337:..\src/command_processing.c **** }
 23845              		.loc 1 3337 0
 23846 00a6 00BF     		nop
 23847 00a8 1437     		adds	r7, r7, #20
 23848              		.cfi_def_cfa_offset 12
 23849 00aa BD46     		mov	sp, r7
 23850              		.cfi_def_cfa_register 13
 23851              		@ sp needed
 23852 00ac 90BD     		pop	{r4, r7, pc}
 23853              	.L915:
 23854 00ae 00BF     		.align	2
 23855              	.L914:
 23856 00b0 00000000 		.word	g_mem
 23857 00b4 00000000 		.word	g_measOld
 23858              		.cfi_endproc
 23859              	.LFE93:
 23860              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 23861              		.section	.text.cmd_get_joystick,"ax",%progbits
 23862              		.align	2
 23863              		.global	cmd_get_joystick
 23864              		.thumb
 23865              		.thumb_func
 23866              		.type	cmd_get_joystick, %function
 23867              	cmd_get_joystick:
 23868              	.LFB94:
3338:..\src/command_processing.c **** 
3339:..\src/command_processing.c **** void cmd_get_joystick() {
 23869              		.loc 1 3339 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 522


 23870              		.cfi_startproc
 23871              		@ args = 0, pretend = 0, frame = 8
 23872              		@ frame_needed = 1, uses_anonymous_args = 0
 23873 0000 80B5     		push	{r7, lr}
 23874              		.cfi_def_cfa_offset 8
 23875              		.cfi_offset 7, -8
 23876              		.cfi_offset 14, -4
 23877 0002 82B0     		sub	sp, sp, #8
 23878              		.cfi_def_cfa_offset 16
 23879 0004 00AF     		add	r7, sp, #0
 23880              		.cfi_def_cfa_register 7
3340:..\src/command_processing.c ****  
3341:..\src/command_processing.c ****     int16 aux_int16;
3342:..\src/command_processing.c ****     
3343:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3344:..\src/command_processing.c ****     
3345:..\src/command_processing.c ****     uint8 packet_data[6];
3346:..\src/command_processing.c ****     
3347:..\src/command_processing.c ****     // Header        
3348:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 23881              		.loc 1 3348 0
 23882 0006 9223     		movs	r3, #146
 23883 0008 3B70     		strb	r3, [r7]
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 23884              		.loc 1 3350 0
 23885 000a 134B     		ldr	r3, .L917
 23886 000c 1B6A     		ldr	r3, [r3, #32]
 23887 000e 1BB2     		sxth	r3, r3
 23888 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3351:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23889              		.loc 1 3351 0
 23890 0012 BB1D     		adds	r3, r7, #6
 23891 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23892 0016 BB70     		strb	r3, [r7, #2]
3352:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23893              		.loc 1 3352 0
 23894 0018 BB1D     		adds	r3, r7, #6
 23895 001a 0133     		adds	r3, r3, #1
 23896 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23897 001e 7B70     		strb	r3, [r7, #1]
3353:..\src/command_processing.c ****     
3354:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 23898              		.loc 1 3354 0
 23899 0020 0D4B     		ldr	r3, .L917
 23900 0022 5B6A     		ldr	r3, [r3, #36]
 23901 0024 1BB2     		sxth	r3, r3
 23902 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3355:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23903              		.loc 1 3355 0
 23904 0028 BB1D     		adds	r3, r7, #6
 23905 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23906 002c 3B71     		strb	r3, [r7, #4]
3356:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23907              		.loc 1 3356 0
 23908 002e BB1D     		adds	r3, r7, #6
 23909 0030 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 523


 23910 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23911 0034 FB70     		strb	r3, [r7, #3]
3357:..\src/command_processing.c **** 
3358:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23912              		.loc 1 3358 0
 23913 0036 3B46     		mov	r3, r7
 23914 0038 0521     		movs	r1, #5
 23915 003a 1846     		mov	r0, r3
 23916 003c FFF7FEFF 		bl	LCRChecksum
 23917 0040 0346     		mov	r3, r0
 23918 0042 7B71     		strb	r3, [r7, #5]
3359:..\src/command_processing.c **** 
3360:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23919              		.loc 1 3360 0
 23920 0044 3B46     		mov	r3, r7
 23921 0046 0621     		movs	r1, #6
 23922 0048 1846     		mov	r0, r3
 23923 004a FFF7FEFF 		bl	commWrite
3361:..\src/command_processing.c **** }
 23924              		.loc 1 3361 0
 23925 004e 00BF     		nop
 23926 0050 0837     		adds	r7, r7, #8
 23927              		.cfi_def_cfa_offset 8
 23928 0052 BD46     		mov	sp, r7
 23929              		.cfi_def_cfa_register 13
 23930              		@ sp needed
 23931 0054 80BD     		pop	{r7, pc}
 23932              	.L918:
 23933 0056 00BF     		.align	2
 23934              	.L917:
 23935 0058 00000000 		.word	g_adc_measOld
 23936              		.cfi_endproc
 23937              	.LFE94:
 23938              		.size	cmd_get_joystick, .-cmd_get_joystick
 23939              		.section	.text.cmd_set_inputs,"ax",%progbits
 23940              		.align	2
 23941              		.global	cmd_set_inputs
 23942              		.thumb
 23943              		.thumb_func
 23944              		.type	cmd_set_inputs, %function
 23945              	cmd_set_inputs:
 23946              	.LFB95:
3362:..\src/command_processing.c **** 
3363:..\src/command_processing.c **** void cmd_set_inputs(){
 23947              		.loc 1 3363 0
 23948              		.cfi_startproc
 23949              		@ args = 0, pretend = 0, frame = 8
 23950              		@ frame_needed = 1, uses_anonymous_args = 0
 23951              		@ link register save eliminated.
 23952 0000 90B4     		push	{r4, r7}
 23953              		.cfi_def_cfa_offset 8
 23954              		.cfi_offset 4, -8
 23955              		.cfi_offset 7, -4
 23956 0002 82B0     		sub	sp, sp, #8
 23957              		.cfi_def_cfa_offset 16
 23958 0004 00AF     		add	r7, sp, #0
 23959              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 524


3364:..\src/command_processing.c ****     
3365:..\src/command_processing.c ****     // Store position setted in right variables
3366:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3367:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3368:..\src/command_processing.c ****     
3369:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 23960              		.loc 1 3369 0
 23961 0006 894B     		ldr	r3, .L933
 23962 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23963 000a 1B02     		lsls	r3, r3, #8
 23964 000c 1AB2     		sxth	r2, r3
 23965 000e 874B     		ldr	r3, .L933
 23966 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23967 0012 1BB2     		sxth	r3, r3
 23968 0014 1343     		orrs	r3, r3, r2
 23969 0016 1BB2     		sxth	r3, r3
 23970 0018 3B80     		strh	r3, [r7]	@ movhi
3370:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 23971              		.loc 1 3370 0
 23972 001a 844B     		ldr	r3, .L933
 23973 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 23974 001e 1B02     		lsls	r3, r3, #8
 23975 0020 1AB2     		sxth	r2, r3
 23976 0022 824B     		ldr	r3, .L933
 23977 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 23978 0026 1BB2     		sxth	r3, r3
 23979 0028 1343     		orrs	r3, r3, r2
 23980 002a 1BB2     		sxth	r3, r3
 23981 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 23982              	.LBB26:
3371:..\src/command_processing.c ****     
3372:..\src/command_processing.c ****     // Check if last command received was the same as this 
3373:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3374:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 23983              		.loc 1 3374 0
 23984 002e 0023     		movs	r3, #0
 23985 0030 FB71     		strb	r3, [r7, #7]
 23986 0032 1DE0     		b	.L920
 23987              	.L922:
3375:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 23988              		.loc 1 3375 0
 23989 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23990 0036 7E4A     		ldr	r2, .L933+4
 23991 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 23992 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23993 003e 5B00     		lsls	r3, r3, #1
 23994 0040 07F10801 		add	r1, r7, #8
 23995 0044 0B44     		add	r3, r3, r1
 23996 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 23997 004a 9A42     		cmp	r2, r3
 23998 004c 02D0     		beq	.L921
3376:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 23999              		.loc 1 3376 0
 24000 004e 794B     		ldr	r3, .L933+8
 24001 0050 0122     		movs	r2, #1
 24002 0052 1A70     		strb	r2, [r3]
 24003              	.L921:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 525


3377:..\src/command_processing.c ****        }
3378:..\src/command_processing.c ****         // Update last command
3379:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24004              		.loc 1 3379 0 discriminator 2
 24005 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24006 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24007 0058 5B00     		lsls	r3, r3, #1
 24008 005a 07F10801 		add	r1, r7, #8
 24009 005e 0B44     		add	r3, r3, r1
 24010 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24011 0064 724B     		ldr	r3, .L933+4
 24012 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3374:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24013              		.loc 1 3374 0 discriminator 2
 24014 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24015 006c 0133     		adds	r3, r3, #1
 24016 006e FB71     		strb	r3, [r7, #7]
 24017              	.L920:
3374:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24018              		.loc 1 3374 0 is_stmt 0 discriminator 1
 24019 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24020 0072 714B     		ldr	r3, .L933+12
 24021 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24022 0078 0133     		adds	r3, r3, #1
 24023 007a 9A42     		cmp	r2, r3
 24024 007c DADB     		blt	.L922
 24025              	.LBE26:
3380:..\src/command_processing.c ****     }
3381:..\src/command_processing.c ****     
3382:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3383:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24026              		.loc 1 3383 0 is_stmt 1
 24027 007e 6D4B     		ldr	r3, .L933+8
 24028 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24029 0082 002B     		cmp	r3, #0
 24030 0084 00F0CC80 		beq	.L932
 24031              	.LBB27:
3384:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24032              		.loc 1 3384 0
 24033 0088 0023     		movs	r3, #0
 24034 008a BB71     		strb	r3, [r7, #6]
 24035 008c C4E0     		b	.L924
 24036              	.L931:
3385:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24037              		.loc 1 3385 0
 24038 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24039 0090 6A49     		ldr	r1, .L933+16
 24040 0092 1346     		mov	r3, r2
 24041 0094 DB00     		lsls	r3, r3, #3
 24042 0096 9B1A     		subs	r3, r3, r2
 24043 0098 1B01     		lsls	r3, r3, #4
 24044 009a 0B44     		add	r3, r3, r1
 24045 009c 03F20F13 		addw	r3, r3, #271
 24046 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24047 00a2 022B     		cmp	r3, #2
 24048 00a4 0ED1     		bne	.L925
3386:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 526


 24049              		.loc 1 3386 0
 24050 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24051 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24052 00aa 5B00     		lsls	r3, r3, #1
 24053 00ac 07F10801 		add	r1, r7, #8
 24054 00b0 0B44     		add	r3, r3, r1
 24055 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24056 00b6 1846     		mov	r0, r3
 24057 00b8 6149     		ldr	r1, .L933+20
 24058 00ba 1301     		lsls	r3, r2, #4
 24059 00bc 0B44     		add	r3, r3, r1
 24060 00be 0433     		adds	r3, r3, #4
 24061 00c0 1860     		str	r0, [r3]
 24062 00c2 47E0     		b	.L926
 24063              	.L925:
3387:..\src/command_processing.c ****             }
3388:..\src/command_processing.c ****             else {
3389:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24064              		.loc 1 3389 0
 24065 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24066 00c6 5D49     		ldr	r1, .L933+16
 24067 00c8 1346     		mov	r3, r2
 24068 00ca DB00     		lsls	r3, r3, #3
 24069 00cc 9B1A     		subs	r3, r3, r2
 24070 00ce 1B01     		lsls	r3, r3, #4
 24071 00d0 0B44     		add	r3, r3, r1
 24072 00d2 03F20F13 		addw	r3, r3, #271
 24073 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24074 00d8 012B     		cmp	r3, #1
 24075 00da 0ED1     		bne	.L927
3390:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24076              		.loc 1 3390 0
 24077 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24078 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24079 00e0 5B00     		lsls	r3, r3, #1
 24080 00e2 07F10801 		add	r1, r7, #8
 24081 00e6 0B44     		add	r3, r3, r1
 24082 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24083 00ec 1846     		mov	r0, r3
 24084 00ee 5449     		ldr	r1, .L933+20
 24085 00f0 1301     		lsls	r3, r2, #4
 24086 00f2 0B44     		add	r3, r3, r1
 24087 00f4 0833     		adds	r3, r3, #8
 24088 00f6 1860     		str	r0, [r3]
 24089 00f8 2CE0     		b	.L926
 24090              	.L927:
3391:..\src/command_processing.c ****                 }
3392:..\src/command_processing.c ****                 else {
3393:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24091              		.loc 1 3393 0
 24092 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24093 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24094 00fe 5B00     		lsls	r3, r3, #1
 24095 0100 07F10801 		add	r1, r7, #8
 24096 0104 0B44     		add	r3, r3, r1
 24097 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24098 010a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 527


 24099 010c 4C49     		ldr	r1, .L933+20
 24100 010e 1301     		lsls	r3, r2, #4
 24101 0110 0B44     		add	r3, r3, r1
 24102 0112 1860     		str	r0, [r3]
3394:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24103              		.loc 1 3394 0
 24104 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24105 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24106 0118 494A     		ldr	r2, .L933+20
 24107 011a 1B01     		lsls	r3, r3, #4
 24108 011c 1344     		add	r3, r3, r2
 24109 011e 1868     		ldr	r0, [r3]
 24110 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24111 0122 454C     		ldr	r4, .L933+12
 24112 0124 1346     		mov	r3, r2
 24113 0126 DB00     		lsls	r3, r3, #3
 24114 0128 9B1A     		subs	r3, r3, r2
 24115 012a 1B01     		lsls	r3, r3, #4
 24116 012c 2344     		add	r3, r3, r4
 24117 012e 03F58873 		add	r3, r3, #272
 24118 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24119 0134 1C46     		mov	r4, r3
 24120 0136 414A     		ldr	r2, .L933+16
 24121 0138 2346     		mov	r3, r4
 24122 013a 5B00     		lsls	r3, r3, #1
 24123 013c 2344     		add	r3, r3, r4
 24124 013e 1B01     		lsls	r3, r3, #4
 24125 0140 1344     		add	r3, r3, r2
 24126 0142 03F29513 		addw	r3, r3, #405
 24127 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24128 0148 00FA03F2 		lsl	r2, r0, r3
 24129 014c 3C48     		ldr	r0, .L933+20
 24130 014e 0B01     		lsls	r3, r1, #4
 24131 0150 0344     		add	r3, r3, r0
 24132 0152 1A60     		str	r2, [r3]
 24133              	.L926:
3395:..\src/command_processing.c ****                 }
3396:..\src/command_processing.c ****             }  
3397:..\src/command_processing.c ****                
3398:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3399:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24134              		.loc 1 3399 0
 24135 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24136 0156 3849     		ldr	r1, .L933+12
 24137 0158 1346     		mov	r3, r2
 24138 015a DB00     		lsls	r3, r3, #3
 24139 015c 9B1A     		subs	r3, r3, r2
 24140 015e 1B01     		lsls	r3, r3, #4
 24141 0160 0B44     		add	r3, r3, r1
 24142 0162 E333     		adds	r3, r3, #227
 24143 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24144 0166 002B     		cmp	r3, #0
 24145 0168 53D0     		beq	.L928
 24146              		.loc 1 3399 0 is_stmt 0 discriminator 1
 24147 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24148 016c 3349     		ldr	r1, .L933+16
 24149 016e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 528


 24150 0170 DB00     		lsls	r3, r3, #3
 24151 0172 9B1A     		subs	r3, r3, r2
 24152 0174 1B01     		lsls	r3, r3, #4
 24153 0176 0B44     		add	r3, r3, r1
 24154 0178 03F20F13 		addw	r3, r3, #271
 24155 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24156 017e 032B     		cmp	r3, #3
 24157 0180 0BD0     		beq	.L929
 24158              		.loc 1 3399 0 discriminator 2
 24159 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24160 0184 2D49     		ldr	r1, .L933+16
 24161 0186 1346     		mov	r3, r2
 24162 0188 DB00     		lsls	r3, r3, #3
 24163 018a 9B1A     		subs	r3, r3, r2
 24164 018c 1B01     		lsls	r3, r3, #4
 24165 018e 0B44     		add	r3, r3, r1
 24166 0190 03F20F13 		addw	r3, r3, #271
 24167 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24168 0196 002B     		cmp	r3, #0
 24169 0198 3BD1     		bne	.L928
 24170              	.L929:
3400:..\src/command_processing.c ****                 
3401:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24171              		.loc 1 3401 0 is_stmt 1
 24172 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24173 019c 284A     		ldr	r2, .L933+20
 24174 019e 1B01     		lsls	r3, r3, #4
 24175 01a0 1344     		add	r3, r3, r2
 24176 01a2 1968     		ldr	r1, [r3]
 24177 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24178 01a6 2448     		ldr	r0, .L933+12
 24179 01a8 1346     		mov	r3, r2
 24180 01aa DB00     		lsls	r3, r3, #3
 24181 01ac 9B1A     		subs	r3, r3, r2
 24182 01ae 1B01     		lsls	r3, r3, #4
 24183 01b0 0344     		add	r3, r3, r0
 24184 01b2 E433     		adds	r3, r3, #228
 24185 01b4 1B68     		ldr	r3, [r3]
 24186 01b6 9942     		cmp	r1, r3
 24187 01b8 0DDA     		bge	.L930
3402:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24188              		.loc 1 3402 0
 24189 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24190 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24191 01be 1E48     		ldr	r0, .L933+12
 24192 01c0 1346     		mov	r3, r2
 24193 01c2 DB00     		lsls	r3, r3, #3
 24194 01c4 9B1A     		subs	r3, r3, r2
 24195 01c6 1B01     		lsls	r3, r3, #4
 24196 01c8 0344     		add	r3, r3, r0
 24197 01ca E433     		adds	r3, r3, #228
 24198 01cc 1A68     		ldr	r2, [r3]
 24199 01ce 1C48     		ldr	r0, .L933+20
 24200 01d0 0B01     		lsls	r3, r1, #4
 24201 01d2 0344     		add	r3, r3, r0
 24202 01d4 1A60     		str	r2, [r3]
 24203              	.L930:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 529


3403:..\src/command_processing.c **** 
3404:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24204              		.loc 1 3404 0
 24205 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24206 01d8 194A     		ldr	r2, .L933+20
 24207 01da 1B01     		lsls	r3, r3, #4
 24208 01dc 1344     		add	r3, r3, r2
 24209 01de 1968     		ldr	r1, [r3]
 24210 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24211 01e2 1548     		ldr	r0, .L933+12
 24212 01e4 1346     		mov	r3, r2
 24213 01e6 DB00     		lsls	r3, r3, #3
 24214 01e8 9B1A     		subs	r3, r3, r2
 24215 01ea 1B01     		lsls	r3, r3, #4
 24216 01ec 0344     		add	r3, r3, r0
 24217 01ee E833     		adds	r3, r3, #232
 24218 01f0 1B68     		ldr	r3, [r3]
 24219 01f2 9942     		cmp	r1, r3
 24220 01f4 0DDD     		ble	.L928
3405:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24221              		.loc 1 3405 0
 24222 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24223 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24224 01fa 0F48     		ldr	r0, .L933+12
 24225 01fc 1346     		mov	r3, r2
 24226 01fe DB00     		lsls	r3, r3, #3
 24227 0200 9B1A     		subs	r3, r3, r2
 24228 0202 1B01     		lsls	r3, r3, #4
 24229 0204 0344     		add	r3, r3, r0
 24230 0206 E833     		adds	r3, r3, #232
 24231 0208 1A68     		ldr	r2, [r3]
 24232 020a 0D48     		ldr	r0, .L933+20
 24233 020c 0B01     		lsls	r3, r1, #4
 24234 020e 0344     		add	r3, r3, r0
 24235 0210 1A60     		str	r2, [r3]
 24236              	.L928:
3384:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24237              		.loc 1 3384 0 discriminator 2
 24238 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24239 0214 0133     		adds	r3, r3, #1
 24240 0216 BB71     		strb	r3, [r7, #6]
 24241              	.L924:
3384:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24242              		.loc 1 3384 0 is_stmt 0 discriminator 1
 24243 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24244 021a 012B     		cmp	r3, #1
 24245 021c 7FF637AF 		bls	.L931
 24246              	.L932:
 24247              	.LBE27:
3406:..\src/command_processing.c ****             }
3407:..\src/command_processing.c ****         }  
3408:..\src/command_processing.c ****     }
3409:..\src/command_processing.c **** }
 24248              		.loc 1 3409 0 is_stmt 1
 24249 0220 00BF     		nop
 24250 0222 0837     		adds	r7, r7, #8
 24251              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 530


 24252 0224 BD46     		mov	sp, r7
 24253              		.cfi_def_cfa_register 13
 24254              		@ sp needed
 24255 0226 90BC     		pop	{r4, r7}
 24256              		.cfi_restore 7
 24257              		.cfi_restore 4
 24258              		.cfi_def_cfa_offset 0
 24259 0228 7047     		bx	lr
 24260              	.L934:
 24261 022a 00BF     		.align	2
 24262              	.L933:
 24263 022c 00000000 		.word	g_rx
 24264 0230 04000000 		.word	last_aux_int16.11358
 24265 0234 00000000 		.word	change_ext_ref_flag
 24266 0238 00000000 		.word	c_mem
 24267 023c 00000000 		.word	g_mem
 24268 0240 00000000 		.word	g_refNew
 24269              		.cfi_endproc
 24270              	.LFE95:
 24271              		.size	cmd_set_inputs, .-cmd_set_inputs
 24272              		.section	.text.cmd_activate,"ax",%progbits
 24273              		.align	2
 24274              		.global	cmd_activate
 24275              		.thumb
 24276              		.thumb_func
 24277              		.type	cmd_activate, %function
 24278              	cmd_activate:
 24279              	.LFB96:
3410:..\src/command_processing.c **** 
3411:..\src/command_processing.c **** void cmd_activate(){
 24280              		.loc 1 3411 0
 24281              		.cfi_startproc
 24282              		@ args = 0, pretend = 0, frame = 8
 24283              		@ frame_needed = 1, uses_anonymous_args = 0
 24284 0000 80B5     		push	{r7, lr}
 24285              		.cfi_def_cfa_offset 8
 24286              		.cfi_offset 7, -8
 24287              		.cfi_offset 14, -4
 24288 0002 82B0     		sub	sp, sp, #8
 24289              		.cfi_def_cfa_offset 16
 24290 0004 00AF     		add	r7, sp, #0
 24291              		.cfi_def_cfa_register 7
3412:..\src/command_processing.c ****     
3413:..\src/command_processing.c ****     // Store new value reads
3414:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24292              		.loc 1 3414 0
 24293 0006 294B     		ldr	r3, .L942
 24294 0008 5B78     		ldrb	r3, [r3, #1]
 24295 000a FB71     		strb	r3, [r7, #7]
3415:..\src/command_processing.c ****     
3416:..\src/command_processing.c ****     // Check type of control mode enabled
3417:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24296              		.loc 1 3417 0
 24297 000c 284B     		ldr	r3, .L942+4
 24298 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24299 0012 002B     		cmp	r3, #0
 24300 0014 04D0     		beq	.L936
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 531


 24301              		.loc 1 3417 0 is_stmt 0 discriminator 1
 24302 0016 264B     		ldr	r3, .L942+4
 24303 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24304 001c 032B     		cmp	r3, #3
 24305 001e 0BD1     		bne	.L937
 24306              	.L936:
3418:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24307              		.loc 1 3418 0 is_stmt 1
 24308 0020 234B     		ldr	r3, .L942+4
 24309 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24310 0026 1946     		mov	r1, r3
 24311 0028 224A     		ldr	r2, .L942+8
 24312 002a 3423     		movs	r3, #52
 24313 002c 03FB01F3 		mul	r3, r3, r1
 24314 0030 1344     		add	r3, r3, r2
 24315 0032 1B68     		ldr	r3, [r3]
 24316 0034 204A     		ldr	r2, .L942+12
 24317 0036 1360     		str	r3, [r2]
 24318              	.L937:
3419:..\src/command_processing.c ****     }
3420:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24319              		.loc 1 3420 0
 24320 0038 FB79     		ldrb	r3, [r7, #7]
 24321 003a 03F00103 		and	r3, r3, #1
 24322 003e DAB2     		uxtb	r2, r3
 24323 0040 1D4B     		ldr	r3, .L942+12
 24324 0042 1A73     		strb	r2, [r3, #12]
3421:..\src/command_processing.c ****     
3422:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3423:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3424:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3425:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3426:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3427:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3428:..\src/command_processing.c ****         }
3429:..\src/command_processing.c ****         
3430:..\src/command_processing.c ****         // Activate or deactivate the valve
3431:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3432:..\src/command_processing.c ****     }
3433:..\src/command_processing.c **** #endif
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     // Activate/Deactivate motor
3436:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24325              		.loc 1 3436 0
 24326 0044 1C4B     		ldr	r3, .L942+12
 24327 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24328 0048 1946     		mov	r1, r3
 24329 004a 0020     		movs	r0, #0
 24330 004c FFF7FEFF 		bl	enable_motor
3437:..\src/command_processing.c ****     
3438:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24331              		.loc 1 3438 0
 24332 0050 174B     		ldr	r3, .L942+4
 24333 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24334 0056 012B     		cmp	r3, #1
 24335 0058 23D1     		bne	.L941
3439:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 532


 24336              		.loc 1 3439 0
 24337 005a 154B     		ldr	r3, .L942+4
 24338 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24339 0060 002B     		cmp	r3, #0
 24340 0062 04D0     		beq	.L939
 24341              		.loc 1 3439 0 is_stmt 0 discriminator 1
 24342 0064 124B     		ldr	r3, .L942+4
 24343 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24344 006a 032B     		cmp	r3, #3
 24345 006c 0BD1     		bne	.L940
 24346              	.L939:
3440:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24347              		.loc 1 3440 0 is_stmt 1
 24348 006e 104B     		ldr	r3, .L942+4
 24349 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24350 0074 1946     		mov	r1, r3
 24351 0076 0F4A     		ldr	r2, .L942+8
 24352 0078 3423     		movs	r3, #52
 24353 007a 03FB01F3 		mul	r3, r3, r1
 24354 007e 1344     		add	r3, r3, r2
 24355 0080 1B68     		ldr	r3, [r3]
 24356 0082 0D4A     		ldr	r2, .L942+12
 24357 0084 1361     		str	r3, [r2, #16]
 24358              	.L940:
3441:..\src/command_processing.c ****         }
3442:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24359              		.loc 1 3442 0
 24360 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24361 0088 5B08     		lsrs	r3, r3, #1
 24362 008a DBB2     		uxtb	r3, r3
 24363 008c 03F00103 		and	r3, r3, #1
 24364 0090 DAB2     		uxtb	r2, r3
 24365 0092 094B     		ldr	r3, .L942+12
 24366 0094 1A77     		strb	r2, [r3, #28]
3443:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24367              		.loc 1 3443 0
 24368 0096 084B     		ldr	r3, .L942+12
 24369 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24370 009a 1946     		mov	r1, r3
 24371 009c 0120     		movs	r0, #1
 24372 009e FFF7FEFF 		bl	enable_motor
 24373              	.L941:
3444:..\src/command_processing.c ****     }
3445:..\src/command_processing.c ****     
3446:..\src/command_processing.c **** }
 24374              		.loc 1 3446 0
 24375 00a2 00BF     		nop
 24376 00a4 0837     		adds	r7, r7, #8
 24377              		.cfi_def_cfa_offset 8
 24378 00a6 BD46     		mov	sp, r7
 24379              		.cfi_def_cfa_register 13
 24380              		@ sp needed
 24381 00a8 80BD     		pop	{r7, pc}
 24382              	.L943:
 24383 00aa 00BF     		.align	2
 24384              	.L942:
 24385 00ac 00000000 		.word	g_rx
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 533


 24386 00b0 00000000 		.word	g_mem
 24387 00b4 00000000 		.word	g_meas
 24388 00b8 00000000 		.word	g_refNew
 24389              		.cfi_endproc
 24390              	.LFE96:
 24391              		.size	cmd_activate, .-cmd_activate
 24392              		.section	.text.cmd_get_activate,"ax",%progbits
 24393              		.align	2
 24394              		.global	cmd_get_activate
 24395              		.thumb
 24396              		.thumb_func
 24397              		.type	cmd_get_activate, %function
 24398              	cmd_get_activate:
 24399              	.LFB97:
3447:..\src/command_processing.c **** 
3448:..\src/command_processing.c **** void cmd_get_activate(){
 24400              		.loc 1 3448 0
 24401              		.cfi_startproc
 24402              		@ args = 0, pretend = 0, frame = 8
 24403              		@ frame_needed = 1, uses_anonymous_args = 0
 24404 0000 80B5     		push	{r7, lr}
 24405              		.cfi_def_cfa_offset 8
 24406              		.cfi_offset 7, -8
 24407              		.cfi_offset 14, -4
 24408 0002 82B0     		sub	sp, sp, #8
 24409              		.cfi_def_cfa_offset 16
 24410 0004 00AF     		add	r7, sp, #0
 24411              		.cfi_def_cfa_register 7
3449:..\src/command_processing.c ****     
3450:..\src/command_processing.c ****     uint8 packet_data[3];
3451:..\src/command_processing.c **** 
3452:..\src/command_processing.c ****     // Header        
3453:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24412              		.loc 1 3453 0
 24413 0006 8123     		movs	r3, #129
 24414 0008 3B71     		strb	r3, [r7, #4]
3454:..\src/command_processing.c ****     
3455:..\src/command_processing.c ****     // Fill payload
3456:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24415              		.loc 1 3456 0
 24416 000a 124B     		ldr	r3, .L947
 24417 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24418 0010 012B     		cmp	r3, #1
 24419 0012 0BD1     		bne	.L945
3457:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24420              		.loc 1 3457 0
 24421 0014 104B     		ldr	r3, .L947+4
 24422 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24423 0018 5B00     		lsls	r3, r3, #1
 24424 001a 5AB2     		sxtb	r2, r3
 24425 001c 0E4B     		ldr	r3, .L947+4
 24426 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24427 0020 5BB2     		sxtb	r3, r3
 24428 0022 1343     		orrs	r3, r3, r2
 24429 0024 5BB2     		sxtb	r3, r3
 24430 0026 DBB2     		uxtb	r3, r3
 24431 0028 7B71     		strb	r3, [r7, #5]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 534


 24432 002a 02E0     		b	.L946
 24433              	.L945:
3458:..\src/command_processing.c ****     } 
3459:..\src/command_processing.c ****     else {
3460:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24434              		.loc 1 3460 0
 24435 002c 0A4B     		ldr	r3, .L947+4
 24436 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24437 0030 7B71     		strb	r3, [r7, #5]
 24438              	.L946:
3461:..\src/command_processing.c ****     }
3462:..\src/command_processing.c ****     
3463:..\src/command_processing.c ****     // Calculate checksum
3464:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24439              		.loc 1 3464 0
 24440 0032 3B1D     		adds	r3, r7, #4
 24441 0034 0221     		movs	r1, #2
 24442 0036 1846     		mov	r0, r3
 24443 0038 FFF7FEFF 		bl	LCRChecksum
 24444 003c 0346     		mov	r3, r0
 24445 003e BB71     		strb	r3, [r7, #6]
3465:..\src/command_processing.c ****     
3466:..\src/command_processing.c ****     // Send package to UART
3467:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24446              		.loc 1 3467 0
 24447 0040 3B1D     		adds	r3, r7, #4
 24448 0042 0321     		movs	r1, #3
 24449 0044 1846     		mov	r0, r3
 24450 0046 FFF7FEFF 		bl	commWrite
3468:..\src/command_processing.c **** 
3469:..\src/command_processing.c **** }
 24451              		.loc 1 3469 0
 24452 004a 00BF     		nop
 24453 004c 0837     		adds	r7, r7, #8
 24454              		.cfi_def_cfa_offset 8
 24455 004e BD46     		mov	sp, r7
 24456              		.cfi_def_cfa_register 13
 24457              		@ sp needed
 24458 0050 80BD     		pop	{r7, pc}
 24459              	.L948:
 24460 0052 00BF     		.align	2
 24461              	.L947:
 24462 0054 00000000 		.word	g_mem
 24463 0058 00000000 		.word	g_ref
 24464              		.cfi_endproc
 24465              	.LFE97:
 24466              		.size	cmd_get_activate, .-cmd_get_activate
 24467              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24468              		.align	2
 24469              		.global	cmd_get_curr_and_meas
 24470              		.thumb
 24471              		.thumb_func
 24472              		.type	cmd_get_curr_and_meas, %function
 24473              	cmd_get_curr_and_meas:
 24474              	.LFB98:
3470:..\src/command_processing.c **** 
3471:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 535


 24475              		.loc 1 3471 0
 24476              		.cfi_startproc
 24477              		@ args = 0, pretend = 0, frame = 16
 24478              		@ frame_needed = 1, uses_anonymous_args = 0
 24479 0000 90B5     		push	{r4, r7, lr}
 24480              		.cfi_def_cfa_offset 12
 24481              		.cfi_offset 4, -12
 24482              		.cfi_offset 7, -8
 24483              		.cfi_offset 14, -4
 24484 0002 85B0     		sub	sp, sp, #20
 24485              		.cfi_def_cfa_offset 32
 24486 0004 00AF     		add	r7, sp, #0
 24487              		.cfi_def_cfa_register 7
3472:..\src/command_processing.c ****     
3473:..\src/command_processing.c ****     uint8 CYDATA index;
3474:..\src/command_processing.c ****     int16 aux_int16;
3475:..\src/command_processing.c ****    
3476:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3477:..\src/command_processing.c ****     
3478:..\src/command_processing.c ****     uint8 packet_data[12]; 
3479:..\src/command_processing.c **** 
3480:..\src/command_processing.c ****     //Header package
3481:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24488              		.loc 1 3481 0
 24489 0006 8623     		movs	r3, #134
 24490 0008 3B70     		strb	r3, [r7]
3482:..\src/command_processing.c **** 
3483:..\src/command_processing.c ****     // Currents
3484:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24491              		.loc 1 3484 0
 24492 000a 484B     		ldr	r3, .L954
 24493 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24494 0010 1946     		mov	r1, r3
 24495 0012 474A     		ldr	r2, .L954+4
 24496 0014 3423     		movs	r3, #52
 24497 0016 03FB01F3 		mul	r3, r3, r1
 24498 001a 1344     		add	r3, r3, r2
 24499 001c 0C33     		adds	r3, r3, #12
 24500 001e 1B68     		ldr	r3, [r3]
 24501 0020 1BB2     		sxth	r3, r3
 24502 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3485:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24503              		.loc 1 3485 0
 24504 0024 07F10C03 		add	r3, r7, #12
 24505 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24506 002a BB70     		strb	r3, [r7, #2]
3486:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24507              		.loc 1 3486 0
 24508 002c 07F10C03 		add	r3, r7, #12
 24509 0030 0133     		adds	r3, r3, #1
 24510 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24511 0034 7B70     		strb	r3, [r7, #1]
3487:..\src/command_processing.c ****     
3488:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24512              		.loc 1 3488 0
 24513 0036 3F4B     		ldr	r3, .L954+8
 24514 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 536


 24515 003c 012B     		cmp	r3, #1
 24516 003e 0DD1     		bne	.L950
3489:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24517              		.loc 1 3489 0
 24518 0040 3A4B     		ldr	r3, .L954
 24519 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24520 0046 1946     		mov	r1, r3
 24521 0048 394A     		ldr	r2, .L954+4
 24522 004a 3423     		movs	r3, #52
 24523 004c 03FB01F3 		mul	r3, r3, r1
 24524 0050 1344     		add	r3, r3, r2
 24525 0052 0C33     		adds	r3, r3, #12
 24526 0054 1B68     		ldr	r3, [r3]
 24527 0056 1BB2     		sxth	r3, r3
 24528 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24529 005a 0CE0     		b	.L951
 24530              	.L950:
3490:..\src/command_processing.c ****     }
3491:..\src/command_processing.c ****     else {
3492:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24531              		.loc 1 3492 0
 24532 005c 334B     		ldr	r3, .L954
 24533 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24534 0062 1946     		mov	r1, r3
 24535 0064 324A     		ldr	r2, .L954+4
 24536 0066 3423     		movs	r3, #52
 24537 0068 03FB01F3 		mul	r3, r3, r1
 24538 006c 1344     		add	r3, r3, r2
 24539 006e 1033     		adds	r3, r3, #16
 24540 0070 1B68     		ldr	r3, [r3]
 24541 0072 1BB2     		sxth	r3, r3
 24542 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24543              	.L951:
3493:..\src/command_processing.c ****     }
3494:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24544              		.loc 1 3494 0
 24545 0076 07F10C03 		add	r3, r7, #12
 24546 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24547 007c 3B71     		strb	r3, [r7, #4]
3495:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24548              		.loc 1 3495 0
 24549 007e 07F10C03 		add	r3, r7, #12
 24550 0082 0133     		adds	r3, r3, #1
 24551 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24552 0086 FB70     		strb	r3, [r7, #3]
3496:..\src/command_processing.c **** 
3497:..\src/command_processing.c ****     // Positions
3498:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24553              		.loc 1 3498 0
 24554 0088 0323     		movs	r3, #3
 24555 008a FB73     		strb	r3, [r7, #15]
 24556 008c 38E0     		b	.L952
 24557              	.L953:
3499:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24558              		.loc 1 3499 0
 24559 008e 274B     		ldr	r3, .L954
 24560 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 537


 24561 0094 1A46     		mov	r2, r3
 24562 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24563 0098 2548     		ldr	r0, .L954+4
 24564 009a 1346     		mov	r3, r2
 24565 009c 5B00     		lsls	r3, r3, #1
 24566 009e 1344     		add	r3, r3, r2
 24567 00a0 9B00     		lsls	r3, r3, #2
 24568 00a2 1344     		add	r3, r3, r2
 24569 00a4 0B44     		add	r3, r3, r1
 24570 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24571 00aa 204B     		ldr	r3, .L954
 24572 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24573 00b0 1C46     		mov	r4, r3
 24574 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24575 00b4 1D48     		ldr	r0, .L954
 24576 00b6 2346     		mov	r3, r4
 24577 00b8 5B00     		lsls	r3, r3, #1
 24578 00ba 2344     		add	r3, r3, r4
 24579 00bc 1B01     		lsls	r3, r3, #4
 24580 00be 0344     		add	r3, r3, r0
 24581 00c0 0B44     		add	r3, r3, r1
 24582 00c2 03F29513 		addw	r3, r3, #405
 24583 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24584 00c8 42FA03F3 		asr	r3, r2, r3
 24585 00cc 1BB2     		sxth	r3, r3
 24586 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3500:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24587              		.loc 1 3500 0
 24588 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24589 00d2 5B00     		lsls	r3, r3, #1
 24590 00d4 0633     		adds	r3, r3, #6
 24591 00d6 07F10C02 		add	r2, r7, #12
 24592 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24593 00dc 07F11001 		add	r1, r7, #16
 24594 00e0 0B44     		add	r3, r3, r1
 24595 00e2 03F8102C 		strb	r2, [r3, #-16]
3501:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24596              		.loc 1 3501 0
 24597 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24598 00e8 5B00     		lsls	r3, r3, #1
 24599 00ea 5A1D     		adds	r2, r3, #5
 24600 00ec 07F10C03 		add	r3, r7, #12
 24601 00f0 0133     		adds	r3, r3, #1
 24602 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24603 00f4 07F11003 		add	r3, r7, #16
 24604 00f8 1344     		add	r3, r3, r2
 24605 00fa 0A46     		mov	r2, r1
 24606 00fc 03F8102C 		strb	r2, [r3, #-16]
 24607              	.L952:
3498:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24608              		.loc 1 3498 0 discriminator 1
 24609 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24610 0102 5A1E     		subs	r2, r3, #1
 24611 0104 FA73     		strb	r2, [r7, #15]
 24612 0106 002B     		cmp	r3, #0
 24613 0108 C1D1     		bne	.L953
3502:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 538


3503:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3504:..\src/command_processing.c ****         
3505:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24614              		.loc 1 3505 0
 24615 010a 3B46     		mov	r3, r7
 24616 010c 0B21     		movs	r1, #11
 24617 010e 1846     		mov	r0, r3
 24618 0110 FFF7FEFF 		bl	LCRChecksum
 24619 0114 0346     		mov	r3, r0
 24620 0116 FB72     		strb	r3, [r7, #11]
3506:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24621              		.loc 1 3506 0
 24622 0118 3B46     		mov	r3, r7
 24623 011a 0C21     		movs	r1, #12
 24624 011c 1846     		mov	r0, r3
 24625 011e FFF7FEFF 		bl	commWrite
3507:..\src/command_processing.c ****    
3508:..\src/command_processing.c **** }
 24626              		.loc 1 3508 0
 24627 0122 00BF     		nop
 24628 0124 1437     		adds	r7, r7, #20
 24629              		.cfi_def_cfa_offset 12
 24630 0126 BD46     		mov	sp, r7
 24631              		.cfi_def_cfa_register 13
 24632              		@ sp needed
 24633 0128 90BD     		pop	{r4, r7, pc}
 24634              	.L955:
 24635 012a 00BF     		.align	2
 24636              	.L954:
 24637 012c 00000000 		.word	g_mem
 24638 0130 00000000 		.word	g_measOld
 24639 0134 00000000 		.word	c_mem
 24640              		.cfi_endproc
 24641              	.LFE98:
 24642              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 24643              		.global	__aeabi_dmul
 24644              		.global	__aeabi_d2iz
 24645              		.section	.text.cmd_get_currents,"ax",%progbits
 24646              		.align	2
 24647              		.global	cmd_get_currents
 24648              		.thumb
 24649              		.thumb_func
 24650              		.type	cmd_get_currents, %function
 24651              	cmd_get_currents:
 24652              	.LFB99:
3509:..\src/command_processing.c **** 
3510:..\src/command_processing.c **** void cmd_get_currents(){
 24653              		.loc 1 3510 0
 24654              		.cfi_startproc
 24655              		@ args = 0, pretend = 0, frame = 16
 24656              		@ frame_needed = 1, uses_anonymous_args = 0
 24657 0000 90B5     		push	{r4, r7, lr}
 24658              		.cfi_def_cfa_offset 12
 24659              		.cfi_offset 4, -12
 24660              		.cfi_offset 7, -8
 24661              		.cfi_offset 14, -4
 24662 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 539


 24663              		.cfi_def_cfa_offset 32
 24664 0004 00AF     		add	r7, sp, #0
 24665              		.cfi_def_cfa_register 7
3511:..\src/command_processing.c ****     
3512:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3513:..\src/command_processing.c ****     
3514:..\src/command_processing.c ****     uint8 packet_data[6]; 
3515:..\src/command_processing.c ****     int16 aux_int16;
3516:..\src/command_processing.c ****     
3517:..\src/command_processing.c ****     //Header package
3518:..\src/command_processing.c **** 
3519:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 24666              		.loc 1 3519 0
 24667 0006 8523     		movs	r3, #133
 24668 0008 3B72     		strb	r3, [r7, #8]
3520:..\src/command_processing.c **** 
3521:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 24669              		.loc 1 3521 0
 24670 000a 334B     		ldr	r3, .L961
 24671 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24672 0010 022B     		cmp	r3, #2
 24673 0012 0DD0     		beq	.L957
3522:..\src/command_processing.c ****         // Currents
3523:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 24674              		.loc 1 3523 0
 24675 0014 314B     		ldr	r3, .L961+4
 24676 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24677 001a 1946     		mov	r1, r3
 24678 001c 304A     		ldr	r2, .L961+8
 24679 001e 3423     		movs	r3, #52
 24680 0020 03FB01F3 		mul	r3, r3, r1
 24681 0024 1344     		add	r3, r3, r2
 24682 0026 0C33     		adds	r3, r3, #12
 24683 0028 1B68     		ldr	r3, [r3]
 24684 002a 1BB2     		sxth	r3, r3
 24685 002c FB80     		strh	r3, [r7, #6]	@ movhi
 24686 002e 12E0     		b	.L958
 24687              	.L957:
3524:..\src/command_processing.c ****     }
3525:..\src/command_processing.c ****     else {
3526:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3527:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 24688              		.loc 1 3527 0
 24689 0030 2C4B     		ldr	r3, .L961+12
 24690 0032 1B68     		ldr	r3, [r3]	@ float
 24691 0034 1846     		mov	r0, r3
 24692 0036 FFF7FEFF 		bl	__aeabi_f2d
 24693 003a 4FF00002 		mov	r2, #0
 24694 003e 2A4B     		ldr	r3, .L961+16
 24695 0040 FFF7FEFF 		bl	__aeabi_dmul
 24696 0044 0346     		mov	r3, r0
 24697 0046 0C46     		mov	r4, r1
 24698 0048 1846     		mov	r0, r3
 24699 004a 2146     		mov	r1, r4
 24700 004c FFF7FEFF 		bl	__aeabi_d2iz
 24701 0050 0346     		mov	r3, r0
 24702 0052 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 540


 24703 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 24704              	.L958:
3528:..\src/command_processing.c ****     }
3529:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24705              		.loc 1 3529 0
 24706 0056 BB1D     		adds	r3, r7, #6
 24707 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24708 005a BB72     		strb	r3, [r7, #10]
3530:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24709              		.loc 1 3530 0
 24710 005c BB1D     		adds	r3, r7, #6
 24711 005e 0133     		adds	r3, r3, #1
 24712 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24713 0062 7B72     		strb	r3, [r7, #9]
3531:..\src/command_processing.c ****     
3532:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24714              		.loc 1 3532 0
 24715 0064 1C4B     		ldr	r3, .L961
 24716 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24717 006a 012B     		cmp	r3, #1
 24718 006c 0DD1     		bne	.L959
3533:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24719              		.loc 1 3533 0
 24720 006e 1B4B     		ldr	r3, .L961+4
 24721 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24722 0074 1946     		mov	r1, r3
 24723 0076 1A4A     		ldr	r2, .L961+8
 24724 0078 3423     		movs	r3, #52
 24725 007a 03FB01F3 		mul	r3, r3, r1
 24726 007e 1344     		add	r3, r3, r2
 24727 0080 0C33     		adds	r3, r3, #12
 24728 0082 1B68     		ldr	r3, [r3]
 24729 0084 1BB2     		sxth	r3, r3
 24730 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 24731 0088 0CE0     		b	.L960
 24732              	.L959:
3534:..\src/command_processing.c ****     }
3535:..\src/command_processing.c ****     else {
3536:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24733              		.loc 1 3536 0
 24734 008a 144B     		ldr	r3, .L961+4
 24735 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24736 0090 1946     		mov	r1, r3
 24737 0092 134A     		ldr	r2, .L961+8
 24738 0094 3423     		movs	r3, #52
 24739 0096 03FB01F3 		mul	r3, r3, r1
 24740 009a 1344     		add	r3, r3, r2
 24741 009c 1033     		adds	r3, r3, #16
 24742 009e 1B68     		ldr	r3, [r3]
 24743 00a0 1BB2     		sxth	r3, r3
 24744 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 24745              	.L960:
3537:..\src/command_processing.c ****     }
3538:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24746              		.loc 1 3538 0
 24747 00a4 BB1D     		adds	r3, r7, #6
 24748 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 541


 24749 00a8 3B73     		strb	r3, [r7, #12]
3539:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24750              		.loc 1 3539 0
 24751 00aa BB1D     		adds	r3, r7, #6
 24752 00ac 0133     		adds	r3, r3, #1
 24753 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24754 00b0 FB72     		strb	r3, [r7, #11]
3540:..\src/command_processing.c **** 
3541:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3542:..\src/command_processing.c **** 
3543:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24755              		.loc 1 3543 0
 24756 00b2 07F10803 		add	r3, r7, #8
 24757 00b6 0521     		movs	r1, #5
 24758 00b8 1846     		mov	r0, r3
 24759 00ba FFF7FEFF 		bl	LCRChecksum
 24760 00be 0346     		mov	r3, r0
 24761 00c0 7B73     		strb	r3, [r7, #13]
3544:..\src/command_processing.c ****     
3545:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24762              		.loc 1 3545 0
 24763 00c2 07F10803 		add	r3, r7, #8
 24764 00c6 0621     		movs	r1, #6
 24765 00c8 1846     		mov	r0, r3
 24766 00ca FFF7FEFF 		bl	commWrite
3546:..\src/command_processing.c **** }
 24767              		.loc 1 3546 0
 24768 00ce 00BF     		nop
 24769 00d0 1437     		adds	r7, r7, #20
 24770              		.cfi_def_cfa_offset 12
 24771 00d2 BD46     		mov	sp, r7
 24772              		.cfi_def_cfa_register 13
 24773              		@ sp needed
 24774 00d4 90BD     		pop	{r4, r7, pc}
 24775              	.L962:
 24776 00d6 00BF     		.align	2
 24777              	.L961:
 24778 00d8 00000000 		.word	c_mem
 24779 00dc 00000000 		.word	g_mem
 24780 00e0 00000000 		.word	g_measOld
 24781 00e4 00000000 		.word	g_fb_meas
 24782 00e8 00005940 		.word	1079574528
 24783              		.cfi_endproc
 24784              	.LFE99:
 24785              		.size	cmd_get_currents, .-cmd_get_currents
 24786              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 24787              		.align	2
 24788              		.global	cmd_get_currents_for_cuff
 24789              		.thumb
 24790              		.thumb_func
 24791              		.type	cmd_get_currents_for_cuff, %function
 24792              	cmd_get_currents_for_cuff:
 24793              	.LFB100:
3547:..\src/command_processing.c **** 
3548:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 24794              		.loc 1 3548 0
 24795              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 542


 24796              		@ args = 0, pretend = 0, frame = 8
 24797              		@ frame_needed = 1, uses_anonymous_args = 0
 24798 0000 80B5     		push	{r7, lr}
 24799              		.cfi_def_cfa_offset 8
 24800              		.cfi_offset 7, -8
 24801              		.cfi_offset 14, -4
 24802 0002 82B0     		sub	sp, sp, #8
 24803              		.cfi_def_cfa_offset 16
 24804 0004 00AF     		add	r7, sp, #0
 24805              		.cfi_def_cfa_register 7
3549:..\src/command_processing.c ****     
3550:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3551:..\src/command_processing.c ****     
3552:..\src/command_processing.c ****     uint8 packet_data[4]; 
3553:..\src/command_processing.c ****     int16 aux_int16;
3554:..\src/command_processing.c ****     
3555:..\src/command_processing.c ****     //Header package
3556:..\src/command_processing.c **** 
3557:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 24806              		.loc 1 3557 0
 24807 0006 8E23     		movs	r3, #142
 24808 0008 3B71     		strb	r3, [r7, #4]
3558:..\src/command_processing.c **** 
3559:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 24809              		.loc 1 3559 0
 24810 000a 144B     		ldr	r3, .L964
 24811 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24812 0010 1946     		mov	r1, r3
 24813 0012 134A     		ldr	r2, .L964+4
 24814 0014 3423     		movs	r3, #52
 24815 0016 03FB01F3 		mul	r3, r3, r1
 24816 001a 1344     		add	r3, r3, r2
 24817 001c 1033     		adds	r3, r3, #16
 24818 001e 1B68     		ldr	r3, [r3]
 24819 0020 1BB2     		sxth	r3, r3
 24820 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3560:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24821              		.loc 1 3560 0
 24822 0024 BB1C     		adds	r3, r7, #2
 24823 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24824 0028 BB71     		strb	r3, [r7, #6]
3561:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24825              		.loc 1 3561 0
 24826 002a BB1C     		adds	r3, r7, #2
 24827 002c 0133     		adds	r3, r3, #1
 24828 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24829 0030 7B71     		strb	r3, [r7, #5]
3562:..\src/command_processing.c **** 
3563:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3564:..\src/command_processing.c **** 
3565:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 24830              		.loc 1 3565 0
 24831 0032 3B1D     		adds	r3, r7, #4
 24832 0034 0321     		movs	r1, #3
 24833 0036 1846     		mov	r0, r3
 24834 0038 FFF7FEFF 		bl	LCRChecksum
 24835 003c 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 543


 24836 003e FB71     		strb	r3, [r7, #7]
3566:..\src/command_processing.c ****     
3567:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 24837              		.loc 1 3567 0
 24838 0040 064B     		ldr	r3, .L964
 24839 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24840 0046 013B     		subs	r3, r3, #1
 24841 0048 DAB2     		uxtb	r2, r3
 24842 004a 3B1D     		adds	r3, r7, #4
 24843 004c 0421     		movs	r1, #4
 24844 004e 1846     		mov	r0, r3
 24845 0050 FFF7FEFF 		bl	commWriteID
3568:..\src/command_processing.c **** }
 24846              		.loc 1 3568 0
 24847 0054 00BF     		nop
 24848 0056 0837     		adds	r7, r7, #8
 24849              		.cfi_def_cfa_offset 8
 24850 0058 BD46     		mov	sp, r7
 24851              		.cfi_def_cfa_register 13
 24852              		@ sp needed
 24853 005a 80BD     		pop	{r7, pc}
 24854              	.L965:
 24855              		.align	2
 24856              	.L964:
 24857 005c 00000000 		.word	g_mem
 24858 0060 00000000 		.word	g_measOld
 24859              		.cfi_endproc
 24860              	.LFE100:
 24861              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 24862              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 24863              		.align	2
 24864              		.global	commReadResCurrFromSH
 24865              		.thumb
 24866              		.thumb_func
 24867              		.type	commReadResCurrFromSH, %function
 24868              	commReadResCurrFromSH:
 24869              	.LFB101:
3569:..\src/command_processing.c **** 
3570:..\src/command_processing.c **** //==============================================================================
3571:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3572:..\src/command_processing.c **** //==============================================================================
3573:..\src/command_processing.c **** 
3574:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3575:..\src/command_processing.c **** {
 24870              		.loc 1 3575 0
 24871              		.cfi_startproc
 24872              		@ args = 0, pretend = 0, frame = 32
 24873              		@ frame_needed = 1, uses_anonymous_args = 0
 24874 0000 80B5     		push	{r7, lr}
 24875              		.cfi_def_cfa_offset 8
 24876              		.cfi_offset 7, -8
 24877              		.cfi_offset 14, -4
 24878 0002 88B0     		sub	sp, sp, #32
 24879              		.cfi_def_cfa_offset 40
 24880 0004 00AF     		add	r7, sp, #0
 24881              		.cfi_def_cfa_register 7
3576:..\src/command_processing.c ****     uint8 packet_data[16];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 544


3577:..\src/command_processing.c ****     uint8 packet_lenght;
3578:..\src/command_processing.c ****     int16 curr_diff = 0;
 24882              		.loc 1 3578 0
 24883 0006 0023     		movs	r3, #0
 24884 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3579:..\src/command_processing.c ****     uint32 t_start, t_end;
3580:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 24885              		.loc 1 3580 0
 24886 000a 0123     		movs	r3, #1
 24887 000c 7B77     		strb	r3, [r7, #29]
3581:..\src/command_processing.c **** 
3582:..\src/command_processing.c ****     packet_lenght = 2;
 24888              		.loc 1 3582 0
 24889 000e 0223     		movs	r3, #2
 24890 0010 3B77     		strb	r3, [r7, #28]
3583:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 24891              		.loc 1 3583 0
 24892 0012 8C23     		movs	r3, #140
 24893 0014 3B71     		strb	r3, [r7, #4]
3584:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 24894              		.loc 1 3584 0
 24895 0016 8C23     		movs	r3, #140
 24896 0018 7B71     		strb	r3, [r7, #5]
3585:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 24897              		.loc 1 3585 0
 24898 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 24899 001c 99B2     		uxth	r1, r3
 24900 001e 1D4B     		ldr	r3, .L973
 24901 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 24902 0024 3B1D     		adds	r3, r7, #4
 24903 0026 1846     		mov	r0, r3
 24904 0028 FFF7FEFF 		bl	commWriteID
3586:..\src/command_processing.c **** 
3587:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 24905              		.loc 1 3587 0
 24906 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24907 0030 0346     		mov	r3, r0
 24908 0032 BB61     		str	r3, [r7, #24]
3588:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 24909              		.loc 1 3588 0
 24910 0034 18E0     		b	.L967
 24911              	.L970:
3589:..\src/command_processing.c ****         if (interrupt_flag){
 24912              		.loc 1 3589 0
 24913 0036 184B     		ldr	r3, .L973+4
 24914 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24915 003a 002B     		cmp	r3, #0
 24916 003c 04D0     		beq	.L968
3590:..\src/command_processing.c ****             interrupt_flag = FALSE;
 24917              		.loc 1 3590 0
 24918 003e 164B     		ldr	r3, .L973+4
 24919 0040 0022     		movs	r2, #0
 24920 0042 1A70     		strb	r2, [r3]
3591:..\src/command_processing.c ****             interrupt_manager();
 24921              		.loc 1 3591 0
 24922 0044 FFF7FEFF 		bl	interrupt_manager
 24923              	.L968:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 545


3592:..\src/command_processing.c ****         }
3593:..\src/command_processing.c **** 
3594:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 24924              		.loc 1 3594 0
 24925 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 24926 004c 0346     		mov	r3, r0
 24927 004e 7B61     		str	r3, [r7, #20]
3595:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 24928              		.loc 1 3595 0
 24929 0050 BA69     		ldr	r2, [r7, #24]
 24930 0052 7B69     		ldr	r3, [r7, #20]
 24931 0054 D31A     		subs	r3, r2, r3
 24932 0056 114A     		ldr	r2, .L973+8
 24933 0058 9342     		cmp	r3, r2
 24934 005a 05D9     		bls	.L967
3596:..\src/command_processing.c ****             read_flag = FALSE;
 24935              		.loc 1 3596 0
 24936 005c 0023     		movs	r3, #0
 24937 005e 7B77     		strb	r3, [r7, #29]
3597:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 24938              		.loc 1 3597 0
 24939 0060 0F4B     		ldr	r3, .L973+12
 24940 0062 0022     		movs	r2, #0
 24941 0064 1A70     		strb	r2, [r3]
3598:..\src/command_processing.c ****             break;
 24942              		.loc 1 3598 0
 24943 0066 03E0     		b	.L969
 24944              	.L967:
3588:..\src/command_processing.c ****         if (interrupt_flag){
 24945              		.loc 1 3588 0
 24946 0068 0E4B     		ldr	r3, .L973+16
 24947 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24948 006c 8E2B     		cmp	r3, #142
 24949 006e E2D1     		bne	.L970
 24950              	.L969:
3599:..\src/command_processing.c ****         }
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c **** 
3602:..\src/command_processing.c ****     if (read_flag) {
 24951              		.loc 1 3602 0
 24952 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 24953 0072 002B     		cmp	r3, #0
 24954 0074 08D0     		beq	.L971
3603:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 24955              		.loc 1 3603 0
 24956 0076 0B4B     		ldr	r3, .L973+16
 24957 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24958 007a 1B02     		lsls	r3, r3, #8
 24959 007c 1AB2     		sxth	r2, r3
 24960 007e 094B     		ldr	r3, .L973+16
 24961 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24962 0082 1BB2     		sxth	r3, r3
 24963 0084 1343     		orrs	r3, r3, r2
 24964 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 24965              	.L971:
3604:..\src/command_processing.c ****     }
3605:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 546


3606:..\src/command_processing.c ****     return curr_diff;
 24966              		.loc 1 3606 0
 24967 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3607:..\src/command_processing.c **** }
 24968              		.loc 1 3607 0
 24969 008c 1846     		mov	r0, r3
 24970 008e 2037     		adds	r7, r7, #32
 24971              		.cfi_def_cfa_offset 8
 24972 0090 BD46     		mov	sp, r7
 24973              		.cfi_def_cfa_register 13
 24974              		@ sp needed
 24975 0092 80BD     		pop	{r7, pc}
 24976              	.L974:
 24977              		.align	2
 24978              	.L973:
 24979 0094 00000000 		.word	c_mem
 24980 0098 00000000 		.word	interrupt_flag
 24981 009c 20AA4400 		.word	4500000
 24982 00a0 00000000 		.word	master_mode
 24983 00a4 00000000 		.word	g_rx
 24984              		.cfi_endproc
 24985              	.LFE101:
 24986              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 24987              		.section	.text.cmd_set_baudrate,"ax",%progbits
 24988              		.align	2
 24989              		.global	cmd_set_baudrate
 24990              		.thumb
 24991              		.thumb_func
 24992              		.type	cmd_set_baudrate, %function
 24993              	cmd_set_baudrate:
 24994              	.LFB102:
3608:..\src/command_processing.c **** 
3609:..\src/command_processing.c **** void cmd_set_baudrate(){
 24995              		.loc 1 3609 0
 24996              		.cfi_startproc
 24997              		@ args = 0, pretend = 0, frame = 0
 24998              		@ frame_needed = 1, uses_anonymous_args = 0
 24999 0000 80B5     		push	{r7, lr}
 25000              		.cfi_def_cfa_offset 8
 25001              		.cfi_offset 7, -8
 25002              		.cfi_offset 14, -4
 25003 0002 00AF     		add	r7, sp, #0
 25004              		.cfi_def_cfa_register 7
3610:..\src/command_processing.c ****     
3611:..\src/command_processing.c ****     // Set BaudRate
3612:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25005              		.loc 1 3612 0
 25006 0004 094B     		ldr	r3, .L980
 25007 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25008 0008 094B     		ldr	r3, .L980+4
 25009 000a 83F8AA20 		strb	r2, [r3, #170]
3613:..\src/command_processing.c ****     
3614:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25010              		.loc 1 3614 0
 25011 000e 074B     		ldr	r3, .L980
 25012 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25013 0012 0D2B     		cmp	r3, #13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 547


 25014 0014 04D1     		bne	.L979
3615:..\src/command_processing.c ****         case 13:
3616:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25015              		.loc 1 3616 0
 25016 0016 0121     		movs	r1, #1
 25017 0018 0C20     		movs	r0, #12
 25018 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3617:..\src/command_processing.c ****             break;
 25019              		.loc 1 3617 0
 25020 001e 03E0     		b	.L978
 25021              	.L979:
3618:..\src/command_processing.c ****         default:
3619:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25022              		.loc 1 3619 0
 25023 0020 0121     		movs	r1, #1
 25024 0022 0220     		movs	r0, #2
 25025 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25026              	.L978:
3620:..\src/command_processing.c ****     }
3621:..\src/command_processing.c **** }
 25027              		.loc 1 3621 0
 25028 0028 00BF     		nop
 25029 002a 80BD     		pop	{r7, pc}
 25030              	.L981:
 25031              		.align	2
 25032              	.L980:
 25033 002c 00000000 		.word	g_rx
 25034 0030 00000000 		.word	c_mem
 25035              		.cfi_endproc
 25036              	.LFE102:
 25037              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25038              		.section	.text.cmd_ping,"ax",%progbits
 25039              		.align	2
 25040              		.global	cmd_ping
 25041              		.thumb
 25042              		.thumb_func
 25043              		.type	cmd_ping, %function
 25044              	cmd_ping:
 25045              	.LFB103:
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c **** void cmd_ping(){
 25046              		.loc 1 3623 0
 25047              		.cfi_startproc
 25048              		@ args = 0, pretend = 0, frame = 8
 25049              		@ frame_needed = 1, uses_anonymous_args = 0
 25050 0000 80B5     		push	{r7, lr}
 25051              		.cfi_def_cfa_offset 8
 25052              		.cfi_offset 7, -8
 25053              		.cfi_offset 14, -4
 25054 0002 82B0     		sub	sp, sp, #8
 25055              		.cfi_def_cfa_offset 16
 25056 0004 00AF     		add	r7, sp, #0
 25057              		.cfi_def_cfa_register 7
3624:..\src/command_processing.c **** 
3625:..\src/command_processing.c ****     uint8 packet_data[2];
3626:..\src/command_processing.c **** 
3627:..\src/command_processing.c ****     // Header
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 548


3628:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25058              		.loc 1 3628 0
 25059 0006 0023     		movs	r3, #0
 25060 0008 3B71     		strb	r3, [r7, #4]
3629:..\src/command_processing.c ****     
3630:..\src/command_processing.c ****     // Load Payload
3631:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25061              		.loc 1 3631 0
 25062 000a 0023     		movs	r3, #0
 25063 000c 7B71     		strb	r3, [r7, #5]
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c ****     // Send Package to uart
3634:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25064              		.loc 1 3634 0
 25065 000e 3B1D     		adds	r3, r7, #4
 25066 0010 0221     		movs	r1, #2
 25067 0012 1846     		mov	r0, r3
 25068 0014 FFF7FEFF 		bl	commWrite
3635:..\src/command_processing.c **** }
 25069              		.loc 1 3635 0
 25070 0018 00BF     		nop
 25071 001a 0837     		adds	r7, r7, #8
 25072              		.cfi_def_cfa_offset 8
 25073 001c BD46     		mov	sp, r7
 25074              		.cfi_def_cfa_register 13
 25075              		@ sp needed
 25076 001e 80BD     		pop	{r7, pc}
 25077              		.cfi_endproc
 25078              	.LFE103:
 25079              		.size	cmd_ping, .-cmd_ping
 25080              		.section	.text.cmd_get_inputs,"ax",%progbits
 25081              		.align	2
 25082              		.global	cmd_get_inputs
 25083              		.thumb
 25084              		.thumb_func
 25085              		.type	cmd_get_inputs, %function
 25086              	cmd_get_inputs:
 25087              	.LFB104:
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c **** void cmd_get_inputs(){
 25088              		.loc 1 3637 0
 25089              		.cfi_startproc
 25090              		@ args = 0, pretend = 0, frame = 16
 25091              		@ frame_needed = 1, uses_anonymous_args = 0
 25092 0000 80B5     		push	{r7, lr}
 25093              		.cfi_def_cfa_offset 8
 25094              		.cfi_offset 7, -8
 25095              		.cfi_offset 14, -4
 25096 0002 84B0     		sub	sp, sp, #16
 25097              		.cfi_def_cfa_offset 24
 25098 0004 00AF     		add	r7, sp, #0
 25099              		.cfi_def_cfa_register 7
3638:..\src/command_processing.c **** 
3639:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3640:..\src/command_processing.c **** 
3641:..\src/command_processing.c ****     uint8 packet_data[6]; 
3642:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 549


3643:..\src/command_processing.c ****     
3644:..\src/command_processing.c ****     //Header package
3645:..\src/command_processing.c **** 
3646:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25100              		.loc 1 3646 0
 25101 0006 8323     		movs	r3, #131
 25102 0008 3B72     		strb	r3, [r7, #8]
3647:..\src/command_processing.c ****         
3648:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25103              		.loc 1 3648 0
 25104 000a 234B     		ldr	r3, .L984
 25105 000c 1A68     		ldr	r2, [r3]
 25106 000e 234B     		ldr	r3, .L984+4
 25107 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25108 0014 1846     		mov	r0, r3
 25109 0016 2149     		ldr	r1, .L984+4
 25110 0018 0346     		mov	r3, r0
 25111 001a 5B00     		lsls	r3, r3, #1
 25112 001c 0344     		add	r3, r3, r0
 25113 001e 1B01     		lsls	r3, r3, #4
 25114 0020 0B44     		add	r3, r3, r1
 25115 0022 03F29513 		addw	r3, r3, #405
 25116 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25117 0028 42FA03F3 		asr	r3, r2, r3
 25118 002c 1BB2     		sxth	r3, r3
 25119 002e FB80     		strh	r3, [r7, #6]	@ movhi
3649:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25120              		.loc 1 3649 0
 25121 0030 BB1D     		adds	r3, r7, #6
 25122 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25123 0034 BB72     		strb	r3, [r7, #10]
3650:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25124              		.loc 1 3650 0
 25125 0036 BB1D     		adds	r3, r7, #6
 25126 0038 0133     		adds	r3, r3, #1
 25127 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25128 003c 7B72     		strb	r3, [r7, #9]
3651:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25129              		.loc 1 3651 0
 25130 003e 164B     		ldr	r3, .L984
 25131 0040 1A69     		ldr	r2, [r3, #16]
 25132 0042 164B     		ldr	r3, .L984+4
 25133 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25134 0048 1846     		mov	r0, r3
 25135 004a 1449     		ldr	r1, .L984+4
 25136 004c 0346     		mov	r3, r0
 25137 004e 5B00     		lsls	r3, r3, #1
 25138 0050 0344     		add	r3, r3, r0
 25139 0052 1B01     		lsls	r3, r3, #4
 25140 0054 0B44     		add	r3, r3, r1
 25141 0056 03F29513 		addw	r3, r3, #405
 25142 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25143 005c 42FA03F3 		asr	r3, r2, r3
 25144 0060 1BB2     		sxth	r3, r3
 25145 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3652:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25146              		.loc 1 3652 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 550


 25147 0064 BB1D     		adds	r3, r7, #6
 25148 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25149 0068 3B73     		strb	r3, [r7, #12]
3653:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25150              		.loc 1 3653 0
 25151 006a BB1D     		adds	r3, r7, #6
 25152 006c 0133     		adds	r3, r3, #1
 25153 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25154 0070 FB72     		strb	r3, [r7, #11]
3654:..\src/command_processing.c ****     
3655:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25155              		.loc 1 3657 0
 25156 0072 07F10803 		add	r3, r7, #8
 25157 0076 0521     		movs	r1, #5
 25158 0078 1846     		mov	r0, r3
 25159 007a FFF7FEFF 		bl	LCRChecksum
 25160 007e 0346     		mov	r3, r0
 25161 0080 7B73     		strb	r3, [r7, #13]
3658:..\src/command_processing.c **** 
3659:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25162              		.loc 1 3659 0
 25163 0082 07F10803 		add	r3, r7, #8
 25164 0086 0621     		movs	r1, #6
 25165 0088 1846     		mov	r0, r3
 25166 008a FFF7FEFF 		bl	commWrite
3660:..\src/command_processing.c **** }
 25167              		.loc 1 3660 0
 25168 008e 00BF     		nop
 25169 0090 1037     		adds	r7, r7, #16
 25170              		.cfi_def_cfa_offset 8
 25171 0092 BD46     		mov	sp, r7
 25172              		.cfi_def_cfa_register 13
 25173              		@ sp needed
 25174 0094 80BD     		pop	{r7, pc}
 25175              	.L985:
 25176 0096 00BF     		.align	2
 25177              	.L984:
 25178 0098 00000000 		.word	g_refOld
 25179 009c 00000000 		.word	g_mem
 25180              		.cfi_endproc
 25181              	.LFE104:
 25182              		.size	cmd_get_inputs, .-cmd_get_inputs
 25183              		.section	.text.cmd_store_params,"ax",%progbits
 25184              		.align	2
 25185              		.global	cmd_store_params
 25186              		.thumb
 25187              		.thumb_func
 25188              		.type	cmd_store_params, %function
 25189              	cmd_store_params:
 25190              	.LFB105:
3661:..\src/command_processing.c **** 
3662:..\src/command_processing.c **** void cmd_store_params(){
 25191              		.loc 1 3662 0
 25192              		.cfi_startproc
 25193              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 551


 25194              		@ frame_needed = 1, uses_anonymous_args = 0
 25195 0000 80B5     		push	{r7, lr}
 25196              		.cfi_def_cfa_offset 8
 25197              		.cfi_offset 7, -8
 25198              		.cfi_offset 14, -4
 25199 0002 84B0     		sub	sp, sp, #16
 25200              		.cfi_def_cfa_offset 24
 25201 0004 00AF     		add	r7, sp, #0
 25202              		.cfi_def_cfa_register 7
3663:..\src/command_processing.c ****     
3664:..\src/command_processing.c ****     // Check input mode enabled
3665:..\src/command_processing.c ****     uint32 off_1;
3666:..\src/command_processing.c ****     float mult_1;
3667:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25203              		.loc 1 3667 0
 25204 0006 0223     		movs	r3, #2
 25205 0008 FB73     		strb	r3, [r7, #15]
3668:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3669:..\src/command_processing.c ****     uint8 CYDATA old_id;
3670:..\src/command_processing.c ****     
3671:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25206              		.loc 1 3671 0
 25207 000a 674B     		ldr	r3, .L997
 25208 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25209 0010 002B     		cmp	r3, #0
 25210 0012 7CD1     		bne	.L987
3672:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25211              		.loc 1 3672 0
 25212 0014 644B     		ldr	r3, .L997
 25213 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25214 001a 1946     		mov	r1, r3
 25215 001c 624A     		ldr	r2, .L997
 25216 001e 0B46     		mov	r3, r1
 25217 0020 5B00     		lsls	r3, r3, #1
 25218 0022 0B44     		add	r3, r3, r1
 25219 0024 1B01     		lsls	r3, r3, #4
 25220 0026 1344     		add	r3, r3, r2
 25221 0028 03F5CC73 		add	r3, r3, #408
 25222 002c 1B68     		ldr	r3, [r3]
 25223 002e BB60     		str	r3, [r7, #8]
3673:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25224              		.loc 1 3673 0
 25225 0030 5D4B     		ldr	r3, .L997
 25226 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25227 0036 1946     		mov	r1, r3
 25228 0038 5B4A     		ldr	r2, .L997
 25229 003a 0B46     		mov	r3, r1
 25230 003c 5B00     		lsls	r3, r3, #1
 25231 003e 0B44     		add	r3, r3, r1
 25232 0040 1B01     		lsls	r3, r3, #4
 25233 0042 1344     		add	r3, r3, r2
 25234 0044 03F5D273 		add	r3, r3, #420
 25235 0048 1B68     		ldr	r3, [r3]	@ float
 25236 004a 7B60     		str	r3, [r7, #4]	@ float
3674:..\src/command_processing.c **** 
3675:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25237              		.loc 1 3675 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 552


 25238 004c 574B     		ldr	r3, .L997+4
 25239 004e 1B68     		ldr	r3, [r3]
 25240 0050 1846     		mov	r0, r3
 25241 0052 FFF7FEFF 		bl	__aeabi_i2f
 25242 0056 0346     		mov	r3, r0
 25243 0058 7968     		ldr	r1, [r7, #4]	@ float
 25244 005a 1846     		mov	r0, r3
 25245 005c FFF7FEFF 		bl	__aeabi_fdiv
 25246 0060 0346     		mov	r3, r0
 25247 0062 1846     		mov	r0, r3
 25248 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25249 0068 0246     		mov	r2, r0
 25250 006a 504B     		ldr	r3, .L997+4
 25251 006c 1A60     		str	r2, [r3]
3676:..\src/command_processing.c **** 
3677:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25252              		.loc 1 3677 0
 25253 006e 4F4B     		ldr	r3, .L997+4
 25254 0070 1B68     		ldr	r3, [r3]
 25255 0072 1846     		mov	r0, r3
 25256 0074 FFF7FEFF 		bl	__aeabi_i2f
 25257 0078 4B4B     		ldr	r3, .L997
 25258 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25259 007e 1946     		mov	r1, r3
 25260 0080 4B4A     		ldr	r2, .L997+8
 25261 0082 0B46     		mov	r3, r1
 25262 0084 5B00     		lsls	r3, r3, #1
 25263 0086 0B44     		add	r3, r3, r1
 25264 0088 1B01     		lsls	r3, r3, #4
 25265 008a 1344     		add	r3, r3, r2
 25266 008c 03F5D273 		add	r3, r3, #420
 25267 0090 1B68     		ldr	r3, [r3]	@ float
 25268 0092 1946     		mov	r1, r3
 25269 0094 FFF7FEFF 		bl	__aeabi_fmul
 25270 0098 0346     		mov	r3, r0
 25271 009a 1846     		mov	r0, r3
 25272 009c FFF7FEFF 		bl	__aeabi_f2iz
 25273 00a0 0246     		mov	r2, r0
 25274 00a2 424B     		ldr	r3, .L997+4
 25275 00a4 1A60     		str	r2, [r3]
3678:..\src/command_processing.c **** 
3679:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25276              		.loc 1 3679 0
 25277 00a6 414B     		ldr	r3, .L997+4
 25278 00a8 1B68     		ldr	r3, [r3]
 25279 00aa 1846     		mov	r0, r3
 25280 00ac 3E4B     		ldr	r3, .L997
 25281 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25282 00b2 1946     		mov	r1, r3
 25283 00b4 3E4A     		ldr	r2, .L997+8
 25284 00b6 0B46     		mov	r3, r1
 25285 00b8 5B00     		lsls	r3, r3, #1
 25286 00ba 0B44     		add	r3, r3, r1
 25287 00bc 1B01     		lsls	r3, r3, #4
 25288 00be 1344     		add	r3, r3, r2
 25289 00c0 03F5CC73 		add	r3, r3, #408
 25290 00c4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 553


 25291 00c6 1A46     		mov	r2, r3
 25292 00c8 BB68     		ldr	r3, [r7, #8]
 25293 00ca D31A     		subs	r3, r2, r3
 25294 00cc 0344     		add	r3, r3, r0
 25295 00ce 1A46     		mov	r2, r3
 25296 00d0 364B     		ldr	r3, .L997+4
 25297 00d2 1A60     		str	r2, [r3]
3680:..\src/command_processing.c ****         
3681:..\src/command_processing.c ****         // Check position Limits
3682:..\src/command_processing.c **** 
3683:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25298              		.loc 1 3683 0
 25299 00d4 344B     		ldr	r3, .L997
 25300 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25301 00da 002B     		cmp	r3, #0
 25302 00dc 17D0     		beq	.L987
3684:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25303              		.loc 1 3684 0
 25304 00de 334B     		ldr	r3, .L997+4
 25305 00e0 1A68     		ldr	r2, [r3]
 25306 00e2 314B     		ldr	r3, .L997
 25307 00e4 D3F8E430 		ldr	r3, [r3, #228]
 25308 00e8 9A42     		cmp	r2, r3
 25309 00ea 04DA     		bge	.L988
3685:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25310              		.loc 1 3685 0
 25311 00ec 2E4B     		ldr	r3, .L997
 25312 00ee D3F8E430 		ldr	r3, [r3, #228]
 25313 00f2 2E4A     		ldr	r2, .L997+4
 25314 00f4 1360     		str	r3, [r2]
 25315              	.L988:
3686:..\src/command_processing.c **** 
3687:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25316              		.loc 1 3687 0
 25317 00f6 2D4B     		ldr	r3, .L997+4
 25318 00f8 1A68     		ldr	r2, [r3]
 25319 00fa 2B4B     		ldr	r3, .L997
 25320 00fc D3F8E830 		ldr	r3, [r3, #232]
 25321 0100 9A42     		cmp	r2, r3
 25322 0102 04DD     		ble	.L987
3688:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25323              		.loc 1 3688 0
 25324 0104 284B     		ldr	r3, .L997
 25325 0106 D3F8E830 		ldr	r3, [r3, #232]
 25326 010a 284A     		ldr	r2, .L997+4
 25327 010c 1360     		str	r3, [r2]
 25328              	.L987:
3689:..\src/command_processing.c ****         }
3690:..\src/command_processing.c ****     }
3691:..\src/command_processing.c ****     
3692:..\src/command_processing.c ****     // If SD is used, create new param and data file
3693:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25329              		.loc 1 3693 0
 25330 010e 264B     		ldr	r3, .L997
 25331 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25332 0114 012B     		cmp	r3, #1
 25333 0116 06D1     		bne	.L989
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 554


3694:..\src/command_processing.c ****         FS_FClose(pFile);
 25334              		.loc 1 3694 0
 25335 0118 264B     		ldr	r3, .L997+12
 25336 011a 1B68     		ldr	r3, [r3]
 25337 011c 1846     		mov	r0, r3
 25338 011e FFF7FEFF 		bl	FS_FClose
3695:..\src/command_processing.c ****         
3696:..\src/command_processing.c ****         InitSD_FS();
 25339              		.loc 1 3696 0
 25340 0122 FFF7FEFF 		bl	InitSD_FS
 25341              	.L989:
3697:..\src/command_processing.c ****     }
3698:..\src/command_processing.c ****    
3699:..\src/command_processing.c ****     // Store params 
3700:..\src/command_processing.c **** 
3701:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25342              		.loc 1 3701 0
 25343 0126 204B     		ldr	r3, .L997
 25344 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25345 012c 204B     		ldr	r3, .L997+8
 25346 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25347 0132 9A42     		cmp	r2, r3
 25348 0134 21D0     		beq	.L990
3702:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25349              		.loc 1 3702 0
 25350 0136 1C4B     		ldr	r3, .L997
 25351 0138 93F8A030 		ldrb	r3, [r3, #160]
 25352 013c FB70     		strb	r3, [r7, #3]
3703:..\src/command_processing.c ****         if(memStore(0)) {
 25353              		.loc 1 3703 0
 25354 013e 0020     		movs	r0, #0
 25355 0140 FFF7FEFF 		bl	memStore
 25356 0144 0346     		mov	r3, r0
 25357 0146 002B     		cmp	r3, #0
 25358 0148 0BD0     		beq	.L991
3704:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25359              		.loc 1 3704 0
 25360 014a 0123     		movs	r3, #1
 25361 014c 3B70     		strb	r3, [r7]
3705:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25362              		.loc 1 3705 0
 25363 014e 0123     		movs	r3, #1
 25364 0150 7B70     		strb	r3, [r7, #1]
3706:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25365              		.loc 1 3706 0
 25366 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25367 0154 99B2     		uxth	r1, r3
 25368 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25369 0158 3B46     		mov	r3, r7
 25370 015a 1846     		mov	r0, r3
 25371 015c FFF7FEFF 		bl	commWrite_old_id
 25372 0160 18E0     		b	.L993
 25373              	.L991:
3707:..\src/command_processing.c ****         }    
3708:..\src/command_processing.c ****         else{
3709:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25374              		.loc 1 3709 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 555


 25375 0162 0023     		movs	r3, #0
 25376 0164 3B70     		strb	r3, [r7]
3710:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25377              		.loc 1 3710 0
 25378 0166 0023     		movs	r3, #0
 25379 0168 7B70     		strb	r3, [r7, #1]
3711:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25380              		.loc 1 3711 0
 25381 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25382 016c 99B2     		uxth	r1, r3
 25383 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25384 0170 3B46     		mov	r3, r7
 25385 0172 1846     		mov	r0, r3
 25386 0174 FFF7FEFF 		bl	commWrite_old_id
 25387 0178 0CE0     		b	.L993
 25388              	.L990:
3712:..\src/command_processing.c ****         }
3713:..\src/command_processing.c ****     }    
3714:..\src/command_processing.c ****     else {
3715:..\src/command_processing.c ****         if(memStore(0))
 25389              		.loc 1 3715 0
 25390 017a 0020     		movs	r0, #0
 25391 017c FFF7FEFF 		bl	memStore
 25392 0180 0346     		mov	r3, r0
 25393 0182 002B     		cmp	r3, #0
 25394 0184 03D0     		beq	.L994
3716:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25395              		.loc 1 3716 0
 25396 0186 0120     		movs	r0, #1
 25397 0188 FFF7FEFF 		bl	sendAcknowledgment
 25398 018c 02E0     		b	.L993
 25399              	.L994:
3717:..\src/command_processing.c ****         else
3718:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25400              		.loc 1 3718 0
 25401 018e 0020     		movs	r0, #0
 25402 0190 FFF7FEFF 		bl	sendAcknowledgment
 25403              	.L993:
3719:..\src/command_processing.c ****     }
3720:..\src/command_processing.c ****     
3721:..\src/command_processing.c ****     // FW reset (if necessary)
3722:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25404              		.loc 1 3722 0
 25405 0194 084B     		ldr	r3, .L997+16
 25406 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25407 0198 012B     		cmp	r3, #1
 25408 019a 01D1     		bne	.L996
3723:..\src/command_processing.c ****         CySoftwareReset();
 25409              		.loc 1 3723 0
 25410 019c FFF7FEFF 		bl	CySoftwareReset
 25411              	.L996:
3724:..\src/command_processing.c ****     }
3725:..\src/command_processing.c **** }
 25412              		.loc 1 3725 0
 25413 01a0 00BF     		nop
 25414 01a2 1037     		adds	r7, r7, #16
 25415              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 556


 25416 01a4 BD46     		mov	sp, r7
 25417              		.cfi_def_cfa_register 13
 25418              		@ sp needed
 25419 01a6 80BD     		pop	{r7, pc}
 25420              	.L998:
 25421              		.align	2
 25422              	.L997:
 25423 01a8 00000000 		.word	c_mem
 25424 01ac 00000000 		.word	g_refNew
 25425 01b0 00000000 		.word	g_mem
 25426 01b4 00000000 		.word	pFile
 25427 01b8 00000000 		.word	reset_PSoC_flag
 25428              		.cfi_endproc
 25429              	.LFE105:
 25430              		.size	cmd_store_params, .-cmd_store_params
 25431              		.section	.text.cmd_get_emg,"ax",%progbits
 25432              		.align	2
 25433              		.global	cmd_get_emg
 25434              		.thumb
 25435              		.thumb_func
 25436              		.type	cmd_get_emg, %function
 25437              	cmd_get_emg:
 25438              	.LFB106:
3726:..\src/command_processing.c **** 
3727:..\src/command_processing.c **** void cmd_get_emg(){
 25439              		.loc 1 3727 0
 25440              		.cfi_startproc
 25441              		@ args = 0, pretend = 0, frame = 16
 25442              		@ frame_needed = 1, uses_anonymous_args = 0
 25443 0000 80B5     		push	{r7, lr}
 25444              		.cfi_def_cfa_offset 8
 25445              		.cfi_offset 7, -8
 25446              		.cfi_offset 14, -4
 25447 0002 84B0     		sub	sp, sp, #16
 25448              		.cfi_def_cfa_offset 24
 25449 0004 00AF     		add	r7, sp, #0
 25450              		.cfi_def_cfa_register 7
3728:..\src/command_processing.c ****     
3729:..\src/command_processing.c ****     uint8 packet_data[6];
3730:..\src/command_processing.c ****     int16 aux_int16;
3731:..\src/command_processing.c ****     
3732:..\src/command_processing.c ****     // Header        
3733:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25451              		.loc 1 3733 0
 25452 0006 8823     		movs	r3, #136
 25453 0008 3B72     		strb	r3, [r7, #8]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25454              		.loc 1 3735 0
 25455 000a 144B     		ldr	r3, .L1000
 25456 000c 1B68     		ldr	r3, [r3]
 25457 000e 1BB2     		sxth	r3, r3
 25458 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3736:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25459              		.loc 1 3736 0
 25460 0012 BB1D     		adds	r3, r7, #6
 25461 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 557


 25462 0016 BB72     		strb	r3, [r7, #10]
3737:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25463              		.loc 1 3737 0
 25464 0018 BB1D     		adds	r3, r7, #6
 25465 001a 0133     		adds	r3, r3, #1
 25466 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25467 001e 7B72     		strb	r3, [r7, #9]
3738:..\src/command_processing.c ****     
3739:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25468              		.loc 1 3739 0
 25469 0020 0E4B     		ldr	r3, .L1000
 25470 0022 5B68     		ldr	r3, [r3, #4]
 25471 0024 1BB2     		sxth	r3, r3
 25472 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3740:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25473              		.loc 1 3740 0
 25474 0028 BB1D     		adds	r3, r7, #6
 25475 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25476 002c 3B73     		strb	r3, [r7, #12]
3741:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25477              		.loc 1 3741 0
 25478 002e BB1D     		adds	r3, r7, #6
 25479 0030 0133     		adds	r3, r3, #1
 25480 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25481 0034 FB72     		strb	r3, [r7, #11]
3742:..\src/command_processing.c **** 
3743:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25482              		.loc 1 3743 0
 25483 0036 07F10803 		add	r3, r7, #8
 25484 003a 0521     		movs	r1, #5
 25485 003c 1846     		mov	r0, r3
 25486 003e FFF7FEFF 		bl	LCRChecksum
 25487 0042 0346     		mov	r3, r0
 25488 0044 7B73     		strb	r3, [r7, #13]
3744:..\src/command_processing.c **** 
3745:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25489              		.loc 1 3745 0
 25490 0046 07F10803 		add	r3, r7, #8
 25491 004a 0621     		movs	r1, #6
 25492 004c 1846     		mov	r0, r3
 25493 004e FFF7FEFF 		bl	commWrite
3746:..\src/command_processing.c **** 
3747:..\src/command_processing.c **** }
 25494              		.loc 1 3747 0
 25495 0052 00BF     		nop
 25496 0054 1037     		adds	r7, r7, #16
 25497              		.cfi_def_cfa_offset 8
 25498 0056 BD46     		mov	sp, r7
 25499              		.cfi_def_cfa_register 13
 25500              		@ sp needed
 25501 0058 80BD     		pop	{r7, pc}
 25502              	.L1001:
 25503 005a 00BF     		.align	2
 25504              	.L1000:
 25505 005c 00000000 		.word	g_adc_measOld
 25506              		.cfi_endproc
 25507              	.LFE106:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 558


 25508              		.size	cmd_get_emg, .-cmd_get_emg
 25509              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25510              		.align	2
 25511              		.global	cmd_get_imu_readings
 25512              		.thumb
 25513              		.thumb_func
 25514              		.type	cmd_get_imu_readings, %function
 25515              	cmd_get_imu_readings:
 25516              	.LFB107:
3748:..\src/command_processing.c **** 
3749:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25517              		.loc 1 3749 0
 25518              		.cfi_startproc
 25519              		@ args = 0, pretend = 0, frame = 400
 25520              		@ frame_needed = 1, uses_anonymous_args = 0
 25521 0000 90B5     		push	{r4, r7, lr}
 25522              		.cfi_def_cfa_offset 12
 25523              		.cfi_offset 4, -12
 25524              		.cfi_offset 7, -8
 25525              		.cfi_offset 14, -4
 25526 0002 E5B0     		sub	sp, sp, #404
 25527              		.cfi_def_cfa_offset 416
 25528 0004 00AF     		add	r7, sp, #0
 25529              		.cfi_def_cfa_register 7
3750:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3751:..\src/command_processing.c ****     
3752:..\src/command_processing.c ****     uint8 k_imu;
3753:..\src/command_processing.c ****     uint16 c = 1;
 25530              		.loc 1 3753 0
 25531 0006 0123     		movs	r3, #1
 25532 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3754:..\src/command_processing.c ****     uint8 k = 0;
 25533              		.loc 1 3754 0
 25534 000c 0023     		movs	r3, #0
 25535 000e 87F88B31 		strb	r3, [r7, #395]
3755:..\src/command_processing.c ****     uint16 gl_c = 1;
 25536              		.loc 1 3755 0
 25537 0012 0123     		movs	r3, #1
 25538 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3756:..\src/command_processing.c ****     int16 aux_int16;
3757:..\src/command_processing.c ****     float aux_float;
3758:..\src/command_processing.c ****     
3759:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3760:..\src/command_processing.c ****     uint8 packet_data[350];
3761:..\src/command_processing.c ****     uint8 single_packet[32];
3762:..\src/command_processing.c ****     
3763:..\src/command_processing.c ****     //Header package 
3764:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25539              		.loc 1 3764 0
 25540 0018 07F12003 		add	r3, r7, #32
 25541 001c A122     		movs	r2, #161
 25542 001e 1A70     		strb	r2, [r3]
3765:..\src/command_processing.c ****  
3766:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25543              		.loc 1 3766 0
 25544 0020 0023     		movs	r3, #0
 25545 0022 87F88F31 		strb	r3, [r7, #399]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 559


 25546 0026 82E2     		b	.L1003
 25547              	.L1019:
3767:..\src/command_processing.c ****     {	
3768:..\src/command_processing.c ****             
3769:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25548              		.loc 1 3769 0
 25549 0028 3B46     		mov	r3, r7
 25550 002a 3A22     		movs	r2, #58
 25551 002c 1A70     		strb	r2, [r3]
3770:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25552              		.loc 1 3770 0
 25553 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25554 0032 DB4A     		ldr	r2, .L1020
 25555 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25556 0036 1946     		mov	r1, r3
 25557 0038 DA4A     		ldr	r2, .L1020+4
 25558 003a 0B46     		mov	r3, r1
 25559 003c 9B00     		lsls	r3, r3, #2
 25560 003e 0B44     		add	r3, r3, r1
 25561 0040 1344     		add	r3, r3, r2
 25562 0042 03F20223 		addw	r3, r3, #514
 25563 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25564 0048 002B     		cmp	r3, #0
 25565 004a 5DD0     		beq	.L1004
3771:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25566              		.loc 1 3771 0
 25567 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25568 0050 D549     		ldr	r1, .L1020+8
 25569 0052 1346     		mov	r3, r2
 25570 0054 9B00     		lsls	r3, r3, #2
 25571 0056 1344     		add	r3, r3, r2
 25572 0058 DB00     		lsls	r3, r3, #3
 25573 005a 0B44     		add	r3, r3, r1
 25574 005c 0233     		adds	r3, r3, #2
 25575 005e B3F90030 		ldrsh	r3, [r3]
 25576 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3772:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25577              		.loc 1 3772 0
 25578 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25579 006a 0133     		adds	r3, r3, #1
 25580 006c 07F5C372 		add	r2, r7, #390
 25581 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25582 0072 3A46     		mov	r2, r7
 25583 0074 D154     		strb	r1, [r2, r3]
3773:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25584              		.loc 1 3773 0
 25585 0076 B7F88C21 		ldrh	r2, [r7, #396]
 25586 007a 07F5C373 		add	r3, r7, #390
 25587 007e 0133     		adds	r3, r3, #1
 25588 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25589 0082 3B46     		mov	r3, r7
 25590 0084 9954     		strb	r1, [r3, r2]
3774:..\src/command_processing.c **** 
3775:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25591              		.loc 1 3775 0
 25592 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25593 008a C749     		ldr	r1, .L1020+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 560


 25594 008c 1346     		mov	r3, r2
 25595 008e 9B00     		lsls	r3, r3, #2
 25596 0090 1344     		add	r3, r3, r2
 25597 0092 DB00     		lsls	r3, r3, #3
 25598 0094 0B44     		add	r3, r3, r1
 25599 0096 0433     		adds	r3, r3, #4
 25600 0098 B3F90030 		ldrsh	r3, [r3]
 25601 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3776:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25602              		.loc 1 3776 0
 25603 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 25604 00a4 0333     		adds	r3, r3, #3
 25605 00a6 07F5C372 		add	r2, r7, #390
 25606 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25607 00ac 3A46     		mov	r2, r7
 25608 00ae D154     		strb	r1, [r2, r3]
3777:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25609              		.loc 1 3777 0
 25610 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 25611 00b4 9A1C     		adds	r2, r3, #2
 25612 00b6 07F5C373 		add	r3, r7, #390
 25613 00ba 0133     		adds	r3, r3, #1
 25614 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25615 00be 3B46     		mov	r3, r7
 25616 00c0 9954     		strb	r1, [r3, r2]
3778:..\src/command_processing.c **** 
3779:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 25617              		.loc 1 3779 0
 25618 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25619 00c6 B849     		ldr	r1, .L1020+8
 25620 00c8 1346     		mov	r3, r2
 25621 00ca 9B00     		lsls	r3, r3, #2
 25622 00cc 1344     		add	r3, r3, r2
 25623 00ce DB00     		lsls	r3, r3, #3
 25624 00d0 0B44     		add	r3, r3, r1
 25625 00d2 0633     		adds	r3, r3, #6
 25626 00d4 B3F90030 		ldrsh	r3, [r3]
 25627 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3780:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25628              		.loc 1 3780 0
 25629 00dc B7F88C31 		ldrh	r3, [r7, #396]
 25630 00e0 0533     		adds	r3, r3, #5
 25631 00e2 07F5C372 		add	r2, r7, #390
 25632 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25633 00e8 3A46     		mov	r2, r7
 25634 00ea D154     		strb	r1, [r2, r3]
3781:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25635              		.loc 1 3781 0
 25636 00ec B7F88C31 		ldrh	r3, [r7, #396]
 25637 00f0 1A1D     		adds	r2, r3, #4
 25638 00f2 07F5C373 		add	r3, r7, #390
 25639 00f6 0133     		adds	r3, r3, #1
 25640 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25641 00fa 3B46     		mov	r3, r7
 25642 00fc 9954     		strb	r1, [r3, r2]
3782:..\src/command_processing.c **** 
3783:..\src/command_processing.c ****             c = c + 6;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 561


 25643              		.loc 1 3783 0
 25644 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25645 0102 0633     		adds	r3, r3, #6
 25646 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25647              	.L1004:
3784:..\src/command_processing.c ****         }
3785:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 25648              		.loc 1 3785 0
 25649 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25650 010c A44A     		ldr	r2, .L1020
 25651 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25652 0110 1946     		mov	r1, r3
 25653 0112 A44A     		ldr	r2, .L1020+4
 25654 0114 0B46     		mov	r3, r1
 25655 0116 9B00     		lsls	r3, r3, #2
 25656 0118 0B44     		add	r3, r3, r1
 25657 011a 1344     		add	r3, r3, r2
 25658 011c 03F20323 		addw	r3, r3, #515
 25659 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25660 0122 002B     		cmp	r3, #0
 25661 0124 5DD0     		beq	.L1005
3786:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 25662              		.loc 1 3786 0
 25663 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25664 012a 9F49     		ldr	r1, .L1020+8
 25665 012c 1346     		mov	r3, r2
 25666 012e 9B00     		lsls	r3, r3, #2
 25667 0130 1344     		add	r3, r3, r2
 25668 0132 DB00     		lsls	r3, r3, #3
 25669 0134 0B44     		add	r3, r3, r1
 25670 0136 0833     		adds	r3, r3, #8
 25671 0138 B3F90030 		ldrsh	r3, [r3]
 25672 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3787:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25673              		.loc 1 3787 0
 25674 0140 B7F88C31 		ldrh	r3, [r7, #396]
 25675 0144 0133     		adds	r3, r3, #1
 25676 0146 07F5C372 		add	r2, r7, #390
 25677 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25678 014c 3A46     		mov	r2, r7
 25679 014e D154     		strb	r1, [r2, r3]
3788:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25680              		.loc 1 3788 0
 25681 0150 B7F88C21 		ldrh	r2, [r7, #396]
 25682 0154 07F5C373 		add	r3, r7, #390
 25683 0158 0133     		adds	r3, r3, #1
 25684 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25685 015c 3B46     		mov	r3, r7
 25686 015e 9954     		strb	r1, [r3, r2]
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 25687              		.loc 1 3790 0
 25688 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25689 0164 9049     		ldr	r1, .L1020+8
 25690 0166 1346     		mov	r3, r2
 25691 0168 9B00     		lsls	r3, r3, #2
 25692 016a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 562


 25693 016c DB00     		lsls	r3, r3, #3
 25694 016e 0B44     		add	r3, r3, r1
 25695 0170 0A33     		adds	r3, r3, #10
 25696 0172 B3F90030 		ldrsh	r3, [r3]
 25697 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3791:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25698              		.loc 1 3791 0
 25699 017a B7F88C31 		ldrh	r3, [r7, #396]
 25700 017e 0333     		adds	r3, r3, #3
 25701 0180 07F5C372 		add	r2, r7, #390
 25702 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25703 0186 3A46     		mov	r2, r7
 25704 0188 D154     		strb	r1, [r2, r3]
3792:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25705              		.loc 1 3792 0
 25706 018a B7F88C31 		ldrh	r3, [r7, #396]
 25707 018e 9A1C     		adds	r2, r3, #2
 25708 0190 07F5C373 		add	r3, r7, #390
 25709 0194 0133     		adds	r3, r3, #1
 25710 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25711 0198 3B46     		mov	r3, r7
 25712 019a 9954     		strb	r1, [r3, r2]
3793:..\src/command_processing.c **** 
3794:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 25713              		.loc 1 3794 0
 25714 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25715 01a0 8149     		ldr	r1, .L1020+8
 25716 01a2 1346     		mov	r3, r2
 25717 01a4 9B00     		lsls	r3, r3, #2
 25718 01a6 1344     		add	r3, r3, r2
 25719 01a8 DB00     		lsls	r3, r3, #3
 25720 01aa 0B44     		add	r3, r3, r1
 25721 01ac 0C33     		adds	r3, r3, #12
 25722 01ae B3F90030 		ldrsh	r3, [r3]
 25723 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3795:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25724              		.loc 1 3795 0
 25725 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 25726 01ba 0533     		adds	r3, r3, #5
 25727 01bc 07F5C372 		add	r2, r7, #390
 25728 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25729 01c2 3A46     		mov	r2, r7
 25730 01c4 D154     		strb	r1, [r2, r3]
3796:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25731              		.loc 1 3796 0
 25732 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 25733 01ca 1A1D     		adds	r2, r3, #4
 25734 01cc 07F5C373 		add	r3, r7, #390
 25735 01d0 0133     		adds	r3, r3, #1
 25736 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25737 01d4 3B46     		mov	r3, r7
 25738 01d6 9954     		strb	r1, [r3, r2]
3797:..\src/command_processing.c **** 
3798:..\src/command_processing.c ****             c = c + 6;
 25739              		.loc 1 3798 0
 25740 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25741 01dc 0633     		adds	r3, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 563


 25742 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25743              	.L1005:
3799:..\src/command_processing.c ****         }
3800:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 25744              		.loc 1 3800 0
 25745 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25746 01e6 6E4A     		ldr	r2, .L1020
 25747 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25748 01ea 1946     		mov	r1, r3
 25749 01ec 6D4A     		ldr	r2, .L1020+4
 25750 01ee 0B46     		mov	r3, r1
 25751 01f0 9B00     		lsls	r3, r3, #2
 25752 01f2 0B44     		add	r3, r3, r1
 25753 01f4 1344     		add	r3, r3, r2
 25754 01f6 03F50173 		add	r3, r3, #516
 25755 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25756 01fc 002B     		cmp	r3, #0
 25757 01fe 5DD0     		beq	.L1006
3801:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 25758              		.loc 1 3801 0
 25759 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25760 0204 6849     		ldr	r1, .L1020+8
 25761 0206 1346     		mov	r3, r2
 25762 0208 9B00     		lsls	r3, r3, #2
 25763 020a 1344     		add	r3, r3, r2
 25764 020c DB00     		lsls	r3, r3, #3
 25765 020e 0B44     		add	r3, r3, r1
 25766 0210 0E33     		adds	r3, r3, #14
 25767 0212 B3F90030 		ldrsh	r3, [r3]
 25768 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3802:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25769              		.loc 1 3802 0
 25770 021a B7F88C31 		ldrh	r3, [r7, #396]
 25771 021e 0133     		adds	r3, r3, #1
 25772 0220 07F5C372 		add	r2, r7, #390
 25773 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25774 0226 3A46     		mov	r2, r7
 25775 0228 D154     		strb	r1, [r2, r3]
3803:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25776              		.loc 1 3803 0
 25777 022a B7F88C21 		ldrh	r2, [r7, #396]
 25778 022e 07F5C373 		add	r3, r7, #390
 25779 0232 0133     		adds	r3, r3, #1
 25780 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25781 0236 3B46     		mov	r3, r7
 25782 0238 9954     		strb	r1, [r3, r2]
3804:..\src/command_processing.c **** 
3805:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 25783              		.loc 1 3805 0
 25784 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25785 023e 5A49     		ldr	r1, .L1020+8
 25786 0240 1346     		mov	r3, r2
 25787 0242 9B00     		lsls	r3, r3, #2
 25788 0244 1344     		add	r3, r3, r2
 25789 0246 DB00     		lsls	r3, r3, #3
 25790 0248 0B44     		add	r3, r3, r1
 25791 024a 1033     		adds	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 564


 25792 024c B3F90030 		ldrsh	r3, [r3]
 25793 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3806:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25794              		.loc 1 3806 0
 25795 0254 B7F88C31 		ldrh	r3, [r7, #396]
 25796 0258 0333     		adds	r3, r3, #3
 25797 025a 07F5C372 		add	r2, r7, #390
 25798 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25799 0260 3A46     		mov	r2, r7
 25800 0262 D154     		strb	r1, [r2, r3]
3807:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25801              		.loc 1 3807 0
 25802 0264 B7F88C31 		ldrh	r3, [r7, #396]
 25803 0268 9A1C     		adds	r2, r3, #2
 25804 026a 07F5C373 		add	r3, r7, #390
 25805 026e 0133     		adds	r3, r3, #1
 25806 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25807 0272 3B46     		mov	r3, r7
 25808 0274 9954     		strb	r1, [r3, r2]
3808:..\src/command_processing.c **** 
3809:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 25809              		.loc 1 3809 0
 25810 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25811 027a 4B49     		ldr	r1, .L1020+8
 25812 027c 1346     		mov	r3, r2
 25813 027e 9B00     		lsls	r3, r3, #2
 25814 0280 1344     		add	r3, r3, r2
 25815 0282 DB00     		lsls	r3, r3, #3
 25816 0284 0B44     		add	r3, r3, r1
 25817 0286 1233     		adds	r3, r3, #18
 25818 0288 B3F90030 		ldrsh	r3, [r3]
 25819 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3810:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25820              		.loc 1 3810 0
 25821 0290 B7F88C31 		ldrh	r3, [r7, #396]
 25822 0294 0533     		adds	r3, r3, #5
 25823 0296 07F5C372 		add	r2, r7, #390
 25824 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25825 029c 3A46     		mov	r2, r7
 25826 029e D154     		strb	r1, [r2, r3]
3811:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25827              		.loc 1 3811 0
 25828 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 25829 02a4 1A1D     		adds	r2, r3, #4
 25830 02a6 07F5C373 		add	r3, r7, #390
 25831 02aa 0133     		adds	r3, r3, #1
 25832 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25833 02ae 3B46     		mov	r3, r7
 25834 02b0 9954     		strb	r1, [r3, r2]
3812:..\src/command_processing.c **** 
3813:..\src/command_processing.c ****             c = c + 6;
 25835              		.loc 1 3813 0
 25836 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25837 02b6 0633     		adds	r3, r3, #6
 25838 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25839              	.L1006:
3814:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 565


3815:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 25840              		.loc 1 3815 0
 25841 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25842 02c0 374A     		ldr	r2, .L1020
 25843 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25844 02c4 1946     		mov	r1, r3
 25845 02c6 374A     		ldr	r2, .L1020+4
 25846 02c8 0B46     		mov	r3, r1
 25847 02ca 9B00     		lsls	r3, r3, #2
 25848 02cc 0B44     		add	r3, r3, r1
 25849 02ce 1344     		add	r3, r3, r2
 25850 02d0 03F20523 		addw	r3, r3, #517
 25851 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25852 02d6 002B     		cmp	r3, #0
 25853 02d8 00F0AF80 		beq	.L1007
3816:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 25854              		.loc 1 3816 0
 25855 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25856 02e0 3149     		ldr	r1, .L1020+8
 25857 02e2 1346     		mov	r3, r2
 25858 02e4 9B00     		lsls	r3, r3, #2
 25859 02e6 1344     		add	r3, r3, r2
 25860 02e8 DB00     		lsls	r3, r3, #3
 25861 02ea 0B44     		add	r3, r3, r1
 25862 02ec 1433     		adds	r3, r3, #20
 25863 02ee 1B68     		ldr	r3, [r3]	@ float
 25864 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3817:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25865              		.loc 1 3817 0
 25866 02f4 0023     		movs	r3, #0
 25867 02f6 87F88B31 		strb	r3, [r7, #395]
 25868 02fa 13E0     		b	.L1008
 25869              	.L1009:
3818:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 25870              		.loc 1 3818 0 discriminator 3
 25871 02fc B7F88C31 		ldrh	r3, [r7, #396]
 25872 0300 1A1D     		adds	r2, r3, #4
 25873 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25874 0306 D31A     		subs	r3, r2, r3
 25875 0308 013B     		subs	r3, r3, #1
 25876 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25877 030e 07F5C071 		add	r1, r7, #384
 25878 0312 0A44     		add	r2, r2, r1
 25879 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25880 0316 3A46     		mov	r2, r7
 25881 0318 D154     		strb	r1, [r2, r3]
3817:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25882              		.loc 1 3817 0 discriminator 3
 25883 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25884 031e 0133     		adds	r3, r3, #1
 25885 0320 87F88B31 		strb	r3, [r7, #395]
 25886              	.L1008:
3817:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25887              		.loc 1 3817 0 is_stmt 0 discriminator 1
 25888 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25889 0328 032B     		cmp	r3, #3
 25890 032a E7D9     		bls	.L1009
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 566


3819:..\src/command_processing.c ****             }
3820:..\src/command_processing.c **** 
3821:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 25891              		.loc 1 3821 0 is_stmt 1
 25892 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25893 0330 1D49     		ldr	r1, .L1020+8
 25894 0332 1346     		mov	r3, r2
 25895 0334 9B00     		lsls	r3, r3, #2
 25896 0336 1344     		add	r3, r3, r2
 25897 0338 DB00     		lsls	r3, r3, #3
 25898 033a 0B44     		add	r3, r3, r1
 25899 033c 1833     		adds	r3, r3, #24
 25900 033e 1B68     		ldr	r3, [r3]	@ float
 25901 0340 C7F88031 		str	r3, [r7, #384]	@ float
3822:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25902              		.loc 1 3822 0
 25903 0344 0023     		movs	r3, #0
 25904 0346 87F88B31 		strb	r3, [r7, #395]
 25905 034a 14E0     		b	.L1010
 25906              	.L1011:
3823:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 25907              		.loc 1 3823 0 discriminator 3
 25908 034c B7F88C31 		ldrh	r3, [r7, #396]
 25909 0350 03F10802 		add	r2, r3, #8
 25910 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25911 0358 D31A     		subs	r3, r2, r3
 25912 035a 013B     		subs	r3, r3, #1
 25913 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25914 0360 07F5C071 		add	r1, r7, #384
 25915 0364 0A44     		add	r2, r2, r1
 25916 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25917 0368 3A46     		mov	r2, r7
 25918 036a D154     		strb	r1, [r2, r3]
3822:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25919              		.loc 1 3822 0 discriminator 3
 25920 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25921 0370 0133     		adds	r3, r3, #1
 25922 0372 87F88B31 		strb	r3, [r7, #395]
 25923              	.L1010:
3822:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25924              		.loc 1 3822 0 is_stmt 0 discriminator 1
 25925 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25926 037a 032B     		cmp	r3, #3
 25927 037c E6D9     		bls	.L1011
3824:..\src/command_processing.c ****             }
3825:..\src/command_processing.c **** 
3826:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 25928              		.loc 1 3826 0 is_stmt 1
 25929 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25930 0382 0949     		ldr	r1, .L1020+8
 25931 0384 1346     		mov	r3, r2
 25932 0386 9B00     		lsls	r3, r3, #2
 25933 0388 1344     		add	r3, r3, r2
 25934 038a DB00     		lsls	r3, r3, #3
 25935 038c 0B44     		add	r3, r3, r1
 25936 038e 1C33     		adds	r3, r3, #28
 25937 0390 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 567


 25938 0392 C7F88031 		str	r3, [r7, #384]	@ float
3827:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25939              		.loc 1 3827 0
 25940 0396 0023     		movs	r3, #0
 25941 0398 87F88B31 		strb	r3, [r7, #395]
 25942 039c 1BE0     		b	.L1012
 25943              	.L1021:
 25944 039e 00BF     		.align	2
 25945              	.L1020:
 25946 03a0 00000000 		.word	IMU_connected
 25947 03a4 00000000 		.word	c_mem
 25948 03a8 00000000 		.word	g_imu
 25949              	.L1013:
3828:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 25950              		.loc 1 3828 0 discriminator 3
 25951 03ac B7F88C31 		ldrh	r3, [r7, #396]
 25952 03b0 03F10C02 		add	r2, r3, #12
 25953 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25954 03b8 D31A     		subs	r3, r2, r3
 25955 03ba 013B     		subs	r3, r3, #1
 25956 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25957 03c0 07F5C071 		add	r1, r7, #384
 25958 03c4 0A44     		add	r2, r2, r1
 25959 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25960 03c8 3A46     		mov	r2, r7
 25961 03ca D154     		strb	r1, [r2, r3]
3827:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25962              		.loc 1 3827 0 discriminator 3
 25963 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25964 03d0 0133     		adds	r3, r3, #1
 25965 03d2 87F88B31 		strb	r3, [r7, #395]
 25966              	.L1012:
3827:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25967              		.loc 1 3827 0 is_stmt 0 discriminator 1
 25968 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25969 03da 032B     		cmp	r3, #3
 25970 03dc E6D9     		bls	.L1013
3829:..\src/command_processing.c ****             }
3830:..\src/command_processing.c **** 
3831:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 25971              		.loc 1 3831 0 is_stmt 1
 25972 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25973 03e2 6749     		ldr	r1, .L1022
 25974 03e4 1346     		mov	r3, r2
 25975 03e6 9B00     		lsls	r3, r3, #2
 25976 03e8 1344     		add	r3, r3, r2
 25977 03ea DB00     		lsls	r3, r3, #3
 25978 03ec 0B44     		add	r3, r3, r1
 25979 03ee 2033     		adds	r3, r3, #32
 25980 03f0 1B68     		ldr	r3, [r3]	@ float
 25981 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3832:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25982              		.loc 1 3832 0
 25983 03f6 0023     		movs	r3, #0
 25984 03f8 87F88B31 		strb	r3, [r7, #395]
 25985 03fc 14E0     		b	.L1014
 25986              	.L1015:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 568


3833:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 25987              		.loc 1 3833 0 discriminator 3
 25988 03fe B7F88C31 		ldrh	r3, [r7, #396]
 25989 0402 03F11002 		add	r2, r3, #16
 25990 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 25991 040a D31A     		subs	r3, r2, r3
 25992 040c 013B     		subs	r3, r3, #1
 25993 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 25994 0412 07F5C071 		add	r1, r7, #384
 25995 0416 0A44     		add	r2, r2, r1
 25996 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25997 041a 3A46     		mov	r2, r7
 25998 041c D154     		strb	r1, [r2, r3]
3832:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 25999              		.loc 1 3832 0 discriminator 3
 26000 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26001 0422 0133     		adds	r3, r3, #1
 26002 0424 87F88B31 		strb	r3, [r7, #395]
 26003              	.L1014:
3832:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26004              		.loc 1 3832 0 is_stmt 0 discriminator 1
 26005 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26006 042c 032B     		cmp	r3, #3
 26007 042e E6D9     		bls	.L1015
3834:..\src/command_processing.c ****             }
3835:..\src/command_processing.c ****             c = c + 16;
 26008              		.loc 1 3835 0 is_stmt 1
 26009 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26010 0434 1033     		adds	r3, r3, #16
 26011 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26012              	.L1007:
3836:..\src/command_processing.c ****         }
3837:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26013              		.loc 1 3837 0
 26014 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26015 043e 514A     		ldr	r2, .L1022+4
 26016 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26017 0442 1946     		mov	r1, r3
 26018 0444 504A     		ldr	r2, .L1022+8
 26019 0446 0B46     		mov	r3, r1
 26020 0448 9B00     		lsls	r3, r3, #2
 26021 044a 0B44     		add	r3, r3, r1
 26022 044c 1344     		add	r3, r3, r2
 26023 044e 03F20623 		addw	r3, r3, #518
 26024 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26025 0454 002B     		cmp	r3, #0
 26026 0456 21D0     		beq	.L1016
3838:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26027              		.loc 1 3838 0
 26028 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26029 045c 4849     		ldr	r1, .L1022
 26030 045e 1346     		mov	r3, r2
 26031 0460 9B00     		lsls	r3, r3, #2
 26032 0462 1344     		add	r3, r3, r2
 26033 0464 DB00     		lsls	r3, r3, #3
 26034 0466 0B44     		add	r3, r3, r1
 26035 0468 2433     		adds	r3, r3, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 569


 26036 046a B3F90030 		ldrsh	r3, [r3]
 26037 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3839:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26038              		.loc 1 3839 0
 26039 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26040 0476 0133     		adds	r3, r3, #1
 26041 0478 07F5C372 		add	r2, r7, #390
 26042 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26043 047e 3A46     		mov	r2, r7
 26044 0480 D154     		strb	r1, [r2, r3]
3840:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26045              		.loc 1 3840 0
 26046 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26047 0486 07F5C373 		add	r3, r7, #390
 26048 048a 0133     		adds	r3, r3, #1
 26049 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26050 048e 3B46     		mov	r3, r7
 26051 0490 9954     		strb	r1, [r3, r2]
3841:..\src/command_processing.c ****             c = c + 2;
 26052              		.loc 1 3841 0
 26053 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26054 0496 0233     		adds	r3, r3, #2
 26055 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26056              	.L1016:
3842:..\src/command_processing.c ****         }
3843:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26057              		.loc 1 3843 0
 26058 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26059 04a0 384A     		ldr	r2, .L1022+4
 26060 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26061 04a4 1A46     		mov	r2, r3
 26062 04a6 394B     		ldr	r3, .L1022+12
 26063 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26064 04ac 013B     		subs	r3, r3, #1
 26065 04ae 3A46     		mov	r2, r7
 26066 04b0 3A21     		movs	r1, #58
 26067 04b2 D154     		strb	r1, [r2, r3]
3844:..\src/command_processing.c ****         c = 1;
 26068              		.loc 1 3844 0
 26069 04b4 0123     		movs	r3, #1
 26070 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3845:..\src/command_processing.c ****                
3846:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26071              		.loc 1 3846 0
 26072 04ba 0023     		movs	r3, #0
 26073 04bc 87F88B31 		strb	r3, [r7, #395]
 26074 04c0 10E0     		b	.L1017
 26075              	.L1018:
3847:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26076              		.loc 1 3847 0 discriminator 3
 26077 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26078 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26079 04ca 1344     		add	r3, r3, r2
 26080 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26081 04d0 3946     		mov	r1, r7
 26082 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26083 04d4 07F12002 		add	r2, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 570


 26084 04d8 D154     		strb	r1, [r2, r3]
3846:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26085              		.loc 1 3846 0 discriminator 3
 26086 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26087 04de 0133     		adds	r3, r3, #1
 26088 04e0 87F88B31 		strb	r3, [r7, #395]
 26089              	.L1017:
3846:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26090              		.loc 1 3846 0 is_stmt 0 discriminator 1
 26091 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26092 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26093 04ec 2549     		ldr	r1, .L1022+4
 26094 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26095 04f0 1946     		mov	r1, r3
 26096 04f2 264B     		ldr	r3, .L1022+12
 26097 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26098 04f8 9A42     		cmp	r2, r3
 26099 04fa E2DB     		blt	.L1018
3848:..\src/command_processing.c ****         }
3849:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26100              		.loc 1 3849 0 is_stmt 1 discriminator 2
 26101 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26102 0500 204A     		ldr	r2, .L1022+4
 26103 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26104 0504 1A46     		mov	r2, r3
 26105 0506 214B     		ldr	r3, .L1022+12
 26106 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26107 050c 9AB2     		uxth	r2, r3
 26108 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26109 0512 1344     		add	r3, r3, r2
 26110 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3850:..\src/command_processing.c ****         
3851:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26111              		.loc 1 3851 0 discriminator 2
 26112 0518 3B46     		mov	r3, r7
 26113 051a 2022     		movs	r2, #32
 26114 051c 0021     		movs	r1, #0
 26115 051e 1846     		mov	r0, r3
 26116 0520 FFF7FEFF 		bl	memset
3766:..\src/command_processing.c ****     {	
 26117              		.loc 1 3766 0 discriminator 2
 26118 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26119 0528 0133     		adds	r3, r3, #1
 26120 052a 87F88F31 		strb	r3, [r7, #399]
 26121              	.L1003:
3766:..\src/command_processing.c ****     {	
 26122              		.loc 1 3766 0 is_stmt 0 discriminator 1
 26123 052e 184B     		ldr	r3, .L1022+16
 26124 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26125 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26126 0536 9A42     		cmp	r2, r3
 26127 0538 FFF476AD 		bcc	.L1019
3852:..\src/command_processing.c ****         
3853:..\src/command_processing.c ****     }
3854:..\src/command_processing.c **** 
3855:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3856:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 571


 26128              		.loc 1 3856 0 is_stmt 1
 26129 053c 154B     		ldr	r3, .L1022+20
 26130 053e 1B68     		ldr	r3, [r3]
 26131 0540 5C1E     		subs	r4, r3, #1
 26132 0542 144B     		ldr	r3, .L1022+20
 26133 0544 1B68     		ldr	r3, [r3]
 26134 0546 DBB2     		uxtb	r3, r3
 26135 0548 013B     		subs	r3, r3, #1
 26136 054a DAB2     		uxtb	r2, r3
 26137 054c 07F12003 		add	r3, r7, #32
 26138 0550 1146     		mov	r1, r2
 26139 0552 1846     		mov	r0, r3
 26140 0554 FFF7FEFF 		bl	LCRChecksum
 26141 0558 0346     		mov	r3, r0
 26142 055a 1A46     		mov	r2, r3
 26143 055c 07F12003 		add	r3, r7, #32
 26144 0560 1A55     		strb	r2, [r3, r4]
3857:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26145              		.loc 1 3857 0
 26146 0562 0C4B     		ldr	r3, .L1022+20
 26147 0564 1B68     		ldr	r3, [r3]
 26148 0566 9AB2     		uxth	r2, r3
 26149 0568 07F12003 		add	r3, r7, #32
 26150 056c 1146     		mov	r1, r2
 26151 056e 1846     		mov	r0, r3
 26152 0570 FFF7FEFF 		bl	commWrite
3858:..\src/command_processing.c **** }
 26153              		.loc 1 3858 0
 26154 0574 00BF     		nop
 26155 0576 07F5CA77 		add	r7, r7, #404
 26156              		.cfi_def_cfa_offset 12
 26157 057a BD46     		mov	sp, r7
 26158              		.cfi_def_cfa_register 13
 26159              		@ sp needed
 26160 057c 90BD     		pop	{r4, r7, pc}
 26161              	.L1023:
 26162 057e 00BF     		.align	2
 26163              	.L1022:
 26164 0580 00000000 		.word	g_imu
 26165 0584 00000000 		.word	IMU_connected
 26166 0588 00000000 		.word	c_mem
 26167 058c 00000000 		.word	single_imu_size
 26168 0590 00000000 		.word	N_IMU_Connected
 26169 0594 00000000 		.word	imus_data_size
 26170              		.cfi_endproc
 26171              	.LFE107:
 26172              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26173              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26174              		.align	2
 26175              		.global	cmd_get_encoder_map
 26176              		.thumb
 26177              		.thumb_func
 26178              		.type	cmd_get_encoder_map, %function
 26179              	cmd_get_encoder_map:
 26180              	.LFB108:
3859:..\src/command_processing.c **** 
3860:..\src/command_processing.c **** void cmd_get_encoder_map(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 572


 26181              		.loc 1 3860 0
 26182              		.cfi_startproc
 26183              		@ args = 0, pretend = 0, frame = 16
 26184              		@ frame_needed = 1, uses_anonymous_args = 0
 26185 0000 90B5     		push	{r4, r7, lr}
 26186              		.cfi_def_cfa_offset 12
 26187              		.cfi_offset 4, -12
 26188              		.cfi_offset 7, -8
 26189              		.cfi_offset 14, -4
 26190 0002 85B0     		sub	sp, sp, #20
 26191              		.cfi_def_cfa_offset 32
 26192 0004 00AF     		add	r7, sp, #0
 26193              		.cfi_def_cfa_register 7
3861:..\src/command_processing.c ****     //Retrieve Encoder map
3862:..\src/command_processing.c ****     
3863:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3864:..\src/command_processing.c ****     uint8 CYDATA i, j;
3865:..\src/command_processing.c ****     
3866:..\src/command_processing.c ****     // Header        
3867:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26194              		.loc 1 3867 0
 26195 0006 A323     		movs	r3, #163
 26196 0008 3B70     		strb	r3, [r7]
3868:..\src/command_processing.c ****     
3869:..\src/command_processing.c ****     // Fill payload
3870:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26197              		.loc 1 3870 0
 26198 000a 0223     		movs	r3, #2
 26199 000c 7B70     		strb	r3, [r7, #1]
3871:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26200              		.loc 1 3871 0
 26201 000e 0523     		movs	r3, #5
 26202 0010 BB70     		strb	r3, [r7, #2]
3872:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26203              		.loc 1 3872 0
 26204 0012 0023     		movs	r3, #0
 26205 0014 FB73     		strb	r3, [r7, #15]
 26206 0016 23E0     		b	.L1025
 26207              	.L1028:
3873:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26208              		.loc 1 3873 0
 26209 0018 0023     		movs	r3, #0
 26210 001a BB73     		strb	r3, [r7, #14]
 26211 001c 1AE0     		b	.L1026
 26212              	.L1027:
3874:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26213              		.loc 1 3874 0 discriminator 3
 26214 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26215 0020 1346     		mov	r3, r2
 26216 0022 9B00     		lsls	r3, r3, #2
 26217 0024 1344     		add	r3, r3, r2
 26218 0026 DA1C     		adds	r2, r3, #3
 26219 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26220 002a D118     		adds	r1, r2, r3
 26221 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26222 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26223 0030 154C     		ldr	r4, .L1029
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 573


 26224 0032 1346     		mov	r3, r2
 26225 0034 5B00     		lsls	r3, r3, #1
 26226 0036 1344     		add	r3, r3, r2
 26227 0038 1B01     		lsls	r3, r3, #4
 26228 003a 2344     		add	r3, r3, r4
 26229 003c 0344     		add	r3, r3, r0
 26230 003e 03F5C873 		add	r3, r3, #400
 26231 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26232 0044 07F11003 		add	r3, r7, #16
 26233 0048 0B44     		add	r3, r3, r1
 26234 004a 03F8102C 		strb	r2, [r3, #-16]
3873:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26235              		.loc 1 3873 0 discriminator 3
 26236 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26237 0050 0133     		adds	r3, r3, #1
 26238 0052 BB73     		strb	r3, [r7, #14]
 26239              	.L1026:
3873:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26240              		.loc 1 3873 0 is_stmt 0 discriminator 1
 26241 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26242 0056 042B     		cmp	r3, #4
 26243 0058 E1D9     		bls	.L1027
3872:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26244              		.loc 1 3872 0 is_stmt 1 discriminator 2
 26245 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26246 005c 0133     		adds	r3, r3, #1
 26247 005e FB73     		strb	r3, [r7, #15]
 26248              	.L1025:
3872:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26249              		.loc 1 3872 0 is_stmt 0 discriminator 1
 26250 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26251 0062 012B     		cmp	r3, #1
 26252 0064 D8D9     		bls	.L1028
3875:..\src/command_processing.c ****         }
3876:..\src/command_processing.c ****     }
3877:..\src/command_processing.c ****     
3878:..\src/command_processing.c ****     // Calculate checksum
3879:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26253              		.loc 1 3879 0 is_stmt 1
 26254 0066 3B46     		mov	r3, r7
 26255 0068 0D21     		movs	r1, #13
 26256 006a 1846     		mov	r0, r3
 26257 006c FFF7FEFF 		bl	LCRChecksum
 26258 0070 0346     		mov	r3, r0
 26259 0072 7B73     		strb	r3, [r7, #13]
3880:..\src/command_processing.c ****     
3881:..\src/command_processing.c ****     // Send package to UART
3882:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26260              		.loc 1 3882 0
 26261 0074 3B46     		mov	r3, r7
 26262 0076 0E21     		movs	r1, #14
 26263 0078 1846     		mov	r0, r3
 26264 007a FFF7FEFF 		bl	commWrite
3883:..\src/command_processing.c **** }
 26265              		.loc 1 3883 0
 26266 007e 00BF     		nop
 26267 0080 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 574


 26268              		.cfi_def_cfa_offset 12
 26269 0082 BD46     		mov	sp, r7
 26270              		.cfi_def_cfa_register 13
 26271              		@ sp needed
 26272 0084 90BD     		pop	{r4, r7, pc}
 26273              	.L1030:
 26274 0086 00BF     		.align	2
 26275              	.L1029:
 26276 0088 00000000 		.word	c_mem
 26277              		.cfi_endproc
 26278              	.LFE108:
 26279              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26280              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26281              		.align	2
 26282              		.global	cmd_get_encoder_raw
 26283              		.thumb
 26284              		.thumb_func
 26285              		.type	cmd_get_encoder_raw, %function
 26286              	cmd_get_encoder_raw:
 26287              	.LFB109:
3884:..\src/command_processing.c **** 
3885:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 26288              		.loc 1 3885 0
 26289              		.cfi_startproc
 26290              		@ args = 0, pretend = 0, frame = 32
 26291              		@ frame_needed = 1, uses_anonymous_args = 0
 26292 0000 90B5     		push	{r4, r7, lr}
 26293              		.cfi_def_cfa_offset 12
 26294              		.cfi_offset 4, -12
 26295              		.cfi_offset 7, -8
 26296              		.cfi_offset 14, -4
 26297 0002 89B0     		sub	sp, sp, #36
 26298              		.cfi_def_cfa_offset 48
 26299 0004 00AF     		add	r7, sp, #0
 26300              		.cfi_def_cfa_register 7
3886:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3887:..\src/command_processing.c ****     
3888:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3889:..\src/command_processing.c ****     uint8 i, j, idx;
3890:..\src/command_processing.c ****     uint16 aux_uint16;
3891:..\src/command_processing.c ****     
3892:..\src/command_processing.c ****     //Header package 
3893:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26301              		.loc 1 3893 0
 26302 0006 A423     		movs	r3, #164
 26303 0008 3B71     		strb	r3, [r7, #4]
3894:..\src/command_processing.c ****  
3895:..\src/command_processing.c ****     // Fill payload
3896:..\src/command_processing.c ****     idx = 0;
 26304              		.loc 1 3896 0
 26305 000a 0023     		movs	r3, #0
 26306 000c 7B77     		strb	r3, [r7, #29]
3897:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26307              		.loc 1 3897 0
 26308 000e 0023     		movs	r3, #0
 26309 0010 FB77     		strb	r3, [r7, #31]
 26310 0012 3FE0     		b	.L1032
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 575


 26311              	.L1036:
3898:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26312              		.loc 1 3898 0
 26313 0014 0023     		movs	r3, #0
 26314 0016 BB77     		strb	r3, [r7, #30]
 26315 0018 33E0     		b	.L1033
 26316              	.L1035:
3899:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26317              		.loc 1 3899 0
 26318 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26319 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26320 001e 3048     		ldr	r0, .L1037
 26321 0020 1346     		mov	r3, r2
 26322 0022 5B00     		lsls	r3, r3, #1
 26323 0024 1344     		add	r3, r3, r2
 26324 0026 1B01     		lsls	r3, r3, #4
 26325 0028 0344     		add	r3, r3, r0
 26326 002a 0B44     		add	r3, r3, r1
 26327 002c 03F5C873 		add	r3, r3, #400
 26328 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26329 0032 012B     		cmp	r3, #1
 26330 0034 22D1     		bne	.L1034
3900:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26331              		.loc 1 3900 0
 26332 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26333 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26334 003a 2A48     		ldr	r0, .L1037+4
 26335 003c 1346     		mov	r3, r2
 26336 003e 9B00     		lsls	r3, r3, #2
 26337 0040 1344     		add	r3, r3, r2
 26338 0042 0B44     		add	r3, r3, r1
 26339 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26340 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3901:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26341              		.loc 1 3901 0
 26342 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26343 004c 5B00     		lsls	r3, r3, #1
 26344 004e 0233     		adds	r3, r3, #2
 26345 0050 BA1C     		adds	r2, r7, #2
 26346 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26347 0054 07F12001 		add	r1, r7, #32
 26348 0058 0B44     		add	r3, r3, r1
 26349 005a 03F81C2C 		strb	r2, [r3, #-28]
3902:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26350              		.loc 1 3902 0
 26351 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26352 0060 5B00     		lsls	r3, r3, #1
 26353 0062 5A1C     		adds	r2, r3, #1
 26354 0064 BB1C     		adds	r3, r7, #2
 26355 0066 0133     		adds	r3, r3, #1
 26356 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26357 006a 07F12003 		add	r3, r7, #32
 26358 006e 1344     		add	r3, r3, r2
 26359 0070 0A46     		mov	r2, r1
 26360 0072 03F81C2C 		strb	r2, [r3, #-28]
3903:..\src/command_processing.c ****                 idx++;
 26361              		.loc 1 3903 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 576


 26362 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26363 0078 0133     		adds	r3, r3, #1
 26364 007a 7B77     		strb	r3, [r7, #29]
 26365              	.L1034:
3898:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26366              		.loc 1 3898 0 discriminator 2
 26367 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26368 007e 0133     		adds	r3, r3, #1
 26369 0080 BB77     		strb	r3, [r7, #30]
 26370              	.L1033:
3898:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26371              		.loc 1 3898 0 is_stmt 0 discriminator 1
 26372 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26373 0084 184A     		ldr	r2, .L1037+8
 26374 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26375 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26376 008a 9A42     		cmp	r2, r3
 26377 008c C5D3     		bcc	.L1035
3897:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26378              		.loc 1 3897 0 is_stmt 1 discriminator 2
 26379 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26380 0090 0133     		adds	r3, r3, #1
 26381 0092 FB77     		strb	r3, [r7, #31]
 26382              	.L1032:
3897:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26383              		.loc 1 3897 0 is_stmt 0 discriminator 1
 26384 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26385 0096 012B     		cmp	r3, #1
 26386 0098 BCD9     		bls	.L1036
3904:..\src/command_processing.c ****             }
3905:..\src/command_processing.c ****         }
3906:..\src/command_processing.c ****     }
3907:..\src/command_processing.c **** 
3908:..\src/command_processing.c ****     // Calculate checksum
3909:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26387              		.loc 1 3909 0 is_stmt 1
 26388 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26389 009c 5B00     		lsls	r3, r3, #1
 26390 009e 5C1C     		adds	r4, r3, #1
 26391 00a0 7B7F     		ldrb	r3, [r7, #29]
 26392 00a2 5B00     		lsls	r3, r3, #1
 26393 00a4 DBB2     		uxtb	r3, r3
 26394 00a6 0133     		adds	r3, r3, #1
 26395 00a8 DAB2     		uxtb	r2, r3
 26396 00aa 3B1D     		adds	r3, r7, #4
 26397 00ac 1146     		mov	r1, r2
 26398 00ae 1846     		mov	r0, r3
 26399 00b0 FFF7FEFF 		bl	LCRChecksum
 26400 00b4 0346     		mov	r3, r0
 26401 00b6 1A46     		mov	r2, r3
 26402 00b8 07F12003 		add	r3, r7, #32
 26403 00bc 2344     		add	r3, r3, r4
 26404 00be 03F81C2C 		strb	r2, [r3, #-28]
3910:..\src/command_processing.c ****     
3911:..\src/command_processing.c ****     // Send package to UART
3912:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26405              		.loc 1 3912 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 577


 26406 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26407 00c4 0133     		adds	r3, r3, #1
 26408 00c6 9BB2     		uxth	r3, r3
 26409 00c8 5B00     		lsls	r3, r3, #1
 26410 00ca 9AB2     		uxth	r2, r3
 26411 00cc 3B1D     		adds	r3, r7, #4
 26412 00ce 1146     		mov	r1, r2
 26413 00d0 1846     		mov	r0, r3
 26414 00d2 FFF7FEFF 		bl	commWrite
3913:..\src/command_processing.c **** }
 26415              		.loc 1 3913 0
 26416 00d6 00BF     		nop
 26417 00d8 2437     		adds	r7, r7, #36
 26418              		.cfi_def_cfa_offset 12
 26419 00da BD46     		mov	sp, r7
 26420              		.cfi_def_cfa_register 13
 26421              		@ sp needed
 26422 00dc 90BD     		pop	{r4, r7, pc}
 26423              	.L1038:
 26424 00de 00BF     		.align	2
 26425              	.L1037:
 26426 00e0 00000000 		.word	c_mem
 26427 00e4 00000000 		.word	Encoder_Value
 26428 00e8 00000000 		.word	N_Encoder_Line_Connected
 26429              		.cfi_endproc
 26430              	.LFE109:
 26431              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26432              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26433              		.align	2
 26434              		.global	cmd_get_ADC_map
 26435              		.thumb
 26436              		.thumb_func
 26437              		.type	cmd_get_ADC_map, %function
 26438              	cmd_get_ADC_map:
 26439              	.LFB110:
3914:..\src/command_processing.c **** 
3915:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26440              		.loc 1 3915 0
 26441              		.cfi_startproc
 26442              		@ args = 0, pretend = 0, frame = 16
 26443              		@ frame_needed = 1, uses_anonymous_args = 0
 26444 0000 80B5     		push	{r7, lr}
 26445              		.cfi_def_cfa_offset 8
 26446              		.cfi_offset 7, -8
 26447              		.cfi_offset 14, -4
 26448 0002 84B0     		sub	sp, sp, #16
 26449              		.cfi_def_cfa_offset 24
 26450 0004 00AF     		add	r7, sp, #0
 26451              		.cfi_def_cfa_register 7
3916:..\src/command_processing.c ****     //Retrieve Encoder map
3917:..\src/command_processing.c ****     
3918:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3919:..\src/command_processing.c ****     uint8 CYDATA i;
3920:..\src/command_processing.c ****     
3921:..\src/command_processing.c ****     // Header        
3922:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26452              		.loc 1 3922 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 578


 26453 0006 A523     		movs	r3, #165
 26454 0008 3B70     		strb	r3, [r7]
3923:..\src/command_processing.c ****     
3924:..\src/command_processing.c ****     // Fill payload
3925:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26455              		.loc 1 3925 0
 26456 000a 0C23     		movs	r3, #12
 26457 000c 7B70     		strb	r3, [r7, #1]
3926:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26458              		.loc 1 3926 0
 26459 000e 0023     		movs	r3, #0
 26460 0010 FB73     		strb	r3, [r7, #15]
 26461 0012 0EE0     		b	.L1040
 26462              	.L1041:
3927:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26463              		.loc 1 3927 0 discriminator 3
 26464 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26465 0016 0233     		adds	r3, r3, #2
 26466 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26467 001a 0F49     		ldr	r1, .L1042
 26468 001c 0A44     		add	r2, r2, r1
 26469 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 26470 0022 07F11001 		add	r1, r7, #16
 26471 0026 0B44     		add	r3, r3, r1
 26472 0028 03F8102C 		strb	r2, [r3, #-16]
3926:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26473              		.loc 1 3926 0 discriminator 3
 26474 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26475 002e 0133     		adds	r3, r3, #1
 26476 0030 FB73     		strb	r3, [r7, #15]
 26477              	.L1040:
3926:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26478              		.loc 1 3926 0 is_stmt 0 discriminator 1
 26479 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26480 0034 0B2B     		cmp	r3, #11
 26481 0036 EDD9     		bls	.L1041
3928:..\src/command_processing.c ****     }
3929:..\src/command_processing.c ****     
3930:..\src/command_processing.c ****     // Calculate checksum
3931:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26482              		.loc 1 3931 0 is_stmt 1
 26483 0038 3B46     		mov	r3, r7
 26484 003a 0E21     		movs	r1, #14
 26485 003c 1846     		mov	r0, r3
 26486 003e FFF7FEFF 		bl	LCRChecksum
 26487 0042 0346     		mov	r3, r0
 26488 0044 BB73     		strb	r3, [r7, #14]
3932:..\src/command_processing.c ****     
3933:..\src/command_processing.c ****     // Send package to UART
3934:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26489              		.loc 1 3934 0
 26490 0046 3B46     		mov	r3, r7
 26491 0048 0F21     		movs	r1, #15
 26492 004a 1846     		mov	r0, r3
 26493 004c FFF7FEFF 		bl	commWrite
3935:..\src/command_processing.c ****     
3936:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 579


 26494              		.loc 1 3936 0
 26495 0050 00BF     		nop
 26496 0052 1037     		adds	r7, r7, #16
 26497              		.cfi_def_cfa_offset 8
 26498 0054 BD46     		mov	sp, r7
 26499              		.cfi_def_cfa_register 13
 26500              		@ sp needed
 26501 0056 80BD     		pop	{r7, pc}
 26502              	.L1043:
 26503              		.align	2
 26504              	.L1042:
 26505 0058 00000000 		.word	c_mem
 26506              		.cfi_endproc
 26507              	.LFE110:
 26508              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26509              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26510              		.align	2
 26511              		.global	cmd_get_ADC_raw
 26512              		.thumb
 26513              		.thumb_func
 26514              		.type	cmd_get_ADC_raw, %function
 26515              	cmd_get_ADC_raw:
 26516              	.LFB111:
3937:..\src/command_processing.c **** 
3938:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26517              		.loc 1 3938 0
 26518              		.cfi_startproc
 26519              		@ args = 0, pretend = 0, frame = 32
 26520              		@ frame_needed = 1, uses_anonymous_args = 0
 26521 0000 90B5     		push	{r4, r7, lr}
 26522              		.cfi_def_cfa_offset 12
 26523              		.cfi_offset 4, -12
 26524              		.cfi_offset 7, -8
 26525              		.cfi_offset 14, -4
 26526 0002 89B0     		sub	sp, sp, #36
 26527              		.cfi_def_cfa_offset 48
 26528 0004 00AF     		add	r7, sp, #0
 26529              		.cfi_def_cfa_register 7
3939:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3942:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26530              		.loc 1 3942 0
 26531 0006 0023     		movs	r3, #0
 26532 0008 BB77     		strb	r3, [r7, #30]
3943:..\src/command_processing.c ****     int16 aux_int16;
3944:..\src/command_processing.c ****     
3945:..\src/command_processing.c ****     // Header        
3946:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26533              		.loc 1 3946 0
 26534 000a A623     		movs	r3, #166
 26535 000c 3B71     		strb	r3, [r7, #4]
3947:..\src/command_processing.c ****     
3948:..\src/command_processing.c ****     // Fill payload
3949:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26536              		.loc 1 3949 0
 26537 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 580


 26538 0010 FB77     		strb	r3, [r7, #31]
 26539 0012 27E0     		b	.L1045
 26540              	.L1047:
3950:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26541              		.loc 1 3950 0
 26542 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26543 0016 274A     		ldr	r2, .L1048
 26544 0018 1344     		add	r3, r3, r2
 26545 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26546 001e 012B     		cmp	r3, #1
 26547 0020 1DD1     		bne	.L1046
3951:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26548              		.loc 1 3951 0
 26549 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26550 0024 244A     		ldr	r2, .L1048+4
 26551 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26552 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3952:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26553              		.loc 1 3952 0
 26554 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26555 002e 5B00     		lsls	r3, r3, #1
 26556 0030 0233     		adds	r3, r3, #2
 26557 0032 BA1C     		adds	r2, r7, #2
 26558 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26559 0036 07F12001 		add	r1, r7, #32
 26560 003a 0B44     		add	r3, r3, r1
 26561 003c 03F81C2C 		strb	r2, [r3, #-28]
3953:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26562              		.loc 1 3953 0
 26563 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26564 0042 5B00     		lsls	r3, r3, #1
 26565 0044 5A1C     		adds	r2, r3, #1
 26566 0046 BB1C     		adds	r3, r7, #2
 26567 0048 0133     		adds	r3, r3, #1
 26568 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26569 004c 07F12003 		add	r3, r7, #32
 26570 0050 1344     		add	r3, r3, r2
 26571 0052 0A46     		mov	r2, r1
 26572 0054 03F81C2C 		strb	r2, [r3, #-28]
3954:..\src/command_processing.c ****             idx++;
 26573              		.loc 1 3954 0
 26574 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26575 005a 0133     		adds	r3, r3, #1
 26576 005c BB77     		strb	r3, [r7, #30]
 26577              	.L1046:
3949:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26578              		.loc 1 3949 0 discriminator 2
 26579 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26580 0060 0133     		adds	r3, r3, #1
 26581 0062 FB77     		strb	r3, [r7, #31]
 26582              	.L1045:
3949:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26583              		.loc 1 3949 0 is_stmt 0 discriminator 1
 26584 0064 154B     		ldr	r3, .L1048+8
 26585 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26586 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26587 006a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 581


 26588 006c D2D3     		bcc	.L1047
3955:..\src/command_processing.c ****         }
3956:..\src/command_processing.c ****     }
3957:..\src/command_processing.c **** 
3958:..\src/command_processing.c ****     // Calculate checksum
3959:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26589              		.loc 1 3959 0 is_stmt 1
 26590 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26591 0070 5B00     		lsls	r3, r3, #1
 26592 0072 5C1C     		adds	r4, r3, #1
 26593 0074 BB7F     		ldrb	r3, [r7, #30]
 26594 0076 5B00     		lsls	r3, r3, #1
 26595 0078 DBB2     		uxtb	r3, r3
 26596 007a 0133     		adds	r3, r3, #1
 26597 007c DAB2     		uxtb	r2, r3
 26598 007e 3B1D     		adds	r3, r7, #4
 26599 0080 1146     		mov	r1, r2
 26600 0082 1846     		mov	r0, r3
 26601 0084 FFF7FEFF 		bl	LCRChecksum
 26602 0088 0346     		mov	r3, r0
 26603 008a 1A46     		mov	r2, r3
 26604 008c 07F12003 		add	r3, r7, #32
 26605 0090 2344     		add	r3, r3, r4
 26606 0092 03F81C2C 		strb	r2, [r3, #-28]
3960:..\src/command_processing.c ****     
3961:..\src/command_processing.c ****     // Send package to UART
3962:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26607              		.loc 1 3962 0
 26608 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26609 0098 0133     		adds	r3, r3, #1
 26610 009a 9BB2     		uxth	r3, r3
 26611 009c 5B00     		lsls	r3, r3, #1
 26612 009e 9AB2     		uxth	r2, r3
 26613 00a0 3B1D     		adds	r3, r7, #4
 26614 00a2 1146     		mov	r1, r2
 26615 00a4 1846     		mov	r0, r3
 26616 00a6 FFF7FEFF 		bl	commWrite
3963:..\src/command_processing.c **** }
 26617              		.loc 1 3963 0
 26618 00aa 00BF     		nop
 26619 00ac 2437     		adds	r7, r7, #36
 26620              		.cfi_def_cfa_offset 12
 26621 00ae BD46     		mov	sp, r7
 26622              		.cfi_def_cfa_register 13
 26623              		@ sp needed
 26624 00b0 90BD     		pop	{r4, r7, pc}
 26625              	.L1049:
 26626 00b2 00BF     		.align	2
 26627              	.L1048:
 26628 00b4 00000000 		.word	c_mem
 26629 00b8 00000000 		.word	ADC_buf
 26630 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 26631              		.cfi_endproc
 26632              	.LFE111:
 26633              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 26634              		.section	.rodata
 26635 1faf 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 582


 26636              	.LC307:
 26637 1fb0 00       		.ascii	"\000"
 26638              		.section	.text.cmd_get_SD_file,"ax",%progbits
 26639              		.align	2
 26640              		.global	cmd_get_SD_file
 26641              		.thumb
 26642              		.thumb_func
 26643              		.type	cmd_get_SD_file, %function
 26644              	cmd_get_SD_file:
 26645              	.LFB112:
3964:..\src/command_processing.c **** 
3965:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 26646              		.loc 1 3965 0
 26647              		.cfi_startproc
 26648              		@ args = 0, pretend = 0, frame = 20064
 26649              		@ frame_needed = 1, uses_anonymous_args = 0
 26650 0000 80B5     		push	{r7, lr}
 26651              		.cfi_def_cfa_offset 8
 26652              		.cfi_offset 7, -8
 26653              		.cfi_offset 14, -4
 26654 0002 ADF59C4D 		sub	sp, sp, #19968
 26655              		.cfi_def_cfa_offset 19976
 26656 0006 98B0     		sub	sp, sp, #96
 26657              		.cfi_def_cfa_offset 20072
 26658 0008 00AF     		add	r7, sp, #0
 26659              		.cfi_def_cfa_register 7
 26660 000a 0246     		mov	r2, r0
 26661 000c 07F16003 		add	r3, r7, #96
 26662 0010 5A3B     		subs	r3, r3, #90
 26663 0012 1A80     		strh	r2, [r3]	@ movhi
3966:..\src/command_processing.c ****     
3967:..\src/command_processing.c ****     uint8 i = 0;
 26664              		.loc 1 3967 0
 26665 0014 0023     		movs	r3, #0
 26666 0016 07F59C42 		add	r2, r7, #19968
 26667 001a 02F15F02 		add	r2, r2, #95
 26668 001e 1370     		strb	r3, [r2]
3968:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 26669              		.loc 1 3968 0
 26670 0020 0023     		movs	r3, #0
 26671 0022 07F59C42 		add	r2, r7, #19968
 26672 0026 02F12C02 		add	r2, r2, #44
 26673 002a 1360     		str	r3, [r2]
 26674 002c 07F59C43 		add	r3, r7, #19968
 26675 0030 03F13003 		add	r3, r3, #48
 26676 0034 2E22     		movs	r2, #46
 26677 0036 0021     		movs	r1, #0
 26678 0038 1846     		mov	r0, r3
 26679 003a FFF7FEFF 		bl	memset
3969:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 26680              		.loc 1 3969 0
 26681 003e 07F16003 		add	r3, r7, #96
 26682 0042 543B     		subs	r3, r3, #84
 26683 0044 0022     		movs	r2, #0
 26684 0046 1A60     		str	r2, [r3]
 26685 0048 0433     		adds	r3, r3, #4
 26686 004a 44F61C62 		movw	r2, #19996
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 583


 26687 004e 0021     		movs	r1, #0
 26688 0050 1846     		mov	r0, r3
 26689 0052 FFF7FEFF 		bl	memset
3970:..\src/command_processing.c ****     strcpy(filename, "");
 26690              		.loc 1 3970 0
 26691 0056 3C4B     		ldr	r3, .L1055
 26692 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26693 005a 07F59C42 		add	r2, r7, #19968
 26694 005e 02F12C02 		add	r2, r2, #44
 26695 0062 1370     		strb	r3, [r2]
3971:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 26696              		.loc 1 3971 0
 26697 0064 384B     		ldr	r3, .L1055
 26698 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26699 0068 07F16003 		add	r3, r7, #96
 26700 006c 543B     		subs	r3, r3, #84
 26701 006e 1A70     		strb	r2, [r3]
3972:..\src/command_processing.c ****     
3973:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 26702              		.loc 1 3973 0
 26703 0070 0023     		movs	r3, #0
 26704 0072 07F59C42 		add	r2, r7, #19968
 26705 0076 02F15F02 		add	r2, r2, #95
 26706 007a 1370     		strb	r3, [r2]
 26707 007c 1DE0     		b	.L1051
 26708              	.L1052:
3974:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26709              		.loc 1 3974 0 discriminator 3
 26710 007e 07F59C43 		add	r3, r7, #19968
 26711 0082 03F15F03 		add	r3, r3, #95
 26712 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26713 0088 07F59C42 		add	r2, r7, #19968
 26714 008c 02F12C02 		add	r2, r2, #44
 26715 0090 1344     		add	r3, r3, r2
 26716 0092 07F59C42 		add	r2, r7, #19968
 26717 0096 02F15F02 		add	r2, r2, #95
 26718 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26719 009c 0332     		adds	r2, r2, #3
 26720 009e 2B49     		ldr	r1, .L1055+4
 26721 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 26722 00a2 1A70     		strb	r2, [r3]
3973:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26723              		.loc 1 3973 0 discriminator 3
 26724 00a4 07F59C43 		add	r3, r7, #19968
 26725 00a8 03F15F03 		add	r3, r3, #95
 26726 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26727 00ae 0133     		adds	r3, r3, #1
 26728 00b0 07F59C42 		add	r2, r7, #19968
 26729 00b4 02F15F02 		add	r2, r2, #95
 26730 00b8 1370     		strb	r3, [r2]
 26731              	.L1051:
3973:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 26732              		.loc 1 3973 0 is_stmt 0 discriminator 1
 26733 00ba 07F59C43 		add	r3, r7, #19968
 26734 00be 03F15F03 		add	r3, r3, #95
 26735 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26736 00c4 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 584


 26737 00c6 07F16003 		add	r3, r7, #96
 26738 00ca 5A3B     		subs	r3, r3, #90
 26739 00cc 1B88     		ldrh	r3, [r3]
 26740 00ce 9342     		cmp	r3, r2
 26741 00d0 D5D8     		bhi	.L1052
3975:..\src/command_processing.c ****     }
3976:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 26742              		.loc 1 3976 0 is_stmt 1
 26743 00d2 07F59C43 		add	r3, r7, #19968
 26744 00d6 03F15F03 		add	r3, r3, #95
 26745 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26746 00dc 07F59C42 		add	r2, r7, #19968
 26747 00e0 02F12C02 		add	r2, r2, #44
 26748 00e4 1344     		add	r3, r3, r2
 26749 00e6 0022     		movs	r2, #0
 26750 00e8 1A70     		strb	r2, [r3]
3977:..\src/command_processing.c ****      
3978:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
3979:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 26751              		.loc 1 3979 0
 26752 00ea 07F59C43 		add	r3, r7, #19968
 26753 00ee 03F12C03 		add	r3, r3, #44
 26754 00f2 1749     		ldr	r1, .L1055+8
 26755 00f4 1846     		mov	r0, r3
 26756 00f6 FFF7FEFF 		bl	strcmp
 26757 00fa 0346     		mov	r3, r0
 26758 00fc 002B     		cmp	r3, #0
 26759 00fe 0CD0     		beq	.L1053
3980:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 26760              		.loc 1 3980 0
 26761 0100 07F16003 		add	r3, r7, #96
 26762 0104 543B     		subs	r3, r3, #84
 26763 0106 07F59C40 		add	r0, r7, #19968
 26764 010a 00F12C00 		add	r0, r0, #44
 26765 010e 44F62062 		movw	r2, #20000
 26766 0112 1946     		mov	r1, r3
 26767 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 26768 0118 07E0     		b	.L1054
 26769              	.L1053:
3981:..\src/command_processing.c ****     }
3982:..\src/command_processing.c ****     else {
3983:..\src/command_processing.c ****         //It is the currently open working file
3984:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 26770              		.loc 1 3984 0
 26771 011a 07F16003 		add	r3, r7, #96
 26772 011e 543B     		subs	r3, r3, #84
 26773 0120 44F62061 		movw	r1, #20000
 26774 0124 1846     		mov	r0, r3
 26775 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 26776              	.L1054:
3985:..\src/command_processing.c ****     }
3986:..\src/command_processing.c **** 
3987:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
3988:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
3989:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 26777              		.loc 1 3989 0
 26778 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 585


3990:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 26779              		.loc 1 3990 0
 26780 012e 07F16003 		add	r3, r7, #96
 26781 0132 543B     		subs	r3, r3, #84
 26782 0134 1846     		mov	r0, r3
 26783 0136 FFF7FEFF 		bl	UART_RS485_PutString
3991:..\src/command_processing.c **** }
 26784              		.loc 1 3991 0
 26785 013a 00BF     		nop
 26786 013c 07F59C47 		add	r7, r7, #19968
 26787 0140 6037     		adds	r7, r7, #96
 26788              		.cfi_def_cfa_offset 8
 26789 0142 BD46     		mov	sp, r7
 26790              		.cfi_def_cfa_register 13
 26791              		@ sp needed
 26792 0144 80BD     		pop	{r7, pc}
 26793              	.L1056:
 26794 0146 00BF     		.align	2
 26795              	.L1055:
 26796 0148 B01F0000 		.word	.LC307
 26797 014c 00000000 		.word	g_rx
 26798 0150 00000000 		.word	sdFile
 26799              		.cfi_endproc
 26800              	.LFE112:
 26801              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 26802              		.section	.text.air_chambers_control,"ax",%progbits
 26803              		.align	2
 26804              		.global	air_chambers_control
 26805              		.thumb
 26806              		.thumb_func
 26807              		.type	air_chambers_control, %function
 26808              	air_chambers_control:
 26809              	.LFB113:
3992:..\src/command_processing.c **** 
3993:..\src/command_processing.c **** //==============================================================================
3994:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3995:..\src/command_processing.c **** //==============================================================================
3996:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3997:..\src/command_processing.c **** 
3998:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 26810              		.loc 1 3998 0
 26811              		.cfi_startproc
 26812              		@ args = 0, pretend = 0, frame = 8
 26813              		@ frame_needed = 1, uses_anonymous_args = 0
 26814              		@ link register save eliminated.
 26815 0000 80B4     		push	{r7}
 26816              		.cfi_def_cfa_offset 4
 26817              		.cfi_offset 7, -4
 26818 0002 83B0     		sub	sp, sp, #12
 26819              		.cfi_def_cfa_offset 16
 26820 0004 00AF     		add	r7, sp, #0
 26821              		.cfi_def_cfa_register 7
 26822 0006 7860     		str	r0, [r7, #4]
3999:..\src/command_processing.c ****     
4000:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4001:..\src/command_processing.c ****     
4002:..\src/command_processing.c ****     int16 curr_diff;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 586


4003:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4004:..\src/command_processing.c ****     int32 valve_command;
4005:..\src/command_processing.c ****     int16 x_value;
4006:..\src/command_processing.c **** 
4007:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4008:..\src/command_processing.c ****     
4009:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4010:..\src/command_processing.c ****     
4011:..\src/command_processing.c ****     // Current difference saturation old mapping
4012:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4013:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4014:..\src/command_processing.c **** //    }
4015:..\src/command_processing.c **** //    if(curr_diff < 0) {
4016:..\src/command_processing.c **** //        curr_diff = 0;
4017:..\src/command_processing.c **** //    }
4018:..\src/command_processing.c **** 
4019:..\src/command_processing.c ****     // Compute pressure reference
4020:..\src/command_processing.c **** 
4021:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4022:..\src/command_processing.c ****     if (x_value < 0)
4023:..\src/command_processing.c ****         x_value = 0;
4024:..\src/command_processing.c ****     
4025:..\src/command_processing.c ****     // old mapping --- linear mapping
4026:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4027:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4028:..\src/command_processing.c ****     if (pressure_reference < 0)
4029:..\src/command_processing.c ****         pressure_reference = 0;
4030:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4031:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4032:..\src/command_processing.c ****     
4033:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4034:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4035:..\src/command_processing.c **** //    if (err_pressure < 0){
4036:..\src/command_processing.c **** //        err_pressure = 0;
4037:..\src/command_processing.c **** //    }
4038:..\src/command_processing.c ****     
4039:..\src/command_processing.c ****     if (x_value <= 0){
4040:..\src/command_processing.c ****         //i.e the hand is opening
4041:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4042:..\src/command_processing.c ****     }
4043:..\src/command_processing.c ****     else {
4044:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4045:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4046:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4047:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4048:..\src/command_processing.c ****     }
4049:..\src/command_processing.c ****     
4050:..\src/command_processing.c ****     // Pump control
4051:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4052:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4053:..\src/command_processing.c ****     
4054:..\src/command_processing.c ****     // Limit output voltage
4055:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4056:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4057:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4058:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4059:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 587


4060:..\src/command_processing.c ****     VALVE_Write(valve_command);
4061:..\src/command_processing.c ****     
4062:..\src/command_processing.c ****     
4063:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4064:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4065:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4066:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4067:..\src/command_processing.c **** #endif
4068:..\src/command_processing.c **** }
 26823              		.loc 1 4068 0
 26824 0008 00BF     		nop
 26825 000a 0C37     		adds	r7, r7, #12
 26826              		.cfi_def_cfa_offset 4
 26827 000c BD46     		mov	sp, r7
 26828              		.cfi_def_cfa_register 13
 26829              		@ sp needed
 26830 000e 80BC     		pop	{r7}
 26831              		.cfi_restore 7
 26832              		.cfi_def_cfa_offset 0
 26833 0010 7047     		bx	lr
 26834              		.cfi_endproc
 26835              	.LFE113:
 26836              		.size	air_chambers_control, .-air_chambers_control
 26837 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 26838              		.align	2
 26839              		.global	emg_activation_velocity_fsm
 26840              		.thumb
 26841              		.thumb_func
 26842              		.type	emg_activation_velocity_fsm, %function
 26843              	emg_activation_velocity_fsm:
 26844              	.LFB114:
4069:..\src/command_processing.c **** 
4070:..\src/command_processing.c **** 
4071:..\src/command_processing.c **** //==============================================================================
4072:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4073:..\src/command_processing.c **** //==============================================================================
4074:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4075:..\src/command_processing.c **** 
4076:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 26845              		.loc 1 4076 0
 26846              		.cfi_startproc
 26847              		@ args = 0, pretend = 0, frame = 16
 26848              		@ frame_needed = 1, uses_anonymous_args = 0
 26849              		@ link register save eliminated.
 26850 0000 80B4     		push	{r7}
 26851              		.cfi_def_cfa_offset 4
 26852              		.cfi_offset 7, -4
 26853 0002 85B0     		sub	sp, sp, #20
 26854              		.cfi_def_cfa_offset 24
 26855 0004 00AF     		add	r7, sp, #0
 26856              		.cfi_def_cfa_register 7
4077:..\src/command_processing.c ****       
4078:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4079:..\src/command_processing.c ****     static int32 cnt = 0;
4080:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4081:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4082:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 588


4083:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 26857              		.loc 1 4083 0
 26858 0006 534B     		ldr	r3, .L1087
 26859 0008 1B68     		ldr	r3, [r3]
 26860 000a 534A     		ldr	r2, .L1087+4
 26861 000c B2F8F021 		ldrh	r2, [r2, #496]
 26862 0010 9B1A     		subs	r3, r3, r2
 26863 0012 FB60     		str	r3, [r7, #12]
4084:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 26864              		.loc 1 4084 0
 26865 0014 4F4B     		ldr	r3, .L1087
 26866 0016 5B68     		ldr	r3, [r3, #4]
 26867 0018 4F4A     		ldr	r2, .L1087+4
 26868 001a B2F8F221 		ldrh	r2, [r2, #498]
 26869 001e 9B1A     		subs	r3, r3, r2
 26870 0020 BB60     		str	r3, [r7, #8]
4085:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 26871              		.loc 1 4085 0
 26872 0022 4C4B     		ldr	r3, .L1087
 26873 0024 1B68     		ldr	r3, [r3]
 26874 0026 4C4A     		ldr	r2, .L1087+4
 26875 0028 B2F8E222 		ldrh	r2, [r2, #738]
 26876 002c 9B1A     		subs	r3, r3, r2
 26877 002e 7B60     		str	r3, [r7, #4]
4086:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 26878              		.loc 1 4086 0
 26879 0030 484B     		ldr	r3, .L1087
 26880 0032 5B68     		ldr	r3, [r3, #4]
 26881 0034 484A     		ldr	r2, .L1087+4
 26882 0036 B2F8E422 		ldrh	r2, [r2, #740]
 26883 003a 9B1A     		subs	r3, r3, r2
 26884 003c 3B60     		str	r3, [r7]
4087:..\src/command_processing.c ****     
4088:..\src/command_processing.c **** 
4089:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4090:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4091:..\src/command_processing.c ****     switch (fsm_state){
 26885              		.loc 1 4091 0
 26886 003e 474B     		ldr	r3, .L1087+8
 26887 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26888 0042 032B     		cmp	r3, #3
 26889 0044 7FD8     		bhi	.L1059
 26890 0046 01A2     		adr	r2, .L1061
 26891 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 26892              		.p2align 2
 26893              	.L1061:
 26894 004c 5D000000 		.word	.L1060+1
 26895 0050 71000000 		.word	.L1062+1
 26896 0054 11010000 		.word	.L1063+1
 26897 0058 25010000 		.word	.L1064+1
 26898              		.p2align 1
 26899              	.L1060:
4092:..\src/command_processing.c ****         case RELAX_STATE:
4093:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 26900              		.loc 1 4093 0
 26901 005c FB68     		ldr	r3, [r7, #12]
 26902 005e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 589


 26903 0060 02DC     		bgt	.L1065
 26904              		.loc 1 4093 0 is_stmt 0 discriminator 1
 26905 0062 BB68     		ldr	r3, [r7, #8]
 26906 0064 002B     		cmp	r3, #0
 26907 0066 67DD     		ble	.L1083
 26908              	.L1065:
4094:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 26909              		.loc 1 4094 0 is_stmt 1
 26910 0068 3C4B     		ldr	r3, .L1087+8
 26911 006a 0122     		movs	r2, #1
 26912 006c 1A70     		strb	r2, [r3]
4095:..\src/command_processing.c ****             }
4096:..\src/command_processing.c ****             
4097:..\src/command_processing.c ****             break;
 26913              		.loc 1 4097 0
 26914 006e 63E0     		b	.L1083
 26915              	.L1062:
4098:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4099:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 26916              		.loc 1 4099 0
 26917 0070 FB68     		ldr	r3, [r7, #12]
 26918 0072 002B     		cmp	r3, #0
 26919 0074 02DC     		bgt	.L1067
 26920              		.loc 1 4099 0 is_stmt 0 discriminator 1
 26921 0076 BB68     		ldr	r3, [r7, #8]
 26922 0078 002B     		cmp	r3, #0
 26923 007a 05DD     		ble	.L1068
 26924              	.L1067:
4100:..\src/command_processing.c ****                 cnt = cnt +1;
 26925              		.loc 1 4100 0 is_stmt 1
 26926 007c 384B     		ldr	r3, .L1087+12
 26927 007e 1B68     		ldr	r3, [r3]
 26928 0080 0133     		adds	r3, r3, #1
 26929 0082 374A     		ldr	r2, .L1087+12
 26930 0084 1360     		str	r3, [r2]
 26931 0086 02E0     		b	.L1069
 26932              	.L1068:
4101:..\src/command_processing.c ****             }
4102:..\src/command_processing.c ****             else {
4103:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 26933              		.loc 1 4103 0
 26934 0088 344B     		ldr	r3, .L1087+8
 26935 008a 0022     		movs	r2, #0
 26936 008c 1A70     		strb	r2, [r3]
 26937              	.L1069:
4104:..\src/command_processing.c ****             }
4105:..\src/command_processing.c ****             
4106:..\src/command_processing.c ****             if (cnt > 100){
 26938              		.loc 1 4106 0
 26939 008e 344B     		ldr	r3, .L1087+12
 26940 0090 1B68     		ldr	r3, [r3]
 26941 0092 642B     		cmp	r3, #100
 26942 0094 52DD     		ble	.L1084
4107:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 26943              		.loc 1 4107 0
 26944 0096 FB68     		ldr	r3, [r7, #12]
 26945 0098 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 590


 26946 009a 02DD     		ble	.L1071
 26947              		.loc 1 4107 0 is_stmt 0 discriminator 1
 26948 009c 7B68     		ldr	r3, [r7, #4]
 26949 009e 002B     		cmp	r3, #0
 26950 00a0 05DC     		bgt	.L1072
 26951              	.L1071:
 26952              		.loc 1 4107 0 discriminator 3
 26953 00a2 BB68     		ldr	r3, [r7, #8]
 26954 00a4 002B     		cmp	r3, #0
 26955 00a6 0EDD     		ble	.L1073
 26956              		.loc 1 4107 0 discriminator 4
 26957 00a8 3B68     		ldr	r3, [r7]
 26958 00aa 002B     		cmp	r3, #0
 26959 00ac 0BDD     		ble	.L1073
 26960              	.L1072:
4108:..\src/command_processing.c ****                     // Fast activation
4109:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 26961              		.loc 1 4109 0 is_stmt 1
 26962 00ae 2A4B     		ldr	r3, .L1087+4
 26963 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 26964 00b4 002B     		cmp	r3, #0
 26965 00b6 03D1     		bne	.L1074
4110:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 26966              		.loc 1 4110 0
 26967 00b8 284B     		ldr	r3, .L1087+8
 26968 00ba 0222     		movs	r2, #2
 26969 00bc 1A70     		strb	r2, [r3]
 26970 00be 02E0     		b	.L1073
 26971              	.L1074:
4111:..\src/command_processing.c ****                     }
4112:..\src/command_processing.c ****                     else{
4113:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 26972              		.loc 1 4113 0
 26973 00c0 264B     		ldr	r3, .L1087+8
 26974 00c2 0322     		movs	r2, #3
 26975 00c4 1A70     		strb	r2, [r3]
 26976              	.L1073:
4114:..\src/command_processing.c ****                     }
4115:..\src/command_processing.c ****                 }
4116:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 26977              		.loc 1 4116 0
 26978 00c6 FB68     		ldr	r3, [r7, #12]
 26979 00c8 002B     		cmp	r3, #0
 26980 00ca 02DD     		ble	.L1075
 26981              		.loc 1 4116 0 is_stmt 0 discriminator 1
 26982 00cc 7B68     		ldr	r3, [r7, #4]
 26983 00ce 002B     		cmp	r3, #0
 26984 00d0 05DB     		blt	.L1076
 26985              	.L1075:
 26986              		.loc 1 4116 0 discriminator 3
 26987 00d2 BB68     		ldr	r3, [r7, #8]
 26988 00d4 002B     		cmp	r3, #0
 26989 00d6 0EDD     		ble	.L1077
 26990              		.loc 1 4116 0 discriminator 4
 26991 00d8 3B68     		ldr	r3, [r7]
 26992 00da 002B     		cmp	r3, #0
 26993 00dc 0BDA     		bge	.L1077
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 591


 26994              	.L1076:
4117:..\src/command_processing.c ****                     // Slow activation
4118:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 26995              		.loc 1 4118 0 is_stmt 1
 26996 00de 1E4B     		ldr	r3, .L1087+4
 26997 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 26998 00e4 002B     		cmp	r3, #0
 26999 00e6 03D1     		bne	.L1078
4119:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27000              		.loc 1 4119 0
 27001 00e8 1C4B     		ldr	r3, .L1087+8
 27002 00ea 0322     		movs	r2, #3
 27003 00ec 1A70     		strb	r2, [r3]
 27004 00ee 02E0     		b	.L1077
 27005              	.L1078:
4120:..\src/command_processing.c ****                     }
4121:..\src/command_processing.c ****                     else{
4122:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27006              		.loc 1 4122 0
 27007 00f0 1A4B     		ldr	r3, .L1087+8
 27008 00f2 0222     		movs	r2, #2
 27009 00f4 1A70     		strb	r2, [r3]
 27010              	.L1077:
4123:..\src/command_processing.c ****                     }
4124:..\src/command_processing.c ****                 }
4125:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27011              		.loc 1 4125 0
 27012 00f6 FB68     		ldr	r3, [r7, #12]
 27013 00f8 002B     		cmp	r3, #0
 27014 00fa 05DA     		bge	.L1079
 27015              		.loc 1 4125 0 is_stmt 0 discriminator 1
 27016 00fc BB68     		ldr	r3, [r7, #8]
 27017 00fe 002B     		cmp	r3, #0
 27018 0100 02DA     		bge	.L1079
4126:..\src/command_processing.c ****                     // Involuntary activation
4127:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27019              		.loc 1 4127 0 is_stmt 1
 27020 0102 164B     		ldr	r3, .L1087+8
 27021 0104 0022     		movs	r2, #0
 27022 0106 1A70     		strb	r2, [r3]
 27023              	.L1079:
4128:..\src/command_processing.c ****                 }
4129:..\src/command_processing.c ****                 cnt = 0;
 27024              		.loc 1 4129 0
 27025 0108 154B     		ldr	r3, .L1087+12
 27026 010a 0022     		movs	r2, #0
 27027 010c 1A60     		str	r2, [r3]
4130:..\src/command_processing.c ****             }
4131:..\src/command_processing.c ****     
4132:..\src/command_processing.c ****             break;
 27028              		.loc 1 4132 0
 27029 010e 15E0     		b	.L1084
 27030              	.L1063:
4133:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4134:..\src/command_processing.c ****             
4135:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27031              		.loc 1 4135 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 592


 27032 0110 FB68     		ldr	r3, [r7, #12]
 27033 0112 002B     		cmp	r3, #0
 27034 0114 14DA     		bge	.L1085
 27035              		.loc 1 4135 0 is_stmt 0 discriminator 1
 27036 0116 BB68     		ldr	r3, [r7, #8]
 27037 0118 002B     		cmp	r3, #0
 27038 011a 11DA     		bge	.L1085
4136:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27039              		.loc 1 4136 0 is_stmt 1
 27040 011c 0F4B     		ldr	r3, .L1087+8
 27041 011e 0022     		movs	r2, #0
 27042 0120 1A70     		strb	r2, [r3]
4137:..\src/command_processing.c ****             }
4138:..\src/command_processing.c ****         
4139:..\src/command_processing.c ****             break;
 27043              		.loc 1 4139 0
 27044 0122 0DE0     		b	.L1085
 27045              	.L1064:
4140:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4141:..\src/command_processing.c ****           
4142:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27046              		.loc 1 4142 0
 27047 0124 FB68     		ldr	r3, [r7, #12]
 27048 0126 002B     		cmp	r3, #0
 27049 0128 0CDA     		bge	.L1086
 27050              		.loc 1 4142 0 is_stmt 0 discriminator 1
 27051 012a BB68     		ldr	r3, [r7, #8]
 27052 012c 002B     		cmp	r3, #0
 27053 012e 09DA     		bge	.L1086
4143:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27054              		.loc 1 4143 0 is_stmt 1
 27055 0130 0A4B     		ldr	r3, .L1087+8
 27056 0132 0022     		movs	r2, #0
 27057 0134 1A70     		strb	r2, [r3]
4144:..\src/command_processing.c ****             }
4145:..\src/command_processing.c ****             
4146:..\src/command_processing.c ****             break;
 27058              		.loc 1 4146 0
 27059 0136 05E0     		b	.L1086
 27060              	.L1083:
4097:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27061              		.loc 1 4097 0
 27062 0138 00BF     		nop
 27063 013a 04E0     		b	.L1059
 27064              	.L1084:
4132:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27065              		.loc 1 4132 0
 27066 013c 00BF     		nop
 27067 013e 02E0     		b	.L1059
 27068              	.L1085:
4139:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27069              		.loc 1 4139 0
 27070 0140 00BF     		nop
 27071 0142 00E0     		b	.L1059
 27072              	.L1086:
 27073              		.loc 1 4146 0
 27074 0144 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 593


 27075              	.L1059:
4147:..\src/command_processing.c ****     }
4148:..\src/command_processing.c ****     
4149:..\src/command_processing.c ****     return fsm_state;
 27076              		.loc 1 4149 0
 27077 0146 054B     		ldr	r3, .L1087+8
 27078 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4150:..\src/command_processing.c **** 
4151:..\src/command_processing.c **** }
 27079              		.loc 1 4151 0
 27080 014a 1846     		mov	r0, r3
 27081 014c 1437     		adds	r7, r7, #20
 27082              		.cfi_def_cfa_offset 4
 27083 014e BD46     		mov	sp, r7
 27084              		.cfi_def_cfa_register 13
 27085              		@ sp needed
 27086 0150 80BC     		pop	{r7}
 27087              		.cfi_restore 7
 27088              		.cfi_def_cfa_offset 0
 27089 0152 7047     		bx	lr
 27090              	.L1088:
 27091              		.align	2
 27092              	.L1087:
 27093 0154 00000000 		.word	g_adc_meas
 27094 0158 00000000 		.word	c_mem
 27095 015c 08000000 		.word	fsm_state.11505
 27096 0160 0C000000 		.word	cnt.11506
 27097              		.cfi_endproc
 27098              	.LFE114:
 27099              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27100              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27101              		.align	2
 27102              		.global	otbk_act_wrist_control
 27103              		.thumb
 27104              		.thumb_func
 27105              		.type	otbk_act_wrist_control, %function
 27106              	otbk_act_wrist_control:
 27107              	.LFB115:
4152:..\src/command_processing.c **** 
4153:..\src/command_processing.c **** //==============================================================================
4154:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4155:..\src/command_processing.c **** //==============================================================================
4156:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4157:..\src/command_processing.c **** 
4158:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27108              		.loc 1 4158 0
 27109              		.cfi_startproc
 27110              		@ args = 0, pretend = 0, frame = 8
 27111              		@ frame_needed = 1, uses_anonymous_args = 0
 27112              		@ link register save eliminated.
 27113 0000 80B4     		push	{r7}
 27114              		.cfi_def_cfa_offset 4
 27115              		.cfi_offset 7, -4
 27116 0002 83B0     		sub	sp, sp, #12
 27117              		.cfi_def_cfa_offset 16
 27118 0004 00AF     		add	r7, sp, #0
 27119              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 594


 27120 0006 7860     		str	r0, [r7, #4]
4159:..\src/command_processing.c ****     
4160:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4161:..\src/command_processing.c ****     
4162:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4163:..\src/command_processing.c ****         
4164:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4165:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4166:..\src/command_processing.c ****     switch (fsm_state){
4167:..\src/command_processing.c ****         case RELAX_STATE:
4168:..\src/command_processing.c ****             
4169:..\src/command_processing.c ****             // Wrist stop
4170:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4171:..\src/command_processing.c ****             
4172:..\src/command_processing.c ****             // Softhand stop
4173:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4174:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4175:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4176:..\src/command_processing.c ****             
4177:..\src/command_processing.c ****             break;
4178:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4179:..\src/command_processing.c ****                 
4180:..\src/command_processing.c ****             break;
4181:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4182:..\src/command_processing.c ****             
4183:..\src/command_processing.c ****             // Wrist movement
4184:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4185:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4186:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4187:..\src/command_processing.c ****                 }
4188:..\src/command_processing.c ****                 else {
4189:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4190:..\src/command_processing.c ****                 }
4191:..\src/command_processing.c ****             }
4192:..\src/command_processing.c ****             else {
4193:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4194:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4195:..\src/command_processing.c ****                 }
4196:..\src/command_processing.c ****                 else {
4197:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4198:..\src/command_processing.c ****                 }
4199:..\src/command_processing.c ****             }
4200:..\src/command_processing.c ****             
4201:..\src/command_processing.c ****             // Softhand stop
4202:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4203:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4204:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4205:..\src/command_processing.c ****             
4206:..\src/command_processing.c ****             break;
4207:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4208:..\src/command_processing.c ****             
4209:..\src/command_processing.c ****             // Wrist stop
4210:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4211:..\src/command_processing.c ****             
4212:..\src/command_processing.c ****             // SoftHand movement
4213:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4214:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 595


4215:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4216:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4217:..\src/command_processing.c ****             
4218:..\src/command_processing.c ****             break;
4219:..\src/command_processing.c ****     }
4220:..\src/command_processing.c ****         
4221:..\src/command_processing.c ****     // Limit output voltage
4222:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4223:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4224:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4225:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4226:..\src/command_processing.c ****     
4227:..\src/command_processing.c **** #endif
4228:..\src/command_processing.c **** }
 27121              		.loc 1 4228 0
 27122 0008 00BF     		nop
 27123 000a 0C37     		adds	r7, r7, #12
 27124              		.cfi_def_cfa_offset 4
 27125 000c BD46     		mov	sp, r7
 27126              		.cfi_def_cfa_register 13
 27127              		@ sp needed
 27128 000e 80BC     		pop	{r7}
 27129              		.cfi_restore 7
 27130              		.cfi_def_cfa_offset 0
 27131 0010 7047     		bx	lr
 27132              		.cfi_endproc
 27133              	.LFE115:
 27134              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27135 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27136              		.align	2
 27137              		.global	drive_slave
 27138              		.thumb
 27139              		.thumb_func
 27140              		.type	drive_slave, %function
 27141              	drive_slave:
 27142              	.LFB116:
4229:..\src/command_processing.c **** 
4230:..\src/command_processing.c **** //==============================================================================
4231:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4232:..\src/command_processing.c **** //==============================================================================
4233:..\src/command_processing.c ****  
4234:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27143              		.loc 1 4234 0
 27144              		.cfi_startproc
 27145              		@ args = 0, pretend = 0, frame = 8
 27146              		@ frame_needed = 1, uses_anonymous_args = 0
 27147              		@ link register save eliminated.
 27148 0000 80B4     		push	{r7}
 27149              		.cfi_def_cfa_offset 4
 27150              		.cfi_offset 7, -4
 27151 0002 83B0     		sub	sp, sp, #12
 27152              		.cfi_def_cfa_offset 16
 27153 0004 00AF     		add	r7, sp, #0
 27154              		.cfi_def_cfa_register 7
 27155 0006 0346     		mov	r3, r0
 27156 0008 0A46     		mov	r2, r1
 27157 000a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 596


 27158 000c 1346     		mov	r3, r2
 27159 000e BB71     		strb	r3, [r7, #6]
4235:..\src/command_processing.c **** 
4236:..\src/command_processing.c **** #ifdef MASTER_FW
4237:..\src/command_processing.c ****     uint8 packet_data[6];
4238:..\src/command_processing.c ****     uint8 packet_lenght;
4239:..\src/command_processing.c ****     int16 aux_int16;
4240:..\src/command_processing.c **** 
4241:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4242:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4243:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4244:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4245:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4246:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4247:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4248:..\src/command_processing.c ****         master_mode = 0;
4249:..\src/command_processing.c ****         return;
4250:..\src/command_processing.c ****     }
4251:..\src/command_processing.c ****         
4252:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4253:..\src/command_processing.c ****         master_mode = 0;
4254:..\src/command_processing.c ****         return;
4255:..\src/command_processing.c ****     }
4256:..\src/command_processing.c ****     
4257:..\src/command_processing.c ****        
4258:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4259:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4260:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4261:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4262:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4263:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4264:..\src/command_processing.c ****     
4265:..\src/command_processing.c ****     packet_lenght = 6;
4266:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4267:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4268:..\src/command_processing.c **** 
4269:..\src/command_processing.c **** #endif
4270:..\src/command_processing.c **** }
 27160              		.loc 1 4270 0
 27161 0010 00BF     		nop
 27162 0012 0C37     		adds	r7, r7, #12
 27163              		.cfi_def_cfa_offset 4
 27164 0014 BD46     		mov	sp, r7
 27165              		.cfi_def_cfa_register 13
 27166              		@ sp needed
 27167 0016 80BC     		pop	{r7}
 27168              		.cfi_restore 7
 27169              		.cfi_def_cfa_offset 0
 27170 0018 7047     		bx	lr
 27171              		.cfi_endproc
 27172              	.LFE116:
 27173              		.size	drive_slave, .-drive_slave
 27174 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27175              		.align	2
 27176              		.global	stop_master_device
 27177              		.thumb
 27178              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 597


 27179              		.type	stop_master_device, %function
 27180              	stop_master_device:
 27181              	.LFB117:
4271:..\src/command_processing.c **** 
4272:..\src/command_processing.c **** //==============================================================================
4273:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4274:..\src/command_processing.c **** //==============================================================================
4275:..\src/command_processing.c ****  
4276:..\src/command_processing.c **** void stop_master_device() {
 27182              		.loc 1 4276 0
 27183              		.cfi_startproc
 27184              		@ args = 0, pretend = 0, frame = 0
 27185              		@ frame_needed = 1, uses_anonymous_args = 0
 27186              		@ link register save eliminated.
 27187 0000 80B4     		push	{r7}
 27188              		.cfi_def_cfa_offset 4
 27189              		.cfi_offset 7, -4
 27190 0002 00AF     		add	r7, sp, #0
 27191              		.cfi_def_cfa_register 7
4277:..\src/command_processing.c ****     
4278:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4279:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4280:..\src/command_processing.c ****         // Stop pump and open valve
4281:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4282:..\src/command_processing.c ****         VALVE_Write(0);
4283:..\src/command_processing.c ****     }
4284:..\src/command_processing.c **** #endif
4285:..\src/command_processing.c **** 
4286:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4287:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4288:..\src/command_processing.c ****         //Stop wrist motor
4289:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4290:..\src/command_processing.c ****     }
4291:..\src/command_processing.c **** #endif    
4292:..\src/command_processing.c **** }
 27192              		.loc 1 4292 0
 27193 0004 00BF     		nop
 27194 0006 BD46     		mov	sp, r7
 27195              		.cfi_def_cfa_register 13
 27196              		@ sp needed
 27197 0008 80BC     		pop	{r7}
 27198              		.cfi_restore 7
 27199              		.cfi_def_cfa_offset 0
 27200 000a 7047     		bx	lr
 27201              		.cfi_endproc
 27202              	.LFE117:
 27203              		.size	stop_master_device, .-stop_master_device
 27204              		.section	.text.deactivate_slaves,"ax",%progbits
 27205              		.align	2
 27206              		.global	deactivate_slaves
 27207              		.thumb
 27208              		.thumb_func
 27209              		.type	deactivate_slaves, %function
 27210              	deactivate_slaves:
 27211              	.LFB118:
4293:..\src/command_processing.c **** 
4294:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 598


4295:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4296:..\src/command_processing.c **** //==============================================================================
4297:..\src/command_processing.c ****  
4298:..\src/command_processing.c **** void deactivate_slaves() {
 27212              		.loc 1 4298 0
 27213              		.cfi_startproc
 27214              		@ args = 0, pretend = 0, frame = 0
 27215              		@ frame_needed = 1, uses_anonymous_args = 0
 27216              		@ link register save eliminated.
 27217 0000 80B4     		push	{r7}
 27218              		.cfi_def_cfa_offset 4
 27219              		.cfi_offset 7, -4
 27220 0002 00AF     		add	r7, sp, #0
 27221              		.cfi_def_cfa_register 7
4299:..\src/command_processing.c ****     
4300:..\src/command_processing.c **** #ifdef MASTER_FW
4301:..\src/command_processing.c ****     
4302:..\src/command_processing.c ****     uint8 packet_data[10];
4303:..\src/command_processing.c ****     uint8 packet_lenght;
4304:..\src/command_processing.c ****     
4305:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4306:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4307:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4308:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4309:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4310:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4311:..\src/command_processing.c ****         master_mode = 0;
4312:..\src/command_processing.c ****         return;
4313:..\src/command_processing.c ****     }
4314:..\src/command_processing.c ****    
4315:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4316:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4317:..\src/command_processing.c **** 
4318:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4319:..\src/command_processing.c ****     packet_lenght = 3;
4320:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4321:..\src/command_processing.c ****     
4322:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4323:..\src/command_processing.c ****     
4324:..\src/command_processing.c **** #endif    
4325:..\src/command_processing.c **** }
 27222              		.loc 1 4325 0
 27223 0004 00BF     		nop
 27224 0006 BD46     		mov	sp, r7
 27225              		.cfi_def_cfa_register 13
 27226              		@ sp needed
 27227 0008 80BC     		pop	{r7}
 27228              		.cfi_restore 7
 27229              		.cfi_def_cfa_offset 0
 27230 000a 7047     		bx	lr
 27231              		.cfi_endproc
 27232              	.LFE118:
 27233              		.size	deactivate_slaves, .-deactivate_slaves
 27234              		.bss
 27235              		.align	1
 27236              	i.11227:
 27237 0000 0000     		.space	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 599


 27238 0002 0000     		.align	2
 27239              	last_aux_int16.11358:
 27240 0004 00000000 		.space	4
 27241              	fsm_state.11505:
 27242 0008 00       		.space	1
 27243 0009 000000   		.align	2
 27244              	cnt.11506:
 27245 000c 00000000 		.space	4
 27246              		.text
 27247              	.Letext0:
 27248              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27249              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27250              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27251              		.file 6 "..\\src\\commands.h"
 27252              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27253              		.file 8 "..\\src\\globals.h"
 27254              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27255              		.section	.debug_info,"",%progbits
 27256              	.Ldebug_info0:
 27257 0000 2C250000 		.4byte	0x252c
 27258 0004 0400     		.2byte	0x4
 27259 0006 00000000 		.4byte	.Ldebug_abbrev0
 27260 000a 04       		.byte	0x4
 27261 000b 01       		.uleb128 0x1
 27262 000c 88090000 		.4byte	.LASF393
 27263 0010 0C       		.byte	0xc
 27264 0011 A3140000 		.4byte	.LASF394
 27265 0015 D4040000 		.4byte	.LASF395
 27266 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27267 001d 00000000 		.4byte	0
 27268 0021 00000000 		.4byte	.Ldebug_line0
 27269 0025 02       		.uleb128 0x2
 27270 0026 01       		.byte	0x1
 27271 0027 06       		.byte	0x6
 27272 0028 FC030000 		.4byte	.LASF0
 27273 002c 02       		.uleb128 0x2
 27274 002d 01       		.byte	0x1
 27275 002e 08       		.byte	0x8
 27276 002f 76040000 		.4byte	.LASF1
 27277 0033 02       		.uleb128 0x2
 27278 0034 02       		.byte	0x2
 27279 0035 05       		.byte	0x5
 27280 0036 22110000 		.4byte	.LASF2
 27281 003a 02       		.uleb128 0x2
 27282 003b 02       		.byte	0x2
 27283 003c 07       		.byte	0x7
 27284 003d 95130000 		.4byte	.LASF3
 27285 0041 03       		.uleb128 0x3
 27286 0042 61140000 		.4byte	.LASF5
 27287 0046 03       		.byte	0x3
 27288 0047 3F       		.byte	0x3f
 27289 0048 4C000000 		.4byte	0x4c
 27290 004c 02       		.uleb128 0x2
 27291 004d 04       		.byte	0x4
 27292 004e 05       		.byte	0x5
 27293 004f D9020000 		.4byte	.LASF4
 27294 0053 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 600


 27295 0054 530A0000 		.4byte	.LASF6
 27296 0058 03       		.byte	0x3
 27297 0059 41       		.byte	0x41
 27298 005a 5E000000 		.4byte	0x5e
 27299 005e 02       		.uleb128 0x2
 27300 005f 04       		.byte	0x4
 27301 0060 07       		.byte	0x7
 27302 0061 34080000 		.4byte	.LASF7
 27303 0065 02       		.uleb128 0x2
 27304 0066 08       		.byte	0x8
 27305 0067 05       		.byte	0x5
 27306 0068 5E0A0000 		.4byte	.LASF8
 27307 006c 02       		.uleb128 0x2
 27308 006d 08       		.byte	0x8
 27309 006e 07       		.byte	0x7
 27310 006f 3A0E0000 		.4byte	.LASF9
 27311 0073 04       		.uleb128 0x4
 27312 0074 04       		.byte	0x4
 27313 0075 05       		.byte	0x5
 27314 0076 696E7400 		.ascii	"int\000"
 27315 007a 02       		.uleb128 0x2
 27316 007b 04       		.byte	0x4
 27317 007c 07       		.byte	0x7
 27318 007d 6C0B0000 		.4byte	.LASF10
 27319 0081 03       		.uleb128 0x3
 27320 0082 B5000000 		.4byte	.LASF11
 27321 0086 04       		.byte	0x4
 27322 0087 2C       		.byte	0x2c
 27323 0088 41000000 		.4byte	0x41
 27324 008c 03       		.uleb128 0x3
 27325 008d 0D130000 		.4byte	.LASF12
 27326 0091 04       		.byte	0x4
 27327 0092 30       		.byte	0x30
 27328 0093 53000000 		.4byte	0x53
 27329 0097 05       		.uleb128 0x5
 27330 0098 04110000 		.4byte	.LASF13
 27331 009c 05       		.byte	0x5
 27332 009d E401     		.2byte	0x1e4
 27333 009f 2C000000 		.4byte	0x2c
 27334 00a3 05       		.uleb128 0x5
 27335 00a4 06150000 		.4byte	.LASF14
 27336 00a8 05       		.byte	0x5
 27337 00a9 E501     		.2byte	0x1e5
 27338 00ab 3A000000 		.4byte	0x3a
 27339 00af 05       		.uleb128 0x5
 27340 00b0 D6000000 		.4byte	.LASF15
 27341 00b4 05       		.byte	0x5
 27342 00b5 E601     		.2byte	0x1e6
 27343 00b7 5E000000 		.4byte	0x5e
 27344 00bb 05       		.uleb128 0x5
 27345 00bc DE010000 		.4byte	.LASF16
 27346 00c0 05       		.byte	0x5
 27347 00c1 E701     		.2byte	0x1e7
 27348 00c3 25000000 		.4byte	0x25
 27349 00c7 05       		.uleb128 0x5
 27350 00c8 6D120000 		.4byte	.LASF17
 27351 00cc 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 601


 27352 00cd E801     		.2byte	0x1e8
 27353 00cf 33000000 		.4byte	0x33
 27354 00d3 05       		.uleb128 0x5
 27355 00d4 EF130000 		.4byte	.LASF18
 27356 00d8 05       		.byte	0x5
 27357 00d9 E901     		.2byte	0x1e9
 27358 00db 4C000000 		.4byte	0x4c
 27359 00df 05       		.uleb128 0x5
 27360 00e0 60030000 		.4byte	.LASF19
 27361 00e4 05       		.byte	0x5
 27362 00e5 EA01     		.2byte	0x1ea
 27363 00e7 EB000000 		.4byte	0xeb
 27364 00eb 02       		.uleb128 0x2
 27365 00ec 04       		.byte	0x4
 27366 00ed 04       		.byte	0x4
 27367 00ee 2F0B0000 		.4byte	.LASF20
 27368 00f2 02       		.uleb128 0x2
 27369 00f3 08       		.byte	0x8
 27370 00f4 04       		.byte	0x4
 27371 00f5 B60A0000 		.4byte	.LASF21
 27372 00f9 02       		.uleb128 0x2
 27373 00fa 01       		.byte	0x1
 27374 00fb 08       		.byte	0x8
 27375 00fc 6A050000 		.4byte	.LASF22
 27376 0100 05       		.uleb128 0x5
 27377 0101 2F0F0000 		.4byte	.LASF23
 27378 0105 05       		.byte	0x5
 27379 0106 8E02     		.2byte	0x28e
 27380 0108 0C010000 		.4byte	0x10c
 27381 010c 06       		.uleb128 0x6
 27382 010d 97000000 		.4byte	0x97
 27383 0111 02       		.uleb128 0x2
 27384 0112 08       		.byte	0x8
 27385 0113 04       		.byte	0x4
 27386 0114 220D0000 		.4byte	.LASF24
 27387 0118 02       		.uleb128 0x2
 27388 0119 04       		.byte	0x4
 27389 011a 07       		.byte	0x7
 27390 011b 29000000 		.4byte	.LASF25
 27391 011f 07       		.uleb128 0x7
 27392 0120 04       		.byte	0x4
 27393 0121 F9000000 		.4byte	0xf9
 27394 0125 07       		.uleb128 0x7
 27395 0126 04       		.byte	0x4
 27396 0127 2B010000 		.4byte	0x12b
 27397 012b 08       		.uleb128 0x8
 27398 012c F9000000 		.4byte	0xf9
 27399 0130 09       		.uleb128 0x9
 27400 0131 F9000000 		.4byte	0xf9
 27401 0135 40010000 		.4byte	0x140
 27402 0139 0A       		.uleb128 0xa
 27403 013a 18010000 		.4byte	0x118
 27404 013e 19       		.byte	0x19
 27405 013f 00       		.byte	0
 27406 0140 09       		.uleb128 0x9
 27407 0141 F9000000 		.4byte	0xf9
 27408 0145 50010000 		.4byte	0x150
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 602


 27409 0149 0A       		.uleb128 0xa
 27410 014a 18010000 		.4byte	0x118
 27411 014e 07       		.byte	0x7
 27412 014f 00       		.byte	0
 27413 0150 0B       		.uleb128 0xb
 27414 0151 CC0B0000 		.4byte	.LASF57
 27415 0155 01       		.byte	0x1
 27416 0156 2C000000 		.4byte	0x2c
 27417 015a 06       		.byte	0x6
 27418 015b 42       		.byte	0x42
 27419 015c 1B020000 		.4byte	0x21b
 27420 0160 0C       		.uleb128 0xc
 27421 0161 20150000 		.4byte	.LASF26
 27422 0165 00       		.byte	0
 27423 0166 0C       		.uleb128 0xc
 27424 0167 B3110000 		.4byte	.LASF27
 27425 016b 01       		.byte	0x1
 27426 016c 0C       		.uleb128 0xc
 27427 016d 10080000 		.4byte	.LASF28
 27428 0171 03       		.byte	0x3
 27429 0172 0C       		.uleb128 0xc
 27430 0173 AE040000 		.4byte	.LASF29
 27431 0177 04       		.byte	0x4
 27432 0178 0C       		.uleb128 0xc
 27433 0179 680F0000 		.4byte	.LASF30
 27434 017d 05       		.byte	0x5
 27435 017e 0C       		.uleb128 0xc
 27436 017f 30090000 		.4byte	.LASF31
 27437 0183 06       		.byte	0x6
 27438 0184 0C       		.uleb128 0xc
 27439 0185 54080000 		.4byte	.LASF32
 27440 0189 09       		.byte	0x9
 27441 018a 0C       		.uleb128 0xc
 27442 018b 32000000 		.4byte	.LASF33
 27443 018f 0A       		.byte	0xa
 27444 0190 0C       		.uleb128 0xc
 27445 0191 4F120000 		.4byte	.LASF34
 27446 0195 0C       		.byte	0xc
 27447 0196 0C       		.uleb128 0xc
 27448 0197 860D0000 		.4byte	.LASF35
 27449 019b 0D       		.byte	0xd
 27450 019c 0C       		.uleb128 0xc
 27451 019d 78000000 		.4byte	.LASF36
 27452 01a1 80       		.byte	0x80
 27453 01a2 0C       		.uleb128 0xc
 27454 01a3 59050000 		.4byte	.LASF37
 27455 01a7 81       		.byte	0x81
 27456 01a8 0C       		.uleb128 0xc
 27457 01a9 7C060000 		.4byte	.LASF38
 27458 01ad 82       		.byte	0x82
 27459 01ae 0C       		.uleb128 0xc
 27460 01af 7D110000 		.4byte	.LASF39
 27461 01b3 83       		.byte	0x83
 27462 01b4 0C       		.uleb128 0xc
 27463 01b5 CD100000 		.4byte	.LASF40
 27464 01b9 84       		.byte	0x84
 27465 01ba 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 603


 27466 01bb 78030000 		.4byte	.LASF41
 27467 01bf 85       		.byte	0x85
 27468 01c0 0C       		.uleb128 0xc
 27469 01c1 72090000 		.4byte	.LASF42
 27470 01c5 86       		.byte	0x86
 27471 01c6 0C       		.uleb128 0xc
 27472 01c7 10090000 		.4byte	.LASF43
 27473 01cb 88       		.byte	0x88
 27474 01cc 0C       		.uleb128 0xc
 27475 01cd 30120000 		.4byte	.LASF44
 27476 01d1 89       		.byte	0x89
 27477 01d2 0C       		.uleb128 0xc
 27478 01d3 980E0000 		.4byte	.LASF45
 27479 01d7 8B       		.byte	0x8b
 27480 01d8 0C       		.uleb128 0xc
 27481 01d9 F30C0000 		.4byte	.LASF46
 27482 01dd 8C       		.byte	0x8c
 27483 01de 0C       		.uleb128 0xc
 27484 01df 2E0A0000 		.4byte	.LASF47
 27485 01e3 8E       		.byte	0x8e
 27486 01e4 0C       		.uleb128 0xc
 27487 01e5 D00E0000 		.4byte	.LASF48
 27488 01e9 90       		.byte	0x90
 27489 01ea 0C       		.uleb128 0xc
 27490 01eb 77020000 		.4byte	.LASF49
 27491 01ef 92       		.byte	0x92
 27492 01f0 0C       		.uleb128 0xc
 27493 01f1 6E130000 		.4byte	.LASF50
 27494 01f5 A1       		.byte	0xa1
 27495 01f6 0C       		.uleb128 0xc
 27496 01f7 86100000 		.4byte	.LASF51
 27497 01fb A2       		.byte	0xa2
 27498 01fc 0C       		.uleb128 0xc
 27499 01fd 2A0C0000 		.4byte	.LASF52
 27500 0201 A3       		.byte	0xa3
 27501 0202 0C       		.uleb128 0xc
 27502 0203 A2100000 		.4byte	.LASF53
 27503 0207 A4       		.byte	0xa4
 27504 0208 0C       		.uleb128 0xc
 27505 0209 A2110000 		.4byte	.LASF54
 27506 020d A5       		.byte	0xa5
 27507 020e 0C       		.uleb128 0xc
 27508 020f 3A100000 		.4byte	.LASF55
 27509 0213 A6       		.byte	0xa6
 27510 0214 0C       		.uleb128 0xc
 27511 0215 BD0A0000 		.4byte	.LASF56
 27512 0219 A7       		.byte	0xa7
 27513 021a 00       		.byte	0
 27514 021b 0B       		.uleb128 0xb
 27515 021c CD140000 		.4byte	.LASF58
 27516 0220 01       		.byte	0x1
 27517 0221 2C000000 		.4byte	0x2c
 27518 0225 06       		.byte	0x6
 27519 0226 8E       		.byte	0x8e
 27520 0227 5C020000 		.4byte	0x25c
 27521 022b 0C       		.uleb128 0xc
 27522 022c 18070000 		.4byte	.LASF59
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 604


 27523 0230 00       		.byte	0
 27524 0231 0C       		.uleb128 0xc
 27525 0232 0A0C0000 		.4byte	.LASF60
 27526 0236 01       		.byte	0x1
 27527 0237 0C       		.uleb128 0xc
 27528 0238 88020000 		.4byte	.LASF61
 27529 023c 02       		.byte	0x2
 27530 023d 0C       		.uleb128 0xc
 27531 023e C0010000 		.4byte	.LASF62
 27532 0242 03       		.byte	0x3
 27533 0243 0C       		.uleb128 0xc
 27534 0244 64010000 		.4byte	.LASF63
 27535 0248 04       		.byte	0x4
 27536 0249 0C       		.uleb128 0xc
 27537 024a 60000000 		.4byte	.LASF64
 27538 024e 05       		.byte	0x5
 27539 024f 0C       		.uleb128 0xc
 27540 0250 7C080000 		.4byte	.LASF65
 27541 0254 06       		.byte	0x6
 27542 0255 0C       		.uleb128 0xc
 27543 0256 67100000 		.4byte	.LASF66
 27544 025a 07       		.byte	0x7
 27545 025b 00       		.byte	0
 27546 025c 0B       		.uleb128 0xb
 27547 025d 6C0A0000 		.4byte	.LASF67
 27548 0261 01       		.byte	0x1
 27549 0262 2C000000 		.4byte	0x2c
 27550 0266 06       		.byte	0x6
 27551 0267 A2       		.byte	0xa2
 27552 0268 85020000 		.4byte	0x285
 27553 026c 0C       		.uleb128 0xc
 27554 026d 46140000 		.4byte	.LASF68
 27555 0271 00       		.byte	0
 27556 0272 0C       		.uleb128 0xc
 27557 0273 04090000 		.4byte	.LASF69
 27558 0277 01       		.byte	0x1
 27559 0278 0C       		.uleb128 0xc
 27560 0279 120D0000 		.4byte	.LASF70
 27561 027d 02       		.byte	0x2
 27562 027e 0C       		.uleb128 0xc
 27563 027f FB070000 		.4byte	.LASF71
 27564 0283 03       		.byte	0x3
 27565 0284 00       		.byte	0
 27566 0285 0B       		.uleb128 0xb
 27567 0286 3E040000 		.4byte	.LASF72
 27568 028a 01       		.byte	0x1
 27569 028b 2C000000 		.4byte	0x2c
 27570 028f 06       		.byte	0x6
 27571 0290 AC       		.byte	0xac
 27572 0291 A2020000 		.4byte	0x2a2
 27573 0295 0C       		.uleb128 0xc
 27574 0296 5D100000 		.4byte	.LASF73
 27575 029a 00       		.byte	0
 27576 029b 0C       		.uleb128 0xc
 27577 029c 980A0000 		.4byte	.LASF74
 27578 02a0 01       		.byte	0x1
 27579 02a1 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 605


 27580 02a2 0B       		.uleb128 0xb
 27581 02a3 DF0D0000 		.4byte	.LASF75
 27582 02a7 01       		.byte	0x1
 27583 02a8 2C000000 		.4byte	0x2c
 27584 02ac 06       		.byte	0x6
 27585 02ad B1       		.byte	0xb1
 27586 02ae BF020000 		.4byte	0x2bf
 27587 02b2 0C       		.uleb128 0xc
 27588 02b3 FD060000 		.4byte	.LASF76
 27589 02b7 00       		.byte	0
 27590 02b8 0C       		.uleb128 0xc
 27591 02b9 C1080000 		.4byte	.LASF77
 27592 02bd 01       		.byte	0x1
 27593 02be 00       		.byte	0
 27594 02bf 0B       		.uleb128 0xb
 27595 02c0 62120000 		.4byte	.LASF78
 27596 02c4 01       		.byte	0x1
 27597 02c5 2C000000 		.4byte	0x2c
 27598 02c9 06       		.byte	0x6
 27599 02ca B9       		.byte	0xb9
 27600 02cb 0C030000 		.4byte	0x30c
 27601 02cf 0C       		.uleb128 0xc
 27602 02d0 C8080000 		.4byte	.LASF79
 27603 02d4 00       		.byte	0
 27604 02d5 0C       		.uleb128 0xc
 27605 02d6 DB140000 		.4byte	.LASF80
 27606 02da 01       		.byte	0x1
 27607 02db 0C       		.uleb128 0xc
 27608 02dc 7C0A0000 		.4byte	.LASF81
 27609 02e0 02       		.byte	0x2
 27610 02e1 0C       		.uleb128 0xc
 27611 02e2 CF0C0000 		.4byte	.LASF82
 27612 02e6 03       		.byte	0x3
 27613 02e7 0C       		.uleb128 0xc
 27614 02e8 D70B0000 		.4byte	.LASF83
 27615 02ec 04       		.byte	0x4
 27616 02ed 0C       		.uleb128 0xc
 27617 02ee 510E0000 		.4byte	.LASF84
 27618 02f2 05       		.byte	0x5
 27619 02f3 0C       		.uleb128 0xc
 27620 02f4 2E0D0000 		.4byte	.LASF85
 27621 02f8 06       		.byte	0x6
 27622 02f9 0C       		.uleb128 0xc
 27623 02fa 810C0000 		.4byte	.LASF86
 27624 02fe 07       		.byte	0x7
 27625 02ff 0C       		.uleb128 0xc
 27626 0300 BD060000 		.4byte	.LASF87
 27627 0304 08       		.byte	0x8
 27628 0305 0C       		.uleb128 0xc
 27629 0306 EF070000 		.4byte	.LASF88
 27630 030a 09       		.byte	0x9
 27631 030b 00       		.byte	0
 27632 030c 03       		.uleb128 0x3
 27633 030d 27140000 		.4byte	.LASF89
 27634 0311 07       		.byte	0x7
 27635 0312 7E       		.byte	0x7e
 27636 0313 17030000 		.4byte	0x317
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 606


 27637 0317 0D       		.uleb128 0xd
 27638 0318 27140000 		.4byte	.LASF89
 27639 031c 07       		.uleb128 0x7
 27640 031d 04       		.byte	0x4
 27641 031e 0C030000 		.4byte	0x30c
 27642 0322 0E       		.uleb128 0xe
 27643 0323 160A0000 		.4byte	.LASF92
 27644 0327 10       		.byte	0x10
 27645 0328 08       		.byte	0x8
 27646 0329 E2       		.byte	0xe2
 27647 032a 5F030000 		.4byte	0x35f
 27648 032e 0F       		.uleb128 0xf
 27649 032f 706F7300 		.ascii	"pos\000"
 27650 0333 08       		.byte	0x8
 27651 0334 E3       		.byte	0xe3
 27652 0335 D3000000 		.4byte	0xd3
 27653 0339 00       		.byte	0
 27654 033a 10       		.uleb128 0x10
 27655 033b F4080000 		.4byte	.LASF90
 27656 033f 08       		.byte	0x8
 27657 0340 E4       		.byte	0xe4
 27658 0341 D3000000 		.4byte	0xd3
 27659 0345 04       		.byte	0x4
 27660 0346 0F       		.uleb128 0xf
 27661 0347 70776D00 		.ascii	"pwm\000"
 27662 034b 08       		.byte	0x8
 27663 034c E5       		.byte	0xe5
 27664 034d D3000000 		.4byte	0xd3
 27665 0351 08       		.byte	0x8
 27666 0352 10       		.uleb128 0x10
 27667 0353 920E0000 		.4byte	.LASF91
 27668 0357 08       		.byte	0x8
 27669 0358 E6       		.byte	0xe6
 27670 0359 97000000 		.4byte	0x97
 27671 035d 0C       		.byte	0xc
 27672 035e 00       		.byte	0
 27673 035f 0E       		.uleb128 0xe
 27674 0360 32100000 		.4byte	.LASF93
 27675 0364 34       		.byte	0x34
 27676 0365 08       		.byte	0x8
 27677 0366 ED       		.byte	0xed
 27678 0367 C0030000 		.4byte	0x3c0
 27679 036b 0F       		.uleb128 0xf
 27680 036c 706F7300 		.ascii	"pos\000"
 27681 0370 08       		.byte	0x8
 27682 0371 EE       		.byte	0xee
 27683 0372 C0030000 		.4byte	0x3c0
 27684 0376 00       		.byte	0
 27685 0377 10       		.uleb128 0x10
 27686 0378 F4080000 		.4byte	.LASF90
 27687 037c 08       		.byte	0x8
 27688 037d EF       		.byte	0xef
 27689 037e D3000000 		.4byte	0xd3
 27690 0382 0C       		.byte	0xc
 27691 0383 10       		.uleb128 0x10
 27692 0384 AF120000 		.4byte	.LASF94
 27693 0388 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 607


 27694 0389 F0       		.byte	0xf0
 27695 038a D3000000 		.4byte	0xd3
 27696 038e 10       		.byte	0x10
 27697 038f 10       		.uleb128 0x10
 27698 0390 72080000 		.4byte	.LASF95
 27699 0394 08       		.byte	0x8
 27700 0395 F1       		.byte	0xf1
 27701 0396 D3000000 		.4byte	0xd3
 27702 039a 14       		.byte	0x14
 27703 039b 0F       		.uleb128 0xf
 27704 039c 726F7400 		.ascii	"rot\000"
 27705 03a0 08       		.byte	0x8
 27706 03a1 F2       		.byte	0xf2
 27707 03a2 D0030000 		.4byte	0x3d0
 27708 03a6 18       		.byte	0x18
 27709 03a7 0F       		.uleb128 0xf
 27710 03a8 76656C00 		.ascii	"vel\000"
 27711 03ac 08       		.byte	0x8
 27712 03ad F3       		.byte	0xf3
 27713 03ae C0030000 		.4byte	0x3c0
 27714 03b2 1C       		.byte	0x1c
 27715 03b3 0F       		.uleb128 0xf
 27716 03b4 61636300 		.ascii	"acc\000"
 27717 03b8 08       		.byte	0x8
 27718 03b9 F4       		.byte	0xf4
 27719 03ba C0030000 		.4byte	0x3c0
 27720 03be 28       		.byte	0x28
 27721 03bf 00       		.byte	0
 27722 03c0 09       		.uleb128 0x9
 27723 03c1 D3000000 		.4byte	0xd3
 27724 03c5 D0030000 		.4byte	0x3d0
 27725 03c9 0A       		.uleb128 0xa
 27726 03ca 18010000 		.4byte	0x118
 27727 03ce 02       		.byte	0x2
 27728 03cf 00       		.byte	0
 27729 03d0 09       		.uleb128 0x9
 27730 03d1 BB000000 		.4byte	0xbb
 27731 03d5 E0030000 		.4byte	0x3e0
 27732 03d9 0A       		.uleb128 0xa
 27733 03da 18010000 		.4byte	0x118
 27734 03de 02       		.byte	0x2
 27735 03df 00       		.byte	0
 27736 03e0 0E       		.uleb128 0xe
 27737 03e1 480B0000 		.4byte	.LASF96
 27738 03e5 28       		.byte	0x28
 27739 03e6 08       		.byte	0x8
 27740 03e7 F7       		.byte	0xf7
 27741 03e8 11040000 		.4byte	0x411
 27742 03ec 0F       		.uleb128 0xf
 27743 03ed 656D6700 		.ascii	"emg\000"
 27744 03f1 08       		.byte	0x8
 27745 03f2 F8       		.byte	0xf8
 27746 03f3 11040000 		.4byte	0x411
 27747 03f7 00       		.byte	0
 27748 03f8 10       		.uleb128 0x10
 27749 03f9 C70C0000 		.4byte	.LASF97
 27750 03fd 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 608


 27751 03fe F9       		.byte	0xf9
 27752 03ff 21040000 		.4byte	0x421
 27753 0403 08       		.byte	0x8
 27754 0404 10       		.uleb128 0x10
 27755 0405 5E110000 		.4byte	.LASF98
 27756 0409 08       		.byte	0x8
 27757 040a FA       		.byte	0xfa
 27758 040b 11040000 		.4byte	0x411
 27759 040f 20       		.byte	0x20
 27760 0410 00       		.byte	0
 27761 0411 09       		.uleb128 0x9
 27762 0412 D3000000 		.4byte	0xd3
 27763 0416 21040000 		.4byte	0x421
 27764 041a 0A       		.uleb128 0xa
 27765 041b 18010000 		.4byte	0x118
 27766 041f 01       		.byte	0x1
 27767 0420 00       		.byte	0
 27768 0421 09       		.uleb128 0x9
 27769 0422 D3000000 		.4byte	0xd3
 27770 0426 31040000 		.4byte	0x431
 27771 042a 0A       		.uleb128 0xa
 27772 042b 18010000 		.4byte	0x118
 27773 042f 05       		.byte	0x5
 27774 0430 00       		.byte	0
 27775 0431 0E       		.uleb128 0xe
 27776 0432 C8050000 		.4byte	.LASF99
 27777 0436 04       		.byte	0x4
 27778 0437 08       		.byte	0x8
 27779 0438 FD       		.byte	0xfd
 27780 0439 4A040000 		.4byte	0x44a
 27781 043d 10       		.uleb128 0x10
 27782 043e 50050000 		.4byte	.LASF100
 27783 0442 08       		.byte	0x8
 27784 0443 FE       		.byte	0xfe
 27785 0444 EB000000 		.4byte	0xeb
 27786 0448 00       		.byte	0
 27787 0449 00       		.byte	0
 27788 044a 11       		.uleb128 0x11
 27789 044b C2000000 		.4byte	.LASF101
 27790 044f 86       		.byte	0x86
 27791 0450 08       		.byte	0x8
 27792 0451 0501     		.2byte	0x105
 27793 0453 8C040000 		.4byte	0x48c
 27794 0457 12       		.uleb128 0x12
 27795 0458 8B060000 		.4byte	.LASF102
 27796 045c 08       		.byte	0x8
 27797 045d 0601     		.2byte	0x106
 27798 045f 8C040000 		.4byte	0x48c
 27799 0463 00       		.byte	0
 27800 0464 12       		.uleb128 0x12
 27801 0465 670E0000 		.4byte	.LASF103
 27802 0469 08       		.byte	0x8
 27803 046a 0701     		.2byte	0x107
 27804 046c C7000000 		.4byte	0xc7
 27805 0470 80       		.byte	0x80
 27806 0471 13       		.uleb128 0x13
 27807 0472 696E6400 		.ascii	"ind\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 609


 27808 0476 08       		.byte	0x8
 27809 0477 0801     		.2byte	0x108
 27810 0479 C7000000 		.4byte	0xc7
 27811 047d 82       		.byte	0x82
 27812 047e 12       		.uleb128 0x12
 27813 047f 59020000 		.4byte	.LASF104
 27814 0483 08       		.byte	0x8
 27815 0484 0901     		.2byte	0x109
 27816 0486 97000000 		.4byte	0x97
 27817 048a 84       		.byte	0x84
 27818 048b 00       		.byte	0
 27819 048c 09       		.uleb128 0x9
 27820 048d 97000000 		.4byte	0x97
 27821 0491 9C040000 		.4byte	0x49c
 27822 0495 0A       		.uleb128 0xa
 27823 0496 18010000 		.4byte	0x118
 27824 049a 7F       		.byte	0x7f
 27825 049b 00       		.byte	0
 27826 049c 11       		.uleb128 0x11
 27827 049d 4E030000 		.4byte	.LASF105
 27828 04a1 50       		.byte	0x50
 27829 04a2 08       		.byte	0x8
 27830 04a3 1201     		.2byte	0x112
 27831 04a5 05050000 		.4byte	0x505
 27832 04a9 12       		.uleb128 0x12
 27833 04aa 89030000 		.4byte	.LASF106
 27834 04ae 08       		.byte	0x8
 27835 04af 1301     		.2byte	0x113
 27836 04b1 05050000 		.4byte	0x505
 27837 04b5 00       		.byte	0
 27838 04b6 12       		.uleb128 0x12
 27839 04b7 1B020000 		.4byte	.LASF107
 27840 04bb 08       		.byte	0x8
 27841 04bc 1401     		.2byte	0x114
 27842 04be 15050000 		.4byte	0x515
 27843 04c2 08       		.byte	0x8
 27844 04c3 12       		.uleb128 0x12
 27845 04c4 050D0000 		.4byte	.LASF108
 27846 04c8 08       		.byte	0x8
 27847 04c9 1501     		.2byte	0x115
 27848 04cb 25050000 		.4byte	0x525
 27849 04cf 30       		.byte	0x30
 27850 04d0 12       		.uleb128 0x12
 27851 04d1 84010000 		.4byte	.LASF109
 27852 04d5 08       		.byte	0x8
 27853 04d6 1601     		.2byte	0x116
 27854 04d8 AF000000 		.4byte	0xaf
 27855 04dc 40       		.byte	0x40
 27856 04dd 12       		.uleb128 0x12
 27857 04de 7A140000 		.4byte	.LASF110
 27858 04e2 08       		.byte	0x8
 27859 04e3 1701     		.2byte	0x117
 27860 04e5 AF000000 		.4byte	0xaf
 27861 04e9 44       		.byte	0x44
 27862 04ea 12       		.uleb128 0x12
 27863 04eb 46080000 		.4byte	.LASF111
 27864 04ef 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 610


 27865 04f0 1801     		.2byte	0x118
 27866 04f2 AF000000 		.4byte	0xaf
 27867 04f6 48       		.byte	0x48
 27868 04f7 12       		.uleb128 0x12
 27869 04f8 90080000 		.4byte	.LASF112
 27870 04fc 08       		.byte	0x8
 27871 04fd 1901     		.2byte	0x119
 27872 04ff AF000000 		.4byte	0xaf
 27873 0503 4C       		.byte	0x4c
 27874 0504 00       		.byte	0
 27875 0505 09       		.uleb128 0x9
 27876 0506 AF000000 		.4byte	0xaf
 27877 050a 15050000 		.4byte	0x515
 27878 050e 0A       		.uleb128 0xa
 27879 050f 18010000 		.4byte	0x118
 27880 0513 01       		.byte	0x1
 27881 0514 00       		.byte	0
 27882 0515 09       		.uleb128 0x9
 27883 0516 AF000000 		.4byte	0xaf
 27884 051a 25050000 		.4byte	0x525
 27885 051e 0A       		.uleb128 0xa
 27886 051f 18010000 		.4byte	0x118
 27887 0523 09       		.byte	0x9
 27888 0524 00       		.byte	0
 27889 0525 09       		.uleb128 0x9
 27890 0526 AF000000 		.4byte	0xaf
 27891 052a 35050000 		.4byte	0x535
 27892 052e 0A       		.uleb128 0xa
 27893 052f 18010000 		.4byte	0x118
 27894 0533 03       		.byte	0x3
 27895 0534 00       		.byte	0
 27896 0535 11       		.uleb128 0x11
 27897 0536 32060000 		.4byte	.LASF113
 27898 053a 10       		.byte	0x10
 27899 053b 08       		.byte	0x8
 27900 053c 2001     		.2byte	0x120
 27901 053e C4050000 		.4byte	0x5c4
 27902 0542 13       		.uleb128 0x13
 27903 0543 696400   		.ascii	"id\000"
 27904 0546 08       		.byte	0x8
 27905 0547 2101     		.2byte	0x121
 27906 0549 97000000 		.4byte	0x97
 27907 054d 00       		.byte	0
 27908 054e 12       		.uleb128 0x12
 27909 054f 8C110000 		.4byte	.LASF114
 27910 0553 08       		.byte	0x8
 27911 0554 2201     		.2byte	0x122
 27912 0556 C4050000 		.4byte	0x5c4
 27913 055a 01       		.byte	0x1
 27914 055b 12       		.uleb128 0x12
 27915 055c FC110000 		.4byte	.LASF115
 27916 0560 08       		.byte	0x8
 27917 0561 2301     		.2byte	0x123
 27918 0563 C4050000 		.4byte	0x5c4
 27919 0567 04       		.byte	0x4
 27920 0568 12       		.uleb128 0x12
 27921 0569 A3040000 		.4byte	.LASF116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 611


 27922 056d 08       		.byte	0x8
 27923 056e 2401     		.2byte	0x124
 27924 0570 97000000 		.4byte	0x97
 27925 0574 07       		.byte	0x7
 27926 0575 12       		.uleb128 0x12
 27927 0576 FA020000 		.4byte	.LASF117
 27928 057a 08       		.byte	0x8
 27929 057b 2501     		.2byte	0x125
 27930 057d 97000000 		.4byte	0x97
 27931 0581 08       		.byte	0x8
 27932 0582 12       		.uleb128 0x12
 27933 0583 A4020000 		.4byte	.LASF118
 27934 0587 08       		.byte	0x8
 27935 0588 2601     		.2byte	0x126
 27936 058a 97000000 		.4byte	0x97
 27937 058e 09       		.byte	0x9
 27938 058f 12       		.uleb128 0x12
 27939 0590 41130000 		.4byte	.LASF119
 27940 0594 08       		.byte	0x8
 27941 0595 2701     		.2byte	0x127
 27942 0597 97000000 		.4byte	0x97
 27943 059b 0A       		.byte	0xa
 27944 059c 12       		.uleb128 0x12
 27945 059d 05130000 		.4byte	.LASF120
 27946 05a1 08       		.byte	0x8
 27947 05a2 2801     		.2byte	0x128
 27948 05a4 97000000 		.4byte	0x97
 27949 05a8 0B       		.byte	0xb
 27950 05a9 12       		.uleb128 0x12
 27951 05aa DC0F0000 		.4byte	.LASF121
 27952 05ae 08       		.byte	0x8
 27953 05af 2901     		.2byte	0x129
 27954 05b1 97000000 		.4byte	0x97
 27955 05b5 0C       		.byte	0xc
 27956 05b6 12       		.uleb128 0x12
 27957 05b7 2B030000 		.4byte	.LASF122
 27958 05bb 08       		.byte	0x8
 27959 05bc 2A01     		.2byte	0x12a
 27960 05be C4050000 		.4byte	0x5c4
 27961 05c2 0D       		.byte	0xd
 27962 05c3 00       		.byte	0
 27963 05c4 09       		.uleb128 0x9
 27964 05c5 97000000 		.4byte	0x97
 27965 05c9 D4050000 		.4byte	0x5d4
 27966 05cd 0A       		.uleb128 0xa
 27967 05ce 18010000 		.4byte	0x118
 27968 05d2 02       		.byte	0x2
 27969 05d3 00       		.byte	0
 27970 05d4 11       		.uleb128 0x11
 27971 05d5 12140000 		.4byte	.LASF123
 27972 05d9 70       		.byte	0x70
 27973 05da 08       		.byte	0x8
 27974 05db 3101     		.2byte	0x131
 27975 05dd 4E070000 		.4byte	0x74e
 27976 05e1 13       		.uleb128 0x13
 27977 05e2 6B5F7000 		.ascii	"k_p\000"
 27978 05e6 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 612


 27979 05e7 3201     		.2byte	0x132
 27980 05e9 D3000000 		.4byte	0xd3
 27981 05ed 00       		.byte	0
 27982 05ee 13       		.uleb128 0x13
 27983 05ef 6B5F6900 		.ascii	"k_i\000"
 27984 05f3 08       		.byte	0x8
 27985 05f4 3301     		.2byte	0x133
 27986 05f6 D3000000 		.4byte	0xd3
 27987 05fa 04       		.byte	0x4
 27988 05fb 13       		.uleb128 0x13
 27989 05fc 6B5F6400 		.ascii	"k_d\000"
 27990 0600 08       		.byte	0x8
 27991 0601 3401     		.2byte	0x134
 27992 0603 D3000000 		.4byte	0xd3
 27993 0607 08       		.byte	0x8
 27994 0608 12       		.uleb128 0x12
 27995 0609 E10E0000 		.4byte	.LASF124
 27996 060d 08       		.byte	0x8
 27997 060e 3501     		.2byte	0x135
 27998 0610 D3000000 		.4byte	0xd3
 27999 0614 0C       		.byte	0xc
 28000 0615 12       		.uleb128 0x12
 28001 0616 E8050000 		.4byte	.LASF125
 28002 061a 08       		.byte	0x8
 28003 061b 3601     		.2byte	0x136
 28004 061d D3000000 		.4byte	0xd3
 28005 0621 10       		.byte	0x10
 28006 0622 12       		.uleb128 0x12
 28007 0623 C2050000 		.4byte	.LASF126
 28008 0627 08       		.byte	0x8
 28009 0628 3701     		.2byte	0x137
 28010 062a D3000000 		.4byte	0xd3
 28011 062e 14       		.byte	0x14
 28012 062f 12       		.uleb128 0x12
 28013 0630 A8120000 		.4byte	.LASF127
 28014 0634 08       		.byte	0x8
 28015 0635 3801     		.2byte	0x138
 28016 0637 D3000000 		.4byte	0xd3
 28017 063b 18       		.byte	0x18
 28018 063c 12       		.uleb128 0x12
 28019 063d 75060000 		.4byte	.LASF128
 28020 0641 08       		.byte	0x8
 28021 0642 3901     		.2byte	0x139
 28022 0644 D3000000 		.4byte	0xd3
 28023 0648 1C       		.byte	0x1c
 28024 0649 12       		.uleb128 0x12
 28025 064a 4E110000 		.4byte	.LASF129
 28026 064e 08       		.byte	0x8
 28027 064f 3A01     		.2byte	0x13a
 28028 0651 D3000000 		.4byte	0xd3
 28029 0655 20       		.byte	0x20
 28030 0656 12       		.uleb128 0x12
 28031 0657 92060000 		.4byte	.LASF130
 28032 065b 08       		.byte	0x8
 28033 065c 3B01     		.2byte	0x13b
 28034 065e D3000000 		.4byte	0xd3
 28035 0662 24       		.byte	0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 613


 28036 0663 12       		.uleb128 0x12
 28037 0664 81070000 		.4byte	.LASF131
 28038 0668 08       		.byte	0x8
 28039 0669 3C01     		.2byte	0x13c
 28040 066b D3000000 		.4byte	0xd3
 28041 066f 28       		.byte	0x28
 28042 0670 12       		.uleb128 0x12
 28043 0671 29150000 		.4byte	.LASF132
 28044 0675 08       		.byte	0x8
 28045 0676 3D01     		.2byte	0x13d
 28046 0678 D3000000 		.4byte	0xd3
 28047 067c 2C       		.byte	0x2c
 28048 067d 12       		.uleb128 0x12
 28049 067e AC080000 		.4byte	.LASF133
 28050 0682 08       		.byte	0x8
 28051 0683 3E01     		.2byte	0x13e
 28052 0685 97000000 		.4byte	0x97
 28053 0689 30       		.byte	0x30
 28054 068a 12       		.uleb128 0x12
 28055 068b 91120000 		.4byte	.LASF134
 28056 068f 08       		.byte	0x8
 28057 0690 3F01     		.2byte	0x13f
 28058 0692 97000000 		.4byte	0x97
 28059 0696 31       		.byte	0x31
 28060 0697 12       		.uleb128 0x12
 28061 0698 010F0000 		.4byte	.LASF135
 28062 069c 08       		.byte	0x8
 28063 069d 4001     		.2byte	0x140
 28064 069f 97000000 		.4byte	0x97
 28065 06a3 32       		.byte	0x32
 28066 06a4 12       		.uleb128 0x12
 28067 06a5 2F140000 		.4byte	.LASF136
 28068 06a9 08       		.byte	0x8
 28069 06aa 4101     		.2byte	0x141
 28070 06ac 97000000 		.4byte	0x97
 28071 06b0 33       		.byte	0x33
 28072 06b1 12       		.uleb128 0x12
 28073 06b2 38010000 		.4byte	.LASF137
 28074 06b6 08       		.byte	0x8
 28075 06b7 4201     		.2byte	0x142
 28076 06b9 D3000000 		.4byte	0xd3
 28077 06bd 34       		.byte	0x34
 28078 06be 12       		.uleb128 0x12
 28079 06bf 07060000 		.4byte	.LASF138
 28080 06c3 08       		.byte	0x8
 28081 06c4 4301     		.2byte	0x143
 28082 06c6 D3000000 		.4byte	0xd3
 28083 06ca 38       		.byte	0x38
 28084 06cb 12       		.uleb128 0x12
 28085 06cc F20A0000 		.4byte	.LASF139
 28086 06d0 08       		.byte	0x8
 28087 06d1 4401     		.2byte	0x144
 28088 06d3 D3000000 		.4byte	0xd3
 28089 06d7 3C       		.byte	0x3c
 28090 06d8 12       		.uleb128 0x12
 28091 06d9 6F050000 		.4byte	.LASF140
 28092 06dd 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 614


 28093 06de 4501     		.2byte	0x145
 28094 06e0 D3000000 		.4byte	0xd3
 28095 06e4 40       		.byte	0x40
 28096 06e5 12       		.uleb128 0x12
 28097 06e6 78010000 		.4byte	.LASF141
 28098 06ea 08       		.byte	0x8
 28099 06eb 4601     		.2byte	0x146
 28100 06ed 4E070000 		.4byte	0x74e
 28101 06f1 44       		.byte	0x44
 28102 06f2 12       		.uleb128 0x12
 28103 06f3 BF140000 		.4byte	.LASF142
 28104 06f7 08       		.byte	0x8
 28105 06f8 4701     		.2byte	0x147
 28106 06fa C7000000 		.4byte	0xc7
 28107 06fe 5C       		.byte	0x5c
 28108 06ff 12       		.uleb128 0x12
 28109 0700 F9080000 		.4byte	.LASF143
 28110 0704 08       		.byte	0x8
 28111 0705 4801     		.2byte	0x148
 28112 0707 97000000 		.4byte	0x97
 28113 070b 5E       		.byte	0x5e
 28114 070c 12       		.uleb128 0x12
 28115 070d F70B0000 		.4byte	.LASF144
 28116 0711 08       		.byte	0x8
 28117 0712 4901     		.2byte	0x149
 28118 0714 97000000 		.4byte	0x97
 28119 0718 5F       		.byte	0x5f
 28120 0719 12       		.uleb128 0x12
 28121 071a C7040000 		.4byte	.LASF145
 28122 071e 08       		.byte	0x8
 28123 071f 4A01     		.2byte	0x14a
 28124 0721 97000000 		.4byte	0x97
 28125 0725 60       		.byte	0x60
 28126 0726 12       		.uleb128 0x12
 28127 0727 B1050000 		.4byte	.LASF146
 28128 072b 08       		.byte	0x8
 28129 072c 4B01     		.2byte	0x14b
 28130 072e 97000000 		.4byte	0x97
 28131 0732 61       		.byte	0x61
 28132 0733 12       		.uleb128 0x12
 28133 0734 84040000 		.4byte	.LASF147
 28134 0738 08       		.byte	0x8
 28135 0739 4C01     		.2byte	0x14c
 28136 073b 97000000 		.4byte	0x97
 28137 073f 62       		.byte	0x62
 28138 0740 12       		.uleb128 0x12
 28139 0741 2B030000 		.4byte	.LASF122
 28140 0745 08       		.byte	0x8
 28141 0746 4D01     		.2byte	0x14d
 28142 0748 5E070000 		.4byte	0x75e
 28143 074c 63       		.byte	0x63
 28144 074d 00       		.byte	0
 28145 074e 09       		.uleb128 0x9
 28146 074f EB000000 		.4byte	0xeb
 28147 0753 5E070000 		.4byte	0x75e
 28148 0757 0A       		.uleb128 0xa
 28149 0758 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 615


 28150 075c 05       		.byte	0x5
 28151 075d 00       		.byte	0
 28152 075e 09       		.uleb128 0x9
 28153 075f 97000000 		.4byte	0x97
 28154 0763 6E070000 		.4byte	0x76e
 28155 0767 0A       		.uleb128 0xa
 28156 0768 18010000 		.4byte	0x118
 28157 076c 0C       		.byte	0xc
 28158 076d 00       		.byte	0
 28159 076e 11       		.uleb128 0x11
 28160 076f A8130000 		.4byte	.LASF148
 28161 0773 30       		.byte	0x30
 28162 0774 08       		.byte	0x8
 28163 0775 5401     		.2byte	0x154
 28164 0777 F1070000 		.4byte	0x7f1
 28165 077b 12       		.uleb128 0x12
 28166 077c D40A0000 		.4byte	.LASF149
 28167 0780 08       		.byte	0x8
 28168 0781 5501     		.2byte	0x155
 28169 0783 F1070000 		.4byte	0x7f1
 28170 0787 00       		.byte	0
 28171 0788 13       		.uleb128 0x13
 28172 0789 72657300 		.ascii	"res\000"
 28173 078d 08       		.byte	0x8
 28174 078e 5601     		.2byte	0x156
 28175 0790 C4050000 		.4byte	0x5c4
 28176 0794 05       		.byte	0x5
 28177 0795 12       		.uleb128 0x12
 28178 0796 BB080000 		.4byte	.LASF150
 28179 079a 08       		.byte	0x8
 28180 079b 5701     		.2byte	0x157
 28181 079d C0030000 		.4byte	0x3c0
 28182 07a1 08       		.byte	0x8
 28183 07a2 12       		.uleb128 0x12
 28184 07a3 E1050000 		.4byte	.LASF151
 28185 07a7 08       		.byte	0x8
 28186 07a8 5801     		.2byte	0x158
 28187 07aa 01080000 		.4byte	0x801
 28188 07ae 14       		.byte	0x14
 28189 07af 12       		.uleb128 0x12
 28190 07b0 AE0D0000 		.4byte	.LASF152
 28191 07b4 08       		.byte	0x8
 28192 07b5 5901     		.2byte	0x159
 28193 07b7 97000000 		.4byte	0x97
 28194 07bb 20       		.byte	0x20
 28195 07bc 12       		.uleb128 0x12
 28196 07bd 5F020000 		.4byte	.LASF153
 28197 07c1 08       		.byte	0x8
 28198 07c2 5A01     		.2byte	0x15a
 28199 07c4 C4050000 		.4byte	0x5c4
 28200 07c8 21       		.byte	0x21
 28201 07c9 12       		.uleb128 0x12
 28202 07ca 610D0000 		.4byte	.LASF154
 28203 07ce 08       		.byte	0x8
 28204 07cf 5B01     		.2byte	0x15b
 28205 07d1 BB000000 		.4byte	0xbb
 28206 07d5 24       		.byte	0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 616


 28207 07d6 12       		.uleb128 0x12
 28208 07d7 03100000 		.4byte	.LASF155
 28209 07db 08       		.byte	0x8
 28210 07dc 5C01     		.2byte	0x15c
 28211 07de D0030000 		.4byte	0x3d0
 28212 07e2 25       		.byte	0x25
 28213 07e3 12       		.uleb128 0x12
 28214 07e4 2B030000 		.4byte	.LASF122
 28215 07e8 08       		.byte	0x8
 28216 07e9 5D01     		.2byte	0x15d
 28217 07eb 11080000 		.4byte	0x811
 28218 07ef 28       		.byte	0x28
 28219 07f0 00       		.byte	0
 28220 07f1 09       		.uleb128 0x9
 28221 07f2 97000000 		.4byte	0x97
 28222 07f6 01080000 		.4byte	0x801
 28223 07fa 0A       		.uleb128 0xa
 28224 07fb 18010000 		.4byte	0x118
 28225 07ff 04       		.byte	0x4
 28226 0800 00       		.byte	0
 28227 0801 09       		.uleb128 0x9
 28228 0802 DF000000 		.4byte	0xdf
 28229 0806 11080000 		.4byte	0x811
 28230 080a 0A       		.uleb128 0xa
 28231 080b 18010000 		.4byte	0x118
 28232 080f 02       		.byte	0x2
 28233 0810 00       		.byte	0
 28234 0811 09       		.uleb128 0x9
 28235 0812 97000000 		.4byte	0x97
 28236 0816 21080000 		.4byte	0x821
 28237 081a 0A       		.uleb128 0xa
 28238 081b 18010000 		.4byte	0x118
 28239 081f 07       		.byte	0x7
 28240 0820 00       		.byte	0
 28241 0821 11       		.uleb128 0x11
 28242 0822 14020000 		.4byte	.LASF156
 28243 0826 10       		.byte	0x10
 28244 0827 08       		.byte	0x8
 28245 0828 6401     		.2byte	0x164
 28246 082a 70080000 		.4byte	0x870
 28247 082e 12       		.uleb128 0x12
 28248 082f E50C0000 		.4byte	.LASF157
 28249 0833 08       		.byte	0x8
 28250 0834 6501     		.2byte	0x165
 28251 0836 70080000 		.4byte	0x870
 28252 083a 00       		.byte	0
 28253 083b 12       		.uleb128 0x12
 28254 083c 84140000 		.4byte	.LASF158
 28255 0840 08       		.byte	0x8
 28256 0841 6601     		.2byte	0x166
 28257 0843 05050000 		.4byte	0x505
 28258 0847 04       		.byte	0x4
 28259 0848 12       		.uleb128 0x12
 28260 0849 13060000 		.4byte	.LASF159
 28261 084d 08       		.byte	0x8
 28262 084e 6701     		.2byte	0x167
 28263 0850 80080000 		.4byte	0x880
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 617


 28264 0854 0C       		.byte	0xc
 28265 0855 12       		.uleb128 0x12
 28266 0856 1D100000 		.4byte	.LASF160
 28267 085a 08       		.byte	0x8
 28268 085b 6801     		.2byte	0x168
 28269 085d 97000000 		.4byte	0x97
 28270 0861 0E       		.byte	0xe
 28271 0862 12       		.uleb128 0x12
 28272 0863 86120000 		.4byte	.LASF161
 28273 0867 08       		.byte	0x8
 28274 0868 6901     		.2byte	0x169
 28275 086a 97000000 		.4byte	0x97
 28276 086e 0F       		.byte	0xf
 28277 086f 00       		.byte	0
 28278 0870 09       		.uleb128 0x9
 28279 0871 A3000000 		.4byte	0xa3
 28280 0875 80080000 		.4byte	0x880
 28281 0879 0A       		.uleb128 0xa
 28282 087a 18010000 		.4byte	0x118
 28283 087e 01       		.byte	0x1
 28284 087f 00       		.byte	0
 28285 0880 09       		.uleb128 0x9
 28286 0881 97000000 		.4byte	0x97
 28287 0885 90080000 		.4byte	0x890
 28288 0889 0A       		.uleb128 0xa
 28289 088a 18010000 		.4byte	0x118
 28290 088e 01       		.byte	0x1
 28291 088f 00       		.byte	0
 28292 0890 11       		.uleb128 0x11
 28293 0891 3F0C0000 		.4byte	.LASF162
 28294 0895 20       		.byte	0x20
 28295 0896 08       		.byte	0x8
 28296 0897 7001     		.2byte	0x170
 28297 0899 D2080000 		.4byte	0x8d2
 28298 089d 12       		.uleb128 0x12
 28299 089e BF020000 		.4byte	.LASF163
 28300 08a2 08       		.byte	0x8
 28301 08a3 7101     		.2byte	0x171
 28302 08a5 97000000 		.4byte	0x97
 28303 08a9 00       		.byte	0
 28304 08aa 12       		.uleb128 0x12
 28305 08ab D00D0000 		.4byte	.LASF164
 28306 08af 08       		.byte	0x8
 28307 08b0 7201     		.2byte	0x172
 28308 08b2 97000000 		.4byte	0x97
 28309 08b6 01       		.byte	0x1
 28310 08b7 12       		.uleb128 0x12
 28311 08b8 350B0000 		.4byte	.LASF165
 28312 08bc 08       		.byte	0x8
 28313 08bd 7301     		.2byte	0x173
 28314 08bf D2080000 		.4byte	0x8d2
 28315 08c3 02       		.byte	0x2
 28316 08c4 12       		.uleb128 0x12
 28317 08c5 2B030000 		.4byte	.LASF122
 28318 08c9 08       		.byte	0x8
 28319 08ca 7401     		.2byte	0x174
 28320 08cc F1070000 		.4byte	0x7f1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 618


 28321 08d0 1B       		.byte	0x1b
 28322 08d1 00       		.byte	0
 28323 08d2 09       		.uleb128 0x9
 28324 08d3 97000000 		.4byte	0x97
 28325 08d7 E8080000 		.4byte	0x8e8
 28326 08db 0A       		.uleb128 0xa
 28327 08dc 18010000 		.4byte	0x118
 28328 08e0 04       		.byte	0x4
 28329 08e1 0A       		.uleb128 0xa
 28330 08e2 18010000 		.4byte	0x118
 28331 08e6 04       		.byte	0x4
 28332 08e7 00       		.byte	0
 28333 08e8 11       		.uleb128 0x11
 28334 08e9 10100000 		.4byte	.LASF166
 28335 08ed 20       		.byte	0x20
 28336 08ee 08       		.byte	0x8
 28337 08ef 7B01     		.2byte	0x17b
 28338 08f1 37090000 		.4byte	0x937
 28339 08f5 12       		.uleb128 0x12
 28340 08f6 A40D0000 		.4byte	.LASF167
 28341 08fa 08       		.byte	0x8
 28342 08fb 7C01     		.2byte	0x17c
 28343 08fd 37090000 		.4byte	0x937
 28344 0901 00       		.byte	0
 28345 0902 12       		.uleb128 0x12
 28346 0903 73120000 		.4byte	.LASF168
 28347 0907 08       		.byte	0x8
 28348 0908 7D01     		.2byte	0x17d
 28349 090a 97000000 		.4byte	0x97
 28350 090e 06       		.byte	0x6
 28351 090f 12       		.uleb128 0x12
 28352 0910 C8120000 		.4byte	.LASF169
 28353 0914 08       		.byte	0x8
 28354 0915 7E01     		.2byte	0x17e
 28355 0917 97000000 		.4byte	0x97
 28356 091b 07       		.byte	0x7
 28357 091c 12       		.uleb128 0x12
 28358 091d 42060000 		.4byte	.LASF170
 28359 0921 08       		.byte	0x8
 28360 0922 7F01     		.2byte	0x17f
 28361 0924 47090000 		.4byte	0x947
 28362 0928 08       		.byte	0x8
 28363 0929 12       		.uleb128 0x12
 28364 092a 2B030000 		.4byte	.LASF122
 28365 092e 08       		.byte	0x8
 28366 092f 8001     		.2byte	0x180
 28367 0931 47090000 		.4byte	0x947
 28368 0935 14       		.byte	0x14
 28369 0936 00       		.byte	0
 28370 0937 09       		.uleb128 0x9
 28371 0938 97000000 		.4byte	0x97
 28372 093c 47090000 		.4byte	0x947
 28373 0940 0A       		.uleb128 0xa
 28374 0941 18010000 		.4byte	0x118
 28375 0945 05       		.byte	0x5
 28376 0946 00       		.byte	0
 28377 0947 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 619


 28378 0948 97000000 		.4byte	0x97
 28379 094c 57090000 		.4byte	0x957
 28380 0950 0A       		.uleb128 0xa
 28381 0951 18010000 		.4byte	0x118
 28382 0955 0B       		.byte	0xb
 28383 0956 00       		.byte	0
 28384 0957 11       		.uleb128 0x11
 28385 0958 E50F0000 		.4byte	.LASF171
 28386 095c 20       		.byte	0x20
 28387 095d 08       		.byte	0x8
 28388 095e 8701     		.2byte	0x187
 28389 0960 8C090000 		.4byte	0x98c
 28390 0964 12       		.uleb128 0x12
 28391 0965 08040000 		.4byte	.LASF172
 28392 0969 08       		.byte	0x8
 28393 096a 8801     		.2byte	0x188
 28394 096c 40010000 		.4byte	0x140
 28395 0970 00       		.byte	0
 28396 0971 12       		.uleb128 0x12
 28397 0972 09030000 		.4byte	.LASF173
 28398 0976 08       		.byte	0x8
 28399 0977 8901     		.2byte	0x189
 28400 0979 21080000 		.4byte	0x821
 28401 097d 08       		.byte	0x8
 28402 097e 12       		.uleb128 0x12
 28403 097f 2B030000 		.4byte	.LASF122
 28404 0983 08       		.byte	0x8
 28405 0984 8A01     		.2byte	0x18a
 28406 0986 11080000 		.4byte	0x811
 28407 098a 18       		.byte	0x18
 28408 098b 00       		.byte	0
 28409 098c 11       		.uleb128 0x11
 28410 098d 420A0000 		.4byte	.LASF174
 28411 0991 10       		.byte	0x10
 28412 0992 08       		.byte	0x8
 28413 0993 9101     		.2byte	0x191
 28414 0995 DB090000 		.4byte	0x9db
 28415 0999 12       		.uleb128 0x12
 28416 099a EB080000 		.4byte	.LASF175
 28417 099e 08       		.byte	0x8
 28418 099f 9201     		.2byte	0x192
 28419 09a1 D3000000 		.4byte	0xd3
 28420 09a5 00       		.byte	0
 28421 09a6 12       		.uleb128 0x12
 28422 09a7 0D150000 		.4byte	.LASF176
 28423 09ab 08       		.byte	0x8
 28424 09ac 9301     		.2byte	0x193
 28425 09ae D3000000 		.4byte	0xd3
 28426 09b2 04       		.byte	0x4
 28427 09b3 12       		.uleb128 0x12
 28428 09b4 1D060000 		.4byte	.LASF177
 28429 09b8 08       		.byte	0x8
 28430 09b9 9401     		.2byte	0x194
 28431 09bb D3000000 		.4byte	0xd3
 28432 09bf 08       		.byte	0x8
 28433 09c0 12       		.uleb128 0x12
 28434 09c1 47070000 		.4byte	.LASF178
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 620


 28435 09c5 08       		.byte	0x8
 28436 09c6 9501     		.2byte	0x195
 28437 09c8 97000000 		.4byte	0x97
 28438 09cc 0C       		.byte	0xc
 28439 09cd 12       		.uleb128 0x12
 28440 09ce 2B030000 		.4byte	.LASF122
 28441 09d2 08       		.byte	0x8
 28442 09d3 9601     		.2byte	0x196
 28443 09d5 C4050000 		.4byte	0x5c4
 28444 09d9 0D       		.byte	0xd
 28445 09da 00       		.byte	0
 28446 09db 11       		.uleb128 0x11
 28447 09dc 16110000 		.4byte	.LASF179
 28448 09e0 10       		.byte	0x10
 28449 09e1 08       		.byte	0x8
 28450 09e2 9D01     		.2byte	0x19d
 28451 09e4 1D0A0000 		.4byte	0xa1d
 28452 09e8 12       		.uleb128 0x12
 28453 09e9 5A070000 		.4byte	.LASF180
 28454 09ed 08       		.byte	0x8
 28455 09ee 9E01     		.2byte	0x19e
 28456 09f0 A3000000 		.4byte	0xa3
 28457 09f4 00       		.byte	0
 28458 09f5 12       		.uleb128 0x12
 28459 09f6 4A100000 		.4byte	.LASF181
 28460 09fa 08       		.byte	0x8
 28461 09fb 9F01     		.2byte	0x19f
 28462 09fd C7000000 		.4byte	0xc7
 28463 0a01 02       		.byte	0x2
 28464 0a02 12       		.uleb128 0x12
 28465 0a03 63080000 		.4byte	.LASF182
 28466 0a07 08       		.byte	0x8
 28467 0a08 A001     		.2byte	0x1a0
 28468 0a0a 70080000 		.4byte	0x870
 28469 0a0e 04       		.byte	0x4
 28470 0a0f 12       		.uleb128 0x12
 28471 0a10 2B030000 		.4byte	.LASF122
 28472 0a14 08       		.byte	0x8
 28473 0a15 A101     		.2byte	0x1a1
 28474 0a17 11080000 		.4byte	0x811
 28475 0a1b 08       		.byte	0x8
 28476 0a1c 00       		.byte	0
 28477 0a1d 11       		.uleb128 0x11
 28478 0a1e A6010000 		.4byte	.LASF183
 28479 0a22 10       		.byte	0x10
 28480 0a23 08       		.byte	0x8
 28481 0a24 A801     		.2byte	0x1a8
 28482 0a26 520A0000 		.4byte	0xa52
 28483 0a2a 12       		.uleb128 0x12
 28484 0a2b A20F0000 		.4byte	.LASF184
 28485 0a2f 08       		.byte	0x8
 28486 0a30 A901     		.2byte	0x1a9
 28487 0a32 97000000 		.4byte	0x97
 28488 0a36 00       		.byte	0
 28489 0a37 12       		.uleb128 0x12
 28490 0a38 FF0A0000 		.4byte	.LASF185
 28491 0a3c 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 621


 28492 0a3d AA01     		.2byte	0x1aa
 28493 0a3f 97000000 		.4byte	0x97
 28494 0a43 01       		.byte	0x1
 28495 0a44 12       		.uleb128 0x12
 28496 0a45 2B030000 		.4byte	.LASF122
 28497 0a49 08       		.byte	0x8
 28498 0a4a AB01     		.2byte	0x1ab
 28499 0a4c 520A0000 		.4byte	0xa52
 28500 0a50 02       		.byte	0x2
 28501 0a51 00       		.byte	0
 28502 0a52 09       		.uleb128 0x9
 28503 0a53 97000000 		.4byte	0x97
 28504 0a57 620A0000 		.4byte	0xa62
 28505 0a5b 0A       		.uleb128 0xa
 28506 0a5c 18010000 		.4byte	0x118
 28507 0a60 0D       		.byte	0xd
 28508 0a61 00       		.byte	0
 28509 0a62 11       		.uleb128 0x11
 28510 0a63 3A0D0000 		.4byte	.LASF186
 28511 0a67 10       		.byte	0x10
 28512 0a68 08       		.byte	0x8
 28513 0a69 B201     		.2byte	0x1b2
 28514 0a6b A40A0000 		.4byte	0xaa4
 28515 0a6f 12       		.uleb128 0x12
 28516 0a70 BE130000 		.4byte	.LASF187
 28517 0a74 08       		.byte	0x8
 28518 0a75 B301     		.2byte	0x1b3
 28519 0a77 D3000000 		.4byte	0xd3
 28520 0a7b 00       		.byte	0
 28521 0a7c 12       		.uleb128 0x12
 28522 0a7d 32070000 		.4byte	.LASF188
 28523 0a81 08       		.byte	0x8
 28524 0a82 B401     		.2byte	0x1b4
 28525 0a84 EB000000 		.4byte	0xeb
 28526 0a88 04       		.byte	0x4
 28527 0a89 12       		.uleb128 0x12
 28528 0a8a 340F0000 		.4byte	.LASF189
 28529 0a8e 08       		.byte	0x8
 28530 0a8f B501     		.2byte	0x1b5
 28531 0a91 EB000000 		.4byte	0xeb
 28532 0a95 08       		.byte	0x8
 28533 0a96 12       		.uleb128 0x12
 28534 0a97 2B030000 		.4byte	.LASF122
 28535 0a9b 08       		.byte	0x8
 28536 0a9c B601     		.2byte	0x1b6
 28537 0a9e A40A0000 		.4byte	0xaa4
 28538 0aa2 0C       		.byte	0xc
 28539 0aa3 00       		.byte	0
 28540 0aa4 09       		.uleb128 0x9
 28541 0aa5 97000000 		.4byte	0x97
 28542 0aa9 B40A0000 		.4byte	0xab4
 28543 0aad 0A       		.uleb128 0xa
 28544 0aae 18010000 		.4byte	0x118
 28545 0ab2 03       		.byte	0x3
 28546 0ab3 00       		.byte	0
 28547 0ab4 11       		.uleb128 0x11
 28548 0ab5 4E020000 		.4byte	.LASF190
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 622


 28549 0ab9 12       		.byte	0x12
 28550 0aba 08       		.byte	0x8
 28551 0abb BD01     		.2byte	0x1bd
 28552 0abd F60A0000 		.4byte	0xaf6
 28553 0ac1 12       		.uleb128 0x12
 28554 0ac2 E5140000 		.4byte	.LASF191
 28555 0ac6 08       		.byte	0x8
 28556 0ac7 BE01     		.2byte	0x1be
 28557 0ac9 97000000 		.4byte	0x97
 28558 0acd 00       		.byte	0
 28559 0ace 12       		.uleb128 0x12
 28560 0acf 51130000 		.4byte	.LASF192
 28561 0ad3 08       		.byte	0x8
 28562 0ad4 BF01     		.2byte	0x1bf
 28563 0ad6 70080000 		.4byte	0x870
 28564 0ada 02       		.byte	0x2
 28565 0adb 12       		.uleb128 0x12
 28566 0adc 44000000 		.4byte	.LASF193
 28567 0ae0 08       		.byte	0x8
 28568 0ae1 C001     		.2byte	0x1c0
 28569 0ae3 97000000 		.4byte	0x97
 28570 0ae7 06       		.byte	0x6
 28571 0ae8 12       		.uleb128 0x12
 28572 0ae9 2B030000 		.4byte	.LASF122
 28573 0aed 08       		.byte	0x8
 28574 0aee C101     		.2byte	0x1c1
 28575 0af0 F60A0000 		.4byte	0xaf6
 28576 0af4 07       		.byte	0x7
 28577 0af5 00       		.byte	0
 28578 0af6 09       		.uleb128 0x9
 28579 0af7 97000000 		.4byte	0x97
 28580 0afb 060B0000 		.4byte	0xb06
 28581 0aff 0A       		.uleb128 0xa
 28582 0b00 18010000 		.4byte	0x118
 28583 0b04 09       		.byte	0x9
 28584 0b05 00       		.byte	0
 28585 0b06 14       		.uleb128 0x14
 28586 0b07 D9130000 		.4byte	.LASF194
 28587 0b0b F402     		.2byte	0x2f4
 28588 0b0d 08       		.byte	0x8
 28589 0b0e CA01     		.2byte	0x1ca
 28590 0b10 EB0B0000 		.4byte	0xbeb
 28591 0b14 12       		.uleb128 0x12
 28592 0b15 E30B0000 		.4byte	.LASF195
 28593 0b19 08       		.byte	0x8
 28594 0b1a CC01     		.2byte	0x1cc
 28595 0b1c 97000000 		.4byte	0x97
 28596 0b20 00       		.byte	0
 28597 0b21 12       		.uleb128 0x12
 28598 0b22 2B030000 		.4byte	.LASF122
 28599 0b26 08       		.byte	0x8
 28600 0b27 CD01     		.2byte	0x1cd
 28601 0b29 EB0B0000 		.4byte	0xbeb
 28602 0b2d 01       		.byte	0x1
 28603 0b2e 13       		.uleb128 0x13
 28604 0b2f 636E7400 		.ascii	"cnt\000"
 28605 0b33 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 623


 28606 0b34 CE01     		.2byte	0x1ce
 28607 0b36 9C040000 		.4byte	0x49c
 28608 0b3a 10       		.byte	0x10
 28609 0b3b 12       		.uleb128 0x12
 28610 0b3c E2020000 		.4byte	.LASF196
 28611 0b40 08       		.byte	0x8
 28612 0b41 CF01     		.2byte	0x1cf
 28613 0b43 FB0B0000 		.4byte	0xbfb
 28614 0b47 60       		.byte	0x60
 28615 0b48 13       		.uleb128 0x13
 28616 0b49 64657600 		.ascii	"dev\000"
 28617 0b4d 08       		.byte	0x8
 28618 0b4e D001     		.2byte	0x1d0
 28619 0b50 35050000 		.4byte	0x535
 28620 0b54 A0       		.byte	0xa0
 28621 0b55 12       		.uleb128 0x12
 28622 0b56 67110000 		.4byte	.LASF197
 28623 0b5a 08       		.byte	0x8
 28624 0b5b D101     		.2byte	0x1d1
 28625 0b5d 0B0C0000 		.4byte	0xc0b
 28626 0b61 B0       		.byte	0xb0
 28627 0b62 15       		.uleb128 0x15
 28628 0b63 656E6300 		.ascii	"enc\000"
 28629 0b67 08       		.byte	0x8
 28630 0b68 D201     		.2byte	0x1d2
 28631 0b6a 1B0C0000 		.4byte	0xc1b
 28632 0b6e 9001     		.2byte	0x190
 28633 0b70 15       		.uleb128 0x15
 28634 0b71 656D6700 		.ascii	"emg\000"
 28635 0b75 08       		.byte	0x8
 28636 0b76 D301     		.2byte	0x1d3
 28637 0b78 21080000 		.4byte	0x821
 28638 0b7c F001     		.2byte	0x1f0
 28639 0b7e 15       		.uleb128 0x15
 28640 0b7f 696D7500 		.ascii	"imu\000"
 28641 0b83 08       		.byte	0x8
 28642 0b84 D401     		.2byte	0x1d4
 28643 0b86 90080000 		.4byte	0x890
 28644 0b8a 0002     		.2byte	0x200
 28645 0b8c 15       		.uleb128 0x15
 28646 0b8d 65787000 		.ascii	"exp\000"
 28647 0b91 08       		.byte	0x8
 28648 0b92 D501     		.2byte	0x1d5
 28649 0b94 E8080000 		.4byte	0x8e8
 28650 0b98 2002     		.2byte	0x220
 28651 0b9a 16       		.uleb128 0x16
 28652 0b9b 85000000 		.4byte	.LASF198
 28653 0b9f 08       		.byte	0x8
 28654 0ba0 D601     		.2byte	0x1d6
 28655 0ba2 2B0C0000 		.4byte	0xc2b
 28656 0ba6 4002     		.2byte	0x240
 28657 0ba8 15       		.uleb128 0x15
 28658 0ba9 534800   		.ascii	"SH\000"
 28659 0bac 08       		.byte	0x8
 28660 0bad D801     		.2byte	0x1d8
 28661 0baf 8C090000 		.4byte	0x98c
 28662 0bb3 A002     		.2byte	0x2a0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 624


 28663 0bb5 16       		.uleb128 0x16
 28664 0bb6 1A010000 		.4byte	.LASF199
 28665 0bba 08       		.byte	0x8
 28666 0bbb D901     		.2byte	0x1d9
 28667 0bbd DB090000 		.4byte	0x9db
 28668 0bc1 B002     		.2byte	0x2b0
 28669 0bc3 15       		.uleb128 0x15
 28670 0bc4 4D5300   		.ascii	"MS\000"
 28671 0bc7 08       		.byte	0x8
 28672 0bc8 DA01     		.2byte	0x1da
 28673 0bca 1D0A0000 		.4byte	0xa1d
 28674 0bce C002     		.2byte	0x2c0
 28675 0bd0 15       		.uleb128 0x15
 28676 0bd1 464200   		.ascii	"FB\000"
 28677 0bd4 08       		.byte	0x8
 28678 0bd5 DB01     		.2byte	0x1db
 28679 0bd7 620A0000 		.4byte	0xa62
 28680 0bdb D002     		.2byte	0x2d0
 28681 0bdd 15       		.uleb128 0x15
 28682 0bde 575200   		.ascii	"WR\000"
 28683 0be1 08       		.byte	0x8
 28684 0be2 DC01     		.2byte	0x1dc
 28685 0be4 B40A0000 		.4byte	0xab4
 28686 0be8 E002     		.2byte	0x2e0
 28687 0bea 00       		.byte	0
 28688 0beb 09       		.uleb128 0x9
 28689 0bec 97000000 		.4byte	0x97
 28690 0bf0 FB0B0000 		.4byte	0xbfb
 28691 0bf4 0A       		.uleb128 0xa
 28692 0bf5 18010000 		.4byte	0x118
 28693 0bf9 0E       		.byte	0xe
 28694 0bfa 00       		.byte	0
 28695 0bfb 09       		.uleb128 0x9
 28696 0bfc 97000000 		.4byte	0x97
 28697 0c00 0B0C0000 		.4byte	0xc0b
 28698 0c04 0A       		.uleb128 0xa
 28699 0c05 18010000 		.4byte	0x118
 28700 0c09 3F       		.byte	0x3f
 28701 0c0a 00       		.byte	0
 28702 0c0b 09       		.uleb128 0x9
 28703 0c0c D4050000 		.4byte	0x5d4
 28704 0c10 1B0C0000 		.4byte	0xc1b
 28705 0c14 0A       		.uleb128 0xa
 28706 0c15 18010000 		.4byte	0x118
 28707 0c19 01       		.byte	0x1
 28708 0c1a 00       		.byte	0
 28709 0c1b 09       		.uleb128 0x9
 28710 0c1c 6E070000 		.4byte	0x76e
 28711 0c20 2B0C0000 		.4byte	0xc2b
 28712 0c24 0A       		.uleb128 0xa
 28713 0c25 18010000 		.4byte	0x118
 28714 0c29 01       		.byte	0x1
 28715 0c2a 00       		.byte	0
 28716 0c2b 09       		.uleb128 0x9
 28717 0c2c 57090000 		.4byte	0x957
 28718 0c30 3B0C0000 		.4byte	0xc3b
 28719 0c34 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 625


 28720 0c35 18010000 		.4byte	0x118
 28721 0c39 02       		.byte	0x2
 28722 0c3a 00       		.byte	0
 28723 0c3b 11       		.uleb128 0x11
 28724 0c3c 7C0E0000 		.4byte	.LASF200
 28725 0c40 28       		.byte	0x28
 28726 0c41 08       		.byte	0x8
 28727 0c42 E701     		.2byte	0x1e7
 28728 0c44 970C0000 		.4byte	0xc97
 28729 0c48 12       		.uleb128 0x12
 28730 0c49 4A050000 		.4byte	.LASF201
 28731 0c4d 08       		.byte	0x8
 28732 0c4e E801     		.2byte	0x1e8
 28733 0c50 97000000 		.4byte	0x97
 28734 0c54 00       		.byte	0
 28735 0c55 12       		.uleb128 0x12
 28736 0c56 38030000 		.4byte	.LASF202
 28737 0c5a 08       		.byte	0x8
 28738 0c5b E901     		.2byte	0x1e9
 28739 0c5d 970C0000 		.4byte	0xc97
 28740 0c61 02       		.byte	0x2
 28741 0c62 12       		.uleb128 0x12
 28742 0c63 990D0000 		.4byte	.LASF203
 28743 0c67 08       		.byte	0x8
 28744 0c68 EA01     		.2byte	0x1ea
 28745 0c6a 970C0000 		.4byte	0xc97
 28746 0c6e 08       		.byte	0x8
 28747 0c6f 12       		.uleb128 0x12
 28748 0c70 880E0000 		.4byte	.LASF204
 28749 0c74 08       		.byte	0x8
 28750 0c75 EB01     		.2byte	0x1eb
 28751 0c77 970C0000 		.4byte	0xc97
 28752 0c7b 0E       		.byte	0xe
 28753 0c7c 12       		.uleb128 0x12
 28754 0c7d D2080000 		.4byte	.LASF205
 28755 0c81 08       		.byte	0x8
 28756 0c82 EC01     		.2byte	0x1ec
 28757 0c84 A70C0000 		.4byte	0xca7
 28758 0c88 14       		.byte	0x14
 28759 0c89 12       		.uleb128 0x12
 28760 0c8a 29020000 		.4byte	.LASF206
 28761 0c8e 08       		.byte	0x8
 28762 0c8f ED01     		.2byte	0x1ed
 28763 0c91 C7000000 		.4byte	0xc7
 28764 0c95 24       		.byte	0x24
 28765 0c96 00       		.byte	0
 28766 0c97 09       		.uleb128 0x9
 28767 0c98 C7000000 		.4byte	0xc7
 28768 0c9c A70C0000 		.4byte	0xca7
 28769 0ca0 0A       		.uleb128 0xa
 28770 0ca1 18010000 		.4byte	0x118
 28771 0ca5 02       		.byte	0x2
 28772 0ca6 00       		.byte	0
 28773 0ca7 09       		.uleb128 0x9
 28774 0ca8 EB000000 		.4byte	0xeb
 28775 0cac B70C0000 		.4byte	0xcb7
 28776 0cb0 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 626


 28777 0cb1 18010000 		.4byte	0x118
 28778 0cb5 03       		.byte	0x3
 28779 0cb6 00       		.byte	0
 28780 0cb7 11       		.uleb128 0x11
 28781 0cb8 19040000 		.4byte	.LASF207
 28782 0cbc 06       		.byte	0x6
 28783 0cbd 08       		.byte	0x8
 28784 0cbe FD01     		.2byte	0x1fd
 28785 0cc0 F90C0000 		.4byte	0xcf9
 28786 0cc4 12       		.uleb128 0x12
 28787 0cc5 2C080000 		.4byte	.LASF208
 28788 0cc9 08       		.byte	0x8
 28789 0cca FE01     		.2byte	0x1fe
 28790 0ccc 97000000 		.4byte	0x97
 28791 0cd0 00       		.byte	0
 28792 0cd1 12       		.uleb128 0x12
 28793 0cd2 32150000 		.4byte	.LASF209
 28794 0cd6 08       		.byte	0x8
 28795 0cd7 FF01     		.2byte	0x1ff
 28796 0cd9 97000000 		.4byte	0x97
 28797 0cdd 01       		.byte	0x1
 28798 0cde 12       		.uleb128 0x12
 28799 0cdf B0060000 		.4byte	.LASF210
 28800 0ce3 08       		.byte	0x8
 28801 0ce4 0002     		.2byte	0x200
 28802 0ce6 C7000000 		.4byte	0xc7
 28803 0cea 02       		.byte	0x2
 28804 0ceb 12       		.uleb128 0x12
 28805 0cec E60A0000 		.4byte	.LASF211
 28806 0cf0 08       		.byte	0x8
 28807 0cf1 0102     		.2byte	0x201
 28808 0cf3 C7000000 		.4byte	0xc7
 28809 0cf7 04       		.byte	0x4
 28810 0cf8 00       		.byte	0
 28811 0cf9 17       		.uleb128 0x17
 28812 0cfa BB0F0000 		.4byte	.LASF396
 28813 0cfe 02       		.byte	0x2
 28814 0cff 1403     		.2byte	0x314
 28815 0d01 8C000000 		.4byte	0x8c
 28816 0d05 03       		.byte	0x3
 28817 0d06 230D0000 		.4byte	0xd23
 28818 0d0a 18       		.uleb128 0x18
 28819 0d0b 44050000 		.4byte	.LASF292
 28820 0d0f 02       		.byte	0x2
 28821 0d10 1403     		.2byte	0x314
 28822 0d12 8C000000 		.4byte	0x8c
 28823 0d16 19       		.uleb128 0x19
 28824 0d17 34020000 		.4byte	.LASF397
 28825 0d1b 02       		.byte	0x2
 28826 0d1c 1603     		.2byte	0x316
 28827 0d1e 8C000000 		.4byte	0x8c
 28828 0d22 00       		.byte	0
 28829 0d23 1A       		.uleb128 0x1a
 28830 0d24 0A110000 		.4byte	.LASF212
 28831 0d28 01       		.byte	0x1
 28832 0d29 3D       		.byte	0x3d
 28833 0d2a 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 627


 28834 0d2e 00050000 		.4byte	.LFE64-.LFB64
 28835 0d32 01       		.uleb128 0x1
 28836 0d33 9C       		.byte	0x9c
 28837 0d34 FD0D0000 		.4byte	0xdfd
 28838 0d38 1B       		.uleb128 0x1b
 28839 0d39 B6060000 		.4byte	.LASF214
 28840 0d3d 01       		.byte	0x1
 28841 0d3e 3F       		.byte	0x3f
 28842 0d3f 97000000 		.4byte	0x97
 28843 0d43 02       		.uleb128 0x2
 28844 0d44 91       		.byte	0x91
 28845 0d45 77       		.sleb128 -9
 28846 0d46 1C       		.uleb128 0x1c
 28847 0d47 F90C0000 		.4byte	0xcf9
 28848 0d4b 44030000 		.4byte	.LBB10
 28849 0d4f 08000000 		.4byte	.LBE10-.LBB10
 28850 0d53 01       		.byte	0x1
 28851 0d54 9C       		.byte	0x9c
 28852 0d55 740D0000 		.4byte	0xd74
 28853 0d59 1D       		.uleb128 0x1d
 28854 0d5a 0A0D0000 		.4byte	0xd0a
 28855 0d5e 02       		.uleb128 0x2
 28856 0d5f 91       		.byte	0x91
 28857 0d60 64       		.sleb128 -28
 28858 0d61 1E       		.uleb128 0x1e
 28859 0d62 44030000 		.4byte	.LBB11
 28860 0d66 08000000 		.4byte	.LBE11-.LBB11
 28861 0d6a 1F       		.uleb128 0x1f
 28862 0d6b 160D0000 		.4byte	0xd16
 28863 0d6f 02       		.uleb128 0x2
 28864 0d70 91       		.byte	0x91
 28865 0d71 60       		.sleb128 -32
 28866 0d72 00       		.byte	0
 28867 0d73 00       		.byte	0
 28868 0d74 1C       		.uleb128 0x1c
 28869 0d75 F90C0000 		.4byte	0xcf9
 28870 0d79 62030000 		.4byte	.LBB12
 28871 0d7d 08000000 		.4byte	.LBE12-.LBB12
 28872 0d81 01       		.byte	0x1
 28873 0d82 A8       		.byte	0xa8
 28874 0d83 A20D0000 		.4byte	0xda2
 28875 0d87 1D       		.uleb128 0x1d
 28876 0d88 0A0D0000 		.4byte	0xd0a
 28877 0d8c 02       		.uleb128 0x2
 28878 0d8d 91       		.byte	0x91
 28879 0d8e 70       		.sleb128 -16
 28880 0d8f 1E       		.uleb128 0x1e
 28881 0d90 62030000 		.4byte	.LBB13
 28882 0d94 08000000 		.4byte	.LBE13-.LBB13
 28883 0d98 1F       		.uleb128 0x1f
 28884 0d99 160D0000 		.4byte	0xd16
 28885 0d9d 02       		.uleb128 0x2
 28886 0d9e 91       		.byte	0x91
 28887 0d9f 5C       		.sleb128 -36
 28888 0da0 00       		.byte	0
 28889 0da1 00       		.byte	0
 28890 0da2 20       		.uleb128 0x20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 628


 28891 0da3 F90C0000 		.4byte	0xcf9
 28892 0da7 A4040000 		.4byte	.LBB14
 28893 0dab 08000000 		.4byte	.LBE14-.LBB14
 28894 0daf 01       		.byte	0x1
 28895 0db0 0401     		.2byte	0x104
 28896 0db2 D10D0000 		.4byte	0xdd1
 28897 0db6 1D       		.uleb128 0x1d
 28898 0db7 0A0D0000 		.4byte	0xd0a
 28899 0dbb 02       		.uleb128 0x2
 28900 0dbc 91       		.byte	0x91
 28901 0dbd 6C       		.sleb128 -20
 28902 0dbe 1E       		.uleb128 0x1e
 28903 0dbf A4040000 		.4byte	.LBB15
 28904 0dc3 08000000 		.4byte	.LBE15-.LBB15
 28905 0dc7 1F       		.uleb128 0x1f
 28906 0dc8 160D0000 		.4byte	0xd16
 28907 0dcc 02       		.uleb128 0x2
 28908 0dcd 91       		.byte	0x91
 28909 0dce 58       		.sleb128 -40
 28910 0dcf 00       		.byte	0
 28911 0dd0 00       		.byte	0
 28912 0dd1 21       		.uleb128 0x21
 28913 0dd2 F90C0000 		.4byte	0xcf9
 28914 0dd6 D4040000 		.4byte	.LBB16
 28915 0dda 08000000 		.4byte	.LBE16-.LBB16
 28916 0dde 01       		.byte	0x1
 28917 0ddf 2201     		.2byte	0x122
 28918 0de1 1D       		.uleb128 0x1d
 28919 0de2 0A0D0000 		.4byte	0xd0a
 28920 0de6 02       		.uleb128 0x2
 28921 0de7 91       		.byte	0x91
 28922 0de8 68       		.sleb128 -24
 28923 0de9 1E       		.uleb128 0x1e
 28924 0dea D4040000 		.4byte	.LBB17
 28925 0dee 08000000 		.4byte	.LBE17-.LBB17
 28926 0df2 1F       		.uleb128 0x1f
 28927 0df3 160D0000 		.4byte	0xd16
 28928 0df7 02       		.uleb128 0x2
 28929 0df8 91       		.byte	0x91
 28930 0df9 54       		.sleb128 -44
 28931 0dfa 00       		.byte	0
 28932 0dfb 00       		.byte	0
 28933 0dfc 00       		.byte	0
 28934 0dfd 22       		.uleb128 0x22
 28935 0dfe 00000000 		.4byte	.LASF213
 28936 0e02 01       		.byte	0x1
 28937 0e03 3101     		.2byte	0x131
 28938 0e05 00000000 		.4byte	.LFB65
 28939 0e09 22000000 		.4byte	.LFE65-.LFB65
 28940 0e0d 01       		.uleb128 0x1
 28941 0e0e 9C       		.byte	0x9c
 28942 0e0f 240E0000 		.4byte	0xe24
 28943 0e13 23       		.uleb128 0x23
 28944 0e14 D3050000 		.4byte	.LASF215
 28945 0e18 01       		.byte	0x1
 28946 0e19 3201     		.2byte	0x132
 28947 0e1b 240E0000 		.4byte	0xe24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 629


 28948 0e1f 03       		.uleb128 0x3
 28949 0e20 91       		.byte	0x91
 28950 0e21 9C74     		.sleb128 -1508
 28951 0e23 00       		.byte	0
 28952 0e24 09       		.uleb128 0x9
 28953 0e25 F9000000 		.4byte	0xf9
 28954 0e29 350E0000 		.4byte	0xe35
 28955 0e2d 24       		.uleb128 0x24
 28956 0e2e 18010000 		.4byte	0x118
 28957 0e32 DB05     		.2byte	0x5db
 28958 0e34 00       		.byte	0
 28959 0e35 22       		.uleb128 0x22
 28960 0e36 0A140000 		.4byte	.LASF216
 28961 0e3a 01       		.byte	0x1
 28962 0e3b 3D01     		.2byte	0x13d
 28963 0e3d 00000000 		.4byte	.LFB66
 28964 0e41 2C010000 		.4byte	.LFE66-.LFB66
 28965 0e45 01       		.uleb128 0x1
 28966 0e46 9C       		.byte	0x9c
 28967 0e47 7E0E0000 		.4byte	0xe7e
 28968 0e4b 25       		.uleb128 0x25
 28969 0e4c 64130000 		.4byte	.LASF219
 28970 0e50 01       		.byte	0x1
 28971 0e51 3D01     		.2byte	0x13d
 28972 0e53 A3000000 		.4byte	0xa3
 28973 0e57 04       		.uleb128 0x4
 28974 0e58 91       		.byte	0x91
 28975 0e59 B6C47E   		.sleb128 -24010
 28976 0e5c 23       		.uleb128 0x23
 28977 0e5d D3050000 		.4byte	.LASF215
 28978 0e61 01       		.byte	0x1
 28979 0e62 3E01     		.2byte	0x13e
 28980 0e64 7E0E0000 		.4byte	0xe7e
 28981 0e68 03       		.uleb128 0x3
 28982 0e69 91       		.byte	0x91
 28983 0e6a D860     		.sleb128 -4008
 28984 0e6c 23       		.uleb128 0x23
 28985 0e6d A0080000 		.4byte	.LASF217
 28986 0e71 01       		.byte	0x1
 28987 0e72 3F01     		.2byte	0x13f
 28988 0e74 8F0E0000 		.4byte	0xe8f
 28989 0e78 04       		.uleb128 0x4
 28990 0e79 91       		.byte	0x91
 28991 0e7a B8C47E   		.sleb128 -24008
 28992 0e7d 00       		.byte	0
 28993 0e7e 09       		.uleb128 0x9
 28994 0e7f F9000000 		.4byte	0xf9
 28995 0e83 8F0E0000 		.4byte	0xe8f
 28996 0e87 24       		.uleb128 0x24
 28997 0e88 18010000 		.4byte	0x118
 28998 0e8c 9F0F     		.2byte	0xf9f
 28999 0e8e 00       		.byte	0
 29000 0e8f 09       		.uleb128 0x9
 29001 0e90 F9000000 		.4byte	0xf9
 29002 0e94 A00E0000 		.4byte	0xea0
 29003 0e98 24       		.uleb128 0x24
 29004 0e99 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 630


 29005 0e9d 1F4E     		.2byte	0x4e1f
 29006 0e9f 00       		.byte	0
 29007 0ea0 22       		.uleb128 0x22
 29008 0ea1 E3010000 		.4byte	.LASF218
 29009 0ea5 01       		.byte	0x1
 29010 0ea6 6601     		.2byte	0x166
 29011 0ea8 00000000 		.4byte	.LFB67
 29012 0eac 0C320000 		.4byte	.LFE67-.LFB67
 29013 0eb0 01       		.uleb128 0x1
 29014 0eb1 9C       		.byte	0x9c
 29015 0eb2 44100000 		.4byte	0x1044
 29016 0eb6 25       		.uleb128 0x25
 29017 0eb7 450D0000 		.4byte	.LASF220
 29018 0ebb 01       		.byte	0x1
 29019 0ebc 6601     		.2byte	0x166
 29020 0ebe 44100000 		.4byte	0x1044
 29021 0ec2 03       		.uleb128 0x3
 29022 0ec3 91       		.byte	0x91
 29023 0ec4 8C54     		.sleb128 -5620
 29024 0ec6 25       		.uleb128 0x25
 29025 0ec7 E3130000 		.4byte	.LASF221
 29026 0ecb 01       		.byte	0x1
 29027 0ecc 6601     		.2byte	0x166
 29028 0ece 4A100000 		.4byte	0x104a
 29029 0ed2 03       		.uleb128 0x3
 29030 0ed3 91       		.byte	0x91
 29031 0ed4 8854     		.sleb128 -5624
 29032 0ed6 25       		.uleb128 0x25
 29033 0ed7 44030000 		.4byte	.LASF222
 29034 0edb 01       		.byte	0x1
 29035 0edc 6701     		.2byte	0x167
 29036 0ede 4A100000 		.4byte	0x104a
 29037 0ee2 03       		.uleb128 0x3
 29038 0ee3 91       		.byte	0x91
 29039 0ee4 8454     		.sleb128 -5628
 29040 0ee6 25       		.uleb128 0x25
 29041 0ee7 A20C0000 		.4byte	.LASF223
 29042 0eeb 01       		.byte	0x1
 29043 0eec 6701     		.2byte	0x167
 29044 0eee 4A100000 		.4byte	0x104a
 29045 0ef2 03       		.uleb128 0x3
 29046 0ef3 91       		.byte	0x91
 29047 0ef4 8054     		.sleb128 -5632
 29048 0ef6 25       		.uleb128 0x25
 29049 0ef7 2E130000 		.4byte	.LASF224
 29050 0efb 01       		.byte	0x1
 29051 0efc 6801     		.2byte	0x168
 29052 0efe 4A100000 		.4byte	0x104a
 29053 0f02 02       		.uleb128 0x2
 29054 0f03 91       		.byte	0x91
 29055 0f04 00       		.sleb128 0
 29056 0f05 25       		.uleb128 0x25
 29057 0f06 21080000 		.4byte	.LASF225
 29058 0f0a 01       		.byte	0x1
 29059 0f0b 6801     		.2byte	0x168
 29060 0f0d 50100000 		.4byte	0x1050
 29061 0f11 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 631


 29062 0f12 91       		.byte	0x91
 29063 0f13 04       		.sleb128 4
 29064 0f14 25       		.uleb128 0x25
 29065 0f15 1E0B0000 		.4byte	.LASF226
 29066 0f19 01       		.byte	0x1
 29067 0f1a 6901     		.2byte	0x169
 29068 0f1c 4A100000 		.4byte	0x104a
 29069 0f20 02       		.uleb128 0x2
 29070 0f21 91       		.byte	0x91
 29071 0f22 08       		.sleb128 8
 29072 0f23 25       		.uleb128 0x25
 29073 0f24 B2080000 		.4byte	.LASF227
 29074 0f28 01       		.byte	0x1
 29075 0f29 6901     		.2byte	0x169
 29076 0f2b 50100000 		.4byte	0x1050
 29077 0f2f 02       		.uleb128 0x2
 29078 0f30 91       		.byte	0x91
 29079 0f31 0C       		.sleb128 12
 29080 0f32 23       		.uleb128 0x23
 29081 0f33 26060000 		.4byte	.LASF228
 29082 0f37 01       		.byte	0x1
 29083 0f38 6C01     		.2byte	0x16c
 29084 0f3a 56100000 		.4byte	0x1056
 29085 0f3e 03       		.uleb128 0x3
 29086 0f3f 91       		.byte	0x91
 29087 0f40 D854     		.sleb128 -5544
 29088 0f42 23       		.uleb128 0x23
 29089 0f43 920B0000 		.4byte	.LASF229
 29090 0f47 01       		.byte	0x1
 29091 0f48 6D01     		.2byte	0x16d
 29092 0f4a A3000000 		.4byte	0xa3
 29093 0f4e 02       		.uleb128 0x2
 29094 0f4f 91       		.byte	0x91
 29095 0f50 60       		.sleb128 -32
 29096 0f51 26       		.uleb128 0x26
 29097 0f52 6900     		.ascii	"i\000"
 29098 0f54 01       		.byte	0x1
 29099 0f55 7001     		.2byte	0x170
 29100 0f57 97000000 		.4byte	0x97
 29101 0f5b 02       		.uleb128 0x2
 29102 0f5c 91       		.byte	0x91
 29103 0f5d 67       		.sleb128 -25
 29104 0f5e 26       		.uleb128 0x26
 29105 0f5f 6A00     		.ascii	"j\000"
 29106 0f61 01       		.byte	0x1
 29107 0f62 7001     		.2byte	0x170
 29108 0f64 97000000 		.4byte	0x97
 29109 0f68 02       		.uleb128 0x2
 29110 0f69 91       		.byte	0x91
 29111 0f6a 66       		.sleb128 -26
 29112 0f6b 26       		.uleb128 0x26
 29113 0f6c 69647800 		.ascii	"idx\000"
 29114 0f70 01       		.byte	0x1
 29115 0f71 7101     		.2byte	0x171
 29116 0f73 97000000 		.4byte	0x97
 29117 0f77 02       		.uleb128 0x2
 29118 0f78 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 632


 29119 0f79 65       		.sleb128 -27
 29120 0f7a 23       		.uleb128 0x23
 29121 0f7b 55110000 		.4byte	.LASF230
 29122 0f7f 01       		.byte	0x1
 29123 0f80 7201     		.2byte	0x172
 29124 0f82 97000000 		.4byte	0x97
 29125 0f86 02       		.uleb128 0x2
 29126 0f87 91       		.byte	0x91
 29127 0f88 64       		.sleb128 -28
 29128 0f89 26       		.uleb128 0x26
 29129 0f8a 736F6400 		.ascii	"sod\000"
 29130 0f8e 01       		.byte	0x1
 29131 0f8f 7301     		.2byte	0x173
 29132 0f91 97000000 		.4byte	0x97
 29133 0f95 02       		.uleb128 0x2
 29134 0f96 91       		.byte	0x91
 29135 0f97 63       		.sleb128 -29
 29136 0f98 23       		.uleb128 0x23
 29137 0f99 730C0000 		.4byte	.LASF231
 29138 0f9d 01       		.byte	0x1
 29139 0f9e 7401     		.2byte	0x174
 29140 0fa0 97000000 		.4byte	0x97
 29141 0fa4 02       		.uleb128 0x2
 29142 0fa5 91       		.byte	0x91
 29143 0fa6 62       		.sleb128 -30
 29144 0fa7 23       		.uleb128 0x23
 29145 0fa8 18150000 		.4byte	.LASF232
 29146 0fac 01       		.byte	0x1
 29147 0fad 7501     		.2byte	0x175
 29148 0faf 67100000 		.4byte	0x1067
 29149 0fb3 03       		.uleb128 0x3
 29150 0fb4 91       		.byte	0x91
 29151 0fb5 A454     		.sleb128 -5596
 29152 0fb7 23       		.uleb128 0x23
 29153 0fb8 16130000 		.4byte	.LASF233
 29154 0fbc 01       		.byte	0x1
 29155 0fbd 7601     		.2byte	0x176
 29156 0fbf EB000000 		.4byte	0xeb
 29157 0fc3 03       		.uleb128 0x3
 29158 0fc4 91       		.byte	0x91
 29159 0fc5 A054     		.sleb128 -5600
 29160 0fc7 23       		.uleb128 0x23
 29161 0fc8 E6110000 		.4byte	.LASF234
 29162 0fcc 01       		.byte	0x1
 29163 0fcd 7701     		.2byte	0x177
 29164 0fcf C7000000 		.4byte	0xc7
 29165 0fd3 03       		.uleb128 0x3
 29166 0fd4 91       		.byte	0x91
 29167 0fd5 9E54     		.sleb128 -5602
 29168 0fd7 23       		.uleb128 0x23
 29169 0fd8 DA0C0000 		.4byte	.LASF235
 29170 0fdc 01       		.byte	0x1
 29171 0fdd 7801     		.2byte	0x178
 29172 0fdf A3000000 		.4byte	0xa3
 29173 0fe3 03       		.uleb128 0x3
 29174 0fe4 91       		.byte	0x91
 29175 0fe5 9C54     		.sleb128 -5604
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 633


 29176 0fe7 23       		.uleb128 0x23
 29177 0fe8 37130000 		.4byte	.LASF236
 29178 0fec 01       		.byte	0x1
 29179 0fed 7901     		.2byte	0x179
 29180 0fef D3000000 		.4byte	0xd3
 29181 0ff3 03       		.uleb128 0x3
 29182 0ff4 91       		.byte	0x91
 29183 0ff5 9854     		.sleb128 -5608
 29184 0ff7 23       		.uleb128 0x23
 29185 0ff8 5C0E0000 		.4byte	.LASF237
 29186 0ffc 01       		.byte	0x1
 29187 0ffd 7A01     		.2byte	0x17a
 29188 0fff AF000000 		.4byte	0xaf
 29189 1003 03       		.uleb128 0x3
 29190 1004 91       		.byte	0x91
 29191 1005 9454     		.sleb128 -5612
 29192 1007 23       		.uleb128 0x23
 29193 1008 F50D0000 		.4byte	.LASF238
 29194 100c 01       		.byte	0x1
 29195 100d 7C01     		.2byte	0x17c
 29196 100f 97000000 		.4byte	0x97
 29197 1013 02       		.uleb128 0x2
 29198 1014 91       		.byte	0x91
 29199 1015 5F       		.sleb128 -33
 29200 1016 23       		.uleb128 0x23
 29201 1017 44010000 		.4byte	.LASF239
 29202 101b 01       		.byte	0x1
 29203 101c 7D01     		.2byte	0x17d
 29204 101e 97000000 		.4byte	0x97
 29205 1022 02       		.uleb128 0x2
 29206 1023 91       		.byte	0x91
 29207 1024 5E       		.sleb128 -34
 29208 1025 23       		.uleb128 0x23
 29209 1026 540B0000 		.4byte	.LASF240
 29210 102a 01       		.byte	0x1
 29211 102b 7F01     		.2byte	0x17f
 29212 102d 4A100000 		.4byte	0x104a
 29213 1031 02       		.uleb128 0x2
 29214 1032 91       		.byte	0x91
 29215 1033 58       		.sleb128 -40
 29216 1034 23       		.uleb128 0x23
 29217 1035 D8010000 		.4byte	.LASF241
 29218 1039 01       		.byte	0x1
 29219 103a 8001     		.2byte	0x180
 29220 103c 4A100000 		.4byte	0x104a
 29221 1040 02       		.uleb128 0x2
 29222 1041 91       		.byte	0x91
 29223 1042 54       		.sleb128 -44
 29224 1043 00       		.byte	0
 29225 1044 07       		.uleb128 0x7
 29226 1045 04       		.byte	0x4
 29227 1046 4A100000 		.4byte	0x104a
 29228 104a 07       		.uleb128 0x7
 29229 104b 04       		.byte	0x4
 29230 104c 97000000 		.4byte	0x97
 29231 1050 07       		.uleb128 0x7
 29232 1051 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 634


 29233 1052 25010000 		.4byte	0x125
 29234 1056 09       		.uleb128 0x9
 29235 1057 97000000 		.4byte	0x97
 29236 105b 67100000 		.4byte	0x1067
 29237 105f 24       		.uleb128 0x24
 29238 1060 18010000 		.4byte	0x118
 29239 1064 7B15     		.2byte	0x157b
 29240 1066 00       		.byte	0
 29241 1067 09       		.uleb128 0x9
 29242 1068 F9000000 		.4byte	0xf9
 29243 106c 77100000 		.4byte	0x1077
 29244 1070 0A       		.uleb128 0xa
 29245 1071 18010000 		.4byte	0x118
 29246 1075 31       		.byte	0x31
 29247 1076 00       		.byte	0
 29248 1077 22       		.uleb128 0x22
 29249 1078 560F0000 		.4byte	.LASF242
 29250 107c 01       		.byte	0x1
 29251 107d 6903     		.2byte	0x369
 29252 107f 00000000 		.4byte	.LFB68
 29253 1083 24190000 		.4byte	.LFE68-.LFB68
 29254 1087 01       		.uleb128 0x1
 29255 1088 9C       		.byte	0x9c
 29256 1089 55120000 		.4byte	0x1255
 29257 108d 25       		.uleb128 0x25
 29258 108e 2C070000 		.4byte	.LASF243
 29259 1092 01       		.byte	0x1
 29260 1093 6903     		.2byte	0x369
 29261 1095 A3000000 		.4byte	0xa3
 29262 1099 03       		.uleb128 0x3
 29263 109a 91       		.byte	0x91
 29264 109b F674     		.sleb128 -1418
 29265 109d 26       		.uleb128 0x26
 29266 109e 6900     		.ascii	"i\000"
 29267 10a0 01       		.byte	0x1
 29268 10a1 6A03     		.2byte	0x36a
 29269 10a3 97000000 		.4byte	0x97
 29270 10a7 02       		.uleb128 0x2
 29271 10a8 91       		.byte	0x91
 29272 10a9 6F       		.sleb128 -17
 29273 10aa 26       		.uleb128 0x26
 29274 10ab 6A00     		.ascii	"j\000"
 29275 10ad 01       		.byte	0x1
 29276 10ae 6A03     		.2byte	0x36a
 29277 10b0 97000000 		.4byte	0x97
 29278 10b4 02       		.uleb128 0x2
 29279 10b5 91       		.byte	0x91
 29280 10b6 6E       		.sleb128 -18
 29281 10b7 26       		.uleb128 0x26
 29282 10b8 736F6400 		.ascii	"sod\000"
 29283 10bc 01       		.byte	0x1
 29284 10bd 6B03     		.2byte	0x36b
 29285 10bf 97000000 		.4byte	0x97
 29286 10c3 02       		.uleb128 0x2
 29287 10c4 91       		.byte	0x91
 29288 10c5 6D       		.sleb128 -19
 29289 10c6 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 635


 29290 10c7 3E0B0000 		.4byte	.LASF244
 29291 10cb 01       		.byte	0x1
 29292 10cc 6C03     		.2byte	0x36c
 29293 10ce 97000000 		.4byte	0x97
 29294 10d2 02       		.uleb128 0x2
 29295 10d3 91       		.byte	0x91
 29296 10d4 62       		.sleb128 -30
 29297 10d5 23       		.uleb128 0x23
 29298 10d6 E6110000 		.4byte	.LASF234
 29299 10da 01       		.byte	0x1
 29300 10db 6D03     		.2byte	0x36d
 29301 10dd C7000000 		.4byte	0xc7
 29302 10e1 02       		.uleb128 0x2
 29303 10e2 91       		.byte	0x91
 29304 10e3 60       		.sleb128 -32
 29305 10e4 23       		.uleb128 0x23
 29306 10e5 DA0C0000 		.4byte	.LASF235
 29307 10e9 01       		.byte	0x1
 29308 10ea 6E03     		.2byte	0x36e
 29309 10ec A3000000 		.4byte	0xa3
 29310 10f0 02       		.uleb128 0x2
 29311 10f1 91       		.byte	0x91
 29312 10f2 5E       		.sleb128 -34
 29313 10f3 23       		.uleb128 0x23
 29314 10f4 37130000 		.4byte	.LASF236
 29315 10f8 01       		.byte	0x1
 29316 10f9 6F03     		.2byte	0x36f
 29317 10fb D3000000 		.4byte	0xd3
 29318 10ff 02       		.uleb128 0x2
 29319 1100 91       		.byte	0x91
 29320 1101 58       		.sleb128 -40
 29321 1102 23       		.uleb128 0x23
 29322 1103 5C0E0000 		.4byte	.LASF237
 29323 1107 01       		.byte	0x1
 29324 1108 7003     		.2byte	0x370
 29325 110a AF000000 		.4byte	0xaf
 29326 110e 02       		.uleb128 0x2
 29327 110f 91       		.byte	0x91
 29328 1110 54       		.sleb128 -44
 29329 1111 23       		.uleb128 0x23
 29330 1112 16130000 		.4byte	.LASF233
 29331 1116 01       		.byte	0x1
 29332 1117 7103     		.2byte	0x371
 29333 1119 EB000000 		.4byte	0xeb
 29334 111d 02       		.uleb128 0x2
 29335 111e 91       		.byte	0x91
 29336 111f 50       		.sleb128 -48
 29337 1120 23       		.uleb128 0x23
 29338 1121 F50D0000 		.4byte	.LASF238
 29339 1125 01       		.byte	0x1
 29340 1126 7303     		.2byte	0x373
 29341 1128 97000000 		.4byte	0x97
 29342 112c 02       		.uleb128 0x2
 29343 112d 91       		.byte	0x91
 29344 112e 65       		.sleb128 -27
 29345 112f 23       		.uleb128 0x23
 29346 1130 44010000 		.4byte	.LASF239
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 636


 29347 1134 01       		.byte	0x1
 29348 1135 7403     		.2byte	0x374
 29349 1137 97000000 		.4byte	0x97
 29350 113b 02       		.uleb128 0x2
 29351 113c 91       		.byte	0x91
 29352 113d 64       		.sleb128 -28
 29353 113e 23       		.uleb128 0x23
 29354 113f 5A030000 		.4byte	.LASF245
 29355 1143 01       		.byte	0x1
 29356 1144 7703     		.2byte	0x377
 29357 1146 55120000 		.4byte	0x1255
 29358 114a 02       		.uleb128 0x2
 29359 114b 91       		.byte	0x91
 29360 114c 68       		.sleb128 -24
 29361 114d 23       		.uleb128 0x23
 29362 114e 450D0000 		.4byte	.LASF220
 29363 1152 01       		.byte	0x1
 29364 1153 7F03     		.2byte	0x37f
 29365 1155 5B120000 		.4byte	0x125b
 29366 1159 03       		.uleb128 0x3
 29367 115a 91       		.byte	0x91
 29368 115b 887D     		.sleb128 -376
 29369 115d 23       		.uleb128 0x23
 29370 115e E3130000 		.4byte	.LASF221
 29371 1162 01       		.byte	0x1
 29372 1163 DC03     		.2byte	0x3dc
 29373 1165 6B120000 		.4byte	0x126b
 29374 1169 03       		.uleb128 0x3
 29375 116a 91       		.byte	0x91
 29376 116b B47C     		.sleb128 -460
 29377 116d 23       		.uleb128 0x23
 29378 116e 44030000 		.4byte	.LASF222
 29379 1172 01       		.byte	0x1
 29380 1173 F703     		.2byte	0x3f7
 29381 1175 6B120000 		.4byte	0x126b
 29382 1179 03       		.uleb128 0x3
 29383 117a 91       		.byte	0x91
 29384 117b E07B     		.sleb128 -544
 29385 117d 23       		.uleb128 0x23
 29386 117e A20C0000 		.4byte	.LASF223
 29387 1182 01       		.byte	0x1
 29388 1183 1204     		.2byte	0x412
 29389 1185 6B120000 		.4byte	0x126b
 29390 1189 03       		.uleb128 0x3
 29391 118a 91       		.byte	0x91
 29392 118b 8C7B     		.sleb128 -628
 29393 118d 23       		.uleb128 0x23
 29394 118e 21080000 		.4byte	.LASF225
 29395 1192 01       		.byte	0x1
 29396 1193 2E04     		.2byte	0x42e
 29397 1195 7B120000 		.4byte	0x127b
 29398 1199 03       		.uleb128 0x3
 29399 119a 91       		.byte	0x91
 29400 119b C478     		.sleb128 -956
 29401 119d 23       		.uleb128 0x23
 29402 119e 6B140000 		.4byte	.LASF246
 29403 11a2 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 637


 29404 11a3 4A04     		.2byte	0x44a
 29405 11a5 8B120000 		.4byte	0x128b
 29406 11a9 03       		.uleb128 0x3
 29407 11aa 91       		.byte	0x91
 29408 11ab CC77     		.sleb128 -1076
 29409 11ad 23       		.uleb128 0x23
 29410 11ae 10000000 		.4byte	.LASF247
 29411 11b2 01       		.byte	0x1
 29412 11b3 4D04     		.2byte	0x44d
 29413 11b5 9B120000 		.4byte	0x129b
 29414 11b9 03       		.uleb128 0x3
 29415 11ba 91       		.byte	0x91
 29416 11bb 9477     		.sleb128 -1132
 29417 11bd 23       		.uleb128 0x23
 29418 11be B2080000 		.4byte	.LASF227
 29419 11c2 01       		.byte	0x1
 29420 11c3 5504     		.2byte	0x455
 29421 11c5 AB120000 		.4byte	0x12ab
 29422 11c9 03       		.uleb128 0x3
 29423 11ca 91       		.byte	0x91
 29424 11cb E476     		.sleb128 -1180
 29425 11cd 23       		.uleb128 0x23
 29426 11ce 2E130000 		.4byte	.LASF224
 29427 11d2 01       		.byte	0x1
 29428 11d3 6404     		.2byte	0x464
 29429 11d5 BB120000 		.4byte	0x12bb
 29430 11d9 03       		.uleb128 0x3
 29431 11da 91       		.byte	0x91
 29432 11db C476     		.sleb128 -1212
 29433 11dd 23       		.uleb128 0x23
 29434 11de 4B0D0000 		.4byte	.LASF248
 29435 11e2 01       		.byte	0x1
 29436 11e3 6504     		.2byte	0x465
 29437 11e5 CB120000 		.4byte	0x12cb
 29438 11e9 03       		.uleb128 0x3
 29439 11ea 91       		.byte	0x91
 29440 11eb B876     		.sleb128 -1224
 29441 11ed 23       		.uleb128 0x23
 29442 11ee 8C0C0000 		.4byte	.LASF249
 29443 11f2 01       		.byte	0x1
 29444 11f3 6604     		.2byte	0x466
 29445 11f5 DB120000 		.4byte	0x12db
 29446 11f9 03       		.uleb128 0x3
 29447 11fa 91       		.byte	0x91
 29448 11fb A476     		.sleb128 -1244
 29449 11fd 23       		.uleb128 0x23
 29450 11fe 6E0E0000 		.4byte	.LASF250
 29451 1202 01       		.byte	0x1
 29452 1203 6704     		.2byte	0x467
 29453 1205 97000000 		.4byte	0x97
 29454 1209 02       		.uleb128 0x2
 29455 120a 91       		.byte	0x91
 29456 120b 63       		.sleb128 -29
 29457 120c 23       		.uleb128 0x23
 29458 120d 1E0B0000 		.4byte	.LASF226
 29459 1211 01       		.byte	0x1
 29460 1212 7004     		.2byte	0x470
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 638


 29461 1214 6B120000 		.4byte	0x126b
 29462 1218 03       		.uleb128 0x3
 29463 1219 91       		.byte	0x91
 29464 121a D075     		.sleb128 -1328
 29465 121c 23       		.uleb128 0x23
 29466 121d 92140000 		.4byte	.LASF251
 29467 1221 01       		.byte	0x1
 29468 1222 7B04     		.2byte	0x47b
 29469 1224 6B120000 		.4byte	0x126b
 29470 1228 03       		.uleb128 0x3
 29471 1229 91       		.byte	0x91
 29472 122a FC74     		.sleb128 -1412
 29473 122c 1E       		.uleb128 0x1e
 29474 122d 8E180000 		.4byte	.LBB18
 29475 1231 86000000 		.4byte	.LBE18-.LBB18
 29476 1235 26       		.uleb128 0x26
 29477 1236 69647800 		.ascii	"idx\000"
 29478 123a 01       		.byte	0x1
 29479 123b E404     		.2byte	0x4e4
 29480 123d 97000000 		.4byte	0x97
 29481 1241 02       		.uleb128 0x2
 29482 1242 91       		.byte	0x91
 29483 1243 67       		.sleb128 -25
 29484 1244 23       		.uleb128 0x23
 29485 1245 8A050000 		.4byte	.LASF252
 29486 1249 01       		.byte	0x1
 29487 124a E404     		.2byte	0x4e4
 29488 124c 97000000 		.4byte	0x97
 29489 1250 02       		.uleb128 0x2
 29490 1251 91       		.byte	0x91
 29491 1252 66       		.sleb128 -26
 29492 1253 00       		.byte	0
 29493 1254 00       		.byte	0
 29494 1255 07       		.uleb128 0x7
 29495 1256 04       		.byte	0x4
 29496 1257 060B0000 		.4byte	0xb06
 29497 125b 09       		.uleb128 0x9
 29498 125c 4A100000 		.4byte	0x104a
 29499 1260 6B120000 		.4byte	0x126b
 29500 1264 0A       		.uleb128 0xa
 29501 1265 18010000 		.4byte	0x118
 29502 1269 51       		.byte	0x51
 29503 126a 00       		.byte	0
 29504 126b 09       		.uleb128 0x9
 29505 126c 97000000 		.4byte	0x97
 29506 1270 7B120000 		.4byte	0x127b
 29507 1274 0A       		.uleb128 0xa
 29508 1275 18010000 		.4byte	0x118
 29509 1279 51       		.byte	0x51
 29510 127a 00       		.byte	0
 29511 127b 09       		.uleb128 0x9
 29512 127c 25010000 		.4byte	0x125
 29513 1280 8B120000 		.4byte	0x128b
 29514 1284 0A       		.uleb128 0xa
 29515 1285 18010000 		.4byte	0x118
 29516 1289 51       		.byte	0x51
 29517 128a 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 639


 29518 128b 09       		.uleb128 0x9
 29519 128c F9000000 		.4byte	0xf9
 29520 1290 9B120000 		.4byte	0x129b
 29521 1294 0A       		.uleb128 0xa
 29522 1295 18010000 		.4byte	0x118
 29523 1299 75       		.byte	0x75
 29524 129a 00       		.byte	0
 29525 129b 09       		.uleb128 0x9
 29526 129c F9000000 		.4byte	0xf9
 29527 12a0 AB120000 		.4byte	0x12ab
 29528 12a4 0A       		.uleb128 0xa
 29529 12a5 18010000 		.4byte	0x118
 29530 12a9 37       		.byte	0x37
 29531 12aa 00       		.byte	0
 29532 12ab 09       		.uleb128 0x9
 29533 12ac 25010000 		.4byte	0x125
 29534 12b0 BB120000 		.4byte	0x12bb
 29535 12b4 0A       		.uleb128 0xa
 29536 12b5 18010000 		.4byte	0x118
 29537 12b9 0B       		.byte	0xb
 29538 12ba 00       		.byte	0
 29539 12bb 09       		.uleb128 0x9
 29540 12bc 97000000 		.4byte	0x97
 29541 12c0 CB120000 		.4byte	0x12cb
 29542 12c4 0A       		.uleb128 0xa
 29543 12c5 18010000 		.4byte	0x118
 29544 12c9 1E       		.byte	0x1e
 29545 12ca 00       		.byte	0
 29546 12cb 09       		.uleb128 0x9
 29547 12cc 97000000 		.4byte	0x97
 29548 12d0 DB120000 		.4byte	0x12db
 29549 12d4 0A       		.uleb128 0xa
 29550 12d5 18010000 		.4byte	0x118
 29551 12d9 08       		.byte	0x8
 29552 12da 00       		.byte	0
 29553 12db 09       		.uleb128 0x9
 29554 12dc 97000000 		.4byte	0x97
 29555 12e0 EB120000 		.4byte	0x12eb
 29556 12e4 0A       		.uleb128 0xa
 29557 12e5 18010000 		.4byte	0x118
 29558 12e9 11       		.byte	0x11
 29559 12ea 00       		.byte	0
 29560 12eb 22       		.uleb128 0x22
 29561 12ec D4030000 		.4byte	.LASF253
 29562 12f0 01       		.byte	0x1
 29563 12f1 F504     		.2byte	0x4f5
 29564 12f3 00000000 		.4byte	.LFB69
 29565 12f7 8C140000 		.4byte	.LFE69-.LFB69
 29566 12fb 01       		.uleb128 0x1
 29567 12fc 9C       		.byte	0x9c
 29568 12fd 8D130000 		.4byte	0x138d
 29569 1301 25       		.uleb128 0x25
 29570 1302 2C070000 		.4byte	.LASF243
 29571 1306 01       		.byte	0x1
 29572 1307 F504     		.2byte	0x4f5
 29573 1309 A3000000 		.4byte	0xa3
 29574 130d 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 640


 29575 130e 91       		.byte	0x91
 29576 130f 56       		.sleb128 -42
 29577 1310 26       		.uleb128 0x26
 29578 1311 6900     		.ascii	"i\000"
 29579 1313 01       		.byte	0x1
 29580 1314 F704     		.2byte	0x4f7
 29581 1316 97000000 		.4byte	0x97
 29582 131a 02       		.uleb128 0x2
 29583 131b 91       		.byte	0x91
 29584 131c 67       		.sleb128 -25
 29585 131d 26       		.uleb128 0x26
 29586 131e 6A00     		.ascii	"j\000"
 29587 1320 01       		.byte	0x1
 29588 1321 F704     		.2byte	0x4f7
 29589 1323 97000000 		.4byte	0x97
 29590 1327 02       		.uleb128 0x2
 29591 1328 91       		.byte	0x91
 29592 1329 66       		.sleb128 -26
 29593 132a 23       		.uleb128 0x23
 29594 132b BD0C0000 		.4byte	.LASF254
 29595 132f 01       		.byte	0x1
 29596 1330 F804     		.2byte	0x4f8
 29597 1332 97000000 		.4byte	0x97
 29598 1336 02       		.uleb128 0x2
 29599 1337 91       		.byte	0x91
 29600 1338 62       		.sleb128 -30
 29601 1339 23       		.uleb128 0x23
 29602 133a 16130000 		.4byte	.LASF233
 29603 133e 01       		.byte	0x1
 29604 133f F904     		.2byte	0x4f9
 29605 1341 EB000000 		.4byte	0xeb
 29606 1345 02       		.uleb128 0x2
 29607 1346 91       		.byte	0x91
 29608 1347 5C       		.sleb128 -36
 29609 1348 23       		.uleb128 0x23
 29610 1349 AD030000 		.4byte	.LASF255
 29611 134d 01       		.byte	0x1
 29612 134e F904     		.2byte	0x4f9
 29613 1350 EB000000 		.4byte	0xeb
 29614 1354 02       		.uleb128 0x2
 29615 1355 91       		.byte	0x91
 29616 1356 58       		.sleb128 -40
 29617 1357 23       		.uleb128 0x23
 29618 1358 F50D0000 		.4byte	.LASF238
 29619 135c 01       		.byte	0x1
 29620 135d FB04     		.2byte	0x4fb
 29621 135f 97000000 		.4byte	0x97
 29622 1363 02       		.uleb128 0x2
 29623 1364 91       		.byte	0x91
 29624 1365 64       		.sleb128 -28
 29625 1366 23       		.uleb128 0x23
 29626 1367 44010000 		.4byte	.LASF239
 29627 136b 01       		.byte	0x1
 29628 136c FC04     		.2byte	0x4fc
 29629 136e 97000000 		.4byte	0x97
 29630 1372 02       		.uleb128 0x2
 29631 1373 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 641


 29632 1374 63       		.sleb128 -29
 29633 1375 1E       		.uleb128 0x1e
 29634 1376 000B0000 		.4byte	.LBB19
 29635 137a 26000000 		.4byte	.LBE19-.LBB19
 29636 137e 26       		.uleb128 0x26
 29637 137f 6900     		.ascii	"i\000"
 29638 1381 01       		.byte	0x1
 29639 1382 A305     		.2byte	0x5a3
 29640 1384 97000000 		.4byte	0x97
 29641 1388 02       		.uleb128 0x2
 29642 1389 91       		.byte	0x91
 29643 138a 65       		.sleb128 -27
 29644 138b 00       		.byte	0
 29645 138c 00       		.byte	0
 29646 138d 22       		.uleb128 0x22
 29647 138e 3D090000 		.4byte	.LASF256
 29648 1392 01       		.byte	0x1
 29649 1393 4306     		.2byte	0x643
 29650 1395 00000000 		.4byte	.LFB70
 29651 1399 F40D0000 		.4byte	.LFE70-.LFB70
 29652 139d 01       		.uleb128 0x1
 29653 139e 9C       		.byte	0x9c
 29654 139f 1C150000 		.4byte	0x151c
 29655 13a3 25       		.uleb128 0x25
 29656 13a4 2C070000 		.4byte	.LASF243
 29657 13a8 01       		.byte	0x1
 29658 13a9 4306     		.2byte	0x643
 29659 13ab A3000000 		.4byte	0xa3
 29660 13af 03       		.uleb128 0x3
 29661 13b0 91       		.byte	0x91
 29662 13b1 CE72     		.sleb128 -1714
 29663 13b3 23       		.uleb128 0x23
 29664 13b4 26060000 		.4byte	.LASF228
 29665 13b8 01       		.byte	0x1
 29666 13b9 4606     		.2byte	0x646
 29667 13bb 1C150000 		.4byte	0x151c
 29668 13bf 03       		.uleb128 0x3
 29669 13c0 91       		.byte	0x91
 29670 13c1 DC74     		.sleb128 -1444
 29671 13c3 23       		.uleb128 0x23
 29672 13c4 D3110000 		.4byte	.LASF257
 29673 13c8 01       		.byte	0x1
 29674 13c9 4D06     		.2byte	0x64d
 29675 13cb A3000000 		.4byte	0xa3
 29676 13cf 02       		.uleb128 0x2
 29677 13d0 91       		.byte	0x91
 29678 13d1 62       		.sleb128 -30
 29679 13d2 23       		.uleb128 0x23
 29680 13d3 9E050000 		.4byte	.LASF258
 29681 13d7 01       		.byte	0x1
 29682 13d8 4E06     		.2byte	0x64e
 29683 13da A3000000 		.4byte	0xa3
 29684 13de 02       		.uleb128 0x2
 29685 13df 91       		.byte	0x91
 29686 13e0 6E       		.sleb128 -18
 29687 13e1 23       		.uleb128 0x23
 29688 13e2 5E090000 		.4byte	.LASF259
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 642


 29689 13e6 01       		.byte	0x1
 29690 13e7 4F06     		.2byte	0x64f
 29691 13e9 A3000000 		.4byte	0xa3
 29692 13ed 02       		.uleb128 0x2
 29693 13ee 91       		.byte	0x91
 29694 13ef 60       		.sleb128 -32
 29695 13f0 23       		.uleb128 0x23
 29696 13f1 DD080000 		.4byte	.LASF260
 29697 13f5 01       		.byte	0x1
 29698 13f6 5006     		.2byte	0x650
 29699 13f8 A3000000 		.4byte	0xa3
 29700 13fc 02       		.uleb128 0x2
 29701 13fd 91       		.byte	0x91
 29702 13fe 5E       		.sleb128 -34
 29703 13ff 26       		.uleb128 0x26
 29704 1400 6900     		.ascii	"i\000"
 29705 1402 01       		.byte	0x1
 29706 1403 5806     		.2byte	0x658
 29707 1405 A3000000 		.4byte	0xa3
 29708 1409 02       		.uleb128 0x2
 29709 140a 91       		.byte	0x91
 29710 140b 6C       		.sleb128 -20
 29711 140c 26       		.uleb128 0x26
 29712 140d 6A00     		.ascii	"j\000"
 29713 140f 01       		.byte	0x1
 29714 1410 5806     		.2byte	0x658
 29715 1412 A3000000 		.4byte	0xa3
 29716 1416 02       		.uleb128 0x2
 29717 1417 91       		.byte	0x91
 29718 1418 6A       		.sleb128 -22
 29719 1419 26       		.uleb128 0x26
 29720 141a 6B00     		.ascii	"k\000"
 29721 141c 01       		.byte	0x1
 29722 141d 5806     		.2byte	0x658
 29723 141f A3000000 		.4byte	0xa3
 29724 1423 02       		.uleb128 0x2
 29725 1424 91       		.byte	0x91
 29726 1425 68       		.sleb128 -24
 29727 1426 26       		.uleb128 0x26
 29728 1427 6800     		.ascii	"h\000"
 29729 1429 01       		.byte	0x1
 29730 142a 5806     		.2byte	0x658
 29731 142c A3000000 		.4byte	0xa3
 29732 1430 02       		.uleb128 0x2
 29733 1431 91       		.byte	0x91
 29734 1432 66       		.sleb128 -26
 29735 1433 23       		.uleb128 0x23
 29736 1434 93050000 		.4byte	.LASF261
 29737 1438 01       		.byte	0x1
 29738 1439 5906     		.2byte	0x659
 29739 143b A3000000 		.4byte	0xa3
 29740 143f 02       		.uleb128 0x2
 29741 1440 91       		.byte	0x91
 29742 1441 5C       		.sleb128 -36
 29743 1442 23       		.uleb128 0x23
 29744 1443 0A0E0000 		.4byte	.LASF262
 29745 1447 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 643


 29746 1448 5C06     		.2byte	0x65c
 29747 144a 30010000 		.4byte	0x130
 29748 144e 03       		.uleb128 0x3
 29749 144f 91       		.byte	0x91
 29750 1450 C074     		.sleb128 -1472
 29751 1452 23       		.uleb128 0x23
 29752 1453 9A110000 		.4byte	.LASF263
 29753 1457 01       		.byte	0x1
 29754 1458 5D06     		.2byte	0x65d
 29755 145a 2D150000 		.4byte	0x152d
 29756 145e 03       		.uleb128 0x3
 29757 145f 91       		.byte	0x91
 29758 1460 B474     		.sleb128 -1484
 29759 1462 23       		.uleb128 0x23
 29760 1463 BA070000 		.4byte	.LASF264
 29761 1467 01       		.byte	0x1
 29762 1468 5E06     		.2byte	0x65e
 29763 146a 3D150000 		.4byte	0x153d
 29764 146e 03       		.uleb128 0x3
 29765 146f 91       		.byte	0x91
 29766 1470 A074     		.sleb128 -1504
 29767 1472 23       		.uleb128 0x23
 29768 1473 09000000 		.4byte	.LASF265
 29769 1477 01       		.byte	0x1
 29770 1478 5F06     		.2byte	0x65f
 29771 147a 4D150000 		.4byte	0x154d
 29772 147e 03       		.uleb128 0x3
 29773 147f 91       		.byte	0x91
 29774 1480 9074     		.sleb128 -1520
 29775 1482 23       		.uleb128 0x23
 29776 1483 E70E0000 		.4byte	.LASF266
 29777 1487 01       		.byte	0x1
 29778 1488 6006     		.2byte	0x660
 29779 148a 5D150000 		.4byte	0x155d
 29780 148e 03       		.uleb128 0x3
 29781 148f 91       		.byte	0x91
 29782 1490 E473     		.sleb128 -1564
 29783 1492 23       		.uleb128 0x23
 29784 1493 3B020000 		.4byte	.LASF267
 29785 1497 01       		.byte	0x1
 29786 1498 6106     		.2byte	0x661
 29787 149a 30010000 		.4byte	0x130
 29788 149e 03       		.uleb128 0x3
 29789 149f 91       		.byte	0x91
 29790 14a0 C873     		.sleb128 -1592
 29791 14a2 23       		.uleb128 0x23
 29792 14a3 B5010000 		.4byte	.LASF268
 29793 14a7 01       		.byte	0x1
 29794 14a8 6406     		.2byte	0x664
 29795 14aa 97000000 		.4byte	0x97
 29796 14ae 02       		.uleb128 0x2
 29797 14af 91       		.byte	0x91
 29798 14b0 5B       		.sleb128 -37
 29799 14b1 23       		.uleb128 0x23
 29800 14b2 24050000 		.4byte	.LASF269
 29801 14b6 01       		.byte	0x1
 29802 14b7 6506     		.2byte	0x665
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 644


 29803 14b9 97000000 		.4byte	0x97
 29804 14bd 02       		.uleb128 0x2
 29805 14be 91       		.byte	0x91
 29806 14bf 5A       		.sleb128 -38
 29807 14c0 23       		.uleb128 0x23
 29808 14c1 42110000 		.4byte	.LASF270
 29809 14c5 01       		.byte	0x1
 29810 14c6 6606     		.2byte	0x666
 29811 14c8 97000000 		.4byte	0x97
 29812 14cc 02       		.uleb128 0x2
 29813 14cd 91       		.byte	0x91
 29814 14ce 59       		.sleb128 -39
 29815 14cf 23       		.uleb128 0x23
 29816 14d0 C1110000 		.4byte	.LASF271
 29817 14d4 01       		.byte	0x1
 29818 14d5 6706     		.2byte	0x667
 29819 14d7 97000000 		.4byte	0x97
 29820 14db 02       		.uleb128 0x2
 29821 14dc 91       		.byte	0x91
 29822 14dd 58       		.sleb128 -40
 29823 14de 23       		.uleb128 0x23
 29824 14df 32050000 		.4byte	.LASF272
 29825 14e3 01       		.byte	0x1
 29826 14e4 6806     		.2byte	0x668
 29827 14e6 97000000 		.4byte	0x97
 29828 14ea 02       		.uleb128 0x2
 29829 14eb 91       		.byte	0x91
 29830 14ec 57       		.sleb128 -41
 29831 14ed 23       		.uleb128 0x23
 29832 14ee 03010000 		.4byte	.LASF273
 29833 14f2 01       		.byte	0x1
 29834 14f3 6906     		.2byte	0x669
 29835 14f5 97000000 		.4byte	0x97
 29836 14f9 02       		.uleb128 0x2
 29837 14fa 91       		.byte	0x91
 29838 14fb 65       		.sleb128 -27
 29839 14fc 23       		.uleb128 0x23
 29840 14fd 6B140000 		.4byte	.LASF246
 29841 1501 01       		.byte	0x1
 29842 1502 6B06     		.2byte	0x66b
 29843 1504 8B120000 		.4byte	0x128b
 29844 1508 03       		.uleb128 0x3
 29845 1509 91       		.byte	0x91
 29846 150a D072     		.sleb128 -1712
 29847 150c 23       		.uleb128 0x23
 29848 150d C1030000 		.4byte	.LASF274
 29849 1511 01       		.byte	0x1
 29850 1512 6C06     		.2byte	0x66c
 29851 1514 97000000 		.4byte	0x97
 29852 1518 02       		.uleb128 0x2
 29853 1519 91       		.byte	0x91
 29854 151a 56       		.sleb128 -42
 29855 151b 00       		.byte	0
 29856 151c 09       		.uleb128 0x9
 29857 151d 97000000 		.4byte	0x97
 29858 1521 2D150000 		.4byte	0x152d
 29859 1525 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 645


 29860 1526 18010000 		.4byte	0x118
 29861 152a 7805     		.2byte	0x578
 29862 152c 00       		.byte	0
 29863 152d 09       		.uleb128 0x9
 29864 152e F9000000 		.4byte	0xf9
 29865 1532 3D150000 		.4byte	0x153d
 29866 1536 0A       		.uleb128 0xa
 29867 1537 18010000 		.4byte	0x118
 29868 153b 0A       		.byte	0xa
 29869 153c 00       		.byte	0
 29870 153d 09       		.uleb128 0x9
 29871 153e F9000000 		.4byte	0xf9
 29872 1542 4D150000 		.4byte	0x154d
 29873 1546 0A       		.uleb128 0xa
 29874 1547 18010000 		.4byte	0x118
 29875 154b 13       		.byte	0x13
 29876 154c 00       		.byte	0
 29877 154d 09       		.uleb128 0x9
 29878 154e F9000000 		.4byte	0xf9
 29879 1552 5D150000 		.4byte	0x155d
 29880 1556 0A       		.uleb128 0xa
 29881 1557 18010000 		.4byte	0x118
 29882 155b 0F       		.byte	0xf
 29883 155c 00       		.byte	0
 29884 155d 09       		.uleb128 0x9
 29885 155e F9000000 		.4byte	0xf9
 29886 1562 6D150000 		.4byte	0x156d
 29887 1566 0A       		.uleb128 0xa
 29888 1567 18010000 		.4byte	0x118
 29889 156b 29       		.byte	0x29
 29890 156c 00       		.byte	0
 29891 156d 27       		.uleb128 0x27
 29892 156e 22030000 		.4byte	.LASF306
 29893 1572 01       		.byte	0x1
 29894 1573 3207     		.2byte	0x732
 29895 1575 00000000 		.4byte	.LFB71
 29896 1579 84000000 		.4byte	.LFE71-.LFB71
 29897 157d 01       		.uleb128 0x1
 29898 157e 9C       		.byte	0x9c
 29899 157f 9E150000 		.4byte	0x159e
 29900 1583 26       		.uleb128 0x26
 29901 1584 6900     		.ascii	"i\000"
 29902 1586 01       		.byte	0x1
 29903 1587 3407     		.2byte	0x734
 29904 1589 97000000 		.4byte	0x97
 29905 158d 02       		.uleb128 0x2
 29906 158e 91       		.byte	0x91
 29907 158f 6F       		.sleb128 -17
 29908 1590 26       		.uleb128 0x26
 29909 1591 6A00     		.ascii	"j\000"
 29910 1593 01       		.byte	0x1
 29911 1594 3407     		.2byte	0x734
 29912 1596 97000000 		.4byte	0x97
 29913 159a 02       		.uleb128 0x2
 29914 159b 91       		.byte	0x91
 29915 159c 6E       		.sleb128 -18
 29916 159d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 646


 29917 159e 22       		.uleb128 0x22
 29918 159f 23010000 		.4byte	.LASF275
 29919 15a3 01       		.byte	0x1
 29920 15a4 4507     		.2byte	0x745
 29921 15a6 00000000 		.4byte	.LFB72
 29922 15aa 50210000 		.4byte	.LFE72-.LFB72
 29923 15ae 01       		.uleb128 0x1
 29924 15af 9C       		.byte	0x9c
 29925 15b0 57160000 		.4byte	0x1657
 29926 15b4 25       		.uleb128 0x25
 29927 15b5 140E0000 		.4byte	.LASF276
 29928 15b9 01       		.byte	0x1
 29929 15ba 4507     		.2byte	0x745
 29930 15bc 1F010000 		.4byte	0x11f
 29931 15c0 03       		.uleb128 0x3
 29932 15c1 91       		.byte	0x91
 29933 15c2 D47E     		.sleb128 -172
 29934 15c4 26       		.uleb128 0x26
 29935 15c5 6900     		.ascii	"i\000"
 29936 15c7 01       		.byte	0x1
 29937 15c8 4707     		.2byte	0x747
 29938 15ca 73000000 		.4byte	0x73
 29939 15ce 02       		.uleb128 0x2
 29940 15cf 91       		.byte	0x91
 29941 15d0 54       		.sleb128 -44
 29942 15d1 23       		.uleb128 0x23
 29943 15d2 5A030000 		.4byte	.LASF245
 29944 15d6 01       		.byte	0x1
 29945 15d7 4907     		.2byte	0x749
 29946 15d9 55120000 		.4byte	0x1255
 29947 15dd 02       		.uleb128 0x2
 29948 15de 91       		.byte	0x91
 29949 15df 48       		.sleb128 -56
 29950 15e0 1E       		.uleb128 0x1e
 29951 15e1 1C000000 		.4byte	.LBB20
 29952 15e5 F0200000 		.4byte	.LBE20-.LBB20
 29953 15e9 26       		.uleb128 0x26
 29954 15ea 73747200 		.ascii	"str\000"
 29955 15ee 01       		.byte	0x1
 29956 15ef 4C07     		.2byte	0x74c
 29957 15f1 57160000 		.4byte	0x1657
 29958 15f5 03       		.uleb128 0x3
 29959 15f6 91       		.byte	0x91
 29960 15f7 D87E     		.sleb128 -168
 29961 15f9 26       		.uleb128 0x26
 29962 15fa 6A00     		.ascii	"j\000"
 29963 15fc 01       		.byte	0x1
 29964 15fd 0509     		.2byte	0x905
 29965 15ff 73000000 		.4byte	0x73
 29966 1603 02       		.uleb128 0x2
 29967 1604 91       		.byte	0x91
 29968 1605 4C       		.sleb128 -52
 29969 1606 1E       		.uleb128 0x1e
 29970 1607 0C030000 		.4byte	.LBB21
 29971 160b CE130000 		.4byte	.LBE21-.LBB21
 29972 160f 26       		.uleb128 0x26
 29973 1610 6B00     		.ascii	"k\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 647


 29974 1612 01       		.byte	0x1
 29975 1613 8007     		.2byte	0x780
 29976 1615 97000000 		.4byte	0x97
 29977 1619 02       		.uleb128 0x2
 29978 161a 91       		.byte	0x91
 29979 161b 53       		.sleb128 -45
 29980 161c 1E       		.uleb128 0x1e
 29981 161d 5C030000 		.4byte	.LBB22
 29982 1621 62130000 		.4byte	.LBE22-.LBB22
 29983 1625 23       		.uleb128 0x23
 29984 1626 F50D0000 		.4byte	.LASF238
 29985 162a 01       		.byte	0x1
 29986 162b 8207     		.2byte	0x782
 29987 162d 97000000 		.4byte	0x97
 29988 1631 02       		.uleb128 0x2
 29989 1632 91       		.byte	0x91
 29990 1633 47       		.sleb128 -57
 29991 1634 26       		.uleb128 0x26
 29992 1635 4D4F5400 		.ascii	"MOT\000"
 29993 1639 01       		.byte	0x1
 29994 163a 8307     		.2byte	0x783
 29995 163c 67160000 		.4byte	0x1667
 29996 1640 02       		.uleb128 0x2
 29997 1641 91       		.byte	0x91
 29998 1642 40       		.sleb128 -64
 29999 1643 23       		.uleb128 0x23
 30000 1644 D3130000 		.4byte	.LASF277
 30001 1648 01       		.byte	0x1
 30002 1649 8407     		.2byte	0x784
 30003 164b 97000000 		.4byte	0x97
 30004 164f 03       		.uleb128 0x3
 30005 1650 91       		.byte	0x91
 30006 1651 BF7F     		.sleb128 -65
 30007 1653 00       		.byte	0
 30008 1654 00       		.byte	0
 30009 1655 00       		.byte	0
 30010 1656 00       		.byte	0
 30011 1657 09       		.uleb128 0x9
 30012 1658 F9000000 		.4byte	0xf9
 30013 165c 67160000 		.4byte	0x1667
 30014 1660 0A       		.uleb128 0xa
 30015 1661 18010000 		.4byte	0x118
 30016 1665 63       		.byte	0x63
 30017 1666 00       		.byte	0
 30018 1667 07       		.uleb128 0x7
 30019 1668 04       		.byte	0x4
 30020 1669 D4050000 		.4byte	0x5d4
 30021 166d 22       		.uleb128 0x22
 30022 166e 1A0F0000 		.4byte	.LASF278
 30023 1672 01       		.byte	0x1
 30024 1673 2F09     		.2byte	0x92f
 30025 1675 00000000 		.4byte	.LFB73
 30026 1679 B4030000 		.4byte	.LFE73-.LFB73
 30027 167d 01       		.uleb128 0x1
 30028 167e 9C       		.byte	0x9c
 30029 167f ED160000 		.4byte	0x16ed
 30030 1683 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 648


 30031 1684 140E0000 		.4byte	.LASF276
 30032 1688 01       		.byte	0x1
 30033 1689 2F09     		.2byte	0x92f
 30034 168b 1F010000 		.4byte	0x11f
 30035 168f 03       		.uleb128 0x3
 30036 1690 91       		.byte	0x91
 30037 1691 EC7E     		.sleb128 -148
 30038 1693 26       		.uleb128 0x26
 30039 1694 73747200 		.ascii	"str\000"
 30040 1698 01       		.byte	0x1
 30041 1699 3109     		.2byte	0x931
 30042 169b 57160000 		.4byte	0x1657
 30043 169f 03       		.uleb128 0x3
 30044 16a0 91       		.byte	0x91
 30045 16a1 F07E     		.sleb128 -144
 30046 16a3 26       		.uleb128 0x26
 30047 16a4 6900     		.ascii	"i\000"
 30048 16a6 01       		.byte	0x1
 30049 16a7 3209     		.2byte	0x932
 30050 16a9 73000000 		.4byte	0x73
 30051 16ad 02       		.uleb128 0x2
 30052 16ae 91       		.byte	0x91
 30053 16af 64       		.sleb128 -28
 30054 16b0 23       		.uleb128 0x23
 30055 16b1 71040000 		.4byte	.LASF279
 30056 16b5 01       		.byte	0x1
 30057 16b6 3309     		.2byte	0x933
 30058 16b8 73000000 		.4byte	0x73
 30059 16bc 02       		.uleb128 0x2
 30060 16bd 91       		.byte	0x91
 30061 16be 54       		.sleb128 -44
 30062 16bf 23       		.uleb128 0x23
 30063 16c0 5A030000 		.4byte	.LASF245
 30064 16c4 01       		.byte	0x1
 30065 16c5 3509     		.2byte	0x935
 30066 16c7 55120000 		.4byte	0x1255
 30067 16cb 02       		.uleb128 0x2
 30068 16cc 91       		.byte	0x91
 30069 16cd 60       		.sleb128 -32
 30070 16ce 26       		.uleb128 0x26
 30071 16cf 4D4F5400 		.ascii	"MOT\000"
 30072 16d3 01       		.byte	0x1
 30073 16d4 3609     		.2byte	0x936
 30074 16d6 67160000 		.4byte	0x1667
 30075 16da 02       		.uleb128 0x2
 30076 16db 91       		.byte	0x91
 30077 16dc 5C       		.sleb128 -36
 30078 16dd 23       		.uleb128 0x23
 30079 16de D3130000 		.4byte	.LASF277
 30080 16e2 01       		.byte	0x1
 30081 16e3 3709     		.2byte	0x937
 30082 16e5 97000000 		.4byte	0x97
 30083 16e9 02       		.uleb128 0x2
 30084 16ea 91       		.byte	0x91
 30085 16eb 5B       		.sleb128 -37
 30086 16ec 00       		.byte	0
 30087 16ed 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 649


 30088 16ee 820F0000 		.4byte	.LASF280
 30089 16f2 01       		.byte	0x1
 30090 16f3 7109     		.2byte	0x971
 30091 16f5 00000000 		.4byte	.LFB74
 30092 16f9 7C120000 		.4byte	.LFE74-.LFB74
 30093 16fd 01       		.uleb128 0x1
 30094 16fe 9C       		.byte	0x9c
 30095 16ff 8E170000 		.4byte	0x178e
 30096 1703 25       		.uleb128 0x25
 30097 1704 140E0000 		.4byte	.LASF276
 30098 1708 01       		.byte	0x1
 30099 1709 7109     		.2byte	0x971
 30100 170b 1F010000 		.4byte	0x11f
 30101 170f 03       		.uleb128 0x3
 30102 1710 91       		.byte	0x91
 30103 1711 D47E     		.sleb128 -172
 30104 1713 26       		.uleb128 0x26
 30105 1714 73747200 		.ascii	"str\000"
 30106 1718 01       		.byte	0x1
 30107 1719 7309     		.2byte	0x973
 30108 171b 57160000 		.4byte	0x1657
 30109 171f 03       		.uleb128 0x3
 30110 1720 91       		.byte	0x91
 30111 1721 DC7E     		.sleb128 -164
 30112 1723 26       		.uleb128 0x26
 30113 1724 6900     		.ascii	"i\000"
 30114 1726 01       		.byte	0x1
 30115 1727 7409     		.2byte	0x974
 30116 1729 73000000 		.4byte	0x73
 30117 172d 02       		.uleb128 0x2
 30118 172e 91       		.byte	0x91
 30119 172f 54       		.sleb128 -44
 30120 1730 23       		.uleb128 0x23
 30121 1731 5A030000 		.4byte	.LASF245
 30122 1735 01       		.byte	0x1
 30123 1736 7809     		.2byte	0x978
 30124 1738 55120000 		.4byte	0x1255
 30125 173c 02       		.uleb128 0x2
 30126 173d 91       		.byte	0x91
 30127 173e 4C       		.sleb128 -52
 30128 173f 1E       		.uleb128 0x1e
 30129 1740 08010000 		.4byte	.LBB23
 30130 1744 D40C0000 		.4byte	.LBE23-.LBB23
 30131 1748 26       		.uleb128 0x26
 30132 1749 6B00     		.ascii	"k\000"
 30133 174b 01       		.byte	0x1
 30134 174c 8D09     		.2byte	0x98d
 30135 174e 97000000 		.4byte	0x97
 30136 1752 02       		.uleb128 0x2
 30137 1753 91       		.byte	0x91
 30138 1754 53       		.sleb128 -45
 30139 1755 1E       		.uleb128 0x1e
 30140 1756 12010000 		.4byte	.LBB24
 30141 175a AE0C0000 		.4byte	.LBE24-.LBB24
 30142 175e 23       		.uleb128 0x23
 30143 175f F50D0000 		.4byte	.LASF238
 30144 1763 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 650


 30145 1764 8F09     		.2byte	0x98f
 30146 1766 97000000 		.4byte	0x97
 30147 176a 02       		.uleb128 0x2
 30148 176b 91       		.byte	0x91
 30149 176c 4B       		.sleb128 -53
 30150 176d 26       		.uleb128 0x26
 30151 176e 4D4F5400 		.ascii	"MOT\000"
 30152 1772 01       		.byte	0x1
 30153 1773 9009     		.2byte	0x990
 30154 1775 67160000 		.4byte	0x1667
 30155 1779 02       		.uleb128 0x2
 30156 177a 91       		.byte	0x91
 30157 177b 44       		.sleb128 -60
 30158 177c 23       		.uleb128 0x23
 30159 177d D3130000 		.4byte	.LASF277
 30160 1781 01       		.byte	0x1
 30161 1782 9109     		.2byte	0x991
 30162 1784 97000000 		.4byte	0x97
 30163 1788 02       		.uleb128 0x2
 30164 1789 91       		.byte	0x91
 30165 178a 43       		.sleb128 -61
 30166 178b 00       		.byte	0
 30167 178c 00       		.byte	0
 30168 178d 00       		.byte	0
 30169 178e 22       		.uleb128 0x22
 30170 178f B30B0000 		.4byte	.LASF281
 30171 1793 01       		.byte	0x1
 30172 1794 790A     		.2byte	0xa79
 30173 1796 00000000 		.4byte	.LFB75
 30174 179a C8000000 		.4byte	.LFE75-.LFB75
 30175 179e 01       		.uleb128 0x1
 30176 179f 9C       		.byte	0x9c
 30177 17a0 D2170000 		.4byte	0x17d2
 30178 17a4 25       		.uleb128 0x25
 30179 17a5 140E0000 		.4byte	.LASF276
 30180 17a9 01       		.byte	0x1
 30181 17aa 790A     		.2byte	0xa79
 30182 17ac 1F010000 		.4byte	0x11f
 30183 17b0 03       		.uleb128 0x3
 30184 17b1 91       		.byte	0x91
 30185 17b2 847F     		.sleb128 -124
 30186 17b4 26       		.uleb128 0x26
 30187 17b5 73747200 		.ascii	"str\000"
 30188 17b9 01       		.byte	0x1
 30189 17ba 7B0A     		.2byte	0xa7b
 30190 17bc 57160000 		.4byte	0x1657
 30191 17c0 03       		.uleb128 0x3
 30192 17c1 91       		.byte	0x91
 30193 17c2 887F     		.sleb128 -120
 30194 17c4 26       		.uleb128 0x26
 30195 17c5 6900     		.ascii	"i\000"
 30196 17c7 01       		.byte	0x1
 30197 17c8 7C0A     		.2byte	0xa7c
 30198 17ca 73000000 		.4byte	0x73
 30199 17ce 02       		.uleb128 0x2
 30200 17cf 91       		.byte	0x91
 30201 17d0 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 651


 30202 17d1 00       		.byte	0
 30203 17d2 22       		.uleb128 0x22
 30204 17d3 200E0000 		.4byte	.LASF282
 30205 17d7 01       		.byte	0x1
 30206 17d8 900A     		.2byte	0xa90
 30207 17da 00000000 		.4byte	.LFB76
 30208 17de 30010000 		.4byte	.LFE76-.LFB76
 30209 17e2 01       		.uleb128 0x1
 30210 17e3 9C       		.byte	0x9c
 30211 17e4 16180000 		.4byte	0x1816
 30212 17e8 25       		.uleb128 0x25
 30213 17e9 140E0000 		.4byte	.LASF276
 30214 17ed 01       		.byte	0x1
 30215 17ee 900A     		.2byte	0xa90
 30216 17f0 1F010000 		.4byte	0x11f
 30217 17f4 03       		.uleb128 0x3
 30218 17f5 91       		.byte	0x91
 30219 17f6 847F     		.sleb128 -124
 30220 17f8 26       		.uleb128 0x26
 30221 17f9 73747200 		.ascii	"str\000"
 30222 17fd 01       		.byte	0x1
 30223 17fe 920A     		.2byte	0xa92
 30224 1800 57160000 		.4byte	0x1657
 30225 1804 03       		.uleb128 0x3
 30226 1805 91       		.byte	0x91
 30227 1806 887F     		.sleb128 -120
 30228 1808 26       		.uleb128 0x26
 30229 1809 6900     		.ascii	"i\000"
 30230 180b 01       		.byte	0x1
 30231 180c 930A     		.2byte	0xa93
 30232 180e 73000000 		.4byte	0x73
 30233 1812 02       		.uleb128 0x2
 30234 1813 91       		.byte	0x91
 30235 1814 6C       		.sleb128 -20
 30236 1815 00       		.byte	0
 30237 1816 22       		.uleb128 0x22
 30238 1817 F5140000 		.4byte	.LASF283
 30239 181b 01       		.byte	0x1
 30240 181c B70A     		.2byte	0xab7
 30241 181e 00000000 		.4byte	.LFB77
 30242 1822 74030000 		.4byte	.LFE77-.LFB77
 30243 1826 01       		.uleb128 0x1
 30244 1827 9C       		.byte	0x9c
 30245 1828 5A180000 		.4byte	0x185a
 30246 182c 25       		.uleb128 0x25
 30247 182d 140E0000 		.4byte	.LASF276
 30248 1831 01       		.byte	0x1
 30249 1832 B70A     		.2byte	0xab7
 30250 1834 1F010000 		.4byte	0x11f
 30251 1838 03       		.uleb128 0x3
 30252 1839 91       		.byte	0x91
 30253 183a AC7D     		.sleb128 -340
 30254 183c 26       		.uleb128 0x26
 30255 183d 73747200 		.ascii	"str\000"
 30256 1841 01       		.byte	0x1
 30257 1842 B90A     		.2byte	0xab9
 30258 1844 5A180000 		.4byte	0x185a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 652


 30259 1848 03       		.uleb128 0x3
 30260 1849 91       		.byte	0x91
 30261 184a B07D     		.sleb128 -336
 30262 184c 26       		.uleb128 0x26
 30263 184d 6900     		.ascii	"i\000"
 30264 184f 01       		.byte	0x1
 30265 1850 BA0A     		.2byte	0xaba
 30266 1852 73000000 		.4byte	0x73
 30267 1856 02       		.uleb128 0x2
 30268 1857 91       		.byte	0x91
 30269 1858 5C       		.sleb128 -36
 30270 1859 00       		.byte	0
 30271 185a 09       		.uleb128 0x9
 30272 185b F9000000 		.4byte	0xf9
 30273 185f 6B180000 		.4byte	0x186b
 30274 1863 24       		.uleb128 0x24
 30275 1864 18010000 		.4byte	0x118
 30276 1868 2B01     		.2byte	0x12b
 30277 186a 00       		.byte	0
 30278 186b 22       		.uleb128 0x22
 30279 186c 450F0000 		.4byte	.LASF284
 30280 1870 01       		.byte	0x1
 30281 1871 E20A     		.2byte	0xae2
 30282 1873 00000000 		.4byte	.LFB78
 30283 1877 84000000 		.4byte	.LFE78-.LFB78
 30284 187b 01       		.uleb128 0x1
 30285 187c 9C       		.byte	0x9c
 30286 187d BE180000 		.4byte	0x18be
 30287 1881 25       		.uleb128 0x25
 30288 1882 26060000 		.4byte	.LASF228
 30289 1886 01       		.byte	0x1
 30290 1887 E20A     		.2byte	0xae2
 30291 1889 4A100000 		.4byte	0x104a
 30292 188d 02       		.uleb128 0x2
 30293 188e 91       		.byte	0x91
 30294 188f 6C       		.sleb128 -20
 30295 1890 25       		.uleb128 0x25
 30296 1891 920B0000 		.4byte	.LASF229
 30297 1895 01       		.byte	0x1
 30298 1896 E20A     		.2byte	0xae2
 30299 1898 A3000000 		.4byte	0xa3
 30300 189c 02       		.uleb128 0x2
 30301 189d 91       		.byte	0x91
 30302 189e 6A       		.sleb128 -22
 30303 189f 25       		.uleb128 0x25
 30304 18a0 B40F0000 		.4byte	.LASF285
 30305 18a4 01       		.byte	0x1
 30306 18a5 E20A     		.2byte	0xae2
 30307 18a7 97000000 		.4byte	0x97
 30308 18ab 02       		.uleb128 0x2
 30309 18ac 91       		.byte	0x91
 30310 18ad 69       		.sleb128 -23
 30311 18ae 23       		.uleb128 0x23
 30312 18af 2C070000 		.4byte	.LASF243
 30313 18b3 01       		.byte	0x1
 30314 18b4 E40A     		.2byte	0xae4
 30315 18b6 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 653


 30316 18ba 02       		.uleb128 0x2
 30317 18bb 91       		.byte	0x91
 30318 18bc 76       		.sleb128 -10
 30319 18bd 00       		.byte	0
 30320 18be 22       		.uleb128 0x22
 30321 18bf 4B060000 		.4byte	.LASF286
 30322 18c3 01       		.byte	0x1
 30323 18c4 FE0A     		.2byte	0xafe
 30324 18c6 00000000 		.4byte	.LFB79
 30325 18ca 88000000 		.4byte	.LFE79-.LFB79
 30326 18ce 01       		.uleb128 0x1
 30327 18cf 9C       		.byte	0x9c
 30328 18d0 02190000 		.4byte	0x1902
 30329 18d4 25       		.uleb128 0x25
 30330 18d5 26060000 		.4byte	.LASF228
 30331 18d9 01       		.byte	0x1
 30332 18da FE0A     		.2byte	0xafe
 30333 18dc 4A100000 		.4byte	0x104a
 30334 18e0 02       		.uleb128 0x2
 30335 18e1 91       		.byte	0x91
 30336 18e2 6C       		.sleb128 -20
 30337 18e3 25       		.uleb128 0x25
 30338 18e4 920B0000 		.4byte	.LASF229
 30339 18e8 01       		.byte	0x1
 30340 18e9 FE0A     		.2byte	0xafe
 30341 18eb A3000000 		.4byte	0xa3
 30342 18ef 02       		.uleb128 0x2
 30343 18f0 91       		.byte	0x91
 30344 18f1 6A       		.sleb128 -22
 30345 18f2 23       		.uleb128 0x23
 30346 18f3 2C070000 		.4byte	.LASF243
 30347 18f7 01       		.byte	0x1
 30348 18f8 000B     		.2byte	0xb00
 30349 18fa A3000000 		.4byte	0xa3
 30350 18fe 02       		.uleb128 0x2
 30351 18ff 91       		.byte	0x91
 30352 1900 76       		.sleb128 -10
 30353 1901 00       		.byte	0
 30354 1902 22       		.uleb128 0x22
 30355 1903 1E0C0000 		.4byte	.LASF287
 30356 1907 01       		.byte	0x1
 30357 1908 1A0B     		.2byte	0xb1a
 30358 190a 00000000 		.4byte	.LFB80
 30359 190e A0000000 		.4byte	.LFE80-.LFB80
 30360 1912 01       		.uleb128 0x1
 30361 1913 9C       		.byte	0x9c
 30362 1914 55190000 		.4byte	0x1955
 30363 1918 25       		.uleb128 0x25
 30364 1919 26060000 		.4byte	.LASF228
 30365 191d 01       		.byte	0x1
 30366 191e 1A0B     		.2byte	0xb1a
 30367 1920 4A100000 		.4byte	0x104a
 30368 1924 02       		.uleb128 0x2
 30369 1925 91       		.byte	0x91
 30370 1926 74       		.sleb128 -12
 30371 1927 25       		.uleb128 0x25
 30372 1928 920B0000 		.4byte	.LASF229
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 654


 30373 192c 01       		.byte	0x1
 30374 192d 1A0B     		.2byte	0xb1a
 30375 192f A3000000 		.4byte	0xa3
 30376 1933 02       		.uleb128 0x2
 30377 1934 91       		.byte	0x91
 30378 1935 72       		.sleb128 -14
 30379 1936 28       		.uleb128 0x28
 30380 1937 696400   		.ascii	"id\000"
 30381 193a 01       		.byte	0x1
 30382 193b 1A0B     		.2byte	0xb1a
 30383 193d 97000000 		.4byte	0x97
 30384 1941 02       		.uleb128 0x2
 30385 1942 91       		.byte	0x91
 30386 1943 71       		.sleb128 -15
 30387 1944 26       		.uleb128 0x26
 30388 1945 6900     		.ascii	"i\000"
 30389 1947 01       		.byte	0x1
 30390 1948 1C0B     		.2byte	0xb1c
 30391 194a A3000000 		.4byte	0xa3
 30392 194e 05       		.uleb128 0x5
 30393 194f 03       		.byte	0x3
 30394 1950 00000000 		.4byte	i.11227
 30395 1954 00       		.byte	0
 30396 1955 29       		.uleb128 0x29
 30397 1956 83130000 		.4byte	.LASF293
 30398 195a 01       		.byte	0x1
 30399 195b 380B     		.2byte	0xb38
 30400 195d 97000000 		.4byte	0x97
 30401 1961 00000000 		.4byte	.LFB81
 30402 1965 3E000000 		.4byte	.LFE81-.LFB81
 30403 1969 01       		.uleb128 0x1
 30404 196a 9C       		.byte	0x9c
 30405 196b AA190000 		.4byte	0x19aa
 30406 196f 25       		.uleb128 0x25
 30407 1970 610B0000 		.4byte	.LASF288
 30408 1974 01       		.byte	0x1
 30409 1975 380B     		.2byte	0xb38
 30410 1977 4A100000 		.4byte	0x104a
 30411 197b 02       		.uleb128 0x2
 30412 197c 91       		.byte	0x91
 30413 197d 6C       		.sleb128 -20
 30414 197e 25       		.uleb128 0x25
 30415 197f FB050000 		.4byte	.LASF289
 30416 1983 01       		.byte	0x1
 30417 1984 380B     		.2byte	0xb38
 30418 1986 97000000 		.4byte	0x97
 30419 198a 02       		.uleb128 0x2
 30420 198b 91       		.byte	0x91
 30421 198c 6B       		.sleb128 -21
 30422 198d 26       		.uleb128 0x26
 30423 198e 6900     		.ascii	"i\000"
 30424 1990 01       		.byte	0x1
 30425 1991 3A0B     		.2byte	0xb3a
 30426 1993 97000000 		.4byte	0x97
 30427 1997 02       		.uleb128 0x2
 30428 1998 91       		.byte	0x91
 30429 1999 77       		.sleb128 -9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 655


 30430 199a 23       		.uleb128 0x23
 30431 199b 740D0000 		.4byte	.LASF290
 30432 199f 01       		.byte	0x1
 30433 19a0 3B0B     		.2byte	0xb3b
 30434 19a2 97000000 		.4byte	0x97
 30435 19a6 02       		.uleb128 0x2
 30436 19a7 91       		.byte	0x91
 30437 19a8 76       		.sleb128 -10
 30438 19a9 00       		.byte	0
 30439 19aa 22       		.uleb128 0x22
 30440 19ab A00B0000 		.4byte	.LASF291
 30441 19af 01       		.byte	0x1
 30442 19b0 480B     		.2byte	0xb48
 30443 19b2 00000000 		.4byte	.LFB82
 30444 19b6 2E000000 		.4byte	.LFE82-.LFB82
 30445 19ba 01       		.uleb128 0x1
 30446 19bb 9C       		.byte	0x9c
 30447 19bc EE190000 		.4byte	0x19ee
 30448 19c0 25       		.uleb128 0x25
 30449 19c1 44050000 		.4byte	.LASF292
 30450 19c5 01       		.byte	0x1
 30451 19c6 480B     		.2byte	0xb48
 30452 19c8 97000000 		.4byte	0x97
 30453 19cc 02       		.uleb128 0x2
 30454 19cd 91       		.byte	0x91
 30455 19ce 6F       		.sleb128 -17
 30456 19cf 23       		.uleb128 0x23
 30457 19d0 920B0000 		.4byte	.LASF229
 30458 19d4 01       		.byte	0x1
 30459 19d5 490B     		.2byte	0xb49
 30460 19d7 73000000 		.4byte	0x73
 30461 19db 02       		.uleb128 0x2
 30462 19dc 91       		.byte	0x91
 30463 19dd 74       		.sleb128 -12
 30464 19de 23       		.uleb128 0x23
 30465 19df 26060000 		.4byte	.LASF228
 30466 19e3 01       		.byte	0x1
 30467 19e4 4A0B     		.2byte	0xb4a
 30468 19e6 80080000 		.4byte	0x880
 30469 19ea 02       		.uleb128 0x2
 30470 19eb 91       		.byte	0x91
 30471 19ec 70       		.sleb128 -16
 30472 19ed 00       		.byte	0
 30473 19ee 2A       		.uleb128 0x2a
 30474 19ef 2C040000 		.4byte	.LASF294
 30475 19f3 01       		.byte	0x1
 30476 19f4 570B     		.2byte	0xb57
 30477 19f6 97000000 		.4byte	0x97
 30478 19fa 00000000 		.4byte	.LFB83
 30479 19fe 98000000 		.4byte	.LFE83-.LFB83
 30480 1a02 01       		.uleb128 0x1
 30481 1a03 9C       		.byte	0x9c
 30482 1a04 521A0000 		.4byte	0x1a52
 30483 1a08 25       		.uleb128 0x25
 30484 1a09 EE050000 		.4byte	.LASF295
 30485 1a0d 01       		.byte	0x1
 30486 1a0e 570B     		.2byte	0xb57
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 656


 30487 1a10 73000000 		.4byte	0x73
 30488 1a14 02       		.uleb128 0x2
 30489 1a15 91       		.byte	0x91
 30490 1a16 64       		.sleb128 -28
 30491 1a17 26       		.uleb128 0x26
 30492 1a18 6900     		.ascii	"i\000"
 30493 1a1a 01       		.byte	0x1
 30494 1a1b 590B     		.2byte	0xb59
 30495 1a1d 73000000 		.4byte	0x73
 30496 1a21 02       		.uleb128 0x2
 30497 1a22 91       		.byte	0x91
 30498 1a23 74       		.sleb128 -12
 30499 1a24 23       		.uleb128 0x23
 30500 1a25 CA000000 		.4byte	.LASF296
 30501 1a29 01       		.byte	0x1
 30502 1a2a 5A0B     		.2byte	0xb5a
 30503 1a2c 97000000 		.4byte	0x97
 30504 1a30 02       		.uleb128 0x2
 30505 1a31 91       		.byte	0x91
 30506 1a32 6B       		.sleb128 -21
 30507 1a33 23       		.uleb128 0x23
 30508 1a34 67060000 		.4byte	.LASF297
 30509 1a38 01       		.byte	0x1
 30510 1a39 5B0B     		.2byte	0xb5b
 30511 1a3b 73000000 		.4byte	0x73
 30512 1a3f 02       		.uleb128 0x2
 30513 1a40 91       		.byte	0x91
 30514 1a41 6C       		.sleb128 -20
 30515 1a42 23       		.uleb128 0x23
 30516 1a43 82050000 		.4byte	.LASF298
 30517 1a47 01       		.byte	0x1
 30518 1a48 5C0B     		.2byte	0xb5c
 30519 1a4a 97000000 		.4byte	0x97
 30520 1a4e 02       		.uleb128 0x2
 30521 1a4f 91       		.byte	0x91
 30522 1a50 73       		.sleb128 -13
 30523 1a51 00       		.byte	0
 30524 1a52 22       		.uleb128 0x22
 30525 1a53 B90E0000 		.4byte	.LASF299
 30526 1a57 01       		.byte	0x1
 30527 1a58 810B     		.2byte	0xb81
 30528 1a5a 00000000 		.4byte	.LFB84
 30529 1a5e 80000000 		.4byte	.LFE84-.LFB84
 30530 1a62 01       		.uleb128 0x1
 30531 1a63 9C       		.byte	0x9c
 30532 1a64 761A0000 		.4byte	0x1a76
 30533 1a68 26       		.uleb128 0x26
 30534 1a69 6900     		.ascii	"i\000"
 30535 1a6b 01       		.byte	0x1
 30536 1a6c 830B     		.2byte	0xb83
 30537 1a6e A3000000 		.4byte	0xa3
 30538 1a72 02       		.uleb128 0x2
 30539 1a73 91       		.byte	0x91
 30540 1a74 76       		.sleb128 -10
 30541 1a75 00       		.byte	0
 30542 1a76 2A       		.uleb128 0x2a
 30543 1a77 FF0D0000 		.4byte	.LASF300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 657


 30544 1a7b 01       		.byte	0x1
 30545 1a7c 9A0B     		.2byte	0xb9a
 30546 1a7e 97000000 		.4byte	0x97
 30547 1a82 00000000 		.4byte	.LFB85
 30548 1a86 5C000000 		.4byte	.LFE85-.LFB85
 30549 1a8a 01       		.uleb128 0x1
 30550 1a8b 9C       		.byte	0x9c
 30551 1a8c 9E1A0000 		.4byte	0x1a9e
 30552 1a90 26       		.uleb128 0x26
 30553 1a91 6900     		.ascii	"i\000"
 30554 1a93 01       		.byte	0x1
 30555 1a94 9B0B     		.2byte	0xb9b
 30556 1a96 A3000000 		.4byte	0xa3
 30557 1a9a 02       		.uleb128 0x2
 30558 1a9b 91       		.byte	0x91
 30559 1a9c 76       		.sleb128 -10
 30560 1a9d 00       		.byte	0
 30561 1a9e 2A       		.uleb128 0x2a
 30562 1a9f 6D060000 		.4byte	.LASF301
 30563 1aa3 01       		.byte	0x1
 30564 1aa4 AD0B     		.2byte	0xbad
 30565 1aa6 97000000 		.4byte	0x97
 30566 1aaa 00000000 		.4byte	.LFB86
 30567 1aae 08060000 		.4byte	.LFE86-.LFB86
 30568 1ab2 01       		.uleb128 0x1
 30569 1ab3 9C       		.byte	0x9c
 30570 1ab4 D31A0000 		.4byte	0x1ad3
 30571 1ab8 26       		.uleb128 0x26
 30572 1ab9 6900     		.ascii	"i\000"
 30573 1abb 01       		.byte	0x1
 30574 1abc AF0B     		.2byte	0xbaf
 30575 1abe 97000000 		.4byte	0x97
 30576 1ac2 02       		.uleb128 0x2
 30577 1ac3 91       		.byte	0x91
 30578 1ac4 77       		.sleb128 -9
 30579 1ac5 26       		.uleb128 0x26
 30580 1ac6 6A00     		.ascii	"j\000"
 30581 1ac8 01       		.byte	0x1
 30582 1ac9 AF0B     		.2byte	0xbaf
 30583 1acb 97000000 		.4byte	0x97
 30584 1acf 02       		.uleb128 0x2
 30585 1ad0 91       		.byte	0x91
 30586 1ad1 76       		.sleb128 -10
 30587 1ad2 00       		.byte	0
 30588 1ad3 2B       		.uleb128 0x2b
 30589 1ad4 1C090000 		.4byte	.LASF302
 30590 1ad8 01       		.byte	0x1
 30591 1ad9 4B0C     		.2byte	0xc4b
 30592 1adb 00000000 		.4byte	.LFB87
 30593 1adf 38020000 		.4byte	.LFE87-.LFB87
 30594 1ae3 01       		.uleb128 0x1
 30595 1ae4 9C       		.byte	0x9c
 30596 1ae5 101B0000 		.4byte	0x1b10
 30597 1ae9 23       		.uleb128 0x23
 30598 1aea F50D0000 		.4byte	.LASF238
 30599 1aee 01       		.byte	0x1
 30600 1aef 4D0C     		.2byte	0xc4d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 658


 30601 1af1 97000000 		.4byte	0x97
 30602 1af5 02       		.uleb128 0x2
 30603 1af6 91       		.byte	0x91
 30604 1af7 73       		.sleb128 -13
 30605 1af8 1E       		.uleb128 0x1e
 30606 1af9 FA000000 		.4byte	.LBB25
 30607 1afd 6A000000 		.4byte	.LBE25-.LBB25
 30608 1b01 26       		.uleb128 0x26
 30609 1b02 6900     		.ascii	"i\000"
 30610 1b04 01       		.byte	0x1
 30611 1b05 5E0C     		.2byte	0xc5e
 30612 1b07 73000000 		.4byte	0x73
 30613 1b0b 02       		.uleb128 0x2
 30614 1b0c 91       		.byte	0x91
 30615 1b0d 74       		.sleb128 -12
 30616 1b0e 00       		.byte	0
 30617 1b0f 00       		.byte	0
 30618 1b10 2C       		.uleb128 0x2c
 30619 1b11 830B0000 		.4byte	.LASF303
 30620 1b15 01       		.byte	0x1
 30621 1b16 7D0C     		.2byte	0xc7d
 30622 1b18 00000000 		.4byte	.LFB88
 30623 1b1c 28000000 		.4byte	.LFE88-.LFB88
 30624 1b20 01       		.uleb128 0x1
 30625 1b21 9C       		.byte	0x9c
 30626 1b22 2C       		.uleb128 0x2c
 30627 1b23 2C110000 		.4byte	.LASF304
 30628 1b27 01       		.byte	0x1
 30629 1b28 890C     		.2byte	0xc89
 30630 1b2a 00000000 		.4byte	.LFB89
 30631 1b2e 78000000 		.4byte	.LFE89-.LFB89
 30632 1b32 01       		.uleb128 0x1
 30633 1b33 9C       		.byte	0x9c
 30634 1b34 2C       		.uleb128 0x2c
 30635 1b35 E5030000 		.4byte	.LASF305
 30636 1b39 01       		.byte	0x1
 30637 1b3a 9F0C     		.2byte	0xc9f
 30638 1b3c 00000000 		.4byte	.LFB90
 30639 1b40 B0000000 		.4byte	.LFE90-.LFB90
 30640 1b44 01       		.uleb128 0x1
 30641 1b45 9C       		.byte	0x9c
 30642 1b46 27       		.uleb128 0x27
 30643 1b47 9B060000 		.4byte	.LASF307
 30644 1b4b 01       		.byte	0x1
 30645 1b4c C00C     		.2byte	0xcc0
 30646 1b4e 00000000 		.4byte	.LFB91
 30647 1b52 B4000000 		.4byte	.LFE91-.LFB91
 30648 1b56 01       		.uleb128 0x1
 30649 1b57 9C       		.byte	0x9c
 30650 1b58 8A1B0000 		.4byte	0x1b8a
 30651 1b5c 23       		.uleb128 0x23
 30652 1b5d 2C070000 		.4byte	.LASF243
 30653 1b61 01       		.byte	0x1
 30654 1b62 C20C     		.2byte	0xcc2
 30655 1b64 97000000 		.4byte	0x97
 30656 1b68 02       		.uleb128 0x2
 30657 1b69 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 659


 30658 1b6a 6F       		.sleb128 -17
 30659 1b6b 23       		.uleb128 0x23
 30660 1b6c E6110000 		.4byte	.LASF234
 30661 1b70 01       		.byte	0x1
 30662 1b71 C30C     		.2byte	0xcc3
 30663 1b73 C7000000 		.4byte	0xc7
 30664 1b77 02       		.uleb128 0x2
 30665 1b78 91       		.byte	0x91
 30666 1b79 6C       		.sleb128 -20
 30667 1b7a 23       		.uleb128 0x23
 30668 1b7b 26060000 		.4byte	.LASF228
 30669 1b7f 01       		.byte	0x1
 30670 1b80 C60C     		.2byte	0xcc6
 30671 1b82 11080000 		.4byte	0x811
 30672 1b86 02       		.uleb128 0x2
 30673 1b87 91       		.byte	0x91
 30674 1b88 64       		.sleb128 -28
 30675 1b89 00       		.byte	0
 30676 1b8a 27       		.uleb128 0x27
 30677 1b8b A60E0000 		.4byte	.LASF308
 30678 1b8f 01       		.byte	0x1
 30679 1b90 D90C     		.2byte	0xcd9
 30680 1b92 00000000 		.4byte	.LFB92
 30681 1b96 B8000000 		.4byte	.LFE92-.LFB92
 30682 1b9a 01       		.uleb128 0x1
 30683 1b9b 9C       		.byte	0x9c
 30684 1b9c CE1B0000 		.4byte	0x1bce
 30685 1ba0 23       		.uleb128 0x23
 30686 1ba1 2C070000 		.4byte	.LASF243
 30687 1ba5 01       		.byte	0x1
 30688 1ba6 DB0C     		.2byte	0xcdb
 30689 1ba8 97000000 		.4byte	0x97
 30690 1bac 02       		.uleb128 0x2
 30691 1bad 91       		.byte	0x91
 30692 1bae 6F       		.sleb128 -17
 30693 1baf 23       		.uleb128 0x23
 30694 1bb0 E6110000 		.4byte	.LASF234
 30695 1bb4 01       		.byte	0x1
 30696 1bb5 DC0C     		.2byte	0xcdc
 30697 1bb7 C7000000 		.4byte	0xc7
 30698 1bbb 02       		.uleb128 0x2
 30699 1bbc 91       		.byte	0x91
 30700 1bbd 6C       		.sleb128 -20
 30701 1bbe 23       		.uleb128 0x23
 30702 1bbf 26060000 		.4byte	.LASF228
 30703 1bc3 01       		.byte	0x1
 30704 1bc4 E00C     		.2byte	0xce0
 30705 1bc6 11080000 		.4byte	0x811
 30706 1bca 02       		.uleb128 0x2
 30707 1bcb 91       		.byte	0x91
 30708 1bcc 64       		.sleb128 -28
 30709 1bcd 00       		.byte	0
 30710 1bce 27       		.uleb128 0x27
 30711 1bcf F2010000 		.4byte	.LASF309
 30712 1bd3 01       		.byte	0x1
 30713 1bd4 F20C     		.2byte	0xcf2
 30714 1bd6 00000000 		.4byte	.LFB93
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 660


 30715 1bda B8000000 		.4byte	.LFE93-.LFB93
 30716 1bde 01       		.uleb128 0x1
 30717 1bdf 9C       		.byte	0x9c
 30718 1be0 121C0000 		.4byte	0x1c12
 30719 1be4 23       		.uleb128 0x23
 30720 1be5 2C070000 		.4byte	.LASF243
 30721 1be9 01       		.byte	0x1
 30722 1bea F40C     		.2byte	0xcf4
 30723 1bec 97000000 		.4byte	0x97
 30724 1bf0 02       		.uleb128 0x2
 30725 1bf1 91       		.byte	0x91
 30726 1bf2 6F       		.sleb128 -17
 30727 1bf3 23       		.uleb128 0x23
 30728 1bf4 E6110000 		.4byte	.LASF234
 30729 1bf8 01       		.byte	0x1
 30730 1bf9 F50C     		.2byte	0xcf5
 30731 1bfb C7000000 		.4byte	0xc7
 30732 1bff 02       		.uleb128 0x2
 30733 1c00 91       		.byte	0x91
 30734 1c01 6C       		.sleb128 -20
 30735 1c02 23       		.uleb128 0x23
 30736 1c03 26060000 		.4byte	.LASF228
 30737 1c07 01       		.byte	0x1
 30738 1c08 F90C     		.2byte	0xcf9
 30739 1c0a 11080000 		.4byte	0x811
 30740 1c0e 02       		.uleb128 0x2
 30741 1c0f 91       		.byte	0x91
 30742 1c10 64       		.sleb128 -28
 30743 1c11 00       		.byte	0
 30744 1c12 27       		.uleb128 0x27
 30745 1c13 1D0A0000 		.4byte	.LASF310
 30746 1c17 01       		.byte	0x1
 30747 1c18 0B0D     		.2byte	0xd0b
 30748 1c1a 00000000 		.4byte	.LFB94
 30749 1c1e 5C000000 		.4byte	.LFE94-.LFB94
 30750 1c22 01       		.uleb128 0x1
 30751 1c23 9C       		.byte	0x9c
 30752 1c24 471C0000 		.4byte	0x1c47
 30753 1c28 23       		.uleb128 0x23
 30754 1c29 E6110000 		.4byte	.LASF234
 30755 1c2d 01       		.byte	0x1
 30756 1c2e 0D0D     		.2byte	0xd0d
 30757 1c30 C7000000 		.4byte	0xc7
 30758 1c34 02       		.uleb128 0x2
 30759 1c35 91       		.byte	0x91
 30760 1c36 76       		.sleb128 -10
 30761 1c37 23       		.uleb128 0x23
 30762 1c38 26060000 		.4byte	.LASF228
 30763 1c3c 01       		.byte	0x1
 30764 1c3d 110D     		.2byte	0xd11
 30765 1c3f 37090000 		.4byte	0x937
 30766 1c43 02       		.uleb128 0x2
 30767 1c44 91       		.byte	0x91
 30768 1c45 70       		.sleb128 -16
 30769 1c46 00       		.byte	0
 30770 1c47 2D       		.uleb128 0x2d
 30771 1c48 E80B0000 		.4byte	.LASF311
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 661


 30772 1c4c 01       		.byte	0x1
 30773 1c4d 230D     		.2byte	0xd23
 30774 1c4f 00000000 		.4byte	.LFB95
 30775 1c53 44020000 		.4byte	.LFE95-.LFB95
 30776 1c57 01       		.uleb128 0x1
 30777 1c58 9C       		.byte	0x9c
 30778 1c59 B11C0000 		.4byte	0x1cb1
 30779 1c5d 23       		.uleb128 0x23
 30780 1c5e E6110000 		.4byte	.LASF234
 30781 1c62 01       		.byte	0x1
 30782 1c63 260D     		.2byte	0xd26
 30783 1c65 B11C0000 		.4byte	0x1cb1
 30784 1c69 02       		.uleb128 0x2
 30785 1c6a 91       		.byte	0x91
 30786 1c6b 70       		.sleb128 -16
 30787 1c6c 23       		.uleb128 0x23
 30788 1c6d EE060000 		.4byte	.LASF312
 30789 1c71 01       		.byte	0x1
 30790 1c72 270D     		.2byte	0xd27
 30791 1c74 B11C0000 		.4byte	0x1cb1
 30792 1c78 05       		.uleb128 0x5
 30793 1c79 03       		.byte	0x3
 30794 1c7a 04000000 		.4byte	last_aux_int16.11358
 30795 1c7e 2E       		.uleb128 0x2e
 30796 1c7f 2E000000 		.4byte	.LBB26
 30797 1c83 50000000 		.4byte	.LBE26-.LBB26
 30798 1c87 991C0000 		.4byte	0x1c99
 30799 1c8b 26       		.uleb128 0x26
 30800 1c8c 6900     		.ascii	"i\000"
 30801 1c8e 01       		.byte	0x1
 30802 1c8f 2E0D     		.2byte	0xd2e
 30803 1c91 97000000 		.4byte	0x97
 30804 1c95 02       		.uleb128 0x2
 30805 1c96 91       		.byte	0x91
 30806 1c97 77       		.sleb128 -9
 30807 1c98 00       		.byte	0
 30808 1c99 1E       		.uleb128 0x1e
 30809 1c9a 88000000 		.4byte	.LBB27
 30810 1c9e 98010000 		.4byte	.LBE27-.LBB27
 30811 1ca2 26       		.uleb128 0x26
 30812 1ca3 6900     		.ascii	"i\000"
 30813 1ca5 01       		.byte	0x1
 30814 1ca6 380D     		.2byte	0xd38
 30815 1ca8 97000000 		.4byte	0x97
 30816 1cac 02       		.uleb128 0x2
 30817 1cad 91       		.byte	0x91
 30818 1cae 76       		.sleb128 -10
 30819 1caf 00       		.byte	0
 30820 1cb0 00       		.byte	0
 30821 1cb1 09       		.uleb128 0x9
 30822 1cb2 C7000000 		.4byte	0xc7
 30823 1cb6 C11C0000 		.4byte	0x1cc1
 30824 1cba 0A       		.uleb128 0xa
 30825 1cbb 18010000 		.4byte	0x118
 30826 1cbf 01       		.byte	0x1
 30827 1cc0 00       		.byte	0
 30828 1cc1 27       		.uleb128 0x27
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 662


 30829 1cc2 54140000 		.4byte	.LASF313
 30830 1cc6 01       		.byte	0x1
 30831 1cc7 530D     		.2byte	0xd53
 30832 1cc9 00000000 		.4byte	.LFB96
 30833 1ccd BC000000 		.4byte	.LFE96-.LFB96
 30834 1cd1 01       		.uleb128 0x1
 30835 1cd2 9C       		.byte	0x9c
 30836 1cd3 E71C0000 		.4byte	0x1ce7
 30837 1cd7 26       		.uleb128 0x26
 30838 1cd8 61757800 		.ascii	"aux\000"
 30839 1cdc 01       		.byte	0x1
 30840 1cdd 560D     		.2byte	0xd56
 30841 1cdf 97000000 		.4byte	0x97
 30842 1ce3 02       		.uleb128 0x2
 30843 1ce4 91       		.byte	0x91
 30844 1ce5 77       		.sleb128 -9
 30845 1ce6 00       		.byte	0
 30846 1ce7 27       		.uleb128 0x27
 30847 1ce8 460C0000 		.4byte	.LASF314
 30848 1cec 01       		.byte	0x1
 30849 1ced 780D     		.2byte	0xd78
 30850 1cef 00000000 		.4byte	.LFB97
 30851 1cf3 5C000000 		.4byte	.LFE97-.LFB97
 30852 1cf7 01       		.uleb128 0x1
 30853 1cf8 9C       		.byte	0x9c
 30854 1cf9 0D1D0000 		.4byte	0x1d0d
 30855 1cfd 23       		.uleb128 0x23
 30856 1cfe 26060000 		.4byte	.LASF228
 30857 1d02 01       		.byte	0x1
 30858 1d03 7A0D     		.2byte	0xd7a
 30859 1d05 C4050000 		.4byte	0x5c4
 30860 1d09 02       		.uleb128 0x2
 30861 1d0a 91       		.byte	0x91
 30862 1d0b 74       		.sleb128 -12
 30863 1d0c 00       		.byte	0
 30864 1d0d 27       		.uleb128 0x27
 30865 1d0e ED0F0000 		.4byte	.LASF315
 30866 1d12 01       		.byte	0x1
 30867 1d13 8F0D     		.2byte	0xd8f
 30868 1d15 00000000 		.4byte	.LFB98
 30869 1d19 38010000 		.4byte	.LFE98-.LFB98
 30870 1d1d 01       		.uleb128 0x1
 30871 1d1e 9C       		.byte	0x9c
 30872 1d1f 511D0000 		.4byte	0x1d51
 30873 1d23 23       		.uleb128 0x23
 30874 1d24 2C070000 		.4byte	.LASF243
 30875 1d28 01       		.byte	0x1
 30876 1d29 910D     		.2byte	0xd91
 30877 1d2b 97000000 		.4byte	0x97
 30878 1d2f 02       		.uleb128 0x2
 30879 1d30 91       		.byte	0x91
 30880 1d31 6F       		.sleb128 -17
 30881 1d32 23       		.uleb128 0x23
 30882 1d33 E6110000 		.4byte	.LASF234
 30883 1d37 01       		.byte	0x1
 30884 1d38 920D     		.2byte	0xd92
 30885 1d3a C7000000 		.4byte	0xc7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 663


 30886 1d3e 02       		.uleb128 0x2
 30887 1d3f 91       		.byte	0x91
 30888 1d40 6C       		.sleb128 -20
 30889 1d41 23       		.uleb128 0x23
 30890 1d42 26060000 		.4byte	.LASF228
 30891 1d46 01       		.byte	0x1
 30892 1d47 960D     		.2byte	0xd96
 30893 1d49 47090000 		.4byte	0x947
 30894 1d4d 02       		.uleb128 0x2
 30895 1d4e 91       		.byte	0x91
 30896 1d4f 60       		.sleb128 -32
 30897 1d50 00       		.byte	0
 30898 1d51 27       		.uleb128 0x27
 30899 1d52 870A0000 		.4byte	.LASF316
 30900 1d56 01       		.byte	0x1
 30901 1d57 B60D     		.2byte	0xdb6
 30902 1d59 00000000 		.4byte	.LFB99
 30903 1d5d EC000000 		.4byte	.LFE99-.LFB99
 30904 1d61 01       		.uleb128 0x1
 30905 1d62 9C       		.byte	0x9c
 30906 1d63 861D0000 		.4byte	0x1d86
 30907 1d67 23       		.uleb128 0x23
 30908 1d68 26060000 		.4byte	.LASF228
 30909 1d6c 01       		.byte	0x1
 30910 1d6d BA0D     		.2byte	0xdba
 30911 1d6f 37090000 		.4byte	0x937
 30912 1d73 02       		.uleb128 0x2
 30913 1d74 91       		.byte	0x91
 30914 1d75 68       		.sleb128 -24
 30915 1d76 23       		.uleb128 0x23
 30916 1d77 E6110000 		.4byte	.LASF234
 30917 1d7b 01       		.byte	0x1
 30918 1d7c BB0D     		.2byte	0xdbb
 30919 1d7e C7000000 		.4byte	0xc7
 30920 1d82 02       		.uleb128 0x2
 30921 1d83 91       		.byte	0x91
 30922 1d84 66       		.sleb128 -26
 30923 1d85 00       		.byte	0
 30924 1d86 27       		.uleb128 0x27
 30925 1d87 A0070000 		.4byte	.LASF317
 30926 1d8b 01       		.byte	0x1
 30927 1d8c DC0D     		.2byte	0xddc
 30928 1d8e 00000000 		.4byte	.LFB100
 30929 1d92 64000000 		.4byte	.LFE100-.LFB100
 30930 1d96 01       		.uleb128 0x1
 30931 1d97 9C       		.byte	0x9c
 30932 1d98 BB1D0000 		.4byte	0x1dbb
 30933 1d9c 23       		.uleb128 0x23
 30934 1d9d 26060000 		.4byte	.LASF228
 30935 1da1 01       		.byte	0x1
 30936 1da2 E00D     		.2byte	0xde0
 30937 1da4 A40A0000 		.4byte	0xaa4
 30938 1da8 02       		.uleb128 0x2
 30939 1da9 91       		.byte	0x91
 30940 1daa 74       		.sleb128 -12
 30941 1dab 23       		.uleb128 0x23
 30942 1dac E6110000 		.4byte	.LASF234
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 664


 30943 1db0 01       		.byte	0x1
 30944 1db1 E10D     		.2byte	0xde1
 30945 1db3 C7000000 		.4byte	0xc7
 30946 1db7 02       		.uleb128 0x2
 30947 1db8 91       		.byte	0x91
 30948 1db9 72       		.sleb128 -14
 30949 1dba 00       		.byte	0
 30950 1dbb 2F       		.uleb128 0x2f
 30951 1dbc 8A070000 		.4byte	.LASF318
 30952 1dc0 01       		.byte	0x1
 30953 1dc1 F60D     		.2byte	0xdf6
 30954 1dc3 C7000000 		.4byte	0xc7
 30955 1dc7 00000000 		.4byte	.LFB101
 30956 1dcb A8000000 		.4byte	.LFE101-.LFB101
 30957 1dcf 01       		.uleb128 0x1
 30958 1dd0 9C       		.byte	0x9c
 30959 1dd1 301E0000 		.4byte	0x1e30
 30960 1dd5 23       		.uleb128 0x23
 30961 1dd6 26060000 		.4byte	.LASF228
 30962 1dda 01       		.byte	0x1
 30963 1ddb F80D     		.2byte	0xdf8
 30964 1ddd 301E0000 		.4byte	0x1e30
 30965 1de1 02       		.uleb128 0x2
 30966 1de2 91       		.byte	0x91
 30967 1de3 5C       		.sleb128 -36
 30968 1de4 23       		.uleb128 0x23
 30969 1de5 920B0000 		.4byte	.LASF229
 30970 1de9 01       		.byte	0x1
 30971 1dea F90D     		.2byte	0xdf9
 30972 1dec 97000000 		.4byte	0x97
 30973 1df0 02       		.uleb128 0x2
 30974 1df1 91       		.byte	0x91
 30975 1df2 74       		.sleb128 -12
 30976 1df3 23       		.uleb128 0x23
 30977 1df4 980F0000 		.4byte	.LASF319
 30978 1df8 01       		.byte	0x1
 30979 1df9 FA0D     		.2byte	0xdfa
 30980 1dfb C7000000 		.4byte	0xc7
 30981 1dff 02       		.uleb128 0x2
 30982 1e00 91       		.byte	0x91
 30983 1e01 76       		.sleb128 -10
 30984 1e02 23       		.uleb128 0x23
 30985 1e03 B7020000 		.4byte	.LASF320
 30986 1e07 01       		.byte	0x1
 30987 1e08 FB0D     		.2byte	0xdfb
 30988 1e0a AF000000 		.4byte	0xaf
 30989 1e0e 02       		.uleb128 0x2
 30990 1e0f 91       		.byte	0x91
 30991 1e10 70       		.sleb128 -16
 30992 1e11 23       		.uleb128 0x23
 30993 1e12 4B130000 		.4byte	.LASF321
 30994 1e16 01       		.byte	0x1
 30995 1e17 FB0D     		.2byte	0xdfb
 30996 1e19 AF000000 		.4byte	0xaf
 30997 1e1d 02       		.uleb128 0x2
 30998 1e1e 91       		.byte	0x91
 30999 1e1f 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 665


 31000 1e20 23       		.uleb128 0x23
 31001 1e21 50040000 		.4byte	.LASF322
 31002 1e25 01       		.byte	0x1
 31003 1e26 FC0D     		.2byte	0xdfc
 31004 1e28 97000000 		.4byte	0x97
 31005 1e2c 02       		.uleb128 0x2
 31006 1e2d 91       		.byte	0x91
 31007 1e2e 75       		.sleb128 -11
 31008 1e2f 00       		.byte	0
 31009 1e30 09       		.uleb128 0x9
 31010 1e31 97000000 		.4byte	0x97
 31011 1e35 401E0000 		.4byte	0x1e40
 31012 1e39 0A       		.uleb128 0xa
 31013 1e3a 18010000 		.4byte	0x118
 31014 1e3e 0F       		.byte	0xf
 31015 1e3f 00       		.byte	0
 31016 1e40 30       		.uleb128 0x30
 31017 1e41 DD000000 		.4byte	.LASF351
 31018 1e45 01       		.byte	0x1
 31019 1e46 190E     		.2byte	0xe19
 31020 1e48 00000000 		.4byte	.LFB102
 31021 1e4c 34000000 		.4byte	.LFE102-.LFB102
 31022 1e50 01       		.uleb128 0x1
 31023 1e51 9C       		.byte	0x9c
 31024 1e52 27       		.uleb128 0x27
 31025 1e53 B8030000 		.4byte	.LASF323
 31026 1e57 01       		.byte	0x1
 31027 1e58 270E     		.2byte	0xe27
 31028 1e5a 00000000 		.4byte	.LFB103
 31029 1e5e 20000000 		.4byte	.LFE103-.LFB103
 31030 1e62 01       		.uleb128 0x1
 31031 1e63 9C       		.byte	0x9c
 31032 1e64 781E0000 		.4byte	0x1e78
 31033 1e68 23       		.uleb128 0x23
 31034 1e69 26060000 		.4byte	.LASF228
 31035 1e6d 01       		.byte	0x1
 31036 1e6e 290E     		.2byte	0xe29
 31037 1e70 80080000 		.4byte	0x880
 31038 1e74 02       		.uleb128 0x2
 31039 1e75 91       		.byte	0x91
 31040 1e76 74       		.sleb128 -12
 31041 1e77 00       		.byte	0
 31042 1e78 27       		.uleb128 0x27
 31043 1e79 55010000 		.4byte	.LASF324
 31044 1e7d 01       		.byte	0x1
 31045 1e7e 350E     		.2byte	0xe35
 31046 1e80 00000000 		.4byte	.LFB104
 31047 1e84 A0000000 		.4byte	.LFE104-.LFB104
 31048 1e88 01       		.uleb128 0x1
 31049 1e89 9C       		.byte	0x9c
 31050 1e8a AD1E0000 		.4byte	0x1ead
 31051 1e8e 23       		.uleb128 0x23
 31052 1e8f 26060000 		.4byte	.LASF228
 31053 1e93 01       		.byte	0x1
 31054 1e94 390E     		.2byte	0xe39
 31055 1e96 37090000 		.4byte	0x937
 31056 1e9a 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 666


 31057 1e9b 91       		.byte	0x91
 31058 1e9c 70       		.sleb128 -16
 31059 1e9d 23       		.uleb128 0x23
 31060 1e9e E6110000 		.4byte	.LASF234
 31061 1ea2 01       		.byte	0x1
 31062 1ea3 3A0E     		.2byte	0xe3a
 31063 1ea5 C7000000 		.4byte	0xc7
 31064 1ea9 02       		.uleb128 0x2
 31065 1eaa 91       		.byte	0x91
 31066 1eab 6E       		.sleb128 -18
 31067 1eac 00       		.byte	0
 31068 1ead 27       		.uleb128 0x27
 31069 1eae B6100000 		.4byte	.LASF325
 31070 1eb2 01       		.byte	0x1
 31071 1eb3 4E0E     		.2byte	0xe4e
 31072 1eb5 00000000 		.4byte	.LFB105
 31073 1eb9 BC010000 		.4byte	.LFE105-.LFB105
 31074 1ebd 01       		.uleb128 0x1
 31075 1ebe 9C       		.byte	0x9c
 31076 1ebf 0F1F0000 		.4byte	0x1f0f
 31077 1ec3 23       		.uleb128 0x23
 31078 1ec4 040C0000 		.4byte	.LASF326
 31079 1ec8 01       		.byte	0x1
 31080 1ec9 510E     		.2byte	0xe51
 31081 1ecb AF000000 		.4byte	0xaf
 31082 1ecf 02       		.uleb128 0x2
 31083 1ed0 91       		.byte	0x91
 31084 1ed1 70       		.sleb128 -16
 31085 1ed2 23       		.uleb128 0x23
 31086 1ed3 130F0000 		.4byte	.LASF327
 31087 1ed7 01       		.byte	0x1
 31088 1ed8 520E     		.2byte	0xe52
 31089 1eda EB000000 		.4byte	0xeb
 31090 1ede 02       		.uleb128 0x2
 31091 1edf 91       		.byte	0x91
 31092 1ee0 6C       		.sleb128 -20
 31093 1ee1 23       		.uleb128 0x23
 31094 1ee2 920B0000 		.4byte	.LASF229
 31095 1ee6 01       		.byte	0x1
 31096 1ee7 530E     		.2byte	0xe53
 31097 1ee9 97000000 		.4byte	0x97
 31098 1eed 02       		.uleb128 0x2
 31099 1eee 91       		.byte	0x91
 31100 1eef 77       		.sleb128 -9
 31101 1ef0 23       		.uleb128 0x23
 31102 1ef1 26060000 		.4byte	.LASF228
 31103 1ef5 01       		.byte	0x1
 31104 1ef6 540E     		.2byte	0xe54
 31105 1ef8 80080000 		.4byte	0x880
 31106 1efc 02       		.uleb128 0x2
 31107 1efd 91       		.byte	0x91
 31108 1efe 68       		.sleb128 -24
 31109 1eff 23       		.uleb128 0x23
 31110 1f00 B40F0000 		.4byte	.LASF285
 31111 1f04 01       		.byte	0x1
 31112 1f05 550E     		.2byte	0xe55
 31113 1f07 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 667


 31114 1f0b 02       		.uleb128 0x2
 31115 1f0c 91       		.byte	0x91
 31116 1f0d 6B       		.sleb128 -21
 31117 1f0e 00       		.byte	0
 31118 1f0f 27       		.uleb128 0x27
 31119 1f10 08020000 		.4byte	.LASF328
 31120 1f14 01       		.byte	0x1
 31121 1f15 8F0E     		.2byte	0xe8f
 31122 1f17 00000000 		.4byte	.LFB106
 31123 1f1b 60000000 		.4byte	.LFE106-.LFB106
 31124 1f1f 01       		.uleb128 0x1
 31125 1f20 9C       		.byte	0x9c
 31126 1f21 441F0000 		.4byte	0x1f44
 31127 1f25 23       		.uleb128 0x23
 31128 1f26 26060000 		.4byte	.LASF228
 31129 1f2a 01       		.byte	0x1
 31130 1f2b 910E     		.2byte	0xe91
 31131 1f2d 37090000 		.4byte	0x937
 31132 1f31 02       		.uleb128 0x2
 31133 1f32 91       		.byte	0x91
 31134 1f33 70       		.sleb128 -16
 31135 1f34 23       		.uleb128 0x23
 31136 1f35 E6110000 		.4byte	.LASF234
 31137 1f39 01       		.byte	0x1
 31138 1f3a 920E     		.2byte	0xe92
 31139 1f3c C7000000 		.4byte	0xc7
 31140 1f40 02       		.uleb128 0x2
 31141 1f41 91       		.byte	0x91
 31142 1f42 6E       		.sleb128 -18
 31143 1f43 00       		.byte	0
 31144 1f44 27       		.uleb128 0x27
 31145 1f45 91010000 		.4byte	.LASF329
 31146 1f49 01       		.byte	0x1
 31147 1f4a A50E     		.2byte	0xea5
 31148 1f4c 00000000 		.4byte	.LFB107
 31149 1f50 98050000 		.4byte	.LFE107-.LFB107
 31150 1f54 01       		.uleb128 0x1
 31151 1f55 9C       		.byte	0x9c
 31152 1f56 D11F0000 		.4byte	0x1fd1
 31153 1f5a 23       		.uleb128 0x23
 31154 1f5b 8F130000 		.4byte	.LASF330
 31155 1f5f 01       		.byte	0x1
 31156 1f60 A80E     		.2byte	0xea8
 31157 1f62 97000000 		.4byte	0x97
 31158 1f66 02       		.uleb128 0x2
 31159 1f67 91       		.byte	0x91
 31160 1f68 6F       		.sleb128 -17
 31161 1f69 26       		.uleb128 0x26
 31162 1f6a 6300     		.ascii	"c\000"
 31163 1f6c 01       		.byte	0x1
 31164 1f6d A90E     		.2byte	0xea9
 31165 1f6f A3000000 		.4byte	0xa3
 31166 1f73 02       		.uleb128 0x2
 31167 1f74 91       		.byte	0x91
 31168 1f75 6C       		.sleb128 -20
 31169 1f76 26       		.uleb128 0x26
 31170 1f77 6B00     		.ascii	"k\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 668


 31171 1f79 01       		.byte	0x1
 31172 1f7a AA0E     		.2byte	0xeaa
 31173 1f7c 97000000 		.4byte	0x97
 31174 1f80 02       		.uleb128 0x2
 31175 1f81 91       		.byte	0x91
 31176 1f82 6B       		.sleb128 -21
 31177 1f83 23       		.uleb128 0x23
 31178 1f84 3F000000 		.4byte	.LASF331
 31179 1f88 01       		.byte	0x1
 31180 1f89 AB0E     		.2byte	0xeab
 31181 1f8b A3000000 		.4byte	0xa3
 31182 1f8f 02       		.uleb128 0x2
 31183 1f90 91       		.byte	0x91
 31184 1f91 68       		.sleb128 -24
 31185 1f92 23       		.uleb128 0x23
 31186 1f93 E6110000 		.4byte	.LASF234
 31187 1f97 01       		.byte	0x1
 31188 1f98 AC0E     		.2byte	0xeac
 31189 1f9a C7000000 		.4byte	0xc7
 31190 1f9e 02       		.uleb128 0x2
 31191 1f9f 91       		.byte	0x91
 31192 1fa0 66       		.sleb128 -26
 31193 1fa1 23       		.uleb128 0x23
 31194 1fa2 16130000 		.4byte	.LASF233
 31195 1fa6 01       		.byte	0x1
 31196 1fa7 AD0E     		.2byte	0xead
 31197 1fa9 EB000000 		.4byte	0xeb
 31198 1fad 02       		.uleb128 0x2
 31199 1fae 91       		.byte	0x91
 31200 1faf 60       		.sleb128 -32
 31201 1fb0 23       		.uleb128 0x23
 31202 1fb1 26060000 		.4byte	.LASF228
 31203 1fb5 01       		.byte	0x1
 31204 1fb6 B00E     		.2byte	0xeb0
 31205 1fb8 D11F0000 		.4byte	0x1fd1
 31206 1fbc 03       		.uleb128 0x3
 31207 1fbd 91       		.byte	0x91
 31208 1fbe 807D     		.sleb128 -384
 31209 1fc0 23       		.uleb128 0x23
 31210 1fc1 50090000 		.4byte	.LASF332
 31211 1fc5 01       		.byte	0x1
 31212 1fc6 B10E     		.2byte	0xeb1
 31213 1fc8 E21F0000 		.4byte	0x1fe2
 31214 1fcc 03       		.uleb128 0x3
 31215 1fcd 91       		.byte	0x91
 31216 1fce E07C     		.sleb128 -416
 31217 1fd0 00       		.byte	0
 31218 1fd1 09       		.uleb128 0x9
 31219 1fd2 97000000 		.4byte	0x97
 31220 1fd6 E21F0000 		.4byte	0x1fe2
 31221 1fda 24       		.uleb128 0x24
 31222 1fdb 18010000 		.4byte	0x118
 31223 1fdf 5D01     		.2byte	0x15d
 31224 1fe1 00       		.byte	0
 31225 1fe2 09       		.uleb128 0x9
 31226 1fe3 97000000 		.4byte	0x97
 31227 1fe7 F21F0000 		.4byte	0x1ff2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 669


 31228 1feb 0A       		.uleb128 0xa
 31229 1fec 18010000 		.4byte	0x118
 31230 1ff0 1F       		.byte	0x1f
 31231 1ff1 00       		.byte	0
 31232 1ff2 27       		.uleb128 0x27
 31233 1ff3 F1120000 		.4byte	.LASF333
 31234 1ff7 01       		.byte	0x1
 31235 1ff8 140F     		.2byte	0xf14
 31236 1ffa 00000000 		.4byte	.LFB108
 31237 1ffe 8C000000 		.4byte	.LFE108-.LFB108
 31238 2002 01       		.uleb128 0x1
 31239 2003 9C       		.byte	0x9c
 31240 2004 32200000 		.4byte	0x2032
 31241 2008 23       		.uleb128 0x23
 31242 2009 26060000 		.4byte	.LASF228
 31243 200d 01       		.byte	0x1
 31244 200e 170F     		.2byte	0xf17
 31245 2010 520A0000 		.4byte	0xa52
 31246 2014 02       		.uleb128 0x2
 31247 2015 91       		.byte	0x91
 31248 2016 60       		.sleb128 -32
 31249 2017 26       		.uleb128 0x26
 31250 2018 6900     		.ascii	"i\000"
 31251 201a 01       		.byte	0x1
 31252 201b 180F     		.2byte	0xf18
 31253 201d 97000000 		.4byte	0x97
 31254 2021 02       		.uleb128 0x2
 31255 2022 91       		.byte	0x91
 31256 2023 6F       		.sleb128 -17
 31257 2024 26       		.uleb128 0x26
 31258 2025 6A00     		.ascii	"j\000"
 31259 2027 01       		.byte	0x1
 31260 2028 180F     		.2byte	0xf18
 31261 202a 97000000 		.4byte	0x97
 31262 202e 02       		.uleb128 0x2
 31263 202f 91       		.byte	0x91
 31264 2030 6E       		.sleb128 -18
 31265 2031 00       		.byte	0
 31266 2032 27       		.uleb128 0x27
 31267 2033 F0100000 		.4byte	.LASF334
 31268 2037 01       		.byte	0x1
 31269 2038 2D0F     		.2byte	0xf2d
 31270 203a 00000000 		.4byte	.LFB109
 31271 203e EC000000 		.4byte	.LFE109-.LFB109
 31272 2042 01       		.uleb128 0x1
 31273 2043 9C       		.byte	0x9c
 31274 2044 90200000 		.4byte	0x2090
 31275 2048 23       		.uleb128 0x23
 31276 2049 26060000 		.4byte	.LASF228
 31277 204d 01       		.byte	0x1
 31278 204e 300F     		.2byte	0xf30
 31279 2050 90200000 		.4byte	0x2090
 31280 2054 02       		.uleb128 0x2
 31281 2055 91       		.byte	0x91
 31282 2056 54       		.sleb128 -44
 31283 2057 26       		.uleb128 0x26
 31284 2058 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 670


 31285 205a 01       		.byte	0x1
 31286 205b 310F     		.2byte	0xf31
 31287 205d 97000000 		.4byte	0x97
 31288 2061 02       		.uleb128 0x2
 31289 2062 91       		.byte	0x91
 31290 2063 6F       		.sleb128 -17
 31291 2064 26       		.uleb128 0x26
 31292 2065 6A00     		.ascii	"j\000"
 31293 2067 01       		.byte	0x1
 31294 2068 310F     		.2byte	0xf31
 31295 206a 97000000 		.4byte	0x97
 31296 206e 02       		.uleb128 0x2
 31297 206f 91       		.byte	0x91
 31298 2070 6E       		.sleb128 -18
 31299 2071 26       		.uleb128 0x26
 31300 2072 69647800 		.ascii	"idx\000"
 31301 2076 01       		.byte	0x1
 31302 2077 310F     		.2byte	0xf31
 31303 2079 97000000 		.4byte	0x97
 31304 207d 02       		.uleb128 0x2
 31305 207e 91       		.byte	0x91
 31306 207f 6D       		.sleb128 -19
 31307 2080 23       		.uleb128 0x23
 31308 2081 DA0C0000 		.4byte	.LASF235
 31309 2085 01       		.byte	0x1
 31310 2086 320F     		.2byte	0xf32
 31311 2088 A3000000 		.4byte	0xa3
 31312 208c 02       		.uleb128 0x2
 31313 208d 91       		.byte	0x91
 31314 208e 52       		.sleb128 -46
 31315 208f 00       		.byte	0
 31316 2090 09       		.uleb128 0x9
 31317 2091 97000000 		.4byte	0x97
 31318 2095 A0200000 		.4byte	0x20a0
 31319 2099 0A       		.uleb128 0xa
 31320 209a 18010000 		.4byte	0x118
 31321 209e 15       		.byte	0x15
 31322 209f 00       		.byte	0
 31323 20a0 27       		.uleb128 0x27
 31324 20a1 68030000 		.4byte	.LASF335
 31325 20a5 01       		.byte	0x1
 31326 20a6 4B0F     		.2byte	0xf4b
 31327 20a8 00000000 		.4byte	.LFB110
 31328 20ac 5C000000 		.4byte	.LFE110-.LFB110
 31329 20b0 01       		.uleb128 0x1
 31330 20b1 9C       		.byte	0x9c
 31331 20b2 D3200000 		.4byte	0x20d3
 31332 20b6 23       		.uleb128 0x23
 31333 20b7 26060000 		.4byte	.LASF228
 31334 20bb 01       		.byte	0x1
 31335 20bc 4E0F     		.2byte	0xf4e
 31336 20be EB0B0000 		.4byte	0xbeb
 31337 20c2 02       		.uleb128 0x2
 31338 20c3 91       		.byte	0x91
 31339 20c4 68       		.sleb128 -24
 31340 20c5 26       		.uleb128 0x26
 31341 20c6 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 671


 31342 20c8 01       		.byte	0x1
 31343 20c9 4F0F     		.2byte	0xf4f
 31344 20cb 97000000 		.4byte	0x97
 31345 20cf 02       		.uleb128 0x2
 31346 20d0 91       		.byte	0x91
 31347 20d1 77       		.sleb128 -9
 31348 20d2 00       		.byte	0
 31349 20d3 27       		.uleb128 0x27
 31350 20d4 95030000 		.4byte	.LASF336
 31351 20d8 01       		.byte	0x1
 31352 20d9 620F     		.2byte	0xf62
 31353 20db 00000000 		.4byte	.LFB111
 31354 20df C0000000 		.4byte	.LFE111-.LFB111
 31355 20e3 01       		.uleb128 0x1
 31356 20e4 9C       		.byte	0x9c
 31357 20e5 24210000 		.4byte	0x2124
 31358 20e9 23       		.uleb128 0x23
 31359 20ea 26060000 		.4byte	.LASF228
 31360 20ee 01       		.byte	0x1
 31361 20ef 650F     		.2byte	0xf65
 31362 20f1 24210000 		.4byte	0x2124
 31363 20f5 02       		.uleb128 0x2
 31364 20f6 91       		.byte	0x91
 31365 20f7 54       		.sleb128 -44
 31366 20f8 26       		.uleb128 0x26
 31367 20f9 6900     		.ascii	"i\000"
 31368 20fb 01       		.byte	0x1
 31369 20fc 660F     		.2byte	0xf66
 31370 20fe 97000000 		.4byte	0x97
 31371 2102 02       		.uleb128 0x2
 31372 2103 91       		.byte	0x91
 31373 2104 6F       		.sleb128 -17
 31374 2105 26       		.uleb128 0x26
 31375 2106 69647800 		.ascii	"idx\000"
 31376 210a 01       		.byte	0x1
 31377 210b 660F     		.2byte	0xf66
 31378 210d 97000000 		.4byte	0x97
 31379 2111 02       		.uleb128 0x2
 31380 2112 91       		.byte	0x91
 31381 2113 6E       		.sleb128 -18
 31382 2114 23       		.uleb128 0x23
 31383 2115 E6110000 		.4byte	.LASF234
 31384 2119 01       		.byte	0x1
 31385 211a 670F     		.2byte	0xf67
 31386 211c C7000000 		.4byte	0xc7
 31387 2120 02       		.uleb128 0x2
 31388 2121 91       		.byte	0x91
 31389 2122 52       		.sleb128 -46
 31390 2123 00       		.byte	0
 31391 2124 09       		.uleb128 0x9
 31392 2125 97000000 		.4byte	0x97
 31393 2129 34210000 		.4byte	0x2134
 31394 212d 0A       		.uleb128 0xa
 31395 212e 18010000 		.4byte	0x118
 31396 2132 19       		.byte	0x19
 31397 2133 00       		.byte	0
 31398 2134 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 672


 31399 2135 12030000 		.4byte	.LASF337
 31400 2139 01       		.byte	0x1
 31401 213a 7D0F     		.2byte	0xf7d
 31402 213c 00000000 		.4byte	.LFB112
 31403 2140 54010000 		.4byte	.LFE112-.LFB112
 31404 2144 01       		.uleb128 0x1
 31405 2145 9C       		.byte	0x9c
 31406 2146 89210000 		.4byte	0x2189
 31407 214a 25       		.uleb128 0x25
 31408 214b 71070000 		.4byte	.LASF338
 31409 214f 01       		.byte	0x1
 31410 2150 7D0F     		.2byte	0xf7d
 31411 2152 A3000000 		.4byte	0xa3
 31412 2156 04       		.uleb128 0x4
 31413 2157 91       		.byte	0x91
 31414 2158 9EE37E   		.sleb128 -20066
 31415 215b 26       		.uleb128 0x26
 31416 215c 6900     		.ascii	"i\000"
 31417 215e 01       		.byte	0x1
 31418 215f 7F0F     		.2byte	0xf7f
 31419 2161 97000000 		.4byte	0x97
 31420 2165 02       		.uleb128 0x2
 31421 2166 91       		.byte	0x91
 31422 2167 77       		.sleb128 -9
 31423 2168 23       		.uleb128 0x23
 31424 2169 35040000 		.4byte	.LASF339
 31425 216d 01       		.byte	0x1
 31426 216e 800F     		.2byte	0xf80
 31427 2170 67100000 		.4byte	0x1067
 31428 2174 02       		.uleb128 0x2
 31429 2175 91       		.byte	0x91
 31430 2176 44       		.sleb128 -60
 31431 2177 23       		.uleb128 0x23
 31432 2178 A0080000 		.4byte	.LASF217
 31433 217c 01       		.byte	0x1
 31434 217d 810F     		.2byte	0xf81
 31435 217f 8F0E0000 		.4byte	0xe8f
 31436 2183 04       		.uleb128 0x4
 31437 2184 91       		.byte	0x91
 31438 2185 A4E37E   		.sleb128 -20060
 31439 2188 00       		.byte	0
 31440 2189 2B       		.uleb128 0x2b
 31441 218a EE000000 		.4byte	.LASF340
 31442 218e 01       		.byte	0x1
 31443 218f 9E0F     		.2byte	0xf9e
 31444 2191 00000000 		.4byte	.LFB113
 31445 2195 12000000 		.4byte	.LFE113-.LFB113
 31446 2199 01       		.uleb128 0x1
 31447 219a 9C       		.byte	0x9c
 31448 219b AF210000 		.4byte	0x21af
 31449 219f 25       		.uleb128 0x25
 31450 21a0 C9060000 		.4byte	.LASF341
 31451 21a4 01       		.byte	0x1
 31452 21a5 9E0F     		.2byte	0xf9e
 31453 21a7 73000000 		.4byte	0x73
 31454 21ab 02       		.uleb128 0x2
 31455 21ac 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 673


 31456 21ad 74       		.sleb128 -12
 31457 21ae 00       		.byte	0
 31458 21af 31       		.uleb128 0x31
 31459 21b0 570C0000 		.4byte	.LASF342
 31460 21b4 01       		.byte	0x1
 31461 21b5 EC0F     		.2byte	0xfec
 31462 21b7 97000000 		.4byte	0x97
 31463 21bb 00000000 		.4byte	.LFB114
 31464 21bf 64010000 		.4byte	.LFE114-.LFB114
 31465 21c3 01       		.uleb128 0x1
 31466 21c4 9C       		.byte	0x9c
 31467 21c5 2A220000 		.4byte	0x222a
 31468 21c9 23       		.uleb128 0x23
 31469 21ca 300E0000 		.4byte	.LASF343
 31470 21ce 01       		.byte	0x1
 31471 21cf EE0F     		.2byte	0xfee
 31472 21d1 97000000 		.4byte	0x97
 31473 21d5 05       		.uleb128 0x5
 31474 21d6 03       		.byte	0x3
 31475 21d7 08000000 		.4byte	fsm_state.11505
 31476 21db 26       		.uleb128 0x26
 31477 21dc 636E7400 		.ascii	"cnt\000"
 31478 21e0 01       		.byte	0x1
 31479 21e1 EF0F     		.2byte	0xfef
 31480 21e3 D3000000 		.4byte	0xd3
 31481 21e7 05       		.uleb128 0x5
 31482 21e8 03       		.byte	0x3
 31483 21e9 0C000000 		.4byte	cnt.11506
 31484 21ed 23       		.uleb128 0x23
 31485 21ee 22040000 		.4byte	.LASF344
 31486 21f2 01       		.byte	0x1
 31487 21f3 F00F     		.2byte	0xff0
 31488 21f5 D3000000 		.4byte	0xd3
 31489 21f9 02       		.uleb128 0x2
 31490 21fa 91       		.byte	0x91
 31491 21fb 74       		.sleb128 -12
 31492 21fc 23       		.uleb128 0x23
 31493 21fd 790B0000 		.4byte	.LASF345
 31494 2201 01       		.byte	0x1
 31495 2202 F00F     		.2byte	0xff0
 31496 2204 D3000000 		.4byte	0xd3
 31497 2208 02       		.uleb128 0x2
 31498 2209 91       		.byte	0x91
 31499 220a 70       		.sleb128 -16
 31500 220b 23       		.uleb128 0x23
 31501 220c 8A000000 		.4byte	.LASF346
 31502 2210 01       		.byte	0x1
 31503 2211 F10F     		.2byte	0xff1
 31504 2213 D3000000 		.4byte	0xd3
 31505 2217 02       		.uleb128 0x2
 31506 2218 91       		.byte	0x91
 31507 2219 6C       		.sleb128 -20
 31508 221a 23       		.uleb128 0x23
 31509 221b 96000000 		.4byte	.LASF347
 31510 221f 01       		.byte	0x1
 31511 2220 F10F     		.2byte	0xff1
 31512 2222 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 674


 31513 2226 02       		.uleb128 0x2
 31514 2227 91       		.byte	0x91
 31515 2228 68       		.sleb128 -24
 31516 2229 00       		.byte	0
 31517 222a 2B       		.uleb128 0x2b
 31518 222b D8070000 		.4byte	.LASF348
 31519 222f 01       		.byte	0x1
 31520 2230 3E10     		.2byte	0x103e
 31521 2232 00000000 		.4byte	.LFB115
 31522 2236 12000000 		.4byte	.LFE115-.LFB115
 31523 223a 01       		.uleb128 0x1
 31524 223b 9C       		.byte	0x9c
 31525 223c 50220000 		.4byte	0x2250
 31526 2240 25       		.uleb128 0x25
 31527 2241 C9060000 		.4byte	.LASF341
 31528 2245 01       		.byte	0x1
 31529 2246 3E10     		.2byte	0x103e
 31530 2248 73000000 		.4byte	0x73
 31531 224c 02       		.uleb128 0x2
 31532 224d 91       		.byte	0x91
 31533 224e 74       		.sleb128 -12
 31534 224f 00       		.byte	0
 31535 2250 2B       		.uleb128 0x2b
 31536 2251 C40D0000 		.4byte	.LASF349
 31537 2255 01       		.byte	0x1
 31538 2256 8A10     		.2byte	0x108a
 31539 2258 00000000 		.4byte	.LFB116
 31540 225c 1A000000 		.4byte	.LFE116-.LFB116
 31541 2260 01       		.uleb128 0x1
 31542 2261 9C       		.byte	0x9c
 31543 2262 85220000 		.4byte	0x2285
 31544 2266 25       		.uleb128 0x25
 31545 2267 F0020000 		.4byte	.LASF350
 31546 226b 01       		.byte	0x1
 31547 226c 8A10     		.2byte	0x108a
 31548 226e 97000000 		.4byte	0x97
 31549 2272 02       		.uleb128 0x2
 31550 2273 91       		.byte	0x91
 31551 2274 77       		.sleb128 -9
 31552 2275 25       		.uleb128 0x25
 31553 2276 FF0A0000 		.4byte	.LASF185
 31554 227a 01       		.byte	0x1
 31555 227b 8A10     		.2byte	0x108a
 31556 227d 97000000 		.4byte	0x97
 31557 2281 02       		.uleb128 0x2
 31558 2282 91       		.byte	0x91
 31559 2283 76       		.sleb128 -10
 31560 2284 00       		.byte	0
 31561 2285 32       		.uleb128 0x32
 31562 2286 A2000000 		.4byte	.LASF352
 31563 228a 01       		.byte	0x1
 31564 228b B410     		.2byte	0x10b4
 31565 228d 00000000 		.4byte	.LFB117
 31566 2291 0C000000 		.4byte	.LFE117-.LFB117
 31567 2295 01       		.uleb128 0x1
 31568 2296 9C       		.byte	0x9c
 31569 2297 32       		.uleb128 0x32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 675


 31570 2298 55060000 		.4byte	.LASF353
 31571 229c 01       		.byte	0x1
 31572 229d CA10     		.2byte	0x10ca
 31573 229f 00000000 		.4byte	.LFB118
 31574 22a3 0C000000 		.4byte	.LFE118-.LFB118
 31575 22a7 01       		.uleb128 0x1
 31576 22a8 9C       		.byte	0x9c
 31577 22a9 33       		.uleb128 0x33
 31578 22aa 23120000 		.4byte	.LASF354
 31579 22ae 09       		.byte	0x9
 31580 22af 1207     		.2byte	0x712
 31581 22b1 B5220000 		.4byte	0x22b5
 31582 22b5 06       		.uleb128 0x6
 31583 22b6 81000000 		.4byte	0x81
 31584 22ba 09       		.uleb128 0x9
 31585 22bb 22030000 		.4byte	0x322
 31586 22bf CA220000 		.4byte	0x22ca
 31587 22c3 0A       		.uleb128 0xa
 31588 22c4 18010000 		.4byte	0x118
 31589 22c8 01       		.byte	0x1
 31590 22c9 00       		.byte	0
 31591 22ca 33       		.uleb128 0x33
 31592 22cb E9130000 		.4byte	.LASF355
 31593 22cf 08       		.byte	0x8
 31594 22d0 1A02     		.2byte	0x21a
 31595 22d2 BA220000 		.4byte	0x22ba
 31596 22d6 33       		.uleb128 0x33
 31597 22d7 9A040000 		.4byte	.LASF356
 31598 22db 08       		.byte	0x8
 31599 22dc 1A02     		.2byte	0x21a
 31600 22de BA220000 		.4byte	0x22ba
 31601 22e2 33       		.uleb128 0x33
 31602 22e3 7D0D0000 		.4byte	.LASF357
 31603 22e7 08       		.byte	0x8
 31604 22e8 1A02     		.2byte	0x21a
 31605 22ea BA220000 		.4byte	0x22ba
 31606 22ee 09       		.uleb128 0x9
 31607 22ef 5F030000 		.4byte	0x35f
 31608 22f3 FE220000 		.4byte	0x22fe
 31609 22f7 0A       		.uleb128 0xa
 31610 22f8 18010000 		.4byte	0x118
 31611 22fc 01       		.byte	0x1
 31612 22fd 00       		.byte	0
 31613 22fe 33       		.uleb128 0x33
 31614 22ff D9060000 		.4byte	.LASF358
 31615 2303 08       		.byte	0x8
 31616 2304 1B02     		.2byte	0x21b
 31617 2306 EE220000 		.4byte	0x22ee
 31618 230a 33       		.uleb128 0x33
 31619 230b 3C140000 		.4byte	.LASF359
 31620 230f 08       		.byte	0x8
 31621 2310 1B02     		.2byte	0x21b
 31622 2312 EE220000 		.4byte	0x22ee
 31623 2316 33       		.uleb128 0x33
 31624 2317 B3130000 		.4byte	.LASF360
 31625 231b 08       		.byte	0x8
 31626 231c 1C02     		.2byte	0x21c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 676


 31627 231e E0030000 		.4byte	0x3e0
 31628 2322 33       		.uleb128 0x33
 31629 2323 E2100000 		.4byte	.LASF361
 31630 2327 08       		.byte	0x8
 31631 2328 1C02     		.2byte	0x21c
 31632 232a E0030000 		.4byte	0x3e0
 31633 232e 33       		.uleb128 0x33
 31634 232f 98100000 		.4byte	.LASF362
 31635 2333 08       		.byte	0x8
 31636 2334 1D02     		.2byte	0x21d
 31637 2336 31040000 		.4byte	0x431
 31638 233a 33       		.uleb128 0x33
 31639 233b BD000000 		.4byte	.LASF363
 31640 233f 08       		.byte	0x8
 31641 2340 1E02     		.2byte	0x21e
 31642 2342 4A040000 		.4byte	0x44a
 31643 2346 33       		.uleb128 0x33
 31644 2347 C7100000 		.4byte	.LASF364
 31645 234b 08       		.byte	0x8
 31646 234c 1F02     		.2byte	0x21f
 31647 234e 060B0000 		.4byte	0xb06
 31648 2352 33       		.uleb128 0x33
 31649 2353 5B0B0000 		.4byte	.LASF365
 31650 2357 08       		.byte	0x8
 31651 2358 1F02     		.2byte	0x21f
 31652 235a 060B0000 		.4byte	0xb06
 31653 235e 33       		.uleb128 0x33
 31654 235f 4D0A0000 		.4byte	.LASF366
 31655 2363 08       		.byte	0x8
 31656 2364 2002     		.2byte	0x220
 31657 2366 B70C0000 		.4byte	0xcb7
 31658 236a 33       		.uleb128 0x33
 31659 236b CD020000 		.4byte	.LASF367
 31660 236f 08       		.byte	0x8
 31661 2370 2502     		.2byte	0x225
 31662 2372 A3000000 		.4byte	0xa3
 31663 2376 33       		.uleb128 0x33
 31664 2377 C30E0000 		.4byte	.LASF368
 31665 237b 08       		.byte	0x8
 31666 237c 2602     		.2byte	0x226
 31667 237e A3000000 		.4byte	0xa3
 31668 2382 33       		.uleb128 0x33
 31669 2383 F50E0000 		.4byte	.LASF369
 31670 2387 08       		.byte	0x8
 31671 2388 2902     		.2byte	0x229
 31672 238a 11040000 		.4byte	0x411
 31673 238e 33       		.uleb128 0x33
 31674 238f BA120000 		.4byte	.LASF370
 31675 2393 08       		.byte	0x8
 31676 2394 2A02     		.2byte	0x22a
 31677 2396 80080000 		.4byte	0x880
 31678 239a 33       		.uleb128 0x33
 31679 239b 43120000 		.4byte	.LASF371
 31680 239f 08       		.byte	0x8
 31681 23a0 2D02     		.2byte	0x22d
 31682 23a2 11040000 		.4byte	0x411
 31683 23a6 33       		.uleb128 0x33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 677


 31684 23a7 080B0000 		.4byte	.LASF372
 31685 23ab 08       		.byte	0x8
 31686 23ac 3602     		.2byte	0x236
 31687 23ae 97000000 		.4byte	0x97
 31688 23b2 33       		.uleb128 0x33
 31689 23b3 62040000 		.4byte	.LASF373
 31690 23b7 08       		.byte	0x8
 31691 23b8 3802     		.2byte	0x238
 31692 23ba 97000000 		.4byte	0x97
 31693 23be 33       		.uleb128 0x33
 31694 23bf A20A0000 		.4byte	.LASF374
 31695 23c3 08       		.byte	0x8
 31696 23c4 3F02     		.2byte	0x23f
 31697 23c6 97000000 		.4byte	0x97
 31698 23ca 33       		.uleb128 0x33
 31699 23cb C8070000 		.4byte	.LASF375
 31700 23cf 08       		.byte	0x8
 31701 23d0 4002     		.2byte	0x240
 31702 23d2 97000000 		.4byte	0x97
 31703 23d6 09       		.uleb128 0x9
 31704 23d7 C7000000 		.4byte	0xc7
 31705 23db E6230000 		.4byte	0x23e6
 31706 23df 0A       		.uleb128 0xa
 31707 23e0 18010000 		.4byte	0x118
 31708 23e4 0B       		.byte	0xb
 31709 23e5 00       		.byte	0
 31710 23e6 33       		.uleb128 0x33
 31711 23e7 5A040000 		.4byte	.LASF376
 31712 23eb 08       		.byte	0x8
 31713 23ec 4302     		.2byte	0x243
 31714 23ee D6230000 		.4byte	0x23d6
 31715 23f2 33       		.uleb128 0x33
 31716 23f3 F5130000 		.4byte	.LASF377
 31717 23f7 08       		.byte	0x8
 31718 23f8 4402     		.2byte	0x244
 31719 23fa 97000000 		.4byte	0x97
 31720 23fe 09       		.uleb128 0x9
 31721 23ff AF000000 		.4byte	0xaf
 31722 2403 0E240000 		.4byte	0x240e
 31723 2407 0A       		.uleb128 0xa
 31724 2408 18010000 		.4byte	0x118
 31725 240c 04       		.byte	0x4
 31726 240d 00       		.byte	0
 31727 240e 33       		.uleb128 0x33
 31728 240f 07070000 		.4byte	.LASF378
 31729 2413 08       		.byte	0x8
 31730 2414 4A02     		.2byte	0x24a
 31731 2416 FE230000 		.4byte	0x23fe
 31732 241a 33       		.uleb128 0x33
 31733 241b C30F0000 		.4byte	.LASF379
 31734 241f 08       		.byte	0x8
 31735 2420 4B02     		.2byte	0x24b
 31736 2422 80080000 		.4byte	0x880
 31737 2426 09       		.uleb128 0x9
 31738 2427 A3000000 		.4byte	0xa3
 31739 242b 3C240000 		.4byte	0x243c
 31740 242f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 678


 31741 2430 18010000 		.4byte	0x118
 31742 2434 01       		.byte	0x1
 31743 2435 0A       		.uleb128 0xa
 31744 2436 18010000 		.4byte	0x118
 31745 243a 04       		.byte	0x4
 31746 243b 00       		.byte	0
 31747 243c 33       		.uleb128 0x33
 31748 243d E3120000 		.4byte	.LASF380
 31749 2441 08       		.byte	0x8
 31750 2442 4C02     		.2byte	0x24c
 31751 2444 26240000 		.4byte	0x2426
 31752 2448 09       		.uleb128 0x9
 31753 2449 97000000 		.4byte	0x97
 31754 244d 5E240000 		.4byte	0x245e
 31755 2451 0A       		.uleb128 0xa
 31756 2452 18010000 		.4byte	0x118
 31757 2456 01       		.byte	0x1
 31758 2457 0A       		.uleb128 0xa
 31759 2458 18010000 		.4byte	0x118
 31760 245c 04       		.byte	0x4
 31761 245d 00       		.byte	0
 31762 245e 33       		.uleb128 0x33
 31763 245f E0060000 		.4byte	.LASF381
 31764 2463 08       		.byte	0x8
 31765 2464 4D02     		.2byte	0x24d
 31766 2466 48240000 		.4byte	0x2448
 31767 246a 33       		.uleb128 0x33
 31768 246b 3C060000 		.4byte	.LASF382
 31769 246f 08       		.byte	0x8
 31770 2470 5302     		.2byte	0x253
 31771 2472 1C030000 		.4byte	0x31c
 31772 2476 33       		.uleb128 0x33
 31773 2477 7B0F0000 		.4byte	.LASF383
 31774 247b 08       		.byte	0x8
 31775 247c 5402     		.2byte	0x254
 31776 247e 57160000 		.4byte	0x1657
 31777 2482 33       		.uleb128 0x33
 31778 2483 A5030000 		.4byte	.LASF384
 31779 2487 08       		.byte	0x8
 31780 2488 5502     		.2byte	0x255
 31781 248a 57160000 		.4byte	0x1657
 31782 248e 33       		.uleb128 0x33
 31783 248f 6D110000 		.4byte	.LASF385
 31784 2493 08       		.byte	0x8
 31785 2494 5802     		.2byte	0x258
 31786 2496 97000000 		.4byte	0x97
 31787 249a 33       		.uleb128 0x33
 31788 249b 20130000 		.4byte	.LASF386
 31789 249f 08       		.byte	0x8
 31790 24a0 5902     		.2byte	0x259
 31791 24a2 F1070000 		.4byte	0x7f1
 31792 24a6 33       		.uleb128 0x33
 31793 24a7 14120000 		.4byte	.LASF387
 31794 24ab 08       		.byte	0x8
 31795 24ac 5A02     		.2byte	0x25a
 31796 24ae 73000000 		.4byte	0x73
 31797 24b2 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 679


 31798 24b3 73000000 		.4byte	0x73
 31799 24b7 C2240000 		.4byte	0x24c2
 31800 24bb 0A       		.uleb128 0xa
 31801 24bc 18010000 		.4byte	0x118
 31802 24c0 04       		.byte	0x4
 31803 24c1 00       		.byte	0
 31804 24c2 33       		.uleb128 0x33
 31805 24c3 AD0C0000 		.4byte	.LASF388
 31806 24c7 08       		.byte	0x8
 31807 24c8 5B02     		.2byte	0x25b
 31808 24ca B2240000 		.4byte	0x24b2
 31809 24ce 09       		.uleb128 0x9
 31810 24cf 3B0C0000 		.4byte	0xc3b
 31811 24d3 DE240000 		.4byte	0x24de
 31812 24d7 0A       		.uleb128 0xa
 31813 24d8 18010000 		.4byte	0x118
 31814 24dc 04       		.byte	0x4
 31815 24dd 00       		.byte	0
 31816 24de 33       		.uleb128 0x33
 31817 24df 7C050000 		.4byte	.LASF389
 31818 24e3 08       		.byte	0x8
 31819 24e4 5C02     		.2byte	0x25c
 31820 24e6 CE240000 		.4byte	0x24ce
 31821 24ea 09       		.uleb128 0x9
 31822 24eb 97000000 		.4byte	0x97
 31823 24ef 00250000 		.4byte	0x2500
 31824 24f3 0A       		.uleb128 0xa
 31825 24f4 18010000 		.4byte	0x118
 31826 24f8 04       		.byte	0x4
 31827 24f9 0A       		.uleb128 0xa
 31828 24fa 18010000 		.4byte	0x118
 31829 24fe 02       		.byte	0x2
 31830 24ff 00       		.byte	0
 31831 2500 33       		.uleb128 0x33
 31832 2501 C50B0000 		.4byte	.LASF390
 31833 2505 08       		.byte	0x8
 31834 2506 6002     		.2byte	0x260
 31835 2508 EA240000 		.4byte	0x24ea
 31836 250c 33       		.uleb128 0x33
 31837 250d 1B140000 		.4byte	.LASF391
 31838 2511 08       		.byte	0x8
 31839 2512 6502     		.2byte	0x265
 31840 2514 97000000 		.4byte	0x97
 31841 2518 34       		.uleb128 0x34
 31842 2519 F0110000 		.4byte	.LASF392
 31843 251d 01       		.byte	0x1
 31844 251e 33       		.byte	0x33
 31845 251f 29250000 		.4byte	0x2529
 31846 2523 05       		.uleb128 0x5
 31847 2524 03       		.byte	0x3
 31848 2525 00000000 		.4byte	EEPROM_ADDR
 31849 2529 07       		.uleb128 0x7
 31850 252a 04       		.byte	0x4
 31851 252b 00010000 		.4byte	0x100
 31852 252f 00       		.byte	0
 31853              		.section	.debug_abbrev,"",%progbits
 31854              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 680


 31855 0000 01       		.uleb128 0x1
 31856 0001 11       		.uleb128 0x11
 31857 0002 01       		.byte	0x1
 31858 0003 25       		.uleb128 0x25
 31859 0004 0E       		.uleb128 0xe
 31860 0005 13       		.uleb128 0x13
 31861 0006 0B       		.uleb128 0xb
 31862 0007 03       		.uleb128 0x3
 31863 0008 0E       		.uleb128 0xe
 31864 0009 1B       		.uleb128 0x1b
 31865 000a 0E       		.uleb128 0xe
 31866 000b 55       		.uleb128 0x55
 31867 000c 17       		.uleb128 0x17
 31868 000d 11       		.uleb128 0x11
 31869 000e 01       		.uleb128 0x1
 31870 000f 10       		.uleb128 0x10
 31871 0010 17       		.uleb128 0x17
 31872 0011 00       		.byte	0
 31873 0012 00       		.byte	0
 31874 0013 02       		.uleb128 0x2
 31875 0014 24       		.uleb128 0x24
 31876 0015 00       		.byte	0
 31877 0016 0B       		.uleb128 0xb
 31878 0017 0B       		.uleb128 0xb
 31879 0018 3E       		.uleb128 0x3e
 31880 0019 0B       		.uleb128 0xb
 31881 001a 03       		.uleb128 0x3
 31882 001b 0E       		.uleb128 0xe
 31883 001c 00       		.byte	0
 31884 001d 00       		.byte	0
 31885 001e 03       		.uleb128 0x3
 31886 001f 16       		.uleb128 0x16
 31887 0020 00       		.byte	0
 31888 0021 03       		.uleb128 0x3
 31889 0022 0E       		.uleb128 0xe
 31890 0023 3A       		.uleb128 0x3a
 31891 0024 0B       		.uleb128 0xb
 31892 0025 3B       		.uleb128 0x3b
 31893 0026 0B       		.uleb128 0xb
 31894 0027 49       		.uleb128 0x49
 31895 0028 13       		.uleb128 0x13
 31896 0029 00       		.byte	0
 31897 002a 00       		.byte	0
 31898 002b 04       		.uleb128 0x4
 31899 002c 24       		.uleb128 0x24
 31900 002d 00       		.byte	0
 31901 002e 0B       		.uleb128 0xb
 31902 002f 0B       		.uleb128 0xb
 31903 0030 3E       		.uleb128 0x3e
 31904 0031 0B       		.uleb128 0xb
 31905 0032 03       		.uleb128 0x3
 31906 0033 08       		.uleb128 0x8
 31907 0034 00       		.byte	0
 31908 0035 00       		.byte	0
 31909 0036 05       		.uleb128 0x5
 31910 0037 16       		.uleb128 0x16
 31911 0038 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 681


 31912 0039 03       		.uleb128 0x3
 31913 003a 0E       		.uleb128 0xe
 31914 003b 3A       		.uleb128 0x3a
 31915 003c 0B       		.uleb128 0xb
 31916 003d 3B       		.uleb128 0x3b
 31917 003e 05       		.uleb128 0x5
 31918 003f 49       		.uleb128 0x49
 31919 0040 13       		.uleb128 0x13
 31920 0041 00       		.byte	0
 31921 0042 00       		.byte	0
 31922 0043 06       		.uleb128 0x6
 31923 0044 35       		.uleb128 0x35
 31924 0045 00       		.byte	0
 31925 0046 49       		.uleb128 0x49
 31926 0047 13       		.uleb128 0x13
 31927 0048 00       		.byte	0
 31928 0049 00       		.byte	0
 31929 004a 07       		.uleb128 0x7
 31930 004b 0F       		.uleb128 0xf
 31931 004c 00       		.byte	0
 31932 004d 0B       		.uleb128 0xb
 31933 004e 0B       		.uleb128 0xb
 31934 004f 49       		.uleb128 0x49
 31935 0050 13       		.uleb128 0x13
 31936 0051 00       		.byte	0
 31937 0052 00       		.byte	0
 31938 0053 08       		.uleb128 0x8
 31939 0054 26       		.uleb128 0x26
 31940 0055 00       		.byte	0
 31941 0056 49       		.uleb128 0x49
 31942 0057 13       		.uleb128 0x13
 31943 0058 00       		.byte	0
 31944 0059 00       		.byte	0
 31945 005a 09       		.uleb128 0x9
 31946 005b 01       		.uleb128 0x1
 31947 005c 01       		.byte	0x1
 31948 005d 49       		.uleb128 0x49
 31949 005e 13       		.uleb128 0x13
 31950 005f 01       		.uleb128 0x1
 31951 0060 13       		.uleb128 0x13
 31952 0061 00       		.byte	0
 31953 0062 00       		.byte	0
 31954 0063 0A       		.uleb128 0xa
 31955 0064 21       		.uleb128 0x21
 31956 0065 00       		.byte	0
 31957 0066 49       		.uleb128 0x49
 31958 0067 13       		.uleb128 0x13
 31959 0068 2F       		.uleb128 0x2f
 31960 0069 0B       		.uleb128 0xb
 31961 006a 00       		.byte	0
 31962 006b 00       		.byte	0
 31963 006c 0B       		.uleb128 0xb
 31964 006d 04       		.uleb128 0x4
 31965 006e 01       		.byte	0x1
 31966 006f 03       		.uleb128 0x3
 31967 0070 0E       		.uleb128 0xe
 31968 0071 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 682


 31969 0072 0B       		.uleb128 0xb
 31970 0073 49       		.uleb128 0x49
 31971 0074 13       		.uleb128 0x13
 31972 0075 3A       		.uleb128 0x3a
 31973 0076 0B       		.uleb128 0xb
 31974 0077 3B       		.uleb128 0x3b
 31975 0078 0B       		.uleb128 0xb
 31976 0079 01       		.uleb128 0x1
 31977 007a 13       		.uleb128 0x13
 31978 007b 00       		.byte	0
 31979 007c 00       		.byte	0
 31980 007d 0C       		.uleb128 0xc
 31981 007e 28       		.uleb128 0x28
 31982 007f 00       		.byte	0
 31983 0080 03       		.uleb128 0x3
 31984 0081 0E       		.uleb128 0xe
 31985 0082 1C       		.uleb128 0x1c
 31986 0083 0B       		.uleb128 0xb
 31987 0084 00       		.byte	0
 31988 0085 00       		.byte	0
 31989 0086 0D       		.uleb128 0xd
 31990 0087 13       		.uleb128 0x13
 31991 0088 00       		.byte	0
 31992 0089 03       		.uleb128 0x3
 31993 008a 0E       		.uleb128 0xe
 31994 008b 3C       		.uleb128 0x3c
 31995 008c 19       		.uleb128 0x19
 31996 008d 00       		.byte	0
 31997 008e 00       		.byte	0
 31998 008f 0E       		.uleb128 0xe
 31999 0090 13       		.uleb128 0x13
 32000 0091 01       		.byte	0x1
 32001 0092 03       		.uleb128 0x3
 32002 0093 0E       		.uleb128 0xe
 32003 0094 0B       		.uleb128 0xb
 32004 0095 0B       		.uleb128 0xb
 32005 0096 3A       		.uleb128 0x3a
 32006 0097 0B       		.uleb128 0xb
 32007 0098 3B       		.uleb128 0x3b
 32008 0099 0B       		.uleb128 0xb
 32009 009a 01       		.uleb128 0x1
 32010 009b 13       		.uleb128 0x13
 32011 009c 00       		.byte	0
 32012 009d 00       		.byte	0
 32013 009e 0F       		.uleb128 0xf
 32014 009f 0D       		.uleb128 0xd
 32015 00a0 00       		.byte	0
 32016 00a1 03       		.uleb128 0x3
 32017 00a2 08       		.uleb128 0x8
 32018 00a3 3A       		.uleb128 0x3a
 32019 00a4 0B       		.uleb128 0xb
 32020 00a5 3B       		.uleb128 0x3b
 32021 00a6 0B       		.uleb128 0xb
 32022 00a7 49       		.uleb128 0x49
 32023 00a8 13       		.uleb128 0x13
 32024 00a9 38       		.uleb128 0x38
 32025 00aa 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 683


 32026 00ab 00       		.byte	0
 32027 00ac 00       		.byte	0
 32028 00ad 10       		.uleb128 0x10
 32029 00ae 0D       		.uleb128 0xd
 32030 00af 00       		.byte	0
 32031 00b0 03       		.uleb128 0x3
 32032 00b1 0E       		.uleb128 0xe
 32033 00b2 3A       		.uleb128 0x3a
 32034 00b3 0B       		.uleb128 0xb
 32035 00b4 3B       		.uleb128 0x3b
 32036 00b5 0B       		.uleb128 0xb
 32037 00b6 49       		.uleb128 0x49
 32038 00b7 13       		.uleb128 0x13
 32039 00b8 38       		.uleb128 0x38
 32040 00b9 0B       		.uleb128 0xb
 32041 00ba 00       		.byte	0
 32042 00bb 00       		.byte	0
 32043 00bc 11       		.uleb128 0x11
 32044 00bd 13       		.uleb128 0x13
 32045 00be 01       		.byte	0x1
 32046 00bf 03       		.uleb128 0x3
 32047 00c0 0E       		.uleb128 0xe
 32048 00c1 0B       		.uleb128 0xb
 32049 00c2 0B       		.uleb128 0xb
 32050 00c3 3A       		.uleb128 0x3a
 32051 00c4 0B       		.uleb128 0xb
 32052 00c5 3B       		.uleb128 0x3b
 32053 00c6 05       		.uleb128 0x5
 32054 00c7 01       		.uleb128 0x1
 32055 00c8 13       		.uleb128 0x13
 32056 00c9 00       		.byte	0
 32057 00ca 00       		.byte	0
 32058 00cb 12       		.uleb128 0x12
 32059 00cc 0D       		.uleb128 0xd
 32060 00cd 00       		.byte	0
 32061 00ce 03       		.uleb128 0x3
 32062 00cf 0E       		.uleb128 0xe
 32063 00d0 3A       		.uleb128 0x3a
 32064 00d1 0B       		.uleb128 0xb
 32065 00d2 3B       		.uleb128 0x3b
 32066 00d3 05       		.uleb128 0x5
 32067 00d4 49       		.uleb128 0x49
 32068 00d5 13       		.uleb128 0x13
 32069 00d6 38       		.uleb128 0x38
 32070 00d7 0B       		.uleb128 0xb
 32071 00d8 00       		.byte	0
 32072 00d9 00       		.byte	0
 32073 00da 13       		.uleb128 0x13
 32074 00db 0D       		.uleb128 0xd
 32075 00dc 00       		.byte	0
 32076 00dd 03       		.uleb128 0x3
 32077 00de 08       		.uleb128 0x8
 32078 00df 3A       		.uleb128 0x3a
 32079 00e0 0B       		.uleb128 0xb
 32080 00e1 3B       		.uleb128 0x3b
 32081 00e2 05       		.uleb128 0x5
 32082 00e3 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 684


 32083 00e4 13       		.uleb128 0x13
 32084 00e5 38       		.uleb128 0x38
 32085 00e6 0B       		.uleb128 0xb
 32086 00e7 00       		.byte	0
 32087 00e8 00       		.byte	0
 32088 00e9 14       		.uleb128 0x14
 32089 00ea 13       		.uleb128 0x13
 32090 00eb 01       		.byte	0x1
 32091 00ec 03       		.uleb128 0x3
 32092 00ed 0E       		.uleb128 0xe
 32093 00ee 0B       		.uleb128 0xb
 32094 00ef 05       		.uleb128 0x5
 32095 00f0 3A       		.uleb128 0x3a
 32096 00f1 0B       		.uleb128 0xb
 32097 00f2 3B       		.uleb128 0x3b
 32098 00f3 05       		.uleb128 0x5
 32099 00f4 01       		.uleb128 0x1
 32100 00f5 13       		.uleb128 0x13
 32101 00f6 00       		.byte	0
 32102 00f7 00       		.byte	0
 32103 00f8 15       		.uleb128 0x15
 32104 00f9 0D       		.uleb128 0xd
 32105 00fa 00       		.byte	0
 32106 00fb 03       		.uleb128 0x3
 32107 00fc 08       		.uleb128 0x8
 32108 00fd 3A       		.uleb128 0x3a
 32109 00fe 0B       		.uleb128 0xb
 32110 00ff 3B       		.uleb128 0x3b
 32111 0100 05       		.uleb128 0x5
 32112 0101 49       		.uleb128 0x49
 32113 0102 13       		.uleb128 0x13
 32114 0103 38       		.uleb128 0x38
 32115 0104 05       		.uleb128 0x5
 32116 0105 00       		.byte	0
 32117 0106 00       		.byte	0
 32118 0107 16       		.uleb128 0x16
 32119 0108 0D       		.uleb128 0xd
 32120 0109 00       		.byte	0
 32121 010a 03       		.uleb128 0x3
 32122 010b 0E       		.uleb128 0xe
 32123 010c 3A       		.uleb128 0x3a
 32124 010d 0B       		.uleb128 0xb
 32125 010e 3B       		.uleb128 0x3b
 32126 010f 05       		.uleb128 0x5
 32127 0110 49       		.uleb128 0x49
 32128 0111 13       		.uleb128 0x13
 32129 0112 38       		.uleb128 0x38
 32130 0113 05       		.uleb128 0x5
 32131 0114 00       		.byte	0
 32132 0115 00       		.byte	0
 32133 0116 17       		.uleb128 0x17
 32134 0117 2E       		.uleb128 0x2e
 32135 0118 01       		.byte	0x1
 32136 0119 03       		.uleb128 0x3
 32137 011a 0E       		.uleb128 0xe
 32138 011b 3A       		.uleb128 0x3a
 32139 011c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 685


 32140 011d 3B       		.uleb128 0x3b
 32141 011e 05       		.uleb128 0x5
 32142 011f 27       		.uleb128 0x27
 32143 0120 19       		.uleb128 0x19
 32144 0121 49       		.uleb128 0x49
 32145 0122 13       		.uleb128 0x13
 32146 0123 20       		.uleb128 0x20
 32147 0124 0B       		.uleb128 0xb
 32148 0125 01       		.uleb128 0x1
 32149 0126 13       		.uleb128 0x13
 32150 0127 00       		.byte	0
 32151 0128 00       		.byte	0
 32152 0129 18       		.uleb128 0x18
 32153 012a 05       		.uleb128 0x5
 32154 012b 00       		.byte	0
 32155 012c 03       		.uleb128 0x3
 32156 012d 0E       		.uleb128 0xe
 32157 012e 3A       		.uleb128 0x3a
 32158 012f 0B       		.uleb128 0xb
 32159 0130 3B       		.uleb128 0x3b
 32160 0131 05       		.uleb128 0x5
 32161 0132 49       		.uleb128 0x49
 32162 0133 13       		.uleb128 0x13
 32163 0134 00       		.byte	0
 32164 0135 00       		.byte	0
 32165 0136 19       		.uleb128 0x19
 32166 0137 34       		.uleb128 0x34
 32167 0138 00       		.byte	0
 32168 0139 03       		.uleb128 0x3
 32169 013a 0E       		.uleb128 0xe
 32170 013b 3A       		.uleb128 0x3a
 32171 013c 0B       		.uleb128 0xb
 32172 013d 3B       		.uleb128 0x3b
 32173 013e 05       		.uleb128 0x5
 32174 013f 49       		.uleb128 0x49
 32175 0140 13       		.uleb128 0x13
 32176 0141 00       		.byte	0
 32177 0142 00       		.byte	0
 32178 0143 1A       		.uleb128 0x1a
 32179 0144 2E       		.uleb128 0x2e
 32180 0145 01       		.byte	0x1
 32181 0146 3F       		.uleb128 0x3f
 32182 0147 19       		.uleb128 0x19
 32183 0148 03       		.uleb128 0x3
 32184 0149 0E       		.uleb128 0xe
 32185 014a 3A       		.uleb128 0x3a
 32186 014b 0B       		.uleb128 0xb
 32187 014c 3B       		.uleb128 0x3b
 32188 014d 0B       		.uleb128 0xb
 32189 014e 27       		.uleb128 0x27
 32190 014f 19       		.uleb128 0x19
 32191 0150 11       		.uleb128 0x11
 32192 0151 01       		.uleb128 0x1
 32193 0152 12       		.uleb128 0x12
 32194 0153 06       		.uleb128 0x6
 32195 0154 40       		.uleb128 0x40
 32196 0155 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 686


 32197 0156 9642     		.uleb128 0x2116
 32198 0158 19       		.uleb128 0x19
 32199 0159 01       		.uleb128 0x1
 32200 015a 13       		.uleb128 0x13
 32201 015b 00       		.byte	0
 32202 015c 00       		.byte	0
 32203 015d 1B       		.uleb128 0x1b
 32204 015e 34       		.uleb128 0x34
 32205 015f 00       		.byte	0
 32206 0160 03       		.uleb128 0x3
 32207 0161 0E       		.uleb128 0xe
 32208 0162 3A       		.uleb128 0x3a
 32209 0163 0B       		.uleb128 0xb
 32210 0164 3B       		.uleb128 0x3b
 32211 0165 0B       		.uleb128 0xb
 32212 0166 49       		.uleb128 0x49
 32213 0167 13       		.uleb128 0x13
 32214 0168 02       		.uleb128 0x2
 32215 0169 18       		.uleb128 0x18
 32216 016a 00       		.byte	0
 32217 016b 00       		.byte	0
 32218 016c 1C       		.uleb128 0x1c
 32219 016d 1D       		.uleb128 0x1d
 32220 016e 01       		.byte	0x1
 32221 016f 31       		.uleb128 0x31
 32222 0170 13       		.uleb128 0x13
 32223 0171 11       		.uleb128 0x11
 32224 0172 01       		.uleb128 0x1
 32225 0173 12       		.uleb128 0x12
 32226 0174 06       		.uleb128 0x6
 32227 0175 58       		.uleb128 0x58
 32228 0176 0B       		.uleb128 0xb
 32229 0177 59       		.uleb128 0x59
 32230 0178 0B       		.uleb128 0xb
 32231 0179 01       		.uleb128 0x1
 32232 017a 13       		.uleb128 0x13
 32233 017b 00       		.byte	0
 32234 017c 00       		.byte	0
 32235 017d 1D       		.uleb128 0x1d
 32236 017e 05       		.uleb128 0x5
 32237 017f 00       		.byte	0
 32238 0180 31       		.uleb128 0x31
 32239 0181 13       		.uleb128 0x13
 32240 0182 02       		.uleb128 0x2
 32241 0183 18       		.uleb128 0x18
 32242 0184 00       		.byte	0
 32243 0185 00       		.byte	0
 32244 0186 1E       		.uleb128 0x1e
 32245 0187 0B       		.uleb128 0xb
 32246 0188 01       		.byte	0x1
 32247 0189 11       		.uleb128 0x11
 32248 018a 01       		.uleb128 0x1
 32249 018b 12       		.uleb128 0x12
 32250 018c 06       		.uleb128 0x6
 32251 018d 00       		.byte	0
 32252 018e 00       		.byte	0
 32253 018f 1F       		.uleb128 0x1f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 687


 32254 0190 34       		.uleb128 0x34
 32255 0191 00       		.byte	0
 32256 0192 31       		.uleb128 0x31
 32257 0193 13       		.uleb128 0x13
 32258 0194 02       		.uleb128 0x2
 32259 0195 18       		.uleb128 0x18
 32260 0196 00       		.byte	0
 32261 0197 00       		.byte	0
 32262 0198 20       		.uleb128 0x20
 32263 0199 1D       		.uleb128 0x1d
 32264 019a 01       		.byte	0x1
 32265 019b 31       		.uleb128 0x31
 32266 019c 13       		.uleb128 0x13
 32267 019d 11       		.uleb128 0x11
 32268 019e 01       		.uleb128 0x1
 32269 019f 12       		.uleb128 0x12
 32270 01a0 06       		.uleb128 0x6
 32271 01a1 58       		.uleb128 0x58
 32272 01a2 0B       		.uleb128 0xb
 32273 01a3 59       		.uleb128 0x59
 32274 01a4 05       		.uleb128 0x5
 32275 01a5 01       		.uleb128 0x1
 32276 01a6 13       		.uleb128 0x13
 32277 01a7 00       		.byte	0
 32278 01a8 00       		.byte	0
 32279 01a9 21       		.uleb128 0x21
 32280 01aa 1D       		.uleb128 0x1d
 32281 01ab 01       		.byte	0x1
 32282 01ac 31       		.uleb128 0x31
 32283 01ad 13       		.uleb128 0x13
 32284 01ae 11       		.uleb128 0x11
 32285 01af 01       		.uleb128 0x1
 32286 01b0 12       		.uleb128 0x12
 32287 01b1 06       		.uleb128 0x6
 32288 01b2 58       		.uleb128 0x58
 32289 01b3 0B       		.uleb128 0xb
 32290 01b4 59       		.uleb128 0x59
 32291 01b5 05       		.uleb128 0x5
 32292 01b6 00       		.byte	0
 32293 01b7 00       		.byte	0
 32294 01b8 22       		.uleb128 0x22
 32295 01b9 2E       		.uleb128 0x2e
 32296 01ba 01       		.byte	0x1
 32297 01bb 3F       		.uleb128 0x3f
 32298 01bc 19       		.uleb128 0x19
 32299 01bd 03       		.uleb128 0x3
 32300 01be 0E       		.uleb128 0xe
 32301 01bf 3A       		.uleb128 0x3a
 32302 01c0 0B       		.uleb128 0xb
 32303 01c1 3B       		.uleb128 0x3b
 32304 01c2 05       		.uleb128 0x5
 32305 01c3 27       		.uleb128 0x27
 32306 01c4 19       		.uleb128 0x19
 32307 01c5 11       		.uleb128 0x11
 32308 01c6 01       		.uleb128 0x1
 32309 01c7 12       		.uleb128 0x12
 32310 01c8 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 688


 32311 01c9 40       		.uleb128 0x40
 32312 01ca 18       		.uleb128 0x18
 32313 01cb 9642     		.uleb128 0x2116
 32314 01cd 19       		.uleb128 0x19
 32315 01ce 01       		.uleb128 0x1
 32316 01cf 13       		.uleb128 0x13
 32317 01d0 00       		.byte	0
 32318 01d1 00       		.byte	0
 32319 01d2 23       		.uleb128 0x23
 32320 01d3 34       		.uleb128 0x34
 32321 01d4 00       		.byte	0
 32322 01d5 03       		.uleb128 0x3
 32323 01d6 0E       		.uleb128 0xe
 32324 01d7 3A       		.uleb128 0x3a
 32325 01d8 0B       		.uleb128 0xb
 32326 01d9 3B       		.uleb128 0x3b
 32327 01da 05       		.uleb128 0x5
 32328 01db 49       		.uleb128 0x49
 32329 01dc 13       		.uleb128 0x13
 32330 01dd 02       		.uleb128 0x2
 32331 01de 18       		.uleb128 0x18
 32332 01df 00       		.byte	0
 32333 01e0 00       		.byte	0
 32334 01e1 24       		.uleb128 0x24
 32335 01e2 21       		.uleb128 0x21
 32336 01e3 00       		.byte	0
 32337 01e4 49       		.uleb128 0x49
 32338 01e5 13       		.uleb128 0x13
 32339 01e6 2F       		.uleb128 0x2f
 32340 01e7 05       		.uleb128 0x5
 32341 01e8 00       		.byte	0
 32342 01e9 00       		.byte	0
 32343 01ea 25       		.uleb128 0x25
 32344 01eb 05       		.uleb128 0x5
 32345 01ec 00       		.byte	0
 32346 01ed 03       		.uleb128 0x3
 32347 01ee 0E       		.uleb128 0xe
 32348 01ef 3A       		.uleb128 0x3a
 32349 01f0 0B       		.uleb128 0xb
 32350 01f1 3B       		.uleb128 0x3b
 32351 01f2 05       		.uleb128 0x5
 32352 01f3 49       		.uleb128 0x49
 32353 01f4 13       		.uleb128 0x13
 32354 01f5 02       		.uleb128 0x2
 32355 01f6 18       		.uleb128 0x18
 32356 01f7 00       		.byte	0
 32357 01f8 00       		.byte	0
 32358 01f9 26       		.uleb128 0x26
 32359 01fa 34       		.uleb128 0x34
 32360 01fb 00       		.byte	0
 32361 01fc 03       		.uleb128 0x3
 32362 01fd 08       		.uleb128 0x8
 32363 01fe 3A       		.uleb128 0x3a
 32364 01ff 0B       		.uleb128 0xb
 32365 0200 3B       		.uleb128 0x3b
 32366 0201 05       		.uleb128 0x5
 32367 0202 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 689


 32368 0203 13       		.uleb128 0x13
 32369 0204 02       		.uleb128 0x2
 32370 0205 18       		.uleb128 0x18
 32371 0206 00       		.byte	0
 32372 0207 00       		.byte	0
 32373 0208 27       		.uleb128 0x27
 32374 0209 2E       		.uleb128 0x2e
 32375 020a 01       		.byte	0x1
 32376 020b 3F       		.uleb128 0x3f
 32377 020c 19       		.uleb128 0x19
 32378 020d 03       		.uleb128 0x3
 32379 020e 0E       		.uleb128 0xe
 32380 020f 3A       		.uleb128 0x3a
 32381 0210 0B       		.uleb128 0xb
 32382 0211 3B       		.uleb128 0x3b
 32383 0212 05       		.uleb128 0x5
 32384 0213 11       		.uleb128 0x11
 32385 0214 01       		.uleb128 0x1
 32386 0215 12       		.uleb128 0x12
 32387 0216 06       		.uleb128 0x6
 32388 0217 40       		.uleb128 0x40
 32389 0218 18       		.uleb128 0x18
 32390 0219 9642     		.uleb128 0x2116
 32391 021b 19       		.uleb128 0x19
 32392 021c 01       		.uleb128 0x1
 32393 021d 13       		.uleb128 0x13
 32394 021e 00       		.byte	0
 32395 021f 00       		.byte	0
 32396 0220 28       		.uleb128 0x28
 32397 0221 05       		.uleb128 0x5
 32398 0222 00       		.byte	0
 32399 0223 03       		.uleb128 0x3
 32400 0224 08       		.uleb128 0x8
 32401 0225 3A       		.uleb128 0x3a
 32402 0226 0B       		.uleb128 0xb
 32403 0227 3B       		.uleb128 0x3b
 32404 0228 05       		.uleb128 0x5
 32405 0229 49       		.uleb128 0x49
 32406 022a 13       		.uleb128 0x13
 32407 022b 02       		.uleb128 0x2
 32408 022c 18       		.uleb128 0x18
 32409 022d 00       		.byte	0
 32410 022e 00       		.byte	0
 32411 022f 29       		.uleb128 0x29
 32412 0230 2E       		.uleb128 0x2e
 32413 0231 01       		.byte	0x1
 32414 0232 3F       		.uleb128 0x3f
 32415 0233 19       		.uleb128 0x19
 32416 0234 03       		.uleb128 0x3
 32417 0235 0E       		.uleb128 0xe
 32418 0236 3A       		.uleb128 0x3a
 32419 0237 0B       		.uleb128 0xb
 32420 0238 3B       		.uleb128 0x3b
 32421 0239 05       		.uleb128 0x5
 32422 023a 27       		.uleb128 0x27
 32423 023b 19       		.uleb128 0x19
 32424 023c 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 690


 32425 023d 13       		.uleb128 0x13
 32426 023e 11       		.uleb128 0x11
 32427 023f 01       		.uleb128 0x1
 32428 0240 12       		.uleb128 0x12
 32429 0241 06       		.uleb128 0x6
 32430 0242 40       		.uleb128 0x40
 32431 0243 18       		.uleb128 0x18
 32432 0244 9742     		.uleb128 0x2117
 32433 0246 19       		.uleb128 0x19
 32434 0247 01       		.uleb128 0x1
 32435 0248 13       		.uleb128 0x13
 32436 0249 00       		.byte	0
 32437 024a 00       		.byte	0
 32438 024b 2A       		.uleb128 0x2a
 32439 024c 2E       		.uleb128 0x2e
 32440 024d 01       		.byte	0x1
 32441 024e 3F       		.uleb128 0x3f
 32442 024f 19       		.uleb128 0x19
 32443 0250 03       		.uleb128 0x3
 32444 0251 0E       		.uleb128 0xe
 32445 0252 3A       		.uleb128 0x3a
 32446 0253 0B       		.uleb128 0xb
 32447 0254 3B       		.uleb128 0x3b
 32448 0255 05       		.uleb128 0x5
 32449 0256 27       		.uleb128 0x27
 32450 0257 19       		.uleb128 0x19
 32451 0258 49       		.uleb128 0x49
 32452 0259 13       		.uleb128 0x13
 32453 025a 11       		.uleb128 0x11
 32454 025b 01       		.uleb128 0x1
 32455 025c 12       		.uleb128 0x12
 32456 025d 06       		.uleb128 0x6
 32457 025e 40       		.uleb128 0x40
 32458 025f 18       		.uleb128 0x18
 32459 0260 9642     		.uleb128 0x2116
 32460 0262 19       		.uleb128 0x19
 32461 0263 01       		.uleb128 0x1
 32462 0264 13       		.uleb128 0x13
 32463 0265 00       		.byte	0
 32464 0266 00       		.byte	0
 32465 0267 2B       		.uleb128 0x2b
 32466 0268 2E       		.uleb128 0x2e
 32467 0269 01       		.byte	0x1
 32468 026a 3F       		.uleb128 0x3f
 32469 026b 19       		.uleb128 0x19
 32470 026c 03       		.uleb128 0x3
 32471 026d 0E       		.uleb128 0xe
 32472 026e 3A       		.uleb128 0x3a
 32473 026f 0B       		.uleb128 0xb
 32474 0270 3B       		.uleb128 0x3b
 32475 0271 05       		.uleb128 0x5
 32476 0272 27       		.uleb128 0x27
 32477 0273 19       		.uleb128 0x19
 32478 0274 11       		.uleb128 0x11
 32479 0275 01       		.uleb128 0x1
 32480 0276 12       		.uleb128 0x12
 32481 0277 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 691


 32482 0278 40       		.uleb128 0x40
 32483 0279 18       		.uleb128 0x18
 32484 027a 9742     		.uleb128 0x2117
 32485 027c 19       		.uleb128 0x19
 32486 027d 01       		.uleb128 0x1
 32487 027e 13       		.uleb128 0x13
 32488 027f 00       		.byte	0
 32489 0280 00       		.byte	0
 32490 0281 2C       		.uleb128 0x2c
 32491 0282 2E       		.uleb128 0x2e
 32492 0283 00       		.byte	0
 32493 0284 3F       		.uleb128 0x3f
 32494 0285 19       		.uleb128 0x19
 32495 0286 03       		.uleb128 0x3
 32496 0287 0E       		.uleb128 0xe
 32497 0288 3A       		.uleb128 0x3a
 32498 0289 0B       		.uleb128 0xb
 32499 028a 3B       		.uleb128 0x3b
 32500 028b 05       		.uleb128 0x5
 32501 028c 27       		.uleb128 0x27
 32502 028d 19       		.uleb128 0x19
 32503 028e 11       		.uleb128 0x11
 32504 028f 01       		.uleb128 0x1
 32505 0290 12       		.uleb128 0x12
 32506 0291 06       		.uleb128 0x6
 32507 0292 40       		.uleb128 0x40
 32508 0293 18       		.uleb128 0x18
 32509 0294 9742     		.uleb128 0x2117
 32510 0296 19       		.uleb128 0x19
 32511 0297 00       		.byte	0
 32512 0298 00       		.byte	0
 32513 0299 2D       		.uleb128 0x2d
 32514 029a 2E       		.uleb128 0x2e
 32515 029b 01       		.byte	0x1
 32516 029c 3F       		.uleb128 0x3f
 32517 029d 19       		.uleb128 0x19
 32518 029e 03       		.uleb128 0x3
 32519 029f 0E       		.uleb128 0xe
 32520 02a0 3A       		.uleb128 0x3a
 32521 02a1 0B       		.uleb128 0xb
 32522 02a2 3B       		.uleb128 0x3b
 32523 02a3 05       		.uleb128 0x5
 32524 02a4 11       		.uleb128 0x11
 32525 02a5 01       		.uleb128 0x1
 32526 02a6 12       		.uleb128 0x12
 32527 02a7 06       		.uleb128 0x6
 32528 02a8 40       		.uleb128 0x40
 32529 02a9 18       		.uleb128 0x18
 32530 02aa 9742     		.uleb128 0x2117
 32531 02ac 19       		.uleb128 0x19
 32532 02ad 01       		.uleb128 0x1
 32533 02ae 13       		.uleb128 0x13
 32534 02af 00       		.byte	0
 32535 02b0 00       		.byte	0
 32536 02b1 2E       		.uleb128 0x2e
 32537 02b2 0B       		.uleb128 0xb
 32538 02b3 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 692


 32539 02b4 11       		.uleb128 0x11
 32540 02b5 01       		.uleb128 0x1
 32541 02b6 12       		.uleb128 0x12
 32542 02b7 06       		.uleb128 0x6
 32543 02b8 01       		.uleb128 0x1
 32544 02b9 13       		.uleb128 0x13
 32545 02ba 00       		.byte	0
 32546 02bb 00       		.byte	0
 32547 02bc 2F       		.uleb128 0x2f
 32548 02bd 2E       		.uleb128 0x2e
 32549 02be 01       		.byte	0x1
 32550 02bf 3F       		.uleb128 0x3f
 32551 02c0 19       		.uleb128 0x19
 32552 02c1 03       		.uleb128 0x3
 32553 02c2 0E       		.uleb128 0xe
 32554 02c3 3A       		.uleb128 0x3a
 32555 02c4 0B       		.uleb128 0xb
 32556 02c5 3B       		.uleb128 0x3b
 32557 02c6 05       		.uleb128 0x5
 32558 02c7 49       		.uleb128 0x49
 32559 02c8 13       		.uleb128 0x13
 32560 02c9 11       		.uleb128 0x11
 32561 02ca 01       		.uleb128 0x1
 32562 02cb 12       		.uleb128 0x12
 32563 02cc 06       		.uleb128 0x6
 32564 02cd 40       		.uleb128 0x40
 32565 02ce 18       		.uleb128 0x18
 32566 02cf 9642     		.uleb128 0x2116
 32567 02d1 19       		.uleb128 0x19
 32568 02d2 01       		.uleb128 0x1
 32569 02d3 13       		.uleb128 0x13
 32570 02d4 00       		.byte	0
 32571 02d5 00       		.byte	0
 32572 02d6 30       		.uleb128 0x30
 32573 02d7 2E       		.uleb128 0x2e
 32574 02d8 00       		.byte	0
 32575 02d9 3F       		.uleb128 0x3f
 32576 02da 19       		.uleb128 0x19
 32577 02db 03       		.uleb128 0x3
 32578 02dc 0E       		.uleb128 0xe
 32579 02dd 3A       		.uleb128 0x3a
 32580 02de 0B       		.uleb128 0xb
 32581 02df 3B       		.uleb128 0x3b
 32582 02e0 05       		.uleb128 0x5
 32583 02e1 11       		.uleb128 0x11
 32584 02e2 01       		.uleb128 0x1
 32585 02e3 12       		.uleb128 0x12
 32586 02e4 06       		.uleb128 0x6
 32587 02e5 40       		.uleb128 0x40
 32588 02e6 18       		.uleb128 0x18
 32589 02e7 9642     		.uleb128 0x2116
 32590 02e9 19       		.uleb128 0x19
 32591 02ea 00       		.byte	0
 32592 02eb 00       		.byte	0
 32593 02ec 31       		.uleb128 0x31
 32594 02ed 2E       		.uleb128 0x2e
 32595 02ee 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 693


 32596 02ef 3F       		.uleb128 0x3f
 32597 02f0 19       		.uleb128 0x19
 32598 02f1 03       		.uleb128 0x3
 32599 02f2 0E       		.uleb128 0xe
 32600 02f3 3A       		.uleb128 0x3a
 32601 02f4 0B       		.uleb128 0xb
 32602 02f5 3B       		.uleb128 0x3b
 32603 02f6 05       		.uleb128 0x5
 32604 02f7 49       		.uleb128 0x49
 32605 02f8 13       		.uleb128 0x13
 32606 02f9 11       		.uleb128 0x11
 32607 02fa 01       		.uleb128 0x1
 32608 02fb 12       		.uleb128 0x12
 32609 02fc 06       		.uleb128 0x6
 32610 02fd 40       		.uleb128 0x40
 32611 02fe 18       		.uleb128 0x18
 32612 02ff 9742     		.uleb128 0x2117
 32613 0301 19       		.uleb128 0x19
 32614 0302 01       		.uleb128 0x1
 32615 0303 13       		.uleb128 0x13
 32616 0304 00       		.byte	0
 32617 0305 00       		.byte	0
 32618 0306 32       		.uleb128 0x32
 32619 0307 2E       		.uleb128 0x2e
 32620 0308 00       		.byte	0
 32621 0309 3F       		.uleb128 0x3f
 32622 030a 19       		.uleb128 0x19
 32623 030b 03       		.uleb128 0x3
 32624 030c 0E       		.uleb128 0xe
 32625 030d 3A       		.uleb128 0x3a
 32626 030e 0B       		.uleb128 0xb
 32627 030f 3B       		.uleb128 0x3b
 32628 0310 05       		.uleb128 0x5
 32629 0311 11       		.uleb128 0x11
 32630 0312 01       		.uleb128 0x1
 32631 0313 12       		.uleb128 0x12
 32632 0314 06       		.uleb128 0x6
 32633 0315 40       		.uleb128 0x40
 32634 0316 18       		.uleb128 0x18
 32635 0317 9742     		.uleb128 0x2117
 32636 0319 19       		.uleb128 0x19
 32637 031a 00       		.byte	0
 32638 031b 00       		.byte	0
 32639 031c 33       		.uleb128 0x33
 32640 031d 34       		.uleb128 0x34
 32641 031e 00       		.byte	0
 32642 031f 03       		.uleb128 0x3
 32643 0320 0E       		.uleb128 0xe
 32644 0321 3A       		.uleb128 0x3a
 32645 0322 0B       		.uleb128 0xb
 32646 0323 3B       		.uleb128 0x3b
 32647 0324 05       		.uleb128 0x5
 32648 0325 49       		.uleb128 0x49
 32649 0326 13       		.uleb128 0x13
 32650 0327 3F       		.uleb128 0x3f
 32651 0328 19       		.uleb128 0x19
 32652 0329 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 694


 32653 032a 19       		.uleb128 0x19
 32654 032b 00       		.byte	0
 32655 032c 00       		.byte	0
 32656 032d 34       		.uleb128 0x34
 32657 032e 34       		.uleb128 0x34
 32658 032f 00       		.byte	0
 32659 0330 03       		.uleb128 0x3
 32660 0331 0E       		.uleb128 0xe
 32661 0332 3A       		.uleb128 0x3a
 32662 0333 0B       		.uleb128 0xb
 32663 0334 3B       		.uleb128 0x3b
 32664 0335 0B       		.uleb128 0xb
 32665 0336 49       		.uleb128 0x49
 32666 0337 13       		.uleb128 0x13
 32667 0338 3F       		.uleb128 0x3f
 32668 0339 19       		.uleb128 0x19
 32669 033a 02       		.uleb128 0x2
 32670 033b 18       		.uleb128 0x18
 32671 033c 00       		.byte	0
 32672 033d 00       		.byte	0
 32673 033e 00       		.byte	0
 32674              		.section	.debug_aranges,"",%progbits
 32675 0000 CC010000 		.4byte	0x1cc
 32676 0004 0200     		.2byte	0x2
 32677 0006 00000000 		.4byte	.Ldebug_info0
 32678 000a 04       		.byte	0x4
 32679 000b 00       		.byte	0
 32680 000c 0000     		.2byte	0
 32681 000e 0000     		.2byte	0
 32682 0010 00000000 		.4byte	.LFB64
 32683 0014 00050000 		.4byte	.LFE64-.LFB64
 32684 0018 00000000 		.4byte	.LFB65
 32685 001c 22000000 		.4byte	.LFE65-.LFB65
 32686 0020 00000000 		.4byte	.LFB66
 32687 0024 2C010000 		.4byte	.LFE66-.LFB66
 32688 0028 00000000 		.4byte	.LFB67
 32689 002c 0C320000 		.4byte	.LFE67-.LFB67
 32690 0030 00000000 		.4byte	.LFB68
 32691 0034 24190000 		.4byte	.LFE68-.LFB68
 32692 0038 00000000 		.4byte	.LFB69
 32693 003c 8C140000 		.4byte	.LFE69-.LFB69
 32694 0040 00000000 		.4byte	.LFB70
 32695 0044 F40D0000 		.4byte	.LFE70-.LFB70
 32696 0048 00000000 		.4byte	.LFB71
 32697 004c 84000000 		.4byte	.LFE71-.LFB71
 32698 0050 00000000 		.4byte	.LFB72
 32699 0054 50210000 		.4byte	.LFE72-.LFB72
 32700 0058 00000000 		.4byte	.LFB73
 32701 005c B4030000 		.4byte	.LFE73-.LFB73
 32702 0060 00000000 		.4byte	.LFB74
 32703 0064 7C120000 		.4byte	.LFE74-.LFB74
 32704 0068 00000000 		.4byte	.LFB75
 32705 006c C8000000 		.4byte	.LFE75-.LFB75
 32706 0070 00000000 		.4byte	.LFB76
 32707 0074 30010000 		.4byte	.LFE76-.LFB76
 32708 0078 00000000 		.4byte	.LFB77
 32709 007c 74030000 		.4byte	.LFE77-.LFB77
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 695


 32710 0080 00000000 		.4byte	.LFB78
 32711 0084 84000000 		.4byte	.LFE78-.LFB78
 32712 0088 00000000 		.4byte	.LFB79
 32713 008c 88000000 		.4byte	.LFE79-.LFB79
 32714 0090 00000000 		.4byte	.LFB80
 32715 0094 A0000000 		.4byte	.LFE80-.LFB80
 32716 0098 00000000 		.4byte	.LFB81
 32717 009c 3E000000 		.4byte	.LFE81-.LFB81
 32718 00a0 00000000 		.4byte	.LFB82
 32719 00a4 2E000000 		.4byte	.LFE82-.LFB82
 32720 00a8 00000000 		.4byte	.LFB83
 32721 00ac 98000000 		.4byte	.LFE83-.LFB83
 32722 00b0 00000000 		.4byte	.LFB84
 32723 00b4 80000000 		.4byte	.LFE84-.LFB84
 32724 00b8 00000000 		.4byte	.LFB85
 32725 00bc 5C000000 		.4byte	.LFE85-.LFB85
 32726 00c0 00000000 		.4byte	.LFB86
 32727 00c4 08060000 		.4byte	.LFE86-.LFB86
 32728 00c8 00000000 		.4byte	.LFB87
 32729 00cc 38020000 		.4byte	.LFE87-.LFB87
 32730 00d0 00000000 		.4byte	.LFB88
 32731 00d4 28000000 		.4byte	.LFE88-.LFB88
 32732 00d8 00000000 		.4byte	.LFB89
 32733 00dc 78000000 		.4byte	.LFE89-.LFB89
 32734 00e0 00000000 		.4byte	.LFB90
 32735 00e4 B0000000 		.4byte	.LFE90-.LFB90
 32736 00e8 00000000 		.4byte	.LFB91
 32737 00ec B4000000 		.4byte	.LFE91-.LFB91
 32738 00f0 00000000 		.4byte	.LFB92
 32739 00f4 B8000000 		.4byte	.LFE92-.LFB92
 32740 00f8 00000000 		.4byte	.LFB93
 32741 00fc B8000000 		.4byte	.LFE93-.LFB93
 32742 0100 00000000 		.4byte	.LFB94
 32743 0104 5C000000 		.4byte	.LFE94-.LFB94
 32744 0108 00000000 		.4byte	.LFB95
 32745 010c 44020000 		.4byte	.LFE95-.LFB95
 32746 0110 00000000 		.4byte	.LFB96
 32747 0114 BC000000 		.4byte	.LFE96-.LFB96
 32748 0118 00000000 		.4byte	.LFB97
 32749 011c 5C000000 		.4byte	.LFE97-.LFB97
 32750 0120 00000000 		.4byte	.LFB98
 32751 0124 38010000 		.4byte	.LFE98-.LFB98
 32752 0128 00000000 		.4byte	.LFB99
 32753 012c EC000000 		.4byte	.LFE99-.LFB99
 32754 0130 00000000 		.4byte	.LFB100
 32755 0134 64000000 		.4byte	.LFE100-.LFB100
 32756 0138 00000000 		.4byte	.LFB101
 32757 013c A8000000 		.4byte	.LFE101-.LFB101
 32758 0140 00000000 		.4byte	.LFB102
 32759 0144 34000000 		.4byte	.LFE102-.LFB102
 32760 0148 00000000 		.4byte	.LFB103
 32761 014c 20000000 		.4byte	.LFE103-.LFB103
 32762 0150 00000000 		.4byte	.LFB104
 32763 0154 A0000000 		.4byte	.LFE104-.LFB104
 32764 0158 00000000 		.4byte	.LFB105
 32765 015c BC010000 		.4byte	.LFE105-.LFB105
 32766 0160 00000000 		.4byte	.LFB106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 696


 32767 0164 60000000 		.4byte	.LFE106-.LFB106
 32768 0168 00000000 		.4byte	.LFB107
 32769 016c 98050000 		.4byte	.LFE107-.LFB107
 32770 0170 00000000 		.4byte	.LFB108
 32771 0174 8C000000 		.4byte	.LFE108-.LFB108
 32772 0178 00000000 		.4byte	.LFB109
 32773 017c EC000000 		.4byte	.LFE109-.LFB109
 32774 0180 00000000 		.4byte	.LFB110
 32775 0184 5C000000 		.4byte	.LFE110-.LFB110
 32776 0188 00000000 		.4byte	.LFB111
 32777 018c C0000000 		.4byte	.LFE111-.LFB111
 32778 0190 00000000 		.4byte	.LFB112
 32779 0194 54010000 		.4byte	.LFE112-.LFB112
 32780 0198 00000000 		.4byte	.LFB113
 32781 019c 12000000 		.4byte	.LFE113-.LFB113
 32782 01a0 00000000 		.4byte	.LFB114
 32783 01a4 64010000 		.4byte	.LFE114-.LFB114
 32784 01a8 00000000 		.4byte	.LFB115
 32785 01ac 12000000 		.4byte	.LFE115-.LFB115
 32786 01b0 00000000 		.4byte	.LFB116
 32787 01b4 1A000000 		.4byte	.LFE116-.LFB116
 32788 01b8 00000000 		.4byte	.LFB117
 32789 01bc 0C000000 		.4byte	.LFE117-.LFB117
 32790 01c0 00000000 		.4byte	.LFB118
 32791 01c4 0C000000 		.4byte	.LFE118-.LFB118
 32792 01c8 00000000 		.4byte	0
 32793 01cc 00000000 		.4byte	0
 32794              		.section	.debug_ranges,"",%progbits
 32795              	.Ldebug_ranges0:
 32796 0000 00000000 		.4byte	.LFB64
 32797 0004 00050000 		.4byte	.LFE64
 32798 0008 00000000 		.4byte	.LFB65
 32799 000c 22000000 		.4byte	.LFE65
 32800 0010 00000000 		.4byte	.LFB66
 32801 0014 2C010000 		.4byte	.LFE66
 32802 0018 00000000 		.4byte	.LFB67
 32803 001c 0C320000 		.4byte	.LFE67
 32804 0020 00000000 		.4byte	.LFB68
 32805 0024 24190000 		.4byte	.LFE68
 32806 0028 00000000 		.4byte	.LFB69
 32807 002c 8C140000 		.4byte	.LFE69
 32808 0030 00000000 		.4byte	.LFB70
 32809 0034 F40D0000 		.4byte	.LFE70
 32810 0038 00000000 		.4byte	.LFB71
 32811 003c 84000000 		.4byte	.LFE71
 32812 0040 00000000 		.4byte	.LFB72
 32813 0044 50210000 		.4byte	.LFE72
 32814 0048 00000000 		.4byte	.LFB73
 32815 004c B4030000 		.4byte	.LFE73
 32816 0050 00000000 		.4byte	.LFB74
 32817 0054 7C120000 		.4byte	.LFE74
 32818 0058 00000000 		.4byte	.LFB75
 32819 005c C8000000 		.4byte	.LFE75
 32820 0060 00000000 		.4byte	.LFB76
 32821 0064 30010000 		.4byte	.LFE76
 32822 0068 00000000 		.4byte	.LFB77
 32823 006c 74030000 		.4byte	.LFE77
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 697


 32824 0070 00000000 		.4byte	.LFB78
 32825 0074 84000000 		.4byte	.LFE78
 32826 0078 00000000 		.4byte	.LFB79
 32827 007c 88000000 		.4byte	.LFE79
 32828 0080 00000000 		.4byte	.LFB80
 32829 0084 A0000000 		.4byte	.LFE80
 32830 0088 00000000 		.4byte	.LFB81
 32831 008c 3E000000 		.4byte	.LFE81
 32832 0090 00000000 		.4byte	.LFB82
 32833 0094 2E000000 		.4byte	.LFE82
 32834 0098 00000000 		.4byte	.LFB83
 32835 009c 98000000 		.4byte	.LFE83
 32836 00a0 00000000 		.4byte	.LFB84
 32837 00a4 80000000 		.4byte	.LFE84
 32838 00a8 00000000 		.4byte	.LFB85
 32839 00ac 5C000000 		.4byte	.LFE85
 32840 00b0 00000000 		.4byte	.LFB86
 32841 00b4 08060000 		.4byte	.LFE86
 32842 00b8 00000000 		.4byte	.LFB87
 32843 00bc 38020000 		.4byte	.LFE87
 32844 00c0 00000000 		.4byte	.LFB88
 32845 00c4 28000000 		.4byte	.LFE88
 32846 00c8 00000000 		.4byte	.LFB89
 32847 00cc 78000000 		.4byte	.LFE89
 32848 00d0 00000000 		.4byte	.LFB90
 32849 00d4 B0000000 		.4byte	.LFE90
 32850 00d8 00000000 		.4byte	.LFB91
 32851 00dc B4000000 		.4byte	.LFE91
 32852 00e0 00000000 		.4byte	.LFB92
 32853 00e4 B8000000 		.4byte	.LFE92
 32854 00e8 00000000 		.4byte	.LFB93
 32855 00ec B8000000 		.4byte	.LFE93
 32856 00f0 00000000 		.4byte	.LFB94
 32857 00f4 5C000000 		.4byte	.LFE94
 32858 00f8 00000000 		.4byte	.LFB95
 32859 00fc 44020000 		.4byte	.LFE95
 32860 0100 00000000 		.4byte	.LFB96
 32861 0104 BC000000 		.4byte	.LFE96
 32862 0108 00000000 		.4byte	.LFB97
 32863 010c 5C000000 		.4byte	.LFE97
 32864 0110 00000000 		.4byte	.LFB98
 32865 0114 38010000 		.4byte	.LFE98
 32866 0118 00000000 		.4byte	.LFB99
 32867 011c EC000000 		.4byte	.LFE99
 32868 0120 00000000 		.4byte	.LFB100
 32869 0124 64000000 		.4byte	.LFE100
 32870 0128 00000000 		.4byte	.LFB101
 32871 012c A8000000 		.4byte	.LFE101
 32872 0130 00000000 		.4byte	.LFB102
 32873 0134 34000000 		.4byte	.LFE102
 32874 0138 00000000 		.4byte	.LFB103
 32875 013c 20000000 		.4byte	.LFE103
 32876 0140 00000000 		.4byte	.LFB104
 32877 0144 A0000000 		.4byte	.LFE104
 32878 0148 00000000 		.4byte	.LFB105
 32879 014c BC010000 		.4byte	.LFE105
 32880 0150 00000000 		.4byte	.LFB106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 698


 32881 0154 60000000 		.4byte	.LFE106
 32882 0158 00000000 		.4byte	.LFB107
 32883 015c 98050000 		.4byte	.LFE107
 32884 0160 00000000 		.4byte	.LFB108
 32885 0164 8C000000 		.4byte	.LFE108
 32886 0168 00000000 		.4byte	.LFB109
 32887 016c EC000000 		.4byte	.LFE109
 32888 0170 00000000 		.4byte	.LFB110
 32889 0174 5C000000 		.4byte	.LFE110
 32890 0178 00000000 		.4byte	.LFB111
 32891 017c C0000000 		.4byte	.LFE111
 32892 0180 00000000 		.4byte	.LFB112
 32893 0184 54010000 		.4byte	.LFE112
 32894 0188 00000000 		.4byte	.LFB113
 32895 018c 12000000 		.4byte	.LFE113
 32896 0190 00000000 		.4byte	.LFB114
 32897 0194 64010000 		.4byte	.LFE114
 32898 0198 00000000 		.4byte	.LFB115
 32899 019c 12000000 		.4byte	.LFE115
 32900 01a0 00000000 		.4byte	.LFB116
 32901 01a4 1A000000 		.4byte	.LFE116
 32902 01a8 00000000 		.4byte	.LFB117
 32903 01ac 0C000000 		.4byte	.LFE117
 32904 01b0 00000000 		.4byte	.LFB118
 32905 01b4 0C000000 		.4byte	.LFE118
 32906 01b8 00000000 		.4byte	0
 32907 01bc 00000000 		.4byte	0
 32908              		.section	.debug_line,"",%progbits
 32909              	.Ldebug_line0:
 32910 0000 2F1E0000 		.section	.debug_str,"MS",%progbits,1
 32910      0200C001 
 32910      00000201 
 32910      FB0E0D00 
 32910      01010101 
 32911              	.LASF213:
 32912 0000 696E666F 		.ascii	"infoSend\000"
 32912      53656E64 
 32912      00
 32913              	.LASF265:
 32914 0009 69645F73 		.ascii	"id_str\000"
 32914      747200
 32915              	.LASF247:
 32916 0010 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 32916      61637469 
 32916      76617469 
 32916      6F6E5F6D 
 32916      6F64655F 
 32917              	.LASF25:
 32918 0029 73697A65 		.ascii	"sizetype\000"
 32918      74797065 
 32918      00
 32919              	.LASF33:
 32920 0032 434D445F 		.ascii	"CMD_INIT_MEM\000"
 32920      494E4954 
 32920      5F4D454D 
 32920      00
 32921              	.LASF331:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 699


 32922 003f 676C5F63 		.ascii	"gl_c\000"
 32922      00
 32923              	.LASF193:
 32924 0044 77726973 		.ascii	"wrist_direction_association\000"
 32924      745F6469 
 32924      72656374 
 32924      696F6E5F 
 32924      6173736F 
 32925              	.LASF64:
 32926 0060 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 32926      545F4D4F 
 32926      44455F45 
 32926      4D475F46 
 32926      4346535F 
 32927              	.LASF36:
 32928 0078 434D445F 		.ascii	"CMD_ACTIVATE\000"
 32928      41435449 
 32928      56415445 
 32928      00
 32929              	.LASF198:
 32930 0085 75736572 		.ascii	"user\000"
 32930      00
 32931              	.LASF346:
 32932 008a 665F6572 		.ascii	"f_err_emg_1\000"
 32932      725F656D 
 32932      675F3100 
 32933              	.LASF347:
 32934 0096 665F6572 		.ascii	"f_err_emg_2\000"
 32934      725F656D 
 32934      675F3200 
 32935              	.LASF352:
 32936 00a2 73746F70 		.ascii	"stop_master_device\000"
 32936      5F6D6173 
 32936      7465725F 
 32936      64657669 
 32936      636500
 32937              	.LASF11:
 32938 00b5 696E7433 		.ascii	"int32_t\000"
 32938      325F7400 
 32939              	.LASF363:
 32940 00bd 675F7278 		.ascii	"g_rx\000"
 32940      00
 32941              	.LASF101:
 32942 00c2 73745F64 		.ascii	"st_data\000"
 32942      61746100 
 32943              	.LASF296:
 32944 00ca 77726974 		.ascii	"writeStatus\000"
 32944      65537461 
 32944      74757300 
 32945              	.LASF15:
 32946 00d6 75696E74 		.ascii	"uint32\000"
 32946      333200
 32947              	.LASF351:
 32948 00dd 636D645F 		.ascii	"cmd_set_baudrate\000"
 32948      7365745F 
 32948      62617564 
 32948      72617465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 700


 32948      00
 32949              	.LASF340:
 32950 00ee 6169725F 		.ascii	"air_chambers_control\000"
 32950      6368616D 
 32950      62657273 
 32950      5F636F6E 
 32950      74726F6C 
 32951              	.LASF273:
 32952 0103 7370695F 		.ascii	"spi_read_delay_str_len\000"
 32952      72656164 
 32952      5F64656C 
 32952      61795F73 
 32952      74725F6C 
 32953              	.LASF199:
 32954 011a 4A4F595F 		.ascii	"JOY_spec\000"
 32954      73706563 
 32954      00
 32955              	.LASF275:
 32956 0123 70726570 		.ascii	"prepare_generic_info\000"
 32956      6172655F 
 32956      67656E65 
 32956      7269635F 
 32956      696E666F 
 32957              	.LASF137:
 32958 0138 706F735F 		.ascii	"pos_lim_inf\000"
 32958      6C696D5F 
 32958      696E6600 
 32959              	.LASF239:
 32960 0144 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 32960      4E445F4D 
 32960      4F544F52 
 32960      5F494458 
 32960      00
 32961              	.LASF324:
 32962 0155 636D645F 		.ascii	"cmd_get_inputs\000"
 32962      6765745F 
 32962      696E7075 
 32962      747300
 32963              	.LASF63:
 32964 0164 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 32964      545F4D4F 
 32964      44455F45 
 32964      4D475F46 
 32964      43465300 
 32965              	.LASF141:
 32966 0178 63757272 		.ascii	"curr_lookup\000"
 32966      5F6C6F6F 
 32966      6B757000 
 32967              	.LASF109:
 32968 0184 72657374 		.ascii	"rest_counter\000"
 32968      5F636F75 
 32968      6E746572 
 32968      00
 32969              	.LASF329:
 32970 0191 636D645F 		.ascii	"cmd_get_imu_readings\000"
 32970      6765745F 
 32970      696D755F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 701


 32970      72656164 
 32970      696E6773 
 32971              	.LASF183:
 32972 01a6 73745F4D 		.ascii	"st_MASTER_spec\000"
 32972      41535445 
 32972      525F7370 
 32972      656300
 32973              	.LASF268:
 32974 01b5 69645F73 		.ascii	"id_str_len\000"
 32974      74725F6C 
 32974      656E00
 32975              	.LASF62:
 32976 01c0 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 32976      545F4D4F 
 32976      44455F45 
 32976      4D475F49 
 32976      4E544547 
 32977              	.LASF241:
 32978 01d8 6D5F746D 		.ascii	"m_tmp\000"
 32978      7000
 32979              	.LASF16:
 32980 01de 696E7438 		.ascii	"int8\000"
 32980      00
 32981              	.LASF218:
 32982 01e3 6765745F 		.ascii	"get_param_list\000"
 32982      70617261 
 32982      6D5F6C69 
 32982      737400
 32983              	.LASF309:
 32984 01f2 636D645F 		.ascii	"cmd_get_accelerations\000"
 32984      6765745F 
 32984      61636365 
 32984      6C657261 
 32984      74696F6E 
 32985              	.LASF328:
 32986 0208 636D645F 		.ascii	"cmd_get_emg\000"
 32986      6765745F 
 32986      656D6700 
 32987              	.LASF156:
 32988 0214 73745F65 		.ascii	"st_emg\000"
 32988      6D6700
 32989              	.LASF107:
 32990 021b 706F7369 		.ascii	"position_hist\000"
 32990      74696F6E 
 32990      5F686973 
 32990      7400
 32991              	.LASF206:
 32992 0229 74656D70 		.ascii	"temp_value\000"
 32992      5F76616C 
 32992      756500
 32993              	.LASF397:
 32994 0234 72657375 		.ascii	"result\000"
 32994      6C7400
 32995              	.LASF267:
 32996 023b 7370695F 		.ascii	"spi_read_delay_str\000"
 32996      72656164 
 32996      5F64656C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 702


 32996      61795F73 
 32996      747200
 32997              	.LASF190:
 32998 024e 73745F57 		.ascii	"st_WR_spec\000"
 32998      525F7370 
 32998      656300
 32999              	.LASF104:
 33000 0259 72656164 		.ascii	"ready\000"
 33000      7900
 33001              	.LASF153:
 33002 025f 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33002      6964785F 
 33002      7573655F 
 33002      666F725F 
 33002      636F6E74 
 33003              	.LASF49:
 33004 0277 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33004      4745545F 
 33004      4A4F5953 
 33004      5449434B 
 33004      00
 33005              	.LASF61:
 33006 0288 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33006      545F4D4F 
 33006      44455F45 
 33006      4D475F50 
 33006      524F504F 
 33007              	.LASF118:
 33008 02a4 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33008      326E645F 
 33008      6D6F746F 
 33008      725F666C 
 33008      616700
 33009              	.LASF320:
 33010 02b7 745F7374 		.ascii	"t_start\000"
 33010      61727400 
 33011              	.LASF163:
 33012 02bf 72656164 		.ascii	"read_imu_flag\000"
 33012      5F696D75 
 33012      5F666C61 
 33012      6700
 33013              	.LASF367:
 33014 02cd 74696D65 		.ascii	"timer_value\000"
 33014      725F7661 
 33014      6C756500 
 33015              	.LASF4:
 33016 02d9 6C6F6E67 		.ascii	"long int\000"
 33016      20696E74 
 33016      00
 33017              	.LASF196:
 33018 02e2 756E7573 		.ascii	"unused_bytes1\000"
 33018      65645F62 
 33018      79746573 
 33018      3100
 33019              	.LASF350:
 33020 02f0 6D6F746F 		.ascii	"motor_idx\000"
 33020      725F6964 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 703


 33020      7800
 33021              	.LASF117:
 33022 02fa 72657365 		.ascii	"reset_counters\000"
 33022      745F636F 
 33022      756E7465 
 33022      727300
 33023              	.LASF173:
 33024 0309 75736572 		.ascii	"user_emg\000"
 33024      5F656D67 
 33024      00
 33025              	.LASF337:
 33026 0312 636D645F 		.ascii	"cmd_get_SD_file\000"
 33026      6765745F 
 33026      53445F66 
 33026      696C6500 
 33027              	.LASF306:
 33028 0322 7365745A 		.ascii	"setZeros\000"
 33028      65726F73 
 33028      00
 33029              	.LASF122:
 33030 032b 756E7573 		.ascii	"unused_bytes\000"
 33030      65645F62 
 33030      79746573 
 33030      00
 33031              	.LASF202:
 33032 0338 61636365 		.ascii	"accel_value\000"
 33032      6C5F7661 
 33032      6C756500 
 33033              	.LASF222:
 33034 0344 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33034      4954454D 
 33034      5300
 33035              	.LASF105:
 33036 034e 73745F63 		.ascii	"st_counters\000"
 33036      6F756E74 
 33036      65727300 
 33037              	.LASF245:
 33038 035a 4D454D5F 		.ascii	"MEM_P\000"
 33038      5000
 33039              	.LASF19:
 33040 0360 666C6F61 		.ascii	"float32\000"
 33040      74333200 
 33041              	.LASF335:
 33042 0368 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33042      6765745F 
 33042      4144435F 
 33042      6D617000 
 33043              	.LASF41:
 33044 0378 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33044      4745545F 
 33044      43555252 
 33044      454E5453 
 33044      00
 33045              	.LASF106:
 33046 0389 656D675F 		.ascii	"emg_counter\000"
 33046      636F756E 
 33046      74657200 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 704


 33047              	.LASF336:
 33048 0395 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 33048      6765745F 
 33048      4144435F 
 33048      72617700 
 33049              	.LASF384:
 33050 03a5 73645061 		.ascii	"sdParam\000"
 33050      72616D00 
 33051              	.LASF255:
 33052 03ad 6175785F 		.ascii	"aux_float2\000"
 33052      666C6F61 
 33052      743200
 33053              	.LASF323:
 33054 03b8 636D645F 		.ascii	"cmd_ping\000"
 33054      70696E67 
 33054      00
 33055              	.LASF274:
 33056 03c1 7370695F 		.ascii	"spi_delay_menu_len\000"
 33056      64656C61 
 33056      795F6D65 
 33056      6E755F6C 
 33056      656E00
 33057              	.LASF253:
 33058 03d4 7365745F 		.ascii	"set_custom_param\000"
 33058      63757374 
 33058      6F6D5F70 
 33058      6172616D 
 33058      00
 33059              	.LASF305:
 33060 03e5 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33060      6E69745F 
 33060      4F74626B 
 33060      41637457 
 33060      72697374 
 33061              	.LASF0:
 33062 03fc 7369676E 		.ascii	"signed char\000"
 33062      65642063 
 33062      68617200 
 33063              	.LASF172:
 33064 0408 75736572 		.ascii	"user_code_string\000"
 33064      5F636F64 
 33064      655F7374 
 33064      72696E67 
 33064      00
 33065              	.LASF207:
 33066 0419 73745F63 		.ascii	"st_calib\000"
 33066      616C6962 
 33066      00
 33067              	.LASF344:
 33068 0422 6572725F 		.ascii	"err_emg_1\000"
 33068      656D675F 
 33068      3100
 33069              	.LASF294:
 33070 042c 6D656D53 		.ascii	"memStore\000"
 33070      746F7265 
 33070      00
 33071              	.LASF339:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 705


 33072 0435 66696C65 		.ascii	"filename\000"
 33072      6E616D65 
 33072      00
 33073              	.LASF72:
 33074 043e 6D6F746F 		.ascii	"motor_supply_type\000"
 33074      725F7375 
 33074      70706C79 
 33074      5F747970 
 33074      6500
 33075              	.LASF322:
 33076 0450 72656164 		.ascii	"read_flag\000"
 33076      5F666C61 
 33076      6700
 33077              	.LASF376:
 33078 045a 4144435F 		.ascii	"ADC_buf\000"
 33078      62756600 
 33079              	.LASF373:
 33080 0462 696E7465 		.ascii	"interrupt_flag\000"
 33080      72727570 
 33080      745F666C 
 33080      616700
 33081              	.LASF279:
 33082 0471 73746570 		.ascii	"step\000"
 33082      00
 33083              	.LASF1:
 33084 0476 756E7369 		.ascii	"unsigned char\000"
 33084      676E6564 
 33084      20636861 
 33084      7200
 33085              	.LASF147:
 33086 0484 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33086      72657665 
 33086      72735F6D 
 33086      6F746F72 
 33086      5F666C61 
 33087              	.LASF356:
 33088 049a 675F7265 		.ascii	"g_refNew\000"
 33088      664E6577 
 33088      00
 33089              	.LASF116:
 33090 04a3 72696768 		.ascii	"right_left\000"
 33090      745F6C65 
 33090      667400
 33091              	.LASF29:
 33092 04ae 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33092      53544F52 
 33092      455F4445 
 33092      4641554C 
 33092      545F5041 
 33093              	.LASF145:
 33094 04c7 656E636F 		.ascii	"encoder_line\000"
 33094      6465725F 
 33094      6C696E65 
 33094      00
 33095              	.LASF395:
 33096 04d4 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 33096      73657273 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 706


 33096      5C4D6174 
 33096      7469615C 
 33096      446F6375 
 33097 0502 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 33097      656E6572 
 33097      69632D46 
 33097      572D5053 
 33097      6F43355C 
 33098              	.LASF269:
 33099 0524 6E5F696D 		.ascii	"n_imu_str_len\000"
 33099      755F7374 
 33099      725F6C65 
 33099      6E00
 33100              	.LASF272:
 33101 0532 696D755F 		.ascii	"imu_table_str_len\000"
 33101      7461626C 
 33101      655F7374 
 33101      725F6C65 
 33101      6E00
 33102              	.LASF292:
 33103 0544 76616C75 		.ascii	"value\000"
 33103      6500
 33104              	.LASF201:
 33105 054a 666C6167 		.ascii	"flags\000"
 33105      7300
 33106              	.LASF100:
 33107 0550 70726573 		.ascii	"pressure\000"
 33107      73757265 
 33107      00
 33108              	.LASF37:
 33109 0559 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33109      4745545F 
 33109      41435449 
 33109      56415445 
 33109      00
 33110              	.LASF22:
 33111 056a 63686172 		.ascii	"char\000"
 33111      00
 33112              	.LASF140:
 33113 056f 6D61785F 		.ascii	"max_step_pos\000"
 33113      73746570 
 33113      5F706F73 
 33113      00
 33114              	.LASF389:
 33115 057c 675F696D 		.ascii	"g_imu\000"
 33115      7500
 33116              	.LASF298:
 33117 0582 7265745F 		.ascii	"ret_val\000"
 33117      76616C00 
 33118              	.LASF252:
 33119 058a 6D656E75 		.ascii	"menu_idx\000"
 33119      5F696478 
 33119      00
 33120              	.LASF261:
 33121 0593 73746172 		.ascii	"start_byte\000"
 33121      745F6279 
 33121      746500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 707


 33122              	.LASF258:
 33123 059e 6E756D5F 		.ascii	"num_mag_cal_params\000"
 33123      6D61675F 
 33123      63616C5F 
 33123      70617261 
 33123      6D7300
 33124              	.LASF146:
 33125 05b1 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33125      72617465 
 33125      5F6C696D 
 33125      69746572 
 33125      00
 33126              	.LASF126:
 33127 05c2 6B5F645F 		.ascii	"k_d_c\000"
 33127      6300
 33128              	.LASF99:
 33129 05c8 73745F66 		.ascii	"st_fb_meas\000"
 33129      625F6D65 
 33129      617300
 33130              	.LASF215:
 33131 05d3 7061636B 		.ascii	"packet_string\000"
 33131      65745F73 
 33131      7472696E 
 33131      6700
 33132              	.LASF151:
 33133 05e1 6D5F6D75 		.ascii	"m_mult\000"
 33133      6C7400
 33134              	.LASF125:
 33135 05e8 6B5F695F 		.ascii	"k_i_c\000"
 33135      6300
 33136              	.LASF295:
 33137 05ee 64697370 		.ascii	"displacement\000"
 33137      6C616365 
 33137      6D656E74 
 33137      00
 33138              	.LASF289:
 33139 05fb 64617461 		.ascii	"data_length\000"
 33139      5F6C656E 
 33139      67746800 
 33140              	.LASF138:
 33141 0607 706F735F 		.ascii	"pos_lim_sup\000"
 33141      6C696D5F 
 33141      73757000 
 33142              	.LASF159:
 33143 0613 656D675F 		.ascii	"emg_speed\000"
 33143      73706565 
 33143      6400
 33144              	.LASF177:
 33145 061d 72657374 		.ascii	"rest_vel\000"
 33145      5F76656C 
 33145      00
 33146              	.LASF228:
 33147 0626 7061636B 		.ascii	"packet_data\000"
 33147      65745F64 
 33147      61746100 
 33148              	.LASF113:
 33149 0632 73745F64 		.ascii	"st_device\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 708


 33149      65766963 
 33149      6500
 33150              	.LASF382:
 33151 063c 7046696C 		.ascii	"pFile\000"
 33151      6500
 33152              	.LASF170:
 33153 0642 4144435F 		.ascii	"ADC_conf\000"
 33153      636F6E66 
 33153      00
 33154              	.LASF286:
 33155 064b 636F6D6D 		.ascii	"commWrite\000"
 33155      57726974 
 33155      6500
 33156              	.LASF353:
 33157 0655 64656163 		.ascii	"deactivate_slaves\000"
 33157      74697661 
 33157      74655F73 
 33157      6C617665 
 33157      7300
 33158              	.LASF297:
 33159 0667 70616765 		.ascii	"pages\000"
 33159      7300
 33160              	.LASF301:
 33161 066d 6D656D49 		.ascii	"memInit\000"
 33161      6E697400 
 33162              	.LASF128:
 33163 0675 6B5F695F 		.ascii	"k_i_dl\000"
 33163      646C00
 33164              	.LASF38:
 33165 067c 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33165      5345545F 
 33165      494E5055 
 33165      545300
 33166              	.LASF102:
 33167 068b 62756666 		.ascii	"buffer\000"
 33167      657200
 33168              	.LASF130:
 33169 0692 6B5F705F 		.ascii	"k_p_c_dl\000"
 33169      635F646C 
 33169      00
 33170              	.LASF307:
 33171 069b 636D645F 		.ascii	"cmd_get_measurements\000"
 33171      6765745F 
 33171      6D656173 
 33171      7572656D 
 33171      656E7473 
 33172              	.LASF210:
 33173 06b0 73706565 		.ascii	"speed\000"
 33173      6400
 33174              	.LASF214:
 33175 06b6 72785F63 		.ascii	"rx_cmd\000"
 33175      6D6400
 33176              	.LASF87:
 33177 06bd 54595045 		.ascii	"TYPE_DOUBLE\000"
 33177      5F444F55 
 33177      424C4500 
 33178              	.LASF341:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 709


 33179 06c9 736C6176 		.ascii	"slave_motor_idx\000"
 33179      655F6D6F 
 33179      746F725F 
 33179      69647800 
 33180              	.LASF358:
 33181 06d9 675F6D65 		.ascii	"g_meas\000"
 33181      617300
 33182              	.LASF381:
 33183 06e0 456E636F 		.ascii	"Encoder_Check\000"
 33183      6465725F 
 33183      43686563 
 33183      6B00
 33184              	.LASF312:
 33185 06ee 6C617374 		.ascii	"last_aux_int16\000"
 33185      5F617578 
 33185      5F696E74 
 33185      313600
 33186              	.LASF76:
 33187 06fd 41434B5F 		.ascii	"ACK_ERROR\000"
 33187      4552524F 
 33187      5200
 33188              	.LASF378:
 33189 0707 64617461 		.ascii	"data_encoder_raw\000"
 33189      5F656E63 
 33189      6F646572 
 33189      5F726177 
 33189      00
 33190              	.LASF59:
 33191 0718 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33191      545F4D4F 
 33191      44455F45 
 33191      58544552 
 33191      4E414C00 
 33192              	.LASF243:
 33193 072c 696E6465 		.ascii	"index\000"
 33193      7800
 33194              	.LASF188:
 33195 0732 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33195      6D756D5F 
 33195      70726573 
 33195      73757265 
 33195      5F6B5061 
 33196              	.LASF178:
 33197 0747 72657374 		.ascii	"rest_position_flag\000"
 33197      5F706F73 
 33197      6974696F 
 33197      6E5F666C 
 33197      616700
 33198              	.LASF180:
 33199 075a 6A6F7973 		.ascii	"joystick_closure_speed\000"
 33199      7469636B 
 33199      5F636C6F 
 33199      73757265 
 33199      5F737065 
 33200              	.LASF338:
 33201 0771 66696C65 		.ascii	"filename_length\000"
 33201      6E616D65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 710


 33201      5F6C656E 
 33201      67746800 
 33202              	.LASF131:
 33203 0781 6B5F695F 		.ascii	"k_i_c_dl\000"
 33203      635F646C 
 33203      00
 33204              	.LASF318:
 33205 078a 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33205      52656164 
 33205      52657343 
 33205      75727246 
 33205      726F6D53 
 33206              	.LASF317:
 33207 07a0 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33207      6765745F 
 33207      63757272 
 33207      656E7473 
 33207      5F666F72 
 33208              	.LASF264:
 33209 07ba 6D61675F 		.ascii	"mag_param_str\000"
 33209      70617261 
 33209      6D5F7374 
 33209      7200
 33210              	.LASF375:
 33211 07c8 72657365 		.ascii	"reset_PSoC_flag\000"
 33211      745F5053 
 33211      6F435F66 
 33211      6C616700 
 33212              	.LASF348:
 33213 07d8 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33213      5F616374 
 33213      5F777269 
 33213      73745F63 
 33213      6F6E7472 
 33214              	.LASF88:
 33215 07ef 54595045 		.ascii	"TYPE_STRING\000"
 33215      5F535452 
 33215      494E4700 
 33216              	.LASF71:
 33217 07fb 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33217      5F414E44 
 33217      5F504F53 
 33217      5F434F4E 
 33217      54524F4C 
 33218              	.LASF28:
 33219 0810 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33219      53544F52 
 33219      455F5041 
 33219      52414D53 
 33219      00
 33220              	.LASF225:
 33221 0821 50415241 		.ascii	"PARAMS_STR\000"
 33221      4D535F53 
 33221      545200
 33222              	.LASF208:
 33223 082c 656E6162 		.ascii	"enabled\000"
 33223      6C656400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 711


 33224              	.LASF7:
 33225 0834 6C6F6E67 		.ascii	"long unsigned int\000"
 33225      20756E73 
 33225      69676E65 
 33225      6420696E 
 33225      7400
 33226              	.LASF111:
 33227 0846 746F7461 		.ascii	"total_time_on\000"
 33227      6C5F7469 
 33227      6D655F6F 
 33227      6E00
 33228              	.LASF32:
 33229 0854 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33229      424F4F54 
 33229      4C4F4144 
 33229      455200
 33230              	.LASF182:
 33231 0863 6A6F7973 		.ascii	"joystick_gains\000"
 33231      7469636B 
 33231      5F676169 
 33231      6E7300
 33232              	.LASF95:
 33233 0872 686F6C64 		.ascii	"hold_curr\000"
 33233      5F637572 
 33233      7200
 33234              	.LASF65:
 33235 087c 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33235      545F4D4F 
 33235      44455F4A 
 33235      4F595354 
 33235      49434B00 
 33236              	.LASF112:
 33237 0890 746F7461 		.ascii	"total_time_rest\000"
 33237      6C5F7469 
 33237      6D655F72 
 33237      65737400 
 33238              	.LASF217:
 33239 08a0 7374725F 		.ascii	"str_sd_data\000"
 33239      73645F64 
 33239      61746100 
 33240              	.LASF133:
 33241 08ac 61637469 		.ascii	"activ\000"
 33241      7600
 33242              	.LASF227:
 33243 08b2 4D454E55 		.ascii	"MENU_STR\000"
 33243      5F535452 
 33243      00
 33244              	.LASF150:
 33245 08bb 6D5F6F66 		.ascii	"m_off\000"
 33245      6600
 33246              	.LASF77:
 33247 08c1 41434B5F 		.ascii	"ACK_OK\000"
 33247      4F4B00
 33248              	.LASF79:
 33249 08c8 54595045 		.ascii	"TYPE_FLAG\000"
 33249      5F464C41 
 33249      4700
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 712


 33250              	.LASF205:
 33251 08d2 71756174 		.ascii	"quat_value\000"
 33251      5F76616C 
 33251      756500
 33252              	.LASF260:
 33253 08dd 7061636B 		.ascii	"packet_length\000"
 33253      65745F6C 
 33253      656E6774 
 33253      6800
 33254              	.LASF175:
 33255 08eb 72657374 		.ascii	"rest_pos\000"
 33255      5F706F73 
 33255      00
 33256              	.LASF90:
 33257 08f4 63757272 		.ascii	"curr\000"
 33257      00
 33258              	.LASF143:
 33259 08f9 696E7075 		.ascii	"input_mode\000"
 33259      745F6D6F 
 33259      646500
 33260              	.LASF69:
 33261 0904 434F4E54 		.ascii	"CONTROL_PWM\000"
 33261      524F4C5F 
 33261      50574D00 
 33262              	.LASF43:
 33263 0910 434D445F 		.ascii	"CMD_GET_EMG\000"
 33263      4745545F 
 33263      454D4700 
 33264              	.LASF302:
 33265 091c 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33265      6E69745F 
 33265      536F6674 
 33265      48616E64 
 33265      50726F00 
 33266              	.LASF31:
 33267 0930 434D445F 		.ascii	"CMD_GET_INFO\000"
 33267      4745545F 
 33267      494E464F 
 33267      00
 33268              	.LASF256:
 33269 093d 6765745F 		.ascii	"get_IMU_param_list\000"
 33269      494D555F 
 33269      70617261 
 33269      6D5F6C69 
 33269      737400
 33270              	.LASF332:
 33271 0950 73696E67 		.ascii	"single_packet\000"
 33271      6C655F70 
 33271      61636B65 
 33271      7400
 33272              	.LASF259:
 33273 095e 66697273 		.ascii	"first_imu_parameter\000"
 33273      745F696D 
 33273      755F7061 
 33273      72616D65 
 33273      74657200 
 33274              	.LASF42:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 713


 33275 0972 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33275      4745545F 
 33275      43555252 
 33275      5F414E44 
 33275      5F4D4541 
 33276              	.LASF393:
 33277 0988 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33277      43313120 
 33277      352E342E 
 33277      31203230 
 33277      31363036 
 33278 09bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33278      20726576 
 33278      6973696F 
 33278      6E203233 
 33278      37373135 
 33279 09ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33279      66756E63 
 33279      74696F6E 
 33279      2D736563 
 33279      74696F6E 
 33280              	.LASF92:
 33281 0a16 73745F72 		.ascii	"st_ref\000"
 33281      656600
 33282              	.LASF310:
 33283 0a1d 636D645F 		.ascii	"cmd_get_joystick\000"
 33283      6765745F 
 33283      6A6F7973 
 33283      7469636B 
 33283      00
 33284              	.LASF47:
 33285 0a2e 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33285      5345545F 
 33285      43554646 
 33285      5F494E50 
 33285      55545300 
 33286              	.LASF174:
 33287 0a42 73745F53 		.ascii	"st_SH_spec\000"
 33287      485F7370 
 33287      656300
 33288              	.LASF366:
 33289 0a4d 63616C69 		.ascii	"calib\000"
 33289      6200
 33290              	.LASF6:
 33291 0a53 5F5F7569 		.ascii	"__uint32_t\000"
 33291      6E743332 
 33291      5F7400
 33292              	.LASF8:
 33293 0a5e 6C6F6E67 		.ascii	"long long int\000"
 33293      206C6F6E 
 33293      6720696E 
 33293      7400
 33294              	.LASF67:
 33295 0a6c 53485F63 		.ascii	"SH_control_mode\000"
 33295      6F6E7472 
 33295      6F6C5F6D 
 33295      6F646500 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 714


 33296              	.LASF81:
 33297 0a7c 54595045 		.ascii	"TYPE_UINT8\000"
 33297      5F55494E 
 33297      543800
 33298              	.LASF316:
 33299 0a87 636D645F 		.ascii	"cmd_get_currents\000"
 33299      6765745F 
 33299      63757272 
 33299      656E7473 
 33299      00
 33300              	.LASF74:
 33301 0a98 4D41584F 		.ascii	"MAXON_12V\000"
 33301      4E5F3132 
 33301      5600
 33302              	.LASF374:
 33303 0aa2 6368616E 		.ascii	"change_ext_ref_flag\000"
 33303      67655F65 
 33303      78745F72 
 33303      65665F66 
 33303      6C616700 
 33304              	.LASF21:
 33305 0ab6 646F7562 		.ascii	"double\000"
 33305      6C6500
 33306              	.LASF56:
 33307 0abd 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33307      4745545F 
 33307      53445F53 
 33307      494E474C 
 33307      455F4649 
 33308              	.LASF149:
 33309 0ad4 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33309      7261775F 
 33309      72656164 
 33309      5F636F6E 
 33309      6600
 33310              	.LASF211:
 33311 0ae6 72657065 		.ascii	"repetitions\000"
 33311      74697469 
 33311      6F6E7300 
 33312              	.LASF139:
 33313 0af2 6D61785F 		.ascii	"max_step_neg\000"
 33313      73746570 
 33313      5F6E6567 
 33313      00
 33314              	.LASF185:
 33315 0aff 736C6176 		.ascii	"slave_ID\000"
 33315      655F4944 
 33315      00
 33316              	.LASF372:
 33317 0b08 72657365 		.ascii	"reset_last_value_flag\000"
 33317      745F6C61 
 33317      73745F76 
 33317      616C7565 
 33317      5F666C61 
 33318              	.LASF226:
 33319 0b1e 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33319      4F4D5F50 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 715


 33319      4152414D 
 33319      5F474554 
 33319      00
 33320              	.LASF20:
 33321 0b2f 666C6F61 		.ascii	"float\000"
 33321      7400
 33322              	.LASF165:
 33323 0b35 494D555F 		.ascii	"IMU_conf\000"
 33323      636F6E66 
 33323      00
 33324              	.LASF244:
 33325 0b3e 50415241 		.ascii	"PARAM_IDX\000"
 33325      4D5F4944 
 33325      5800
 33326              	.LASF96:
 33327 0b48 73745F61 		.ascii	"st_adc_meas\000"
 33327      64635F6D 
 33327      65617300 
 33328              	.LASF240:
 33329 0b54 6D5F6164 		.ascii	"m_addr\000"
 33329      647200
 33330              	.LASF365:
 33331 0b5b 635F6D65 		.ascii	"c_mem\000"
 33331      6D00
 33332              	.LASF288:
 33333 0b61 64617461 		.ascii	"data_array\000"
 33333      5F617272 
 33333      617900
 33334              	.LASF10:
 33335 0b6c 756E7369 		.ascii	"unsigned int\000"
 33335      676E6564 
 33335      20696E74 
 33335      00
 33336              	.LASF345:
 33337 0b79 6572725F 		.ascii	"err_emg_2\000"
 33337      656D675F 
 33337      3200
 33338              	.LASF303:
 33339 0b83 6D656D49 		.ascii	"memInit_Master\000"
 33339      6E69745F 
 33339      4D617374 
 33339      657200
 33340              	.LASF229:
 33341 0b92 7061636B 		.ascii	"packet_lenght\000"
 33341      65745F6C 
 33341      656E6768 
 33341      7400
 33342              	.LASF291:
 33343 0ba0 73656E64 		.ascii	"sendAcknowledgment\000"
 33343      41636B6E 
 33343      6F776C65 
 33343      64676D65 
 33343      6E7400
 33344              	.LASF281:
 33345 0bb3 70726570 		.ascii	"prepare_SD_legend\000"
 33345      6172655F 
 33345      53445F6C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 716


 33345      6567656E 
 33345      6400
 33346              	.LASF390:
 33347 0bc5 4D616743 		.ascii	"MagCal\000"
 33347      616C00
 33348              	.LASF57:
 33349 0bcc 53485F63 		.ascii	"SH_command\000"
 33349      6F6D6D61 
 33349      6E6400
 33350              	.LASF83:
 33351 0bd7 54595045 		.ascii	"TYPE_UINT16\000"
 33351      5F55494E 
 33351      54313600 
 33352              	.LASF195:
 33353 0be3 666C6167 		.ascii	"flag\000"
 33353      00
 33354              	.LASF311:
 33355 0be8 636D645F 		.ascii	"cmd_set_inputs\000"
 33355      7365745F 
 33355      696E7075 
 33355      747300
 33356              	.LASF144:
 33357 0bf7 636F6E74 		.ascii	"control_mode\000"
 33357      726F6C5F 
 33357      6D6F6465 
 33357      00
 33358              	.LASF326:
 33359 0c04 6F66665F 		.ascii	"off_1\000"
 33359      3100
 33360              	.LASF60:
 33361 0c0a 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33361      545F4D4F 
 33361      44455F45 
 33361      4E434F44 
 33361      45523300 
 33362              	.LASF287:
 33363 0c1e 636F6D6D 		.ascii	"commWriteID\000"
 33363      57726974 
 33363      65494400 
 33364              	.LASF52:
 33365 0c2a 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33365      4745545F 
 33365      454E434F 
 33365      4445525F 
 33365      434F4E46 
 33366              	.LASF162:
 33367 0c3f 73745F69 		.ascii	"st_imu\000"
 33367      6D7500
 33368              	.LASF314:
 33369 0c46 636D645F 		.ascii	"cmd_get_activate\000"
 33369      6765745F 
 33369      61637469 
 33369      76617465 
 33369      00
 33370              	.LASF342:
 33371 0c57 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33371      61637469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 717


 33371      76617469 
 33371      6F6E5F76 
 33371      656C6F63 
 33372              	.LASF231:
 33373 0c73 73747269 		.ascii	"string_lenght\000"
 33373      6E675F6C 
 33373      656E6768 
 33373      7400
 33374              	.LASF86:
 33375 0c81 54595045 		.ascii	"TYPE_FLOAT\000"
 33375      5F464C4F 
 33375      415400
 33376              	.LASF249:
 33377 0c8c 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33377      4F4D5F50 
 33377      4152414D 
 33377      5F534554 
 33377      5F4C4953 
 33378              	.LASF223:
 33379 0ca2 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33379      53545255 
 33379      435400
 33380              	.LASF388:
 33381 0cad 73696E67 		.ascii	"single_imu_size\000"
 33381      6C655F69 
 33381      6D755F73 
 33381      697A6500 
 33382              	.LASF254:
 33383 0cbd 6175785F 		.ascii	"aux_uchar\000"
 33383      75636861 
 33383      7200
 33384              	.LASF97:
 33385 0cc7 6164645F 		.ascii	"add_emg\000"
 33385      656D6700 
 33386              	.LASF82:
 33387 0ccf 54595045 		.ascii	"TYPE_INT16\000"
 33387      5F494E54 
 33387      313600
 33388              	.LASF235:
 33389 0cda 6175785F 		.ascii	"aux_uint16\000"
 33389      75696E74 
 33389      313600
 33390              	.LASF157:
 33391 0ce5 656D675F 		.ascii	"emg_threshold\000"
 33391      74687265 
 33391      73686F6C 
 33391      6400
 33392              	.LASF46:
 33393 0cf3 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33393      4745545F 
 33393      43555252 
 33393      5F444946 
 33393      4600
 33394              	.LASF108:
 33395 0d05 63757272 		.ascii	"current_hist\000"
 33395      656E745F 
 33395      68697374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 718


 33395      00
 33396              	.LASF70:
 33397 0d12 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33397      524F4C5F 
 33397      43555252 
 33397      454E5400 
 33398              	.LASF24:
 33399 0d22 6C6F6E67 		.ascii	"long double\000"
 33399      20646F75 
 33399      626C6500 
 33400              	.LASF85:
 33401 0d2e 54595045 		.ascii	"TYPE_UINT32\000"
 33401      5F55494E 
 33401      54333200 
 33402              	.LASF186:
 33403 0d3a 73745F46 		.ascii	"st_FB_spec\000"
 33403      425F7370 
 33403      656300
 33404              	.LASF220:
 33405 0d45 5641525F 		.ascii	"VAR_P\000"
 33405      5000
 33406              	.LASF248:
 33407 0d4b 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33407      4F4D5F50 
 33407      4152414D 
 33407      5F474554 
 33407      5F4C4953 
 33408              	.LASF154:
 33409 0d61 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33409      725F6861 
 33409      6E646C65 
 33409      5F726174 
 33409      696F00
 33410              	.LASF290:
 33411 0d74 63686563 		.ascii	"checksum\000"
 33411      6B73756D 
 33411      00
 33412              	.LASF357:
 33413 0d7d 675F7265 		.ascii	"g_refOld\000"
 33413      664F6C64 
 33413      00
 33414              	.LASF35:
 33415 0d86 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33415      48414E44 
 33415      5F43414C 
 33415      49425241 
 33415      544500
 33416              	.LASF203:
 33417 0d99 6779726F 		.ascii	"gyro_value\000"
 33417      5F76616C 
 33417      756500
 33418              	.LASF167:
 33419 0da4 63757272 		.ascii	"curr_time\000"
 33419      5F74696D 
 33419      6500
 33420              	.LASF152:
 33421 0dae 646F7562 		.ascii	"double_encoder_on_off\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 719


 33421      6C655F65 
 33421      6E636F64 
 33421      65725F6F 
 33421      6E5F6F66 
 33422              	.LASF349:
 33423 0dc4 64726976 		.ascii	"drive_slave\000"
 33423      655F736C 
 33423      61766500 
 33424              	.LASF164:
 33425 0dd0 5350495F 		.ascii	"SPI_read_delay\000"
 33425      72656164 
 33425      5F64656C 
 33425      617900
 33426              	.LASF75:
 33427 0ddf 61636B6E 		.ascii	"acknowledgment_values\000"
 33427      6F776C65 
 33427      64676D65 
 33427      6E745F76 
 33427      616C7565 
 33428              	.LASF238:
 33429 0df5 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33429      525F4944 
 33429      5800
 33430              	.LASF300:
 33431 0dff 6D656D52 		.ascii	"memRestore\000"
 33431      6573746F 
 33431      726500
 33432              	.LASF262:
 33433 0e0a 6E5F696D 		.ascii	"n_imu_str\000"
 33433      755F7374 
 33433      7200
 33434              	.LASF276:
 33435 0e14 696E666F 		.ascii	"info_string\000"
 33435      5F737472 
 33435      696E6700 
 33436              	.LASF282:
 33437 0e20 70726570 		.ascii	"prepare_SD_info\000"
 33437      6172655F 
 33437      53445F69 
 33437      6E666F00 
 33438              	.LASF343:
 33439 0e30 66736D5F 		.ascii	"fsm_state\000"
 33439      73746174 
 33439      6500
 33440              	.LASF9:
 33441 0e3a 6C6F6E67 		.ascii	"long long unsigned int\000"
 33441      206C6F6E 
 33441      6720756E 
 33441      7369676E 
 33441      65642069 
 33442              	.LASF84:
 33443 0e51 54595045 		.ascii	"TYPE_INT32\000"
 33443      5F494E54 
 33443      333200
 33444              	.LASF237:
 33445 0e5c 6175785F 		.ascii	"aux_uint32\000"
 33445      75696E74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 720


 33445      333200
 33446              	.LASF103:
 33447 0e67 6C656E67 		.ascii	"length\000"
 33447      746800
 33448              	.LASF250:
 33449 0e6e 55534552 		.ascii	"USER_ID_PARAM\000"
 33449      5F49445F 
 33449      50415241 
 33449      4D00
 33450              	.LASF200:
 33451 0e7c 73745F69 		.ascii	"st_imu_data\000"
 33451      6D755F64 
 33451      61746100 
 33452              	.LASF204:
 33453 0e88 6D61675F 		.ascii	"mag_value\000"
 33453      76616C75 
 33453      6500
 33454              	.LASF91:
 33455 0e92 6F6E6F66 		.ascii	"onoff\000"
 33455      6600
 33456              	.LASF45:
 33457 0e98 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 33457      4745545F 
 33457      41434345 
 33457      4C00
 33458              	.LASF308:
 33459 0ea6 636D645F 		.ascii	"cmd_get_velocities\000"
 33459      6765745F 
 33459      76656C6F 
 33459      63697469 
 33459      657300
 33460              	.LASF299:
 33461 0eb9 6D656D52 		.ascii	"memRecall\000"
 33461      6563616C 
 33461      6C00
 33462              	.LASF368:
 33463 0ec3 74696D65 		.ascii	"timer_value0\000"
 33463      725F7661 
 33463      6C756530 
 33463      00
 33464              	.LASF48:
 33465 0ed0 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 33465      5345545F 
 33465      42415544 
 33465      52415445 
 33465      00
 33466              	.LASF124:
 33467 0ee1 6B5F705F 		.ascii	"k_p_c\000"
 33467      6300
 33468              	.LASF266:
 33469 0ee7 696D755F 		.ascii	"imu_table_str\000"
 33469      7461626C 
 33469      655F7374 
 33469      7200
 33470              	.LASF369:
 33471 0ef5 6465765F 		.ascii	"dev_tension\000"
 33471      74656E73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 721


 33471      696F6E00 
 33472              	.LASF135:
 33473 0f01 6D6F746F 		.ascii	"motor_driver_type\000"
 33473      725F6472 
 33473      69766572 
 33473      5F747970 
 33473      6500
 33474              	.LASF327:
 33475 0f13 6D756C74 		.ascii	"mult_1\000"
 33475      5F3100
 33476              	.LASF278:
 33477 0f1a 70726570 		.ascii	"prepare_counter_info\000"
 33477      6172655F 
 33477      636F756E 
 33477      7465725F 
 33477      696E666F 
 33478              	.LASF23:
 33479 0f2f 72656738 		.ascii	"reg8\000"
 33479      00
 33480              	.LASF189:
 33481 0f34 70726F70 		.ascii	"prop_err_fb_gain\000"
 33481      5F657272 
 33481      5F66625F 
 33481      6761696E 
 33481      00
 33482              	.LASF284:
 33483 0f45 636F6D6D 		.ascii	"commWrite_old_id\000"
 33483      57726974 
 33483      655F6F6C 
 33483      645F6964 
 33483      00
 33484              	.LASF242:
 33485 0f56 6D616E61 		.ascii	"manage_param_list\000"
 33485      67655F70 
 33485      6172616D 
 33485      5F6C6973 
 33485      7400
 33486              	.LASF30:
 33487 0f68 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 33487      52455354 
 33487      4F52455F 
 33487      50415241 
 33487      4D5300
 33488              	.LASF383:
 33489 0f7b 73644669 		.ascii	"sdFile\000"
 33489      6C6500
 33490              	.LASF280:
 33491 0f82 70726570 		.ascii	"prepare_SD_param_info\000"
 33491      6172655F 
 33491      53445F70 
 33491      6172616D 
 33491      5F696E66 
 33492              	.LASF319:
 33493 0f98 63757272 		.ascii	"curr_diff\000"
 33493      5F646966 
 33493      6600
 33494              	.LASF184:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 722


 33495 0fa2 736C6176 		.ascii	"slave_comm_active\000"
 33495      655F636F 
 33495      6D6D5F61 
 33495      63746976 
 33495      6500
 33496              	.LASF285:
 33497 0fb4 6F6C645F 		.ascii	"old_id\000"
 33497      696400
 33498              	.LASF396:
 33499 0fbb 5F5F5245 		.ascii	"__REV16\000"
 33499      56313600 
 33500              	.LASF379:
 33501 0fc3 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 33501      636F6465 
 33501      725F4C69 
 33501      6E655F43 
 33501      6F6E6E65 
 33502              	.LASF121:
 33503 0fdc 6465765F 		.ascii	"dev_type\000"
 33503      74797065 
 33503      00
 33504              	.LASF171:
 33505 0fe5 73745F75 		.ascii	"st_user\000"
 33505      73657200 
 33506              	.LASF315:
 33507 0fed 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 33507      6765745F 
 33507      63757272 
 33507      5F616E64 
 33507      5F6D6561 
 33508              	.LASF155:
 33509 1003 67656172 		.ascii	"gears_params\000"
 33509      735F7061 
 33509      72616D73 
 33509      00
 33510              	.LASF166:
 33511 1010 73745F65 		.ascii	"st_expansion\000"
 33511      7870616E 
 33511      73696F6E 
 33511      00
 33512              	.LASF160:
 33513 101d 656D675F 		.ascii	"emg_calibration_flag\000"
 33513      63616C69 
 33513      62726174 
 33513      696F6E5F 
 33513      666C6167 
 33514              	.LASF93:
 33515 1032 73745F6D 		.ascii	"st_meas\000"
 33515      65617300 
 33516              	.LASF55:
 33517 103a 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 33517      4745545F 
 33517      4144435F 
 33517      52415700 
 33518              	.LASF181:
 33519 104a 6A6F7973 		.ascii	"joystick_threshold\000"
 33519      7469636B 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 723


 33519      5F746872 
 33519      6573686F 
 33519      6C6400
 33520              	.LASF73:
 33521 105d 4D41584F 		.ascii	"MAXON_24V\000"
 33521      4E5F3234 
 33521      5600
 33522              	.LASF66:
 33523 1067 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 33523      545F4D4F 
 33523      44455F45 
 33523      4D475F50 
 33523      524F504F 
 33524              	.LASF51:
 33525 1086 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 33525      4745545F 
 33525      494D555F 
 33525      50415241 
 33525      4D00
 33526              	.LASF362:
 33527 1098 675F6662 		.ascii	"g_fb_meas\000"
 33527      5F6D6561 
 33527      7300
 33528              	.LASF53:
 33529 10a2 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 33529      4745545F 
 33529      454E434F 
 33529      4445525F 
 33529      52415700 
 33530              	.LASF325:
 33531 10b6 636D645F 		.ascii	"cmd_store_params\000"
 33531      73746F72 
 33531      655F7061 
 33531      72616D73 
 33531      00
 33532              	.LASF364:
 33533 10c7 675F6D65 		.ascii	"g_mem\000"
 33533      6D00
 33534              	.LASF40:
 33535 10cd 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 33535      4745545F 
 33535      4D454153 
 33535      5552454D 
 33535      454E5453 
 33536              	.LASF361:
 33537 10e2 675F6164 		.ascii	"g_adc_measOld\000"
 33537      635F6D65 
 33537      61734F6C 
 33537      6400
 33538              	.LASF334:
 33539 10f0 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 33539      6765745F 
 33539      656E636F 
 33539      6465725F 
 33539      72617700 
 33540              	.LASF13:
 33541 1104 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 724


 33541      3800
 33542              	.LASF212:
 33543 110a 636F6D6D 		.ascii	"commProcess\000"
 33543      50726F63 
 33543      65737300 
 33544              	.LASF179:
 33545 1116 73745F4A 		.ascii	"st_JOY_spec\000"
 33545      4F595F73 
 33545      70656300 
 33546              	.LASF2:
 33547 1122 73686F72 		.ascii	"short int\000"
 33547      7420696E 
 33547      7400
 33548              	.LASF304:
 33549 112c 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 33549      6E69745F 
 33549      41697243 
 33549      68616D62 
 33549      65727346 
 33550              	.LASF270:
 33551 1142 6964735F 		.ascii	"ids_str_len\000"
 33551      7374725F 
 33551      6C656E00 
 33552              	.LASF129:
 33553 114e 6B5F645F 		.ascii	"k_d_dl\000"
 33553      646C00
 33554              	.LASF230:
 33555 1155 6964785F 		.ascii	"idx_menu\000"
 33555      6D656E75 
 33555      00
 33556              	.LASF98:
 33557 115e 6A6F7973 		.ascii	"joystick\000"
 33557      7469636B 
 33557      00
 33558              	.LASF197:
 33559 1167 6D6F746F 		.ascii	"motor\000"
 33559      7200
 33560              	.LASF385:
 33561 116d 4E5F494D 		.ascii	"N_IMU_Connected\000"
 33561      555F436F 
 33561      6E6E6563 
 33561      74656400 
 33562              	.LASF39:
 33563 117d 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 33563      4745545F 
 33563      494E5055 
 33563      545300
 33564              	.LASF114:
 33565 118c 68775F6D 		.ascii	"hw_maint_date\000"
 33565      61696E74 
 33565      5F646174 
 33565      6500
 33566              	.LASF263:
 33567 119a 6964735F 		.ascii	"ids_str\000"
 33567      73747200 
 33568              	.LASF54:
 33569 11a2 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 725


 33569      4745545F 
 33569      4144435F 
 33569      434F4E46 
 33569      00
 33570              	.LASF27:
 33571 11b3 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 33571      5345545F 
 33571      5A45524F 
 33571      5300
 33572              	.LASF271:
 33573 11c1 6D61675F 		.ascii	"mag_param_str_len\000"
 33573      70617261 
 33573      6D5F7374 
 33573      725F6C65 
 33573      6E00
 33574              	.LASF257:
 33575 11d3 6E756D5F 		.ascii	"num_imus_id_params\000"
 33575      696D7573 
 33575      5F69645F 
 33575      70617261 
 33575      6D7300
 33576              	.LASF234:
 33577 11e6 6175785F 		.ascii	"aux_int16\000"
 33577      696E7431 
 33577      3600
 33578              	.LASF392:
 33579 11f0 45455052 		.ascii	"EEPROM_ADDR\000"
 33579      4F4D5F41 
 33579      44445200 
 33580              	.LASF115:
 33581 11fc 73746174 		.ascii	"stats_period_begin_date\000"
 33581      735F7065 
 33581      72696F64 
 33581      5F626567 
 33581      696E5F64 
 33582              	.LASF387:
 33583 1214 696D7573 		.ascii	"imus_data_size\000"
 33583      5F646174 
 33583      615F7369 
 33583      7A6500
 33584              	.LASF354:
 33585 1223 49544D5F 		.ascii	"ITM_RxBuffer\000"
 33585      52784275 
 33585      66666572 
 33585      00
 33586              	.LASF44:
 33587 1230 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 33587      4745545F 
 33587      56454C4F 
 33587      43495449 
 33587      455300
 33588              	.LASF371:
 33589 1243 706F775F 		.ascii	"pow_tension\000"
 33589      74656E73 
 33589      696F6E00 
 33590              	.LASF34:
 33591 124f 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 726


 33591      4745545F 
 33591      50415241 
 33591      4D5F4C49 
 33591      535400
 33592              	.LASF78:
 33593 1262 64617461 		.ascii	"data_types\000"
 33593      5F747970 
 33593      657300
 33594              	.LASF17:
 33595 126d 696E7431 		.ascii	"int16\000"
 33595      3600
 33596              	.LASF168:
 33597 1273 72656164 		.ascii	"read_exp_port_flag\000"
 33597      5F657870 
 33597      5F706F72 
 33597      745F666C 
 33597      616700
 33598              	.LASF161:
 33599 1286 73776974 		.ascii	"switch_emg\000"
 33599      63685F65 
 33599      6D6700
 33600              	.LASF134:
 33601 1291 61637469 		.ascii	"activate_pwm_rescaling\000"
 33601      76617465 
 33601      5F70776D 
 33601      5F726573 
 33601      63616C69 
 33602              	.LASF127:
 33603 12a8 6B5F705F 		.ascii	"k_p_dl\000"
 33603      646C00
 33604              	.LASF94:
 33605 12af 65737469 		.ascii	"estim_curr\000"
 33605      6D5F6375 
 33605      727200
 33606              	.LASF370:
 33607 12ba 6465765F 		.ascii	"dev_pwm_limit\000"
 33607      70776D5F 
 33607      6C696D69 
 33607      7400
 33608              	.LASF169:
 33609 12c8 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 33609      5F414443 
 33609      5F73656E 
 33609      736F7273 
 33609      5F706F72 
 33610              	.LASF380:
 33611 12e3 456E636F 		.ascii	"Encoder_Value\000"
 33611      6465725F 
 33611      56616C75 
 33611      6500
 33612              	.LASF333:
 33613 12f1 636D645F 		.ascii	"cmd_get_encoder_map\000"
 33613      6765745F 
 33613      656E636F 
 33613      6465725F 
 33613      6D617000 
 33614              	.LASF120:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 727


 33615 1305 75736572 		.ascii	"user_id\000"
 33615      5F696400 
 33616              	.LASF12:
 33617 130d 75696E74 		.ascii	"uint32_t\000"
 33617      33325F74 
 33617      00
 33618              	.LASF233:
 33619 1316 6175785F 		.ascii	"aux_float\000"
 33619      666C6F61 
 33619      7400
 33620              	.LASF386:
 33621 1320 494D555F 		.ascii	"IMU_connected\000"
 33621      636F6E6E 
 33621      65637465 
 33621      6400
 33622              	.LASF224:
 33623 132e 4E554D5F 		.ascii	"NUM_MENU\000"
 33623      4D454E55 
 33623      00
 33624              	.LASF236:
 33625 1337 6175785F 		.ascii	"aux_int32\000"
 33625      696E7433 
 33625      3200
 33626              	.LASF119:
 33627 1341 62617564 		.ascii	"baud_rate\000"
 33627      5F726174 
 33627      6500
 33628              	.LASF321:
 33629 134b 745F656E 		.ascii	"t_end\000"
 33629      6400
 33630              	.LASF192:
 33631 1351 66617374 		.ascii	"fast_act_threshold\000"
 33631      5F616374 
 33631      5F746872 
 33631      6573686F 
 33631      6C6400
 33632              	.LASF219:
 33633 1364 696E666F 		.ascii	"info_type\000"
 33633      5F747970 
 33633      6500
 33634              	.LASF50:
 33635 136e 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 33635      4745545F 
 33635      494D555F 
 33635      52454144 
 33635      494E4753 
 33636              	.LASF293:
 33637 1383 4C435243 		.ascii	"LCRChecksum\000"
 33637      6865636B 
 33637      73756D00 
 33638              	.LASF330:
 33639 138f 6B5F696D 		.ascii	"k_imu\000"
 33639      7500
 33640              	.LASF3:
 33641 1395 73686F72 		.ascii	"short unsigned int\000"
 33641      7420756E 
 33641      7369676E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 728


 33641      65642069 
 33641      6E7400
 33642              	.LASF148:
 33643 13a8 73745F65 		.ascii	"st_encoder\000"
 33643      6E636F64 
 33643      657200
 33644              	.LASF360:
 33645 13b3 675F6164 		.ascii	"g_adc_meas\000"
 33645      635F6D65 
 33645      617300
 33646              	.LASF187:
 33647 13be 6D61785F 		.ascii	"max_residual_current\000"
 33647      72657369 
 33647      6475616C 
 33647      5F637572 
 33647      72656E74 
 33648              	.LASF277:
 33649 13d3 454E435F 		.ascii	"ENC_L\000"
 33649      4C00
 33650              	.LASF194:
 33651 13d9 73745F65 		.ascii	"st_eeprom\000"
 33651      6570726F 
 33651      6D00
 33652              	.LASF221:
 33653 13e3 54595045 		.ascii	"TYPES\000"
 33653      5300
 33654              	.LASF355:
 33655 13e9 675F7265 		.ascii	"g_ref\000"
 33655      6600
 33656              	.LASF18:
 33657 13ef 696E7433 		.ascii	"int32\000"
 33657      3200
 33658              	.LASF377:
 33659 13f5 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 33659      4F465F41 
 33659      4E414C4F 
 33659      475F494E 
 33659      50555453 
 33660              	.LASF216:
 33661 140a 696E666F 		.ascii	"infoGet\000"
 33661      47657400 
 33662              	.LASF123:
 33663 1412 73745F6D 		.ascii	"st_motor\000"
 33663      6F746F72 
 33663      00
 33664              	.LASF391:
 33665 141b 6D617374 		.ascii	"master_mode\000"
 33665      65725F6D 
 33665      6F646500 
 33666              	.LASF89:
 33667 1427 46535F46 		.ascii	"FS_FILE\000"
 33667      494C4500 
 33668              	.LASF136:
 33669 142f 706F735F 		.ascii	"pos_lim_flag\000"
 33669      6C696D5F 
 33669      666C6167 
 33669      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 729


 33670              	.LASF359:
 33671 143c 675F6D65 		.ascii	"g_measOld\000"
 33671      61734F6C 
 33671      6400
 33672              	.LASF68:
 33673 1446 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 33673      524F4C5F 
 33673      414E474C 
 33673      4500
 33674              	.LASF313:
 33675 1454 636D645F 		.ascii	"cmd_activate\000"
 33675      61637469 
 33675      76617465 
 33675      00
 33676              	.LASF5:
 33677 1461 5F5F696E 		.ascii	"__int32_t\000"
 33677      7433325F 
 33677      7400
 33678              	.LASF246:
 33679 146b 7370695F 		.ascii	"spi_delay_menu\000"
 33679      64656C61 
 33679      795F6D65 
 33679      6E7500
 33680              	.LASF110:
 33681 147a 77697265 		.ascii	"wire_disp\000"
 33681      5F646973 
 33681      7000
 33682              	.LASF158:
 33683 1484 656D675F 		.ascii	"emg_max_value\000"
 33683      6D61785F 
 33683      76616C75 
 33683      6500
 33684              	.LASF251:
 33685 1492 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 33685      4F4D5F50 
 33685      4152414D 
 33685      5F534554 
 33685      00
 33686              	.LASF394:
 33687 14a3 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 33687      72635C63 
 33687      6F6D6D61 
 33687      6E645F70 
 33687      726F6365 
 33688              	.LASF142:
 33689 14bf 63757272 		.ascii	"current_limit\000"
 33689      656E745F 
 33689      6C696D69 
 33689      7400
 33690              	.LASF58:
 33691 14cd 53485F69 		.ascii	"SH_input_mode\000"
 33691      6E707574 
 33691      5F6D6F64 
 33691      6500
 33692              	.LASF80:
 33693 14db 54595045 		.ascii	"TYPE_INT8\000"
 33693      5F494E54 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccSq4DYo.s 			page 730


 33693      3800
 33694              	.LASF191:
 33695 14e5 61637469 		.ascii	"activation_mode\000"
 33695      76617469 
 33695      6F6E5F6D 
 33695      6F646500 
 33696              	.LASF283:
 33697 14f5 494D555F 		.ascii	"IMU_reading_info\000"
 33697      72656164 
 33697      696E675F 
 33697      696E666F 
 33697      00
 33698              	.LASF14:
 33699 1506 75696E74 		.ascii	"uint16\000"
 33699      313600
 33700              	.LASF176:
 33701 150d 72657374 		.ascii	"rest_delay\000"
 33701      5F64656C 
 33701      617900
 33702              	.LASF232:
 33703 1518 6175785F 		.ascii	"aux_str\000"
 33703      73747200 
 33704              	.LASF26:
 33705 1520 434D445F 		.ascii	"CMD_PING\000"
 33705      50494E47 
 33705      00
 33706              	.LASF132:
 33707 1529 6B5F645F 		.ascii	"k_d_c_dl\000"
 33707      635F646C 
 33707      00
 33708              	.LASF209:
 33709 1532 64697265 		.ascii	"direction\000"
 33709      6374696F 
 33709      6E00
 33710              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
