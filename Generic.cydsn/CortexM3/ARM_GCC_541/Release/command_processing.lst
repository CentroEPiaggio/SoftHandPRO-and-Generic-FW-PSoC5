ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC81:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 35


 805              	.LC82:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC83:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC84:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC85:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC86:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC87:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC88:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC89:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC90:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC91:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 36


 835              	.LC92:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC93:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC94:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC95:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC96:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC97:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC98:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC99:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC100:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC101:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC102:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC103:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC104:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC105:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC106:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC107:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC108:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC109:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC110:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891 019f 00       		.align	2
 892              	.LC111:
 893 01a0 20414952 		.ascii	" AIR CHAMBERS \000\000"
 893      20434841 
 893      4D424552 
 893      53200000 
 894              		.section	.text.get_param_list,"ax",%progbits
 895              		.align	2
 896              		.global	get_param_list
 897              		.thumb
 898              		.thumb_func
 899              		.type	get_param_list, %function
 900              	get_param_list:
 901              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 38


 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 902              		.loc 1 345 0
 903              		.cfi_startproc
 904              		@ args = 16, pretend = 0, frame = 5208
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 ADF5A25D 		sub	sp, sp, #5184
 914              		.cfi_def_cfa_offset 5204
 915 0006 87B0     		sub	sp, sp, #28
 916              		.cfi_def_cfa_offset 5232
 917 0008 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 000a 07F11804 		add	r4, r7, #24
 920 000e 0C3C     		subs	r4, r4, #12
 921 0010 2060     		str	r0, [r4]
 922 0012 07F11800 		add	r0, r7, #24
 923 0016 1038     		subs	r0, r0, #16
 924 0018 0160     		str	r1, [r0]
 925 001a 07F11801 		add	r1, r7, #24
 926 001e 1439     		subs	r1, r1, #20
 927 0020 0A60     		str	r2, [r1]
 928 0022 07F11802 		add	r2, r7, #24
 929 0026 183A     		subs	r2, r2, #24
 930 0028 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 931              		.loc 1 348 0
 932 002a 07F15803 		add	r3, r7, #88
 933 002e 0022     		movs	r2, #0
 934 0030 1A60     		str	r2, [r3]
 935 0032 0433     		adds	r3, r3, #4
 936 0034 41F2E832 		movw	r2, #5096
 937 0038 0021     		movs	r1, #0
 938 003a 1846     		mov	r0, r3
 939 003c FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 940              		.loc 1 349 0
 941 0040 41F2EC33 		movw	r3, #5100
 942 0044 07F5A252 		add	r2, r7, #5184
 943 0048 02F11002 		add	r2, r2, #16
 944 004c 1380     		strh	r3, [r2]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 945              		.loc 1 353 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 39


 946 004e 0023     		movs	r3, #0
 947 0050 07F5A252 		add	r2, r7, #5184
 948 0054 02F11502 		add	r2, r2, #21
 949 0058 1370     		strb	r3, [r2]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 950              		.loc 1 354 0
 951 005a 0023     		movs	r3, #0
 952 005c 07F5A252 		add	r2, r7, #5184
 953 0060 02F11402 		add	r2, r2, #20
 954 0064 1370     		strb	r3, [r2]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 955              		.loc 1 355 0
 956 0066 0023     		movs	r3, #0
 957 0068 07F5A252 		add	r2, r7, #5184
 958 006c 02F11302 		add	r2, r2, #19
 959 0070 1370     		strb	r3, [r2]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 960              		.loc 1 357 0
 961 0072 07F13803 		add	r3, r7, #56
 962 0076 143B     		subs	r3, r3, #20
 963 0078 0022     		movs	r2, #0
 964 007a 1A60     		str	r2, [r3]
 965 007c 0433     		adds	r3, r3, #4
 966 007e 2E22     		movs	r2, #46
 967 0080 0021     		movs	r1, #0
 968 0082 1846     		mov	r0, r3
 969 0084 FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 970              		.loc 1 364 0
 971 0088 0023     		movs	r3, #0
 972 008a 07F5A252 		add	r2, r7, #5184
 973 008e 02F10F02 		add	r2, r2, #15
 974 0092 1370     		strb	r3, [r2]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 975              		.loc 1 365 0
 976 0094 0123     		movs	r3, #1
 977 0096 07F5A252 		add	r2, r7, #5184
 978 009a 02F10E02 		add	r2, r2, #14
 979 009e 1370     		strb	r3, [r2]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 980              		.loc 1 367 0
 981 00a0 07F11803 		add	r3, r7, #24
 982 00a4 0C3B     		subs	r3, r3, #12
 983 00a6 1B68     		ldr	r3, [r3]
 984 00a8 1B68     		ldr	r3, [r3]
 985 00aa 07F5A252 		add	r2, r7, #5184
 986 00ae 02F10802 		add	r2, r2, #8
 987 00b2 1360     		str	r3, [r2]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 40


 988              		.loc 1 368 0
 989 00b4 07F5A253 		add	r3, r7, #5184
 990 00b8 03F10803 		add	r3, r3, #8
 991 00bc 1B68     		ldr	r3, [r3]
 992 00be 07F5A252 		add	r2, r7, #5184
 993 00c2 02F10402 		add	r2, r2, #4
 994 00c6 1360     		str	r3, [r2]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 995              		.loc 1 370 0
 996 00c8 07F15803 		add	r3, r7, #88
 997 00cc 0C22     		movs	r2, #12
 998 00ce 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 999              		.loc 1 371 0
 1000 00d0 07F15803 		add	r3, r7, #88
 1001 00d4 4722     		movs	r2, #71
 1002 00d6 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1003              		.loc 1 373 0
 1004 00d8 0023     		movs	r3, #0
 1005 00da 07F5A252 		add	r2, r7, #5184
 1006 00de 02F11502 		add	r2, r2, #21
 1007 00e2 1370     		strb	r3, [r2]
 1008 00e4 02F092BE 		b	.L63
 1009              	.L249:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1010              		.loc 1 376 0
 1011 00e8 07F5A253 		add	r3, r7, #5184
 1012 00ec 03F11503 		add	r3, r3, #21
 1013 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1014 00f2 9A00     		lsls	r2, r3, #2
 1015 00f4 07F11803 		add	r3, r7, #24
 1016 00f8 0C3B     		subs	r3, r3, #12
 1017 00fa 1B68     		ldr	r3, [r3]
 1018 00fc 1344     		add	r3, r3, r2
 1019 00fe 1B68     		ldr	r3, [r3]
 1020 0100 07F5A252 		add	r2, r7, #5184
 1021 0104 02F10802 		add	r2, r2, #8
 1022 0108 1360     		str	r3, [r2]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1023              		.loc 1 379 0
 1024 010a 07F5A253 		add	r3, r7, #5184
 1025 010e 03F11503 		add	r3, r3, #21
 1026 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1027 0114 3222     		movs	r2, #50
 1028 0116 02FB03F3 		mul	r3, r2, r3
 1029 011a 9A1C     		adds	r2, r3, #2
 1030 011c 07F5A253 		add	r3, r7, #5184
 1031 0120 03F11503 		add	r3, r3, #21
 1032 0124 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1033 0126 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 41


 1034 012a 103B     		subs	r3, r3, #16
 1035 012c 1B68     		ldr	r3, [r3]
 1036 012e 0B44     		add	r3, r3, r1
 1037 0130 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1038 0132 07F15803 		add	r3, r7, #88
 1039 0136 9954     		strb	r1, [r3, r2]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1040              		.loc 1 380 0
 1041 0138 07F5A253 		add	r3, r7, #5184
 1042 013c 03F11503 		add	r3, r3, #21
 1043 0140 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1044 0142 3222     		movs	r2, #50
 1045 0144 02FB03F3 		mul	r3, r2, r3
 1046 0148 DA1C     		adds	r2, r3, #3
 1047 014a 07F5A253 		add	r3, r7, #5184
 1048 014e 03F11503 		add	r3, r3, #21
 1049 0152 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1050 0154 07F11803 		add	r3, r7, #24
 1051 0158 143B     		subs	r3, r3, #20
 1052 015a 1B68     		ldr	r3, [r3]
 1053 015c 0B44     		add	r3, r3, r1
 1054 015e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1055 0160 07F15803 		add	r3, r7, #88
 1056 0164 9954     		strb	r1, [r3, r2]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1057              		.loc 1 383 0
 1058 0166 07F5A253 		add	r3, r7, #5184
 1059 016a 03F11503 		add	r3, r3, #21
 1060 016e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1061 0170 07F11803 		add	r3, r7, #24
 1062 0174 103B     		subs	r3, r3, #16
 1063 0176 1B68     		ldr	r3, [r3]
 1064 0178 1344     		add	r3, r3, r2
 1065 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 017c 092B     		cmp	r3, #9
 1067 017e 2CD8     		bhi	.L64
 1068 0180 01A2     		adr	r2, .L66
 1069 0182 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1070 0186 00BF     		.p2align 2
 1071              	.L66:
 1072 0188 B1010000 		.word	.L65+1
 1073 018c B1010000 		.word	.L65+1
 1074 0190 B1010000 		.word	.L65+1
 1075 0194 BF010000 		.word	.L67+1
 1076 0198 BF010000 		.word	.L67+1
 1077 019c CD010000 		.word	.L68+1
 1078 01a0 CD010000 		.word	.L68+1
 1079 01a4 CD010000 		.word	.L68+1
 1080 01a8 DB010000 		.word	.L64+1
 1081 01ac B1010000 		.word	.L65+1
 1082              		.p2align 1
 1083              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1084              		.loc 1 385 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 42


 1085 01b0 0123     		movs	r3, #1
 1086 01b2 07F5A252 		add	r2, r7, #5184
 1087 01b6 02F11302 		add	r2, r2, #19
 1088 01ba 1370     		strb	r3, [r2]
 1089 01bc 0DE0     		b	.L64
 1090              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1091              		.loc 1 387 0
 1092 01be 0223     		movs	r3, #2
 1093 01c0 07F5A252 		add	r2, r7, #5184
 1094 01c4 02F11302 		add	r2, r2, #19
 1095 01c8 1370     		strb	r3, [r2]
 1096 01ca 06E0     		b	.L64
 1097              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1098              		.loc 1 389 0
 1099 01cc 0423     		movs	r3, #4
 1100 01ce 07F5A252 		add	r2, r7, #5184
 1101 01d2 02F11302 		add	r2, r2, #19
 1102 01d6 1370     		strb	r3, [r2]
 1103 01d8 00BF     		nop
 1104              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1105              		.loc 1 392 0
 1106 01da 07F5A253 		add	r3, r7, #5184
 1107 01de 03F11503 		add	r3, r3, #21
 1108 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1109 01e4 07F5A352 		add	r2, r7, #5216
 1110 01e8 02F11802 		add	r2, r2, #24
 1111 01ec 1268     		ldr	r2, [r2]
 1112 01ee 1344     		add	r3, r3, r2
 1113 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 01f2 002B     		cmp	r3, #0
 1115 01f4 40F0D383 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1116              		.loc 1 395 0
 1117 01f8 07F5A253 		add	r3, r7, #5184
 1118 01fc 03F11503 		add	r3, r3, #21
 1119 0200 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1120 0202 07F11803 		add	r3, r7, #24
 1121 0206 103B     		subs	r3, r3, #16
 1122 0208 1B68     		ldr	r3, [r3]
 1123 020a 1344     		add	r3, r3, r2
 1124 020c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1125 020e 092B     		cmp	r3, #9
 1126 0210 02F2FF80 		bhi	.L103
 1127 0214 01A2     		adr	r2, .L72
 1128 0216 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1129 021a 00BF     		.p2align 2
 1130              	.L72:
 1131 021c 45020000 		.word	.L71+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 43


 1132 0220 FF020000 		.word	.L73+1
 1133 0224 45020000 		.word	.L71+1
 1134 0228 B9030000 		.word	.L74+1
 1135 022c E9040000 		.word	.L75+1
 1136 0230 17060000 		.word	.L76+1
 1137 0234 41070000 		.word	.L77+1
 1138 0238 6F080000 		.word	.L78+1
 1139 023c 13240000 		.word	.L103+1
 1140 0240 45020000 		.word	.L71+1
 1141              		.p2align 1
 1142              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1143              		.loc 1 397 0
 1144 0244 0023     		movs	r3, #0
 1145 0246 07F5A252 		add	r2, r7, #5184
 1146 024a 02F11702 		add	r2, r2, #23
 1147 024e 1370     		strb	r3, [r2]
 1148 0250 41E0     		b	.L79
 1149              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1150              		.loc 1 398 0 discriminator 3
 1151 0252 07F5A253 		add	r3, r7, #5184
 1152 0256 03F11703 		add	r3, r3, #23
 1153 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1154 025c 07F5A252 		add	r2, r7, #5184
 1155 0260 02F11302 		add	r2, r2, #19
 1156 0264 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1157 0266 02FB03F3 		mul	r3, r2, r3
 1158 026a 1A46     		mov	r2, r3
 1159 026c 07F5A253 		add	r3, r7, #5184
 1160 0270 03F10803 		add	r3, r3, #8
 1161 0274 1B68     		ldr	r3, [r3]
 1162 0276 1344     		add	r3, r3, r2
 1163 0278 07F5A252 		add	r2, r7, #5184
 1164 027c 02F10402 		add	r2, r2, #4
 1165 0280 1360     		str	r3, [r2]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1166              		.loc 1 399 0 discriminator 3
 1167 0282 07F5A253 		add	r3, r7, #5184
 1168 0286 03F11503 		add	r3, r3, #21
 1169 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1170 028c 3222     		movs	r2, #50
 1171 028e 02FB03F3 		mul	r3, r2, r3
 1172 0292 1A1D     		adds	r2, r3, #4
 1173 0294 07F5A253 		add	r3, r7, #5184
 1174 0298 03F11703 		add	r3, r3, #23
 1175 029c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1176 029e 07F5A251 		add	r1, r7, #5184
 1177 02a2 01F11301 		add	r1, r1, #19
 1178 02a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1179 02a8 01FB03F3 		mul	r3, r1, r3
 1180 02ac 1344     		add	r3, r3, r2
 1181 02ae 07F5A252 		add	r2, r7, #5184
 1182 02b2 02F10402 		add	r2, r2, #4
 1183 02b6 1268     		ldr	r2, [r2]
 1184 02b8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 44


 1185 02ba 07F15802 		add	r2, r7, #88
 1186 02be D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1187              		.loc 1 397 0 discriminator 3
 1188 02c0 07F5A253 		add	r3, r7, #5184
 1189 02c4 03F11703 		add	r3, r3, #23
 1190 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1191 02ca 0133     		adds	r3, r3, #1
 1192 02cc 07F5A252 		add	r2, r7, #5184
 1193 02d0 02F11702 		add	r2, r2, #23
 1194 02d4 1370     		strb	r3, [r2]
 1195              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1196              		.loc 1 397 0 is_stmt 0 discriminator 1
 1197 02d6 07F5A253 		add	r3, r7, #5184
 1198 02da 03F11503 		add	r3, r3, #21
 1199 02de 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1200 02e0 07F11803 		add	r3, r7, #24
 1201 02e4 143B     		subs	r3, r3, #20
 1202 02e6 1B68     		ldr	r3, [r3]
 1203 02e8 1344     		add	r3, r3, r2
 1204 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1205 02ec 07F5A252 		add	r2, r7, #5184
 1206 02f0 02F11702 		add	r2, r2, #23
 1207 02f4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1208 02f6 9A42     		cmp	r2, r3
 1209 02f8 ABD3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1210              		.loc 1 401 0 is_stmt 1
 1211 02fa 02F08AB8 		b	.L103
 1212              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1213              		.loc 1 403 0
 1214 02fe 0023     		movs	r3, #0
 1215 0300 07F5A252 		add	r2, r7, #5184
 1216 0304 02F11702 		add	r2, r2, #23
 1217 0308 1370     		strb	r3, [r2]
 1218 030a 41E0     		b	.L81
 1219              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1220              		.loc 1 404 0 discriminator 3
 1221 030c 07F5A253 		add	r3, r7, #5184
 1222 0310 03F11703 		add	r3, r3, #23
 1223 0314 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1224 0316 07F5A252 		add	r2, r7, #5184
 1225 031a 02F11302 		add	r2, r2, #19
 1226 031e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1227 0320 02FB03F3 		mul	r3, r2, r3
 1228 0324 1A46     		mov	r2, r3
 1229 0326 07F5A253 		add	r3, r7, #5184
 1230 032a 03F10803 		add	r3, r3, #8
 1231 032e 1B68     		ldr	r3, [r3]
 1232 0330 1344     		add	r3, r3, r2
 1233 0332 07F5A252 		add	r2, r7, #5184
 1234 0336 02F10402 		add	r2, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 45


 1235 033a 1360     		str	r3, [r2]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1236              		.loc 1 405 0 discriminator 3
 1237 033c 07F5A253 		add	r3, r7, #5184
 1238 0340 03F11503 		add	r3, r3, #21
 1239 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1240 0346 3222     		movs	r2, #50
 1241 0348 02FB03F3 		mul	r3, r2, r3
 1242 034c 1A1D     		adds	r2, r3, #4
 1243 034e 07F5A253 		add	r3, r7, #5184
 1244 0352 03F11703 		add	r3, r3, #23
 1245 0356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1246 0358 07F5A251 		add	r1, r7, #5184
 1247 035c 01F11301 		add	r1, r1, #19
 1248 0360 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1249 0362 01FB03F3 		mul	r3, r1, r3
 1250 0366 1344     		add	r3, r3, r2
 1251 0368 07F5A252 		add	r2, r7, #5184
 1252 036c 02F10402 		add	r2, r2, #4
 1253 0370 1268     		ldr	r2, [r2]
 1254 0372 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1255 0374 07F15802 		add	r2, r7, #88
 1256 0378 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1257              		.loc 1 403 0 discriminator 3
 1258 037a 07F5A253 		add	r3, r7, #5184
 1259 037e 03F11703 		add	r3, r3, #23
 1260 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0384 0133     		adds	r3, r3, #1
 1262 0386 07F5A252 		add	r2, r7, #5184
 1263 038a 02F11702 		add	r2, r2, #23
 1264 038e 1370     		strb	r3, [r2]
 1265              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1266              		.loc 1 403 0 is_stmt 0 discriminator 1
 1267 0390 07F5A253 		add	r3, r7, #5184
 1268 0394 03F11503 		add	r3, r3, #21
 1269 0398 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1270 039a 07F11803 		add	r3, r7, #24
 1271 039e 143B     		subs	r3, r3, #20
 1272 03a0 1B68     		ldr	r3, [r3]
 1273 03a2 1344     		add	r3, r3, r2
 1274 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1275 03a6 07F5A252 		add	r2, r7, #5184
 1276 03aa 02F11702 		add	r2, r2, #23
 1277 03ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1278 03b0 9A42     		cmp	r2, r3
 1279 03b2 ABD3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1280              		.loc 1 407 0 is_stmt 1
 1281 03b4 02F02DB8 		b	.L103
 1282              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1283              		.loc 1 409 0
 1284 03b8 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 46


 1285 03ba 07F5A252 		add	r2, r7, #5184
 1286 03be 02F11702 		add	r2, r2, #23
 1287 03c2 1370     		strb	r3, [r2]
 1288 03c4 7BE0     		b	.L83
 1289              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1290              		.loc 1 410 0
 1291 03c6 07F5A253 		add	r3, r7, #5184
 1292 03ca 03F11703 		add	r3, r3, #23
 1293 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1294 03d0 07F5A252 		add	r2, r7, #5184
 1295 03d4 02F11302 		add	r2, r2, #19
 1296 03d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1297 03da 02FB03F3 		mul	r3, r2, r3
 1298 03de 1A46     		mov	r2, r3
 1299 03e0 07F5A253 		add	r3, r7, #5184
 1300 03e4 03F10803 		add	r3, r3, #8
 1301 03e8 1B68     		ldr	r3, [r3]
 1302 03ea 1344     		add	r3, r3, r2
 1303 03ec 07F5A252 		add	r2, r7, #5184
 1304 03f0 02F10402 		add	r2, r2, #4
 1305 03f4 1360     		str	r3, [r2]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1306              		.loc 1 411 0
 1307 03f6 07F5A253 		add	r3, r7, #5184
 1308 03fa 03F10403 		add	r3, r3, #4
 1309 03fe 1B68     		ldr	r3, [r3]
 1310 0400 B3F90020 		ldrsh	r2, [r3]
 1311 0404 07F13803 		add	r3, r7, #56
 1312 0408 1A3B     		subs	r3, r3, #26
 1313 040a 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1314              		.loc 1 412 0
 1315 040c 0023     		movs	r3, #0
 1316 040e 07F5A252 		add	r2, r7, #5184
 1317 0412 02F11602 		add	r2, r2, #22
 1318 0416 1370     		strb	r3, [r2]
 1319 0418 3AE0     		b	.L84
 1320              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1321              		.loc 1 413 0 discriminator 3
 1322 041a 07F5A253 		add	r3, r7, #5184
 1323 041e 03F11503 		add	r3, r3, #21
 1324 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0424 3222     		movs	r2, #50
 1326 0426 02FB03F3 		mul	r3, r2, r3
 1327 042a 1A1D     		adds	r2, r3, #4
 1328 042c 07F5A253 		add	r3, r7, #5184
 1329 0430 03F11703 		add	r3, r3, #23
 1330 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1331 0436 07F5A251 		add	r1, r7, #5184
 1332 043a 01F11301 		add	r1, r1, #19
 1333 043e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1334 0440 01FB03F3 		mul	r3, r1, r3
 1335 0444 1A44     		add	r2, r2, r3
 1336 0446 07F5A253 		add	r3, r7, #5184
 1337 044a 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 47


 1338 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1339 0450 1A44     		add	r2, r2, r3
 1340 0452 07F5A253 		add	r3, r7, #5184
 1341 0456 03F11603 		add	r3, r3, #22
 1342 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1343 045c D31A     		subs	r3, r2, r3
 1344 045e 5A1E     		subs	r2, r3, #1
 1345 0460 07F5A253 		add	r3, r7, #5184
 1346 0464 03F11603 		add	r3, r3, #22
 1347 0468 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1348 046a 07F13803 		add	r3, r7, #56
 1349 046e 1A3B     		subs	r3, r3, #26
 1350 0470 0B44     		add	r3, r3, r1
 1351 0472 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1352 0474 07F15803 		add	r3, r7, #88
 1353 0478 9954     		strb	r1, [r3, r2]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1354              		.loc 1 412 0 discriminator 3
 1355 047a 07F5A253 		add	r3, r7, #5184
 1356 047e 03F11603 		add	r3, r3, #22
 1357 0482 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1358 0484 0133     		adds	r3, r3, #1
 1359 0486 07F5A252 		add	r2, r7, #5184
 1360 048a 02F11602 		add	r2, r2, #22
 1361 048e 1370     		strb	r3, [r2]
 1362              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1363              		.loc 1 412 0 is_stmt 0 discriminator 1
 1364 0490 07F5A253 		add	r3, r7, #5184
 1365 0494 03F11603 		add	r3, r3, #22
 1366 0498 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1367 049a 07F5A253 		add	r3, r7, #5184
 1368 049e 03F11303 		add	r3, r3, #19
 1369 04a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1370 04a4 9A42     		cmp	r2, r3
 1371 04a6 B8D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1372              		.loc 1 409 0 is_stmt 1 discriminator 2
 1373 04a8 07F5A253 		add	r3, r7, #5184
 1374 04ac 03F11703 		add	r3, r3, #23
 1375 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1376 04b2 0133     		adds	r3, r3, #1
 1377 04b4 07F5A252 		add	r2, r7, #5184
 1378 04b8 02F11702 		add	r2, r2, #23
 1379 04bc 1370     		strb	r3, [r2]
 1380              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 409 0 is_stmt 0 discriminator 1
 1382 04be 07F5A253 		add	r3, r7, #5184
 1383 04c2 03F11503 		add	r3, r3, #21
 1384 04c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1385 04c8 07F11803 		add	r3, r7, #24
 1386 04cc 143B     		subs	r3, r3, #20
 1387 04ce 1B68     		ldr	r3, [r3]
 1388 04d0 1344     		add	r3, r3, r2
 1389 04d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1390 04d4 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 48


 1391 04d8 02F11702 		add	r2, r2, #23
 1392 04dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1393 04de 9A42     		cmp	r2, r3
 1394 04e0 FFF471AF 		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1395              		.loc 1 416 0 is_stmt 1
 1396 04e4 01F095BF 		b	.L103
 1397              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1398              		.loc 1 418 0
 1399 04e8 0023     		movs	r3, #0
 1400 04ea 07F5A252 		add	r2, r7, #5184
 1401 04ee 02F11702 		add	r2, r2, #23
 1402 04f2 1370     		strb	r3, [r2]
 1403 04f4 7AE0     		b	.L87
 1404              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1405              		.loc 1 419 0
 1406 04f6 07F5A253 		add	r3, r7, #5184
 1407 04fa 03F11703 		add	r3, r3, #23
 1408 04fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1409 0500 07F5A252 		add	r2, r7, #5184
 1410 0504 02F11302 		add	r2, r2, #19
 1411 0508 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1412 050a 02FB03F3 		mul	r3, r2, r3
 1413 050e 1A46     		mov	r2, r3
 1414 0510 07F5A253 		add	r3, r7, #5184
 1415 0514 03F10803 		add	r3, r3, #8
 1416 0518 1B68     		ldr	r3, [r3]
 1417 051a 1344     		add	r3, r3, r2
 1418 051c 07F5A252 		add	r2, r7, #5184
 1419 0520 02F10402 		add	r2, r2, #4
 1420 0524 1360     		str	r3, [r2]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1421              		.loc 1 420 0
 1422 0526 07F5A253 		add	r3, r7, #5184
 1423 052a 03F10403 		add	r3, r3, #4
 1424 052e 1B68     		ldr	r3, [r3]
 1425 0530 1A88     		ldrh	r2, [r3]
 1426 0532 07F13803 		add	r3, r7, #56
 1427 0536 1C3B     		subs	r3, r3, #28
 1428 0538 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1429              		.loc 1 421 0
 1430 053a 0023     		movs	r3, #0
 1431 053c 07F5A252 		add	r2, r7, #5184
 1432 0540 02F11602 		add	r2, r2, #22
 1433 0544 1370     		strb	r3, [r2]
 1434 0546 3AE0     		b	.L88
 1435              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1436              		.loc 1 422 0 discriminator 3
 1437 0548 07F5A253 		add	r3, r7, #5184
 1438 054c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 49


 1439 0550 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1440 0552 3222     		movs	r2, #50
 1441 0554 02FB03F3 		mul	r3, r2, r3
 1442 0558 1A1D     		adds	r2, r3, #4
 1443 055a 07F5A253 		add	r3, r7, #5184
 1444 055e 03F11703 		add	r3, r3, #23
 1445 0562 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1446 0564 07F5A251 		add	r1, r7, #5184
 1447 0568 01F11301 		add	r1, r1, #19
 1448 056c 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1449 056e 01FB03F3 		mul	r3, r1, r3
 1450 0572 1A44     		add	r2, r2, r3
 1451 0574 07F5A253 		add	r3, r7, #5184
 1452 0578 03F11303 		add	r3, r3, #19
 1453 057c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1454 057e 1A44     		add	r2, r2, r3
 1455 0580 07F5A253 		add	r3, r7, #5184
 1456 0584 03F11603 		add	r3, r3, #22
 1457 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1458 058a D31A     		subs	r3, r2, r3
 1459 058c 5A1E     		subs	r2, r3, #1
 1460 058e 07F5A253 		add	r3, r7, #5184
 1461 0592 03F11603 		add	r3, r3, #22
 1462 0596 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1463 0598 07F13803 		add	r3, r7, #56
 1464 059c 1C3B     		subs	r3, r3, #28
 1465 059e 0B44     		add	r3, r3, r1
 1466 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1467 05a2 07F15803 		add	r3, r7, #88
 1468 05a6 9954     		strb	r1, [r3, r2]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1469              		.loc 1 421 0 discriminator 3
 1470 05a8 07F5A253 		add	r3, r7, #5184
 1471 05ac 03F11603 		add	r3, r3, #22
 1472 05b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1473 05b2 0133     		adds	r3, r3, #1
 1474 05b4 07F5A252 		add	r2, r7, #5184
 1475 05b8 02F11602 		add	r2, r2, #22
 1476 05bc 1370     		strb	r3, [r2]
 1477              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1478              		.loc 1 421 0 is_stmt 0 discriminator 1
 1479 05be 07F5A253 		add	r3, r7, #5184
 1480 05c2 03F11603 		add	r3, r3, #22
 1481 05c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1482 05c8 07F5A253 		add	r3, r7, #5184
 1483 05cc 03F11303 		add	r3, r3, #19
 1484 05d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1485 05d2 9A42     		cmp	r2, r3
 1486 05d4 B8D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1487              		.loc 1 418 0 is_stmt 1 discriminator 2
 1488 05d6 07F5A253 		add	r3, r7, #5184
 1489 05da 03F11703 		add	r3, r3, #23
 1490 05de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 05e0 0133     		adds	r3, r3, #1
 1492 05e2 07F5A252 		add	r2, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 50


 1493 05e6 02F11702 		add	r2, r2, #23
 1494 05ea 1370     		strb	r3, [r2]
 1495              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1496              		.loc 1 418 0 is_stmt 0 discriminator 1
 1497 05ec 07F5A253 		add	r3, r7, #5184
 1498 05f0 03F11503 		add	r3, r3, #21
 1499 05f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1500 05f6 07F11803 		add	r3, r7, #24
 1501 05fa 143B     		subs	r3, r3, #20
 1502 05fc 1B68     		ldr	r3, [r3]
 1503 05fe 1344     		add	r3, r3, r2
 1504 0600 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1505 0602 07F5A252 		add	r2, r7, #5184
 1506 0606 02F11702 		add	r2, r2, #23
 1507 060a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1508 060c 9A42     		cmp	r2, r3
 1509 060e FFF472AF 		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1510              		.loc 1 425 0 is_stmt 1
 1511 0612 01F0FEBE 		b	.L103
 1512              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1513              		.loc 1 427 0
 1514 0616 0023     		movs	r3, #0
 1515 0618 07F5A252 		add	r2, r7, #5184
 1516 061c 02F11702 		add	r2, r2, #23
 1517 0620 1370     		strb	r3, [r2]
 1518 0622 78E0     		b	.L91
 1519              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1520              		.loc 1 428 0
 1521 0624 07F5A253 		add	r3, r7, #5184
 1522 0628 03F11703 		add	r3, r3, #23
 1523 062c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1524 062e 07F5A252 		add	r2, r7, #5184
 1525 0632 02F11302 		add	r2, r2, #19
 1526 0636 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1527 0638 02FB03F3 		mul	r3, r2, r3
 1528 063c 1A46     		mov	r2, r3
 1529 063e 07F5A253 		add	r3, r7, #5184
 1530 0642 03F10803 		add	r3, r3, #8
 1531 0646 1B68     		ldr	r3, [r3]
 1532 0648 1344     		add	r3, r3, r2
 1533 064a 07F5A252 		add	r2, r7, #5184
 1534 064e 02F10402 		add	r2, r2, #4
 1535 0652 1360     		str	r3, [r2]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1536              		.loc 1 429 0
 1537 0654 07F5A253 		add	r3, r7, #5184
 1538 0658 03F10403 		add	r3, r3, #4
 1539 065c 1B68     		ldr	r3, [r3]
 1540 065e 1A68     		ldr	r2, [r3]
 1541 0660 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 51


 1542 0664 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1543              		.loc 1 430 0
 1544 0666 0023     		movs	r3, #0
 1545 0668 07F5A252 		add	r2, r7, #5184
 1546 066c 02F11602 		add	r2, r2, #22
 1547 0670 1370     		strb	r3, [r2]
 1548 0672 39E0     		b	.L92
 1549              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1550              		.loc 1 431 0 discriminator 3
 1551 0674 07F5A253 		add	r3, r7, #5184
 1552 0678 03F11503 		add	r3, r3, #21
 1553 067c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 067e 3222     		movs	r2, #50
 1555 0680 02FB03F3 		mul	r3, r2, r3
 1556 0684 1A1D     		adds	r2, r3, #4
 1557 0686 07F5A253 		add	r3, r7, #5184
 1558 068a 03F11703 		add	r3, r3, #23
 1559 068e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1560 0690 07F5A251 		add	r1, r7, #5184
 1561 0694 01F11301 		add	r1, r1, #19
 1562 0698 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1563 069a 01FB03F3 		mul	r3, r1, r3
 1564 069e 1A44     		add	r2, r2, r3
 1565 06a0 07F5A253 		add	r3, r7, #5184
 1566 06a4 03F11303 		add	r3, r3, #19
 1567 06a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1568 06aa 1A44     		add	r2, r2, r3
 1569 06ac 07F5A253 		add	r3, r7, #5184
 1570 06b0 03F11603 		add	r3, r3, #22
 1571 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 06b6 D31A     		subs	r3, r2, r3
 1573 06b8 013B     		subs	r3, r3, #1
 1574 06ba 07F5A252 		add	r2, r7, #5184
 1575 06be 02F11602 		add	r2, r2, #22
 1576 06c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1577 06c4 07F11801 		add	r1, r7, #24
 1578 06c8 0A44     		add	r2, r2, r1
 1579 06ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1580 06cc 07F15802 		add	r2, r7, #88
 1581 06d0 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1582              		.loc 1 430 0 discriminator 3
 1583 06d2 07F5A253 		add	r3, r7, #5184
 1584 06d6 03F11603 		add	r3, r3, #22
 1585 06da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1586 06dc 0133     		adds	r3, r3, #1
 1587 06de 07F5A252 		add	r2, r7, #5184
 1588 06e2 02F11602 		add	r2, r2, #22
 1589 06e6 1370     		strb	r3, [r2]
 1590              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1591              		.loc 1 430 0 is_stmt 0 discriminator 1
 1592 06e8 07F5A253 		add	r3, r7, #5184
 1593 06ec 03F11603 		add	r3, r3, #22
 1594 06f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 52


 1595 06f2 07F5A253 		add	r3, r7, #5184
 1596 06f6 03F11303 		add	r3, r3, #19
 1597 06fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 06fc 9A42     		cmp	r2, r3
 1599 06fe B9D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1600              		.loc 1 427 0 is_stmt 1 discriminator 2
 1601 0700 07F5A253 		add	r3, r7, #5184
 1602 0704 03F11703 		add	r3, r3, #23
 1603 0708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 070a 0133     		adds	r3, r3, #1
 1605 070c 07F5A252 		add	r2, r7, #5184
 1606 0710 02F11702 		add	r2, r2, #23
 1607 0714 1370     		strb	r3, [r2]
 1608              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1609              		.loc 1 427 0 is_stmt 0 discriminator 1
 1610 0716 07F5A253 		add	r3, r7, #5184
 1611 071a 03F11503 		add	r3, r3, #21
 1612 071e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1613 0720 07F11803 		add	r3, r7, #24
 1614 0724 143B     		subs	r3, r3, #20
 1615 0726 1B68     		ldr	r3, [r3]
 1616 0728 1344     		add	r3, r3, r2
 1617 072a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1618 072c 07F5A252 		add	r2, r7, #5184
 1619 0730 02F11702 		add	r2, r2, #23
 1620 0734 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1621 0736 9A42     		cmp	r2, r3
 1622 0738 FFF474AF 		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1623              		.loc 1 434 0 is_stmt 1
 1624 073c 01F069BE 		b	.L103
 1625              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1626              		.loc 1 436 0
 1627 0740 0023     		movs	r3, #0
 1628 0742 07F5A252 		add	r2, r7, #5184
 1629 0746 02F11702 		add	r2, r2, #23
 1630 074a 1370     		strb	r3, [r2]
 1631 074c 7AE0     		b	.L95
 1632              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1633              		.loc 1 437 0
 1634 074e 07F5A253 		add	r3, r7, #5184
 1635 0752 03F11703 		add	r3, r3, #23
 1636 0756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1637 0758 07F5A252 		add	r2, r7, #5184
 1638 075c 02F11302 		add	r2, r2, #19
 1639 0760 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1640 0762 02FB03F3 		mul	r3, r2, r3
 1641 0766 1A46     		mov	r2, r3
 1642 0768 07F5A253 		add	r3, r7, #5184
 1643 076c 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 53


 1644 0770 1B68     		ldr	r3, [r3]
 1645 0772 1344     		add	r3, r3, r2
 1646 0774 07F5A252 		add	r2, r7, #5184
 1647 0778 02F10402 		add	r2, r2, #4
 1648 077c 1360     		str	r3, [r2]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1649              		.loc 1 438 0
 1650 077e 07F5A253 		add	r3, r7, #5184
 1651 0782 03F10403 		add	r3, r3, #4
 1652 0786 1B68     		ldr	r3, [r3]
 1653 0788 1A68     		ldr	r2, [r3]
 1654 078a 07F11803 		add	r3, r7, #24
 1655 078e 043B     		subs	r3, r3, #4
 1656 0790 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1657              		.loc 1 439 0
 1658 0792 0023     		movs	r3, #0
 1659 0794 07F5A252 		add	r2, r7, #5184
 1660 0798 02F11602 		add	r2, r2, #22
 1661 079c 1370     		strb	r3, [r2]
 1662 079e 3AE0     		b	.L96
 1663              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1664              		.loc 1 440 0 discriminator 3
 1665 07a0 07F5A253 		add	r3, r7, #5184
 1666 07a4 03F11503 		add	r3, r3, #21
 1667 07a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1668 07aa 3222     		movs	r2, #50
 1669 07ac 02FB03F3 		mul	r3, r2, r3
 1670 07b0 1A1D     		adds	r2, r3, #4
 1671 07b2 07F5A253 		add	r3, r7, #5184
 1672 07b6 03F11703 		add	r3, r3, #23
 1673 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1674 07bc 07F5A251 		add	r1, r7, #5184
 1675 07c0 01F11301 		add	r1, r1, #19
 1676 07c4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1677 07c6 01FB03F3 		mul	r3, r1, r3
 1678 07ca 1A44     		add	r2, r2, r3
 1679 07cc 07F5A253 		add	r3, r7, #5184
 1680 07d0 03F11303 		add	r3, r3, #19
 1681 07d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1682 07d6 1A44     		add	r2, r2, r3
 1683 07d8 07F5A253 		add	r3, r7, #5184
 1684 07dc 03F11603 		add	r3, r3, #22
 1685 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1686 07e2 D31A     		subs	r3, r2, r3
 1687 07e4 5A1E     		subs	r2, r3, #1
 1688 07e6 07F5A253 		add	r3, r7, #5184
 1689 07ea 03F11603 		add	r3, r3, #22
 1690 07ee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1691 07f0 07F11803 		add	r3, r7, #24
 1692 07f4 043B     		subs	r3, r3, #4
 1693 07f6 0B44     		add	r3, r3, r1
 1694 07f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1695 07fa 07F15803 		add	r3, r7, #88
 1696 07fe 9954     		strb	r1, [r3, r2]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 54


 1697              		.loc 1 439 0 discriminator 3
 1698 0800 07F5A253 		add	r3, r7, #5184
 1699 0804 03F11603 		add	r3, r3, #22
 1700 0808 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1701 080a 0133     		adds	r3, r3, #1
 1702 080c 07F5A252 		add	r2, r7, #5184
 1703 0810 02F11602 		add	r2, r2, #22
 1704 0814 1370     		strb	r3, [r2]
 1705              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1706              		.loc 1 439 0 is_stmt 0 discriminator 1
 1707 0816 07F5A253 		add	r3, r7, #5184
 1708 081a 03F11603 		add	r3, r3, #22
 1709 081e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1710 0820 07F5A253 		add	r3, r7, #5184
 1711 0824 03F11303 		add	r3, r3, #19
 1712 0828 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1713 082a 9A42     		cmp	r2, r3
 1714 082c B8D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1715              		.loc 1 436 0 is_stmt 1 discriminator 2
 1716 082e 07F5A253 		add	r3, r7, #5184
 1717 0832 03F11703 		add	r3, r3, #23
 1718 0836 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1719 0838 0133     		adds	r3, r3, #1
 1720 083a 07F5A252 		add	r2, r7, #5184
 1721 083e 02F11702 		add	r2, r2, #23
 1722 0842 1370     		strb	r3, [r2]
 1723              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1724              		.loc 1 436 0 is_stmt 0 discriminator 1
 1725 0844 07F5A253 		add	r3, r7, #5184
 1726 0848 03F11503 		add	r3, r3, #21
 1727 084c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1728 084e 07F11803 		add	r3, r7, #24
 1729 0852 143B     		subs	r3, r3, #20
 1730 0854 1B68     		ldr	r3, [r3]
 1731 0856 1344     		add	r3, r3, r2
 1732 0858 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1733 085a 07F5A252 		add	r2, r7, #5184
 1734 085e 02F11702 		add	r2, r2, #23
 1735 0862 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1736 0864 9A42     		cmp	r2, r3
 1737 0866 FFF472AF 		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1738              		.loc 1 443 0 is_stmt 1
 1739 086a 01F0D2BD 		b	.L103
 1740              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1741              		.loc 1 446 0
 1742 086e 0023     		movs	r3, #0
 1743 0870 07F5A252 		add	r2, r7, #5184
 1744 0874 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 55


 1745 0878 1370     		strb	r3, [r2]
 1746 087a 7AE0     		b	.L99
 1747              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1748              		.loc 1 447 0
 1749 087c 07F5A253 		add	r3, r7, #5184
 1750 0880 03F11703 		add	r3, r3, #23
 1751 0884 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1752 0886 07F5A252 		add	r2, r7, #5184
 1753 088a 02F11302 		add	r2, r2, #19
 1754 088e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1755 0890 02FB03F3 		mul	r3, r2, r3
 1756 0894 1A46     		mov	r2, r3
 1757 0896 07F5A253 		add	r3, r7, #5184
 1758 089a 03F10803 		add	r3, r3, #8
 1759 089e 1B68     		ldr	r3, [r3]
 1760 08a0 1344     		add	r3, r3, r2
 1761 08a2 07F5A252 		add	r2, r7, #5184
 1762 08a6 02F10402 		add	r2, r2, #4
 1763 08aa 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1764              		.loc 1 448 0
 1765 08ac 07F5A253 		add	r3, r7, #5184
 1766 08b0 03F10403 		add	r3, r3, #4
 1767 08b4 1B68     		ldr	r3, [r3]
 1768 08b6 1A68     		ldr	r2, [r3]	@ float
 1769 08b8 07F13803 		add	r3, r7, #56
 1770 08bc 183B     		subs	r3, r3, #24
 1771 08be 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1772              		.loc 1 449 0
 1773 08c0 0023     		movs	r3, #0
 1774 08c2 07F5A252 		add	r2, r7, #5184
 1775 08c6 02F11602 		add	r2, r2, #22
 1776 08ca 1370     		strb	r3, [r2]
 1777 08cc 3AE0     		b	.L100
 1778              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1779              		.loc 1 450 0 discriminator 3
 1780 08ce 07F5A253 		add	r3, r7, #5184
 1781 08d2 03F11503 		add	r3, r3, #21
 1782 08d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1783 08d8 3222     		movs	r2, #50
 1784 08da 02FB03F3 		mul	r3, r2, r3
 1785 08de 1A1D     		adds	r2, r3, #4
 1786 08e0 07F5A253 		add	r3, r7, #5184
 1787 08e4 03F11703 		add	r3, r3, #23
 1788 08e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1789 08ea 07F5A251 		add	r1, r7, #5184
 1790 08ee 01F11301 		add	r1, r1, #19
 1791 08f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1792 08f4 01FB03F3 		mul	r3, r1, r3
 1793 08f8 1A44     		add	r2, r2, r3
 1794 08fa 07F5A253 		add	r3, r7, #5184
 1795 08fe 03F11303 		add	r3, r3, #19
 1796 0902 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1797 0904 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 56


 1798 0906 07F5A253 		add	r3, r7, #5184
 1799 090a 03F11603 		add	r3, r3, #22
 1800 090e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 0910 D31A     		subs	r3, r2, r3
 1802 0912 5A1E     		subs	r2, r3, #1
 1803 0914 07F5A253 		add	r3, r7, #5184
 1804 0918 03F11603 		add	r3, r3, #22
 1805 091c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1806 091e 07F13803 		add	r3, r7, #56
 1807 0922 183B     		subs	r3, r3, #24
 1808 0924 0B44     		add	r3, r3, r1
 1809 0926 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1810 0928 07F15803 		add	r3, r7, #88
 1811 092c 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1812              		.loc 1 449 0 discriminator 3
 1813 092e 07F5A253 		add	r3, r7, #5184
 1814 0932 03F11603 		add	r3, r3, #22
 1815 0936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1816 0938 0133     		adds	r3, r3, #1
 1817 093a 07F5A252 		add	r2, r7, #5184
 1818 093e 02F11602 		add	r2, r2, #22
 1819 0942 1370     		strb	r3, [r2]
 1820              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1821              		.loc 1 449 0 is_stmt 0 discriminator 1
 1822 0944 07F5A253 		add	r3, r7, #5184
 1823 0948 03F11603 		add	r3, r3, #22
 1824 094c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1825 094e 07F5A253 		add	r3, r7, #5184
 1826 0952 03F11303 		add	r3, r3, #19
 1827 0956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 0958 9A42     		cmp	r2, r3
 1829 095a B8D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1830              		.loc 1 446 0 is_stmt 1 discriminator 2
 1831 095c 07F5A253 		add	r3, r7, #5184
 1832 0960 03F11703 		add	r3, r3, #23
 1833 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1834 0966 0133     		adds	r3, r3, #1
 1835 0968 07F5A252 		add	r2, r7, #5184
 1836 096c 02F11702 		add	r2, r2, #23
 1837 0970 1370     		strb	r3, [r2]
 1838              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1839              		.loc 1 446 0 is_stmt 0 discriminator 1
 1840 0972 07F5A253 		add	r3, r7, #5184
 1841 0976 03F11503 		add	r3, r3, #21
 1842 097a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1843 097c 07F11803 		add	r3, r7, #24
 1844 0980 143B     		subs	r3, r3, #20
 1845 0982 1B68     		ldr	r3, [r3]
 1846 0984 1344     		add	r3, r3, r2
 1847 0986 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1848 0988 07F5A252 		add	r2, r7, #5184
 1849 098c 02F11702 		add	r2, r2, #23
 1850 0990 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 57


 1851 0992 9A42     		cmp	r2, r3
 1852 0994 FFF472AF 		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1853              		.loc 1 453 0 is_stmt 1 discriminator 7
 1854 0998 00BF     		nop
 1855 099a 01F03ABD 		b	.L103
 1856              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1857              		.loc 1 461 0
 1858 099e 07F5A253 		add	r3, r7, #5184
 1859 09a2 03F11503 		add	r3, r3, #21
 1860 09a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1861 09a8 0133     		adds	r3, r3, #1
 1862 09aa 023B     		subs	r3, r3, #2
 1863 09ac 332B     		cmp	r3, #51
 1864 09ae 01F22F85 		bhi	.L254
 1865 09b2 01A2     		adr	r2, .L106
 1866 09b4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1867              		.p2align 2
 1868              	.L106:
 1869 09b8 890A0000 		.word	.L105+1
 1870 09bc 470F0000 		.word	.L107+1
 1871 09c0 11240000 		.word	.L254+1
 1872 09c4 11240000 		.word	.L254+1
 1873 09c8 11240000 		.word	.L254+1
 1874 09cc 11240000 		.word	.L254+1
 1875 09d0 09140000 		.word	.L108+1
 1876 09d4 11240000 		.word	.L254+1
 1877 09d8 11240000 		.word	.L254+1
 1878 09dc 2D150000 		.word	.L109+1
 1879 09e0 11240000 		.word	.L254+1
 1880 09e4 11240000 		.word	.L254+1
 1881 09e8 11240000 		.word	.L254+1
 1882 09ec 11240000 		.word	.L254+1
 1883 09f0 11240000 		.word	.L254+1
 1884 09f4 11240000 		.word	.L254+1
 1885 09f8 11240000 		.word	.L254+1
 1886 09fc 11240000 		.word	.L254+1
 1887 0a00 11240000 		.word	.L254+1
 1888 0a04 11240000 		.word	.L254+1
 1889 0a08 11240000 		.word	.L254+1
 1890 0a0c E5160000 		.word	.L110+1
 1891 0a10 11240000 		.word	.L254+1
 1892 0a14 11240000 		.word	.L254+1
 1893 0a18 11240000 		.word	.L254+1
 1894 0a1c 11240000 		.word	.L254+1
 1895 0a20 11240000 		.word	.L254+1
 1896 0a24 11240000 		.word	.L254+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 58


 1897 0a28 11240000 		.word	.L254+1
 1898 0a2c 11240000 		.word	.L254+1
 1899 0a30 11240000 		.word	.L254+1
 1900 0a34 11240000 		.word	.L254+1
 1901 0a38 11240000 		.word	.L254+1
 1902 0a3c 11240000 		.word	.L254+1
 1903 0a40 11240000 		.word	.L254+1
 1904 0a44 11240000 		.word	.L254+1
 1905 0a48 11240000 		.word	.L254+1
 1906 0a4c 11240000 		.word	.L254+1
 1907 0a50 11240000 		.word	.L254+1
 1908 0a54 11240000 		.word	.L254+1
 1909 0a58 11240000 		.word	.L254+1
 1910 0a5c 11240000 		.word	.L254+1
 1911 0a60 B3170000 		.word	.L111+1
 1912 0a64 711C0000 		.word	.L112+1
 1913 0a68 11240000 		.word	.L254+1
 1914 0a6c 11240000 		.word	.L254+1
 1915 0a70 11240000 		.word	.L254+1
 1916 0a74 11240000 		.word	.L254+1
 1917 0a78 31210000 		.word	.L113+1
 1918 0a7c 11240000 		.word	.L254+1
 1919 0a80 11240000 		.word	.L254+1
 1920 0a84 53220000 		.word	.L114+1
 1921              		.p2align 1
 1922              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1923              		.loc 1 463 0
 1924 0a88 07F5A253 		add	r3, r7, #5184
 1925 0a8c 03F10F03 		add	r3, r3, #15
 1926 0a90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1927 0a92 AA49     		ldr	r1, .L258
 1928 0a94 1346     		mov	r3, r2
 1929 0a96 DB00     		lsls	r3, r3, #3
 1930 0a98 9B1A     		subs	r3, r3, r2
 1931 0a9a 1B01     		lsls	r3, r3, #4
 1932 0a9c 0B44     		add	r3, r3, r1
 1933 0a9e 03F20F13 		addw	r3, r3, #271
 1934 0aa2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1935 0aa4 032B     		cmp	r3, #3
 1936 0aa6 00F02681 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1937              		.loc 1 464 0
 1938 0aaa 07F5A253 		add	r3, r7, #5184
 1939 0aae 03F10F03 		add	r3, r3, #15
 1940 0ab2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1941 0ab4 A149     		ldr	r1, .L258
 1942 0ab6 1346     		mov	r3, r2
 1943 0ab8 DB00     		lsls	r3, r3, #3
 1944 0aba 9B1A     		subs	r3, r3, r2
 1945 0abc 1B01     		lsls	r3, r3, #4
 1946 0abe 0B44     		add	r3, r3, r1
 1947 0ac0 B033     		adds	r3, r3, #176
 1948 0ac2 1B68     		ldr	r3, [r3]
 1949 0ac4 1846     		mov	r0, r3
 1950 0ac6 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 59


 1951 0aca 0346     		mov	r3, r0
 1952 0acc 4FF08F41 		mov	r1, #1199570944
 1953 0ad0 1846     		mov	r0, r3
 1954 0ad2 FFF7FEFF 		bl	__aeabi_fdiv
 1955 0ad6 0346     		mov	r3, r0
 1956 0ad8 1A46     		mov	r2, r3
 1957 0ada 07F13803 		add	r3, r7, #56
 1958 0ade 183B     		subs	r3, r3, #24
 1959 0ae0 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1960              		.loc 1 465 0
 1961 0ae2 0023     		movs	r3, #0
 1962 0ae4 07F5A252 		add	r2, r7, #5184
 1963 0ae8 02F11702 		add	r2, r2, #23
 1964 0aec 1370     		strb	r3, [r2]
 1965 0aee 2DE0     		b	.L116
 1966              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1967              		.loc 1 466 0 discriminator 3
 1968 0af0 07F5A253 		add	r3, r7, #5184
 1969 0af4 03F11503 		add	r3, r3, #21
 1970 0af8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0afa 3222     		movs	r2, #50
 1972 0afc 02FB03F3 		mul	r3, r2, r3
 1973 0b00 1A1D     		adds	r2, r3, #4
 1974 0b02 07F5A253 		add	r3, r7, #5184
 1975 0b06 03F11303 		add	r3, r3, #19
 1976 0b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1977 0b0c 1A44     		add	r2, r2, r3
 1978 0b0e 07F5A253 		add	r3, r7, #5184
 1979 0b12 03F11703 		add	r3, r3, #23
 1980 0b16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1981 0b18 D31A     		subs	r3, r2, r3
 1982 0b1a 5A1E     		subs	r2, r3, #1
 1983 0b1c 07F5A253 		add	r3, r7, #5184
 1984 0b20 03F11703 		add	r3, r3, #23
 1985 0b24 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1986 0b26 07F13803 		add	r3, r7, #56
 1987 0b2a 183B     		subs	r3, r3, #24
 1988 0b2c 0B44     		add	r3, r3, r1
 1989 0b2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1990 0b30 07F15803 		add	r3, r7, #88
 1991 0b34 9954     		strb	r1, [r3, r2]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1992              		.loc 1 465 0 discriminator 3
 1993 0b36 07F5A253 		add	r3, r7, #5184
 1994 0b3a 03F11703 		add	r3, r3, #23
 1995 0b3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1996 0b40 0133     		adds	r3, r3, #1
 1997 0b42 07F5A252 		add	r2, r7, #5184
 1998 0b46 02F11702 		add	r2, r2, #23
 1999 0b4a 1370     		strb	r3, [r2]
 2000              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2001              		.loc 1 465 0 is_stmt 0 discriminator 1
 2002 0b4c 07F5A253 		add	r3, r7, #5184
 2003 0b50 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 60


 2004 0b54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2005 0b56 07F5A253 		add	r3, r7, #5184
 2006 0b5a 03F11303 		add	r3, r3, #19
 2007 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2008 0b60 9A42     		cmp	r2, r3
 2009 0b62 C5D3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2010              		.loc 1 468 0 is_stmt 1
 2011 0b64 07F5A253 		add	r3, r7, #5184
 2012 0b68 03F10F03 		add	r3, r3, #15
 2013 0b6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2014 0b6e 7349     		ldr	r1, .L258
 2015 0b70 1346     		mov	r3, r2
 2016 0b72 DB00     		lsls	r3, r3, #3
 2017 0b74 9B1A     		subs	r3, r3, r2
 2018 0b76 1B01     		lsls	r3, r3, #4
 2019 0b78 0B44     		add	r3, r3, r1
 2020 0b7a B433     		adds	r3, r3, #180
 2021 0b7c 1B68     		ldr	r3, [r3]
 2022 0b7e 1846     		mov	r0, r3
 2023 0b80 FFF7FEFF 		bl	__aeabi_i2f
 2024 0b84 0346     		mov	r3, r0
 2025 0b86 4FF08F41 		mov	r1, #1199570944
 2026 0b8a 1846     		mov	r0, r3
 2027 0b8c FFF7FEFF 		bl	__aeabi_fdiv
 2028 0b90 0346     		mov	r3, r0
 2029 0b92 1A46     		mov	r2, r3
 2030 0b94 07F13803 		add	r3, r7, #56
 2031 0b98 183B     		subs	r3, r3, #24
 2032 0b9a 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2033              		.loc 1 469 0
 2034 0b9c 0023     		movs	r3, #0
 2035 0b9e 07F5A252 		add	r2, r7, #5184
 2036 0ba2 02F11702 		add	r2, r2, #23
 2037 0ba6 1370     		strb	r3, [r2]
 2038 0ba8 33E0     		b	.L118
 2039              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2040              		.loc 1 470 0 discriminator 3
 2041 0baa 07F5A253 		add	r3, r7, #5184
 2042 0bae 03F11503 		add	r3, r3, #21
 2043 0bb2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2044 0bb4 3222     		movs	r2, #50
 2045 0bb6 02FB03F3 		mul	r3, r2, r3
 2046 0bba 1A1D     		adds	r2, r3, #4
 2047 0bbc 07F5A253 		add	r3, r7, #5184
 2048 0bc0 03F11303 		add	r3, r3, #19
 2049 0bc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2050 0bc6 1A44     		add	r2, r2, r3
 2051 0bc8 07F5A253 		add	r3, r7, #5184
 2052 0bcc 03F11303 		add	r3, r3, #19
 2053 0bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2054 0bd2 1A44     		add	r2, r2, r3
 2055 0bd4 07F5A253 		add	r3, r7, #5184
 2056 0bd8 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 61


 2057 0bdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2058 0bde D31A     		subs	r3, r2, r3
 2059 0be0 5A1E     		subs	r2, r3, #1
 2060 0be2 07F5A253 		add	r3, r7, #5184
 2061 0be6 03F11703 		add	r3, r3, #23
 2062 0bea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2063 0bec 07F13803 		add	r3, r7, #56
 2064 0bf0 183B     		subs	r3, r3, #24
 2065 0bf2 0B44     		add	r3, r3, r1
 2066 0bf4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2067 0bf6 07F15803 		add	r3, r7, #88
 2068 0bfa 9954     		strb	r1, [r3, r2]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2069              		.loc 1 469 0 discriminator 3
 2070 0bfc 07F5A253 		add	r3, r7, #5184
 2071 0c00 03F11703 		add	r3, r3, #23
 2072 0c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0c06 0133     		adds	r3, r3, #1
 2074 0c08 07F5A252 		add	r2, r7, #5184
 2075 0c0c 02F11702 		add	r2, r2, #23
 2076 0c10 1370     		strb	r3, [r2]
 2077              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2078              		.loc 1 469 0 is_stmt 0 discriminator 1
 2079 0c12 07F5A253 		add	r3, r7, #5184
 2080 0c16 03F11703 		add	r3, r3, #23
 2081 0c1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2082 0c1c 07F5A253 		add	r3, r7, #5184
 2083 0c20 03F11303 		add	r3, r3, #19
 2084 0c24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2085 0c26 9A42     		cmp	r2, r3
 2086 0c28 BFD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2087              		.loc 1 472 0 is_stmt 1
 2088 0c2a 07F5A253 		add	r3, r7, #5184
 2089 0c2e 03F10F03 		add	r3, r3, #15
 2090 0c32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2091 0c34 4149     		ldr	r1, .L258
 2092 0c36 1346     		mov	r3, r2
 2093 0c38 DB00     		lsls	r3, r3, #3
 2094 0c3a 9B1A     		subs	r3, r3, r2
 2095 0c3c 1B01     		lsls	r3, r3, #4
 2096 0c3e 0B44     		add	r3, r3, r1
 2097 0c40 B833     		adds	r3, r3, #184
 2098 0c42 1B68     		ldr	r3, [r3]
 2099 0c44 1846     		mov	r0, r3
 2100 0c46 FFF7FEFF 		bl	__aeabi_i2f
 2101 0c4a 0346     		mov	r3, r0
 2102 0c4c 4FF08F41 		mov	r1, #1199570944
 2103 0c50 1846     		mov	r0, r3
 2104 0c52 FFF7FEFF 		bl	__aeabi_fdiv
 2105 0c56 0346     		mov	r3, r0
 2106 0c58 1A46     		mov	r2, r3
 2107 0c5a 07F13803 		add	r3, r7, #56
 2108 0c5e 183B     		subs	r3, r3, #24
 2109 0c60 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 62


 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2110              		.loc 1 473 0
 2111 0c62 0023     		movs	r3, #0
 2112 0c64 07F5A252 		add	r2, r7, #5184
 2113 0c68 02F11702 		add	r2, r2, #23
 2114 0c6c 1370     		strb	r3, [r2]
 2115 0c6e 34E0     		b	.L120
 2116              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2117              		.loc 1 474 0 discriminator 3
 2118 0c70 07F5A253 		add	r3, r7, #5184
 2119 0c74 03F11503 		add	r3, r3, #21
 2120 0c78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2121 0c7a 3222     		movs	r2, #50
 2122 0c7c 02FB03F3 		mul	r3, r2, r3
 2123 0c80 1A1D     		adds	r2, r3, #4
 2124 0c82 07F5A253 		add	r3, r7, #5184
 2125 0c86 03F11303 		add	r3, r3, #19
 2126 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2127 0c8c 5B00     		lsls	r3, r3, #1
 2128 0c8e 1A44     		add	r2, r2, r3
 2129 0c90 07F5A253 		add	r3, r7, #5184
 2130 0c94 03F11303 		add	r3, r3, #19
 2131 0c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2132 0c9a 1A44     		add	r2, r2, r3
 2133 0c9c 07F5A253 		add	r3, r7, #5184
 2134 0ca0 03F11703 		add	r3, r3, #23
 2135 0ca4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2136 0ca6 D31A     		subs	r3, r2, r3
 2137 0ca8 5A1E     		subs	r2, r3, #1
 2138 0caa 07F5A253 		add	r3, r7, #5184
 2139 0cae 03F11703 		add	r3, r3, #23
 2140 0cb2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2141 0cb4 07F13803 		add	r3, r7, #56
 2142 0cb8 183B     		subs	r3, r3, #24
 2143 0cba 0B44     		add	r3, r3, r1
 2144 0cbc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2145 0cbe 07F15803 		add	r3, r7, #88
 2146 0cc2 9954     		strb	r1, [r3, r2]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2147              		.loc 1 473 0 discriminator 3
 2148 0cc4 07F5A253 		add	r3, r7, #5184
 2149 0cc8 03F11703 		add	r3, r3, #23
 2150 0ccc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0cce 0133     		adds	r3, r3, #1
 2152 0cd0 07F5A252 		add	r2, r7, #5184
 2153 0cd4 02F11702 		add	r2, r2, #23
 2154 0cd8 1370     		strb	r3, [r2]
 2155              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2156              		.loc 1 473 0 is_stmt 0 discriminator 1
 2157 0cda 07F5A253 		add	r3, r7, #5184
 2158 0cde 03F11703 		add	r3, r3, #23
 2159 0ce2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2160 0ce4 07F5A253 		add	r3, r7, #5184
 2161 0ce8 03F11303 		add	r3, r3, #19
 2162 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 63


 2163 0cee 9A42     		cmp	r2, r3
 2164 0cf0 BED3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 2165              		.loc 1 491 0 is_stmt 1
 2166 0cf2 01F08EBB 		b	.L103
 2167              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2168              		.loc 1 478 0
 2169 0cf6 07F5A253 		add	r3, r7, #5184
 2170 0cfa 03F10F03 		add	r3, r3, #15
 2171 0cfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2172 0d00 0E49     		ldr	r1, .L258
 2173 0d02 1346     		mov	r3, r2
 2174 0d04 DB00     		lsls	r3, r3, #3
 2175 0d06 9B1A     		subs	r3, r3, r2
 2176 0d08 1B01     		lsls	r3, r3, #4
 2177 0d0a 0B44     		add	r3, r3, r1
 2178 0d0c C833     		adds	r3, r3, #200
 2179 0d0e 1B68     		ldr	r3, [r3]
 2180 0d10 1846     		mov	r0, r3
 2181 0d12 FFF7FEFF 		bl	__aeabi_i2f
 2182 0d16 0346     		mov	r3, r0
 2183 0d18 4FF08F41 		mov	r1, #1199570944
 2184 0d1c 1846     		mov	r0, r3
 2185 0d1e FFF7FEFF 		bl	__aeabi_fdiv
 2186 0d22 0346     		mov	r3, r0
 2187 0d24 1A46     		mov	r2, r3
 2188 0d26 07F13803 		add	r3, r7, #56
 2189 0d2a 183B     		subs	r3, r3, #24
 2190 0d2c 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2191              		.loc 1 479 0
 2192 0d2e 0023     		movs	r3, #0
 2193 0d30 07F5A252 		add	r2, r7, #5184
 2194 0d34 02F11702 		add	r2, r2, #23
 2195 0d38 1370     		strb	r3, [r2]
 2196 0d3a 2FE0     		b	.L123
 2197              	.L259:
 2198              		.align	2
 2199              	.L258:
 2200 0d3c 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 64


 2201              	.L124:
 480:..\src/command_processing.c ****                             }
 2202              		.loc 1 480 0 discriminator 3
 2203 0d40 07F5A253 		add	r3, r7, #5184
 2204 0d44 03F11503 		add	r3, r3, #21
 2205 0d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2206 0d4a 3222     		movs	r2, #50
 2207 0d4c 02FB03F3 		mul	r3, r2, r3
 2208 0d50 1A1D     		adds	r2, r3, #4
 2209 0d52 07F5A253 		add	r3, r7, #5184
 2210 0d56 03F11303 		add	r3, r3, #19
 2211 0d5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 0d5c 1A44     		add	r2, r2, r3
 2213 0d5e 07F5A253 		add	r3, r7, #5184
 2214 0d62 03F11703 		add	r3, r3, #23
 2215 0d66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2216 0d68 D31A     		subs	r3, r2, r3
 2217 0d6a 5A1E     		subs	r2, r3, #1
 2218 0d6c 07F5A253 		add	r3, r7, #5184
 2219 0d70 03F11703 		add	r3, r3, #23
 2220 0d74 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2221 0d76 07F13803 		add	r3, r7, #56
 2222 0d7a 183B     		subs	r3, r3, #24
 2223 0d7c 0B44     		add	r3, r3, r1
 2224 0d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2225 0d80 07F15803 		add	r3, r7, #88
 2226 0d84 9954     		strb	r1, [r3, r2]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2227              		.loc 1 479 0 discriminator 3
 2228 0d86 07F5A253 		add	r3, r7, #5184
 2229 0d8a 03F11703 		add	r3, r3, #23
 2230 0d8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2231 0d90 0133     		adds	r3, r3, #1
 2232 0d92 07F5A252 		add	r2, r7, #5184
 2233 0d96 02F11702 		add	r2, r2, #23
 2234 0d9a 1370     		strb	r3, [r2]
 2235              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2236              		.loc 1 479 0 is_stmt 0 discriminator 1
 2237 0d9c 07F5A253 		add	r3, r7, #5184
 2238 0da0 03F11703 		add	r3, r3, #23
 2239 0da4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2240 0da6 07F5A253 		add	r3, r7, #5184
 2241 0daa 03F11303 		add	r3, r3, #19
 2242 0dae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2243 0db0 9A42     		cmp	r2, r3
 2244 0db2 C5D3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2245              		.loc 1 482 0 is_stmt 1
 2246 0db4 07F5A253 		add	r3, r7, #5184
 2247 0db8 03F10F03 		add	r3, r3, #15
 2248 0dbc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2249 0dbe AA49     		ldr	r1, .L260
 2250 0dc0 1346     		mov	r3, r2
 2251 0dc2 DB00     		lsls	r3, r3, #3
 2252 0dc4 9B1A     		subs	r3, r3, r2
 2253 0dc6 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 65


 2254 0dc8 0B44     		add	r3, r3, r1
 2255 0dca CC33     		adds	r3, r3, #204
 2256 0dcc 1B68     		ldr	r3, [r3]
 2257 0dce 1846     		mov	r0, r3
 2258 0dd0 FFF7FEFF 		bl	__aeabi_i2f
 2259 0dd4 0346     		mov	r3, r0
 2260 0dd6 4FF08F41 		mov	r1, #1199570944
 2261 0dda 1846     		mov	r0, r3
 2262 0ddc FFF7FEFF 		bl	__aeabi_fdiv
 2263 0de0 0346     		mov	r3, r0
 2264 0de2 1A46     		mov	r2, r3
 2265 0de4 07F13803 		add	r3, r7, #56
 2266 0de8 183B     		subs	r3, r3, #24
 2267 0dea 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2268              		.loc 1 483 0
 2269 0dec 0023     		movs	r3, #0
 2270 0dee 07F5A252 		add	r2, r7, #5184
 2271 0df2 02F11702 		add	r2, r2, #23
 2272 0df6 1370     		strb	r3, [r2]
 2273 0df8 33E0     		b	.L125
 2274              	.L126:
 484:..\src/command_processing.c ****                             }
 2275              		.loc 1 484 0 discriminator 3
 2276 0dfa 07F5A253 		add	r3, r7, #5184
 2277 0dfe 03F11503 		add	r3, r3, #21
 2278 0e02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2279 0e04 3222     		movs	r2, #50
 2280 0e06 02FB03F3 		mul	r3, r2, r3
 2281 0e0a 1A1D     		adds	r2, r3, #4
 2282 0e0c 07F5A253 		add	r3, r7, #5184
 2283 0e10 03F11303 		add	r3, r3, #19
 2284 0e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2285 0e16 1A44     		add	r2, r2, r3
 2286 0e18 07F5A253 		add	r3, r7, #5184
 2287 0e1c 03F11303 		add	r3, r3, #19
 2288 0e20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2289 0e22 1A44     		add	r2, r2, r3
 2290 0e24 07F5A253 		add	r3, r7, #5184
 2291 0e28 03F11703 		add	r3, r3, #23
 2292 0e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2293 0e2e D31A     		subs	r3, r2, r3
 2294 0e30 5A1E     		subs	r2, r3, #1
 2295 0e32 07F5A253 		add	r3, r7, #5184
 2296 0e36 03F11703 		add	r3, r3, #23
 2297 0e3a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2298 0e3c 07F13803 		add	r3, r7, #56
 2299 0e40 183B     		subs	r3, r3, #24
 2300 0e42 0B44     		add	r3, r3, r1
 2301 0e44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2302 0e46 07F15803 		add	r3, r7, #88
 2303 0e4a 9954     		strb	r1, [r3, r2]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2304              		.loc 1 483 0 discriminator 3
 2305 0e4c 07F5A253 		add	r3, r7, #5184
 2306 0e50 03F11703 		add	r3, r3, #23
 2307 0e54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 66


 2308 0e56 0133     		adds	r3, r3, #1
 2309 0e58 07F5A252 		add	r2, r7, #5184
 2310 0e5c 02F11702 		add	r2, r2, #23
 2311 0e60 1370     		strb	r3, [r2]
 2312              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2313              		.loc 1 483 0 is_stmt 0 discriminator 1
 2314 0e62 07F5A253 		add	r3, r7, #5184
 2315 0e66 03F11703 		add	r3, r3, #23
 2316 0e6a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2317 0e6c 07F5A253 		add	r3, r7, #5184
 2318 0e70 03F11303 		add	r3, r3, #19
 2319 0e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2320 0e76 9A42     		cmp	r2, r3
 2321 0e78 BFD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2322              		.loc 1 486 0 is_stmt 1
 2323 0e7a 07F5A253 		add	r3, r7, #5184
 2324 0e7e 03F10F03 		add	r3, r3, #15
 2325 0e82 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2326 0e84 7849     		ldr	r1, .L260
 2327 0e86 1346     		mov	r3, r2
 2328 0e88 DB00     		lsls	r3, r3, #3
 2329 0e8a 9B1A     		subs	r3, r3, r2
 2330 0e8c 1B01     		lsls	r3, r3, #4
 2331 0e8e 0B44     		add	r3, r3, r1
 2332 0e90 D033     		adds	r3, r3, #208
 2333 0e92 1B68     		ldr	r3, [r3]
 2334 0e94 1846     		mov	r0, r3
 2335 0e96 FFF7FEFF 		bl	__aeabi_i2f
 2336 0e9a 0346     		mov	r3, r0
 2337 0e9c 4FF08F41 		mov	r1, #1199570944
 2338 0ea0 1846     		mov	r0, r3
 2339 0ea2 FFF7FEFF 		bl	__aeabi_fdiv
 2340 0ea6 0346     		mov	r3, r0
 2341 0ea8 1A46     		mov	r2, r3
 2342 0eaa 07F13803 		add	r3, r7, #56
 2343 0eae 183B     		subs	r3, r3, #24
 2344 0eb0 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2345              		.loc 1 487 0
 2346 0eb2 0023     		movs	r3, #0
 2347 0eb4 07F5A252 		add	r2, r7, #5184
 2348 0eb8 02F11702 		add	r2, r2, #23
 2349 0ebc 1370     		strb	r3, [r2]
 2350 0ebe 34E0     		b	.L127
 2351              	.L128:
 488:..\src/command_processing.c ****                             }
 2352              		.loc 1 488 0 discriminator 3
 2353 0ec0 07F5A253 		add	r3, r7, #5184
 2354 0ec4 03F11503 		add	r3, r3, #21
 2355 0ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2356 0eca 3222     		movs	r2, #50
 2357 0ecc 02FB03F3 		mul	r3, r2, r3
 2358 0ed0 1A1D     		adds	r2, r3, #4
 2359 0ed2 07F5A253 		add	r3, r7, #5184
 2360 0ed6 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 67


 2361 0eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0edc 5B00     		lsls	r3, r3, #1
 2363 0ede 1A44     		add	r2, r2, r3
 2364 0ee0 07F5A253 		add	r3, r7, #5184
 2365 0ee4 03F11303 		add	r3, r3, #19
 2366 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2367 0eea 1A44     		add	r2, r2, r3
 2368 0eec 07F5A253 		add	r3, r7, #5184
 2369 0ef0 03F11703 		add	r3, r3, #23
 2370 0ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0ef6 D31A     		subs	r3, r2, r3
 2372 0ef8 5A1E     		subs	r2, r3, #1
 2373 0efa 07F5A253 		add	r3, r7, #5184
 2374 0efe 03F11703 		add	r3, r3, #23
 2375 0f02 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2376 0f04 07F13803 		add	r3, r7, #56
 2377 0f08 183B     		subs	r3, r3, #24
 2378 0f0a 0B44     		add	r3, r3, r1
 2379 0f0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2380 0f0e 07F15803 		add	r3, r7, #88
 2381 0f12 9954     		strb	r1, [r3, r2]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2382              		.loc 1 487 0 discriminator 3
 2383 0f14 07F5A253 		add	r3, r7, #5184
 2384 0f18 03F11703 		add	r3, r3, #23
 2385 0f1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2386 0f1e 0133     		adds	r3, r3, #1
 2387 0f20 07F5A252 		add	r2, r7, #5184
 2388 0f24 02F11702 		add	r2, r2, #23
 2389 0f28 1370     		strb	r3, [r2]
 2390              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2391              		.loc 1 487 0 is_stmt 0 discriminator 1
 2392 0f2a 07F5A253 		add	r3, r7, #5184
 2393 0f2e 03F11703 		add	r3, r3, #23
 2394 0f32 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2395 0f34 07F5A253 		add	r3, r7, #5184
 2396 0f38 03F11303 		add	r3, r3, #19
 2397 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2398 0f3e 9A42     		cmp	r2, r3
 2399 0f40 BED3     		bcc	.L128
 2400              		.loc 1 491 0 is_stmt 1
 2401 0f42 01F066BA 		b	.L103
 2402              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2403              		.loc 1 494 0
 2404 0f46 07F5A253 		add	r3, r7, #5184
 2405 0f4a 03F10F03 		add	r3, r3, #15
 2406 0f4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2407 0f50 4549     		ldr	r1, .L260
 2408 0f52 1346     		mov	r3, r2
 2409 0f54 DB00     		lsls	r3, r3, #3
 2410 0f56 9B1A     		subs	r3, r3, r2
 2411 0f58 1B01     		lsls	r3, r3, #4
 2412 0f5a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 68


 2413 0f5c 03F20F13 		addw	r3, r3, #271
 2414 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2415 0f62 032B     		cmp	r3, #3
 2416 0f64 00F02881 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2417              		.loc 1 495 0
 2418 0f68 07F5A253 		add	r3, r7, #5184
 2419 0f6c 03F10F03 		add	r3, r3, #15
 2420 0f70 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2421 0f72 3D49     		ldr	r1, .L260
 2422 0f74 1346     		mov	r3, r2
 2423 0f76 DB00     		lsls	r3, r3, #3
 2424 0f78 9B1A     		subs	r3, r3, r2
 2425 0f7a 1B01     		lsls	r3, r3, #4
 2426 0f7c 0B44     		add	r3, r3, r1
 2427 0f7e BC33     		adds	r3, r3, #188
 2428 0f80 1B68     		ldr	r3, [r3]
 2429 0f82 1846     		mov	r0, r3
 2430 0f84 FFF7FEFF 		bl	__aeabi_i2f
 2431 0f88 0346     		mov	r3, r0
 2432 0f8a 4FF08F41 		mov	r1, #1199570944
 2433 0f8e 1846     		mov	r0, r3
 2434 0f90 FFF7FEFF 		bl	__aeabi_fdiv
 2435 0f94 0346     		mov	r3, r0
 2436 0f96 1A46     		mov	r2, r3
 2437 0f98 07F13803 		add	r3, r7, #56
 2438 0f9c 183B     		subs	r3, r3, #24
 2439 0f9e 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2440              		.loc 1 496 0
 2441 0fa0 0023     		movs	r3, #0
 2442 0fa2 07F5A252 		add	r2, r7, #5184
 2443 0fa6 02F11702 		add	r2, r2, #23
 2444 0faa 1370     		strb	r3, [r2]
 2445 0fac 2DE0     		b	.L130
 2446              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2447              		.loc 1 497 0 discriminator 3
 2448 0fae 07F5A253 		add	r3, r7, #5184
 2449 0fb2 03F11503 		add	r3, r3, #21
 2450 0fb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2451 0fb8 3222     		movs	r2, #50
 2452 0fba 02FB03F3 		mul	r3, r2, r3
 2453 0fbe 1A1D     		adds	r2, r3, #4
 2454 0fc0 07F5A253 		add	r3, r7, #5184
 2455 0fc4 03F11303 		add	r3, r3, #19
 2456 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0fca 1A44     		add	r2, r2, r3
 2458 0fcc 07F5A253 		add	r3, r7, #5184
 2459 0fd0 03F11703 		add	r3, r3, #23
 2460 0fd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2461 0fd6 D31A     		subs	r3, r2, r3
 2462 0fd8 5A1E     		subs	r2, r3, #1
 2463 0fda 07F5A253 		add	r3, r7, #5184
 2464 0fde 03F11703 		add	r3, r3, #23
 2465 0fe2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2466 0fe4 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 69


 2467 0fe8 183B     		subs	r3, r3, #24
 2468 0fea 0B44     		add	r3, r3, r1
 2469 0fec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2470 0fee 07F15803 		add	r3, r7, #88
 2471 0ff2 9954     		strb	r1, [r3, r2]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2472              		.loc 1 496 0 discriminator 3
 2473 0ff4 07F5A253 		add	r3, r7, #5184
 2474 0ff8 03F11703 		add	r3, r3, #23
 2475 0ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2476 0ffe 0133     		adds	r3, r3, #1
 2477 1000 07F5A252 		add	r2, r7, #5184
 2478 1004 02F11702 		add	r2, r2, #23
 2479 1008 1370     		strb	r3, [r2]
 2480              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2481              		.loc 1 496 0 is_stmt 0 discriminator 1
 2482 100a 07F5A253 		add	r3, r7, #5184
 2483 100e 03F11703 		add	r3, r3, #23
 2484 1012 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2485 1014 07F5A253 		add	r3, r7, #5184
 2486 1018 03F11303 		add	r3, r3, #19
 2487 101c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 101e 9A42     		cmp	r2, r3
 2489 1020 C5D3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2490              		.loc 1 499 0 is_stmt 1
 2491 1022 07F5A253 		add	r3, r7, #5184
 2492 1026 03F10F03 		add	r3, r3, #15
 2493 102a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2494 102c 0E49     		ldr	r1, .L260
 2495 102e 1346     		mov	r3, r2
 2496 1030 DB00     		lsls	r3, r3, #3
 2497 1032 9B1A     		subs	r3, r3, r2
 2498 1034 1B01     		lsls	r3, r3, #4
 2499 1036 0B44     		add	r3, r3, r1
 2500 1038 C033     		adds	r3, r3, #192
 2501 103a 1B68     		ldr	r3, [r3]
 2502 103c 1846     		mov	r0, r3
 2503 103e FFF7FEFF 		bl	__aeabi_i2f
 2504 1042 0346     		mov	r3, r0
 2505 1044 4FF08F41 		mov	r1, #1199570944
 2506 1048 1846     		mov	r0, r3
 2507 104a FFF7FEFF 		bl	__aeabi_fdiv
 2508 104e 0346     		mov	r3, r0
 2509 1050 1A46     		mov	r2, r3
 2510 1052 07F13803 		add	r3, r7, #56
 2511 1056 183B     		subs	r3, r3, #24
 2512 1058 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2513              		.loc 1 500 0
 2514 105a 0023     		movs	r3, #0
 2515 105c 07F5A252 		add	r2, r7, #5184
 2516 1060 02F11702 		add	r2, r2, #23
 2517 1064 1370     		strb	r3, [r2]
 2518 1066 35E0     		b	.L132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 70


 2519              	.L261:
 2520              		.align	2
 2521              	.L260:
 2522 1068 00000000 		.word	c_mem
 2523              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2524              		.loc 1 501 0 discriminator 3
 2525 106c 07F5A253 		add	r3, r7, #5184
 2526 1070 03F11503 		add	r3, r3, #21
 2527 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2528 1076 3222     		movs	r2, #50
 2529 1078 02FB03F3 		mul	r3, r2, r3
 2530 107c 1A1D     		adds	r2, r3, #4
 2531 107e 07F5A253 		add	r3, r7, #5184
 2532 1082 03F11303 		add	r3, r3, #19
 2533 1086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2534 1088 1A44     		add	r2, r2, r3
 2535 108a 07F5A253 		add	r3, r7, #5184
 2536 108e 03F11303 		add	r3, r3, #19
 2537 1092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2538 1094 1A44     		add	r2, r2, r3
 2539 1096 07F5A253 		add	r3, r7, #5184
 2540 109a 03F11703 		add	r3, r3, #23
 2541 109e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2542 10a0 D31A     		subs	r3, r2, r3
 2543 10a2 5A1E     		subs	r2, r3, #1
 2544 10a4 07F5A253 		add	r3, r7, #5184
 2545 10a8 03F11703 		add	r3, r3, #23
 2546 10ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2547 10ae 07F13803 		add	r3, r7, #56
 2548 10b2 183B     		subs	r3, r3, #24
 2549 10b4 0B44     		add	r3, r3, r1
 2550 10b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2551 10b8 07F15803 		add	r3, r7, #88
 2552 10bc 9954     		strb	r1, [r3, r2]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2553              		.loc 1 500 0 discriminator 3
 2554 10be 07F5A253 		add	r3, r7, #5184
 2555 10c2 03F11703 		add	r3, r3, #23
 2556 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2557 10c8 0133     		adds	r3, r3, #1
 2558 10ca 07F5A252 		add	r2, r7, #5184
 2559 10ce 02F11702 		add	r2, r2, #23
 2560 10d2 1370     		strb	r3, [r2]
 2561              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2562              		.loc 1 500 0 is_stmt 0 discriminator 1
 2563 10d4 07F5A253 		add	r3, r7, #5184
 2564 10d8 03F11703 		add	r3, r3, #23
 2565 10dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2566 10de 07F5A253 		add	r3, r7, #5184
 2567 10e2 03F11303 		add	r3, r3, #19
 2568 10e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2569 10e8 9A42     		cmp	r2, r3
 2570 10ea BFD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 71


 2571              		.loc 1 503 0 is_stmt 1
 2572 10ec 07F5A253 		add	r3, r7, #5184
 2573 10f0 03F10F03 		add	r3, r3, #15
 2574 10f4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2575 10f6 C349     		ldr	r1, .L262
 2576 10f8 1346     		mov	r3, r2
 2577 10fa DB00     		lsls	r3, r3, #3
 2578 10fc 9B1A     		subs	r3, r3, r2
 2579 10fe 1B01     		lsls	r3, r3, #4
 2580 1100 0B44     		add	r3, r3, r1
 2581 1102 C433     		adds	r3, r3, #196
 2582 1104 1B68     		ldr	r3, [r3]
 2583 1106 1846     		mov	r0, r3
 2584 1108 FFF7FEFF 		bl	__aeabi_i2f
 2585 110c 0346     		mov	r3, r0
 2586 110e 4FF08F41 		mov	r1, #1199570944
 2587 1112 1846     		mov	r0, r3
 2588 1114 FFF7FEFF 		bl	__aeabi_fdiv
 2589 1118 0346     		mov	r3, r0
 2590 111a 1A46     		mov	r2, r3
 2591 111c 07F13803 		add	r3, r7, #56
 2592 1120 183B     		subs	r3, r3, #24
 2593 1122 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2594              		.loc 1 504 0
 2595 1124 0023     		movs	r3, #0
 2596 1126 07F5A252 		add	r2, r7, #5184
 2597 112a 02F11702 		add	r2, r2, #23
 2598 112e 1370     		strb	r3, [r2]
 2599 1130 34E0     		b	.L134
 2600              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2601              		.loc 1 505 0 discriminator 3
 2602 1132 07F5A253 		add	r3, r7, #5184
 2603 1136 03F11503 		add	r3, r3, #21
 2604 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2605 113c 3222     		movs	r2, #50
 2606 113e 02FB03F3 		mul	r3, r2, r3
 2607 1142 1A1D     		adds	r2, r3, #4
 2608 1144 07F5A253 		add	r3, r7, #5184
 2609 1148 03F11303 		add	r3, r3, #19
 2610 114c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2611 114e 5B00     		lsls	r3, r3, #1
 2612 1150 1A44     		add	r2, r2, r3
 2613 1152 07F5A253 		add	r3, r7, #5184
 2614 1156 03F11303 		add	r3, r3, #19
 2615 115a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2616 115c 1A44     		add	r2, r2, r3
 2617 115e 07F5A253 		add	r3, r7, #5184
 2618 1162 03F11703 		add	r3, r3, #23
 2619 1166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2620 1168 D31A     		subs	r3, r2, r3
 2621 116a 5A1E     		subs	r2, r3, #1
 2622 116c 07F5A253 		add	r3, r7, #5184
 2623 1170 03F11703 		add	r3, r3, #23
 2624 1174 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2625 1176 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 72


 2626 117a 183B     		subs	r3, r3, #24
 2627 117c 0B44     		add	r3, r3, r1
 2628 117e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2629 1180 07F15803 		add	r3, r7, #88
 2630 1184 9954     		strb	r1, [r3, r2]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2631              		.loc 1 504 0 discriminator 3
 2632 1186 07F5A253 		add	r3, r7, #5184
 2633 118a 03F11703 		add	r3, r3, #23
 2634 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2635 1190 0133     		adds	r3, r3, #1
 2636 1192 07F5A252 		add	r2, r7, #5184
 2637 1196 02F11702 		add	r2, r2, #23
 2638 119a 1370     		strb	r3, [r2]
 2639              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2640              		.loc 1 504 0 is_stmt 0 discriminator 1
 2641 119c 07F5A253 		add	r3, r7, #5184
 2642 11a0 03F11703 		add	r3, r3, #23
 2643 11a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2644 11a6 07F5A253 		add	r3, r7, #5184
 2645 11aa 03F11303 		add	r3, r3, #19
 2646 11ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 11b0 9A42     		cmp	r2, r3
 2648 11b2 BED3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2649              		.loc 1 522 0 is_stmt 1
 2650 11b4 01F02DB9 		b	.L103
 2651              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2652              		.loc 1 509 0
 2653 11b8 07F5A253 		add	r3, r7, #5184
 2654 11bc 03F10F03 		add	r3, r3, #15
 2655 11c0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2656 11c2 9049     		ldr	r1, .L262
 2657 11c4 1346     		mov	r3, r2
 2658 11c6 DB00     		lsls	r3, r3, #3
 2659 11c8 9B1A     		subs	r3, r3, r2
 2660 11ca 1B01     		lsls	r3, r3, #4
 2661 11cc 0B44     		add	r3, r3, r1
 2662 11ce D433     		adds	r3, r3, #212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 73


 2663 11d0 1B68     		ldr	r3, [r3]
 2664 11d2 1846     		mov	r0, r3
 2665 11d4 FFF7FEFF 		bl	__aeabi_i2f
 2666 11d8 0346     		mov	r3, r0
 2667 11da 4FF08F41 		mov	r1, #1199570944
 2668 11de 1846     		mov	r0, r3
 2669 11e0 FFF7FEFF 		bl	__aeabi_fdiv
 2670 11e4 0346     		mov	r3, r0
 2671 11e6 1A46     		mov	r2, r3
 2672 11e8 07F13803 		add	r3, r7, #56
 2673 11ec 183B     		subs	r3, r3, #24
 2674 11ee 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2675              		.loc 1 510 0
 2676 11f0 0023     		movs	r3, #0
 2677 11f2 07F5A252 		add	r2, r7, #5184
 2678 11f6 02F11702 		add	r2, r2, #23
 2679 11fa 1370     		strb	r3, [r2]
 2680 11fc 2DE0     		b	.L137
 2681              	.L138:
 511:..\src/command_processing.c ****                             }
 2682              		.loc 1 511 0 discriminator 3
 2683 11fe 07F5A253 		add	r3, r7, #5184
 2684 1202 03F11503 		add	r3, r3, #21
 2685 1206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2686 1208 3222     		movs	r2, #50
 2687 120a 02FB03F3 		mul	r3, r2, r3
 2688 120e 1A1D     		adds	r2, r3, #4
 2689 1210 07F5A253 		add	r3, r7, #5184
 2690 1214 03F11303 		add	r3, r3, #19
 2691 1218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2692 121a 1A44     		add	r2, r2, r3
 2693 121c 07F5A253 		add	r3, r7, #5184
 2694 1220 03F11703 		add	r3, r3, #23
 2695 1224 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2696 1226 D31A     		subs	r3, r2, r3
 2697 1228 5A1E     		subs	r2, r3, #1
 2698 122a 07F5A253 		add	r3, r7, #5184
 2699 122e 03F11703 		add	r3, r3, #23
 2700 1232 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2701 1234 07F13803 		add	r3, r7, #56
 2702 1238 183B     		subs	r3, r3, #24
 2703 123a 0B44     		add	r3, r3, r1
 2704 123c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2705 123e 07F15803 		add	r3, r7, #88
 2706 1242 9954     		strb	r1, [r3, r2]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2707              		.loc 1 510 0 discriminator 3
 2708 1244 07F5A253 		add	r3, r7, #5184
 2709 1248 03F11703 		add	r3, r3, #23
 2710 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2711 124e 0133     		adds	r3, r3, #1
 2712 1250 07F5A252 		add	r2, r7, #5184
 2713 1254 02F11702 		add	r2, r2, #23
 2714 1258 1370     		strb	r3, [r2]
 2715              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 74


 2716              		.loc 1 510 0 is_stmt 0 discriminator 1
 2717 125a 07F5A253 		add	r3, r7, #5184
 2718 125e 03F11703 		add	r3, r3, #23
 2719 1262 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2720 1264 07F5A253 		add	r3, r7, #5184
 2721 1268 03F11303 		add	r3, r3, #19
 2722 126c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2723 126e 9A42     		cmp	r2, r3
 2724 1270 C5D3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2725              		.loc 1 513 0 is_stmt 1
 2726 1272 07F5A253 		add	r3, r7, #5184
 2727 1276 03F10F03 		add	r3, r3, #15
 2728 127a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2729 127c 6149     		ldr	r1, .L262
 2730 127e 1346     		mov	r3, r2
 2731 1280 DB00     		lsls	r3, r3, #3
 2732 1282 9B1A     		subs	r3, r3, r2
 2733 1284 1B01     		lsls	r3, r3, #4
 2734 1286 0B44     		add	r3, r3, r1
 2735 1288 D833     		adds	r3, r3, #216
 2736 128a 1B68     		ldr	r3, [r3]
 2737 128c 1846     		mov	r0, r3
 2738 128e FFF7FEFF 		bl	__aeabi_i2f
 2739 1292 0346     		mov	r3, r0
 2740 1294 4FF08F41 		mov	r1, #1199570944
 2741 1298 1846     		mov	r0, r3
 2742 129a FFF7FEFF 		bl	__aeabi_fdiv
 2743 129e 0346     		mov	r3, r0
 2744 12a0 1A46     		mov	r2, r3
 2745 12a2 07F13803 		add	r3, r7, #56
 2746 12a6 183B     		subs	r3, r3, #24
 2747 12a8 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2748              		.loc 1 514 0
 2749 12aa 0023     		movs	r3, #0
 2750 12ac 07F5A252 		add	r2, r7, #5184
 2751 12b0 02F11702 		add	r2, r2, #23
 2752 12b4 1370     		strb	r3, [r2]
 2753 12b6 33E0     		b	.L139
 2754              	.L140:
 515:..\src/command_processing.c ****                             }
 2755              		.loc 1 515 0 discriminator 3
 2756 12b8 07F5A253 		add	r3, r7, #5184
 2757 12bc 03F11503 		add	r3, r3, #21
 2758 12c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2759 12c2 3222     		movs	r2, #50
 2760 12c4 02FB03F3 		mul	r3, r2, r3
 2761 12c8 1A1D     		adds	r2, r3, #4
 2762 12ca 07F5A253 		add	r3, r7, #5184
 2763 12ce 03F11303 		add	r3, r3, #19
 2764 12d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2765 12d4 1A44     		add	r2, r2, r3
 2766 12d6 07F5A253 		add	r3, r7, #5184
 2767 12da 03F11303 		add	r3, r3, #19
 2768 12de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2769 12e0 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 75


 2770 12e2 07F5A253 		add	r3, r7, #5184
 2771 12e6 03F11703 		add	r3, r3, #23
 2772 12ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2773 12ec D31A     		subs	r3, r2, r3
 2774 12ee 5A1E     		subs	r2, r3, #1
 2775 12f0 07F5A253 		add	r3, r7, #5184
 2776 12f4 03F11703 		add	r3, r3, #23
 2777 12f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2778 12fa 07F13803 		add	r3, r7, #56
 2779 12fe 183B     		subs	r3, r3, #24
 2780 1300 0B44     		add	r3, r3, r1
 2781 1302 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2782 1304 07F15803 		add	r3, r7, #88
 2783 1308 9954     		strb	r1, [r3, r2]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2784              		.loc 1 514 0 discriminator 3
 2785 130a 07F5A253 		add	r3, r7, #5184
 2786 130e 03F11703 		add	r3, r3, #23
 2787 1312 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2788 1314 0133     		adds	r3, r3, #1
 2789 1316 07F5A252 		add	r2, r7, #5184
 2790 131a 02F11702 		add	r2, r2, #23
 2791 131e 1370     		strb	r3, [r2]
 2792              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2793              		.loc 1 514 0 is_stmt 0 discriminator 1
 2794 1320 07F5A253 		add	r3, r7, #5184
 2795 1324 03F11703 		add	r3, r3, #23
 2796 1328 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2797 132a 07F5A253 		add	r3, r7, #5184
 2798 132e 03F11303 		add	r3, r3, #19
 2799 1332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2800 1334 9A42     		cmp	r2, r3
 2801 1336 BFD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2802              		.loc 1 517 0 is_stmt 1
 2803 1338 07F5A253 		add	r3, r7, #5184
 2804 133c 03F10F03 		add	r3, r3, #15
 2805 1340 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2806 1342 3049     		ldr	r1, .L262
 2807 1344 1346     		mov	r3, r2
 2808 1346 DB00     		lsls	r3, r3, #3
 2809 1348 9B1A     		subs	r3, r3, r2
 2810 134a 1B01     		lsls	r3, r3, #4
 2811 134c 0B44     		add	r3, r3, r1
 2812 134e DC33     		adds	r3, r3, #220
 2813 1350 1B68     		ldr	r3, [r3]
 2814 1352 1846     		mov	r0, r3
 2815 1354 FFF7FEFF 		bl	__aeabi_i2f
 2816 1358 0346     		mov	r3, r0
 2817 135a 4FF08F41 		mov	r1, #1199570944
 2818 135e 1846     		mov	r0, r3
 2819 1360 FFF7FEFF 		bl	__aeabi_fdiv
 2820 1364 0346     		mov	r3, r0
 2821 1366 1A46     		mov	r2, r3
 2822 1368 07F13803 		add	r3, r7, #56
 2823 136c 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 76


 2824 136e 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2825              		.loc 1 518 0
 2826 1370 0023     		movs	r3, #0
 2827 1372 07F5A252 		add	r2, r7, #5184
 2828 1376 02F11702 		add	r2, r2, #23
 2829 137a 1370     		strb	r3, [r2]
 2830 137c 34E0     		b	.L141
 2831              	.L142:
 519:..\src/command_processing.c ****                             }
 2832              		.loc 1 519 0 discriminator 3
 2833 137e 07F5A253 		add	r3, r7, #5184
 2834 1382 03F11503 		add	r3, r3, #21
 2835 1386 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2836 1388 3222     		movs	r2, #50
 2837 138a 02FB03F3 		mul	r3, r2, r3
 2838 138e 1A1D     		adds	r2, r3, #4
 2839 1390 07F5A253 		add	r3, r7, #5184
 2840 1394 03F11303 		add	r3, r3, #19
 2841 1398 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2842 139a 5B00     		lsls	r3, r3, #1
 2843 139c 1A44     		add	r2, r2, r3
 2844 139e 07F5A253 		add	r3, r7, #5184
 2845 13a2 03F11303 		add	r3, r3, #19
 2846 13a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2847 13a8 1A44     		add	r2, r2, r3
 2848 13aa 07F5A253 		add	r3, r7, #5184
 2849 13ae 03F11703 		add	r3, r3, #23
 2850 13b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2851 13b4 D31A     		subs	r3, r2, r3
 2852 13b6 5A1E     		subs	r2, r3, #1
 2853 13b8 07F5A253 		add	r3, r7, #5184
 2854 13bc 03F11703 		add	r3, r3, #23
 2855 13c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2856 13c2 07F13803 		add	r3, r7, #56
 2857 13c6 183B     		subs	r3, r3, #24
 2858 13c8 0B44     		add	r3, r3, r1
 2859 13ca 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2860 13cc 07F15803 		add	r3, r7, #88
 2861 13d0 9954     		strb	r1, [r3, r2]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2862              		.loc 1 518 0 discriminator 3
 2863 13d2 07F5A253 		add	r3, r7, #5184
 2864 13d6 03F11703 		add	r3, r3, #23
 2865 13da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2866 13dc 0133     		adds	r3, r3, #1
 2867 13de 07F5A252 		add	r2, r7, #5184
 2868 13e2 02F11702 		add	r2, r2, #23
 2869 13e6 1370     		strb	r3, [r2]
 2870              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2871              		.loc 1 518 0 is_stmt 0 discriminator 1
 2872 13e8 07F5A253 		add	r3, r7, #5184
 2873 13ec 03F11703 		add	r3, r3, #23
 2874 13f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2875 13f2 07F5A253 		add	r3, r7, #5184
 2876 13f6 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 77


 2877 13fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2878 13fc 9A42     		cmp	r2, r3
 2879 13fe BED3     		bcc	.L142
 2880              		.loc 1 522 0 is_stmt 1
 2881 1400 01F007B8 		b	.L103
 2882              	.L263:
 2883              		.align	2
 2884              	.L262:
 2885 1404 00000000 		.word	c_mem
 2886              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2887              		.loc 1 525 0
 2888 1408 07F5A253 		add	r3, r7, #5184
 2889 140c 03F10F03 		add	r3, r3, #15
 2890 1410 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2891 1412 C849     		ldr	r1, .L264
 2892 1414 1346     		mov	r3, r2
 2893 1416 DB00     		lsls	r3, r3, #3
 2894 1418 9B1A     		subs	r3, r3, r2
 2895 141a 1B01     		lsls	r3, r3, #4
 2896 141c 0B44     		add	r3, r3, r1
 2897 141e 03F58873 		add	r3, r3, #272
 2898 1422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2899 1424 1846     		mov	r0, r3
 2900 1426 07F5A253 		add	r3, r7, #5184
 2901 142a 03F11703 		add	r3, r3, #23
 2902 142e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2903 1430 C149     		ldr	r1, .L264+4
 2904 1432 0346     		mov	r3, r0
 2905 1434 5B00     		lsls	r3, r3, #1
 2906 1436 0344     		add	r3, r3, r0
 2907 1438 9B00     		lsls	r3, r3, #2
 2908 143a 1344     		add	r3, r3, r2
 2909 143c 6633     		adds	r3, r3, #102
 2910 143e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2911 1442 07F5A253 		add	r3, r7, #5184
 2912 1446 03F10F03 		add	r3, r3, #15
 2913 144a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2914 144c B948     		ldr	r0, .L264
 2915 144e 1346     		mov	r3, r2
 2916 1450 DB00     		lsls	r3, r3, #3
 2917 1452 9B1A     		subs	r3, r3, r2
 2918 1454 1B01     		lsls	r3, r3, #4
 2919 1456 0344     		add	r3, r3, r0
 2920 1458 03F58873 		add	r3, r3, #272
 2921 145c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2922 145e 1C46     		mov	r4, r3
 2923 1460 07F5A253 		add	r3, r7, #5184
 2924 1464 03F11703 		add	r3, r3, #23
 2925 1468 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2926 146a B348     		ldr	r0, .L264+4
 2927 146c 2346     		mov	r3, r4
 2928 146e 5B00     		lsls	r3, r3, #1
 2929 1470 2344     		add	r3, r3, r4
 2930 1472 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 78


 2931 1474 0344     		add	r3, r3, r0
 2932 1476 1344     		add	r3, r3, r2
 2933 1478 03F29513 		addw	r3, r3, #405
 2934 147c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2935 147e 41FA03F3 		asr	r3, r1, r3
 2936 1482 1AB2     		sxth	r2, r3
 2937 1484 07F13803 		add	r3, r7, #56
 2938 1488 1A3B     		subs	r3, r3, #26
 2939 148a 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2940              		.loc 1 526 0
 2941 148c 0023     		movs	r3, #0
 2942 148e 07F5A252 		add	r2, r7, #5184
 2943 1492 02F11602 		add	r2, r2, #22
 2944 1496 1370     		strb	r3, [r2]
 2945 1498 3AE0     		b	.L143
 2946              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2947              		.loc 1 527 0 discriminator 3
 2948 149a 07F5A253 		add	r3, r7, #5184
 2949 149e 03F11503 		add	r3, r3, #21
 2950 14a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2951 14a4 3222     		movs	r2, #50
 2952 14a6 02FB03F3 		mul	r3, r2, r3
 2953 14aa 1A1D     		adds	r2, r3, #4
 2954 14ac 07F5A253 		add	r3, r7, #5184
 2955 14b0 03F11703 		add	r3, r3, #23
 2956 14b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2957 14b6 07F5A251 		add	r1, r7, #5184
 2958 14ba 01F11301 		add	r1, r1, #19
 2959 14be 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2960 14c0 01FB03F3 		mul	r3, r1, r3
 2961 14c4 1A44     		add	r2, r2, r3
 2962 14c6 07F5A253 		add	r3, r7, #5184
 2963 14ca 03F11303 		add	r3, r3, #19
 2964 14ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2965 14d0 1A44     		add	r2, r2, r3
 2966 14d2 07F5A253 		add	r3, r7, #5184
 2967 14d6 03F11603 		add	r3, r3, #22
 2968 14da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2969 14dc D31A     		subs	r3, r2, r3
 2970 14de 5A1E     		subs	r2, r3, #1
 2971 14e0 07F5A253 		add	r3, r7, #5184
 2972 14e4 03F11603 		add	r3, r3, #22
 2973 14e8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2974 14ea 07F13803 		add	r3, r7, #56
 2975 14ee 1A3B     		subs	r3, r3, #26
 2976 14f0 0B44     		add	r3, r3, r1
 2977 14f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2978 14f4 07F15803 		add	r3, r7, #88
 2979 14f8 9954     		strb	r1, [r3, r2]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2980              		.loc 1 526 0 discriminator 3
 2981 14fa 07F5A253 		add	r3, r7, #5184
 2982 14fe 03F11603 		add	r3, r3, #22
 2983 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2984 1504 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 79


 2985 1506 07F5A252 		add	r2, r7, #5184
 2986 150a 02F11602 		add	r2, r2, #22
 2987 150e 1370     		strb	r3, [r2]
 2988              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2989              		.loc 1 526 0 is_stmt 0 discriminator 1
 2990 1510 07F5A253 		add	r3, r7, #5184
 2991 1514 03F11603 		add	r3, r3, #22
 2992 1518 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2993 151a 07F5A253 		add	r3, r7, #5184
 2994 151e 03F11303 		add	r3, r3, #19
 2995 1522 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2996 1524 9A42     		cmp	r2, r3
 2997 1526 B8D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2998              		.loc 1 529 0 is_stmt 1
 2999 1528 00F073BF 		b	.L103
 3000              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3001              		.loc 1 532 0
 3002 152c 07F5A253 		add	r3, r7, #5184
 3003 1530 03F10F03 		add	r3, r3, #15
 3004 1534 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3005 1536 8049     		ldr	r1, .L264+4
 3006 1538 1346     		mov	r3, r2
 3007 153a DB00     		lsls	r3, r3, #3
 3008 153c 9B1A     		subs	r3, r3, r2
 3009 153e 1B01     		lsls	r3, r3, #4
 3010 1540 0B44     		add	r3, r3, r1
 3011 1542 E433     		adds	r3, r3, #228
 3012 1544 1968     		ldr	r1, [r3]
 3013 1546 07F5A253 		add	r3, r7, #5184
 3014 154a 03F10F03 		add	r3, r3, #15
 3015 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3016 1550 7848     		ldr	r0, .L264
 3017 1552 1346     		mov	r3, r2
 3018 1554 DB00     		lsls	r3, r3, #3
 3019 1556 9B1A     		subs	r3, r3, r2
 3020 1558 1B01     		lsls	r3, r3, #4
 3021 155a 0344     		add	r3, r3, r0
 3022 155c 03F58873 		add	r3, r3, #272
 3023 1560 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3024 1562 1846     		mov	r0, r3
 3025 1564 744A     		ldr	r2, .L264+4
 3026 1566 0346     		mov	r3, r0
 3027 1568 5B00     		lsls	r3, r3, #1
 3028 156a 0344     		add	r3, r3, r0
 3029 156c 1B01     		lsls	r3, r3, #4
 3030 156e 1344     		add	r3, r3, r2
 3031 1570 03F29513 		addw	r3, r3, #405
 3032 1574 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3033 1576 41FA03F2 		asr	r2, r1, r3
 3034 157a 07F11803 		add	r3, r7, #24
 3035 157e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 80


 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3036              		.loc 1 533 0
 3037 1580 0023     		movs	r3, #0
 3038 1582 07F5A252 		add	r2, r7, #5184
 3039 1586 02F11602 		add	r2, r2, #22
 3040 158a 1370     		strb	r3, [r2]
 3041 158c 2CE0     		b	.L145
 3042              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3043              		.loc 1 534 0 discriminator 3
 3044 158e 07F5A253 		add	r3, r7, #5184
 3045 1592 03F11503 		add	r3, r3, #21
 3046 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3047 1598 3222     		movs	r2, #50
 3048 159a 02FB03F3 		mul	r3, r2, r3
 3049 159e 1A1D     		adds	r2, r3, #4
 3050 15a0 07F5A253 		add	r3, r7, #5184
 3051 15a4 03F11303 		add	r3, r3, #19
 3052 15a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3053 15aa 1A44     		add	r2, r2, r3
 3054 15ac 07F5A253 		add	r3, r7, #5184
 3055 15b0 03F11603 		add	r3, r3, #22
 3056 15b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3057 15b6 D31A     		subs	r3, r2, r3
 3058 15b8 013B     		subs	r3, r3, #1
 3059 15ba 07F5A252 		add	r2, r7, #5184
 3060 15be 02F11602 		add	r2, r2, #22
 3061 15c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3062 15c4 07F11801 		add	r1, r7, #24
 3063 15c8 0A44     		add	r2, r2, r1
 3064 15ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3065 15cc 07F15802 		add	r2, r7, #88
 3066 15d0 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3067              		.loc 1 533 0 discriminator 3
 3068 15d2 07F5A253 		add	r3, r7, #5184
 3069 15d6 03F11603 		add	r3, r3, #22
 3070 15da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3071 15dc 0133     		adds	r3, r3, #1
 3072 15de 07F5A252 		add	r2, r7, #5184
 3073 15e2 02F11602 		add	r2, r2, #22
 3074 15e6 1370     		strb	r3, [r2]
 3075              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3076              		.loc 1 533 0 is_stmt 0 discriminator 1
 3077 15e8 07F5A253 		add	r3, r7, #5184
 3078 15ec 03F11603 		add	r3, r3, #22
 3079 15f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3080 15f2 07F5A253 		add	r3, r7, #5184
 3081 15f6 03F11303 		add	r3, r3, #19
 3082 15fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3083 15fc 9A42     		cmp	r2, r3
 3084 15fe C6D3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3085              		.loc 1 536 0 is_stmt 1
 3086 1600 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 81


 3087 1604 03F10F03 		add	r3, r3, #15
 3088 1608 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3089 160a 4B49     		ldr	r1, .L264+4
 3090 160c 1346     		mov	r3, r2
 3091 160e DB00     		lsls	r3, r3, #3
 3092 1610 9B1A     		subs	r3, r3, r2
 3093 1612 1B01     		lsls	r3, r3, #4
 3094 1614 0B44     		add	r3, r3, r1
 3095 1616 E833     		adds	r3, r3, #232
 3096 1618 1968     		ldr	r1, [r3]
 3097 161a 07F5A253 		add	r3, r7, #5184
 3098 161e 03F10F03 		add	r3, r3, #15
 3099 1622 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3100 1624 4348     		ldr	r0, .L264
 3101 1626 1346     		mov	r3, r2
 3102 1628 DB00     		lsls	r3, r3, #3
 3103 162a 9B1A     		subs	r3, r3, r2
 3104 162c 1B01     		lsls	r3, r3, #4
 3105 162e 0344     		add	r3, r3, r0
 3106 1630 03F58873 		add	r3, r3, #272
 3107 1634 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3108 1636 1846     		mov	r0, r3
 3109 1638 3F4A     		ldr	r2, .L264+4
 3110 163a 0346     		mov	r3, r0
 3111 163c 5B00     		lsls	r3, r3, #1
 3112 163e 0344     		add	r3, r3, r0
 3113 1640 1B01     		lsls	r3, r3, #4
 3114 1642 1344     		add	r3, r3, r2
 3115 1644 03F29513 		addw	r3, r3, #405
 3116 1648 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3117 164a 41FA03F2 		asr	r2, r1, r3
 3118 164e 07F11803 		add	r3, r7, #24
 3119 1652 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3120              		.loc 1 537 0
 3121 1654 0023     		movs	r3, #0
 3122 1656 07F5A252 		add	r2, r7, #5184
 3123 165a 02F11602 		add	r2, r2, #22
 3124 165e 1370     		strb	r3, [r2]
 3125 1660 32E0     		b	.L147
 3126              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3127              		.loc 1 538 0 discriminator 3
 3128 1662 07F5A253 		add	r3, r7, #5184
 3129 1666 03F11503 		add	r3, r3, #21
 3130 166a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3131 166c 3222     		movs	r2, #50
 3132 166e 02FB03F3 		mul	r3, r2, r3
 3133 1672 1A1D     		adds	r2, r3, #4
 3134 1674 07F5A253 		add	r3, r7, #5184
 3135 1678 03F11303 		add	r3, r3, #19
 3136 167c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3137 167e 1A44     		add	r2, r2, r3
 3138 1680 07F5A253 		add	r3, r7, #5184
 3139 1684 03F11303 		add	r3, r3, #19
 3140 1688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3141 168a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 82


 3142 168c 07F5A253 		add	r3, r7, #5184
 3143 1690 03F11603 		add	r3, r3, #22
 3144 1694 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3145 1696 D31A     		subs	r3, r2, r3
 3146 1698 013B     		subs	r3, r3, #1
 3147 169a 07F5A252 		add	r2, r7, #5184
 3148 169e 02F11602 		add	r2, r2, #22
 3149 16a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3150 16a4 07F11801 		add	r1, r7, #24
 3151 16a8 0A44     		add	r2, r2, r1
 3152 16aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3153 16ac 07F15802 		add	r2, r7, #88
 3154 16b0 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3155              		.loc 1 537 0 discriminator 3
 3156 16b2 07F5A253 		add	r3, r7, #5184
 3157 16b6 03F11603 		add	r3, r3, #22
 3158 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3159 16bc 0133     		adds	r3, r3, #1
 3160 16be 07F5A252 		add	r2, r7, #5184
 3161 16c2 02F11602 		add	r2, r2, #22
 3162 16c6 1370     		strb	r3, [r2]
 3163              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3164              		.loc 1 537 0 is_stmt 0 discriminator 1
 3165 16c8 07F5A253 		add	r3, r7, #5184
 3166 16cc 03F11603 		add	r3, r3, #22
 3167 16d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3168 16d2 07F5A253 		add	r3, r7, #5184
 3169 16d6 03F11303 		add	r3, r3, #19
 3170 16da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3171 16dc 9A42     		cmp	r2, r3
 3172 16de C0D3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 3173              		.loc 1 540 0 is_stmt 1
 3174 16e0 00F097BE 		b	.L103
 3175              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3176              		.loc 1 543 0
 3177 16e4 144B     		ldr	r3, .L264+4
 3178 16e6 D3F8A012 		ldr	r1, [r3, #672]
 3179 16ea 07F5A253 		add	r3, r7, #5184
 3180 16ee 03F10F03 		add	r3, r3, #15
 3181 16f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3182 16f4 0F48     		ldr	r0, .L264
 3183 16f6 1346     		mov	r3, r2
 3184 16f8 DB00     		lsls	r3, r3, #3
 3185 16fa 9B1A     		subs	r3, r3, r2
 3186 16fc 1B01     		lsls	r3, r3, #4
 3187 16fe 0344     		add	r3, r3, r0
 3188 1700 03F58873 		add	r3, r3, #272
 3189 1704 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3190 1706 1846     		mov	r0, r3
 3191 1708 0B4A     		ldr	r2, .L264+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 83


 3192 170a 0346     		mov	r3, r0
 3193 170c 5B00     		lsls	r3, r3, #1
 3194 170e 0344     		add	r3, r3, r0
 3195 1710 1B01     		lsls	r3, r3, #4
 3196 1712 1344     		add	r3, r3, r2
 3197 1714 03F29513 		addw	r3, r3, #405
 3198 1718 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3199 171a 41FA03F2 		asr	r2, r1, r3
 3200 171e 07F11803 		add	r3, r7, #24
 3201 1722 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3202              		.loc 1 544 0
 3203 1724 0023     		movs	r3, #0
 3204 1726 07F5A252 		add	r2, r7, #5184
 3205 172a 02F11602 		add	r2, r2, #22
 3206 172e 1370     		strb	r3, [r2]
 3207 1730 31E0     		b	.L149
 3208              	.L265:
 3209 1732 00BF     		.align	2
 3210              	.L264:
 3211 1734 00000000 		.word	g_mem
 3212 1738 00000000 		.word	c_mem
 3213              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3214              		.loc 1 545 0 discriminator 3
 3215 173c 07F5A253 		add	r3, r7, #5184
 3216 1740 03F11503 		add	r3, r3, #21
 3217 1744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3218 1746 3222     		movs	r2, #50
 3219 1748 02FB03F3 		mul	r3, r2, r3
 3220 174c 1A1D     		adds	r2, r3, #4
 3221 174e 07F5A253 		add	r3, r7, #5184
 3222 1752 03F11303 		add	r3, r3, #19
 3223 1756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3224 1758 1A44     		add	r2, r2, r3
 3225 175a 07F5A253 		add	r3, r7, #5184
 3226 175e 03F11603 		add	r3, r3, #22
 3227 1762 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3228 1764 D31A     		subs	r3, r2, r3
 3229 1766 013B     		subs	r3, r3, #1
 3230 1768 07F5A252 		add	r2, r7, #5184
 3231 176c 02F11602 		add	r2, r2, #22
 3232 1770 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3233 1772 07F11801 		add	r1, r7, #24
 3234 1776 0A44     		add	r2, r2, r1
 3235 1778 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3236 177a 07F15802 		add	r2, r7, #88
 3237 177e D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3238              		.loc 1 544 0 discriminator 3
 3239 1780 07F5A253 		add	r3, r7, #5184
 3240 1784 03F11603 		add	r3, r3, #22
 3241 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3242 178a 0133     		adds	r3, r3, #1
 3243 178c 07F5A252 		add	r2, r7, #5184
 3244 1790 02F11602 		add	r2, r2, #22
 3245 1794 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 84


 3246              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3247              		.loc 1 544 0 is_stmt 0 discriminator 1
 3248 1796 07F5A253 		add	r3, r7, #5184
 3249 179a 03F11603 		add	r3, r3, #22
 3250 179e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3251 17a0 07F5A253 		add	r3, r7, #5184
 3252 17a4 03F11303 		add	r3, r3, #19
 3253 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 17aa 9A42     		cmp	r2, r3
 3255 17ac C6D3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 3256              		.loc 1 547 0 is_stmt 1
 3257 17ae 00F030BE 		b	.L103
 3258              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3259              		.loc 1 550 0
 3260 17b2 07F5A253 		add	r3, r7, #5184
 3261 17b6 03F10E03 		add	r3, r3, #14
 3262 17ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3263 17bc AA49     		ldr	r1, .L266
 3264 17be 1346     		mov	r3, r2
 3265 17c0 DB00     		lsls	r3, r3, #3
 3266 17c2 9B1A     		subs	r3, r3, r2
 3267 17c4 1B01     		lsls	r3, r3, #4
 3268 17c6 0B44     		add	r3, r3, r1
 3269 17c8 03F20F13 		addw	r3, r3, #271
 3270 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3271 17ce 032B     		cmp	r3, #3
 3272 17d0 00F02681 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3273              		.loc 1 551 0
 3274 17d4 07F5A253 		add	r3, r7, #5184
 3275 17d8 03F10E03 		add	r3, r3, #14
 3276 17dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3277 17de A249     		ldr	r1, .L266
 3278 17e0 1346     		mov	r3, r2
 3279 17e2 DB00     		lsls	r3, r3, #3
 3280 17e4 9B1A     		subs	r3, r3, r2
 3281 17e6 1B01     		lsls	r3, r3, #4
 3282 17e8 0B44     		add	r3, r3, r1
 3283 17ea B033     		adds	r3, r3, #176
 3284 17ec 1B68     		ldr	r3, [r3]
 3285 17ee 1846     		mov	r0, r3
 3286 17f0 FFF7FEFF 		bl	__aeabi_i2f
 3287 17f4 0346     		mov	r3, r0
 3288 17f6 4FF08F41 		mov	r1, #1199570944
 3289 17fa 1846     		mov	r0, r3
 3290 17fc FFF7FEFF 		bl	__aeabi_fdiv
 3291 1800 0346     		mov	r3, r0
 3292 1802 1A46     		mov	r2, r3
 3293 1804 07F13803 		add	r3, r7, #56
 3294 1808 183B     		subs	r3, r3, #24
 3295 180a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 85


 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3296              		.loc 1 552 0
 3297 180c 0023     		movs	r3, #0
 3298 180e 07F5A252 		add	r2, r7, #5184
 3299 1812 02F11702 		add	r2, r2, #23
 3300 1816 1370     		strb	r3, [r2]
 3301 1818 2DE0     		b	.L152
 3302              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3303              		.loc 1 553 0 discriminator 3
 3304 181a 07F5A253 		add	r3, r7, #5184
 3305 181e 03F11503 		add	r3, r3, #21
 3306 1822 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3307 1824 3222     		movs	r2, #50
 3308 1826 02FB03F3 		mul	r3, r2, r3
 3309 182a 1A1D     		adds	r2, r3, #4
 3310 182c 07F5A253 		add	r3, r7, #5184
 3311 1830 03F11303 		add	r3, r3, #19
 3312 1834 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3313 1836 1A44     		add	r2, r2, r3
 3314 1838 07F5A253 		add	r3, r7, #5184
 3315 183c 03F11703 		add	r3, r3, #23
 3316 1840 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 1842 D31A     		subs	r3, r2, r3
 3318 1844 5A1E     		subs	r2, r3, #1
 3319 1846 07F5A253 		add	r3, r7, #5184
 3320 184a 03F11703 		add	r3, r3, #23
 3321 184e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3322 1850 07F13803 		add	r3, r7, #56
 3323 1854 183B     		subs	r3, r3, #24
 3324 1856 0B44     		add	r3, r3, r1
 3325 1858 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3326 185a 07F15803 		add	r3, r7, #88
 3327 185e 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3328              		.loc 1 552 0 discriminator 3
 3329 1860 07F5A253 		add	r3, r7, #5184
 3330 1864 03F11703 		add	r3, r3, #23
 3331 1868 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3332 186a 0133     		adds	r3, r3, #1
 3333 186c 07F5A252 		add	r2, r7, #5184
 3334 1870 02F11702 		add	r2, r2, #23
 3335 1874 1370     		strb	r3, [r2]
 3336              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3337              		.loc 1 552 0 is_stmt 0 discriminator 1
 3338 1876 07F5A253 		add	r3, r7, #5184
 3339 187a 03F11703 		add	r3, r3, #23
 3340 187e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3341 1880 07F5A253 		add	r3, r7, #5184
 3342 1884 03F11303 		add	r3, r3, #19
 3343 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 188a 9A42     		cmp	r2, r3
 3345 188c C5D3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3346              		.loc 1 555 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 86


 3347 188e 07F5A253 		add	r3, r7, #5184
 3348 1892 03F10E03 		add	r3, r3, #14
 3349 1896 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3350 1898 7349     		ldr	r1, .L266
 3351 189a 1346     		mov	r3, r2
 3352 189c DB00     		lsls	r3, r3, #3
 3353 189e 9B1A     		subs	r3, r3, r2
 3354 18a0 1B01     		lsls	r3, r3, #4
 3355 18a2 0B44     		add	r3, r3, r1
 3356 18a4 B433     		adds	r3, r3, #180
 3357 18a6 1B68     		ldr	r3, [r3]
 3358 18a8 1846     		mov	r0, r3
 3359 18aa FFF7FEFF 		bl	__aeabi_i2f
 3360 18ae 0346     		mov	r3, r0
 3361 18b0 4FF08F41 		mov	r1, #1199570944
 3362 18b4 1846     		mov	r0, r3
 3363 18b6 FFF7FEFF 		bl	__aeabi_fdiv
 3364 18ba 0346     		mov	r3, r0
 3365 18bc 1A46     		mov	r2, r3
 3366 18be 07F13803 		add	r3, r7, #56
 3367 18c2 183B     		subs	r3, r3, #24
 3368 18c4 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3369              		.loc 1 556 0
 3370 18c6 0023     		movs	r3, #0
 3371 18c8 07F5A252 		add	r2, r7, #5184
 3372 18cc 02F11702 		add	r2, r2, #23
 3373 18d0 1370     		strb	r3, [r2]
 3374 18d2 33E0     		b	.L154
 3375              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3376              		.loc 1 557 0 discriminator 3
 3377 18d4 07F5A253 		add	r3, r7, #5184
 3378 18d8 03F11503 		add	r3, r3, #21
 3379 18dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3380 18de 3222     		movs	r2, #50
 3381 18e0 02FB03F3 		mul	r3, r2, r3
 3382 18e4 1A1D     		adds	r2, r3, #4
 3383 18e6 07F5A253 		add	r3, r7, #5184
 3384 18ea 03F11303 		add	r3, r3, #19
 3385 18ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3386 18f0 1A44     		add	r2, r2, r3
 3387 18f2 07F5A253 		add	r3, r7, #5184
 3388 18f6 03F11303 		add	r3, r3, #19
 3389 18fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3390 18fc 1A44     		add	r2, r2, r3
 3391 18fe 07F5A253 		add	r3, r7, #5184
 3392 1902 03F11703 		add	r3, r3, #23
 3393 1906 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3394 1908 D31A     		subs	r3, r2, r3
 3395 190a 5A1E     		subs	r2, r3, #1
 3396 190c 07F5A253 		add	r3, r7, #5184
 3397 1910 03F11703 		add	r3, r3, #23
 3398 1914 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3399 1916 07F13803 		add	r3, r7, #56
 3400 191a 183B     		subs	r3, r3, #24
 3401 191c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 87


 3402 191e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3403 1920 07F15803 		add	r3, r7, #88
 3404 1924 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3405              		.loc 1 556 0 discriminator 3
 3406 1926 07F5A253 		add	r3, r7, #5184
 3407 192a 03F11703 		add	r3, r3, #23
 3408 192e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3409 1930 0133     		adds	r3, r3, #1
 3410 1932 07F5A252 		add	r2, r7, #5184
 3411 1936 02F11702 		add	r2, r2, #23
 3412 193a 1370     		strb	r3, [r2]
 3413              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3414              		.loc 1 556 0 is_stmt 0 discriminator 1
 3415 193c 07F5A253 		add	r3, r7, #5184
 3416 1940 03F11703 		add	r3, r3, #23
 3417 1944 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3418 1946 07F5A253 		add	r3, r7, #5184
 3419 194a 03F11303 		add	r3, r3, #19
 3420 194e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3421 1950 9A42     		cmp	r2, r3
 3422 1952 BFD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3423              		.loc 1 559 0 is_stmt 1
 3424 1954 07F5A253 		add	r3, r7, #5184
 3425 1958 03F10E03 		add	r3, r3, #14
 3426 195c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3427 195e 4249     		ldr	r1, .L266
 3428 1960 1346     		mov	r3, r2
 3429 1962 DB00     		lsls	r3, r3, #3
 3430 1964 9B1A     		subs	r3, r3, r2
 3431 1966 1B01     		lsls	r3, r3, #4
 3432 1968 0B44     		add	r3, r3, r1
 3433 196a B833     		adds	r3, r3, #184
 3434 196c 1B68     		ldr	r3, [r3]
 3435 196e 1846     		mov	r0, r3
 3436 1970 FFF7FEFF 		bl	__aeabi_i2f
 3437 1974 0346     		mov	r3, r0
 3438 1976 4FF08F41 		mov	r1, #1199570944
 3439 197a 1846     		mov	r0, r3
 3440 197c FFF7FEFF 		bl	__aeabi_fdiv
 3441 1980 0346     		mov	r3, r0
 3442 1982 1A46     		mov	r2, r3
 3443 1984 07F13803 		add	r3, r7, #56
 3444 1988 183B     		subs	r3, r3, #24
 3445 198a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3446              		.loc 1 560 0
 3447 198c 0023     		movs	r3, #0
 3448 198e 07F5A252 		add	r2, r7, #5184
 3449 1992 02F11702 		add	r2, r2, #23
 3450 1996 1370     		strb	r3, [r2]
 3451 1998 34E0     		b	.L156
 3452              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 88


 3453              		.loc 1 561 0 discriminator 3
 3454 199a 07F5A253 		add	r3, r7, #5184
 3455 199e 03F11503 		add	r3, r3, #21
 3456 19a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3457 19a4 3222     		movs	r2, #50
 3458 19a6 02FB03F3 		mul	r3, r2, r3
 3459 19aa 1A1D     		adds	r2, r3, #4
 3460 19ac 07F5A253 		add	r3, r7, #5184
 3461 19b0 03F11303 		add	r3, r3, #19
 3462 19b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3463 19b6 5B00     		lsls	r3, r3, #1
 3464 19b8 1A44     		add	r2, r2, r3
 3465 19ba 07F5A253 		add	r3, r7, #5184
 3466 19be 03F11303 		add	r3, r3, #19
 3467 19c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3468 19c4 1A44     		add	r2, r2, r3
 3469 19c6 07F5A253 		add	r3, r7, #5184
 3470 19ca 03F11703 		add	r3, r3, #23
 3471 19ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3472 19d0 D31A     		subs	r3, r2, r3
 3473 19d2 5A1E     		subs	r2, r3, #1
 3474 19d4 07F5A253 		add	r3, r7, #5184
 3475 19d8 03F11703 		add	r3, r3, #23
 3476 19dc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3477 19de 07F13803 		add	r3, r7, #56
 3478 19e2 183B     		subs	r3, r3, #24
 3479 19e4 0B44     		add	r3, r3, r1
 3480 19e6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3481 19e8 07F15803 		add	r3, r7, #88
 3482 19ec 9954     		strb	r1, [r3, r2]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3483              		.loc 1 560 0 discriminator 3
 3484 19ee 07F5A253 		add	r3, r7, #5184
 3485 19f2 03F11703 		add	r3, r3, #23
 3486 19f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3487 19f8 0133     		adds	r3, r3, #1
 3488 19fa 07F5A252 		add	r2, r7, #5184
 3489 19fe 02F11702 		add	r2, r2, #23
 3490 1a02 1370     		strb	r3, [r2]
 3491              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3492              		.loc 1 560 0 is_stmt 0 discriminator 1
 3493 1a04 07F5A253 		add	r3, r7, #5184
 3494 1a08 03F11703 		add	r3, r3, #23
 3495 1a0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3496 1a0e 07F5A253 		add	r3, r7, #5184
 3497 1a12 03F11303 		add	r3, r3, #19
 3498 1a16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3499 1a18 9A42     		cmp	r2, r3
 3500 1a1a BED3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 89


 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 3501              		.loc 1 578 0 is_stmt 1
 3502 1a1c 00F0F9BC 		b	.L103
 3503              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3504              		.loc 1 565 0
 3505 1a20 07F5A253 		add	r3, r7, #5184
 3506 1a24 03F10E03 		add	r3, r3, #14
 3507 1a28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3508 1a2a 0F49     		ldr	r1, .L266
 3509 1a2c 1346     		mov	r3, r2
 3510 1a2e DB00     		lsls	r3, r3, #3
 3511 1a30 9B1A     		subs	r3, r3, r2
 3512 1a32 1B01     		lsls	r3, r3, #4
 3513 1a34 0B44     		add	r3, r3, r1
 3514 1a36 C833     		adds	r3, r3, #200
 3515 1a38 1B68     		ldr	r3, [r3]
 3516 1a3a 1846     		mov	r0, r3
 3517 1a3c FFF7FEFF 		bl	__aeabi_i2f
 3518 1a40 0346     		mov	r3, r0
 3519 1a42 4FF08F41 		mov	r1, #1199570944
 3520 1a46 1846     		mov	r0, r3
 3521 1a48 FFF7FEFF 		bl	__aeabi_fdiv
 3522 1a4c 0346     		mov	r3, r0
 3523 1a4e 1A46     		mov	r2, r3
 3524 1a50 07F13803 		add	r3, r7, #56
 3525 1a54 183B     		subs	r3, r3, #24
 3526 1a56 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3527              		.loc 1 566 0
 3528 1a58 0023     		movs	r3, #0
 3529 1a5a 07F5A252 		add	r2, r7, #5184
 3530 1a5e 02F11702 		add	r2, r2, #23
 3531 1a62 1370     		strb	r3, [r2]
 3532 1a64 30E0     		b	.L159
 3533              	.L267:
 3534 1a66 00BF     		.align	2
 3535              	.L266:
 3536 1a68 00000000 		.word	c_mem
 3537              	.L160:
 567:..\src/command_processing.c ****                             }
 3538              		.loc 1 567 0 discriminator 3
 3539 1a6c 07F5A253 		add	r3, r7, #5184
 3540 1a70 03F11503 		add	r3, r3, #21
 3541 1a74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3542 1a76 3222     		movs	r2, #50
 3543 1a78 02FB03F3 		mul	r3, r2, r3
 3544 1a7c 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 90


 3545 1a7e 07F5A253 		add	r3, r7, #5184
 3546 1a82 03F11303 		add	r3, r3, #19
 3547 1a86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3548 1a88 1A44     		add	r2, r2, r3
 3549 1a8a 07F5A253 		add	r3, r7, #5184
 3550 1a8e 03F11703 		add	r3, r3, #23
 3551 1a92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3552 1a94 D31A     		subs	r3, r2, r3
 3553 1a96 5A1E     		subs	r2, r3, #1
 3554 1a98 07F5A253 		add	r3, r7, #5184
 3555 1a9c 03F11703 		add	r3, r3, #23
 3556 1aa0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3557 1aa2 07F13803 		add	r3, r7, #56
 3558 1aa6 183B     		subs	r3, r3, #24
 3559 1aa8 0B44     		add	r3, r3, r1
 3560 1aaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3561 1aac 07F15803 		add	r3, r7, #88
 3562 1ab0 9954     		strb	r1, [r3, r2]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3563              		.loc 1 566 0 discriminator 3
 3564 1ab2 07F5A253 		add	r3, r7, #5184
 3565 1ab6 03F11703 		add	r3, r3, #23
 3566 1aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3567 1abc 0133     		adds	r3, r3, #1
 3568 1abe 07F5A252 		add	r2, r7, #5184
 3569 1ac2 02F11702 		add	r2, r2, #23
 3570 1ac6 1370     		strb	r3, [r2]
 3571              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3572              		.loc 1 566 0 is_stmt 0 discriminator 1
 3573 1ac8 07F5A253 		add	r3, r7, #5184
 3574 1acc 03F11703 		add	r3, r3, #23
 3575 1ad0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3576 1ad2 07F5A253 		add	r3, r7, #5184
 3577 1ad6 03F11303 		add	r3, r3, #19
 3578 1ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3579 1adc 9A42     		cmp	r2, r3
 3580 1ade C5D3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3581              		.loc 1 569 0 is_stmt 1
 3582 1ae0 07F5A253 		add	r3, r7, #5184
 3583 1ae4 03F10E03 		add	r3, r3, #14
 3584 1ae8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3585 1aea AA49     		ldr	r1, .L268
 3586 1aec 1346     		mov	r3, r2
 3587 1aee DB00     		lsls	r3, r3, #3
 3588 1af0 9B1A     		subs	r3, r3, r2
 3589 1af2 1B01     		lsls	r3, r3, #4
 3590 1af4 0B44     		add	r3, r3, r1
 3591 1af6 CC33     		adds	r3, r3, #204
 3592 1af8 1B68     		ldr	r3, [r3]
 3593 1afa 1846     		mov	r0, r3
 3594 1afc FFF7FEFF 		bl	__aeabi_i2f
 3595 1b00 0346     		mov	r3, r0
 3596 1b02 4FF08F41 		mov	r1, #1199570944
 3597 1b06 1846     		mov	r0, r3
 3598 1b08 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 91


 3599 1b0c 0346     		mov	r3, r0
 3600 1b0e 1A46     		mov	r2, r3
 3601 1b10 07F13803 		add	r3, r7, #56
 3602 1b14 183B     		subs	r3, r3, #24
 3603 1b16 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3604              		.loc 1 570 0
 3605 1b18 0023     		movs	r3, #0
 3606 1b1a 07F5A252 		add	r2, r7, #5184
 3607 1b1e 02F11702 		add	r2, r2, #23
 3608 1b22 1370     		strb	r3, [r2]
 3609 1b24 33E0     		b	.L161
 3610              	.L162:
 571:..\src/command_processing.c ****                             }
 3611              		.loc 1 571 0 discriminator 3
 3612 1b26 07F5A253 		add	r3, r7, #5184
 3613 1b2a 03F11503 		add	r3, r3, #21
 3614 1b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3615 1b30 3222     		movs	r2, #50
 3616 1b32 02FB03F3 		mul	r3, r2, r3
 3617 1b36 1A1D     		adds	r2, r3, #4
 3618 1b38 07F5A253 		add	r3, r7, #5184
 3619 1b3c 03F11303 		add	r3, r3, #19
 3620 1b40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3621 1b42 1A44     		add	r2, r2, r3
 3622 1b44 07F5A253 		add	r3, r7, #5184
 3623 1b48 03F11303 		add	r3, r3, #19
 3624 1b4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3625 1b4e 1A44     		add	r2, r2, r3
 3626 1b50 07F5A253 		add	r3, r7, #5184
 3627 1b54 03F11703 		add	r3, r3, #23
 3628 1b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3629 1b5a D31A     		subs	r3, r2, r3
 3630 1b5c 5A1E     		subs	r2, r3, #1
 3631 1b5e 07F5A253 		add	r3, r7, #5184
 3632 1b62 03F11703 		add	r3, r3, #23
 3633 1b66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3634 1b68 07F13803 		add	r3, r7, #56
 3635 1b6c 183B     		subs	r3, r3, #24
 3636 1b6e 0B44     		add	r3, r3, r1
 3637 1b70 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3638 1b72 07F15803 		add	r3, r7, #88
 3639 1b76 9954     		strb	r1, [r3, r2]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3640              		.loc 1 570 0 discriminator 3
 3641 1b78 07F5A253 		add	r3, r7, #5184
 3642 1b7c 03F11703 		add	r3, r3, #23
 3643 1b80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3644 1b82 0133     		adds	r3, r3, #1
 3645 1b84 07F5A252 		add	r2, r7, #5184
 3646 1b88 02F11702 		add	r2, r2, #23
 3647 1b8c 1370     		strb	r3, [r2]
 3648              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3649              		.loc 1 570 0 is_stmt 0 discriminator 1
 3650 1b8e 07F5A253 		add	r3, r7, #5184
 3651 1b92 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 92


 3652 1b96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3653 1b98 07F5A253 		add	r3, r7, #5184
 3654 1b9c 03F11303 		add	r3, r3, #19
 3655 1ba0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3656 1ba2 9A42     		cmp	r2, r3
 3657 1ba4 BFD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3658              		.loc 1 573 0 is_stmt 1
 3659 1ba6 07F5A253 		add	r3, r7, #5184
 3660 1baa 03F10E03 		add	r3, r3, #14
 3661 1bae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3662 1bb0 7849     		ldr	r1, .L268
 3663 1bb2 1346     		mov	r3, r2
 3664 1bb4 DB00     		lsls	r3, r3, #3
 3665 1bb6 9B1A     		subs	r3, r3, r2
 3666 1bb8 1B01     		lsls	r3, r3, #4
 3667 1bba 0B44     		add	r3, r3, r1
 3668 1bbc D033     		adds	r3, r3, #208
 3669 1bbe 1B68     		ldr	r3, [r3]
 3670 1bc0 1846     		mov	r0, r3
 3671 1bc2 FFF7FEFF 		bl	__aeabi_i2f
 3672 1bc6 0346     		mov	r3, r0
 3673 1bc8 4FF08F41 		mov	r1, #1199570944
 3674 1bcc 1846     		mov	r0, r3
 3675 1bce FFF7FEFF 		bl	__aeabi_fdiv
 3676 1bd2 0346     		mov	r3, r0
 3677 1bd4 1A46     		mov	r2, r3
 3678 1bd6 07F13803 		add	r3, r7, #56
 3679 1bda 183B     		subs	r3, r3, #24
 3680 1bdc 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3681              		.loc 1 574 0
 3682 1bde 0023     		movs	r3, #0
 3683 1be0 07F5A252 		add	r2, r7, #5184
 3684 1be4 02F11702 		add	r2, r2, #23
 3685 1be8 1370     		strb	r3, [r2]
 3686 1bea 34E0     		b	.L163
 3687              	.L164:
 575:..\src/command_processing.c ****                             }
 3688              		.loc 1 575 0 discriminator 3
 3689 1bec 07F5A253 		add	r3, r7, #5184
 3690 1bf0 03F11503 		add	r3, r3, #21
 3691 1bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3692 1bf6 3222     		movs	r2, #50
 3693 1bf8 02FB03F3 		mul	r3, r2, r3
 3694 1bfc 1A1D     		adds	r2, r3, #4
 3695 1bfe 07F5A253 		add	r3, r7, #5184
 3696 1c02 03F11303 		add	r3, r3, #19
 3697 1c06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3698 1c08 5B00     		lsls	r3, r3, #1
 3699 1c0a 1A44     		add	r2, r2, r3
 3700 1c0c 07F5A253 		add	r3, r7, #5184
 3701 1c10 03F11303 		add	r3, r3, #19
 3702 1c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3703 1c16 1A44     		add	r2, r2, r3
 3704 1c18 07F5A253 		add	r3, r7, #5184
 3705 1c1c 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 93


 3706 1c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3707 1c22 D31A     		subs	r3, r2, r3
 3708 1c24 5A1E     		subs	r2, r3, #1
 3709 1c26 07F5A253 		add	r3, r7, #5184
 3710 1c2a 03F11703 		add	r3, r3, #23
 3711 1c2e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3712 1c30 07F13803 		add	r3, r7, #56
 3713 1c34 183B     		subs	r3, r3, #24
 3714 1c36 0B44     		add	r3, r3, r1
 3715 1c38 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3716 1c3a 07F15803 		add	r3, r7, #88
 3717 1c3e 9954     		strb	r1, [r3, r2]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3718              		.loc 1 574 0 discriminator 3
 3719 1c40 07F5A253 		add	r3, r7, #5184
 3720 1c44 03F11703 		add	r3, r3, #23
 3721 1c48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3722 1c4a 0133     		adds	r3, r3, #1
 3723 1c4c 07F5A252 		add	r2, r7, #5184
 3724 1c50 02F11702 		add	r2, r2, #23
 3725 1c54 1370     		strb	r3, [r2]
 3726              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3727              		.loc 1 574 0 is_stmt 0 discriminator 1
 3728 1c56 07F5A253 		add	r3, r7, #5184
 3729 1c5a 03F11703 		add	r3, r3, #23
 3730 1c5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3731 1c60 07F5A253 		add	r3, r7, #5184
 3732 1c64 03F11303 		add	r3, r3, #19
 3733 1c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3734 1c6a 9A42     		cmp	r2, r3
 3735 1c6c BED3     		bcc	.L164
 3736              		.loc 1 578 0 is_stmt 1
 3737 1c6e D0E3     		b	.L103
 3738              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3739              		.loc 1 581 0
 3740 1c70 07F5A253 		add	r3, r7, #5184
 3741 1c74 03F10E03 		add	r3, r3, #14
 3742 1c78 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3743 1c7a 4649     		ldr	r1, .L268
 3744 1c7c 1346     		mov	r3, r2
 3745 1c7e DB00     		lsls	r3, r3, #3
 3746 1c80 9B1A     		subs	r3, r3, r2
 3747 1c82 1B01     		lsls	r3, r3, #4
 3748 1c84 0B44     		add	r3, r3, r1
 3749 1c86 03F20F13 		addw	r3, r3, #271
 3750 1c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 1c8c 032B     		cmp	r3, #3
 3752 1c8e 00F02881 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3753              		.loc 1 582 0
 3754 1c92 07F5A253 		add	r3, r7, #5184
 3755 1c96 03F10E03 		add	r3, r3, #14
 3756 1c9a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 94


 3757 1c9c 3D49     		ldr	r1, .L268
 3758 1c9e 1346     		mov	r3, r2
 3759 1ca0 DB00     		lsls	r3, r3, #3
 3760 1ca2 9B1A     		subs	r3, r3, r2
 3761 1ca4 1B01     		lsls	r3, r3, #4
 3762 1ca6 0B44     		add	r3, r3, r1
 3763 1ca8 BC33     		adds	r3, r3, #188
 3764 1caa 1B68     		ldr	r3, [r3]
 3765 1cac 1846     		mov	r0, r3
 3766 1cae FFF7FEFF 		bl	__aeabi_i2f
 3767 1cb2 0346     		mov	r3, r0
 3768 1cb4 4FF08F41 		mov	r1, #1199570944
 3769 1cb8 1846     		mov	r0, r3
 3770 1cba FFF7FEFF 		bl	__aeabi_fdiv
 3771 1cbe 0346     		mov	r3, r0
 3772 1cc0 1A46     		mov	r2, r3
 3773 1cc2 07F13803 		add	r3, r7, #56
 3774 1cc6 183B     		subs	r3, r3, #24
 3775 1cc8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3776              		.loc 1 583 0
 3777 1cca 0023     		movs	r3, #0
 3778 1ccc 07F5A252 		add	r2, r7, #5184
 3779 1cd0 02F11702 		add	r2, r2, #23
 3780 1cd4 1370     		strb	r3, [r2]
 3781 1cd6 2DE0     		b	.L166
 3782              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3783              		.loc 1 584 0 discriminator 3
 3784 1cd8 07F5A253 		add	r3, r7, #5184
 3785 1cdc 03F11503 		add	r3, r3, #21
 3786 1ce0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3787 1ce2 3222     		movs	r2, #50
 3788 1ce4 02FB03F3 		mul	r3, r2, r3
 3789 1ce8 1A1D     		adds	r2, r3, #4
 3790 1cea 07F5A253 		add	r3, r7, #5184
 3791 1cee 03F11303 		add	r3, r3, #19
 3792 1cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3793 1cf4 1A44     		add	r2, r2, r3
 3794 1cf6 07F5A253 		add	r3, r7, #5184
 3795 1cfa 03F11703 		add	r3, r3, #23
 3796 1cfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 1d00 D31A     		subs	r3, r2, r3
 3798 1d02 5A1E     		subs	r2, r3, #1
 3799 1d04 07F5A253 		add	r3, r7, #5184
 3800 1d08 03F11703 		add	r3, r3, #23
 3801 1d0c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3802 1d0e 07F13803 		add	r3, r7, #56
 3803 1d12 183B     		subs	r3, r3, #24
 3804 1d14 0B44     		add	r3, r3, r1
 3805 1d16 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3806 1d18 07F15803 		add	r3, r7, #88
 3807 1d1c 9954     		strb	r1, [r3, r2]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3808              		.loc 1 583 0 discriminator 3
 3809 1d1e 07F5A253 		add	r3, r7, #5184
 3810 1d22 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 95


 3811 1d26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3812 1d28 0133     		adds	r3, r3, #1
 3813 1d2a 07F5A252 		add	r2, r7, #5184
 3814 1d2e 02F11702 		add	r2, r2, #23
 3815 1d32 1370     		strb	r3, [r2]
 3816              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3817              		.loc 1 583 0 is_stmt 0 discriminator 1
 3818 1d34 07F5A253 		add	r3, r7, #5184
 3819 1d38 03F11703 		add	r3, r3, #23
 3820 1d3c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3821 1d3e 07F5A253 		add	r3, r7, #5184
 3822 1d42 03F11303 		add	r3, r3, #19
 3823 1d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3824 1d48 9A42     		cmp	r2, r3
 3825 1d4a C5D3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3826              		.loc 1 586 0 is_stmt 1
 3827 1d4c 07F5A253 		add	r3, r7, #5184
 3828 1d50 03F10E03 		add	r3, r3, #14
 3829 1d54 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3830 1d56 0F49     		ldr	r1, .L268
 3831 1d58 1346     		mov	r3, r2
 3832 1d5a DB00     		lsls	r3, r3, #3
 3833 1d5c 9B1A     		subs	r3, r3, r2
 3834 1d5e 1B01     		lsls	r3, r3, #4
 3835 1d60 0B44     		add	r3, r3, r1
 3836 1d62 C033     		adds	r3, r3, #192
 3837 1d64 1B68     		ldr	r3, [r3]
 3838 1d66 1846     		mov	r0, r3
 3839 1d68 FFF7FEFF 		bl	__aeabi_i2f
 3840 1d6c 0346     		mov	r3, r0
 3841 1d6e 4FF08F41 		mov	r1, #1199570944
 3842 1d72 1846     		mov	r0, r3
 3843 1d74 FFF7FEFF 		bl	__aeabi_fdiv
 3844 1d78 0346     		mov	r3, r0
 3845 1d7a 1A46     		mov	r2, r3
 3846 1d7c 07F13803 		add	r3, r7, #56
 3847 1d80 183B     		subs	r3, r3, #24
 3848 1d82 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3849              		.loc 1 587 0
 3850 1d84 0023     		movs	r3, #0
 3851 1d86 07F5A252 		add	r2, r7, #5184
 3852 1d8a 02F11702 		add	r2, r2, #23
 3853 1d8e 1370     		strb	r3, [r2]
 3854 1d90 36E0     		b	.L168
 3855              	.L269:
 3856 1d92 00BF     		.align	2
 3857              	.L268:
 3858 1d94 00000000 		.word	c_mem
 3859              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3860              		.loc 1 588 0 discriminator 3
 3861 1d98 07F5A253 		add	r3, r7, #5184
 3862 1d9c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 96


 3863 1da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3864 1da2 3222     		movs	r2, #50
 3865 1da4 02FB03F3 		mul	r3, r2, r3
 3866 1da8 1A1D     		adds	r2, r3, #4
 3867 1daa 07F5A253 		add	r3, r7, #5184
 3868 1dae 03F11303 		add	r3, r3, #19
 3869 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3870 1db4 1A44     		add	r2, r2, r3
 3871 1db6 07F5A253 		add	r3, r7, #5184
 3872 1dba 03F11303 		add	r3, r3, #19
 3873 1dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3874 1dc0 1A44     		add	r2, r2, r3
 3875 1dc2 07F5A253 		add	r3, r7, #5184
 3876 1dc6 03F11703 		add	r3, r3, #23
 3877 1dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3878 1dcc D31A     		subs	r3, r2, r3
 3879 1dce 5A1E     		subs	r2, r3, #1
 3880 1dd0 07F5A253 		add	r3, r7, #5184
 3881 1dd4 03F11703 		add	r3, r3, #23
 3882 1dd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3883 1dda 07F13803 		add	r3, r7, #56
 3884 1dde 183B     		subs	r3, r3, #24
 3885 1de0 0B44     		add	r3, r3, r1
 3886 1de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3887 1de4 07F15803 		add	r3, r7, #88
 3888 1de8 9954     		strb	r1, [r3, r2]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3889              		.loc 1 587 0 discriminator 3
 3890 1dea 07F5A253 		add	r3, r7, #5184
 3891 1dee 03F11703 		add	r3, r3, #23
 3892 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3893 1df4 0133     		adds	r3, r3, #1
 3894 1df6 07F5A252 		add	r2, r7, #5184
 3895 1dfa 02F11702 		add	r2, r2, #23
 3896 1dfe 1370     		strb	r3, [r2]
 3897              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3898              		.loc 1 587 0 is_stmt 0 discriminator 1
 3899 1e00 07F5A253 		add	r3, r7, #5184
 3900 1e04 03F11703 		add	r3, r3, #23
 3901 1e08 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3902 1e0a 07F5A253 		add	r3, r7, #5184
 3903 1e0e 03F11303 		add	r3, r3, #19
 3904 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3905 1e14 9A42     		cmp	r2, r3
 3906 1e16 BFD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3907              		.loc 1 590 0 is_stmt 1
 3908 1e18 07F5A253 		add	r3, r7, #5184
 3909 1e1c 03F10E03 		add	r3, r3, #14
 3910 1e20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3911 1e22 C249     		ldr	r1, .L270
 3912 1e24 1346     		mov	r3, r2
 3913 1e26 DB00     		lsls	r3, r3, #3
 3914 1e28 9B1A     		subs	r3, r3, r2
 3915 1e2a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 97


 3916 1e2c 0B44     		add	r3, r3, r1
 3917 1e2e C433     		adds	r3, r3, #196
 3918 1e30 1B68     		ldr	r3, [r3]
 3919 1e32 1846     		mov	r0, r3
 3920 1e34 FFF7FEFF 		bl	__aeabi_i2f
 3921 1e38 0346     		mov	r3, r0
 3922 1e3a 4FF08F41 		mov	r1, #1199570944
 3923 1e3e 1846     		mov	r0, r3
 3924 1e40 FFF7FEFF 		bl	__aeabi_fdiv
 3925 1e44 0346     		mov	r3, r0
 3926 1e46 1A46     		mov	r2, r3
 3927 1e48 07F13803 		add	r3, r7, #56
 3928 1e4c 183B     		subs	r3, r3, #24
 3929 1e4e 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3930              		.loc 1 591 0
 3931 1e50 0023     		movs	r3, #0
 3932 1e52 07F5A252 		add	r2, r7, #5184
 3933 1e56 02F11702 		add	r2, r2, #23
 3934 1e5a 1370     		strb	r3, [r2]
 3935 1e5c 34E0     		b	.L170
 3936              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3937              		.loc 1 592 0 discriminator 3
 3938 1e5e 07F5A253 		add	r3, r7, #5184
 3939 1e62 03F11503 		add	r3, r3, #21
 3940 1e66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3941 1e68 3222     		movs	r2, #50
 3942 1e6a 02FB03F3 		mul	r3, r2, r3
 3943 1e6e 1A1D     		adds	r2, r3, #4
 3944 1e70 07F5A253 		add	r3, r7, #5184
 3945 1e74 03F11303 		add	r3, r3, #19
 3946 1e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 1e7a 5B00     		lsls	r3, r3, #1
 3948 1e7c 1A44     		add	r2, r2, r3
 3949 1e7e 07F5A253 		add	r3, r7, #5184
 3950 1e82 03F11303 		add	r3, r3, #19
 3951 1e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 1e88 1A44     		add	r2, r2, r3
 3953 1e8a 07F5A253 		add	r3, r7, #5184
 3954 1e8e 03F11703 		add	r3, r3, #23
 3955 1e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3956 1e94 D31A     		subs	r3, r2, r3
 3957 1e96 5A1E     		subs	r2, r3, #1
 3958 1e98 07F5A253 		add	r3, r7, #5184
 3959 1e9c 03F11703 		add	r3, r3, #23
 3960 1ea0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3961 1ea2 07F13803 		add	r3, r7, #56
 3962 1ea6 183B     		subs	r3, r3, #24
 3963 1ea8 0B44     		add	r3, r3, r1
 3964 1eaa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3965 1eac 07F15803 		add	r3, r7, #88
 3966 1eb0 9954     		strb	r1, [r3, r2]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3967              		.loc 1 591 0 discriminator 3
 3968 1eb2 07F5A253 		add	r3, r7, #5184
 3969 1eb6 03F11703 		add	r3, r3, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 98


 3970 1eba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3971 1ebc 0133     		adds	r3, r3, #1
 3972 1ebe 07F5A252 		add	r2, r7, #5184
 3973 1ec2 02F11702 		add	r2, r2, #23
 3974 1ec6 1370     		strb	r3, [r2]
 3975              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3976              		.loc 1 591 0 is_stmt 0 discriminator 1
 3977 1ec8 07F5A253 		add	r3, r7, #5184
 3978 1ecc 03F11703 		add	r3, r3, #23
 3979 1ed0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3980 1ed2 07F5A253 		add	r3, r7, #5184
 3981 1ed6 03F11303 		add	r3, r3, #19
 3982 1eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3983 1edc 9A42     		cmp	r2, r3
 3984 1ede BED3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3985              		.loc 1 609 0 is_stmt 1
 3986 1ee0 97E2     		b	.L103
 3987              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3988              		.loc 1 596 0
 3989 1ee2 07F5A253 		add	r3, r7, #5184
 3990 1ee6 03F10E03 		add	r3, r3, #14
 3991 1eea 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3992 1eec 8F49     		ldr	r1, .L270
 3993 1eee 1346     		mov	r3, r2
 3994 1ef0 DB00     		lsls	r3, r3, #3
 3995 1ef2 9B1A     		subs	r3, r3, r2
 3996 1ef4 1B01     		lsls	r3, r3, #4
 3997 1ef6 0B44     		add	r3, r3, r1
 3998 1ef8 D433     		adds	r3, r3, #212
 3999 1efa 1B68     		ldr	r3, [r3]
 4000 1efc 1846     		mov	r0, r3
 4001 1efe FFF7FEFF 		bl	__aeabi_i2f
 4002 1f02 0346     		mov	r3, r0
 4003 1f04 4FF08F41 		mov	r1, #1199570944
 4004 1f08 1846     		mov	r0, r3
 4005 1f0a FFF7FEFF 		bl	__aeabi_fdiv
 4006 1f0e 0346     		mov	r3, r0
 4007 1f10 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 99


 4008 1f12 07F13803 		add	r3, r7, #56
 4009 1f16 183B     		subs	r3, r3, #24
 4010 1f18 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4011              		.loc 1 597 0
 4012 1f1a 0023     		movs	r3, #0
 4013 1f1c 07F5A252 		add	r2, r7, #5184
 4014 1f20 02F11702 		add	r2, r2, #23
 4015 1f24 1370     		strb	r3, [r2]
 4016 1f26 2DE0     		b	.L173
 4017              	.L174:
 598:..\src/command_processing.c ****                             }
 4018              		.loc 1 598 0 discriminator 3
 4019 1f28 07F5A253 		add	r3, r7, #5184
 4020 1f2c 03F11503 		add	r3, r3, #21
 4021 1f30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4022 1f32 3222     		movs	r2, #50
 4023 1f34 02FB03F3 		mul	r3, r2, r3
 4024 1f38 1A1D     		adds	r2, r3, #4
 4025 1f3a 07F5A253 		add	r3, r7, #5184
 4026 1f3e 03F11303 		add	r3, r3, #19
 4027 1f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4028 1f44 1A44     		add	r2, r2, r3
 4029 1f46 07F5A253 		add	r3, r7, #5184
 4030 1f4a 03F11703 		add	r3, r3, #23
 4031 1f4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4032 1f50 D31A     		subs	r3, r2, r3
 4033 1f52 5A1E     		subs	r2, r3, #1
 4034 1f54 07F5A253 		add	r3, r7, #5184
 4035 1f58 03F11703 		add	r3, r3, #23
 4036 1f5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4037 1f5e 07F13803 		add	r3, r7, #56
 4038 1f62 183B     		subs	r3, r3, #24
 4039 1f64 0B44     		add	r3, r3, r1
 4040 1f66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4041 1f68 07F15803 		add	r3, r7, #88
 4042 1f6c 9954     		strb	r1, [r3, r2]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4043              		.loc 1 597 0 discriminator 3
 4044 1f6e 07F5A253 		add	r3, r7, #5184
 4045 1f72 03F11703 		add	r3, r3, #23
 4046 1f76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 1f78 0133     		adds	r3, r3, #1
 4048 1f7a 07F5A252 		add	r2, r7, #5184
 4049 1f7e 02F11702 		add	r2, r2, #23
 4050 1f82 1370     		strb	r3, [r2]
 4051              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4052              		.loc 1 597 0 is_stmt 0 discriminator 1
 4053 1f84 07F5A253 		add	r3, r7, #5184
 4054 1f88 03F11703 		add	r3, r3, #23
 4055 1f8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4056 1f8e 07F5A253 		add	r3, r7, #5184
 4057 1f92 03F11303 		add	r3, r3, #19
 4058 1f96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4059 1f98 9A42     		cmp	r2, r3
 4060 1f9a C5D3     		bcc	.L174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 100


 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4061              		.loc 1 600 0 is_stmt 1
 4062 1f9c 07F5A253 		add	r3, r7, #5184
 4063 1fa0 03F10E03 		add	r3, r3, #14
 4064 1fa4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4065 1fa6 6149     		ldr	r1, .L270
 4066 1fa8 1346     		mov	r3, r2
 4067 1faa DB00     		lsls	r3, r3, #3
 4068 1fac 9B1A     		subs	r3, r3, r2
 4069 1fae 1B01     		lsls	r3, r3, #4
 4070 1fb0 0B44     		add	r3, r3, r1
 4071 1fb2 D833     		adds	r3, r3, #216
 4072 1fb4 1B68     		ldr	r3, [r3]
 4073 1fb6 1846     		mov	r0, r3
 4074 1fb8 FFF7FEFF 		bl	__aeabi_i2f
 4075 1fbc 0346     		mov	r3, r0
 4076 1fbe 4FF08F41 		mov	r1, #1199570944
 4077 1fc2 1846     		mov	r0, r3
 4078 1fc4 FFF7FEFF 		bl	__aeabi_fdiv
 4079 1fc8 0346     		mov	r3, r0
 4080 1fca 1A46     		mov	r2, r3
 4081 1fcc 07F13803 		add	r3, r7, #56
 4082 1fd0 183B     		subs	r3, r3, #24
 4083 1fd2 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4084              		.loc 1 601 0
 4085 1fd4 0023     		movs	r3, #0
 4086 1fd6 07F5A252 		add	r2, r7, #5184
 4087 1fda 02F11702 		add	r2, r2, #23
 4088 1fde 1370     		strb	r3, [r2]
 4089 1fe0 33E0     		b	.L175
 4090              	.L176:
 602:..\src/command_processing.c ****                             }
 4091              		.loc 1 602 0 discriminator 3
 4092 1fe2 07F5A253 		add	r3, r7, #5184
 4093 1fe6 03F11503 		add	r3, r3, #21
 4094 1fea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095 1fec 3222     		movs	r2, #50
 4096 1fee 02FB03F3 		mul	r3, r2, r3
 4097 1ff2 1A1D     		adds	r2, r3, #4
 4098 1ff4 07F5A253 		add	r3, r7, #5184
 4099 1ff8 03F11303 		add	r3, r3, #19
 4100 1ffc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4101 1ffe 1A44     		add	r2, r2, r3
 4102 2000 07F5A253 		add	r3, r7, #5184
 4103 2004 03F11303 		add	r3, r3, #19
 4104 2008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4105 200a 1A44     		add	r2, r2, r3
 4106 200c 07F5A253 		add	r3, r7, #5184
 4107 2010 03F11703 		add	r3, r3, #23
 4108 2014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4109 2016 D31A     		subs	r3, r2, r3
 4110 2018 5A1E     		subs	r2, r3, #1
 4111 201a 07F5A253 		add	r3, r7, #5184
 4112 201e 03F11703 		add	r3, r3, #23
 4113 2022 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4114 2024 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 101


 4115 2028 183B     		subs	r3, r3, #24
 4116 202a 0B44     		add	r3, r3, r1
 4117 202c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4118 202e 07F15803 		add	r3, r7, #88
 4119 2032 9954     		strb	r1, [r3, r2]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4120              		.loc 1 601 0 discriminator 3
 4121 2034 07F5A253 		add	r3, r7, #5184
 4122 2038 03F11703 		add	r3, r3, #23
 4123 203c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4124 203e 0133     		adds	r3, r3, #1
 4125 2040 07F5A252 		add	r2, r7, #5184
 4126 2044 02F11702 		add	r2, r2, #23
 4127 2048 1370     		strb	r3, [r2]
 4128              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4129              		.loc 1 601 0 is_stmt 0 discriminator 1
 4130 204a 07F5A253 		add	r3, r7, #5184
 4131 204e 03F11703 		add	r3, r3, #23
 4132 2052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4133 2054 07F5A253 		add	r3, r7, #5184
 4134 2058 03F11303 		add	r3, r3, #19
 4135 205c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4136 205e 9A42     		cmp	r2, r3
 4137 2060 BFD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4138              		.loc 1 604 0 is_stmt 1
 4139 2062 07F5A253 		add	r3, r7, #5184
 4140 2066 03F10E03 		add	r3, r3, #14
 4141 206a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4142 206c 2F49     		ldr	r1, .L270
 4143 206e 1346     		mov	r3, r2
 4144 2070 DB00     		lsls	r3, r3, #3
 4145 2072 9B1A     		subs	r3, r3, r2
 4146 2074 1B01     		lsls	r3, r3, #4
 4147 2076 0B44     		add	r3, r3, r1
 4148 2078 DC33     		adds	r3, r3, #220
 4149 207a 1B68     		ldr	r3, [r3]
 4150 207c 1846     		mov	r0, r3
 4151 207e FFF7FEFF 		bl	__aeabi_i2f
 4152 2082 0346     		mov	r3, r0
 4153 2084 4FF08F41 		mov	r1, #1199570944
 4154 2088 1846     		mov	r0, r3
 4155 208a FFF7FEFF 		bl	__aeabi_fdiv
 4156 208e 0346     		mov	r3, r0
 4157 2090 1A46     		mov	r2, r3
 4158 2092 07F13803 		add	r3, r7, #56
 4159 2096 183B     		subs	r3, r3, #24
 4160 2098 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4161              		.loc 1 605 0
 4162 209a 0023     		movs	r3, #0
 4163 209c 07F5A252 		add	r2, r7, #5184
 4164 20a0 02F11702 		add	r2, r2, #23
 4165 20a4 1370     		strb	r3, [r2]
 4166 20a6 34E0     		b	.L177
 4167              	.L178:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 102


 606:..\src/command_processing.c ****                             }
 4168              		.loc 1 606 0 discriminator 3
 4169 20a8 07F5A253 		add	r3, r7, #5184
 4170 20ac 03F11503 		add	r3, r3, #21
 4171 20b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4172 20b2 3222     		movs	r2, #50
 4173 20b4 02FB03F3 		mul	r3, r2, r3
 4174 20b8 1A1D     		adds	r2, r3, #4
 4175 20ba 07F5A253 		add	r3, r7, #5184
 4176 20be 03F11303 		add	r3, r3, #19
 4177 20c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4178 20c4 5B00     		lsls	r3, r3, #1
 4179 20c6 1A44     		add	r2, r2, r3
 4180 20c8 07F5A253 		add	r3, r7, #5184
 4181 20cc 03F11303 		add	r3, r3, #19
 4182 20d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4183 20d2 1A44     		add	r2, r2, r3
 4184 20d4 07F5A253 		add	r3, r7, #5184
 4185 20d8 03F11703 		add	r3, r3, #23
 4186 20dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 20de D31A     		subs	r3, r2, r3
 4188 20e0 5A1E     		subs	r2, r3, #1
 4189 20e2 07F5A253 		add	r3, r7, #5184
 4190 20e6 03F11703 		add	r3, r3, #23
 4191 20ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4192 20ec 07F13803 		add	r3, r7, #56
 4193 20f0 183B     		subs	r3, r3, #24
 4194 20f2 0B44     		add	r3, r3, r1
 4195 20f4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4196 20f6 07F15803 		add	r3, r7, #88
 4197 20fa 9954     		strb	r1, [r3, r2]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4198              		.loc 1 605 0 discriminator 3
 4199 20fc 07F5A253 		add	r3, r7, #5184
 4200 2100 03F11703 		add	r3, r3, #23
 4201 2104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4202 2106 0133     		adds	r3, r3, #1
 4203 2108 07F5A252 		add	r2, r7, #5184
 4204 210c 02F11702 		add	r2, r2, #23
 4205 2110 1370     		strb	r3, [r2]
 4206              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4207              		.loc 1 605 0 is_stmt 0 discriminator 1
 4208 2112 07F5A253 		add	r3, r7, #5184
 4209 2116 03F11703 		add	r3, r3, #23
 4210 211a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4211 211c 07F5A253 		add	r3, r7, #5184
 4212 2120 03F11303 		add	r3, r3, #19
 4213 2124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4214 2126 9A42     		cmp	r2, r3
 4215 2128 BED3     		bcc	.L178
 4216              		.loc 1 609 0 is_stmt 1
 4217 212a 72E1     		b	.L103
 4218              	.L271:
 4219              		.align	2
 4220              	.L270:
 4221 212c 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 103


 4222              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4223              		.loc 1 612 0
 4224 2130 07F5A253 		add	r3, r7, #5184
 4225 2134 03F10E03 		add	r3, r3, #14
 4226 2138 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4227 213a B349     		ldr	r1, .L272
 4228 213c 1346     		mov	r3, r2
 4229 213e DB00     		lsls	r3, r3, #3
 4230 2140 9B1A     		subs	r3, r3, r2
 4231 2142 1B01     		lsls	r3, r3, #4
 4232 2144 0B44     		add	r3, r3, r1
 4233 2146 03F58873 		add	r3, r3, #272
 4234 214a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4235 214c 1846     		mov	r0, r3
 4236 214e 07F5A253 		add	r3, r7, #5184
 4237 2152 03F11703 		add	r3, r3, #23
 4238 2156 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4239 2158 AC49     		ldr	r1, .L272+4
 4240 215a 0346     		mov	r3, r0
 4241 215c 5B00     		lsls	r3, r3, #1
 4242 215e 0344     		add	r3, r3, r0
 4243 2160 9B00     		lsls	r3, r3, #2
 4244 2162 1344     		add	r3, r3, r2
 4245 2164 6633     		adds	r3, r3, #102
 4246 2166 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4247 216a 07F5A253 		add	r3, r7, #5184
 4248 216e 03F10E03 		add	r3, r3, #14
 4249 2172 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4250 2174 A448     		ldr	r0, .L272
 4251 2176 1346     		mov	r3, r2
 4252 2178 DB00     		lsls	r3, r3, #3
 4253 217a 9B1A     		subs	r3, r3, r2
 4254 217c 1B01     		lsls	r3, r3, #4
 4255 217e 0344     		add	r3, r3, r0
 4256 2180 03F58873 		add	r3, r3, #272
 4257 2184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4258 2186 1C46     		mov	r4, r3
 4259 2188 07F5A253 		add	r3, r7, #5184
 4260 218c 03F11703 		add	r3, r3, #23
 4261 2190 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 2192 9E48     		ldr	r0, .L272+4
 4263 2194 2346     		mov	r3, r4
 4264 2196 5B00     		lsls	r3, r3, #1
 4265 2198 2344     		add	r3, r3, r4
 4266 219a 1B01     		lsls	r3, r3, #4
 4267 219c 0344     		add	r3, r3, r0
 4268 219e 1344     		add	r3, r3, r2
 4269 21a0 03F29513 		addw	r3, r3, #405
 4270 21a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4271 21a6 41FA03F3 		asr	r3, r1, r3
 4272 21aa 1AB2     		sxth	r2, r3
 4273 21ac 07F13803 		add	r3, r7, #56
 4274 21b0 1A3B     		subs	r3, r3, #26
 4275 21b2 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 104


 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4276              		.loc 1 613 0
 4277 21b4 0023     		movs	r3, #0
 4278 21b6 07F5A252 		add	r2, r7, #5184
 4279 21ba 02F11602 		add	r2, r2, #22
 4280 21be 1370     		strb	r3, [r2]
 4281 21c0 3AE0     		b	.L179
 4282              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4283              		.loc 1 614 0 discriminator 3
 4284 21c2 07F5A253 		add	r3, r7, #5184
 4285 21c6 03F11503 		add	r3, r3, #21
 4286 21ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4287 21cc 3222     		movs	r2, #50
 4288 21ce 02FB03F3 		mul	r3, r2, r3
 4289 21d2 1A1D     		adds	r2, r3, #4
 4290 21d4 07F5A253 		add	r3, r7, #5184
 4291 21d8 03F11703 		add	r3, r3, #23
 4292 21dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4293 21de 07F5A251 		add	r1, r7, #5184
 4294 21e2 01F11301 		add	r1, r1, #19
 4295 21e6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4296 21e8 01FB03F3 		mul	r3, r1, r3
 4297 21ec 1A44     		add	r2, r2, r3
 4298 21ee 07F5A253 		add	r3, r7, #5184
 4299 21f2 03F11303 		add	r3, r3, #19
 4300 21f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4301 21f8 1A44     		add	r2, r2, r3
 4302 21fa 07F5A253 		add	r3, r7, #5184
 4303 21fe 03F11603 		add	r3, r3, #22
 4304 2202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4305 2204 D31A     		subs	r3, r2, r3
 4306 2206 5A1E     		subs	r2, r3, #1
 4307 2208 07F5A253 		add	r3, r7, #5184
 4308 220c 03F11603 		add	r3, r3, #22
 4309 2210 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4310 2212 07F13803 		add	r3, r7, #56
 4311 2216 1A3B     		subs	r3, r3, #26
 4312 2218 0B44     		add	r3, r3, r1
 4313 221a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4314 221c 07F15803 		add	r3, r7, #88
 4315 2220 9954     		strb	r1, [r3, r2]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4316              		.loc 1 613 0 discriminator 3
 4317 2222 07F5A253 		add	r3, r7, #5184
 4318 2226 03F11603 		add	r3, r3, #22
 4319 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4320 222c 0133     		adds	r3, r3, #1
 4321 222e 07F5A252 		add	r2, r7, #5184
 4322 2232 02F11602 		add	r2, r2, #22
 4323 2236 1370     		strb	r3, [r2]
 4324              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4325              		.loc 1 613 0 is_stmt 0 discriminator 1
 4326 2238 07F5A253 		add	r3, r7, #5184
 4327 223c 03F11603 		add	r3, r3, #22
 4328 2240 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 105


 4329 2242 07F5A253 		add	r3, r7, #5184
 4330 2246 03F11303 		add	r3, r3, #19
 4331 224a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 224c 9A42     		cmp	r2, r3
 4333 224e B8D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 4334              		.loc 1 616 0 is_stmt 1
 4335 2250 DFE0     		b	.L103
 4336              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4337              		.loc 1 619 0
 4338 2252 07F5A253 		add	r3, r7, #5184
 4339 2256 03F10E03 		add	r3, r3, #14
 4340 225a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4341 225c 6B49     		ldr	r1, .L272+4
 4342 225e 1346     		mov	r3, r2
 4343 2260 DB00     		lsls	r3, r3, #3
 4344 2262 9B1A     		subs	r3, r3, r2
 4345 2264 1B01     		lsls	r3, r3, #4
 4346 2266 0B44     		add	r3, r3, r1
 4347 2268 E433     		adds	r3, r3, #228
 4348 226a 1968     		ldr	r1, [r3]
 4349 226c 07F5A253 		add	r3, r7, #5184
 4350 2270 03F10E03 		add	r3, r3, #14
 4351 2274 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4352 2276 6448     		ldr	r0, .L272
 4353 2278 1346     		mov	r3, r2
 4354 227a DB00     		lsls	r3, r3, #3
 4355 227c 9B1A     		subs	r3, r3, r2
 4356 227e 1B01     		lsls	r3, r3, #4
 4357 2280 0344     		add	r3, r3, r0
 4358 2282 03F58873 		add	r3, r3, #272
 4359 2286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4360 2288 1846     		mov	r0, r3
 4361 228a 604A     		ldr	r2, .L272+4
 4362 228c 0346     		mov	r3, r0
 4363 228e 5B00     		lsls	r3, r3, #1
 4364 2290 0344     		add	r3, r3, r0
 4365 2292 1B01     		lsls	r3, r3, #4
 4366 2294 1344     		add	r3, r3, r2
 4367 2296 03F29513 		addw	r3, r3, #405
 4368 229a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4369 229c 41FA03F2 		asr	r2, r1, r3
 4370 22a0 07F11803 		add	r3, r7, #24
 4371 22a4 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4372              		.loc 1 620 0
 4373 22a6 0023     		movs	r3, #0
 4374 22a8 07F5A252 		add	r2, r7, #5184
 4375 22ac 02F11602 		add	r2, r2, #22
 4376 22b0 1370     		strb	r3, [r2]
 4377 22b2 2CE0     		b	.L181
 4378              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 106


 4379              		.loc 1 621 0 discriminator 3
 4380 22b4 07F5A253 		add	r3, r7, #5184
 4381 22b8 03F11503 		add	r3, r3, #21
 4382 22bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4383 22be 3222     		movs	r2, #50
 4384 22c0 02FB03F3 		mul	r3, r2, r3
 4385 22c4 1A1D     		adds	r2, r3, #4
 4386 22c6 07F5A253 		add	r3, r7, #5184
 4387 22ca 03F11303 		add	r3, r3, #19
 4388 22ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4389 22d0 1A44     		add	r2, r2, r3
 4390 22d2 07F5A253 		add	r3, r7, #5184
 4391 22d6 03F11603 		add	r3, r3, #22
 4392 22da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4393 22dc D31A     		subs	r3, r2, r3
 4394 22de 013B     		subs	r3, r3, #1
 4395 22e0 07F5A252 		add	r2, r7, #5184
 4396 22e4 02F11602 		add	r2, r2, #22
 4397 22e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4398 22ea 07F11801 		add	r1, r7, #24
 4399 22ee 0A44     		add	r2, r2, r1
 4400 22f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4401 22f2 07F15802 		add	r2, r7, #88
 4402 22f6 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4403              		.loc 1 620 0 discriminator 3
 4404 22f8 07F5A253 		add	r3, r7, #5184
 4405 22fc 03F11603 		add	r3, r3, #22
 4406 2300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4407 2302 0133     		adds	r3, r3, #1
 4408 2304 07F5A252 		add	r2, r7, #5184
 4409 2308 02F11602 		add	r2, r2, #22
 4410 230c 1370     		strb	r3, [r2]
 4411              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4412              		.loc 1 620 0 is_stmt 0 discriminator 1
 4413 230e 07F5A253 		add	r3, r7, #5184
 4414 2312 03F11603 		add	r3, r3, #22
 4415 2316 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4416 2318 07F5A253 		add	r3, r7, #5184
 4417 231c 03F11303 		add	r3, r3, #19
 4418 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4419 2322 9A42     		cmp	r2, r3
 4420 2324 C6D3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4421              		.loc 1 623 0 is_stmt 1
 4422 2326 07F5A253 		add	r3, r7, #5184
 4423 232a 03F10E03 		add	r3, r3, #14
 4424 232e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4425 2330 3649     		ldr	r1, .L272+4
 4426 2332 1346     		mov	r3, r2
 4427 2334 DB00     		lsls	r3, r3, #3
 4428 2336 9B1A     		subs	r3, r3, r2
 4429 2338 1B01     		lsls	r3, r3, #4
 4430 233a 0B44     		add	r3, r3, r1
 4431 233c E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 107


 4432 233e 1968     		ldr	r1, [r3]
 4433 2340 07F5A253 		add	r3, r7, #5184
 4434 2344 03F10E03 		add	r3, r3, #14
 4435 2348 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4436 234a 2F48     		ldr	r0, .L272
 4437 234c 1346     		mov	r3, r2
 4438 234e DB00     		lsls	r3, r3, #3
 4439 2350 9B1A     		subs	r3, r3, r2
 4440 2352 1B01     		lsls	r3, r3, #4
 4441 2354 0344     		add	r3, r3, r0
 4442 2356 03F58873 		add	r3, r3, #272
 4443 235a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4444 235c 1846     		mov	r0, r3
 4445 235e 2B4A     		ldr	r2, .L272+4
 4446 2360 0346     		mov	r3, r0
 4447 2362 5B00     		lsls	r3, r3, #1
 4448 2364 0344     		add	r3, r3, r0
 4449 2366 1B01     		lsls	r3, r3, #4
 4450 2368 1344     		add	r3, r3, r2
 4451 236a 03F29513 		addw	r3, r3, #405
 4452 236e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4453 2370 41FA03F2 		asr	r2, r1, r3
 4454 2374 07F11803 		add	r3, r7, #24
 4455 2378 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4456              		.loc 1 624 0
 4457 237a 0023     		movs	r3, #0
 4458 237c 07F5A252 		add	r2, r7, #5184
 4459 2380 02F11602 		add	r2, r2, #22
 4460 2384 1370     		strb	r3, [r2]
 4461 2386 32E0     		b	.L183
 4462              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4463              		.loc 1 625 0 discriminator 3
 4464 2388 07F5A253 		add	r3, r7, #5184
 4465 238c 03F11503 		add	r3, r3, #21
 4466 2390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4467 2392 3222     		movs	r2, #50
 4468 2394 02FB03F3 		mul	r3, r2, r3
 4469 2398 1A1D     		adds	r2, r3, #4
 4470 239a 07F5A253 		add	r3, r7, #5184
 4471 239e 03F11303 		add	r3, r3, #19
 4472 23a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4473 23a4 1A44     		add	r2, r2, r3
 4474 23a6 07F5A253 		add	r3, r7, #5184
 4475 23aa 03F11303 		add	r3, r3, #19
 4476 23ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4477 23b0 1A44     		add	r2, r2, r3
 4478 23b2 07F5A253 		add	r3, r7, #5184
 4479 23b6 03F11603 		add	r3, r3, #22
 4480 23ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4481 23bc D31A     		subs	r3, r2, r3
 4482 23be 013B     		subs	r3, r3, #1
 4483 23c0 07F5A252 		add	r2, r7, #5184
 4484 23c4 02F11602 		add	r2, r2, #22
 4485 23c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4486 23ca 07F11801 		add	r1, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 108


 4487 23ce 0A44     		add	r2, r2, r1
 4488 23d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4489 23d2 07F15802 		add	r2, r7, #88
 4490 23d6 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4491              		.loc 1 624 0 discriminator 3
 4492 23d8 07F5A253 		add	r3, r7, #5184
 4493 23dc 03F11603 		add	r3, r3, #22
 4494 23e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4495 23e2 0133     		adds	r3, r3, #1
 4496 23e4 07F5A252 		add	r2, r7, #5184
 4497 23e8 02F11602 		add	r2, r2, #22
 4498 23ec 1370     		strb	r3, [r2]
 4499              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4500              		.loc 1 624 0 is_stmt 0 discriminator 1
 4501 23ee 07F5A253 		add	r3, r7, #5184
 4502 23f2 03F11603 		add	r3, r3, #22
 4503 23f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4504 23f8 07F5A253 		add	r3, r7, #5184
 4505 23fc 03F11303 		add	r3, r3, #19
 4506 2400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4507 2402 9A42     		cmp	r2, r3
 4508 2404 C0D3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 4509              		.loc 1 627 0 is_stmt 1
 4510 2406 04E0     		b	.L103
 4511              	.L273:
 4512              		.align	2
 4513              	.L272:
 4514 2408 00000000 		.word	g_mem
 4515 240c 00000000 		.word	c_mem
 4516              	.L254:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 4517              		.loc 1 630 0
 4518 2410 00BF     		nop
 4519              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4520              		.loc 1 637 0
 4521 2412 07F5A253 		add	r3, r7, #5184
 4522 2416 03F11503 		add	r3, r3, #21
 4523 241a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4524 241c 9B00     		lsls	r3, r3, #2
 4525 241e 07F5A352 		add	r2, r7, #5216
 4526 2422 02F11402 		add	r2, r2, #20
 4527 2426 1268     		ldr	r2, [r2]
 4528 2428 1344     		add	r3, r3, r2
 4529 242a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 109


 4530 242c 07F13803 		add	r3, r7, #56
 4531 2430 143B     		subs	r3, r3, #20
 4532 2432 1146     		mov	r1, r2
 4533 2434 1846     		mov	r0, r3
 4534 2436 FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4535              		.loc 1 638 0
 4536 243a 07F13803 		add	r3, r7, #56
 4537 243e 143B     		subs	r3, r3, #20
 4538 2440 1846     		mov	r0, r3
 4539 2442 FFF7FEFF 		bl	strlen
 4540 2446 0346     		mov	r3, r0
 4541 2448 07F5A252 		add	r2, r7, #5184
 4542 244c 02F11202 		add	r2, r2, #18
 4543 2450 1370     		strb	r3, [r2]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4544              		.loc 1 641 0
 4545 2452 07F5A253 		add	r3, r7, #5184
 4546 2456 03F11503 		add	r3, r3, #21
 4547 245a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4548 245c 07F11803 		add	r3, r7, #24
 4549 2460 103B     		subs	r3, r3, #16
 4550 2462 1B68     		ldr	r3, [r3]
 4551 2464 1344     		add	r3, r3, r2
 4552 2466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 2468 002B     		cmp	r3, #0
 4554 246a 40F09783 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4555              		.loc 1 642 0
 4556 246e 07F5A253 		add	r3, r7, #5184
 4557 2472 03F11403 		add	r3, r3, #20
 4558 2476 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4559 2478 07F5A352 		add	r2, r7, #5216
 4560 247c 02F11002 		add	r2, r2, #16
 4561 2480 1268     		ldr	r2, [r2]
 4562 2482 1344     		add	r3, r3, r2
 4563 2484 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4564 2486 013B     		subs	r3, r3, #1
 4565 2488 092B     		cmp	r3, #9
 4566 248a 00F27983 		bhi	.L186
 4567 248e 01A2     		adr	r2, .L188
 4568 2490 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4569              		.p2align 2
 4570              	.L188:
 4571 2494 BD240000 		.word	.L187+1
 4572 2498 39260000 		.word	.L189+1
 4573 249c 0D270000 		.word	.L190+1
 4574 24a0 61270000 		.word	.L191+1
 4575 24a4 C5270000 		.word	.L192+1
 4576 24a8 21280000 		.word	.L193+1
 4577 24ac 3D290000 		.word	.L194+1
 4578 24b0 C5290000 		.word	.L195+1
 4579 24b4 592A0000 		.word	.L196+1
 4580 24b8 D12A0000 		.word	.L197+1
 4581              		.p2align 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 110


 4582              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 4583              		.loc 1 644 0
 4584 24bc 07F5A253 		add	r3, r7, #5184
 4585 24c0 03F10803 		add	r3, r3, #8
 4586 24c4 1B68     		ldr	r3, [r3]
 4587 24c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4588 24c8 062B     		cmp	r3, #6
 4589 24ca 00F25483 		bhi	.L255
 4590 24ce 01A2     		adr	r2, .L200
 4591 24d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4592              		.p2align 2
 4593              	.L200:
 4594 24d4 F1240000 		.word	.L199+1
 4595 24d8 15250000 		.word	.L201+1
 4596 24dc 3B250000 		.word	.L202+1
 4597 24e0 69250000 		.word	.L203+1
 4598 24e4 95250000 		.word	.L204+1
 4599 24e8 BF250000 		.word	.L205+1
 4600 24ec F3250000 		.word	.L206+1
 4601              		.p2align 1
 4602              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4603              		.loc 1 646 0
 4604 24f0 07F13803 		add	r3, r7, #56
 4605 24f4 143B     		subs	r3, r3, #20
 4606 24f6 1846     		mov	r0, r3
 4607 24f8 FFF7FEFF 		bl	strlen
 4608 24fc 0346     		mov	r3, r0
 4609 24fe 1A46     		mov	r2, r3
 4610 2500 07F13803 		add	r3, r7, #56
 4611 2504 143B     		subs	r3, r3, #20
 4612 2506 1344     		add	r3, r3, r2
 4613 2508 D84A     		ldr	r2, .L274
 4614 250a 1068     		ldr	r0, [r2]	@ unaligned
 4615 250c 1860     		str	r0, [r3]	@ unaligned
 4616 250e 1279     		ldrb	r2, [r2, #4]
 4617 2510 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 4618              		.loc 1 647 0
 4619 2512 90E0     		b	.L198
 4620              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4621              		.loc 1 649 0
 4622 2514 07F13803 		add	r3, r7, #56
 4623 2518 143B     		subs	r3, r3, #20
 4624 251a 1846     		mov	r0, r3
 4625 251c FFF7FEFF 		bl	strlen
 4626 2520 0346     		mov	r3, r0
 4627 2522 1A46     		mov	r2, r3
 4628 2524 07F13803 		add	r3, r7, #56
 4629 2528 143B     		subs	r3, r3, #20
 4630 252a 1344     		add	r3, r3, r2
 4631 252c D049     		ldr	r1, .L274+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 111


 4632 252e 1A46     		mov	r2, r3
 4633 2530 0B46     		mov	r3, r1
 4634 2532 03CB     		ldmia	r3!, {r0, r1}
 4635 2534 1060     		str	r0, [r2]	@ unaligned
 4636 2536 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 4637              		.loc 1 650 0
 4638 2538 7DE0     		b	.L198
 4639              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4640              		.loc 1 652 0
 4641 253a 07F13803 		add	r3, r7, #56
 4642 253e 143B     		subs	r3, r3, #20
 4643 2540 1846     		mov	r0, r3
 4644 2542 FFF7FEFF 		bl	strlen
 4645 2546 0346     		mov	r3, r0
 4646 2548 1A46     		mov	r2, r3
 4647 254a 07F13803 		add	r3, r7, #56
 4648 254e 143B     		subs	r3, r3, #20
 4649 2550 1344     		add	r3, r3, r2
 4650 2552 C84A     		ldr	r2, .L274+8
 4651 2554 1D46     		mov	r5, r3
 4652 2556 1446     		mov	r4, r2
 4653 2558 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4654 255a 2860     		str	r0, [r5]	@ unaligned
 4655 255c 6960     		str	r1, [r5, #4]	@ unaligned
 4656 255e AA60     		str	r2, [r5, #8]	@ unaligned
 4657 2560 EB60     		str	r3, [r5, #12]	@ unaligned
 4658 2562 2388     		ldrh	r3, [r4]	@ unaligned
 4659 2564 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 4660              		.loc 1 653 0
 4661 2566 66E0     		b	.L198
 4662              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4663              		.loc 1 655 0
 4664 2568 07F13803 		add	r3, r7, #56
 4665 256c 143B     		subs	r3, r3, #20
 4666 256e 1846     		mov	r0, r3
 4667 2570 FFF7FEFF 		bl	strlen
 4668 2574 0346     		mov	r3, r0
 4669 2576 1A46     		mov	r2, r3
 4670 2578 07F13803 		add	r3, r7, #56
 4671 257c 143B     		subs	r3, r3, #20
 4672 257e 1344     		add	r3, r3, r2
 4673 2580 BD4A     		ldr	r2, .L274+12
 4674 2582 1C46     		mov	r4, r3
 4675 2584 1346     		mov	r3, r2
 4676 2586 07CB     		ldmia	r3!, {r0, r1, r2}
 4677 2588 2060     		str	r0, [r4]	@ unaligned
 4678 258a 6160     		str	r1, [r4, #4]	@ unaligned
 4679 258c A260     		str	r2, [r4, #8]	@ unaligned
 4680 258e 1B88     		ldrh	r3, [r3]	@ unaligned
 4681 2590 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 112


 4682              		.loc 1 656 0
 4683 2592 50E0     		b	.L198
 4684              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4685              		.loc 1 658 0
 4686 2594 07F13803 		add	r3, r7, #56
 4687 2598 143B     		subs	r3, r3, #20
 4688 259a 1846     		mov	r0, r3
 4689 259c FFF7FEFF 		bl	strlen
 4690 25a0 0346     		mov	r3, r0
 4691 25a2 1A46     		mov	r2, r3
 4692 25a4 07F13803 		add	r3, r7, #56
 4693 25a8 143B     		subs	r3, r3, #20
 4694 25aa 1344     		add	r3, r3, r2
 4695 25ac B349     		ldr	r1, .L274+16
 4696 25ae 1A46     		mov	r2, r3
 4697 25b0 0B46     		mov	r3, r1
 4698 25b2 03CB     		ldmia	r3!, {r0, r1}
 4699 25b4 1060     		str	r0, [r2]	@ unaligned
 4700 25b6 5160     		str	r1, [r2, #4]	@ unaligned
 4701 25b8 1B88     		ldrh	r3, [r3]	@ unaligned
 4702 25ba 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 4703              		.loc 1 659 0
 4704 25bc 3BE0     		b	.L198
 4705              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4706              		.loc 1 661 0
 4707 25be 07F13803 		add	r3, r7, #56
 4708 25c2 143B     		subs	r3, r3, #20
 4709 25c4 1846     		mov	r0, r3
 4710 25c6 FFF7FEFF 		bl	strlen
 4711 25ca 0346     		mov	r3, r0
 4712 25cc 1A46     		mov	r2, r3
 4713 25ce 07F13803 		add	r3, r7, #56
 4714 25d2 143B     		subs	r3, r3, #20
 4715 25d4 1344     		add	r3, r3, r2
 4716 25d6 AA4A     		ldr	r2, .L274+20
 4717 25d8 1D46     		mov	r5, r3
 4718 25da 1446     		mov	r4, r2
 4719 25dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4720 25de 2860     		str	r0, [r5]	@ unaligned
 4721 25e0 6960     		str	r1, [r5, #4]	@ unaligned
 4722 25e2 AA60     		str	r2, [r5, #8]	@ unaligned
 4723 25e4 EB60     		str	r3, [r5, #12]	@ unaligned
 4724 25e6 2388     		ldrh	r3, [r4]	@ unaligned
 4725 25e8 A278     		ldrb	r2, [r4, #2]
 4726 25ea 2B82     		strh	r3, [r5, #16]	@ unaligned
 4727 25ec 1346     		mov	r3, r2
 4728 25ee AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 4729              		.loc 1 662 0
 4730 25f0 21E0     		b	.L198
 4731              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 113


 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4732              		.loc 1 664 0
 4733 25f2 07F13803 		add	r3, r7, #56
 4734 25f6 143B     		subs	r3, r3, #20
 4735 25f8 1846     		mov	r0, r3
 4736 25fa FFF7FEFF 		bl	strlen
 4737 25fe 0346     		mov	r3, r0
 4738 2600 1A46     		mov	r2, r3
 4739 2602 07F13803 		add	r3, r7, #56
 4740 2606 143B     		subs	r3, r3, #20
 4741 2608 1344     		add	r3, r3, r2
 4742 260a 9E4A     		ldr	r2, .L274+24
 4743 260c 1446     		mov	r4, r2
 4744 260e 9E46     		mov	lr, r3
 4745 2610 04F1200C 		add	ip, r4, #32
 4746              	.L207:
 4747 2614 7546     		mov	r5, lr
 4748 2616 2646     		mov	r6, r4
 4749 2618 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4750 261a 2860     		str	r0, [r5]	@ unaligned
 4751 261c 6960     		str	r1, [r5, #4]	@ unaligned
 4752 261e AA60     		str	r2, [r5, #8]	@ unaligned
 4753 2620 EB60     		str	r3, [r5, #12]	@ unaligned
 4754 2622 1034     		adds	r4, r4, #16
 4755 2624 0EF1100E 		add	lr, lr, #16
 4756 2628 6445     		cmp	r4, ip
 4757 262a F3D1     		bne	.L207
 4758 262c 7246     		mov	r2, lr
 4759 262e 2346     		mov	r3, r4
 4760 2630 1B88     		ldrh	r3, [r3]	@ unaligned
 4761 2632 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 4762              		.loc 1 665 0
 4763 2634 00BF     		nop
 4764              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 4765              		.loc 1 667 0
 4766 2636 9EE2     		b	.L255
 4767              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
 4768              		.loc 1 669 0
 4769 2638 07F5A253 		add	r3, r7, #5184
 4770 263c 03F10803 		add	r3, r3, #8
 4771 2640 1B68     		ldr	r3, [r3]
 4772 2642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4773 2644 032B     		cmp	r3, #3
 4774 2646 00F29882 		bhi	.L256
 4775 264a 01A2     		adr	r2, .L210
 4776 264c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4777              		.p2align 2
 4778              	.L210:
 4779 2650 61260000 		.word	.L209+1
 4780 2654 8B260000 		.word	.L211+1
 4781 2658 AF260000 		.word	.L212+1
 4782 265c D9260000 		.word	.L213+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 114


 4783              		.p2align 1
 4784              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4785              		.loc 1 671 0
 4786 2660 07F13803 		add	r3, r7, #56
 4787 2664 143B     		subs	r3, r3, #20
 4788 2666 1846     		mov	r0, r3
 4789 2668 FFF7FEFF 		bl	strlen
 4790 266c 0346     		mov	r3, r0
 4791 266e 1A46     		mov	r2, r3
 4792 2670 07F13803 		add	r3, r7, #56
 4793 2674 143B     		subs	r3, r3, #20
 4794 2676 1344     		add	r3, r3, r2
 4795 2678 8349     		ldr	r1, .L274+28
 4796 267a 1A46     		mov	r2, r3
 4797 267c 0B46     		mov	r3, r1
 4798 267e 03CB     		ldmia	r3!, {r0, r1}
 4799 2680 1060     		str	r0, [r2]	@ unaligned
 4800 2682 5160     		str	r1, [r2, #4]	@ unaligned
 4801 2684 1B88     		ldrh	r3, [r3]	@ unaligned
 4802 2686 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4803              		.loc 1 672 0
 4804 2688 3FE0     		b	.L208
 4805              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4806              		.loc 1 674 0
 4807 268a 07F13803 		add	r3, r7, #56
 4808 268e 143B     		subs	r3, r3, #20
 4809 2690 1846     		mov	r0, r3
 4810 2692 FFF7FEFF 		bl	strlen
 4811 2696 0346     		mov	r3, r0
 4812 2698 1A46     		mov	r2, r3
 4813 269a 07F13803 		add	r3, r7, #56
 4814 269e 143B     		subs	r3, r3, #20
 4815 26a0 1344     		add	r3, r3, r2
 4816 26a2 7A4A     		ldr	r2, .L274+32
 4817 26a4 1068     		ldr	r0, [r2]	@ unaligned
 4818 26a6 1860     		str	r0, [r3]	@ unaligned
 4819 26a8 1279     		ldrb	r2, [r2, #4]
 4820 26aa 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 4821              		.loc 1 675 0
 4822 26ac 2DE0     		b	.L208
 4823              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4824              		.loc 1 677 0
 4825 26ae 07F13803 		add	r3, r7, #56
 4826 26b2 143B     		subs	r3, r3, #20
 4827 26b4 1846     		mov	r0, r3
 4828 26b6 FFF7FEFF 		bl	strlen
 4829 26ba 0346     		mov	r3, r0
 4830 26bc 1A46     		mov	r2, r3
 4831 26be 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 115


 4832 26c2 143B     		subs	r3, r3, #20
 4833 26c4 1344     		add	r3, r3, r2
 4834 26c6 7249     		ldr	r1, .L274+36
 4835 26c8 1A46     		mov	r2, r3
 4836 26ca 0B46     		mov	r3, r1
 4837 26cc 03CB     		ldmia	r3!, {r0, r1}
 4838 26ce 1060     		str	r0, [r2]	@ unaligned
 4839 26d0 5160     		str	r1, [r2, #4]	@ unaligned
 4840 26d2 1B78     		ldrb	r3, [r3]
 4841 26d4 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 4842              		.loc 1 678 0
 4843 26d6 18E0     		b	.L208
 4844              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 4845              		.loc 1 680 0
 4846 26d8 07F13803 		add	r3, r7, #56
 4847 26dc 143B     		subs	r3, r3, #20
 4848 26de 1846     		mov	r0, r3
 4849 26e0 FFF7FEFF 		bl	strlen
 4850 26e4 0346     		mov	r3, r0
 4851 26e6 1A46     		mov	r2, r3
 4852 26e8 07F13803 		add	r3, r7, #56
 4853 26ec 143B     		subs	r3, r3, #20
 4854 26ee 1344     		add	r3, r3, r2
 4855 26f0 684A     		ldr	r2, .L274+40
 4856 26f2 1D46     		mov	r5, r3
 4857 26f4 1446     		mov	r4, r2
 4858 26f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4859 26f8 2860     		str	r0, [r5]	@ unaligned
 4860 26fa 6960     		str	r1, [r5, #4]	@ unaligned
 4861 26fc AA60     		str	r2, [r5, #8]	@ unaligned
 4862 26fe EB60     		str	r3, [r5, #12]	@ unaligned
 4863 2700 2068     		ldr	r0, [r4]	@ unaligned
 4864 2702 2861     		str	r0, [r5, #16]	@ unaligned
 4865 2704 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4866 2706 AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 4867              		.loc 1 681 0
 4868 2708 00BF     		nop
 4869              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 4870              		.loc 1 683 0
 4871 270a 36E2     		b	.L256
 4872              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 4873              		.loc 1 685 0
 4874 270c 07F5A253 		add	r3, r7, #5184
 4875 2710 03F10803 		add	r3, r3, #8
 4876 2714 1B68     		ldr	r3, [r3]
 4877 2716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4878 2718 002B     		cmp	r3, #0
 4879 271a 11D0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 116


 4880              		.loc 1 686 0
 4881 271c 07F13803 		add	r3, r7, #56
 4882 2720 143B     		subs	r3, r3, #20
 4883 2722 1846     		mov	r0, r3
 4884 2724 FFF7FEFF 		bl	strlen
 4885 2728 0346     		mov	r3, r0
 4886 272a 1A46     		mov	r2, r3
 4887 272c 07F13803 		add	r3, r7, #56
 4888 2730 143B     		subs	r3, r3, #20
 4889 2732 1344     		add	r3, r3, r2
 4890 2734 584A     		ldr	r2, .L274+44
 4891 2736 1068     		ldr	r0, [r2]	@ unaligned
 4892 2738 1860     		str	r0, [r3]	@ unaligned
 4893 273a 1279     		ldrb	r2, [r2, #4]
 4894 273c 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 4895              		.loc 1 691 0
 4896 273e 1FE2     		b	.L186
 4897              	.L214:
 689:..\src/command_processing.c ****                     }
 4898              		.loc 1 689 0
 4899 2740 07F13803 		add	r3, r7, #56
 4900 2744 143B     		subs	r3, r3, #20
 4901 2746 1846     		mov	r0, r3
 4902 2748 FFF7FEFF 		bl	strlen
 4903 274c 0346     		mov	r3, r0
 4904 274e 1A46     		mov	r2, r3
 4905 2750 07F13803 		add	r3, r7, #56
 4906 2754 143B     		subs	r3, r3, #20
 4907 2756 1344     		add	r3, r3, r2
 4908 2758 504A     		ldr	r2, .L274+48
 4909 275a 1068     		ldr	r0, [r2]	@ unaligned
 4910 275c 1860     		str	r0, [r3]	@ unaligned
 4911              		.loc 1 691 0
 4912 275e 0FE2     		b	.L186
 4913              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 4914              		.loc 1 693 0
 4915 2760 07F5A253 		add	r3, r7, #5184
 4916 2764 03F10803 		add	r3, r3, #8
 4917 2768 1B68     		ldr	r3, [r3]
 4918 276a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4919 276c 002B     		cmp	r3, #0
 4920 276e 02D0     		beq	.L217
 4921 2770 012B     		cmp	r3, #1
 4922 2772 14D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 117


 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 4923              		.loc 1 701 0
 4924 2774 04E2     		b	.L186
 4925              	.L217:
 695:..\src/command_processing.c ****                         break;
 4926              		.loc 1 695 0
 4927 2776 07F13803 		add	r3, r7, #56
 4928 277a 143B     		subs	r3, r3, #20
 4929 277c 1846     		mov	r0, r3
 4930 277e FFF7FEFF 		bl	strlen
 4931 2782 0346     		mov	r3, r0
 4932 2784 1A46     		mov	r2, r3
 4933 2786 07F13803 		add	r3, r7, #56
 4934 278a 143B     		subs	r3, r3, #20
 4935 278c 1344     		add	r3, r3, r2
 4936 278e 444A     		ldr	r2, .L274+52
 4937 2790 1068     		ldr	r0, [r2]	@ unaligned
 4938 2792 1860     		str	r0, [r3]	@ unaligned
 4939 2794 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4940 2796 9279     		ldrb	r2, [r2, #6]
 4941 2798 9980     		strh	r1, [r3, #4]	@ unaligned
 4942 279a 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 4943              		.loc 1 696 0
 4944 279c 11E0     		b	.L216
 4945              	.L218:
 698:..\src/command_processing.c ****                         break;
 4946              		.loc 1 698 0
 4947 279e 07F13803 		add	r3, r7, #56
 4948 27a2 143B     		subs	r3, r3, #20
 4949 27a4 1846     		mov	r0, r3
 4950 27a6 FFF7FEFF 		bl	strlen
 4951 27aa 0346     		mov	r3, r0
 4952 27ac 1A46     		mov	r2, r3
 4953 27ae 07F13803 		add	r3, r7, #56
 4954 27b2 143B     		subs	r3, r3, #20
 4955 27b4 1344     		add	r3, r3, r2
 4956 27b6 3B4A     		ldr	r2, .L274+56
 4957 27b8 1068     		ldr	r0, [r2]	@ unaligned
 4958 27ba 1860     		str	r0, [r3]	@ unaligned
 4959 27bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4960 27be 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 4961              		.loc 1 699 0
 4962 27c0 00BF     		nop
 4963              	.L216:
 4964              		.loc 1 701 0
 4965 27c2 DDE1     		b	.L186
 4966              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 4967              		.loc 1 703 0
 4968 27c4 07F5A253 		add	r3, r7, #5184
 4969 27c8 03F10803 		add	r3, r3, #8
 4970 27cc 1B68     		ldr	r3, [r3]
 4971 27ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 118


 4972 27d0 002B     		cmp	r3, #0
 4973 27d2 02D0     		beq	.L220
 4974 27d4 012B     		cmp	r3, #1
 4975 27d6 12D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 4976              		.loc 1 711 0
 4977 27d8 D2E1     		b	.L186
 4978              	.L220:
 705:..\src/command_processing.c ****                         break;
 4979              		.loc 1 705 0
 4980 27da 07F13803 		add	r3, r7, #56
 4981 27de 143B     		subs	r3, r3, #20
 4982 27e0 1846     		mov	r0, r3
 4983 27e2 FFF7FEFF 		bl	strlen
 4984 27e6 0346     		mov	r3, r0
 4985 27e8 1A46     		mov	r2, r3
 4986 27ea 07F13803 		add	r3, r7, #56
 4987 27ee 143B     		subs	r3, r3, #20
 4988 27f0 1344     		add	r3, r3, r2
 4989 27f2 2D4A     		ldr	r2, .L274+60
 4990 27f4 1068     		ldr	r0, [r2]	@ unaligned
 4991 27f6 1860     		str	r0, [r3]	@ unaligned
 4992 27f8 1279     		ldrb	r2, [r2, #4]
 4993 27fa 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 4994              		.loc 1 706 0
 4995 27fc 0FE0     		b	.L219
 4996              	.L221:
 708:..\src/command_processing.c ****                         break;
 4997              		.loc 1 708 0
 4998 27fe 07F13803 		add	r3, r7, #56
 4999 2802 143B     		subs	r3, r3, #20
 5000 2804 1846     		mov	r0, r3
 5001 2806 FFF7FEFF 		bl	strlen
 5002 280a 0346     		mov	r3, r0
 5003 280c 1A46     		mov	r2, r3
 5004 280e 07F13803 		add	r3, r7, #56
 5005 2812 143B     		subs	r3, r3, #20
 5006 2814 1344     		add	r3, r3, r2
 5007 2816 254A     		ldr	r2, .L274+64
 5008 2818 1068     		ldr	r0, [r2]	@ unaligned
 5009 281a 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 5010              		.loc 1 709 0
 5011 281c 00BF     		nop
 5012              	.L219:
 5013              		.loc 1 711 0
 5014 281e AFE1     		b	.L186
 5015              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 119


 713:..\src/command_processing.c ****                     switch(*m_addr){
 5016              		.loc 1 713 0
 5017 2820 07F5A253 		add	r3, r7, #5184
 5018 2824 03F10803 		add	r3, r3, #8
 5019 2828 1B68     		ldr	r3, [r3]
 5020 282a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5021 282c 032B     		cmp	r3, #3
 5022 282e 00F2A681 		bhi	.L257
 5023 2832 01A2     		adr	r2, .L224
 5024 2834 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5025              		.p2align 2
 5026              	.L224:
 5027 2838 49280000 		.word	.L223+1
 5028 283c B5280000 		.word	.L225+1
 5029 2840 E1280000 		.word	.L226+1
 5030 2844 0F290000 		.word	.L227+1
 5031              		.p2align 1
 5032              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5033              		.loc 1 715 0
 5034 2848 07F13803 		add	r3, r7, #56
 5035 284c 143B     		subs	r3, r3, #20
 5036 284e 1846     		mov	r0, r3
 5037 2850 FFF7FEFF 		bl	strlen
 5038 2854 0346     		mov	r3, r0
 5039 2856 1A46     		mov	r2, r3
 5040 2858 07F13803 		add	r3, r7, #56
 5041 285c 143B     		subs	r3, r3, #20
 5042 285e 1344     		add	r3, r3, r2
 5043 2860 134A     		ldr	r2, .L274+68
 5044 2862 1068     		ldr	r0, [r2]	@ unaligned
 5045 2864 1860     		str	r0, [r3]	@ unaligned
 5046 2866 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5047 2868 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 5048              		.loc 1 716 0
 5049 286a 66E0     		b	.L222
 5050              	.L275:
 5051              		.align	2
 5052              	.L274:
 5053 286c 00000000 		.word	.LC81
 5054 2870 08000000 		.word	.LC82
 5055 2874 10000000 		.word	.LC83
 5056 2878 24000000 		.word	.LC84
 5057 287c 34000000 		.word	.LC85
 5058 2880 40000000 		.word	.LC86
 5059 2884 54000000 		.word	.LC87
 5060 2888 78000000 		.word	.LC88
 5061 288c 84000000 		.word	.LC89
 5062 2890 8C000000 		.word	.LC90
 5063 2894 98000000 		.word	.LC91
 5064 2898 B0000000 		.word	.LC92
 5065 289c B8000000 		.word	.LC93
 5066 28a0 C0000000 		.word	.LC94
 5067 28a4 C8000000 		.word	.LC95
 5068 28a8 D0000000 		.word	.LC96
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 120


 5069 28ac D8000000 		.word	.LC97
 5070 28b0 E0000000 		.word	.LC98
 5071              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5072              		.loc 1 718 0
 5073 28b4 07F13803 		add	r3, r7, #56
 5074 28b8 143B     		subs	r3, r3, #20
 5075 28ba 1846     		mov	r0, r3
 5076 28bc FFF7FEFF 		bl	strlen
 5077 28c0 0346     		mov	r3, r0
 5078 28c2 1A46     		mov	r2, r3
 5079 28c4 07F13803 		add	r3, r7, #56
 5080 28c8 143B     		subs	r3, r3, #20
 5081 28ca 1344     		add	r3, r3, r2
 5082 28cc B94A     		ldr	r2, .L276
 5083 28ce 1C46     		mov	r4, r3
 5084 28d0 1346     		mov	r3, r2
 5085 28d2 07CB     		ldmia	r3!, {r0, r1, r2}
 5086 28d4 2060     		str	r0, [r4]	@ unaligned
 5087 28d6 6160     		str	r1, [r4, #4]	@ unaligned
 5088 28d8 A260     		str	r2, [r4, #8]	@ unaligned
 5089 28da 1B88     		ldrh	r3, [r3]	@ unaligned
 5090 28dc A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 5091              		.loc 1 719 0
 5092 28de 2CE0     		b	.L222
 5093              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5094              		.loc 1 721 0
 5095 28e0 07F13803 		add	r3, r7, #56
 5096 28e4 143B     		subs	r3, r3, #20
 5097 28e6 1846     		mov	r0, r3
 5098 28e8 FFF7FEFF 		bl	strlen
 5099 28ec 0346     		mov	r3, r0
 5100 28ee 1A46     		mov	r2, r3
 5101 28f0 07F13803 		add	r3, r7, #56
 5102 28f4 143B     		subs	r3, r3, #20
 5103 28f6 1344     		add	r3, r3, r2
 5104 28f8 AF4A     		ldr	r2, .L276+4
 5105 28fa 1D46     		mov	r5, r3
 5106 28fc 1446     		mov	r4, r2
 5107 28fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5108 2900 2860     		str	r0, [r5]	@ unaligned
 5109 2902 6960     		str	r1, [r5, #4]	@ unaligned
 5110 2904 AA60     		str	r2, [r5, #8]	@ unaligned
 5111 2906 EB60     		str	r3, [r5, #12]	@ unaligned
 5112 2908 2388     		ldrh	r3, [r4]	@ unaligned
 5113 290a 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 5114              		.loc 1 722 0
 5115 290c 15E0     		b	.L222
 5116              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5117              		.loc 1 724 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 121


 5118 290e 07F13803 		add	r3, r7, #56
 5119 2912 143B     		subs	r3, r3, #20
 5120 2914 1846     		mov	r0, r3
 5121 2916 FFF7FEFF 		bl	strlen
 5122 291a 0346     		mov	r3, r0
 5123 291c 1A46     		mov	r2, r3
 5124 291e 07F13803 		add	r3, r7, #56
 5125 2922 143B     		subs	r3, r3, #20
 5126 2924 1344     		add	r3, r3, r2
 5127 2926 A54A     		ldr	r2, .L276+8
 5128 2928 1C46     		mov	r4, r3
 5129 292a 1346     		mov	r3, r2
 5130 292c 07CB     		ldmia	r3!, {r0, r1, r2}
 5131 292e 2060     		str	r0, [r4]	@ unaligned
 5132 2930 6160     		str	r1, [r4, #4]	@ unaligned
 5133 2932 A260     		str	r2, [r4, #8]	@ unaligned
 5134 2934 1B78     		ldrb	r3, [r3]
 5135 2936 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 5136              		.loc 1 725 0
 5137 2938 00BF     		nop
 5138              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 5139              		.loc 1 727 0
 5140 293a 20E1     		b	.L257
 5141              	.L194:
 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 5142              		.loc 1 729 0
 5143 293c 07F5A253 		add	r3, r7, #5184
 5144 2940 03F10803 		add	r3, r3, #8
 5145 2944 1B68     		ldr	r3, [r3]
 5146 2946 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5147 2948 012B     		cmp	r3, #1
 5148 294a 16D0     		beq	.L229
 5149 294c 022B     		cmp	r3, #2
 5150 294e 26D0     		beq	.L230
 5151 2950 002B     		cmp	r3, #0
 5152 2952 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 5153              		.loc 1 740 0
 5154 2954 35E0     		b	.L232
 5155              	.L231:
 731:..\src/command_processing.c ****                             break;
 5156              		.loc 1 731 0
 5157 2956 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 122


 5158 295a 143B     		subs	r3, r3, #20
 5159 295c 1846     		mov	r0, r3
 5160 295e FFF7FEFF 		bl	strlen
 5161 2962 0346     		mov	r3, r0
 5162 2964 1A46     		mov	r2, r3
 5163 2966 07F13803 		add	r3, r7, #56
 5164 296a 143B     		subs	r3, r3, #20
 5165 296c 1344     		add	r3, r3, r2
 5166 296e 944A     		ldr	r2, .L276+12
 5167 2970 1068     		ldr	r0, [r2]	@ unaligned
 5168 2972 1860     		str	r0, [r3]	@ unaligned
 5169 2974 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5170 2976 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 5171              		.loc 1 732 0
 5172 2978 23E0     		b	.L232
 5173              	.L229:
 734:..\src/command_processing.c ****                             break;
 5174              		.loc 1 734 0
 5175 297a 07F13803 		add	r3, r7, #56
 5176 297e 143B     		subs	r3, r3, #20
 5177 2980 1846     		mov	r0, r3
 5178 2982 FFF7FEFF 		bl	strlen
 5179 2986 0346     		mov	r3, r0
 5180 2988 1A46     		mov	r2, r3
 5181 298a 07F13803 		add	r3, r7, #56
 5182 298e 143B     		subs	r3, r3, #20
 5183 2990 1344     		add	r3, r3, r2
 5184 2992 8C4A     		ldr	r2, .L276+16
 5185 2994 1068     		ldr	r0, [r2]	@ unaligned
 5186 2996 1860     		str	r0, [r3]	@ unaligned
 5187 2998 1279     		ldrb	r2, [r2, #4]
 5188 299a 1A71     		strb	r2, [r3, #4]
 735:..\src/command_processing.c ****                         case 2: 
 5189              		.loc 1 735 0
 5190 299c 11E0     		b	.L232
 5191              	.L230:
 737:..\src/command_processing.c ****                             break;
 5192              		.loc 1 737 0
 5193 299e 07F13803 		add	r3, r7, #56
 5194 29a2 143B     		subs	r3, r3, #20
 5195 29a4 1846     		mov	r0, r3
 5196 29a6 FFF7FEFF 		bl	strlen
 5197 29aa 0346     		mov	r3, r0
 5198 29ac 1A46     		mov	r2, r3
 5199 29ae 07F13803 		add	r3, r7, #56
 5200 29b2 143B     		subs	r3, r3, #20
 5201 29b4 1344     		add	r3, r3, r2
 5202 29b6 844A     		ldr	r2, .L276+20
 5203 29b8 1068     		ldr	r0, [r2]	@ unaligned
 5204 29ba 1860     		str	r0, [r3]	@ unaligned
 5205 29bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5206 29be 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 5207              		.loc 1 738 0
 5208 29c0 00BF     		nop
 5209              	.L232:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 123


 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 5210              		.loc 1 742 0 discriminator 12
 5211 29c2 DDE0     		b	.L186
 5212              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
 744:..\src/command_processing.c ****                     switch(*m_addr){
 5213              		.loc 1 744 0
 5214 29c4 07F5A253 		add	r3, r7, #5184
 5215 29c8 03F10803 		add	r3, r3, #8
 5216 29cc 1B68     		ldr	r3, [r3]
 5217 29ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5218 29d0 012B     		cmp	r3, #1
 5219 29d2 1AD0     		beq	.L234
 5220 29d4 022B     		cmp	r3, #2
 5221 29d6 2CD0     		beq	.L235
 5222 29d8 002B     		cmp	r3, #0
 5223 29da 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 5224              		.loc 1 755 0
 5225 29dc D0E0     		b	.L186
 5226              	.L236:
 746:..\src/command_processing.c ****                         break;
 5227              		.loc 1 746 0
 5228 29de 07F13803 		add	r3, r7, #56
 5229 29e2 143B     		subs	r3, r3, #20
 5230 29e4 1846     		mov	r0, r3
 5231 29e6 FFF7FEFF 		bl	strlen
 5232 29ea 0346     		mov	r3, r0
 5233 29ec 1A46     		mov	r2, r3
 5234 29ee 07F13803 		add	r3, r7, #56
 5235 29f2 143B     		subs	r3, r3, #20
 5236 29f4 1344     		add	r3, r3, r2
 5237 29f6 754A     		ldr	r2, .L276+24
 5238 29f8 1C46     		mov	r4, r3
 5239 29fa 1346     		mov	r3, r2
 5240 29fc 07CB     		ldmia	r3!, {r0, r1, r2}
 5241 29fe 2060     		str	r0, [r4]	@ unaligned
 5242 2a00 6160     		str	r1, [r4, #4]	@ unaligned
 5243 2a02 A260     		str	r2, [r4, #8]	@ unaligned
 5244 2a04 1B88     		ldrh	r3, [r3]	@ unaligned
 5245 2a06 A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 5246              		.loc 1 747 0
 5247 2a08 25E0     		b	.L233
 5248              	.L234:
 749:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 124


 5249              		.loc 1 749 0
 5250 2a0a 07F13803 		add	r3, r7, #56
 5251 2a0e 143B     		subs	r3, r3, #20
 5252 2a10 1846     		mov	r0, r3
 5253 2a12 FFF7FEFF 		bl	strlen
 5254 2a16 0346     		mov	r3, r0
 5255 2a18 1A46     		mov	r2, r3
 5256 2a1a 07F13803 		add	r3, r7, #56
 5257 2a1e 143B     		subs	r3, r3, #20
 5258 2a20 1344     		add	r3, r3, r2
 5259 2a22 6B4A     		ldr	r2, .L276+28
 5260 2a24 1068     		ldr	r0, [r2]	@ unaligned
 5261 2a26 1860     		str	r0, [r3]	@ unaligned
 5262 2a28 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5263 2a2a 9279     		ldrb	r2, [r2, #6]
 5264 2a2c 9980     		strh	r1, [r3, #4]	@ unaligned
 5265 2a2e 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 5266              		.loc 1 750 0
 5267 2a30 11E0     		b	.L233
 5268              	.L235:
 752:..\src/command_processing.c ****                         break;
 5269              		.loc 1 752 0
 5270 2a32 07F13803 		add	r3, r7, #56
 5271 2a36 143B     		subs	r3, r3, #20
 5272 2a38 1846     		mov	r0, r3
 5273 2a3a FFF7FEFF 		bl	strlen
 5274 2a3e 0346     		mov	r3, r0
 5275 2a40 1A46     		mov	r2, r3
 5276 2a42 07F13803 		add	r3, r7, #56
 5277 2a46 143B     		subs	r3, r3, #20
 5278 2a48 1344     		add	r3, r3, r2
 5279 2a4a 624A     		ldr	r2, .L276+32
 5280 2a4c 1068     		ldr	r0, [r2]	@ unaligned
 5281 2a4e 1860     		str	r0, [r3]	@ unaligned
 5282 2a50 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5283 2a52 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                     }   
 5284              		.loc 1 753 0
 5285 2a54 00BF     		nop
 5286              	.L233:
 5287              		.loc 1 755 0
 5288 2a56 93E0     		b	.L186
 5289              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 5290              		.loc 1 757 0
 5291 2a58 07F5A253 		add	r3, r7, #5184
 5292 2a5c 03F10803 		add	r3, r3, #8
 5293 2a60 1B68     		ldr	r3, [r3]
 5294 2a62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5295 2a64 002B     		cmp	r3, #0
 5296 2a66 02D0     		beq	.L238
 5297 2a68 012B     		cmp	r3, #1
 5298 2a6a 17D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 125


 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
 5299              		.loc 1 765 0
 5300 2a6c 88E0     		b	.L186
 5301              	.L238:
 759:..\src/command_processing.c ****                         break;
 5302              		.loc 1 759 0
 5303 2a6e 07F13803 		add	r3, r7, #56
 5304 2a72 143B     		subs	r3, r3, #20
 5305 2a74 1846     		mov	r0, r3
 5306 2a76 FFF7FEFF 		bl	strlen
 5307 2a7a 0346     		mov	r3, r0
 5308 2a7c 1A46     		mov	r2, r3
 5309 2a7e 07F13803 		add	r3, r7, #56
 5310 2a82 143B     		subs	r3, r3, #20
 5311 2a84 1344     		add	r3, r3, r2
 5312 2a86 544A     		ldr	r2, .L276+36
 5313 2a88 1D46     		mov	r5, r3
 5314 2a8a 1446     		mov	r4, r2
 5315 2a8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5316 2a8e 2860     		str	r0, [r5]	@ unaligned
 5317 2a90 6960     		str	r1, [r5, #4]	@ unaligned
 5318 2a92 AA60     		str	r2, [r5, #8]	@ unaligned
 5319 2a94 EB60     		str	r3, [r5, #12]	@ unaligned
 5320 2a96 2068     		ldr	r0, [r4]	@ unaligned
 5321 2a98 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 5322              		.loc 1 760 0
 5323 2a9a 18E0     		b	.L237
 5324              	.L239:
 762:..\src/command_processing.c ****                         break;
 5325              		.loc 1 762 0
 5326 2a9c 07F13803 		add	r3, r7, #56
 5327 2aa0 143B     		subs	r3, r3, #20
 5328 2aa2 1846     		mov	r0, r3
 5329 2aa4 FFF7FEFF 		bl	strlen
 5330 2aa8 0346     		mov	r3, r0
 5331 2aaa 1A46     		mov	r2, r3
 5332 2aac 07F13803 		add	r3, r7, #56
 5333 2ab0 143B     		subs	r3, r3, #20
 5334 2ab2 1344     		add	r3, r3, r2
 5335 2ab4 494A     		ldr	r2, .L276+40
 5336 2ab6 1D46     		mov	r5, r3
 5337 2ab8 1446     		mov	r4, r2
 5338 2aba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5339 2abc 2860     		str	r0, [r5]	@ unaligned
 5340 2abe 6960     		str	r1, [r5, #4]	@ unaligned
 5341 2ac0 AA60     		str	r2, [r5, #8]	@ unaligned
 5342 2ac2 EB60     		str	r3, [r5, #12]	@ unaligned
 5343 2ac4 2068     		ldr	r0, [r4]	@ unaligned
 5344 2ac6 2861     		str	r0, [r5, #16]	@ unaligned
 5345 2ac8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5346 2aca AB82     		strh	r3, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 126


 763:..\src/command_processing.c ****                     }
 5347              		.loc 1 763 0
 5348 2acc 00BF     		nop
 5349              	.L237:
 5350              		.loc 1 765 0
 5351 2ace 57E0     		b	.L186
 5352              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 5353              		.loc 1 767 0
 5354 2ad0 07F5A253 		add	r3, r7, #5184
 5355 2ad4 03F10803 		add	r3, r3, #8
 5356 2ad8 1B68     		ldr	r3, [r3]
 5357 2ada 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5358 2adc 012B     		cmp	r3, #1
 5359 2ade 1AD0     		beq	.L241
 5360 2ae0 022B     		cmp	r3, #2
 5361 2ae2 2FD0     		beq	.L242
 5362 2ae4 002B     		cmp	r3, #0
 5363 2ae6 00D0     		beq	.L243
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                         case 2:
 775:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS \0");
 776:..\src/command_processing.c ****                     }
 777:..\src/command_processing.c ****                     break;
 5364              		.loc 1 777 0
 5365 2ae8 4AE0     		b	.L186
 5366              	.L243:
 769:..\src/command_processing.c ****                         break;
 5367              		.loc 1 769 0
 5368 2aea 07F13803 		add	r3, r7, #56
 5369 2aee 143B     		subs	r3, r3, #20
 5370 2af0 1846     		mov	r0, r3
 5371 2af2 FFF7FEFF 		bl	strlen
 5372 2af6 0346     		mov	r3, r0
 5373 2af8 1A46     		mov	r2, r3
 5374 2afa 07F13803 		add	r3, r7, #56
 5375 2afe 143B     		subs	r3, r3, #20
 5376 2b00 1344     		add	r3, r3, r2
 5377 2b02 374A     		ldr	r2, .L276+44
 5378 2b04 1C46     		mov	r4, r3
 5379 2b06 1346     		mov	r3, r2
 5380 2b08 07CB     		ldmia	r3!, {r0, r1, r2}
 5381 2b0a 2060     		str	r0, [r4]	@ unaligned
 5382 2b0c 6160     		str	r1, [r4, #4]	@ unaligned
 5383 2b0e A260     		str	r2, [r4, #8]	@ unaligned
 5384 2b10 1B88     		ldrh	r3, [r3]	@ unaligned
 5385 2b12 A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 5386              		.loc 1 770 0
 5387 2b14 2EE0     		b	.L240
 5388              	.L241:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 127


 772:..\src/command_processing.c ****                         break;
 5389              		.loc 1 772 0
 5390 2b16 07F13803 		add	r3, r7, #56
 5391 2b1a 143B     		subs	r3, r3, #20
 5392 2b1c 1846     		mov	r0, r3
 5393 2b1e FFF7FEFF 		bl	strlen
 5394 2b22 0346     		mov	r3, r0
 5395 2b24 1A46     		mov	r2, r3
 5396 2b26 07F13803 		add	r3, r7, #56
 5397 2b2a 143B     		subs	r3, r3, #20
 5398 2b2c 1344     		add	r3, r3, r2
 5399 2b2e 2D4A     		ldr	r2, .L276+48
 5400 2b30 1D46     		mov	r5, r3
 5401 2b32 1446     		mov	r4, r2
 5402 2b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5403 2b36 2860     		str	r0, [r5]	@ unaligned
 5404 2b38 6960     		str	r1, [r5, #4]	@ unaligned
 5405 2b3a AA60     		str	r2, [r5, #8]	@ unaligned
 5406 2b3c EB60     		str	r3, [r5, #12]	@ unaligned
 5407 2b3e 2388     		ldrh	r3, [r4]	@ unaligned
 5408 2b40 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                         case 2:
 5409              		.loc 1 773 0
 5410 2b42 17E0     		b	.L240
 5411              	.L242:
 775:..\src/command_processing.c ****                     }
 5412              		.loc 1 775 0
 5413 2b44 07F13803 		add	r3, r7, #56
 5414 2b48 143B     		subs	r3, r3, #20
 5415 2b4a 1846     		mov	r0, r3
 5416 2b4c FFF7FEFF 		bl	strlen
 5417 2b50 0346     		mov	r3, r0
 5418 2b52 1A46     		mov	r2, r3
 5419 2b54 07F13803 		add	r3, r7, #56
 5420 2b58 143B     		subs	r3, r3, #20
 5421 2b5a 1344     		add	r3, r3, r2
 5422 2b5c 224A     		ldr	r2, .L276+52
 5423 2b5e 1C46     		mov	r4, r3
 5424 2b60 1346     		mov	r3, r2
 5425 2b62 07CB     		ldmia	r3!, {r0, r1, r2}
 5426 2b64 2060     		str	r0, [r4]	@ unaligned
 5427 2b66 6160     		str	r1, [r4, #4]	@ unaligned
 5428 2b68 A260     		str	r2, [r4, #8]	@ unaligned
 5429 2b6a 1A88     		ldrh	r2, [r3]	@ unaligned
 5430 2b6c 9B78     		ldrb	r3, [r3, #2]
 5431 2b6e A281     		strh	r2, [r4, #12]	@ unaligned
 5432 2b70 A373     		strb	r3, [r4, #14]
 5433              		.loc 1 777 0
 5434 2b72 05E0     		b	.L186
 5435              	.L240:
 5436 2b74 04E0     		b	.L186
 5437              	.L255:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 5438              		.loc 1 667 0
 5439 2b76 00BF     		nop
 5440 2b78 02E0     		b	.L186
 5441              	.L256:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 128


 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5442              		.loc 1 683 0
 5443 2b7a 00BF     		nop
 5444 2b7c 00E0     		b	.L186
 5445              	.L257:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5446              		.loc 1 727 0
 5447 2b7e 00BF     		nop
 5448              	.L186:
 778:..\src/command_processing.c ****             }
 779:..\src/command_processing.c ****             //Recomputes string lenght
 780:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5449              		.loc 1 780 0
 5450 2b80 07F13803 		add	r3, r7, #56
 5451 2b84 143B     		subs	r3, r3, #20
 5452 2b86 1846     		mov	r0, r3
 5453 2b88 FFF7FEFF 		bl	strlen
 5454 2b8c 0346     		mov	r3, r0
 5455 2b8e DBB2     		uxtb	r3, r3
 5456 2b90 0133     		adds	r3, r3, #1
 5457 2b92 07F5A252 		add	r2, r7, #5184
 5458 2b96 02F11202 		add	r2, r2, #18
 5459 2b9a 1370     		strb	r3, [r2]
 5460              	.L185:
 781:..\src/command_processing.c ****         }
 782:..\src/command_processing.c **** 
 783:..\src/command_processing.c ****         // Add parameter string to packet
 784:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5461              		.loc 1 784 0
 5462 2b9c 07F5A253 		add	r3, r7, #5184
 5463 2ba0 03F11203 		add	r3, r3, #18
 5464 2ba4 1B78     		ldrb	r3, [r3]
 5465 2ba6 07F5A252 		add	r2, r7, #5184
 5466 2baa 02F11702 		add	r2, r2, #23
 5467 2bae 1370     		strb	r3, [r2]
 5468 2bb0 61E0     		b	.L244
 5469              	.L277:
 5470 2bb2 00BF     		.align	2
 5471              	.L276:
 5472 2bb4 E8000000 		.word	.LC99
 5473 2bb8 F8000000 		.word	.LC100
 5474 2bbc 0C010000 		.word	.LC101
 5475 2bc0 E0000000 		.word	.LC98
 5476 2bc4 1C010000 		.word	.LC102
 5477 2bc8 24010000 		.word	.LC103
 5478 2bcc 2C010000 		.word	.LC104
 5479 2bd0 3C010000 		.word	.LC105
 5480 2bd4 44010000 		.word	.LC106
 5481 2bd8 4C010000 		.word	.LC107
 5482 2bdc 64010000 		.word	.LC108
 5483 2be0 7C010000 		.word	.LC109
 5484 2be4 8C010000 		.word	.LC110
 5485 2be8 A0010000 		.word	.LC111
 5486              	.L245:
 785:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5487              		.loc 1 785 0 discriminator 3
 5488 2bec 07F5A253 		add	r3, r7, #5184
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 129


 5489 2bf0 03F11503 		add	r3, r3, #21
 5490 2bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5491 2bf6 3222     		movs	r2, #50
 5492 2bf8 02FB03F3 		mul	r3, r2, r3
 5493 2bfc 1A1D     		adds	r2, r3, #4
 5494 2bfe 07F5A253 		add	r3, r7, #5184
 5495 2c02 03F11303 		add	r3, r3, #19
 5496 2c06 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5497 2c08 07F5A253 		add	r3, r7, #5184
 5498 2c0c 03F11503 		add	r3, r3, #21
 5499 2c10 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5500 2c12 07F11803 		add	r3, r7, #24
 5501 2c16 143B     		subs	r3, r3, #20
 5502 2c18 1B68     		ldr	r3, [r3]
 5503 2c1a 0344     		add	r3, r3, r0
 5504 2c1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5505 2c1e 03FB01F3 		mul	r3, r3, r1
 5506 2c22 1A44     		add	r2, r2, r3
 5507 2c24 07F5A253 		add	r3, r7, #5184
 5508 2c28 03F11203 		add	r3, r3, #18
 5509 2c2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5510 2c2e 1A44     		add	r2, r2, r3
 5511 2c30 07F5A253 		add	r3, r7, #5184
 5512 2c34 03F11703 		add	r3, r3, #23
 5513 2c38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5514 2c3a D21A     		subs	r2, r2, r3
 5515 2c3c 07F5A253 		add	r3, r7, #5184
 5516 2c40 03F11203 		add	r3, r3, #18
 5517 2c44 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5518 2c46 07F5A253 		add	r3, r7, #5184
 5519 2c4a 03F11703 		add	r3, r3, #23
 5520 2c4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5521 2c50 C91A     		subs	r1, r1, r3
 5522 2c52 07F13803 		add	r3, r7, #56
 5523 2c56 143B     		subs	r3, r3, #20
 5524 2c58 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5525 2c5a 07F15803 		add	r3, r7, #88
 5526 2c5e 9954     		strb	r1, [r3, r2]
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5527              		.loc 1 784 0 discriminator 3
 5528 2c60 07F5A253 		add	r3, r7, #5184
 5529 2c64 03F11703 		add	r3, r3, #23
 5530 2c68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5531 2c6a 013B     		subs	r3, r3, #1
 5532 2c6c 07F5A252 		add	r2, r7, #5184
 5533 2c70 02F11702 		add	r2, r2, #23
 5534 2c74 1370     		strb	r3, [r2]
 5535              	.L244:
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5536              		.loc 1 784 0 is_stmt 0 discriminator 1
 5537 2c76 07F5A253 		add	r3, r7, #5184
 5538 2c7a 03F11703 		add	r3, r3, #23
 5539 2c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5540 2c80 002B     		cmp	r3, #0
 5541 2c82 B3D1     		bne	.L245
 786:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 787:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 130


 5542              		.loc 1 787 0 is_stmt 1
 5543 2c84 07F5A253 		add	r3, r7, #5184
 5544 2c88 03F11503 		add	r3, r3, #21
 5545 2c8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5546 2c8e 07F11803 		add	r3, r7, #24
 5547 2c92 103B     		subs	r3, r3, #16
 5548 2c94 1B68     		ldr	r3, [r3]
 5549 2c96 1344     		add	r3, r3, r2
 5550 2c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5551 2c9a 002B     		cmp	r3, #0
 5552 2c9c 3BD1     		bne	.L246
 788:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5553              		.loc 1 788 0
 5554 2c9e 07F5A253 		add	r3, r7, #5184
 5555 2ca2 03F11503 		add	r3, r3, #21
 5556 2ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5557 2ca8 3222     		movs	r2, #50
 5558 2caa 02FB03F3 		mul	r3, r2, r3
 5559 2cae 1A1D     		adds	r2, r3, #4
 5560 2cb0 07F5A253 		add	r3, r7, #5184
 5561 2cb4 03F11303 		add	r3, r3, #19
 5562 2cb8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5563 2cba 07F5A253 		add	r3, r7, #5184
 5564 2cbe 03F11503 		add	r3, r3, #21
 5565 2cc2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5566 2cc4 07F11803 		add	r3, r7, #24
 5567 2cc8 143B     		subs	r3, r3, #20
 5568 2cca 1B68     		ldr	r3, [r3]
 5569 2ccc 0344     		add	r3, r3, r0
 5570 2cce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5571 2cd0 03FB01F3 		mul	r3, r3, r1
 5572 2cd4 1A44     		add	r2, r2, r3
 5573 2cd6 07F5A253 		add	r3, r7, #5184
 5574 2cda 03F11203 		add	r3, r3, #18
 5575 2cde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5576 2ce0 1344     		add	r3, r3, r2
 5577 2ce2 07F5A252 		add	r2, r7, #5184
 5578 2ce6 02F11402 		add	r2, r2, #20
 5579 2cea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5580 2cec 07F5A351 		add	r1, r7, #5216
 5581 2cf0 01F11001 		add	r1, r1, #16
 5582 2cf4 0968     		ldr	r1, [r1]
 5583 2cf6 0A44     		add	r2, r2, r1
 5584 2cf8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5585 2cfa 07F15802 		add	r2, r7, #88
 5586 2cfe D154     		strb	r1, [r2, r3]
 789:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5587              		.loc 1 789 0
 5588 2d00 07F5A253 		add	r3, r7, #5184
 5589 2d04 03F11403 		add	r3, r3, #20
 5590 2d08 1B78     		ldrb	r3, [r3]
 5591 2d0a 0133     		adds	r3, r3, #1
 5592 2d0c 07F5A252 		add	r2, r7, #5184
 5593 2d10 02F11402 		add	r2, r2, #20
 5594 2d14 1370     		strb	r3, [r2]
 5595              	.L246:
 790:..\src/command_processing.c ****         }      
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 131


 791:..\src/command_processing.c ****         
 792:..\src/command_processing.c ****         // Add struct index after an empty bit
 793:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 794:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5596              		.loc 1 794 0
 5597 2d16 07F5A253 		add	r3, r7, #5184
 5598 2d1a 03F11503 		add	r3, r3, #21
 5599 2d1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5600 2d20 07F11803 		add	r3, r7, #24
 5601 2d24 103B     		subs	r3, r3, #16
 5602 2d26 1B68     		ldr	r3, [r3]
 5603 2d28 1344     		add	r3, r3, r2
 5604 2d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5605 2d2c 002B     		cmp	r3, #0
 5606 2d2e 31D1     		bne	.L247
 795:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 5607              		.loc 1 795 0
 5608 2d30 07F5A253 		add	r3, r7, #5184
 5609 2d34 03F11503 		add	r3, r3, #21
 5610 2d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5611 2d3a 3222     		movs	r2, #50
 5612 2d3c 02FB03F3 		mul	r3, r2, r3
 5613 2d40 1A1D     		adds	r2, r3, #4
 5614 2d42 07F5A253 		add	r3, r7, #5184
 5615 2d46 03F11303 		add	r3, r3, #19
 5616 2d4a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5617 2d4c 07F5A253 		add	r3, r7, #5184
 5618 2d50 03F11503 		add	r3, r3, #21
 5619 2d54 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5620 2d56 07F11803 		add	r3, r7, #24
 5621 2d5a 143B     		subs	r3, r3, #20
 5622 2d5c 1B68     		ldr	r3, [r3]
 5623 2d5e 0344     		add	r3, r3, r0
 5624 2d60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5625 2d62 03FB01F3 		mul	r3, r3, r1
 5626 2d66 1A44     		add	r2, r2, r3
 5627 2d68 07F5A253 		add	r3, r7, #5184
 5628 2d6c 03F11203 		add	r3, r3, #18
 5629 2d70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5630 2d72 1344     		add	r3, r3, r2
 5631 2d74 9A1C     		adds	r2, r3, #2
 5632 2d76 07F5A253 		add	r3, r7, #5184
 5633 2d7a 03F11503 		add	r3, r3, #21
 5634 2d7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5635 2d80 07F11803 		add	r3, r7, #24
 5636 2d84 183B     		subs	r3, r3, #24
 5637 2d86 1B68     		ldr	r3, [r3]
 5638 2d88 0B44     		add	r3, r3, r1
 5639 2d8a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5640 2d8c 07F15803 		add	r3, r7, #88
 5641 2d90 9954     		strb	r1, [r3, r2]
 5642 2d92 30E0     		b	.L248
 5643              	.L247:
 796:..\src/command_processing.c ****         }
 797:..\src/command_processing.c ****         else {
 798:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 5644              		.loc 1 798 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 132


 5645 2d94 07F5A253 		add	r3, r7, #5184
 5646 2d98 03F11503 		add	r3, r3, #21
 5647 2d9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5648 2d9e 3222     		movs	r2, #50
 5649 2da0 02FB03F3 		mul	r3, r2, r3
 5650 2da4 1A1D     		adds	r2, r3, #4
 5651 2da6 07F5A253 		add	r3, r7, #5184
 5652 2daa 03F11303 		add	r3, r3, #19
 5653 2dae 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5654 2db0 07F5A253 		add	r3, r7, #5184
 5655 2db4 03F11503 		add	r3, r3, #21
 5656 2db8 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5657 2dba 07F11803 		add	r3, r7, #24
 5658 2dbe 143B     		subs	r3, r3, #20
 5659 2dc0 1B68     		ldr	r3, [r3]
 5660 2dc2 0344     		add	r3, r3, r0
 5661 2dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5662 2dc6 03FB01F3 		mul	r3, r3, r1
 5663 2dca 1A44     		add	r2, r2, r3
 5664 2dcc 07F5A253 		add	r3, r7, #5184
 5665 2dd0 03F11203 		add	r3, r3, #18
 5666 2dd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5667 2dd6 1344     		add	r3, r3, r2
 5668 2dd8 5A1C     		adds	r2, r3, #1
 5669 2dda 07F5A253 		add	r3, r7, #5184
 5670 2dde 03F11503 		add	r3, r3, #21
 5671 2de2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5672 2de4 07F11803 		add	r3, r7, #24
 5673 2de8 183B     		subs	r3, r3, #24
 5674 2dea 1B68     		ldr	r3, [r3]
 5675 2dec 0B44     		add	r3, r3, r1
 5676 2dee 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5677 2df0 07F15803 		add	r3, r7, #88
 5678 2df4 9954     		strb	r1, [r3, r2]
 5679              	.L248:
 373:..\src/command_processing.c ****         
 5680              		.loc 1 373 0 discriminator 2
 5681 2df6 07F5A253 		add	r3, r7, #5184
 5682 2dfa 03F11503 		add	r3, r3, #21
 5683 2dfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5684 2e00 0133     		adds	r3, r3, #1
 5685 2e02 07F5A252 		add	r2, r7, #5184
 5686 2e06 02F11502 		add	r2, r2, #21
 5687 2e0a 1370     		strb	r3, [r2]
 5688              	.L63:
 373:..\src/command_processing.c ****         
 5689              		.loc 1 373 0 is_stmt 0 discriminator 1
 5690 2e0c 07F5A253 		add	r3, r7, #5184
 5691 2e10 03F11503 		add	r3, r3, #21
 5692 2e14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5693 2e16 462B     		cmp	r3, #70
 5694 2e18 7DF666A9 		bls	.L249
 799:..\src/command_processing.c ****         }
 800:..\src/command_processing.c ****     }
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c ****     // Add menu
 803:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 133


 5695              		.loc 1 803 0 is_stmt 1
 5696 2e1c 0023     		movs	r3, #0
 5697 2e1e 07F5A252 		add	r2, r7, #5184
 5698 2e22 02F11602 		add	r2, r2, #22
 5699 2e26 1370     		strb	r3, [r2]
 5700 2e28 70E0     		b	.L250
 5701              	.L253:
 804:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5702              		.loc 1 804 0
 5703 2e2a 07F5A253 		add	r3, r7, #5184
 5704 2e2e 03F11603 		add	r3, r3, #22
 5705 2e32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5706 2e34 9B00     		lsls	r3, r3, #2
 5707 2e36 07F5A352 		add	r2, r7, #5216
 5708 2e3a 02F11C02 		add	r2, r2, #28
 5709 2e3e 1268     		ldr	r2, [r2]
 5710 2e40 1344     		add	r3, r3, r2
 5711 2e42 1B68     		ldr	r3, [r3]
 5712 2e44 1846     		mov	r0, r3
 5713 2e46 FFF7FEFF 		bl	strlen
 5714 2e4a 0346     		mov	r3, r0
 5715 2e4c 07F5A252 		add	r2, r7, #5184
 5716 2e50 02F11202 		add	r2, r2, #18
 5717 2e54 1370     		strb	r3, [r2]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5718              		.loc 1 805 0
 5719 2e56 07F5A253 		add	r3, r7, #5184
 5720 2e5a 03F11203 		add	r3, r3, #18
 5721 2e5e 1B78     		ldrb	r3, [r3]
 5722 2e60 07F5A252 		add	r2, r7, #5184
 5723 2e64 02F11702 		add	r2, r2, #23
 5724 2e68 1370     		strb	r3, [r2]
 5725 2e6a 3DE0     		b	.L251
 5726              	.L252:
 806:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 5727              		.loc 1 806 0 discriminator 3
 5728 2e6c 07F5A253 		add	r3, r7, #5184
 5729 2e70 03F11603 		add	r3, r3, #22
 5730 2e74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5731 2e76 9622     		movs	r2, #150
 5732 2e78 02FB03F3 		mul	r3, r2, r3
 5733 2e7c 03F55E62 		add	r2, r3, #3552
 5734 2e80 07F5A253 		add	r3, r7, #5184
 5735 2e84 03F11203 		add	r3, r3, #18
 5736 2e88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5737 2e8a 1A44     		add	r2, r2, r3
 5738 2e8c 07F5A253 		add	r3, r7, #5184
 5739 2e90 03F11703 		add	r3, r3, #23
 5740 2e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5741 2e96 D31A     		subs	r3, r2, r3
 5742 2e98 07F5A252 		add	r2, r7, #5184
 5743 2e9c 02F11602 		add	r2, r2, #22
 5744 2ea0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5745 2ea2 9200     		lsls	r2, r2, #2
 5746 2ea4 07F5A351 		add	r1, r7, #5216
 5747 2ea8 01F11C01 		add	r1, r1, #28
 5748 2eac 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 134


 5749 2eae 0A44     		add	r2, r2, r1
 5750 2eb0 1268     		ldr	r2, [r2]
 5751 2eb2 07F5A251 		add	r1, r7, #5184
 5752 2eb6 01F11201 		add	r1, r1, #18
 5753 2eba 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 5754 2ebc 07F5A251 		add	r1, r7, #5184
 5755 2ec0 01F11701 		add	r1, r1, #23
 5756 2ec4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 5757 2ec6 411A     		subs	r1, r0, r1
 5758 2ec8 0A44     		add	r2, r2, r1
 5759 2eca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5760 2ecc 07F15802 		add	r2, r7, #88
 5761 2ed0 D154     		strb	r1, [r2, r3]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5762              		.loc 1 805 0 discriminator 3
 5763 2ed2 07F5A253 		add	r3, r7, #5184
 5764 2ed6 03F11703 		add	r3, r3, #23
 5765 2eda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5766 2edc 013B     		subs	r3, r3, #1
 5767 2ede 07F5A252 		add	r2, r7, #5184
 5768 2ee2 02F11702 		add	r2, r2, #23
 5769 2ee6 1370     		strb	r3, [r2]
 5770              	.L251:
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5771              		.loc 1 805 0 is_stmt 0 discriminator 1
 5772 2ee8 07F5A253 		add	r3, r7, #5184
 5773 2eec 03F11703 		add	r3, r3, #23
 5774 2ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5775 2ef2 002B     		cmp	r3, #0
 5776 2ef4 BAD1     		bne	.L252
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5777              		.loc 1 803 0 is_stmt 1 discriminator 2
 5778 2ef6 07F5A253 		add	r3, r7, #5184
 5779 2efa 03F11603 		add	r3, r3, #22
 5780 2efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5781 2f00 0133     		adds	r3, r3, #1
 5782 2f02 07F5A252 		add	r2, r7, #5184
 5783 2f06 02F11602 		add	r2, r2, #22
 5784 2f0a 1370     		strb	r3, [r2]
 5785              	.L250:
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 5786              		.loc 1 803 0 is_stmt 0 discriminator 1
 5787 2f0c 07F5A253 		add	r3, r7, #5184
 5788 2f10 03F11603 		add	r3, r3, #22
 5789 2f14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5790 2f16 092B     		cmp	r3, #9
 5791 2f18 87D9     		bls	.L253
 807:..\src/command_processing.c ****     }
 808:..\src/command_processing.c ****     
 809:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 5792              		.loc 1 809 0 is_stmt 1
 5793 2f1a 07F5A253 		add	r3, r7, #5184
 5794 2f1e 03F11003 		add	r3, r3, #16
 5795 2f22 1B88     		ldrh	r3, [r3]
 5796 2f24 5C1E     		subs	r4, r3, #1
 5797 2f26 07F5A253 		add	r3, r7, #5184
 5798 2f2a 03F11003 		add	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 135


 5799 2f2e 1B88     		ldrh	r3, [r3]	@ movhi
 5800 2f30 DBB2     		uxtb	r3, r3
 5801 2f32 013B     		subs	r3, r3, #1
 5802 2f34 DAB2     		uxtb	r2, r3
 5803 2f36 07F15803 		add	r3, r7, #88
 5804 2f3a 1146     		mov	r1, r2
 5805 2f3c 1846     		mov	r0, r3
 5806 2f3e FFF7FEFF 		bl	LCRChecksum
 5807 2f42 0346     		mov	r3, r0
 5808 2f44 1A46     		mov	r2, r3
 5809 2f46 07F15803 		add	r3, r7, #88
 5810 2f4a 1A55     		strb	r2, [r3, r4]
 810:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 5811              		.loc 1 810 0
 5812 2f4c 07F5A253 		add	r3, r7, #5184
 5813 2f50 03F11003 		add	r3, r3, #16
 5814 2f54 1A88     		ldrh	r2, [r3]
 5815 2f56 07F15803 		add	r3, r7, #88
 5816 2f5a 1146     		mov	r1, r2
 5817 2f5c 1846     		mov	r0, r3
 5818 2f5e FFF7FEFF 		bl	commWrite
 811:..\src/command_processing.c **** }
 5819              		.loc 1 811 0
 5820 2f62 00BF     		nop
 5821 2f64 07F5A257 		add	r7, r7, #5184
 5822 2f68 1C37     		adds	r7, r7, #28
 5823              		.cfi_def_cfa_offset 20
 5824 2f6a BD46     		mov	sp, r7
 5825              		.cfi_def_cfa_register 13
 5826              		@ sp needed
 5827 2f6c F0BD     		pop	{r4, r5, r6, r7, pc}
 5828              		.cfi_endproc
 5829              	.LFE67:
 5830              		.size	get_param_list, .-get_param_list
 5831 2f6e 00BF     		.section	.rodata
 5832              		.align	2
 5833              	.LC113:
 5834 01b0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 5834      204E6F6E 
 5834      650A3120 
 5834      2D3E204C 
 5834      6F772028 
 5835 01e0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 5835      74657220 
 5835      72656164 
 5835      290A3220 
 5835      2D3E2048 
 5836 0210 62697420 		.ascii	"bit register read)\012\000"
 5836      72656769 
 5836      73746572 
 5836      20726561 
 5836      64290A00 
 5837              		.align	2
 5838              	.LC114:
 5839 0224 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 5839      20557362 
 5839      0A31202D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 136


 5839      3E204861 
 5839      6E646C65 
 5840 024f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 5840      20454D47 
 5840      20496E74 
 5840      65677261 
 5840      6C0A3420 
 5841 027c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 5841      616E6365 
 5841      640A3620 
 5841      2D3E2045 
 5841      4D472070 
 5842              		.align	2
 5843              	.LC115:
 5844 02a0 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 5844      20506F73 
 5844      6974696F 
 5844      6E0A3120 
 5844      2D3E2050 
 5845 02ca 6F736974 		.ascii	"osition and Current\012\000"
 5845      696F6E20 
 5845      616E6420 
 5845      43757272 
 5845      656E740A 
 5846 02df 00       		.align	2
 5847              	.LC116:
 5848 02e0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 5848      20446561 
 5848      63746976 
 5848      61746520 
 5848      5B4E4F5D 
 5849 030a 0000     		.align	2
 5850              	.LC117:
 5851 030c 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 5851      20526967 
 5851      68740A31 
 5851      202D3E20 
 5851      4C656674 
 5852 0322 0000     		.align	2
 5853              	.LC118:
 5854 0324 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 5854      204F4646 
 5854      0A31202D 
 5854      3E204F4E 
 5854      0A546865 
 5855 034b 00       		.align	2
 5856              	.LC119:
 5857 034c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 5857      204E6F6E 
 5857      650A3120 
 5857      2D3E2053 
 5857      442F5254 
 5858 0379 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 5858      0A33202D 
 5858      3E204F74 
 5858      68657220 
 5858      5B4E2F41 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 137


 5859 03a4 00       		.ascii	"\000"
 5860 03a5 000000   		.align	2
 5861              	.LC120:
 5862 03a8 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 5862      2047656E 
 5862      65726963 
 5862      20757365 
 5862      720A3120 
 5863 03d2 20626F61 		.ascii	" board will reset\012\000"
 5863      72642077 
 5863      696C6C20 
 5863      72657365 
 5863      740A00
 5864 03e5 000000   		.align	2
 5865              	.LC121:
 5866 03e8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 5866      204D4333 
 5866      33383837 
 5866      20285374 
 5866      616E6461 
 5867 0418 290A5468 		.ascii	")\012The board will reset\012\000"
 5867      6520626F 
 5867      61726420 
 5867      77696C6C 
 5867      20726573 
 5868              		.align	2
 5869              	.LC122:
 5870 0430 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 5870      20534F46 
 5870      5448414E 
 5870      44205052 
 5870      4F0A3120 
 5871 045d 41495220 		.ascii	"AIR CHAMBERS\012The board will reset\012\000"
 5871      4348414D 
 5871      42455253 
 5871      0A546865 
 5871      20626F61 
 5872              		.align	2
 5873              	.LC0:
 5874 0480 02       		.byte	2
 5875 0481 07       		.byte	7
 5876 0482 07       		.byte	7
 5877 0483 00       		.byte	0
 5878 0484 00       		.byte	0
 5879 0485 00       		.byte	0
 5880 0486 02       		.byte	2
 5881 0487 03       		.byte	3
 5882 0488 07       		.byte	7
 5883 0489 00       		.byte	0
 5884 048a 05       		.byte	5
 5885 048b 05       		.byte	5
 5886 048c 03       		.byte	3
 5887 048d 04       		.byte	4
 5888 048e 00       		.byte	0
 5889 048f 06       		.byte	6
 5890 0490 02       		.byte	2
 5891 0491 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 138


 5892 0492 01       		.byte	1
 5893 0493 00       		.byte	0
 5894 0494 07       		.byte	7
 5895 0495 02       		.byte	2
 5896 0496 05       		.byte	5
 5897 0497 05       		.byte	5
 5898 0498 05       		.byte	5
 5899 0499 00       		.byte	0
 5900 049a 00       		.byte	0
 5901 049b 00       		.byte	0
 5902 049c 00       		.byte	0
 5903 049d 00       		.byte	0
 5904 049e 00       		.byte	0
 5905 049f 02       		.byte	2
 5906 04a0 00       		.byte	0
 5907 04a1 02       		.byte	2
 5908 04a2 00       		.byte	0
 5909 04a3 09       		.byte	9
 5910 04a4 02       		.byte	2
 5911 04a5 00       		.byte	0
 5912 04a6 02       		.byte	2
 5913 04a7 00       		.byte	0
 5914 04a8 02       		.byte	2
 5915 04a9 01       		.byte	1
 5916 04aa 00       		.byte	0
 5917 04ab 07       		.byte	7
 5918 04ac 07       		.byte	7
 5919 04ad 00       		.byte	0
 5920 04ae 00       		.byte	0
 5921 04af 00       		.byte	0
 5922 04b0 02       		.byte	2
 5923 04b1 03       		.byte	3
 5924 04b2 07       		.byte	7
 5925 04b3 00       		.byte	0
 5926 04b4 05       		.byte	5
 5927 04b5 05       		.byte	5
 5928 04b6 03       		.byte	3
 5929 04b7 00       		.byte	0
 5930 04b8 01       		.byte	1
 5931 04b9 00       		.byte	0
 5932 04ba 07       		.byte	7
 5933 04bb 02       		.byte	2
 5934 04bc 00       		.byte	0
 5935 04bd 02       		.byte	2
 5936 04be 00       		.byte	0
 5937 04bf 02       		.byte	2
 5938 04c0 01       		.byte	1
 5939 04c1 02       		.byte	2
 5940 04c2 02       		.byte	2
 5941 04c3 00       		.byte	0
 5942 04c4 02       		.byte	2
 5943 04c5 02       		.byte	2
 5944 04c6 00       		.byte	0
 5945 04c7 00       		.byte	0
 5946 04c8 02       		.byte	2
 5947 04c9 05       		.byte	5
 5948 04ca 07       		.byte	7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 139


 5949 04cb 07       		.byte	7
 5950              		.align	2
 5951              	.LC1:
 5952 04cc 31202D20 		.ascii	"1 - Device ID:\000"
 5952      44657669 
 5952      63652049 
 5952      443A00
 5953 04db 00       		.align	2
 5954              	.LC2:
 5955 04dc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 5955      506F7369 
 5955      74696F6E 
 5955      20504944 
 5955      205B502C 
 5956              		.align	2
 5957              	.LC3:
 5958 04f8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 5958      43757272 
 5958      656E7420 
 5958      50494420 
 5958      5B502C20 
 5959 0513 00       		.align	2
 5960              	.LC4:
 5961 0514 34202D20 		.ascii	"4 - Startup Activation:\000"
 5961      53746172 
 5961      74757020 
 5961      41637469 
 5961      76617469 
 5962              		.align	2
 5963              	.LC5:
 5964 052c 35202D20 		.ascii	"5 - Input mode:\000"
 5964      496E7075 
 5964      74206D6F 
 5964      64653A00 
 5965              		.align	2
 5966              	.LC6:
 5967 053c 36202D20 		.ascii	"6 - Control mode:\000"
 5967      436F6E74 
 5967      726F6C20 
 5967      6D6F6465 
 5967      3A00
 5968 054e 0000     		.align	2
 5969              	.LC7:
 5970 0550 37202D20 		.ascii	"7 - Resolutions:\000"
 5970      5265736F 
 5970      6C757469 
 5970      6F6E733A 
 5970      00
 5971 0561 000000   		.align	2
 5972              	.LC8:
 5973 0564 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 5973      4D656173 
 5973      7572656D 
 5973      656E7420 
 5973      4F666673 
 5974 057d 000000   		.align	2
 5975              	.LC9:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 140


 5976 0580 39202D20 		.ascii	"9 - Multipliers:\000"
 5976      4D756C74 
 5976      69706C69 
 5976      6572733A 
 5976      00
 5977 0591 000000   		.align	2
 5978              	.LC10:
 5979 0594 3130202D 		.ascii	"10 - Pos. limit active:\000"
 5979      20506F73 
 5979      2E206C69 
 5979      6D697420 
 5979      61637469 
 5980              		.align	2
 5981              	.LC11:
 5982 05ac 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 5982      20506F73 
 5982      2E206C69 
 5982      6D697473 
 5982      205B696E 
 5983 05c9 000000   		.align	2
 5984              	.LC12:
 5985 05cc 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 5985      204D6178 
 5985      20737465 
 5985      7073205B 
 5985      6E65672C 
 5986 05e7 00       		.align	2
 5987              	.LC13:
 5988 05e8 3133202D 		.ascii	"13 - Current limit:\000"
 5988      20437572 
 5988      72656E74 
 5988      206C696D 
 5988      69743A00 
 5989              		.align	2
 5990              	.LC14:
 5991 05fc 3134202D 		.ascii	"14 - EMG thresholds:\000"
 5991      20454D47 
 5991      20746872 
 5991      6573686F 
 5991      6C64733A 
 5992 0611 000000   		.align	2
 5993              	.LC15:
 5994 0614 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 5994      20454D47 
 5994      2063616C 
 5994      69627261 
 5994      74696F6E 
 5995 0635 000000   		.align	2
 5996              	.LC16:
 5997 0638 3136202D 		.ascii	"16 - EMG max values:\000"
 5997      20454D47 
 5997      206D6178 
 5997      2076616C 
 5997      7565733A 
 5998 064d 000000   		.align	2
 5999              	.LC17:
 6000 0650 3137202D 		.ascii	"17 - EMG max speeds:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 141


 6000      20454D47 
 6000      206D6178 
 6000      20737065 
 6000      6564733A 
 6001 0665 000000   		.align	2
 6002              	.LC18:
 6003 0668 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6003      20416273 
 6003      6F6C7574 
 6003      6520656E 
 6003      636F6465 
 6004              		.align	2
 6005              	.LC19:
 6006 0688 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6006      204D6F74 
 6006      6F722068 
 6006      616E646C 
 6006      65207261 
 6007 06a1 000000   		.align	2
 6008              	.LC20:
 6009 06a4 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6009      2050574D 
 6009      20726573 
 6009      63616C69 
 6009      6E673A00 
 6010              		.align	2
 6011              	.LC21:
 6012 06b8 3231202D 		.ascii	"21 - Current lookup:\000"
 6012      20437572 
 6012      72656E74 
 6012      206C6F6F 
 6012      6B75703A 
 6013 06cd 000000   		.align	2
 6014              	.LC22:
 6015 06d0 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6015      20446174 
 6015      65206F66 
 6015      206D6169 
 6015      6E74656E 
 6016 06f2 0000     		.align	2
 6017              	.LC23:
 6018 06f4 3233202D 		.ascii	"23 - Rest position:\000"
 6018      20526573 
 6018      7420706F 
 6018      73697469 
 6018      6F6E3A00 
 6019              		.align	2
 6020              	.LC24:
 6021 0708 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6021      20526573 
 6021      7420706F 
 6021      73697469 
 6021      6F6E2074 
 6022              		.align	2
 6023              	.LC25:
 6024 072c 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6024      20526573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 142


 6024      74207665 
 6024      6C20636C 
 6024      6F737572 
 6025 074f 00       		.align	2
 6026              	.LC26:
 6027 0750 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6027      20526573 
 6027      7420706F 
 6027      73697469 
 6027      6F6E2065 
 6028              		.align	2
 6029              	.LC27:
 6030 076c 3237202D 		.ascii	"27 - EMG inversion:\000"
 6030      20454D47 
 6030      20696E76 
 6030      65727369 
 6030      6F6E3A00 
 6031              		.align	2
 6032              	.LC28:
 6033 0780 3238202D 		.ascii	"28 - Hand side:\000"
 6033      2048616E 
 6033      64207369 
 6033      64653A00 
 6034              		.align	2
 6035              	.LC29:
 6036 0790 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6036      20456E61 
 6036      626C6520 
 6036      494D5573 
 6036      3A00
 6037 07a2 0000     		.align	2
 6038              	.LC30:
 6039 07a4 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6039      20526561 
 6039      64204578 
 6039      70616E73 
 6039      696F6E20 
 6040 07be 0000     		.align	2
 6041              	.LC31:
 6042 07c0 3331202D 		.ascii	"31 - Reset counters:\000"
 6042      20526573 
 6042      65742063 
 6042      6F756E74 
 6042      6572733A 
 6043 07d5 000000   		.align	2
 6044              	.LC32:
 6045 07d8 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6045      204C6173 
 6045      74206368 
 6045      65636B65 
 6045      64205469 
 6046 07fe 0000     		.align	2
 6047              	.LC33:
 6048 0800 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6048      20535049 
 6048      20726561 
 6048      64206465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 143


 6048      6C617920 
 6049 081b 00       		.align	2
 6050              	.LC34:
 6051 081c 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6051      204F6E20 
 6051      626F6172 
 6051      6420494D 
 6051      5520636F 
 6052 0841 000000   		.align	2
 6053              	.LC35:
 6054 0844 3335202D 		.ascii	"35 - User ID:\000"
 6054      20557365 
 6054      72204944 
 6054      3A00
 6055 0852 0000     		.align	2
 6056              	.LC36:
 6057 0854 3336202D 		.ascii	"36 - User code:\000"
 6057      20557365 
 6057      7220636F 
 6057      64653A00 
 6058              		.align	2
 6059              	.LC37:
 6060 0864 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6060      20417373 
 6060      6F636961 
 6060      74656420 
 6060      656E636F 
 6061 0882 0000     		.align	2
 6062              	.LC38:
 6063 0884 3338202D 		.ascii	"38 - Driver type:\000"
 6063      20447269 
 6063      76657220 
 6063      74797065 
 6063      3A00
 6064 0896 0000     		.align	2
 6065              	.LC39:
 6066 0898 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6066      2050574D 
 6066      20726174 
 6066      65206C69 
 6066      6D697465 
 6067 08af 00       		.align	2
 6068              	.LC40:
 6069 08b0 3430202D 		.ascii	"40 - Not reversible:\000"
 6069      204E6F74 
 6069      20726576 
 6069      65727369 
 6069      626C653A 
 6070 08c5 000000   		.align	2
 6071              	.LC41:
 6072 08c8 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6072      20456E63 
 6072      20696478 
 6072      20757365 
 6072      6420666F 
 6073 08e7 00       		.align	2
 6074              	.LC42:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 144


 6075 08e8 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6075      20476561 
 6075      72207061 
 6075      72616D73 
 6075      5B4E312C 
 6076 0906 0000     		.align	2
 6077              	.LC43:
 6078 0908 3433202D 		.ascii	"43 - Use second motor:\000"
 6078      20557365 
 6078      20736563 
 6078      6F6E6420 
 6078      6D6F746F 
 6079 091f 00       		.align	2
 6080              	.LC44:
 6081 0920 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6081      20506F73 
 6081      6974696F 
 6081      6E205049 
 6081      44205B50 
 6082 093d 000000   		.align	2
 6083              	.LC45:
 6084 0940 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6084      20437572 
 6084      72656E74 
 6084      20504944 
 6084      205B502C 
 6085              		.align	2
 6086              	.LC46:
 6087 095c 3436202D 		.ascii	"46 - Startup Activation:\000"
 6087      20537461 
 6087      72747570 
 6087      20416374 
 6087      69766174 
 6088 0975 000000   		.align	2
 6089              	.LC47:
 6090 0978 3437202D 		.ascii	"47 - Input mode:\000"
 6090      20496E70 
 6090      7574206D 
 6090      6F64653A 
 6090      00
 6091 0989 000000   		.align	2
 6092              	.LC48:
 6093 098c 3438202D 		.ascii	"48 - Control mode:\000"
 6093      20436F6E 
 6093      74726F6C 
 6093      206D6F64 
 6093      653A00
 6094 099f 00       		.align	2
 6095              	.LC49:
 6096 09a0 3439202D 		.ascii	"49 - Resolutions:\000"
 6096      20526573 
 6096      6F6C7574 
 6096      696F6E73 
 6096      3A00
 6097 09b2 0000     		.align	2
 6098              	.LC50:
 6099 09b4 3530202D 		.ascii	"50 - Measurement Offsets:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 145


 6099      204D6561 
 6099      73757265 
 6099      6D656E74 
 6099      204F6666 
 6100 09ce 0000     		.align	2
 6101              	.LC51:
 6102 09d0 3531202D 		.ascii	"51 - Multipliers:\000"
 6102      204D756C 
 6102      7469706C 
 6102      69657273 
 6102      3A00
 6103 09e2 0000     		.align	2
 6104              	.LC52:
 6105 09e4 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6105      20506F73 
 6105      2E206C69 
 6105      6D697420 
 6105      61637469 
 6106              		.align	2
 6107              	.LC53:
 6108 09fc 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6108      20506F73 
 6108      2E206C69 
 6108      6D697473 
 6108      205B696E 
 6109 0a19 000000   		.align	2
 6110              	.LC54:
 6111 0a1c 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6111      204D6178 
 6111      20737465 
 6111      7073205B 
 6111      6E65672C 
 6112 0a37 00       		.align	2
 6113              	.LC55:
 6114 0a38 3535202D 		.ascii	"55 - Current limit:\000"
 6114      20437572 
 6114      72656E74 
 6114      206C696D 
 6114      69743A00 
 6115              		.align	2
 6116              	.LC56:
 6117 0a4c 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6117      20416273 
 6117      6F6C7574 
 6117      6520656E 
 6117      636F6465 
 6118              		.align	2
 6119              	.LC57:
 6120 0a6c 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6120      204D6F74 
 6120      6F722068 
 6120      616E646C 
 6120      65207261 
 6121 0a85 000000   		.align	2
 6122              	.LC58:
 6123 0a88 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6123      2050574D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 146


 6123      20726573 
 6123      63616C69 
 6123      6E673A00 
 6124              		.align	2
 6125              	.LC59:
 6126 0a9c 3539202D 		.ascii	"59 - Current lookup:\000"
 6126      20437572 
 6126      72656E74 
 6126      206C6F6F 
 6126      6B75703A 
 6127 0ab1 000000   		.align	2
 6128              	.LC60:
 6129 0ab4 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6129      20417373 
 6129      6F636961 
 6129      74656420 
 6129      656E636F 
 6130 0ad2 0000     		.align	2
 6131              	.LC61:
 6132 0ad4 3631202D 		.ascii	"61 - Driver type:\000"
 6132      20447269 
 6132      76657220 
 6132      74797065 
 6132      3A00
 6133 0ae6 0000     		.align	2
 6134              	.LC62:
 6135 0ae8 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6135      2050574D 
 6135      20726174 
 6135      65206C69 
 6135      6D697465 
 6136 0aff 00       		.align	2
 6137              	.LC63:
 6138 0b00 3633202D 		.ascii	"63 - Not reversible:\000"
 6138      204E6F74 
 6138      20726576 
 6138      65727369 
 6138      626C653A 
 6139 0b15 000000   		.align	2
 6140              	.LC64:
 6141 0b18 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6141      20456E63 
 6141      20696478 
 6141      20757365 
 6141      6420666F 
 6142 0b37 00       		.align	2
 6143              	.LC65:
 6144 0b38 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6144      20476561 
 6144      72207061 
 6144      72616D73 
 6144      5B4E312C 
 6145 0b56 0000     		.align	2
 6146              	.LC66:
 6147 0b58 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 6147      20526561 
 6147      6420656E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 147


 6147      63207261 
 6147      77206C69 
 6148 0b72 0000     		.align	2
 6149              	.LC67:
 6150 0b74 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6150      20526561 
 6150      6420656E 
 6150      63207261 
 6150      77206C69 
 6151 0b8e 0000     		.align	2
 6152              	.LC68:
 6153 0b90 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6153      20526561 
 6153      64206164 
 6153      64697469 
 6153      6F6E616C 
 6154 0baf 00       		.align	2
 6155              	.LC69:
 6156 0bb0 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6156      20414443 
 6156      20636861 
 6156      6E6E656C 
 6156      205B312D 
 6157              		.align	2
 6158              	.LC70:
 6159 0bc8 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6159      20414443 
 6159      20636861 
 6159      6E6E656C 
 6159      205B372D 
 6160 0be1 000000   		.align	2
 6161              	.LC71:
 6162 0be4 3731202D 		.ascii	"71 - Device type:\000"
 6162      20446576 
 6162      69636520 
 6162      74797065 
 6162      3A00
 6163 0bf6 0000     		.align	2
 6164              	.LC72:
 6165 0bf8 3732202D 		.ascii	"72 - Slave communication active:\000"
 6165      20536C61 
 6165      76652063 
 6165      6F6D6D75 
 6165      6E696361 
 6166 0c19 000000   		.align	2
 6167              	.LC73:
 6168 0c1c 3733202D 		.ascii	"73 - Slave ID:\000"
 6168      20536C61 
 6168      76652049 
 6168      443A00
 6169 0c2b 00       		.align	2
 6170              	.LC74:
 6171 0c2c 3734202D 		.ascii	"74 - Maximum slave residual current:\000"
 6171      204D6178 
 6171      696D756D 
 6171      20736C61 
 6171      76652072 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 148


 6172 0c51 000000   		.align	2
 6173              	.LC75:
 6174 0c54 3735202D 		.ascii	"75 - Maximum pressure feedback (kPa):\000"
 6174      204D6178 
 6174      696D756D 
 6174      20707265 
 6174      73737572 
 6175 0c7a 0000     		.align	2
 6176              	.LC76:
 6177 0c7c 3736202D 		.ascii	"76 - Proportional pressure error gain:\000"
 6177      2050726F 
 6177      706F7274 
 6177      696F6E61 
 6177      6C207072 
 6178 0ca3 00       		.align	2
 6179              	.LC112:
 6180 0ca4 CC040000 		.word	.LC1
 6181 0ca8 DC040000 		.word	.LC2
 6182 0cac F8040000 		.word	.LC3
 6183 0cb0 14050000 		.word	.LC4
 6184 0cb4 2C050000 		.word	.LC5
 6185 0cb8 3C050000 		.word	.LC6
 6186 0cbc 50050000 		.word	.LC7
 6187 0cc0 64050000 		.word	.LC8
 6188 0cc4 80050000 		.word	.LC9
 6189 0cc8 94050000 		.word	.LC10
 6190 0ccc AC050000 		.word	.LC11
 6191 0cd0 CC050000 		.word	.LC12
 6192 0cd4 E8050000 		.word	.LC13
 6193 0cd8 FC050000 		.word	.LC14
 6194 0cdc 14060000 		.word	.LC15
 6195 0ce0 38060000 		.word	.LC16
 6196 0ce4 50060000 		.word	.LC17
 6197 0ce8 68060000 		.word	.LC18
 6198 0cec 88060000 		.word	.LC19
 6199 0cf0 A4060000 		.word	.LC20
 6200 0cf4 B8060000 		.word	.LC21
 6201 0cf8 D0060000 		.word	.LC22
 6202 0cfc F4060000 		.word	.LC23
 6203 0d00 08070000 		.word	.LC24
 6204 0d04 2C070000 		.word	.LC25
 6205 0d08 50070000 		.word	.LC26
 6206 0d0c 6C070000 		.word	.LC27
 6207 0d10 80070000 		.word	.LC28
 6208 0d14 90070000 		.word	.LC29
 6209 0d18 A4070000 		.word	.LC30
 6210 0d1c C0070000 		.word	.LC31
 6211 0d20 D8070000 		.word	.LC32
 6212 0d24 00080000 		.word	.LC33
 6213 0d28 1C080000 		.word	.LC34
 6214 0d2c 44080000 		.word	.LC35
 6215 0d30 54080000 		.word	.LC36
 6216 0d34 64080000 		.word	.LC37
 6217 0d38 84080000 		.word	.LC38
 6218 0d3c 98080000 		.word	.LC39
 6219 0d40 B0080000 		.word	.LC40
 6220 0d44 C8080000 		.word	.LC41
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 149


 6221 0d48 E8080000 		.word	.LC42
 6222 0d4c 08090000 		.word	.LC43
 6223 0d50 20090000 		.word	.LC44
 6224 0d54 40090000 		.word	.LC45
 6225 0d58 5C090000 		.word	.LC46
 6226 0d5c 78090000 		.word	.LC47
 6227 0d60 8C090000 		.word	.LC48
 6228 0d64 A0090000 		.word	.LC49
 6229 0d68 B4090000 		.word	.LC50
 6230 0d6c D0090000 		.word	.LC51
 6231 0d70 E4090000 		.word	.LC52
 6232 0d74 FC090000 		.word	.LC53
 6233 0d78 1C0A0000 		.word	.LC54
 6234 0d7c 380A0000 		.word	.LC55
 6235 0d80 4C0A0000 		.word	.LC56
 6236 0d84 6C0A0000 		.word	.LC57
 6237 0d88 880A0000 		.word	.LC58
 6238 0d8c 9C0A0000 		.word	.LC59
 6239 0d90 B40A0000 		.word	.LC60
 6240 0d94 D40A0000 		.word	.LC61
 6241 0d98 E80A0000 		.word	.LC62
 6242 0d9c 000B0000 		.word	.LC63
 6243 0da0 180B0000 		.word	.LC64
 6244 0da4 380B0000 		.word	.LC65
 6245 0da8 580B0000 		.word	.LC66
 6246 0dac 740B0000 		.word	.LC67
 6247 0db0 900B0000 		.word	.LC68
 6248 0db4 B00B0000 		.word	.LC69
 6249 0db8 C80B0000 		.word	.LC70
 6250 0dbc E40B0000 		.word	.LC71
 6251 0dc0 F80B0000 		.word	.LC72
 6252 0dc4 1C0C0000 		.word	.LC73
 6253 0dc8 2C0C0000 		.word	.LC74
 6254 0dcc 540C0000 		.word	.LC75
 6255 0dd0 7C0C0000 		.word	.LC76
 6256              		.align	2
 6257              	.LC78:
 6258 0dd4 03       		.byte	3
 6259 0dd5 01       		.byte	1
 6260 0dd6 02       		.byte	2
 6261 0dd7 03       		.byte	3
 6262 0dd8 03       		.byte	3
 6263 0dd9 03       		.byte	3
 6264 0dda 03       		.byte	3
 6265 0ddb 03       		.byte	3
 6266 0ddc 03       		.byte	3
 6267 0ddd 04       		.byte	4
 6268 0dde 05       		.byte	5
 6269 0ddf 06       		.byte	6
 6270 0de0 03       		.byte	3
 6271 0de1 07       		.byte	7
 6272 0de2 08       		.byte	8
 6273 0de3 09       		.byte	9
 6274 0de4 03       		.byte	3
 6275 0de5 05       		.byte	5
 6276 0de6 03       		.byte	3
 6277 0de7 01       		.byte	1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 150


 6278 0de8 02       		.byte	2
 6279 0de9 03       		.byte	3
 6280 0dea 03       		.byte	3
 6281 0deb 03       		.byte	3
 6282 0dec 09       		.byte	9
 6283 0ded 03       		.byte	3
 6284 0dee 05       		.byte	5
 6285 0def 0A       		.byte	10
 6286 0df0 03       		.byte	3
 6287 0df1 000000   		.align	2
 6288              	.LC79:
 6289 0df4 02       		.byte	2
 6290 0df5 03       		.byte	3
 6291 0df6 08       		.byte	8
 6292 0df7 0B       		.byte	11
 6293 0df8 17       		.byte	23
 6294 0df9 2C       		.byte	44
 6295 0dfa 2D       		.byte	45
 6296 0dfb 32       		.byte	50
 6297 0dfc 35       		.byte	53
 6298 0dfd 000000   		.align	2
 6299              	.LC80:
 6300 0e00 02       		.byte	2
 6301 0e01 03       		.byte	3
 6302 0e02 05       		.byte	5
 6303 0e03 08       		.byte	8
 6304 0e04 0B       		.byte	11
 6305 0e05 17       		.byte	23
 6306 0e06 18       		.byte	24
 6307 0e07 1C       		.byte	28
 6308 0e08 1F       		.byte	31
 6309 0e09 20       		.byte	32
 6310 0e0a 26       		.byte	38
 6311 0e0b 2C       		.byte	44
 6312 0e0c 2D       		.byte	45
 6313 0e0d 2F       		.byte	47
 6314 0e0e 32       		.byte	50
 6315 0e0f 35       		.byte	53
 6316 0e10 3D       		.byte	61
 6317 0e11 47       		.byte	71
 6318              		.section	.text.manage_param_list,"ax",%progbits
 6319              		.align	2
 6320              		.global	manage_param_list
 6321              		.thumb
 6322              		.thumb_func
 6323              		.type	manage_param_list, %function
 6324              	manage_param_list:
 6325              	.LFB68:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 815:..\src/command_processing.c **** //==============================================================================
 816:..\src/command_processing.c **** 
 817:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6326              		.loc 1 817 0
 6327              		.cfi_startproc
 6328              		@ args = 0, pretend = 0, frame = 1256
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 151


 6329              		@ frame_needed = 1, uses_anonymous_args = 0
 6330 0000 B0B5     		push	{r4, r5, r7, lr}
 6331              		.cfi_def_cfa_offset 16
 6332              		.cfi_offset 4, -16
 6333              		.cfi_offset 5, -12
 6334              		.cfi_offset 7, -8
 6335              		.cfi_offset 14, -4
 6336 0002 ADF59F6D 		sub	sp, sp, #1272
 6337              		.cfi_def_cfa_offset 1288
 6338 0006 04AF     		add	r7, sp, #16
 6339              		.cfi_def_cfa 7, 1272
 6340 0008 0246     		mov	r2, r0
 6341 000a BB1D     		adds	r3, r7, #6
 6342 000c 1A80     		strh	r2, [r3]	@ movhi
 818:..\src/command_processing.c ****     uint8 CYDATA i, j;
 819:..\src/command_processing.c ****     uint8 CYDATA sod;
 820:..\src/command_processing.c ****     uint8 PARAM_IDX;
 821:..\src/command_processing.c ****     int16 aux_int16;
 822:..\src/command_processing.c ****     uint16 aux_uint16;
 823:..\src/command_processing.c ****     int32 aux_int32;
 824:..\src/command_processing.c ****     uint32 aux_uint32;
 825:..\src/command_processing.c ****     float aux_float;
 826:..\src/command_processing.c ****  
 827:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6343              		.loc 1 827 0
 6344 000e 0023     		movs	r3, #0
 6345 0010 87F8DD34 		strb	r3, [r7, #1245]
 828:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6346              		.loc 1 828 0
 6347 0014 0123     		movs	r3, #1
 6348 0016 87F8DC34 		strb	r3, [r7, #1244]
 829:..\src/command_processing.c ****     
 830:..\src/command_processing.c ****     // Arrays
 831:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6349              		.loc 1 831 0
 6350 001a 054B     		ldr	r3, .L340
 6351 001c C7F8E034 		str	r3, [r7, #1248]
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6352              		.loc 1 833 0
 6353 0020 BB1D     		adds	r3, r7, #6
 6354 0022 1B88     		ldrh	r3, [r3]
 6355 0024 002B     		cmp	r3, #0
 6356 0026 07D0     		beq	.L279
 834:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6357              		.loc 1 834 0
 6358 0028 024B     		ldr	r3, .L340+4
 6359 002a C7F8E034 		str	r3, [r7, #1248]
 6360 002e 03E0     		b	.L341
 6361              	.L342:
 6362              		.align	2
 6363              	.L340:
 6364 0030 00000000 		.word	c_mem
 6365 0034 00000000 		.word	g_mem
 6366              	.L341:
 6367              	.L279:
 835:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 152


 836:..\src/command_processing.c ****  
 837:..\src/command_processing.c ****     
 838:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 839:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6368              		.loc 1 840 0
 6369 0038 D7F8E034 		ldr	r3, [r7, #1248]
 6370 003c 03F1A002 		add	r2, r3, #160
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6371              		.loc 1 839 0
 6372 0040 07F56673 		add	r3, r7, #920
 6373 0044 1A60     		str	r2, [r3]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6374              		.loc 1 841 0
 6375 0046 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6376 004a 1346     		mov	r3, r2
 6377 004c DB00     		lsls	r3, r3, #3
 6378 004e 9B1A     		subs	r3, r3, r2
 6379 0050 1B01     		lsls	r3, r3, #4
 6380 0052 B033     		adds	r3, r3, #176
 6381 0054 D7F8E024 		ldr	r2, [r7, #1248]
 6382 0058 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6383              		.loc 1 839 0
 6384 005a 07F56673 		add	r3, r7, #920
 6385 005e 5A60     		str	r2, [r3, #4]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6386              		.loc 1 842 0
 6387 0060 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6388 0064 1346     		mov	r3, r2
 6389 0066 DB00     		lsls	r3, r3, #3
 6390 0068 9B1A     		subs	r3, r3, r2
 6391 006a 1B01     		lsls	r3, r3, #4
 6392 006c B833     		adds	r3, r3, #184
 6393 006e D7F8E024 		ldr	r2, [r7, #1248]
 6394 0072 1344     		add	r3, r3, r2
 6395 0074 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6396              		.loc 1 839 0
 6397 0076 07F56673 		add	r3, r7, #920
 6398 007a 9A60     		str	r2, [r3, #8]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6399              		.loc 1 843 0
 6400 007c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6401 0080 1346     		mov	r3, r2
 6402 0082 DB00     		lsls	r3, r3, #3
 6403 0084 9B1A     		subs	r3, r3, r2
 6404 0086 1B01     		lsls	r3, r3, #4
 6405 0088 E033     		adds	r3, r3, #224
 6406 008a D7F8E024 		ldr	r2, [r7, #1248]
 6407 008e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6408              		.loc 1 839 0
 6409 0090 07F56673 		add	r3, r7, #920
 6410 0094 DA60     		str	r2, [r3, #12]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6411              		.loc 1 844 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 153


 6412 0096 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6413 009a 1346     		mov	r3, r2
 6414 009c DB00     		lsls	r3, r3, #3
 6415 009e 9B1A     		subs	r3, r3, r2
 6416 00a0 1B01     		lsls	r3, r3, #4
 6417 00a2 03F58473 		add	r3, r3, #264
 6418 00a6 D7F8E024 		ldr	r2, [r7, #1248]
 6419 00aa 1344     		add	r3, r3, r2
 6420 00ac 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6421              		.loc 1 839 0
 6422 00ae 07F56673 		add	r3, r7, #920
 6423 00b2 1A61     		str	r2, [r3, #16]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6424              		.loc 1 845 0
 6425 00b4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6426 00b8 1346     		mov	r3, r2
 6427 00ba DB00     		lsls	r3, r3, #3
 6428 00bc 9B1A     		subs	r3, r3, r2
 6429 00be 1B01     		lsls	r3, r3, #4
 6430 00c0 03F58473 		add	r3, r3, #264
 6431 00c4 D7F8E024 		ldr	r2, [r7, #1248]
 6432 00c8 1344     		add	r3, r3, r2
 6433 00ca DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6434              		.loc 1 839 0
 6435 00cc 07F56673 		add	r3, r7, #920
 6436 00d0 5A61     		str	r2, [r3, #20]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6437              		.loc 1 846 0
 6438 00d2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6439 00d6 D7F8E014 		ldr	r1, [r7, #1248]
 6440 00da 1346     		mov	r3, r2
 6441 00dc DB00     		lsls	r3, r3, #3
 6442 00de 9B1A     		subs	r3, r3, r2
 6443 00e0 1B01     		lsls	r3, r3, #4
 6444 00e2 0B44     		add	r3, r3, r1
 6445 00e4 03F58873 		add	r3, r3, #272
 6446 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6447 00ea 1A46     		mov	r2, r3
 6448 00ec 1346     		mov	r3, r2
 6449 00ee 5B00     		lsls	r3, r3, #1
 6450 00f0 1344     		add	r3, r3, r2
 6451 00f2 1B01     		lsls	r3, r3, #4
 6452 00f4 03F5C873 		add	r3, r3, #400
 6453 00f8 D7F8E024 		ldr	r2, [r7, #1248]
 6454 00fc 1344     		add	r3, r3, r2
 6455 00fe 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6456              		.loc 1 839 0
 6457 0100 07F56673 		add	r3, r7, #920
 6458 0104 9A61     		str	r2, [r3, #24]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 6459              		.loc 1 847 0
 6460 0106 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6461 010a D7F8E014 		ldr	r1, [r7, #1248]
 6462 010e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 154


 6463 0110 DB00     		lsls	r3, r3, #3
 6464 0112 9B1A     		subs	r3, r3, r2
 6465 0114 1B01     		lsls	r3, r3, #4
 6466 0116 0B44     		add	r3, r3, r1
 6467 0118 03F58873 		add	r3, r3, #272
 6468 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6469 011e 1A46     		mov	r2, r3
 6470 0120 1346     		mov	r3, r2
 6471 0122 5B00     		lsls	r3, r3, #1
 6472 0124 1344     		add	r3, r3, r2
 6473 0126 1B01     		lsls	r3, r3, #4
 6474 0128 03F5CC73 		add	r3, r3, #408
 6475 012c D7F8E024 		ldr	r2, [r7, #1248]
 6476 0130 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6477              		.loc 1 839 0
 6478 0132 07F56673 		add	r3, r7, #920
 6479 0136 DA61     		str	r2, [r3, #28]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6480              		.loc 1 848 0
 6481 0138 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6482 013c D7F8E014 		ldr	r1, [r7, #1248]
 6483 0140 1346     		mov	r3, r2
 6484 0142 DB00     		lsls	r3, r3, #3
 6485 0144 9B1A     		subs	r3, r3, r2
 6486 0146 1B01     		lsls	r3, r3, #4
 6487 0148 0B44     		add	r3, r3, r1
 6488 014a 03F58873 		add	r3, r3, #272
 6489 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6490 0150 1A46     		mov	r2, r3
 6491 0152 1346     		mov	r3, r2
 6492 0154 5B00     		lsls	r3, r3, #1
 6493 0156 1344     		add	r3, r3, r2
 6494 0158 1B01     		lsls	r3, r3, #4
 6495 015a 03F5D073 		add	r3, r3, #416
 6496 015e D7F8E024 		ldr	r2, [r7, #1248]
 6497 0162 1344     		add	r3, r3, r2
 6498 0164 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6499              		.loc 1 839 0
 6500 0166 07F56673 		add	r3, r7, #920
 6501 016a 1A62     		str	r2, [r3, #32]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6502              		.loc 1 849 0
 6503 016c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6504 0170 1346     		mov	r3, r2
 6505 0172 DB00     		lsls	r3, r3, #3
 6506 0174 9B1A     		subs	r3, r3, r2
 6507 0176 1B01     		lsls	r3, r3, #4
 6508 0178 E033     		adds	r3, r3, #224
 6509 017a D7F8E024 		ldr	r2, [r7, #1248]
 6510 017e 1344     		add	r3, r3, r2
 6511 0180 DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6512              		.loc 1 839 0
 6513 0182 07F56673 		add	r3, r7, #920
 6514 0186 5A62     		str	r2, [r3, #36]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 155


 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6515              		.loc 1 850 0
 6516 0188 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6517 018c 1346     		mov	r3, r2
 6518 018e DB00     		lsls	r3, r3, #3
 6519 0190 9B1A     		subs	r3, r3, r2
 6520 0192 1B01     		lsls	r3, r3, #4
 6521 0194 E033     		adds	r3, r3, #224
 6522 0196 D7F8E024 		ldr	r2, [r7, #1248]
 6523 019a 1344     		add	r3, r3, r2
 6524 019c 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6525              		.loc 1 839 0
 6526 019e 07F56673 		add	r3, r7, #920
 6527 01a2 9A62     		str	r2, [r3, #40]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 6528              		.loc 1 851 0
 6529 01a4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6530 01a8 1346     		mov	r3, r2
 6531 01aa DB00     		lsls	r3, r3, #3
 6532 01ac 9B1A     		subs	r3, r3, r2
 6533 01ae 1B01     		lsls	r3, r3, #4
 6534 01b0 E833     		adds	r3, r3, #232
 6535 01b2 D7F8E024 		ldr	r2, [r7, #1248]
 6536 01b6 1344     		add	r3, r3, r2
 6537 01b8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6538              		.loc 1 839 0
 6539 01ba 07F56673 		add	r3, r7, #920
 6540 01be DA62     		str	r2, [r3, #44]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 6541              		.loc 1 852 0
 6542 01c0 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6543 01c4 1346     		mov	r3, r2
 6544 01c6 DB00     		lsls	r3, r3, #3
 6545 01c8 9B1A     		subs	r3, r3, r2
 6546 01ca 1B01     		lsls	r3, r3, #4
 6547 01cc 03F58473 		add	r3, r3, #264
 6548 01d0 D7F8E024 		ldr	r2, [r7, #1248]
 6549 01d4 1344     		add	r3, r3, r2
 6550 01d6 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6551              		.loc 1 839 0
 6552 01d8 07F56673 		add	r3, r7, #920
 6553 01dc 1A63     		str	r2, [r3, #48]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 6554              		.loc 1 853 0
 6555 01de D7F8E034 		ldr	r3, [r7, #1248]
 6556 01e2 03F5F872 		add	r2, r3, #496
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6557              		.loc 1 839 0
 6558 01e6 07F56673 		add	r3, r7, #920
 6559 01ea 5A63     		str	r2, [r3, #52]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 6560              		.loc 1 854 0
 6561 01ec D7F8E034 		ldr	r3, [r7, #1248]
 6562 01f0 03F5FF72 		add	r2, r3, #510
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 156


 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6563              		.loc 1 839 0
 6564 01f4 07F56673 		add	r3, r7, #920
 6565 01f8 9A63     		str	r2, [r3, #56]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 6566              		.loc 1 855 0
 6567 01fa D7F8E034 		ldr	r3, [r7, #1248]
 6568 01fe 03F5FA72 		add	r2, r3, #500
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6569              		.loc 1 839 0
 6570 0202 07F56673 		add	r3, r7, #920
 6571 0206 DA63     		str	r2, [r3, #60]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 6572              		.loc 1 856 0
 6573 0208 D7F8E034 		ldr	r3, [r7, #1248]
 6574 020c 03F5FE72 		add	r2, r3, #508
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6575              		.loc 1 839 0
 6576 0210 07F56673 		add	r3, r7, #920
 6577 0214 1A64     		str	r2, [r3, #64]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 6578              		.loc 1 857 0
 6579 0216 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6580 021a D7F8E014 		ldr	r1, [r7, #1248]
 6581 021e 1346     		mov	r3, r2
 6582 0220 DB00     		lsls	r3, r3, #3
 6583 0222 9B1A     		subs	r3, r3, r2
 6584 0224 1B01     		lsls	r3, r3, #4
 6585 0226 0B44     		add	r3, r3, r1
 6586 0228 03F58873 		add	r3, r3, #272
 6587 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6588 022e 1A46     		mov	r2, r3
 6589 0230 1346     		mov	r3, r2
 6590 0232 5B00     		lsls	r3, r3, #1
 6591 0234 1344     		add	r3, r3, r2
 6592 0236 1B01     		lsls	r3, r3, #4
 6593 0238 03F5D873 		add	r3, r3, #432
 6594 023c D7F8E024 		ldr	r2, [r7, #1248]
 6595 0240 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6596              		.loc 1 839 0
 6597 0242 07F56673 		add	r3, r7, #920
 6598 0246 5A64     		str	r2, [r3, #68]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 6599              		.loc 1 858 0
 6600 0248 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6601 024c D7F8E014 		ldr	r1, [r7, #1248]
 6602 0250 1346     		mov	r3, r2
 6603 0252 DB00     		lsls	r3, r3, #3
 6604 0254 9B1A     		subs	r3, r3, r2
 6605 0256 1B01     		lsls	r3, r3, #4
 6606 0258 0B44     		add	r3, r3, r1
 6607 025a 03F58873 		add	r3, r3, #272
 6608 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6609 0260 1A46     		mov	r2, r3
 6610 0262 1346     		mov	r3, r2
 6611 0264 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 157


 6612 0266 1344     		add	r3, r3, r2
 6613 0268 1B01     		lsls	r3, r3, #4
 6614 026a 03F5D873 		add	r3, r3, #432
 6615 026e D7F8E024 		ldr	r2, [r7, #1248]
 6616 0272 1344     		add	r3, r3, r2
 6617 0274 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6618              		.loc 1 839 0
 6619 0276 07F56673 		add	r3, r7, #920
 6620 027a 9A64     		str	r2, [r3, #72]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 6621              		.loc 1 859 0
 6622 027c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6623 0280 1346     		mov	r3, r2
 6624 0282 DB00     		lsls	r3, r3, #3
 6625 0284 9B1A     		subs	r3, r3, r2
 6626 0286 1B01     		lsls	r3, r3, #4
 6627 0288 E033     		adds	r3, r3, #224
 6628 028a D7F8E024 		ldr	r2, [r7, #1248]
 6629 028e 1344     		add	r3, r3, r2
 6630 0290 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6631              		.loc 1 839 0
 6632 0292 07F56673 		add	r3, r7, #920
 6633 0296 DA64     		str	r2, [r3, #76]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 6634              		.loc 1 860 0
 6635 0298 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6636 029c 1346     		mov	r3, r2
 6637 029e DB00     		lsls	r3, r3, #3
 6638 02a0 9B1A     		subs	r3, r3, r2
 6639 02a2 1B01     		lsls	r3, r3, #4
 6640 02a4 F033     		adds	r3, r3, #240
 6641 02a6 D7F8E024 		ldr	r2, [r7, #1248]
 6642 02aa 1344     		add	r3, r3, r2
 6643 02ac 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6644              		.loc 1 839 0
 6645 02ae 07F56673 		add	r3, r7, #920
 6646 02b2 1A65     		str	r2, [r3, #80]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 6647              		.loc 1 861 0
 6648 02b4 D7F8E034 		ldr	r3, [r7, #1248]
 6649 02b8 03F1A102 		add	r2, r3, #161
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6650              		.loc 1 839 0
 6651 02bc 07F56673 		add	r3, r7, #920
 6652 02c0 5A65     		str	r2, [r3, #84]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 6653              		.loc 1 862 0
 6654 02c2 D7F8E034 		ldr	r3, [r7, #1248]
 6655 02c6 03F52872 		add	r2, r3, #672
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6656              		.loc 1 839 0
 6657 02ca 07F56673 		add	r3, r7, #920
 6658 02ce 9A65     		str	r2, [r3, #88]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 158


 6659              		.loc 1 863 0
 6660 02d0 D7F8E034 		ldr	r3, [r7, #1248]
 6661 02d4 03F52972 		add	r2, r3, #676
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6662              		.loc 1 839 0
 6663 02d8 07F56673 		add	r3, r7, #920
 6664 02dc DA65     		str	r2, [r3, #92]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 6665              		.loc 1 864 0
 6666 02de D7F8E034 		ldr	r3, [r7, #1248]
 6667 02e2 03F52A72 		add	r2, r3, #680
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6668              		.loc 1 839 0
 6669 02e6 07F56673 		add	r3, r7, #920
 6670 02ea 1A66     		str	r2, [r3, #96]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 6671              		.loc 1 865 0
 6672 02ec D7F8E034 		ldr	r3, [r7, #1248]
 6673 02f0 03F52B72 		add	r2, r3, #684
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6674              		.loc 1 839 0
 6675 02f4 07F56673 		add	r3, r7, #920
 6676 02f8 5A66     		str	r2, [r3, #100]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 6677              		.loc 1 866 0
 6678 02fa D7F8E034 		ldr	r3, [r7, #1248]
 6679 02fe 03F2FF12 		addw	r2, r3, #511
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6680              		.loc 1 839 0
 6681 0302 07F56673 		add	r3, r7, #920
 6682 0306 9A66     		str	r2, [r3, #104]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 6683              		.loc 1 867 0
 6684 0308 D7F8E034 		ldr	r3, [r7, #1248]
 6685 030c 03F1A702 		add	r2, r3, #167
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6686              		.loc 1 839 0
 6687 0310 07F56673 		add	r3, r7, #920
 6688 0314 DA66     		str	r2, [r3, #108]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 6689              		.loc 1 868 0
 6690 0316 D7F8E034 		ldr	r3, [r7, #1248]
 6691 031a 03F50072 		add	r2, r3, #512
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6692              		.loc 1 839 0
 6693 031e 07F56673 		add	r3, r7, #920
 6694 0322 1A67     		str	r2, [r3, #112]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 6695              		.loc 1 869 0
 6696 0324 D7F8E034 		ldr	r3, [r7, #1248]
 6697 0328 03F22622 		addw	r2, r3, #550
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6698              		.loc 1 839 0
 6699 032c 07F56673 		add	r3, r7, #920
 6700 0330 5A67     		str	r2, [r3, #116]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 6701              		.loc 1 870 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 159


 6702 0332 D7F8E034 		ldr	r3, [r7, #1248]
 6703 0336 03F1A802 		add	r2, r3, #168
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6704              		.loc 1 839 0
 6705 033a 07F56673 		add	r3, r7, #920
 6706 033e 9A67     		str	r2, [r3, #120]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 6707              		.loc 1 871 0
 6708 0340 D7F8E034 		ldr	r3, [r7, #1248]
 6709 0344 03F50872 		add	r2, r3, #544
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6710              		.loc 1 839 0
 6711 0348 07F56673 		add	r3, r7, #920
 6712 034c DA67     		str	r2, [r3, #124]
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 6713              		.loc 1 872 0
 6714 034e D7F8E034 		ldr	r3, [r7, #1248]
 6715 0352 03F20122 		addw	r2, r3, #513
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6716              		.loc 1 839 0
 6717 0356 07F56673 		add	r3, r7, #920
 6718 035a C3F88020 		str	r2, [r3, #128]
 873:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 6719              		.loc 1 873 0
 6720 035e D7F8E034 		ldr	r3, [r7, #1248]
 6721 0362 03F20222 		addw	r2, r3, #514
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6722              		.loc 1 839 0
 6723 0366 07F56673 		add	r3, r7, #920
 6724 036a C3F88420 		str	r2, [r3, #132]
 874:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 6725              		.loc 1 874 0
 6726 036e D7F8E034 		ldr	r3, [r7, #1248]
 6727 0372 03F1AB02 		add	r2, r3, #171
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6728              		.loc 1 839 0
 6729 0376 07F56673 		add	r3, r7, #920
 6730 037a C3F88820 		str	r2, [r3, #136]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 6731              		.loc 1 875 0
 6732 037e D7F8E034 		ldr	r3, [r7, #1248]
 6733 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 6734 0386 1233     		adds	r3, r3, #18
 6735 0388 5B01     		lsls	r3, r3, #5
 6736 038a D7F8E024 		ldr	r2, [r7, #1248]
 6737 038e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6738              		.loc 1 839 0
 6739 0390 07F56673 		add	r3, r7, #920
 6740 0394 C3F88C20 		str	r2, [r3, #140]
 876:..\src/command_processing.c ****         
 877:..\src/command_processing.c ****         // GENERIC PARAMS
 878:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 6741              		.loc 1 878 0
 6742 0398 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6743 039c 1346     		mov	r3, r2
 6744 039e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 160


 6745 03a0 9B1A     		subs	r3, r3, r2
 6746 03a2 1B01     		lsls	r3, r3, #4
 6747 03a4 03F58873 		add	r3, r3, #272
 6748 03a8 D7F8E024 		ldr	r2, [r7, #1248]
 6749 03ac 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6750              		.loc 1 839 0
 6751 03ae 07F56673 		add	r3, r7, #920
 6752 03b2 C3F89020 		str	r2, [r3, #144]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 6753              		.loc 1 879 0
 6754 03b6 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6755 03ba 1346     		mov	r3, r2
 6756 03bc DB00     		lsls	r3, r3, #3
 6757 03be 9B1A     		subs	r3, r3, r2
 6758 03c0 1B01     		lsls	r3, r3, #4
 6759 03c2 E033     		adds	r3, r3, #224
 6760 03c4 D7F8E024 		ldr	r2, [r7, #1248]
 6761 03c8 1344     		add	r3, r3, r2
 6762 03ca 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6763              		.loc 1 839 0
 6764 03cc 07F56673 		add	r3, r7, #920
 6765 03d0 C3F89420 		str	r2, [r3, #148]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 6766              		.loc 1 880 0
 6767 03d4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6768 03d8 1346     		mov	r3, r2
 6769 03da DB00     		lsls	r3, r3, #3
 6770 03dc 9B1A     		subs	r3, r3, r2
 6771 03de 1B01     		lsls	r3, r3, #4
 6772 03e0 03F58873 		add	r3, r3, #272
 6773 03e4 D7F8E024 		ldr	r2, [r7, #1248]
 6774 03e8 1344     		add	r3, r3, r2
 6775 03ea 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6776              		.loc 1 839 0
 6777 03ec 07F56673 		add	r3, r7, #920
 6778 03f0 C3F89820 		str	r2, [r3, #152]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 6779              		.loc 1 881 0
 6780 03f4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6781 03f8 1346     		mov	r3, r2
 6782 03fa DB00     		lsls	r3, r3, #3
 6783 03fc 9B1A     		subs	r3, r3, r2
 6784 03fe 1B01     		lsls	r3, r3, #4
 6785 0400 03F58873 		add	r3, r3, #272
 6786 0404 D7F8E024 		ldr	r2, [r7, #1248]
 6787 0408 1344     		add	r3, r3, r2
 6788 040a 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6789              		.loc 1 839 0
 6790 040c 07F56673 		add	r3, r7, #920
 6791 0410 C3F89C20 		str	r2, [r3, #156]
 882:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6792              		.loc 1 882 0
 6793 0414 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 161


 6794 0418 D7F8E014 		ldr	r1, [r7, #1248]
 6795 041c 1346     		mov	r3, r2
 6796 041e DB00     		lsls	r3, r3, #3
 6797 0420 9B1A     		subs	r3, r3, r2
 6798 0422 1B01     		lsls	r3, r3, #4
 6799 0424 0B44     		add	r3, r3, r1
 6800 0426 03F58873 		add	r3, r3, #272
 6801 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6802 042c 1A46     		mov	r2, r3
 6803 042e 1346     		mov	r3, r2
 6804 0430 5B00     		lsls	r3, r3, #1
 6805 0432 1344     		add	r3, r3, r2
 6806 0434 1B01     		lsls	r3, r3, #4
 6807 0436 03F5D873 		add	r3, r3, #432
 6808 043a D7F8E024 		ldr	r2, [r7, #1248]
 6809 043e 1344     		add	r3, r3, r2
 6810 0440 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6811              		.loc 1 839 0
 6812 0442 07F56673 		add	r3, r7, #920
 6813 0446 C3F8A020 		str	r2, [r3, #160]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 6814              		.loc 1 883 0
 6815 044a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6816 044e D7F8E014 		ldr	r1, [r7, #1248]
 6817 0452 1346     		mov	r3, r2
 6818 0454 DB00     		lsls	r3, r3, #3
 6819 0456 9B1A     		subs	r3, r3, r2
 6820 0458 1B01     		lsls	r3, r3, #4
 6821 045a 0B44     		add	r3, r3, r1
 6822 045c 03F58873 		add	r3, r3, #272
 6823 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6824 0462 1A46     		mov	r2, r3
 6825 0464 1346     		mov	r3, r2
 6826 0466 5B00     		lsls	r3, r3, #1
 6827 0468 1344     		add	r3, r3, r2
 6828 046a 1B01     		lsls	r3, r3, #4
 6829 046c 03F5D873 		add	r3, r3, #432
 6830 0470 D7F8E024 		ldr	r2, [r7, #1248]
 6831 0474 1344     		add	r3, r3, r2
 6832 0476 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6833              		.loc 1 839 0
 6834 0478 07F56673 		add	r3, r7, #920
 6835 047c C3F8A420 		str	r2, [r3, #164]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 6836              		.loc 1 884 0
 6837 0480 D7F8E034 		ldr	r3, [r7, #1248]
 6838 0484 03F1A902 		add	r2, r3, #169
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6839              		.loc 1 839 0
 6840 0488 07F56673 		add	r3, r7, #920
 6841 048c C3F8A820 		str	r2, [r3, #168]
 885:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 6842              		.loc 1 885 0
 6843 0490 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6844 0494 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 162


 6845 0496 DB00     		lsls	r3, r3, #3
 6846 0498 9B1A     		subs	r3, r3, r2
 6847 049a 1B01     		lsls	r3, r3, #4
 6848 049c B033     		adds	r3, r3, #176
 6849 049e D7F8E024 		ldr	r2, [r7, #1248]
 6850 04a2 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 839 0
 6852 04a4 07F56673 		add	r3, r7, #920
 6853 04a8 C3F8AC20 		str	r2, [r3, #172]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 6854              		.loc 1 886 0
 6855 04ac 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6856 04b0 1346     		mov	r3, r2
 6857 04b2 DB00     		lsls	r3, r3, #3
 6858 04b4 9B1A     		subs	r3, r3, r2
 6859 04b6 1B01     		lsls	r3, r3, #4
 6860 04b8 B833     		adds	r3, r3, #184
 6861 04ba D7F8E024 		ldr	r2, [r7, #1248]
 6862 04be 1344     		add	r3, r3, r2
 6863 04c0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6864              		.loc 1 839 0
 6865 04c2 07F56673 		add	r3, r7, #920
 6866 04c6 C3F8B020 		str	r2, [r3, #176]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 6867              		.loc 1 887 0
 6868 04ca 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6869 04ce 1346     		mov	r3, r2
 6870 04d0 DB00     		lsls	r3, r3, #3
 6871 04d2 9B1A     		subs	r3, r3, r2
 6872 04d4 1B01     		lsls	r3, r3, #4
 6873 04d6 E033     		adds	r3, r3, #224
 6874 04d8 D7F8E024 		ldr	r2, [r7, #1248]
 6875 04dc 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6876              		.loc 1 839 0
 6877 04de 07F56673 		add	r3, r7, #920
 6878 04e2 C3F8B420 		str	r2, [r3, #180]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 6879              		.loc 1 888 0
 6880 04e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6881 04ea 1346     		mov	r3, r2
 6882 04ec DB00     		lsls	r3, r3, #3
 6883 04ee 9B1A     		subs	r3, r3, r2
 6884 04f0 1B01     		lsls	r3, r3, #4
 6885 04f2 03F58473 		add	r3, r3, #264
 6886 04f6 D7F8E024 		ldr	r2, [r7, #1248]
 6887 04fa 1344     		add	r3, r3, r2
 6888 04fc 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6889              		.loc 1 839 0
 6890 04fe 07F56673 		add	r3, r7, #920
 6891 0502 C3F8B820 		str	r2, [r3, #184]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 6892              		.loc 1 889 0
 6893 0506 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 163


 6894 050a 1346     		mov	r3, r2
 6895 050c DB00     		lsls	r3, r3, #3
 6896 050e 9B1A     		subs	r3, r3, r2
 6897 0510 1B01     		lsls	r3, r3, #4
 6898 0512 03F58473 		add	r3, r3, #264
 6899 0516 D7F8E024 		ldr	r2, [r7, #1248]
 6900 051a 1344     		add	r3, r3, r2
 6901 051c DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6902              		.loc 1 839 0
 6903 051e 07F56673 		add	r3, r7, #920
 6904 0522 C3F8BC20 		str	r2, [r3, #188]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 6905              		.loc 1 890 0
 6906 0526 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6907 052a D7F8E014 		ldr	r1, [r7, #1248]
 6908 052e 1346     		mov	r3, r2
 6909 0530 DB00     		lsls	r3, r3, #3
 6910 0532 9B1A     		subs	r3, r3, r2
 6911 0534 1B01     		lsls	r3, r3, #4
 6912 0536 0B44     		add	r3, r3, r1
 6913 0538 03F58873 		add	r3, r3, #272
 6914 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6915 053e 1A46     		mov	r2, r3
 6916 0540 1346     		mov	r3, r2
 6917 0542 5B00     		lsls	r3, r3, #1
 6918 0544 1344     		add	r3, r3, r2
 6919 0546 1B01     		lsls	r3, r3, #4
 6920 0548 03F5C873 		add	r3, r3, #400
 6921 054c D7F8E024 		ldr	r2, [r7, #1248]
 6922 0550 1344     		add	r3, r3, r2
 6923 0552 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6924              		.loc 1 839 0
 6925 0554 07F56673 		add	r3, r7, #920
 6926 0558 C3F8C020 		str	r2, [r3, #192]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 6927              		.loc 1 891 0
 6928 055c 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6929 0560 D7F8E014 		ldr	r1, [r7, #1248]
 6930 0564 1346     		mov	r3, r2
 6931 0566 DB00     		lsls	r3, r3, #3
 6932 0568 9B1A     		subs	r3, r3, r2
 6933 056a 1B01     		lsls	r3, r3, #4
 6934 056c 0B44     		add	r3, r3, r1
 6935 056e 03F58873 		add	r3, r3, #272
 6936 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6937 0574 1A46     		mov	r2, r3
 6938 0576 1346     		mov	r3, r2
 6939 0578 5B00     		lsls	r3, r3, #1
 6940 057a 1344     		add	r3, r3, r2
 6941 057c 1B01     		lsls	r3, r3, #4
 6942 057e 03F5CC73 		add	r3, r3, #408
 6943 0582 D7F8E024 		ldr	r2, [r7, #1248]
 6944 0586 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6945              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 164


 6946 0588 07F56673 		add	r3, r7, #920
 6947 058c C3F8C420 		str	r2, [r3, #196]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 6948              		.loc 1 892 0
 6949 0590 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6950 0594 D7F8E014 		ldr	r1, [r7, #1248]
 6951 0598 1346     		mov	r3, r2
 6952 059a DB00     		lsls	r3, r3, #3
 6953 059c 9B1A     		subs	r3, r3, r2
 6954 059e 1B01     		lsls	r3, r3, #4
 6955 05a0 0B44     		add	r3, r3, r1
 6956 05a2 03F58873 		add	r3, r3, #272
 6957 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6958 05a8 1A46     		mov	r2, r3
 6959 05aa 1346     		mov	r3, r2
 6960 05ac 5B00     		lsls	r3, r3, #1
 6961 05ae 1344     		add	r3, r3, r2
 6962 05b0 1B01     		lsls	r3, r3, #4
 6963 05b2 03F5D073 		add	r3, r3, #416
 6964 05b6 D7F8E024 		ldr	r2, [r7, #1248]
 6965 05ba 1344     		add	r3, r3, r2
 6966 05bc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6967              		.loc 1 839 0
 6968 05be 07F56673 		add	r3, r7, #920
 6969 05c2 C3F8C820 		str	r2, [r3, #200]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 6970              		.loc 1 893 0
 6971 05c6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6972 05ca 1346     		mov	r3, r2
 6973 05cc DB00     		lsls	r3, r3, #3
 6974 05ce 9B1A     		subs	r3, r3, r2
 6975 05d0 1B01     		lsls	r3, r3, #4
 6976 05d2 E033     		adds	r3, r3, #224
 6977 05d4 D7F8E024 		ldr	r2, [r7, #1248]
 6978 05d8 1344     		add	r3, r3, r2
 6979 05da DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6980              		.loc 1 839 0
 6981 05dc 07F56673 		add	r3, r7, #920
 6982 05e0 C3F8CC20 		str	r2, [r3, #204]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 6983              		.loc 1 894 0
 6984 05e4 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6985 05e8 1346     		mov	r3, r2
 6986 05ea DB00     		lsls	r3, r3, #3
 6987 05ec 9B1A     		subs	r3, r3, r2
 6988 05ee 1B01     		lsls	r3, r3, #4
 6989 05f0 E033     		adds	r3, r3, #224
 6990 05f2 D7F8E024 		ldr	r2, [r7, #1248]
 6991 05f6 1344     		add	r3, r3, r2
 6992 05f8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6993              		.loc 1 839 0
 6994 05fa 07F56673 		add	r3, r7, #920
 6995 05fe C3F8D020 		str	r2, [r3, #208]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 165


 6996              		.loc 1 895 0
 6997 0602 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6998 0606 1346     		mov	r3, r2
 6999 0608 DB00     		lsls	r3, r3, #3
 7000 060a 9B1A     		subs	r3, r3, r2
 7001 060c 1B01     		lsls	r3, r3, #4
 7002 060e E833     		adds	r3, r3, #232
 7003 0610 D7F8E024 		ldr	r2, [r7, #1248]
 7004 0614 1344     		add	r3, r3, r2
 7005 0616 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7006              		.loc 1 839 0
 7007 0618 07F56673 		add	r3, r7, #920
 7008 061c C3F8D420 		str	r2, [r3, #212]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7009              		.loc 1 896 0
 7010 0620 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7011 0624 1346     		mov	r3, r2
 7012 0626 DB00     		lsls	r3, r3, #3
 7013 0628 9B1A     		subs	r3, r3, r2
 7014 062a 1B01     		lsls	r3, r3, #4
 7015 062c 03F58473 		add	r3, r3, #264
 7016 0630 D7F8E024 		ldr	r2, [r7, #1248]
 7017 0634 1344     		add	r3, r3, r2
 7018 0636 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7019              		.loc 1 839 0
 7020 0638 07F56673 		add	r3, r7, #920
 7021 063c C3F8D820 		str	r2, [r3, #216]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7022              		.loc 1 897 0
 7023 0640 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7024 0644 D7F8E014 		ldr	r1, [r7, #1248]
 7025 0648 1346     		mov	r3, r2
 7026 064a DB00     		lsls	r3, r3, #3
 7027 064c 9B1A     		subs	r3, r3, r2
 7028 064e 1B01     		lsls	r3, r3, #4
 7029 0650 0B44     		add	r3, r3, r1
 7030 0652 03F58873 		add	r3, r3, #272
 7031 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7032 0658 1A46     		mov	r2, r3
 7033 065a 1346     		mov	r3, r2
 7034 065c 5B00     		lsls	r3, r3, #1
 7035 065e 1344     		add	r3, r3, r2
 7036 0660 1B01     		lsls	r3, r3, #4
 7037 0662 03F5D873 		add	r3, r3, #432
 7038 0666 D7F8E024 		ldr	r2, [r7, #1248]
 7039 066a 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7040              		.loc 1 839 0
 7041 066c 07F56673 		add	r3, r7, #920
 7042 0670 C3F8DC20 		str	r2, [r3, #220]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 7043              		.loc 1 898 0
 7044 0674 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7045 0678 D7F8E014 		ldr	r1, [r7, #1248]
 7046 067c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 166


 7047 067e DB00     		lsls	r3, r3, #3
 7048 0680 9B1A     		subs	r3, r3, r2
 7049 0682 1B01     		lsls	r3, r3, #4
 7050 0684 0B44     		add	r3, r3, r1
 7051 0686 03F58873 		add	r3, r3, #272
 7052 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7053 068c 1A46     		mov	r2, r3
 7054 068e 1346     		mov	r3, r2
 7055 0690 5B00     		lsls	r3, r3, #1
 7056 0692 1344     		add	r3, r3, r2
 7057 0694 1B01     		lsls	r3, r3, #4
 7058 0696 03F5D873 		add	r3, r3, #432
 7059 069a D7F8E024 		ldr	r2, [r7, #1248]
 7060 069e 1344     		add	r3, r3, r2
 7061 06a0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7062              		.loc 1 839 0
 7063 06a2 07F56673 		add	r3, r7, #920
 7064 06a6 C3F8E020 		str	r2, [r3, #224]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7065              		.loc 1 899 0
 7066 06aa 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7067 06ae 1346     		mov	r3, r2
 7068 06b0 DB00     		lsls	r3, r3, #3
 7069 06b2 9B1A     		subs	r3, r3, r2
 7070 06b4 1B01     		lsls	r3, r3, #4
 7071 06b6 E033     		adds	r3, r3, #224
 7072 06b8 D7F8E024 		ldr	r2, [r7, #1248]
 7073 06bc 1344     		add	r3, r3, r2
 7074 06be 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7075              		.loc 1 839 0
 7076 06c0 07F56673 		add	r3, r7, #920
 7077 06c4 C3F8E420 		str	r2, [r3, #228]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7078              		.loc 1 900 0
 7079 06c8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7080 06cc 1346     		mov	r3, r2
 7081 06ce DB00     		lsls	r3, r3, #3
 7082 06d0 9B1A     		subs	r3, r3, r2
 7083 06d2 1B01     		lsls	r3, r3, #4
 7084 06d4 F033     		adds	r3, r3, #240
 7085 06d6 D7F8E024 		ldr	r2, [r7, #1248]
 7086 06da 1344     		add	r3, r3, r2
 7087 06dc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7088              		.loc 1 839 0
 7089 06de 07F56673 		add	r3, r7, #920
 7090 06e2 C3F8E820 		str	r2, [r3, #232]
 901:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7091              		.loc 1 901 0
 7092 06e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7093 06ea 1346     		mov	r3, r2
 7094 06ec DB00     		lsls	r3, r3, #3
 7095 06ee 9B1A     		subs	r3, r3, r2
 7096 06f0 1B01     		lsls	r3, r3, #4
 7097 06f2 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 167


 7098 06f6 D7F8E024 		ldr	r2, [r7, #1248]
 7099 06fa 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7100              		.loc 1 839 0
 7101 06fc 07F56673 		add	r3, r7, #920
 7102 0700 C3F8EC20 		str	r2, [r3, #236]
 902:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7103              		.loc 1 902 0
 7104 0704 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7105 0708 1346     		mov	r3, r2
 7106 070a DB00     		lsls	r3, r3, #3
 7107 070c 9B1A     		subs	r3, r3, r2
 7108 070e 1B01     		lsls	r3, r3, #4
 7109 0710 E033     		adds	r3, r3, #224
 7110 0712 D7F8E024 		ldr	r2, [r7, #1248]
 7111 0716 1344     		add	r3, r3, r2
 7112 0718 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7113              		.loc 1 839 0
 7114 071a 07F56673 		add	r3, r7, #920
 7115 071e C3F8F020 		str	r2, [r3, #240]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7116              		.loc 1 903 0
 7117 0722 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7118 0726 1346     		mov	r3, r2
 7119 0728 DB00     		lsls	r3, r3, #3
 7120 072a 9B1A     		subs	r3, r3, r2
 7121 072c 1B01     		lsls	r3, r3, #4
 7122 072e 03F58873 		add	r3, r3, #272
 7123 0732 D7F8E024 		ldr	r2, [r7, #1248]
 7124 0736 1344     		add	r3, r3, r2
 7125 0738 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7126              		.loc 1 839 0
 7127 073a 07F56673 		add	r3, r7, #920
 7128 073e C3F8F420 		str	r2, [r3, #244]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7129              		.loc 1 904 0
 7130 0742 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7131 0746 1346     		mov	r3, r2
 7132 0748 DB00     		lsls	r3, r3, #3
 7133 074a 9B1A     		subs	r3, r3, r2
 7134 074c 1B01     		lsls	r3, r3, #4
 7135 074e 03F58873 		add	r3, r3, #272
 7136 0752 D7F8E024 		ldr	r2, [r7, #1248]
 7137 0756 1344     		add	r3, r3, r2
 7138 0758 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7139              		.loc 1 839 0
 7140 075a 07F56673 		add	r3, r7, #920
 7141 075e C3F8F820 		str	r2, [r3, #248]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7142              		.loc 1 905 0
 7143 0762 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7144 0766 D7F8E014 		ldr	r1, [r7, #1248]
 7145 076a 1346     		mov	r3, r2
 7146 076c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 168


 7147 076e 9B1A     		subs	r3, r3, r2
 7148 0770 1B01     		lsls	r3, r3, #4
 7149 0772 0B44     		add	r3, r3, r1
 7150 0774 03F58873 		add	r3, r3, #272
 7151 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7152 077a 1A46     		mov	r2, r3
 7153 077c 1346     		mov	r3, r2
 7154 077e 5B00     		lsls	r3, r3, #1
 7155 0780 1344     		add	r3, r3, r2
 7156 0782 1B01     		lsls	r3, r3, #4
 7157 0784 03F5D873 		add	r3, r3, #432
 7158 0788 D7F8E024 		ldr	r2, [r7, #1248]
 7159 078c 1344     		add	r3, r3, r2
 7160 078e 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7161              		.loc 1 839 0
 7162 0790 07F56673 		add	r3, r7, #920
 7163 0794 C3F8FC20 		str	r2, [r3, #252]
 906:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7164              		.loc 1 906 0
 7165 0798 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7166 079c D7F8E014 		ldr	r1, [r7, #1248]
 7167 07a0 1346     		mov	r3, r2
 7168 07a2 DB00     		lsls	r3, r3, #3
 7169 07a4 9B1A     		subs	r3, r3, r2
 7170 07a6 1B01     		lsls	r3, r3, #4
 7171 07a8 0B44     		add	r3, r3, r1
 7172 07aa 03F58873 		add	r3, r3, #272
 7173 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7174 07b0 1A46     		mov	r2, r3
 7175 07b2 1346     		mov	r3, r2
 7176 07b4 5B00     		lsls	r3, r3, #1
 7177 07b6 1344     		add	r3, r3, r2
 7178 07b8 1B01     		lsls	r3, r3, #4
 7179 07ba 03F5D873 		add	r3, r3, #432
 7180 07be D7F8E024 		ldr	r2, [r7, #1248]
 7181 07c2 1344     		add	r3, r3, r2
 7182 07c4 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7183              		.loc 1 839 0
 7184 07c6 07F56673 		add	r3, r7, #920
 7185 07ca C3F80021 		str	r2, [r3, #256]
 907:..\src/command_processing.c ****         
 908:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7186              		.loc 1 908 0
 7187 07ce D7F8E034 		ldr	r3, [r7, #1248]
 7188 07d2 03F5C872 		add	r2, r3, #400
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7189              		.loc 1 839 0
 7190 07d6 07F56673 		add	r3, r7, #920
 7191 07da C3F80421 		str	r2, [r3, #260]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7192              		.loc 1 909 0
 7193 07de D7F8E034 		ldr	r3, [r7, #1248]
 7194 07e2 03F5E072 		add	r2, r3, #448
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7195              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 169


 7196 07e6 07F56673 		add	r3, r7, #920
 7197 07ea C3F80821 		str	r2, [r3, #264]
 910:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7198              		.loc 1 910 0
 7199 07ee D7F8E034 		ldr	r3, [r7, #1248]
 7200 07f2 03F22722 		addw	r2, r3, #551
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7201              		.loc 1 839 0
 7202 07f6 07F56673 		add	r3, r7, #920
 7203 07fa C3F80C21 		str	r2, [r3, #268]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7204              		.loc 1 911 0
 7205 07fe D7F8E034 		ldr	r3, [r7, #1248]
 7206 0802 03F50A72 		add	r2, r3, #552
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7207              		.loc 1 839 0
 7208 0806 07F56673 		add	r3, r7, #920
 7209 080a C3F81021 		str	r2, [r3, #272]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 7210              		.loc 1 912 0
 7211 080e D7F8E034 		ldr	r3, [r7, #1248]
 7212 0812 03F22E22 		addw	r2, r3, #558
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7213              		.loc 1 839 0
 7214 0816 07F56673 		add	r3, r7, #920
 7215 081a C3F81421 		str	r2, [r3, #276]
 913:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7216              		.loc 1 913 0
 7217 081e D7F8E034 		ldr	r3, [r7, #1248]
 7218 0822 03F1AC02 		add	r2, r3, #172
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7219              		.loc 1 839 0
 7220 0826 07F56673 		add	r3, r7, #920
 7221 082a C3F81821 		str	r2, [r3, #280]
 914:..\src/command_processing.c ****         
 915:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7222              		.loc 1 915 0
 7223 082e D7F8E034 		ldr	r3, [r7, #1248]
 7224 0832 03F52C72 		add	r2, r3, #688
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7225              		.loc 1 839 0
 7226 0836 07F56673 		add	r3, r7, #920
 7227 083a C3F81C21 		str	r2, [r3, #284]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7228              		.loc 1 916 0
 7229 083e D7F8E034 		ldr	r3, [r7, #1248]
 7230 0842 03F2B122 		addw	r2, r3, #689
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7231              		.loc 1 839 0
 7232 0846 07F56673 		add	r3, r7, #920
 7233 084a C3F82021 		str	r2, [r3, #288]
 917:..\src/command_processing.c ****         
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 7234              		.loc 1 918 0
 7235 084e D7F8E034 		ldr	r3, [r7, #1248]
 7236 0852 03F53072 		add	r2, r3, #704
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 170


 7237              		.loc 1 839 0
 7238 0856 07F56673 		add	r3, r7, #920
 7239 085a C3F82421 		str	r2, [r3, #292]
 919:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7240              		.loc 1 919 0
 7241 085e D7F8E034 		ldr	r3, [r7, #1248]
 7242 0862 03F53172 		add	r2, r3, #708
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 839 0
 7244 0866 07F56673 		add	r3, r7, #920
 7245 086a C3F82821 		str	r2, [r3, #296]
 920:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7246              		.loc 1 920 0
 7247 086e D7F8E034 		ldr	r3, [r7, #1248]
 7248 0872 03F53272 		add	r2, r3, #712
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7249              		.loc 1 839 0
 7250 0876 07F56673 		add	r3, r7, #920
 7251 087a C3F82C21 		str	r2, [r3, #300]
 921:..\src/command_processing.c ****     };
 922:..\src/command_processing.c ****     
 923:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7252              		.loc 1 923 0
 7253 087e 07F55373 		add	r3, r7, #844
 7254 0882 F44A     		ldr	r2, .L343
 7255 0884 1846     		mov	r0, r3
 7256 0886 1146     		mov	r1, r2
 7257 0888 4C23     		movs	r3, #76
 7258 088a 1A46     		mov	r2, r3
 7259 088c FFF7FEFF 		bl	memcpy
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 925:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 926:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 927:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 928:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 929:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 931:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 932:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 933:..\src/command_processing.c ****         
 934:..\src/command_processing.c ****         // GENERIC PARAMS
 935:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 936:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 937:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 938:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 939:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 940:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 941:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 942:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 943:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG,
 944:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT      
 945:..\src/command_processing.c ****     };
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7260              		.loc 1 947 0
 7261 0890 07F54073 		add	r3, r7, #768
 7262 0894 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 171


 7263 0896 1A70     		strb	r2, [r3]
 7264 0898 07F54073 		add	r3, r7, #768
 7265 089c 0322     		movs	r2, #3
 7266 089e 5A70     		strb	r2, [r3, #1]
 7267 08a0 07F54073 		add	r3, r7, #768
 7268 08a4 0322     		movs	r2, #3
 7269 08a6 9A70     		strb	r2, [r3, #2]
 7270 08a8 07F54073 		add	r3, r7, #768
 7271 08ac 0122     		movs	r2, #1
 7272 08ae DA70     		strb	r2, [r3, #3]
 7273 08b0 07F54073 		add	r3, r7, #768
 7274 08b4 0122     		movs	r2, #1
 7275 08b6 1A71     		strb	r2, [r3, #4]
 7276 08b8 07F54073 		add	r3, r7, #768
 7277 08bc 0122     		movs	r2, #1
 7278 08be 5A71     		strb	r2, [r3, #5]
 7279 08c0 07F54073 		add	r3, r7, #768
 7280 08c4 0322     		movs	r2, #3
 7281 08c6 9A71     		strb	r2, [r3, #6]
 7282 08c8 07F54073 		add	r3, r7, #768
 7283 08cc 0322     		movs	r2, #3
 7284 08ce DA71     		strb	r2, [r3, #7]
 7285 08d0 07F54073 		add	r3, r7, #768
 7286 08d4 0322     		movs	r2, #3
 7287 08d6 1A72     		strb	r2, [r3, #8]
 7288 08d8 07F54073 		add	r3, r7, #768
 7289 08dc 0122     		movs	r2, #1
 7290 08de 5A72     		strb	r2, [r3, #9]
 7291 08e0 07F54073 		add	r3, r7, #768
 7292 08e4 0222     		movs	r2, #2
 7293 08e6 9A72     		strb	r2, [r3, #10]
 7294 08e8 07F54073 		add	r3, r7, #768
 7295 08ec 0222     		movs	r2, #2
 7296 08ee DA72     		strb	r2, [r3, #11]
 7297 08f0 07F54073 		add	r3, r7, #768
 7298 08f4 0122     		movs	r2, #1
 7299 08f6 1A73     		strb	r2, [r3, #12]
 7300 08f8 07F54073 		add	r3, r7, #768
 7301 08fc 0222     		movs	r2, #2
 7302 08fe 5A73     		strb	r2, [r3, #13]
 7303 0900 07F54073 		add	r3, r7, #768
 7304 0904 0122     		movs	r2, #1
 7305 0906 9A73     		strb	r2, [r3, #14]
 7306 0908 07F54073 		add	r3, r7, #768
 7307 090c 0222     		movs	r2, #2
 7308 090e DA73     		strb	r2, [r3, #15]
 7309 0910 07F54073 		add	r3, r7, #768
 7310 0914 0222     		movs	r2, #2
 7311 0916 1A74     		strb	r2, [r3, #16]
 7312 0918 07F54073 		add	r3, r7, #768
 7313 091c 0122     		movs	r2, #1
 7314 091e 5A74     		strb	r2, [r3, #17]
 7315 0920 07F54073 		add	r3, r7, #768
 7316 0924 0122     		movs	r2, #1
 7317 0926 9A74     		strb	r2, [r3, #18]
 7318 0928 07F54073 		add	r3, r7, #768
 7319 092c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 172


 7320 092e DA74     		strb	r2, [r3, #19]
 7321 0930 07F54073 		add	r3, r7, #768
 7322 0934 0622     		movs	r2, #6
 7323 0936 1A75     		strb	r2, [r3, #20]
 7324 0938 07F54073 		add	r3, r7, #768
 7325 093c 0322     		movs	r2, #3
 7326 093e 5A75     		strb	r2, [r3, #21]
 7327 0940 07F54073 		add	r3, r7, #768
 7328 0944 0122     		movs	r2, #1
 7329 0946 9A75     		strb	r2, [r3, #22]
 7330 0948 07F54073 		add	r3, r7, #768
 7331 094c 0122     		movs	r2, #1
 7332 094e DA75     		strb	r2, [r3, #23]
 7333 0950 07F54073 		add	r3, r7, #768
 7334 0954 0122     		movs	r2, #1
 7335 0956 1A76     		strb	r2, [r3, #24]
 7336 0958 07F54073 		add	r3, r7, #768
 7337 095c 0122     		movs	r2, #1
 7338 095e 5A76     		strb	r2, [r3, #25]
 7339 0960 07F54073 		add	r3, r7, #768
 7340 0964 0122     		movs	r2, #1
 7341 0966 9A76     		strb	r2, [r3, #26]
 7342 0968 07F54073 		add	r3, r7, #768
 7343 096c 0122     		movs	r2, #1
 7344 096e DA76     		strb	r2, [r3, #27]
 7345 0970 07F54073 		add	r3, r7, #768
 7346 0974 0122     		movs	r2, #1
 7347 0976 1A77     		strb	r2, [r3, #28]
 7348 0978 07F54073 		add	r3, r7, #768
 7349 097c 0122     		movs	r2, #1
 7350 097e 5A77     		strb	r2, [r3, #29]
 7351 0980 07F54073 		add	r3, r7, #768
 7352 0984 0122     		movs	r2, #1
 7353 0986 9A77     		strb	r2, [r3, #30]
 7354 0988 07F54073 		add	r3, r7, #768
 7355 098c 0622     		movs	r2, #6
 7356 098e DA77     		strb	r2, [r3, #31]
 7357 0990 07F54073 		add	r3, r7, #768
 7358 0994 0122     		movs	r2, #1
 7359 0996 83F82020 		strb	r2, [r3, #32]
 7360 099a 07F54073 		add	r3, r7, #768
 7361 099e 0522     		movs	r2, #5
 7362 09a0 83F82120 		strb	r2, [r3, #33]
 7363 09a4 07F54073 		add	r3, r7, #768
 7364 09a8 0122     		movs	r2, #1
 7365 09aa 83F82220 		strb	r2, [r3, #34]
 7366 09ae 07F54073 		add	r3, r7, #768
 7367 09b2 0622     		movs	r2, #6
 7368 09b4 83F82320 		strb	r2, [r3, #35]
 7369 09b8 07F54073 		add	r3, r7, #768
 7370 09bc 0122     		movs	r2, #1
 7371 09be 83F82420 		strb	r2, [r3, #36]
 7372 09c2 07F54073 		add	r3, r7, #768
 7373 09c6 0122     		movs	r2, #1
 7374 09c8 83F82520 		strb	r2, [r3, #37]
 7375 09cc 07F54073 		add	r3, r7, #768
 7376 09d0 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 173


 7377 09d2 83F82620 		strb	r2, [r3, #38]
 7378 09d6 07F54073 		add	r3, r7, #768
 7379 09da 0122     		movs	r2, #1
 7380 09dc 83F82720 		strb	r2, [r3, #39]
 7381 09e0 07F54073 		add	r3, r7, #768
 7382 09e4 0322     		movs	r2, #3
 7383 09e6 83F82820 		strb	r2, [r3, #40]
 7384 09ea 07F54073 		add	r3, r7, #768
 7385 09ee 0322     		movs	r2, #3
 7386 09f0 83F82920 		strb	r2, [r3, #41]
 7387 09f4 07F54073 		add	r3, r7, #768
 7388 09f8 0122     		movs	r2, #1
 7389 09fa 83F82A20 		strb	r2, [r3, #42]
 7390 09fe 07F54073 		add	r3, r7, #768
 7391 0a02 0322     		movs	r2, #3
 7392 0a04 83F82B20 		strb	r2, [r3, #43]
 7393 0a08 07F54073 		add	r3, r7, #768
 7394 0a0c 0322     		movs	r2, #3
 7395 0a0e 83F82C20 		strb	r2, [r3, #44]
 7396 0a12 07F54073 		add	r3, r7, #768
 7397 0a16 0122     		movs	r2, #1
 7398 0a18 83F82D20 		strb	r2, [r3, #45]
 7399 0a1c 07F54073 		add	r3, r7, #768
 7400 0a20 0122     		movs	r2, #1
 7401 0a22 83F82E20 		strb	r2, [r3, #46]
 7402 0a26 07F54073 		add	r3, r7, #768
 7403 0a2a 0122     		movs	r2, #1
 7404 0a2c 83F82F20 		strb	r2, [r3, #47]
 7405 0a30 07F54073 		add	r3, r7, #768
 7406 0a34 0322     		movs	r2, #3
 7407 0a36 83F83020 		strb	r2, [r3, #48]
 7408 0a3a 07F54073 		add	r3, r7, #768
 7409 0a3e 0322     		movs	r2, #3
 7410 0a40 83F83120 		strb	r2, [r3, #49]
 7411 0a44 07F54073 		add	r3, r7, #768
 7412 0a48 0322     		movs	r2, #3
 7413 0a4a 83F83220 		strb	r2, [r3, #50]
 7414 0a4e 07F54073 		add	r3, r7, #768
 7415 0a52 0122     		movs	r2, #1
 7416 0a54 83F83320 		strb	r2, [r3, #51]
 7417 0a58 07F54073 		add	r3, r7, #768
 7418 0a5c 0222     		movs	r2, #2
 7419 0a5e 83F83420 		strb	r2, [r3, #52]
 7420 0a62 07F54073 		add	r3, r7, #768
 7421 0a66 0222     		movs	r2, #2
 7422 0a68 83F83520 		strb	r2, [r3, #53]
 7423 0a6c 07F54073 		add	r3, r7, #768
 7424 0a70 0122     		movs	r2, #1
 7425 0a72 83F83620 		strb	r2, [r3, #54]
 7426 0a76 07F54073 		add	r3, r7, #768
 7427 0a7a 0122     		movs	r2, #1
 7428 0a7c 83F83720 		strb	r2, [r3, #55]
 7429 0a80 07F54073 		add	r3, r7, #768
 7430 0a84 0122     		movs	r2, #1
 7431 0a86 83F83820 		strb	r2, [r3, #56]
 7432 0a8a 07F54073 		add	r3, r7, #768
 7433 0a8e 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 174


 7434 0a90 83F83920 		strb	r2, [r3, #57]
 7435 0a94 07F54073 		add	r3, r7, #768
 7436 0a98 0622     		movs	r2, #6
 7437 0a9a 83F83A20 		strb	r2, [r3, #58]
 7438 0a9e 07F54073 		add	r3, r7, #768
 7439 0aa2 0122     		movs	r2, #1
 7440 0aa4 83F83B20 		strb	r2, [r3, #59]
 7441 0aa8 07F54073 		add	r3, r7, #768
 7442 0aac 0122     		movs	r2, #1
 7443 0aae 83F83C20 		strb	r2, [r3, #60]
 7444 0ab2 07F54073 		add	r3, r7, #768
 7445 0ab6 0122     		movs	r2, #1
 7446 0ab8 83F83D20 		strb	r2, [r3, #61]
 7447 0abc 07F54073 		add	r3, r7, #768
 7448 0ac0 0122     		movs	r2, #1
 7449 0ac2 83F83E20 		strb	r2, [r3, #62]
 7450 0ac6 07F54073 		add	r3, r7, #768
 7451 0aca 0322     		movs	r2, #3
 7452 0acc 83F83F20 		strb	r2, [r3, #63]
 7453 0ad0 07F54073 		add	r3, r7, #768
 7454 0ad4 0322     		movs	r2, #3
 7455 0ad6 83F84020 		strb	r2, [r3, #64]
 948:..\src/command_processing.c ****         1, 3, 3, 1, 
 949:..\src/command_processing.c ****         1, 1, 3, 3,
 950:..\src/command_processing.c ****         3, 1, 2, 2, 
 951:..\src/command_processing.c ****         1, 2, 1, 2,
 952:..\src/command_processing.c ****         2, 1, 1, 1, 
 953:..\src/command_processing.c ****         6, 3, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 1, 1, 
 955:..\src/command_processing.c ****         1, 1, 1, 6,
 956:..\src/command_processing.c ****         1, 5, 1, 6,
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c ****         1, 1, 1, 1,
 960:..\src/command_processing.c ****         3, 3, 1, 3,
 961:..\src/command_processing.c ****         3, 1, 1, 1,
 962:..\src/command_processing.c ****         3, 3, 3, 1,
 963:..\src/command_processing.c ****         2, 2, 1, 1,
 964:..\src/command_processing.c ****         1, 1, 6, 1,
 965:..\src/command_processing.c ****         1, 1, 1, 3, 
 966:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7456              		.loc 1 966 0
 7457 0ada 5F4B     		ldr	r3, .L343+4
 7458 0adc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7459              		.loc 1 947 0
 7460 0ade 07F54073 		add	r3, r7, #768
 7461 0ae2 83F84120 		strb	r2, [r3, #65]
 7462              		.loc 1 966 0
 7463 0ae6 5C4B     		ldr	r3, .L343+4
 7464 0ae8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 7465              		.loc 1 947 0
 7466 0aea 07F54073 		add	r3, r7, #768
 7467 0aee 83F84220 		strb	r2, [r3, #66]
 7468 0af2 07F54073 		add	r3, r7, #768
 7469 0af6 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 175


 7470 0af8 83F84320 		strb	r2, [r3, #67]
 7471 0afc 07F54073 		add	r3, r7, #768
 7472 0b00 0622     		movs	r2, #6
 7473 0b02 83F84420 		strb	r2, [r3, #68]
 7474 0b06 07F54073 		add	r3, r7, #768
 7475 0b0a 0622     		movs	r2, #6
 7476 0b0c 83F84520 		strb	r2, [r3, #69]
 7477 0b10 07F54073 		add	r3, r7, #768
 7478 0b14 0122     		movs	r2, #1
 7479 0b16 83F84620 		strb	r2, [r3, #70]
 7480 0b1a 07F54073 		add	r3, r7, #768
 7481 0b1e 0122     		movs	r2, #1
 7482 0b20 83F84720 		strb	r2, [r3, #71]
 7483 0b24 07F54073 		add	r3, r7, #768
 7484 0b28 0122     		movs	r2, #1
 7485 0b2a 83F84820 		strb	r2, [r3, #72]
 7486 0b2e 07F54073 		add	r3, r7, #768
 7487 0b32 0122     		movs	r2, #1
 7488 0b34 83F84920 		strb	r2, [r3, #73]
 7489 0b38 07F54073 		add	r3, r7, #768
 7490 0b3c 0122     		movs	r2, #1
 7491 0b3e 83F84A20 		strb	r2, [r3, #74]
 7492 0b42 07F54073 		add	r3, r7, #768
 7493 0b46 0122     		movs	r2, #1
 7494 0b48 83F84B20 		strb	r2, [r3, #75]
 967:..\src/command_processing.c ****         6, 6, 1, 1,
 968:..\src/command_processing.c ****         1, 1, 1, 1
 969:..\src/command_processing.c ****     };
 970:..\src/command_processing.c ****     
 971:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 7495              		.loc 1 971 0
 7496 0b4c 07F52D73 		add	r3, r7, #692
 7497 0b50 0022     		movs	r2, #0
 7498 0b52 1A70     		strb	r2, [r3]
 7499 0b54 97F8DD34 		ldrb	r3, [r7, #1245]
 7500 0b58 0A33     		adds	r3, r3, #10
 7501 0b5a DAB2     		uxtb	r2, r3
 7502 0b5c 07F52D73 		add	r3, r7, #692
 7503 0b60 5A70     		strb	r2, [r3, #1]
 7504 0b62 97F8DD34 		ldrb	r3, [r7, #1245]
 7505 0b66 0A33     		adds	r3, r3, #10
 7506 0b68 DAB2     		uxtb	r2, r3
 7507 0b6a 07F52D73 		add	r3, r7, #692
 7508 0b6e 9A70     		strb	r2, [r3, #2]
 7509 0b70 97F8DD34 		ldrb	r3, [r7, #1245]
 7510 0b74 0A33     		adds	r3, r3, #10
 7511 0b76 DAB2     		uxtb	r2, r3
 7512 0b78 07F52D73 		add	r3, r7, #692
 7513 0b7c DA70     		strb	r2, [r3, #3]
 7514 0b7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7515 0b82 0A33     		adds	r3, r3, #10
 7516 0b84 DAB2     		uxtb	r2, r3
 7517 0b86 07F52D73 		add	r3, r7, #692
 7518 0b8a 1A71     		strb	r2, [r3, #4]
 7519 0b8c 97F8DD34 		ldrb	r3, [r7, #1245]
 7520 0b90 0A33     		adds	r3, r3, #10
 7521 0b92 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 176


 7522 0b94 07F52D73 		add	r3, r7, #692
 7523 0b98 5A71     		strb	r2, [r3, #5]
 972:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 973:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 7524              		.loc 1 973 0
 7525 0b9a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7526 0b9e D7F8E014 		ldr	r1, [r7, #1248]
 7527 0ba2 1346     		mov	r3, r2
 7528 0ba4 DB00     		lsls	r3, r3, #3
 7529 0ba6 9B1A     		subs	r3, r3, r2
 7530 0ba8 1B01     		lsls	r3, r3, #4
 7531 0baa 0B44     		add	r3, r3, r1
 7532 0bac 03F58873 		add	r3, r3, #272
 7533 0bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7534              		.loc 1 971 0
 7535 0bb2 1433     		adds	r3, r3, #20
 7536 0bb4 DAB2     		uxtb	r2, r3
 7537 0bb6 07F52D73 		add	r3, r7, #692
 7538 0bba 9A71     		strb	r2, [r3, #6]
 7539              		.loc 1 973 0
 7540 0bbc 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7541 0bc0 D7F8E014 		ldr	r1, [r7, #1248]
 7542 0bc4 1346     		mov	r3, r2
 7543 0bc6 DB00     		lsls	r3, r3, #3
 7544 0bc8 9B1A     		subs	r3, r3, r2
 7545 0bca 1B01     		lsls	r3, r3, #4
 7546 0bcc 0B44     		add	r3, r3, r1
 7547 0bce 03F58873 		add	r3, r3, #272
 7548 0bd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7549              		.loc 1 971 0
 7550 0bd4 1433     		adds	r3, r3, #20
 7551 0bd6 DAB2     		uxtb	r2, r3
 7552 0bd8 07F52D73 		add	r3, r7, #692
 7553 0bdc DA71     		strb	r2, [r3, #7]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7554              		.loc 1 974 0
 7555 0bde 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7556 0be2 D7F8E014 		ldr	r1, [r7, #1248]
 7557 0be6 1346     		mov	r3, r2
 7558 0be8 DB00     		lsls	r3, r3, #3
 7559 0bea 9B1A     		subs	r3, r3, r2
 7560 0bec 1B01     		lsls	r3, r3, #4
 7561 0bee 0B44     		add	r3, r3, r1
 7562 0bf0 03F58873 		add	r3, r3, #272
 7563 0bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7564              		.loc 1 971 0
 7565 0bf6 1433     		adds	r3, r3, #20
 7566 0bf8 DAB2     		uxtb	r2, r3
 7567 0bfa 07F52D73 		add	r3, r7, #692
 7568 0bfe 1A72     		strb	r2, [r3, #8]
 7569 0c00 97F8DD34 		ldrb	r3, [r7, #1245]
 7570 0c04 0A33     		adds	r3, r3, #10
 7571 0c06 DAB2     		uxtb	r2, r3
 7572 0c08 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 177


 7573 0c0c 5A72     		strb	r2, [r3, #9]
 7574 0c0e 97F8DD34 		ldrb	r3, [r7, #1245]
 7575 0c12 0A33     		adds	r3, r3, #10
 7576 0c14 DAB2     		uxtb	r2, r3
 7577 0c16 07F52D73 		add	r3, r7, #692
 7578 0c1a 9A72     		strb	r2, [r3, #10]
 7579 0c1c 97F8DD34 		ldrb	r3, [r7, #1245]
 7580 0c20 0A33     		adds	r3, r3, #10
 7581 0c22 DAB2     		uxtb	r2, r3
 7582 0c24 07F52D73 		add	r3, r7, #692
 7583 0c28 DA72     		strb	r2, [r3, #11]
 7584 0c2a 97F8DD34 		ldrb	r3, [r7, #1245]
 7585 0c2e 0A33     		adds	r3, r3, #10
 7586 0c30 DAB2     		uxtb	r2, r3
 7587 0c32 07F52D73 		add	r3, r7, #692
 7588 0c36 1A73     		strb	r2, [r3, #12]
 7589 0c38 07F52D73 		add	r3, r7, #692
 7590 0c3c 1E22     		movs	r2, #30
 7591 0c3e 5A73     		strb	r2, [r3, #13]
 7592 0c40 07F52D73 		add	r3, r7, #692
 7593 0c44 1E22     		movs	r2, #30
 7594 0c46 9A73     		strb	r2, [r3, #14]
 7595 0c48 07F52D73 		add	r3, r7, #692
 7596 0c4c 1E22     		movs	r2, #30
 7597 0c4e DA73     		strb	r2, [r3, #15]
 7598 0c50 04E0     		b	.L344
 7599              	.L345:
 7600 0c52 00BF     		.align	2
 7601              	.L343:
 7602 0c54 80040000 		.word	.LC0
 7603 0c58 00000000 		.word	N_Encoder_Line_Connected
 7604              	.L344:
 7605 0c5c 07F52D73 		add	r3, r7, #692
 7606 0c60 1E22     		movs	r2, #30
 7607 0c62 1A74     		strb	r2, [r3, #16]
 975:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 976:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 7608              		.loc 1 976 0
 7609 0c64 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7610 0c68 D7F8E014 		ldr	r1, [r7, #1248]
 7611 0c6c 1346     		mov	r3, r2
 7612 0c6e DB00     		lsls	r3, r3, #3
 7613 0c70 9B1A     		subs	r3, r3, r2
 7614 0c72 1B01     		lsls	r3, r3, #4
 7615 0c74 0B44     		add	r3, r3, r1
 7616 0c76 03F58873 		add	r3, r3, #272
 7617 0c7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7618              		.loc 1 971 0
 7619 0c7c 1433     		adds	r3, r3, #20
 7620 0c7e DAB2     		uxtb	r2, r3
 7621 0c80 07F52D73 		add	r3, r7, #692
 7622 0c84 5A74     		strb	r2, [r3, #17]
 7623              		.loc 1 976 0
 7624 0c86 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7625 0c8a D7F8E014 		ldr	r1, [r7, #1248]
 7626 0c8e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 178


 7627 0c90 DB00     		lsls	r3, r3, #3
 7628 0c92 9B1A     		subs	r3, r3, r2
 7629 0c94 1B01     		lsls	r3, r3, #4
 7630 0c96 0B44     		add	r3, r3, r1
 7631 0c98 03F58873 		add	r3, r3, #272
 7632 0c9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7633              		.loc 1 971 0
 7634 0c9e 1433     		adds	r3, r3, #20
 7635 0ca0 DAB2     		uxtb	r2, r3
 7636 0ca2 07F52D73 		add	r3, r7, #692
 7637 0ca6 9A74     		strb	r2, [r3, #18]
 7638 0ca8 97F8DD34 		ldrb	r3, [r7, #1245]
 7639 0cac 0A33     		adds	r3, r3, #10
 7640 0cae DAB2     		uxtb	r2, r3
 7641 0cb0 07F52D73 		add	r3, r7, #692
 7642 0cb4 DA74     		strb	r2, [r3, #19]
 7643 0cb6 97F8DD34 		ldrb	r3, [r7, #1245]
 7644 0cba 0A33     		adds	r3, r3, #10
 7645 0cbc DAB2     		uxtb	r2, r3
 7646 0cbe 07F52D73 		add	r3, r7, #692
 7647 0cc2 1A75     		strb	r2, [r3, #20]
 7648 0cc4 07F52D73 		add	r3, r7, #692
 7649 0cc8 0022     		movs	r2, #0
 7650 0cca 5A75     		strb	r2, [r3, #21]
 7651 0ccc 07F52D73 		add	r3, r7, #692
 7652 0cd0 4622     		movs	r2, #70
 7653 0cd2 9A75     		strb	r2, [r3, #22]
 7654 0cd4 07F52D73 		add	r3, r7, #692
 7655 0cd8 4622     		movs	r2, #70
 7656 0cda DA75     		strb	r2, [r3, #23]
 7657 0cdc 07F52D73 		add	r3, r7, #692
 7658 0ce0 4622     		movs	r2, #70
 7659 0ce2 1A76     		strb	r2, [r3, #24]
 7660 0ce4 07F52D73 		add	r3, r7, #692
 7661 0ce8 4622     		movs	r2, #70
 7662 0cea 5A76     		strb	r2, [r3, #25]
 7663 0cec 07F52D73 		add	r3, r7, #692
 7664 0cf0 1E22     		movs	r2, #30
 7665 0cf2 9A76     		strb	r2, [r3, #26]
 7666 0cf4 07F52D73 		add	r3, r7, #692
 7667 0cf8 0022     		movs	r2, #0
 7668 0cfa DA76     		strb	r2, [r3, #27]
 7669 0cfc 07F52D73 		add	r3, r7, #692
 7670 0d00 2822     		movs	r2, #40
 7671 0d02 1A77     		strb	r2, [r3, #28]
 7672 0d04 07F52D73 		add	r3, r7, #692
 7673 0d08 3222     		movs	r2, #50
 7674 0d0a 5A77     		strb	r2, [r3, #29]
 7675 0d0c 07F52D73 		add	r3, r7, #692
 7676 0d10 0022     		movs	r2, #0
 7677 0d12 9A77     		strb	r2, [r3, #30]
 7678 0d14 07F52D73 		add	r3, r7, #692
 7679 0d18 3222     		movs	r2, #50
 7680 0d1a DA77     		strb	r2, [r3, #31]
 7681 0d1c 07F52D73 		add	r3, r7, #692
 7682 0d20 2822     		movs	r2, #40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 179


 7683 0d22 83F82020 		strb	r2, [r3, #32]
 7684 0d26 07F52D73 		add	r3, r7, #692
 7685 0d2a 2822     		movs	r2, #40
 7686 0d2c 83F82120 		strb	r2, [r3, #33]
 7687 0d30 07F52D73 		add	r3, r7, #692
 7688 0d34 0022     		movs	r2, #0
 7689 0d36 83F82220 		strb	r2, [r3, #34]
 977:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 978:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 979:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 980:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 7690              		.loc 1 980 0
 7691 0d3a D7F8E034 		ldr	r3, [r7, #1248]
 7692 0d3e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7693              		.loc 1 971 0
 7694 0d42 3C33     		adds	r3, r3, #60
 7695 0d44 DAB2     		uxtb	r2, r3
 7696 0d46 07F52D73 		add	r3, r7, #692
 7697 0d4a 83F82320 		strb	r2, [r3, #35]
 7698 0d4e 97F8DD34 		ldrb	r3, [r7, #1245]
 7699 0d52 0A33     		adds	r3, r3, #10
 7700 0d54 DAB2     		uxtb	r2, r3
 7701 0d56 07F52D73 		add	r3, r7, #692
 7702 0d5a 83F82420 		strb	r2, [r3, #36]
 7703 0d5e 97F8DD34 		ldrb	r3, [r7, #1245]
 7704 0d62 0A33     		adds	r3, r3, #10
 7705 0d64 DAB2     		uxtb	r2, r3
 7706 0d66 07F52D73 		add	r3, r7, #692
 7707 0d6a 83F82520 		strb	r2, [r3, #37]
 7708 0d6e 97F8DD34 		ldrb	r3, [r7, #1245]
 7709 0d72 0A33     		adds	r3, r3, #10
 7710 0d74 DAB2     		uxtb	r2, r3
 7711 0d76 07F52D73 		add	r3, r7, #692
 7712 0d7a 83F82620 		strb	r2, [r3, #38]
 7713 0d7e 97F8DD34 		ldrb	r3, [r7, #1245]
 7714 0d82 0A33     		adds	r3, r3, #10
 7715 0d84 DAB2     		uxtb	r2, r3
 7716 0d86 07F52D73 		add	r3, r7, #692
 7717 0d8a 83F82720 		strb	r2, [r3, #39]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         // GENERIC PARAMS
 983:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 984:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 7718              		.loc 1 984 0
 7719 0d8e 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7720 0d92 D7F8E014 		ldr	r1, [r7, #1248]
 7721 0d96 1346     		mov	r3, r2
 7722 0d98 DB00     		lsls	r3, r3, #3
 7723 0d9a 9B1A     		subs	r3, r3, r2
 7724 0d9c 1B01     		lsls	r3, r3, #4
 7725 0d9e 0B44     		add	r3, r3, r1
 7726 0da0 03F58873 		add	r3, r3, #272
 7727 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7728              		.loc 1 971 0
 7729 0da6 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 180


 7730 0da8 DAB2     		uxtb	r2, r3
 7731 0daa 07F52D73 		add	r3, r7, #692
 7732 0dae 83F82820 		strb	r2, [r3, #40]
 7733              		.loc 1 984 0
 7734 0db2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 7735 0db6 D7F8E014 		ldr	r1, [r7, #1248]
 7736 0dba 1346     		mov	r3, r2
 7737 0dbc DB00     		lsls	r3, r3, #3
 7738 0dbe 9B1A     		subs	r3, r3, r2
 7739 0dc0 1B01     		lsls	r3, r3, #4
 7740 0dc2 0B44     		add	r3, r3, r1
 7741 0dc4 03F58873 		add	r3, r3, #272
 7742 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7743              		.loc 1 971 0
 7744 0dca 1433     		adds	r3, r3, #20
 7745 0dcc DAB2     		uxtb	r2, r3
 7746 0dce 07F52D73 		add	r3, r7, #692
 7747 0dd2 83F82920 		strb	r2, [r3, #41]
 7748 0dd6 07F52D73 		add	r3, r7, #692
 7749 0dda 0022     		movs	r2, #0
 7750 0ddc 83F82A20 		strb	r2, [r3, #42]
 7751 0de0 97F8DC34 		ldrb	r3, [r7, #1244]
 7752 0de4 0A33     		adds	r3, r3, #10
 7753 0de6 DAB2     		uxtb	r2, r3
 7754 0de8 07F52D73 		add	r3, r7, #692
 7755 0dec 83F82B20 		strb	r2, [r3, #43]
 7756 0df0 97F8DC34 		ldrb	r3, [r7, #1244]
 7757 0df4 0A33     		adds	r3, r3, #10
 7758 0df6 DAB2     		uxtb	r2, r3
 7759 0df8 07F52D73 		add	r3, r7, #692
 7760 0dfc 83F82C20 		strb	r2, [r3, #44]
 7761 0e00 97F8DC34 		ldrb	r3, [r7, #1244]
 7762 0e04 0A33     		adds	r3, r3, #10
 7763 0e06 DAB2     		uxtb	r2, r3
 7764 0e08 07F52D73 		add	r3, r7, #692
 7765 0e0c 83F82D20 		strb	r2, [r3, #45]
 7766 0e10 97F8DC34 		ldrb	r3, [r7, #1244]
 7767 0e14 0A33     		adds	r3, r3, #10
 7768 0e16 DAB2     		uxtb	r2, r3
 7769 0e18 07F52D73 		add	r3, r7, #692
 7770 0e1c 83F82E20 		strb	r2, [r3, #46]
 7771 0e20 97F8DC34 		ldrb	r3, [r7, #1244]
 7772 0e24 0A33     		adds	r3, r3, #10
 7773 0e26 DAB2     		uxtb	r2, r3
 7774 0e28 07F52D73 		add	r3, r7, #692
 7775 0e2c 83F82F20 		strb	r2, [r3, #47]
 985:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 986:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 7776              		.loc 1 986 0
 7777 0e30 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7778 0e34 D7F8E014 		ldr	r1, [r7, #1248]
 7779 0e38 1346     		mov	r3, r2
 7780 0e3a DB00     		lsls	r3, r3, #3
 7781 0e3c 9B1A     		subs	r3, r3, r2
 7782 0e3e 1B01     		lsls	r3, r3, #4
 7783 0e40 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 181


 7784 0e42 03F58873 		add	r3, r3, #272
 7785 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7786              		.loc 1 971 0
 7787 0e48 1433     		adds	r3, r3, #20
 7788 0e4a DAB2     		uxtb	r2, r3
 7789 0e4c 07F52D73 		add	r3, r7, #692
 7790 0e50 83F83020 		strb	r2, [r3, #48]
 7791              		.loc 1 986 0
 7792 0e54 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7793 0e58 D7F8E014 		ldr	r1, [r7, #1248]
 7794 0e5c 1346     		mov	r3, r2
 7795 0e5e DB00     		lsls	r3, r3, #3
 7796 0e60 9B1A     		subs	r3, r3, r2
 7797 0e62 1B01     		lsls	r3, r3, #4
 7798 0e64 0B44     		add	r3, r3, r1
 7799 0e66 03F58873 		add	r3, r3, #272
 7800 0e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7801              		.loc 1 971 0
 7802 0e6c 1433     		adds	r3, r3, #20
 7803 0e6e DAB2     		uxtb	r2, r3
 7804 0e70 07F52D73 		add	r3, r7, #692
 7805 0e74 83F83120 		strb	r2, [r3, #49]
 7806              		.loc 1 986 0
 7807 0e78 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7808 0e7c D7F8E014 		ldr	r1, [r7, #1248]
 7809 0e80 1346     		mov	r3, r2
 7810 0e82 DB00     		lsls	r3, r3, #3
 7811 0e84 9B1A     		subs	r3, r3, r2
 7812 0e86 1B01     		lsls	r3, r3, #4
 7813 0e88 0B44     		add	r3, r3, r1
 7814 0e8a 03F58873 		add	r3, r3, #272
 7815 0e8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7816              		.loc 1 971 0
 7817 0e90 1433     		adds	r3, r3, #20
 7818 0e92 DAB2     		uxtb	r2, r3
 7819 0e94 07F52D73 		add	r3, r7, #692
 7820 0e98 83F83220 		strb	r2, [r3, #50]
 7821 0e9c 97F8DC34 		ldrb	r3, [r7, #1244]
 7822 0ea0 0A33     		adds	r3, r3, #10
 7823 0ea2 DAB2     		uxtb	r2, r3
 7824 0ea4 07F52D73 		add	r3, r7, #692
 7825 0ea8 83F83320 		strb	r2, [r3, #51]
 7826 0eac 97F8DC34 		ldrb	r3, [r7, #1244]
 7827 0eb0 0A33     		adds	r3, r3, #10
 7828 0eb2 DAB2     		uxtb	r2, r3
 7829 0eb4 07F52D73 		add	r3, r7, #692
 7830 0eb8 83F83420 		strb	r2, [r3, #52]
 7831 0ebc 97F8DC34 		ldrb	r3, [r7, #1244]
 7832 0ec0 0A33     		adds	r3, r3, #10
 7833 0ec2 DAB2     		uxtb	r2, r3
 7834 0ec4 07F52D73 		add	r3, r7, #692
 7835 0ec8 83F83520 		strb	r2, [r3, #53]
 7836 0ecc 97F8DC34 		ldrb	r3, [r7, #1244]
 7837 0ed0 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 182


 7838 0ed2 DAB2     		uxtb	r2, r3
 7839 0ed4 07F52D73 		add	r3, r7, #692
 7840 0ed8 83F83620 		strb	r2, [r3, #54]
 987:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7841              		.loc 1 987 0
 7842 0edc 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7843 0ee0 D7F8E014 		ldr	r1, [r7, #1248]
 7844 0ee4 1346     		mov	r3, r2
 7845 0ee6 DB00     		lsls	r3, r3, #3
 7846 0ee8 9B1A     		subs	r3, r3, r2
 7847 0eea 1B01     		lsls	r3, r3, #4
 7848 0eec 0B44     		add	r3, r3, r1
 7849 0eee 03F58873 		add	r3, r3, #272
 7850 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7851              		.loc 1 971 0
 7852 0ef4 1433     		adds	r3, r3, #20
 7853 0ef6 DAB2     		uxtb	r2, r3
 7854 0ef8 07F52D73 		add	r3, r7, #692
 7855 0efc 83F83720 		strb	r2, [r3, #55]
 988:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 7856              		.loc 1 988 0
 7857 0f00 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7858 0f04 D7F8E014 		ldr	r1, [r7, #1248]
 7859 0f08 1346     		mov	r3, r2
 7860 0f0a DB00     		lsls	r3, r3, #3
 7861 0f0c 9B1A     		subs	r3, r3, r2
 7862 0f0e 1B01     		lsls	r3, r3, #4
 7863 0f10 0B44     		add	r3, r3, r1
 7864 0f12 03F58873 		add	r3, r3, #272
 7865 0f16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7866              		.loc 1 971 0
 7867 0f18 1433     		adds	r3, r3, #20
 7868 0f1a DAB2     		uxtb	r2, r3
 7869 0f1c 07F52D73 		add	r3, r7, #692
 7870 0f20 83F83820 		strb	r2, [r3, #56]
 7871 0f24 97F8DC34 		ldrb	r3, [r7, #1244]
 7872 0f28 0A33     		adds	r3, r3, #10
 7873 0f2a DAB2     		uxtb	r2, r3
 7874 0f2c 07F52D73 		add	r3, r7, #692
 7875 0f30 83F83920 		strb	r2, [r3, #57]
 7876 0f34 97F8DC34 		ldrb	r3, [r7, #1244]
 7877 0f38 0A33     		adds	r3, r3, #10
 7878 0f3a DAB2     		uxtb	r2, r3
 7879 0f3c 07F52D73 		add	r3, r7, #692
 7880 0f40 83F83A20 		strb	r2, [r3, #58]
 7881 0f44 97F8DC34 		ldrb	r3, [r7, #1244]
 7882 0f48 0A33     		adds	r3, r3, #10
 7883 0f4a DAB2     		uxtb	r2, r3
 7884 0f4c 07F52D73 		add	r3, r7, #692
 7885 0f50 83F83B20 		strb	r2, [r3, #59]
 7886 0f54 97F8DC34 		ldrb	r3, [r7, #1244]
 7887 0f58 0A33     		adds	r3, r3, #10
 7888 0f5a DAB2     		uxtb	r2, r3
 7889 0f5c 07F52D73 		add	r3, r7, #692
 7890 0f60 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 183


 7891 0f64 97F8DC34 		ldrb	r3, [r7, #1244]
 7892 0f68 0A33     		adds	r3, r3, #10
 7893 0f6a DAB2     		uxtb	r2, r3
 7894 0f6c 07F52D73 		add	r3, r7, #692
 7895 0f70 83F83D20 		strb	r2, [r3, #61]
 7896 0f74 97F8DC34 		ldrb	r3, [r7, #1244]
 7897 0f78 0A33     		adds	r3, r3, #10
 7898 0f7a DAB2     		uxtb	r2, r3
 7899 0f7c 07F52D73 		add	r3, r7, #692
 7900 0f80 83F83E20 		strb	r2, [r3, #62]
 989:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 7901              		.loc 1 989 0
 7902 0f84 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7903 0f88 D7F8E014 		ldr	r1, [r7, #1248]
 7904 0f8c 1346     		mov	r3, r2
 7905 0f8e DB00     		lsls	r3, r3, #3
 7906 0f90 9B1A     		subs	r3, r3, r2
 7907 0f92 1B01     		lsls	r3, r3, #4
 7908 0f94 0B44     		add	r3, r3, r1
 7909 0f96 03F58873 		add	r3, r3, #272
 7910 0f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7911              		.loc 1 971 0
 7912 0f9c 1433     		adds	r3, r3, #20
 7913 0f9e DAB2     		uxtb	r2, r3
 7914 0fa0 07F52D73 		add	r3, r7, #692
 7915 0fa4 83F83F20 		strb	r2, [r3, #63]
 990:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 7916              		.loc 1 990 0
 7917 0fa8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 7918 0fac D7F8E014 		ldr	r1, [r7, #1248]
 7919 0fb0 1346     		mov	r3, r2
 7920 0fb2 DB00     		lsls	r3, r3, #3
 7921 0fb4 9B1A     		subs	r3, r3, r2
 7922 0fb6 1B01     		lsls	r3, r3, #4
 7923 0fb8 0B44     		add	r3, r3, r1
 7924 0fba 03F58873 		add	r3, r3, #272
 7925 0fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 7926              		.loc 1 971 0
 7927 0fc0 1433     		adds	r3, r3, #20
 7928 0fc2 DAB2     		uxtb	r2, r3
 7929 0fc4 07F52D73 		add	r3, r7, #692
 7930 0fc8 83F84020 		strb	r2, [r3, #64]
 7931 0fcc 07F52D73 		add	r3, r7, #692
 7932 0fd0 1422     		movs	r2, #20
 7933 0fd2 83F84120 		strb	r2, [r3, #65]
 7934 0fd6 07F52D73 		add	r3, r7, #692
 7935 0fda 1522     		movs	r2, #21
 7936 0fdc 83F84220 		strb	r2, [r3, #66]
 7937 0fe0 07F52D73 		add	r3, r7, #692
 7938 0fe4 3222     		movs	r2, #50
 7939 0fe6 83F84320 		strb	r2, [r3, #67]
 7940 0fea 07F52D73 		add	r3, r7, #692
 7941 0fee 3222     		movs	r2, #50
 7942 0ff0 83F84420 		strb	r2, [r3, #68]
 7943 0ff4 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 184


 7944 0ff8 3222     		movs	r2, #50
 7945 0ffa 83F84520 		strb	r2, [r3, #69]
 7946 0ffe 07F52D73 		add	r3, r7, #692
 7947 1002 0022     		movs	r2, #0
 7948 1004 83F84620 		strb	r2, [r3, #70]
 7949 1008 07F52D73 		add	r3, r7, #692
 7950 100c 5022     		movs	r2, #80
 7951 100e 83F84720 		strb	r2, [r3, #71]
 7952 1012 07F52D73 		add	r3, r7, #692
 7953 1016 5022     		movs	r2, #80
 7954 1018 83F84820 		strb	r2, [r3, #72]
 7955 101c 07F52D73 		add	r3, r7, #692
 7956 1020 5A22     		movs	r2, #90
 7957 1022 83F84920 		strb	r2, [r3, #73]
 7958 1026 07F52D73 		add	r3, r7, #692
 7959 102a 5A22     		movs	r2, #90
 7960 102c 83F84A20 		strb	r2, [r3, #74]
 7961 1030 07F52D73 		add	r3, r7, #692
 7962 1034 5A22     		movs	r2, #90
 7963 1036 83F84B20 		strb	r2, [r3, #75]
 991:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE, ST_MS_SPEC, 
 992:..\src/command_processing.c ****         ST_MS_SPEC, ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
 993:..\src/command_processing.c ****     };
 994:..\src/command_processing.c ****     
 995:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 7964              		.loc 1 995 0
 7965 103a 07F5C273 		add	r3, r7, #388
 7966 103e CB4A     		ldr	r2, .L346
 7967 1040 1846     		mov	r0, r3
 7968 1042 1146     		mov	r1, r2
 7969 1044 4FF49873 		mov	r3, #304
 7970 1048 1A46     		mov	r2, r3
 7971 104a FFF7FEFF 		bl	memcpy
 996:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 997:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 998:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 999:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1000:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1001:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1002:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1003:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1004:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1005:..\src/command_processing.c ****         
1006:..\src/command_processing.c ****         // GENERIC PARAMS
1007:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1008:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1009:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1010:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1011:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1012:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1013:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1014:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1015:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:", "72 - Slave com
1016:..\src/command_processing.c ****         "73 - Slave ID:", "74 - Maximum slave residual current:", "75 - Maximum pressure feedback (
1017:..\src/command_processing.c ****     };
1018:..\src/command_processing.c **** 
1019:..\src/command_processing.c ****     //Parameters menu
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 185


1020:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 7972              		.loc 1 1020 0
 7973 104e 07F58673 		add	r3, r7, #268
 7974 1052 0022     		movs	r2, #0
 7975 1054 1A60     		str	r2, [r3]
 7976 1056 0433     		adds	r3, r3, #4
 7977 1058 7222     		movs	r2, #114
 7978 105a 0021     		movs	r1, #0
 7979 105c 1846     		mov	r0, r3
 7980 105e FFF7FEFF 		bl	memset
1021:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 7981              		.loc 1 1021 0
 7982 1062 07F58670 		add	r0, r7, #268
 7983 1066 6423     		movs	r3, #100
 7984 1068 0A22     		movs	r2, #10
 7985 106a C149     		ldr	r1, .L346+4
 7986 106c FFF7FEFF 		bl	sprintf
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 7987              		.loc 1 1023 0
 7988 1070 07F1E403 		add	r3, r7, #228
 7989 1074 BF4A     		ldr	r2, .L346+8
 7990 1076 1A60     		str	r2, [r3]
 7991 1078 07F1E403 		add	r3, r7, #228
 7992 107c BE4A     		ldr	r2, .L346+12
 7993 107e 5A60     		str	r2, [r3, #4]
 7994 1080 07F1E403 		add	r3, r7, #228
 7995 1084 BD4A     		ldr	r2, .L346+16
 7996 1086 9A60     		str	r2, [r3, #8]
 7997 1088 07F1E403 		add	r3, r7, #228
 7998 108c BC4A     		ldr	r2, .L346+20
 7999 108e DA60     		str	r2, [r3, #12]
 8000 1090 07F1E403 		add	r3, r7, #228
 8001 1094 BB4A     		ldr	r2, .L346+24
 8002 1096 1A61     		str	r2, [r3, #16]
 8003 1098 07F1E403 		add	r3, r7, #228
 8004 109c BA4A     		ldr	r2, .L346+28
 8005 109e 5A61     		str	r2, [r3, #20]
 8006 10a0 07F1E403 		add	r3, r7, #228
 8007 10a4 07F58672 		add	r2, r7, #268
 8008 10a8 9A61     		str	r2, [r3, #24]
 8009 10aa 07F1E403 		add	r3, r7, #228
 8010 10ae B74A     		ldr	r2, .L346+32
 8011 10b0 DA61     		str	r2, [r3, #28]
 8012 10b2 07F1E403 		add	r3, r7, #228
 8013 10b6 B64A     		ldr	r2, .L346+36
 8014 10b8 1A62     		str	r2, [r3, #32]
 8015 10ba 07F1E403 		add	r3, r7, #228
 8016 10be B54A     		ldr	r2, .L346+40
 8017 10c0 5A62     		str	r2, [r3, #36]
1024:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1025:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1026:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1027:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1028:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1029:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1030:..\src/command_processing.c ****         spi_delay_menu,                                                                            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 186


1031:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1032:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1033:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\nThe board will reset\n"      
1034:..\src/command_processing.c ****     };   
1035:..\src/command_processing.c ****     
1036:..\src/command_processing.c ****     uint8 NUM_MENU[29] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8018              		.loc 1 1036 0
 8019 10c2 07F1C403 		add	r3, r7, #196
 8020 10c6 B44A     		ldr	r2, .L346+44
 8021 10c8 1C46     		mov	r4, r3
 8022 10ca 1546     		mov	r5, r2
 8023 10cc 2868     		ldr	r0, [r5]	@ unaligned
 8024 10ce 6968     		ldr	r1, [r5, #4]	@ unaligned
 8025 10d0 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8026 10d2 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8027 10d4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8028 10d6 2869     		ldr	r0, [r5, #16]	@ unaligned
 8029 10d8 6969     		ldr	r1, [r5, #20]	@ unaligned
 8030 10da AA69     		ldr	r2, [r5, #24]	@ unaligned
 8031 10dc 07C4     		stmia	r4!, {r0, r1, r2}
 8032 10de 2B7F     		ldrb	r3, [r5, #28]
 8033 10e0 2370     		strb	r3, [r4]
1037:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8034              		.loc 1 1037 0
 8035 10e2 07F1B803 		add	r3, r7, #184
 8036 10e6 AD4A     		ldr	r2, .L346+48
 8037 10e8 1068     		ldr	r0, [r2]	@ unaligned
 8038 10ea 5168     		ldr	r1, [r2, #4]	@ unaligned
 8039 10ec 03C3     		stmia	r3!, {r0, r1}
 8040 10ee 127A     		ldrb	r2, [r2, #8]
 8041 10f0 1A70     		strb	r2, [r3]
1038:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8042              		.loc 1 1038 0
 8043 10f2 07F1A403 		add	r3, r7, #164
 8044 10f6 AA4A     		ldr	r2, .L346+52
 8045 10f8 1C46     		mov	r4, r3
 8046 10fa 1546     		mov	r5, r2
 8047 10fc 2868     		ldr	r0, [r5]	@ unaligned
 8048 10fe 6968     		ldr	r1, [r5, #4]	@ unaligned
 8049 1100 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8050 1102 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8051 1104 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8052 1106 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8053 1108 2380     		strh	r3, [r4]	@ unaligned
1039:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8054              		.loc 1 1039 0
 8055 110a 2323     		movs	r3, #35
 8056 110c 87F8DB34 		strb	r3, [r7, #1243]
1040:..\src/command_processing.c **** 
1041:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1042:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1043:..\src/command_processing.c ****     
1044:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1045:..\src/command_processing.c **** 
1046:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 187


1049:..\src/command_processing.c ****     j = 0;
 8057              		.loc 1 1049 0
 8058 1110 0023     		movs	r3, #0
 8059 1112 87F8E634 		strb	r3, [r7, #1254]
1050:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8060              		.loc 1 1050 0
 8061 1116 0023     		movs	r3, #0
 8062 1118 87F8E734 		strb	r3, [r7, #1255]
 8063 111c 21E0     		b	.L280
 8064              	.L283:
1051:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8065              		.loc 1 1051 0
 8066 111e 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8067 1122 07F1B802 		add	r2, r7, #184
 8068 1126 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8069 1128 1A46     		mov	r2, r3
 8070 112a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8071 112e 0133     		adds	r3, r3, #1
 8072 1130 9A42     		cmp	r2, r3
 8073 1132 0BD1     		bne	.L281
1052:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8074              		.loc 1 1052 0
 8075 1134 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8076 1138 07F15802 		add	r2, r7, #88
 8077 113c 0121     		movs	r1, #1
 8078 113e D154     		strb	r1, [r2, r3]
1053:..\src/command_processing.c ****             j++;
 8079              		.loc 1 1053 0
 8080 1140 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8081 1144 0133     		adds	r3, r3, #1
 8082 1146 87F8E634 		strb	r3, [r7, #1254]
 8083 114a 05E0     		b	.L282
 8084              	.L281:
1054:..\src/command_processing.c ****         }
1055:..\src/command_processing.c ****         else {
1056:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8085              		.loc 1 1056 0
 8086 114c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8087 1150 07F15802 		add	r2, r7, #88
 8088 1154 0021     		movs	r1, #0
 8089 1156 D154     		strb	r1, [r2, r3]
 8090              	.L282:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8091              		.loc 1 1050 0 discriminator 2
 8092 1158 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8093 115c 0133     		adds	r3, r3, #1
 8094 115e 87F8E734 		strb	r3, [r7, #1255]
 8095              	.L280:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8096              		.loc 1 1050 0 is_stmt 0 discriminator 1
 8097 1162 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8098 1166 4B2B     		cmp	r3, #75
 8099 1168 D9D9     		bls	.L283
1057:..\src/command_processing.c ****         }
1058:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1059:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1060:..\src/command_processing.c ****     j = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 188


 8100              		.loc 1 1060 0 is_stmt 1
 8101 116a 0023     		movs	r3, #0
 8102 116c 87F8E634 		strb	r3, [r7, #1254]
1061:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8103              		.loc 1 1061 0
 8104 1170 0023     		movs	r3, #0
 8105 1172 87F8E734 		strb	r3, [r7, #1255]
 8106 1176 21E0     		b	.L284
 8107              	.L287:
1062:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8108              		.loc 1 1062 0
 8109 1178 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8110 117c 07F1A402 		add	r2, r7, #164
 8111 1180 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8112 1182 1A46     		mov	r2, r3
 8113 1184 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8114 1188 0133     		adds	r3, r3, #1
 8115 118a 9A42     		cmp	r2, r3
 8116 118c 0BD1     		bne	.L285
1063:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8117              		.loc 1 1063 0
 8118 118e 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8119 1192 07F10C02 		add	r2, r7, #12
 8120 1196 0121     		movs	r1, #1
 8121 1198 D154     		strb	r1, [r2, r3]
1064:..\src/command_processing.c ****             j++;
 8122              		.loc 1 1064 0
 8123 119a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8124 119e 0133     		adds	r3, r3, #1
 8125 11a0 87F8E634 		strb	r3, [r7, #1254]
 8126 11a4 05E0     		b	.L286
 8127              	.L285:
1065:..\src/command_processing.c ****         }
1066:..\src/command_processing.c ****         else {
1067:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8128              		.loc 1 1067 0
 8129 11a6 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8130 11aa 07F10C02 		add	r2, r7, #12
 8131 11ae 0021     		movs	r1, #0
 8132 11b0 D154     		strb	r1, [r2, r3]
 8133              	.L286:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8134              		.loc 1 1061 0 discriminator 2
 8135 11b2 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8136 11b6 0133     		adds	r3, r3, #1
 8137 11b8 87F8E734 		strb	r3, [r7, #1255]
 8138              	.L284:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8139              		.loc 1 1061 0 is_stmt 0 discriminator 1
 8140 11bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8141 11c0 4B2B     		cmp	r3, #75
 8142 11c2 D9D9     		bls	.L287
1068:..\src/command_processing.c ****         }
1069:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1070:..\src/command_processing.c ****         
1071:..\src/command_processing.c ****     if (!index) {
 8143              		.loc 1 1071 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 189


 8144 11c4 BB1D     		adds	r3, r7, #6
 8145 11c6 1B88     		ldrh	r3, [r3]
 8146 11c8 002B     		cmp	r3, #0
 8147 11ca 17D1     		bne	.L288
1072:..\src/command_processing.c ****         // Get parameters list with relative types
1073:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8148              		.loc 1 1073 0
 8149 11cc 07F52D74 		add	r4, r7, #692
 8150 11d0 07F54072 		add	r2, r7, #768
 8151 11d4 07F55371 		add	r1, r7, #844
 8152 11d8 07F56670 		add	r0, r7, #920
 8153 11dc 07F1E403 		add	r3, r7, #228
 8154 11e0 0393     		str	r3, [sp, #12]
 8155 11e2 07F15803 		add	r3, r7, #88
 8156 11e6 0293     		str	r3, [sp, #8]
 8157 11e8 07F5C273 		add	r3, r7, #388
 8158 11ec 0193     		str	r3, [sp, #4]
 8159 11ee 07F1C403 		add	r3, r7, #196
 8160 11f2 0093     		str	r3, [sp]
 8161 11f4 2346     		mov	r3, r4
 8162 11f6 FFF7FEFF 		bl	get_param_list
1074:..\src/command_processing.c ****     }
1075:..\src/command_processing.c ****     else {
1076:..\src/command_processing.c ****         // Set specific parameter        
1077:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1078:..\src/command_processing.c ****         
1079:..\src/command_processing.c ****         // Find size of data
1080:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1081:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1082:..\src/command_processing.c ****                 sod = 1; break;
1083:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1084:..\src/command_processing.c ****                 sod = 2; break;
1085:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1086:..\src/command_processing.c ****                 sod = 4; break;
1087:..\src/command_processing.c ****         }   
1088:..\src/command_processing.c ****             
1089:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1090:..\src/command_processing.c ****             // Use default specifications for param setting
1091:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1092:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1095:..\src/command_processing.c ****                     }
1096:..\src/command_processing.c ****                     break;                
1097:..\src/command_processing.c ****                 case TYPE_STRING:
1098:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1099:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1100:..\src/command_processing.c ****                     }
1101:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1102:..\src/command_processing.c ****                 break; 
1103:..\src/command_processing.c ****                 case TYPE_INT8:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;                    
1108:..\src/command_processing.c ****                 case TYPE_INT16:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 190


1110:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }                   
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT16:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_INT32:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1126:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 case TYPE_UINT32:
1133:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1134:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1135:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1136:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1137:..\src/command_processing.c ****                         }
1138:..\src/command_processing.c ****                     }
1139:..\src/command_processing.c ****                     break;
1140:..\src/command_processing.c ****                 case TYPE_FLOAT:
1141:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1142:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1143:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1144:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1145:..\src/command_processing.c ****                         }
1146:..\src/command_processing.c ****                     }
1147:..\src/command_processing.c ****                     break;
1148:..\src/command_processing.c ****                 default:
1149:..\src/command_processing.c ****                     break;
1150:..\src/command_processing.c ****             }
1151:..\src/command_processing.c ****         }
1152:..\src/command_processing.c ****         else {  
1153:..\src/command_processing.c ****             // Use custom specifications for param setting
1154:..\src/command_processing.c ****             set_custom_param(index);
1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****         
1157:..\src/command_processing.c ****         // Store param also in user_emg structure
1158:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1159:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****         
1162:..\src/command_processing.c ****         // Perform chip reset if needed
1163:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1164:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1165:..\src/command_processing.c ****             do {
1166:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 191


1167:..\src/command_processing.c ****                 idx++;
1168:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1169:..\src/command_processing.c ****             
1170:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1171:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1172:..\src/command_processing.c ****             }   
1173:..\src/command_processing.c ****         }
1174:..\src/command_processing.c ****     }
1175:..\src/command_processing.c **** } 
 8163              		.loc 1 1175 0
 8164 11fa D9E2     		b	.L339
 8165              	.L288:
1077:..\src/command_processing.c ****         
 8166              		.loc 1 1077 0
 8167 11fc BB1D     		adds	r3, r7, #6
 8168 11fe 1B88     		ldrh	r3, [r3]	@ movhi
 8169 1200 DBB2     		uxtb	r3, r3
 8170 1202 013B     		subs	r3, r3, #1
 8171 1204 87F8DA34 		strb	r3, [r7, #1242]
1080:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8172              		.loc 1 1080 0
 8173 1208 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8174 120c 07F55372 		add	r2, r7, #844
 8175 1210 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8176 1212 092B     		cmp	r3, #9
 8177 1214 22D8     		bhi	.L290
 8178 1216 01A2     		adr	r2, .L292
 8179 1218 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8180              		.p2align 2
 8181              	.L292:
 8182 121c 45120000 		.word	.L291+1
 8183 1220 45120000 		.word	.L291+1
 8184 1224 45120000 		.word	.L291+1
 8185 1228 4D120000 		.word	.L293+1
 8186 122c 4D120000 		.word	.L293+1
 8187 1230 55120000 		.word	.L294+1
 8188 1234 55120000 		.word	.L294+1
 8189 1238 55120000 		.word	.L294+1
 8190 123c 5D120000 		.word	.L290+1
 8191 1240 45120000 		.word	.L291+1
 8192              		.p2align 1
 8193              	.L291:
1082:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8194              		.loc 1 1082 0
 8195 1244 0123     		movs	r3, #1
 8196 1246 87F8E534 		strb	r3, [r7, #1253]
 8197 124a 07E0     		b	.L290
 8198              	.L293:
1084:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8199              		.loc 1 1084 0
 8200 124c 0223     		movs	r3, #2
 8201 124e 87F8E534 		strb	r3, [r7, #1253]
 8202 1252 03E0     		b	.L290
 8203              	.L294:
1086:..\src/command_processing.c ****         }   
 8204              		.loc 1 1086 0
 8205 1254 0423     		movs	r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 192


 8206 1256 87F8E534 		strb	r3, [r7, #1253]
 8207 125a 00BF     		nop
 8208              	.L290:
1089:..\src/command_processing.c ****             // Use default specifications for param setting
 8209              		.loc 1 1089 0
 8210 125c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8211 1260 07F10C02 		add	r2, r7, #12
 8212 1264 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8213 1266 002B     		cmp	r3, #0
 8214 1268 40F03682 		bne	.L295
1091:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8215              		.loc 1 1091 0
 8216 126c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8217 1270 07F55372 		add	r2, r7, #844
 8218 1274 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8219 1276 092B     		cmp	r3, #9
 8220 1278 00F23682 		bhi	.L338
 8221 127c 01A2     		adr	r2, .L298
 8222 127e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8223 1282 00BF     		.p2align 2
 8224              	.L298:
 8225 1284 AD120000 		.word	.L297+1
 8226 1288 63130000 		.word	.L299+1
 8227 128c AD120000 		.word	.L297+1
 8228 1290 F3130000 		.word	.L300+1
 8229 1294 89140000 		.word	.L301+1
 8230 1298 1D150000 		.word	.L302+1
 8231 129c B1150000 		.word	.L303+1
 8232 12a0 45160000 		.word	.L304+1
 8233 12a4 E9160000 		.word	.L338+1
 8234 12a8 F9120000 		.word	.L305+1
 8235              		.p2align 1
 8236              	.L297:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8237              		.loc 1 1093 0
 8238 12ac 0023     		movs	r3, #0
 8239 12ae 87F8E734 		strb	r3, [r7, #1255]
 8240 12b2 17E0     		b	.L306
 8241              	.L307:
1094:..\src/command_processing.c ****                     }
 8242              		.loc 1 1094 0 discriminator 3
 8243 12b4 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8244 12b8 07F56673 		add	r3, r7, #920
 8245 12bc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8246 12c0 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8247 12c4 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8248 12c8 01FB02F2 		mul	r2, r1, r2
 8249 12cc 1344     		add	r3, r3, r2
 8250 12ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8251 12d2 0332     		adds	r2, r2, #3
 8252 12d4 3349     		ldr	r1, .L346+56
 8253 12d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8254 12d8 1A70     		strb	r2, [r3]
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8255              		.loc 1 1093 0 discriminator 3
 8256 12da 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8257 12de 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 193


 8258 12e0 87F8E734 		strb	r3, [r7, #1255]
 8259              	.L306:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8260              		.loc 1 1093 0 is_stmt 0 discriminator 1
 8261 12e4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8262 12e8 07F54072 		add	r2, r7, #768
 8263 12ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8264 12ee 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8265 12f2 9A42     		cmp	r2, r3
 8266 12f4 DED3     		bcc	.L307
1096:..\src/command_processing.c ****                 case TYPE_STRING:
 8267              		.loc 1 1096 0 is_stmt 1
 8268 12f6 F8E1     		b	.L333
 8269              	.L305:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8270              		.loc 1 1098 0
 8271 12f8 0023     		movs	r3, #0
 8272 12fa 87F8E734 		strb	r3, [r7, #1255]
 8273 12fe 17E0     		b	.L309
 8274              	.L310:
1099:..\src/command_processing.c ****                     }
 8275              		.loc 1 1099 0 discriminator 3
 8276 1300 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8277 1304 07F56673 		add	r3, r7, #920
 8278 1308 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8279 130c 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8280 1310 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8281 1314 01FB02F2 		mul	r2, r1, r2
 8282 1318 1344     		add	r3, r3, r2
 8283 131a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8284 131e 0332     		adds	r2, r2, #3
 8285 1320 2049     		ldr	r1, .L346+56
 8286 1322 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8287 1324 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8288              		.loc 1 1098 0 discriminator 3
 8289 1326 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8290 132a 0133     		adds	r3, r3, #1
 8291 132c 87F8E734 		strb	r3, [r7, #1255]
 8292              	.L309:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8293              		.loc 1 1098 0 is_stmt 0 discriminator 1
 8294 1330 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8295 1334 07F54072 		add	r2, r7, #768
 8296 1338 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8297 133a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8298 133e 9A42     		cmp	r2, r3
 8299 1340 DED3     		bcc	.L310
1101:..\src/command_processing.c ****                 break; 
 8300              		.loc 1 1101 0 is_stmt 1
 8301 1342 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8302 1346 07F56673 		add	r3, r7, #920
 8303 134a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8304 134e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8305 1352 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8306 1356 01FB02F2 		mul	r2, r1, r2
 8307 135a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 194


 8308 135c 0022     		movs	r2, #0
 8309 135e 1A70     		strb	r2, [r3]
1102:..\src/command_processing.c ****                 case TYPE_INT8:
 8310              		.loc 1 1102 0
 8311 1360 C3E1     		b	.L333
 8312              	.L299:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8313              		.loc 1 1104 0
 8314 1362 0023     		movs	r3, #0
 8315 1364 87F8E734 		strb	r3, [r7, #1255]
 8316 1368 39E0     		b	.L311
 8317              	.L347:
 8318 136a 00BF     		.align	2
 8319              	.L346:
 8320 136c A40C0000 		.word	.LC112
 8321 1370 B0010000 		.word	.LC113
 8322 1374 24020000 		.word	.LC114
 8323 1378 A0020000 		.word	.LC115
 8324 137c E0020000 		.word	.LC116
 8325 1380 0C030000 		.word	.LC117
 8326 1384 24030000 		.word	.LC118
 8327 1388 4C030000 		.word	.LC119
 8328 138c A8030000 		.word	.LC120
 8329 1390 E8030000 		.word	.LC121
 8330 1394 30040000 		.word	.LC122
 8331 1398 D40D0000 		.word	.LC78
 8332 139c F40D0000 		.word	.LC79
 8333 13a0 000E0000 		.word	.LC80
 8334 13a4 00000000 		.word	g_rx
 8335              	.L312:
1105:..\src/command_processing.c ****                     }
 8336              		.loc 1 1105 0 discriminator 3
 8337 13a8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8338 13ac 07F56673 		add	r3, r7, #920
 8339 13b0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8340 13b4 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8341 13b8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8342 13bc 01FB02F2 		mul	r2, r1, r2
 8343 13c0 1344     		add	r3, r3, r2
 8344 13c2 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8345 13c6 0332     		adds	r2, r2, #3
 8346 13c8 C649     		ldr	r1, .L348
 8347 13ca 0A44     		add	r2, r2, r1
 8348 13cc 92F90020 		ldrsb	r2, [r2]
 8349 13d0 D2B2     		uxtb	r2, r2
 8350 13d2 1A70     		strb	r2, [r3]
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8351              		.loc 1 1104 0 discriminator 3
 8352 13d4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8353 13d8 0133     		adds	r3, r3, #1
 8354 13da 87F8E734 		strb	r3, [r7, #1255]
 8355              	.L311:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8356              		.loc 1 1104 0 is_stmt 0 discriminator 1
 8357 13de 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8358 13e2 07F54072 		add	r2, r7, #768
 8359 13e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 195


 8360 13e8 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8361 13ec 9A42     		cmp	r2, r3
 8362 13ee DBD3     		bcc	.L312
1107:..\src/command_processing.c ****                 case TYPE_INT16:
 8363              		.loc 1 1107 0 is_stmt 1
 8364 13f0 7BE1     		b	.L333
 8365              	.L300:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8366              		.loc 1 1109 0
 8367 13f2 0023     		movs	r3, #0
 8368 13f4 87F8E734 		strb	r3, [r7, #1255]
 8369 13f8 3CE0     		b	.L313
 8370              	.L316:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8371              		.loc 1 1110 0
 8372 13fa 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8373 13fe 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8374 1402 02FB03F3 		mul	r3, r2, r3
 8375 1406 0333     		adds	r3, r3, #3
 8376 1408 B64A     		ldr	r2, .L348
 8377 140a 1344     		add	r3, r3, r2
 8378 140c B3F90030 		ldrsh	r3, [r3]
 8379 1410 A7F8D834 		strh	r3, [r7, #1240]	@ movhi
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8380              		.loc 1 1111 0
 8381 1414 0023     		movs	r3, #0
 8382 1416 87F8E634 		strb	r3, [r7, #1254]
 8383 141a 20E0     		b	.L314
 8384              	.L315:
1112:..\src/command_processing.c ****                         }
 8385              		.loc 1 1112 0 discriminator 3
 8386 141c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8387 1420 07F56673 		add	r3, r7, #920
 8388 1424 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8389 1428 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8390 142c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8391 1430 01FB03F3 		mul	r3, r1, r3
 8392 1434 1846     		mov	r0, r3
 8393 1436 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8394 143a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8395 143e CB1A     		subs	r3, r1, r3
 8396 1440 0344     		add	r3, r3, r0
 8397 1442 013B     		subs	r3, r3, #1
 8398 1444 1344     		add	r3, r3, r2
 8399 1446 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8400 144a 07F59B61 		add	r1, r7, #1240
 8401 144e 0A44     		add	r2, r2, r1
 8402 1450 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8403 1452 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8404              		.loc 1 1111 0 discriminator 3
 8405 1454 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8406 1458 0133     		adds	r3, r3, #1
 8407 145a 87F8E634 		strb	r3, [r7, #1254]
 8408              	.L314:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 8409              		.loc 1 1111 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 196


 8410 145e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8411 1462 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8412 1466 9A42     		cmp	r2, r3
 8413 1468 D8D3     		bcc	.L315
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8414              		.loc 1 1109 0 is_stmt 1 discriminator 2
 8415 146a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8416 146e 0133     		adds	r3, r3, #1
 8417 1470 87F8E734 		strb	r3, [r7, #1255]
 8418              	.L313:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8419              		.loc 1 1109 0 is_stmt 0 discriminator 1
 8420 1474 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8421 1478 07F54072 		add	r2, r7, #768
 8422 147c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8423 147e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8424 1482 9A42     		cmp	r2, r3
 8425 1484 B9D3     		bcc	.L316
1115:..\src/command_processing.c ****                 case TYPE_UINT16:
 8426              		.loc 1 1115 0 is_stmt 1
 8427 1486 30E1     		b	.L333
 8428              	.L301:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8429              		.loc 1 1117 0
 8430 1488 0023     		movs	r3, #0
 8431 148a 87F8E734 		strb	r3, [r7, #1255]
 8432 148e 3BE0     		b	.L317
 8433              	.L320:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8434              		.loc 1 1118 0
 8435 1490 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8436 1494 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8437 1498 02FB03F3 		mul	r3, r2, r3
 8438 149c 0333     		adds	r3, r3, #3
 8439 149e 914A     		ldr	r2, .L348
 8440 14a0 1344     		add	r3, r3, r2
 8441 14a2 1B88     		ldrh	r3, [r3]
 8442 14a4 A7F8D634 		strh	r3, [r7, #1238]	@ movhi
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8443              		.loc 1 1119 0
 8444 14a8 0023     		movs	r3, #0
 8445 14aa 87F8E634 		strb	r3, [r7, #1254]
 8446 14ae 20E0     		b	.L318
 8447              	.L319:
1120:..\src/command_processing.c ****                         }
 8448              		.loc 1 1120 0 discriminator 3
 8449 14b0 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8450 14b4 07F56673 		add	r3, r7, #920
 8451 14b8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8452 14bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8453 14c0 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8454 14c4 01FB03F3 		mul	r3, r1, r3
 8455 14c8 1846     		mov	r0, r3
 8456 14ca 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8457 14ce 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8458 14d2 CB1A     		subs	r3, r1, r3
 8459 14d4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 197


 8460 14d6 013B     		subs	r3, r3, #1
 8461 14d8 1344     		add	r3, r3, r2
 8462 14da 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8463 14de 07F2D641 		addw	r1, r7, #1238
 8464 14e2 0A44     		add	r2, r2, r1
 8465 14e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8466 14e6 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8467              		.loc 1 1119 0 discriminator 3
 8468 14e8 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8469 14ec 0133     		adds	r3, r3, #1
 8470 14ee 87F8E634 		strb	r3, [r7, #1254]
 8471              	.L318:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 8472              		.loc 1 1119 0 is_stmt 0 discriminator 1
 8473 14f2 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8474 14f6 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8475 14fa 9A42     		cmp	r2, r3
 8476 14fc D8D3     		bcc	.L319
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8477              		.loc 1 1117 0 is_stmt 1 discriminator 2
 8478 14fe 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8479 1502 0133     		adds	r3, r3, #1
 8480 1504 87F8E734 		strb	r3, [r7, #1255]
 8481              	.L317:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 8482              		.loc 1 1117 0 is_stmt 0 discriminator 1
 8483 1508 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8484 150c 07F54072 		add	r2, r7, #768
 8485 1510 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8486 1512 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8487 1516 9A42     		cmp	r2, r3
 8488 1518 BAD3     		bcc	.L320
1123:..\src/command_processing.c ****                 case TYPE_INT32:
 8489              		.loc 1 1123 0 is_stmt 1
 8490 151a E6E0     		b	.L333
 8491              	.L302:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8492              		.loc 1 1125 0
 8493 151c 0023     		movs	r3, #0
 8494 151e 87F8E734 		strb	r3, [r7, #1255]
 8495 1522 3BE0     		b	.L321
 8496              	.L324:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8497              		.loc 1 1126 0
 8498 1524 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8499 1528 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8500 152c 02FB03F3 		mul	r3, r2, r3
 8501 1530 0333     		adds	r3, r3, #3
 8502 1532 6C4A     		ldr	r2, .L348
 8503 1534 1344     		add	r3, r3, r2
 8504 1536 1B68     		ldr	r3, [r3]
 8505 1538 C7F8D034 		str	r3, [r7, #1232]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8506              		.loc 1 1127 0
 8507 153c 0023     		movs	r3, #0
 8508 153e 87F8E634 		strb	r3, [r7, #1254]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 198


 8509 1542 20E0     		b	.L322
 8510              	.L323:
1128:..\src/command_processing.c ****                         }
 8511              		.loc 1 1128 0 discriminator 3
 8512 1544 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8513 1548 07F56673 		add	r3, r7, #920
 8514 154c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8515 1550 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8516 1554 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8517 1558 01FB03F3 		mul	r3, r1, r3
 8518 155c 1846     		mov	r0, r3
 8519 155e 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8520 1562 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8521 1566 CB1A     		subs	r3, r1, r3
 8522 1568 0344     		add	r3, r3, r0
 8523 156a 013B     		subs	r3, r3, #1
 8524 156c 1344     		add	r3, r3, r2
 8525 156e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8526 1572 07F59A61 		add	r1, r7, #1232
 8527 1576 0A44     		add	r2, r2, r1
 8528 1578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8529 157a 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8530              		.loc 1 1127 0 discriminator 3
 8531 157c 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8532 1580 0133     		adds	r3, r3, #1
 8533 1582 87F8E634 		strb	r3, [r7, #1254]
 8534              	.L322:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 8535              		.loc 1 1127 0 is_stmt 0 discriminator 1
 8536 1586 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8537 158a 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8538 158e 9A42     		cmp	r2, r3
 8539 1590 D8D3     		bcc	.L323
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8540              		.loc 1 1125 0 is_stmt 1 discriminator 2
 8541 1592 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8542 1596 0133     		adds	r3, r3, #1
 8543 1598 87F8E734 		strb	r3, [r7, #1255]
 8544              	.L321:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 8545              		.loc 1 1125 0 is_stmt 0 discriminator 1
 8546 159c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8547 15a0 07F54072 		add	r2, r7, #768
 8548 15a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8549 15a6 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8550 15aa 9A42     		cmp	r2, r3
 8551 15ac BAD3     		bcc	.L324
1131:..\src/command_processing.c ****                 case TYPE_UINT32:
 8552              		.loc 1 1131 0 is_stmt 1
 8553 15ae 9CE0     		b	.L333
 8554              	.L303:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8555              		.loc 1 1133 0
 8556 15b0 0023     		movs	r3, #0
 8557 15b2 87F8E734 		strb	r3, [r7, #1255]
 8558 15b6 3BE0     		b	.L325
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 199


 8559              	.L328:
1134:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8560              		.loc 1 1134 0
 8561 15b8 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8562 15bc 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8563 15c0 02FB03F3 		mul	r3, r2, r3
 8564 15c4 0333     		adds	r3, r3, #3
 8565 15c6 474A     		ldr	r2, .L348
 8566 15c8 1344     		add	r3, r3, r2
 8567 15ca 1B68     		ldr	r3, [r3]
 8568 15cc C7F8CC34 		str	r3, [r7, #1228]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8569              		.loc 1 1135 0
 8570 15d0 0023     		movs	r3, #0
 8571 15d2 87F8E634 		strb	r3, [r7, #1254]
 8572 15d6 20E0     		b	.L326
 8573              	.L327:
1136:..\src/command_processing.c ****                         }
 8574              		.loc 1 1136 0 discriminator 3
 8575 15d8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8576 15dc 07F56673 		add	r3, r7, #920
 8577 15e0 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8578 15e4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8579 15e8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8580 15ec 01FB03F3 		mul	r3, r1, r3
 8581 15f0 1846     		mov	r0, r3
 8582 15f2 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8583 15f6 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8584 15fa CB1A     		subs	r3, r1, r3
 8585 15fc 0344     		add	r3, r3, r0
 8586 15fe 013B     		subs	r3, r3, #1
 8587 1600 1344     		add	r3, r3, r2
 8588 1602 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8589 1606 07F2CC41 		addw	r1, r7, #1228
 8590 160a 0A44     		add	r2, r2, r1
 8591 160c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8592 160e 1A70     		strb	r2, [r3]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8593              		.loc 1 1135 0 discriminator 3
 8594 1610 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8595 1614 0133     		adds	r3, r3, #1
 8596 1616 87F8E634 		strb	r3, [r7, #1254]
 8597              	.L326:
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 8598              		.loc 1 1135 0 is_stmt 0 discriminator 1
 8599 161a 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8600 161e 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8601 1622 9A42     		cmp	r2, r3
 8602 1624 D8D3     		bcc	.L327
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8603              		.loc 1 1133 0 is_stmt 1 discriminator 2
 8604 1626 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8605 162a 0133     		adds	r3, r3, #1
 8606 162c 87F8E734 		strb	r3, [r7, #1255]
 8607              	.L325:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 8608              		.loc 1 1133 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 200


 8609 1630 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8610 1634 07F54072 		add	r2, r7, #768
 8611 1638 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8612 163a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8613 163e 9A42     		cmp	r2, r3
 8614 1640 BAD3     		bcc	.L328
1139:..\src/command_processing.c ****                 case TYPE_FLOAT:
 8615              		.loc 1 1139 0 is_stmt 1
 8616 1642 52E0     		b	.L333
 8617              	.L304:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8618              		.loc 1 1141 0
 8619 1644 0023     		movs	r3, #0
 8620 1646 87F8E734 		strb	r3, [r7, #1255]
 8621 164a 3BE0     		b	.L329
 8622              	.L332:
1142:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8623              		.loc 1 1142 0
 8624 164c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8625 1650 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 8626 1654 02FB03F3 		mul	r3, r2, r3
 8627 1658 0333     		adds	r3, r3, #3
 8628 165a 224A     		ldr	r2, .L348
 8629 165c 1344     		add	r3, r3, r2
 8630 165e 1B68     		ldr	r3, [r3]	@ float
 8631 1660 C7F8C834 		str	r3, [r7, #1224]	@ float
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8632              		.loc 1 1143 0
 8633 1664 0023     		movs	r3, #0
 8634 1666 87F8E634 		strb	r3, [r7, #1254]
 8635 166a 20E0     		b	.L330
 8636              	.L331:
1144:..\src/command_processing.c ****                         }
 8637              		.loc 1 1144 0 discriminator 3
 8638 166c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 8639 1670 07F56673 		add	r3, r7, #920
 8640 1674 53F82220 		ldr	r2, [r3, r2, lsl #2]
 8641 1678 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8642 167c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8643 1680 01FB03F3 		mul	r3, r1, r3
 8644 1684 1846     		mov	r0, r3
 8645 1686 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 8646 168a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8647 168e CB1A     		subs	r3, r1, r3
 8648 1690 0344     		add	r3, r3, r0
 8649 1692 013B     		subs	r3, r3, #1
 8650 1694 1344     		add	r3, r3, r2
 8651 1696 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8652 169a 07F59961 		add	r1, r7, #1224
 8653 169e 0A44     		add	r2, r2, r1
 8654 16a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8655 16a2 1A70     		strb	r2, [r3]
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8656              		.loc 1 1143 0 discriminator 3
 8657 16a4 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 8658 16a8 0133     		adds	r3, r3, #1
 8659 16aa 87F8E634 		strb	r3, [r7, #1254]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 201


 8660              	.L330:
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 8661              		.loc 1 1143 0 is_stmt 0 discriminator 1
 8662 16ae 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 8663 16b2 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 8664 16b6 9A42     		cmp	r2, r3
 8665 16b8 D8D3     		bcc	.L331
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8666              		.loc 1 1141 0 is_stmt 1 discriminator 2
 8667 16ba 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 8668 16be 0133     		adds	r3, r3, #1
 8669 16c0 87F8E734 		strb	r3, [r7, #1255]
 8670              	.L329:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 8671              		.loc 1 1141 0 is_stmt 0 discriminator 1
 8672 16c4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8673 16c8 07F54072 		add	r2, r7, #768
 8674 16cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8675 16ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 8676 16d2 9A42     		cmp	r2, r3
 8677 16d4 BAD3     		bcc	.L332
1147:..\src/command_processing.c ****                 default:
 8678              		.loc 1 1147 0 is_stmt 1
 8679 16d6 08E0     		b	.L333
 8680              	.L295:
1154:..\src/command_processing.c ****         }
 8681              		.loc 1 1154 0
 8682 16d8 BB1D     		adds	r3, r7, #6
 8683 16da 1B88     		ldrh	r3, [r3]
 8684 16dc 1846     		mov	r0, r3
 8685 16de FFF7FEFF 		bl	set_custom_param
 8686 16e2 02E0     		b	.L333
 8687              	.L349:
 8688              		.align	2
 8689              	.L348:
 8690 16e4 00000000 		.word	g_rx
 8691              	.L338:
1149:..\src/command_processing.c ****             }
 8692              		.loc 1 1149 0
 8693 16e8 00BF     		nop
 8694              	.L333:
1158:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 8695              		.loc 1 1158 0
 8696 16ea 97F8DB34 		ldrb	r3, [r7, #1243]	@ zero_extendqisi2
 8697 16ee 9BB2     		uxth	r3, r3
 8698 16f0 BA1D     		adds	r2, r7, #6
 8699 16f2 1288     		ldrh	r2, [r2]
 8700 16f4 9A42     		cmp	r2, r3
 8701 16f6 11D0     		beq	.L334
1159:..\src/command_processing.c ****         }
 8702              		.loc 1 1159 0
 8703 16f8 D7F8E034 		ldr	r3, [r7, #1248]
 8704 16fc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 8705 1700 5B01     		lsls	r3, r3, #5
 8706 1702 03F51273 		add	r3, r3, #584
 8707 1706 D7F8E024 		ldr	r2, [r7, #1248]
 8708 170a D018     		adds	r0, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 202


 8709 170c D7F8E034 		ldr	r3, [r7, #1248]
 8710 1710 03F5F873 		add	r3, r3, #496
 8711 1714 1022     		movs	r2, #16
 8712 1716 1946     		mov	r1, r3
 8713 1718 FFF7FEFF 		bl	memcpy
 8714              	.L334:
1163:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 8715              		.loc 1 1163 0
 8716 171c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8717 1720 07F55372 		add	r2, r7, #844
 8718 1724 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8719 1726 002B     		cmp	r3, #0
 8720 1728 42D1     		bne	.L339
 8721              	.LBB14:
1164:..\src/command_processing.c ****             do {
 8722              		.loc 1 1164 0
 8723 172a 0023     		movs	r3, #0
 8724 172c 87F8DF34 		strb	r3, [r7, #1247]
 8725 1730 FF23     		movs	r3, #255
 8726 1732 87F8DE34 		strb	r3, [r7, #1246]
 8727              	.L336:
1166:..\src/command_processing.c ****                 idx++;
 8728              		.loc 1 1166 0
 8729 1736 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8730 173a 07F55372 		add	r2, r7, #844
 8731 173e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8732 1740 002B     		cmp	r3, #0
 8733 1742 04D1     		bne	.L335
1166:..\src/command_processing.c ****                 idx++;
 8734              		.loc 1 1166 0 is_stmt 0 discriminator 1
 8735 1744 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8736 1748 0133     		adds	r3, r3, #1
 8737 174a 87F8DE34 		strb	r3, [r7, #1246]
 8738              	.L335:
1167:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 8739              		.loc 1 1167 0 is_stmt 1
 8740 174e 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 8741 1752 0133     		adds	r3, r3, #1
 8742 1754 87F8DF34 		strb	r3, [r7, #1247]
1168:..\src/command_processing.c ****             
 8743              		.loc 1 1168 0
 8744 1758 97F8DF24 		ldrb	r2, [r7, #1247]	@ zero_extendqisi2
 8745 175c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 8746 1760 9A42     		cmp	r2, r3
 8747 1762 E8D9     		bls	.L336
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8748              		.loc 1 1170 0
 8749 1764 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8750 1768 07F1C402 		add	r2, r7, #196
 8751 176c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8752 176e 052B     		cmp	r3, #5
 8753 1770 1BD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8754              		.loc 1 1170 0 is_stmt 0 discriminator 1
 8755 1772 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8756 1776 07F1C402 		add	r2, r7, #196
 8757 177a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 203


 8758 177c 062B     		cmp	r3, #6
 8759 177e 14D0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8760              		.loc 1 1170 0 discriminator 2
 8761 1780 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8762 1784 07F1C402 		add	r2, r7, #196
 8763 1788 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8764 178a 082B     		cmp	r3, #8
 8765 178c 0DD0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8766              		.loc 1 1170 0 discriminator 3
 8767 178e 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8768 1792 07F1C402 		add	r2, r7, #196
 8769 1796 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8770 1798 092B     		cmp	r3, #9
 8771 179a 06D0     		beq	.L337
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 8772              		.loc 1 1170 0 discriminator 4
 8773 179c 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 8774 17a0 07F1C402 		add	r2, r7, #196
 8775 17a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8776 17a6 0A2B     		cmp	r3, #10
 8777 17a8 02D1     		bne	.L339
 8778              	.L337:
1171:..\src/command_processing.c ****             }   
 8779              		.loc 1 1171 0 is_stmt 1
 8780 17aa 044B     		ldr	r3, .L350
 8781 17ac 0122     		movs	r2, #1
 8782 17ae 1A70     		strb	r2, [r3]
 8783              	.L339:
 8784              	.LBE14:
 8785              		.loc 1 1175 0
 8786 17b0 00BF     		nop
 8787 17b2 07F59D67 		add	r7, r7, #1256
 8788              		.cfi_def_cfa_offset 16
 8789 17b6 BD46     		mov	sp, r7
 8790              		.cfi_def_cfa_register 13
 8791              		@ sp needed
 8792 17b8 B0BD     		pop	{r4, r5, r7, pc}
 8793              	.L351:
 8794 17ba 00BF     		.align	2
 8795              	.L350:
 8796 17bc 00000000 		.word	reset_PSoC_flag
 8797              		.cfi_endproc
 8798              	.LFE68:
 8799              		.size	manage_param_list, .-manage_param_list
 8800              		.global	__aeabi_fmul
 8801              		.global	__aeabi_f2iz
 8802              		.section	.text.set_custom_param,"ax",%progbits
 8803              		.align	2
 8804              		.global	set_custom_param
 8805              		.thumb
 8806              		.thumb_func
 8807              		.type	set_custom_param, %function
 8808              	set_custom_param:
 8809              	.LFB69:
1176:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 204


1177:..\src/command_processing.c **** //==============================================================================
1178:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1179:..\src/command_processing.c **** //==============================================================================
1180:..\src/command_processing.c **** 
1181:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 8810              		.loc 1 1181 0
 8811              		.cfi_startproc
 8812              		@ args = 0, pretend = 0, frame = 24
 8813              		@ frame_needed = 1, uses_anonymous_args = 0
 8814 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8815              		.cfi_def_cfa_offset 20
 8816              		.cfi_offset 4, -20
 8817              		.cfi_offset 5, -16
 8818              		.cfi_offset 6, -12
 8819              		.cfi_offset 7, -8
 8820              		.cfi_offset 14, -4
 8821 0002 87B0     		sub	sp, sp, #28
 8822              		.cfi_def_cfa_offset 48
 8823 0004 00AF     		add	r7, sp, #0
 8824              		.cfi_def_cfa_register 7
 8825 0006 0346     		mov	r3, r0
 8826 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1182:..\src/command_processing.c **** 
1183:..\src/command_processing.c ****     uint8 CYDATA i, j;
1184:..\src/command_processing.c ****     uint8 aux_uchar;
1185:..\src/command_processing.c ****     float aux_float, aux_float2;
1186:..\src/command_processing.c **** 
1187:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 8827              		.loc 1 1187 0
 8828 000a 0023     		movs	r3, #0
 8829 000c 3B75     		strb	r3, [r7, #20]
1188:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 8830              		.loc 1 1188 0
 8831 000e 0123     		movs	r3, #1
 8832 0010 FB74     		strb	r3, [r7, #19]
1189:..\src/command_processing.c ****     
1190:..\src/command_processing.c ****     switch(index){
 8833              		.loc 1 1190 0
 8834 0012 FB88     		ldrh	r3, [r7, #6]
 8835 0014 023B     		subs	r3, r3, #2
 8836 0016 452B     		cmp	r3, #69
 8837 0018 01F2EB81 		bhi	.L444
 8838 001c 01A2     		adr	r2, .L355
 8839 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8840 0022 00BF     		.p2align 2
 8841              	.L355:
 8842 0024 3D010000 		.word	.L354+1
 8843 0028 6F030000 		.word	.L356+1
 8844 002c F3130000 		.word	.L444+1
 8845 0030 B5050000 		.word	.L357+1
 8846 0034 F3130000 		.word	.L444+1
 8847 0038 F3130000 		.word	.L444+1
 8848 003c FF050000 		.word	.L358+1
 8849 0040 F3130000 		.word	.L444+1
 8850 0044 F3130000 		.word	.L444+1
 8851 0048 35070000 		.word	.L359+1
 8852 004c F3130000 		.word	.L444+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 205


 8853 0050 F3130000 		.word	.L444+1
 8854 0054 F3130000 		.word	.L444+1
 8855 0058 F3130000 		.word	.L444+1
 8856 005c F3130000 		.word	.L444+1
 8857 0060 F3130000 		.word	.L444+1
 8858 0064 F3130000 		.word	.L444+1
 8859 0068 F3130000 		.word	.L444+1
 8860 006c F3130000 		.word	.L444+1
 8861 0070 F3130000 		.word	.L444+1
 8862 0074 F3130000 		.word	.L444+1
 8863 0078 35080000 		.word	.L360+1
 8864 007c 93080000 		.word	.L361+1
 8865 0080 F3130000 		.word	.L444+1
 8866 0084 F3130000 		.word	.L444+1
 8867 0088 F3130000 		.word	.L444+1
 8868 008c CD080000 		.word	.L362+1
 8869 0090 F3130000 		.word	.L444+1
 8870 0094 F3130000 		.word	.L444+1
 8871 0098 490A0000 		.word	.L363+1
 8872 009c F50A0000 		.word	.L364+1
 8873 00a0 F3130000 		.word	.L444+1
 8874 00a4 F3130000 		.word	.L444+1
 8875 00a8 F3130000 		.word	.L444+1
 8876 00ac F3130000 		.word	.L444+1
 8877 00b0 F3130000 		.word	.L444+1
 8878 00b4 2F0B0000 		.word	.L365+1
 8879 00b8 F3130000 		.word	.L444+1
 8880 00bc F3130000 		.word	.L444+1
 8881 00c0 F3130000 		.word	.L444+1
 8882 00c4 F3130000 		.word	.L444+1
 8883 00c8 F3130000 		.word	.L444+1
 8884 00cc 690B0000 		.word	.L366+1
 8885 00d0 AF0D0000 		.word	.L367+1
 8886 00d4 F3130000 		.word	.L444+1
 8887 00d8 DD0F0000 		.word	.L368+1
 8888 00dc F3130000 		.word	.L444+1
 8889 00e0 F3130000 		.word	.L444+1
 8890 00e4 45100000 		.word	.L369+1
 8891 00e8 F3130000 		.word	.L444+1
 8892 00ec F3130000 		.word	.L444+1
 8893 00f0 59110000 		.word	.L370+1
 8894 00f4 F3130000 		.word	.L444+1
 8895 00f8 F3130000 		.word	.L444+1
 8896 00fc F3130000 		.word	.L444+1
 8897 0100 F3130000 		.word	.L444+1
 8898 0104 F3130000 		.word	.L444+1
 8899 0108 F3130000 		.word	.L444+1
 8900 010c F3130000 		.word	.L444+1
 8901 0110 57120000 		.word	.L371+1
 8902 0114 F3130000 		.word	.L444+1
 8903 0118 F3130000 		.word	.L444+1
 8904 011c F3130000 		.word	.L444+1
 8905 0120 F3130000 		.word	.L444+1
 8906 0124 F3130000 		.word	.L444+1
 8907 0128 F3130000 		.word	.L444+1
 8908 012c F3130000 		.word	.L444+1
 8909 0130 F3130000 		.word	.L444+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 206


 8910 0134 F3130000 		.word	.L444+1
 8911 0138 A1120000 		.word	.L372+1
 8912              		.p2align 1
 8913              	.L354:
1191:..\src/command_processing.c ****         case 2:         // Position PID
1192:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8914              		.loc 1 1192 0
 8915 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8916 013e AB49     		ldr	r1, .L450
 8917 0140 1346     		mov	r3, r2
 8918 0142 DB00     		lsls	r3, r3, #3
 8919 0144 9B1A     		subs	r3, r3, r2
 8920 0146 1B01     		lsls	r3, r3, #4
 8921 0148 0B44     		add	r3, r3, r1
 8922 014a 03F20F13 		addw	r3, r3, #271
 8923 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8924 0150 032B     		cmp	r3, #3
 8925 0152 00F08680 		beq	.L373
1193:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8926              		.loc 1 1193 0
 8927 0156 A64B     		ldr	r3, .L450+4
 8928 0158 1B68     		ldr	r3, [r3]	@ float
 8929 015a FB60     		str	r3, [r7, #12]	@ float
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8930              		.loc 1 1194 0
 8931 015c 0023     		movs	r3, #0
 8932 015e BB75     		strb	r3, [r7, #22]
 8933 0160 0EE0     		b	.L374
 8934              	.L375:
1195:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8935              		.loc 1 1195 0 discriminator 3
 8936 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8937 0164 C3F10303 		rsb	r3, r3, #3
 8938 0168 07F10802 		add	r2, r7, #8
 8939 016c 1344     		add	r3, r3, r2
 8940 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8941 0170 07F10C01 		add	r1, r7, #12
 8942 0174 0A44     		add	r2, r2, r1
 8943 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8944 0178 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8945              		.loc 1 1194 0 discriminator 3
 8946 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8947 017c 0133     		adds	r3, r3, #1
 8948 017e BB75     		strb	r3, [r7, #22]
 8949              	.L374:
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8950              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8951 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8952 0182 032B     		cmp	r3, #3
 8953 0184 EDD9     		bls	.L375
1196:..\src/command_processing.c ****                 }
1197:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 8954              		.loc 1 1197 0 is_stmt 1
 8955 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8956 0188 BB68     		ldr	r3, [r7, #8]	@ float
 8957 018a 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 207


 8958 018e 1846     		mov	r0, r3
 8959 0190 FFF7FEFF 		bl	__aeabi_fmul
 8960 0194 0346     		mov	r3, r0
 8961 0196 1846     		mov	r0, r3
 8962 0198 FFF7FEFF 		bl	__aeabi_f2iz
 8963 019c 0146     		mov	r1, r0
 8964 019e 954A     		ldr	r2, .L450+8
 8965 01a0 2346     		mov	r3, r4
 8966 01a2 DB00     		lsls	r3, r3, #3
 8967 01a4 1B1B     		subs	r3, r3, r4
 8968 01a6 1B01     		lsls	r3, r3, #4
 8969 01a8 1344     		add	r3, r3, r2
 8970 01aa B033     		adds	r3, r3, #176
 8971 01ac 1960     		str	r1, [r3]
1198:..\src/command_processing.c ****                 
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8972              		.loc 1 1199 0
 8973 01ae 924B     		ldr	r3, .L450+12
 8974 01b0 1B68     		ldr	r3, [r3]	@ float
 8975 01b2 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8976              		.loc 1 1200 0
 8977 01b4 0023     		movs	r3, #0
 8978 01b6 BB75     		strb	r3, [r7, #22]
 8979 01b8 0EE0     		b	.L376
 8980              	.L377:
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8981              		.loc 1 1201 0 discriminator 3
 8982 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8983 01bc C3F10303 		rsb	r3, r3, #3
 8984 01c0 07F10802 		add	r2, r7, #8
 8985 01c4 1344     		add	r3, r3, r2
 8986 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8987 01c8 07F10C01 		add	r1, r7, #12
 8988 01cc 0A44     		add	r2, r2, r1
 8989 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8990 01d0 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8991              		.loc 1 1200 0 discriminator 3
 8992 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8993 01d4 0133     		adds	r3, r3, #1
 8994 01d6 BB75     		strb	r3, [r7, #22]
 8995              	.L376:
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8996              		.loc 1 1200 0 is_stmt 0 discriminator 1
 8997 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8998 01da 032B     		cmp	r3, #3
 8999 01dc EDD9     		bls	.L377
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9000              		.loc 1 1203 0 is_stmt 1
 9001 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9002 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 9003 01e2 4FF08F41 		mov	r1, #1199570944
 9004 01e6 1846     		mov	r0, r3
 9005 01e8 FFF7FEFF 		bl	__aeabi_fmul
 9006 01ec 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 208


 9007 01ee 1846     		mov	r0, r3
 9008 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 9009 01f4 0146     		mov	r1, r0
 9010 01f6 7F4A     		ldr	r2, .L450+8
 9011 01f8 2346     		mov	r3, r4
 9012 01fa DB00     		lsls	r3, r3, #3
 9013 01fc 1B1B     		subs	r3, r3, r4
 9014 01fe 1B01     		lsls	r3, r3, #4
 9015 0200 1344     		add	r3, r3, r2
 9016 0202 B433     		adds	r3, r3, #180
 9017 0204 1960     		str	r1, [r3]
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9018              		.loc 1 1205 0
 9019 0206 7D4B     		ldr	r3, .L450+16
 9020 0208 1B68     		ldr	r3, [r3]	@ float
 9021 020a FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9022              		.loc 1 1206 0
 9023 020c 0023     		movs	r3, #0
 9024 020e BB75     		strb	r3, [r7, #22]
 9025 0210 0EE0     		b	.L378
 9026              	.L379:
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9027              		.loc 1 1207 0 discriminator 3
 9028 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9029 0214 C3F10303 		rsb	r3, r3, #3
 9030 0218 07F10802 		add	r2, r7, #8
 9031 021c 1344     		add	r3, r3, r2
 9032 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9033 0220 07F10C01 		add	r1, r7, #12
 9034 0224 0A44     		add	r2, r2, r1
 9035 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9036 0228 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9037              		.loc 1 1206 0 discriminator 3
 9038 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9039 022c 0133     		adds	r3, r3, #1
 9040 022e BB75     		strb	r3, [r7, #22]
 9041              	.L378:
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9042              		.loc 1 1206 0 is_stmt 0 discriminator 1
 9043 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9044 0232 032B     		cmp	r3, #3
 9045 0234 EDD9     		bls	.L379
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9046              		.loc 1 1209 0 is_stmt 1
 9047 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9048 0238 BB68     		ldr	r3, [r7, #8]	@ float
 9049 023a 4FF08F41 		mov	r1, #1199570944
 9050 023e 1846     		mov	r0, r3
 9051 0240 FFF7FEFF 		bl	__aeabi_fmul
 9052 0244 0346     		mov	r3, r0
 9053 0246 1846     		mov	r0, r3
 9054 0248 FFF7FEFF 		bl	__aeabi_f2iz
 9055 024c 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 209


 9056 024e 694A     		ldr	r2, .L450+8
 9057 0250 2346     		mov	r3, r4
 9058 0252 DB00     		lsls	r3, r3, #3
 9059 0254 1B1B     		subs	r3, r3, r4
 9060 0256 1B01     		lsls	r3, r3, #4
 9061 0258 1344     		add	r3, r3, r2
 9062 025a B833     		adds	r3, r3, #184
 9063 025c 1960     		str	r1, [r3]
1210:..\src/command_processing.c ****             }
1211:..\src/command_processing.c ****             else {
1212:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1213:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1214:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1215:..\src/command_processing.c ****                 }
1216:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1217:..\src/command_processing.c ****                 
1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1229:..\src/command_processing.c ****             }
1230:..\src/command_processing.c ****             break;
 9064              		.loc 1 1230 0
 9065 025e 01F0D3B8 		b	.L387
 9066              	.L373:
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9067              		.loc 1 1212 0
 9068 0262 634B     		ldr	r3, .L450+4
 9069 0264 1B68     		ldr	r3, [r3]	@ float
 9070 0266 FB60     		str	r3, [r7, #12]	@ float
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9071              		.loc 1 1213 0
 9072 0268 0023     		movs	r3, #0
 9073 026a BB75     		strb	r3, [r7, #22]
 9074 026c 0EE0     		b	.L381
 9075              	.L382:
1214:..\src/command_processing.c ****                 }
 9076              		.loc 1 1214 0 discriminator 3
 9077 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9078 0270 C3F10303 		rsb	r3, r3, #3
 9079 0274 07F10802 		add	r2, r7, #8
 9080 0278 1344     		add	r3, r3, r2
 9081 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9082 027c 07F10C01 		add	r1, r7, #12
 9083 0280 0A44     		add	r2, r2, r1
 9084 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9085 0284 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9086              		.loc 1 1213 0 discriminator 3
 9087 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 210


 9088 0288 0133     		adds	r3, r3, #1
 9089 028a BB75     		strb	r3, [r7, #22]
 9090              	.L381:
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9091              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9092 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9093 028e 032B     		cmp	r3, #3
 9094 0290 EDD9     		bls	.L382
1216:..\src/command_processing.c ****                 
 9095              		.loc 1 1216 0 is_stmt 1
 9096 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9097 0294 BB68     		ldr	r3, [r7, #8]	@ float
 9098 0296 4FF08F41 		mov	r1, #1199570944
 9099 029a 1846     		mov	r0, r3
 9100 029c FFF7FEFF 		bl	__aeabi_fmul
 9101 02a0 0346     		mov	r3, r0
 9102 02a2 1846     		mov	r0, r3
 9103 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 9104 02a8 0146     		mov	r1, r0
 9105 02aa 524A     		ldr	r2, .L450+8
 9106 02ac 2346     		mov	r3, r4
 9107 02ae DB00     		lsls	r3, r3, #3
 9108 02b0 1B1B     		subs	r3, r3, r4
 9109 02b2 1B01     		lsls	r3, r3, #4
 9110 02b4 1344     		add	r3, r3, r2
 9111 02b6 C833     		adds	r3, r3, #200
 9112 02b8 1960     		str	r1, [r3]
1218:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9113              		.loc 1 1218 0
 9114 02ba 4F4B     		ldr	r3, .L450+12
 9115 02bc 1B68     		ldr	r3, [r3]	@ float
 9116 02be FB60     		str	r3, [r7, #12]	@ float
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9117              		.loc 1 1219 0
 9118 02c0 0023     		movs	r3, #0
 9119 02c2 BB75     		strb	r3, [r7, #22]
 9120 02c4 0EE0     		b	.L383
 9121              	.L384:
1220:..\src/command_processing.c ****                 }
 9122              		.loc 1 1220 0 discriminator 3
 9123 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9124 02c8 C3F10303 		rsb	r3, r3, #3
 9125 02cc 07F10802 		add	r2, r7, #8
 9126 02d0 1344     		add	r3, r3, r2
 9127 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9128 02d4 07F10C01 		add	r1, r7, #12
 9129 02d8 0A44     		add	r2, r2, r1
 9130 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9131 02dc 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9132              		.loc 1 1219 0 discriminator 3
 9133 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9134 02e0 0133     		adds	r3, r3, #1
 9135 02e2 BB75     		strb	r3, [r7, #22]
 9136              	.L383:
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9137              		.loc 1 1219 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 211


 9138 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9139 02e6 032B     		cmp	r3, #3
 9140 02e8 EDD9     		bls	.L384
1222:..\src/command_processing.c ****                 
 9141              		.loc 1 1222 0 is_stmt 1
 9142 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9143 02ec BB68     		ldr	r3, [r7, #8]	@ float
 9144 02ee 4FF08F41 		mov	r1, #1199570944
 9145 02f2 1846     		mov	r0, r3
 9146 02f4 FFF7FEFF 		bl	__aeabi_fmul
 9147 02f8 0346     		mov	r3, r0
 9148 02fa 1846     		mov	r0, r3
 9149 02fc FFF7FEFF 		bl	__aeabi_f2iz
 9150 0300 0146     		mov	r1, r0
 9151 0302 3C4A     		ldr	r2, .L450+8
 9152 0304 2346     		mov	r3, r4
 9153 0306 DB00     		lsls	r3, r3, #3
 9154 0308 1B1B     		subs	r3, r3, r4
 9155 030a 1B01     		lsls	r3, r3, #4
 9156 030c 1344     		add	r3, r3, r2
 9157 030e CC33     		adds	r3, r3, #204
 9158 0310 1960     		str	r1, [r3]
1224:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9159              		.loc 1 1224 0
 9160 0312 3A4B     		ldr	r3, .L450+16
 9161 0314 1B68     		ldr	r3, [r3]	@ float
 9162 0316 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9163              		.loc 1 1225 0
 9164 0318 0023     		movs	r3, #0
 9165 031a BB75     		strb	r3, [r7, #22]
 9166 031c 0EE0     		b	.L385
 9167              	.L386:
1226:..\src/command_processing.c ****                 }
 9168              		.loc 1 1226 0 discriminator 3
 9169 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9170 0320 C3F10303 		rsb	r3, r3, #3
 9171 0324 07F10802 		add	r2, r7, #8
 9172 0328 1344     		add	r3, r3, r2
 9173 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9174 032c 07F10C01 		add	r1, r7, #12
 9175 0330 0A44     		add	r2, r2, r1
 9176 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9177 0334 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9178              		.loc 1 1225 0 discriminator 3
 9179 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9180 0338 0133     		adds	r3, r3, #1
 9181 033a BB75     		strb	r3, [r7, #22]
 9182              	.L385:
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9183              		.loc 1 1225 0 is_stmt 0 discriminator 1
 9184 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9185 033e 032B     		cmp	r3, #3
 9186 0340 EDD9     		bls	.L386
1228:..\src/command_processing.c ****             }
 9187              		.loc 1 1228 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 212


 9188 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9189 0344 BB68     		ldr	r3, [r7, #8]	@ float
 9190 0346 4FF08F41 		mov	r1, #1199570944
 9191 034a 1846     		mov	r0, r3
 9192 034c FFF7FEFF 		bl	__aeabi_fmul
 9193 0350 0346     		mov	r3, r0
 9194 0352 1846     		mov	r0, r3
 9195 0354 FFF7FEFF 		bl	__aeabi_f2iz
 9196 0358 0146     		mov	r1, r0
 9197 035a 264A     		ldr	r2, .L450+8
 9198 035c 2346     		mov	r3, r4
 9199 035e DB00     		lsls	r3, r3, #3
 9200 0360 1B1B     		subs	r3, r3, r4
 9201 0362 1B01     		lsls	r3, r3, #4
 9202 0364 1344     		add	r3, r3, r2
 9203 0366 D033     		adds	r3, r3, #208
 9204 0368 1960     		str	r1, [r3]
 9205              		.loc 1 1230 0
 9206 036a 01F04DB8 		b	.L387
 9207              	.L356:
1231:..\src/command_processing.c ****             
1232:..\src/command_processing.c ****         case 3:         //Current PID
1233:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9208              		.loc 1 1233 0
 9209 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9210 0370 1E49     		ldr	r1, .L450
 9211 0372 1346     		mov	r3, r2
 9212 0374 DB00     		lsls	r3, r3, #3
 9213 0376 9B1A     		subs	r3, r3, r2
 9214 0378 1B01     		lsls	r3, r3, #4
 9215 037a 0B44     		add	r3, r3, r1
 9216 037c 03F20F13 		addw	r3, r3, #271
 9217 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9218 0382 032B     		cmp	r3, #3
 9219 0384 00F09080 		beq	.L388
1234:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9220              		.loc 1 1234 0
 9221 0388 194B     		ldr	r3, .L450+4
 9222 038a 1B68     		ldr	r3, [r3]	@ float
 9223 038c FB60     		str	r3, [r7, #12]	@ float
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9224              		.loc 1 1235 0
 9225 038e 0023     		movs	r3, #0
 9226 0390 BB75     		strb	r3, [r7, #22]
 9227 0392 0EE0     		b	.L389
 9228              	.L390:
1236:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9229              		.loc 1 1236 0 discriminator 3
 9230 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9231 0396 C3F10303 		rsb	r3, r3, #3
 9232 039a 07F10802 		add	r2, r7, #8
 9233 039e 1344     		add	r3, r3, r2
 9234 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9235 03a2 07F10C01 		add	r1, r7, #12
 9236 03a6 0A44     		add	r2, r2, r1
 9237 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9238 03aa 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 213


1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9239              		.loc 1 1235 0 discriminator 3
 9240 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9241 03ae 0133     		adds	r3, r3, #1
 9242 03b0 BB75     		strb	r3, [r7, #22]
 9243              	.L389:
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9244              		.loc 1 1235 0 is_stmt 0 discriminator 1
 9245 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9246 03b4 032B     		cmp	r3, #3
 9247 03b6 EDD9     		bls	.L390
1237:..\src/command_processing.c ****                 }
1238:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9248              		.loc 1 1238 0 is_stmt 1
 9249 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9250 03ba BB68     		ldr	r3, [r7, #8]	@ float
 9251 03bc 4FF08F41 		mov	r1, #1199570944
 9252 03c0 1846     		mov	r0, r3
 9253 03c2 FFF7FEFF 		bl	__aeabi_fmul
 9254 03c6 0346     		mov	r3, r0
 9255 03c8 1846     		mov	r0, r3
 9256 03ca FFF7FEFF 		bl	__aeabi_f2iz
 9257 03ce 0146     		mov	r1, r0
 9258 03d0 084A     		ldr	r2, .L450+8
 9259 03d2 2346     		mov	r3, r4
 9260 03d4 DB00     		lsls	r3, r3, #3
 9261 03d6 1B1B     		subs	r3, r3, r4
 9262 03d8 1B01     		lsls	r3, r3, #4
 9263 03da 1344     		add	r3, r3, r2
 9264 03dc BC33     		adds	r3, r3, #188
 9265 03de 1960     		str	r1, [r3]
1239:..\src/command_processing.c ****                 
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9266              		.loc 1 1240 0
 9267 03e0 054B     		ldr	r3, .L450+12
 9268 03e2 1B68     		ldr	r3, [r3]	@ float
 9269 03e4 FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9270              		.loc 1 1241 0
 9271 03e6 0023     		movs	r3, #0
 9272 03e8 BB75     		strb	r3, [r7, #22]
 9273 03ea 18E0     		b	.L391
 9274              	.L451:
 9275              		.align	2
 9276              	.L450:
 9277 03ec 00000000 		.word	c_mem
 9278 03f0 03000000 		.word	g_rx+3
 9279 03f4 00000000 		.word	g_mem
 9280 03f8 07000000 		.word	g_rx+7
 9281 03fc 0B000000 		.word	g_rx+11
 9282              	.L392:
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9283              		.loc 1 1242 0 discriminator 3
 9284 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9285 0402 C3F10303 		rsb	r3, r3, #3
 9286 0406 07F10802 		add	r2, r7, #8
 9287 040a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 214


 9288 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9289 040e 07F10C01 		add	r1, r7, #12
 9290 0412 0A44     		add	r2, r2, r1
 9291 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9292 0416 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9293              		.loc 1 1241 0 discriminator 3
 9294 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9295 041a 0133     		adds	r3, r3, #1
 9296 041c BB75     		strb	r3, [r7, #22]
 9297              	.L391:
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9298              		.loc 1 1241 0 is_stmt 0 discriminator 1
 9299 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9300 0420 032B     		cmp	r3, #3
 9301 0422 EDD9     		bls	.L392
1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9302              		.loc 1 1244 0 is_stmt 1
 9303 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9304 0426 BB68     		ldr	r3, [r7, #8]	@ float
 9305 0428 4FF08F41 		mov	r1, #1199570944
 9306 042c 1846     		mov	r0, r3
 9307 042e FFF7FEFF 		bl	__aeabi_fmul
 9308 0432 0346     		mov	r3, r0
 9309 0434 1846     		mov	r0, r3
 9310 0436 FFF7FEFF 		bl	__aeabi_f2iz
 9311 043a 0146     		mov	r1, r0
 9312 043c B54A     		ldr	r2, .L452
 9313 043e 2346     		mov	r3, r4
 9314 0440 DB00     		lsls	r3, r3, #3
 9315 0442 1B1B     		subs	r3, r3, r4
 9316 0444 1B01     		lsls	r3, r3, #4
 9317 0446 1344     		add	r3, r3, r2
 9318 0448 C033     		adds	r3, r3, #192
 9319 044a 1960     		str	r1, [r3]
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9320              		.loc 1 1246 0
 9321 044c B24B     		ldr	r3, .L452+4
 9322 044e 1B68     		ldr	r3, [r3]	@ float
 9323 0450 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9324              		.loc 1 1247 0
 9325 0452 0023     		movs	r3, #0
 9326 0454 BB75     		strb	r3, [r7, #22]
 9327 0456 0EE0     		b	.L393
 9328              	.L394:
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9329              		.loc 1 1248 0 discriminator 3
 9330 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9331 045a C3F10303 		rsb	r3, r3, #3
 9332 045e 07F10802 		add	r2, r7, #8
 9333 0462 1344     		add	r3, r3, r2
 9334 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9335 0466 07F10C01 		add	r1, r7, #12
 9336 046a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 215


 9337 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9338 046e 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9339              		.loc 1 1247 0 discriminator 3
 9340 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9341 0472 0133     		adds	r3, r3, #1
 9342 0474 BB75     		strb	r3, [r7, #22]
 9343              	.L393:
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9344              		.loc 1 1247 0 is_stmt 0 discriminator 1
 9345 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9346 0478 032B     		cmp	r3, #3
 9347 047a EDD9     		bls	.L394
1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9348              		.loc 1 1250 0 is_stmt 1
 9349 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9350 047e BB68     		ldr	r3, [r7, #8]	@ float
 9351 0480 4FF08F41 		mov	r1, #1199570944
 9352 0484 1846     		mov	r0, r3
 9353 0486 FFF7FEFF 		bl	__aeabi_fmul
 9354 048a 0346     		mov	r3, r0
 9355 048c 1846     		mov	r0, r3
 9356 048e FFF7FEFF 		bl	__aeabi_f2iz
 9357 0492 0146     		mov	r1, r0
 9358 0494 9F4A     		ldr	r2, .L452
 9359 0496 2346     		mov	r3, r4
 9360 0498 DB00     		lsls	r3, r3, #3
 9361 049a 1B1B     		subs	r3, r3, r4
 9362 049c 1B01     		lsls	r3, r3, #4
 9363 049e 1344     		add	r3, r3, r2
 9364 04a0 C433     		adds	r3, r3, #196
 9365 04a2 1960     		str	r1, [r3]
1251:..\src/command_processing.c ****             }
1252:..\src/command_processing.c ****             else {
1253:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1255:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1256:..\src/command_processing.c ****                 }
1257:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1261:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1262:..\src/command_processing.c ****                 }
1263:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1264:..\src/command_processing.c ****                 
1265:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1267:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1268:..\src/command_processing.c ****                 }
1269:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1270:..\src/command_processing.c ****             }            
1271:..\src/command_processing.c ****             break;  
 9366              		.loc 1 1271 0
 9367 04a4 00F0B0BF 		b	.L387
 9368              	.L388:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 216


1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9369              		.loc 1 1253 0
 9370 04a8 9C4B     		ldr	r3, .L452+8
 9371 04aa 1B68     		ldr	r3, [r3]	@ float
 9372 04ac FB60     		str	r3, [r7, #12]	@ float
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9373              		.loc 1 1254 0
 9374 04ae 0023     		movs	r3, #0
 9375 04b0 BB75     		strb	r3, [r7, #22]
 9376 04b2 0EE0     		b	.L396
 9377              	.L397:
1255:..\src/command_processing.c ****                 }
 9378              		.loc 1 1255 0 discriminator 3
 9379 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9380 04b6 C3F10303 		rsb	r3, r3, #3
 9381 04ba 07F10802 		add	r2, r7, #8
 9382 04be 1344     		add	r3, r3, r2
 9383 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9384 04c2 07F10C01 		add	r1, r7, #12
 9385 04c6 0A44     		add	r2, r2, r1
 9386 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9387 04ca 1A70     		strb	r2, [r3]
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9388              		.loc 1 1254 0 discriminator 3
 9389 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9390 04ce 0133     		adds	r3, r3, #1
 9391 04d0 BB75     		strb	r3, [r7, #22]
 9392              	.L396:
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9393              		.loc 1 1254 0 is_stmt 0 discriminator 1
 9394 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9395 04d4 032B     		cmp	r3, #3
 9396 04d6 EDD9     		bls	.L397
1257:..\src/command_processing.c ****                 
 9397              		.loc 1 1257 0 is_stmt 1
 9398 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9399 04da BB68     		ldr	r3, [r7, #8]	@ float
 9400 04dc 4FF08F41 		mov	r1, #1199570944
 9401 04e0 1846     		mov	r0, r3
 9402 04e2 FFF7FEFF 		bl	__aeabi_fmul
 9403 04e6 0346     		mov	r3, r0
 9404 04e8 1846     		mov	r0, r3
 9405 04ea FFF7FEFF 		bl	__aeabi_f2iz
 9406 04ee 0146     		mov	r1, r0
 9407 04f0 884A     		ldr	r2, .L452
 9408 04f2 2346     		mov	r3, r4
 9409 04f4 DB00     		lsls	r3, r3, #3
 9410 04f6 1B1B     		subs	r3, r3, r4
 9411 04f8 1B01     		lsls	r3, r3, #4
 9412 04fa 1344     		add	r3, r3, r2
 9413 04fc D433     		adds	r3, r3, #212
 9414 04fe 1960     		str	r1, [r3]
1259:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9415              		.loc 1 1259 0
 9416 0500 874B     		ldr	r3, .L452+12
 9417 0502 1B68     		ldr	r3, [r3]	@ float
 9418 0504 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 217


1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9419              		.loc 1 1260 0
 9420 0506 0023     		movs	r3, #0
 9421 0508 BB75     		strb	r3, [r7, #22]
 9422 050a 0EE0     		b	.L398
 9423              	.L399:
1261:..\src/command_processing.c ****                 }
 9424              		.loc 1 1261 0 discriminator 3
 9425 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9426 050e C3F10303 		rsb	r3, r3, #3
 9427 0512 07F10802 		add	r2, r7, #8
 9428 0516 1344     		add	r3, r3, r2
 9429 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9430 051a 07F10C01 		add	r1, r7, #12
 9431 051e 0A44     		add	r2, r2, r1
 9432 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9433 0522 1A70     		strb	r2, [r3]
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9434              		.loc 1 1260 0 discriminator 3
 9435 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9436 0526 0133     		adds	r3, r3, #1
 9437 0528 BB75     		strb	r3, [r7, #22]
 9438              	.L398:
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9439              		.loc 1 1260 0 is_stmt 0 discriminator 1
 9440 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9441 052c 032B     		cmp	r3, #3
 9442 052e EDD9     		bls	.L399
1263:..\src/command_processing.c ****                 
 9443              		.loc 1 1263 0 is_stmt 1
 9444 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9445 0532 BB68     		ldr	r3, [r7, #8]	@ float
 9446 0534 4FF08F41 		mov	r1, #1199570944
 9447 0538 1846     		mov	r0, r3
 9448 053a FFF7FEFF 		bl	__aeabi_fmul
 9449 053e 0346     		mov	r3, r0
 9450 0540 1846     		mov	r0, r3
 9451 0542 FFF7FEFF 		bl	__aeabi_f2iz
 9452 0546 0146     		mov	r1, r0
 9453 0548 724A     		ldr	r2, .L452
 9454 054a 2346     		mov	r3, r4
 9455 054c DB00     		lsls	r3, r3, #3
 9456 054e 1B1B     		subs	r3, r3, r4
 9457 0550 1B01     		lsls	r3, r3, #4
 9458 0552 1344     		add	r3, r3, r2
 9459 0554 D833     		adds	r3, r3, #216
 9460 0556 1960     		str	r1, [r3]
1265:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9461              		.loc 1 1265 0
 9462 0558 6F4B     		ldr	r3, .L452+4
 9463 055a 1B68     		ldr	r3, [r3]	@ float
 9464 055c FB60     		str	r3, [r7, #12]	@ float
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9465              		.loc 1 1266 0
 9466 055e 0023     		movs	r3, #0
 9467 0560 BB75     		strb	r3, [r7, #22]
 9468 0562 0EE0     		b	.L400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 218


 9469              	.L401:
1267:..\src/command_processing.c ****                 }
 9470              		.loc 1 1267 0 discriminator 3
 9471 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9472 0566 C3F10303 		rsb	r3, r3, #3
 9473 056a 07F10802 		add	r2, r7, #8
 9474 056e 1344     		add	r3, r3, r2
 9475 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9476 0572 07F10C01 		add	r1, r7, #12
 9477 0576 0A44     		add	r2, r2, r1
 9478 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9479 057a 1A70     		strb	r2, [r3]
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9480              		.loc 1 1266 0 discriminator 3
 9481 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9482 057e 0133     		adds	r3, r3, #1
 9483 0580 BB75     		strb	r3, [r7, #22]
 9484              	.L400:
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9485              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9486 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9487 0584 032B     		cmp	r3, #3
 9488 0586 EDD9     		bls	.L401
1269:..\src/command_processing.c ****             }            
 9489              		.loc 1 1269 0 is_stmt 1
 9490 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9491 058a BB68     		ldr	r3, [r7, #8]	@ float
 9492 058c 4FF08F41 		mov	r1, #1199570944
 9493 0590 1846     		mov	r0, r3
 9494 0592 FFF7FEFF 		bl	__aeabi_fmul
 9495 0596 0346     		mov	r3, r0
 9496 0598 1846     		mov	r0, r3
 9497 059a FFF7FEFF 		bl	__aeabi_f2iz
 9498 059e 0146     		mov	r1, r0
 9499 05a0 5C4A     		ldr	r2, .L452
 9500 05a2 2346     		mov	r3, r4
 9501 05a4 DB00     		lsls	r3, r3, #3
 9502 05a6 1B1B     		subs	r3, r3, r4
 9503 05a8 1B01     		lsls	r3, r3, #4
 9504 05aa 1344     		add	r3, r3, r2
 9505 05ac DC33     		adds	r3, r3, #220
 9506 05ae 1960     		str	r1, [r3]
 9507              		.loc 1 1271 0
 9508 05b0 00F02ABF 		b	.L387
 9509              	.L357:
1272:..\src/command_processing.c ****             
1273:..\src/command_processing.c ****         case 5:         //Input mode
1274:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 9510              		.loc 1 1274 0
 9511 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9512 05b6 5B4B     		ldr	r3, .L452+16
 9513 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9514 05ba 5649     		ldr	r1, .L452
 9515 05bc 1346     		mov	r3, r2
 9516 05be DB00     		lsls	r3, r3, #3
 9517 05c0 9B1A     		subs	r3, r3, r2
 9518 05c2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 219


 9519 05c4 0B44     		add	r3, r3, r1
 9520 05c6 03F58773 		add	r3, r3, #270
 9521 05ca 0246     		mov	r2, r0
 9522 05cc 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             
1276:..\src/command_processing.c ****             // Hold the actual position
1277:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 9523              		.loc 1 1277 0
 9524 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9525 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9526 05d2 5048     		ldr	r0, .L452
 9527 05d4 1346     		mov	r3, r2
 9528 05d6 DB00     		lsls	r3, r3, #3
 9529 05d8 9B1A     		subs	r3, r3, r2
 9530 05da 1B01     		lsls	r3, r3, #4
 9531 05dc 0344     		add	r3, r3, r0
 9532 05de 03F58873 		add	r3, r3, #272
 9533 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9534 05e4 1846     		mov	r0, r3
 9535 05e6 504A     		ldr	r2, .L452+20
 9536 05e8 3423     		movs	r3, #52
 9537 05ea 03FB00F3 		mul	r3, r3, r0
 9538 05ee 1344     		add	r3, r3, r2
 9539 05f0 1A68     		ldr	r2, [r3]
 9540 05f2 4E48     		ldr	r0, .L452+24
 9541 05f4 0B01     		lsls	r3, r1, #4
 9542 05f6 0344     		add	r3, r3, r0
 9543 05f8 1A60     		str	r2, [r3]
1278:..\src/command_processing.c ****             break;   
 9544              		.loc 1 1278 0
 9545 05fa 00F005BF 		b	.L387
 9546              	.L358:
1279:..\src/command_processing.c **** 
1280:..\src/command_processing.c ****         case 8:         //Measurement Offset
1281:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9547              		.loc 1 1281 0
 9548 05fe 0023     		movs	r3, #0
 9549 0600 FB75     		strb	r3, [r7, #23]
 9550 0602 7EE0     		b	.L402
 9551              	.L403:
1282:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9552              		.loc 1 1282 0 discriminator 3
 9553 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9554 0606 4349     		ldr	r1, .L452
 9555 0608 1346     		mov	r3, r2
 9556 060a DB00     		lsls	r3, r3, #3
 9557 060c 9B1A     		subs	r3, r3, r2
 9558 060e 1B01     		lsls	r3, r3, #4
 9559 0610 0B44     		add	r3, r3, r1
 9560 0612 03F58873 		add	r3, r3, #272
 9561 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9562 0618 1C46     		mov	r4, r3
 9563 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9564 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9565 061e 5B00     		lsls	r3, r3, #1
 9566 0620 0333     		adds	r3, r3, #3
 9567 0622 4049     		ldr	r1, .L452+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 220


 9568 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9569 0626 1B02     		lsls	r3, r3, #8
 9570 0628 19B2     		sxth	r1, r3
 9571 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9572 062c 0233     		adds	r3, r3, #2
 9573 062e 5B00     		lsls	r3, r3, #1
 9574 0630 3C48     		ldr	r0, .L452+16
 9575 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9576 0634 1BB2     		sxth	r3, r3
 9577 0636 0B43     		orrs	r3, r3, r1
 9578 0638 1BB2     		sxth	r3, r3
 9579 063a 1846     		mov	r0, r3
 9580 063c 3549     		ldr	r1, .L452
 9581 063e 2346     		mov	r3, r4
 9582 0640 5B00     		lsls	r3, r3, #1
 9583 0642 2344     		add	r3, r3, r4
 9584 0644 9B00     		lsls	r3, r3, #2
 9585 0646 1344     		add	r3, r3, r2
 9586 0648 6633     		adds	r3, r3, #102
 9587 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1283:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 9588              		.loc 1 1283 0 discriminator 3
 9589 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9590 0650 3049     		ldr	r1, .L452
 9591 0652 1346     		mov	r3, r2
 9592 0654 DB00     		lsls	r3, r3, #3
 9593 0656 9B1A     		subs	r3, r3, r2
 9594 0658 1B01     		lsls	r3, r3, #4
 9595 065a 0B44     		add	r3, r3, r1
 9596 065c 03F58873 		add	r3, r3, #272
 9597 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9598 0662 1D46     		mov	r5, r3
 9599 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9600 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9601 0668 2A48     		ldr	r0, .L452
 9602 066a 1346     		mov	r3, r2
 9603 066c DB00     		lsls	r3, r3, #3
 9604 066e 9B1A     		subs	r3, r3, r2
 9605 0670 1B01     		lsls	r3, r3, #4
 9606 0672 0344     		add	r3, r3, r0
 9607 0674 03F58873 		add	r3, r3, #272
 9608 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9609 067a 1C46     		mov	r4, r3
 9610 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9611 067e 2548     		ldr	r0, .L452
 9612 0680 2346     		mov	r3, r4
 9613 0682 5B00     		lsls	r3, r3, #1
 9614 0684 2344     		add	r3, r3, r4
 9615 0686 9B00     		lsls	r3, r3, #2
 9616 0688 1344     		add	r3, r3, r2
 9617 068a 6633     		adds	r3, r3, #102
 9618 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9619 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9620 0692 204C     		ldr	r4, .L452
 9621 0694 1346     		mov	r3, r2
 9622 0696 DB00     		lsls	r3, r3, #3
 9623 0698 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 221


 9624 069a 1B01     		lsls	r3, r3, #4
 9625 069c 2344     		add	r3, r3, r4
 9626 069e 03F58873 		add	r3, r3, #272
 9627 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9628 06a4 1E46     		mov	r6, r3
 9629 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9630 06a8 1A4C     		ldr	r4, .L452
 9631 06aa 3346     		mov	r3, r6
 9632 06ac 5B00     		lsls	r3, r3, #1
 9633 06ae 3344     		add	r3, r3, r6
 9634 06b0 1B01     		lsls	r3, r3, #4
 9635 06b2 2344     		add	r3, r3, r4
 9636 06b4 1344     		add	r3, r3, r2
 9637 06b6 03F29513 		addw	r3, r3, #405
 9638 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9639 06bc 00FA03F2 		lsl	r2, r0, r3
 9640 06c0 1448     		ldr	r0, .L452
 9641 06c2 2B46     		mov	r3, r5
 9642 06c4 5B00     		lsls	r3, r3, #1
 9643 06c6 2B44     		add	r3, r3, r5
 9644 06c8 9B00     		lsls	r3, r3, #2
 9645 06ca 0B44     		add	r3, r3, r1
 9646 06cc 6633     		adds	r3, r3, #102
 9647 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 9648              		.loc 1 1285 0 discriminator 3
 9649 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9650 06d4 0F49     		ldr	r1, .L452
 9651 06d6 1346     		mov	r3, r2
 9652 06d8 DB00     		lsls	r3, r3, #3
 9653 06da 9B1A     		subs	r3, r3, r2
 9654 06dc 1B01     		lsls	r3, r3, #4
 9655 06de 0B44     		add	r3, r3, r1
 9656 06e0 03F58873 		add	r3, r3, #272
 9657 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9658 06e6 1846     		mov	r0, r3
 9659 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9660 06ea 0F49     		ldr	r1, .L452+20
 9661 06ec 3422     		movs	r2, #52
 9662 06ee 02FB00F2 		mul	r2, r2, r0
 9663 06f2 0A44     		add	r2, r2, r1
 9664 06f4 1344     		add	r3, r3, r2
 9665 06f6 1833     		adds	r3, r3, #24
 9666 06f8 0022     		movs	r2, #0
 9667 06fa 1A70     		strb	r2, [r3]
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9668              		.loc 1 1281 0 discriminator 3
 9669 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9670 06fe 0133     		adds	r3, r3, #1
 9671 0700 FB75     		strb	r3, [r7, #23]
 9672              	.L402:
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 9673              		.loc 1 1281 0 is_stmt 0 discriminator 1
 9674 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9675 0704 022B     		cmp	r3, #2
 9676 0706 7FF67DAF 		bls	.L403
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 222


1286:..\src/command_processing.c ****             }
1287:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9677              		.loc 1 1287 0 is_stmt 1
 9678 070a 094B     		ldr	r3, .L452+28
 9679 070c 0122     		movs	r2, #1
 9680 070e 1A70     		strb	r2, [r3]
1288:..\src/command_processing.c ****             break;
 9681              		.loc 1 1288 0
 9682 0710 00F07ABE 		b	.L387
 9683              	.L453:
 9684              		.align	2
 9685              	.L452:
 9686 0714 00000000 		.word	g_mem
 9687 0718 0B000000 		.word	g_rx+11
 9688 071c 03000000 		.word	g_rx+3
 9689 0720 07000000 		.word	g_rx+7
 9690 0724 00000000 		.word	g_rx
 9691 0728 00000000 		.word	g_meas
 9692 072c 00000000 		.word	g_refNew
 9693 0730 00000000 		.word	reset_last_value_flag
 9694              	.L359:
1289:..\src/command_processing.c ****     
1290:..\src/command_processing.c ****         case 11:        //Position limits
1291:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 9695              		.loc 1 1291 0
 9696 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9697 0736 C14B     		ldr	r3, .L454
 9698 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9699 073a 1906     		lsls	r1, r3, #24
 9700 073c BF4B     		ldr	r3, .L454
 9701 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9702 0740 1B04     		lsls	r3, r3, #16
 9703 0742 1943     		orrs	r1, r1, r3
 9704 0744 BD4B     		ldr	r3, .L454
 9705 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9706 0748 1B02     		lsls	r3, r3, #8
 9707 074a 0B43     		orrs	r3, r3, r1
 9708 074c BB49     		ldr	r1, .L454
 9709 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9710 0750 1943     		orrs	r1, r1, r3
 9711 0752 BB48     		ldr	r0, .L454+4
 9712 0754 1346     		mov	r3, r2
 9713 0756 DB00     		lsls	r3, r3, #3
 9714 0758 9B1A     		subs	r3, r3, r2
 9715 075a 1B01     		lsls	r3, r3, #4
 9716 075c 0344     		add	r3, r3, r0
 9717 075e E433     		adds	r3, r3, #228
 9718 0760 1960     		str	r1, [r3]
1292:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 9719              		.loc 1 1292 0
 9720 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9721 0764 B54B     		ldr	r3, .L454
 9722 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9723 0768 1906     		lsls	r1, r3, #24
 9724 076a B44B     		ldr	r3, .L454
 9725 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9726 076e 1B04     		lsls	r3, r3, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 223


 9727 0770 1943     		orrs	r1, r1, r3
 9728 0772 B24B     		ldr	r3, .L454
 9729 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9730 0776 1B02     		lsls	r3, r3, #8
 9731 0778 0B43     		orrs	r3, r3, r1
 9732 077a B049     		ldr	r1, .L454
 9733 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9734 077e 1943     		orrs	r1, r1, r3
 9735 0780 AF48     		ldr	r0, .L454+4
 9736 0782 1346     		mov	r3, r2
 9737 0784 DB00     		lsls	r3, r3, #3
 9738 0786 9B1A     		subs	r3, r3, r2
 9739 0788 1B01     		lsls	r3, r3, #4
 9740 078a 0344     		add	r3, r3, r0
 9741 078c E833     		adds	r3, r3, #232
 9742 078e 1960     		str	r1, [r3]
1293:..\src/command_processing.c **** 
1294:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 9743              		.loc 1 1294 0
 9744 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9745 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9746 0794 AA48     		ldr	r0, .L454+4
 9747 0796 0B46     		mov	r3, r1
 9748 0798 DB00     		lsls	r3, r3, #3
 9749 079a 5B1A     		subs	r3, r3, r1
 9750 079c 1B01     		lsls	r3, r3, #4
 9751 079e 0344     		add	r3, r3, r0
 9752 07a0 E433     		adds	r3, r3, #228
 9753 07a2 1868     		ldr	r0, [r3]
 9754 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9755 07a6 A64C     		ldr	r4, .L454+4
 9756 07a8 0B46     		mov	r3, r1
 9757 07aa DB00     		lsls	r3, r3, #3
 9758 07ac 5B1A     		subs	r3, r3, r1
 9759 07ae 1B01     		lsls	r3, r3, #4
 9760 07b0 2344     		add	r3, r3, r4
 9761 07b2 03F58873 		add	r3, r3, #272
 9762 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9763 07b8 1C46     		mov	r4, r3
 9764 07ba A149     		ldr	r1, .L454+4
 9765 07bc 2346     		mov	r3, r4
 9766 07be 5B00     		lsls	r3, r3, #1
 9767 07c0 2344     		add	r3, r3, r4
 9768 07c2 1B01     		lsls	r3, r3, #4
 9769 07c4 0B44     		add	r3, r3, r1
 9770 07c6 03F29513 		addw	r3, r3, #405
 9771 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9772 07cc 00FA03F1 		lsl	r1, r0, r3
 9773 07d0 9B48     		ldr	r0, .L454+4
 9774 07d2 1346     		mov	r3, r2
 9775 07d4 DB00     		lsls	r3, r3, #3
 9776 07d6 9B1A     		subs	r3, r3, r2
 9777 07d8 1B01     		lsls	r3, r3, #4
 9778 07da 0344     		add	r3, r3, r0
 9779 07dc E433     		adds	r3, r3, #228
 9780 07de 1960     		str	r1, [r3]
1295:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 224


 9781              		.loc 1 1295 0
 9782 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9783 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9784 07e4 9648     		ldr	r0, .L454+4
 9785 07e6 0B46     		mov	r3, r1
 9786 07e8 DB00     		lsls	r3, r3, #3
 9787 07ea 5B1A     		subs	r3, r3, r1
 9788 07ec 1B01     		lsls	r3, r3, #4
 9789 07ee 0344     		add	r3, r3, r0
 9790 07f0 E833     		adds	r3, r3, #232
 9791 07f2 1868     		ldr	r0, [r3]
 9792 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 9793 07f6 924C     		ldr	r4, .L454+4
 9794 07f8 0B46     		mov	r3, r1
 9795 07fa DB00     		lsls	r3, r3, #3
 9796 07fc 5B1A     		subs	r3, r3, r1
 9797 07fe 1B01     		lsls	r3, r3, #4
 9798 0800 2344     		add	r3, r3, r4
 9799 0802 03F58873 		add	r3, r3, #272
 9800 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9801 0808 1C46     		mov	r4, r3
 9802 080a 8D49     		ldr	r1, .L454+4
 9803 080c 2346     		mov	r3, r4
 9804 080e 5B00     		lsls	r3, r3, #1
 9805 0810 2344     		add	r3, r3, r4
 9806 0812 1B01     		lsls	r3, r3, #4
 9807 0814 0B44     		add	r3, r3, r1
 9808 0816 03F29513 		addw	r3, r3, #405
 9809 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9810 081c 00FA03F1 		lsl	r1, r0, r3
 9811 0820 8748     		ldr	r0, .L454+4
 9812 0822 1346     		mov	r3, r2
 9813 0824 DB00     		lsls	r3, r3, #3
 9814 0826 9B1A     		subs	r3, r3, r2
 9815 0828 1B01     		lsls	r3, r3, #4
 9816 082a 0344     		add	r3, r3, r0
 9817 082c E833     		adds	r3, r3, #232
 9818 082e 1960     		str	r1, [r3]
1296:..\src/command_processing.c ****             break;            
 9819              		.loc 1 1296 0
 9820 0830 00F0EABD 		b	.L387
 9821              	.L360:
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****         case 23:        //Rest Position
1299:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 9822              		.loc 1 1299 0
 9823 0834 814B     		ldr	r3, .L454
 9824 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9825 0838 1A06     		lsls	r2, r3, #24
 9826 083a 804B     		ldr	r3, .L454
 9827 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9828 083e 1B04     		lsls	r3, r3, #16
 9829 0840 1A43     		orrs	r2, r2, r3
 9830 0842 7E4B     		ldr	r3, .L454
 9831 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9832 0846 1B02     		lsls	r3, r3, #8
 9833 0848 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 225


 9834 084a 7C4A     		ldr	r2, .L454
 9835 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9836 084e 1343     		orrs	r3, r3, r2
 9837 0850 7B4A     		ldr	r2, .L454+4
 9838 0852 C2F8A032 		str	r3, [r2, #672]
1300:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 9839              		.loc 1 1300 0
 9840 0856 7A4B     		ldr	r3, .L454+4
 9841 0858 D3F8A012 		ldr	r1, [r3, #672]
 9842 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9843 085e 7848     		ldr	r0, .L454+4
 9844 0860 1346     		mov	r3, r2
 9845 0862 DB00     		lsls	r3, r3, #3
 9846 0864 9B1A     		subs	r3, r3, r2
 9847 0866 1B01     		lsls	r3, r3, #4
 9848 0868 0344     		add	r3, r3, r0
 9849 086a 03F58873 		add	r3, r3, #272
 9850 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9851 0870 1846     		mov	r0, r3
 9852 0872 734A     		ldr	r2, .L454+4
 9853 0874 0346     		mov	r3, r0
 9854 0876 5B00     		lsls	r3, r3, #1
 9855 0878 0344     		add	r3, r3, r0
 9856 087a 1B01     		lsls	r3, r3, #4
 9857 087c 1344     		add	r3, r3, r2
 9858 087e 03F29513 		addw	r3, r3, #405
 9859 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9860 0884 01FA03F3 		lsl	r3, r1, r3
 9861 0888 6D4A     		ldr	r2, .L454+4
 9862 088a C2F8A032 		str	r3, [r2, #672]
1301:..\src/command_processing.c ****             break; 
 9863              		.loc 1 1301 0
 9864 088e 00F0BBBD 		b	.L387
 9865              	.L361:
1302:..\src/command_processing.c ****             
1303:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1304:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 9866              		.loc 1 1304 0
 9867 0892 6A4B     		ldr	r3, .L454
 9868 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9869 0896 1A06     		lsls	r2, r3, #24
 9870 0898 684B     		ldr	r3, .L454
 9871 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9872 089c 1B04     		lsls	r3, r3, #16
 9873 089e 1A43     		orrs	r2, r2, r3
 9874 08a0 664B     		ldr	r3, .L454
 9875 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9876 08a4 1B02     		lsls	r3, r3, #8
 9877 08a6 1343     		orrs	r3, r3, r2
 9878 08a8 644A     		ldr	r2, .L454
 9879 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 9880 08ac 1343     		orrs	r3, r3, r2
 9881 08ae 644A     		ldr	r2, .L454+4
 9882 08b0 C2F8A432 		str	r3, [r2, #676]
1305:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 9883              		.loc 1 1305 0
 9884 08b4 624B     		ldr	r3, .L454+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 226


 9885 08b6 D3F8A432 		ldr	r3, [r3, #676]
 9886 08ba 092B     		cmp	r3, #9
 9887 08bc 00F39B85 		bgt	.L445
 9888              		.loc 1 1305 0 is_stmt 0 discriminator 1
 9889 08c0 5F4B     		ldr	r3, .L454+4
 9890 08c2 0A22     		movs	r2, #10
 9891 08c4 C3F8A422 		str	r2, [r3, #676]
1306:..\src/command_processing.c ****            break; 
 9892              		.loc 1 1306 0 is_stmt 1 discriminator 1
 9893 08c8 00F095BD 		b	.L445
 9894              	.L362:
1307:..\src/command_processing.c ****             
1308:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1309:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9895              		.loc 1 1309 0
 9896 08cc 5B4B     		ldr	r3, .L454
 9897 08ce DB78     		ldrb	r3, [r3, #3]
 9898 08d0 BB74     		strb	r3, [r7, #18]
1310:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 9899              		.loc 1 1310 0
 9900 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9901 08d4 002B     		cmp	r3, #0
 9902 08d6 04D0     		beq	.L405
1311:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 9903              		.loc 1 1311 0
 9904 08d8 594B     		ldr	r3, .L454+4
 9905 08da 0122     		movs	r2, #1
 9906 08dc 83F8A720 		strb	r2, [r3, #167]
 9907 08e0 03E0     		b	.L406
 9908              	.L405:
1312:..\src/command_processing.c ****             } else {            // 0
1313:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 9909              		.loc 1 1313 0
 9910 08e2 574B     		ldr	r3, .L454+4
 9911 08e4 0022     		movs	r2, #0
 9912 08e6 83F8A720 		strb	r2, [r3, #167]
 9913              	.L406:
1314:..\src/command_processing.c ****             }
1315:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 9914              		.loc 1 1315 0
 9915 08ea 564B     		ldr	r3, .L454+8
 9916 08ec 0122     		movs	r2, #1
 9917 08ee 1A70     		strb	r2, [r3]
1316:..\src/command_processing.c **** 
1317:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 9918              		.loc 1 1317 0
 9919 08f0 534B     		ldr	r3, .L454+4
 9920 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9921 08f6 002B     		cmp	r3, #0
 9922 08f8 40F07F85 		bne	.L446
1318:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1319:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 9923              		.loc 1 1319 0
 9924 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9925 08fe 504B     		ldr	r3, .L454+4
 9926 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9927 0904 4E49     		ldr	r1, .L454+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 227


 9928 0906 1346     		mov	r3, r2
 9929 0908 DB00     		lsls	r3, r3, #3
 9930 090a 9B1A     		subs	r3, r3, r2
 9931 090c 1B01     		lsls	r3, r3, #4
 9932 090e 0B44     		add	r3, r3, r1
 9933 0910 03F58873 		add	r3, r3, #272
 9934 0914 0246     		mov	r2, r0
 9935 0916 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                 
1321:..\src/command_processing.c ****                 // Change also gears parameters
1322:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9936              		.loc 1 1322 0
 9937 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9938 091a 4949     		ldr	r1, .L454+4
 9939 091c 1346     		mov	r3, r2
 9940 091e DB00     		lsls	r3, r3, #3
 9941 0920 9B1A     		subs	r3, r3, r2
 9942 0922 1B01     		lsls	r3, r3, #4
 9943 0924 0B44     		add	r3, r3, r1
 9944 0926 03F58873 		add	r3, r3, #272
 9945 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9946 092c 1946     		mov	r1, r3
 9947 092e 444A     		ldr	r2, .L454+4
 9948 0930 0B46     		mov	r3, r1
 9949 0932 5B00     		lsls	r3, r3, #1
 9950 0934 0B44     		add	r3, r3, r1
 9951 0936 1B01     		lsls	r3, r3, #4
 9952 0938 1344     		add	r3, r3, r2
 9953 093a 03F5D873 		add	r3, r3, #432
 9954 093e 0122     		movs	r2, #1
 9955 0940 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9956              		.loc 1 1323 0
 9957 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9958 0944 3E49     		ldr	r1, .L454+4
 9959 0946 1346     		mov	r3, r2
 9960 0948 DB00     		lsls	r3, r3, #3
 9961 094a 9B1A     		subs	r3, r3, r2
 9962 094c 1B01     		lsls	r3, r3, #4
 9963 094e 0B44     		add	r3, r3, r1
 9964 0950 03F58873 		add	r3, r3, #272
 9965 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9966 0956 1946     		mov	r1, r3
 9967 0958 394A     		ldr	r2, .L454+4
 9968 095a 0B46     		mov	r3, r1
 9969 095c 5B00     		lsls	r3, r3, #1
 9970 095e 0B44     		add	r3, r3, r1
 9971 0960 1B01     		lsls	r3, r3, #4
 9972 0962 1344     		add	r3, r3, r2
 9973 0964 03F2B513 		addw	r3, r3, #437
 9974 0968 2322     		movs	r2, #35
 9975 096a 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9976              		.loc 1 1324 0
 9977 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9978 096e 3449     		ldr	r1, .L454+4
 9979 0970 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 228


 9980 0972 DB00     		lsls	r3, r3, #3
 9981 0974 9B1A     		subs	r3, r3, r2
 9982 0976 1B01     		lsls	r3, r3, #4
 9983 0978 0B44     		add	r3, r3, r1
 9984 097a 03F58873 		add	r3, r3, #272
 9985 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9986 0980 1946     		mov	r1, r3
 9987 0982 2F4A     		ldr	r2, .L454+4
 9988 0984 0B46     		mov	r3, r1
 9989 0986 5B00     		lsls	r3, r3, #1
 9990 0988 0B44     		add	r3, r3, r1
 9991 098a 1B01     		lsls	r3, r3, #4
 9992 098c 1344     		add	r3, r3, r2
 9993 098e 03F5DB73 		add	r3, r3, #438
 9994 0992 0322     		movs	r2, #3
 9995 0994 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9996              		.loc 1 1325 0
 9997 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9998 0998 2949     		ldr	r1, .L454+4
 9999 099a 1346     		mov	r3, r2
 10000 099c DB00     		lsls	r3, r3, #3
 10001 099e 9B1A     		subs	r3, r3, r2
 10002 09a0 1B01     		lsls	r3, r3, #4
 10003 09a2 0B44     		add	r3, r3, r1
 10004 09a4 03F58873 		add	r3, r3, #272
 10005 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10006 09aa 1946     		mov	r1, r3
 10007 09ac 244A     		ldr	r2, .L454+4
 10008 09ae 0B46     		mov	r3, r1
 10009 09b0 5B00     		lsls	r3, r3, #1
 10010 09b2 0B44     		add	r3, r3, r1
 10011 09b4 1B01     		lsls	r3, r3, #4
 10012 09b6 1344     		add	r3, r3, r2
 10013 09b8 03F2B713 		addw	r3, r3, #439
 10014 09bc FF22     		movs	r2, #255
 10015 09be 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                 
1327:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10016              		.loc 1 1328 0
 10017 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10018 09c2 1F49     		ldr	r1, .L454+4
 10019 09c4 1346     		mov	r3, r2
 10020 09c6 DB00     		lsls	r3, r3, #3
 10021 09c8 9B1A     		subs	r3, r3, r2
 10022 09ca 1B01     		lsls	r3, r3, #4
 10023 09cc 0B44     		add	r3, r3, r1
 10024 09ce 03F21113 		addw	r3, r3, #273
 10025 09d2 0122     		movs	r2, #1
 10026 09d4 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10027              		.loc 1 1329 0
 10028 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10029 09d8 1949     		ldr	r1, .L454+4
 10030 09da 1346     		mov	r3, r2
 10031 09dc DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 229


 10032 09de 9B1A     		subs	r3, r3, r2
 10033 09e0 1B01     		lsls	r3, r3, #4
 10034 09e2 0B44     		add	r3, r3, r1
 10035 09e4 03F58973 		add	r3, r3, #274
 10036 09e8 0122     		movs	r2, #1
 10037 09ea 1A70     		strb	r2, [r3]
1330:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10038              		.loc 1 1330 0
 10039 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10040 09ee 1449     		ldr	r1, .L454+4
 10041 09f0 1346     		mov	r3, r2
 10042 09f2 DB00     		lsls	r3, r3, #3
 10043 09f4 9B1A     		subs	r3, r3, r2
 10044 09f6 1B01     		lsls	r3, r3, #4
 10045 09f8 0B44     		add	r3, r3, r1
 10046 09fa E433     		adds	r3, r3, #228
 10047 09fc 0022     		movs	r2, #0
 10048 09fe 1A60     		str	r2, [r3]
1331:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10049              		.loc 1 1331 0
 10050 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10051 0a02 0F4B     		ldr	r3, .L454+4
 10052 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10053 0a08 1846     		mov	r0, r3
 10054 0a0a 0D49     		ldr	r1, .L454+4
 10055 0a0c 0346     		mov	r3, r0
 10056 0a0e 5B00     		lsls	r3, r3, #1
 10057 0a10 0344     		add	r3, r3, r0
 10058 0a12 1B01     		lsls	r3, r3, #4
 10059 0a14 0B44     		add	r3, r3, r1
 10060 0a16 03F29513 		addw	r3, r3, #405
 10061 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10062 0a1c 1946     		mov	r1, r3
 10063 0a1e 4FF47A53 		mov	r3, #16000
 10064 0a22 03FA01F1 		lsl	r1, r3, r1
 10065 0a26 0648     		ldr	r0, .L454+4
 10066 0a28 1346     		mov	r3, r2
 10067 0a2a DB00     		lsls	r3, r3, #3
 10068 0a2c 9B1A     		subs	r3, r3, r2
 10069 0a2e 1B01     		lsls	r3, r3, #4
 10070 0a30 0344     		add	r3, r3, r0
 10071 0a32 E833     		adds	r3, r3, #232
 10072 0a34 1960     		str	r1, [r3]
1332:..\src/command_processing.c ****             }    
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c ****             break; 
 10073              		.loc 1 1334 0
 10074 0a36 00F0E0BC 		b	.L446
 10075              	.L455:
 10076 0a3a 00BF     		.align	2
 10077              	.L454:
 10078 0a3c 00000000 		.word	g_rx
 10079 0a40 00000000 		.word	g_mem
 10080 0a44 00000000 		.word	reset_last_value_flag
 10081              	.L363:
1335:..\src/command_processing.c **** 
1336:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 230


1337:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10082              		.loc 1 1337 0
 10083 0a48 A94B     		ldr	r3, .L456
 10084 0a4a DB78     		ldrb	r3, [r3, #3]
 10085 0a4c BB74     		strb	r3, [r7, #18]
1338:..\src/command_processing.c ****             if (aux_uchar) {
 10086              		.loc 1 1338 0
 10087 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10088 0a50 002B     		cmp	r3, #0
 10089 0a52 05D0     		beq	.L408
1339:..\src/command_processing.c ****                 reset_counters();
 10090              		.loc 1 1339 0
 10091 0a54 FFF7FEFF 		bl	reset_counters
1340:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10092              		.loc 1 1340 0
 10093 0a58 A64B     		ldr	r3, .L456+4
 10094 0a5a 0022     		movs	r2, #0
 10095 0a5c 83F8A820 		strb	r2, [r3, #168]
 10096              	.L408:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10097              		.loc 1 1343 0
 10098 0a60 A54B     		ldr	r3, .L456+8
 10099 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10100 0a66 012B     		cmp	r3, #1
 10101 0a68 40F0C984 		bne	.L447
1344:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1345:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10102              		.loc 1 1345 0
 10103 0a6c 8720     		movs	r0, #135
 10104 0a6e FFF7FEFF 		bl	DS1302_read
 10105 0a72 0346     		mov	r3, r0
 10106 0a74 BB74     		strb	r3, [r7, #18]
1346:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10107              		.loc 1 1346 0
 10108 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10109 0a78 1B09     		lsrs	r3, r3, #4
 10110 0a7a DBB2     		uxtb	r3, r3
 10111 0a7c 1A46     		mov	r2, r3
 10112 0a7e 9200     		lsls	r2, r2, #2
 10113 0a80 1344     		add	r3, r3, r2
 10114 0a82 5B00     		lsls	r3, r3, #1
 10115 0a84 DAB2     		uxtb	r2, r3
 10116 0a86 BB7C     		ldrb	r3, [r7, #18]
 10117 0a88 03F00F03 		and	r3, r3, #15
 10118 0a8c DBB2     		uxtb	r3, r3
 10119 0a8e 1344     		add	r3, r3, r2
 10120 0a90 DAB2     		uxtb	r2, r3
 10121 0a92 984B     		ldr	r3, .L456+4
 10122 0a94 83F8A420 		strb	r2, [r3, #164]
1347:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10123              		.loc 1 1347 0
 10124 0a98 8920     		movs	r0, #137
 10125 0a9a FFF7FEFF 		bl	DS1302_read
 10126 0a9e 0346     		mov	r3, r0
 10127 0aa0 BB74     		strb	r3, [r7, #18]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 231


1348:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10128              		.loc 1 1348 0
 10129 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10130 0aa4 1B09     		lsrs	r3, r3, #4
 10131 0aa6 DBB2     		uxtb	r3, r3
 10132 0aa8 1A46     		mov	r2, r3
 10133 0aaa 9200     		lsls	r2, r2, #2
 10134 0aac 1344     		add	r3, r3, r2
 10135 0aae 5B00     		lsls	r3, r3, #1
 10136 0ab0 DAB2     		uxtb	r2, r3
 10137 0ab2 BB7C     		ldrb	r3, [r7, #18]
 10138 0ab4 03F00F03 		and	r3, r3, #15
 10139 0ab8 DBB2     		uxtb	r3, r3
 10140 0aba 1344     		add	r3, r3, r2
 10141 0abc DAB2     		uxtb	r2, r3
 10142 0abe 8D4B     		ldr	r3, .L456+4
 10143 0ac0 83F8A520 		strb	r2, [r3, #165]
1349:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10144              		.loc 1 1349 0
 10145 0ac4 8D20     		movs	r0, #141
 10146 0ac6 FFF7FEFF 		bl	DS1302_read
 10147 0aca 0346     		mov	r3, r0
 10148 0acc BB74     		strb	r3, [r7, #18]
1350:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10149              		.loc 1 1350 0
 10150 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10151 0ad0 1B09     		lsrs	r3, r3, #4
 10152 0ad2 DBB2     		uxtb	r3, r3
 10153 0ad4 1A46     		mov	r2, r3
 10154 0ad6 9200     		lsls	r2, r2, #2
 10155 0ad8 1344     		add	r3, r3, r2
 10156 0ada 5B00     		lsls	r3, r3, #1
 10157 0adc DAB2     		uxtb	r2, r3
 10158 0ade BB7C     		ldrb	r3, [r7, #18]
 10159 0ae0 03F00F03 		and	r3, r3, #15
 10160 0ae4 DBB2     		uxtb	r3, r3
 10161 0ae6 1344     		add	r3, r3, r2
 10162 0ae8 DAB2     		uxtb	r2, r3
 10163 0aea 824B     		ldr	r3, .L456+4
 10164 0aec 83F8A620 		strb	r2, [r3, #166]
1351:..\src/command_processing.c ****             }
1352:..\src/command_processing.c ****             break;             
 10165              		.loc 1 1352 0
 10166 0af0 00F085BC 		b	.L447
 10167              	.L364:
 10168              	.LBB15:
1353:..\src/command_processing.c ****             
1354:..\src/command_processing.c ****         case 32:         //Current Time
1355:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10169              		.loc 1 1355 0
 10170 0af4 0023     		movs	r3, #0
 10171 0af6 7B75     		strb	r3, [r7, #21]
 10172 0af8 0CE0     		b	.L410
 10173              	.L411:
1356:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10174              		.loc 1 1356 0 discriminator 3
 10175 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 232


 10176 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10177 0afe 0332     		adds	r2, r2, #3
 10178 0b00 7B49     		ldr	r1, .L456
 10179 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10180 0b04 7B4A     		ldr	r2, .L456+4
 10181 0b06 1344     		add	r3, r3, r2
 10182 0b08 0A46     		mov	r2, r1
 10183 0b0a 83F82022 		strb	r2, [r3, #544]
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10184              		.loc 1 1355 0 discriminator 3
 10185 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10186 0b10 0133     		adds	r3, r3, #1
 10187 0b12 7B75     		strb	r3, [r7, #21]
 10188              	.L410:
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10189              		.loc 1 1355 0 is_stmt 0 discriminator 1
 10190 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10191 0b16 052B     		cmp	r3, #5
 10192 0b18 EFD9     		bls	.L411
 10193              	.LBE15:
1357:..\src/command_processing.c ****             }
1358:..\src/command_processing.c ****             
1359:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10194              		.loc 1 1359 0 is_stmt 1
 10195 0b1a 764B     		ldr	r3, .L456+4
 10196 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10197 0b20 012B     		cmp	r3, #1
 10198 0b22 40F06E84 		bne	.L448
1360:..\src/command_processing.c ****                 set_RTC_time();
 10199              		.loc 1 1360 0
 10200 0b26 FFF7FEFF 		bl	set_RTC_time
1361:..\src/command_processing.c ****             }
1362:..\src/command_processing.c ****             break;
 10201              		.loc 1 1362 0
 10202 0b2a 00F06ABC 		b	.L448
 10203              	.L365:
1363:..\src/command_processing.c ****            
1364:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1365:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10204              		.loc 1 1365 0
 10205 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10206 0b30 6F4B     		ldr	r3, .L456
 10207 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10208 0b34 6F49     		ldr	r1, .L456+4
 10209 0b36 1346     		mov	r3, r2
 10210 0b38 DB00     		lsls	r3, r3, #3
 10211 0b3a 9B1A     		subs	r3, r3, r2
 10212 0b3c 1B01     		lsls	r3, r3, #4
 10213 0b3e 0B44     		add	r3, r3, r1
 10214 0b40 E233     		adds	r3, r3, #226
 10215 0b42 0246     		mov	r2, r0
 10216 0b44 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10217              		.loc 1 1366 0
 10218 0b46 6B4B     		ldr	r3, .L456+4
 10219 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10220 0b4c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 233


 10221 0b4e 5AB2     		sxtb	r2, r3
 10222 0b50 684B     		ldr	r3, .L456+4
 10223 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10224 0b56 5BB2     		sxtb	r3, r3
 10225 0b58 1343     		orrs	r3, r3, r2
 10226 0b5a 5BB2     		sxtb	r3, r3
 10227 0b5c DBB2     		uxtb	r3, r3
 10228 0b5e 1846     		mov	r0, r3
 10229 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1367:..\src/command_processing.c ****             break;
 10230              		.loc 1 1367 0
 10231 0b64 00F050BC 		b	.L387
 10232              	.L366:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1370:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10233              		.loc 1 1370 0
 10234 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10235 0b6a 6349     		ldr	r1, .L456+8
 10236 0b6c 1346     		mov	r3, r2
 10237 0b6e DB00     		lsls	r3, r3, #3
 10238 0b70 9B1A     		subs	r3, r3, r2
 10239 0b72 1B01     		lsls	r3, r3, #4
 10240 0b74 0B44     		add	r3, r3, r1
 10241 0b76 03F20F13 		addw	r3, r3, #271
 10242 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10243 0b7c 032B     		cmp	r3, #3
 10244 0b7e 00F08580 		beq	.L413
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10245              		.loc 1 1371 0
 10246 0b82 5E4B     		ldr	r3, .L456+12
 10247 0b84 1B68     		ldr	r3, [r3]	@ float
 10248 0b86 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10249              		.loc 1 1372 0
 10250 0b88 0023     		movs	r3, #0
 10251 0b8a BB75     		strb	r3, [r7, #22]
 10252 0b8c 0EE0     		b	.L414
 10253              	.L415:
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10254              		.loc 1 1373 0 discriminator 3
 10255 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10256 0b90 C3F10303 		rsb	r3, r3, #3
 10257 0b94 07F10802 		add	r2, r7, #8
 10258 0b98 1344     		add	r3, r3, r2
 10259 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10260 0b9c 07F10C01 		add	r1, r7, #12
 10261 0ba0 0A44     		add	r2, r2, r1
 10262 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10263 0ba4 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10264              		.loc 1 1372 0 discriminator 3
 10265 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10266 0ba8 0133     		adds	r3, r3, #1
 10267 0baa BB75     		strb	r3, [r7, #22]
 10268              	.L414:
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 234


 10269              		.loc 1 1372 0 is_stmt 0 discriminator 1
 10270 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10271 0bae 032B     		cmp	r3, #3
 10272 0bb0 EDD9     		bls	.L415
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10273              		.loc 1 1375 0 is_stmt 1
 10274 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10275 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 10276 0bb6 4FF08F41 		mov	r1, #1199570944
 10277 0bba 1846     		mov	r0, r3
 10278 0bbc FFF7FEFF 		bl	__aeabi_fmul
 10279 0bc0 0346     		mov	r3, r0
 10280 0bc2 1846     		mov	r0, r3
 10281 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 10282 0bc8 0146     		mov	r1, r0
 10283 0bca 4A4A     		ldr	r2, .L456+4
 10284 0bcc 2346     		mov	r3, r4
 10285 0bce DB00     		lsls	r3, r3, #3
 10286 0bd0 1B1B     		subs	r3, r3, r4
 10287 0bd2 1B01     		lsls	r3, r3, #4
 10288 0bd4 1344     		add	r3, r3, r2
 10289 0bd6 B033     		adds	r3, r3, #176
 10290 0bd8 1960     		str	r1, [r3]
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10291              		.loc 1 1377 0
 10292 0bda 494B     		ldr	r3, .L456+16
 10293 0bdc 1B68     		ldr	r3, [r3]	@ float
 10294 0bde FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10295              		.loc 1 1378 0
 10296 0be0 0023     		movs	r3, #0
 10297 0be2 BB75     		strb	r3, [r7, #22]
 10298 0be4 0EE0     		b	.L416
 10299              	.L417:
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10300              		.loc 1 1379 0 discriminator 3
 10301 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10302 0be8 C3F10303 		rsb	r3, r3, #3
 10303 0bec 07F10802 		add	r2, r7, #8
 10304 0bf0 1344     		add	r3, r3, r2
 10305 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10306 0bf4 07F10C01 		add	r1, r7, #12
 10307 0bf8 0A44     		add	r2, r2, r1
 10308 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10309 0bfc 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10310              		.loc 1 1378 0 discriminator 3
 10311 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10312 0c00 0133     		adds	r3, r3, #1
 10313 0c02 BB75     		strb	r3, [r7, #22]
 10314              	.L416:
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10315              		.loc 1 1378 0 is_stmt 0 discriminator 1
 10316 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10317 0c06 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 235


 10318 0c08 EDD9     		bls	.L417
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10319              		.loc 1 1381 0 is_stmt 1
 10320 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10321 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 10322 0c0e 4FF08F41 		mov	r1, #1199570944
 10323 0c12 1846     		mov	r0, r3
 10324 0c14 FFF7FEFF 		bl	__aeabi_fmul
 10325 0c18 0346     		mov	r3, r0
 10326 0c1a 1846     		mov	r0, r3
 10327 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 10328 0c20 0146     		mov	r1, r0
 10329 0c22 344A     		ldr	r2, .L456+4
 10330 0c24 2346     		mov	r3, r4
 10331 0c26 DB00     		lsls	r3, r3, #3
 10332 0c28 1B1B     		subs	r3, r3, r4
 10333 0c2a 1B01     		lsls	r3, r3, #4
 10334 0c2c 1344     		add	r3, r3, r2
 10335 0c2e B433     		adds	r3, r3, #180
 10336 0c30 1960     		str	r1, [r3]
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10337              		.loc 1 1383 0
 10338 0c32 344B     		ldr	r3, .L456+20
 10339 0c34 1B68     		ldr	r3, [r3]	@ float
 10340 0c36 FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10341              		.loc 1 1384 0
 10342 0c38 0023     		movs	r3, #0
 10343 0c3a BB75     		strb	r3, [r7, #22]
 10344 0c3c 0EE0     		b	.L418
 10345              	.L419:
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10346              		.loc 1 1385 0 discriminator 3
 10347 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10348 0c40 C3F10303 		rsb	r3, r3, #3
 10349 0c44 07F10802 		add	r2, r7, #8
 10350 0c48 1344     		add	r3, r3, r2
 10351 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10352 0c4c 07F10C01 		add	r1, r7, #12
 10353 0c50 0A44     		add	r2, r2, r1
 10354 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10355 0c54 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10356              		.loc 1 1384 0 discriminator 3
 10357 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10358 0c58 0133     		adds	r3, r3, #1
 10359 0c5a BB75     		strb	r3, [r7, #22]
 10360              	.L418:
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10361              		.loc 1 1384 0 is_stmt 0 discriminator 1
 10362 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10363 0c5e 032B     		cmp	r3, #3
 10364 0c60 EDD9     		bls	.L419
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 236


 10365              		.loc 1 1387 0 is_stmt 1
 10366 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10367 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 10368 0c66 4FF08F41 		mov	r1, #1199570944
 10369 0c6a 1846     		mov	r0, r3
 10370 0c6c FFF7FEFF 		bl	__aeabi_fmul
 10371 0c70 0346     		mov	r3, r0
 10372 0c72 1846     		mov	r0, r3
 10373 0c74 FFF7FEFF 		bl	__aeabi_f2iz
 10374 0c78 0146     		mov	r1, r0
 10375 0c7a 1E4A     		ldr	r2, .L456+4
 10376 0c7c 2346     		mov	r3, r4
 10377 0c7e DB00     		lsls	r3, r3, #3
 10378 0c80 1B1B     		subs	r3, r3, r4
 10379 0c82 1B01     		lsls	r3, r3, #4
 10380 0c84 1344     		add	r3, r3, r2
 10381 0c86 B833     		adds	r3, r3, #184
 10382 0c88 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             }
1389:..\src/command_processing.c ****             else {
1390:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1391:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1392:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1393:..\src/command_processing.c ****                 }
1394:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1395:..\src/command_processing.c ****                 
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1399:..\src/command_processing.c ****                 }
1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1407:..\src/command_processing.c ****             }
1408:..\src/command_processing.c ****             break;
 10383              		.loc 1 1408 0
 10384 0c8a BDE3     		b	.L387
 10385              	.L413:
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10386              		.loc 1 1390 0
 10387 0c8c 1B4B     		ldr	r3, .L456+12
 10388 0c8e 1B68     		ldr	r3, [r3]	@ float
 10389 0c90 FB60     		str	r3, [r7, #12]	@ float
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10390              		.loc 1 1391 0
 10391 0c92 0023     		movs	r3, #0
 10392 0c94 BB75     		strb	r3, [r7, #22]
 10393 0c96 0EE0     		b	.L421
 10394              	.L422:
1392:..\src/command_processing.c ****                 }
 10395              		.loc 1 1392 0 discriminator 3
 10396 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10397 0c9a C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 237


 10398 0c9e 07F10802 		add	r2, r7, #8
 10399 0ca2 1344     		add	r3, r3, r2
 10400 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10401 0ca6 07F10C01 		add	r1, r7, #12
 10402 0caa 0A44     		add	r2, r2, r1
 10403 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10404 0cae 1A70     		strb	r2, [r3]
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10405              		.loc 1 1391 0 discriminator 3
 10406 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10407 0cb2 0133     		adds	r3, r3, #1
 10408 0cb4 BB75     		strb	r3, [r7, #22]
 10409              	.L421:
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10410              		.loc 1 1391 0 is_stmt 0 discriminator 1
 10411 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10412 0cb8 032B     		cmp	r3, #3
 10413 0cba EDD9     		bls	.L422
1394:..\src/command_processing.c ****                 
 10414              		.loc 1 1394 0 is_stmt 1
 10415 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10416 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 10417 0cc0 4FF08F41 		mov	r1, #1199570944
 10418 0cc4 1846     		mov	r0, r3
 10419 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 10420 0cca 0346     		mov	r3, r0
 10421 0ccc 1846     		mov	r0, r3
 10422 0cce FFF7FEFF 		bl	__aeabi_f2iz
 10423 0cd2 0146     		mov	r1, r0
 10424 0cd4 074A     		ldr	r2, .L456+4
 10425 0cd6 2346     		mov	r3, r4
 10426 0cd8 DB00     		lsls	r3, r3, #3
 10427 0cda 1B1B     		subs	r3, r3, r4
 10428 0cdc 1B01     		lsls	r3, r3, #4
 10429 0cde 1344     		add	r3, r3, r2
 10430 0ce0 C833     		adds	r3, r3, #200
 10431 0ce2 1960     		str	r1, [r3]
1396:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10432              		.loc 1 1396 0
 10433 0ce4 064B     		ldr	r3, .L456+16
 10434 0ce6 1B68     		ldr	r3, [r3]	@ float
 10435 0ce8 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10436              		.loc 1 1397 0
 10437 0cea 0023     		movs	r3, #0
 10438 0cec BB75     		strb	r3, [r7, #22]
 10439 0cee 1AE0     		b	.L423
 10440              	.L457:
 10441              		.align	2
 10442              	.L456:
 10443 0cf0 00000000 		.word	g_rx
 10444 0cf4 00000000 		.word	g_mem
 10445 0cf8 00000000 		.word	c_mem
 10446 0cfc 03000000 		.word	g_rx+3
 10447 0d00 07000000 		.word	g_rx+7
 10448 0d04 0B000000 		.word	g_rx+11
 10449              	.L424:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 238


1398:..\src/command_processing.c ****                 }
 10450              		.loc 1 1398 0 discriminator 3
 10451 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10452 0d0a C3F10303 		rsb	r3, r3, #3
 10453 0d0e 07F10802 		add	r2, r7, #8
 10454 0d12 1344     		add	r3, r3, r2
 10455 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10456 0d16 07F10C01 		add	r1, r7, #12
 10457 0d1a 0A44     		add	r2, r2, r1
 10458 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10459 0d1e 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10460              		.loc 1 1397 0 discriminator 3
 10461 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10462 0d22 0133     		adds	r3, r3, #1
 10463 0d24 BB75     		strb	r3, [r7, #22]
 10464              	.L423:
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10465              		.loc 1 1397 0 is_stmt 0 discriminator 1
 10466 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10467 0d28 032B     		cmp	r3, #3
 10468 0d2a EDD9     		bls	.L424
1400:..\src/command_processing.c ****                 
 10469              		.loc 1 1400 0 is_stmt 1
 10470 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10471 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 10472 0d30 4FF08F41 		mov	r1, #1199570944
 10473 0d34 1846     		mov	r0, r3
 10474 0d36 FFF7FEFF 		bl	__aeabi_fmul
 10475 0d3a 0346     		mov	r3, r0
 10476 0d3c 1846     		mov	r0, r3
 10477 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 10478 0d42 0146     		mov	r1, r0
 10479 0d44 B74A     		ldr	r2, .L458
 10480 0d46 2346     		mov	r3, r4
 10481 0d48 DB00     		lsls	r3, r3, #3
 10482 0d4a 1B1B     		subs	r3, r3, r4
 10483 0d4c 1B01     		lsls	r3, r3, #4
 10484 0d4e 1344     		add	r3, r3, r2
 10485 0d50 CC33     		adds	r3, r3, #204
 10486 0d52 1960     		str	r1, [r3]
1402:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10487              		.loc 1 1402 0
 10488 0d54 B44B     		ldr	r3, .L458+4
 10489 0d56 1B68     		ldr	r3, [r3]	@ float
 10490 0d58 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10491              		.loc 1 1403 0
 10492 0d5a 0023     		movs	r3, #0
 10493 0d5c BB75     		strb	r3, [r7, #22]
 10494 0d5e 0EE0     		b	.L425
 10495              	.L426:
1404:..\src/command_processing.c ****                 }
 10496              		.loc 1 1404 0 discriminator 3
 10497 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10498 0d62 C3F10303 		rsb	r3, r3, #3
 10499 0d66 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 239


 10500 0d6a 1344     		add	r3, r3, r2
 10501 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10502 0d6e 07F10C01 		add	r1, r7, #12
 10503 0d72 0A44     		add	r2, r2, r1
 10504 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10505 0d76 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10506              		.loc 1 1403 0 discriminator 3
 10507 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10508 0d7a 0133     		adds	r3, r3, #1
 10509 0d7c BB75     		strb	r3, [r7, #22]
 10510              	.L425:
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10511              		.loc 1 1403 0 is_stmt 0 discriminator 1
 10512 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10513 0d80 032B     		cmp	r3, #3
 10514 0d82 EDD9     		bls	.L426
1406:..\src/command_processing.c ****             }
 10515              		.loc 1 1406 0 is_stmt 1
 10516 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10517 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 10518 0d88 4FF08F41 		mov	r1, #1199570944
 10519 0d8c 1846     		mov	r0, r3
 10520 0d8e FFF7FEFF 		bl	__aeabi_fmul
 10521 0d92 0346     		mov	r3, r0
 10522 0d94 1846     		mov	r0, r3
 10523 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 10524 0d9a 0146     		mov	r1, r0
 10525 0d9c A14A     		ldr	r2, .L458
 10526 0d9e 2346     		mov	r3, r4
 10527 0da0 DB00     		lsls	r3, r3, #3
 10528 0da2 1B1B     		subs	r3, r3, r4
 10529 0da4 1B01     		lsls	r3, r3, #4
 10530 0da6 1344     		add	r3, r3, r2
 10531 0da8 D033     		adds	r3, r3, #208
 10532 0daa 1960     		str	r1, [r3]
 10533              		.loc 1 1408 0
 10534 0dac 2CE3     		b	.L387
 10535              	.L367:
1409:..\src/command_processing.c ****             
1410:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1411:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10536              		.loc 1 1411 0
 10537 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10538 0db0 9E49     		ldr	r1, .L458+8
 10539 0db2 1346     		mov	r3, r2
 10540 0db4 DB00     		lsls	r3, r3, #3
 10541 0db6 9B1A     		subs	r3, r3, r2
 10542 0db8 1B01     		lsls	r3, r3, #4
 10543 0dba 0B44     		add	r3, r3, r1
 10544 0dbc 03F20F13 		addw	r3, r3, #271
 10545 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10546 0dc2 032B     		cmp	r3, #3
 10547 0dc4 00F08580 		beq	.L427
1412:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10548              		.loc 1 1412 0
 10549 0dc8 994B     		ldr	r3, .L458+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 240


 10550 0dca 1B68     		ldr	r3, [r3]	@ float
 10551 0dcc FB60     		str	r3, [r7, #12]	@ float
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10552              		.loc 1 1413 0
 10553 0dce 0023     		movs	r3, #0
 10554 0dd0 BB75     		strb	r3, [r7, #22]
 10555 0dd2 0EE0     		b	.L428
 10556              	.L429:
1414:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10557              		.loc 1 1414 0 discriminator 3
 10558 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10559 0dd6 C3F10303 		rsb	r3, r3, #3
 10560 0dda 07F10802 		add	r2, r7, #8
 10561 0dde 1344     		add	r3, r3, r2
 10562 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10563 0de2 07F10C01 		add	r1, r7, #12
 10564 0de6 0A44     		add	r2, r2, r1
 10565 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10566 0dea 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10567              		.loc 1 1413 0 discriminator 3
 10568 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10569 0dee 0133     		adds	r3, r3, #1
 10570 0df0 BB75     		strb	r3, [r7, #22]
 10571              	.L428:
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10572              		.loc 1 1413 0 is_stmt 0 discriminator 1
 10573 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10574 0df4 032B     		cmp	r3, #3
 10575 0df6 EDD9     		bls	.L429
1415:..\src/command_processing.c ****                 }
1416:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 10576              		.loc 1 1416 0 is_stmt 1
 10577 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10578 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 10579 0dfc 4FF08F41 		mov	r1, #1199570944
 10580 0e00 1846     		mov	r0, r3
 10581 0e02 FFF7FEFF 		bl	__aeabi_fmul
 10582 0e06 0346     		mov	r3, r0
 10583 0e08 1846     		mov	r0, r3
 10584 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 10585 0e0e 0146     		mov	r1, r0
 10586 0e10 844A     		ldr	r2, .L458
 10587 0e12 2346     		mov	r3, r4
 10588 0e14 DB00     		lsls	r3, r3, #3
 10589 0e16 1B1B     		subs	r3, r3, r4
 10590 0e18 1B01     		lsls	r3, r3, #4
 10591 0e1a 1344     		add	r3, r3, r2
 10592 0e1c BC33     		adds	r3, r3, #188
 10593 0e1e 1960     		str	r1, [r3]
1417:..\src/command_processing.c ****                 
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10594              		.loc 1 1418 0
 10595 0e20 844B     		ldr	r3, .L458+16
 10596 0e22 1B68     		ldr	r3, [r3]	@ float
 10597 0e24 FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 241


 10598              		.loc 1 1419 0
 10599 0e26 0023     		movs	r3, #0
 10600 0e28 BB75     		strb	r3, [r7, #22]
 10601 0e2a 0EE0     		b	.L430
 10602              	.L431:
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10603              		.loc 1 1420 0 discriminator 3
 10604 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10605 0e2e C3F10303 		rsb	r3, r3, #3
 10606 0e32 07F10802 		add	r2, r7, #8
 10607 0e36 1344     		add	r3, r3, r2
 10608 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10609 0e3a 07F10C01 		add	r1, r7, #12
 10610 0e3e 0A44     		add	r2, r2, r1
 10611 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10612 0e42 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10613              		.loc 1 1419 0 discriminator 3
 10614 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10615 0e46 0133     		adds	r3, r3, #1
 10616 0e48 BB75     		strb	r3, [r7, #22]
 10617              	.L430:
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10618              		.loc 1 1419 0 is_stmt 0 discriminator 1
 10619 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10620 0e4c 032B     		cmp	r3, #3
 10621 0e4e EDD9     		bls	.L431
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 10622              		.loc 1 1422 0 is_stmt 1
 10623 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10624 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 10625 0e54 4FF08F41 		mov	r1, #1199570944
 10626 0e58 1846     		mov	r0, r3
 10627 0e5a FFF7FEFF 		bl	__aeabi_fmul
 10628 0e5e 0346     		mov	r3, r0
 10629 0e60 1846     		mov	r0, r3
 10630 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 10631 0e66 0146     		mov	r1, r0
 10632 0e68 6E4A     		ldr	r2, .L458
 10633 0e6a 2346     		mov	r3, r4
 10634 0e6c DB00     		lsls	r3, r3, #3
 10635 0e6e 1B1B     		subs	r3, r3, r4
 10636 0e70 1B01     		lsls	r3, r3, #4
 10637 0e72 1344     		add	r3, r3, r2
 10638 0e74 C033     		adds	r3, r3, #192
 10639 0e76 1960     		str	r1, [r3]
1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10640              		.loc 1 1424 0
 10641 0e78 6B4B     		ldr	r3, .L458+4
 10642 0e7a 1B68     		ldr	r3, [r3]	@ float
 10643 0e7c FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10644              		.loc 1 1425 0
 10645 0e7e 0023     		movs	r3, #0
 10646 0e80 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 242


 10647 0e82 0EE0     		b	.L432
 10648              	.L433:
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10649              		.loc 1 1426 0 discriminator 3
 10650 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10651 0e86 C3F10303 		rsb	r3, r3, #3
 10652 0e8a 07F10802 		add	r2, r7, #8
 10653 0e8e 1344     		add	r3, r3, r2
 10654 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10655 0e92 07F10C01 		add	r1, r7, #12
 10656 0e96 0A44     		add	r2, r2, r1
 10657 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10658 0e9a 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10659              		.loc 1 1425 0 discriminator 3
 10660 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10661 0e9e 0133     		adds	r3, r3, #1
 10662 0ea0 BB75     		strb	r3, [r7, #22]
 10663              	.L432:
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10664              		.loc 1 1425 0 is_stmt 0 discriminator 1
 10665 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10666 0ea4 032B     		cmp	r3, #3
 10667 0ea6 EDD9     		bls	.L433
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 10668              		.loc 1 1428 0 is_stmt 1
 10669 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10670 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 10671 0eac 4FF08F41 		mov	r1, #1199570944
 10672 0eb0 1846     		mov	r0, r3
 10673 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 10674 0eb6 0346     		mov	r3, r0
 10675 0eb8 1846     		mov	r0, r3
 10676 0eba FFF7FEFF 		bl	__aeabi_f2iz
 10677 0ebe 0146     		mov	r1, r0
 10678 0ec0 584A     		ldr	r2, .L458
 10679 0ec2 2346     		mov	r3, r4
 10680 0ec4 DB00     		lsls	r3, r3, #3
 10681 0ec6 1B1B     		subs	r3, r3, r4
 10682 0ec8 1B01     		lsls	r3, r3, #4
 10683 0eca 1344     		add	r3, r3, r2
 10684 0ecc C433     		adds	r3, r3, #196
 10685 0ece 1960     		str	r1, [r3]
1429:..\src/command_processing.c ****             }
1430:..\src/command_processing.c ****             else {
1431:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1433:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1434:..\src/command_processing.c ****                 }
1435:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1436:..\src/command_processing.c ****                 
1437:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1439:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1440:..\src/command_processing.c ****                 }
1441:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 243


1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1445:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1446:..\src/command_processing.c ****                 }
1447:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1448:..\src/command_processing.c ****             }            
1449:..\src/command_processing.c ****             break;  
 10686              		.loc 1 1449 0
 10687 0ed0 9AE2     		b	.L387
 10688              	.L427:
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10689              		.loc 1 1431 0
 10690 0ed2 574B     		ldr	r3, .L458+12
 10691 0ed4 1B68     		ldr	r3, [r3]	@ float
 10692 0ed6 FB60     		str	r3, [r7, #12]	@ float
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10693              		.loc 1 1432 0
 10694 0ed8 0023     		movs	r3, #0
 10695 0eda BB75     		strb	r3, [r7, #22]
 10696 0edc 0EE0     		b	.L435
 10697              	.L436:
1433:..\src/command_processing.c ****                 }
 10698              		.loc 1 1433 0 discriminator 3
 10699 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10700 0ee0 C3F10303 		rsb	r3, r3, #3
 10701 0ee4 07F10802 		add	r2, r7, #8
 10702 0ee8 1344     		add	r3, r3, r2
 10703 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10704 0eec 07F10C01 		add	r1, r7, #12
 10705 0ef0 0A44     		add	r2, r2, r1
 10706 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10707 0ef4 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10708              		.loc 1 1432 0 discriminator 3
 10709 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10710 0ef8 0133     		adds	r3, r3, #1
 10711 0efa BB75     		strb	r3, [r7, #22]
 10712              	.L435:
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10713              		.loc 1 1432 0 is_stmt 0 discriminator 1
 10714 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10715 0efe 032B     		cmp	r3, #3
 10716 0f00 EDD9     		bls	.L436
1435:..\src/command_processing.c ****                 
 10717              		.loc 1 1435 0 is_stmt 1
 10718 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10719 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 10720 0f06 4FF08F41 		mov	r1, #1199570944
 10721 0f0a 1846     		mov	r0, r3
 10722 0f0c FFF7FEFF 		bl	__aeabi_fmul
 10723 0f10 0346     		mov	r3, r0
 10724 0f12 1846     		mov	r0, r3
 10725 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 10726 0f18 0146     		mov	r1, r0
 10727 0f1a 424A     		ldr	r2, .L458
 10728 0f1c 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 244


 10729 0f1e DB00     		lsls	r3, r3, #3
 10730 0f20 1B1B     		subs	r3, r3, r4
 10731 0f22 1B01     		lsls	r3, r3, #4
 10732 0f24 1344     		add	r3, r3, r2
 10733 0f26 D433     		adds	r3, r3, #212
 10734 0f28 1960     		str	r1, [r3]
1437:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10735              		.loc 1 1437 0
 10736 0f2a 424B     		ldr	r3, .L458+16
 10737 0f2c 1B68     		ldr	r3, [r3]	@ float
 10738 0f2e FB60     		str	r3, [r7, #12]	@ float
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10739              		.loc 1 1438 0
 10740 0f30 0023     		movs	r3, #0
 10741 0f32 BB75     		strb	r3, [r7, #22]
 10742 0f34 0EE0     		b	.L437
 10743              	.L438:
1439:..\src/command_processing.c ****                 }
 10744              		.loc 1 1439 0 discriminator 3
 10745 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10746 0f38 C3F10303 		rsb	r3, r3, #3
 10747 0f3c 07F10802 		add	r2, r7, #8
 10748 0f40 1344     		add	r3, r3, r2
 10749 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10750 0f44 07F10C01 		add	r1, r7, #12
 10751 0f48 0A44     		add	r2, r2, r1
 10752 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10753 0f4c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10754              		.loc 1 1438 0 discriminator 3
 10755 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10756 0f50 0133     		adds	r3, r3, #1
 10757 0f52 BB75     		strb	r3, [r7, #22]
 10758              	.L437:
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10759              		.loc 1 1438 0 is_stmt 0 discriminator 1
 10760 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10761 0f56 032B     		cmp	r3, #3
 10762 0f58 EDD9     		bls	.L438
1441:..\src/command_processing.c ****                 
 10763              		.loc 1 1441 0 is_stmt 1
 10764 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10765 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 10766 0f5e 4FF08F41 		mov	r1, #1199570944
 10767 0f62 1846     		mov	r0, r3
 10768 0f64 FFF7FEFF 		bl	__aeabi_fmul
 10769 0f68 0346     		mov	r3, r0
 10770 0f6a 1846     		mov	r0, r3
 10771 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 10772 0f70 0146     		mov	r1, r0
 10773 0f72 2C4A     		ldr	r2, .L458
 10774 0f74 2346     		mov	r3, r4
 10775 0f76 DB00     		lsls	r3, r3, #3
 10776 0f78 1B1B     		subs	r3, r3, r4
 10777 0f7a 1B01     		lsls	r3, r3, #4
 10778 0f7c 1344     		add	r3, r3, r2
 10779 0f7e D833     		adds	r3, r3, #216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 245


 10780 0f80 1960     		str	r1, [r3]
1443:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10781              		.loc 1 1443 0
 10782 0f82 294B     		ldr	r3, .L458+4
 10783 0f84 1B68     		ldr	r3, [r3]	@ float
 10784 0f86 FB60     		str	r3, [r7, #12]	@ float
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10785              		.loc 1 1444 0
 10786 0f88 0023     		movs	r3, #0
 10787 0f8a BB75     		strb	r3, [r7, #22]
 10788 0f8c 0EE0     		b	.L439
 10789              	.L440:
1445:..\src/command_processing.c ****                 }
 10790              		.loc 1 1445 0 discriminator 3
 10791 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10792 0f90 C3F10303 		rsb	r3, r3, #3
 10793 0f94 07F10802 		add	r2, r7, #8
 10794 0f98 1344     		add	r3, r3, r2
 10795 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10796 0f9c 07F10C01 		add	r1, r7, #12
 10797 0fa0 0A44     		add	r2, r2, r1
 10798 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10799 0fa4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10800              		.loc 1 1444 0 discriminator 3
 10801 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10802 0fa8 0133     		adds	r3, r3, #1
 10803 0faa BB75     		strb	r3, [r7, #22]
 10804              	.L439:
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10805              		.loc 1 1444 0 is_stmt 0 discriminator 1
 10806 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10807 0fae 032B     		cmp	r3, #3
 10808 0fb0 EDD9     		bls	.L440
1447:..\src/command_processing.c ****             }            
 10809              		.loc 1 1447 0 is_stmt 1
 10810 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10811 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 10812 0fb6 4FF08F41 		mov	r1, #1199570944
 10813 0fba 1846     		mov	r0, r3
 10814 0fbc FFF7FEFF 		bl	__aeabi_fmul
 10815 0fc0 0346     		mov	r3, r0
 10816 0fc2 1846     		mov	r0, r3
 10817 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 10818 0fc8 0146     		mov	r1, r0
 10819 0fca 164A     		ldr	r2, .L458
 10820 0fcc 2346     		mov	r3, r4
 10821 0fce DB00     		lsls	r3, r3, #3
 10822 0fd0 1B1B     		subs	r3, r3, r4
 10823 0fd2 1B01     		lsls	r3, r3, #4
 10824 0fd4 1344     		add	r3, r3, r2
 10825 0fd6 DC33     		adds	r3, r3, #220
 10826 0fd8 1960     		str	r1, [r3]
 10827              		.loc 1 1449 0
 10828 0fda 15E2     		b	.L387
 10829              	.L368:
1450:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 246


1451:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1452:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 10830              		.loc 1 1452 0
 10831 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10832 0fde 164B     		ldr	r3, .L458+20
 10833 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10834 0fe2 1049     		ldr	r1, .L458
 10835 0fe4 1346     		mov	r3, r2
 10836 0fe6 DB00     		lsls	r3, r3, #3
 10837 0fe8 9B1A     		subs	r3, r3, r2
 10838 0fea 1B01     		lsls	r3, r3, #4
 10839 0fec 0B44     		add	r3, r3, r1
 10840 0fee 03F58773 		add	r3, r3, #270
 10841 0ff2 0246     		mov	r2, r0
 10842 0ff4 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             
1454:..\src/command_processing.c ****             // Hold the actual position
1455:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 10843              		.loc 1 1455 0
 10844 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10845 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10846 0ffa 0A48     		ldr	r0, .L458
 10847 0ffc 1346     		mov	r3, r2
 10848 0ffe DB00     		lsls	r3, r3, #3
 10849 1000 9B1A     		subs	r3, r3, r2
 10850 1002 1B01     		lsls	r3, r3, #4
 10851 1004 0344     		add	r3, r3, r0
 10852 1006 03F58873 		add	r3, r3, #272
 10853 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10854 100c 1846     		mov	r0, r3
 10855 100e 0B4A     		ldr	r2, .L458+24
 10856 1010 3423     		movs	r3, #52
 10857 1012 03FB00F3 		mul	r3, r3, r0
 10858 1016 1344     		add	r3, r3, r2
 10859 1018 1A68     		ldr	r2, [r3]
 10860 101a 0948     		ldr	r0, .L458+28
 10861 101c 0B01     		lsls	r3, r1, #4
 10862 101e 0344     		add	r3, r3, r0
 10863 1020 1A60     		str	r2, [r3]
1456:..\src/command_processing.c ****             break;   
 10864              		.loc 1 1456 0
 10865 1022 F1E1     		b	.L387
 10866              	.L459:
 10867              		.align	2
 10868              	.L458:
 10869 1024 00000000 		.word	g_mem
 10870 1028 0B000000 		.word	g_rx+11
 10871 102c 00000000 		.word	c_mem
 10872 1030 03000000 		.word	g_rx+3
 10873 1034 07000000 		.word	g_rx+7
 10874 1038 00000000 		.word	g_rx
 10875 103c 00000000 		.word	g_meas
 10876 1040 00000000 		.word	g_refNew
 10877              	.L369:
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1459:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 247


 10878              		.loc 1 1459 0
 10879 1044 0023     		movs	r3, #0
 10880 1046 FB75     		strb	r3, [r7, #23]
 10881 1048 7EE0     		b	.L441
 10882              	.L442:
1460:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10883              		.loc 1 1460 0 discriminator 3
 10884 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10885 104c 9049     		ldr	r1, .L460
 10886 104e 1346     		mov	r3, r2
 10887 1050 DB00     		lsls	r3, r3, #3
 10888 1052 9B1A     		subs	r3, r3, r2
 10889 1054 1B01     		lsls	r3, r3, #4
 10890 1056 0B44     		add	r3, r3, r1
 10891 1058 03F58873 		add	r3, r3, #272
 10892 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10893 105e 1C46     		mov	r4, r3
 10894 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10895 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10896 1064 5B00     		lsls	r3, r3, #1
 10897 1066 0333     		adds	r3, r3, #3
 10898 1068 8A49     		ldr	r1, .L460+4
 10899 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10900 106c 1B02     		lsls	r3, r3, #8
 10901 106e 19B2     		sxth	r1, r3
 10902 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10903 1072 0233     		adds	r3, r3, #2
 10904 1074 5B00     		lsls	r3, r3, #1
 10905 1076 8748     		ldr	r0, .L460+4
 10906 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10907 107a 1BB2     		sxth	r3, r3
 10908 107c 0B43     		orrs	r3, r3, r1
 10909 107e 1BB2     		sxth	r3, r3
 10910 1080 1846     		mov	r0, r3
 10911 1082 8349     		ldr	r1, .L460
 10912 1084 2346     		mov	r3, r4
 10913 1086 5B00     		lsls	r3, r3, #1
 10914 1088 2344     		add	r3, r3, r4
 10915 108a 9B00     		lsls	r3, r3, #2
 10916 108c 1344     		add	r3, r3, r2
 10917 108e 6633     		adds	r3, r3, #102
 10918 1090 41F82300 		str	r0, [r1, r3, lsl #2]
1461:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 10919              		.loc 1 1461 0 discriminator 3
 10920 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10921 1096 7E49     		ldr	r1, .L460
 10922 1098 1346     		mov	r3, r2
 10923 109a DB00     		lsls	r3, r3, #3
 10924 109c 9B1A     		subs	r3, r3, r2
 10925 109e 1B01     		lsls	r3, r3, #4
 10926 10a0 0B44     		add	r3, r3, r1
 10927 10a2 03F58873 		add	r3, r3, #272
 10928 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10929 10a8 1D46     		mov	r5, r3
 10930 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10931 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10932 10ae 7848     		ldr	r0, .L460
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 248


 10933 10b0 1346     		mov	r3, r2
 10934 10b2 DB00     		lsls	r3, r3, #3
 10935 10b4 9B1A     		subs	r3, r3, r2
 10936 10b6 1B01     		lsls	r3, r3, #4
 10937 10b8 0344     		add	r3, r3, r0
 10938 10ba 03F58873 		add	r3, r3, #272
 10939 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10940 10c0 1C46     		mov	r4, r3
 10941 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10942 10c4 7248     		ldr	r0, .L460
 10943 10c6 2346     		mov	r3, r4
 10944 10c8 5B00     		lsls	r3, r3, #1
 10945 10ca 2344     		add	r3, r3, r4
 10946 10cc 9B00     		lsls	r3, r3, #2
 10947 10ce 1344     		add	r3, r3, r2
 10948 10d0 6633     		adds	r3, r3, #102
 10949 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10950 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10951 10d8 6D4C     		ldr	r4, .L460
 10952 10da 1346     		mov	r3, r2
 10953 10dc DB00     		lsls	r3, r3, #3
 10954 10de 9B1A     		subs	r3, r3, r2
 10955 10e0 1B01     		lsls	r3, r3, #4
 10956 10e2 2344     		add	r3, r3, r4
 10957 10e4 03F58873 		add	r3, r3, #272
 10958 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10959 10ea 1E46     		mov	r6, r3
 10960 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10961 10ee 684C     		ldr	r4, .L460
 10962 10f0 3346     		mov	r3, r6
 10963 10f2 5B00     		lsls	r3, r3, #1
 10964 10f4 3344     		add	r3, r3, r6
 10965 10f6 1B01     		lsls	r3, r3, #4
 10966 10f8 2344     		add	r3, r3, r4
 10967 10fa 1344     		add	r3, r3, r2
 10968 10fc 03F29513 		addw	r3, r3, #405
 10969 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10970 1102 00FA03F2 		lsl	r2, r0, r3
 10971 1106 6248     		ldr	r0, .L460
 10972 1108 2B46     		mov	r3, r5
 10973 110a 5B00     		lsls	r3, r3, #1
 10974 110c 2B44     		add	r3, r3, r5
 10975 110e 9B00     		lsls	r3, r3, #2
 10976 1110 0B44     		add	r3, r3, r1
 10977 1112 6633     		adds	r3, r3, #102
 10978 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1462:..\src/command_processing.c **** 
1463:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 10979              		.loc 1 1463 0 discriminator 3
 10980 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10981 111a 5D49     		ldr	r1, .L460
 10982 111c 1346     		mov	r3, r2
 10983 111e DB00     		lsls	r3, r3, #3
 10984 1120 9B1A     		subs	r3, r3, r2
 10985 1122 1B01     		lsls	r3, r3, #4
 10986 1124 0B44     		add	r3, r3, r1
 10987 1126 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 249


 10988 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10989 112c 1846     		mov	r0, r3
 10990 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10991 1130 5949     		ldr	r1, .L460+8
 10992 1132 3422     		movs	r2, #52
 10993 1134 02FB00F2 		mul	r2, r2, r0
 10994 1138 0A44     		add	r2, r2, r1
 10995 113a 1344     		add	r3, r3, r2
 10996 113c 1833     		adds	r3, r3, #24
 10997 113e 0022     		movs	r2, #0
 10998 1140 1A70     		strb	r2, [r3]
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 10999              		.loc 1 1459 0 discriminator 3
 11000 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11001 1144 0133     		adds	r3, r3, #1
 11002 1146 FB75     		strb	r3, [r7, #23]
 11003              	.L441:
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11004              		.loc 1 1459 0 is_stmt 0 discriminator 1
 11005 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11006 114a 022B     		cmp	r3, #2
 11007 114c 7FF67DAF 		bls	.L442
1464:..\src/command_processing.c ****             }
1465:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11008              		.loc 1 1465 0 is_stmt 1
 11009 1150 524B     		ldr	r3, .L460+12
 11010 1152 0122     		movs	r2, #1
 11011 1154 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****             break;
 11012              		.loc 1 1466 0
 11013 1156 57E1     		b	.L387
 11014              	.L370:
1467:..\src/command_processing.c ****     
1468:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1469:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11015              		.loc 1 1469 0
 11016 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11017 115a 4E4B     		ldr	r3, .L460+4
 11018 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11019 115e 1906     		lsls	r1, r3, #24
 11020 1160 4C4B     		ldr	r3, .L460+4
 11021 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11022 1164 1B04     		lsls	r3, r3, #16
 11023 1166 1943     		orrs	r1, r1, r3
 11024 1168 4A4B     		ldr	r3, .L460+4
 11025 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11026 116c 1B02     		lsls	r3, r3, #8
 11027 116e 0B43     		orrs	r3, r3, r1
 11028 1170 4849     		ldr	r1, .L460+4
 11029 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11030 1174 1943     		orrs	r1, r1, r3
 11031 1176 4648     		ldr	r0, .L460
 11032 1178 1346     		mov	r3, r2
 11033 117a DB00     		lsls	r3, r3, #3
 11034 117c 9B1A     		subs	r3, r3, r2
 11035 117e 1B01     		lsls	r3, r3, #4
 11036 1180 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 250


 11037 1182 E433     		adds	r3, r3, #228
 11038 1184 1960     		str	r1, [r3]
1470:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11039              		.loc 1 1470 0
 11040 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11041 1188 424B     		ldr	r3, .L460+4
 11042 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11043 118c 1906     		lsls	r1, r3, #24
 11044 118e 414B     		ldr	r3, .L460+4
 11045 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11046 1192 1B04     		lsls	r3, r3, #16
 11047 1194 1943     		orrs	r1, r1, r3
 11048 1196 3F4B     		ldr	r3, .L460+4
 11049 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11050 119a 1B02     		lsls	r3, r3, #8
 11051 119c 0B43     		orrs	r3, r3, r1
 11052 119e 3D49     		ldr	r1, .L460+4
 11053 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11054 11a2 1943     		orrs	r1, r1, r3
 11055 11a4 3A48     		ldr	r0, .L460
 11056 11a6 1346     		mov	r3, r2
 11057 11a8 DB00     		lsls	r3, r3, #3
 11058 11aa 9B1A     		subs	r3, r3, r2
 11059 11ac 1B01     		lsls	r3, r3, #4
 11060 11ae 0344     		add	r3, r3, r0
 11061 11b0 E833     		adds	r3, r3, #232
 11062 11b2 1960     		str	r1, [r3]
1471:..\src/command_processing.c **** 
1472:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11063              		.loc 1 1472 0
 11064 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11065 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11066 11b8 3548     		ldr	r0, .L460
 11067 11ba 0B46     		mov	r3, r1
 11068 11bc DB00     		lsls	r3, r3, #3
 11069 11be 5B1A     		subs	r3, r3, r1
 11070 11c0 1B01     		lsls	r3, r3, #4
 11071 11c2 0344     		add	r3, r3, r0
 11072 11c4 E433     		adds	r3, r3, #228
 11073 11c6 1868     		ldr	r0, [r3]
 11074 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11075 11ca 314C     		ldr	r4, .L460
 11076 11cc 0B46     		mov	r3, r1
 11077 11ce DB00     		lsls	r3, r3, #3
 11078 11d0 5B1A     		subs	r3, r3, r1
 11079 11d2 1B01     		lsls	r3, r3, #4
 11080 11d4 2344     		add	r3, r3, r4
 11081 11d6 03F58873 		add	r3, r3, #272
 11082 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11083 11dc 1C46     		mov	r4, r3
 11084 11de 2C49     		ldr	r1, .L460
 11085 11e0 2346     		mov	r3, r4
 11086 11e2 5B00     		lsls	r3, r3, #1
 11087 11e4 2344     		add	r3, r3, r4
 11088 11e6 1B01     		lsls	r3, r3, #4
 11089 11e8 0B44     		add	r3, r3, r1
 11090 11ea 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 251


 11091 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11092 11f0 00FA03F1 		lsl	r1, r0, r3
 11093 11f4 2648     		ldr	r0, .L460
 11094 11f6 1346     		mov	r3, r2
 11095 11f8 DB00     		lsls	r3, r3, #3
 11096 11fa 9B1A     		subs	r3, r3, r2
 11097 11fc 1B01     		lsls	r3, r3, #4
 11098 11fe 0344     		add	r3, r3, r0
 11099 1200 E433     		adds	r3, r3, #228
 11100 1202 1960     		str	r1, [r3]
1473:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11101              		.loc 1 1473 0
 11102 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11103 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11104 1208 2148     		ldr	r0, .L460
 11105 120a 0B46     		mov	r3, r1
 11106 120c DB00     		lsls	r3, r3, #3
 11107 120e 5B1A     		subs	r3, r3, r1
 11108 1210 1B01     		lsls	r3, r3, #4
 11109 1212 0344     		add	r3, r3, r0
 11110 1214 E833     		adds	r3, r3, #232
 11111 1216 1868     		ldr	r0, [r3]
 11112 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11113 121a 1D4C     		ldr	r4, .L460
 11114 121c 0B46     		mov	r3, r1
 11115 121e DB00     		lsls	r3, r3, #3
 11116 1220 5B1A     		subs	r3, r3, r1
 11117 1222 1B01     		lsls	r3, r3, #4
 11118 1224 2344     		add	r3, r3, r4
 11119 1226 03F58873 		add	r3, r3, #272
 11120 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11121 122c 1C46     		mov	r4, r3
 11122 122e 1849     		ldr	r1, .L460
 11123 1230 2346     		mov	r3, r4
 11124 1232 5B00     		lsls	r3, r3, #1
 11125 1234 2344     		add	r3, r3, r4
 11126 1236 1B01     		lsls	r3, r3, #4
 11127 1238 0B44     		add	r3, r3, r1
 11128 123a 03F29513 		addw	r3, r3, #405
 11129 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11130 1240 00FA03F1 		lsl	r1, r0, r3
 11131 1244 1248     		ldr	r0, .L460
 11132 1246 1346     		mov	r3, r2
 11133 1248 DB00     		lsls	r3, r3, #3
 11134 124a 9B1A     		subs	r3, r3, r2
 11135 124c 1B01     		lsls	r3, r3, #4
 11136 124e 0344     		add	r3, r3, r0
 11137 1250 E833     		adds	r3, r3, #232
 11138 1252 1960     		str	r1, [r3]
1474:..\src/command_processing.c ****             break;
 11139              		.loc 1 1474 0
 11140 1254 D8E0     		b	.L387
 11141              	.L371:
1475:..\src/command_processing.c ****             
1476:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11142              		.loc 1 1477 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 252


 11143 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11144 1258 0E4B     		ldr	r3, .L460+4
 11145 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11146 125c 0C49     		ldr	r1, .L460
 11147 125e 1346     		mov	r3, r2
 11148 1260 DB00     		lsls	r3, r3, #3
 11149 1262 9B1A     		subs	r3, r3, r2
 11150 1264 1B01     		lsls	r3, r3, #4
 11151 1266 0B44     		add	r3, r3, r1
 11152 1268 E233     		adds	r3, r3, #226
 11153 126a 0246     		mov	r2, r0
 11154 126c 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11155              		.loc 1 1478 0
 11156 126e 084B     		ldr	r3, .L460
 11157 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11158 1274 5B00     		lsls	r3, r3, #1
 11159 1276 5AB2     		sxtb	r2, r3
 11160 1278 054B     		ldr	r3, .L460
 11161 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11162 127e 5BB2     		sxtb	r3, r3
 11163 1280 1343     		orrs	r3, r3, r2
 11164 1282 5BB2     		sxtb	r3, r3
 11165 1284 DBB2     		uxtb	r3, r3
 11166 1286 1846     		mov	r0, r3
 11167 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1479:..\src/command_processing.c ****             break;
 11168              		.loc 1 1479 0
 11169 128c BCE0     		b	.L387
 11170              	.L461:
 11171 128e 00BF     		.align	2
 11172              	.L460:
 11173 1290 00000000 		.word	g_mem
 11174 1294 00000000 		.word	g_rx
 11175 1298 00000000 		.word	g_meas
 11176 129c 00000000 		.word	reset_last_value_flag
 11177              	.L372:
1480:..\src/command_processing.c **** 
1481:..\src/command_processing.c ****         case 71:        // Device type
1482:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11178              		.loc 1 1482 0
 11179 12a0 5B4B     		ldr	r3, .L462
 11180 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11181 12a4 5B4B     		ldr	r3, .L462+4
 11182 12a6 83F8AC20 		strb	r2, [r3, #172]
1483:..\src/command_processing.c ****             
1484:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11183              		.loc 1 1484 0
 11184 12aa 5A4B     		ldr	r3, .L462+4
 11185 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11186 12b0 002B     		cmp	r3, #0
 11187 12b2 40F0A880 		bne	.L449
1485:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11188              		.loc 1 1485 0
 11189 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11190 12b8 5649     		ldr	r1, .L462+4
 11191 12ba 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 253


 11192 12bc DB00     		lsls	r3, r3, #3
 11193 12be 9B1A     		subs	r3, r3, r2
 11194 12c0 1B01     		lsls	r3, r3, #4
 11195 12c2 0B44     		add	r3, r3, r1
 11196 12c4 03F58873 		add	r3, r3, #272
 11197 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11198 12ca 1946     		mov	r1, r3
 11199 12cc 514A     		ldr	r2, .L462+4
 11200 12ce 0B46     		mov	r3, r1
 11201 12d0 5B00     		lsls	r3, r3, #1
 11202 12d2 0B44     		add	r3, r3, r1
 11203 12d4 1B01     		lsls	r3, r3, #4
 11204 12d6 1344     		add	r3, r3, r2
 11205 12d8 03F5D873 		add	r3, r3, #432
 11206 12dc 0122     		movs	r2, #1
 11207 12de 1A70     		strb	r2, [r3]
1486:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11208              		.loc 1 1486 0
 11209 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11210 12e2 4C49     		ldr	r1, .L462+4
 11211 12e4 1346     		mov	r3, r2
 11212 12e6 DB00     		lsls	r3, r3, #3
 11213 12e8 9B1A     		subs	r3, r3, r2
 11214 12ea 1B01     		lsls	r3, r3, #4
 11215 12ec 0B44     		add	r3, r3, r1
 11216 12ee 03F58873 		add	r3, r3, #272
 11217 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11218 12f4 1946     		mov	r1, r3
 11219 12f6 474A     		ldr	r2, .L462+4
 11220 12f8 0B46     		mov	r3, r1
 11221 12fa 5B00     		lsls	r3, r3, #1
 11222 12fc 0B44     		add	r3, r3, r1
 11223 12fe 1B01     		lsls	r3, r3, #4
 11224 1300 1344     		add	r3, r3, r2
 11225 1302 03F2B513 		addw	r3, r3, #437
 11226 1306 2322     		movs	r2, #35
 11227 1308 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11228              		.loc 1 1487 0
 11229 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11230 130c 4149     		ldr	r1, .L462+4
 11231 130e 1346     		mov	r3, r2
 11232 1310 DB00     		lsls	r3, r3, #3
 11233 1312 9B1A     		subs	r3, r3, r2
 11234 1314 1B01     		lsls	r3, r3, #4
 11235 1316 0B44     		add	r3, r3, r1
 11236 1318 03F58873 		add	r3, r3, #272
 11237 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11238 131e 1946     		mov	r1, r3
 11239 1320 3C4A     		ldr	r2, .L462+4
 11240 1322 0B46     		mov	r3, r1
 11241 1324 5B00     		lsls	r3, r3, #1
 11242 1326 0B44     		add	r3, r3, r1
 11243 1328 1B01     		lsls	r3, r3, #4
 11244 132a 1344     		add	r3, r3, r2
 11245 132c 03F5DB73 		add	r3, r3, #438
 11246 1330 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 254


 11247 1332 1A70     		strb	r2, [r3]
1488:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11248              		.loc 1 1488 0
 11249 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11250 1336 3749     		ldr	r1, .L462+4
 11251 1338 1346     		mov	r3, r2
 11252 133a DB00     		lsls	r3, r3, #3
 11253 133c 9B1A     		subs	r3, r3, r2
 11254 133e 1B01     		lsls	r3, r3, #4
 11255 1340 0B44     		add	r3, r3, r1
 11256 1342 03F58873 		add	r3, r3, #272
 11257 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11258 1348 1946     		mov	r1, r3
 11259 134a 324A     		ldr	r2, .L462+4
 11260 134c 0B46     		mov	r3, r1
 11261 134e 5B00     		lsls	r3, r3, #1
 11262 1350 0B44     		add	r3, r3, r1
 11263 1352 1B01     		lsls	r3, r3, #4
 11264 1354 1344     		add	r3, r3, r2
 11265 1356 03F2B713 		addw	r3, r3, #439
 11266 135a FF22     		movs	r2, #255
 11267 135c 1A70     		strb	r2, [r3]
1489:..\src/command_processing.c ****                 
1490:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1491:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11268              		.loc 1 1491 0
 11269 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11270 1360 2C4B     		ldr	r3, .L462+4
 11271 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11272 1366 2B49     		ldr	r1, .L462+4
 11273 1368 1346     		mov	r3, r2
 11274 136a DB00     		lsls	r3, r3, #3
 11275 136c 9B1A     		subs	r3, r3, r2
 11276 136e 1B01     		lsls	r3, r3, #4
 11277 1370 0B44     		add	r3, r3, r1
 11278 1372 03F58873 		add	r3, r3, #272
 11279 1376 0246     		mov	r2, r0
 11280 1378 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11281              		.loc 1 1492 0
 11282 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11283 137c 2549     		ldr	r1, .L462+4
 11284 137e 1346     		mov	r3, r2
 11285 1380 DB00     		lsls	r3, r3, #3
 11286 1382 9B1A     		subs	r3, r3, r2
 11287 1384 1B01     		lsls	r3, r3, #4
 11288 1386 0B44     		add	r3, r3, r1
 11289 1388 03F21113 		addw	r3, r3, #273
 11290 138c 0122     		movs	r2, #1
 11291 138e 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11292              		.loc 1 1493 0
 11293 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11294 1392 2049     		ldr	r1, .L462+4
 11295 1394 1346     		mov	r3, r2
 11296 1396 DB00     		lsls	r3, r3, #3
 11297 1398 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 255


 11298 139a 1B01     		lsls	r3, r3, #4
 11299 139c 0B44     		add	r3, r3, r1
 11300 139e 03F58973 		add	r3, r3, #274
 11301 13a2 0122     		movs	r2, #1
 11302 13a4 1A70     		strb	r2, [r3]
1494:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11303              		.loc 1 1494 0
 11304 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11305 13a8 1A49     		ldr	r1, .L462+4
 11306 13aa 1346     		mov	r3, r2
 11307 13ac DB00     		lsls	r3, r3, #3
 11308 13ae 9B1A     		subs	r3, r3, r2
 11309 13b0 1B01     		lsls	r3, r3, #4
 11310 13b2 0B44     		add	r3, r3, r1
 11311 13b4 E433     		adds	r3, r3, #228
 11312 13b6 0022     		movs	r2, #0
 11313 13b8 1A60     		str	r2, [r3]
1495:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11314              		.loc 1 1495 0
 11315 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11316 13bc 154B     		ldr	r3, .L462+4
 11317 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11318 13c2 1846     		mov	r0, r3
 11319 13c4 1349     		ldr	r1, .L462+4
 11320 13c6 0346     		mov	r3, r0
 11321 13c8 5B00     		lsls	r3, r3, #1
 11322 13ca 0344     		add	r3, r3, r0
 11323 13cc 1B01     		lsls	r3, r3, #4
 11324 13ce 0B44     		add	r3, r3, r1
 11325 13d0 03F29513 		addw	r3, r3, #405
 11326 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11327 13d6 1946     		mov	r1, r3
 11328 13d8 4FF47A53 		mov	r3, #16000
 11329 13dc 03FA01F1 		lsl	r1, r3, r1
 11330 13e0 0C48     		ldr	r0, .L462+4
 11331 13e2 1346     		mov	r3, r2
 11332 13e4 DB00     		lsls	r3, r3, #3
 11333 13e6 9B1A     		subs	r3, r3, r2
 11334 13e8 1B01     		lsls	r3, r3, #4
 11335 13ea 0344     		add	r3, r3, r0
 11336 13ec E833     		adds	r3, r3, #232
 11337 13ee 1960     		str	r1, [r3]
1496:..\src/command_processing.c ****             }        
1497:..\src/command_processing.c ****             break;
 11338              		.loc 1 1497 0
 11339 13f0 09E0     		b	.L449
 11340              	.L444:
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****         default:
1500:..\src/command_processing.c ****             break;
 11341              		.loc 1 1500 0
 11342 13f2 00BF     		nop
 11343 13f4 08E0     		b	.L387
 11344              	.L445:
1306:..\src/command_processing.c ****             
 11345              		.loc 1 1306 0
 11346 13f6 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 256


 11347 13f8 06E0     		b	.L387
 11348              	.L446:
1334:..\src/command_processing.c **** 
 11349              		.loc 1 1334 0
 11350 13fa 00BF     		nop
 11351 13fc 04E0     		b	.L387
 11352              	.L447:
1352:..\src/command_processing.c ****             
 11353              		.loc 1 1352 0
 11354 13fe 00BF     		nop
 11355 1400 02E0     		b	.L387
 11356              	.L448:
1362:..\src/command_processing.c ****            
 11357              		.loc 1 1362 0
 11358 1402 00BF     		nop
 11359 1404 00E0     		b	.L387
 11360              	.L449:
1497:..\src/command_processing.c ****             
 11361              		.loc 1 1497 0
 11362 1406 00BF     		nop
 11363              	.L387:
1501:..\src/command_processing.c ****     }
1502:..\src/command_processing.c **** }
 11364              		.loc 1 1502 0 discriminator 1
 11365 1408 00BF     		nop
 11366 140a 1C37     		adds	r7, r7, #28
 11367              		.cfi_def_cfa_offset 20
 11368 140c BD46     		mov	sp, r7
 11369              		.cfi_def_cfa_register 13
 11370              		@ sp needed
 11371 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 11372              	.L463:
 11373              		.align	2
 11374              	.L462:
 11375 1410 00000000 		.word	g_rx
 11376 1414 00000000 		.word	g_mem
 11377              		.cfi_endproc
 11378              	.LFE69:
 11379              		.size	set_custom_param, .-set_custom_param
 11380              		.section	.rodata
 11381 0e12 0000     		.align	2
 11382              	.LC125:
 11383 0e14 506F7274 		.ascii	"Port %u ID:\000"
 11383      20257520 
 11383      49443A00 
 11384              		.align	2
 11385              	.LC126:
 11386 0e20 2575202D 		.ascii	"%u - Device ID:\000"
 11386      20446576 
 11386      69636520 
 11386      49443A00 
 11387              		.align	2
 11388              	.LC127:
 11389 0e30 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 11389      20494D55 
 11389      20256420 
 11389      636F6E66 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 257


 11389      69677572 
 11390 0e4b 00       		.align	2
 11391              	.LC128:
 11392 0e4c 2575202D 		.ascii	"%u - SPI read delay:\000"
 11392      20535049 
 11392      20726561 
 11392      64206465 
 11392      6C61793A 
 11393 0e61 000000   		.align	2
 11394              	.LC129:
 11395 0e64 204E6F6E 		.ascii	" None\000"
 11395      6500
 11396 0e6a 0000     		.align	2
 11397              	.LC130:
 11398 0e6c 204C6F77 		.ascii	" Low\000"
 11398      00
 11399 0e71 000000   		.align	2
 11400              	.LC131:
 11401 0e74 20486967 		.ascii	" High\000"
 11401      6800
 11402 0e7a 0000     		.align	2
 11403              	.LC123:
 11404 0e7c 4E756D62 		.ascii	"Number of connected IMUs:\000"
 11404      6572206F 
 11404      6620636F 
 11404      6E6E6563 
 11404      74656420 
 11405 0e96 0000     		.align	2
 11406              	.LC124:
 11407 0e98 4D616720 		.ascii	"Mag cal parameters:\000"
 11407      63616C20 
 11407      70617261 
 11407      6D657465 
 11407      72733A00 
 11408              		.section	.text.get_IMU_param_list,"ax",%progbits
 11409              		.align	2
 11410              		.global	get_IMU_param_list
 11411              		.thumb
 11412              		.thumb_func
 11413              		.type	get_IMU_param_list, %function
 11414              	get_IMU_param_list:
 11415              	.LFB70:
1503:..\src/command_processing.c **** 
1504:..\src/command_processing.c **** //==============================================================================
1505:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1506:..\src/command_processing.c **** //==============================================================================
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1509:..\src/command_processing.c **** {
 11416              		.loc 1 1509 0
 11417              		.cfi_startproc
 11418              		@ args = 0, pretend = 0, frame = 1704
 11419              		@ frame_needed = 1, uses_anonymous_args = 0
 11420 0000 B0B5     		push	{r4, r5, r7, lr}
 11421              		.cfi_def_cfa_offset 16
 11422              		.cfi_offset 4, -16
 11423              		.cfi_offset 5, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 258


 11424              		.cfi_offset 7, -8
 11425              		.cfi_offset 14, -4
 11426 0002 ADF5D56D 		sub	sp, sp, #1704
 11427              		.cfi_def_cfa_offset 1720
 11428 0006 00AF     		add	r7, sp, #0
 11429              		.cfi_def_cfa_register 7
 11430 0008 0246     		mov	r2, r0
 11431 000a BB1D     		adds	r3, r7, #6
 11432 000c 1A80     		strh	r2, [r3]	@ movhi
1510:..\src/command_processing.c ****     //Package to be sent variables
1511:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 11433              		.loc 1 1511 0
 11434 000e 07F58A73 		add	r3, r7, #276
 11435 0012 0022     		movs	r2, #0
 11436 0014 1A60     		str	r2, [r3]
 11437 0016 0433     		adds	r3, r3, #4
 11438 0018 40F27552 		movw	r2, #1397
 11439 001c 0021     		movs	r1, #0
 11440 001e 1846     		mov	r0, r3
 11441 0020 FFF7FEFF 		bl	memset
1512:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1513:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1514:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1515:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1516:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1517:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1518:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 11442              		.loc 1 1518 0
 11443 0024 0723     		movs	r3, #7
 11444 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1519:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 11445              		.loc 1 1519 0
 11446 002a 0023     		movs	r3, #0
 11447 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1520:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 11448              		.loc 1 1520 0
 11449 0030 0223     		movs	r3, #2
 11450 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11451              		.loc 1 1521 0
 11452 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 11453 003a 5A1C     		adds	r2, r3, #1
1522:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 11454              		.loc 1 1522 0
 11455 003c B7F8A636 		ldrh	r3, [r7, #1702]
 11456 0040 1344     		add	r3, r3, r2
1523:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 11457              		.loc 1 1523 0
 11458 0042 0133     		adds	r3, r3, #1
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 11459              		.loc 1 1521 0
 11460 0044 9AB2     		uxth	r2, r3
 11461 0046 D24B     		ldr	r3, .L510
 11462 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11463 004a 9BB2     		uxth	r3, r3
 11464 004c 1344     		add	r3, r3, r2
 11465 004e 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 259


 11466 0050 1A46     		mov	r2, r3	@ movhi
 11467 0052 9200     		lsls	r2, r2, #2
 11468 0054 1344     		add	r3, r3, r2
 11469 0056 1A46     		mov	r2, r3	@ movhi
 11470 0058 9100     		lsls	r1, r2, #2
 11471 005a 1A46     		mov	r2, r3	@ movhi
 11472 005c 0B46     		mov	r3, r1	@ movhi
 11473 005e 1344     		add	r3, r3, r2
 11474 0060 5B00     		lsls	r3, r3, #1
 11475 0062 9BB2     		uxth	r3, r3
 11476 0064 FB33     		adds	r3, r3, #251
 11477 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1524:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1525:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1526:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1527:..\src/command_processing.c **** 
1528:..\src/command_processing.c ****     //Auxiliary variables
1529:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1530:..\src/command_processing.c ****     uint16 start_byte = 0;
 11478              		.loc 1 1530 0
 11479 006a 0023     		movs	r3, #0
 11480 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1531:..\src/command_processing.c **** 
1532:..\src/command_processing.c ****     //Parameters menu string definitions
1533:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 11481              		.loc 1 1533 0
 11482 0070 07F1F803 		add	r3, r7, #248
 11483 0074 C74A     		ldr	r2, .L510+4
 11484 0076 1C46     		mov	r4, r3
 11485 0078 1546     		mov	r5, r2
 11486 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11487 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11488 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 11489 0082 03C4     		stmia	r4!, {r0, r1}
 11490 0084 2280     		strh	r2, [r4]	@ movhi
1534:..\src/command_processing.c ****     char ids_str[11]            = "";
 11491              		.loc 1 1534 0
 11492 0086 07F1EC03 		add	r3, r7, #236
 11493 008a 0022     		movs	r2, #0
 11494 008c 1A60     		str	r2, [r3]
 11495 008e 0433     		adds	r3, r3, #4
 11496 0090 0022     		movs	r2, #0
 11497 0092 1A60     		str	r2, [r3]
 11498 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1535:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 11499              		.loc 1 1535 0
 11500 0098 07F1D803 		add	r3, r7, #216
 11501 009c BE4A     		ldr	r2, .L510+8
 11502 009e 1C46     		mov	r4, r3
 11503 00a0 1546     		mov	r5, r2
 11504 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11505 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 11506 00a6 2B68     		ldr	r3, [r5]
 11507 00a8 2360     		str	r3, [r4]
1536:..\src/command_processing.c ****     char id_str[16]             = "";
 11508              		.loc 1 1536 0
 11509 00aa 07F1C803 		add	r3, r7, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 260


 11510 00ae 0022     		movs	r2, #0
 11511 00b0 1A60     		str	r2, [r3]
 11512 00b2 0433     		adds	r3, r3, #4
 11513 00b4 0022     		movs	r2, #0
 11514 00b6 1A60     		str	r2, [r3]
 11515 00b8 5A60     		str	r2, [r3, #4]
 11516 00ba 9A60     		str	r2, [r3, #8]
1537:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 11517              		.loc 1 1537 0
 11518 00bc 07F19C03 		add	r3, r7, #156
 11519 00c0 0022     		movs	r2, #0
 11520 00c2 1A60     		str	r2, [r3]
 11521 00c4 0433     		adds	r3, r3, #4
 11522 00c6 2622     		movs	r2, #38
 11523 00c8 0021     		movs	r1, #0
 11524 00ca 1846     		mov	r0, r3
 11525 00cc FFF7FEFF 		bl	memset
1538:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 11526              		.loc 1 1538 0
 11527 00d0 07F18003 		add	r3, r7, #128
 11528 00d4 0022     		movs	r2, #0
 11529 00d6 1A60     		str	r2, [r3]
 11530 00d8 0433     		adds	r3, r3, #4
 11531 00da 0022     		movs	r2, #0
 11532 00dc 1A60     		str	r2, [r3]
 11533 00de 5A60     		str	r2, [r3, #4]
 11534 00e0 9A60     		str	r2, [r3, #8]
 11535 00e2 DA60     		str	r2, [r3, #12]
 11536 00e4 1A61     		str	r2, [r3, #16]
 11537 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1539:..\src/command_processing.c ****     
1540:..\src/command_processing.c ****     //Strings lenghts
1541:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 11538              		.loc 1 1541 0
 11539 00e8 07F1C803 		add	r3, r7, #200
 11540 00ec 1846     		mov	r0, r3
 11541 00ee FFF7FEFF 		bl	strlen
 11542 00f2 0346     		mov	r3, r0
 11543 00f4 87F89336 		strb	r3, [r7, #1683]
1542:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 11544              		.loc 1 1542 0
 11545 00f8 07F1F803 		add	r3, r7, #248
 11546 00fc 1846     		mov	r0, r3
 11547 00fe FFF7FEFF 		bl	strlen
 11548 0102 0346     		mov	r3, r0
 11549 0104 87F89236 		strb	r3, [r7, #1682]
1543:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 11550              		.loc 1 1543 0
 11551 0108 07F1EC03 		add	r3, r7, #236
 11552 010c 1846     		mov	r0, r3
 11553 010e FFF7FEFF 		bl	strlen
 11554 0112 0346     		mov	r3, r0
 11555 0114 87F89136 		strb	r3, [r7, #1681]
1544:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 11556              		.loc 1 1544 0
 11557 0118 07F1D803 		add	r3, r7, #216
 11558 011c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 261


 11559 011e FFF7FEFF 		bl	strlen
 11560 0122 0346     		mov	r3, r0
 11561 0124 87F89036 		strb	r3, [r7, #1680]
1545:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 11562              		.loc 1 1545 0
 11563 0128 07F19C03 		add	r3, r7, #156
 11564 012c 1846     		mov	r0, r3
 11565 012e FFF7FEFF 		bl	strlen
 11566 0132 0346     		mov	r3, r0
 11567 0134 87F88F36 		strb	r3, [r7, #1679]
1546:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 11568              		.loc 1 1546 0
 11569 0138 07F18003 		add	r3, r7, #128
 11570 013c 1846     		mov	r0, r3
 11571 013e FFF7FEFF 		bl	strlen
 11572 0142 0346     		mov	r3, r0
 11573 0144 87F89D36 		strb	r3, [r7, #1693]
1547:..\src/command_processing.c ****     
1548:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 11574              		.loc 1 1548 0
 11575 0148 07F10803 		add	r3, r7, #8
 11576 014c 0022     		movs	r2, #0
 11577 014e 1A60     		str	r2, [r3]
 11578 0150 0433     		adds	r3, r3, #4
 11579 0152 7222     		movs	r2, #114
 11580 0154 0021     		movs	r1, #0
 11581 0156 1846     		mov	r0, r3
 11582 0158 FFF7FEFF 		bl	memset
1549:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1550:..\src/command_processing.c ****  
1551:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 11583              		.loc 1 1551 0
 11584 015c 07F10800 		add	r0, r7, #8
 11585 0160 6423     		movs	r3, #100
 11586 0162 0A22     		movs	r2, #10
 11587 0164 8D49     		ldr	r1, .L510+12
 11588 0166 FFF7FEFF 		bl	sprintf
1552:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 11589              		.loc 1 1552 0
 11590 016a 07F10803 		add	r3, r7, #8
 11591 016e 1846     		mov	r0, r3
 11592 0170 FFF7FEFF 		bl	strlen
 11593 0174 0346     		mov	r3, r0
 11594 0176 87F88E36 		strb	r3, [r7, #1678]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1555:..\src/command_processing.c ****     // update packet_length
1556:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 11595              		.loc 1 1556 0
 11596 017a 854B     		ldr	r3, .L510
 11597 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11598 017e 5B08     		lsrs	r3, r3, #1
 11599 0180 DBB2     		uxtb	r3, r3
 11600 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1557:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 11601              		.loc 1 1557 0
 11602 0186 824B     		ldr	r3, .L510
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 262


 11603 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11604 018a 1A46     		mov	r2, r3
 11605 018c B7F8A636 		ldrh	r3, [r7, #1702]
 11606 0190 5B00     		lsls	r3, r3, #1
 11607 0192 D31A     		subs	r3, r2, r3
 11608 0194 002B     		cmp	r3, #0
 11609 0196 04DD     		ble	.L465
 11610              		.loc 1 1557 0 is_stmt 0 discriminator 1
 11611 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 11612 019c 0133     		adds	r3, r3, #1
 11613 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 11614              	.L465:
1558:..\src/command_processing.c ****     
1559:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 11615              		.loc 1 1559 0 is_stmt 1
 11616 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 11617 01a6 5A1C     		adds	r2, r3, #1
1560:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11618              		.loc 1 1560 0
 11619 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 11620 01ac 1344     		add	r3, r3, r2
1561:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 11621              		.loc 1 1561 0
 11622 01ae 0133     		adds	r3, r3, #1
1559:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 11623              		.loc 1 1559 0
 11624 01b0 9AB2     		uxth	r2, r3
 11625 01b2 774B     		ldr	r3, .L510
 11626 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11627 01b6 9BB2     		uxth	r3, r3
 11628 01b8 1344     		add	r3, r3, r2
 11629 01ba 9BB2     		uxth	r3, r3
 11630 01bc 1A46     		mov	r2, r3	@ movhi
 11631 01be 9200     		lsls	r2, r2, #2
 11632 01c0 1344     		add	r3, r3, r2
 11633 01c2 1A46     		mov	r2, r3	@ movhi
 11634 01c4 9100     		lsls	r1, r2, #2
 11635 01c6 1A46     		mov	r2, r3	@ movhi
 11636 01c8 0B46     		mov	r3, r1	@ movhi
 11637 01ca 1344     		add	r3, r3, r2
 11638 01cc 5B00     		lsls	r3, r3, #1
 11639 01ce 9BB2     		uxth	r3, r3
 11640 01d0 C933     		adds	r3, r3, #201
 11641 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1562:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1563:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1564:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1565:..\src/command_processing.c **** 
1566:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 11642              		.loc 1 1566 0
 11643 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 11644 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11645 01de 1344     		add	r3, r3, r2
 11646 01e0 9BB2     		uxth	r3, r3
 11647 01e2 0333     		adds	r3, r3, #3
 11648 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1567:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 263


 11649              		.loc 1 1567 0
 11650 01e8 07F58A73 		add	r3, r7, #276
 11651 01ec A222     		movs	r2, #162
 11652 01ee 1A70     		strb	r2, [r3]
1568:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 11653              		.loc 1 1568 0
 11654 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11655 01f4 DAB2     		uxtb	r2, r3
 11656 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11657 01fa DBB2     		uxtb	r3, r3
 11658 01fc 1344     		add	r3, r3, r2
 11659 01fe DAB2     		uxtb	r2, r3
 11660 0200 634B     		ldr	r3, .L510
 11661 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11662 0204 1344     		add	r3, r3, r2
 11663 0206 DBB2     		uxtb	r3, r3
 11664 0208 0333     		adds	r3, r3, #3
 11665 020a DAB2     		uxtb	r2, r3
 11666 020c 07F58A73 		add	r3, r7, #276
 11667 0210 5A70     		strb	r2, [r3, #1]
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****     switch(index) {
 11668              		.loc 1 1570 0
 11669 0212 BB1D     		adds	r3, r7, #6
 11670 0214 1B88     		ldrh	r3, [r3]
 11671 0216 002B     		cmp	r3, #0
 11672 0218 40F0D084 		bne	.L508
1571:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1572:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1573:..\src/command_processing.c ****             start_byte = 0;
 11673              		.loc 1 1573 0
 11674 021c 0023     		movs	r3, #0
 11675 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1574:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 11676              		.loc 1 1574 0
 11677 0222 07F58A73 		add	r3, r7, #276
 11678 0226 0222     		movs	r2, #2
 11679 0228 9A70     		strb	r2, [r3, #2]
1575:..\src/command_processing.c ****             packet_data[3] = 1;
 11680              		.loc 1 1575 0
 11681 022a 07F58A73 		add	r3, r7, #276
 11682 022e 0122     		movs	r2, #1
 11683 0230 DA70     		strb	r2, [r3, #3]
1576:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 11684              		.loc 1 1576 0
 11685 0232 574B     		ldr	r3, .L510
 11686 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11687 0236 07F58A73 		add	r3, r7, #276
 11688 023a 1A71     		strb	r2, [r3, #4]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11689              		.loc 1 1577 0
 11690 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11691 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11692 0244 15E0     		b	.L468
 11693              	.L469:
1578:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 11694              		.loc 1 1578 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 264


 11695 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 11696 024a 5A1D     		adds	r2, r3, #5
 11697 024c B7F8A436 		ldrh	r3, [r7, #1700]
 11698 0250 D31A     		subs	r3, r2, r3
 11699 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 11700 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 11701 025a 8A1A     		subs	r2, r1, r2
 11702 025c 07F1F801 		add	r1, r7, #248
 11703 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11704 0262 07F58A72 		add	r2, r7, #276
 11705 0266 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11706              		.loc 1 1577 0 discriminator 3
 11707 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 11708 026c 013B     		subs	r3, r3, #1
 11709 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11710              	.L468:
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 11711              		.loc 1 1577 0 is_stmt 0 discriminator 1
 11712 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 11713 0276 002B     		cmp	r3, #0
 11714 0278 E5D1     		bne	.L469
1579:..\src/command_processing.c ****                 
1580:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1581:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11715              		.loc 1 1581 0 is_stmt 1
 11716 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11717 027e 3233     		adds	r3, r3, #50
 11718 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1582:..\src/command_processing.c ****             i = 0;
 11719              		.loc 1 1582 0
 11720 0284 0023     		movs	r3, #0
 11721 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1583:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 11722              		.loc 1 1583 0
 11723 028a 0023     		movs	r3, #0
 11724 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11725 0290 B2E0     		b	.L470
 11726              	.L477:
1584:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11727              		.loc 1 1584 0
 11728 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 11729 0296 07F1EC03 		add	r3, r7, #236
 11730 029a 4149     		ldr	r1, .L510+16
 11731 029c 1846     		mov	r0, r3
 11732 029e FFF7FEFF 		bl	sprintf
1585:..\src/command_processing.c ****                 h = 4;
 11733              		.loc 1 1585 0
 11734 02a2 0423     		movs	r3, #4
 11735 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1586:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 11736              		.loc 1 1586 0
 11737 02a8 07F1EC03 		add	r3, r7, #236
 11738 02ac 1846     		mov	r0, r3
 11739 02ae FFF7FEFF 		bl	strlen
 11740 02b2 0346     		mov	r3, r0
 11741 02b4 87F89136 		strb	r3, [r7, #1681]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 265


1587:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11742              		.loc 1 1587 0
 11743 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 11744 02bc 9A1C     		adds	r2, r3, #2
 11745 02be B7F8A036 		ldrh	r3, [r7, #1696]
 11746 02c2 3221     		movs	r1, #50
 11747 02c4 01FB03F3 		mul	r3, r1, r3
 11748 02c8 1344     		add	r3, r3, r2
 11749 02ca 07F58A72 		add	r2, r7, #276
 11750 02ce 0221     		movs	r1, #2
 11751 02d0 D154     		strb	r1, [r2, r3]
1588:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11752              		.loc 1 1588 0
 11753 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 11754 02d6 DA1C     		adds	r2, r3, #3
 11755 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11756 02dc 3221     		movs	r1, #50
 11757 02de 01FB03F3 		mul	r3, r1, r3
 11758 02e2 1344     		add	r3, r3, r2
 11759 02e4 07F58A72 		add	r2, r7, #276
 11760 02e8 0321     		movs	r1, #3
 11761 02ea D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                 
1590:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 11762              		.loc 1 1590 0
 11763 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 11764 02f0 1A46     		mov	r2, r3	@ movhi
 11765 02f2 5200     		lsls	r2, r2, #1
 11766 02f4 1344     		add	r3, r3, r2
 11767 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11768 02fa 39E0     		b	.L471
 11769              	.L474:
1591:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11770              		.loc 1 1591 0
 11771 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 11772 0300 284A     		ldr	r2, .L510+20
 11773 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11774 0304 9BB2     		uxth	r3, r3
 11775 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 11776 030a 9A42     		cmp	r2, r3
 11777 030c 17D1     		bne	.L472
1592:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 11778              		.loc 1 1592 0
 11779 030e B7F89E26 		ldrh	r2, [r7, #1694]
 11780 0312 B7F89436 		ldrh	r3, [r7, #1684]
 11781 0316 1A44     		add	r2, r2, r3
 11782 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 11783 031c 3221     		movs	r1, #50
 11784 031e 01FB03F3 		mul	r3, r1, r3
 11785 0322 1344     		add	r3, r3, r2
 11786 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 11787 0328 1E49     		ldr	r1, .L510+20
 11788 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11789 032c 07F58A72 		add	r2, r7, #276
 11790 0330 D154     		strb	r1, [r2, r3]
1593:..\src/command_processing.c ****                         i++;
 11791              		.loc 1 1593 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 266


 11792 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 11793 0336 0133     		adds	r3, r3, #1
 11794 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11795 033c 0EE0     		b	.L473
 11796              	.L472:
1594:..\src/command_processing.c ****                     } 
1595:..\src/command_processing.c ****                     else {
1596:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 11797              		.loc 1 1596 0
 11798 033e B7F89E26 		ldrh	r2, [r7, #1694]
 11799 0342 B7F89436 		ldrh	r3, [r7, #1684]
 11800 0346 1A44     		add	r2, r2, r3
 11801 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 11802 034c 3221     		movs	r1, #50
 11803 034e 01FB03F3 		mul	r3, r1, r3
 11804 0352 1344     		add	r3, r3, r2
 11805 0354 07F58A72 		add	r2, r7, #276
 11806 0358 FF21     		movs	r1, #255
 11807 035a D154     		strb	r1, [r2, r3]
 11808              	.L473:
1597:..\src/command_processing.c ****                     }
1598:..\src/command_processing.c ****                     h++;
 11809              		.loc 1 1598 0 discriminator 2
 11810 035c B7F89E36 		ldrh	r3, [r7, #1694]
 11811 0360 0133     		adds	r3, r3, #1
 11812 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11813              		.loc 1 1590 0 discriminator 2
 11814 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 11815 036a 0133     		adds	r3, r3, #1
 11816 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11817              	.L471:
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 11818              		.loc 1 1590 0 is_stmt 0 discriminator 1
 11819 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 11820 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 11821 0378 1346     		mov	r3, r2
 11822 037a 5B00     		lsls	r3, r3, #1
 11823 037c 1344     		add	r3, r3, r2
 11824 037e 0233     		adds	r3, r3, #2
 11825 0380 9942     		cmp	r1, r3
 11826 0382 BBDD     		ble	.L474
1599:..\src/command_processing.c ****                 }
1600:..\src/command_processing.c **** 
1601:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1602:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 11827              		.loc 1 1602 0 is_stmt 1
 11828 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11829 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11830 038c 2BE0     		b	.L475
 11831              	.L511:
 11832 038e 00BF     		.align	2
 11833              	.L510:
 11834 0390 00000000 		.word	N_IMU_Connected
 11835 0394 7C0E0000 		.word	.LC123
 11836 0398 980E0000 		.word	.LC124
 11837 039c B0010000 		.word	.LC113
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 267


 11838 03a0 140E0000 		.word	.LC125
 11839 03a4 00000000 		.word	IMU_connected
 11840              	.L476:
1603:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11841              		.loc 1 1603 0 discriminator 3
 11842 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 11843 03ac DA1D     		adds	r2, r3, #7
 11844 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 11845 03b2 3221     		movs	r1, #50
 11846 03b4 01FB03F3 		mul	r3, r1, r3
 11847 03b8 1A44     		add	r2, r2, r3
 11848 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 11849 03be 1A44     		add	r2, r2, r3
 11850 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 11851 03c4 D31A     		subs	r3, r2, r3
 11852 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 11853 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 11854 03ce 8A1A     		subs	r2, r1, r2
 11855 03d0 07F1EC01 		add	r1, r7, #236
 11856 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11857 03d6 07F58A72 		add	r2, r7, #276
 11858 03da D154     		strb	r1, [r2, r3]
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11859              		.loc 1 1602 0 discriminator 3
 11860 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 11861 03e0 013B     		subs	r3, r3, #1
 11862 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11863              	.L475:
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 11864              		.loc 1 1602 0 is_stmt 0 discriminator 1
 11865 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 11866 03ea 002B     		cmp	r3, #0
 11867 03ec DCD1     		bne	.L476
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11868              		.loc 1 1583 0 is_stmt 1 discriminator 2
 11869 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 11870 03f2 0133     		adds	r3, r3, #1
 11871 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11872              	.L470:
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 11873              		.loc 1 1583 0 is_stmt 0 discriminator 1
 11874 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 11875 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 11876 0400 9A42     		cmp	r2, r3
 11877 0402 FFF446AF 		bcc	.L477
1604:..\src/command_processing.c ****             }
1605:..\src/command_processing.c ****             
1606:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1607:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 11878              		.loc 1 1607 0 is_stmt 1
 11879 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 11880 040a 1A46     		mov	r2, r3	@ movhi
 11881 040c 9200     		lsls	r2, r2, #2
 11882 040e 1344     		add	r3, r3, r2
 11883 0410 1A46     		mov	r2, r3	@ movhi
 11884 0412 9100     		lsls	r1, r2, #2
 11885 0414 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 268


 11886 0416 0B46     		mov	r3, r1	@ movhi
 11887 0418 1344     		add	r3, r3, r2
 11888 041a 5B00     		lsls	r3, r3, #1
 11889 041c 9AB2     		uxth	r2, r3
 11890 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11891 0422 1344     		add	r3, r3, r2
 11892 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1608:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 11893              		.loc 1 1608 0
 11894 0428 0023     		movs	r3, #0
 11895 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11896 042e 1FE1     		b	.L478
 11897              	.L485:
1609:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11898              		.loc 1 1609 0
 11899 0430 B7F89436 		ldrh	r3, [r7, #1684]
 11900 0434 9A1C     		adds	r2, r3, #2
 11901 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 11902 043a 3221     		movs	r1, #50
 11903 043c 01FB03F3 		mul	r3, r1, r3
 11904 0440 1344     		add	r3, r3, r2
 11905 0442 07F58A72 		add	r2, r7, #276
 11906 0446 0221     		movs	r1, #2
 11907 0448 D154     		strb	r1, [r2, r3]
1610:..\src/command_processing.c ****                 
1611:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 11908              		.loc 1 1611 0
 11909 044a B7F89436 		ldrh	r3, [r7, #1684]
 11910 044e DA1C     		adds	r2, r3, #3
 11911 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 11912 0454 3221     		movs	r1, #50
 11913 0456 01FB03F3 		mul	r3, r1, r3
 11914 045a 1344     		add	r3, r3, r2
 11915 045c 07F58A72 		add	r2, r7, #276
 11916 0460 0321     		movs	r1, #3
 11917 0462 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11918              		.loc 1 1612 0
 11919 0464 B7F89436 		ldrh	r3, [r7, #1684]
 11920 0468 1A1D     		adds	r2, r3, #4
 11921 046a B7F8A036 		ldrh	r3, [r7, #1696]
 11922 046e 3221     		movs	r1, #50
 11923 0470 01FB03F3 		mul	r3, r1, r3
 11924 0474 1A44     		add	r2, r2, r3
 11925 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 11926 047a 5B00     		lsls	r3, r3, #1
 11927 047c B249     		ldr	r1, .L512
 11928 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11929 0480 1846     		mov	r0, r3
 11930 0482 B249     		ldr	r1, .L512+4
 11931 0484 0346     		mov	r3, r0
 11932 0486 5B00     		lsls	r3, r3, #1
 11933 0488 0344     		add	r3, r3, r0
 11934 048a 0B44     		add	r3, r3, r1
 11935 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11936 048e 07F58A73 		add	r3, r7, #276
 11937 0492 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 269


1613:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11938              		.loc 1 1613 0
 11939 0494 B7F89436 		ldrh	r3, [r7, #1684]
 11940 0498 5A1D     		adds	r2, r3, #5
 11941 049a B7F8A036 		ldrh	r3, [r7, #1696]
 11942 049e 3221     		movs	r1, #50
 11943 04a0 01FB03F3 		mul	r3, r1, r3
 11944 04a4 1A44     		add	r2, r2, r3
 11945 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 11946 04aa 5B00     		lsls	r3, r3, #1
 11947 04ac A649     		ldr	r1, .L512
 11948 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11949 04b0 1846     		mov	r0, r3
 11950 04b2 A649     		ldr	r1, .L512+4
 11951 04b4 0346     		mov	r3, r0
 11952 04b6 5B00     		lsls	r3, r3, #1
 11953 04b8 0344     		add	r3, r3, r0
 11954 04ba 0B44     		add	r3, r3, r1
 11955 04bc 0133     		adds	r3, r3, #1
 11956 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11957 04c0 07F58A73 		add	r3, r7, #276
 11958 04c4 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 11959              		.loc 1 1614 0
 11960 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 11961 04ca 9A1D     		adds	r2, r3, #6
 11962 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 11963 04d0 3221     		movs	r1, #50
 11964 04d2 01FB03F3 		mul	r3, r1, r3
 11965 04d6 1A44     		add	r2, r2, r3
 11966 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 11967 04dc 5B00     		lsls	r3, r3, #1
 11968 04de 9A49     		ldr	r1, .L512
 11969 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11970 04e2 1846     		mov	r0, r3
 11971 04e4 9949     		ldr	r1, .L512+4
 11972 04e6 0346     		mov	r3, r0
 11973 04e8 5B00     		lsls	r3, r3, #1
 11974 04ea 0344     		add	r3, r3, r0
 11975 04ec 0B44     		add	r3, r3, r1
 11976 04ee 0233     		adds	r3, r3, #2
 11977 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11978 04f2 07F58A73 		add	r3, r7, #276
 11979 04f6 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                 // check if there is a second value
1617:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 11980              		.loc 1 1617 0
 11981 04f8 954B     		ldr	r3, .L512+8
 11982 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11983 04fc 1A46     		mov	r2, r3
 11984 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 11985 0502 0133     		adds	r3, r3, #1
 11986 0504 5B00     		lsls	r3, r3, #1
 11987 0506 9A42     		cmp	r2, r3
 11988 0508 28DA     		bge	.L479
1618:..\src/command_processing.c ****                     // there is only one value
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 270


1619:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11989              		.loc 1 1619 0
 11990 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11991 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11992 0512 1EE0     		b	.L480
 11993              	.L481:
1620:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11994              		.loc 1 1620 0 discriminator 3
 11995 0514 B7F89436 		ldrh	r3, [r7, #1684]
 11996 0518 DA1D     		adds	r2, r3, #7
 11997 051a B7F8A036 		ldrh	r3, [r7, #1696]
 11998 051e 3221     		movs	r1, #50
 11999 0520 01FB03F3 		mul	r3, r1, r3
 12000 0524 1A44     		add	r2, r2, r3
 12001 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12002 052a 1A44     		add	r2, r2, r3
 12003 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12004 0530 D31A     		subs	r3, r2, r3
 12005 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12006 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12007 053a 8A1A     		subs	r2, r1, r2
 12008 053c 07F1D801 		add	r1, r7, #216
 12009 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12010 0542 07F58A72 		add	r2, r7, #276
 12011 0546 D154     		strb	r1, [r2, r3]
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12012              		.loc 1 1619 0 discriminator 3
 12013 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12014 054c 013B     		subs	r3, r3, #1
 12015 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12016              	.L480:
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12017              		.loc 1 1619 0 is_stmt 0 discriminator 1
 12018 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 12019 0556 002B     		cmp	r3, #0
 12020 0558 DCD1     		bne	.L481
 12021 055a 84E0     		b	.L482
 12022              	.L479:
1621:..\src/command_processing.c ****                 }
1622:..\src/command_processing.c ****                 else {
1623:..\src/command_processing.c ****                     // fill the second value
1624:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12023              		.loc 1 1624 0 is_stmt 1
 12024 055c B7F89436 		ldrh	r3, [r7, #1684]
 12025 0560 DA1C     		adds	r2, r3, #3
 12026 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12027 0566 3221     		movs	r1, #50
 12028 0568 01FB03F3 		mul	r3, r1, r3
 12029 056c 1344     		add	r3, r3, r2
 12030 056e 07F58A72 		add	r2, r7, #276
 12031 0572 0621     		movs	r1, #6
 12032 0574 D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12033              		.loc 1 1625 0
 12034 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12035 057a DA1D     		adds	r2, r3, #7
 12036 057c B7F8A036 		ldrh	r3, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 271


 12037 0580 3221     		movs	r1, #50
 12038 0582 01FB03F3 		mul	r3, r1, r3
 12039 0586 1A44     		add	r2, r2, r3
 12040 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12041 058c 5B00     		lsls	r3, r3, #1
 12042 058e 0133     		adds	r3, r3, #1
 12043 0590 6D49     		ldr	r1, .L512
 12044 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12045 0594 1846     		mov	r0, r3
 12046 0596 6D49     		ldr	r1, .L512+4
 12047 0598 0346     		mov	r3, r0
 12048 059a 5B00     		lsls	r3, r3, #1
 12049 059c 0344     		add	r3, r3, r0
 12050 059e 0B44     		add	r3, r3, r1
 12051 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12052 05a2 07F58A73 		add	r3, r7, #276
 12053 05a6 9954     		strb	r1, [r3, r2]
1626:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12054              		.loc 1 1626 0
 12055 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12056 05ac 03F10802 		add	r2, r3, #8
 12057 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12058 05b4 3221     		movs	r1, #50
 12059 05b6 01FB03F3 		mul	r3, r1, r3
 12060 05ba 1A44     		add	r2, r2, r3
 12061 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12062 05c0 5B00     		lsls	r3, r3, #1
 12063 05c2 0133     		adds	r3, r3, #1
 12064 05c4 6049     		ldr	r1, .L512
 12065 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12066 05c8 1846     		mov	r0, r3
 12067 05ca 6049     		ldr	r1, .L512+4
 12068 05cc 0346     		mov	r3, r0
 12069 05ce 5B00     		lsls	r3, r3, #1
 12070 05d0 0344     		add	r3, r3, r0
 12071 05d2 0B44     		add	r3, r3, r1
 12072 05d4 0133     		adds	r3, r3, #1
 12073 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12074 05d8 07F58A73 		add	r3, r7, #276
 12075 05dc 9954     		strb	r1, [r3, r2]
1627:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12076              		.loc 1 1627 0
 12077 05de B7F89436 		ldrh	r3, [r7, #1684]
 12078 05e2 03F10902 		add	r2, r3, #9
 12079 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12080 05ea 3221     		movs	r1, #50
 12081 05ec 01FB03F3 		mul	r3, r1, r3
 12082 05f0 1A44     		add	r2, r2, r3
 12083 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12084 05f6 5B00     		lsls	r3, r3, #1
 12085 05f8 0133     		adds	r3, r3, #1
 12086 05fa 5349     		ldr	r1, .L512
 12087 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12088 05fe 1846     		mov	r0, r3
 12089 0600 5249     		ldr	r1, .L512+4
 12090 0602 0346     		mov	r3, r0
 12091 0604 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 272


 12092 0606 0344     		add	r3, r3, r0
 12093 0608 0B44     		add	r3, r3, r1
 12094 060a 0233     		adds	r3, r3, #2
 12095 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12096 060e 07F58A73 		add	r3, r7, #276
 12097 0612 9954     		strb	r1, [r3, r2]
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12098              		.loc 1 1629 0
 12099 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12100 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12101 061c 1FE0     		b	.L483
 12102              	.L484:
1630:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12103              		.loc 1 1630 0 discriminator 3
 12104 061e B7F89436 		ldrh	r3, [r7, #1684]
 12105 0622 03F10A02 		add	r2, r3, #10
 12106 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12107 062a 3221     		movs	r1, #50
 12108 062c 01FB03F3 		mul	r3, r1, r3
 12109 0630 1A44     		add	r2, r2, r3
 12110 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12111 0636 1A44     		add	r2, r2, r3
 12112 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12113 063c D31A     		subs	r3, r2, r3
 12114 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12115 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12116 0646 8A1A     		subs	r2, r1, r2
 12117 0648 07F1D801 		add	r1, r7, #216
 12118 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12119 064e 07F58A72 		add	r2, r7, #276
 12120 0652 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12121              		.loc 1 1629 0 discriminator 3
 12122 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12123 0658 013B     		subs	r3, r3, #1
 12124 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12125              	.L483:
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12126              		.loc 1 1629 0 is_stmt 0 discriminator 1
 12127 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12128 0662 002B     		cmp	r3, #0
 12129 0664 DBD1     		bne	.L484
 12130              	.L482:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12131              		.loc 1 1608 0 is_stmt 1 discriminator 2
 12132 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12133 066a 0133     		adds	r3, r3, #1
 12134 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12135              	.L478:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12136              		.loc 1 1608 0 is_stmt 0 discriminator 1
 12137 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12138 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12139 0678 9A42     		cmp	r2, r3
 12140 067a FFF4D9AE 		bcc	.L485
1631:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 273


1632:..\src/command_processing.c ****             }
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12141              		.loc 1 1636 0 is_stmt 1
 12142 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12143 0682 1A46     		mov	r2, r3	@ movhi
 12144 0684 9200     		lsls	r2, r2, #2
 12145 0686 1344     		add	r3, r3, r2
 12146 0688 1A46     		mov	r2, r3	@ movhi
 12147 068a 9100     		lsls	r1, r2, #2
 12148 068c 1A46     		mov	r2, r3	@ movhi
 12149 068e 0B46     		mov	r3, r1	@ movhi
 12150 0690 1344     		add	r3, r3, r2
 12151 0692 5B00     		lsls	r3, r3, #1
 12152 0694 9AB2     		uxth	r2, r3
 12153 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12154 069a 1344     		add	r3, r3, r2
 12155 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1637:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12156              		.loc 1 1637 0
 12157 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12158 06a4 5A1E     		subs	r2, r3, #1
 12159 06a6 07F1C803 		add	r3, r7, #200
 12160 06aa 2A49     		ldr	r1, .L512+12
 12161 06ac 1846     		mov	r0, r3
 12162 06ae FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12163              		.loc 1 1638 0
 12164 06b2 07F1C803 		add	r3, r7, #200
 12165 06b6 1846     		mov	r0, r3
 12166 06b8 FFF7FEFF 		bl	strlen
 12167 06bc 0346     		mov	r3, r0
 12168 06be 87F89336 		strb	r3, [r7, #1683]
1639:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12169              		.loc 1 1639 0
 12170 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12171 06c6 0233     		adds	r3, r3, #2
 12172 06c8 07F58A72 		add	r2, r7, #276
 12173 06cc 0221     		movs	r1, #2
 12174 06ce D154     		strb	r1, [r2, r3]
1640:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12175              		.loc 1 1640 0
 12176 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12177 06d4 0333     		adds	r3, r3, #3
 12178 06d6 07F58A72 		add	r2, r7, #276
 12179 06da 0121     		movs	r1, #1
 12180 06dc D154     		strb	r1, [r2, r3]
1641:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12181              		.loc 1 1641 0
 12182 06de B7F89436 		ldrh	r3, [r7, #1684]
 12183 06e2 0433     		adds	r3, r3, #4
 12184 06e4 1C4A     		ldr	r2, .L512+16
 12185 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12186 06ea 07F58A72 		add	r2, r7, #276
 12187 06ee D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 274


1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12188              		.loc 1 1642 0
 12189 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12190 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12191 06f8 18E0     		b	.L486
 12192              	.L487:
1643:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12193              		.loc 1 1643 0 discriminator 3
 12194 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12195 06fe 5A1D     		adds	r2, r3, #5
 12196 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12197 0704 1A44     		add	r2, r2, r3
 12198 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12199 070a D31A     		subs	r3, r2, r3
 12200 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12201 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12202 0714 8A1A     		subs	r2, r1, r2
 12203 0716 07F1C801 		add	r1, r7, #200
 12204 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12205 071c 07F58A72 		add	r2, r7, #276
 12206 0720 D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12207              		.loc 1 1642 0 discriminator 3
 12208 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12209 0726 013B     		subs	r3, r3, #1
 12210 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12211              	.L486:
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12212              		.loc 1 1642 0 is_stmt 0 discriminator 1
 12213 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12214 0730 002B     		cmp	r3, #0
 12215 0732 E2D1     		bne	.L487
1644:..\src/command_processing.c ****                 
1645:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1646:..\src/command_processing.c ****             
1647:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12216              		.loc 1 1647 0 is_stmt 1
 12217 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12218 0738 3233     		adds	r3, r3, #50
 12219 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1648:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12220              		.loc 1 1648 0
 12221 073e 0023     		movs	r3, #0
 12222 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12223 0744 38E1     		b	.L488
 12224              	.L513:
 12225 0746 00BF     		.align	2
 12226              	.L512:
 12227 0748 00000000 		.word	IMU_connected
 12228 074c 00000000 		.word	MagCal
 12229 0750 00000000 		.word	N_IMU_Connected
 12230 0754 200E0000 		.word	.LC126
 12231 0758 00000000 		.word	c_mem
 12232              	.L491:
1649:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12233              		.loc 1 1649 0
 12234 075c B7F89826 		ldrh	r2, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 275


 12235 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12236 0764 D118     		adds	r1, r2, r3
 12237 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12238 076a D54A     		ldr	r2, .L514
 12239 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12240 076e 07F19C00 		add	r0, r7, #156
 12241 0772 0A46     		mov	r2, r1
 12242 0774 D349     		ldr	r1, .L514+4
 12243 0776 FFF7FEFF 		bl	sprintf
1650:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12244              		.loc 1 1650 0
 12245 077a 07F19C03 		add	r3, r7, #156
 12246 077e 1846     		mov	r0, r3
 12247 0780 FFF7FEFF 		bl	strlen
 12248 0784 0346     		mov	r3, r0
 12249 0786 87F88F36 		strb	r3, [r7, #1679]
1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12250              		.loc 1 1652 0
 12251 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12252 078e 1A46     		mov	r2, r3	@ movhi
 12253 0790 9200     		lsls	r2, r2, #2
 12254 0792 1344     		add	r3, r3, r2
 12255 0794 1A46     		mov	r2, r3	@ movhi
 12256 0796 9100     		lsls	r1, r2, #2
 12257 0798 1A46     		mov	r2, r3	@ movhi
 12258 079a 0B46     		mov	r3, r1	@ movhi
 12259 079c 1344     		add	r3, r3, r2
 12260 079e 5B00     		lsls	r3, r3, #1
 12261 07a0 9AB2     		uxth	r2, r3
 12262 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12263 07a6 1344     		add	r3, r3, r2
 12264 07a8 9BB2     		uxth	r3, r3
 12265 07aa 0233     		adds	r3, r3, #2
 12266 07ac 9BB2     		uxth	r3, r3
 12267 07ae 1A46     		mov	r2, r3
 12268 07b0 07F58A73 		add	r3, r7, #276
 12269 07b4 0221     		movs	r1, #2
 12270 07b6 9954     		strb	r1, [r3, r2]
1653:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12271              		.loc 1 1653 0
 12272 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12273 07bc 1A46     		mov	r2, r3	@ movhi
 12274 07be 9200     		lsls	r2, r2, #2
 12275 07c0 1344     		add	r3, r3, r2
 12276 07c2 1A46     		mov	r2, r3	@ movhi
 12277 07c4 9100     		lsls	r1, r2, #2
 12278 07c6 1A46     		mov	r2, r3	@ movhi
 12279 07c8 0B46     		mov	r3, r1	@ movhi
 12280 07ca 1344     		add	r3, r3, r2
 12281 07cc 5B00     		lsls	r3, r3, #1
 12282 07ce 9AB2     		uxth	r2, r3
 12283 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12284 07d4 1344     		add	r3, r3, r2
 12285 07d6 9BB2     		uxth	r3, r3
 12286 07d8 0333     		adds	r3, r3, #3
 12287 07da 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 276


 12288 07dc 1A46     		mov	r2, r3
 12289 07de 07F58A73 		add	r3, r7, #276
 12290 07e2 0521     		movs	r1, #5
 12291 07e4 9954     		strb	r1, [r3, r2]
1654:..\src/command_processing.c ****                 
1655:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12292              		.loc 1 1655 0
 12293 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12294 07ea 1A46     		mov	r2, r3	@ movhi
 12295 07ec 9200     		lsls	r2, r2, #2
 12296 07ee 1344     		add	r3, r3, r2
 12297 07f0 1A46     		mov	r2, r3	@ movhi
 12298 07f2 9100     		lsls	r1, r2, #2
 12299 07f4 1A46     		mov	r2, r3	@ movhi
 12300 07f6 0B46     		mov	r3, r1	@ movhi
 12301 07f8 1344     		add	r3, r3, r2
 12302 07fa 5B00     		lsls	r3, r3, #1
 12303 07fc 9AB2     		uxth	r2, r3
 12304 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12305 0802 1344     		add	r3, r3, r2
 12306 0804 9BB2     		uxth	r3, r3
 12307 0806 0433     		adds	r3, r3, #4
 12308 0808 9BB2     		uxth	r3, r3
 12309 080a 1846     		mov	r0, r3
 12310 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12311 0810 AB4A     		ldr	r2, .L514
 12312 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12313 0814 1946     		mov	r1, r3
 12314 0816 AC4A     		ldr	r2, .L514+8
 12315 0818 0B46     		mov	r3, r1
 12316 081a 9B00     		lsls	r3, r3, #2
 12317 081c 0B44     		add	r3, r3, r1
 12318 081e 1344     		add	r3, r3, r2
 12319 0820 03F20223 		addw	r3, r3, #514
 12320 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12321 0826 07F58A73 		add	r3, r7, #276
 12322 082a 1A54     		strb	r2, [r3, r0]
1656:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12323              		.loc 1 1656 0
 12324 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12325 0830 1A46     		mov	r2, r3	@ movhi
 12326 0832 9200     		lsls	r2, r2, #2
 12327 0834 1344     		add	r3, r3, r2
 12328 0836 1A46     		mov	r2, r3	@ movhi
 12329 0838 9100     		lsls	r1, r2, #2
 12330 083a 1A46     		mov	r2, r3	@ movhi
 12331 083c 0B46     		mov	r3, r1	@ movhi
 12332 083e 1344     		add	r3, r3, r2
 12333 0840 5B00     		lsls	r3, r3, #1
 12334 0842 9AB2     		uxth	r2, r3
 12335 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12336 0848 1344     		add	r3, r3, r2
 12337 084a 9BB2     		uxth	r3, r3
 12338 084c 0533     		adds	r3, r3, #5
 12339 084e 9BB2     		uxth	r3, r3
 12340 0850 1846     		mov	r0, r3
 12341 0852 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 277


 12342 0856 9A4A     		ldr	r2, .L514
 12343 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12344 085a 1946     		mov	r1, r3
 12345 085c 9A4A     		ldr	r2, .L514+8
 12346 085e 0B46     		mov	r3, r1
 12347 0860 9B00     		lsls	r3, r3, #2
 12348 0862 0B44     		add	r3, r3, r1
 12349 0864 1344     		add	r3, r3, r2
 12350 0866 03F20323 		addw	r3, r3, #515
 12351 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12352 086c 07F58A73 		add	r3, r7, #276
 12353 0870 1A54     		strb	r2, [r3, r0]
1657:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12354              		.loc 1 1657 0
 12355 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12356 0876 1A46     		mov	r2, r3	@ movhi
 12357 0878 9200     		lsls	r2, r2, #2
 12358 087a 1344     		add	r3, r3, r2
 12359 087c 1A46     		mov	r2, r3	@ movhi
 12360 087e 9100     		lsls	r1, r2, #2
 12361 0880 1A46     		mov	r2, r3	@ movhi
 12362 0882 0B46     		mov	r3, r1	@ movhi
 12363 0884 1344     		add	r3, r3, r2
 12364 0886 5B00     		lsls	r3, r3, #1
 12365 0888 9AB2     		uxth	r2, r3
 12366 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12367 088e 1344     		add	r3, r3, r2
 12368 0890 9BB2     		uxth	r3, r3
 12369 0892 0633     		adds	r3, r3, #6
 12370 0894 9BB2     		uxth	r3, r3
 12371 0896 1846     		mov	r0, r3
 12372 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 12373 089c 884A     		ldr	r2, .L514
 12374 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12375 08a0 1946     		mov	r1, r3
 12376 08a2 894A     		ldr	r2, .L514+8
 12377 08a4 0B46     		mov	r3, r1
 12378 08a6 9B00     		lsls	r3, r3, #2
 12379 08a8 0B44     		add	r3, r3, r1
 12380 08aa 1344     		add	r3, r3, r2
 12381 08ac 03F50173 		add	r3, r3, #516
 12382 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12383 08b2 07F58A73 		add	r3, r7, #276
 12384 08b6 1A54     		strb	r2, [r3, r0]
1658:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12385              		.loc 1 1658 0
 12386 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12387 08bc 1A46     		mov	r2, r3	@ movhi
 12388 08be 9200     		lsls	r2, r2, #2
 12389 08c0 1344     		add	r3, r3, r2
 12390 08c2 1A46     		mov	r2, r3	@ movhi
 12391 08c4 9100     		lsls	r1, r2, #2
 12392 08c6 1A46     		mov	r2, r3	@ movhi
 12393 08c8 0B46     		mov	r3, r1	@ movhi
 12394 08ca 1344     		add	r3, r3, r2
 12395 08cc 5B00     		lsls	r3, r3, #1
 12396 08ce 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 278


 12397 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12398 08d4 1344     		add	r3, r3, r2
 12399 08d6 9BB2     		uxth	r3, r3
 12400 08d8 0733     		adds	r3, r3, #7
 12401 08da 9BB2     		uxth	r3, r3
 12402 08dc 1846     		mov	r0, r3
 12403 08de B7F8A436 		ldrh	r3, [r7, #1700]
 12404 08e2 774A     		ldr	r2, .L514
 12405 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12406 08e6 1946     		mov	r1, r3
 12407 08e8 774A     		ldr	r2, .L514+8
 12408 08ea 0B46     		mov	r3, r1
 12409 08ec 9B00     		lsls	r3, r3, #2
 12410 08ee 0B44     		add	r3, r3, r1
 12411 08f0 1344     		add	r3, r3, r2
 12412 08f2 03F20523 		addw	r3, r3, #517
 12413 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12414 08f8 07F58A73 		add	r3, r7, #276
 12415 08fc 1A54     		strb	r2, [r3, r0]
1659:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12416              		.loc 1 1659 0
 12417 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12418 0902 1A46     		mov	r2, r3	@ movhi
 12419 0904 9200     		lsls	r2, r2, #2
 12420 0906 1344     		add	r3, r3, r2
 12421 0908 1A46     		mov	r2, r3	@ movhi
 12422 090a 9100     		lsls	r1, r2, #2
 12423 090c 1A46     		mov	r2, r3	@ movhi
 12424 090e 0B46     		mov	r3, r1	@ movhi
 12425 0910 1344     		add	r3, r3, r2
 12426 0912 5B00     		lsls	r3, r3, #1
 12427 0914 9AB2     		uxth	r2, r3
 12428 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12429 091a 1344     		add	r3, r3, r2
 12430 091c 9BB2     		uxth	r3, r3
 12431 091e 0833     		adds	r3, r3, #8
 12432 0920 9BB2     		uxth	r3, r3
 12433 0922 1846     		mov	r0, r3
 12434 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 12435 0928 654A     		ldr	r2, .L514
 12436 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12437 092c 1946     		mov	r1, r3
 12438 092e 664A     		ldr	r2, .L514+8
 12439 0930 0B46     		mov	r3, r1
 12440 0932 9B00     		lsls	r3, r3, #2
 12441 0934 0B44     		add	r3, r3, r1
 12442 0936 1344     		add	r3, r3, r2
 12443 0938 03F20623 		addw	r3, r3, #518
 12444 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12445 093e 07F58A73 		add	r3, r7, #276
 12446 0942 1A54     		strb	r2, [r3, r0]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 12447              		.loc 1 1661 0
 12448 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12449 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12450 094c 2BE0     		b	.L489
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 279


 12451              	.L490:
1662:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12452              		.loc 1 1662 0 discriminator 3
 12453 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12454 0952 1A46     		mov	r2, r3	@ movhi
 12455 0954 9200     		lsls	r2, r2, #2
 12456 0956 1344     		add	r3, r3, r2
 12457 0958 1A46     		mov	r2, r3	@ movhi
 12458 095a 9100     		lsls	r1, r2, #2
 12459 095c 1A46     		mov	r2, r3	@ movhi
 12460 095e 0B46     		mov	r3, r1	@ movhi
 12461 0960 1344     		add	r3, r3, r2
 12462 0962 5B00     		lsls	r3, r3, #1
 12463 0964 9AB2     		uxth	r2, r3
 12464 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12465 096a 1344     		add	r3, r3, r2
 12466 096c 9AB2     		uxth	r2, r3
 12467 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 12468 0972 9BB2     		uxth	r3, r3
 12469 0974 1344     		add	r3, r3, r2
 12470 0976 9AB2     		uxth	r2, r3
 12471 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 12472 097c D31A     		subs	r3, r2, r3
 12473 097e 9BB2     		uxth	r3, r3
 12474 0980 0933     		adds	r3, r3, #9
 12475 0982 9BB2     		uxth	r3, r3
 12476 0984 1946     		mov	r1, r3
 12477 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 12478 098a B7F8A236 		ldrh	r3, [r7, #1698]
 12479 098e D31A     		subs	r3, r2, r3
 12480 0990 07F19C02 		add	r2, r7, #156
 12481 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 12482 0996 07F58A73 		add	r3, r7, #276
 12483 099a 5A54     		strb	r2, [r3, r1]
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12484              		.loc 1 1661 0 discriminator 3
 12485 099c B7F8A236 		ldrh	r3, [r7, #1698]
 12486 09a0 013B     		subs	r3, r3, #1
 12487 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12488              	.L489:
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 12489              		.loc 1 1661 0 is_stmt 0 discriminator 1
 12490 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 12491 09aa 002B     		cmp	r3, #0
 12492 09ac CFD1     		bne	.L490
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12493              		.loc 1 1648 0 is_stmt 1 discriminator 2
 12494 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 12495 09b2 0133     		adds	r3, r3, #1
 12496 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12497              	.L488:
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12498              		.loc 1 1648 0 is_stmt 0 discriminator 1
 12499 09b8 444B     		ldr	r3, .L514+12
 12500 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12501 09bc 9BB2     		uxth	r3, r3
 12502 09be B7F8A426 		ldrh	r2, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 280


 12503 09c2 9A42     		cmp	r2, r3
 12504 09c4 FFF4CAAE 		bcc	.L491
1663:..\src/command_processing.c ****             }  
1664:..\src/command_processing.c ****           
1665:..\src/command_processing.c **** 
1666:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1667:..\src/command_processing.c ****             
1668:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 12505              		.loc 1 1668 0 is_stmt 1
 12506 09c8 404B     		ldr	r3, .L514+12
 12507 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12508 09cc 9BB2     		uxth	r3, r3
 12509 09ce 1A46     		mov	r2, r3	@ movhi
 12510 09d0 9200     		lsls	r2, r2, #2
 12511 09d2 1344     		add	r3, r3, r2
 12512 09d4 1A46     		mov	r2, r3	@ movhi
 12513 09d6 9100     		lsls	r1, r2, #2
 12514 09d8 1A46     		mov	r2, r3	@ movhi
 12515 09da 0B46     		mov	r3, r1	@ movhi
 12516 09dc 1344     		add	r3, r3, r2
 12517 09de 5B00     		lsls	r3, r3, #1
 12518 09e0 9AB2     		uxth	r2, r3
 12519 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12520 09e6 1344     		add	r3, r3, r2
 12521 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1669:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 12522              		.loc 1 1669 0
 12523 09ec B7F89836 		ldrh	r3, [r7, #1688]
 12524 09f0 364A     		ldr	r2, .L514+12
 12525 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12526 09f4 1A44     		add	r2, r2, r3
 12527 09f6 07F18003 		add	r3, r7, #128
 12528 09fa 3549     		ldr	r1, .L514+16
 12529 09fc 1846     		mov	r0, r3
 12530 09fe FFF7FEFF 		bl	sprintf
1670:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 12531              		.loc 1 1670 0
 12532 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 12533 0a06 0233     		adds	r3, r3, #2
 12534 0a08 07F58A72 		add	r2, r7, #276
 12535 0a0c 0021     		movs	r1, #0
 12536 0a0e D154     		strb	r1, [r2, r3]
1671:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12537              		.loc 1 1671 0
 12538 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 12539 0a14 0333     		adds	r3, r3, #3
 12540 0a16 07F58A72 		add	r2, r7, #276
 12541 0a1a 0121     		movs	r1, #1
 12542 0a1c D154     		strb	r1, [r2, r3]
1672:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 12543              		.loc 1 1672 0
 12544 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 12545 0a22 0433     		adds	r3, r3, #4
 12546 0a24 284A     		ldr	r2, .L514+8
 12547 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 12548 0a2a 07F58A72 		add	r2, r7, #276
 12549 0a2e D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 281


1673:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 12550              		.loc 1 1673 0
 12551 0a30 254B     		ldr	r3, .L514+8
 12552 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 12553 0a36 012B     		cmp	r3, #1
 12554 0a38 17D0     		beq	.L493
 12555 0a3a 022B     		cmp	r3, #2
 12556 0a3c 28D0     		beq	.L494
 12557 0a3e 002B     		cmp	r3, #0
 12558 0a40 00D0     		beq	.L495
1674:..\src/command_processing.c ****                 case 0: 
1675:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1676:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1677:..\src/command_processing.c ****                     break;
1678:..\src/command_processing.c ****                 case 1: 
1679:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1680:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1681:..\src/command_processing.c ****                     break;
1682:..\src/command_processing.c ****                 case 2: 
1683:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1684:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1685:..\src/command_processing.c ****                     break;
1686:..\src/command_processing.c ****                 default:
1687:..\src/command_processing.c ****                     break;
 12559              		.loc 1 1687 0
 12560 0a42 38E0     		b	.L496
 12561              	.L495:
1675:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12562              		.loc 1 1675 0
 12563 0a44 07F18003 		add	r3, r7, #128
 12564 0a48 1846     		mov	r0, r3
 12565 0a4a FFF7FEFF 		bl	strlen
 12566 0a4e 0346     		mov	r3, r0
 12567 0a50 1A46     		mov	r2, r3
 12568 0a52 07F18003 		add	r3, r7, #128
 12569 0a56 1344     		add	r3, r3, r2
 12570 0a58 1E4A     		ldr	r2, .L514+20
 12571 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 12572 0a5c 1860     		str	r0, [r3]	@ unaligned
 12573 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12574 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1676:..\src/command_processing.c ****                     break;
 12575              		.loc 1 1676 0
 12576 0a62 1A23     		movs	r3, #26
 12577 0a64 87F89D36 		strb	r3, [r7, #1693]
1677:..\src/command_processing.c ****                 case 1: 
 12578              		.loc 1 1677 0
 12579 0a68 25E0     		b	.L496
 12580              	.L493:
1679:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 12581              		.loc 1 1679 0
 12582 0a6a 07F18003 		add	r3, r7, #128
 12583 0a6e 1846     		mov	r0, r3
 12584 0a70 FFF7FEFF 		bl	strlen
 12585 0a74 0346     		mov	r3, r0
 12586 0a76 1A46     		mov	r2, r3
 12587 0a78 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 282


 12588 0a7c 1344     		add	r3, r3, r2
 12589 0a7e 164A     		ldr	r2, .L514+24
 12590 0a80 1068     		ldr	r0, [r2]	@ unaligned
 12591 0a82 1860     		str	r0, [r3]	@ unaligned
 12592 0a84 1279     		ldrb	r2, [r2, #4]
 12593 0a86 1A71     		strb	r2, [r3, #4]
1680:..\src/command_processing.c ****                     break;
 12594              		.loc 1 1680 0
 12595 0a88 1923     		movs	r3, #25
 12596 0a8a 87F89D36 		strb	r3, [r7, #1693]
1681:..\src/command_processing.c ****                 case 2: 
 12597              		.loc 1 1681 0
 12598 0a8e 12E0     		b	.L496
 12599              	.L494:
1683:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 12600              		.loc 1 1683 0
 12601 0a90 07F18003 		add	r3, r7, #128
 12602 0a94 1846     		mov	r0, r3
 12603 0a96 FFF7FEFF 		bl	strlen
 12604 0a9a 0346     		mov	r3, r0
 12605 0a9c 1A46     		mov	r2, r3
 12606 0a9e 07F18003 		add	r3, r7, #128
 12607 0aa2 1344     		add	r3, r3, r2
 12608 0aa4 0D4A     		ldr	r2, .L514+28
 12609 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 12610 0aa8 1860     		str	r0, [r3]	@ unaligned
 12611 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12612 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1684:..\src/command_processing.c ****                     break;
 12613              		.loc 1 1684 0
 12614 0aae 1A23     		movs	r3, #26
 12615 0ab0 87F89D36 		strb	r3, [r7, #1693]
1685:..\src/command_processing.c ****                 default:
 12616              		.loc 1 1685 0
 12617 0ab4 00BF     		nop
 12618              	.L496:
1688:..\src/command_processing.c ****             }            
1689:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 12619              		.loc 1 1689 0
 12620 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12621 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12622 0abe 28E0     		b	.L497
 12623              	.L515:
 12624              		.align	2
 12625              	.L514:
 12626 0ac0 00000000 		.word	IMU_connected
 12627 0ac4 300E0000 		.word	.LC127
 12628 0ac8 00000000 		.word	c_mem
 12629 0acc 00000000 		.word	N_IMU_Connected
 12630 0ad0 4C0E0000 		.word	.LC128
 12631 0ad4 640E0000 		.word	.LC129
 12632 0ad8 6C0E0000 		.word	.LC130
 12633 0adc 740E0000 		.word	.LC131
 12634              	.L498:
1690:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12635              		.loc 1 1690 0 discriminator 3
 12636 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 283


 12637 0ae4 5A1D     		adds	r2, r3, #5
 12638 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12639 0aea 1A44     		add	r2, r2, r3
 12640 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 12641 0af0 D31A     		subs	r3, r2, r3
 12642 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 12643 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 12644 0afa 8A1A     		subs	r2, r1, r2
 12645 0afc 07F18001 		add	r1, r7, #128
 12646 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12647 0b02 07F58A72 		add	r2, r7, #276
 12648 0b06 D154     		strb	r1, [r2, r3]
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12649              		.loc 1 1689 0 discriminator 3
 12650 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 12651 0b0c 013B     		subs	r3, r3, #1
 12652 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12653              	.L497:
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 12654              		.loc 1 1689 0 is_stmt 0 discriminator 1
 12655 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 12656 0b16 002B     		cmp	r3, #0
 12657 0b18 E2D1     		bne	.L498
1691:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1692:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 12658              		.loc 1 1692 0 is_stmt 1
 12659 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 12660 0b1e 5A1D     		adds	r2, r3, #5
 12661 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 12662 0b24 1344     		add	r3, r3, r2
 12663 0b26 07F58A72 		add	r2, r7, #276
 12664 0b2a 0121     		movs	r1, #1
 12665 0b2c D154     		strb	r1, [r2, r3]
1693:..\src/command_processing.c ****                   
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1696:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12666              		.loc 1 1696 0
 12667 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12668 0b32 3233     		adds	r3, r3, #50
 12669 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12670              		.loc 1 1697 0
 12671 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12672 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12673 0b40 1AE0     		b	.L499
 12674              	.L500:
1698:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 12675              		.loc 1 1698 0 discriminator 3
 12676 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12677 0b46 0233     		adds	r3, r3, #2
 12678 0b48 9BB2     		uxth	r3, r3
 12679 0b4a 1A46     		mov	r2, r3
 12680 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 12681 0b50 1A44     		add	r2, r2, r3
 12682 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 12683 0b56 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 284


 12684 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 12685 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 12686 0b60 8A1A     		subs	r2, r1, r2
 12687 0b62 07F10801 		add	r1, r7, #8
 12688 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12689 0b68 07F58A72 		add	r2, r7, #276
 12690 0b6c D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12691              		.loc 1 1697 0 discriminator 3
 12692 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 12693 0b72 013B     		subs	r3, r3, #1
 12694 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12695              	.L499:
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 12696              		.loc 1 1697 0 is_stmt 0 discriminator 1
 12697 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 12698 0b7c 002B     		cmp	r3, #0
 12699 0b7e E0D1     		bne	.L500
1699:..\src/command_processing.c **** 
1700:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 12700              		.loc 1 1700 0 is_stmt 1
 12701 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 12702 0b84 5C1E     		subs	r4, r3, #1
 12703 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 12704 0b8a DBB2     		uxtb	r3, r3
 12705 0b8c 013B     		subs	r3, r3, #1
 12706 0b8e DAB2     		uxtb	r2, r3
 12707 0b90 07F58A73 		add	r3, r7, #276
 12708 0b94 1146     		mov	r1, r2
 12709 0b96 1846     		mov	r0, r3
 12710 0b98 FFF7FEFF 		bl	LCRChecksum
 12711 0b9c 0346     		mov	r3, r0
 12712 0b9e 1A46     		mov	r2, r3
 12713 0ba0 07F58A73 		add	r3, r7, #276
 12714 0ba4 1A55     		strb	r2, [r3, r4]
1701:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 12715              		.loc 1 1701 0
 12716 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 12717 0baa 07F58A73 		add	r3, r7, #276
 12718 0bae 1146     		mov	r1, r2
 12719 0bb0 1846     		mov	r0, r3
 12720 0bb2 FFF7FEFF 		bl	commWrite
1702:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 12721              		.loc 1 1702 0
 12722 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1703:..\src/command_processing.c ****         break;
 12723              		.loc 1 1703 0
 12724 0bba 09E1     		b	.L501
 12725              	.L508:
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c **** //=========================================================     other_params
1706:..\src/command_processing.c ****         default: 
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 12726              		.loc 1 1708 0
 12727 0bbc BB1D     		adds	r3, r7, #6
 12728 0bbe 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 285


 12729 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 12730 0bc4 013B     		subs	r3, r3, #1
 12731 0bc6 9A42     		cmp	r2, r3
 12732 0bc8 C0F20181 		blt	.L509
1709:..\src/command_processing.c ****                 break;
1710:..\src/command_processing.c ****             
1711:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 12733              		.loc 1 1711 0
 12734 0bcc BB1D     		adds	r3, r7, #6
 12735 0bce 1A88     		ldrh	r2, [r3]
 12736 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 12737 0bd4 8149     		ldr	r1, .L516
 12738 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 12739 0bd8 0B44     		add	r3, r3, r1
 12740 0bda 9A42     		cmp	r2, r3
 12741 0bdc 05D1     		bne	.L503
1712:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 12742              		.loc 1 1712 0
 12743 0bde 804B     		ldr	r3, .L516+4
 12744 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12745 0be2 804B     		ldr	r3, .L516+8
 12746 0be4 83F80122 		strb	r2, [r3, #513]
1713:..\src/command_processing.c ****                 break;
 12747              		.loc 1 1713 0
 12748 0be8 F2E0     		b	.L501
 12749              	.L503:
1714:..\src/command_processing.c ****             }
1715:..\src/command_processing.c ****             
1716:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 12750              		.loc 1 1716 0
 12751 0bea BB1D     		adds	r3, r7, #6
 12752 0bec 1A88     		ldrh	r2, [r3]
 12753 0bee B7F89836 		ldrh	r3, [r7, #1688]
 12754 0bf2 013B     		subs	r3, r3, #1
 12755 0bf4 9A42     		cmp	r2, r3
 12756 0bf6 05D1     		bne	.L504
1717:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 12757              		.loc 1 1717 0
 12758 0bf8 794B     		ldr	r3, .L516+4
 12759 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 12760 0bfc 794B     		ldr	r3, .L516+8
 12761 0bfe 83F8A020 		strb	r2, [r3, #160]
1718:..\src/command_processing.c ****             }
1719:..\src/command_processing.c ****             else {
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1726:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1727:..\src/command_processing.c ****                 
1728:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1729:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1730:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1731:..\src/command_processing.c ****                 {
1732:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 286


1733:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1734:..\src/command_processing.c ****                 }
1735:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             }
1738:..\src/command_processing.c ****             
1739:..\src/command_processing.c ****         break;
 12762              		.loc 1 1739 0
 12763 0c02 E5E0     		b	.L501
 12764              	.L504:
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 12765              		.loc 1 1722 0
 12766 0c04 BB1D     		adds	r3, r7, #6
 12767 0c06 1A88     		ldrh	r2, [r3]
 12768 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 12769 0c0c D31A     		subs	r3, r2, r3
 12770 0c0e 764A     		ldr	r2, .L516+12
 12771 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12772 0c12 1946     		mov	r1, r3
 12773 0c14 724B     		ldr	r3, .L516+4
 12774 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 12775 0c18 724A     		ldr	r2, .L516+8
 12776 0c1a 0B46     		mov	r3, r1
 12777 0c1c 9B00     		lsls	r3, r3, #2
 12778 0c1e 0B44     		add	r3, r3, r1
 12779 0c20 1344     		add	r3, r3, r2
 12780 0c22 03F20223 		addw	r3, r3, #514
 12781 0c26 0246     		mov	r2, r0
 12782 0c28 1A70     		strb	r2, [r3]
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 12783              		.loc 1 1723 0
 12784 0c2a BB1D     		adds	r3, r7, #6
 12785 0c2c 1A88     		ldrh	r2, [r3]
 12786 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 12787 0c32 D31A     		subs	r3, r2, r3
 12788 0c34 6C4A     		ldr	r2, .L516+12
 12789 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12790 0c38 1946     		mov	r1, r3
 12791 0c3a 694B     		ldr	r3, .L516+4
 12792 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 12793 0c3e 694A     		ldr	r2, .L516+8
 12794 0c40 0B46     		mov	r3, r1
 12795 0c42 9B00     		lsls	r3, r3, #2
 12796 0c44 0B44     		add	r3, r3, r1
 12797 0c46 1344     		add	r3, r3, r2
 12798 0c48 03F20323 		addw	r3, r3, #515
 12799 0c4c 0246     		mov	r2, r0
 12800 0c4e 1A70     		strb	r2, [r3]
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 12801              		.loc 1 1724 0
 12802 0c50 BB1D     		adds	r3, r7, #6
 12803 0c52 1A88     		ldrh	r2, [r3]
 12804 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 12805 0c58 D31A     		subs	r3, r2, r3
 12806 0c5a 634A     		ldr	r2, .L516+12
 12807 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12808 0c5e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 287


 12809 0c60 5F4B     		ldr	r3, .L516+4
 12810 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 12811 0c64 5F4A     		ldr	r2, .L516+8
 12812 0c66 0B46     		mov	r3, r1
 12813 0c68 9B00     		lsls	r3, r3, #2
 12814 0c6a 0B44     		add	r3, r3, r1
 12815 0c6c 1344     		add	r3, r3, r2
 12816 0c6e 03F50173 		add	r3, r3, #516
 12817 0c72 0246     		mov	r2, r0
 12818 0c74 1A70     		strb	r2, [r3]
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 12819              		.loc 1 1725 0
 12820 0c76 BB1D     		adds	r3, r7, #6
 12821 0c78 1A88     		ldrh	r2, [r3]
 12822 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 12823 0c7e D31A     		subs	r3, r2, r3
 12824 0c80 594A     		ldr	r2, .L516+12
 12825 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12826 0c84 1946     		mov	r1, r3
 12827 0c86 564B     		ldr	r3, .L516+4
 12828 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 12829 0c8a 564A     		ldr	r2, .L516+8
 12830 0c8c 0B46     		mov	r3, r1
 12831 0c8e 9B00     		lsls	r3, r3, #2
 12832 0c90 0B44     		add	r3, r3, r1
 12833 0c92 1344     		add	r3, r3, r2
 12834 0c94 03F20523 		addw	r3, r3, #517
 12835 0c98 0246     		mov	r2, r0
 12836 0c9a 1A70     		strb	r2, [r3]
1726:..\src/command_processing.c ****                 
 12837              		.loc 1 1726 0
 12838 0c9c BB1D     		adds	r3, r7, #6
 12839 0c9e 1A88     		ldrh	r2, [r3]
 12840 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 12841 0ca4 D31A     		subs	r3, r2, r3
 12842 0ca6 504A     		ldr	r2, .L516+12
 12843 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12844 0caa 1946     		mov	r1, r3
 12845 0cac 4C4B     		ldr	r3, .L516+4
 12846 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 12847 0cb0 4C4A     		ldr	r2, .L516+8
 12848 0cb2 0B46     		mov	r3, r1
 12849 0cb4 9B00     		lsls	r3, r3, #2
 12850 0cb6 0B44     		add	r3, r3, r1
 12851 0cb8 1344     		add	r3, r3, r2
 12852 0cba 03F20623 		addw	r3, r3, #518
 12853 0cbe 0246     		mov	r2, r0
 12854 0cc0 1A70     		strb	r2, [r3]
1729:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 12855              		.loc 1 1729 0
 12856 0cc2 4A4B     		ldr	r3, .L516+16
 12857 0cc4 0122     		movs	r2, #1
 12858 0cc6 1A60     		str	r2, [r3]
1730:..\src/command_processing.c ****                 {
 12859              		.loc 1 1730 0
 12860 0cc8 0023     		movs	r3, #0
 12861 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 288


 12862 0cce 71E0     		b	.L506
 12863              	.L507:
1732:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 12864              		.loc 1 1732 0 discriminator 3
 12865 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 12866 0cd4 444A     		ldr	r2, .L516+12
 12867 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12868 0cd8 1C46     		mov	r4, r3
 12869 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 12870 0cde 424A     		ldr	r2, .L516+12
 12871 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12872 0ce2 1946     		mov	r1, r3
 12873 0ce4 3F4A     		ldr	r2, .L516+8
 12874 0ce6 0B46     		mov	r3, r1
 12875 0ce8 9B00     		lsls	r3, r3, #2
 12876 0cea 0B44     		add	r3, r3, r1
 12877 0cec 1344     		add	r3, r3, r2
 12878 0cee 03F20223 		addw	r3, r3, #514
 12879 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12880 0cf4 1A46     		mov	r2, r3
 12881 0cf6 1346     		mov	r3, r2
 12882 0cf8 5B00     		lsls	r3, r3, #1
 12883 0cfa 1344     		add	r3, r3, r2
 12884 0cfc 5B00     		lsls	r3, r3, #1
 12885 0cfe 5A1C     		adds	r2, r3, #1
 12886 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 12887 0d04 3849     		ldr	r1, .L516+12
 12888 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12889 0d08 1846     		mov	r0, r3
 12890 0d0a 3649     		ldr	r1, .L516+8
 12891 0d0c 0346     		mov	r3, r0
 12892 0d0e 9B00     		lsls	r3, r3, #2
 12893 0d10 0344     		add	r3, r3, r0
 12894 0d12 0B44     		add	r3, r3, r1
 12895 0d14 03F20323 		addw	r3, r3, #515
 12896 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12897 0d1a 1946     		mov	r1, r3
 12898 0d1c 0B46     		mov	r3, r1
 12899 0d1e 5B00     		lsls	r3, r3, #1
 12900 0d20 0B44     		add	r3, r3, r1
 12901 0d22 5B00     		lsls	r3, r3, #1
 12902 0d24 1A44     		add	r2, r2, r3
 12903 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 12904 0d2a 2F49     		ldr	r1, .L516+12
 12905 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12906 0d2e 1846     		mov	r0, r3
 12907 0d30 2C49     		ldr	r1, .L516+8
 12908 0d32 0346     		mov	r3, r0
 12909 0d34 9B00     		lsls	r3, r3, #2
 12910 0d36 0344     		add	r3, r3, r0
 12911 0d38 0B44     		add	r3, r3, r1
 12912 0d3a 03F50173 		add	r3, r3, #516
 12913 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12914 0d40 1946     		mov	r1, r3
 12915 0d42 0B46     		mov	r3, r1
 12916 0d44 5B00     		lsls	r3, r3, #1
 12917 0d46 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 289


 12918 0d48 5B00     		lsls	r3, r3, #1
 12919 0d4a 1A44     		add	r2, r2, r3
 12920 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 12921 0d50 2549     		ldr	r1, .L516+12
 12922 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12923 0d54 1846     		mov	r0, r3
 12924 0d56 2349     		ldr	r1, .L516+8
 12925 0d58 0346     		mov	r3, r0
 12926 0d5a 9B00     		lsls	r3, r3, #2
 12927 0d5c 0344     		add	r3, r3, r0
 12928 0d5e 0B44     		add	r3, r3, r1
 12929 0d60 03F20523 		addw	r3, r3, #517
 12930 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12931 0d66 1B01     		lsls	r3, r3, #4
 12932 0d68 1A44     		add	r2, r2, r3
 12933 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 12934 0d6e 1E49     		ldr	r1, .L516+12
 12935 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12936 0d72 1846     		mov	r0, r3
 12937 0d74 1B49     		ldr	r1, .L516+8
 12938 0d76 0346     		mov	r3, r0
 12939 0d78 9B00     		lsls	r3, r3, #2
 12940 0d7a 0344     		add	r3, r3, r0
 12941 0d7c 0B44     		add	r3, r3, r1
 12942 0d7e 03F20623 		addw	r3, r3, #518
 12943 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12944 0d84 5B00     		lsls	r3, r3, #1
 12945 0d86 1344     		add	r3, r3, r2
 12946 0d88 0133     		adds	r3, r3, #1
 12947 0d8a 194A     		ldr	r2, .L516+20
 12948 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1733:..\src/command_processing.c ****                 }
 12949              		.loc 1 1733 0 discriminator 3
 12950 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 12951 0d94 144A     		ldr	r2, .L516+12
 12952 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12953 0d98 1A46     		mov	r2, r3
 12954 0d9a 154B     		ldr	r3, .L516+20
 12955 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 12956 0da0 124B     		ldr	r3, .L516+16
 12957 0da2 1B68     		ldr	r3, [r3]
 12958 0da4 1344     		add	r3, r3, r2
 12959 0da6 114A     		ldr	r2, .L516+16
 12960 0da8 1360     		str	r3, [r2]
1730:..\src/command_processing.c ****                 {
 12961              		.loc 1 1730 0 discriminator 3
 12962 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 12963 0dae 0133     		adds	r3, r3, #1
 12964 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12965              	.L506:
1730:..\src/command_processing.c ****                 {
 12966              		.loc 1 1730 0 is_stmt 0 discriminator 1
 12967 0db4 094B     		ldr	r3, .L516
 12968 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12969 0db8 9BB2     		uxth	r3, r3
 12970 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 12971 0dbe 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 290


 12972 0dc0 86D3     		bcc	.L507
1735:..\src/command_processing.c ****             
 12973              		.loc 1 1735 0 is_stmt 1
 12974 0dc2 0A4B     		ldr	r3, .L516+16
 12975 0dc4 1B68     		ldr	r3, [r3]
 12976 0dc6 0133     		adds	r3, r3, #1
 12977 0dc8 084A     		ldr	r2, .L516+16
 12978 0dca 1360     		str	r3, [r2]
 12979              		.loc 1 1739 0
 12980 0dcc 00E0     		b	.L501
 12981              	.L509:
1709:..\src/command_processing.c ****             
 12982              		.loc 1 1709 0
 12983 0dce 00BF     		nop
 12984              	.L501:
1740:..\src/command_processing.c ****     }
1741:..\src/command_processing.c **** }
 12985              		.loc 1 1741 0 discriminator 1
 12986 0dd0 00BF     		nop
 12987 0dd2 07F5D567 		add	r7, r7, #1704
 12988              		.cfi_def_cfa_offset 16
 12989 0dd6 BD46     		mov	sp, r7
 12990              		.cfi_def_cfa_register 13
 12991              		@ sp needed
 12992 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 12993              	.L517:
 12994 0dda 00BF     		.align	2
 12995              	.L516:
 12996 0ddc 00000000 		.word	N_IMU_Connected
 12997 0de0 00000000 		.word	g_rx
 12998 0de4 00000000 		.word	g_mem
 12999 0de8 00000000 		.word	IMU_connected
 13000 0dec 00000000 		.word	imus_data_size
 13001 0df0 00000000 		.word	single_imu_size
 13002              		.cfi_endproc
 13003              	.LFE70:
 13004              		.size	get_IMU_param_list, .-get_IMU_param_list
 13005              		.section	.text.setZeros,"ax",%progbits
 13006              		.align	2
 13007              		.global	setZeros
 13008              		.thumb
 13009              		.thumb_func
 13010              		.type	setZeros, %function
 13011              	setZeros:
 13012              	.LFB71:
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c **** //==============================================================================
1744:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1745:..\src/command_processing.c **** //==============================================================================
1746:..\src/command_processing.c **** 
1747:..\src/command_processing.c **** void setZeros()
1748:..\src/command_processing.c **** {
 13013              		.loc 1 1748 0
 13014              		.cfi_startproc
 13015              		@ args = 0, pretend = 0, frame = 8
 13016              		@ frame_needed = 1, uses_anonymous_args = 0
 13017 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 291


 13018              		.cfi_def_cfa_offset 12
 13019              		.cfi_offset 4, -12
 13020              		.cfi_offset 7, -8
 13021              		.cfi_offset 14, -4
 13022 0002 83B0     		sub	sp, sp, #12
 13023              		.cfi_def_cfa_offset 24
 13024 0004 00AF     		add	r7, sp, #0
 13025              		.cfi_def_cfa_register 7
1749:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1750:..\src/command_processing.c ****     
1751:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13026              		.loc 1 1751 0
 13027 0006 0023     		movs	r3, #0
 13028 0008 BB71     		strb	r3, [r7, #6]
 13029 000a 26E0     		b	.L519
 13030              	.L522:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13031              		.loc 1 1752 0
 13032 000c 0023     		movs	r3, #0
 13033 000e FB71     		strb	r3, [r7, #7]
 13034 0010 1DE0     		b	.L520
 13035              	.L521:
1753:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 13036              		.loc 1 1753 0 discriminator 3
 13037 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13038 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 13039 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13040 0018 1648     		ldr	r0, .L523
 13041 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 13042 001e 1C46     		mov	r4, r3
 13043 0020 1548     		ldr	r0, .L523+4
 13044 0022 1346     		mov	r3, r2
 13045 0024 5B00     		lsls	r3, r3, #1
 13046 0026 1344     		add	r3, r3, r2
 13047 0028 9B00     		lsls	r3, r3, #2
 13048 002a 0B44     		add	r3, r3, r1
 13049 002c 6633     		adds	r3, r3, #102
 13050 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1754:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13051              		.loc 1 1754 0 discriminator 3
 13052 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13053 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13054 0036 1149     		ldr	r1, .L523+8
 13055 0038 3420     		movs	r0, #52
 13056 003a 00FB02F2 		mul	r2, r0, r2
 13057 003e 0A44     		add	r2, r2, r1
 13058 0040 1344     		add	r3, r3, r2
 13059 0042 1833     		adds	r3, r3, #24
 13060 0044 0022     		movs	r2, #0
 13061 0046 1A70     		strb	r2, [r3]
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13062              		.loc 1 1752 0 discriminator 3
 13063 0048 FB79     		ldrb	r3, [r7, #7]
 13064 004a 0133     		adds	r3, r3, #1
 13065 004c FB71     		strb	r3, [r7, #7]
 13066              	.L520:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 292


 13067              		.loc 1 1752 0 is_stmt 0 discriminator 1
 13068 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13069 0050 022B     		cmp	r3, #2
 13070 0052 DED9     		bls	.L521
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13071              		.loc 1 1751 0 is_stmt 1 discriminator 2
 13072 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13073 0056 0133     		adds	r3, r3, #1
 13074 0058 BB71     		strb	r3, [r7, #6]
 13075              	.L519:
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 13076              		.loc 1 1751 0 is_stmt 0 discriminator 1
 13077 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13078 005c 012B     		cmp	r3, #1
 13079 005e D5D9     		bls	.L522
1755:..\src/command_processing.c ****         }
1756:..\src/command_processing.c ****     }
1757:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13080              		.loc 1 1757 0 is_stmt 1
 13081 0060 074B     		ldr	r3, .L523+12
 13082 0062 0122     		movs	r2, #1
 13083 0064 1A70     		strb	r2, [r3]
1758:..\src/command_processing.c **** 
1759:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13084              		.loc 1 1759 0
 13085 0066 0120     		movs	r0, #1
 13086 0068 FFF7FEFF 		bl	sendAcknowledgment
1760:..\src/command_processing.c **** }
 13087              		.loc 1 1760 0
 13088 006c 00BF     		nop
 13089 006e 0C37     		adds	r7, r7, #12
 13090              		.cfi_def_cfa_offset 12
 13091 0070 BD46     		mov	sp, r7
 13092              		.cfi_def_cfa_register 13
 13093              		@ sp needed
 13094 0072 90BD     		pop	{r4, r7, pc}
 13095              	.L524:
 13096              		.align	2
 13097              	.L523:
 13098 0074 00000000 		.word	data_encoder_raw
 13099 0078 00000000 		.word	g_mem
 13100 007c 00000000 		.word	g_meas
 13101 0080 00000000 		.word	reset_last_value_flag
 13102              		.cfi_endproc
 13103              	.LFE71:
 13104              		.size	setZeros, .-setZeros
 13105              		.section	.rodata
 13106              		.align	2
 13107              	.LC132:
 13108 0eac 0D0A00   		.ascii	"\015\012\000"
 13109 0eaf 00       		.align	2
 13110              	.LC133:
 13111 0eb0 4669726D 		.ascii	"Firmware version: \000"
 13111      77617265 
 13111      20766572 
 13111      73696F6E 
 13111      3A2000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 293


 13112 0ec3 00       		.align	2
 13113              	.LC134:
 13114 0ec4 47656E65 		.ascii	"Generic firmware v. 1.8.1 (PSoC5)\000"
 13114      72696320 
 13114      6669726D 
 13114      77617265 
 13114      20762E20 
 13115 0ee6 0000     		.align	2
 13116              	.LC135:
 13117 0ee8 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13117      0A00
 13118 0eee 0000     		.align	2
 13119              	.LC136:
 13120 0ef0 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13120      43452049 
 13120      4E464F0D 
 13120      0A00
 13121 0efe 0000     		.align	2
 13122              	.LC137:
 13123 0f00 49443A20 		.ascii	"ID: %d\015\012\000"
 13123      25640D0A 
 13123      00
 13124 0f09 000000   		.align	2
 13125              	.LC138:
 13126 0f0c 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13126      63653A20 
 13126      534F4654 
 13126      48414E44 
 13126      2050524F 
 13127 0f23 00       		.align	2
 13128              	.LC139:
 13129 0f24 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13129      63653A20 
 13129      47454E45 
 13129      52494320 
 13129      32204D4F 
 13130 0f3f 00       		.align	2
 13131              	.LC140:
 13132 0f40 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13132      63653A20 
 13132      41495220 
 13132      4348414D 
 13132      42455253 
 13133 0f67 00       		.align	2
 13134              	.LC141:
 13135 0f68 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13135      20736964 
 13135      653A2052 
 13135      49474854 
 13135      0D0A00
 13136 0f7b 00       		.align	2
 13137              	.LC142:
 13138 0f7c 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13138      20736964 
 13138      653A204C 
 13138      4546540D 
 13138      0A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 294


 13139 0f8e 0000     		.align	2
 13140              	.LC143:
 13141 0f90 55736572 		.ascii	"User: MARIA\015\012\000"
 13141      3A204D41 
 13141      5249410D 
 13141      0A00
 13142 0f9e 0000     		.align	2
 13143              	.LC144:
 13144 0fa0 55736572 		.ascii	"User: ROZA\015\012\000"
 13144      3A20524F 
 13144      5A410D0A 
 13144      00
 13145 0fad 000000   		.align	2
 13146              	.LC145:
 13147 0fb0 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13147      3A204745 
 13147      4E455249 
 13147      43205553 
 13147      45520D0A 
 13148 0fc5 000000   		.align	2
 13149              	.LC146:
 13150 0fc8 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13150      52202564 
 13150      20494E46 
 13150      4F0D0A00 
 13151              		.align	2
 13152              	.LC147:
 13153 0fd8 4D6F746F 		.ascii	"Motor reference\000"
 13153      72207265 
 13153      66657265 
 13153      6E636500 
 13154              		.align	2
 13155              	.LC148:
 13156 0fe8 202D2043 		.ascii	" - Currents: \000"
 13156      75727265 
 13156      6E74733A 
 13156      2000
 13157 0ff6 0000     		.align	2
 13158              	.LC149:
 13159 0ff8 202D2050 		.ascii	" - Pwm: \000"
 13159      776D3A20 
 13159      00
 13160 1001 000000   		.align	2
 13161              	.LC150:
 13162 1004 202D2050 		.ascii	" - Position: \000"
 13162      6F736974 
 13162      696F6E3A 
 13162      2000
 13163 1012 0000     		.align	2
 13164              	.LC151:
 13165 1014 25642000 		.ascii	"%d \000"
 13166              		.align	2
 13167              	.LC152:
 13168 1018 4D6F746F 		.ascii	"Motor enabled: \000"
 13168      7220656E 
 13168      61626C65 
 13168      643A2000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 295


 13169              		.align	2
 13170              	.LC153:
 13171 1028 5945530D 		.ascii	"YES\015\012\000"
 13171      0A00
 13172 102e 0000     		.align	2
 13173              	.LC154:
 13174 1030 4E4F0D0A 		.ascii	"NO\015\012\000"
 13174      00
 13175 1035 000000   		.align	2
 13176              	.LC155:
 13177 1038 50574D20 		.ascii	"PWM rescaling activation: \000"
 13177      72657363 
 13177      616C696E 
 13177      67206163 
 13177      74697661 
 13178 1053 00       		.align	2
 13179              	.LC156:
 13180 1054 5945530A 		.ascii	"YES\012\000"
 13180      00
 13181 1059 000000   		.align	2
 13182              	.LC157:
 13183 105c 4E4F0A00 		.ascii	"NO\012\000"
 13184              		.align	2
 13185              	.LC158:
 13186 1060 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13186      4C696D69 
 13186      743A2025 
 13186      640D0A00 
 13187              		.align	2
 13188              	.LC159:
 13189 1070 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13189      41535552 
 13189      454D454E 
 13189      54532049 
 13189      4E464F0D 
 13190 1086 0000     		.align	2
 13191              	.LC160:
 13192 1088 53656E73 		.ascii	"Sensor value: \000"
 13192      6F722076 
 13192      616C7565 
 13192      3A2000
 13193 1097 00       		.align	2
 13194              	.LC161:
 13195 1098 256400   		.ascii	"%d\000"
 13196 109b 00       		.align	2
 13197              	.LC162:
 13198 109c 2C2000   		.ascii	", \000"
 13199 109f 00       		.align	2
 13200              	.LC163:
 13201 10a0 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13201      65727920 
 13201      25642056 
 13201      6F6C7461 
 13201      67652028 
 13202 10bd 000000   		.align	2
 13203              	.LC164:
 13204 10c0 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 296


 13204      20636861 
 13204      72676520 
 13204      706F7765 
 13204      72207465 
 13205 10e7 00       		.align	2
 13206              	.LC165:
 13207 10e8 43757272 		.ascii	"Current %d (mA): %ld\000"
 13207      656E7420 
 13207      25642028 
 13207      6D41293A 
 13207      20256C64 
 13208 10fd 000000   		.align	2
 13209              	.LC166:
 13210 1100 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13210      20477261 
 13210      73702048 
 13210      6F6C6420 
 13210      43757272 
 13211 1125 000000   		.align	2
 13212              	.LC167:
 13213 1128 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13213      544F5220 
 13213      25642043 
 13213      4F4E4649 
 13213      47555241 
 13214 1143 00       		.align	2
 13215              	.LC168:
 13216 1144 50494420 		.ascii	"PID Controller: \000"
 13216      436F6E74 
 13216      726F6C6C 
 13216      65723A20 
 13216      00
 13217              		.global	__aeabi_i2d
 13218              		.global	__aeabi_ddiv
 13219 1155 000000   		.align	2
 13220              	.LC169:
 13221 1158 50202D3E 		.ascii	"P -> %f  \000"
 13221      20256620 
 13221      2000
 13222 1162 0000     		.align	2
 13223              	.LC170:
 13224 1164 49202D3E 		.ascii	"I -> %f  \000"
 13224      20256620 
 13224      2000
 13225 116e 0000     		.align	2
 13226              	.LC171:
 13227 1170 44202D3E 		.ascii	"D -> %f\015\012\000"
 13227      2025660D 
 13227      0A00
 13228 117a 0000     		.align	2
 13229              	.LC172:
 13230 117c 43757272 		.ascii	"Current PID Controller: \000"
 13230      656E7420 
 13230      50494420 
 13230      436F6E74 
 13230      726F6C6C 
 13231 1195 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 297


 13232              	.LC173:
 13233 1198 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13233      74757020 
 13233      61637469 
 13233      76617469 
 13233      6F6E3A20 
 13234 11b2 0000     		.align	2
 13235              	.LC174:
 13236 11b4 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13236      74757020 
 13236      61637469 
 13236      76617469 
 13236      6F6E3A20 
 13237 11cd 000000   		.align	2
 13238              	.LC175:
 13239 11d0 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13239      74206D6F 
 13239      64653A20 
 13239      5553420D 
 13239      0A00
 13240 11e2 0000     		.align	2
 13241              	.LC176:
 13242 11e4 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13242      74206D6F 
 13242      64653A20 
 13242      48616E64 
 13242      6C650D0A 
 13243 11f9 000000   		.align	2
 13244              	.LC177:
 13245 11fc 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13245      74206D6F 
 13245      64653A20 
 13245      454D4720 
 13245      70726F70 
 13246 121b 00       		.align	2
 13247              	.LC178:
 13248 121c 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13248      74206D6F 
 13248      64653A20 
 13248      454D4720 
 13248      696E7465 
 13249 1237 00       		.align	2
 13250              	.LC179:
 13251 1238 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13251      74206D6F 
 13251      64653A20 
 13251      454D4720 
 13251      46434653 
 13252 124f 00       		.align	2
 13253              	.LC180:
 13254 1250 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13254      74206D6F 
 13254      64653A20 
 13254      454D4720 
 13254      46434653 
 13255 126b 00       		.align	2
 13256              	.LC181:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 298


 13257 126c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13257      74206D6F 
 13257      64653A20 
 13257      454D4720 
 13257      70726F70 
 13258 129a 00       		.ascii	"\000"
 13259 129b 00       		.align	2
 13260              	.LC182:
 13261 129c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13261      726F6C20 
 13261      6D6F6465 
 13261      3A20506F 
 13261      73697469 
 13262 12b5 000000   		.align	2
 13263              	.LC183:
 13264 12b8 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13264      726F6C20 
 13264      6D6F6465 
 13264      3A205057 
 13264      4D0D0A00 
 13265              		.align	2
 13266              	.LC184:
 13267 12cc 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13267      726F6C20 
 13267      6D6F6465 
 13267      3A204375 
 13267      7272656E 
 13268              		.align	2
 13269              	.LC185:
 13270 12e4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13270      726F6C20 
 13270      6D6F6465 
 13270      3A20506F 
 13270      73697469 
 13271 1309 000000   		.align	2
 13272              	.LC186:
 13273 130c 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13273      6C757465 
 13273      20656E63 
 13273      6F646572 
 13273      20706F73 
 13274 132d 000000   		.align	2
 13275              	.LC187:
 13276 1330 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13276      6C757465 
 13276      20656E63 
 13276      6F646572 
 13276      20706F73 
 13277              		.align	2
 13278              	.LC188:
 13279 1350 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13279      722D4861 
 13279      6E646C65 
 13279      20526174 
 13279      696F3A20 
 13280 1369 000000   		.align	2
 13281              	.LC189:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 299


 13282 136c 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13282      64657220 
 13282      696E6469 
 13282      63657320 
 13282      75736564 
 13283 1395 000000   		.align	2
 13284              	.LC190:
 13285 1398 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13285      74204765 
 13285      61723A20 
 13285      25642074 
 13285      65657468 
 13286 13af 00       		.align	2
 13287              	.LC191:
 13288 13b0 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13288      6E642047 
 13288      6561723A 
 13288      20256420 
 13288      74656574 
 13289              		.align	2
 13290              	.LC192:
 13291 13c8 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13291      20696E76 
 13291      61726961 
 13291      6E743A20 
 13291      25640D0A 
 13292 13dd 000000   		.align	2
 13293              	.LC193:
 13294 13e0 53656E73 		.ascii	"Sensor resolution: \000"
 13294      6F722072 
 13294      65736F6C 
 13294      7574696F 
 13294      6E3A2000 
 13295              		.align	2
 13296              	.LC194:
 13297 13f4 4D656173 		.ascii	"Measurement Offset: \000"
 13297      7572656D 
 13297      656E7420 
 13297      4F666673 
 13297      65743A20 
 13298 1409 000000   		.align	2
 13299              	.LC195:
 13300 140c 256C6400 		.ascii	"%ld\000"
 13301              		.align	2
 13302              	.LC196:
 13303 1410 4D656173 		.ascii	"Measurement Multiplier: \000"
 13303      7572656D 
 13303      656E7420 
 13303      4D756C74 
 13303      69706C69 
 13304              		.global	__aeabi_f2d
 13305 1429 000000   		.align	2
 13306              	.LC197:
 13307 142c 256600   		.ascii	"%f\000"
 13308 142f 00       		.align	2
 13309              	.LC198:
 13310 1430 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 300


 13310      656E7420 
 13310      6C6F6F6B 
 13310      75702074 
 13310      61626C65 
 13311 145e 00       		.ascii	"\000"
 13312 145f 00       		.align	2
 13313              	.LC199:
 13314 1460 506F7369 		.ascii	"Position limit active: %d\000"
 13314      74696F6E 
 13314      206C696D 
 13314      69742061 
 13314      63746976 
 13315 147a 0000     		.align	2
 13316              	.LC200:
 13317 147c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 13317      74696F6E 
 13317      206C696D 
 13317      6974206D 
 13317      6F746F72 
 13318 149f 00       		.align	2
 13319              	.LC201:
 13320 14a0 73757020 		.ascii	"sup -> %ld\015\012\000"
 13320      2D3E2025 
 13320      6C640D0A 
 13320      00
 13321 14ad 000000   		.align	2
 13322              	.LC202:
 13323 14b0 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 13323      73746570 
 13323      20706F73 
 13323      20616E64 
 13323      206E6567 
 13324              		.align	2
 13325              	.LC203:
 13326 14cc 43757272 		.ascii	"Current limit: %d\015\012\000"
 13326      656E7420 
 13326      6C696D69 
 13326      743A2025 
 13326      640D0A00 
 13327              		.align	2
 13328              	.LC204:
 13329 14e0 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 13329      7220626F 
 13329      61726420 
 13329      6173736F 
 13329      63696174 
 13330 150a 0000     		.align	2
 13331              	.LC205:
 13332 150c 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 13332      65722074 
 13332      7970653A 
 13332      204D4333 
 13332      33383837 
 13333 152e 0000     		.align	2
 13334              	.LC206:
 13335 1530 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 13335      65722074 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 301


 13335      7970653A 
 13335      20564E48 
 13335      35303139 
 13336              		.align	2
 13337              	.LC207:
 13338 1554 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 13338      72617465 
 13338      206C696D 
 13338      69746572 
 13338      2076616C 
 13339 1571 000000   		.align	2
 13340              	.LC208:
 13341 1574 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 13341      72657665 
 13341      72736962 
 13341      6C65206D 
 13341      6F746F72 
 13342              		.align	2
 13343              	.LC209:
 13344 1590 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 13344      72657665 
 13344      72736962 
 13344      6C65206D 
 13344      6F746F72 
 13345 15ab 00       		.align	2
 13346              	.LC210:
 13347 15ac 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 13347      434F4E46 
 13347      49475552 
 13347      4154494F 
 13347      4E0D0A00 
 13348              		.align	2
 13349              	.LC211:
 13350 15c0 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 13350      74687265 
 13350      73686F6C 
 13350      6473205B 
 13350      30202D20 
 13351 15e2 0000     		.align	2
 13352              	.LC212:
 13353 15e4 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 13353      6D617820 
 13353      76616C75 
 13353      6573205B 
 13353      30202D20 
 13354              		.align	2
 13355              	.LC213:
 13356 1608 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 13356      696E7665 
 13356      7273696F 
 13356      6E3A2059 
 13356      45530D0A 
 13357 161d 000000   		.align	2
 13358              	.LC214:
 13359 1620 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 13359      696E7665 
 13359      7273696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 302


 13359      6E3A204E 
 13359      4F0D0A00 
 13360              		.align	2
 13361              	.LC215:
 13362 1634 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 13362      62726174 
 13362      696F6E20 
 13362      656E6162 
 13362      6C65643A 
 13363 164f 00       		.align	2
 13364              	.LC216:
 13365 1650 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 13365      62726174 
 13365      696F6E20 
 13365      656E6162 
 13365      6C65643A 
 13366 166a 0000     		.align	2
 13367              	.LC217:
 13368 166c 454D4720 		.ascii	"EMG max speed: %d %d\000"
 13368      6D617820 
 13368      73706565 
 13368      643A2025 
 13368      64202564 
 13369 1681 000000   		.align	2
 13370              	.LC218:
 13371 1684 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 13371      74696F6E 
 13371      616C2041 
 13371      44432073 
 13371      656E736F 
 13372              		.align	2
 13373              	.LC219:
 13374 16a4 41444320 		.ascii	"ADC %d -> %d\000"
 13374      2564202D 
 13374      3E202564 
 13374      00
 13375 16b1 000000   		.align	2
 13376              	.LC220:
 13377 16b4 454D4720 		.ascii	"EMG input %d -> %d\000"
 13377      696E7075 
 13377      74202564 
 13377      202D3E20 
 13377      256400
 13378 16c7 00       		.align	2
 13379              	.LC221:
 13380 16c8 52657374 		.ascii	"Rest time delay (ms): %d\000"
 13380      2074696D 
 13380      65206465 
 13380      6C617920 
 13380      286D7329 
 13381 16e1 000000   		.align	2
 13382              	.LC222:
 13383 16e4 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 13383      2076656C 
 13383      6F636974 
 13383      7920636C 
 13383      6F737572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 303


 13384 170a 0000     		.align	2
 13385              	.LC223:
 13386 170c 52657374 		.ascii	"Rest position: %d\000"
 13386      20706F73 
 13386      6974696F 
 13386      6E3A2025 
 13386      6400
 13387 171e 0000     		.align	2
 13388              	.LC224:
 13389 1720 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 13389      436F6E6E 
 13389      65637465 
 13389      643A2025 
 13389      640D0A00 
 13390              		.align	2
 13391              	.LC225:
 13392 1734 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 13392      20434F4E 
 13392      46494755 
 13392      52415449 
 13392      4F4E0D0A 
 13393 1749 000000   		.align	2
 13394              	.LC226:
 13395 174c 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 13395      2564200D 
 13395      0A094944 
 13395      3A202564 
 13395      0D0A00
 13396 175f 00       		.align	2
 13397              	.LC227:
 13398 1760 09416363 		.ascii	"\011Accelerometers: \000"
 13398      656C6572 
 13398      6F6D6574 
 13398      6572733A 
 13398      2000
 13399 1772 0000     		.align	2
 13400              	.LC228:
 13401 1774 09477972 		.ascii	"\011Gyroscopes: \000"
 13401      6F73636F 
 13401      7065733A 
 13401      2000
 13402 1782 0000     		.align	2
 13403              	.LC229:
 13404 1784 094D6167 		.ascii	"\011Magnetometers: \000"
 13404      6E65746F 
 13404      6D657465 
 13404      72733A20 
 13404      00
 13405 1795 000000   		.align	2
 13406              	.LC230:
 13407 1798 09517561 		.ascii	"\011Quaternion: \000"
 13407      7465726E 
 13407      696F6E3A 
 13407      2000
 13408 17a6 0000     		.align	2
 13409              	.LC231:
 13410 17a8 0954656D 		.ascii	"\011Temperature: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 304


 13410      70657261 
 13410      74757265 
 13410      3A2000
 13411 17b7 00       		.align	2
 13412              	.LC232:
 13413 17b8 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 13413      44455220 
 13413      434F4E46 
 13413      49475552 
 13413      4154494F 
 13414              		.align	2
 13415              	.LC233:
 13416 17d0 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 13416      64657220 
 13416      436F6E6E 
 13416      65637465 
 13416      64204C69 
 13417 17ee 0000     		.align	2
 13418              	.LC234:
 13419 17f0 4C454654 		.ascii	"LEFT\000"
 13419      00
 13420 17f5 000000   		.align	2
 13421              	.LC235:
 13422 17f8 52494748 		.ascii	"RIGHT\000"
 13422      5400
 13423 17fe 0000     		.align	2
 13424              	.LC236:
 13425 1800 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 13425      2048414E 
 13425      44206D61 
 13425      696E2065 
 13425      6E636F64 
 13426 181d 000000   		.align	2
 13427              	.LC237:
 13428 1820 52617720 		.ascii	"Raw value [status]:\015\012\000"
 13428      76616C75 
 13428      65205B73 
 13428      74617475 
 13428      735D3A0D 
 13429 1836 0000     		.align	2
 13430              	.LC238:
 13431 1838 4F4B00   		.ascii	"OK\000"
 13432 183b 00       		.align	2
 13433              	.LC239:
 13434 183c 5800     		.ascii	"X\000"
 13435 183e 0000     		.align	2
 13436              	.LC240:
 13437 1840 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 13437      25735D0D 
 13437      0A00
 13438 184a 0000     		.align	2
 13439              	.LC241:
 13440 184c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 13440      20465720 
 13440      6379636C 
 13440      65207469 
 13440      6D653A20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 305


 13441              		.align	2
 13442              	.LC242:
 13443 1868 0D0A0000 		.ascii	"\015\012\000\000"
 13444              		.section	.text.prepare_generic_info,"ax",%progbits
 13445              		.align	2
 13446              		.global	prepare_generic_info
 13447              		.thumb
 13448              		.thumb_func
 13449              		.type	prepare_generic_info, %function
 13450              	prepare_generic_info:
 13451              	.LFB72:
1761:..\src/command_processing.c **** 
1762:..\src/command_processing.c **** //==============================================================================
1763:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1764:..\src/command_processing.c **** //==============================================================================
1765:..\src/command_processing.c **** 
1766:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1767:..\src/command_processing.c **** {
 13452              		.loc 1 1767 0
 13453              		.cfi_startproc
 13454              		@ args = 0, pretend = 0, frame = 152
 13455              		@ frame_needed = 1, uses_anonymous_args = 0
 13456 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 13457              		.cfi_def_cfa_offset 36
 13458              		.cfi_offset 4, -36
 13459              		.cfi_offset 5, -32
 13460              		.cfi_offset 6, -28
 13461              		.cfi_offset 7, -24
 13462              		.cfi_offset 8, -20
 13463              		.cfi_offset 9, -16
 13464              		.cfi_offset 10, -12
 13465              		.cfi_offset 11, -8
 13466              		.cfi_offset 14, -4
 13467 0004 B1B0     		sub	sp, sp, #196
 13468              		.cfi_def_cfa_offset 232
 13469 0006 0AAF     		add	r7, sp, #40
 13470              		.cfi_def_cfa 7, 192
 13471 0008 7861     		str	r0, [r7, #20]
1768:..\src/command_processing.c ****     int i;
1769:..\src/command_processing.c **** 
1770:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 13472              		.loc 1 1770 0
 13473 000a CD4B     		ldr	r3, .L641
 13474 000c C7F88830 		str	r3, [r7, #136]
1771:..\src/command_processing.c ****     
1772:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 13475              		.loc 1 1772 0
 13476 0010 CB4B     		ldr	r3, .L641
 13477 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13478 0016 FA2B     		cmp	r3, #250
 13479 0018 01F06887 		beq	.L639
 13480              	.LBB16:
1773:..\src/command_processing.c ****         char str[100];
1774:..\src/command_processing.c ****         strcpy(info_string, "");
 13481              		.loc 1 1774 0
 13482 001c 7B69     		ldr	r3, [r7, #20]
 13483 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 306


 13484 0020 1A70     		strb	r2, [r3]
1775:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 13485              		.loc 1 1775 0
 13486 0022 7869     		ldr	r0, [r7, #20]
 13487 0024 FFF7FEFF 		bl	strlen
 13488 0028 0346     		mov	r3, r0
 13489 002a 1A46     		mov	r2, r3
 13490 002c 7B69     		ldr	r3, [r7, #20]
 13491 002e 1344     		add	r3, r3, r2
 13492 0030 C44A     		ldr	r2, .L641+4
 13493 0032 1188     		ldrh	r1, [r2]	@ unaligned
 13494 0034 9278     		ldrb	r2, [r2, #2]
 13495 0036 1980     		strh	r1, [r3]	@ unaligned
 13496 0038 9A70     		strb	r2, [r3, #2]
1776:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 13497              		.loc 1 1776 0
 13498 003a 7869     		ldr	r0, [r7, #20]
 13499 003c FFF7FEFF 		bl	strlen
 13500 0040 0346     		mov	r3, r0
 13501 0042 1A46     		mov	r2, r3
 13502 0044 7B69     		ldr	r3, [r7, #20]
 13503 0046 1344     		add	r3, r3, r2
 13504 0048 BF4A     		ldr	r2, .L641+8
 13505 004a 1D46     		mov	r5, r3
 13506 004c 1446     		mov	r4, r2
 13507 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13508 0050 2860     		str	r0, [r5]	@ unaligned
 13509 0052 6960     		str	r1, [r5, #4]	@ unaligned
 13510 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 13511 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 13512 0058 2388     		ldrh	r3, [r4]	@ unaligned
 13513 005a A278     		ldrb	r2, [r4, #2]
 13514 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 13515 005e 1346     		mov	r3, r2
 13516 0060 AB74     		strb	r3, [r5, #18]
1777:..\src/command_processing.c ****         strcat(info_string, VERSION);
 13517              		.loc 1 1777 0
 13518 0062 7869     		ldr	r0, [r7, #20]
 13519 0064 FFF7FEFF 		bl	strlen
 13520 0068 0346     		mov	r3, r0
 13521 006a 1A46     		mov	r2, r3
 13522 006c 7B69     		ldr	r3, [r7, #20]
 13523 006e 1344     		add	r3, r3, r2
 13524 0070 B64A     		ldr	r2, .L641+12
 13525 0072 1446     		mov	r4, r2
 13526 0074 9E46     		mov	lr, r3
 13527 0076 04F1200C 		add	ip, r4, #32
 13528              	.L527:
 13529 007a 7546     		mov	r5, lr
 13530 007c 2646     		mov	r6, r4
 13531 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13532 0080 2860     		str	r0, [r5]	@ unaligned
 13533 0082 6960     		str	r1, [r5, #4]	@ unaligned
 13534 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 13535 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 13536 0088 1034     		adds	r4, r4, #16
 13537 008a 0EF1100E 		add	lr, lr, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 307


 13538 008e 6445     		cmp	r4, ip
 13539 0090 F3D1     		bne	.L527
 13540 0092 7246     		mov	r2, lr
 13541 0094 2346     		mov	r3, r4
 13542 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 13543 0098 1380     		strh	r3, [r2]	@ unaligned
1778:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 13544              		.loc 1 1778 0
 13545 009a 7869     		ldr	r0, [r7, #20]
 13546 009c FFF7FEFF 		bl	strlen
 13547 00a0 0346     		mov	r3, r0
 13548 00a2 1A46     		mov	r2, r3
 13549 00a4 7B69     		ldr	r3, [r7, #20]
 13550 00a6 1344     		add	r3, r3, r2
 13551 00a8 A94A     		ldr	r2, .L641+16
 13552 00aa 1068     		ldr	r0, [r2]	@ unaligned
 13553 00ac 1860     		str	r0, [r3]	@ unaligned
 13554 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13555 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c **** 
1780:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 13556              		.loc 1 1780 0
 13557 00b2 7869     		ldr	r0, [r7, #20]
 13558 00b4 FFF7FEFF 		bl	strlen
 13559 00b8 0346     		mov	r3, r0
 13560 00ba 1A46     		mov	r2, r3
 13561 00bc 7B69     		ldr	r3, [r7, #20]
 13562 00be 1344     		add	r3, r3, r2
 13563 00c0 A44A     		ldr	r2, .L641+20
 13564 00c2 1C46     		mov	r4, r3
 13565 00c4 1346     		mov	r3, r2
 13566 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 13567 00c8 2060     		str	r0, [r4]	@ unaligned
 13568 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 13569 00cc A260     		str	r2, [r4, #8]	@ unaligned
 13570 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 13571 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1781:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 13572              		.loc 1 1781 0
 13573 00d2 D7F88830 		ldr	r3, [r7, #136]
 13574 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13575 00da 1A46     		mov	r2, r3
 13576 00dc 07F11803 		add	r3, r7, #24
 13577 00e0 9D49     		ldr	r1, .L641+24
 13578 00e2 1846     		mov	r0, r3
 13579 00e4 FFF7FEFF 		bl	sprintf
1782:..\src/command_processing.c ****         strcat(info_string, str);
 13580              		.loc 1 1782 0
 13581 00e8 07F11803 		add	r3, r7, #24
 13582 00ec 1946     		mov	r1, r3
 13583 00ee 7869     		ldr	r0, [r7, #20]
 13584 00f0 FFF7FEFF 		bl	strcat
1783:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 13585              		.loc 1 1783 0
 13586 00f4 D7F88830 		ldr	r3, [r7, #136]
 13587 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 13588 00fc 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 308


 13589 00fe 1BD0     		beq	.L529
 13590 0100 022B     		cmp	r3, #2
 13591 0102 31D0     		beq	.L530
 13592 0104 002B     		cmp	r3, #0
 13593 0106 00D0     		beq	.L531
1784:..\src/command_processing.c ****             case SOFTHAND_PRO:
1785:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1786:..\src/command_processing.c ****                 break;
1787:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1788:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1789:..\src/command_processing.c ****                 break;
1790:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1791:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
1792:..\src/command_processing.c ****                 break;
1793:..\src/command_processing.c ****             default:
1794:..\src/command_processing.c ****                 break;
 13594              		.loc 1 1794 0
 13595 0108 4FE0     		b	.L532
 13596              	.L531:
1785:..\src/command_processing.c ****                 break;
 13597              		.loc 1 1785 0
 13598 010a 7869     		ldr	r0, [r7, #20]
 13599 010c FFF7FEFF 		bl	strlen
 13600 0110 0346     		mov	r3, r0
 13601 0112 1A46     		mov	r2, r3
 13602 0114 7B69     		ldr	r3, [r7, #20]
 13603 0116 1344     		add	r3, r3, r2
 13604 0118 904A     		ldr	r2, .L641+28
 13605 011a 1C46     		mov	r4, r3
 13606 011c 1546     		mov	r5, r2
 13607 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13608 0120 2060     		str	r0, [r4]	@ unaligned
 13609 0122 6160     		str	r1, [r4, #4]	@ unaligned
 13610 0124 A260     		str	r2, [r4, #8]	@ unaligned
 13611 0126 E360     		str	r3, [r4, #12]	@ unaligned
 13612 0128 2868     		ldr	r0, [r5]	@ unaligned
 13613 012a 2061     		str	r0, [r4, #16]	@ unaligned
 13614 012c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13615 012e AA79     		ldrb	r2, [r5, #6]
 13616 0130 A382     		strh	r3, [r4, #20]	@ unaligned
 13617 0132 1346     		mov	r3, r2
 13618 0134 A375     		strb	r3, [r4, #22]
1786:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 13619              		.loc 1 1786 0
 13620 0136 38E0     		b	.L532
 13621              	.L529:
1788:..\src/command_processing.c ****                 break;
 13622              		.loc 1 1788 0
 13623 0138 7869     		ldr	r0, [r7, #20]
 13624 013a FFF7FEFF 		bl	strlen
 13625 013e 0346     		mov	r3, r0
 13626 0140 1A46     		mov	r2, r3
 13627 0142 7B69     		ldr	r3, [r7, #20]
 13628 0144 1344     		add	r3, r3, r2
 13629 0146 864A     		ldr	r2, .L641+32
 13630 0148 1D46     		mov	r5, r3
 13631 014a 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 309


 13632 014c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13633 014e 2860     		str	r0, [r5]	@ unaligned
 13634 0150 6960     		str	r1, [r5, #4]	@ unaligned
 13635 0152 AA60     		str	r2, [r5, #8]	@ unaligned
 13636 0154 EB60     		str	r3, [r5, #12]	@ unaligned
 13637 0156 03CC     		ldmia	r4!, {r0, r1}
 13638 0158 2861     		str	r0, [r5, #16]	@ unaligned
 13639 015a 6961     		str	r1, [r5, #20]	@ unaligned
 13640 015c 2388     		ldrh	r3, [r4]	@ unaligned
 13641 015e A278     		ldrb	r2, [r4, #2]
 13642 0160 2B83     		strh	r3, [r5, #24]	@ unaligned
 13643 0162 1346     		mov	r3, r2
 13644 0164 AB76     		strb	r3, [r5, #26]
1789:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
 13645              		.loc 1 1789 0
 13646 0166 20E0     		b	.L532
 13647              	.L530:
1791:..\src/command_processing.c ****                 break;
 13648              		.loc 1 1791 0
 13649 0168 7869     		ldr	r0, [r7, #20]
 13650 016a FFF7FEFF 		bl	strlen
 13651 016e 0346     		mov	r3, r0
 13652 0170 1A46     		mov	r2, r3
 13653 0172 7B69     		ldr	r3, [r7, #20]
 13654 0174 1344     		add	r3, r3, r2
 13655 0176 7B4A     		ldr	r2, .L641+36
 13656 0178 1446     		mov	r4, r2
 13657 017a 9E46     		mov	lr, r3
 13658 017c 04F1200C 		add	ip, r4, #32
 13659              	.L533:
 13660 0180 7546     		mov	r5, lr
 13661 0182 2646     		mov	r6, r4
 13662 0184 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13663 0186 2860     		str	r0, [r5]	@ unaligned
 13664 0188 6960     		str	r1, [r5, #4]	@ unaligned
 13665 018a AA60     		str	r2, [r5, #8]	@ unaligned
 13666 018c EB60     		str	r3, [r5, #12]	@ unaligned
 13667 018e 1034     		adds	r4, r4, #16
 13668 0190 0EF1100E 		add	lr, lr, #16
 13669 0194 6445     		cmp	r4, ip
 13670 0196 F3D1     		bne	.L533
 13671 0198 7346     		mov	r3, lr
 13672 019a 2246     		mov	r2, r4
 13673 019c 1068     		ldr	r0, [r2]	@ unaligned
 13674 019e 1860     		str	r0, [r3]	@ unaligned
 13675 01a0 9188     		ldrh	r1, [r2, #4]	@ unaligned
 13676 01a2 9279     		ldrb	r2, [r2, #6]
 13677 01a4 9980     		strh	r1, [r3, #4]	@ unaligned
 13678 01a6 9A71     		strb	r2, [r3, #6]
1792:..\src/command_processing.c ****             default:
 13679              		.loc 1 1792 0
 13680 01a8 00BF     		nop
 13681              	.L532:
1795:..\src/command_processing.c ****         }
1796:..\src/command_processing.c ****         
1797:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 13682              		.loc 1 1797 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 310


 13683 01aa D7F88830 		ldr	r3, [r7, #136]
 13684 01ae 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 13685 01b2 002B     		cmp	r3, #0
 13686 01b4 02D0     		beq	.L535
 13687 01b6 012B     		cmp	r3, #1
 13688 01b8 15D0     		beq	.L536
 13689 01ba 26E0     		b	.L534
 13690              	.L535:
1798:..\src/command_processing.c ****             case RIGHT_HAND:
1799:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 13691              		.loc 1 1799 0
 13692 01bc 7869     		ldr	r0, [r7, #20]
 13693 01be FFF7FEFF 		bl	strlen
 13694 01c2 0346     		mov	r3, r0
 13695 01c4 1A46     		mov	r2, r3
 13696 01c6 7B69     		ldr	r3, [r7, #20]
 13697 01c8 1344     		add	r3, r3, r2
 13698 01ca 674A     		ldr	r2, .L641+40
 13699 01cc 1D46     		mov	r5, r3
 13700 01ce 1446     		mov	r4, r2
 13701 01d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13702 01d2 2860     		str	r0, [r5]	@ unaligned
 13703 01d4 6960     		str	r1, [r5, #4]	@ unaligned
 13704 01d6 AA60     		str	r2, [r5, #8]	@ unaligned
 13705 01d8 EB60     		str	r3, [r5, #12]	@ unaligned
 13706 01da 2388     		ldrh	r3, [r4]	@ unaligned
 13707 01dc A278     		ldrb	r2, [r4, #2]
 13708 01de 2B82     		strh	r3, [r5, #16]	@ unaligned
 13709 01e0 1346     		mov	r3, r2
 13710 01e2 AB74     		strb	r3, [r5, #18]
1800:..\src/command_processing.c ****                 break;
 13711              		.loc 1 1800 0
 13712 01e4 11E0     		b	.L534
 13713              	.L536:
1801:..\src/command_processing.c ****             case LEFT_HAND:
1802:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 13714              		.loc 1 1802 0
 13715 01e6 7869     		ldr	r0, [r7, #20]
 13716 01e8 FFF7FEFF 		bl	strlen
 13717 01ec 0346     		mov	r3, r0
 13718 01ee 1A46     		mov	r2, r3
 13719 01f0 7B69     		ldr	r3, [r7, #20]
 13720 01f2 1344     		add	r3, r3, r2
 13721 01f4 5D4A     		ldr	r2, .L641+44
 13722 01f6 1D46     		mov	r5, r3
 13723 01f8 1446     		mov	r4, r2
 13724 01fa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13725 01fc 2860     		str	r0, [r5]	@ unaligned
 13726 01fe 6960     		str	r1, [r5, #4]	@ unaligned
 13727 0200 AA60     		str	r2, [r5, #8]	@ unaligned
 13728 0202 EB60     		str	r3, [r5, #12]	@ unaligned
 13729 0204 2388     		ldrh	r3, [r4]	@ unaligned
 13730 0206 2B82     		strh	r3, [r5, #16]	@ unaligned
1803:..\src/command_processing.c ****                 break;
 13731              		.loc 1 1803 0
 13732 0208 00BF     		nop
 13733              	.L534:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 311


1804:..\src/command_processing.c ****         }
1805:..\src/command_processing.c **** 
1806:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 13734              		.loc 1 1806 0
 13735 020a D7F88830 		ldr	r3, [r7, #136]
 13736 020e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 13737 0212 012B     		cmp	r3, #1
 13738 0214 02D0     		beq	.L538
 13739 0216 022B     		cmp	r3, #2
 13740 0218 11D0     		beq	.L539
 13741 021a 21E0     		b	.L638
 13742              	.L538:
1807:..\src/command_processing.c ****             case MARIA:
1808:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 13743              		.loc 1 1808 0
 13744 021c 7869     		ldr	r0, [r7, #20]
 13745 021e FFF7FEFF 		bl	strlen
 13746 0222 0346     		mov	r3, r0
 13747 0224 1A46     		mov	r2, r3
 13748 0226 7B69     		ldr	r3, [r7, #20]
 13749 0228 1344     		add	r3, r3, r2
 13750 022a 514A     		ldr	r2, .L641+48
 13751 022c 1C46     		mov	r4, r3
 13752 022e 1346     		mov	r3, r2
 13753 0230 07CB     		ldmia	r3!, {r0, r1, r2}
 13754 0232 2060     		str	r0, [r4]	@ unaligned
 13755 0234 6160     		str	r1, [r4, #4]	@ unaligned
 13756 0236 A260     		str	r2, [r4, #8]	@ unaligned
 13757 0238 1B88     		ldrh	r3, [r3]	@ unaligned
 13758 023a A381     		strh	r3, [r4, #12]	@ unaligned
1809:..\src/command_processing.c ****                 break;
 13759              		.loc 1 1809 0
 13760 023c 24E0     		b	.L540
 13761              	.L539:
1810:..\src/command_processing.c ****             case ROZA:
1811:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 13762              		.loc 1 1811 0
 13763 023e 7869     		ldr	r0, [r7, #20]
 13764 0240 FFF7FEFF 		bl	strlen
 13765 0244 0346     		mov	r3, r0
 13766 0246 1A46     		mov	r2, r3
 13767 0248 7B69     		ldr	r3, [r7, #20]
 13768 024a 1344     		add	r3, r3, r2
 13769 024c 494A     		ldr	r2, .L641+52
 13770 024e 1C46     		mov	r4, r3
 13771 0250 1346     		mov	r3, r2
 13772 0252 07CB     		ldmia	r3!, {r0, r1, r2}
 13773 0254 2060     		str	r0, [r4]	@ unaligned
 13774 0256 6160     		str	r1, [r4, #4]	@ unaligned
 13775 0258 A260     		str	r2, [r4, #8]	@ unaligned
 13776 025a 1B78     		ldrb	r3, [r3]
 13777 025c 2373     		strb	r3, [r4, #12]
1812:..\src/command_processing.c ****                 break;
 13778              		.loc 1 1812 0
 13779 025e 13E0     		b	.L540
 13780              	.L638:
1813:..\src/command_processing.c ****             default:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 312


1814:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 13781              		.loc 1 1814 0
 13782 0260 7869     		ldr	r0, [r7, #20]
 13783 0262 FFF7FEFF 		bl	strlen
 13784 0266 0346     		mov	r3, r0
 13785 0268 1A46     		mov	r2, r3
 13786 026a 7B69     		ldr	r3, [r7, #20]
 13787 026c 1344     		add	r3, r3, r2
 13788 026e 424A     		ldr	r2, .L641+56
 13789 0270 1D46     		mov	r5, r3
 13790 0272 1446     		mov	r4, r2
 13791 0274 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13792 0276 2860     		str	r0, [r5]	@ unaligned
 13793 0278 6960     		str	r1, [r5, #4]	@ unaligned
 13794 027a AA60     		str	r2, [r5, #8]	@ unaligned
 13795 027c EB60     		str	r3, [r5, #12]	@ unaligned
 13796 027e 2068     		ldr	r0, [r4]	@ unaligned
 13797 0280 2861     		str	r0, [r5, #16]	@ unaligned
 13798 0282 2379     		ldrb	r3, [r4, #4]
 13799 0284 2B75     		strb	r3, [r5, #20]
1815:..\src/command_processing.c ****                 break;
 13800              		.loc 1 1815 0
 13801 0286 00BF     		nop
 13802              	.L540:
1816:..\src/command_processing.c ****         }
1817:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 13803              		.loc 1 1817 0
 13804 0288 7869     		ldr	r0, [r7, #20]
 13805 028a FFF7FEFF 		bl	strlen
 13806 028e 0346     		mov	r3, r0
 13807 0290 1A46     		mov	r2, r3
 13808 0292 7B69     		ldr	r3, [r7, #20]
 13809 0294 1344     		add	r3, r3, r2
 13810 0296 2B4A     		ldr	r2, .L641+4
 13811 0298 1188     		ldrh	r1, [r2]	@ unaligned
 13812 029a 9278     		ldrb	r2, [r2, #2]
 13813 029c 1980     		strh	r1, [r3]	@ unaligned
 13814 029e 9A70     		strb	r2, [r3, #2]
 13815              	.LBB17:
1818:..\src/command_processing.c ****         
1819:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 13816              		.loc 1 1819 0
 13817 02a0 0023     		movs	r3, #0
 13818 02a2 87F89330 		strb	r3, [r7, #147]
 13819 02a6 01F093B9 		b	.L541
 13820              	.L604:
 13821              	.LBB18:
1820:..\src/command_processing.c ****             
1821:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 13822              		.loc 1 1821 0
 13823 02aa 97F89330 		ldrb	r3, [r7, #147]
 13824 02ae 87F88730 		strb	r3, [r7, #135]
1822:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 13825              		.loc 1 1822 0
 13826 02b2 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 13827 02b6 1346     		mov	r3, r2
 13828 02b8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 313


 13829 02ba 9B1A     		subs	r3, r3, r2
 13830 02bc 1B01     		lsls	r3, r3, #4
 13831 02be B033     		adds	r3, r3, #176
 13832 02c0 D7F88820 		ldr	r2, [r7, #136]
 13833 02c4 1344     		add	r3, r3, r2
 13834 02c6 C7F88030 		str	r3, [r7, #128]
1823:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 13835              		.loc 1 1823 0
 13836 02ca D7F88030 		ldr	r3, [r7, #128]
 13837 02ce 93F86030 		ldrb	r3, [r3, #96]
 13838 02d2 87F87F30 		strb	r3, [r7, #127]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 13839              		.loc 1 1825 0
 13840 02d6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13841 02da 5A1C     		adds	r2, r3, #1
 13842 02dc 07F11803 		add	r3, r7, #24
 13843 02e0 2649     		ldr	r1, .L641+60
 13844 02e2 1846     		mov	r0, r3
 13845 02e4 FFF7FEFF 		bl	sprintf
1826:..\src/command_processing.c ****             strcat(info_string, str);
 13846              		.loc 1 1826 0
 13847 02e8 07F11803 		add	r3, r7, #24
 13848 02ec 1946     		mov	r1, r3
 13849 02ee 7869     		ldr	r0, [r7, #20]
 13850 02f0 FFF7FEFF 		bl	strcat
1827:..\src/command_processing.c ****                         
1828:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 13851              		.loc 1 1828 0
 13852 02f4 7869     		ldr	r0, [r7, #20]
 13853 02f6 FFF7FEFF 		bl	strlen
 13854 02fa 0346     		mov	r3, r0
 13855 02fc 1A46     		mov	r2, r3
 13856 02fe 7B69     		ldr	r3, [r7, #20]
 13857 0300 1344     		add	r3, r3, r2
 13858 0302 1F4A     		ldr	r2, .L641+64
 13859 0304 1C46     		mov	r4, r3
 13860 0306 1546     		mov	r5, r2
 13861 0308 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13862 030a 2060     		str	r0, [r4]	@ unaligned
 13863 030c 6160     		str	r1, [r4, #4]	@ unaligned
 13864 030e A260     		str	r2, [r4, #8]	@ unaligned
 13865 0310 E360     		str	r3, [r4, #12]	@ unaligned
1829:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 13866              		.loc 1 1829 0
 13867 0312 D7F88030 		ldr	r3, [r7, #128]
 13868 0316 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13869 031a 022B     		cmp	r3, #2
 13870 031c 34D1     		bne	.L542
1830:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 13871              		.loc 1 1830 0
 13872 031e 7869     		ldr	r0, [r7, #20]
 13873 0320 FFF7FEFF 		bl	strlen
 13874 0324 0346     		mov	r3, r0
 13875 0326 1A46     		mov	r2, r3
 13876 0328 7B69     		ldr	r3, [r7, #20]
 13877 032a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 314


 13878 032c 154A     		ldr	r2, .L641+68
 13879 032e 1C46     		mov	r4, r3
 13880 0330 1346     		mov	r3, r2
 13881 0332 07CB     		ldmia	r3!, {r0, r1, r2}
 13882 0334 2060     		str	r0, [r4]	@ unaligned
 13883 0336 6160     		str	r1, [r4, #4]	@ unaligned
 13884 0338 A260     		str	r2, [r4, #8]	@ unaligned
 13885 033a 1B88     		ldrh	r3, [r3]	@ unaligned
 13886 033c A381     		strh	r3, [r4, #12]	@ unaligned
 13887 033e 49E0     		b	.L543
 13888              	.L642:
 13889              		.align	2
 13890              	.L641:
 13891 0340 00000000 		.word	c_mem
 13892 0344 AC0E0000 		.word	.LC132
 13893 0348 B00E0000 		.word	.LC133
 13894 034c C40E0000 		.word	.LC134
 13895 0350 E80E0000 		.word	.LC135
 13896 0354 F00E0000 		.word	.LC136
 13897 0358 000F0000 		.word	.LC137
 13898 035c 0C0F0000 		.word	.LC138
 13899 0360 240F0000 		.word	.LC139
 13900 0364 400F0000 		.word	.LC140
 13901 0368 680F0000 		.word	.LC141
 13902 036c 7C0F0000 		.word	.LC142
 13903 0370 900F0000 		.word	.LC143
 13904 0374 A00F0000 		.word	.LC144
 13905 0378 B00F0000 		.word	.LC145
 13906 037c C80F0000 		.word	.LC146
 13907 0380 D80F0000 		.word	.LC147
 13908 0384 E80F0000 		.word	.LC148
 13909              	.L542:
1831:..\src/command_processing.c ****             else {
1832:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 13910              		.loc 1 1832 0
 13911 0388 D7F88030 		ldr	r3, [r7, #128]
 13912 038c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13913 0390 012B     		cmp	r3, #1
 13914 0392 0FD1     		bne	.L544
1833:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 13915              		.loc 1 1833 0
 13916 0394 7869     		ldr	r0, [r7, #20]
 13917 0396 FFF7FEFF 		bl	strlen
 13918 039a 0346     		mov	r3, r0
 13919 039c 1A46     		mov	r2, r3
 13920 039e 7B69     		ldr	r3, [r7, #20]
 13921 03a0 1344     		add	r3, r3, r2
 13922 03a2 8F49     		ldr	r1, .L643
 13923 03a4 1A46     		mov	r2, r3
 13924 03a6 0B46     		mov	r3, r1
 13925 03a8 03CB     		ldmia	r3!, {r0, r1}
 13926 03aa 1060     		str	r0, [r2]	@ unaligned
 13927 03ac 5160     		str	r1, [r2, #4]	@ unaligned
 13928 03ae 1B78     		ldrb	r3, [r3]
 13929 03b0 1372     		strb	r3, [r2, #8]
 13930 03b2 0FE0     		b	.L543
 13931              	.L544:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 315


1834:..\src/command_processing.c ****                 else
1835:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 13932              		.loc 1 1835 0
 13933 03b4 7869     		ldr	r0, [r7, #20]
 13934 03b6 FFF7FEFF 		bl	strlen
 13935 03ba 0346     		mov	r3, r0
 13936 03bc 1A46     		mov	r2, r3
 13937 03be 7B69     		ldr	r3, [r7, #20]
 13938 03c0 1344     		add	r3, r3, r2
 13939 03c2 884A     		ldr	r2, .L643+4
 13940 03c4 1C46     		mov	r4, r3
 13941 03c6 1346     		mov	r3, r2
 13942 03c8 07CB     		ldmia	r3!, {r0, r1, r2}
 13943 03ca 2060     		str	r0, [r4]	@ unaligned
 13944 03cc 6160     		str	r1, [r4, #4]	@ unaligned
 13945 03ce A260     		str	r2, [r4, #8]	@ unaligned
 13946 03d0 1B88     		ldrh	r3, [r3]	@ unaligned
 13947 03d2 A381     		strh	r3, [r4, #12]	@ unaligned
 13948              	.L543:
1836:..\src/command_processing.c ****             }
1837:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 13949              		.loc 1 1837 0
 13950 03d4 D7F88030 		ldr	r3, [r7, #128]
 13951 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13952 03dc 022B     		cmp	r3, #2
 13953 03de 13D1     		bne	.L545
1838:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 13954              		.loc 1 1838 0
 13955 03e0 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13956 03e4 804A     		ldr	r2, .L643+8
 13957 03e6 1B01     		lsls	r3, r3, #4
 13958 03e8 1344     		add	r3, r3, r2
 13959 03ea 0433     		adds	r3, r3, #4
 13960 03ec 1A68     		ldr	r2, [r3]
 13961 03ee 07F11803 		add	r3, r7, #24
 13962 03f2 7E49     		ldr	r1, .L643+12
 13963 03f4 1846     		mov	r0, r3
 13964 03f6 FFF7FEFF 		bl	sprintf
1839:..\src/command_processing.c ****                 strcat(info_string,str);
 13965              		.loc 1 1839 0
 13966 03fa 07F11803 		add	r3, r7, #24
 13967 03fe 1946     		mov	r1, r3
 13968 0400 7869     		ldr	r0, [r7, #20]
 13969 0402 FFF7FEFF 		bl	strcat
 13970 0406 39E0     		b	.L546
 13971              	.L545:
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             else {
1842:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 13972              		.loc 1 1842 0
 13973 0408 D7F88030 		ldr	r3, [r7, #128]
 13974 040c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13975 0410 012B     		cmp	r3, #1
 13976 0412 13D1     		bne	.L547
1843:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 13977              		.loc 1 1843 0
 13978 0414 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 316


 13979 0418 734A     		ldr	r2, .L643+8
 13980 041a 1B01     		lsls	r3, r3, #4
 13981 041c 1344     		add	r3, r3, r2
 13982 041e 0833     		adds	r3, r3, #8
 13983 0420 1A68     		ldr	r2, [r3]
 13984 0422 07F11803 		add	r3, r7, #24
 13985 0426 7149     		ldr	r1, .L643+12
 13986 0428 1846     		mov	r0, r3
 13987 042a FFF7FEFF 		bl	sprintf
1844:..\src/command_processing.c ****                     strcat(info_string,str);
 13988              		.loc 1 1844 0
 13989 042e 07F11803 		add	r3, r7, #24
 13990 0432 1946     		mov	r1, r3
 13991 0434 7869     		ldr	r0, [r7, #20]
 13992 0436 FFF7FEFF 		bl	strcat
 13993 043a 1FE0     		b	.L546
 13994              	.L547:
1845:..\src/command_processing.c ****                 }
1846:..\src/command_processing.c ****                 else {
1847:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 13995              		.loc 1 1847 0
 13996 043c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 13997 0440 694A     		ldr	r2, .L643+8
 13998 0442 1B01     		lsls	r3, r3, #4
 13999 0444 1344     		add	r3, r3, r2
 14000 0446 1968     		ldr	r1, [r3]
 14001 0448 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14002 044c D7F88800 		ldr	r0, [r7, #136]
 14003 0450 1346     		mov	r3, r2
 14004 0452 5B00     		lsls	r3, r3, #1
 14005 0454 1344     		add	r3, r3, r2
 14006 0456 1B01     		lsls	r3, r3, #4
 14007 0458 0344     		add	r3, r3, r0
 14008 045a 03F29513 		addw	r3, r3, #405
 14009 045e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14010 0460 41FA03F2 		asr	r2, r1, r3
 14011 0464 07F11803 		add	r3, r7, #24
 14012 0468 6049     		ldr	r1, .L643+12
 14013 046a 1846     		mov	r0, r3
 14014 046c FFF7FEFF 		bl	sprintf
1848:..\src/command_processing.c ****                     strcat(info_string,str);
 14015              		.loc 1 1848 0
 14016 0470 07F11803 		add	r3, r7, #24
 14017 0474 1946     		mov	r1, r3
 14018 0476 7869     		ldr	r0, [r7, #20]
 14019 0478 FFF7FEFF 		bl	strcat
 14020              	.L546:
1849:..\src/command_processing.c ****                 }
1850:..\src/command_processing.c ****             }
1851:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14021              		.loc 1 1851 0
 14022 047c 7869     		ldr	r0, [r7, #20]
 14023 047e FFF7FEFF 		bl	strlen
 14024 0482 0346     		mov	r3, r0
 14025 0484 1A46     		mov	r2, r3
 14026 0486 7B69     		ldr	r3, [r7, #20]
 14027 0488 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 317


 14028 048a 594A     		ldr	r2, .L643+16
 14029 048c 1188     		ldrh	r1, [r2]	@ unaligned
 14030 048e 9278     		ldrb	r2, [r2, #2]
 14031 0490 1980     		strh	r1, [r3]	@ unaligned
 14032 0492 9A70     		strb	r2, [r3, #2]
1852:..\src/command_processing.c **** 
1853:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14033              		.loc 1 1853 0
 14034 0494 07F11803 		add	r3, r7, #24
 14035 0498 564A     		ldr	r2, .L643+20
 14036 049a 1C46     		mov	r4, r3
 14037 049c 1346     		mov	r3, r2
 14038 049e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14039 04a0 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1854:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14040              		.loc 1 1854 0
 14041 04a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14042 04a8 534A     		ldr	r2, .L643+24
 14043 04aa 1B01     		lsls	r3, r3, #4
 14044 04ac 1344     		add	r3, r3, r2
 14045 04ae 0C33     		adds	r3, r3, #12
 14046 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14047 04b2 03F00103 		and	r3, r3, #1
 14048 04b6 002B     		cmp	r3, #0
 14049 04b8 0FD0     		beq	.L548
1855:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14050              		.loc 1 1855 0
 14051 04ba 07F11803 		add	r3, r7, #24
 14052 04be 1846     		mov	r0, r3
 14053 04c0 FFF7FEFF 		bl	strlen
 14054 04c4 0346     		mov	r3, r0
 14055 04c6 1A46     		mov	r2, r3
 14056 04c8 07F11803 		add	r3, r7, #24
 14057 04cc 1344     		add	r3, r3, r2
 14058 04ce 4B4A     		ldr	r2, .L643+28
 14059 04d0 1068     		ldr	r0, [r2]	@ unaligned
 14060 04d2 1860     		str	r0, [r3]	@ unaligned
 14061 04d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14062 04d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 14063 04d8 0EE0     		b	.L549
 14064              	.L548:
1856:..\src/command_processing.c ****             } else {
1857:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14065              		.loc 1 1857 0
 14066 04da 07F11803 		add	r3, r7, #24
 14067 04de 1846     		mov	r0, r3
 14068 04e0 FFF7FEFF 		bl	strlen
 14069 04e4 0346     		mov	r3, r0
 14070 04e6 1A46     		mov	r2, r3
 14071 04e8 07F11803 		add	r3, r7, #24
 14072 04ec 1344     		add	r3, r3, r2
 14073 04ee 444A     		ldr	r2, .L643+32
 14074 04f0 1068     		ldr	r0, [r2]	@ unaligned
 14075 04f2 1860     		str	r0, [r3]	@ unaligned
 14076 04f4 1279     		ldrb	r2, [r2, #4]
 14077 04f6 1A71     		strb	r2, [r3, #4]
 14078              	.L549:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 318


1858:..\src/command_processing.c ****             }
1859:..\src/command_processing.c ****             strcat(info_string, str);
 14079              		.loc 1 1859 0
 14080 04f8 07F11803 		add	r3, r7, #24
 14081 04fc 1946     		mov	r1, r3
 14082 04fe 7869     		ldr	r0, [r7, #20]
 14083 0500 FFF7FEFF 		bl	strcat
1860:..\src/command_processing.c ****                         
1861:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14084              		.loc 1 1861 0
 14085 0504 7869     		ldr	r0, [r7, #20]
 14086 0506 FFF7FEFF 		bl	strlen
 14087 050a 0346     		mov	r3, r0
 14088 050c 1A46     		mov	r2, r3
 14089 050e 7B69     		ldr	r3, [r7, #20]
 14090 0510 1344     		add	r3, r3, r2
 14091 0512 3C4A     		ldr	r2, .L643+36
 14092 0514 1D46     		mov	r5, r3
 14093 0516 1446     		mov	r4, r2
 14094 0518 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14095 051a 2860     		str	r0, [r5]	@ unaligned
 14096 051c 6960     		str	r1, [r5, #4]	@ unaligned
 14097 051e AA60     		str	r2, [r5, #8]	@ unaligned
 14098 0520 EB60     		str	r3, [r5, #12]	@ unaligned
 14099 0522 03CC     		ldmia	r4!, {r0, r1}
 14100 0524 2861     		str	r0, [r5, #16]	@ unaligned
 14101 0526 6961     		str	r1, [r5, #20]	@ unaligned
 14102 0528 2388     		ldrh	r3, [r4]	@ unaligned
 14103 052a A278     		ldrb	r2, [r4, #2]
 14104 052c 2B83     		strh	r3, [r5, #24]	@ unaligned
 14105 052e 1346     		mov	r3, r2
 14106 0530 AB76     		strb	r3, [r5, #26]
1862:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14107              		.loc 1 1862 0
 14108 0532 D7F88030 		ldr	r3, [r7, #128]
 14109 0536 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14110 053a 012B     		cmp	r3, #1
 14111 053c 0CD1     		bne	.L550
1863:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14112              		.loc 1 1863 0
 14113 053e 7869     		ldr	r0, [r7, #20]
 14114 0540 FFF7FEFF 		bl	strlen
 14115 0544 0346     		mov	r3, r0
 14116 0546 1A46     		mov	r2, r3
 14117 0548 7B69     		ldr	r3, [r7, #20]
 14118 054a 1344     		add	r3, r3, r2
 14119 054c 2E4A     		ldr	r2, .L643+40
 14120 054e 1068     		ldr	r0, [r2]	@ unaligned
 14121 0550 1860     		str	r0, [r3]	@ unaligned
 14122 0552 1279     		ldrb	r2, [r2, #4]
 14123 0554 1A71     		strb	r2, [r3, #4]
 14124 0556 09E0     		b	.L551
 14125              	.L550:
1864:..\src/command_processing.c ****             else
1865:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14126              		.loc 1 1865 0
 14127 0558 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 319


 14128 055a FFF7FEFF 		bl	strlen
 14129 055e 0346     		mov	r3, r0
 14130 0560 1A46     		mov	r2, r3
 14131 0562 7B69     		ldr	r3, [r7, #20]
 14132 0564 1344     		add	r3, r3, r2
 14133 0566 294A     		ldr	r2, .L643+44
 14134 0568 1068     		ldr	r0, [r2]	@ unaligned
 14135 056a 1860     		str	r0, [r3]	@ unaligned
 14136              	.L551:
1866:..\src/command_processing.c ****             
1867:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14137              		.loc 1 1867 0
 14138 056c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14139 0570 274A     		ldr	r2, .L643+48
 14140 0572 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14141 0574 1A46     		mov	r2, r3
 14142 0576 07F11803 		add	r3, r7, #24
 14143 057a 2649     		ldr	r1, .L643+52
 14144 057c 1846     		mov	r0, r3
 14145 057e FFF7FEFF 		bl	sprintf
1868:..\src/command_processing.c ****             strcat(info_string, str);
 14146              		.loc 1 1868 0
 14147 0582 07F11803 		add	r3, r7, #24
 14148 0586 1946     		mov	r1, r3
 14149 0588 7869     		ldr	r0, [r7, #20]
 14150 058a FFF7FEFF 		bl	strcat
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14151              		.loc 1 1870 0
 14152 058e 7869     		ldr	r0, [r7, #20]
 14153 0590 FFF7FEFF 		bl	strlen
 14154 0594 0346     		mov	r3, r0
 14155 0596 1A46     		mov	r2, r3
 14156 0598 7B69     		ldr	r3, [r7, #20]
 14157 059a 1344     		add	r3, r3, r2
 14158 059c 1E4A     		ldr	r2, .L643+56
 14159 059e 1D46     		mov	r5, r3
 14160 05a0 1446     		mov	r4, r2
 14161 05a2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14162 05a4 2860     		str	r0, [r5]	@ unaligned
 14163 05a6 6960     		str	r1, [r5, #4]	@ unaligned
 14164 05a8 AA60     		str	r2, [r5, #8]	@ unaligned
 14165 05aa EB60     		str	r3, [r5, #12]	@ unaligned
 14166 05ac 2068     		ldr	r0, [r4]	@ unaligned
 14167 05ae 2861     		str	r0, [r5, #16]	@ unaligned
 14168 05b0 A388     		ldrh	r3, [r4, #4]	@ unaligned
 14169 05b2 AB82     		strh	r3, [r5, #20]	@ unaligned
1871:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14170              		.loc 1 1871 0
 14171 05b4 7869     		ldr	r0, [r7, #20]
 14172 05b6 FFF7FEFF 		bl	strlen
 14173 05ba 0346     		mov	r3, r0
 14174 05bc 1A46     		mov	r2, r3
 14175 05be 7B69     		ldr	r3, [r7, #20]
 14176 05c0 1344     		add	r3, r3, r2
 14177 05c2 164A     		ldr	r2, .L643+60
 14178 05c4 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 320


 14179 05c6 1346     		mov	r3, r2
 14180 05c8 07CB     		ldmia	r3!, {r0, r1, r2}
 14181 05ca 2060     		str	r0, [r4]	@ unaligned
 14182 05cc 6160     		str	r1, [r4, #4]	@ unaligned
 14183 05ce A260     		str	r2, [r4, #8]	@ unaligned
 14184 05d0 1A88     		ldrh	r2, [r3]	@ unaligned
 14185 05d2 9B78     		ldrb	r3, [r3, #2]
 14186 05d4 A281     		strh	r2, [r4, #12]	@ unaligned
 14187 05d6 A373     		strb	r3, [r4, #14]
1872:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14188              		.loc 1 1872 0
 14189 05d8 0023     		movs	r3, #0
 14190 05da C7F89430 		str	r3, [r7, #148]
 14191 05de 5EE0     		b	.L552
 14192              	.L644:
 14193              		.align	2
 14194              	.L643:
 14195 05e0 F80F0000 		.word	.LC149
 14196 05e4 04100000 		.word	.LC150
 14197 05e8 00000000 		.word	g_refOld
 14198 05ec 14100000 		.word	.LC151
 14199 05f0 AC0E0000 		.word	.LC132
 14200 05f4 18100000 		.word	.LC152
 14201 05f8 00000000 		.word	g_ref
 14202 05fc 28100000 		.word	.LC153
 14203 0600 30100000 		.word	.LC154
 14204 0604 38100000 		.word	.LC155
 14205 0608 54100000 		.word	.LC156
 14206 060c 5C100000 		.word	.LC157
 14207 0610 00000000 		.word	dev_pwm_limit
 14208 0614 60100000 		.word	.LC158
 14209 0618 70100000 		.word	.LC159
 14210 061c 88100000 		.word	.LC160
 14211              	.L554:
1873:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14212              		.loc 1 1873 0
 14213 0620 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14214 0624 A749     		ldr	r1, .L645
 14215 0626 1346     		mov	r3, r2
 14216 0628 5B00     		lsls	r3, r3, #1
 14217 062a 1344     		add	r3, r3, r2
 14218 062c 9B00     		lsls	r3, r3, #2
 14219 062e 1344     		add	r3, r3, r2
 14220 0630 D7F89420 		ldr	r2, [r7, #148]
 14221 0634 1344     		add	r3, r3, r2
 14222 0636 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14223 063a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14224 063e D7F88800 		ldr	r0, [r7, #136]
 14225 0642 1346     		mov	r3, r2
 14226 0644 5B00     		lsls	r3, r3, #1
 14227 0646 1344     		add	r3, r3, r2
 14228 0648 1B01     		lsls	r3, r3, #4
 14229 064a C218     		adds	r2, r0, r3
 14230 064c D7F89430 		ldr	r3, [r7, #148]
 14231 0650 1344     		add	r3, r3, r2
 14232 0652 03F29513 		addw	r3, r3, #405
 14233 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 321


 14234 0658 41FA03F2 		asr	r2, r1, r3
 14235 065c 07F11803 		add	r3, r7, #24
 14236 0660 9949     		ldr	r1, .L645+4
 14237 0662 1846     		mov	r0, r3
 14238 0664 FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****                 strcat(info_string, str);
 14239              		.loc 1 1874 0
 14240 0668 07F11803 		add	r3, r7, #24
 14241 066c 1946     		mov	r1, r3
 14242 066e 7869     		ldr	r0, [r7, #20]
 14243 0670 FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14244              		.loc 1 1875 0
 14245 0674 D7F89430 		ldr	r3, [r7, #148]
 14246 0678 022B     		cmp	r3, #2
 14247 067a 0BD0     		beq	.L553
1876:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14248              		.loc 1 1876 0
 14249 067c 7869     		ldr	r0, [r7, #20]
 14250 067e FFF7FEFF 		bl	strlen
 14251 0682 0346     		mov	r3, r0
 14252 0684 1A46     		mov	r2, r3
 14253 0686 7B69     		ldr	r3, [r7, #20]
 14254 0688 1344     		add	r3, r3, r2
 14255 068a 904A     		ldr	r2, .L645+8
 14256 068c 1188     		ldrh	r1, [r2]	@ unaligned
 14257 068e 9278     		ldrb	r2, [r2, #2]
 14258 0690 1980     		strh	r1, [r3]	@ unaligned
 14259 0692 9A70     		strb	r2, [r3, #2]
 14260              	.L553:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14261              		.loc 1 1872 0 discriminator 2
 14262 0694 D7F89430 		ldr	r3, [r7, #148]
 14263 0698 0133     		adds	r3, r3, #1
 14264 069a C7F89430 		str	r3, [r7, #148]
 14265              	.L552:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14266              		.loc 1 1872 0 is_stmt 0 discriminator 1
 14267 069e D7F89430 		ldr	r3, [r7, #148]
 14268 06a2 022B     		cmp	r3, #2
 14269 06a4 BCDD     		ble	.L554
1877:..\src/command_processing.c ****                 }                
1878:..\src/command_processing.c ****             }
1879:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14270              		.loc 1 1879 0 is_stmt 1
 14271 06a6 7869     		ldr	r0, [r7, #20]
 14272 06a8 FFF7FEFF 		bl	strlen
 14273 06ac 0346     		mov	r3, r0
 14274 06ae 1A46     		mov	r2, r3
 14275 06b0 7B69     		ldr	r3, [r7, #20]
 14276 06b2 1344     		add	r3, r3, r2
 14277 06b4 864A     		ldr	r2, .L645+12
 14278 06b6 1188     		ldrh	r1, [r2]	@ unaligned
 14279 06b8 9278     		ldrb	r2, [r2, #2]
 14280 06ba 1980     		strh	r1, [r3]	@ unaligned
 14281 06bc 9A70     		strb	r2, [r3, #2]
1880:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 322


1881:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 14282              		.loc 1 1881 0
 14283 06be 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14284 06c2 591C     		adds	r1, r3, #1
 14285 06c4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14286 06c8 824A     		ldr	r2, .L645+16
 14287 06ca 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14288 06ce 07F11800 		add	r0, r7, #24
 14289 06d2 0A46     		mov	r2, r1
 14290 06d4 8049     		ldr	r1, .L645+20
 14291 06d6 FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****             strcat(info_string, str);
 14292              		.loc 1 1882 0
 14293 06da 07F11803 		add	r3, r7, #24
 14294 06de 1946     		mov	r1, r3
 14295 06e0 7869     		ldr	r0, [r7, #20]
 14296 06e2 FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14297              		.loc 1 1883 0
 14298 06e6 7869     		ldr	r0, [r7, #20]
 14299 06e8 FFF7FEFF 		bl	strlen
 14300 06ec 0346     		mov	r3, r0
 14301 06ee 1A46     		mov	r2, r3
 14302 06f0 7B69     		ldr	r3, [r7, #20]
 14303 06f2 1344     		add	r3, r3, r2
 14304 06f4 764A     		ldr	r2, .L645+12
 14305 06f6 1188     		ldrh	r1, [r2]	@ unaligned
 14306 06f8 9278     		ldrb	r2, [r2, #2]
 14307 06fa 1980     		strh	r1, [r3]	@ unaligned
 14308 06fc 9A70     		strb	r2, [r3, #2]
1884:..\src/command_processing.c ****             
1885:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 14309              		.loc 1 1885 0
 14310 06fe 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14311 0702 591C     		adds	r1, r3, #1
 14312 0704 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14313 0708 744A     		ldr	r2, .L645+24
 14314 070a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14315 070e 07F11800 		add	r0, r7, #24
 14316 0712 0A46     		mov	r2, r1
 14317 0714 7249     		ldr	r1, .L645+28
 14318 0716 FFF7FEFF 		bl	sprintf
1886:..\src/command_processing.c ****             strcat(info_string, str);
 14319              		.loc 1 1886 0
 14320 071a 07F11803 		add	r3, r7, #24
 14321 071e 1946     		mov	r1, r3
 14322 0720 7869     		ldr	r0, [r7, #20]
 14323 0722 FFF7FEFF 		bl	strcat
1887:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14324              		.loc 1 1887 0
 14325 0726 7869     		ldr	r0, [r7, #20]
 14326 0728 FFF7FEFF 		bl	strlen
 14327 072c 0346     		mov	r3, r0
 14328 072e 1A46     		mov	r2, r3
 14329 0730 7B69     		ldr	r3, [r7, #20]
 14330 0732 1344     		add	r3, r3, r2
 14331 0734 664A     		ldr	r2, .L645+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 323


 14332 0736 1188     		ldrh	r1, [r2]	@ unaligned
 14333 0738 9278     		ldrb	r2, [r2, #2]
 14334 073a 1980     		strh	r1, [r3]	@ unaligned
 14335 073c 9A70     		strb	r2, [r3, #2]
1888:..\src/command_processing.c **** 
1889:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 14336              		.loc 1 1889 0
 14337 073e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14338 0742 5C1C     		adds	r4, r3, #1
 14339 0744 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14340 0748 5E4A     		ldr	r2, .L645
 14341 074a 3421     		movs	r1, #52
 14342 074c 01FB03F3 		mul	r3, r1, r3
 14343 0750 1344     		add	r3, r3, r2
 14344 0752 0C33     		adds	r3, r3, #12
 14345 0754 1B68     		ldr	r3, [r3]
 14346 0756 07F11800 		add	r0, r7, #24
 14347 075a 2246     		mov	r2, r4
 14348 075c 6149     		ldr	r1, .L645+32
 14349 075e FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****             strcat(info_string, str);
 14350              		.loc 1 1890 0
 14351 0762 07F11803 		add	r3, r7, #24
 14352 0766 1946     		mov	r1, r3
 14353 0768 7869     		ldr	r0, [r7, #20]
 14354 076a FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14355              		.loc 1 1891 0
 14356 076e 7869     		ldr	r0, [r7, #20]
 14357 0770 FFF7FEFF 		bl	strlen
 14358 0774 0346     		mov	r3, r0
 14359 0776 1A46     		mov	r2, r3
 14360 0778 7B69     		ldr	r3, [r7, #20]
 14361 077a 1344     		add	r3, r3, r2
 14362 077c 544A     		ldr	r2, .L645+12
 14363 077e 1188     		ldrh	r1, [r2]	@ unaligned
 14364 0780 9278     		ldrb	r2, [r2, #2]
 14365 0782 1980     		strh	r1, [r3]	@ unaligned
 14366 0784 9A70     		strb	r2, [r3, #2]
1892:..\src/command_processing.c ****             
1893:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 14367              		.loc 1 1893 0
 14368 0786 D7F88030 		ldr	r3, [r7, #128]
 14369 078a 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 14370 078e 012B     		cmp	r3, #1
 14371 0790 23D1     		bne	.L555
1894:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 14372              		.loc 1 1894 0
 14373 0792 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14374 0796 5C1C     		adds	r4, r3, #1
 14375 0798 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 14376 079c 494A     		ldr	r2, .L645
 14377 079e 3421     		movs	r1, #52
 14378 07a0 01FB03F3 		mul	r3, r1, r3
 14379 07a4 1344     		add	r3, r3, r2
 14380 07a6 1433     		adds	r3, r3, #20
 14381 07a8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 324


 14382 07aa 07F11800 		add	r0, r7, #24
 14383 07ae 2246     		mov	r2, r4
 14384 07b0 4D49     		ldr	r1, .L645+36
 14385 07b2 FFF7FEFF 		bl	sprintf
1895:..\src/command_processing.c ****                 strcat(info_string, str);
 14386              		.loc 1 1895 0
 14387 07b6 07F11803 		add	r3, r7, #24
 14388 07ba 1946     		mov	r1, r3
 14389 07bc 7869     		ldr	r0, [r7, #20]
 14390 07be FFF7FEFF 		bl	strcat
1896:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 14391              		.loc 1 1896 0
 14392 07c2 7869     		ldr	r0, [r7, #20]
 14393 07c4 FFF7FEFF 		bl	strlen
 14394 07c8 0346     		mov	r3, r0
 14395 07ca 1A46     		mov	r2, r3
 14396 07cc 7B69     		ldr	r3, [r7, #20]
 14397 07ce 1344     		add	r3, r3, r2
 14398 07d0 3F4A     		ldr	r2, .L645+12
 14399 07d2 1188     		ldrh	r1, [r2]	@ unaligned
 14400 07d4 9278     		ldrb	r2, [r2, #2]
 14401 07d6 1980     		strh	r1, [r3]	@ unaligned
 14402 07d8 9A70     		strb	r2, [r3, #2]
 14403              	.L555:
1897:..\src/command_processing.c ****             }
1898:..\src/command_processing.c ****             
1899:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 14404              		.loc 1 1899 0
 14405 07da 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14406 07de 5A1C     		adds	r2, r3, #1
 14407 07e0 07F11803 		add	r3, r7, #24
 14408 07e4 4149     		ldr	r1, .L645+40
 14409 07e6 1846     		mov	r0, r3
 14410 07e8 FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****             strcat(info_string, str);
 14411              		.loc 1 1900 0
 14412 07ec 07F11803 		add	r3, r7, #24
 14413 07f0 1946     		mov	r1, r3
 14414 07f2 7869     		ldr	r0, [r7, #20]
 14415 07f4 FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c **** 
1902:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 14416              		.loc 1 1902 0
 14417 07f8 7869     		ldr	r0, [r7, #20]
 14418 07fa FFF7FEFF 		bl	strlen
 14419 07fe 0346     		mov	r3, r0
 14420 0800 1A46     		mov	r2, r3
 14421 0802 7B69     		ldr	r3, [r7, #20]
 14422 0804 1344     		add	r3, r3, r2
 14423 0806 3A4A     		ldr	r2, .L645+44
 14424 0808 1D46     		mov	r5, r3
 14425 080a 1446     		mov	r4, r2
 14426 080c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14427 080e 2860     		str	r0, [r5]	@ unaligned
 14428 0810 6960     		str	r1, [r5, #4]	@ unaligned
 14429 0812 AA60     		str	r2, [r5, #8]	@ unaligned
 14430 0814 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 325


 14431 0816 2378     		ldrb	r3, [r4]
 14432 0818 2B74     		strb	r3, [r5, #16]
1903:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14433              		.loc 1 1903 0
 14434 081a D7F88030 		ldr	r3, [r7, #128]
 14435 081e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14436 0822 032B     		cmp	r3, #3
 14437 0824 6ED0     		beq	.L556
1904:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 14438              		.loc 1 1904 0
 14439 0826 D7F88030 		ldr	r3, [r7, #128]
 14440 082a 1B68     		ldr	r3, [r3]
 14441 082c 1846     		mov	r0, r3
 14442 082e FFF7FEFF 		bl	__aeabi_i2d
 14443 0832 4FF00002 		mov	r2, #0
 14444 0836 2F4B     		ldr	r3, .L645+48
 14445 0838 FFF7FEFF 		bl	__aeabi_ddiv
 14446 083c 0346     		mov	r3, r0
 14447 083e 0C46     		mov	r4, r1
 14448 0840 07F11800 		add	r0, r7, #24
 14449 0844 1A46     		mov	r2, r3
 14450 0846 2346     		mov	r3, r4
 14451 0848 2B49     		ldr	r1, .L645+52
 14452 084a FFF7FEFF 		bl	sprintf
1905:..\src/command_processing.c ****                 strcat(info_string, str);
 14453              		.loc 1 1905 0
 14454 084e 07F11803 		add	r3, r7, #24
 14455 0852 1946     		mov	r1, r3
 14456 0854 7869     		ldr	r0, [r7, #20]
 14457 0856 FFF7FEFF 		bl	strcat
1906:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 14458              		.loc 1 1906 0
 14459 085a D7F88030 		ldr	r3, [r7, #128]
 14460 085e 5B68     		ldr	r3, [r3, #4]
 14461 0860 1846     		mov	r0, r3
 14462 0862 FFF7FEFF 		bl	__aeabi_i2d
 14463 0866 4FF00002 		mov	r2, #0
 14464 086a 224B     		ldr	r3, .L645+48
 14465 086c FFF7FEFF 		bl	__aeabi_ddiv
 14466 0870 0346     		mov	r3, r0
 14467 0872 0C46     		mov	r4, r1
 14468 0874 07F11800 		add	r0, r7, #24
 14469 0878 1A46     		mov	r2, r3
 14470 087a 2346     		mov	r3, r4
 14471 087c 1F49     		ldr	r1, .L645+56
 14472 087e FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 14473              		.loc 1 1907 0
 14474 0882 07F11803 		add	r3, r7, #24
 14475 0886 1946     		mov	r1, r3
 14476 0888 7869     		ldr	r0, [r7, #20]
 14477 088a FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 14478              		.loc 1 1908 0
 14479 088e D7F88030 		ldr	r3, [r7, #128]
 14480 0892 9B68     		ldr	r3, [r3, #8]
 14481 0894 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 326


 14482 0896 FFF7FEFF 		bl	__aeabi_i2d
 14483 089a 4FF00002 		mov	r2, #0
 14484 089e 154B     		ldr	r3, .L645+48
 14485 08a0 FFF7FEFF 		bl	__aeabi_ddiv
 14486 08a4 0346     		mov	r3, r0
 14487 08a6 0C46     		mov	r4, r1
 14488 08a8 07F11800 		add	r0, r7, #24
 14489 08ac 1A46     		mov	r2, r3
 14490 08ae 2346     		mov	r3, r4
 14491 08b0 1349     		ldr	r1, .L645+60
 14492 08b2 FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 14493              		.loc 1 1909 0
 14494 08b6 07F11803 		add	r3, r7, #24
 14495 08ba 1946     		mov	r1, r3
 14496 08bc 7869     		ldr	r0, [r7, #20]
 14497 08be FFF7FEFF 		bl	strcat
 14498 08c2 6DE0     		b	.L557
 14499              	.L646:
 14500              		.align	2
 14501              	.L645:
 14502 08c4 00000000 		.word	g_meas
 14503 08c8 98100000 		.word	.LC161
 14504 08cc 9C100000 		.word	.LC162
 14505 08d0 AC0E0000 		.word	.LC132
 14506 08d4 00000000 		.word	dev_tension
 14507 08d8 A0100000 		.word	.LC163
 14508 08dc 00000000 		.word	pow_tension
 14509 08e0 C0100000 		.word	.LC164
 14510 08e4 E8100000 		.word	.LC165
 14511 08e8 00110000 		.word	.LC166
 14512 08ec 28110000 		.word	.LC167
 14513 08f0 44110000 		.word	.LC168
 14514 08f4 0000F040 		.word	1089470464
 14515 08f8 58110000 		.word	.LC169
 14516 08fc 64110000 		.word	.LC170
 14517 0900 70110000 		.word	.LC171
 14518              	.L556:
1910:..\src/command_processing.c ****             }
1911:..\src/command_processing.c ****             else { 
1912:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 14519              		.loc 1 1912 0
 14520 0904 D7F88030 		ldr	r3, [r7, #128]
 14521 0908 9B69     		ldr	r3, [r3, #24]
 14522 090a 1846     		mov	r0, r3
 14523 090c FFF7FEFF 		bl	__aeabi_i2d
 14524 0910 4FF00002 		mov	r2, #0
 14525 0914 CD4B     		ldr	r3, .L647
 14526 0916 FFF7FEFF 		bl	__aeabi_ddiv
 14527 091a 0346     		mov	r3, r0
 14528 091c 0C46     		mov	r4, r1
 14529 091e 07F11800 		add	r0, r7, #24
 14530 0922 1A46     		mov	r2, r3
 14531 0924 2346     		mov	r3, r4
 14532 0926 CA49     		ldr	r1, .L647+4
 14533 0928 FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 327


 14534              		.loc 1 1913 0
 14535 092c 07F11803 		add	r3, r7, #24
 14536 0930 1946     		mov	r1, r3
 14537 0932 7869     		ldr	r0, [r7, #20]
 14538 0934 FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 14539              		.loc 1 1914 0
 14540 0938 D7F88030 		ldr	r3, [r7, #128]
 14541 093c DB69     		ldr	r3, [r3, #28]
 14542 093e 1846     		mov	r0, r3
 14543 0940 FFF7FEFF 		bl	__aeabi_i2d
 14544 0944 4FF00002 		mov	r2, #0
 14545 0948 C04B     		ldr	r3, .L647
 14546 094a FFF7FEFF 		bl	__aeabi_ddiv
 14547 094e 0346     		mov	r3, r0
 14548 0950 0C46     		mov	r4, r1
 14549 0952 07F11800 		add	r0, r7, #24
 14550 0956 1A46     		mov	r2, r3
 14551 0958 2346     		mov	r3, r4
 14552 095a BE49     		ldr	r1, .L647+8
 14553 095c FFF7FEFF 		bl	sprintf
1915:..\src/command_processing.c ****                 strcat(info_string, str);
 14554              		.loc 1 1915 0
 14555 0960 07F11803 		add	r3, r7, #24
 14556 0964 1946     		mov	r1, r3
 14557 0966 7869     		ldr	r0, [r7, #20]
 14558 0968 FFF7FEFF 		bl	strcat
1916:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 14559              		.loc 1 1916 0
 14560 096c D7F88030 		ldr	r3, [r7, #128]
 14561 0970 1B6A     		ldr	r3, [r3, #32]
 14562 0972 1846     		mov	r0, r3
 14563 0974 FFF7FEFF 		bl	__aeabi_i2d
 14564 0978 4FF00002 		mov	r2, #0
 14565 097c B34B     		ldr	r3, .L647
 14566 097e FFF7FEFF 		bl	__aeabi_ddiv
 14567 0982 0346     		mov	r3, r0
 14568 0984 0C46     		mov	r4, r1
 14569 0986 07F11800 		add	r0, r7, #24
 14570 098a 1A46     		mov	r2, r3
 14571 098c 2346     		mov	r3, r4
 14572 098e B249     		ldr	r1, .L647+12
 14573 0990 FFF7FEFF 		bl	sprintf
1917:..\src/command_processing.c ****                 strcat(info_string, str);
 14574              		.loc 1 1917 0
 14575 0994 07F11803 		add	r3, r7, #24
 14576 0998 1946     		mov	r1, r3
 14577 099a 7869     		ldr	r0, [r7, #20]
 14578 099c FFF7FEFF 		bl	strcat
 14579              	.L557:
1918:..\src/command_processing.c ****             }
1919:..\src/command_processing.c **** 
1920:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 14580              		.loc 1 1920 0
 14581 09a0 7869     		ldr	r0, [r7, #20]
 14582 09a2 FFF7FEFF 		bl	strlen
 14583 09a6 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 328


 14584 09a8 1A46     		mov	r2, r3
 14585 09aa 7B69     		ldr	r3, [r7, #20]
 14586 09ac 1344     		add	r3, r3, r2
 14587 09ae AB4A     		ldr	r2, .L647+16
 14588 09b0 1D46     		mov	r5, r3
 14589 09b2 1446     		mov	r4, r2
 14590 09b4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14591 09b6 2860     		str	r0, [r5]	@ unaligned
 14592 09b8 6960     		str	r1, [r5, #4]	@ unaligned
 14593 09ba AA60     		str	r2, [r5, #8]	@ unaligned
 14594 09bc EB60     		str	r3, [r5, #12]	@ unaligned
 14595 09be 03CC     		ldmia	r4!, {r0, r1}
 14596 09c0 2861     		str	r0, [r5, #16]	@ unaligned
 14597 09c2 6961     		str	r1, [r5, #20]	@ unaligned
 14598 09c4 2378     		ldrb	r3, [r4]
 14599 09c6 2B76     		strb	r3, [r5, #24]
1921:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 14600              		.loc 1 1921 0
 14601 09c8 D7F88030 		ldr	r3, [r7, #128]
 14602 09cc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14603 09d0 032B     		cmp	r3, #3
 14604 09d2 4ED0     		beq	.L558
1922:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 14605              		.loc 1 1922 0
 14606 09d4 D7F88030 		ldr	r3, [r7, #128]
 14607 09d8 DB68     		ldr	r3, [r3, #12]
 14608 09da 1846     		mov	r0, r3
 14609 09dc FFF7FEFF 		bl	__aeabi_i2d
 14610 09e0 4FF00002 		mov	r2, #0
 14611 09e4 994B     		ldr	r3, .L647
 14612 09e6 FFF7FEFF 		bl	__aeabi_ddiv
 14613 09ea 0346     		mov	r3, r0
 14614 09ec 0C46     		mov	r4, r1
 14615 09ee 07F11800 		add	r0, r7, #24
 14616 09f2 1A46     		mov	r2, r3
 14617 09f4 2346     		mov	r3, r4
 14618 09f6 9649     		ldr	r1, .L647+4
 14619 09f8 FFF7FEFF 		bl	sprintf
1923:..\src/command_processing.c ****                 strcat(info_string, str);
 14620              		.loc 1 1923 0
 14621 09fc 07F11803 		add	r3, r7, #24
 14622 0a00 1946     		mov	r1, r3
 14623 0a02 7869     		ldr	r0, [r7, #20]
 14624 0a04 FFF7FEFF 		bl	strcat
1924:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 14625              		.loc 1 1924 0
 14626 0a08 D7F88030 		ldr	r3, [r7, #128]
 14627 0a0c 1B69     		ldr	r3, [r3, #16]
 14628 0a0e 1846     		mov	r0, r3
 14629 0a10 FFF7FEFF 		bl	__aeabi_i2d
 14630 0a14 4FF00002 		mov	r2, #0
 14631 0a18 8C4B     		ldr	r3, .L647
 14632 0a1a FFF7FEFF 		bl	__aeabi_ddiv
 14633 0a1e 0346     		mov	r3, r0
 14634 0a20 0C46     		mov	r4, r1
 14635 0a22 07F11800 		add	r0, r7, #24
 14636 0a26 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 329


 14637 0a28 2346     		mov	r3, r4
 14638 0a2a 8A49     		ldr	r1, .L647+8
 14639 0a2c FFF7FEFF 		bl	sprintf
1925:..\src/command_processing.c ****                 strcat(info_string, str);
 14640              		.loc 1 1925 0
 14641 0a30 07F11803 		add	r3, r7, #24
 14642 0a34 1946     		mov	r1, r3
 14643 0a36 7869     		ldr	r0, [r7, #20]
 14644 0a38 FFF7FEFF 		bl	strcat
1926:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 14645              		.loc 1 1926 0
 14646 0a3c D7F88030 		ldr	r3, [r7, #128]
 14647 0a40 5B69     		ldr	r3, [r3, #20]
 14648 0a42 1846     		mov	r0, r3
 14649 0a44 FFF7FEFF 		bl	__aeabi_i2d
 14650 0a48 4FF00002 		mov	r2, #0
 14651 0a4c 7F4B     		ldr	r3, .L647
 14652 0a4e FFF7FEFF 		bl	__aeabi_ddiv
 14653 0a52 0346     		mov	r3, r0
 14654 0a54 0C46     		mov	r4, r1
 14655 0a56 07F11800 		add	r0, r7, #24
 14656 0a5a 1A46     		mov	r2, r3
 14657 0a5c 2346     		mov	r3, r4
 14658 0a5e 7E49     		ldr	r1, .L647+12
 14659 0a60 FFF7FEFF 		bl	sprintf
1927:..\src/command_processing.c ****                 strcat(info_string, str);
 14660              		.loc 1 1927 0
 14661 0a64 07F11803 		add	r3, r7, #24
 14662 0a68 1946     		mov	r1, r3
 14663 0a6a 7869     		ldr	r0, [r7, #20]
 14664 0a6c FFF7FEFF 		bl	strcat
 14665 0a70 4DE0     		b	.L559
 14666              	.L558:
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****             }
1930:..\src/command_processing.c ****             else {
1931:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 14667              		.loc 1 1931 0
 14668 0a72 D7F88030 		ldr	r3, [r7, #128]
 14669 0a76 5B6A     		ldr	r3, [r3, #36]
 14670 0a78 1846     		mov	r0, r3
 14671 0a7a FFF7FEFF 		bl	__aeabi_i2d
 14672 0a7e 4FF00002 		mov	r2, #0
 14673 0a82 724B     		ldr	r3, .L647
 14674 0a84 FFF7FEFF 		bl	__aeabi_ddiv
 14675 0a88 0346     		mov	r3, r0
 14676 0a8a 0C46     		mov	r4, r1
 14677 0a8c 07F11800 		add	r0, r7, #24
 14678 0a90 1A46     		mov	r2, r3
 14679 0a92 2346     		mov	r3, r4
 14680 0a94 6E49     		ldr	r1, .L647+4
 14681 0a96 FFF7FEFF 		bl	sprintf
1932:..\src/command_processing.c ****                 strcat(info_string, str);
 14682              		.loc 1 1932 0
 14683 0a9a 07F11803 		add	r3, r7, #24
 14684 0a9e 1946     		mov	r1, r3
 14685 0aa0 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 330


 14686 0aa2 FFF7FEFF 		bl	strcat
1933:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 14687              		.loc 1 1933 0
 14688 0aa6 D7F88030 		ldr	r3, [r7, #128]
 14689 0aaa 9B6A     		ldr	r3, [r3, #40]
 14690 0aac 1846     		mov	r0, r3
 14691 0aae FFF7FEFF 		bl	__aeabi_i2d
 14692 0ab2 4FF00002 		mov	r2, #0
 14693 0ab6 654B     		ldr	r3, .L647
 14694 0ab8 FFF7FEFF 		bl	__aeabi_ddiv
 14695 0abc 0346     		mov	r3, r0
 14696 0abe 0C46     		mov	r4, r1
 14697 0ac0 07F11800 		add	r0, r7, #24
 14698 0ac4 1A46     		mov	r2, r3
 14699 0ac6 2346     		mov	r3, r4
 14700 0ac8 6249     		ldr	r1, .L647+8
 14701 0aca FFF7FEFF 		bl	sprintf
1934:..\src/command_processing.c ****                 strcat(info_string, str);
 14702              		.loc 1 1934 0
 14703 0ace 07F11803 		add	r3, r7, #24
 14704 0ad2 1946     		mov	r1, r3
 14705 0ad4 7869     		ldr	r0, [r7, #20]
 14706 0ad6 FFF7FEFF 		bl	strcat
1935:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 14707              		.loc 1 1935 0
 14708 0ada D7F88030 		ldr	r3, [r7, #128]
 14709 0ade DB6A     		ldr	r3, [r3, #44]
 14710 0ae0 1846     		mov	r0, r3
 14711 0ae2 FFF7FEFF 		bl	__aeabi_i2d
 14712 0ae6 4FF00002 		mov	r2, #0
 14713 0aea 584B     		ldr	r3, .L647
 14714 0aec FFF7FEFF 		bl	__aeabi_ddiv
 14715 0af0 0346     		mov	r3, r0
 14716 0af2 0C46     		mov	r4, r1
 14717 0af4 07F11800 		add	r0, r7, #24
 14718 0af8 1A46     		mov	r2, r3
 14719 0afa 2346     		mov	r3, r4
 14720 0afc 5649     		ldr	r1, .L647+12
 14721 0afe FFF7FEFF 		bl	sprintf
1936:..\src/command_processing.c ****                 strcat(info_string, str);
 14722              		.loc 1 1936 0
 14723 0b02 07F11803 		add	r3, r7, #24
 14724 0b06 1946     		mov	r1, r3
 14725 0b08 7869     		ldr	r0, [r7, #20]
 14726 0b0a FFF7FEFF 		bl	strcat
 14727              	.L559:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 14728              		.loc 1 1938 0
 14729 0b0e D7F88030 		ldr	r3, [r7, #128]
 14730 0b12 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 14731 0b16 012B     		cmp	r3, #1
 14732 0b18 14D1     		bne	.L560
1939:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 14733              		.loc 1 1939 0
 14734 0b1a 7869     		ldr	r0, [r7, #20]
 14735 0b1c FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 331


 14736 0b20 0346     		mov	r3, r0
 14737 0b22 1A46     		mov	r2, r3
 14738 0b24 7B69     		ldr	r3, [r7, #20]
 14739 0b26 1344     		add	r3, r3, r2
 14740 0b28 4D4A     		ldr	r2, .L647+20
 14741 0b2a 1D46     		mov	r5, r3
 14742 0b2c 1446     		mov	r4, r2
 14743 0b2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14744 0b30 2860     		str	r0, [r5]	@ unaligned
 14745 0b32 6960     		str	r1, [r5, #4]	@ unaligned
 14746 0b34 AA60     		str	r2, [r5, #8]	@ unaligned
 14747 0b36 EB60     		str	r3, [r5, #12]	@ unaligned
 14748 0b38 03CC     		ldmia	r4!, {r0, r1}
 14749 0b3a 2861     		str	r0, [r5, #16]	@ unaligned
 14750 0b3c 6961     		str	r1, [r5, #20]	@ unaligned
 14751 0b3e 2388     		ldrh	r3, [r4]	@ unaligned
 14752 0b40 2B83     		strh	r3, [r5, #24]	@ unaligned
 14753 0b42 13E0     		b	.L561
 14754              	.L560:
1940:..\src/command_processing.c ****             else
1941:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 14755              		.loc 1 1941 0
 14756 0b44 7869     		ldr	r0, [r7, #20]
 14757 0b46 FFF7FEFF 		bl	strlen
 14758 0b4a 0346     		mov	r3, r0
 14759 0b4c 1A46     		mov	r2, r3
 14760 0b4e 7B69     		ldr	r3, [r7, #20]
 14761 0b50 1344     		add	r3, r3, r2
 14762 0b52 444A     		ldr	r2, .L647+24
 14763 0b54 1D46     		mov	r5, r3
 14764 0b56 1446     		mov	r4, r2
 14765 0b58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14766 0b5a 2860     		str	r0, [r5]	@ unaligned
 14767 0b5c 6960     		str	r1, [r5, #4]	@ unaligned
 14768 0b5e AA60     		str	r2, [r5, #8]	@ unaligned
 14769 0b60 EB60     		str	r3, [r5, #12]	@ unaligned
 14770 0b62 03CC     		ldmia	r4!, {r0, r1}
 14771 0b64 2861     		str	r0, [r5, #16]	@ unaligned
 14772 0b66 6961     		str	r1, [r5, #20]	@ unaligned
 14773 0b68 2378     		ldrb	r3, [r4]
 14774 0b6a 2B76     		strb	r3, [r5, #24]
 14775              	.L561:
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****             switch(MOT->input_mode) {
 14776              		.loc 1 1943 0
 14777 0b6c D7F88030 		ldr	r3, [r7, #128]
 14778 0b70 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 14779 0b74 062B     		cmp	r3, #6
 14780 0b76 00F2D180 		bhi	.L562
 14781 0b7a 01A2     		adr	r2, .L564
 14782 0b7c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14783              		.p2align 2
 14784              	.L564:
 14785 0b80 9D0B0000 		.word	.L563+1
 14786 0b84 C10B0000 		.word	.L565+1
 14787 0b88 E90B0000 		.word	.L566+1
 14788 0b8c 1B0C0000 		.word	.L567+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 332


 14789 0b90 790C0000 		.word	.L568+1
 14790 0b94 A70C0000 		.word	.L569+1
 14791 0b98 D70C0000 		.word	.L570+1
 14792              		.p2align 1
 14793              	.L563:
1944:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1945:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 14794              		.loc 1 1945 0
 14795 0b9c 7869     		ldr	r0, [r7, #20]
 14796 0b9e FFF7FEFF 		bl	strlen
 14797 0ba2 0346     		mov	r3, r0
 14798 0ba4 1A46     		mov	r2, r3
 14799 0ba6 7B69     		ldr	r3, [r7, #20]
 14800 0ba8 1344     		add	r3, r3, r2
 14801 0baa 2F4A     		ldr	r2, .L647+28
 14802 0bac 1D46     		mov	r5, r3
 14803 0bae 1446     		mov	r4, r2
 14804 0bb0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14805 0bb2 2860     		str	r0, [r5]	@ unaligned
 14806 0bb4 6960     		str	r1, [r5, #4]	@ unaligned
 14807 0bb6 AA60     		str	r2, [r5, #8]	@ unaligned
 14808 0bb8 EB60     		str	r3, [r5, #12]	@ unaligned
 14809 0bba 2388     		ldrh	r3, [r4]	@ unaligned
 14810 0bbc 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                     break;
 14811              		.loc 1 1946 0
 14812 0bbe ADE0     		b	.L562
 14813              	.L565:
1947:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1948:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 14814              		.loc 1 1948 0
 14815 0bc0 7869     		ldr	r0, [r7, #20]
 14816 0bc2 FFF7FEFF 		bl	strlen
 14817 0bc6 0346     		mov	r3, r0
 14818 0bc8 1A46     		mov	r2, r3
 14819 0bca 7B69     		ldr	r3, [r7, #20]
 14820 0bcc 1344     		add	r3, r3, r2
 14821 0bce 274A     		ldr	r2, .L647+32
 14822 0bd0 1D46     		mov	r5, r3
 14823 0bd2 1446     		mov	r4, r2
 14824 0bd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14825 0bd6 2860     		str	r0, [r5]	@ unaligned
 14826 0bd8 6960     		str	r1, [r5, #4]	@ unaligned
 14827 0bda AA60     		str	r2, [r5, #8]	@ unaligned
 14828 0bdc EB60     		str	r3, [r5, #12]	@ unaligned
 14829 0bde 2068     		ldr	r0, [r4]	@ unaligned
 14830 0be0 2861     		str	r0, [r5, #16]	@ unaligned
 14831 0be2 2379     		ldrb	r3, [r4, #4]
 14832 0be4 2B75     		strb	r3, [r5, #20]
1949:..\src/command_processing.c ****                     break;
 14833              		.loc 1 1949 0
 14834 0be6 99E0     		b	.L562
 14835              	.L566:
1950:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1951:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 14836              		.loc 1 1951 0
 14837 0be8 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 333


 14838 0bea FFF7FEFF 		bl	strlen
 14839 0bee 0346     		mov	r3, r0
 14840 0bf0 1A46     		mov	r2, r3
 14841 0bf2 7B69     		ldr	r3, [r7, #20]
 14842 0bf4 1344     		add	r3, r3, r2
 14843 0bf6 1E4A     		ldr	r2, .L647+36
 14844 0bf8 1D46     		mov	r5, r3
 14845 0bfa 1446     		mov	r4, r2
 14846 0bfc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14847 0bfe 2860     		str	r0, [r5]	@ unaligned
 14848 0c00 6960     		str	r1, [r5, #4]	@ unaligned
 14849 0c02 AA60     		str	r2, [r5, #8]	@ unaligned
 14850 0c04 EB60     		str	r3, [r5, #12]	@ unaligned
 14851 0c06 07CC     		ldmia	r4!, {r0, r1, r2}
 14852 0c08 2861     		str	r0, [r5, #16]	@ unaligned
 14853 0c0a 6961     		str	r1, [r5, #20]	@ unaligned
 14854 0c0c AA61     		str	r2, [r5, #24]	@ unaligned
 14855 0c0e 2388     		ldrh	r3, [r4]	@ unaligned
 14856 0c10 A278     		ldrb	r2, [r4, #2]
 14857 0c12 AB83     		strh	r3, [r5, #28]	@ unaligned
 14858 0c14 1346     		mov	r3, r2
 14859 0c16 AB77     		strb	r3, [r5, #30]
1952:..\src/command_processing.c ****                     break;
 14860              		.loc 1 1952 0
 14861 0c18 80E0     		b	.L562
 14862              	.L567:
1953:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1954:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 14863              		.loc 1 1954 0
 14864 0c1a 7869     		ldr	r0, [r7, #20]
 14865 0c1c FFF7FEFF 		bl	strlen
 14866 0c20 0346     		mov	r3, r0
 14867 0c22 1A46     		mov	r2, r3
 14868 0c24 7B69     		ldr	r3, [r7, #20]
 14869 0c26 1344     		add	r3, r3, r2
 14870 0c28 124A     		ldr	r2, .L647+40
 14871 0c2a 1D46     		mov	r5, r3
 14872 0c2c 1446     		mov	r4, r2
 14873 0c2e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14874 0c30 2860     		str	r0, [r5]	@ unaligned
 14875 0c32 6960     		str	r1, [r5, #4]	@ unaligned
 14876 0c34 AA60     		str	r2, [r5, #8]	@ unaligned
 14877 0c36 EB60     		str	r3, [r5, #12]	@ unaligned
 14878 0c38 03CC     		ldmia	r4!, {r0, r1}
 14879 0c3a 2861     		str	r0, [r5, #16]	@ unaligned
 14880 0c3c 6961     		str	r1, [r5, #20]	@ unaligned
 14881 0c3e 2388     		ldrh	r3, [r4]	@ unaligned
 14882 0c40 A278     		ldrb	r2, [r4, #2]
 14883 0c42 2B83     		strh	r3, [r5, #24]	@ unaligned
 14884 0c44 1346     		mov	r3, r2
 14885 0c46 AB76     		strb	r3, [r5, #26]
1955:..\src/command_processing.c ****                     break;
 14886              		.loc 1 1955 0
 14887 0c48 68E0     		b	.L562
 14888              	.L648:
 14889 0c4a 00BF     		.align	2
 14890              	.L647:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 334


 14891 0c4c 0000F040 		.word	1089470464
 14892 0c50 58110000 		.word	.LC169
 14893 0c54 64110000 		.word	.LC170
 14894 0c58 70110000 		.word	.LC171
 14895 0c5c 7C110000 		.word	.LC172
 14896 0c60 98110000 		.word	.LC173
 14897 0c64 B4110000 		.word	.LC174
 14898 0c68 D0110000 		.word	.LC175
 14899 0c6c E4110000 		.word	.LC176
 14900 0c70 FC110000 		.word	.LC177
 14901 0c74 1C120000 		.word	.LC178
 14902              	.L568:
1956:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1957:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 14903              		.loc 1 1957 0
 14904 0c78 7869     		ldr	r0, [r7, #20]
 14905 0c7a FFF7FEFF 		bl	strlen
 14906 0c7e 0346     		mov	r3, r0
 14907 0c80 1A46     		mov	r2, r3
 14908 0c82 7B69     		ldr	r3, [r7, #20]
 14909 0c84 1344     		add	r3, r3, r2
 14910 0c86 994A     		ldr	r2, .L649
 14911 0c88 1C46     		mov	r4, r3
 14912 0c8a 1546     		mov	r5, r2
 14913 0c8c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14914 0c8e 2060     		str	r0, [r4]	@ unaligned
 14915 0c90 6160     		str	r1, [r4, #4]	@ unaligned
 14916 0c92 A260     		str	r2, [r4, #8]	@ unaligned
 14917 0c94 E360     		str	r3, [r4, #12]	@ unaligned
 14918 0c96 2868     		ldr	r0, [r5]	@ unaligned
 14919 0c98 2061     		str	r0, [r4, #16]	@ unaligned
 14920 0c9a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14921 0c9c AA79     		ldrb	r2, [r5, #6]
 14922 0c9e A382     		strh	r3, [r4, #20]	@ unaligned
 14923 0ca0 1346     		mov	r3, r2
 14924 0ca2 A375     		strb	r3, [r4, #22]
1958:..\src/command_processing.c ****                     break;
 14925              		.loc 1 1958 0
 14926 0ca4 3AE0     		b	.L562
 14927              	.L569:
1959:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1960:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 14928              		.loc 1 1960 0
 14929 0ca6 7869     		ldr	r0, [r7, #20]
 14930 0ca8 FFF7FEFF 		bl	strlen
 14931 0cac 0346     		mov	r3, r0
 14932 0cae 1A46     		mov	r2, r3
 14933 0cb0 7B69     		ldr	r3, [r7, #20]
 14934 0cb2 1344     		add	r3, r3, r2
 14935 0cb4 8E4A     		ldr	r2, .L649+4
 14936 0cb6 1D46     		mov	r5, r3
 14937 0cb8 1446     		mov	r4, r2
 14938 0cba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14939 0cbc 2860     		str	r0, [r5]	@ unaligned
 14940 0cbe 6960     		str	r1, [r5, #4]	@ unaligned
 14941 0cc0 AA60     		str	r2, [r5, #8]	@ unaligned
 14942 0cc2 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 335


 14943 0cc4 03CC     		ldmia	r4!, {r0, r1}
 14944 0cc6 2861     		str	r0, [r5, #16]	@ unaligned
 14945 0cc8 6961     		str	r1, [r5, #20]	@ unaligned
 14946 0cca 2388     		ldrh	r3, [r4]	@ unaligned
 14947 0ccc A278     		ldrb	r2, [r4, #2]
 14948 0cce 2B83     		strh	r3, [r5, #24]	@ unaligned
 14949 0cd0 1346     		mov	r3, r2
 14950 0cd2 AB76     		strb	r3, [r5, #26]
1961:..\src/command_processing.c ****                     break;
 14951              		.loc 1 1961 0
 14952 0cd4 22E0     		b	.L562
 14953              	.L570:
1962:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1963:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 14954              		.loc 1 1963 0
 14955 0cd6 7869     		ldr	r0, [r7, #20]
 14956 0cd8 FFF7FEFF 		bl	strlen
 14957 0cdc 0346     		mov	r3, r0
 14958 0cde 1A46     		mov	r2, r3
 14959 0ce0 7B69     		ldr	r3, [r7, #20]
 14960 0ce2 1344     		add	r3, r3, r2
 14961 0ce4 834A     		ldr	r2, .L649+8
 14962 0ce6 1546     		mov	r5, r2
 14963 0ce8 9E46     		mov	lr, r3
 14964 0cea 05F1200C 		add	ip, r5, #32
 14965              	.L571:
 14966 0cee 7446     		mov	r4, lr
 14967 0cf0 2E46     		mov	r6, r5
 14968 0cf2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14969 0cf4 2060     		str	r0, [r4]	@ unaligned
 14970 0cf6 6160     		str	r1, [r4, #4]	@ unaligned
 14971 0cf8 A260     		str	r2, [r4, #8]	@ unaligned
 14972 0cfa E360     		str	r3, [r4, #12]	@ unaligned
 14973 0cfc 1035     		adds	r5, r5, #16
 14974 0cfe 0EF1100E 		add	lr, lr, #16
 14975 0d02 6545     		cmp	r5, ip
 14976 0d04 F3D1     		bne	.L571
 14977 0d06 7446     		mov	r4, lr
 14978 0d08 2B46     		mov	r3, r5
 14979 0d0a 07CB     		ldmia	r3!, {r0, r1, r2}
 14980 0d0c 2060     		str	r0, [r4]	@ unaligned
 14981 0d0e 6160     		str	r1, [r4, #4]	@ unaligned
 14982 0d10 A260     		str	r2, [r4, #8]	@ unaligned
 14983 0d12 1A88     		ldrh	r2, [r3]	@ unaligned
 14984 0d14 9B78     		ldrb	r3, [r3, #2]
 14985 0d16 A281     		strh	r2, [r4, #12]	@ unaligned
 14986 0d18 A373     		strb	r3, [r4, #14]
1964:..\src/command_processing.c ****                     break;
 14987              		.loc 1 1964 0
 14988 0d1a 00BF     		nop
 14989              	.L562:
1965:..\src/command_processing.c ****             }
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14990              		.loc 1 1967 0
 14991 0d1c D7F88030 		ldr	r3, [r7, #128]
 14992 0d20 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 336


 14993 0d24 032B     		cmp	r3, #3
 14994 0d26 64D8     		bhi	.L640
 14995 0d28 01A2     		adr	r2, .L574
 14996 0d2a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14997 0d2e 00BF     		.p2align 2
 14998              	.L574:
 14999 0d30 410D0000 		.word	.L573+1
 15000 0d34 6B0D0000 		.word	.L575+1
 15001 0d38 8F0D0000 		.word	.L576+1
 15002 0d3c B50D0000 		.word	.L577+1
 15003              		.p2align 1
 15004              	.L573:
1968:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1969:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15005              		.loc 1 1969 0
 15006 0d40 7869     		ldr	r0, [r7, #20]
 15007 0d42 FFF7FEFF 		bl	strlen
 15008 0d46 0346     		mov	r3, r0
 15009 0d48 1A46     		mov	r2, r3
 15010 0d4a 7B69     		ldr	r3, [r7, #20]
 15011 0d4c 1344     		add	r3, r3, r2
 15012 0d4e 6A4A     		ldr	r2, .L649+12
 15013 0d50 1D46     		mov	r5, r3
 15014 0d52 1446     		mov	r4, r2
 15015 0d54 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15016 0d56 2860     		str	r0, [r5]	@ unaligned
 15017 0d58 6960     		str	r1, [r5, #4]	@ unaligned
 15018 0d5a AA60     		str	r2, [r5, #8]	@ unaligned
 15019 0d5c EB60     		str	r3, [r5, #12]	@ unaligned
 15020 0d5e 03CC     		ldmia	r4!, {r0, r1}
 15021 0d60 2861     		str	r0, [r5, #16]	@ unaligned
 15022 0d62 6961     		str	r1, [r5, #20]	@ unaligned
 15023 0d64 2378     		ldrb	r3, [r4]
 15024 0d66 2B76     		strb	r3, [r5, #24]
1970:..\src/command_processing.c ****                     break;
 15025              		.loc 1 1970 0
 15026 0d68 44E0     		b	.L578
 15027              	.L575:
1971:..\src/command_processing.c ****                 case CONTROL_PWM:
1972:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15028              		.loc 1 1972 0
 15029 0d6a 7869     		ldr	r0, [r7, #20]
 15030 0d6c FFF7FEFF 		bl	strlen
 15031 0d70 0346     		mov	r3, r0
 15032 0d72 1A46     		mov	r2, r3
 15033 0d74 7B69     		ldr	r3, [r7, #20]
 15034 0d76 1344     		add	r3, r3, r2
 15035 0d78 604A     		ldr	r2, .L649+16
 15036 0d7a 1D46     		mov	r5, r3
 15037 0d7c 1446     		mov	r4, r2
 15038 0d7e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15039 0d80 2860     		str	r0, [r5]	@ unaligned
 15040 0d82 6960     		str	r1, [r5, #4]	@ unaligned
 15041 0d84 AA60     		str	r2, [r5, #8]	@ unaligned
 15042 0d86 EB60     		str	r3, [r5, #12]	@ unaligned
 15043 0d88 2068     		ldr	r0, [r4]	@ unaligned
 15044 0d8a 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 337


1973:..\src/command_processing.c ****                     break;
 15045              		.loc 1 1973 0
 15046 0d8c 32E0     		b	.L578
 15047              	.L576:
1974:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1975:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15048              		.loc 1 1975 0
 15049 0d8e 7869     		ldr	r0, [r7, #20]
 15050 0d90 FFF7FEFF 		bl	strlen
 15051 0d94 0346     		mov	r3, r0
 15052 0d96 1A46     		mov	r2, r3
 15053 0d98 7B69     		ldr	r3, [r7, #20]
 15054 0d9a 1344     		add	r3, r3, r2
 15055 0d9c 584A     		ldr	r2, .L649+20
 15056 0d9e 1D46     		mov	r5, r3
 15057 0da0 1446     		mov	r4, r2
 15058 0da2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15059 0da4 2860     		str	r0, [r5]	@ unaligned
 15060 0da6 6960     		str	r1, [r5, #4]	@ unaligned
 15061 0da8 AA60     		str	r2, [r5, #8]	@ unaligned
 15062 0daa EB60     		str	r3, [r5, #12]	@ unaligned
 15063 0dac 03CC     		ldmia	r4!, {r0, r1}
 15064 0dae 2861     		str	r0, [r5, #16]	@ unaligned
 15065 0db0 6961     		str	r1, [r5, #20]	@ unaligned
1976:..\src/command_processing.c ****                     break;
 15066              		.loc 1 1976 0
 15067 0db2 1FE0     		b	.L578
 15068              	.L577:
1977:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1978:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15069              		.loc 1 1978 0
 15070 0db4 7869     		ldr	r0, [r7, #20]
 15071 0db6 FFF7FEFF 		bl	strlen
 15072 0dba 0346     		mov	r3, r0
 15073 0dbc 1A46     		mov	r2, r3
 15074 0dbe 7B69     		ldr	r3, [r7, #20]
 15075 0dc0 1344     		add	r3, r3, r2
 15076 0dc2 504A     		ldr	r2, .L649+24
 15077 0dc4 1446     		mov	r4, r2
 15078 0dc6 9E46     		mov	lr, r3
 15079 0dc8 04F1200C 		add	ip, r4, #32
 15080              	.L579:
 15081 0dcc 7546     		mov	r5, lr
 15082 0dce 2646     		mov	r6, r4
 15083 0dd0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15084 0dd2 2860     		str	r0, [r5]	@ unaligned
 15085 0dd4 6960     		str	r1, [r5, #4]	@ unaligned
 15086 0dd6 AA60     		str	r2, [r5, #8]	@ unaligned
 15087 0dd8 EB60     		str	r3, [r5, #12]	@ unaligned
 15088 0dda 1034     		adds	r4, r4, #16
 15089 0ddc 0EF1100E 		add	lr, lr, #16
 15090 0de0 6445     		cmp	r4, ip
 15091 0de2 F3D1     		bne	.L579
 15092 0de4 7346     		mov	r3, lr
 15093 0de6 2246     		mov	r2, r4
 15094 0de8 1068     		ldr	r0, [r2]	@ unaligned
 15095 0dea 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 338


 15096 0dec 1279     		ldrb	r2, [r2, #4]
 15097 0dee 1A71     		strb	r2, [r3, #4]
1979:..\src/command_processing.c ****                     break;
 15098              		.loc 1 1979 0
 15099 0df0 00E0     		b	.L578
 15100              	.L640:
1980:..\src/command_processing.c ****                 default:
1981:..\src/command_processing.c ****                     break;
 15101              		.loc 1 1981 0
 15102 0df2 00BF     		nop
 15103              	.L578:
1982:..\src/command_processing.c ****             }
1983:..\src/command_processing.c **** 
1984:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15104              		.loc 1 1984 0
 15105 0df4 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15106 0df8 D7F88810 		ldr	r1, [r7, #136]
 15107 0dfc 1346     		mov	r3, r2
 15108 0dfe 5B00     		lsls	r3, r3, #1
 15109 0e00 1344     		add	r3, r3, r2
 15110 0e02 1B01     		lsls	r3, r3, #4
 15111 0e04 0B44     		add	r3, r3, r1
 15112 0e06 03F5D873 		add	r3, r3, #432
 15113 0e0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15114 0e0c 002B     		cmp	r3, #0
 15115 0e0e 1CD0     		beq	.L580
1985:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15116              		.loc 1 1985 0
 15117 0e10 7869     		ldr	r0, [r7, #20]
 15118 0e12 FFF7FEFF 		bl	strlen
 15119 0e16 0346     		mov	r3, r0
 15120 0e18 1A46     		mov	r2, r3
 15121 0e1a 7B69     		ldr	r3, [r7, #20]
 15122 0e1c 1344     		add	r3, r3, r2
 15123 0e1e 3A4A     		ldr	r2, .L649+28
 15124 0e20 1446     		mov	r4, r2
 15125 0e22 9E46     		mov	lr, r3
 15126 0e24 04F1200C 		add	ip, r4, #32
 15127              	.L581:
 15128 0e28 7546     		mov	r5, lr
 15129 0e2a 2646     		mov	r6, r4
 15130 0e2c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15131 0e2e 2860     		str	r0, [r5]	@ unaligned
 15132 0e30 6960     		str	r1, [r5, #4]	@ unaligned
 15133 0e32 AA60     		str	r2, [r5, #8]	@ unaligned
 15134 0e34 EB60     		str	r3, [r5, #12]	@ unaligned
 15135 0e36 1034     		adds	r4, r4, #16
 15136 0e38 0EF1100E 		add	lr, lr, #16
 15137 0e3c 6445     		cmp	r4, ip
 15138 0e3e F3D1     		bne	.L581
 15139 0e40 7346     		mov	r3, lr
 15140 0e42 2246     		mov	r2, r4
 15141 0e44 1278     		ldrb	r2, [r2]
 15142 0e46 1A70     		strb	r2, [r3]
 15143 0e48 13E0     		b	.L582
 15144              	.L580:
1986:..\src/command_processing.c ****             else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 339


1987:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15145              		.loc 1 1987 0
 15146 0e4a 7869     		ldr	r0, [r7, #20]
 15147 0e4c FFF7FEFF 		bl	strlen
 15148 0e50 0346     		mov	r3, r0
 15149 0e52 1A46     		mov	r2, r3
 15150 0e54 7B69     		ldr	r3, [r7, #20]
 15151 0e56 1344     		add	r3, r3, r2
 15152 0e58 2C4A     		ldr	r2, .L649+32
 15153 0e5a 1C46     		mov	r4, r3
 15154 0e5c 1546     		mov	r5, r2
 15155 0e5e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15156 0e60 2060     		str	r0, [r4]	@ unaligned
 15157 0e62 6160     		str	r1, [r4, #4]	@ unaligned
 15158 0e64 A260     		str	r2, [r4, #8]	@ unaligned
 15159 0e66 E360     		str	r3, [r4, #12]	@ unaligned
 15160 0e68 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15161 0e6a 2061     		str	r0, [r4, #16]	@ unaligned
 15162 0e6c 6161     		str	r1, [r4, #20]	@ unaligned
 15163 0e6e A261     		str	r2, [r4, #24]	@ unaligned
 15164 0e70 E361     		str	r3, [r4, #28]	@ unaligned
 15165              	.L582:
1988:..\src/command_processing.c **** 
1989:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15166              		.loc 1 1989 0
 15167 0e72 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15168 0e76 D7F88810 		ldr	r1, [r7, #136]
 15169 0e7a 1346     		mov	r3, r2
 15170 0e7c 5B00     		lsls	r3, r3, #1
 15171 0e7e 1344     		add	r3, r3, r2
 15172 0e80 1B01     		lsls	r3, r3, #4
 15173 0e82 0B44     		add	r3, r3, r1
 15174 0e84 03F5DA73 		add	r3, r3, #436
 15175 0e88 93F90030 		ldrsb	r3, [r3]
 15176 0e8c 1A46     		mov	r2, r3
 15177 0e8e 07F11803 		add	r3, r7, #24
 15178 0e92 1F49     		ldr	r1, .L649+36
 15179 0e94 1846     		mov	r0, r3
 15180 0e96 FFF7FEFF 		bl	sprintf
1990:..\src/command_processing.c ****             strcat(info_string, str);
 15181              		.loc 1 1990 0
 15182 0e9a 07F11803 		add	r3, r7, #24
 15183 0e9e 1946     		mov	r1, r3
 15184 0ea0 7869     		ldr	r0, [r7, #20]
 15185 0ea2 FFF7FEFF 		bl	strcat
1991:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1992:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 15186              		.loc 1 1992 0
 15187 0ea6 7869     		ldr	r0, [r7, #20]
 15188 0ea8 FFF7FEFF 		bl	strlen
 15189 0eac 0346     		mov	r3, r0
 15190 0eae 1A46     		mov	r2, r3
 15191 0eb0 7B69     		ldr	r3, [r7, #20]
 15192 0eb2 1344     		add	r3, r3, r2
 15193 0eb4 174A     		ldr	r2, .L649+40
 15194 0eb6 1446     		mov	r4, r2
 15195 0eb8 9E46     		mov	lr, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 340


 15196 0eba 04F1200C 		add	ip, r4, #32
 15197              	.L583:
 15198 0ebe 7546     		mov	r5, lr
 15199 0ec0 2646     		mov	r6, r4
 15200 0ec2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15201 0ec4 2860     		str	r0, [r5]	@ unaligned
 15202 0ec6 6960     		str	r1, [r5, #4]	@ unaligned
 15203 0ec8 AA60     		str	r2, [r5, #8]	@ unaligned
 15204 0eca EB60     		str	r3, [r5, #12]	@ unaligned
 15205 0ecc 1034     		adds	r4, r4, #16
 15206 0ece 0EF1100E 		add	lr, lr, #16
 15207 0ed2 6445     		cmp	r4, ip
 15208 0ed4 F3D1     		bne	.L583
 15209 0ed6 7246     		mov	r2, lr
 15210 0ed8 2346     		mov	r3, r4
 15211 0eda 03CB     		ldmia	r3!, {r0, r1}
 15212 0edc 1060     		str	r0, [r2]	@ unaligned
 15213 0ede 5160     		str	r1, [r2, #4]	@ unaligned
 15214 0ee0 1B78     		ldrb	r3, [r3]
 15215 0ee2 1372     		strb	r3, [r2, #8]
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15216              		.loc 1 1993 0
 15217 0ee4 0023     		movs	r3, #0
 15218 0ee6 C7F89430 		str	r3, [r7, #148]
 15219 0eea 46E0     		b	.L584
 15220              	.L650:
 15221              		.align	2
 15222              	.L649:
 15223 0eec 38120000 		.word	.LC179
 15224 0ef0 50120000 		.word	.LC180
 15225 0ef4 6C120000 		.word	.LC181
 15226 0ef8 9C120000 		.word	.LC182
 15227 0efc B8120000 		.word	.LC183
 15228 0f00 CC120000 		.word	.LC184
 15229 0f04 E4120000 		.word	.LC185
 15230 0f08 0C130000 		.word	.LC186
 15231 0f0c 30130000 		.word	.LC187
 15232 0f10 50130000 		.word	.LC188
 15233 0f14 6C130000 		.word	.LC189
 15234              	.L586:
1994:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15235              		.loc 1 1994 0
 15236 0f18 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15237 0f1c D7F88810 		ldr	r1, [r7, #136]
 15238 0f20 1346     		mov	r3, r2
 15239 0f22 5B00     		lsls	r3, r3, #1
 15240 0f24 1344     		add	r3, r3, r2
 15241 0f26 1B01     		lsls	r3, r3, #4
 15242 0f28 CA18     		adds	r2, r1, r3
 15243 0f2a D7F89430 		ldr	r3, [r7, #148]
 15244 0f2e 1344     		add	r3, r3, r2
 15245 0f30 03F2B113 		addw	r3, r3, #433
 15246 0f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15247 0f36 1A46     		mov	r2, r3
 15248 0f38 07F11803 		add	r3, r7, #24
 15249 0f3c AE49     		ldr	r1, .L651
 15250 0f3e 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 341


 15251 0f40 FFF7FEFF 		bl	sprintf
1995:..\src/command_processing.c ****                 strcat(info_string, str);
 15252              		.loc 1 1995 0
 15253 0f44 07F11803 		add	r3, r7, #24
 15254 0f48 1946     		mov	r1, r3
 15255 0f4a 7869     		ldr	r0, [r7, #20]
 15256 0f4c FFF7FEFF 		bl	strcat
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15257              		.loc 1 1996 0
 15258 0f50 D7F89430 		ldr	r3, [r7, #148]
 15259 0f54 022B     		cmp	r3, #2
 15260 0f56 0BD0     		beq	.L585
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15261              		.loc 1 1997 0
 15262 0f58 7869     		ldr	r0, [r7, #20]
 15263 0f5a FFF7FEFF 		bl	strlen
 15264 0f5e 0346     		mov	r3, r0
 15265 0f60 1A46     		mov	r2, r3
 15266 0f62 7B69     		ldr	r3, [r7, #20]
 15267 0f64 1344     		add	r3, r3, r2
 15268 0f66 A54A     		ldr	r2, .L651+4
 15269 0f68 1188     		ldrh	r1, [r2]	@ unaligned
 15270 0f6a 9278     		ldrb	r2, [r2, #2]
 15271 0f6c 1980     		strh	r1, [r3]	@ unaligned
 15272 0f6e 9A70     		strb	r2, [r3, #2]
 15273              	.L585:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15274              		.loc 1 1993 0 discriminator 2
 15275 0f70 D7F89430 		ldr	r3, [r7, #148]
 15276 0f74 0133     		adds	r3, r3, #1
 15277 0f76 C7F89430 		str	r3, [r7, #148]
 15278              	.L584:
1993:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 15279              		.loc 1 1993 0 is_stmt 0 discriminator 1
 15280 0f7a D7F89430 		ldr	r3, [r7, #148]
 15281 0f7e 022B     		cmp	r3, #2
 15282 0f80 CADD     		ble	.L586
1998:..\src/command_processing.c ****                 }                
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15283              		.loc 1 2000 0 is_stmt 1
 15284 0f82 7869     		ldr	r0, [r7, #20]
 15285 0f84 FFF7FEFF 		bl	strlen
 15286 0f88 0346     		mov	r3, r0
 15287 0f8a 1A46     		mov	r2, r3
 15288 0f8c 7B69     		ldr	r3, [r7, #20]
 15289 0f8e 1344     		add	r3, r3, r2
 15290 0f90 9B4A     		ldr	r2, .L651+8
 15291 0f92 1188     		ldrh	r1, [r2]	@ unaligned
 15292 0f94 9278     		ldrb	r2, [r2, #2]
 15293 0f96 1980     		strh	r1, [r3]	@ unaligned
 15294 0f98 9A70     		strb	r2, [r3, #2]
2001:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 15295              		.loc 1 2001 0
 15296 0f9a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15297 0f9e D7F88810 		ldr	r1, [r7, #136]
 15298 0fa2 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 342


 15299 0fa4 5B00     		lsls	r3, r3, #1
 15300 0fa6 1344     		add	r3, r3, r2
 15301 0fa8 1B01     		lsls	r3, r3, #4
 15302 0faa 0B44     		add	r3, r3, r1
 15303 0fac 03F2B513 		addw	r3, r3, #437
 15304 0fb0 93F90030 		ldrsb	r3, [r3]
 15305 0fb4 1A46     		mov	r2, r3
 15306 0fb6 07F11803 		add	r3, r7, #24
 15307 0fba 9249     		ldr	r1, .L651+12
 15308 0fbc 1846     		mov	r0, r3
 15309 0fbe FFF7FEFF 		bl	sprintf
2002:..\src/command_processing.c ****             strcat(info_string, str);
 15310              		.loc 1 2002 0
 15311 0fc2 07F11803 		add	r3, r7, #24
 15312 0fc6 1946     		mov	r1, r3
 15313 0fc8 7869     		ldr	r0, [r7, #20]
 15314 0fca FFF7FEFF 		bl	strcat
2003:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 15315              		.loc 1 2003 0
 15316 0fce 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15317 0fd2 D7F88810 		ldr	r1, [r7, #136]
 15318 0fd6 1346     		mov	r3, r2
 15319 0fd8 5B00     		lsls	r3, r3, #1
 15320 0fda 1344     		add	r3, r3, r2
 15321 0fdc 1B01     		lsls	r3, r3, #4
 15322 0fde 0B44     		add	r3, r3, r1
 15323 0fe0 03F5DB73 		add	r3, r3, #438
 15324 0fe4 93F90030 		ldrsb	r3, [r3]
 15325 0fe8 1A46     		mov	r2, r3
 15326 0fea 07F11803 		add	r3, r7, #24
 15327 0fee 8649     		ldr	r1, .L651+16
 15328 0ff0 1846     		mov	r0, r3
 15329 0ff2 FFF7FEFF 		bl	sprintf
2004:..\src/command_processing.c ****             strcat(info_string, str);
 15330              		.loc 1 2004 0
 15331 0ff6 07F11803 		add	r3, r7, #24
 15332 0ffa 1946     		mov	r1, r3
 15333 0ffc 7869     		ldr	r0, [r7, #20]
 15334 0ffe FFF7FEFF 		bl	strcat
2005:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 15335              		.loc 1 2005 0
 15336 1002 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15337 1006 D7F88810 		ldr	r1, [r7, #136]
 15338 100a 1346     		mov	r3, r2
 15339 100c 5B00     		lsls	r3, r3, #1
 15340 100e 1344     		add	r3, r3, r2
 15341 1010 1B01     		lsls	r3, r3, #4
 15342 1012 0B44     		add	r3, r3, r1
 15343 1014 03F2B713 		addw	r3, r3, #439
 15344 1018 93F90030 		ldrsb	r3, [r3]
 15345 101c 1A46     		mov	r2, r3
 15346 101e 07F11803 		add	r3, r7, #24
 15347 1022 7A49     		ldr	r1, .L651+20
 15348 1024 1846     		mov	r0, r3
 15349 1026 FFF7FEFF 		bl	sprintf
2006:..\src/command_processing.c ****             strcat(info_string, str);
 15350              		.loc 1 2006 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 343


 15351 102a 07F11803 		add	r3, r7, #24
 15352 102e 1946     		mov	r1, r3
 15353 1030 7869     		ldr	r0, [r7, #20]
 15354 1032 FFF7FEFF 		bl	strcat
2007:..\src/command_processing.c **** #endif            
2008:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15355              		.loc 1 2008 0
 15356 1036 7869     		ldr	r0, [r7, #20]
 15357 1038 FFF7FEFF 		bl	strlen
 15358 103c 0346     		mov	r3, r0
 15359 103e 1A46     		mov	r2, r3
 15360 1040 7B69     		ldr	r3, [r7, #20]
 15361 1042 1344     		add	r3, r3, r2
 15362 1044 6E4A     		ldr	r2, .L651+8
 15363 1046 1188     		ldrh	r1, [r2]	@ unaligned
 15364 1048 9278     		ldrb	r2, [r2, #2]
 15365 104a 1980     		strh	r1, [r3]	@ unaligned
 15366 104c 9A70     		strb	r2, [r3, #2]
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 15367              		.loc 1 2010 0
 15368 104e 7869     		ldr	r0, [r7, #20]
 15369 1050 FFF7FEFF 		bl	strlen
 15370 1054 0346     		mov	r3, r0
 15371 1056 1A46     		mov	r2, r3
 15372 1058 7B69     		ldr	r3, [r7, #20]
 15373 105a 1344     		add	r3, r3, r2
 15374 105c 6C4A     		ldr	r2, .L651+24
 15375 105e 1D46     		mov	r5, r3
 15376 1060 1446     		mov	r4, r2
 15377 1062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15378 1064 2860     		str	r0, [r5]	@ unaligned
 15379 1066 6960     		str	r1, [r5, #4]	@ unaligned
 15380 1068 AA60     		str	r2, [r5, #8]	@ unaligned
 15381 106a EB60     		str	r3, [r5, #12]	@ unaligned
 15382 106c 2068     		ldr	r0, [r4]	@ unaligned
 15383 106e 2861     		str	r0, [r5, #16]	@ unaligned
2011:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15384              		.loc 1 2011 0
 15385 1070 0023     		movs	r3, #0
 15386 1072 C7F89430 		str	r3, [r7, #148]
 15387 1076 30E0     		b	.L587
 15388              	.L589:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15389              		.loc 1 2012 0
 15390 1078 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15391 107c D7F88810 		ldr	r1, [r7, #136]
 15392 1080 1346     		mov	r3, r2
 15393 1082 5B00     		lsls	r3, r3, #1
 15394 1084 1344     		add	r3, r3, r2
 15395 1086 1B01     		lsls	r3, r3, #4
 15396 1088 CA18     		adds	r2, r1, r3
 15397 108a D7F89430 		ldr	r3, [r7, #148]
 15398 108e 1344     		add	r3, r3, r2
 15399 1090 03F29513 		addw	r3, r3, #405
 15400 1094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15401 1096 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 344


 15402 1098 07F11803 		add	r3, r7, #24
 15403 109c 5649     		ldr	r1, .L651
 15404 109e 1846     		mov	r0, r3
 15405 10a0 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****                 strcat(info_string, str);
 15406              		.loc 1 2013 0
 15407 10a4 07F11803 		add	r3, r7, #24
 15408 10a8 1946     		mov	r1, r3
 15409 10aa 7869     		ldr	r0, [r7, #20]
 15410 10ac FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15411              		.loc 1 2014 0
 15412 10b0 D7F89430 		ldr	r3, [r7, #148]
 15413 10b4 022B     		cmp	r3, #2
 15414 10b6 0BD0     		beq	.L588
2015:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15415              		.loc 1 2015 0
 15416 10b8 7869     		ldr	r0, [r7, #20]
 15417 10ba FFF7FEFF 		bl	strlen
 15418 10be 0346     		mov	r3, r0
 15419 10c0 1A46     		mov	r2, r3
 15420 10c2 7B69     		ldr	r3, [r7, #20]
 15421 10c4 1344     		add	r3, r3, r2
 15422 10c6 4D4A     		ldr	r2, .L651+4
 15423 10c8 1188     		ldrh	r1, [r2]	@ unaligned
 15424 10ca 9278     		ldrb	r2, [r2, #2]
 15425 10cc 1980     		strh	r1, [r3]	@ unaligned
 15426 10ce 9A70     		strb	r2, [r3, #2]
 15427              	.L588:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15428              		.loc 1 2011 0 discriminator 2
 15429 10d0 D7F89430 		ldr	r3, [r7, #148]
 15430 10d4 0133     		adds	r3, r3, #1
 15431 10d6 C7F89430 		str	r3, [r7, #148]
 15432              	.L587:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 15433              		.loc 1 2011 0 is_stmt 0 discriminator 1
 15434 10da D7F89430 		ldr	r3, [r7, #148]
 15435 10de 022B     		cmp	r3, #2
 15436 10e0 CADD     		ble	.L589
2016:..\src/command_processing.c ****                 }                
2017:..\src/command_processing.c ****             }
2018:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15437              		.loc 1 2018 0 is_stmt 1
 15438 10e2 7869     		ldr	r0, [r7, #20]
 15439 10e4 FFF7FEFF 		bl	strlen
 15440 10e8 0346     		mov	r3, r0
 15441 10ea 1A46     		mov	r2, r3
 15442 10ec 7B69     		ldr	r3, [r7, #20]
 15443 10ee 1344     		add	r3, r3, r2
 15444 10f0 434A     		ldr	r2, .L651+8
 15445 10f2 1188     		ldrh	r1, [r2]	@ unaligned
 15446 10f4 9278     		ldrb	r2, [r2, #2]
 15447 10f6 1980     		strh	r1, [r3]	@ unaligned
 15448 10f8 9A70     		strb	r2, [r3, #2]
2019:..\src/command_processing.c **** 
2020:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 345


 15449              		.loc 1 2020 0
 15450 10fa 7869     		ldr	r0, [r7, #20]
 15451 10fc FFF7FEFF 		bl	strlen
 15452 1100 0346     		mov	r3, r0
 15453 1102 1A46     		mov	r2, r3
 15454 1104 7B69     		ldr	r3, [r7, #20]
 15455 1106 1344     		add	r3, r3, r2
 15456 1108 424A     		ldr	r2, .L651+28
 15457 110a 1D46     		mov	r5, r3
 15458 110c 1446     		mov	r4, r2
 15459 110e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15460 1110 2860     		str	r0, [r5]	@ unaligned
 15461 1112 6960     		str	r1, [r5, #4]	@ unaligned
 15462 1114 AA60     		str	r2, [r5, #8]	@ unaligned
 15463 1116 EB60     		str	r3, [r5, #12]	@ unaligned
 15464 1118 2068     		ldr	r0, [r4]	@ unaligned
 15465 111a 2861     		str	r0, [r5, #16]	@ unaligned
 15466 111c 2379     		ldrb	r3, [r4, #4]
 15467 111e 2B75     		strb	r3, [r5, #20]
2021:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15468              		.loc 1 2021 0
 15469 1120 0023     		movs	r3, #0
 15470 1122 C7F89430 		str	r3, [r7, #148]
 15471 1126 3FE0     		b	.L590
 15472              	.L592:
2022:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15473              		.loc 1 2022 0
 15474 1128 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15475 112c D7F88810 		ldr	r1, [r7, #136]
 15476 1130 1346     		mov	r3, r2
 15477 1132 5B00     		lsls	r3, r3, #1
 15478 1134 1344     		add	r3, r3, r2
 15479 1136 9B00     		lsls	r3, r3, #2
 15480 1138 D7F89420 		ldr	r2, [r7, #148]
 15481 113c 1344     		add	r3, r3, r2
 15482 113e 6633     		adds	r3, r3, #102
 15483 1140 51F82310 		ldr	r1, [r1, r3, lsl #2]
 15484 1144 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15485 1148 D7F88800 		ldr	r0, [r7, #136]
 15486 114c 1346     		mov	r3, r2
 15487 114e 5B00     		lsls	r3, r3, #1
 15488 1150 1344     		add	r3, r3, r2
 15489 1152 1B01     		lsls	r3, r3, #4
 15490 1154 C218     		adds	r2, r0, r3
 15491 1156 D7F89430 		ldr	r3, [r7, #148]
 15492 115a 1344     		add	r3, r3, r2
 15493 115c 03F29513 		addw	r3, r3, #405
 15494 1160 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15495 1162 41FA03F2 		asr	r2, r1, r3
 15496 1166 07F11803 		add	r3, r7, #24
 15497 116a 2B49     		ldr	r1, .L651+32
 15498 116c 1846     		mov	r0, r3
 15499 116e FFF7FEFF 		bl	sprintf
2023:..\src/command_processing.c ****                 strcat(info_string, str);
 15500              		.loc 1 2023 0
 15501 1172 07F11803 		add	r3, r7, #24
 15502 1176 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 346


 15503 1178 7869     		ldr	r0, [r7, #20]
 15504 117a FFF7FEFF 		bl	strcat
2024:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15505              		.loc 1 2024 0
 15506 117e D7F89430 		ldr	r3, [r7, #148]
 15507 1182 022B     		cmp	r3, #2
 15508 1184 0BD0     		beq	.L591
2025:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15509              		.loc 1 2025 0
 15510 1186 7869     		ldr	r0, [r7, #20]
 15511 1188 FFF7FEFF 		bl	strlen
 15512 118c 0346     		mov	r3, r0
 15513 118e 1A46     		mov	r2, r3
 15514 1190 7B69     		ldr	r3, [r7, #20]
 15515 1192 1344     		add	r3, r3, r2
 15516 1194 194A     		ldr	r2, .L651+4
 15517 1196 1188     		ldrh	r1, [r2]	@ unaligned
 15518 1198 9278     		ldrb	r2, [r2, #2]
 15519 119a 1980     		strh	r1, [r3]	@ unaligned
 15520 119c 9A70     		strb	r2, [r3, #2]
 15521              	.L591:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15522              		.loc 1 2021 0 discriminator 2
 15523 119e D7F89430 		ldr	r3, [r7, #148]
 15524 11a2 0133     		adds	r3, r3, #1
 15525 11a4 C7F89430 		str	r3, [r7, #148]
 15526              	.L590:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 15527              		.loc 1 2021 0 is_stmt 0 discriminator 1
 15528 11a8 D7F89430 		ldr	r3, [r7, #148]
 15529 11ac 022B     		cmp	r3, #2
 15530 11ae BBDD     		ble	.L592
2026:..\src/command_processing.c ****                 }
2027:..\src/command_processing.c ****             }
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15531              		.loc 1 2028 0 is_stmt 1
 15532 11b0 7869     		ldr	r0, [r7, #20]
 15533 11b2 FFF7FEFF 		bl	strlen
 15534 11b6 0346     		mov	r3, r0
 15535 11b8 1A46     		mov	r2, r3
 15536 11ba 7B69     		ldr	r3, [r7, #20]
 15537 11bc 1344     		add	r3, r3, r2
 15538 11be 104A     		ldr	r2, .L651+8
 15539 11c0 1188     		ldrh	r1, [r2]	@ unaligned
 15540 11c2 9278     		ldrb	r2, [r2, #2]
 15541 11c4 1980     		strh	r1, [r3]	@ unaligned
 15542 11c6 9A70     		strb	r2, [r3, #2]
2029:..\src/command_processing.c ****                 
2030:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 15543              		.loc 1 2030 0
 15544 11c8 7869     		ldr	r0, [r7, #20]
 15545 11ca FFF7FEFF 		bl	strlen
 15546 11ce 0346     		mov	r3, r0
 15547 11d0 1A46     		mov	r2, r3
 15548 11d2 7B69     		ldr	r3, [r7, #20]
 15549 11d4 1344     		add	r3, r3, r2
 15550 11d6 114A     		ldr	r2, .L651+36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 347


 15551 11d8 1D46     		mov	r5, r3
 15552 11da 1446     		mov	r4, r2
 15553 11dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15554 11de 2860     		str	r0, [r5]	@ unaligned
 15555 11e0 6960     		str	r1, [r5, #4]	@ unaligned
 15556 11e2 AA60     		str	r2, [r5, #8]	@ unaligned
 15557 11e4 EB60     		str	r3, [r5, #12]	@ unaligned
 15558 11e6 03CC     		ldmia	r4!, {r0, r1}
 15559 11e8 2861     		str	r0, [r5, #16]	@ unaligned
 15560 11ea 6961     		str	r1, [r5, #20]	@ unaligned
 15561 11ec 2378     		ldrb	r3, [r4]
 15562 11ee 2B76     		strb	r3, [r5, #24]
2031:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 15563              		.loc 1 2031 0
 15564 11f0 0023     		movs	r3, #0
 15565 11f2 C7F89430 		str	r3, [r7, #148]
 15566 11f6 49E0     		b	.L593
 15567              	.L652:
 15568              		.align	2
 15569              	.L651:
 15570 11f8 98100000 		.word	.LC161
 15571 11fc 9C100000 		.word	.LC162
 15572 1200 AC0E0000 		.word	.LC132
 15573 1204 98130000 		.word	.LC190
 15574 1208 B0130000 		.word	.LC191
 15575 120c C8130000 		.word	.LC192
 15576 1210 E0130000 		.word	.LC193
 15577 1214 F4130000 		.word	.LC194
 15578 1218 0C140000 		.word	.LC195
 15579 121c 10140000 		.word	.LC196
 15580              	.L595:
2032:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15581              		.loc 1 2032 0
 15582 1220 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15583 1224 D7F88810 		ldr	r1, [r7, #136]
 15584 1228 1346     		mov	r3, r2
 15585 122a 5B00     		lsls	r3, r3, #1
 15586 122c 1344     		add	r3, r3, r2
 15587 122e 9B00     		lsls	r3, r3, #2
 15588 1230 D7F89420 		ldr	r2, [r7, #148]
 15589 1234 1344     		add	r3, r3, r2
 15590 1236 6833     		adds	r3, r3, #104
 15591 1238 9B00     		lsls	r3, r3, #2
 15592 123a 0B44     		add	r3, r3, r1
 15593 123c 5B68     		ldr	r3, [r3, #4]	@ float
 15594 123e 1846     		mov	r0, r3
 15595 1240 FFF7FEFF 		bl	__aeabi_f2d
 15596 1244 0346     		mov	r3, r0
 15597 1246 0C46     		mov	r4, r1
 15598 1248 07F11800 		add	r0, r7, #24
 15599 124c 1A46     		mov	r2, r3
 15600 124e 2346     		mov	r3, r4
 15601 1250 BD49     		ldr	r1, .L653
 15602 1252 FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****                 strcat(info_string, str);
 15603              		.loc 1 2033 0
 15604 1256 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 348


 15605 125a 1946     		mov	r1, r3
 15606 125c 7869     		ldr	r0, [r7, #20]
 15607 125e FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15608              		.loc 1 2034 0
 15609 1262 D7F89430 		ldr	r3, [r7, #148]
 15610 1266 022B     		cmp	r3, #2
 15611 1268 0BD0     		beq	.L594
2035:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15612              		.loc 1 2035 0
 15613 126a 7869     		ldr	r0, [r7, #20]
 15614 126c FFF7FEFF 		bl	strlen
 15615 1270 0346     		mov	r3, r0
 15616 1272 1A46     		mov	r2, r3
 15617 1274 7B69     		ldr	r3, [r7, #20]
 15618 1276 1344     		add	r3, r3, r2
 15619 1278 B44A     		ldr	r2, .L653+4
 15620 127a 1188     		ldrh	r1, [r2]	@ unaligned
 15621 127c 9278     		ldrb	r2, [r2, #2]
 15622 127e 1980     		strh	r1, [r3]	@ unaligned
 15623 1280 9A70     		strb	r2, [r3, #2]
 15624              	.L594:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15625              		.loc 1 2031 0 discriminator 2
 15626 1282 D7F89430 		ldr	r3, [r7, #148]
 15627 1286 0133     		adds	r3, r3, #1
 15628 1288 C7F89430 		str	r3, [r7, #148]
 15629              	.L593:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 15630              		.loc 1 2031 0 is_stmt 0 discriminator 1
 15631 128c D7F89430 		ldr	r3, [r7, #148]
 15632 1290 022B     		cmp	r3, #2
 15633 1292 C5DD     		ble	.L595
2036:..\src/command_processing.c ****                 }
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15634              		.loc 1 2038 0 is_stmt 1
 15635 1294 7869     		ldr	r0, [r7, #20]
 15636 1296 FFF7FEFF 		bl	strlen
 15637 129a 0346     		mov	r3, r0
 15638 129c 1A46     		mov	r2, r3
 15639 129e 7B69     		ldr	r3, [r7, #20]
 15640 12a0 1344     		add	r3, r3, r2
 15641 12a2 AB4A     		ldr	r2, .L653+8
 15642 12a4 1188     		ldrh	r1, [r2]	@ unaligned
 15643 12a6 9278     		ldrb	r2, [r2, #2]
 15644 12a8 1980     		strh	r1, [r3]	@ unaligned
 15645 12aa 9A70     		strb	r2, [r3, #2]
2039:..\src/command_processing.c ****             
2040:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2041:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15646              		.loc 1 2041 0
 15647 12ac D7F88030 		ldr	r3, [r7, #128]
 15648 12b0 5B6C     		ldr	r3, [r3, #68]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15649              		.loc 1 2040 0
 15650 12b2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 349


 15651 12b4 FFF7FEFF 		bl	__aeabi_f2d
 15652 12b8 C7E90201 		strd	r0, [r7, #8]
 15653              		.loc 1 2041 0
 15654 12bc D7F88030 		ldr	r3, [r7, #128]
 15655 12c0 9B6C     		ldr	r3, [r3, #72]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15656              		.loc 1 2040 0
 15657 12c2 1846     		mov	r0, r3
 15658 12c4 FFF7FEFF 		bl	__aeabi_f2d
 15659 12c8 0446     		mov	r4, r0
 15660 12ca 0D46     		mov	r5, r1
 15661              		.loc 1 2041 0
 15662 12cc D7F88030 		ldr	r3, [r7, #128]
 15663 12d0 DB6C     		ldr	r3, [r3, #76]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15664              		.loc 1 2040 0
 15665 12d2 1846     		mov	r0, r3
 15666 12d4 FFF7FEFF 		bl	__aeabi_f2d
 15667 12d8 8046     		mov	r8, r0
 15668 12da 8946     		mov	r9, r1
2042:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 15669              		.loc 1 2042 0
 15670 12dc D7F88030 		ldr	r3, [r7, #128]
 15671 12e0 1B6D     		ldr	r3, [r3, #80]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15672              		.loc 1 2040 0
 15673 12e2 1846     		mov	r0, r3
 15674 12e4 FFF7FEFF 		bl	__aeabi_f2d
 15675 12e8 8246     		mov	r10, r0
 15676 12ea 8B46     		mov	fp, r1
 15677              		.loc 1 2042 0
 15678 12ec D7F88030 		ldr	r3, [r7, #128]
 15679 12f0 5B6D     		ldr	r3, [r3, #84]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15680              		.loc 1 2040 0
 15681 12f2 1846     		mov	r0, r3
 15682 12f4 FFF7FEFF 		bl	__aeabi_f2d
 15683 12f8 C7E90001 		strd	r0, [r7]
 15684              		.loc 1 2042 0
 15685 12fc D7F88030 		ldr	r3, [r7, #128]
 15686 1300 9B6D     		ldr	r3, [r3, #88]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 15687              		.loc 1 2040 0
 15688 1302 1846     		mov	r0, r3
 15689 1304 FFF7FEFF 		bl	__aeabi_f2d
 15690 1308 0246     		mov	r2, r0
 15691 130a 0B46     		mov	r3, r1
 15692 130c 07F11800 		add	r0, r7, #24
 15693 1310 CDE90823 		strd	r2, [sp, #32]
 15694 1314 D7E90012 		ldrd	r1, [r7]
 15695 1318 CDE90612 		strd	r1, [sp, #24]
 15696 131c CDE904AB 		strd	r10, [sp, #16]
 15697 1320 CDE90289 		strd	r8, [sp, #8]
 15698 1324 CDE90045 		strd	r4, [sp]
 15699 1328 D7E90223 		ldrd	r2, [r7, #8]
 15700 132c 8949     		ldr	r1, .L653+12
 15701 132e FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 350


2043:..\src/command_processing.c **** 		    strcat(info_string, str);       
 15702              		.loc 1 2043 0
 15703 1332 07F11803 		add	r3, r7, #24
 15704 1336 1946     		mov	r1, r3
 15705 1338 7869     		ldr	r0, [r7, #20]
 15706 133a FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 15707              		.loc 1 2045 0
 15708 133e D7F88030 		ldr	r3, [r7, #128]
 15709 1342 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 15710 1346 1A46     		mov	r2, r3
 15711 1348 07F11803 		add	r3, r7, #24
 15712 134c 8249     		ldr	r1, .L653+16
 15713 134e 1846     		mov	r0, r3
 15714 1350 FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
 15715              		.loc 1 2046 0
 15716 1354 07F11803 		add	r3, r7, #24
 15717 1358 1946     		mov	r1, r3
 15718 135a 7869     		ldr	r0, [r7, #20]
 15719 135c FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15720              		.loc 1 2047 0
 15721 1360 7869     		ldr	r0, [r7, #20]
 15722 1362 FFF7FEFF 		bl	strlen
 15723 1366 0346     		mov	r3, r0
 15724 1368 1A46     		mov	r2, r3
 15725 136a 7B69     		ldr	r3, [r7, #20]
 15726 136c 1344     		add	r3, r3, r2
 15727 136e 784A     		ldr	r2, .L653+8
 15728 1370 1188     		ldrh	r1, [r2]	@ unaligned
 15729 1372 9278     		ldrb	r2, [r2, #2]
 15730 1374 1980     		strh	r1, [r3]	@ unaligned
 15731 1376 9A70     		strb	r2, [r3, #2]
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 15732              		.loc 1 2049 0
 15733 1378 D7F88030 		ldr	r3, [r7, #128]
 15734 137c 596B     		ldr	r1, [r3, #52]
 15735 137e 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15736 1382 D7F88800 		ldr	r0, [r7, #136]
 15737 1386 1346     		mov	r3, r2
 15738 1388 5B00     		lsls	r3, r3, #1
 15739 138a 1344     		add	r3, r3, r2
 15740 138c 1B01     		lsls	r3, r3, #4
 15741 138e 0344     		add	r3, r3, r0
 15742 1390 03F29513 		addw	r3, r3, #405
 15743 1394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15744 1396 41FA03F2 		asr	r2, r1, r3
 15745 139a 07F11803 		add	r3, r7, #24
 15746 139e 6F49     		ldr	r1, .L653+20
 15747 13a0 1846     		mov	r0, r3
 15748 13a2 FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****             strcat(info_string, str);
 15749              		.loc 1 2050 0
 15750 13a6 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 351


 15751 13aa 1946     		mov	r1, r3
 15752 13ac 7869     		ldr	r0, [r7, #20]
 15753 13ae FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 15754              		.loc 1 2051 0
 15755 13b2 D7F88030 		ldr	r3, [r7, #128]
 15756 13b6 996B     		ldr	r1, [r3, #56]
 15757 13b8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15758 13bc D7F88800 		ldr	r0, [r7, #136]
 15759 13c0 1346     		mov	r3, r2
 15760 13c2 5B00     		lsls	r3, r3, #1
 15761 13c4 1344     		add	r3, r3, r2
 15762 13c6 1B01     		lsls	r3, r3, #4
 15763 13c8 0344     		add	r3, r3, r0
 15764 13ca 03F29513 		addw	r3, r3, #405
 15765 13ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15766 13d0 41FA03F2 		asr	r2, r1, r3
 15767 13d4 07F11803 		add	r3, r7, #24
 15768 13d8 6149     		ldr	r1, .L653+24
 15769 13da 1846     		mov	r0, r3
 15770 13dc FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****             strcat(info_string, str);
 15771              		.loc 1 2052 0
 15772 13e0 07F11803 		add	r3, r7, #24
 15773 13e4 1946     		mov	r1, r3
 15774 13e6 7869     		ldr	r0, [r7, #20]
 15775 13e8 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c **** 
2054:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 15776              		.loc 1 2054 0
 15777 13ec D7F88030 		ldr	r3, [r7, #128]
 15778 13f0 1A6C     		ldr	r2, [r3, #64]
 15779 13f2 D7F88030 		ldr	r3, [r7, #128]
 15780 13f6 DB6B     		ldr	r3, [r3, #60]
 15781 13f8 07F11800 		add	r0, r7, #24
 15782 13fc 5949     		ldr	r1, .L653+28
 15783 13fe FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****             strcat(info_string, str);
 15784              		.loc 1 2055 0
 15785 1402 07F11803 		add	r3, r7, #24
 15786 1406 1946     		mov	r1, r3
 15787 1408 7869     		ldr	r0, [r7, #20]
 15788 140a FFF7FEFF 		bl	strcat
2056:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15789              		.loc 1 2056 0
 15790 140e 7869     		ldr	r0, [r7, #20]
 15791 1410 FFF7FEFF 		bl	strlen
 15792 1414 0346     		mov	r3, r0
 15793 1416 1A46     		mov	r2, r3
 15794 1418 7B69     		ldr	r3, [r7, #20]
 15795 141a 1344     		add	r3, r3, r2
 15796 141c 4C4A     		ldr	r2, .L653+8
 15797 141e 1188     		ldrh	r1, [r2]	@ unaligned
 15798 1420 9278     		ldrb	r2, [r2, #2]
 15799 1422 1980     		strh	r1, [r3]	@ unaligned
 15800 1424 9A70     		strb	r2, [r3, #2]
2057:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 352


2058:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 15801              		.loc 1 2058 0
 15802 1426 D7F88030 		ldr	r3, [r7, #128]
 15803 142a B3F95C30 		ldrsh	r3, [r3, #92]
 15804 142e 1A46     		mov	r2, r3
 15805 1430 07F11803 		add	r3, r7, #24
 15806 1434 4C49     		ldr	r1, .L653+32
 15807 1436 1846     		mov	r0, r3
 15808 1438 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****             strcat(info_string, str);
 15809              		.loc 1 2059 0
 15810 143c 07F11803 		add	r3, r7, #24
 15811 1440 1946     		mov	r1, r3
 15812 1442 7869     		ldr	r0, [r7, #20]
 15813 1444 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2061:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 15814              		.loc 1 2061 0
 15815 1448 D7F88030 		ldr	r3, [r7, #128]
 15816 144c 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 15817 1450 1A46     		mov	r2, r3
 15818 1452 07F11803 		add	r3, r7, #24
 15819 1456 4549     		ldr	r1, .L653+36
 15820 1458 1846     		mov	r0, r3
 15821 145a FFF7FEFF 		bl	sprintf
2062:..\src/command_processing.c ****             strcat(info_string, str);
 15822              		.loc 1 2062 0
 15823 145e 07F11803 		add	r3, r7, #24
 15824 1462 1946     		mov	r1, r3
 15825 1464 7869     		ldr	r0, [r7, #20]
 15826 1466 FFF7FEFF 		bl	strcat
2063:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 15827              		.loc 1 2063 0
 15828 146a D7F88030 		ldr	r3, [r7, #128]
 15829 146e 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 15830 1472 002B     		cmp	r3, #0
 15831 1474 02D0     		beq	.L597
 15832 1476 012B     		cmp	r3, #1
 15833 1478 1DD0     		beq	.L598
2064:..\src/command_processing.c ****                 case DRIVER_MC33887:
2065:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2066:..\src/command_processing.c ****                     break;
2067:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2068:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2069:..\src/command_processing.c ****                     break;
2070:..\src/command_processing.c ****                 default:
2071:..\src/command_processing.c ****                     break;
 15834              		.loc 1 2071 0
 15835 147a 39E0     		b	.L600
 15836              	.L597:
2065:..\src/command_processing.c ****                     break;
 15837              		.loc 1 2065 0
 15838 147c 7869     		ldr	r0, [r7, #20]
 15839 147e FFF7FEFF 		bl	strlen
 15840 1482 0346     		mov	r3, r0
 15841 1484 1A46     		mov	r2, r3
 15842 1486 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 353


 15843 1488 1344     		add	r3, r3, r2
 15844 148a 394A     		ldr	r2, .L653+40
 15845 148c 1446     		mov	r4, r2
 15846 148e 9E46     		mov	lr, r3
 15847 1490 04F1200C 		add	ip, r4, #32
 15848              	.L599:
 15849 1494 7546     		mov	r5, lr
 15850 1496 2646     		mov	r6, r4
 15851 1498 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15852 149a 2860     		str	r0, [r5]	@ unaligned
 15853 149c 6960     		str	r1, [r5, #4]	@ unaligned
 15854 149e AA60     		str	r2, [r5, #8]	@ unaligned
 15855 14a0 EB60     		str	r3, [r5, #12]	@ unaligned
 15856 14a2 1034     		adds	r4, r4, #16
 15857 14a4 0EF1100E 		add	lr, lr, #16
 15858 14a8 6445     		cmp	r4, ip
 15859 14aa F3D1     		bne	.L599
 15860 14ac 7246     		mov	r2, lr
 15861 14ae 2346     		mov	r3, r4
 15862 14b0 1B88     		ldrh	r3, [r3]	@ unaligned
 15863 14b2 1380     		strh	r3, [r2]	@ unaligned
2066:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 15864              		.loc 1 2066 0
 15865 14b4 1CE0     		b	.L600
 15866              	.L598:
2068:..\src/command_processing.c ****                     break;
 15867              		.loc 1 2068 0
 15868 14b6 7869     		ldr	r0, [r7, #20]
 15869 14b8 FFF7FEFF 		bl	strlen
 15870 14bc 0346     		mov	r3, r0
 15871 14be 1A46     		mov	r2, r3
 15872 14c0 7B69     		ldr	r3, [r7, #20]
 15873 14c2 1344     		add	r3, r3, r2
 15874 14c4 2B4A     		ldr	r2, .L653+44
 15875 14c6 1446     		mov	r4, r2
 15876 14c8 9E46     		mov	lr, r3
 15877 14ca 04F1200C 		add	ip, r4, #32
 15878              	.L601:
 15879 14ce 7546     		mov	r5, lr
 15880 14d0 2646     		mov	r6, r4
 15881 14d2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15882 14d4 2860     		str	r0, [r5]	@ unaligned
 15883 14d6 6960     		str	r1, [r5, #4]	@ unaligned
 15884 14d8 AA60     		str	r2, [r5, #8]	@ unaligned
 15885 14da EB60     		str	r3, [r5, #12]	@ unaligned
 15886 14dc 1034     		adds	r4, r4, #16
 15887 14de 0EF1100E 		add	lr, lr, #16
 15888 14e2 6445     		cmp	r4, ip
 15889 14e4 F3D1     		bne	.L601
 15890 14e6 7346     		mov	r3, lr
 15891 14e8 2246     		mov	r2, r4
 15892 14ea 1068     		ldr	r0, [r2]	@ unaligned
 15893 14ec 1860     		str	r0, [r3]	@ unaligned
2069:..\src/command_processing.c ****                 default:
 15894              		.loc 1 2069 0
 15895 14ee 00BF     		nop
 15896              	.L600:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 354


2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 15897              		.loc 1 2073 0
 15898 14f0 D7F88030 		ldr	r3, [r7, #128]
 15899 14f4 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 15900 14f8 1A46     		mov	r2, r3
 15901 14fa 07F11803 		add	r3, r7, #24
 15902 14fe 1E49     		ldr	r1, .L653+48
 15903 1500 1846     		mov	r0, r3
 15904 1502 FFF7FEFF 		bl	sprintf
2074:..\src/command_processing.c ****             strcat(info_string, str);
 15905              		.loc 1 2074 0
 15906 1506 07F11803 		add	r3, r7, #24
 15907 150a 1946     		mov	r1, r3
 15908 150c 7869     		ldr	r0, [r7, #20]
 15909 150e FFF7FEFF 		bl	strcat
2075:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 15910              		.loc 1 2075 0
 15911 1512 D7F88030 		ldr	r3, [r7, #128]
 15912 1516 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15913 151a 002B     		cmp	r3, #0
 15914 151c 30D0     		beq	.L602
2076:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 15915              		.loc 1 2076 0
 15916 151e 7869     		ldr	r0, [r7, #20]
 15917 1520 FFF7FEFF 		bl	strlen
 15918 1524 0346     		mov	r3, r0
 15919 1526 1A46     		mov	r2, r3
 15920 1528 7B69     		ldr	r3, [r7, #20]
 15921 152a 1344     		add	r3, r3, r2
 15922 152c 134A     		ldr	r2, .L653+52
 15923 152e 1D46     		mov	r5, r3
 15924 1530 1446     		mov	r4, r2
 15925 1532 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15926 1534 2860     		str	r0, [r5]	@ unaligned
 15927 1536 6960     		str	r1, [r5, #4]	@ unaligned
 15928 1538 AA60     		str	r2, [r5, #8]	@ unaligned
 15929 153a EB60     		str	r3, [r5, #12]	@ unaligned
 15930 153c 07CC     		ldmia	r4!, {r0, r1, r2}
 15931 153e 2861     		str	r0, [r5, #16]	@ unaligned
 15932 1540 6961     		str	r1, [r5, #20]	@ unaligned
 15933 1542 AA61     		str	r2, [r5, #24]	@ unaligned
 15934 1544 33E0     		b	.L603
 15935              	.L654:
 15936 1546 00BF     		.align	2
 15937              	.L653:
 15938 1548 2C140000 		.word	.LC197
 15939 154c 9C100000 		.word	.LC162
 15940 1550 AC0E0000 		.word	.LC132
 15941 1554 30140000 		.word	.LC198
 15942 1558 60140000 		.word	.LC199
 15943 155c 7C140000 		.word	.LC200
 15944 1560 A0140000 		.word	.LC201
 15945 1564 B0140000 		.word	.LC202
 15946 1568 CC140000 		.word	.LC203
 15947 156c E0140000 		.word	.LC204
 15948 1570 0C150000 		.word	.LC205
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 355


 15949 1574 30150000 		.word	.LC206
 15950 1578 54150000 		.word	.LC207
 15951 157c 74150000 		.word	.LC208
 15952              	.L602:
2077:..\src/command_processing.c ****             else
2078:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 15953              		.loc 1 2078 0
 15954 1580 7869     		ldr	r0, [r7, #20]
 15955 1582 FFF7FEFF 		bl	strlen
 15956 1586 0346     		mov	r3, r0
 15957 1588 1A46     		mov	r2, r3
 15958 158a 7B69     		ldr	r3, [r7, #20]
 15959 158c 1344     		add	r3, r3, r2
 15960 158e A24A     		ldr	r2, .L655
 15961 1590 1D46     		mov	r5, r3
 15962 1592 1446     		mov	r4, r2
 15963 1594 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15964 1596 2860     		str	r0, [r5]	@ unaligned
 15965 1598 6960     		str	r1, [r5, #4]	@ unaligned
 15966 159a AA60     		str	r2, [r5, #8]	@ unaligned
 15967 159c EB60     		str	r3, [r5, #12]	@ unaligned
 15968 159e 03CC     		ldmia	r4!, {r0, r1}
 15969 15a0 2861     		str	r0, [r5, #16]	@ unaligned
 15970 15a2 6961     		str	r1, [r5, #20]	@ unaligned
 15971 15a4 2388     		ldrh	r3, [r4]	@ unaligned
 15972 15a6 A278     		ldrb	r2, [r4, #2]
 15973 15a8 2B83     		strh	r3, [r5, #24]	@ unaligned
 15974 15aa 1346     		mov	r3, r2
 15975 15ac AB76     		strb	r3, [r5, #26]
 15976              	.L603:
2079:..\src/command_processing.c **** #endif                
2080:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15977              		.loc 1 2080 0 discriminator 2
 15978 15ae 7869     		ldr	r0, [r7, #20]
 15979 15b0 FFF7FEFF 		bl	strlen
 15980 15b4 0346     		mov	r3, r0
 15981 15b6 1A46     		mov	r2, r3
 15982 15b8 7B69     		ldr	r3, [r7, #20]
 15983 15ba 1344     		add	r3, r3, r2
 15984 15bc 974A     		ldr	r2, .L655+4
 15985 15be 1188     		ldrh	r1, [r2]	@ unaligned
 15986 15c0 9278     		ldrb	r2, [r2, #2]
 15987 15c2 1980     		strh	r1, [r3]	@ unaligned
 15988 15c4 9A70     		strb	r2, [r3, #2]
 15989              	.LBE18:
1819:..\src/command_processing.c ****             
 15990              		.loc 1 1819 0 discriminator 2
 15991 15c6 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 15992 15ca 0133     		adds	r3, r3, #1
 15993 15cc 87F89330 		strb	r3, [r7, #147]
 15994              	.L541:
1819:..\src/command_processing.c ****             
 15995              		.loc 1 1819 0 is_stmt 0 discriminator 1
 15996 15d0 D7F88830 		ldr	r3, [r7, #136]
 15997 15d4 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 15998 15d8 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 15999 15dc 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 356


 16000 15de 7EF664AE 		bls	.L604
 16001              	.LBE17:
2081:..\src/command_processing.c ****         }
2082:..\src/command_processing.c ****       
2083:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16002              		.loc 1 2083 0 is_stmt 1
 16003 15e2 7869     		ldr	r0, [r7, #20]
 16004 15e4 FFF7FEFF 		bl	strlen
 16005 15e8 0346     		mov	r3, r0
 16006 15ea 1A46     		mov	r2, r3
 16007 15ec 7B69     		ldr	r3, [r7, #20]
 16008 15ee 1344     		add	r3, r3, r2
 16009 15f0 8B4A     		ldr	r2, .L655+8
 16010 15f2 1D46     		mov	r5, r3
 16011 15f4 1446     		mov	r4, r2
 16012 15f6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16013 15f8 2860     		str	r0, [r5]	@ unaligned
 16014 15fa 6960     		str	r1, [r5, #4]	@ unaligned
 16015 15fc AA60     		str	r2, [r5, #8]	@ unaligned
 16016 15fe EB60     		str	r3, [r5, #12]	@ unaligned
 16017 1600 2068     		ldr	r0, [r4]	@ unaligned
 16018 1602 2861     		str	r0, [r5, #16]	@ unaligned
2084:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16019              		.loc 1 2084 0
 16020 1604 D7F88830 		ldr	r3, [r7, #136]
 16021 1608 B3F8F031 		ldrh	r3, [r3, #496]
 16022 160c 1A46     		mov	r2, r3
 16023 160e D7F88830 		ldr	r3, [r7, #136]
 16024 1612 B3F8F231 		ldrh	r3, [r3, #498]
 16025 1616 07F11800 		add	r0, r7, #24
 16026 161a 8249     		ldr	r1, .L655+12
 16027 161c FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****         strcat(info_string, str);
 16028              		.loc 1 2085 0
 16029 1620 07F11803 		add	r3, r7, #24
 16030 1624 1946     		mov	r1, r3
 16031 1626 7869     		ldr	r0, [r7, #20]
 16032 1628 FFF7FEFF 		bl	strcat
2086:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16033              		.loc 1 2086 0
 16034 162c 7869     		ldr	r0, [r7, #20]
 16035 162e FFF7FEFF 		bl	strlen
 16036 1632 0346     		mov	r3, r0
 16037 1634 1A46     		mov	r2, r3
 16038 1636 7B69     		ldr	r3, [r7, #20]
 16039 1638 1344     		add	r3, r3, r2
 16040 163a 784A     		ldr	r2, .L655+4
 16041 163c 1188     		ldrh	r1, [r2]	@ unaligned
 16042 163e 9278     		ldrb	r2, [r2, #2]
 16043 1640 1980     		strh	r1, [r3]	@ unaligned
 16044 1642 9A70     		strb	r2, [r3, #2]
2087:..\src/command_processing.c **** 
2088:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16045              		.loc 1 2088 0
 16046 1644 D7F88830 		ldr	r3, [r7, #136]
 16047 1648 D3F8F421 		ldr	r2, [r3, #500]
 16048 164c D7F88830 		ldr	r3, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 357


 16049 1650 D3F8F831 		ldr	r3, [r3, #504]
 16050 1654 07F11800 		add	r0, r7, #24
 16051 1658 7349     		ldr	r1, .L655+16
 16052 165a FFF7FEFF 		bl	sprintf
2089:..\src/command_processing.c ****         strcat(info_string, str);
 16053              		.loc 1 2089 0
 16054 165e 07F11803 		add	r3, r7, #24
 16055 1662 1946     		mov	r1, r3
 16056 1664 7869     		ldr	r0, [r7, #20]
 16057 1666 FFF7FEFF 		bl	strcat
2090:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16058              		.loc 1 2090 0
 16059 166a 7869     		ldr	r0, [r7, #20]
 16060 166c FFF7FEFF 		bl	strlen
 16061 1670 0346     		mov	r3, r0
 16062 1672 1A46     		mov	r2, r3
 16063 1674 7B69     		ldr	r3, [r7, #20]
 16064 1676 1344     		add	r3, r3, r2
 16065 1678 684A     		ldr	r2, .L655+4
 16066 167a 1188     		ldrh	r1, [r2]	@ unaligned
 16067 167c 9278     		ldrb	r2, [r2, #2]
 16068 167e 1980     		strh	r1, [r3]	@ unaligned
 16069 1680 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16070              		.loc 1 2092 0
 16071 1682 D7F88830 		ldr	r3, [r7, #136]
 16072 1686 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16073 168a 002B     		cmp	r3, #0
 16074 168c 13D0     		beq	.L605
2093:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16075              		.loc 1 2093 0
 16076 168e 7869     		ldr	r0, [r7, #20]
 16077 1690 FFF7FEFF 		bl	strlen
 16078 1694 0346     		mov	r3, r0
 16079 1696 1A46     		mov	r2, r3
 16080 1698 7B69     		ldr	r3, [r7, #20]
 16081 169a 1344     		add	r3, r3, r2
 16082 169c 634A     		ldr	r2, .L655+20
 16083 169e 1D46     		mov	r5, r3
 16084 16a0 1446     		mov	r4, r2
 16085 16a2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16086 16a4 2860     		str	r0, [r5]	@ unaligned
 16087 16a6 6960     		str	r1, [r5, #4]	@ unaligned
 16088 16a8 AA60     		str	r2, [r5, #8]	@ unaligned
 16089 16aa EB60     		str	r3, [r5, #12]	@ unaligned
 16090 16ac 2068     		ldr	r0, [r4]	@ unaligned
 16091 16ae 2861     		str	r0, [r5, #16]	@ unaligned
 16092 16b0 2379     		ldrb	r3, [r4, #4]
 16093 16b2 2B75     		strb	r3, [r5, #20]
 16094 16b4 10E0     		b	.L606
 16095              	.L605:
2094:..\src/command_processing.c ****         else
2095:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16096              		.loc 1 2095 0
 16097 16b6 7869     		ldr	r0, [r7, #20]
 16098 16b8 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 358


 16099 16bc 0346     		mov	r3, r0
 16100 16be 1A46     		mov	r2, r3
 16101 16c0 7B69     		ldr	r3, [r7, #20]
 16102 16c2 1344     		add	r3, r3, r2
 16103 16c4 5A4A     		ldr	r2, .L655+24
 16104 16c6 1D46     		mov	r5, r3
 16105 16c8 1446     		mov	r4, r2
 16106 16ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16107 16cc 2860     		str	r0, [r5]	@ unaligned
 16108 16ce 6960     		str	r1, [r5, #4]	@ unaligned
 16109 16d0 AA60     		str	r2, [r5, #8]	@ unaligned
 16110 16d2 EB60     		str	r3, [r5, #12]	@ unaligned
 16111 16d4 2068     		ldr	r0, [r4]	@ unaligned
 16112 16d6 2861     		str	r0, [r5, #16]	@ unaligned
 16113              	.L606:
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16114              		.loc 1 2097 0
 16115 16d8 D7F88830 		ldr	r3, [r7, #136]
 16116 16dc 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16117 16e0 002B     		cmp	r3, #0
 16118 16e2 17D0     		beq	.L607
2098:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16119              		.loc 1 2098 0
 16120 16e4 7869     		ldr	r0, [r7, #20]
 16121 16e6 FFF7FEFF 		bl	strlen
 16122 16ea 0346     		mov	r3, r0
 16123 16ec 1A46     		mov	r2, r3
 16124 16ee 7B69     		ldr	r3, [r7, #20]
 16125 16f0 1344     		add	r3, r3, r2
 16126 16f2 504A     		ldr	r2, .L655+28
 16127 16f4 1D46     		mov	r5, r3
 16128 16f6 1446     		mov	r4, r2
 16129 16f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16130 16fa 2860     		str	r0, [r5]	@ unaligned
 16131 16fc 6960     		str	r1, [r5, #4]	@ unaligned
 16132 16fe AA60     		str	r2, [r5, #8]	@ unaligned
 16133 1700 EB60     		str	r3, [r5, #12]	@ unaligned
 16134 1702 03CC     		ldmia	r4!, {r0, r1}
 16135 1704 2861     		str	r0, [r5, #16]	@ unaligned
 16136 1706 6961     		str	r1, [r5, #20]	@ unaligned
 16137 1708 2388     		ldrh	r3, [r4]	@ unaligned
 16138 170a A278     		ldrb	r2, [r4, #2]
 16139 170c 2B83     		strh	r3, [r5, #24]	@ unaligned
 16140 170e 1346     		mov	r3, r2
 16141 1710 AB76     		strb	r3, [r5, #26]
 16142 1712 13E0     		b	.L608
 16143              	.L607:
2099:..\src/command_processing.c ****         else
2100:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16144              		.loc 1 2100 0
 16145 1714 7869     		ldr	r0, [r7, #20]
 16146 1716 FFF7FEFF 		bl	strlen
 16147 171a 0346     		mov	r3, r0
 16148 171c 1A46     		mov	r2, r3
 16149 171e 7B69     		ldr	r3, [r7, #20]
 16150 1720 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 359


 16151 1722 454A     		ldr	r2, .L655+32
 16152 1724 1D46     		mov	r5, r3
 16153 1726 1446     		mov	r4, r2
 16154 1728 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16155 172a 2860     		str	r0, [r5]	@ unaligned
 16156 172c 6960     		str	r1, [r5, #4]	@ unaligned
 16157 172e AA60     		str	r2, [r5, #8]	@ unaligned
 16158 1730 EB60     		str	r3, [r5, #12]	@ unaligned
 16159 1732 03CC     		ldmia	r4!, {r0, r1}
 16160 1734 2861     		str	r0, [r5, #16]	@ unaligned
 16161 1736 6961     		str	r1, [r5, #20]	@ unaligned
 16162 1738 2388     		ldrh	r3, [r4]	@ unaligned
 16163 173a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16164              	.L608:
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16165              		.loc 1 2102 0
 16166 173c D7F88830 		ldr	r3, [r7, #136]
 16167 1740 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16168 1744 1A46     		mov	r2, r3
 16169 1746 D7F88830 		ldr	r3, [r7, #136]
 16170 174a 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 16171 174e 07F11800 		add	r0, r7, #24
 16172 1752 3A49     		ldr	r1, .L655+36
 16173 1754 FFF7FEFF 		bl	sprintf
2103:..\src/command_processing.c ****         strcat(info_string, str);
 16174              		.loc 1 2103 0
 16175 1758 07F11803 		add	r3, r7, #24
 16176 175c 1946     		mov	r1, r3
 16177 175e 7869     		ldr	r0, [r7, #20]
 16178 1760 FFF7FEFF 		bl	strcat
2104:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16179              		.loc 1 2104 0
 16180 1764 7869     		ldr	r0, [r7, #20]
 16181 1766 FFF7FEFF 		bl	strlen
 16182 176a 0346     		mov	r3, r0
 16183 176c 1A46     		mov	r2, r3
 16184 176e 7B69     		ldr	r3, [r7, #20]
 16185 1770 1344     		add	r3, r3, r2
 16186 1772 2A4A     		ldr	r2, .L655+4
 16187 1774 1188     		ldrh	r1, [r2]	@ unaligned
 16188 1776 9278     		ldrb	r2, [r2, #2]
 16189 1778 1980     		strh	r1, [r3]	@ unaligned
 16190 177a 9A70     		strb	r2, [r3, #2]
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 16191              		.loc 1 2106 0
 16192 177c D7F88830 		ldr	r3, [r7, #136]
 16193 1780 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 16194 1784 012B     		cmp	r3, #1
 16195 1786 40F08A80 		bne	.L609
2107:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 16196              		.loc 1 2107 0
 16197 178a 7869     		ldr	r0, [r7, #20]
 16198 178c FFF7FEFF 		bl	strlen
 16199 1790 0346     		mov	r3, r0
 16200 1792 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 360


 16201 1794 7B69     		ldr	r3, [r7, #20]
 16202 1796 1344     		add	r3, r3, r2
 16203 1798 294A     		ldr	r2, .L655+40
 16204 179a 1C46     		mov	r4, r3
 16205 179c 1546     		mov	r5, r2
 16206 179e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16207 17a0 2060     		str	r0, [r4]	@ unaligned
 16208 17a2 6160     		str	r1, [r4, #4]	@ unaligned
 16209 17a4 A260     		str	r2, [r4, #8]	@ unaligned
 16210 17a6 E360     		str	r3, [r4, #12]	@ unaligned
 16211 17a8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16212 17aa 2061     		str	r0, [r4, #16]	@ unaligned
 16213 17ac 6161     		str	r1, [r4, #20]	@ unaligned
 16214 17ae A261     		str	r2, [r4, #24]	@ unaligned
 16215 17b0 E361     		str	r3, [r4, #28]	@ unaligned
2108:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 16216              		.loc 1 2108 0
 16217 17b2 0023     		movs	r3, #0
 16218 17b4 C7F89430 		str	r3, [r7, #148]
 16219 17b8 25E0     		b	.L610
 16220              	.L611:
2109:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16221              		.loc 1 2109 0 discriminator 3
 16222 17ba D7F89430 		ldr	r3, [r7, #148]
 16223 17be 591C     		adds	r1, r3, #1
 16224 17c0 204A     		ldr	r2, .L655+44
 16225 17c2 D7F89430 		ldr	r3, [r7, #148]
 16226 17c6 0233     		adds	r3, r3, #2
 16227 17c8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16228 17cc 07F11800 		add	r0, r7, #24
 16229 17d0 0A46     		mov	r2, r1
 16230 17d2 1D49     		ldr	r1, .L655+48
 16231 17d4 FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****                 strcat(info_string, str);
 16232              		.loc 1 2110 0 discriminator 3
 16233 17d8 07F11803 		add	r3, r7, #24
 16234 17dc 1946     		mov	r1, r3
 16235 17de 7869     		ldr	r0, [r7, #20]
 16236 17e0 FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16237              		.loc 1 2111 0 discriminator 3
 16238 17e4 7869     		ldr	r0, [r7, #20]
 16239 17e6 FFF7FEFF 		bl	strlen
 16240 17ea 0346     		mov	r3, r0
 16241 17ec 1A46     		mov	r2, r3
 16242 17ee 7B69     		ldr	r3, [r7, #20]
 16243 17f0 1344     		add	r3, r3, r2
 16244 17f2 0A4A     		ldr	r2, .L655+4
 16245 17f4 1188     		ldrh	r1, [r2]	@ unaligned
 16246 17f6 9278     		ldrb	r2, [r2, #2]
 16247 17f8 1980     		strh	r1, [r3]	@ unaligned
 16248 17fa 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16249              		.loc 1 2108 0 discriminator 3
 16250 17fc D7F89430 		ldr	r3, [r7, #148]
 16251 1800 0133     		adds	r3, r3, #1
 16252 1802 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 361


 16253              	.L610:
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 16254              		.loc 1 2108 0 is_stmt 0 discriminator 1
 16255 1806 D7F89430 		ldr	r3, [r7, #148]
 16256 180a 052B     		cmp	r3, #5
 16257 180c D5DD     		ble	.L611
2112:..\src/command_processing.c ****             }
2113:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 16258              		.loc 1 2113 0 is_stmt 1
 16259 180e 0023     		movs	r3, #0
 16260 1810 C7F89430 		str	r3, [r7, #148]
 16261 1814 3FE0     		b	.L612
 16262              	.L656:
 16263 1816 00BF     		.align	2
 16264              	.L655:
 16265 1818 90150000 		.word	.LC209
 16266 181c AC0E0000 		.word	.LC132
 16267 1820 AC150000 		.word	.LC210
 16268 1824 C0150000 		.word	.LC211
 16269 1828 E4150000 		.word	.LC212
 16270 182c 08160000 		.word	.LC213
 16271 1830 20160000 		.word	.LC214
 16272 1834 34160000 		.word	.LC215
 16273 1838 50160000 		.word	.LC216
 16274 183c 6C160000 		.word	.LC217
 16275 1840 84160000 		.word	.LC218
 16276 1844 00000000 		.word	g_emg_meas
 16277 1848 A4160000 		.word	.LC219
 16278              	.L613:
2114:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16279              		.loc 1 2114 0 discriminator 3
 16280 184c D7F89430 		ldr	r3, [r7, #148]
 16281 1850 591C     		adds	r1, r3, #1
 16282 1852 C64A     		ldr	r2, .L657
 16283 1854 D7F89430 		ldr	r3, [r7, #148]
 16284 1858 52F82330 		ldr	r3, [r2, r3, lsl #2]
 16285 185c 07F11800 		add	r0, r7, #24
 16286 1860 0A46     		mov	r2, r1
 16287 1862 C349     		ldr	r1, .L657+4
 16288 1864 FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 16289              		.loc 1 2115 0 discriminator 3
 16290 1868 07F11803 		add	r3, r7, #24
 16291 186c 1946     		mov	r1, r3
 16292 186e 7869     		ldr	r0, [r7, #20]
 16293 1870 FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 16294              		.loc 1 2116 0 discriminator 3
 16295 1874 7869     		ldr	r0, [r7, #20]
 16296 1876 FFF7FEFF 		bl	strlen
 16297 187a 0346     		mov	r3, r0
 16298 187c 1A46     		mov	r2, r3
 16299 187e 7B69     		ldr	r3, [r7, #20]
 16300 1880 1344     		add	r3, r3, r2
 16301 1882 BC4A     		ldr	r2, .L657+8
 16302 1884 1188     		ldrh	r1, [r2]	@ unaligned
 16303 1886 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 362


 16304 1888 1980     		strh	r1, [r3]	@ unaligned
 16305 188a 9A70     		strb	r2, [r3, #2]
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16306              		.loc 1 2113 0 discriminator 3
 16307 188c D7F89430 		ldr	r3, [r7, #148]
 16308 1890 0133     		adds	r3, r3, #1
 16309 1892 C7F89430 		str	r3, [r7, #148]
 16310              	.L612:
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 16311              		.loc 1 2113 0 is_stmt 0 discriminator 1
 16312 1896 D7F89430 		ldr	r3, [r7, #148]
 16313 189a 012B     		cmp	r3, #1
 16314 189c D6DD     		ble	.L613
 16315              	.L609:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c ****         }
2119:..\src/command_processing.c ****         
2120:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 16316              		.loc 1 2120 0 is_stmt 1
 16317 189e D7F88830 		ldr	r3, [r7, #136]
 16318 18a2 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 16319 18a6 002B     		cmp	r3, #0
 16320 18a8 63D0     		beq	.L614
2121:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 16321              		.loc 1 2121 0
 16322 18aa D7F88830 		ldr	r3, [r7, #136]
 16323 18ae D3F8A422 		ldr	r2, [r3, #676]
 16324 18b2 07F11803 		add	r3, r7, #24
 16325 18b6 B049     		ldr	r1, .L657+12
 16326 18b8 1846     		mov	r0, r3
 16327 18ba FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 16328              		.loc 1 2122 0
 16329 18be 07F11803 		add	r3, r7, #24
 16330 18c2 1946     		mov	r1, r3
 16331 18c4 7869     		ldr	r0, [r7, #20]
 16332 18c6 FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16333              		.loc 1 2123 0
 16334 18ca 7869     		ldr	r0, [r7, #20]
 16335 18cc FFF7FEFF 		bl	strlen
 16336 18d0 0346     		mov	r3, r0
 16337 18d2 1A46     		mov	r2, r3
 16338 18d4 7B69     		ldr	r3, [r7, #20]
 16339 18d6 1344     		add	r3, r3, r2
 16340 18d8 A64A     		ldr	r2, .L657+8
 16341 18da 1188     		ldrh	r1, [r2]	@ unaligned
 16342 18dc 9278     		ldrb	r2, [r2, #2]
 16343 18de 1980     		strh	r1, [r3]	@ unaligned
 16344 18e0 9A70     		strb	r2, [r3, #2]
2124:..\src/command_processing.c ****             
2125:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 16345              		.loc 1 2125 0
 16346 18e2 D7F88830 		ldr	r3, [r7, #136]
 16347 18e6 D3F8A822 		ldr	r2, [r3, #680]
 16348 18ea 07F11803 		add	r3, r7, #24
 16349 18ee A349     		ldr	r1, .L657+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 363


 16350 18f0 1846     		mov	r0, r3
 16351 18f2 FFF7FEFF 		bl	sprintf
2126:..\src/command_processing.c ****             strcat(info_string, str);
 16352              		.loc 1 2126 0
 16353 18f6 07F11803 		add	r3, r7, #24
 16354 18fa 1946     		mov	r1, r3
 16355 18fc 7869     		ldr	r0, [r7, #20]
 16356 18fe FFF7FEFF 		bl	strcat
2127:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16357              		.loc 1 2127 0
 16358 1902 7869     		ldr	r0, [r7, #20]
 16359 1904 FFF7FEFF 		bl	strlen
 16360 1908 0346     		mov	r3, r0
 16361 190a 1A46     		mov	r2, r3
 16362 190c 7B69     		ldr	r3, [r7, #20]
 16363 190e 1344     		add	r3, r3, r2
 16364 1910 984A     		ldr	r2, .L657+8
 16365 1912 1188     		ldrh	r1, [r2]	@ unaligned
 16366 1914 9278     		ldrb	r2, [r2, #2]
 16367 1916 1980     		strh	r1, [r3]	@ unaligned
 16368 1918 9A70     		strb	r2, [r3, #2]
2128:..\src/command_processing.c ****             
2129:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 16369              		.loc 1 2129 0
 16370 191a D7F88830 		ldr	r3, [r7, #136]
 16371 191e D3F8A022 		ldr	r2, [r3, #672]
 16372 1922 D7F88830 		ldr	r3, [r7, #136]
 16373 1926 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 16374 192a 1846     		mov	r0, r3
 16375 192c D7F88810 		ldr	r1, [r7, #136]
 16376 1930 0346     		mov	r3, r0
 16377 1932 5B00     		lsls	r3, r3, #1
 16378 1934 0344     		add	r3, r3, r0
 16379 1936 1B01     		lsls	r3, r3, #4
 16380 1938 0B44     		add	r3, r3, r1
 16381 193a 03F29513 		addw	r3, r3, #405
 16382 193e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16383 1940 1A41     		asrs	r2, r2, r3
 16384 1942 07F11803 		add	r3, r7, #24
 16385 1946 8E49     		ldr	r1, .L657+20
 16386 1948 1846     		mov	r0, r3
 16387 194a FFF7FEFF 		bl	sprintf
2130:..\src/command_processing.c ****             strcat(info_string, str);
 16388              		.loc 1 2130 0
 16389 194e 07F11803 		add	r3, r7, #24
 16390 1952 1946     		mov	r1, r3
 16391 1954 7869     		ldr	r0, [r7, #20]
 16392 1956 FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 16393              		.loc 1 2131 0
 16394 195a 7869     		ldr	r0, [r7, #20]
 16395 195c FFF7FEFF 		bl	strlen
 16396 1960 0346     		mov	r3, r0
 16397 1962 1A46     		mov	r2, r3
 16398 1964 7B69     		ldr	r3, [r7, #20]
 16399 1966 1344     		add	r3, r3, r2
 16400 1968 824A     		ldr	r2, .L657+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 364


 16401 196a 1188     		ldrh	r1, [r2]	@ unaligned
 16402 196c 9278     		ldrb	r2, [r2, #2]
 16403 196e 1980     		strh	r1, [r3]	@ unaligned
 16404 1970 9A70     		strb	r2, [r3, #2]
 16405              	.L614:
2132:..\src/command_processing.c ****         }
2133:..\src/command_processing.c **** 
2134:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 16406              		.loc 1 2134 0
 16407 1972 D7F88830 		ldr	r3, [r7, #136]
 16408 1976 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 16409 197a 002B     		cmp	r3, #0
 16410 197c 00F0CF81 		beq	.L615
2135:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 16411              		.loc 1 2135 0
 16412 1980 804B     		ldr	r3, .L657+24
 16413 1982 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16414 1984 1A46     		mov	r2, r3
 16415 1986 07F11803 		add	r3, r7, #24
 16416 198a 7F49     		ldr	r1, .L657+28
 16417 198c 1846     		mov	r0, r3
 16418 198e FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 16419              		.loc 1 2136 0
 16420 1992 07F11803 		add	r3, r7, #24
 16421 1996 1946     		mov	r1, r3
 16422 1998 7869     		ldr	r0, [r7, #20]
 16423 199a FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****             
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16424              		.loc 1 2138 0
 16425 199e 7869     		ldr	r0, [r7, #20]
 16426 19a0 FFF7FEFF 		bl	strlen
 16427 19a4 0346     		mov	r3, r0
 16428 19a6 1A46     		mov	r2, r3
 16429 19a8 7B69     		ldr	r3, [r7, #20]
 16430 19aa 1344     		add	r3, r3, r2
 16431 19ac 714A     		ldr	r2, .L657+8
 16432 19ae 1188     		ldrh	r1, [r2]	@ unaligned
 16433 19b0 9278     		ldrb	r2, [r2, #2]
 16434 19b2 1980     		strh	r1, [r3]	@ unaligned
 16435 19b4 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****             
2140:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 16436              		.loc 1 2140 0
 16437 19b6 7869     		ldr	r0, [r7, #20]
 16438 19b8 FFF7FEFF 		bl	strlen
 16439 19bc 0346     		mov	r3, r0
 16440 19be 1A46     		mov	r2, r3
 16441 19c0 7B69     		ldr	r3, [r7, #20]
 16442 19c2 1344     		add	r3, r3, r2
 16443 19c4 714A     		ldr	r2, .L657+32
 16444 19c6 1D46     		mov	r5, r3
 16445 19c8 1446     		mov	r4, r2
 16446 19ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16447 19cc 2860     		str	r0, [r5]	@ unaligned
 16448 19ce 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 365


 16449 19d0 AA60     		str	r2, [r5, #8]	@ unaligned
 16450 19d2 EB60     		str	r3, [r5, #12]	@ unaligned
 16451 19d4 2068     		ldr	r0, [r4]	@ unaligned
 16452 19d6 2861     		str	r0, [r5, #16]	@ unaligned
 16453 19d8 2379     		ldrb	r3, [r4, #4]
 16454 19da 2B75     		strb	r3, [r5, #20]
2141:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 16455              		.loc 1 2141 0
 16456 19dc 0023     		movs	r3, #0
 16457 19de C7F89430 		str	r3, [r7, #148]
 16458 19e2 85E1     		b	.L616
 16459              	.L627:
2142:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16460              		.loc 1 2142 0
 16461 19e4 6A4A     		ldr	r2, .L657+36
 16462 19e6 D7F89430 		ldr	r3, [r7, #148]
 16463 19ea 1344     		add	r3, r3, r2
 16464 19ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16465 19ee 07F11800 		add	r0, r7, #24
 16466 19f2 D7F89420 		ldr	r2, [r7, #148]
 16467 19f6 6749     		ldr	r1, .L657+40
 16468 19f8 FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 16469              		.loc 1 2143 0
 16470 19fc 07F11803 		add	r3, r7, #24
 16471 1a00 1946     		mov	r1, r3
 16472 1a02 7869     		ldr	r0, [r7, #20]
 16473 1a04 FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 
2145:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 16474              		.loc 1 2145 0
 16475 1a08 07F11803 		add	r3, r7, #24
 16476 1a0c 624A     		ldr	r2, .L657+44
 16477 1a0e 1C46     		mov	r4, r3
 16478 1a10 1546     		mov	r5, r2
 16479 1a12 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16480 1a14 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 16481 1a16 2B68     		ldr	r3, [r5]
 16482 1a18 2380     		strh	r3, [r4]	@ movhi
2146:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 16483              		.loc 1 2146 0
 16484 1a1a 5D4A     		ldr	r2, .L657+36
 16485 1a1c D7F89430 		ldr	r3, [r7, #148]
 16486 1a20 1344     		add	r3, r3, r2
 16487 1a22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16488 1a24 1946     		mov	r1, r3
 16489 1a26 D7F88820 		ldr	r2, [r7, #136]
 16490 1a2a 0B46     		mov	r3, r1
 16491 1a2c 9B00     		lsls	r3, r3, #2
 16492 1a2e 0B44     		add	r3, r3, r1
 16493 1a30 1344     		add	r3, r3, r2
 16494 1a32 03F20223 		addw	r3, r3, #514
 16495 1a36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16496 1a38 002B     		cmp	r3, #0
 16497 1a3a 0FD0     		beq	.L617
2147:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16498              		.loc 1 2147 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 366


 16499 1a3c 07F11803 		add	r3, r7, #24
 16500 1a40 1846     		mov	r0, r3
 16501 1a42 FFF7FEFF 		bl	strlen
 16502 1a46 0346     		mov	r3, r0
 16503 1a48 1A46     		mov	r2, r3
 16504 1a4a 07F11803 		add	r3, r7, #24
 16505 1a4e 1344     		add	r3, r3, r2
 16506 1a50 524A     		ldr	r2, .L657+48
 16507 1a52 1068     		ldr	r0, [r2]	@ unaligned
 16508 1a54 1860     		str	r0, [r3]	@ unaligned
 16509 1a56 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16510 1a58 9A80     		strh	r2, [r3, #4]	@ unaligned
 16511 1a5a 0EE0     		b	.L618
 16512              	.L617:
2148:..\src/command_processing.c ****                 else
2149:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16513              		.loc 1 2149 0
 16514 1a5c 07F11803 		add	r3, r7, #24
 16515 1a60 1846     		mov	r0, r3
 16516 1a62 FFF7FEFF 		bl	strlen
 16517 1a66 0346     		mov	r3, r0
 16518 1a68 1A46     		mov	r2, r3
 16519 1a6a 07F11803 		add	r3, r7, #24
 16520 1a6e 1344     		add	r3, r3, r2
 16521 1a70 4B4A     		ldr	r2, .L657+52
 16522 1a72 1068     		ldr	r0, [r2]	@ unaligned
 16523 1a74 1860     		str	r0, [r3]	@ unaligned
 16524 1a76 1279     		ldrb	r2, [r2, #4]
 16525 1a78 1A71     		strb	r2, [r3, #4]
 16526              	.L618:
2150:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 16527              		.loc 1 2150 0
 16528 1a7a 07F11803 		add	r3, r7, #24
 16529 1a7e 1846     		mov	r0, r3
 16530 1a80 FFF7FEFF 		bl	strlen
 16531 1a84 0346     		mov	r3, r0
 16532 1a86 1A46     		mov	r2, r3
 16533 1a88 07F11803 		add	r3, r7, #24
 16534 1a8c 1344     		add	r3, r3, r2
 16535 1a8e 454A     		ldr	r2, .L657+56
 16536 1a90 1C46     		mov	r4, r3
 16537 1a92 1346     		mov	r3, r2
 16538 1a94 07CB     		ldmia	r3!, {r0, r1, r2}
 16539 1a96 2060     		str	r0, [r4]	@ unaligned
 16540 1a98 6160     		str	r1, [r4, #4]	@ unaligned
 16541 1a9a A260     		str	r2, [r4, #8]	@ unaligned
 16542 1a9c 1B88     		ldrh	r3, [r3]	@ unaligned
 16543 1a9e A381     		strh	r3, [r4, #12]	@ unaligned
2151:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 16544              		.loc 1 2151 0
 16545 1aa0 3B4A     		ldr	r2, .L657+36
 16546 1aa2 D7F89430 		ldr	r3, [r7, #148]
 16547 1aa6 1344     		add	r3, r3, r2
 16548 1aa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16549 1aaa 1946     		mov	r1, r3
 16550 1aac D7F88820 		ldr	r2, [r7, #136]
 16551 1ab0 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 367


 16552 1ab2 9B00     		lsls	r3, r3, #2
 16553 1ab4 0B44     		add	r3, r3, r1
 16554 1ab6 1344     		add	r3, r3, r2
 16555 1ab8 03F20323 		addw	r3, r3, #515
 16556 1abc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16557 1abe 002B     		cmp	r3, #0
 16558 1ac0 0FD0     		beq	.L619
2152:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16559              		.loc 1 2152 0
 16560 1ac2 07F11803 		add	r3, r7, #24
 16561 1ac6 1846     		mov	r0, r3
 16562 1ac8 FFF7FEFF 		bl	strlen
 16563 1acc 0346     		mov	r3, r0
 16564 1ace 1A46     		mov	r2, r3
 16565 1ad0 07F11803 		add	r3, r7, #24
 16566 1ad4 1344     		add	r3, r3, r2
 16567 1ad6 314A     		ldr	r2, .L657+48
 16568 1ad8 1068     		ldr	r0, [r2]	@ unaligned
 16569 1ada 1860     		str	r0, [r3]	@ unaligned
 16570 1adc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16571 1ade 9A80     		strh	r2, [r3, #4]	@ unaligned
 16572 1ae0 0EE0     		b	.L620
 16573              	.L619:
2153:..\src/command_processing.c ****                 else
2154:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 16574              		.loc 1 2154 0
 16575 1ae2 07F11803 		add	r3, r7, #24
 16576 1ae6 1846     		mov	r0, r3
 16577 1ae8 FFF7FEFF 		bl	strlen
 16578 1aec 0346     		mov	r3, r0
 16579 1aee 1A46     		mov	r2, r3
 16580 1af0 07F11803 		add	r3, r7, #24
 16581 1af4 1344     		add	r3, r3, r2
 16582 1af6 2A4A     		ldr	r2, .L657+52
 16583 1af8 1068     		ldr	r0, [r2]	@ unaligned
 16584 1afa 1860     		str	r0, [r3]	@ unaligned
 16585 1afc 1279     		ldrb	r2, [r2, #4]
 16586 1afe 1A71     		strb	r2, [r3, #4]
 16587              	.L620:
2155:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 16588              		.loc 1 2155 0
 16589 1b00 07F11803 		add	r3, r7, #24
 16590 1b04 1846     		mov	r0, r3
 16591 1b06 FFF7FEFF 		bl	strlen
 16592 1b0a 0346     		mov	r3, r0
 16593 1b0c 1A46     		mov	r2, r3
 16594 1b0e 07F11803 		add	r3, r7, #24
 16595 1b12 1344     		add	r3, r3, r2
 16596 1b14 244A     		ldr	r2, .L657+60
 16597 1b16 1D46     		mov	r5, r3
 16598 1b18 1446     		mov	r4, r2
 16599 1b1a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16600 1b1c 2860     		str	r0, [r5]	@ unaligned
 16601 1b1e 6960     		str	r1, [r5, #4]	@ unaligned
 16602 1b20 AA60     		str	r2, [r5, #8]	@ unaligned
 16603 1b22 EB60     		str	r3, [r5, #12]	@ unaligned
 16604 1b24 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 368


 16605 1b26 2B74     		strb	r3, [r5, #16]
2156:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 16606              		.loc 1 2156 0
 16607 1b28 194A     		ldr	r2, .L657+36
 16608 1b2a D7F89430 		ldr	r3, [r7, #148]
 16609 1b2e 1344     		add	r3, r3, r2
 16610 1b30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16611 1b32 1946     		mov	r1, r3
 16612 1b34 D7F88820 		ldr	r2, [r7, #136]
 16613 1b38 0B46     		mov	r3, r1
 16614 1b3a 9B00     		lsls	r3, r3, #2
 16615 1b3c 0B44     		add	r3, r3, r1
 16616 1b3e 1344     		add	r3, r3, r2
 16617 1b40 03F50173 		add	r3, r3, #516
 16618 1b44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16619 1b46 002B     		cmp	r3, #0
 16620 1b48 30D0     		beq	.L621
2157:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16621              		.loc 1 2157 0
 16622 1b4a 07F11803 		add	r3, r7, #24
 16623 1b4e 1846     		mov	r0, r3
 16624 1b50 FFF7FEFF 		bl	strlen
 16625 1b54 0346     		mov	r3, r0
 16626 1b56 1A46     		mov	r2, r3
 16627 1b58 07F11803 		add	r3, r7, #24
 16628 1b5c 1344     		add	r3, r3, r2
 16629 1b5e 0F4A     		ldr	r2, .L657+48
 16630 1b60 1068     		ldr	r0, [r2]	@ unaligned
 16631 1b62 1860     		str	r0, [r3]	@ unaligned
 16632 1b64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16633 1b66 9A80     		strh	r2, [r3, #4]	@ unaligned
 16634 1b68 2FE0     		b	.L622
 16635              	.L658:
 16636 1b6a 00BF     		.align	2
 16637              	.L657:
 16638 1b6c 00000000 		.word	g_emg_meas
 16639 1b70 B4160000 		.word	.LC220
 16640 1b74 AC0E0000 		.word	.LC132
 16641 1b78 C8160000 		.word	.LC221
 16642 1b7c E4160000 		.word	.LC222
 16643 1b80 0C170000 		.word	.LC223
 16644 1b84 00000000 		.word	N_IMU_Connected
 16645 1b88 20170000 		.word	.LC224
 16646 1b8c 34170000 		.word	.LC225
 16647 1b90 00000000 		.word	IMU_connected
 16648 1b94 4C170000 		.word	.LC226
 16649 1b98 60170000 		.word	.LC227
 16650 1b9c 28100000 		.word	.LC153
 16651 1ba0 30100000 		.word	.LC154
 16652 1ba4 74170000 		.word	.LC228
 16653 1ba8 84170000 		.word	.LC229
 16654              	.L621:
2158:..\src/command_processing.c ****                 else
2159:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16655              		.loc 1 2159 0
 16656 1bac 07F11803 		add	r3, r7, #24
 16657 1bb0 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 369


 16658 1bb2 FFF7FEFF 		bl	strlen
 16659 1bb6 0346     		mov	r3, r0
 16660 1bb8 1A46     		mov	r2, r3
 16661 1bba 07F11803 		add	r3, r7, #24
 16662 1bbe 1344     		add	r3, r3, r2
 16663 1bc0 CD4A     		ldr	r2, .L659
 16664 1bc2 1068     		ldr	r0, [r2]	@ unaligned
 16665 1bc4 1860     		str	r0, [r3]	@ unaligned
 16666 1bc6 1279     		ldrb	r2, [r2, #4]
 16667 1bc8 1A71     		strb	r2, [r3, #4]
 16668              	.L622:
2160:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 16669              		.loc 1 2160 0
 16670 1bca 07F11803 		add	r3, r7, #24
 16671 1bce 1846     		mov	r0, r3
 16672 1bd0 FFF7FEFF 		bl	strlen
 16673 1bd4 0346     		mov	r3, r0
 16674 1bd6 1A46     		mov	r2, r3
 16675 1bd8 07F11803 		add	r3, r7, #24
 16676 1bdc 1344     		add	r3, r3, r2
 16677 1bde C74A     		ldr	r2, .L659+4
 16678 1be0 1C46     		mov	r4, r3
 16679 1be2 1346     		mov	r3, r2
 16680 1be4 07CB     		ldmia	r3!, {r0, r1, r2}
 16681 1be6 2060     		str	r0, [r4]	@ unaligned
 16682 1be8 6160     		str	r1, [r4, #4]	@ unaligned
 16683 1bea A260     		str	r2, [r4, #8]	@ unaligned
 16684 1bec 1B88     		ldrh	r3, [r3]	@ unaligned
 16685 1bee A381     		strh	r3, [r4, #12]	@ unaligned
2161:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 16686              		.loc 1 2161 0
 16687 1bf0 C34A     		ldr	r2, .L659+8
 16688 1bf2 D7F89430 		ldr	r3, [r7, #148]
 16689 1bf6 1344     		add	r3, r3, r2
 16690 1bf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16691 1bfa 1946     		mov	r1, r3
 16692 1bfc D7F88820 		ldr	r2, [r7, #136]
 16693 1c00 0B46     		mov	r3, r1
 16694 1c02 9B00     		lsls	r3, r3, #2
 16695 1c04 0B44     		add	r3, r3, r1
 16696 1c06 1344     		add	r3, r3, r2
 16697 1c08 03F20523 		addw	r3, r3, #517
 16698 1c0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16699 1c0e 002B     		cmp	r3, #0
 16700 1c10 0FD0     		beq	.L623
2162:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 16701              		.loc 1 2162 0
 16702 1c12 07F11803 		add	r3, r7, #24
 16703 1c16 1846     		mov	r0, r3
 16704 1c18 FFF7FEFF 		bl	strlen
 16705 1c1c 0346     		mov	r3, r0
 16706 1c1e 1A46     		mov	r2, r3
 16707 1c20 07F11803 		add	r3, r7, #24
 16708 1c24 1344     		add	r3, r3, r2
 16709 1c26 B74A     		ldr	r2, .L659+12
 16710 1c28 1068     		ldr	r0, [r2]	@ unaligned
 16711 1c2a 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 370


 16712 1c2c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16713 1c2e 9A80     		strh	r2, [r3, #4]	@ unaligned
 16714 1c30 0EE0     		b	.L624
 16715              	.L623:
2163:..\src/command_processing.c ****                 else
2164:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16716              		.loc 1 2164 0
 16717 1c32 07F11803 		add	r3, r7, #24
 16718 1c36 1846     		mov	r0, r3
 16719 1c38 FFF7FEFF 		bl	strlen
 16720 1c3c 0346     		mov	r3, r0
 16721 1c3e 1A46     		mov	r2, r3
 16722 1c40 07F11803 		add	r3, r7, #24
 16723 1c44 1344     		add	r3, r3, r2
 16724 1c46 AC4A     		ldr	r2, .L659
 16725 1c48 1068     		ldr	r0, [r2]	@ unaligned
 16726 1c4a 1860     		str	r0, [r3]	@ unaligned
 16727 1c4c 1279     		ldrb	r2, [r2, #4]
 16728 1c4e 1A71     		strb	r2, [r3, #4]
 16729              	.L624:
2165:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 16730              		.loc 1 2165 0
 16731 1c50 07F11803 		add	r3, r7, #24
 16732 1c54 1846     		mov	r0, r3
 16733 1c56 FFF7FEFF 		bl	strlen
 16734 1c5a 0346     		mov	r3, r0
 16735 1c5c 1A46     		mov	r2, r3
 16736 1c5e 07F11803 		add	r3, r7, #24
 16737 1c62 1344     		add	r3, r3, r2
 16738 1c64 A84A     		ldr	r2, .L659+16
 16739 1c66 1C46     		mov	r4, r3
 16740 1c68 1346     		mov	r3, r2
 16741 1c6a 07CB     		ldmia	r3!, {r0, r1, r2}
 16742 1c6c 2060     		str	r0, [r4]	@ unaligned
 16743 1c6e 6160     		str	r1, [r4, #4]	@ unaligned
 16744 1c70 A260     		str	r2, [r4, #8]	@ unaligned
 16745 1c72 1A88     		ldrh	r2, [r3]	@ unaligned
 16746 1c74 9B78     		ldrb	r3, [r3, #2]
 16747 1c76 A281     		strh	r2, [r4, #12]	@ unaligned
 16748 1c78 A373     		strb	r3, [r4, #14]
2166:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 16749              		.loc 1 2166 0
 16750 1c7a A14A     		ldr	r2, .L659+8
 16751 1c7c D7F89430 		ldr	r3, [r7, #148]
 16752 1c80 1344     		add	r3, r3, r2
 16753 1c82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16754 1c84 1946     		mov	r1, r3
 16755 1c86 D7F88820 		ldr	r2, [r7, #136]
 16756 1c8a 0B46     		mov	r3, r1
 16757 1c8c 9B00     		lsls	r3, r3, #2
 16758 1c8e 0B44     		add	r3, r3, r1
 16759 1c90 1344     		add	r3, r3, r2
 16760 1c92 03F20623 		addw	r3, r3, #518
 16761 1c96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16762 1c98 002B     		cmp	r3, #0
 16763 1c9a 0FD0     		beq	.L625
2167:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 371


 16764              		.loc 1 2167 0
 16765 1c9c 07F11803 		add	r3, r7, #24
 16766 1ca0 1846     		mov	r0, r3
 16767 1ca2 FFF7FEFF 		bl	strlen
 16768 1ca6 0346     		mov	r3, r0
 16769 1ca8 1A46     		mov	r2, r3
 16770 1caa 07F11803 		add	r3, r7, #24
 16771 1cae 1344     		add	r3, r3, r2
 16772 1cb0 944A     		ldr	r2, .L659+12
 16773 1cb2 1068     		ldr	r0, [r2]	@ unaligned
 16774 1cb4 1860     		str	r0, [r3]	@ unaligned
 16775 1cb6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16776 1cb8 9A80     		strh	r2, [r3, #4]	@ unaligned
 16777 1cba 0EE0     		b	.L626
 16778              	.L625:
2168:..\src/command_processing.c ****                 else
2169:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 16779              		.loc 1 2169 0
 16780 1cbc 07F11803 		add	r3, r7, #24
 16781 1cc0 1846     		mov	r0, r3
 16782 1cc2 FFF7FEFF 		bl	strlen
 16783 1cc6 0346     		mov	r3, r0
 16784 1cc8 1A46     		mov	r2, r3
 16785 1cca 07F11803 		add	r3, r7, #24
 16786 1cce 1344     		add	r3, r3, r2
 16787 1cd0 894A     		ldr	r2, .L659
 16788 1cd2 1068     		ldr	r0, [r2]	@ unaligned
 16789 1cd4 1860     		str	r0, [r3]	@ unaligned
 16790 1cd6 1279     		ldrb	r2, [r2, #4]
 16791 1cd8 1A71     		strb	r2, [r3, #4]
 16792              	.L626:
2170:..\src/command_processing.c ****                      
2171:..\src/command_processing.c ****                 strcat(info_string, str);
 16793              		.loc 1 2171 0 discriminator 2
 16794 1cda 07F11803 		add	r3, r7, #24
 16795 1cde 1946     		mov	r1, r3
 16796 1ce0 7869     		ldr	r0, [r7, #20]
 16797 1ce2 FFF7FEFF 		bl	strcat
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16798              		.loc 1 2141 0 discriminator 2
 16799 1ce6 D7F89430 		ldr	r3, [r7, #148]
 16800 1cea 0133     		adds	r3, r3, #1
 16801 1cec C7F89430 		str	r3, [r7, #148]
 16802              	.L616:
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 16803              		.loc 1 2141 0 is_stmt 0 discriminator 1
 16804 1cf0 864B     		ldr	r3, .L659+20
 16805 1cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16806 1cf4 1A46     		mov	r2, r3
 16807 1cf6 D7F89430 		ldr	r3, [r7, #148]
 16808 1cfa 9A42     		cmp	r2, r3
 16809 1cfc 3FF772AE 		bgt	.L627
2172:..\src/command_processing.c ****             }       
2173:..\src/command_processing.c ****             
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16810              		.loc 1 2174 0 is_stmt 1
 16811 1d00 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 372


 16812 1d02 FFF7FEFF 		bl	strlen
 16813 1d06 0346     		mov	r3, r0
 16814 1d08 1A46     		mov	r2, r3
 16815 1d0a 7B69     		ldr	r3, [r7, #20]
 16816 1d0c 1344     		add	r3, r3, r2
 16817 1d0e 804A     		ldr	r2, .L659+24
 16818 1d10 1188     		ldrh	r1, [r2]	@ unaligned
 16819 1d12 9278     		ldrb	r2, [r2, #2]
 16820 1d14 1980     		strh	r1, [r3]	@ unaligned
 16821 1d16 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****           
2176:..\src/command_processing.c ****             IMU_reading_info(info_string);
 16822              		.loc 1 2176 0
 16823 1d18 7869     		ldr	r0, [r7, #20]
 16824 1d1a FFF7FEFF 		bl	IMU_reading_info
 16825              	.L615:
2177:..\src/command_processing.c ****         }
2178:..\src/command_processing.c ****         
2179:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16826              		.loc 1 2179 0
 16827 1d1e 7869     		ldr	r0, [r7, #20]
 16828 1d20 FFF7FEFF 		bl	strlen
 16829 1d24 0346     		mov	r3, r0
 16830 1d26 1A46     		mov	r2, r3
 16831 1d28 7B69     		ldr	r3, [r7, #20]
 16832 1d2a 1344     		add	r3, r3, r2
 16833 1d2c 784A     		ldr	r2, .L659+24
 16834 1d2e 1188     		ldrh	r1, [r2]	@ unaligned
 16835 1d30 9278     		ldrb	r2, [r2, #2]
 16836 1d32 1980     		strh	r1, [r3]	@ unaligned
 16837 1d34 9A70     		strb	r2, [r3, #2]
2180:..\src/command_processing.c **** 
2181:..\src/command_processing.c **** #ifdef GENERIC_FW   
2182:..\src/command_processing.c ****         int j;
2183:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 16838              		.loc 1 2183 0
 16839 1d36 7869     		ldr	r0, [r7, #20]
 16840 1d38 FFF7FEFF 		bl	strlen
 16841 1d3c 0346     		mov	r3, r0
 16842 1d3e 1A46     		mov	r2, r3
 16843 1d40 7B69     		ldr	r3, [r7, #20]
 16844 1d42 1344     		add	r3, r3, r2
 16845 1d44 734A     		ldr	r2, .L659+28
 16846 1d46 1D46     		mov	r5, r3
 16847 1d48 1446     		mov	r4, r2
 16848 1d4a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16849 1d4c 2860     		str	r0, [r5]	@ unaligned
 16850 1d4e 6960     		str	r1, [r5, #4]	@ unaligned
 16851 1d50 AA60     		str	r2, [r5, #8]	@ unaligned
 16852 1d52 EB60     		str	r3, [r5, #12]	@ unaligned
 16853 1d54 03CC     		ldmia	r4!, {r0, r1}
 16854 1d56 2861     		str	r0, [r5, #16]	@ unaligned
 16855 1d58 6961     		str	r1, [r5, #20]	@ unaligned
2184:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
 16856              		.loc 1 2184 0
 16857 1d5a 0023     		movs	r3, #0
 16858 1d5c C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 373


 16859 1d60 A1E0     		b	.L628
 16860              	.L637:
2185:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 16861              		.loc 1 2185 0
 16862 1d62 6D4A     		ldr	r2, .L659+32
 16863 1d64 D7F89430 		ldr	r3, [r7, #148]
 16864 1d68 1344     		add	r3, r3, r2
 16865 1d6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16866 1d6c 07F11800 		add	r0, r7, #24
 16867 1d70 D7F89420 		ldr	r2, [r7, #148]
 16868 1d74 6949     		ldr	r1, .L659+36
 16869 1d76 FFF7FEFF 		bl	sprintf
2186:..\src/command_processing.c ****             strcat(info_string, str);
 16870              		.loc 1 2186 0
 16871 1d7a 07F11803 		add	r3, r7, #24
 16872 1d7e 1946     		mov	r1, r3
 16873 1d80 7869     		ldr	r0, [r7, #20]
 16874 1d82 FFF7FEFF 		bl	strcat
2187:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 16875              		.loc 1 2187 0
 16876 1d86 D7F88830 		ldr	r3, [r7, #136]
 16877 1d8a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16878 1d8e 1A46     		mov	r2, r3
 16879 1d90 D7F89430 		ldr	r3, [r7, #148]
 16880 1d94 9A42     		cmp	r2, r3
 16881 1d96 14D1     		bne	.L629
2188:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 16882              		.loc 1 2188 0
 16883 1d98 D7F88830 		ldr	r3, [r7, #136]
 16884 1d9c 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16885 1da0 002B     		cmp	r3, #0
 16886 1da2 01D0     		beq	.L630
 16887              		.loc 1 2188 0 is_stmt 0 discriminator 1
 16888 1da4 5E4A     		ldr	r2, .L659+40
 16889 1da6 00E0     		b	.L631
 16890              	.L630:
 16891              		.loc 1 2188 0 discriminator 2
 16892 1da8 5E4A     		ldr	r2, .L659+44
 16893              	.L631:
 16894              		.loc 1 2188 0 discriminator 4
 16895 1daa 07F11803 		add	r3, r7, #24
 16896 1dae 5E49     		ldr	r1, .L659+48
 16897 1db0 1846     		mov	r0, r3
 16898 1db2 FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c ****                 strcat(info_string, str);
 16899              		.loc 1 2189 0 is_stmt 1 discriminator 4
 16900 1db6 07F11803 		add	r3, r7, #24
 16901 1dba 1946     		mov	r1, r3
 16902 1dbc 7869     		ldr	r0, [r7, #20]
 16903 1dbe FFF7FEFF 		bl	strcat
 16904              	.L629:
2190:..\src/command_processing.c ****             }
2191:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16905              		.loc 1 2191 0
 16906 1dc2 7869     		ldr	r0, [r7, #20]
 16907 1dc4 FFF7FEFF 		bl	strlen
 16908 1dc8 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 374


 16909 1dca 1A46     		mov	r2, r3
 16910 1dcc 7B69     		ldr	r3, [r7, #20]
 16911 1dce 1344     		add	r3, r3, r2
 16912 1dd0 4F4A     		ldr	r2, .L659+24
 16913 1dd2 1188     		ldrh	r1, [r2]	@ unaligned
 16914 1dd4 9278     		ldrb	r2, [r2, #2]
 16915 1dd6 1980     		strh	r1, [r3]	@ unaligned
 16916 1dd8 9A70     		strb	r2, [r3, #2]
2192:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 16917              		.loc 1 2192 0
 16918 1dda 4F4A     		ldr	r2, .L659+32
 16919 1ddc D7F89430 		ldr	r3, [r7, #148]
 16920 1de0 1344     		add	r3, r3, r2
 16921 1de2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16922 1de4 002B     		cmp	r3, #0
 16923 1de6 59D0     		beq	.L632
2193:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 16924              		.loc 1 2193 0
 16925 1de8 7869     		ldr	r0, [r7, #20]
 16926 1dea FFF7FEFF 		bl	strlen
 16927 1dee 0346     		mov	r3, r0
 16928 1df0 1A46     		mov	r2, r3
 16929 1df2 7B69     		ldr	r3, [r7, #20]
 16930 1df4 1344     		add	r3, r3, r2
 16931 1df6 4D4A     		ldr	r2, .L659+52
 16932 1df8 1D46     		mov	r5, r3
 16933 1dfa 1446     		mov	r4, r2
 16934 1dfc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16935 1dfe 2860     		str	r0, [r5]	@ unaligned
 16936 1e00 6960     		str	r1, [r5, #4]	@ unaligned
 16937 1e02 AA60     		str	r2, [r5, #8]	@ unaligned
 16938 1e04 EB60     		str	r3, [r5, #12]	@ unaligned
 16939 1e06 2068     		ldr	r0, [r4]	@ unaligned
 16940 1e08 2861     		str	r0, [r5, #16]	@ unaligned
 16941 1e0a A388     		ldrh	r3, [r4, #4]	@ unaligned
 16942 1e0c AB82     		strh	r3, [r5, #20]	@ unaligned
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16943              		.loc 1 2194 0
 16944 1e0e 0023     		movs	r3, #0
 16945 1e10 C7F88C30 		str	r3, [r7, #140]
 16946 1e14 2CE0     		b	.L633
 16947              	.L636:
2195:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 16948              		.loc 1 2195 0
 16949 1e16 4649     		ldr	r1, .L659+56
 16950 1e18 D7F89420 		ldr	r2, [r7, #148]
 16951 1e1c 1346     		mov	r3, r2
 16952 1e1e 9B00     		lsls	r3, r3, #2
 16953 1e20 1344     		add	r3, r3, r2
 16954 1e22 D7F88C20 		ldr	r2, [r7, #140]
 16955 1e26 1344     		add	r3, r3, r2
 16956 1e28 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 16957 1e2c 1C46     		mov	r4, r3
 16958 1e2e 4149     		ldr	r1, .L659+60
 16959 1e30 D7F89420 		ldr	r2, [r7, #148]
 16960 1e34 1346     		mov	r3, r2
 16961 1e36 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 375


 16962 1e38 1344     		add	r3, r3, r2
 16963 1e3a CA18     		adds	r2, r1, r3
 16964 1e3c D7F88C30 		ldr	r3, [r7, #140]
 16965 1e40 1344     		add	r3, r3, r2
 16966 1e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16967 1e44 102B     		cmp	r3, #16
 16968 1e46 01D1     		bne	.L634
 16969              		.loc 1 2195 0 is_stmt 0 discriminator 1
 16970 1e48 3B4B     		ldr	r3, .L659+64
 16971 1e4a 00E0     		b	.L635
 16972              	.L634:
 16973              		.loc 1 2195 0 discriminator 2
 16974 1e4c 3B4B     		ldr	r3, .L659+68
 16975              	.L635:
 16976              		.loc 1 2195 0 discriminator 4
 16977 1e4e 07F11800 		add	r0, r7, #24
 16978 1e52 2246     		mov	r2, r4
 16979 1e54 3A49     		ldr	r1, .L659+72
 16980 1e56 FFF7FEFF 		bl	sprintf
2196:..\src/command_processing.c ****                     strcat(info_string, str);
 16981              		.loc 1 2196 0 is_stmt 1 discriminator 4
 16982 1e5a 07F11803 		add	r3, r7, #24
 16983 1e5e 1946     		mov	r1, r3
 16984 1e60 7869     		ldr	r0, [r7, #20]
 16985 1e62 FFF7FEFF 		bl	strcat
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16986              		.loc 1 2194 0 discriminator 4
 16987 1e66 D7F88C30 		ldr	r3, [r7, #140]
 16988 1e6a 0133     		adds	r3, r3, #1
 16989 1e6c C7F88C30 		str	r3, [r7, #140]
 16990              	.L633:
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 16991              		.loc 1 2194 0 is_stmt 0 discriminator 2
 16992 1e70 294A     		ldr	r2, .L659+32
 16993 1e72 D7F89430 		ldr	r3, [r7, #148]
 16994 1e76 1344     		add	r3, r3, r2
 16995 1e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16996 1e7a 1A46     		mov	r2, r3
 16997 1e7c D7F88C30 		ldr	r3, [r7, #140]
 16998 1e80 9A42     		cmp	r2, r3
 16999 1e82 C8DC     		bgt	.L636
2197:..\src/command_processing.c ****                 }
2198:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 17000              		.loc 1 2198 0 is_stmt 1
 17001 1e84 7869     		ldr	r0, [r7, #20]
 17002 1e86 FFF7FEFF 		bl	strlen
 17003 1e8a 0346     		mov	r3, r0
 17004 1e8c 1A46     		mov	r2, r3
 17005 1e8e 7B69     		ldr	r3, [r7, #20]
 17006 1e90 1344     		add	r3, r3, r2
 17007 1e92 1F4A     		ldr	r2, .L659+24
 17008 1e94 1188     		ldrh	r1, [r2]	@ unaligned
 17009 1e96 9278     		ldrb	r2, [r2, #2]
 17010 1e98 1980     		strh	r1, [r3]	@ unaligned
 17011 1e9a 9A70     		strb	r2, [r3, #2]
 17012              	.L632:
2184:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 376


 17013              		.loc 1 2184 0 discriminator 2
 17014 1e9c D7F89430 		ldr	r3, [r7, #148]
 17015 1ea0 0133     		adds	r3, r3, #1
 17016 1ea2 C7F89430 		str	r3, [r7, #148]
 17017              	.L628:
2184:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17018              		.loc 1 2184 0 is_stmt 0 discriminator 1
 17019 1ea6 D7F89430 		ldr	r3, [r7, #148]
 17020 1eaa 012B     		cmp	r3, #1
 17021 1eac 7FF759AF 		ble	.L637
2199:..\src/command_processing.c ****             }
2200:..\src/command_processing.c ****         }
2201:..\src/command_processing.c **** #endif   
2202:..\src/command_processing.c ****         
2203:..\src/command_processing.c **** #ifdef MASTER_FW
2204:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2205:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2206:..\src/command_processing.c ****         else
2207:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2208:..\src/command_processing.c **** 
2209:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2210:..\src/command_processing.c ****         strcat(info_string, str);
2211:..\src/command_processing.c **** #endif
2212:..\src/command_processing.c **** 
2213:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17022              		.loc 1 2213 0 is_stmt 1
 17023 1eb0 244B     		ldr	r3, .L659+76
 17024 1eb2 1B88     		ldrh	r3, [r3]
 17025 1eb4 1A46     		mov	r2, r3
 17026 1eb6 244B     		ldr	r3, .L659+80
 17027 1eb8 1B88     		ldrh	r3, [r3]
 17028 1eba D21A     		subs	r2, r2, r3
 17029 1ebc 07F11803 		add	r3, r7, #24
 17030 1ec0 2249     		ldr	r1, .L659+84
 17031 1ec2 1846     		mov	r0, r3
 17032 1ec4 FFF7FEFF 		bl	sprintf
2214:..\src/command_processing.c ****         strcat(info_string, str);
 17033              		.loc 1 2214 0
 17034 1ec8 07F11803 		add	r3, r7, #24
 17035 1ecc 1946     		mov	r1, r3
 17036 1ece 7869     		ldr	r0, [r7, #20]
 17037 1ed0 FFF7FEFF 		bl	strcat
2215:..\src/command_processing.c ****   
2216:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17038              		.loc 1 2216 0
 17039 1ed4 7869     		ldr	r0, [r7, #20]
 17040 1ed6 FFF7FEFF 		bl	strlen
 17041 1eda 0346     		mov	r3, r0
 17042 1edc 1A46     		mov	r2, r3
 17043 1ede 7B69     		ldr	r3, [r7, #20]
 17044 1ee0 1344     		add	r3, r3, r2
 17045 1ee2 1B4A     		ldr	r2, .L659+88
 17046 1ee4 1188     		ldrh	r1, [r2]	@ unaligned
 17047 1ee6 9278     		ldrb	r2, [r2, #2]
 17048 1ee8 1980     		strh	r1, [r3]	@ unaligned
 17049 1eea 9A70     		strb	r2, [r3, #2]
 17050              	.L639:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 377


 17051              	.LBE16:
2217:..\src/command_processing.c ****     }
2218:..\src/command_processing.c **** }
 17052              		.loc 1 2218 0
 17053 1eec 00BF     		nop
 17054 1eee 9C37     		adds	r7, r7, #156
 17055              		.cfi_def_cfa_offset 36
 17056 1ef0 BD46     		mov	sp, r7
 17057              		.cfi_def_cfa_register 13
 17058              		@ sp needed
 17059 1ef2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17060              	.L660:
 17061 1ef6 00BF     		.align	2
 17062              	.L659:
 17063 1ef8 30100000 		.word	.LC154
 17064 1efc 98170000 		.word	.LC230
 17065 1f00 00000000 		.word	IMU_connected
 17066 1f04 28100000 		.word	.LC153
 17067 1f08 A8170000 		.word	.LC231
 17068 1f0c 00000000 		.word	N_IMU_Connected
 17069 1f10 AC0E0000 		.word	.LC132
 17070 1f14 B8170000 		.word	.LC232
 17071 1f18 00000000 		.word	N_Encoder_Line_Connected
 17072 1f1c D0170000 		.word	.LC233
 17073 1f20 F0170000 		.word	.LC234
 17074 1f24 F8170000 		.word	.LC235
 17075 1f28 00180000 		.word	.LC236
 17076 1f2c 20180000 		.word	.LC237
 17077 1f30 00000000 		.word	Encoder_Value
 17078 1f34 00000000 		.word	Encoder_Check
 17079 1f38 38180000 		.word	.LC238
 17080 1f3c 3C180000 		.word	.LC239
 17081 1f40 40180000 		.word	.LC240
 17082 1f44 00000000 		.word	timer_value0
 17083 1f48 00000000 		.word	timer_value
 17084 1f4c 4C180000 		.word	.LC241
 17085 1f50 68180000 		.word	.LC242
 17086              		.cfi_endproc
 17087              	.LFE72:
 17088              		.size	prepare_generic_info, .-prepare_generic_info
 17089              		.section	.rodata
 17090              		.align	2
 17091              	.LC243:
 17092 186c 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 17092      41474520 
 17092      53544154 
 17092      49535449 
 17092      43530D0A 
 17093 1881 000000   		.align	2
 17094              	.LC244:
 17095 1884 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 17095      206F6620 
 17095      4857206D 
 17095      61696E74 
 17095      656E616E 
 17096 18af 00       		.align	2
 17097              	.LC245:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 378


 17098 18b0 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 17098      206F6620 
 17098      75736167 
 17098      65207374 
 17098      61747320 
 17099 18e3 0A00     		.ascii	"\012\000"
 17100 18e5 000000   		.align	2
 17101              	.LC246:
 17102 18e8 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 17102      20636865 
 17102      636B6564 
 17102      2054696D 
 17102      653A2025 
 17103 191b 0A00     		.ascii	"\012\000"
 17104 191d 000000   		.align	2
 17105              	.LC247:
 17106 1920 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 17106      74696F6E 
 17106      73206869 
 17106      73746F67 
 17106      72616D20 
 17107 193f 00       		.align	2
 17108              	.LC248:
 17109 1940 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 17109      2564205B 
 17109      25642D25 
 17109      645D3A20 
 17109      256C750D 
 17110 1956 0000     		.align	2
 17111              	.LC249:
 17112 1958 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 17112      656E7420 
 17112      68697374 
 17112      6F677261 
 17112      6D20286D 
 17113 1972 0000     		.align	2
 17114              	.LC250:
 17115 1974 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 17115      73686F6C 
 17115      64202564 
 17115      205B2564 
 17115      2D25645D 
 17116              		.align	2
 17117              	.LC251:
 17118 1990 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 17118      61637469 
 17118      76617469 
 17118      6F6E7320 
 17118      636F756E 
 17119 19b2 0000     		.align	2
 17120              	.LC252:
 17121 19b4 52657374 		.ascii	"Rest position occurrences: %lu\000"
 17121      20706F73 
 17121      6974696F 
 17121      6E206F63 
 17121      63757272 
 17122 19d3 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 379


 17123              	.LC253:
 17124 19d4 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 17124      6520746F 
 17124      74616C20 
 17124      64697370 
 17124      6C616365 
 17125 19fa 0000     		.align	2
 17126              	.LC254:
 17127 19fc 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 17127      6C20706F 
 17127      77657220 
 17127      6F6E2074 
 17127      696D6520 
 17128 1a1b 00       		.align	2
 17129              	.LC255:
 17130 1a1c 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 17130      6C207265 
 17130      73742070 
 17130      6F736974 
 17130      696F6E20 
 17131              		.section	.text.prepare_counter_info,"ax",%progbits
 17132              		.align	2
 17133              		.global	prepare_counter_info
 17134              		.thumb
 17135              		.thumb_func
 17136              		.type	prepare_counter_info, %function
 17137              	prepare_counter_info:
 17138              	.LFB73:
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c **** //==============================================================================
2221:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2222:..\src/command_processing.c **** //==============================================================================
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2225:..\src/command_processing.c **** {
 17139              		.loc 1 2225 0
 17140              		.cfi_startproc
 17141              		@ args = 0, pretend = 0, frame = 128
 17142              		@ frame_needed = 1, uses_anonymous_args = 0
 17143 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17144              		.cfi_def_cfa_offset 20
 17145              		.cfi_offset 4, -20
 17146              		.cfi_offset 5, -16
 17147              		.cfi_offset 6, -12
 17148              		.cfi_offset 7, -8
 17149              		.cfi_offset 14, -4
 17150 0002 A5B0     		sub	sp, sp, #148
 17151              		.cfi_def_cfa_offset 168
 17152 0004 04AF     		add	r7, sp, #16
 17153              		.cfi_def_cfa 7, 152
 17154 0006 7860     		str	r0, [r7, #4]
2226:..\src/command_processing.c ****     char str[100];  
2227:..\src/command_processing.c ****     int i;
2228:..\src/command_processing.c ****     int step;
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17155              		.loc 1 2230 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 380


 17156 0008 7D4B     		ldr	r3, .L667
 17157 000a BB67     		str	r3, [r7, #120]
2231:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 17158              		.loc 1 2231 0
 17159 000c BB6F     		ldr	r3, [r7, #120]
 17160 000e B033     		adds	r3, r3, #176
 17161 0010 7B67     		str	r3, [r7, #116]
2232:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 17162              		.loc 1 2232 0
 17163 0012 7B6F     		ldr	r3, [r7, #116]
 17164 0014 93F86030 		ldrb	r3, [r3, #96]
 17165 0018 87F87330 		strb	r3, [r7, #115]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 17166              		.loc 1 2234 0
 17167 001c 7868     		ldr	r0, [r7, #4]
 17168 001e FFF7FEFF 		bl	strlen
 17169 0022 0346     		mov	r3, r0
 17170 0024 1A46     		mov	r2, r3
 17171 0026 7B68     		ldr	r3, [r7, #4]
 17172 0028 1344     		add	r3, r3, r2
 17173 002a 764A     		ldr	r2, .L667+4
 17174 002c 1D46     		mov	r5, r3
 17175 002e 1446     		mov	r4, r2
 17176 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17177 0032 2860     		str	r0, [r5]	@ unaligned
 17178 0034 6960     		str	r1, [r5, #4]	@ unaligned
 17179 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 17180 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 17181 003a 2068     		ldr	r0, [r4]	@ unaligned
 17182 003c 2861     		str	r0, [r5, #16]	@ unaligned
 17183 003e 2379     		ldrb	r3, [r4, #4]
 17184 0040 2B75     		strb	r3, [r5, #20]
2235:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17185              		.loc 1 2235 0
 17186 0042 7868     		ldr	r0, [r7, #4]
 17187 0044 FFF7FEFF 		bl	strlen
 17188 0048 0346     		mov	r3, r0
 17189 004a 1A46     		mov	r2, r3
 17190 004c 7B68     		ldr	r3, [r7, #4]
 17191 004e 1344     		add	r3, r3, r2
 17192 0050 6D4A     		ldr	r2, .L667+8
 17193 0052 1188     		ldrh	r1, [r2]	@ unaligned
 17194 0054 9278     		ldrb	r2, [r2, #2]
 17195 0056 1980     		strh	r1, [r3]	@ unaligned
 17196 0058 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c ****     
2237:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17197              		.loc 1 2237 0
 17198 005a BB6F     		ldr	r3, [r7, #120]
 17199 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17200 0060 1A46     		mov	r2, r3
 17201 0062 BB6F     		ldr	r3, [r7, #120]
 17202 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 17203 0068 1946     		mov	r1, r3
 17204 006a BB6F     		ldr	r3, [r7, #120]
 17205 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 381


 17206 0070 07F10800 		add	r0, r7, #8
 17207 0074 0093     		str	r3, [sp]
 17208 0076 0B46     		mov	r3, r1
 17209 0078 6449     		ldr	r1, .L667+12
 17210 007a FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****     strcat(info_string, str);
 17211              		.loc 1 2238 0
 17212 007e 07F10803 		add	r3, r7, #8
 17213 0082 1946     		mov	r1, r3
 17214 0084 7868     		ldr	r0, [r7, #4]
 17215 0086 FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17216              		.loc 1 2240 0
 17217 008a BB6F     		ldr	r3, [r7, #120]
 17218 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17219 0090 1A46     		mov	r2, r3
 17220 0092 BB6F     		ldr	r3, [r7, #120]
 17221 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17222 0098 1946     		mov	r1, r3
 17223 009a BB6F     		ldr	r3, [r7, #120]
 17224 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17225 00a0 07F10800 		add	r0, r7, #8
 17226 00a4 0093     		str	r3, [sp]
 17227 00a6 0B46     		mov	r3, r1
 17228 00a8 5949     		ldr	r1, .L667+16
 17229 00aa FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****     strcat(info_string, str);
 17230              		.loc 1 2241 0
 17231 00ae 07F10803 		add	r3, r7, #8
 17232 00b2 1946     		mov	r1, r3
 17233 00b4 7868     		ldr	r0, [r7, #4]
 17234 00b6 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****             
2243:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 17235              		.loc 1 2243 0
 17236 00ba BB6F     		ldr	r3, [r7, #120]
 17237 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 17238 00c0 1D46     		mov	r5, r3
 17239 00c2 BB6F     		ldr	r3, [r7, #120]
 17240 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 17241 00c8 1E46     		mov	r6, r3
 17242 00ca BB6F     		ldr	r3, [r7, #120]
 17243 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 17244 00d0 1A46     		mov	r2, r3
 17245 00d2 BB6F     		ldr	r3, [r7, #120]
 17246 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17247 00d8 1946     		mov	r1, r3
 17248 00da BB6F     		ldr	r3, [r7, #120]
 17249 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17250 00e0 1C46     		mov	r4, r3
 17251 00e2 BB6F     		ldr	r3, [r7, #120]
 17252 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17253 00e8 07F10800 		add	r0, r7, #8
 17254 00ec 0393     		str	r3, [sp, #12]
 17255 00ee 0294     		str	r4, [sp, #8]
 17256 00f0 0191     		str	r1, [sp, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 382


 17257 00f2 0092     		str	r2, [sp]
 17258 00f4 3346     		mov	r3, r6
 17259 00f6 2A46     		mov	r2, r5
 17260 00f8 4649     		ldr	r1, .L667+20
 17261 00fa FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****     strcat(info_string, str);
 17262              		.loc 1 2244 0
 17263 00fe 07F10803 		add	r3, r7, #8
 17264 0102 1946     		mov	r1, r3
 17265 0104 7868     		ldr	r0, [r7, #4]
 17266 0106 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 17267              		.loc 1 2246 0
 17268 010a 07F10803 		add	r3, r7, #8
 17269 010e 424A     		ldr	r2, .L667+24
 17270 0110 1C46     		mov	r4, r3
 17271 0112 1546     		mov	r5, r2
 17272 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17273 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17274 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 17275 011c 07C4     		stmia	r4!, {r0, r1, r2}
 17276 011e 2380     		strh	r3, [r4]	@ movhi
 17277 0120 0234     		adds	r4, r4, #2
 17278 0122 1B0C     		lsrs	r3, r3, #16
 17279 0124 2370     		strb	r3, [r4]
2247:..\src/command_processing.c ****     strcat(info_string, str);
 17280              		.loc 1 2247 0
 17281 0126 07F10803 		add	r3, r7, #8
 17282 012a 1946     		mov	r1, r3
 17283 012c 7868     		ldr	r0, [r7, #4]
 17284 012e FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 17285              		.loc 1 2248 0
 17286 0132 7B6F     		ldr	r3, [r7, #116]
 17287 0134 996B     		ldr	r1, [r3, #56]
 17288 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 17289 013a B86F     		ldr	r0, [r7, #120]
 17290 013c 1346     		mov	r3, r2
 17291 013e 5B00     		lsls	r3, r3, #1
 17292 0140 1344     		add	r3, r3, r2
 17293 0142 1B01     		lsls	r3, r3, #4
 17294 0144 0344     		add	r3, r3, r0
 17295 0146 03F29513 		addw	r3, r3, #405
 17296 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17297 014c 41FA03F3 		asr	r3, r1, r3
 17298 0150 324A     		ldr	r2, .L667+28
 17299 0152 82FB0312 		smull	r1, r2, r2, r3
 17300 0156 9210     		asrs	r2, r2, #2
 17301 0158 DB17     		asrs	r3, r3, #31
 17302 015a D31A     		subs	r3, r2, r3
 17303 015c FB66     		str	r3, [r7, #108]
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17304              		.loc 1 2249 0
 17305 015e 0123     		movs	r3, #1
 17306 0160 FB67     		str	r3, [r7, #124]
 17307 0162 21E0     		b	.L662
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 383


 17308              	.L663:
2250:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 17309              		.loc 1 2250 0 discriminator 3
 17310 0164 FB6F     		ldr	r3, [r7, #124]
 17311 0166 013B     		subs	r3, r3, #1
 17312 0168 FA6E     		ldr	r2, [r7, #108]
 17313 016a 02FB03F3 		mul	r3, r2, r3
 17314 016e 5C1C     		adds	r4, r3, #1
 17315 0170 FB6E     		ldr	r3, [r7, #108]
 17316 0172 FA6F     		ldr	r2, [r7, #124]
 17317 0174 02FB03F3 		mul	r3, r2, r3
 17318 0178 FA6F     		ldr	r2, [r7, #124]
 17319 017a 511E     		subs	r1, r2, #1
 17320 017c BA6F     		ldr	r2, [r7, #120]
 17321 017e 0631     		adds	r1, r1, #6
 17322 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17323 0184 07F10800 		add	r0, r7, #8
 17324 0188 0192     		str	r2, [sp, #4]
 17325 018a 0093     		str	r3, [sp]
 17326 018c 2346     		mov	r3, r4
 17327 018e FA6F     		ldr	r2, [r7, #124]
 17328 0190 2349     		ldr	r1, .L667+32
 17329 0192 FFF7FEFF 		bl	sprintf
2251:..\src/command_processing.c ****         strcat(info_string, str);
 17330              		.loc 1 2251 0 discriminator 3
 17331 0196 07F10803 		add	r3, r7, #8
 17332 019a 1946     		mov	r1, r3
 17333 019c 7868     		ldr	r0, [r7, #4]
 17334 019e FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17335              		.loc 1 2249 0 discriminator 3
 17336 01a2 FB6F     		ldr	r3, [r7, #124]
 17337 01a4 0133     		adds	r3, r3, #1
 17338 01a6 FB67     		str	r3, [r7, #124]
 17339              	.L662:
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17340              		.loc 1 2249 0 is_stmt 0 discriminator 1
 17341 01a8 FB6F     		ldr	r3, [r7, #124]
 17342 01aa 0A2B     		cmp	r3, #10
 17343 01ac DADD     		ble	.L663
2252:..\src/command_processing.c ****     }
2253:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17344              		.loc 1 2253 0 is_stmt 1
 17345 01ae 7868     		ldr	r0, [r7, #4]
 17346 01b0 FFF7FEFF 		bl	strlen
 17347 01b4 0346     		mov	r3, r0
 17348 01b6 1A46     		mov	r2, r3
 17349 01b8 7B68     		ldr	r3, [r7, #4]
 17350 01ba 1344     		add	r3, r3, r2
 17351 01bc 124A     		ldr	r2, .L667+8
 17352 01be 1188     		ldrh	r1, [r2]	@ unaligned
 17353 01c0 9278     		ldrb	r2, [r2, #2]
 17354 01c2 1980     		strh	r1, [r3]	@ unaligned
 17355 01c4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c ****     
2255:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 17356              		.loc 1 2255 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 384


 17357 01c6 07F10803 		add	r3, r7, #8
 17358 01ca 164A     		ldr	r2, .L667+36
 17359 01cc 1C46     		mov	r4, r3
 17360 01ce 1546     		mov	r5, r2
 17361 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17362 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17363 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 17364 01d8 03C4     		stmia	r4!, {r0, r1}
 17365 01da 2280     		strh	r2, [r4]	@ movhi
2256:..\src/command_processing.c ****     strcat(info_string, str);
 17366              		.loc 1 2256 0
 17367 01dc 07F10803 		add	r3, r7, #8
 17368 01e0 1946     		mov	r1, r3
 17369 01e2 7868     		ldr	r0, [r7, #4]
 17370 01e4 FFF7FEFF 		bl	strcat
2257:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 17371              		.loc 1 2257 0
 17372 01e8 7B6F     		ldr	r3, [r7, #116]
 17373 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 17374 01ee 002B     		cmp	r3, #0
 17375 01f0 00DA     		bge	.L664
 17376 01f2 0333     		adds	r3, r3, #3
 17377              	.L664:
 17378 01f4 9B10     		asrs	r3, r3, #2
 17379 01f6 1BB2     		sxth	r3, r3
 17380 01f8 FB66     		str	r3, [r7, #108]
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17381              		.loc 1 2258 0
 17382 01fa 0123     		movs	r3, #1
 17383 01fc FB67     		str	r3, [r7, #124]
 17384 01fe 34E0     		b	.L665
 17385              	.L668:
 17386              		.align	2
 17387              	.L667:
 17388 0200 00000000 		.word	g_mem
 17389 0204 6C180000 		.word	.LC243
 17390 0208 AC0E0000 		.word	.LC132
 17391 020c 84180000 		.word	.LC244
 17392 0210 B0180000 		.word	.LC245
 17393 0214 E8180000 		.word	.LC246
 17394 0218 20190000 		.word	.LC247
 17395 021c 67666666 		.word	1717986919
 17396 0220 40190000 		.word	.LC248
 17397 0224 58190000 		.word	.LC249
 17398              	.L666:
2259:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 17399              		.loc 1 2259 0 discriminator 3
 17400 0228 FB6F     		ldr	r3, [r7, #124]
 17401 022a 013B     		subs	r3, r3, #1
 17402 022c FA6E     		ldr	r2, [r7, #108]
 17403 022e 02FB03F4 		mul	r4, r2, r3
 17404 0232 FB6E     		ldr	r3, [r7, #108]
 17405 0234 FA6F     		ldr	r2, [r7, #124]
 17406 0236 02FB03F3 		mul	r3, r2, r3
 17407 023a FA6F     		ldr	r2, [r7, #124]
 17408 023c 511E     		subs	r1, r2, #1
 17409 023e BA6F     		ldr	r2, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 385


 17410 0240 1031     		adds	r1, r1, #16
 17411 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 17412 0246 07F10800 		add	r0, r7, #8
 17413 024a 0192     		str	r2, [sp, #4]
 17414 024c 0093     		str	r3, [sp]
 17415 024e 2346     		mov	r3, r4
 17416 0250 FA6F     		ldr	r2, [r7, #124]
 17417 0252 5149     		ldr	r1, .L669
 17418 0254 FFF7FEFF 		bl	sprintf
2260:..\src/command_processing.c ****         strcat(info_string, str);
 17419              		.loc 1 2260 0 discriminator 3
 17420 0258 07F10803 		add	r3, r7, #8
 17421 025c 1946     		mov	r1, r3
 17422 025e 7868     		ldr	r0, [r7, #4]
 17423 0260 FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17424              		.loc 1 2258 0 discriminator 3
 17425 0264 FB6F     		ldr	r3, [r7, #124]
 17426 0266 0133     		adds	r3, r3, #1
 17427 0268 FB67     		str	r3, [r7, #124]
 17428              	.L665:
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17429              		.loc 1 2258 0 is_stmt 0 discriminator 1
 17430 026a FB6F     		ldr	r3, [r7, #124]
 17431 026c 042B     		cmp	r3, #4
 17432 026e DBDD     		ble	.L666
2261:..\src/command_processing.c ****     }
2262:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17433              		.loc 1 2262 0 is_stmt 1
 17434 0270 7868     		ldr	r0, [r7, #4]
 17435 0272 FFF7FEFF 		bl	strlen
 17436 0276 0346     		mov	r3, r0
 17437 0278 1A46     		mov	r2, r3
 17438 027a 7B68     		ldr	r3, [r7, #4]
 17439 027c 1344     		add	r3, r3, r2
 17440 027e 474A     		ldr	r2, .L669+4
 17441 0280 1188     		ldrh	r1, [r2]	@ unaligned
 17442 0282 9278     		ldrb	r2, [r2, #2]
 17443 0284 1980     		strh	r1, [r3]	@ unaligned
 17444 0286 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****             
2264:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 17445              		.loc 1 2264 0
 17446 0288 BB6F     		ldr	r3, [r7, #120]
 17447 028a 1A69     		ldr	r2, [r3, #16]
 17448 028c BB6F     		ldr	r3, [r7, #120]
 17449 028e 5B69     		ldr	r3, [r3, #20]
 17450 0290 07F10800 		add	r0, r7, #8
 17451 0294 4249     		ldr	r1, .L669+8
 17452 0296 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****     strcat(info_string, str);
 17453              		.loc 1 2265 0
 17454 029a 07F10803 		add	r3, r7, #8
 17455 029e 1946     		mov	r1, r3
 17456 02a0 7868     		ldr	r0, [r7, #4]
 17457 02a2 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****     strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 386


 17458              		.loc 1 2266 0
 17459 02a6 7868     		ldr	r0, [r7, #4]
 17460 02a8 FFF7FEFF 		bl	strlen
 17461 02ac 0346     		mov	r3, r0
 17462 02ae 1A46     		mov	r2, r3
 17463 02b0 7B68     		ldr	r3, [r7, #4]
 17464 02b2 1344     		add	r3, r3, r2
 17465 02b4 394A     		ldr	r2, .L669+4
 17466 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 17467 02b8 9278     		ldrb	r2, [r2, #2]
 17468 02ba 1980     		strh	r1, [r3]	@ unaligned
 17469 02bc 9A70     		strb	r2, [r3, #2]
2267:..\src/command_processing.c ****     
2268:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 17470              		.loc 1 2268 0
 17471 02be BB6F     		ldr	r3, [r7, #120]
 17472 02c0 1A6D     		ldr	r2, [r3, #80]
 17473 02c2 07F10803 		add	r3, r7, #8
 17474 02c6 3749     		ldr	r1, .L669+12
 17475 02c8 1846     		mov	r0, r3
 17476 02ca FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****     strcat(info_string, str);
 17477              		.loc 1 2269 0
 17478 02ce 07F10803 		add	r3, r7, #8
 17479 02d2 1946     		mov	r1, r3
 17480 02d4 7868     		ldr	r0, [r7, #4]
 17481 02d6 FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17482              		.loc 1 2270 0
 17483 02da 7868     		ldr	r0, [r7, #4]
 17484 02dc FFF7FEFF 		bl	strlen
 17485 02e0 0346     		mov	r3, r0
 17486 02e2 1A46     		mov	r2, r3
 17487 02e4 7B68     		ldr	r3, [r7, #4]
 17488 02e6 1344     		add	r3, r3, r2
 17489 02e8 2C4A     		ldr	r2, .L669+4
 17490 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 17491 02ec 9278     		ldrb	r2, [r2, #2]
 17492 02ee 1980     		strh	r1, [r3]	@ unaligned
 17493 02f0 9A70     		strb	r2, [r3, #2]
2271:..\src/command_processing.c ****     
2272:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 17494              		.loc 1 2272 0
 17495 02f2 BB6F     		ldr	r3, [r7, #120]
 17496 02f4 5A6D     		ldr	r2, [r3, #84]
 17497 02f6 07F10803 		add	r3, r7, #8
 17498 02fa 2B49     		ldr	r1, .L669+16
 17499 02fc 1846     		mov	r0, r3
 17500 02fe FFF7FEFF 		bl	sprintf
2273:..\src/command_processing.c ****     strcat(info_string, str);
 17501              		.loc 1 2273 0
 17502 0302 07F10803 		add	r3, r7, #8
 17503 0306 1946     		mov	r1, r3
 17504 0308 7868     		ldr	r0, [r7, #4]
 17505 030a FFF7FEFF 		bl	strcat
2274:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17506              		.loc 1 2274 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 387


 17507 030e 7868     		ldr	r0, [r7, #4]
 17508 0310 FFF7FEFF 		bl	strlen
 17509 0314 0346     		mov	r3, r0
 17510 0316 1A46     		mov	r2, r3
 17511 0318 7B68     		ldr	r3, [r7, #4]
 17512 031a 1344     		add	r3, r3, r2
 17513 031c 1F4A     		ldr	r2, .L669+4
 17514 031e 1188     		ldrh	r1, [r2]	@ unaligned
 17515 0320 9278     		ldrb	r2, [r2, #2]
 17516 0322 1980     		strh	r1, [r3]	@ unaligned
 17517 0324 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****     
2276:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 17518              		.loc 1 2276 0
 17519 0326 BB6F     		ldr	r3, [r7, #120]
 17520 0328 9A6D     		ldr	r2, [r3, #88]
 17521 032a 07F10803 		add	r3, r7, #8
 17522 032e 1F49     		ldr	r1, .L669+20
 17523 0330 1846     		mov	r0, r3
 17524 0332 FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****     strcat(info_string, str);
 17525              		.loc 1 2277 0
 17526 0336 07F10803 		add	r3, r7, #8
 17527 033a 1946     		mov	r1, r3
 17528 033c 7868     		ldr	r0, [r7, #4]
 17529 033e FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17530              		.loc 1 2278 0
 17531 0342 7868     		ldr	r0, [r7, #4]
 17532 0344 FFF7FEFF 		bl	strlen
 17533 0348 0346     		mov	r3, r0
 17534 034a 1A46     		mov	r2, r3
 17535 034c 7B68     		ldr	r3, [r7, #4]
 17536 034e 1344     		add	r3, r3, r2
 17537 0350 124A     		ldr	r2, .L669+4
 17538 0352 1188     		ldrh	r1, [r2]	@ unaligned
 17539 0354 9278     		ldrb	r2, [r2, #2]
 17540 0356 1980     		strh	r1, [r3]	@ unaligned
 17541 0358 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 17542              		.loc 1 2280 0
 17543 035a BB6F     		ldr	r3, [r7, #120]
 17544 035c DA6D     		ldr	r2, [r3, #92]
 17545 035e 07F10803 		add	r3, r7, #8
 17546 0362 1349     		ldr	r1, .L669+24
 17547 0364 1846     		mov	r0, r3
 17548 0366 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****     strcat(info_string, str);
 17549              		.loc 1 2281 0
 17550 036a 07F10803 		add	r3, r7, #8
 17551 036e 1946     		mov	r1, r3
 17552 0370 7868     		ldr	r0, [r7, #4]
 17553 0372 FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17554              		.loc 1 2282 0
 17555 0376 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 388


 17556 0378 FFF7FEFF 		bl	strlen
 17557 037c 0346     		mov	r3, r0
 17558 037e 1A46     		mov	r2, r3
 17559 0380 7B68     		ldr	r3, [r7, #4]
 17560 0382 1344     		add	r3, r3, r2
 17561 0384 054A     		ldr	r2, .L669+4
 17562 0386 1188     		ldrh	r1, [r2]	@ unaligned
 17563 0388 9278     		ldrb	r2, [r2, #2]
 17564 038a 1980     		strh	r1, [r3]	@ unaligned
 17565 038c 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** }
 17566              		.loc 1 2284 0
 17567 038e 00BF     		nop
 17568 0390 8437     		adds	r7, r7, #132
 17569              		.cfi_def_cfa_offset 20
 17570 0392 BD46     		mov	sp, r7
 17571              		.cfi_def_cfa_register 13
 17572              		@ sp needed
 17573 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 17574              	.L670:
 17575 0396 00BF     		.align	2
 17576              	.L669:
 17577 0398 74190000 		.word	.LC250
 17578 039c AC0E0000 		.word	.LC132
 17579 03a0 90190000 		.word	.LC251
 17580 03a4 B4190000 		.word	.LC252
 17581 03a8 D4190000 		.word	.LC253
 17582 03ac FC190000 		.word	.LC254
 17583 03b0 1C1A0000 		.word	.LC255
 17584              		.cfi_endproc
 17585              	.LFE73:
 17586              		.size	prepare_counter_info, .-prepare_counter_info
 17587              		.section	.rodata
 17588              		.align	2
 17589              	.LC256:
 17590 1a40 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 17590      77617265 
 17590      20766572 
 17590      73696F6E 
 17590      3A202573 
 17591 1a57 00       		.align	2
 17592              	.LC257:
 17593 1a58 506F7369 		.ascii	"Position PID: \000"
 17593      74696F6E 
 17593      20504944 
 17593      3A2000
 17594 1a67 00       		.align	2
 17595              	.LC258:
 17596 1a68 43757272 		.ascii	"Current PID: \000"
 17596      656E7420 
 17596      5049443A 
 17596      2000
 17597 1a76 0000     		.align	2
 17598              	.LC259:
 17599 1a78 5265736F 		.ascii	"Resolutions: \000"
 17599      6C757469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 389


 17599      6F6E733A 
 17599      2000
 17600 1a86 0000     		.align	2
 17601              	.LC260:
 17602 1a88 4F666673 		.ascii	"Offsets: \000"
 17602      6574733A 
 17602      2000
 17603 1a92 0000     		.align	2
 17604              	.LC261:
 17605 1a94 4D756C74 		.ascii	"Multipliers: \000"
 17605      69706C69 
 17605      6572733A 
 17605      2000
 17606 1aa2 0000     		.align	2
 17607              	.LC262:
 17608 1aa4 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 17608      656E7420 
 17608      6C6F6F6B 
 17608      75702074 
 17608      61626C65 
 17609 1ad7 662C2025 		.ascii	"f, %f\015\012\000"
 17609      660D0A00 
 17610 1adf 00       		.align	2
 17611              	.LC263:
 17612 1ae0 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 17612      74696F6E 
 17612      206C696D 
 17612      69742061 
 17612      63746976 
 17613              		.align	2
 17614              	.LC264:
 17615 1afc 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 17615      74696F6E 
 17615      206C696D 
 17615      6974733A 
 17615      20696E66 
 17616              		.section	.text.prepare_SD_param_info,"ax",%progbits
 17617              		.align	2
 17618              		.global	prepare_SD_param_info
 17619              		.thumb
 17620              		.thumb_func
 17621              		.type	prepare_SD_param_info, %function
 17622              	prepare_SD_param_info:
 17623              	.LFB74:
2285:..\src/command_processing.c **** 
2286:..\src/command_processing.c **** //==============================================================================
2287:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2288:..\src/command_processing.c **** //==============================================================================
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2291:..\src/command_processing.c **** {
 17624              		.loc 1 2291 0
 17625              		.cfi_startproc
 17626              		@ args = 0, pretend = 0, frame = 152
 17627              		@ frame_needed = 1, uses_anonymous_args = 0
 17628 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 17629              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 390


 17630              		.cfi_offset 4, -36
 17631              		.cfi_offset 5, -32
 17632              		.cfi_offset 6, -28
 17633              		.cfi_offset 7, -24
 17634              		.cfi_offset 8, -20
 17635              		.cfi_offset 9, -16
 17636              		.cfi_offset 10, -12
 17637              		.cfi_offset 11, -8
 17638              		.cfi_offset 14, -4
 17639 0004 B1B0     		sub	sp, sp, #196
 17640              		.cfi_def_cfa_offset 232
 17641 0006 0AAF     		add	r7, sp, #40
 17642              		.cfi_def_cfa 7, 192
 17643 0008 7861     		str	r0, [r7, #20]
2292:..\src/command_processing.c ****     char str[100];  
2293:..\src/command_processing.c ****     int i;
2294:..\src/command_processing.c ****            
2295:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2296:..\src/command_processing.c ****     
2297:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 17644              		.loc 1 2297 0
 17645 000a AB4B     		ldr	r3, .L735
 17646 000c C7F88C30 		str	r3, [r7, #140]
2298:..\src/command_processing.c ****         
2299:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 17647              		.loc 1 2299 0
 17648 0010 AA4A     		ldr	r2, .L735+4
 17649 0012 AB49     		ldr	r1, .L735+8
 17650 0014 7869     		ldr	r0, [r7, #20]
 17651 0016 FFF7FEFF 		bl	sprintf
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 17652              		.loc 1 2301 0
 17653 001a D7F88C30 		ldr	r3, [r7, #140]
 17654 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 17655 0022 1A46     		mov	r2, r3
 17656 0024 07F11C03 		add	r3, r7, #28
 17657 0028 A649     		ldr	r1, .L735+12
 17658 002a 1846     		mov	r0, r3
 17659 002c FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****     strcat(info_string, str);
 17660              		.loc 1 2302 0
 17661 0030 07F11C03 		add	r3, r7, #28
 17662 0034 1946     		mov	r1, r3
 17663 0036 7869     		ldr	r0, [r7, #20]
 17664 0038 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 17665              		.loc 1 2303 0
 17666 003c D7F88C30 		ldr	r3, [r7, #140]
 17667 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17668 0044 002B     		cmp	r3, #0
 17669 0046 02D0     		beq	.L673
 17670 0048 012B     		cmp	r3, #1
 17671 004a 15D0     		beq	.L674
 17672 004c 26E0     		b	.L672
 17673              	.L673:
2304:..\src/command_processing.c ****         case RIGHT_HAND:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 391


2305:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 17674              		.loc 1 2305 0
 17675 004e 7869     		ldr	r0, [r7, #20]
 17676 0050 FFF7FEFF 		bl	strlen
 17677 0054 0346     		mov	r3, r0
 17678 0056 1A46     		mov	r2, r3
 17679 0058 7B69     		ldr	r3, [r7, #20]
 17680 005a 1344     		add	r3, r3, r2
 17681 005c 9A4A     		ldr	r2, .L735+16
 17682 005e 1D46     		mov	r5, r3
 17683 0060 1446     		mov	r4, r2
 17684 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17685 0064 2860     		str	r0, [r5]	@ unaligned
 17686 0066 6960     		str	r1, [r5, #4]	@ unaligned
 17687 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 17688 006a EB60     		str	r3, [r5, #12]	@ unaligned
 17689 006c 2388     		ldrh	r3, [r4]	@ unaligned
 17690 006e A278     		ldrb	r2, [r4, #2]
 17691 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 17692 0072 1346     		mov	r3, r2
 17693 0074 AB74     		strb	r3, [r5, #18]
2306:..\src/command_processing.c ****             break;
 17694              		.loc 1 2306 0
 17695 0076 11E0     		b	.L672
 17696              	.L674:
2307:..\src/command_processing.c ****         case LEFT_HAND:
2308:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 17697              		.loc 1 2308 0
 17698 0078 7869     		ldr	r0, [r7, #20]
 17699 007a FFF7FEFF 		bl	strlen
 17700 007e 0346     		mov	r3, r0
 17701 0080 1A46     		mov	r2, r3
 17702 0082 7B69     		ldr	r3, [r7, #20]
 17703 0084 1344     		add	r3, r3, r2
 17704 0086 914A     		ldr	r2, .L735+20
 17705 0088 1D46     		mov	r5, r3
 17706 008a 1446     		mov	r4, r2
 17707 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17708 008e 2860     		str	r0, [r5]	@ unaligned
 17709 0090 6960     		str	r1, [r5, #4]	@ unaligned
 17710 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 17711 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 17712 0096 2388     		ldrh	r3, [r4]	@ unaligned
 17713 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2309:..\src/command_processing.c ****             break;
 17714              		.loc 1 2309 0
 17715 009a 00BF     		nop
 17716              	.L672:
2310:..\src/command_processing.c ****     }
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 17717              		.loc 1 2312 0
 17718 009c D7F88C30 		ldr	r3, [r7, #140]
 17719 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 17720 00a4 1A46     		mov	r2, r3
 17721 00a6 D7F88C30 		ldr	r3, [r7, #140]
 17722 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 392


 17723 00ae 1946     		mov	r1, r3
 17724 00b0 D7F88C30 		ldr	r3, [r7, #140]
 17725 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 17726 00b8 07F11C00 		add	r0, r7, #28
 17727 00bc 0093     		str	r3, [sp]
 17728 00be 0B46     		mov	r3, r1
 17729 00c0 8349     		ldr	r1, .L735+24
 17730 00c2 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****     strcat(info_string, str);
 17731              		.loc 1 2313 0
 17732 00c6 07F11C03 		add	r3, r7, #28
 17733 00ca 1946     		mov	r1, r3
 17734 00cc 7869     		ldr	r0, [r7, #20]
 17735 00ce FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****     
2315:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 17736              		.loc 1 2315 0
 17737 00d2 D7F88C30 		ldr	r3, [r7, #140]
 17738 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 17739 00da 1A46     		mov	r2, r3
 17740 00dc D7F88C30 		ldr	r3, [r7, #140]
 17741 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 17742 00e4 1946     		mov	r1, r3
 17743 00e6 D7F88C30 		ldr	r3, [r7, #140]
 17744 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 17745 00ee 07F11C00 		add	r0, r7, #28
 17746 00f2 0093     		str	r3, [sp]
 17747 00f4 0B46     		mov	r3, r1
 17748 00f6 7749     		ldr	r1, .L735+28
 17749 00f8 FFF7FEFF 		bl	sprintf
2316:..\src/command_processing.c ****     strcat(info_string, str);
 17750              		.loc 1 2316 0
 17751 00fc 07F11C03 		add	r3, r7, #28
 17752 0100 1946     		mov	r1, r3
 17753 0102 7869     		ldr	r0, [r7, #20]
 17754 0104 FFF7FEFF 		bl	strcat
 17755              	.LBB19:
2317:..\src/command_processing.c ****     
2318:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 17756              		.loc 1 2318 0
 17757 0108 0023     		movs	r3, #0
 17758 010a 87F89330 		strb	r3, [r7, #147]
 17759 010e 00F03CBE 		b	.L675
 17760              	.L718:
 17761              	.LBB20:
2319:..\src/command_processing.c ****             
2320:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 17762              		.loc 1 2320 0
 17763 0112 97F89330 		ldrb	r3, [r7, #147]
 17764 0116 87F88B30 		strb	r3, [r7, #139]
2321:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 17765              		.loc 1 2321 0
 17766 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 17767 011e 1346     		mov	r3, r2
 17768 0120 DB00     		lsls	r3, r3, #3
 17769 0122 9B1A     		subs	r3, r3, r2
 17770 0124 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 393


 17771 0126 B033     		adds	r3, r3, #176
 17772 0128 D7F88C20 		ldr	r2, [r7, #140]
 17773 012c 1344     		add	r3, r3, r2
 17774 012e C7F88430 		str	r3, [r7, #132]
2322:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 17775              		.loc 1 2322 0
 17776 0132 D7F88430 		ldr	r3, [r7, #132]
 17777 0136 93F86030 		ldrb	r3, [r3, #96]
 17778 013a 87F88330 		strb	r3, [r7, #131]
2323:..\src/command_processing.c ****               
2324:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 17779              		.loc 1 2324 0
 17780 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17781 0142 5A1C     		adds	r2, r3, #1
 17782 0144 07F11C03 		add	r3, r7, #28
 17783 0148 6349     		ldr	r1, .L735+32
 17784 014a 1846     		mov	r0, r3
 17785 014c FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****         strcat(info_string, str);
 17786              		.loc 1 2325 0
 17787 0150 07F11C03 		add	r3, r7, #28
 17788 0154 1946     		mov	r1, r3
 17789 0156 7869     		ldr	r0, [r7, #20]
 17790 0158 FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****                     
2327:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 17791              		.loc 1 2327 0
 17792 015c 7869     		ldr	r0, [r7, #20]
 17793 015e FFF7FEFF 		bl	strlen
 17794 0162 0346     		mov	r3, r0
 17795 0164 1A46     		mov	r2, r3
 17796 0166 7B69     		ldr	r3, [r7, #20]
 17797 0168 1344     		add	r3, r3, r2
 17798 016a 5C4A     		ldr	r2, .L735+36
 17799 016c 1D46     		mov	r5, r3
 17800 016e 1446     		mov	r4, r2
 17801 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17802 0172 2860     		str	r0, [r5]	@ unaligned
 17803 0174 6960     		str	r1, [r5, #4]	@ unaligned
 17804 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 17805 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 17806 017a 03CC     		ldmia	r4!, {r0, r1}
 17807 017c 2861     		str	r0, [r5, #16]	@ unaligned
 17808 017e 6961     		str	r1, [r5, #20]	@ unaligned
 17809 0180 2388     		ldrh	r3, [r4]	@ unaligned
 17810 0182 A278     		ldrb	r2, [r4, #2]
 17811 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 17812 0186 1346     		mov	r3, r2
 17813 0188 AB76     		strb	r3, [r5, #26]
2328:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 17814              		.loc 1 2328 0
 17815 018a D7F88430 		ldr	r3, [r7, #132]
 17816 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 17817 0192 012B     		cmp	r3, #1
 17818 0194 0CD1     		bne	.L676
2329:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 17819              		.loc 1 2329 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 394


 17820 0196 7869     		ldr	r0, [r7, #20]
 17821 0198 FFF7FEFF 		bl	strlen
 17822 019c 0346     		mov	r3, r0
 17823 019e 1A46     		mov	r2, r3
 17824 01a0 7B69     		ldr	r3, [r7, #20]
 17825 01a2 1344     		add	r3, r3, r2
 17826 01a4 4E4A     		ldr	r2, .L735+40
 17827 01a6 1068     		ldr	r0, [r2]	@ unaligned
 17828 01a8 1860     		str	r0, [r3]	@ unaligned
 17829 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17830 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 17831 01ae 0BE0     		b	.L677
 17832              	.L676:
2330:..\src/command_processing.c ****         else
2331:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 17833              		.loc 1 2331 0
 17834 01b0 7869     		ldr	r0, [r7, #20]
 17835 01b2 FFF7FEFF 		bl	strlen
 17836 01b6 0346     		mov	r3, r0
 17837 01b8 1A46     		mov	r2, r3
 17838 01ba 7B69     		ldr	r3, [r7, #20]
 17839 01bc 1344     		add	r3, r3, r2
 17840 01be 494A     		ldr	r2, .L735+44
 17841 01c0 1068     		ldr	r0, [r2]	@ unaligned
 17842 01c2 1860     		str	r0, [r3]	@ unaligned
 17843 01c4 1279     		ldrb	r2, [r2, #4]
 17844 01c6 1A71     		strb	r2, [r3, #4]
 17845              	.L677:
2332:..\src/command_processing.c ****         
2333:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 17846              		.loc 1 2333 0
 17847 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 17848 01cc 464A     		ldr	r2, .L735+48
 17849 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 17850 01d0 1A46     		mov	r2, r3
 17851 01d2 07F11C03 		add	r3, r7, #28
 17852 01d6 4549     		ldr	r1, .L735+52
 17853 01d8 1846     		mov	r0, r3
 17854 01da FFF7FEFF 		bl	sprintf
2334:..\src/command_processing.c ****         strcat(info_string, str);
 17855              		.loc 1 2334 0
 17856 01de 07F11C03 		add	r3, r7, #28
 17857 01e2 1946     		mov	r1, r3
 17858 01e4 7869     		ldr	r0, [r7, #20]
 17859 01e6 FFF7FEFF 		bl	strcat
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 17860              		.loc 1 2336 0
 17861 01ea 7869     		ldr	r0, [r7, #20]
 17862 01ec FFF7FEFF 		bl	strlen
 17863 01f0 0346     		mov	r3, r0
 17864 01f2 1A46     		mov	r2, r3
 17865 01f4 7B69     		ldr	r3, [r7, #20]
 17866 01f6 1344     		add	r3, r3, r2
 17867 01f8 3D4A     		ldr	r2, .L735+56
 17868 01fa 1C46     		mov	r4, r3
 17869 01fc 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 395


 17870 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 17871 0200 2060     		str	r0, [r4]	@ unaligned
 17872 0202 6160     		str	r1, [r4, #4]	@ unaligned
 17873 0204 A260     		str	r2, [r4, #8]	@ unaligned
 17874 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 17875 0208 9B78     		ldrb	r3, [r3, #2]
 17876 020a A281     		strh	r2, [r4, #12]	@ unaligned
 17877 020c A373     		strb	r3, [r4, #14]
2337:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 17878              		.loc 1 2337 0
 17879 020e D7F88430 		ldr	r3, [r7, #132]
 17880 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 17881 0216 032B     		cmp	r3, #3
 17882 0218 74D0     		beq	.L678
2338:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 17883              		.loc 1 2338 0
 17884 021a D7F88430 		ldr	r3, [r7, #132]
 17885 021e 1B68     		ldr	r3, [r3]
 17886 0220 1846     		mov	r0, r3
 17887 0222 FFF7FEFF 		bl	__aeabi_i2d
 17888 0226 4FF00002 		mov	r2, #0
 17889 022a 324B     		ldr	r3, .L735+60
 17890 022c FFF7FEFF 		bl	__aeabi_ddiv
 17891 0230 0346     		mov	r3, r0
 17892 0232 0C46     		mov	r4, r1
 17893 0234 07F11C00 		add	r0, r7, #28
 17894 0238 1A46     		mov	r2, r3
 17895 023a 2346     		mov	r3, r4
 17896 023c 2E49     		ldr	r1, .L735+64
 17897 023e FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c ****             strcat(info_string, str);
 17898              		.loc 1 2339 0
 17899 0242 07F11C03 		add	r3, r7, #28
 17900 0246 1946     		mov	r1, r3
 17901 0248 7869     		ldr	r0, [r7, #20]
 17902 024a FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 17903              		.loc 1 2340 0
 17904 024e D7F88430 		ldr	r3, [r7, #132]
 17905 0252 5B68     		ldr	r3, [r3, #4]
 17906 0254 1846     		mov	r0, r3
 17907 0256 FFF7FEFF 		bl	__aeabi_i2d
 17908 025a 4FF00002 		mov	r2, #0
 17909 025e 254B     		ldr	r3, .L735+60
 17910 0260 FFF7FEFF 		bl	__aeabi_ddiv
 17911 0264 0346     		mov	r3, r0
 17912 0266 0C46     		mov	r4, r1
 17913 0268 07F11C00 		add	r0, r7, #28
 17914 026c 1A46     		mov	r2, r3
 17915 026e 2346     		mov	r3, r4
 17916 0270 2249     		ldr	r1, .L735+68
 17917 0272 FFF7FEFF 		bl	sprintf
2341:..\src/command_processing.c ****             strcat(info_string, str);
 17918              		.loc 1 2341 0
 17919 0276 07F11C03 		add	r3, r7, #28
 17920 027a 1946     		mov	r1, r3
 17921 027c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 396


 17922 027e FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 17923              		.loc 1 2342 0
 17924 0282 D7F88430 		ldr	r3, [r7, #132]
 17925 0286 9B68     		ldr	r3, [r3, #8]
 17926 0288 1846     		mov	r0, r3
 17927 028a FFF7FEFF 		bl	__aeabi_i2d
 17928 028e 4FF00002 		mov	r2, #0
 17929 0292 184B     		ldr	r3, .L735+60
 17930 0294 FFF7FEFF 		bl	__aeabi_ddiv
 17931 0298 0346     		mov	r3, r0
 17932 029a 0C46     		mov	r4, r1
 17933 029c 07F11C00 		add	r0, r7, #28
 17934 02a0 1A46     		mov	r2, r3
 17935 02a2 2346     		mov	r3, r4
 17936 02a4 1649     		ldr	r1, .L735+72
 17937 02a6 FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****             strcat(info_string, str);
 17938              		.loc 1 2343 0
 17939 02aa 07F11C03 		add	r3, r7, #28
 17940 02ae 1946     		mov	r1, r3
 17941 02b0 7869     		ldr	r0, [r7, #20]
 17942 02b2 FFF7FEFF 		bl	strcat
 17943 02b6 73E0     		b	.L679
 17944              	.L736:
 17945              		.align	2
 17946              	.L735:
 17947 02b8 00000000 		.word	g_mem
 17948 02bc C40E0000 		.word	.LC134
 17949 02c0 401A0000 		.word	.LC256
 17950 02c4 000F0000 		.word	.LC137
 17951 02c8 680F0000 		.word	.LC141
 17952 02cc 7C0F0000 		.word	.LC142
 17953 02d0 84180000 		.word	.LC244
 17954 02d4 B0180000 		.word	.LC245
 17955 02d8 C80F0000 		.word	.LC146
 17956 02dc 38100000 		.word	.LC155
 17957 02e0 28100000 		.word	.LC153
 17958 02e4 30100000 		.word	.LC154
 17959 02e8 00000000 		.word	dev_pwm_limit
 17960 02ec 60100000 		.word	.LC158
 17961 02f0 581A0000 		.word	.LC257
 17962 02f4 0000F040 		.word	1089470464
 17963 02f8 58110000 		.word	.LC169
 17964 02fc 64110000 		.word	.LC170
 17965 0300 70110000 		.word	.LC171
 17966              	.L678:
2344:..\src/command_processing.c ****         }
2345:..\src/command_processing.c ****         else { 
2346:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 17967              		.loc 1 2346 0
 17968 0304 D7F88430 		ldr	r3, [r7, #132]
 17969 0308 9B69     		ldr	r3, [r3, #24]
 17970 030a 1846     		mov	r0, r3
 17971 030c FFF7FEFF 		bl	__aeabi_i2d
 17972 0310 4FF00002 		mov	r2, #0
 17973 0314 CB4B     		ldr	r3, .L737
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 397


 17974 0316 FFF7FEFF 		bl	__aeabi_ddiv
 17975 031a 0346     		mov	r3, r0
 17976 031c 0C46     		mov	r4, r1
 17977 031e 07F11C00 		add	r0, r7, #28
 17978 0322 1A46     		mov	r2, r3
 17979 0324 2346     		mov	r3, r4
 17980 0326 C849     		ldr	r1, .L737+4
 17981 0328 FFF7FEFF 		bl	sprintf
2347:..\src/command_processing.c ****             strcat(info_string, str);
 17982              		.loc 1 2347 0
 17983 032c 07F11C03 		add	r3, r7, #28
 17984 0330 1946     		mov	r1, r3
 17985 0332 7869     		ldr	r0, [r7, #20]
 17986 0334 FFF7FEFF 		bl	strcat
2348:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 17987              		.loc 1 2348 0
 17988 0338 D7F88430 		ldr	r3, [r7, #132]
 17989 033c DB69     		ldr	r3, [r3, #28]
 17990 033e 1846     		mov	r0, r3
 17991 0340 FFF7FEFF 		bl	__aeabi_i2d
 17992 0344 4FF00002 		mov	r2, #0
 17993 0348 BE4B     		ldr	r3, .L737
 17994 034a FFF7FEFF 		bl	__aeabi_ddiv
 17995 034e 0346     		mov	r3, r0
 17996 0350 0C46     		mov	r4, r1
 17997 0352 07F11C00 		add	r0, r7, #28
 17998 0356 1A46     		mov	r2, r3
 17999 0358 2346     		mov	r3, r4
 18000 035a BC49     		ldr	r1, .L737+8
 18001 035c FFF7FEFF 		bl	sprintf
2349:..\src/command_processing.c ****             strcat(info_string, str);
 18002              		.loc 1 2349 0
 18003 0360 07F11C03 		add	r3, r7, #28
 18004 0364 1946     		mov	r1, r3
 18005 0366 7869     		ldr	r0, [r7, #20]
 18006 0368 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18007              		.loc 1 2350 0
 18008 036c D7F88430 		ldr	r3, [r7, #132]
 18009 0370 1B6A     		ldr	r3, [r3, #32]
 18010 0372 1846     		mov	r0, r3
 18011 0374 FFF7FEFF 		bl	__aeabi_i2d
 18012 0378 4FF00002 		mov	r2, #0
 18013 037c B14B     		ldr	r3, .L737
 18014 037e FFF7FEFF 		bl	__aeabi_ddiv
 18015 0382 0346     		mov	r3, r0
 18016 0384 0C46     		mov	r4, r1
 18017 0386 07F11C00 		add	r0, r7, #28
 18018 038a 1A46     		mov	r2, r3
 18019 038c 2346     		mov	r3, r4
 18020 038e B049     		ldr	r1, .L737+12
 18021 0390 FFF7FEFF 		bl	sprintf
2351:..\src/command_processing.c ****             strcat(info_string, str);
 18022              		.loc 1 2351 0
 18023 0394 07F11C03 		add	r3, r7, #28
 18024 0398 1946     		mov	r1, r3
 18025 039a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 398


 18026 039c FFF7FEFF 		bl	strcat
 18027              	.L679:
2352:..\src/command_processing.c ****         }
2353:..\src/command_processing.c **** 
2354:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18028              		.loc 1 2354 0
 18029 03a0 7869     		ldr	r0, [r7, #20]
 18030 03a2 FFF7FEFF 		bl	strlen
 18031 03a6 0346     		mov	r3, r0
 18032 03a8 1A46     		mov	r2, r3
 18033 03aa 7B69     		ldr	r3, [r7, #20]
 18034 03ac 1344     		add	r3, r3, r2
 18035 03ae A94A     		ldr	r2, .L737+16
 18036 03b0 1C46     		mov	r4, r3
 18037 03b2 1346     		mov	r3, r2
 18038 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18039 03b6 2060     		str	r0, [r4]	@ unaligned
 18040 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18041 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18042 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18043 03be A381     		strh	r3, [r4, #12]	@ unaligned
2355:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18044              		.loc 1 2355 0
 18045 03c0 D7F88430 		ldr	r3, [r7, #132]
 18046 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18047 03c8 032B     		cmp	r3, #3
 18048 03ca 4ED0     		beq	.L680
2356:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 18049              		.loc 1 2356 0
 18050 03cc D7F88430 		ldr	r3, [r7, #132]
 18051 03d0 DB68     		ldr	r3, [r3, #12]
 18052 03d2 1846     		mov	r0, r3
 18053 03d4 FFF7FEFF 		bl	__aeabi_i2d
 18054 03d8 4FF00002 		mov	r2, #0
 18055 03dc 994B     		ldr	r3, .L737
 18056 03de FFF7FEFF 		bl	__aeabi_ddiv
 18057 03e2 0346     		mov	r3, r0
 18058 03e4 0C46     		mov	r4, r1
 18059 03e6 07F11C00 		add	r0, r7, #28
 18060 03ea 1A46     		mov	r2, r3
 18061 03ec 2346     		mov	r3, r4
 18062 03ee 9649     		ldr	r1, .L737+4
 18063 03f0 FFF7FEFF 		bl	sprintf
2357:..\src/command_processing.c ****             strcat(info_string, str);
 18064              		.loc 1 2357 0
 18065 03f4 07F11C03 		add	r3, r7, #28
 18066 03f8 1946     		mov	r1, r3
 18067 03fa 7869     		ldr	r0, [r7, #20]
 18068 03fc FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 18069              		.loc 1 2358 0
 18070 0400 D7F88430 		ldr	r3, [r7, #132]
 18071 0404 1B69     		ldr	r3, [r3, #16]
 18072 0406 1846     		mov	r0, r3
 18073 0408 FFF7FEFF 		bl	__aeabi_i2d
 18074 040c 4FF00002 		mov	r2, #0
 18075 0410 8C4B     		ldr	r3, .L737
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 399


 18076 0412 FFF7FEFF 		bl	__aeabi_ddiv
 18077 0416 0346     		mov	r3, r0
 18078 0418 0C46     		mov	r4, r1
 18079 041a 07F11C00 		add	r0, r7, #28
 18080 041e 1A46     		mov	r2, r3
 18081 0420 2346     		mov	r3, r4
 18082 0422 8A49     		ldr	r1, .L737+8
 18083 0424 FFF7FEFF 		bl	sprintf
2359:..\src/command_processing.c ****             strcat(info_string, str);
 18084              		.loc 1 2359 0
 18085 0428 07F11C03 		add	r3, r7, #28
 18086 042c 1946     		mov	r1, r3
 18087 042e 7869     		ldr	r0, [r7, #20]
 18088 0430 FFF7FEFF 		bl	strcat
2360:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 18089              		.loc 1 2360 0
 18090 0434 D7F88430 		ldr	r3, [r7, #132]
 18091 0438 5B69     		ldr	r3, [r3, #20]
 18092 043a 1846     		mov	r0, r3
 18093 043c FFF7FEFF 		bl	__aeabi_i2d
 18094 0440 4FF00002 		mov	r2, #0
 18095 0444 7F4B     		ldr	r3, .L737
 18096 0446 FFF7FEFF 		bl	__aeabi_ddiv
 18097 044a 0346     		mov	r3, r0
 18098 044c 0C46     		mov	r4, r1
 18099 044e 07F11C00 		add	r0, r7, #28
 18100 0452 1A46     		mov	r2, r3
 18101 0454 2346     		mov	r3, r4
 18102 0456 7E49     		ldr	r1, .L737+12
 18103 0458 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****             strcat(info_string, str);
 18104              		.loc 1 2361 0
 18105 045c 07F11C03 		add	r3, r7, #28
 18106 0460 1946     		mov	r1, r3
 18107 0462 7869     		ldr	r0, [r7, #20]
 18108 0464 FFF7FEFF 		bl	strcat
 18109 0468 4DE0     		b	.L681
 18110              	.L680:
2362:..\src/command_processing.c **** 
2363:..\src/command_processing.c ****         }
2364:..\src/command_processing.c ****         else {
2365:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 18111              		.loc 1 2365 0
 18112 046a D7F88430 		ldr	r3, [r7, #132]
 18113 046e 5B6A     		ldr	r3, [r3, #36]
 18114 0470 1846     		mov	r0, r3
 18115 0472 FFF7FEFF 		bl	__aeabi_i2d
 18116 0476 4FF00002 		mov	r2, #0
 18117 047a 724B     		ldr	r3, .L737
 18118 047c FFF7FEFF 		bl	__aeabi_ddiv
 18119 0480 0346     		mov	r3, r0
 18120 0482 0C46     		mov	r4, r1
 18121 0484 07F11C00 		add	r0, r7, #28
 18122 0488 1A46     		mov	r2, r3
 18123 048a 2346     		mov	r3, r4
 18124 048c 6E49     		ldr	r1, .L737+4
 18125 048e FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 400


2366:..\src/command_processing.c ****             strcat(info_string, str);
 18126              		.loc 1 2366 0
 18127 0492 07F11C03 		add	r3, r7, #28
 18128 0496 1946     		mov	r1, r3
 18129 0498 7869     		ldr	r0, [r7, #20]
 18130 049a FFF7FEFF 		bl	strcat
2367:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 18131              		.loc 1 2367 0
 18132 049e D7F88430 		ldr	r3, [r7, #132]
 18133 04a2 9B6A     		ldr	r3, [r3, #40]
 18134 04a4 1846     		mov	r0, r3
 18135 04a6 FFF7FEFF 		bl	__aeabi_i2d
 18136 04aa 4FF00002 		mov	r2, #0
 18137 04ae 654B     		ldr	r3, .L737
 18138 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 18139 04b4 0346     		mov	r3, r0
 18140 04b6 0C46     		mov	r4, r1
 18141 04b8 07F11C00 		add	r0, r7, #28
 18142 04bc 1A46     		mov	r2, r3
 18143 04be 2346     		mov	r3, r4
 18144 04c0 6249     		ldr	r1, .L737+8
 18145 04c2 FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****             strcat(info_string, str);
 18146              		.loc 1 2368 0
 18147 04c6 07F11C03 		add	r3, r7, #28
 18148 04ca 1946     		mov	r1, r3
 18149 04cc 7869     		ldr	r0, [r7, #20]
 18150 04ce FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 18151              		.loc 1 2369 0
 18152 04d2 D7F88430 		ldr	r3, [r7, #132]
 18153 04d6 DB6A     		ldr	r3, [r3, #44]
 18154 04d8 1846     		mov	r0, r3
 18155 04da FFF7FEFF 		bl	__aeabi_i2d
 18156 04de 4FF00002 		mov	r2, #0
 18157 04e2 584B     		ldr	r3, .L737
 18158 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 18159 04e8 0346     		mov	r3, r0
 18160 04ea 0C46     		mov	r4, r1
 18161 04ec 07F11C00 		add	r0, r7, #28
 18162 04f0 1A46     		mov	r2, r3
 18163 04f2 2346     		mov	r3, r4
 18164 04f4 5649     		ldr	r1, .L737+12
 18165 04f6 FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****             strcat(info_string, str);
 18166              		.loc 1 2370 0
 18167 04fa 07F11C03 		add	r3, r7, #28
 18168 04fe 1946     		mov	r1, r3
 18169 0500 7869     		ldr	r0, [r7, #20]
 18170 0502 FFF7FEFF 		bl	strcat
 18171              	.L681:
2371:..\src/command_processing.c ****         }
2372:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 18172              		.loc 1 2372 0
 18173 0506 D7F88430 		ldr	r3, [r7, #132]
 18174 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 18175 050e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 401


 18176 0510 14D1     		bne	.L682
2373:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 18177              		.loc 1 2373 0
 18178 0512 7869     		ldr	r0, [r7, #20]
 18179 0514 FFF7FEFF 		bl	strlen
 18180 0518 0346     		mov	r3, r0
 18181 051a 1A46     		mov	r2, r3
 18182 051c 7B69     		ldr	r3, [r7, #20]
 18183 051e 1344     		add	r3, r3, r2
 18184 0520 4D4A     		ldr	r2, .L737+20
 18185 0522 1D46     		mov	r5, r3
 18186 0524 1446     		mov	r4, r2
 18187 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18188 0528 2860     		str	r0, [r5]	@ unaligned
 18189 052a 6960     		str	r1, [r5, #4]	@ unaligned
 18190 052c AA60     		str	r2, [r5, #8]	@ unaligned
 18191 052e EB60     		str	r3, [r5, #12]	@ unaligned
 18192 0530 03CC     		ldmia	r4!, {r0, r1}
 18193 0532 2861     		str	r0, [r5, #16]	@ unaligned
 18194 0534 6961     		str	r1, [r5, #20]	@ unaligned
 18195 0536 2388     		ldrh	r3, [r4]	@ unaligned
 18196 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 18197 053a 13E0     		b	.L683
 18198              	.L682:
2374:..\src/command_processing.c ****         else
2375:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 18199              		.loc 1 2375 0
 18200 053c 7869     		ldr	r0, [r7, #20]
 18201 053e FFF7FEFF 		bl	strlen
 18202 0542 0346     		mov	r3, r0
 18203 0544 1A46     		mov	r2, r3
 18204 0546 7B69     		ldr	r3, [r7, #20]
 18205 0548 1344     		add	r3, r3, r2
 18206 054a 444A     		ldr	r2, .L737+24
 18207 054c 1D46     		mov	r5, r3
 18208 054e 1446     		mov	r4, r2
 18209 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18210 0552 2860     		str	r0, [r5]	@ unaligned
 18211 0554 6960     		str	r1, [r5, #4]	@ unaligned
 18212 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 18213 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 18214 055a 03CC     		ldmia	r4!, {r0, r1}
 18215 055c 2861     		str	r0, [r5, #16]	@ unaligned
 18216 055e 6961     		str	r1, [r5, #20]	@ unaligned
 18217 0560 2378     		ldrb	r3, [r4]
 18218 0562 2B76     		strb	r3, [r5, #24]
 18219              	.L683:
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         switch(MOT->input_mode) {
 18220              		.loc 1 2377 0
 18221 0564 D7F88430 		ldr	r3, [r7, #132]
 18222 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18223 056c 062B     		cmp	r3, #6
 18224 056e 00F2D180 		bhi	.L684
 18225 0572 01A2     		adr	r2, .L686
 18226 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18227              		.p2align 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 402


 18228              	.L686:
 18229 0578 95050000 		.word	.L685+1
 18230 057c B9050000 		.word	.L687+1
 18231 0580 E1050000 		.word	.L688+1
 18232 0584 13060000 		.word	.L689+1
 18233 0588 71060000 		.word	.L690+1
 18234 058c 9F060000 		.word	.L691+1
 18235 0590 CF060000 		.word	.L692+1
 18236              		.p2align 1
 18237              	.L685:
2378:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2379:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 18238              		.loc 1 2379 0
 18239 0594 7869     		ldr	r0, [r7, #20]
 18240 0596 FFF7FEFF 		bl	strlen
 18241 059a 0346     		mov	r3, r0
 18242 059c 1A46     		mov	r2, r3
 18243 059e 7B69     		ldr	r3, [r7, #20]
 18244 05a0 1344     		add	r3, r3, r2
 18245 05a2 2F4A     		ldr	r2, .L737+28
 18246 05a4 1D46     		mov	r5, r3
 18247 05a6 1446     		mov	r4, r2
 18248 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18249 05aa 2860     		str	r0, [r5]	@ unaligned
 18250 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 18251 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 18252 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 18253 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 18254 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2380:..\src/command_processing.c ****                 break;
 18255              		.loc 1 2380 0
 18256 05b6 ADE0     		b	.L684
 18257              	.L687:
2381:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2382:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 18258              		.loc 1 2382 0
 18259 05b8 7869     		ldr	r0, [r7, #20]
 18260 05ba FFF7FEFF 		bl	strlen
 18261 05be 0346     		mov	r3, r0
 18262 05c0 1A46     		mov	r2, r3
 18263 05c2 7B69     		ldr	r3, [r7, #20]
 18264 05c4 1344     		add	r3, r3, r2
 18265 05c6 274A     		ldr	r2, .L737+32
 18266 05c8 1D46     		mov	r5, r3
 18267 05ca 1446     		mov	r4, r2
 18268 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18269 05ce 2860     		str	r0, [r5]	@ unaligned
 18270 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 18271 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 18272 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 18273 05d6 2068     		ldr	r0, [r4]	@ unaligned
 18274 05d8 2861     		str	r0, [r5, #16]	@ unaligned
 18275 05da 2379     		ldrb	r3, [r4, #4]
 18276 05dc 2B75     		strb	r3, [r5, #20]
2383:..\src/command_processing.c ****                 break;
 18277              		.loc 1 2383 0
 18278 05de 99E0     		b	.L684
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 403


 18279              	.L688:
2384:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2385:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 18280              		.loc 1 2385 0
 18281 05e0 7869     		ldr	r0, [r7, #20]
 18282 05e2 FFF7FEFF 		bl	strlen
 18283 05e6 0346     		mov	r3, r0
 18284 05e8 1A46     		mov	r2, r3
 18285 05ea 7B69     		ldr	r3, [r7, #20]
 18286 05ec 1344     		add	r3, r3, r2
 18287 05ee 1E4A     		ldr	r2, .L737+36
 18288 05f0 1D46     		mov	r5, r3
 18289 05f2 1446     		mov	r4, r2
 18290 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18291 05f6 2860     		str	r0, [r5]	@ unaligned
 18292 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 18293 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 18294 05fc EB60     		str	r3, [r5, #12]	@ unaligned
 18295 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 18296 0600 2861     		str	r0, [r5, #16]	@ unaligned
 18297 0602 6961     		str	r1, [r5, #20]	@ unaligned
 18298 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 18299 0606 2388     		ldrh	r3, [r4]	@ unaligned
 18300 0608 A278     		ldrb	r2, [r4, #2]
 18301 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 18302 060c 1346     		mov	r3, r2
 18303 060e AB77     		strb	r3, [r5, #30]
2386:..\src/command_processing.c ****                 break;
 18304              		.loc 1 2386 0
 18305 0610 80E0     		b	.L684
 18306              	.L689:
2387:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2388:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 18307              		.loc 1 2388 0
 18308 0612 7869     		ldr	r0, [r7, #20]
 18309 0614 FFF7FEFF 		bl	strlen
 18310 0618 0346     		mov	r3, r0
 18311 061a 1A46     		mov	r2, r3
 18312 061c 7B69     		ldr	r3, [r7, #20]
 18313 061e 1344     		add	r3, r3, r2
 18314 0620 124A     		ldr	r2, .L737+40
 18315 0622 1D46     		mov	r5, r3
 18316 0624 1446     		mov	r4, r2
 18317 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18318 0628 2860     		str	r0, [r5]	@ unaligned
 18319 062a 6960     		str	r1, [r5, #4]	@ unaligned
 18320 062c AA60     		str	r2, [r5, #8]	@ unaligned
 18321 062e EB60     		str	r3, [r5, #12]	@ unaligned
 18322 0630 03CC     		ldmia	r4!, {r0, r1}
 18323 0632 2861     		str	r0, [r5, #16]	@ unaligned
 18324 0634 6961     		str	r1, [r5, #20]	@ unaligned
 18325 0636 2388     		ldrh	r3, [r4]	@ unaligned
 18326 0638 A278     		ldrb	r2, [r4, #2]
 18327 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 18328 063c 1346     		mov	r3, r2
 18329 063e AB76     		strb	r3, [r5, #26]
2389:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 404


 18330              		.loc 1 2389 0
 18331 0640 68E0     		b	.L684
 18332              	.L738:
 18333 0642 00BF     		.align	2
 18334              	.L737:
 18335 0644 0000F040 		.word	1089470464
 18336 0648 58110000 		.word	.LC169
 18337 064c 64110000 		.word	.LC170
 18338 0650 70110000 		.word	.LC171
 18339 0654 681A0000 		.word	.LC258
 18340 0658 98110000 		.word	.LC173
 18341 065c B4110000 		.word	.LC174
 18342 0660 D0110000 		.word	.LC175
 18343 0664 E4110000 		.word	.LC176
 18344 0668 FC110000 		.word	.LC177
 18345 066c 1C120000 		.word	.LC178
 18346              	.L690:
2390:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2391:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 18347              		.loc 1 2391 0
 18348 0670 7869     		ldr	r0, [r7, #20]
 18349 0672 FFF7FEFF 		bl	strlen
 18350 0676 0346     		mov	r3, r0
 18351 0678 1A46     		mov	r2, r3
 18352 067a 7B69     		ldr	r3, [r7, #20]
 18353 067c 1344     		add	r3, r3, r2
 18354 067e AF4A     		ldr	r2, .L739
 18355 0680 1C46     		mov	r4, r3
 18356 0682 1546     		mov	r5, r2
 18357 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18358 0686 2060     		str	r0, [r4]	@ unaligned
 18359 0688 6160     		str	r1, [r4, #4]	@ unaligned
 18360 068a A260     		str	r2, [r4, #8]	@ unaligned
 18361 068c E360     		str	r3, [r4, #12]	@ unaligned
 18362 068e 2868     		ldr	r0, [r5]	@ unaligned
 18363 0690 2061     		str	r0, [r4, #16]	@ unaligned
 18364 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 18365 0694 AA79     		ldrb	r2, [r5, #6]
 18366 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 18367 0698 1346     		mov	r3, r2
 18368 069a A375     		strb	r3, [r4, #22]
2392:..\src/command_processing.c ****                 break;
 18369              		.loc 1 2392 0
 18370 069c 3AE0     		b	.L684
 18371              	.L691:
2393:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2394:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 18372              		.loc 1 2394 0
 18373 069e 7869     		ldr	r0, [r7, #20]
 18374 06a0 FFF7FEFF 		bl	strlen
 18375 06a4 0346     		mov	r3, r0
 18376 06a6 1A46     		mov	r2, r3
 18377 06a8 7B69     		ldr	r3, [r7, #20]
 18378 06aa 1344     		add	r3, r3, r2
 18379 06ac A44A     		ldr	r2, .L739+4
 18380 06ae 1D46     		mov	r5, r3
 18381 06b0 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 405


 18382 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18383 06b4 2860     		str	r0, [r5]	@ unaligned
 18384 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 18385 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 18386 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 18387 06bc 03CC     		ldmia	r4!, {r0, r1}
 18388 06be 2861     		str	r0, [r5, #16]	@ unaligned
 18389 06c0 6961     		str	r1, [r5, #20]	@ unaligned
 18390 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 18391 06c4 A278     		ldrb	r2, [r4, #2]
 18392 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 18393 06c8 1346     		mov	r3, r2
 18394 06ca AB76     		strb	r3, [r5, #26]
2395:..\src/command_processing.c ****                 break;
 18395              		.loc 1 2395 0
 18396 06cc 22E0     		b	.L684
 18397              	.L692:
2396:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2397:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 18398              		.loc 1 2397 0
 18399 06ce 7869     		ldr	r0, [r7, #20]
 18400 06d0 FFF7FEFF 		bl	strlen
 18401 06d4 0346     		mov	r3, r0
 18402 06d6 1A46     		mov	r2, r3
 18403 06d8 7B69     		ldr	r3, [r7, #20]
 18404 06da 1344     		add	r3, r3, r2
 18405 06dc 994A     		ldr	r2, .L739+8
 18406 06de 1546     		mov	r5, r2
 18407 06e0 9E46     		mov	lr, r3
 18408 06e2 05F1200C 		add	ip, r5, #32
 18409              	.L693:
 18410 06e6 7446     		mov	r4, lr
 18411 06e8 2E46     		mov	r6, r5
 18412 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18413 06ec 2060     		str	r0, [r4]	@ unaligned
 18414 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 18415 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 18416 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 18417 06f4 1035     		adds	r5, r5, #16
 18418 06f6 0EF1100E 		add	lr, lr, #16
 18419 06fa 6545     		cmp	r5, ip
 18420 06fc F3D1     		bne	.L693
 18421 06fe 7446     		mov	r4, lr
 18422 0700 2B46     		mov	r3, r5
 18423 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 18424 0704 2060     		str	r0, [r4]	@ unaligned
 18425 0706 6160     		str	r1, [r4, #4]	@ unaligned
 18426 0708 A260     		str	r2, [r4, #8]	@ unaligned
 18427 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 18428 070c 9B78     		ldrb	r3, [r3, #2]
 18429 070e A281     		strh	r2, [r4, #12]	@ unaligned
 18430 0710 A373     		strb	r3, [r4, #14]
2398:..\src/command_processing.c ****                     break;
 18431              		.loc 1 2398 0
 18432 0712 00BF     		nop
 18433              	.L684:
2399:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 406


2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****         switch(MOT->control_mode) {
 18434              		.loc 1 2401 0
 18435 0714 D7F88430 		ldr	r3, [r7, #132]
 18436 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18437 071c 032B     		cmp	r3, #3
 18438 071e 64D8     		bhi	.L733
 18439 0720 01A2     		adr	r2, .L696
 18440 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 18441 0726 00BF     		.p2align 2
 18442              	.L696:
 18443 0728 39070000 		.word	.L695+1
 18444 072c 63070000 		.word	.L697+1
 18445 0730 87070000 		.word	.L698+1
 18446 0734 AD070000 		.word	.L699+1
 18447              		.p2align 1
 18448              	.L695:
2402:..\src/command_processing.c ****             case CONTROL_ANGLE:
2403:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 18449              		.loc 1 2403 0
 18450 0738 7869     		ldr	r0, [r7, #20]
 18451 073a FFF7FEFF 		bl	strlen
 18452 073e 0346     		mov	r3, r0
 18453 0740 1A46     		mov	r2, r3
 18454 0742 7B69     		ldr	r3, [r7, #20]
 18455 0744 1344     		add	r3, r3, r2
 18456 0746 804A     		ldr	r2, .L739+12
 18457 0748 1D46     		mov	r5, r3
 18458 074a 1446     		mov	r4, r2
 18459 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18460 074e 2860     		str	r0, [r5]	@ unaligned
 18461 0750 6960     		str	r1, [r5, #4]	@ unaligned
 18462 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 18463 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 18464 0756 03CC     		ldmia	r4!, {r0, r1}
 18465 0758 2861     		str	r0, [r5, #16]	@ unaligned
 18466 075a 6961     		str	r1, [r5, #20]	@ unaligned
 18467 075c 2378     		ldrb	r3, [r4]
 18468 075e 2B76     		strb	r3, [r5, #24]
2404:..\src/command_processing.c ****                 break;
 18469              		.loc 1 2404 0
 18470 0760 44E0     		b	.L700
 18471              	.L697:
2405:..\src/command_processing.c ****             case CONTROL_PWM:
2406:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 18472              		.loc 1 2406 0
 18473 0762 7869     		ldr	r0, [r7, #20]
 18474 0764 FFF7FEFF 		bl	strlen
 18475 0768 0346     		mov	r3, r0
 18476 076a 1A46     		mov	r2, r3
 18477 076c 7B69     		ldr	r3, [r7, #20]
 18478 076e 1344     		add	r3, r3, r2
 18479 0770 764A     		ldr	r2, .L739+16
 18480 0772 1D46     		mov	r5, r3
 18481 0774 1446     		mov	r4, r2
 18482 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18483 0778 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 407


 18484 077a 6960     		str	r1, [r5, #4]	@ unaligned
 18485 077c AA60     		str	r2, [r5, #8]	@ unaligned
 18486 077e EB60     		str	r3, [r5, #12]	@ unaligned
 18487 0780 2068     		ldr	r0, [r4]	@ unaligned
 18488 0782 2861     		str	r0, [r5, #16]	@ unaligned
2407:..\src/command_processing.c ****                 break;
 18489              		.loc 1 2407 0
 18490 0784 32E0     		b	.L700
 18491              	.L698:
2408:..\src/command_processing.c ****             case CONTROL_CURRENT:
2409:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 18492              		.loc 1 2409 0
 18493 0786 7869     		ldr	r0, [r7, #20]
 18494 0788 FFF7FEFF 		bl	strlen
 18495 078c 0346     		mov	r3, r0
 18496 078e 1A46     		mov	r2, r3
 18497 0790 7B69     		ldr	r3, [r7, #20]
 18498 0792 1344     		add	r3, r3, r2
 18499 0794 6E4A     		ldr	r2, .L739+20
 18500 0796 1D46     		mov	r5, r3
 18501 0798 1446     		mov	r4, r2
 18502 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18503 079c 2860     		str	r0, [r5]	@ unaligned
 18504 079e 6960     		str	r1, [r5, #4]	@ unaligned
 18505 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 18506 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 18507 07a4 03CC     		ldmia	r4!, {r0, r1}
 18508 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 18509 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2410:..\src/command_processing.c ****                 break;
 18510              		.loc 1 2410 0
 18511 07aa 1FE0     		b	.L700
 18512              	.L699:
2411:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2412:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 18513              		.loc 1 2412 0
 18514 07ac 7869     		ldr	r0, [r7, #20]
 18515 07ae FFF7FEFF 		bl	strlen
 18516 07b2 0346     		mov	r3, r0
 18517 07b4 1A46     		mov	r2, r3
 18518 07b6 7B69     		ldr	r3, [r7, #20]
 18519 07b8 1344     		add	r3, r3, r2
 18520 07ba 664A     		ldr	r2, .L739+24
 18521 07bc 1446     		mov	r4, r2
 18522 07be 9E46     		mov	lr, r3
 18523 07c0 04F1200C 		add	ip, r4, #32
 18524              	.L701:
 18525 07c4 7546     		mov	r5, lr
 18526 07c6 2646     		mov	r6, r4
 18527 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18528 07ca 2860     		str	r0, [r5]	@ unaligned
 18529 07cc 6960     		str	r1, [r5, #4]	@ unaligned
 18530 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 18531 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 18532 07d2 1034     		adds	r4, r4, #16
 18533 07d4 0EF1100E 		add	lr, lr, #16
 18534 07d8 6445     		cmp	r4, ip
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 408


 18535 07da F3D1     		bne	.L701
 18536 07dc 7346     		mov	r3, lr
 18537 07de 2246     		mov	r2, r4
 18538 07e0 1068     		ldr	r0, [r2]	@ unaligned
 18539 07e2 1860     		str	r0, [r3]	@ unaligned
 18540 07e4 1279     		ldrb	r2, [r2, #4]
 18541 07e6 1A71     		strb	r2, [r3, #4]
2413:..\src/command_processing.c ****                 break;
 18542              		.loc 1 2413 0
 18543 07e8 00E0     		b	.L700
 18544              	.L733:
2414:..\src/command_processing.c ****             default:
2415:..\src/command_processing.c ****                 break;
 18545              		.loc 1 2415 0
 18546 07ea 00BF     		nop
 18547              	.L700:
2416:..\src/command_processing.c ****         }
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 18548              		.loc 1 2418 0
 18549 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18550 07f0 D7F88C10 		ldr	r1, [r7, #140]
 18551 07f4 1346     		mov	r3, r2
 18552 07f6 5B00     		lsls	r3, r3, #1
 18553 07f8 1344     		add	r3, r3, r2
 18554 07fa 1B01     		lsls	r3, r3, #4
 18555 07fc 0B44     		add	r3, r3, r1
 18556 07fe 03F5D873 		add	r3, r3, #432
 18557 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18558 0804 002B     		cmp	r3, #0
 18559 0806 1CD0     		beq	.L702
2419:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 18560              		.loc 1 2419 0
 18561 0808 7869     		ldr	r0, [r7, #20]
 18562 080a FFF7FEFF 		bl	strlen
 18563 080e 0346     		mov	r3, r0
 18564 0810 1A46     		mov	r2, r3
 18565 0812 7B69     		ldr	r3, [r7, #20]
 18566 0814 1344     		add	r3, r3, r2
 18567 0816 504A     		ldr	r2, .L739+28
 18568 0818 1446     		mov	r4, r2
 18569 081a 9E46     		mov	lr, r3
 18570 081c 04F1200C 		add	ip, r4, #32
 18571              	.L703:
 18572 0820 7546     		mov	r5, lr
 18573 0822 2646     		mov	r6, r4
 18574 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 18575 0826 2860     		str	r0, [r5]	@ unaligned
 18576 0828 6960     		str	r1, [r5, #4]	@ unaligned
 18577 082a AA60     		str	r2, [r5, #8]	@ unaligned
 18578 082c EB60     		str	r3, [r5, #12]	@ unaligned
 18579 082e 1034     		adds	r4, r4, #16
 18580 0830 0EF1100E 		add	lr, lr, #16
 18581 0834 6445     		cmp	r4, ip
 18582 0836 F3D1     		bne	.L703
 18583 0838 7346     		mov	r3, lr
 18584 083a 2246     		mov	r2, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 409


 18585 083c 1278     		ldrb	r2, [r2]
 18586 083e 1A70     		strb	r2, [r3]
 18587 0840 13E0     		b	.L704
 18588              	.L702:
2420:..\src/command_processing.c ****         else
2421:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 18589              		.loc 1 2421 0
 18590 0842 7869     		ldr	r0, [r7, #20]
 18591 0844 FFF7FEFF 		bl	strlen
 18592 0848 0346     		mov	r3, r0
 18593 084a 1A46     		mov	r2, r3
 18594 084c 7B69     		ldr	r3, [r7, #20]
 18595 084e 1344     		add	r3, r3, r2
 18596 0850 424A     		ldr	r2, .L739+32
 18597 0852 1C46     		mov	r4, r3
 18598 0854 1546     		mov	r5, r2
 18599 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18600 0858 2060     		str	r0, [r4]	@ unaligned
 18601 085a 6160     		str	r1, [r4, #4]	@ unaligned
 18602 085c A260     		str	r2, [r4, #8]	@ unaligned
 18603 085e E360     		str	r3, [r4, #12]	@ unaligned
 18604 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18605 0862 2061     		str	r0, [r4, #16]	@ unaligned
 18606 0864 6161     		str	r1, [r4, #20]	@ unaligned
 18607 0866 A261     		str	r2, [r4, #24]	@ unaligned
 18608 0868 E361     		str	r3, [r4, #28]	@ unaligned
 18609              	.L704:
2422:..\src/command_processing.c **** 
2423:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 18610              		.loc 1 2423 0
 18611 086a 7869     		ldr	r0, [r7, #20]
 18612 086c FFF7FEFF 		bl	strlen
 18613 0870 0346     		mov	r3, r0
 18614 0872 1A46     		mov	r2, r3
 18615 0874 7B69     		ldr	r3, [r7, #20]
 18616 0876 1344     		add	r3, r3, r2
 18617 0878 394A     		ldr	r2, .L739+36
 18618 087a 1C46     		mov	r4, r3
 18619 087c 1346     		mov	r3, r2
 18620 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 18621 0880 2060     		str	r0, [r4]	@ unaligned
 18622 0882 6160     		str	r1, [r4, #4]	@ unaligned
 18623 0884 A260     		str	r2, [r4, #8]	@ unaligned
 18624 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 18625 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2424:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18626              		.loc 1 2424 0
 18627 088a 0023     		movs	r3, #0
 18628 088c C7F89430 		str	r3, [r7, #148]
 18629 0890 30E0     		b	.L705
 18630              	.L707:
2425:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18631              		.loc 1 2425 0
 18632 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18633 0896 D7F88C10 		ldr	r1, [r7, #140]
 18634 089a 1346     		mov	r3, r2
 18635 089c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 410


 18636 089e 1344     		add	r3, r3, r2
 18637 08a0 1B01     		lsls	r3, r3, #4
 18638 08a2 CA18     		adds	r2, r1, r3
 18639 08a4 D7F89430 		ldr	r3, [r7, #148]
 18640 08a8 1344     		add	r3, r3, r2
 18641 08aa 03F29513 		addw	r3, r3, #405
 18642 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18643 08b0 1A46     		mov	r2, r3
 18644 08b2 07F11C03 		add	r3, r7, #28
 18645 08b6 2B49     		ldr	r1, .L739+40
 18646 08b8 1846     		mov	r0, r3
 18647 08ba FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****             strcat(info_string, str);
 18648              		.loc 1 2426 0
 18649 08be 07F11C03 		add	r3, r7, #28
 18650 08c2 1946     		mov	r1, r3
 18651 08c4 7869     		ldr	r0, [r7, #20]
 18652 08c6 FFF7FEFF 		bl	strcat
2427:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18653              		.loc 1 2427 0
 18654 08ca D7F89430 		ldr	r3, [r7, #148]
 18655 08ce 022B     		cmp	r3, #2
 18656 08d0 0BD0     		beq	.L706
2428:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18657              		.loc 1 2428 0
 18658 08d2 7869     		ldr	r0, [r7, #20]
 18659 08d4 FFF7FEFF 		bl	strlen
 18660 08d8 0346     		mov	r3, r0
 18661 08da 1A46     		mov	r2, r3
 18662 08dc 7B69     		ldr	r3, [r7, #20]
 18663 08de 1344     		add	r3, r3, r2
 18664 08e0 214A     		ldr	r2, .L739+44
 18665 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 18666 08e4 9278     		ldrb	r2, [r2, #2]
 18667 08e6 1980     		strh	r1, [r3]	@ unaligned
 18668 08e8 9A70     		strb	r2, [r3, #2]
 18669              	.L706:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18670              		.loc 1 2424 0 discriminator 2
 18671 08ea D7F89430 		ldr	r3, [r7, #148]
 18672 08ee 0133     		adds	r3, r3, #1
 18673 08f0 C7F89430 		str	r3, [r7, #148]
 18674              	.L705:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 18675              		.loc 1 2424 0 is_stmt 0 discriminator 1
 18676 08f4 D7F89430 		ldr	r3, [r7, #148]
 18677 08f8 022B     		cmp	r3, #2
 18678 08fa CADD     		ble	.L707
2429:..\src/command_processing.c ****             }                
2430:..\src/command_processing.c ****         }
2431:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18679              		.loc 1 2431 0 is_stmt 1
 18680 08fc 7869     		ldr	r0, [r7, #20]
 18681 08fe FFF7FEFF 		bl	strlen
 18682 0902 0346     		mov	r3, r0
 18683 0904 1A46     		mov	r2, r3
 18684 0906 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 411


 18685 0908 1344     		add	r3, r3, r2
 18686 090a 184A     		ldr	r2, .L739+48
 18687 090c 1188     		ldrh	r1, [r2]	@ unaligned
 18688 090e 9278     		ldrb	r2, [r2, #2]
 18689 0910 1980     		strh	r1, [r3]	@ unaligned
 18690 0912 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 18691              		.loc 1 2433 0
 18692 0914 7869     		ldr	r0, [r7, #20]
 18693 0916 FFF7FEFF 		bl	strlen
 18694 091a 0346     		mov	r3, r0
 18695 091c 1A46     		mov	r2, r3
 18696 091e 7B69     		ldr	r3, [r7, #20]
 18697 0920 1344     		add	r3, r3, r2
 18698 0922 1349     		ldr	r1, .L739+52
 18699 0924 1A46     		mov	r2, r3
 18700 0926 0B46     		mov	r3, r1
 18701 0928 03CB     		ldmia	r3!, {r0, r1}
 18702 092a 1060     		str	r0, [r2]	@ unaligned
 18703 092c 5160     		str	r1, [r2, #4]	@ unaligned
 18704 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 18705 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2434:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18706              		.loc 1 2434 0
 18707 0932 0023     		movs	r3, #0
 18708 0934 C7F89430 		str	r3, [r7, #148]
 18709 0938 5CE0     		b	.L708
 18710              	.L740:
 18711 093a 00BF     		.align	2
 18712              	.L739:
 18713 093c 38120000 		.word	.LC179
 18714 0940 50120000 		.word	.LC180
 18715 0944 6C120000 		.word	.LC181
 18716 0948 9C120000 		.word	.LC182
 18717 094c B8120000 		.word	.LC183
 18718 0950 CC120000 		.word	.LC184
 18719 0954 E4120000 		.word	.LC185
 18720 0958 0C130000 		.word	.LC186
 18721 095c 30130000 		.word	.LC187
 18722 0960 781A0000 		.word	.LC259
 18723 0964 98100000 		.word	.LC161
 18724 0968 9C100000 		.word	.LC162
 18725 096c AC0E0000 		.word	.LC132
 18726 0970 881A0000 		.word	.LC260
 18727              	.L710:
2435:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18728              		.loc 1 2435 0
 18729 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18730 0978 D7F88C10 		ldr	r1, [r7, #140]
 18731 097c 1346     		mov	r3, r2
 18732 097e 5B00     		lsls	r3, r3, #1
 18733 0980 1344     		add	r3, r3, r2
 18734 0982 9B00     		lsls	r3, r3, #2
 18735 0984 D7F89420 		ldr	r2, [r7, #148]
 18736 0988 1344     		add	r3, r3, r2
 18737 098a 6633     		adds	r3, r3, #102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 412


 18738 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 18739 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18740 0994 D7F88C00 		ldr	r0, [r7, #140]
 18741 0998 1346     		mov	r3, r2
 18742 099a 5B00     		lsls	r3, r3, #1
 18743 099c 1344     		add	r3, r3, r2
 18744 099e 1B01     		lsls	r3, r3, #4
 18745 09a0 C218     		adds	r2, r0, r3
 18746 09a2 D7F89430 		ldr	r3, [r7, #148]
 18747 09a6 1344     		add	r3, r3, r2
 18748 09a8 03F29513 		addw	r3, r3, #405
 18749 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18750 09ae 41FA03F2 		asr	r2, r1, r3
 18751 09b2 07F11C03 		add	r3, r7, #28
 18752 09b6 CC49     		ldr	r1, .L741
 18753 09b8 1846     		mov	r0, r3
 18754 09ba FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****             strcat(info_string, str);
 18755              		.loc 1 2436 0
 18756 09be 07F11C03 		add	r3, r7, #28
 18757 09c2 1946     		mov	r1, r3
 18758 09c4 7869     		ldr	r0, [r7, #20]
 18759 09c6 FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18760              		.loc 1 2437 0
 18761 09ca D7F89430 		ldr	r3, [r7, #148]
 18762 09ce 022B     		cmp	r3, #2
 18763 09d0 0BD0     		beq	.L709
2438:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18764              		.loc 1 2438 0
 18765 09d2 7869     		ldr	r0, [r7, #20]
 18766 09d4 FFF7FEFF 		bl	strlen
 18767 09d8 0346     		mov	r3, r0
 18768 09da 1A46     		mov	r2, r3
 18769 09dc 7B69     		ldr	r3, [r7, #20]
 18770 09de 1344     		add	r3, r3, r2
 18771 09e0 C24A     		ldr	r2, .L741+4
 18772 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 18773 09e4 9278     		ldrb	r2, [r2, #2]
 18774 09e6 1980     		strh	r1, [r3]	@ unaligned
 18775 09e8 9A70     		strb	r2, [r3, #2]
 18776              	.L709:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18777              		.loc 1 2434 0 discriminator 2
 18778 09ea D7F89430 		ldr	r3, [r7, #148]
 18779 09ee 0133     		adds	r3, r3, #1
 18780 09f0 C7F89430 		str	r3, [r7, #148]
 18781              	.L708:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 18782              		.loc 1 2434 0 is_stmt 0 discriminator 1
 18783 09f4 D7F89430 		ldr	r3, [r7, #148]
 18784 09f8 022B     		cmp	r3, #2
 18785 09fa BBDD     		ble	.L710
2439:..\src/command_processing.c ****             }
2440:..\src/command_processing.c ****         }
2441:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 18786              		.loc 1 2441 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 413


 18787 09fc 7869     		ldr	r0, [r7, #20]
 18788 09fe FFF7FEFF 		bl	strlen
 18789 0a02 0346     		mov	r3, r0
 18790 0a04 1A46     		mov	r2, r3
 18791 0a06 7B69     		ldr	r3, [r7, #20]
 18792 0a08 1344     		add	r3, r3, r2
 18793 0a0a B94A     		ldr	r2, .L741+8
 18794 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
 18795 0a0e 9278     		ldrb	r2, [r2, #2]
 18796 0a10 1980     		strh	r1, [r3]	@ unaligned
 18797 0a12 9A70     		strb	r2, [r3, #2]
2442:..\src/command_processing.c ****             
2443:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 18798              		.loc 1 2443 0
 18799 0a14 7869     		ldr	r0, [r7, #20]
 18800 0a16 FFF7FEFF 		bl	strlen
 18801 0a1a 0346     		mov	r3, r0
 18802 0a1c 1A46     		mov	r2, r3
 18803 0a1e 7B69     		ldr	r3, [r7, #20]
 18804 0a20 1344     		add	r3, r3, r2
 18805 0a22 B44A     		ldr	r2, .L741+12
 18806 0a24 1C46     		mov	r4, r3
 18807 0a26 1346     		mov	r3, r2
 18808 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 18809 0a2a 2060     		str	r0, [r4]	@ unaligned
 18810 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 18811 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 18812 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 18813 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2444:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 18814              		.loc 1 2444 0
 18815 0a34 0023     		movs	r3, #0
 18816 0a36 C7F89430 		str	r3, [r7, #148]
 18817 0a3a 35E0     		b	.L711
 18818              	.L713:
2445:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18819              		.loc 1 2445 0
 18820 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18821 0a40 D7F88C10 		ldr	r1, [r7, #140]
 18822 0a44 1346     		mov	r3, r2
 18823 0a46 5B00     		lsls	r3, r3, #1
 18824 0a48 1344     		add	r3, r3, r2
 18825 0a4a 9B00     		lsls	r3, r3, #2
 18826 0a4c D7F89420 		ldr	r2, [r7, #148]
 18827 0a50 1344     		add	r3, r3, r2
 18828 0a52 6833     		adds	r3, r3, #104
 18829 0a54 9B00     		lsls	r3, r3, #2
 18830 0a56 0B44     		add	r3, r3, r1
 18831 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 18832 0a5a 1846     		mov	r0, r3
 18833 0a5c FFF7FEFF 		bl	__aeabi_f2d
 18834 0a60 0346     		mov	r3, r0
 18835 0a62 0C46     		mov	r4, r1
 18836 0a64 07F11C00 		add	r0, r7, #28
 18837 0a68 1A46     		mov	r2, r3
 18838 0a6a 2346     		mov	r3, r4
 18839 0a6c A249     		ldr	r1, .L741+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 414


 18840 0a6e FFF7FEFF 		bl	sprintf
2446:..\src/command_processing.c ****             strcat(info_string, str);
 18841              		.loc 1 2446 0
 18842 0a72 07F11C03 		add	r3, r7, #28
 18843 0a76 1946     		mov	r1, r3
 18844 0a78 7869     		ldr	r0, [r7, #20]
 18845 0a7a FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 18846              		.loc 1 2447 0
 18847 0a7e D7F89430 		ldr	r3, [r7, #148]
 18848 0a82 022B     		cmp	r3, #2
 18849 0a84 0BD0     		beq	.L712
2448:..\src/command_processing.c ****                 strcat(info_string, ", ");
 18850              		.loc 1 2448 0
 18851 0a86 7869     		ldr	r0, [r7, #20]
 18852 0a88 FFF7FEFF 		bl	strlen
 18853 0a8c 0346     		mov	r3, r0
 18854 0a8e 1A46     		mov	r2, r3
 18855 0a90 7B69     		ldr	r3, [r7, #20]
 18856 0a92 1344     		add	r3, r3, r2
 18857 0a94 954A     		ldr	r2, .L741+4
 18858 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 18859 0a98 9278     		ldrb	r2, [r2, #2]
 18860 0a9a 1980     		strh	r1, [r3]	@ unaligned
 18861 0a9c 9A70     		strb	r2, [r3, #2]
 18862              	.L712:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18863              		.loc 1 2444 0 discriminator 2
 18864 0a9e D7F89430 		ldr	r3, [r7, #148]
 18865 0aa2 0133     		adds	r3, r3, #1
 18866 0aa4 C7F89430 		str	r3, [r7, #148]
 18867              	.L711:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 18868              		.loc 1 2444 0 is_stmt 0 discriminator 1
 18869 0aa8 D7F89430 		ldr	r3, [r7, #148]
 18870 0aac 022B     		cmp	r3, #2
 18871 0aae C5DD     		ble	.L713
2449:..\src/command_processing.c ****             }
2450:..\src/command_processing.c ****         }
2451:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 18872              		.loc 1 2451 0 is_stmt 1
 18873 0ab0 7869     		ldr	r0, [r7, #20]
 18874 0ab2 FFF7FEFF 		bl	strlen
 18875 0ab6 0346     		mov	r3, r0
 18876 0ab8 1A46     		mov	r2, r3
 18877 0aba 7B69     		ldr	r3, [r7, #20]
 18878 0abc 1344     		add	r3, r3, r2
 18879 0abe 8C4A     		ldr	r2, .L741+8
 18880 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 18881 0ac2 9278     		ldrb	r2, [r2, #2]
 18882 0ac4 1980     		strh	r1, [r3]	@ unaligned
 18883 0ac6 9A70     		strb	r2, [r3, #2]
2452:..\src/command_processing.c **** 
2453:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 18884              		.loc 1 2453 0
 18885 0ac8 D7F88430 		ldr	r3, [r7, #132]
 18886 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 415


 18887 0ace 1846     		mov	r0, r3
 18888 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 18889 0ad4 C7E90201 		strd	r0, [r7, #8]
 18890 0ad8 D7F88430 		ldr	r3, [r7, #132]
 18891 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 18892 0ade 1846     		mov	r0, r3
 18893 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 18894 0ae4 0446     		mov	r4, r0
 18895 0ae6 0D46     		mov	r5, r1
 18896 0ae8 D7F88430 		ldr	r3, [r7, #132]
 18897 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 18898 0aee 1846     		mov	r0, r3
 18899 0af0 FFF7FEFF 		bl	__aeabi_f2d
 18900 0af4 8046     		mov	r8, r0
 18901 0af6 8946     		mov	r9, r1
 18902 0af8 D7F88430 		ldr	r3, [r7, #132]
 18903 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 18904 0afe 1846     		mov	r0, r3
 18905 0b00 FFF7FEFF 		bl	__aeabi_f2d
 18906 0b04 8246     		mov	r10, r0
 18907 0b06 8B46     		mov	fp, r1
 18908 0b08 D7F88430 		ldr	r3, [r7, #132]
 18909 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 18910 0b0e 1846     		mov	r0, r3
 18911 0b10 FFF7FEFF 		bl	__aeabi_f2d
 18912 0b14 C7E90001 		strd	r0, [r7]
 18913 0b18 D7F88430 		ldr	r3, [r7, #132]
 18914 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 18915 0b1e 1846     		mov	r0, r3
 18916 0b20 FFF7FEFF 		bl	__aeabi_f2d
 18917 0b24 0246     		mov	r2, r0
 18918 0b26 0B46     		mov	r3, r1
 18919 0b28 07F11C00 		add	r0, r7, #28
 18920 0b2c CDE90823 		strd	r2, [sp, #32]
 18921 0b30 D7E90012 		ldrd	r1, [r7]
 18922 0b34 CDE90612 		strd	r1, [sp, #24]
 18923 0b38 CDE904AB 		strd	r10, [sp, #16]
 18924 0b3c CDE90289 		strd	r8, [sp, #8]
 18925 0b40 CDE90045 		strd	r4, [sp]
 18926 0b44 D7E90223 		ldrd	r2, [r7, #8]
 18927 0b48 6C49     		ldr	r1, .L741+20
 18928 0b4a FFF7FEFF 		bl	sprintf
2454:..\src/command_processing.c **** 		strcat(info_string, str);
 18929              		.loc 1 2454 0
 18930 0b4e 07F11C03 		add	r3, r7, #28
 18931 0b52 1946     		mov	r1, r3
 18932 0b54 7869     		ldr	r0, [r7, #20]
 18933 0b56 FFF7FEFF 		bl	strcat
2455:..\src/command_processing.c **** 
2456:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 18934              		.loc 1 2456 0
 18935 0b5a D7F88430 		ldr	r3, [r7, #132]
 18936 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 18937 0b62 1A46     		mov	r2, r3
 18938 0b64 07F11C03 		add	r3, r7, #28
 18939 0b68 6549     		ldr	r1, .L741+24
 18940 0b6a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 416


 18941 0b6c FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c **** 		strcat(info_string, str);
 18942              		.loc 1 2457 0
 18943 0b70 07F11C03 		add	r3, r7, #28
 18944 0b74 1946     		mov	r1, r3
 18945 0b76 7869     		ldr	r0, [r7, #20]
 18946 0b78 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 
2459:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 18947              		.loc 1 2459 0
 18948 0b7c D7F88430 		ldr	r3, [r7, #132]
 18949 0b80 596B     		ldr	r1, [r3, #52]
 18950 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18951 0b86 D7F88C00 		ldr	r0, [r7, #140]
 18952 0b8a 1346     		mov	r3, r2
 18953 0b8c 5B00     		lsls	r3, r3, #1
 18954 0b8e 1344     		add	r3, r3, r2
 18955 0b90 1B01     		lsls	r3, r3, #4
 18956 0b92 0344     		add	r3, r3, r0
 18957 0b94 03F29513 		addw	r3, r3, #405
 18958 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18959 0b9a 41FA03F4 		asr	r4, r1, r3
 18960 0b9e D7F88430 		ldr	r3, [r7, #132]
 18961 0ba2 996B     		ldr	r1, [r3, #56]
 18962 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 18963 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 18964 0bac 1346     		mov	r3, r2
 18965 0bae 5B00     		lsls	r3, r3, #1
 18966 0bb0 1344     		add	r3, r3, r2
 18967 0bb2 1B01     		lsls	r3, r3, #4
 18968 0bb4 0344     		add	r3, r3, r0
 18969 0bb6 03F29513 		addw	r3, r3, #405
 18970 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18971 0bbc 41FA03F3 		asr	r3, r1, r3
 18972 0bc0 07F11C00 		add	r0, r7, #28
 18973 0bc4 2246     		mov	r2, r4
 18974 0bc6 4F49     		ldr	r1, .L741+28
 18975 0bc8 FFF7FEFF 		bl	sprintf
2460:..\src/command_processing.c **** 		strcat(info_string, str);
 18976              		.loc 1 2460 0
 18977 0bcc 07F11C03 		add	r3, r7, #28
 18978 0bd0 1946     		mov	r1, r3
 18979 0bd2 7869     		ldr	r0, [r7, #20]
 18980 0bd4 FFF7FEFF 		bl	strcat
2461:..\src/command_processing.c **** 
2462:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 18981              		.loc 1 2462 0
 18982 0bd8 D7F88430 		ldr	r3, [r7, #132]
 18983 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 18984 0be0 1A46     		mov	r2, r3
 18985 0be2 07F11C03 		add	r3, r7, #28
 18986 0be6 4849     		ldr	r1, .L741+32
 18987 0be8 1846     		mov	r0, r3
 18988 0bea FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 18989              		.loc 1 2463 0
 18990 0bee 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 417


 18991 0bf2 1946     		mov	r1, r3
 18992 0bf4 7869     		ldr	r0, [r7, #20]
 18993 0bf6 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 
2465:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 18994              		.loc 1 2465 0
 18995 0bfa D7F88430 		ldr	r3, [r7, #132]
 18996 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 18997 0c02 022B     		cmp	r3, #2
 18998 0c04 12D0     		beq	.L714
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 18999              		.loc 1 2466 0 discriminator 1
 19000 0c06 D7F88430 		ldr	r3, [r7, #132]
 19001 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2465:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19002              		.loc 1 2465 0 discriminator 1
 19003 0c0e 032B     		cmp	r3, #3
 19004 0c10 0CD0     		beq	.L714
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19005              		.loc 1 2467 0
 19006 0c12 D7F88430 		ldr	r3, [r7, #132]
 19007 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19008              		.loc 1 2466 0
 19009 0c1a 042B     		cmp	r3, #4
 19010 0c1c 06D0     		beq	.L714
2468:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 19011              		.loc 1 2468 0
 19012 0c1e D7F88430 		ldr	r3, [r7, #132]
 19013 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19014              		.loc 1 2467 0
 19015 0c26 052B     		cmp	r3, #5
 19016 0c28 40F0AA80 		bne	.L715
 19017              	.L714:
2469:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 19018              		.loc 1 2469 0
 19019 0c2c D7F88C30 		ldr	r3, [r7, #140]
 19020 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 19021 0c34 1A46     		mov	r2, r3
 19022 0c36 D7F88C30 		ldr	r3, [r7, #140]
 19023 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 19024 0c3e 07F11C00 		add	r0, r7, #28
 19025 0c42 3249     		ldr	r1, .L741+36
 19026 0c44 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 19027              		.loc 1 2470 0
 19028 0c48 07F11C03 		add	r3, r7, #28
 19029 0c4c 1946     		mov	r1, r3
 19030 0c4e 7869     		ldr	r0, [r7, #20]
 19031 0c50 FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19032              		.loc 1 2471 0
 19033 0c54 7869     		ldr	r0, [r7, #20]
 19034 0c56 FFF7FEFF 		bl	strlen
 19035 0c5a 0346     		mov	r3, r0
 19036 0c5c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 418


 19037 0c5e 7B69     		ldr	r3, [r7, #20]
 19038 0c60 1344     		add	r3, r3, r2
 19039 0c62 234A     		ldr	r2, .L741+8
 19040 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 19041 0c66 9278     		ldrb	r2, [r2, #2]
 19042 0c68 1980     		strh	r1, [r3]	@ unaligned
 19043 0c6a 9A70     		strb	r2, [r3, #2]
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 19044              		.loc 1 2473 0
 19045 0c6c D7F88C30 		ldr	r3, [r7, #140]
 19046 0c70 D3F8F421 		ldr	r2, [r3, #500]
 19047 0c74 D7F88C30 		ldr	r3, [r7, #140]
 19048 0c78 D3F8F831 		ldr	r3, [r3, #504]
 19049 0c7c 07F11C00 		add	r0, r7, #28
 19050 0c80 2349     		ldr	r1, .L741+40
 19051 0c82 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c **** 			strcat(info_string, str);
 19052              		.loc 1 2474 0
 19053 0c86 07F11C03 		add	r3, r7, #28
 19054 0c8a 1946     		mov	r1, r3
 19055 0c8c 7869     		ldr	r0, [r7, #20]
 19056 0c8e FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19057              		.loc 1 2475 0
 19058 0c92 7869     		ldr	r0, [r7, #20]
 19059 0c94 FFF7FEFF 		bl	strlen
 19060 0c98 0346     		mov	r3, r0
 19061 0c9a 1A46     		mov	r2, r3
 19062 0c9c 7B69     		ldr	r3, [r7, #20]
 19063 0c9e 1344     		add	r3, r3, r2
 19064 0ca0 134A     		ldr	r2, .L741+8
 19065 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 19066 0ca4 9278     		ldrb	r2, [r2, #2]
 19067 0ca6 1980     		strh	r1, [r3]	@ unaligned
 19068 0ca8 9A70     		strb	r2, [r3, #2]
2476:..\src/command_processing.c **** 
2477:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 19069              		.loc 1 2477 0
 19070 0caa D7F88C30 		ldr	r3, [r7, #140]
 19071 0cae 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 19072 0cb2 002B     		cmp	r3, #0
 19073 0cb4 30D0     		beq	.L716
2478:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 19074              		.loc 1 2478 0
 19075 0cb6 7869     		ldr	r0, [r7, #20]
 19076 0cb8 FFF7FEFF 		bl	strlen
 19077 0cbc 0346     		mov	r3, r0
 19078 0cbe 1A46     		mov	r2, r3
 19079 0cc0 7B69     		ldr	r3, [r7, #20]
 19080 0cc2 1344     		add	r3, r3, r2
 19081 0cc4 134A     		ldr	r2, .L741+44
 19082 0cc6 1D46     		mov	r5, r3
 19083 0cc8 1446     		mov	r4, r2
 19084 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19085 0ccc 2860     		str	r0, [r5]	@ unaligned
 19086 0cce 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 419


 19087 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 19088 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 19089 0cd4 03CC     		ldmia	r4!, {r0, r1}
 19090 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 19091 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 19092 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 19093 0cdc A278     		ldrb	r2, [r4, #2]
 19094 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
 19095 0ce0 1346     		mov	r3, r2
 19096 0ce2 AB76     		strb	r3, [r5, #26]
 19097 0ce4 2CE0     		b	.L717
 19098              	.L742:
 19099 0ce6 00BF     		.align	2
 19100              	.L741:
 19101 0ce8 0C140000 		.word	.LC195
 19102 0cec 9C100000 		.word	.LC162
 19103 0cf0 AC0E0000 		.word	.LC132
 19104 0cf4 941A0000 		.word	.LC261
 19105 0cf8 2C140000 		.word	.LC197
 19106 0cfc A41A0000 		.word	.LC262
 19107 0d00 E01A0000 		.word	.LC263
 19108 0d04 FC1A0000 		.word	.LC264
 19109 0d08 CC140000 		.word	.LC203
 19110 0d0c C0150000 		.word	.LC211
 19111 0d10 E4150000 		.word	.LC212
 19112 0d14 34160000 		.word	.LC215
 19113              	.L716:
2479:..\src/command_processing.c **** 			else
2480:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 19114              		.loc 1 2480 0
 19115 0d18 7869     		ldr	r0, [r7, #20]
 19116 0d1a FFF7FEFF 		bl	strlen
 19117 0d1e 0346     		mov	r3, r0
 19118 0d20 1A46     		mov	r2, r3
 19119 0d22 7B69     		ldr	r3, [r7, #20]
 19120 0d24 1344     		add	r3, r3, r2
 19121 0d26 D04A     		ldr	r2, .L743
 19122 0d28 1D46     		mov	r5, r3
 19123 0d2a 1446     		mov	r4, r2
 19124 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19125 0d2e 2860     		str	r0, [r5]	@ unaligned
 19126 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 19127 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 19128 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 19129 0d36 03CC     		ldmia	r4!, {r0, r1}
 19130 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 19131 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 19132 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 19133 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19134              	.L717:
2481:..\src/command_processing.c **** 
2482:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 19135              		.loc 1 2482 0
 19136 0d40 D7F88C30 		ldr	r3, [r7, #140]
 19137 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 19138 0d48 1A46     		mov	r2, r3
 19139 0d4a D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 420


 19140 0d4e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 19141 0d52 07F11C00 		add	r0, r7, #28
 19142 0d56 C549     		ldr	r1, .L743+4
 19143 0d58 FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c **** 			strcat(info_string, str);
 19144              		.loc 1 2483 0
 19145 0d5c 07F11C03 		add	r3, r7, #28
 19146 0d60 1946     		mov	r1, r3
 19147 0d62 7869     		ldr	r0, [r7, #20]
 19148 0d64 FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 19149              		.loc 1 2484 0
 19150 0d68 7869     		ldr	r0, [r7, #20]
 19151 0d6a FFF7FEFF 		bl	strlen
 19152 0d6e 0346     		mov	r3, r0
 19153 0d70 1A46     		mov	r2, r3
 19154 0d72 7B69     		ldr	r3, [r7, #20]
 19155 0d74 1344     		add	r3, r3, r2
 19156 0d76 BE4A     		ldr	r2, .L743+8
 19157 0d78 1188     		ldrh	r1, [r2]	@ unaligned
 19158 0d7a 9278     		ldrb	r2, [r2, #2]
 19159 0d7c 1980     		strh	r1, [r3]	@ unaligned
 19160 0d7e 9A70     		strb	r2, [r3, #2]
 19161              	.L715:
 19162              	.LBE20:
2318:..\src/command_processing.c ****             
 19163              		.loc 1 2318 0 discriminator 2
 19164 0d80 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 19165 0d84 0133     		adds	r3, r3, #1
 19166 0d86 87F89330 		strb	r3, [r7, #147]
 19167              	.L675:
2318:..\src/command_processing.c ****             
 19168              		.loc 1 2318 0 is_stmt 0 discriminator 1
 19169 0d8a D7F88C30 		ldr	r3, [r7, #140]
 19170 0d8e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 19171 0d92 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 19172 0d96 9A42     		cmp	r2, r3
 19173 0d98 7FF6BBA9 		bls	.L718
 19174              	.LBE19:
2485:..\src/command_processing.c **** 		}
2486:..\src/command_processing.c **** 	}
2487:..\src/command_processing.c **** 	 
2488:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 19175              		.loc 1 2488 0 is_stmt 1
 19176 0d9c D7F88C30 		ldr	r3, [r7, #140]
 19177 0da0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 19178 0da4 002B     		cmp	r3, #0
 19179 0da6 63D0     		beq	.L719
2489:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 19180              		.loc 1 2489 0
 19181 0da8 D7F88C30 		ldr	r3, [r7, #140]
 19182 0dac D3F8A422 		ldr	r2, [r3, #676]
 19183 0db0 07F11C03 		add	r3, r7, #28
 19184 0db4 AF49     		ldr	r1, .L743+12
 19185 0db6 1846     		mov	r0, r3
 19186 0db8 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 421


 19187              		.loc 1 2490 0
 19188 0dbc 07F11C03 		add	r3, r7, #28
 19189 0dc0 1946     		mov	r1, r3
 19190 0dc2 7869     		ldr	r0, [r7, #20]
 19191 0dc4 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19192              		.loc 1 2491 0
 19193 0dc8 7869     		ldr	r0, [r7, #20]
 19194 0dca FFF7FEFF 		bl	strlen
 19195 0dce 0346     		mov	r3, r0
 19196 0dd0 1A46     		mov	r2, r3
 19197 0dd2 7B69     		ldr	r3, [r7, #20]
 19198 0dd4 1344     		add	r3, r3, r2
 19199 0dd6 A64A     		ldr	r2, .L743+8
 19200 0dd8 1188     		ldrh	r1, [r2]	@ unaligned
 19201 0dda 9278     		ldrb	r2, [r2, #2]
 19202 0ddc 1980     		strh	r1, [r3]	@ unaligned
 19203 0dde 9A70     		strb	r2, [r3, #2]
2492:..\src/command_processing.c ****         
2493:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 19204              		.loc 1 2493 0
 19205 0de0 D7F88C30 		ldr	r3, [r7, #140]
 19206 0de4 D3F8A822 		ldr	r2, [r3, #680]
 19207 0de8 07F11C03 		add	r3, r7, #28
 19208 0dec A249     		ldr	r1, .L743+16
 19209 0dee 1846     		mov	r0, r3
 19210 0df0 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****         strcat(info_string, str);
 19211              		.loc 1 2494 0
 19212 0df4 07F11C03 		add	r3, r7, #28
 19213 0df8 1946     		mov	r1, r3
 19214 0dfa 7869     		ldr	r0, [r7, #20]
 19215 0dfc FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19216              		.loc 1 2495 0
 19217 0e00 7869     		ldr	r0, [r7, #20]
 19218 0e02 FFF7FEFF 		bl	strlen
 19219 0e06 0346     		mov	r3, r0
 19220 0e08 1A46     		mov	r2, r3
 19221 0e0a 7B69     		ldr	r3, [r7, #20]
 19222 0e0c 1344     		add	r3, r3, r2
 19223 0e0e 984A     		ldr	r2, .L743+8
 19224 0e10 1188     		ldrh	r1, [r2]	@ unaligned
 19225 0e12 9278     		ldrb	r2, [r2, #2]
 19226 0e14 1980     		strh	r1, [r3]	@ unaligned
 19227 0e16 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****         
2497:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 19228              		.loc 1 2497 0
 19229 0e18 D7F88C30 		ldr	r3, [r7, #140]
 19230 0e1c D3F8A022 		ldr	r2, [r3, #672]
 19231 0e20 D7F88C30 		ldr	r3, [r7, #140]
 19232 0e24 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 19233 0e28 1846     		mov	r0, r3
 19234 0e2a D7F88C10 		ldr	r1, [r7, #140]
 19235 0e2e 0346     		mov	r3, r0
 19236 0e30 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 422


 19237 0e32 0344     		add	r3, r3, r0
 19238 0e34 1B01     		lsls	r3, r3, #4
 19239 0e36 0B44     		add	r3, r3, r1
 19240 0e38 03F29513 		addw	r3, r3, #405
 19241 0e3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19242 0e3e 1A41     		asrs	r2, r2, r3
 19243 0e40 07F11C03 		add	r3, r7, #28
 19244 0e44 8D49     		ldr	r1, .L743+20
 19245 0e46 1846     		mov	r0, r3
 19246 0e48 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****         strcat(info_string, str);
 19247              		.loc 1 2498 0
 19248 0e4c 07F11C03 		add	r3, r7, #28
 19249 0e50 1946     		mov	r1, r3
 19250 0e52 7869     		ldr	r0, [r7, #20]
 19251 0e54 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 19252              		.loc 1 2499 0
 19253 0e58 7869     		ldr	r0, [r7, #20]
 19254 0e5a FFF7FEFF 		bl	strlen
 19255 0e5e 0346     		mov	r3, r0
 19256 0e60 1A46     		mov	r2, r3
 19257 0e62 7B69     		ldr	r3, [r7, #20]
 19258 0e64 1344     		add	r3, r3, r2
 19259 0e66 824A     		ldr	r2, .L743+8
 19260 0e68 1188     		ldrh	r1, [r2]	@ unaligned
 19261 0e6a 9278     		ldrb	r2, [r2, #2]
 19262 0e6c 1980     		strh	r1, [r3]	@ unaligned
 19263 0e6e 9A70     		strb	r2, [r3, #2]
 19264              	.L719:
2500:..\src/command_processing.c ****     }
2501:..\src/command_processing.c **** 	
2502:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 19265              		.loc 1 2502 0
 19266 0e70 D7F88C30 		ldr	r3, [r7, #140]
 19267 0e74 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 19268 0e78 002B     		cmp	r3, #0
 19269 0e7a 00F0CB81 		beq	.L734
2503:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 19270              		.loc 1 2503 0
 19271 0e7e 804B     		ldr	r3, .L743+24
 19272 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19273 0e82 1A46     		mov	r2, r3
 19274 0e84 07F11C03 		add	r3, r7, #28
 19275 0e88 7E49     		ldr	r1, .L743+28
 19276 0e8a 1846     		mov	r0, r3
 19277 0e8c FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c **** 		strcat(info_string, str);
 19278              		.loc 1 2504 0
 19279 0e90 07F11C03 		add	r3, r7, #28
 19280 0e94 1946     		mov	r1, r3
 19281 0e96 7869     		ldr	r0, [r7, #20]
 19282 0e98 FFF7FEFF 		bl	strcat
2505:..\src/command_processing.c **** 		
2506:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19283              		.loc 1 2506 0
 19284 0e9c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 423


 19285 0e9e FFF7FEFF 		bl	strlen
 19286 0ea2 0346     		mov	r3, r0
 19287 0ea4 1A46     		mov	r2, r3
 19288 0ea6 7B69     		ldr	r3, [r7, #20]
 19289 0ea8 1344     		add	r3, r3, r2
 19290 0eaa 714A     		ldr	r2, .L743+8
 19291 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 19292 0eae 9278     		ldrb	r2, [r2, #2]
 19293 0eb0 1980     		strh	r1, [r3]	@ unaligned
 19294 0eb2 9A70     		strb	r2, [r3, #2]
2507:..\src/command_processing.c **** 		
2508:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 19295              		.loc 1 2508 0
 19296 0eb4 7869     		ldr	r0, [r7, #20]
 19297 0eb6 FFF7FEFF 		bl	strlen
 19298 0eba 0346     		mov	r3, r0
 19299 0ebc 1A46     		mov	r2, r3
 19300 0ebe 7B69     		ldr	r3, [r7, #20]
 19301 0ec0 1344     		add	r3, r3, r2
 19302 0ec2 714A     		ldr	r2, .L743+32
 19303 0ec4 1D46     		mov	r5, r3
 19304 0ec6 1446     		mov	r4, r2
 19305 0ec8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19306 0eca 2860     		str	r0, [r5]	@ unaligned
 19307 0ecc 6960     		str	r1, [r5, #4]	@ unaligned
 19308 0ece AA60     		str	r2, [r5, #8]	@ unaligned
 19309 0ed0 EB60     		str	r3, [r5, #12]	@ unaligned
 19310 0ed2 2068     		ldr	r0, [r4]	@ unaligned
 19311 0ed4 2861     		str	r0, [r5, #16]	@ unaligned
 19312 0ed6 2379     		ldrb	r3, [r4, #4]
 19313 0ed8 2B75     		strb	r3, [r5, #20]
2509:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 19314              		.loc 1 2509 0
 19315 0eda 0023     		movs	r3, #0
 19316 0edc C7F89430 		str	r3, [r7, #148]
 19317 0ee0 84E1     		b	.L721
 19318              	.L732:
2510:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19319              		.loc 1 2510 0
 19320 0ee2 6A4A     		ldr	r2, .L743+36
 19321 0ee4 D7F89430 		ldr	r3, [r7, #148]
 19322 0ee8 1344     		add	r3, r3, r2
 19323 0eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19324 0eec 07F11C00 		add	r0, r7, #28
 19325 0ef0 D7F89420 		ldr	r2, [r7, #148]
 19326 0ef4 6649     		ldr	r1, .L743+40
 19327 0ef6 FFF7FEFF 		bl	sprintf
2511:..\src/command_processing.c **** 			strcat(info_string, str);
 19328              		.loc 1 2511 0
 19329 0efa 07F11C03 		add	r3, r7, #28
 19330 0efe 1946     		mov	r1, r3
 19331 0f00 7869     		ldr	r0, [r7, #20]
 19332 0f02 FFF7FEFF 		bl	strcat
2512:..\src/command_processing.c **** 			
2513:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 19333              		.loc 1 2513 0
 19334 0f06 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 424


 19335 0f0a 624A     		ldr	r2, .L743+44
 19336 0f0c 1C46     		mov	r4, r3
 19337 0f0e 1546     		mov	r5, r2
 19338 0f10 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19339 0f12 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 19340 0f14 2B68     		ldr	r3, [r5]
 19341 0f16 2380     		strh	r3, [r4]	@ movhi
2514:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 19342              		.loc 1 2514 0
 19343 0f18 5C4A     		ldr	r2, .L743+36
 19344 0f1a D7F89430 		ldr	r3, [r7, #148]
 19345 0f1e 1344     		add	r3, r3, r2
 19346 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19347 0f22 1946     		mov	r1, r3
 19348 0f24 D7F88C20 		ldr	r2, [r7, #140]
 19349 0f28 0B46     		mov	r3, r1
 19350 0f2a 9B00     		lsls	r3, r3, #2
 19351 0f2c 0B44     		add	r3, r3, r1
 19352 0f2e 1344     		add	r3, r3, r2
 19353 0f30 03F20223 		addw	r3, r3, #514
 19354 0f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19355 0f36 002B     		cmp	r3, #0
 19356 0f38 0FD0     		beq	.L722
2515:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19357              		.loc 1 2515 0
 19358 0f3a 07F11C03 		add	r3, r7, #28
 19359 0f3e 1846     		mov	r0, r3
 19360 0f40 FFF7FEFF 		bl	strlen
 19361 0f44 0346     		mov	r3, r0
 19362 0f46 1A46     		mov	r2, r3
 19363 0f48 07F11C03 		add	r3, r7, #28
 19364 0f4c 1344     		add	r3, r3, r2
 19365 0f4e 524A     		ldr	r2, .L743+48
 19366 0f50 1068     		ldr	r0, [r2]	@ unaligned
 19367 0f52 1860     		str	r0, [r3]	@ unaligned
 19368 0f54 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19369 0f56 9A80     		strh	r2, [r3, #4]	@ unaligned
 19370 0f58 0EE0     		b	.L723
 19371              	.L722:
2516:..\src/command_processing.c **** 			else
2517:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19372              		.loc 1 2517 0
 19373 0f5a 07F11C03 		add	r3, r7, #28
 19374 0f5e 1846     		mov	r0, r3
 19375 0f60 FFF7FEFF 		bl	strlen
 19376 0f64 0346     		mov	r3, r0
 19377 0f66 1A46     		mov	r2, r3
 19378 0f68 07F11C03 		add	r3, r7, #28
 19379 0f6c 1344     		add	r3, r3, r2
 19380 0f6e 4B4A     		ldr	r2, .L743+52
 19381 0f70 1068     		ldr	r0, [r2]	@ unaligned
 19382 0f72 1860     		str	r0, [r3]	@ unaligned
 19383 0f74 1279     		ldrb	r2, [r2, #4]
 19384 0f76 1A71     		strb	r2, [r3, #4]
 19385              	.L723:
2518:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 19386              		.loc 1 2518 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 425


 19387 0f78 07F11C03 		add	r3, r7, #28
 19388 0f7c 1846     		mov	r0, r3
 19389 0f7e FFF7FEFF 		bl	strlen
 19390 0f82 0346     		mov	r3, r0
 19391 0f84 1A46     		mov	r2, r3
 19392 0f86 07F11C03 		add	r3, r7, #28
 19393 0f8a 1344     		add	r3, r3, r2
 19394 0f8c 444A     		ldr	r2, .L743+56
 19395 0f8e 1C46     		mov	r4, r3
 19396 0f90 1346     		mov	r3, r2
 19397 0f92 07CB     		ldmia	r3!, {r0, r1, r2}
 19398 0f94 2060     		str	r0, [r4]	@ unaligned
 19399 0f96 6160     		str	r1, [r4, #4]	@ unaligned
 19400 0f98 A260     		str	r2, [r4, #8]	@ unaligned
 19401 0f9a 1B88     		ldrh	r3, [r3]	@ unaligned
 19402 0f9c A381     		strh	r3, [r4, #12]	@ unaligned
2519:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 19403              		.loc 1 2519 0
 19404 0f9e 3B4A     		ldr	r2, .L743+36
 19405 0fa0 D7F89430 		ldr	r3, [r7, #148]
 19406 0fa4 1344     		add	r3, r3, r2
 19407 0fa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19408 0fa8 1946     		mov	r1, r3
 19409 0faa D7F88C20 		ldr	r2, [r7, #140]
 19410 0fae 0B46     		mov	r3, r1
 19411 0fb0 9B00     		lsls	r3, r3, #2
 19412 0fb2 0B44     		add	r3, r3, r1
 19413 0fb4 1344     		add	r3, r3, r2
 19414 0fb6 03F20323 		addw	r3, r3, #515
 19415 0fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19416 0fbc 002B     		cmp	r3, #0
 19417 0fbe 0FD0     		beq	.L724
2520:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19418              		.loc 1 2520 0
 19419 0fc0 07F11C03 		add	r3, r7, #28
 19420 0fc4 1846     		mov	r0, r3
 19421 0fc6 FFF7FEFF 		bl	strlen
 19422 0fca 0346     		mov	r3, r0
 19423 0fcc 1A46     		mov	r2, r3
 19424 0fce 07F11C03 		add	r3, r7, #28
 19425 0fd2 1344     		add	r3, r3, r2
 19426 0fd4 304A     		ldr	r2, .L743+48
 19427 0fd6 1068     		ldr	r0, [r2]	@ unaligned
 19428 0fd8 1860     		str	r0, [r3]	@ unaligned
 19429 0fda 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19430 0fdc 9A80     		strh	r2, [r3, #4]	@ unaligned
 19431 0fde 0EE0     		b	.L725
 19432              	.L724:
2521:..\src/command_processing.c **** 			else
2522:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 19433              		.loc 1 2522 0
 19434 0fe0 07F11C03 		add	r3, r7, #28
 19435 0fe4 1846     		mov	r0, r3
 19436 0fe6 FFF7FEFF 		bl	strlen
 19437 0fea 0346     		mov	r3, r0
 19438 0fec 1A46     		mov	r2, r3
 19439 0fee 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 426


 19440 0ff2 1344     		add	r3, r3, r2
 19441 0ff4 294A     		ldr	r2, .L743+52
 19442 0ff6 1068     		ldr	r0, [r2]	@ unaligned
 19443 0ff8 1860     		str	r0, [r3]	@ unaligned
 19444 0ffa 1279     		ldrb	r2, [r2, #4]
 19445 0ffc 1A71     		strb	r2, [r3, #4]
 19446              	.L725:
2523:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 19447              		.loc 1 2523 0
 19448 0ffe 07F11C03 		add	r3, r7, #28
 19449 1002 1846     		mov	r0, r3
 19450 1004 FFF7FEFF 		bl	strlen
 19451 1008 0346     		mov	r3, r0
 19452 100a 1A46     		mov	r2, r3
 19453 100c 07F11C03 		add	r3, r7, #28
 19454 1010 1344     		add	r3, r3, r2
 19455 1012 244A     		ldr	r2, .L743+60
 19456 1014 1D46     		mov	r5, r3
 19457 1016 1446     		mov	r4, r2
 19458 1018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19459 101a 2860     		str	r0, [r5]	@ unaligned
 19460 101c 6960     		str	r1, [r5, #4]	@ unaligned
 19461 101e AA60     		str	r2, [r5, #8]	@ unaligned
 19462 1020 EB60     		str	r3, [r5, #12]	@ unaligned
 19463 1022 2378     		ldrb	r3, [r4]
 19464 1024 2B74     		strb	r3, [r5, #16]
2524:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 19465              		.loc 1 2524 0
 19466 1026 194A     		ldr	r2, .L743+36
 19467 1028 D7F89430 		ldr	r3, [r7, #148]
 19468 102c 1344     		add	r3, r3, r2
 19469 102e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19470 1030 1946     		mov	r1, r3
 19471 1032 D7F88C20 		ldr	r2, [r7, #140]
 19472 1036 0B46     		mov	r3, r1
 19473 1038 9B00     		lsls	r3, r3, #2
 19474 103a 0B44     		add	r3, r3, r1
 19475 103c 1344     		add	r3, r3, r2
 19476 103e 03F50173 		add	r3, r3, #516
 19477 1042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19478 1044 002B     		cmp	r3, #0
 19479 1046 2FD0     		beq	.L726
2525:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19480              		.loc 1 2525 0
 19481 1048 07F11C03 		add	r3, r7, #28
 19482 104c 1846     		mov	r0, r3
 19483 104e FFF7FEFF 		bl	strlen
 19484 1052 0346     		mov	r3, r0
 19485 1054 1A46     		mov	r2, r3
 19486 1056 07F11C03 		add	r3, r7, #28
 19487 105a 1344     		add	r3, r3, r2
 19488 105c 0E4A     		ldr	r2, .L743+48
 19489 105e 1068     		ldr	r0, [r2]	@ unaligned
 19490 1060 1860     		str	r0, [r3]	@ unaligned
 19491 1062 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19492 1064 9A80     		strh	r2, [r3, #4]	@ unaligned
 19493 1066 2EE0     		b	.L727
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 427


 19494              	.L744:
 19495              		.align	2
 19496              	.L743:
 19497 1068 50160000 		.word	.LC216
 19498 106c 6C160000 		.word	.LC217
 19499 1070 AC0E0000 		.word	.LC132
 19500 1074 C8160000 		.word	.LC221
 19501 1078 E4160000 		.word	.LC222
 19502 107c 0C170000 		.word	.LC223
 19503 1080 00000000 		.word	N_IMU_Connected
 19504 1084 20170000 		.word	.LC224
 19505 1088 34170000 		.word	.LC225
 19506 108c 00000000 		.word	IMU_connected
 19507 1090 4C170000 		.word	.LC226
 19508 1094 60170000 		.word	.LC227
 19509 1098 28100000 		.word	.LC153
 19510 109c 30100000 		.word	.LC154
 19511 10a0 74170000 		.word	.LC228
 19512 10a4 84170000 		.word	.LC229
 19513              	.L726:
2526:..\src/command_processing.c **** 			else
2527:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19514              		.loc 1 2527 0
 19515 10a8 07F11C03 		add	r3, r7, #28
 19516 10ac 1846     		mov	r0, r3
 19517 10ae FFF7FEFF 		bl	strlen
 19518 10b2 0346     		mov	r3, r0
 19519 10b4 1A46     		mov	r2, r3
 19520 10b6 07F11C03 		add	r3, r7, #28
 19521 10ba 1344     		add	r3, r3, r2
 19522 10bc 584A     		ldr	r2, .L745
 19523 10be 1068     		ldr	r0, [r2]	@ unaligned
 19524 10c0 1860     		str	r0, [r3]	@ unaligned
 19525 10c2 1279     		ldrb	r2, [r2, #4]
 19526 10c4 1A71     		strb	r2, [r3, #4]
 19527              	.L727:
2528:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 19528              		.loc 1 2528 0
 19529 10c6 07F11C03 		add	r3, r7, #28
 19530 10ca 1846     		mov	r0, r3
 19531 10cc FFF7FEFF 		bl	strlen
 19532 10d0 0346     		mov	r3, r0
 19533 10d2 1A46     		mov	r2, r3
 19534 10d4 07F11C03 		add	r3, r7, #28
 19535 10d8 1344     		add	r3, r3, r2
 19536 10da 524A     		ldr	r2, .L745+4
 19537 10dc 1C46     		mov	r4, r3
 19538 10de 1346     		mov	r3, r2
 19539 10e0 07CB     		ldmia	r3!, {r0, r1, r2}
 19540 10e2 2060     		str	r0, [r4]	@ unaligned
 19541 10e4 6160     		str	r1, [r4, #4]	@ unaligned
 19542 10e6 A260     		str	r2, [r4, #8]	@ unaligned
 19543 10e8 1B88     		ldrh	r3, [r3]	@ unaligned
 19544 10ea A381     		strh	r3, [r4, #12]	@ unaligned
2529:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 19545              		.loc 1 2529 0
 19546 10ec 4E4A     		ldr	r2, .L745+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 428


 19547 10ee D7F89430 		ldr	r3, [r7, #148]
 19548 10f2 1344     		add	r3, r3, r2
 19549 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19550 10f6 1946     		mov	r1, r3
 19551 10f8 D7F88C20 		ldr	r2, [r7, #140]
 19552 10fc 0B46     		mov	r3, r1
 19553 10fe 9B00     		lsls	r3, r3, #2
 19554 1100 0B44     		add	r3, r3, r1
 19555 1102 1344     		add	r3, r3, r2
 19556 1104 03F20523 		addw	r3, r3, #517
 19557 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19558 110a 002B     		cmp	r3, #0
 19559 110c 0FD0     		beq	.L728
2530:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19560              		.loc 1 2530 0
 19561 110e 07F11C03 		add	r3, r7, #28
 19562 1112 1846     		mov	r0, r3
 19563 1114 FFF7FEFF 		bl	strlen
 19564 1118 0346     		mov	r3, r0
 19565 111a 1A46     		mov	r2, r3
 19566 111c 07F11C03 		add	r3, r7, #28
 19567 1120 1344     		add	r3, r3, r2
 19568 1122 424A     		ldr	r2, .L745+12
 19569 1124 1068     		ldr	r0, [r2]	@ unaligned
 19570 1126 1860     		str	r0, [r3]	@ unaligned
 19571 1128 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19572 112a 9A80     		strh	r2, [r3, #4]	@ unaligned
 19573 112c 0EE0     		b	.L729
 19574              	.L728:
2531:..\src/command_processing.c **** 			else
2532:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19575              		.loc 1 2532 0
 19576 112e 07F11C03 		add	r3, r7, #28
 19577 1132 1846     		mov	r0, r3
 19578 1134 FFF7FEFF 		bl	strlen
 19579 1138 0346     		mov	r3, r0
 19580 113a 1A46     		mov	r2, r3
 19581 113c 07F11C03 		add	r3, r7, #28
 19582 1140 1344     		add	r3, r3, r2
 19583 1142 374A     		ldr	r2, .L745
 19584 1144 1068     		ldr	r0, [r2]	@ unaligned
 19585 1146 1860     		str	r0, [r3]	@ unaligned
 19586 1148 1279     		ldrb	r2, [r2, #4]
 19587 114a 1A71     		strb	r2, [r3, #4]
 19588              	.L729:
2533:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 19589              		.loc 1 2533 0
 19590 114c 07F11C03 		add	r3, r7, #28
 19591 1150 1846     		mov	r0, r3
 19592 1152 FFF7FEFF 		bl	strlen
 19593 1156 0346     		mov	r3, r0
 19594 1158 1A46     		mov	r2, r3
 19595 115a 07F11C03 		add	r3, r7, #28
 19596 115e 1344     		add	r3, r3, r2
 19597 1160 334A     		ldr	r2, .L745+16
 19598 1162 1C46     		mov	r4, r3
 19599 1164 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 429


 19600 1166 07CB     		ldmia	r3!, {r0, r1, r2}
 19601 1168 2060     		str	r0, [r4]	@ unaligned
 19602 116a 6160     		str	r1, [r4, #4]	@ unaligned
 19603 116c A260     		str	r2, [r4, #8]	@ unaligned
 19604 116e 1A88     		ldrh	r2, [r3]	@ unaligned
 19605 1170 9B78     		ldrb	r3, [r3, #2]
 19606 1172 A281     		strh	r2, [r4, #12]	@ unaligned
 19607 1174 A373     		strb	r3, [r4, #14]
2534:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 19608              		.loc 1 2534 0
 19609 1176 2C4A     		ldr	r2, .L745+8
 19610 1178 D7F89430 		ldr	r3, [r7, #148]
 19611 117c 1344     		add	r3, r3, r2
 19612 117e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19613 1180 1946     		mov	r1, r3
 19614 1182 D7F88C20 		ldr	r2, [r7, #140]
 19615 1186 0B46     		mov	r3, r1
 19616 1188 9B00     		lsls	r3, r3, #2
 19617 118a 0B44     		add	r3, r3, r1
 19618 118c 1344     		add	r3, r3, r2
 19619 118e 03F20623 		addw	r3, r3, #518
 19620 1192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19621 1194 002B     		cmp	r3, #0
 19622 1196 0FD0     		beq	.L730
2535:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 19623              		.loc 1 2535 0
 19624 1198 07F11C03 		add	r3, r7, #28
 19625 119c 1846     		mov	r0, r3
 19626 119e FFF7FEFF 		bl	strlen
 19627 11a2 0346     		mov	r3, r0
 19628 11a4 1A46     		mov	r2, r3
 19629 11a6 07F11C03 		add	r3, r7, #28
 19630 11aa 1344     		add	r3, r3, r2
 19631 11ac 1F4A     		ldr	r2, .L745+12
 19632 11ae 1068     		ldr	r0, [r2]	@ unaligned
 19633 11b0 1860     		str	r0, [r3]	@ unaligned
 19634 11b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 19635 11b4 9A80     		strh	r2, [r3, #4]	@ unaligned
 19636 11b6 0EE0     		b	.L731
 19637              	.L730:
2536:..\src/command_processing.c **** 			else
2537:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 19638              		.loc 1 2537 0
 19639 11b8 07F11C03 		add	r3, r7, #28
 19640 11bc 1846     		mov	r0, r3
 19641 11be FFF7FEFF 		bl	strlen
 19642 11c2 0346     		mov	r3, r0
 19643 11c4 1A46     		mov	r2, r3
 19644 11c6 07F11C03 		add	r3, r7, #28
 19645 11ca 1344     		add	r3, r3, r2
 19646 11cc 144A     		ldr	r2, .L745
 19647 11ce 1068     		ldr	r0, [r2]	@ unaligned
 19648 11d0 1860     		str	r0, [r3]	@ unaligned
 19649 11d2 1279     		ldrb	r2, [r2, #4]
 19650 11d4 1A71     		strb	r2, [r3, #4]
 19651              	.L731:
2538:..\src/command_processing.c **** 				 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 430


2539:..\src/command_processing.c **** 			strcat(info_string, str);
 19652              		.loc 1 2539 0 discriminator 2
 19653 11d6 07F11C03 		add	r3, r7, #28
 19654 11da 1946     		mov	r1, r3
 19655 11dc 7869     		ldr	r0, [r7, #20]
 19656 11de FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19657              		.loc 1 2509 0 discriminator 2
 19658 11e2 D7F89430 		ldr	r3, [r7, #148]
 19659 11e6 0133     		adds	r3, r3, #1
 19660 11e8 C7F89430 		str	r3, [r7, #148]
 19661              	.L721:
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 19662              		.loc 1 2509 0 is_stmt 0 discriminator 1
 19663 11ec 114B     		ldr	r3, .L745+20
 19664 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19665 11f0 1A46     		mov	r2, r3
 19666 11f2 D7F89430 		ldr	r3, [r7, #148]
 19667 11f6 9A42     		cmp	r2, r3
 19668 11f8 3FF773AE 		bgt	.L732
2540:..\src/command_processing.c **** 		}       
2541:..\src/command_processing.c **** 		
2542:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 19669              		.loc 1 2542 0 is_stmt 1
 19670 11fc 7869     		ldr	r0, [r7, #20]
 19671 11fe FFF7FEFF 		bl	strlen
 19672 1202 0346     		mov	r3, r0
 19673 1204 1A46     		mov	r2, r3
 19674 1206 7B69     		ldr	r3, [r7, #20]
 19675 1208 1344     		add	r3, r3, r2
 19676 120a 0B4A     		ldr	r2, .L745+24
 19677 120c 1188     		ldrh	r1, [r2]	@ unaligned
 19678 120e 9278     		ldrb	r2, [r2, #2]
 19679 1210 1980     		strh	r1, [r3]	@ unaligned
 19680 1212 9A70     		strb	r2, [r3, #2]
 19681              	.L734:
2543:..\src/command_processing.c **** 	}
2544:..\src/command_processing.c **** }
 19682              		.loc 1 2544 0
 19683 1214 00BF     		nop
 19684 1216 9C37     		adds	r7, r7, #156
 19685              		.cfi_def_cfa_offset 36
 19686 1218 BD46     		mov	sp, r7
 19687              		.cfi_def_cfa_register 13
 19688              		@ sp needed
 19689 121a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 19690              	.L746:
 19691 121e 00BF     		.align	2
 19692              	.L745:
 19693 1220 30100000 		.word	.LC154
 19694 1224 98170000 		.word	.LC230
 19695 1228 00000000 		.word	IMU_connected
 19696 122c 28100000 		.word	.LC153
 19697 1230 A8170000 		.word	.LC231
 19698 1234 00000000 		.word	N_IMU_Connected
 19699 1238 AC0E0000 		.word	.LC132
 19700              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 431


 19701              	.LFE74:
 19702              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 19703              		.section	.rodata
 19704 1b26 0000     		.align	2
 19705              	.LC265:
 19706 1b28 486F7572 		.ascii	"Hour,Min,Sec,\000"
 19706      2C4D696E 
 19706      2C536563 
 19706      2C00
 19707 1b36 0000     		.align	2
 19708              	.LC266:
 19709 1b38 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 19709      25645F50 
 19709      6F732C00 
 19710              		.align	2
 19711              	.LC267:
 19712 1b44 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 19712      25645F43 
 19712      7572722C 
 19712      00
 19713 1b51 000000   		.align	2
 19714              	.LC268:
 19715 1b54 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 19715      315F6163 
 19715      742C454D 
 19715      475F325F 
 19715      6163742C 
 19716 1b87 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 19716      5F74696D 
 19716      652C546F 
 19716      74616C5F 
 19716      72657374 
 19717              		.section	.text.prepare_SD_legend,"ax",%progbits
 19718              		.align	2
 19719              		.global	prepare_SD_legend
 19720              		.thumb
 19721              		.thumb_func
 19722              		.type	prepare_SD_legend, %function
 19723              	prepare_SD_legend:
 19724              	.LFB75:
2545:..\src/command_processing.c **** 
2546:..\src/command_processing.c **** 
2547:..\src/command_processing.c **** //==============================================================================
2548:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2549:..\src/command_processing.c **** //==============================================================================
2550:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2551:..\src/command_processing.c **** {
 19725              		.loc 1 2551 0
 19726              		.cfi_startproc
 19727              		@ args = 0, pretend = 0, frame = 112
 19728              		@ frame_needed = 1, uses_anonymous_args = 0
 19729 0000 90B5     		push	{r4, r7, lr}
 19730              		.cfi_def_cfa_offset 12
 19731              		.cfi_offset 4, -12
 19732              		.cfi_offset 7, -8
 19733              		.cfi_offset 14, -4
 19734 0002 9DB0     		sub	sp, sp, #116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 432


 19735              		.cfi_def_cfa_offset 128
 19736 0004 00AF     		add	r7, sp, #0
 19737              		.cfi_def_cfa_register 7
 19738 0006 7860     		str	r0, [r7, #4]
2552:..\src/command_processing.c ****     char str[100];  
2553:..\src/command_processing.c ****     int i;
2554:..\src/command_processing.c ****         
2555:..\src/command_processing.c ****     // Legend
2556:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 19739              		.loc 1 2556 0
 19740 0008 7B68     		ldr	r3, [r7, #4]
 19741 000a 2A4A     		ldr	r2, .L752
 19742 000c 1C46     		mov	r4, r3
 19743 000e 1346     		mov	r3, r2
 19744 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 19745 0012 2060     		str	r0, [r4]	@ unaligned
 19746 0014 6160     		str	r1, [r4, #4]	@ unaligned
 19747 0016 A260     		str	r2, [r4, #8]	@ unaligned
 19748 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 19749 001a A381     		strh	r3, [r4, #12]	@ unaligned
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19750              		.loc 1 2557 0
 19751 001c 0123     		movs	r3, #1
 19752 001e FB66     		str	r3, [r7, #108]
 19753 0020 0FE0     		b	.L748
 19754              	.L749:
2558:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 19755              		.loc 1 2558 0 discriminator 3
 19756 0022 07F10803 		add	r3, r7, #8
 19757 0026 FA6E     		ldr	r2, [r7, #108]
 19758 0028 2349     		ldr	r1, .L752+4
 19759 002a 1846     		mov	r0, r3
 19760 002c FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 19761              		.loc 1 2559 0 discriminator 3
 19762 0030 07F10803 		add	r3, r7, #8
 19763 0034 1946     		mov	r1, r3
 19764 0036 7868     		ldr	r0, [r7, #4]
 19765 0038 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19766              		.loc 1 2557 0 discriminator 3
 19767 003c FB6E     		ldr	r3, [r7, #108]
 19768 003e 0133     		adds	r3, r3, #1
 19769 0040 FB66     		str	r3, [r7, #108]
 19770              	.L748:
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 19771              		.loc 1 2557 0 is_stmt 0 discriminator 1
 19772 0042 FB6E     		ldr	r3, [r7, #108]
 19773 0044 0A2B     		cmp	r3, #10
 19774 0046 ECDD     		ble	.L749
2560:..\src/command_processing.c ****     }
2561:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 19775              		.loc 1 2561 0 is_stmt 1
 19776 0048 0123     		movs	r3, #1
 19777 004a FB66     		str	r3, [r7, #108]
 19778 004c 0FE0     		b	.L750
 19779              	.L751:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 433


2562:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19780              		.loc 1 2562 0 discriminator 3
 19781 004e 07F10803 		add	r3, r7, #8
 19782 0052 FA6E     		ldr	r2, [r7, #108]
 19783 0054 1949     		ldr	r1, .L752+8
 19784 0056 1846     		mov	r0, r3
 19785 0058 FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c ****         strcat(info_string, str);
 19786              		.loc 1 2563 0 discriminator 3
 19787 005c 07F10803 		add	r3, r7, #8
 19788 0060 1946     		mov	r1, r3
 19789 0062 7868     		ldr	r0, [r7, #4]
 19790 0064 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19791              		.loc 1 2561 0 discriminator 3
 19792 0068 FB6E     		ldr	r3, [r7, #108]
 19793 006a 0133     		adds	r3, r3, #1
 19794 006c FB66     		str	r3, [r7, #108]
 19795              	.L750:
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 19796              		.loc 1 2561 0 is_stmt 0 discriminator 1
 19797 006e FB6E     		ldr	r3, [r7, #108]
 19798 0070 042B     		cmp	r3, #4
 19799 0072 ECDD     		ble	.L751
2564:..\src/command_processing.c ****     }
2565:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 19800              		.loc 1 2565 0 is_stmt 1
 19801 0074 07F10803 		add	r3, r7, #8
 19802 0078 114A     		ldr	r2, .L752+12
 19803 007a 1846     		mov	r0, r3
 19804 007c 1146     		mov	r1, r2
 19805 007e 4D23     		movs	r3, #77
 19806 0080 1A46     		mov	r2, r3
 19807 0082 FFF7FEFF 		bl	memcpy
2566:..\src/command_processing.c ****     strcat(info_string, str);
 19808              		.loc 1 2566 0
 19809 0086 07F10803 		add	r3, r7, #8
 19810 008a 1946     		mov	r1, r3
 19811 008c 7868     		ldr	r0, [r7, #4]
 19812 008e FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19813              		.loc 1 2567 0
 19814 0092 7868     		ldr	r0, [r7, #4]
 19815 0094 FFF7FEFF 		bl	strlen
 19816 0098 0346     		mov	r3, r0
 19817 009a 1A46     		mov	r2, r3
 19818 009c 7B68     		ldr	r3, [r7, #4]
 19819 009e 1344     		add	r3, r3, r2
 19820 00a0 084A     		ldr	r2, .L752+16
 19821 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 19822 00a4 9278     		ldrb	r2, [r2, #2]
 19823 00a6 1980     		strh	r1, [r3]	@ unaligned
 19824 00a8 9A70     		strb	r2, [r3, #2]
2568:..\src/command_processing.c **** }
 19825              		.loc 1 2568 0
 19826 00aa 00BF     		nop
 19827 00ac 7437     		adds	r7, r7, #116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 434


 19828              		.cfi_def_cfa_offset 12
 19829 00ae BD46     		mov	sp, r7
 19830              		.cfi_def_cfa_register 13
 19831              		@ sp needed
 19832 00b0 90BD     		pop	{r4, r7, pc}
 19833              	.L753:
 19834 00b2 00BF     		.align	2
 19835              	.L752:
 19836 00b4 281B0000 		.word	.LC265
 19837 00b8 381B0000 		.word	.LC266
 19838 00bc 441B0000 		.word	.LC267
 19839 00c0 541B0000 		.word	.LC268
 19840 00c4 AC0E0000 		.word	.LC132
 19841              		.cfi_endproc
 19842              	.LFE75:
 19843              		.size	prepare_SD_legend, .-prepare_SD_legend
 19844              		.section	.rodata
 19845 1ba1 000000   		.align	2
 19846              	.LC269:
 19847 1ba4 25303264 		.ascii	"%02d,%02d,%02d,\000"
 19847      2C253032 
 19847      642C2530 
 19847      32642C00 
 19848              		.align	2
 19849              	.LC270:
 19850 1bb4 256C752C 		.ascii	"%lu,\000"
 19850      00
 19851 1bb9 000000   		.align	2
 19852              	.LC271:
 19853 1bbc 256C752C 		.ascii	"%lu,%lu,\000"
 19853      256C752C 
 19853      00
 19854 1bc5 000000   		.align	2
 19855              	.LC272:
 19856 1bc8 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 19856      256C752C 
 19856      256C752C 
 19856      256C7500 
 19857              		.section	.text.prepare_SD_info,"ax",%progbits
 19858              		.align	2
 19859              		.global	prepare_SD_info
 19860              		.thumb
 19861              		.thumb_func
 19862              		.type	prepare_SD_info, %function
 19863              	prepare_SD_info:
 19864              	.LFB76:
2569:..\src/command_processing.c **** 
2570:..\src/command_processing.c **** //==============================================================================
2571:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2572:..\src/command_processing.c **** //==============================================================================
2573:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2574:..\src/command_processing.c **** {
 19865              		.loc 1 2574 0
 19866              		.cfi_startproc
 19867              		@ args = 0, pretend = 0, frame = 112
 19868              		@ frame_needed = 1, uses_anonymous_args = 0
 19869 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 435


 19870              		.cfi_def_cfa_offset 12
 19871              		.cfi_offset 4, -12
 19872              		.cfi_offset 7, -8
 19873              		.cfi_offset 14, -4
 19874 0002 9FB0     		sub	sp, sp, #124
 19875              		.cfi_def_cfa_offset 136
 19876 0004 02AF     		add	r7, sp, #8
 19877              		.cfi_def_cfa 7, 128
 19878 0006 7860     		str	r0, [r7, #4]
2575:..\src/command_processing.c ****     char str[100];  
2576:..\src/command_processing.c ****     int i;
2577:..\src/command_processing.c ****             
2578:..\src/command_processing.c ****     strcpy(info_string, "");
 19879              		.loc 1 2578 0
 19880 0008 7B68     		ldr	r3, [r7, #4]
 19881 000a 0022     		movs	r2, #0
 19882 000c 1A70     		strb	r2, [r3]
2579:..\src/command_processing.c ****     
2580:..\src/command_processing.c ****     // Time
2581:..\src/command_processing.c ****     strcat(info_string, "");
2582:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 19883              		.loc 1 2582 0
 19884 000e 424B     		ldr	r3, .L759
 19885 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 19886 0014 1A46     		mov	r2, r3
 19887 0016 404B     		ldr	r3, .L759
 19888 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 19889 001c 1946     		mov	r1, r3
 19890 001e 3E4B     		ldr	r3, .L759
 19891 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 19892 0024 07F10800 		add	r0, r7, #8
 19893 0028 0093     		str	r3, [sp]
 19894 002a 0B46     		mov	r3, r1
 19895 002c 3B49     		ldr	r1, .L759+4
 19896 002e FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****     strcat(info_string, str);
 19897              		.loc 1 2583 0
 19898 0032 07F10803 		add	r3, r7, #8
 19899 0036 1946     		mov	r1, r3
 19900 0038 7868     		ldr	r0, [r7, #4]
 19901 003a FFF7FEFF 		bl	strcat
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****     // Pos_Bin
2586:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 19902              		.loc 1 2586 0
 19903 003e 0123     		movs	r3, #1
 19904 0040 FB66     		str	r3, [r7, #108]
 19905 0042 14E0     		b	.L755
 19906              	.L756:
2587:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19907              		.loc 1 2587 0 discriminator 3
 19908 0044 FB6E     		ldr	r3, [r7, #108]
 19909 0046 013B     		subs	r3, r3, #1
 19910 0048 334A     		ldr	r2, .L759
 19911 004a 0633     		adds	r3, r3, #6
 19912 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19913 0050 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 436


 19914 0054 3249     		ldr	r1, .L759+8
 19915 0056 1846     		mov	r0, r3
 19916 0058 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****         strcat(info_string, str);
 19917              		.loc 1 2588 0 discriminator 3
 19918 005c 07F10803 		add	r3, r7, #8
 19919 0060 1946     		mov	r1, r3
 19920 0062 7868     		ldr	r0, [r7, #4]
 19921 0064 FFF7FEFF 		bl	strcat
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19922              		.loc 1 2586 0 discriminator 3
 19923 0068 FB6E     		ldr	r3, [r7, #108]
 19924 006a 0133     		adds	r3, r3, #1
 19925 006c FB66     		str	r3, [r7, #108]
 19926              	.L755:
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 19927              		.loc 1 2586 0 is_stmt 0 discriminator 1
 19928 006e FB6E     		ldr	r3, [r7, #108]
 19929 0070 0A2B     		cmp	r3, #10
 19930 0072 E7DD     		ble	.L756
2589:..\src/command_processing.c ****     }
2590:..\src/command_processing.c ****     
2591:..\src/command_processing.c ****     // Curr_Bin
2592:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 19931              		.loc 1 2592 0 is_stmt 1
 19932 0074 0123     		movs	r3, #1
 19933 0076 FB66     		str	r3, [r7, #108]
 19934 0078 14E0     		b	.L757
 19935              	.L758:
2593:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19936              		.loc 1 2593 0 discriminator 3
 19937 007a FB6E     		ldr	r3, [r7, #108]
 19938 007c 013B     		subs	r3, r3, #1
 19939 007e 264A     		ldr	r2, .L759
 19940 0080 1033     		adds	r3, r3, #16
 19941 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 19942 0086 07F10803 		add	r3, r7, #8
 19943 008a 2549     		ldr	r1, .L759+8
 19944 008c 1846     		mov	r0, r3
 19945 008e FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c ****         strcat(info_string, str);
 19946              		.loc 1 2594 0 discriminator 3
 19947 0092 07F10803 		add	r3, r7, #8
 19948 0096 1946     		mov	r1, r3
 19949 0098 7868     		ldr	r0, [r7, #4]
 19950 009a FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19951              		.loc 1 2592 0 discriminator 3
 19952 009e FB6E     		ldr	r3, [r7, #108]
 19953 00a0 0133     		adds	r3, r3, #1
 19954 00a2 FB66     		str	r3, [r7, #108]
 19955              	.L757:
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 19956              		.loc 1 2592 0 is_stmt 0 discriminator 1
 19957 00a4 FB6E     		ldr	r3, [r7, #108]
 19958 00a6 042B     		cmp	r3, #4
 19959 00a8 E7DD     		ble	.L758
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 437


2595:..\src/command_processing.c ****     }
2596:..\src/command_processing.c ****        
2597:..\src/command_processing.c ****     // EMG_1, EMG_2
2598:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 19960              		.loc 1 2598 0 is_stmt 1
 19961 00aa 1B4B     		ldr	r3, .L759
 19962 00ac 1A69     		ldr	r2, [r3, #16]
 19963 00ae 1A4B     		ldr	r3, .L759
 19964 00b0 5B69     		ldr	r3, [r3, #20]
 19965 00b2 07F10800 		add	r0, r7, #8
 19966 00b6 1B49     		ldr	r1, .L759+12
 19967 00b8 FFF7FEFF 		bl	sprintf
2599:..\src/command_processing.c ****     strcat(info_string, str);
 19968              		.loc 1 2599 0
 19969 00bc 07F10803 		add	r3, r7, #8
 19970 00c0 1946     		mov	r1, r3
 19971 00c2 7868     		ldr	r0, [r7, #4]
 19972 00c4 FFF7FEFF 		bl	strcat
2600:..\src/command_processing.c ****     
2601:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2602:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 19973              		.loc 1 2602 0
 19974 00c8 134B     		ldr	r3, .L759
 19975 00ca 196D     		ldr	r1, [r3, #80]
 19976 00cc 124B     		ldr	r3, .L759
 19977 00ce 5C6D     		ldr	r4, [r3, #84]
 19978 00d0 114B     		ldr	r3, .L759
 19979 00d2 9B6D     		ldr	r3, [r3, #88]
 19980 00d4 104A     		ldr	r2, .L759
 19981 00d6 D26D     		ldr	r2, [r2, #92]
 19982 00d8 07F10800 		add	r0, r7, #8
 19983 00dc 0192     		str	r2, [sp, #4]
 19984 00de 0093     		str	r3, [sp]
 19985 00e0 2346     		mov	r3, r4
 19986 00e2 0A46     		mov	r2, r1
 19987 00e4 1049     		ldr	r1, .L759+16
 19988 00e6 FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****     strcat(info_string, str);
 19989              		.loc 1 2603 0
 19990 00ea 07F10803 		add	r3, r7, #8
 19991 00ee 1946     		mov	r1, r3
 19992 00f0 7868     		ldr	r0, [r7, #4]
 19993 00f2 FFF7FEFF 		bl	strcat
2604:..\src/command_processing.c ****     
2605:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 19994              		.loc 1 2605 0
 19995 00f6 7868     		ldr	r0, [r7, #4]
 19996 00f8 FFF7FEFF 		bl	strlen
 19997 00fc 0346     		mov	r3, r0
 19998 00fe 1A46     		mov	r2, r3
 19999 0100 7B68     		ldr	r3, [r7, #4]
 20000 0102 1344     		add	r3, r3, r2
 20001 0104 094A     		ldr	r2, .L759+20
 20002 0106 1188     		ldrh	r1, [r2]	@ unaligned
 20003 0108 9278     		ldrb	r2, [r2, #2]
 20004 010a 1980     		strh	r1, [r3]	@ unaligned
 20005 010c 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 438


2606:..\src/command_processing.c **** }
 20006              		.loc 1 2606 0
 20007 010e 00BF     		nop
 20008 0110 7437     		adds	r7, r7, #116
 20009              		.cfi_def_cfa_offset 12
 20010 0112 BD46     		mov	sp, r7
 20011              		.cfi_def_cfa_register 13
 20012              		@ sp needed
 20013 0114 90BD     		pop	{r4, r7, pc}
 20014              	.L760:
 20015 0116 00BF     		.align	2
 20016              	.L759:
 20017 0118 00000000 		.word	g_mem
 20018 011c A41B0000 		.word	.LC269
 20019 0120 B41B0000 		.word	.LC270
 20020 0124 BC1B0000 		.word	.LC271
 20021 0128 C81B0000 		.word	.LC272
 20022 012c AC0E0000 		.word	.LC132
 20023              		.cfi_endproc
 20024              	.LFE76:
 20025              		.size	prepare_SD_info, .-prepare_SD_info
 20026              		.section	.rodata
 20027              		.align	2
 20028              	.LC273:
 20029 1bd8 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 20029      4F525320 
 20029      494E464F 
 20029      0D0A00
 20030 1be7 00       		.align	2
 20031              	.LC274:
 20032 1be8 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 20032      3A202564 
 20032      09256409 
 20032      25640D0A 
 20032      00
 20033 1bf9 000000   		.align	2
 20034              	.LC275:
 20035 1bfc 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 20035      6F3A2025 
 20035      64092564 
 20035      0925640D 
 20035      0A00
 20036 1c0e 0000     		.align	2
 20037              	.LC276:
 20038 1c10 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 20038      3A202564 
 20038      09256409 
 20038      25640D0A 
 20038      00
 20039 1c21 000000   		.align	2
 20040              	.LC277:
 20041 1c24 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 20041      743A2025 
 20041      2E336609 
 20041      252E3366 
 20041      09252E33 
 20042 1c41 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 439


 20043              	.LC278:
 20044 1c44 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 20044      70657261 
 20044      74757265 
 20044      3A202564 
 20044      0D0A00
 20045              		.section	.text.IMU_reading_info,"ax",%progbits
 20046              		.align	2
 20047              		.global	IMU_reading_info
 20048              		.thumb
 20049              		.thumb_func
 20050              		.type	IMU_reading_info, %function
 20051              	IMU_reading_info:
 20052              	.LFB77:
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** //==============================================================================
2609:..\src/command_processing.c **** //                                                              IMU READING INFO
2610:..\src/command_processing.c **** //==============================================================================
2611:..\src/command_processing.c **** 
2612:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2613:..\src/command_processing.c **** {
 20053              		.loc 1 2613 0
 20054              		.cfi_startproc
 20055              		@ args = 0, pretend = 0, frame = 312
 20056              		@ frame_needed = 1, uses_anonymous_args = 0
 20057 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 20058              		.cfi_def_cfa_offset 32
 20059              		.cfi_offset 4, -32
 20060              		.cfi_offset 5, -28
 20061              		.cfi_offset 7, -24
 20062              		.cfi_offset 8, -20
 20063              		.cfi_offset 9, -16
 20064              		.cfi_offset 10, -12
 20065              		.cfi_offset 11, -8
 20066              		.cfi_offset 14, -4
 20067 0004 D4B0     		sub	sp, sp, #336
 20068              		.cfi_def_cfa_offset 368
 20069 0006 06AF     		add	r7, sp, #24
 20070              		.cfi_def_cfa 7, 344
 20071 0008 3B1D     		adds	r3, r7, #4
 20072 000a 1860     		str	r0, [r3]
2614:..\src/command_processing.c ****     char str[300];  
2615:..\src/command_processing.c ****     int i;
2616:..\src/command_processing.c ****                  
2617:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 20073              		.loc 1 2617 0
 20074 000c 3B1D     		adds	r3, r7, #4
 20075 000e 1868     		ldr	r0, [r3]
 20076 0010 FFF7FEFF 		bl	strlen
 20077 0014 0346     		mov	r3, r0
 20078 0016 1A46     		mov	r2, r3
 20079 0018 3B1D     		adds	r3, r7, #4
 20080 001a 1B68     		ldr	r3, [r3]
 20081 001c 1344     		add	r3, r3, r2
 20082 001e C94A     		ldr	r2, .L769
 20083 0020 1C46     		mov	r4, r3
 20084 0022 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 440


 20085 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 20086 0026 2060     		str	r0, [r4]	@ unaligned
 20087 0028 6160     		str	r1, [r4, #4]	@ unaligned
 20088 002a A260     		str	r2, [r4, #8]	@ unaligned
 20089 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 20090 002e 9B78     		ldrb	r3, [r3, #2]
 20091 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 20092 0032 A373     		strb	r3, [r4, #14]
2618:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 20093              		.loc 1 2618 0
 20094 0034 0023     		movs	r3, #0
 20095 0036 C7F83431 		str	r3, [r7, #308]
 20096 003a 66E1     		b	.L762
 20097              	.L768:
2619:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20098              		.loc 1 2619 0
 20099 003c C24A     		ldr	r2, .L769+4
 20100 003e D7F83431 		ldr	r3, [r7, #308]
 20101 0042 1344     		add	r3, r3, r2
 20102 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20103 0046 07F10800 		add	r0, r7, #8
 20104 004a D7F83421 		ldr	r2, [r7, #308]
 20105 004e BF49     		ldr	r1, .L769+8
 20106 0050 FFF7FEFF 		bl	sprintf
2620:..\src/command_processing.c ****         strcat(info_string, str);
 20107              		.loc 1 2620 0
 20108 0054 07F10802 		add	r2, r7, #8
 20109 0058 3B1D     		adds	r3, r7, #4
 20110 005a 1146     		mov	r1, r2
 20111 005c 1868     		ldr	r0, [r3]
 20112 005e FFF7FEFF 		bl	strcat
2621:..\src/command_processing.c ****         
2622:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 20113              		.loc 1 2622 0
 20114 0062 B94A     		ldr	r2, .L769+4
 20115 0064 D7F83431 		ldr	r3, [r7, #308]
 20116 0068 1344     		add	r3, r3, r2
 20117 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20118 006c 1946     		mov	r1, r3
 20119 006e B84A     		ldr	r2, .L769+12
 20120 0070 0B46     		mov	r3, r1
 20121 0072 9B00     		lsls	r3, r3, #2
 20122 0074 0B44     		add	r3, r3, r1
 20123 0076 1344     		add	r3, r3, r2
 20124 0078 03F20223 		addw	r3, r3, #514
 20125 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20126 007e 002B     		cmp	r3, #0
 20127 0080 31D0     		beq	.L763
2623:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 20128              		.loc 1 2623 0
 20129 0082 B449     		ldr	r1, .L769+16
 20130 0084 D7F83421 		ldr	r2, [r7, #308]
 20131 0088 1346     		mov	r3, r2
 20132 008a 9B00     		lsls	r3, r3, #2
 20133 008c 1344     		add	r3, r3, r2
 20134 008e DB00     		lsls	r3, r3, #3
 20135 0090 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 441


 20136 0092 0233     		adds	r3, r3, #2
 20137 0094 B3F90030 		ldrsh	r3, [r3]
 20138 0098 1C46     		mov	r4, r3
 20139 009a AE49     		ldr	r1, .L769+16
 20140 009c D7F83421 		ldr	r2, [r7, #308]
 20141 00a0 1346     		mov	r3, r2
 20142 00a2 9B00     		lsls	r3, r3, #2
 20143 00a4 1344     		add	r3, r3, r2
 20144 00a6 DB00     		lsls	r3, r3, #3
 20145 00a8 0B44     		add	r3, r3, r1
 20146 00aa 0433     		adds	r3, r3, #4
 20147 00ac B3F90030 		ldrsh	r3, [r3]
 20148 00b0 1D46     		mov	r5, r3
 20149 00b2 A849     		ldr	r1, .L769+16
 20150 00b4 D7F83421 		ldr	r2, [r7, #308]
 20151 00b8 1346     		mov	r3, r2
 20152 00ba 9B00     		lsls	r3, r3, #2
 20153 00bc 1344     		add	r3, r3, r2
 20154 00be DB00     		lsls	r3, r3, #3
 20155 00c0 0B44     		add	r3, r3, r1
 20156 00c2 0633     		adds	r3, r3, #6
 20157 00c4 B3F90030 		ldrsh	r3, [r3]
 20158 00c8 07F10800 		add	r0, r7, #8
 20159 00cc 0093     		str	r3, [sp]
 20160 00ce 2B46     		mov	r3, r5
 20161 00d0 2246     		mov	r2, r4
 20162 00d2 A149     		ldr	r1, .L769+20
 20163 00d4 FFF7FEFF 		bl	sprintf
2624:..\src/command_processing.c ****             strcat(info_string, str);
 20164              		.loc 1 2624 0
 20165 00d8 07F10802 		add	r2, r7, #8
 20166 00dc 3B1D     		adds	r3, r7, #4
 20167 00de 1146     		mov	r1, r2
 20168 00e0 1868     		ldr	r0, [r3]
 20169 00e2 FFF7FEFF 		bl	strcat
 20170              	.L763:
2625:..\src/command_processing.c ****         }
2626:..\src/command_processing.c **** 
2627:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 20171              		.loc 1 2627 0
 20172 00e6 984A     		ldr	r2, .L769+4
 20173 00e8 D7F83431 		ldr	r3, [r7, #308]
 20174 00ec 1344     		add	r3, r3, r2
 20175 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20176 00f0 1946     		mov	r1, r3
 20177 00f2 974A     		ldr	r2, .L769+12
 20178 00f4 0B46     		mov	r3, r1
 20179 00f6 9B00     		lsls	r3, r3, #2
 20180 00f8 0B44     		add	r3, r3, r1
 20181 00fa 1344     		add	r3, r3, r2
 20182 00fc 03F20323 		addw	r3, r3, #515
 20183 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20184 0102 002B     		cmp	r3, #0
 20185 0104 31D0     		beq	.L764
2628:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 20186              		.loc 1 2628 0
 20187 0106 9349     		ldr	r1, .L769+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 442


 20188 0108 D7F83421 		ldr	r2, [r7, #308]
 20189 010c 1346     		mov	r3, r2
 20190 010e 9B00     		lsls	r3, r3, #2
 20191 0110 1344     		add	r3, r3, r2
 20192 0112 DB00     		lsls	r3, r3, #3
 20193 0114 0B44     		add	r3, r3, r1
 20194 0116 0833     		adds	r3, r3, #8
 20195 0118 B3F90030 		ldrsh	r3, [r3]
 20196 011c 1C46     		mov	r4, r3
 20197 011e 8D49     		ldr	r1, .L769+16
 20198 0120 D7F83421 		ldr	r2, [r7, #308]
 20199 0124 1346     		mov	r3, r2
 20200 0126 9B00     		lsls	r3, r3, #2
 20201 0128 1344     		add	r3, r3, r2
 20202 012a DB00     		lsls	r3, r3, #3
 20203 012c 0B44     		add	r3, r3, r1
 20204 012e 0A33     		adds	r3, r3, #10
 20205 0130 B3F90030 		ldrsh	r3, [r3]
 20206 0134 1D46     		mov	r5, r3
 20207 0136 8749     		ldr	r1, .L769+16
 20208 0138 D7F83421 		ldr	r2, [r7, #308]
 20209 013c 1346     		mov	r3, r2
 20210 013e 9B00     		lsls	r3, r3, #2
 20211 0140 1344     		add	r3, r3, r2
 20212 0142 DB00     		lsls	r3, r3, #3
 20213 0144 0B44     		add	r3, r3, r1
 20214 0146 0C33     		adds	r3, r3, #12
 20215 0148 B3F90030 		ldrsh	r3, [r3]
 20216 014c 07F10800 		add	r0, r7, #8
 20217 0150 0093     		str	r3, [sp]
 20218 0152 2B46     		mov	r3, r5
 20219 0154 2246     		mov	r2, r4
 20220 0156 8149     		ldr	r1, .L769+24
 20221 0158 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c ****             strcat(info_string, str);
 20222              		.loc 1 2629 0
 20223 015c 07F10802 		add	r2, r7, #8
 20224 0160 3B1D     		adds	r3, r7, #4
 20225 0162 1146     		mov	r1, r2
 20226 0164 1868     		ldr	r0, [r3]
 20227 0166 FFF7FEFF 		bl	strcat
 20228              	.L764:
2630:..\src/command_processing.c ****         }
2631:..\src/command_processing.c **** 
2632:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 20229              		.loc 1 2632 0
 20230 016a 774A     		ldr	r2, .L769+4
 20231 016c D7F83431 		ldr	r3, [r7, #308]
 20232 0170 1344     		add	r3, r3, r2
 20233 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20234 0174 1946     		mov	r1, r3
 20235 0176 764A     		ldr	r2, .L769+12
 20236 0178 0B46     		mov	r3, r1
 20237 017a 9B00     		lsls	r3, r3, #2
 20238 017c 0B44     		add	r3, r3, r1
 20239 017e 1344     		add	r3, r3, r2
 20240 0180 03F50173 		add	r3, r3, #516
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 443


 20241 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20242 0186 002B     		cmp	r3, #0
 20243 0188 31D0     		beq	.L765
2633:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 20244              		.loc 1 2633 0
 20245 018a 7249     		ldr	r1, .L769+16
 20246 018c D7F83421 		ldr	r2, [r7, #308]
 20247 0190 1346     		mov	r3, r2
 20248 0192 9B00     		lsls	r3, r3, #2
 20249 0194 1344     		add	r3, r3, r2
 20250 0196 DB00     		lsls	r3, r3, #3
 20251 0198 0B44     		add	r3, r3, r1
 20252 019a 0E33     		adds	r3, r3, #14
 20253 019c B3F90030 		ldrsh	r3, [r3]
 20254 01a0 1C46     		mov	r4, r3
 20255 01a2 6C49     		ldr	r1, .L769+16
 20256 01a4 D7F83421 		ldr	r2, [r7, #308]
 20257 01a8 1346     		mov	r3, r2
 20258 01aa 9B00     		lsls	r3, r3, #2
 20259 01ac 1344     		add	r3, r3, r2
 20260 01ae DB00     		lsls	r3, r3, #3
 20261 01b0 0B44     		add	r3, r3, r1
 20262 01b2 1033     		adds	r3, r3, #16
 20263 01b4 B3F90030 		ldrsh	r3, [r3]
 20264 01b8 1D46     		mov	r5, r3
 20265 01ba 6649     		ldr	r1, .L769+16
 20266 01bc D7F83421 		ldr	r2, [r7, #308]
 20267 01c0 1346     		mov	r3, r2
 20268 01c2 9B00     		lsls	r3, r3, #2
 20269 01c4 1344     		add	r3, r3, r2
 20270 01c6 DB00     		lsls	r3, r3, #3
 20271 01c8 0B44     		add	r3, r3, r1
 20272 01ca 1233     		adds	r3, r3, #18
 20273 01cc B3F90030 		ldrsh	r3, [r3]
 20274 01d0 07F10800 		add	r0, r7, #8
 20275 01d4 0093     		str	r3, [sp]
 20276 01d6 2B46     		mov	r3, r5
 20277 01d8 2246     		mov	r2, r4
 20278 01da 6149     		ldr	r1, .L769+28
 20279 01dc FFF7FEFF 		bl	sprintf
2634:..\src/command_processing.c ****             strcat(info_string, str);
 20280              		.loc 1 2634 0
 20281 01e0 07F10802 		add	r2, r7, #8
 20282 01e4 3B1D     		adds	r3, r7, #4
 20283 01e6 1146     		mov	r1, r2
 20284 01e8 1868     		ldr	r0, [r3]
 20285 01ea FFF7FEFF 		bl	strcat
 20286              	.L765:
2635:..\src/command_processing.c ****         }
2636:..\src/command_processing.c ****         
2637:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 20287              		.loc 1 2637 0
 20288 01ee 564A     		ldr	r2, .L769+4
 20289 01f0 D7F83431 		ldr	r3, [r7, #308]
 20290 01f4 1344     		add	r3, r3, r2
 20291 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20292 01f8 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 444


 20293 01fa 554A     		ldr	r2, .L769+12
 20294 01fc 0B46     		mov	r3, r1
 20295 01fe 9B00     		lsls	r3, r3, #2
 20296 0200 0B44     		add	r3, r3, r1
 20297 0202 1344     		add	r3, r3, r2
 20298 0204 03F20523 		addw	r3, r3, #517
 20299 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20300 020a 002B     		cmp	r3, #0
 20301 020c 4FD0     		beq	.L766
2638:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 20302              		.loc 1 2638 0
 20303 020e 5149     		ldr	r1, .L769+16
 20304 0210 D7F83421 		ldr	r2, [r7, #308]
 20305 0214 1346     		mov	r3, r2
 20306 0216 9B00     		lsls	r3, r3, #2
 20307 0218 1344     		add	r3, r3, r2
 20308 021a DB00     		lsls	r3, r3, #3
 20309 021c 0B44     		add	r3, r3, r1
 20310 021e 1433     		adds	r3, r3, #20
 20311 0220 1B68     		ldr	r3, [r3]	@ float
 20312 0222 1846     		mov	r0, r3
 20313 0224 FFF7FEFF 		bl	__aeabi_f2d
 20314 0228 8246     		mov	r10, r0
 20315 022a 8B46     		mov	fp, r1
 20316 022c 4949     		ldr	r1, .L769+16
 20317 022e D7F83421 		ldr	r2, [r7, #308]
 20318 0232 1346     		mov	r3, r2
 20319 0234 9B00     		lsls	r3, r3, #2
 20320 0236 1344     		add	r3, r3, r2
 20321 0238 DB00     		lsls	r3, r3, #3
 20322 023a 0B44     		add	r3, r3, r1
 20323 023c 1833     		adds	r3, r3, #24
 20324 023e 1B68     		ldr	r3, [r3]	@ float
 20325 0240 1846     		mov	r0, r3
 20326 0242 FFF7FEFF 		bl	__aeabi_f2d
 20327 0246 0446     		mov	r4, r0
 20328 0248 0D46     		mov	r5, r1
 20329 024a 4249     		ldr	r1, .L769+16
 20330 024c D7F83421 		ldr	r2, [r7, #308]
 20331 0250 1346     		mov	r3, r2
 20332 0252 9B00     		lsls	r3, r3, #2
 20333 0254 1344     		add	r3, r3, r2
 20334 0256 DB00     		lsls	r3, r3, #3
 20335 0258 0B44     		add	r3, r3, r1
 20336 025a 1C33     		adds	r3, r3, #28
 20337 025c 1B68     		ldr	r3, [r3]	@ float
 20338 025e 1846     		mov	r0, r3
 20339 0260 FFF7FEFF 		bl	__aeabi_f2d
 20340 0264 8046     		mov	r8, r0
 20341 0266 8946     		mov	r9, r1
 20342 0268 3A49     		ldr	r1, .L769+16
 20343 026a D7F83421 		ldr	r2, [r7, #308]
 20344 026e 1346     		mov	r3, r2
 20345 0270 9B00     		lsls	r3, r3, #2
 20346 0272 1344     		add	r3, r3, r2
 20347 0274 DB00     		lsls	r3, r3, #3
 20348 0276 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 445


 20349 0278 2033     		adds	r3, r3, #32
 20350 027a 1B68     		ldr	r3, [r3]	@ float
 20351 027c 1846     		mov	r0, r3
 20352 027e FFF7FEFF 		bl	__aeabi_f2d
 20353 0282 0246     		mov	r2, r0
 20354 0284 0B46     		mov	r3, r1
 20355 0286 07F10800 		add	r0, r7, #8
 20356 028a CDE90423 		strd	r2, [sp, #16]
 20357 028e CDE90289 		strd	r8, [sp, #8]
 20358 0292 CDE90045 		strd	r4, [sp]
 20359 0296 5246     		mov	r2, r10
 20360 0298 5B46     		mov	r3, fp
 20361 029a 3249     		ldr	r1, .L769+32
 20362 029c FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c ****             strcat(info_string, str);
 20363              		.loc 1 2639 0
 20364 02a0 07F10802 		add	r2, r7, #8
 20365 02a4 3B1D     		adds	r3, r7, #4
 20366 02a6 1146     		mov	r1, r2
 20367 02a8 1868     		ldr	r0, [r3]
 20368 02aa FFF7FEFF 		bl	strcat
 20369              	.L766:
2640:..\src/command_processing.c ****         }
2641:..\src/command_processing.c ****         
2642:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 20370              		.loc 1 2642 0
 20371 02ae 264A     		ldr	r2, .L769+4
 20372 02b0 D7F83431 		ldr	r3, [r7, #308]
 20373 02b4 1344     		add	r3, r3, r2
 20374 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20375 02b8 1946     		mov	r1, r3
 20376 02ba 254A     		ldr	r2, .L769+12
 20377 02bc 0B46     		mov	r3, r1
 20378 02be 9B00     		lsls	r3, r3, #2
 20379 02c0 0B44     		add	r3, r3, r1
 20380 02c2 1344     		add	r3, r3, r2
 20381 02c4 03F20623 		addw	r3, r3, #518
 20382 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20383 02ca 002B     		cmp	r3, #0
 20384 02cc 18D0     		beq	.L767
2643:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 20385              		.loc 1 2643 0
 20386 02ce 2149     		ldr	r1, .L769+16
 20387 02d0 D7F83421 		ldr	r2, [r7, #308]
 20388 02d4 1346     		mov	r3, r2
 20389 02d6 9B00     		lsls	r3, r3, #2
 20390 02d8 1344     		add	r3, r3, r2
 20391 02da DB00     		lsls	r3, r3, #3
 20392 02dc 0B44     		add	r3, r3, r1
 20393 02de 2433     		adds	r3, r3, #36
 20394 02e0 B3F90030 		ldrsh	r3, [r3]
 20395 02e4 1A46     		mov	r2, r3
 20396 02e6 07F10803 		add	r3, r7, #8
 20397 02ea 1F49     		ldr	r1, .L769+36
 20398 02ec 1846     		mov	r0, r3
 20399 02ee FFF7FEFF 		bl	sprintf
2644:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 446


 20400              		.loc 1 2644 0
 20401 02f2 07F10802 		add	r2, r7, #8
 20402 02f6 3B1D     		adds	r3, r7, #4
 20403 02f8 1146     		mov	r1, r2
 20404 02fa 1868     		ldr	r0, [r3]
 20405 02fc FFF7FEFF 		bl	strcat
 20406              	.L767:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20407              		.loc 1 2618 0 discriminator 2
 20408 0300 D7F83431 		ldr	r3, [r7, #308]
 20409 0304 0133     		adds	r3, r3, #1
 20410 0306 C7F83431 		str	r3, [r7, #308]
 20411              	.L762:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20412              		.loc 1 2618 0 is_stmt 0 discriminator 1
 20413 030a 184B     		ldr	r3, .L769+40
 20414 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20415 030e 1A46     		mov	r2, r3
 20416 0310 D7F83431 		ldr	r3, [r7, #308]
 20417 0314 9A42     		cmp	r2, r3
 20418 0316 3FF791AE 		bgt	.L768
2645:..\src/command_processing.c ****         }
2646:..\src/command_processing.c ****         
2647:..\src/command_processing.c ****     }
2648:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20419              		.loc 1 2648 0 is_stmt 1
 20420 031a 3B1D     		adds	r3, r7, #4
 20421 031c 1868     		ldr	r0, [r3]
 20422 031e FFF7FEFF 		bl	strlen
 20423 0322 0346     		mov	r3, r0
 20424 0324 1A46     		mov	r2, r3
 20425 0326 3B1D     		adds	r3, r7, #4
 20426 0328 1B68     		ldr	r3, [r3]
 20427 032a 1344     		add	r3, r3, r2
 20428 032c 104A     		ldr	r2, .L769+44
 20429 032e 1188     		ldrh	r1, [r2]	@ unaligned
 20430 0330 9278     		ldrb	r2, [r2, #2]
 20431 0332 1980     		strh	r1, [r3]	@ unaligned
 20432 0334 9A70     		strb	r2, [r3, #2]
2649:..\src/command_processing.c **** }
 20433              		.loc 1 2649 0
 20434 0336 00BF     		nop
 20435 0338 07F59C77 		add	r7, r7, #312
 20436              		.cfi_def_cfa_offset 32
 20437 033c BD46     		mov	sp, r7
 20438              		.cfi_def_cfa_register 13
 20439              		@ sp needed
 20440 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 20441              	.L770:
 20442 0342 00BF     		.align	2
 20443              	.L769:
 20444 0344 D81B0000 		.word	.LC273
 20445 0348 00000000 		.word	IMU_connected
 20446 034c 4C170000 		.word	.LC226
 20447 0350 00000000 		.word	c_mem
 20448 0354 00000000 		.word	g_imu
 20449 0358 E81B0000 		.word	.LC274
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 447


 20450 035c FC1B0000 		.word	.LC275
 20451 0360 101C0000 		.word	.LC276
 20452 0364 241C0000 		.word	.LC277
 20453 0368 441C0000 		.word	.LC278
 20454 036c 00000000 		.word	N_IMU_Connected
 20455 0370 AC0E0000 		.word	.LC132
 20456              		.cfi_endproc
 20457              	.LFE77:
 20458              		.size	IMU_reading_info, .-IMU_reading_info
 20459              		.section	.text.commWrite_old_id,"ax",%progbits
 20460              		.align	2
 20461              		.global	commWrite_old_id
 20462              		.thumb
 20463              		.thumb_func
 20464              		.type	commWrite_old_id, %function
 20465              	commWrite_old_id:
 20466              	.LFB78:
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c **** //==============================================================================
2652:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2653:..\src/command_processing.c **** //==============================================================================
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2656:..\src/command_processing.c **** {
 20467              		.loc 1 2656 0
 20468              		.cfi_startproc
 20469              		@ args = 0, pretend = 0, frame = 16
 20470              		@ frame_needed = 1, uses_anonymous_args = 0
 20471 0000 80B5     		push	{r7, lr}
 20472              		.cfi_def_cfa_offset 8
 20473              		.cfi_offset 7, -8
 20474              		.cfi_offset 14, -4
 20475 0002 84B0     		sub	sp, sp, #16
 20476              		.cfi_def_cfa_offset 24
 20477 0004 00AF     		add	r7, sp, #0
 20478              		.cfi_def_cfa_register 7
 20479 0006 7860     		str	r0, [r7, #4]
 20480 0008 0B46     		mov	r3, r1
 20481 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20482 000c 1346     		mov	r3, r2
 20483 000e 7B70     		strb	r3, [r7, #1]
2657:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2658:..\src/command_processing.c **** 
2659:..\src/command_processing.c ****     // frame - start
2660:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20484              		.loc 1 2660 0
 20485 0010 3A20     		movs	r0, #58
 20486 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2661:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20487              		.loc 1 2661 0
 20488 0016 3A20     		movs	r0, #58
 20489 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2662:..\src/command_processing.c ****     // frame - ID
2663:..\src/command_processing.c ****     //if(old_id)
2664:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 20490              		.loc 1 2664 0
 20491 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 448


 20492 001e 1846     		mov	r0, r3
 20493 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2665:..\src/command_processing.c ****     //else
2666:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2667:..\src/command_processing.c ****         
2668:..\src/command_processing.c ****     // frame - length
2669:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20494              		.loc 1 2669 0
 20495 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20496 0026 DBB2     		uxtb	r3, r3
 20497 0028 1846     		mov	r0, r3
 20498 002a FFF7FEFF 		bl	UART_RS485_PutChar
2670:..\src/command_processing.c ****     // frame - packet data
2671:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20499              		.loc 1 2671 0
 20500 002e 0023     		movs	r3, #0
 20501 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20502 0032 09E0     		b	.L772
 20503              	.L773:
2672:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20504              		.loc 1 2672 0 discriminator 3
 20505 0034 FB89     		ldrh	r3, [r7, #14]
 20506 0036 7A68     		ldr	r2, [r7, #4]
 20507 0038 1344     		add	r3, r3, r2
 20508 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20509 003c 1846     		mov	r0, r3
 20510 003e FFF7FEFF 		bl	UART_RS485_PutChar
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20511              		.loc 1 2671 0 discriminator 3
 20512 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20513 0044 0133     		adds	r3, r3, #1
 20514 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20515              	.L772:
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20516              		.loc 1 2671 0 is_stmt 0 discriminator 1
 20517 0048 FA89     		ldrh	r2, [r7, #14]
 20518 004a 7B88     		ldrh	r3, [r7, #2]
 20519 004c 9A42     		cmp	r2, r3
 20520 004e F1D3     		bcc	.L773
2673:..\src/command_processing.c ****     }
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c ****     index = 0;
 20521              		.loc 1 2675 0 is_stmt 1
 20522 0050 0023     		movs	r3, #0
 20523 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20524              		.loc 1 2677 0
 20525 0054 00BF     		nop
 20526              	.L775:
 20527              		.loc 1 2677 0 is_stmt 0 discriminator 2
 20528 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20529 005a 0346     		mov	r3, r0
 20530 005c 03F00103 		and	r3, r3, #1
 20531 0060 002B     		cmp	r3, #0
 20532 0062 05D1     		bne	.L774
 20533              		.loc 1 2677 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 449


 20534 0064 FB89     		ldrh	r3, [r7, #14]
 20535 0066 5A1C     		adds	r2, r3, #1
 20536 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20537 006a B3F57A7F 		cmp	r3, #1000
 20538 006e F2D9     		bls	.L775
 20539              	.L774:
2678:..\src/command_processing.c **** 
2679:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20540              		.loc 1 2679 0 is_stmt 1
 20541 0070 0120     		movs	r0, #1
 20542 0072 FFF7FEFF 		bl	RS485_CTS_Write
2680:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20543              		.loc 1 2680 0
 20544 0076 0020     		movs	r0, #0
 20545 0078 FFF7FEFF 		bl	RS485_CTS_Write
2681:..\src/command_processing.c **** }
 20546              		.loc 1 2681 0
 20547 007c 00BF     		nop
 20548 007e 1037     		adds	r7, r7, #16
 20549              		.cfi_def_cfa_offset 8
 20550 0080 BD46     		mov	sp, r7
 20551              		.cfi_def_cfa_register 13
 20552              		@ sp needed
 20553 0082 80BD     		pop	{r7, pc}
 20554              		.cfi_endproc
 20555              	.LFE78:
 20556              		.size	commWrite_old_id, .-commWrite_old_id
 20557              		.section	.text.commWrite,"ax",%progbits
 20558              		.align	2
 20559              		.global	commWrite
 20560              		.thumb
 20561              		.thumb_func
 20562              		.type	commWrite, %function
 20563              	commWrite:
 20564              	.LFB79:
2682:..\src/command_processing.c **** 
2683:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2684:..\src/command_processing.c **** {
 20565              		.loc 1 2684 0
 20566              		.cfi_startproc
 20567              		@ args = 0, pretend = 0, frame = 16
 20568              		@ frame_needed = 1, uses_anonymous_args = 0
 20569 0000 80B5     		push	{r7, lr}
 20570              		.cfi_def_cfa_offset 8
 20571              		.cfi_offset 7, -8
 20572              		.cfi_offset 14, -4
 20573 0002 84B0     		sub	sp, sp, #16
 20574              		.cfi_def_cfa_offset 24
 20575 0004 00AF     		add	r7, sp, #0
 20576              		.cfi_def_cfa_register 7
 20577 0006 7860     		str	r0, [r7, #4]
 20578 0008 0B46     		mov	r3, r1
 20579 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2685:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c ****     // frame - start
2688:..\src/command_processing.c ****     UART_RS485_PutChar(':');
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 450


 20580              		.loc 1 2688 0
 20581 000c 3A20     		movs	r0, #58
 20582 000e FFF7FEFF 		bl	UART_RS485_PutChar
2689:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20583              		.loc 1 2689 0
 20584 0012 3A20     		movs	r0, #58
 20585 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2690:..\src/command_processing.c ****     // frame - ID
2691:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 20586              		.loc 1 2691 0
 20587 0018 1A4B     		ldr	r3, .L781
 20588 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 20589 001e 1846     		mov	r0, r3
 20590 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2692:..\src/command_processing.c ****     // frame - length
2693:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20591              		.loc 1 2693 0
 20592 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20593 0026 DBB2     		uxtb	r3, r3
 20594 0028 1846     		mov	r0, r3
 20595 002a FFF7FEFF 		bl	UART_RS485_PutChar
2694:..\src/command_processing.c ****     // frame - packet data
2695:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 20596              		.loc 1 2695 0
 20597 002e 0023     		movs	r3, #0
 20598 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 20599 0032 09E0     		b	.L777
 20600              	.L778:
2696:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20601              		.loc 1 2696 0 discriminator 3
 20602 0034 FB89     		ldrh	r3, [r7, #14]
 20603 0036 7A68     		ldr	r2, [r7, #4]
 20604 0038 1344     		add	r3, r3, r2
 20605 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20606 003c 1846     		mov	r0, r3
 20607 003e FFF7FEFF 		bl	UART_RS485_PutChar
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20608              		.loc 1 2695 0 discriminator 3
 20609 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 20610 0044 0133     		adds	r3, r3, #1
 20611 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 20612              	.L777:
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 20613              		.loc 1 2695 0 is_stmt 0 discriminator 1
 20614 0048 FA89     		ldrh	r2, [r7, #14]
 20615 004a 7B88     		ldrh	r3, [r7, #2]
 20616 004c 9A42     		cmp	r2, r3
 20617 004e F1D3     		bcc	.L778
2697:..\src/command_processing.c ****     }
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c ****     index = 0;
 20618              		.loc 1 2699 0 is_stmt 1
 20619 0050 0023     		movs	r3, #0
 20620 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 20621              		.loc 1 2701 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 451


 20622 0054 00BF     		nop
 20623              	.L780:
 20624              		.loc 1 2701 0 is_stmt 0 discriminator 2
 20625 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20626 005a 0346     		mov	r3, r0
 20627 005c 03F00103 		and	r3, r3, #1
 20628 0060 002B     		cmp	r3, #0
 20629 0062 05D1     		bne	.L779
 20630              		.loc 1 2701 0 discriminator 1
 20631 0064 FB89     		ldrh	r3, [r7, #14]
 20632 0066 5A1C     		adds	r2, r3, #1
 20633 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 20634 006a B3F57A7F 		cmp	r3, #1000
 20635 006e F2D9     		bls	.L780
 20636              	.L779:
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20637              		.loc 1 2703 0 is_stmt 1
 20638 0070 0120     		movs	r0, #1
 20639 0072 FFF7FEFF 		bl	RS485_CTS_Write
2704:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20640              		.loc 1 2704 0
 20641 0076 0020     		movs	r0, #0
 20642 0078 FFF7FEFF 		bl	RS485_CTS_Write
2705:..\src/command_processing.c **** }
 20643              		.loc 1 2705 0
 20644 007c 00BF     		nop
 20645 007e 1037     		adds	r7, r7, #16
 20646              		.cfi_def_cfa_offset 8
 20647 0080 BD46     		mov	sp, r7
 20648              		.cfi_def_cfa_register 13
 20649              		@ sp needed
 20650 0082 80BD     		pop	{r7, pc}
 20651              	.L782:
 20652              		.align	2
 20653              	.L781:
 20654 0084 00000000 		.word	g_mem
 20655              		.cfi_endproc
 20656              	.LFE79:
 20657              		.size	commWrite, .-commWrite
 20658              		.section	.text.commWriteID,"ax",%progbits
 20659              		.align	2
 20660              		.global	commWriteID
 20661              		.thumb
 20662              		.thumb_func
 20663              		.type	commWriteID, %function
 20664              	commWriteID:
 20665              	.LFB80:
2706:..\src/command_processing.c **** 
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2709:..\src/command_processing.c **** //==============================================================================
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2712:..\src/command_processing.c **** {
 20666              		.loc 1 2712 0
 20667              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 452


 20668              		@ args = 0, pretend = 0, frame = 8
 20669              		@ frame_needed = 1, uses_anonymous_args = 0
 20670 0000 80B5     		push	{r7, lr}
 20671              		.cfi_def_cfa_offset 8
 20672              		.cfi_offset 7, -8
 20673              		.cfi_offset 14, -4
 20674 0002 82B0     		sub	sp, sp, #8
 20675              		.cfi_def_cfa_offset 16
 20676 0004 00AF     		add	r7, sp, #0
 20677              		.cfi_def_cfa_register 7
 20678 0006 7860     		str	r0, [r7, #4]
 20679 0008 0B46     		mov	r3, r1
 20680 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 20681 000c 1346     		mov	r3, r2
 20682 000e 7B70     		strb	r3, [r7, #1]
2713:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c ****     // frame - start
2716:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20683              		.loc 1 2716 0
 20684 0010 3A20     		movs	r0, #58
 20685 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2717:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 20686              		.loc 1 2717 0
 20687 0016 3A20     		movs	r0, #58
 20688 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2718:..\src/command_processing.c ****     // frame - ID
2719:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 20689              		.loc 1 2719 0
 20690 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 20691 001e 1846     		mov	r0, r3
 20692 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2720:..\src/command_processing.c ****     // frame - length
2721:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 20693              		.loc 1 2721 0
 20694 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 20695 0026 DBB2     		uxtb	r3, r3
 20696 0028 1846     		mov	r0, r3
 20697 002a FFF7FEFF 		bl	UART_RS485_PutChar
2722:..\src/command_processing.c ****     // frame - packet data
2723:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 20698              		.loc 1 2723 0
 20699 002e 1B4B     		ldr	r3, .L788
 20700 0030 0022     		movs	r2, #0
 20701 0032 1A80     		strh	r2, [r3]	@ movhi
 20702 0034 0EE0     		b	.L784
 20703              	.L785:
2724:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20704              		.loc 1 2724 0 discriminator 3
 20705 0036 194B     		ldr	r3, .L788
 20706 0038 1B88     		ldrh	r3, [r3]
 20707 003a 1A46     		mov	r2, r3
 20708 003c 7B68     		ldr	r3, [r7, #4]
 20709 003e 1344     		add	r3, r3, r2
 20710 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20711 0042 1846     		mov	r0, r3
 20712 0044 FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 453


2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20713              		.loc 1 2723 0 discriminator 3
 20714 0048 144B     		ldr	r3, .L788
 20715 004a 1B88     		ldrh	r3, [r3]
 20716 004c 0133     		adds	r3, r3, #1
 20717 004e 9AB2     		uxth	r2, r3
 20718 0050 124B     		ldr	r3, .L788
 20719 0052 1A80     		strh	r2, [r3]	@ movhi
 20720              	.L784:
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 20721              		.loc 1 2723 0 is_stmt 0 discriminator 1
 20722 0054 114B     		ldr	r3, .L788
 20723 0056 1B88     		ldrh	r3, [r3]
 20724 0058 7A88     		ldrh	r2, [r7, #2]
 20725 005a 9A42     		cmp	r2, r3
 20726 005c EBD8     		bhi	.L785
2725:..\src/command_processing.c ****     }
2726:..\src/command_processing.c **** 
2727:..\src/command_processing.c ****     i = 0;
 20727              		.loc 1 2727 0 is_stmt 1
 20728 005e 0F4B     		ldr	r3, .L788
 20729 0060 0022     		movs	r2, #0
 20730 0062 1A80     		strh	r2, [r3]	@ movhi
2728:..\src/command_processing.c **** 
2729:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 20731              		.loc 1 2729 0
 20732 0064 00BF     		nop
 20733              	.L787:
 20734              		.loc 1 2729 0 is_stmt 0 discriminator 2
 20735 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 20736 006a 0346     		mov	r3, r0
 20737 006c 03F00103 		and	r3, r3, #1
 20738 0070 002B     		cmp	r3, #0
 20739 0072 08D1     		bne	.L786
 20740              		.loc 1 2729 0 discriminator 1
 20741 0074 094B     		ldr	r3, .L788
 20742 0076 1B88     		ldrh	r3, [r3]
 20743 0078 5A1C     		adds	r2, r3, #1
 20744 007a 91B2     		uxth	r1, r2
 20745 007c 074A     		ldr	r2, .L788
 20746 007e 1180     		strh	r1, [r2]	@ movhi
 20747 0080 B3F57A7F 		cmp	r3, #1000
 20748 0084 EFD9     		bls	.L787
 20749              	.L786:
2730:..\src/command_processing.c ****     
2731:..\src/command_processing.c ****     RS485_CTS_Write(1);
 20750              		.loc 1 2731 0 is_stmt 1
 20751 0086 0120     		movs	r0, #1
 20752 0088 FFF7FEFF 		bl	RS485_CTS_Write
2732:..\src/command_processing.c ****     RS485_CTS_Write(0);
 20753              		.loc 1 2732 0
 20754 008c 0020     		movs	r0, #0
 20755 008e FFF7FEFF 		bl	RS485_CTS_Write
2733:..\src/command_processing.c **** }
 20756              		.loc 1 2733 0
 20757 0092 00BF     		nop
 20758 0094 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 454


 20759              		.cfi_def_cfa_offset 8
 20760 0096 BD46     		mov	sp, r7
 20761              		.cfi_def_cfa_register 13
 20762              		@ sp needed
 20763 0098 80BD     		pop	{r7, pc}
 20764              	.L789:
 20765 009a 00BF     		.align	2
 20766              	.L788:
 20767 009c 00000000 		.word	i.11155
 20768              		.cfi_endproc
 20769              	.LFE80:
 20770              		.size	commWriteID, .-commWriteID
 20771              		.section	.text.LCRChecksum,"ax",%progbits
 20772              		.align	2
 20773              		.global	LCRChecksum
 20774              		.thumb
 20775              		.thumb_func
 20776              		.type	LCRChecksum, %function
 20777              	LCRChecksum:
 20778              	.LFB81:
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c **** //==============================================================================
2736:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2737:..\src/command_processing.c **** //==============================================================================
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2740:..\src/command_processing.c **** 
2741:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 20779              		.loc 1 2741 0
 20780              		.cfi_startproc
 20781              		@ args = 0, pretend = 0, frame = 16
 20782              		@ frame_needed = 1, uses_anonymous_args = 0
 20783              		@ link register save eliminated.
 20784 0000 80B4     		push	{r7}
 20785              		.cfi_def_cfa_offset 4
 20786              		.cfi_offset 7, -4
 20787 0002 85B0     		sub	sp, sp, #20
 20788              		.cfi_def_cfa_offset 24
 20789 0004 00AF     		add	r7, sp, #0
 20790              		.cfi_def_cfa_register 7
 20791 0006 7860     		str	r0, [r7, #4]
 20792 0008 0B46     		mov	r3, r1
 20793 000a FB70     		strb	r3, [r7, #3]
2742:..\src/command_processing.c ****     
2743:..\src/command_processing.c ****     uint8 CYDATA i;
2744:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 20794              		.loc 1 2744 0
 20795 000c 0023     		movs	r3, #0
 20796 000e BB73     		strb	r3, [r7, #14]
2745:..\src/command_processing.c ****     
2746:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 20797              		.loc 1 2746 0
 20798 0010 0023     		movs	r3, #0
 20799 0012 FB73     		strb	r3, [r7, #15]
 20800 0014 09E0     		b	.L791
 20801              	.L792:
2747:..\src/command_processing.c ****        checksum ^= data_array[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 455


 20802              		.loc 1 2747 0 discriminator 3
 20803 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20804 0018 7A68     		ldr	r2, [r7, #4]
 20805 001a 1344     		add	r3, r3, r2
 20806 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 20807 001e BB7B     		ldrb	r3, [r7, #14]
 20808 0020 5340     		eors	r3, r3, r2
 20809 0022 BB73     		strb	r3, [r7, #14]
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 20810              		.loc 1 2746 0 discriminator 3
 20811 0024 FB7B     		ldrb	r3, [r7, #15]
 20812 0026 0133     		adds	r3, r3, #1
 20813 0028 FB73     		strb	r3, [r7, #15]
 20814              	.L791:
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 20815              		.loc 1 2746 0 is_stmt 0 discriminator 1
 20816 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20817 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 20818 002e 9A42     		cmp	r2, r3
 20819 0030 F1D3     		bcc	.L792
2748:..\src/command_processing.c ****   
2749:..\src/command_processing.c ****     return checksum;
 20820              		.loc 1 2749 0 is_stmt 1
 20821 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2750:..\src/command_processing.c **** }
 20822              		.loc 1 2750 0
 20823 0034 1846     		mov	r0, r3
 20824 0036 1437     		adds	r7, r7, #20
 20825              		.cfi_def_cfa_offset 4
 20826 0038 BD46     		mov	sp, r7
 20827              		.cfi_def_cfa_register 13
 20828              		@ sp needed
 20829 003a 80BC     		pop	{r7}
 20830              		.cfi_restore 7
 20831              		.cfi_def_cfa_offset 0
 20832 003c 7047     		bx	lr
 20833              		.cfi_endproc
 20834              	.LFE81:
 20835              		.size	LCRChecksum, .-LCRChecksum
 20836 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 20837              		.align	2
 20838              		.global	sendAcknowledgment
 20839              		.thumb
 20840              		.thumb_func
 20841              		.type	sendAcknowledgment, %function
 20842              	sendAcknowledgment:
 20843              	.LFB82:
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c **** 
2753:..\src/command_processing.c **** //==============================================================================
2754:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2755:..\src/command_processing.c **** //==============================================================================
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 20844              		.loc 1 2757 0
 20845              		.cfi_startproc
 20846              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 456


 20847              		@ frame_needed = 1, uses_anonymous_args = 0
 20848 0000 80B5     		push	{r7, lr}
 20849              		.cfi_def_cfa_offset 8
 20850              		.cfi_offset 7, -8
 20851              		.cfi_offset 14, -4
 20852 0002 84B0     		sub	sp, sp, #16
 20853              		.cfi_def_cfa_offset 24
 20854 0004 00AF     		add	r7, sp, #0
 20855              		.cfi_def_cfa_register 7
 20856 0006 0346     		mov	r3, r0
 20857 0008 FB71     		strb	r3, [r7, #7]
2758:..\src/command_processing.c ****     int packet_lenght = 2;
 20858              		.loc 1 2758 0
 20859 000a 0223     		movs	r3, #2
 20860 000c FB60     		str	r3, [r7, #12]
2759:..\src/command_processing.c ****     uint8 packet_data[2];
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     packet_data[0] = value;
 20861              		.loc 1 2761 0
 20862 000e FB79     		ldrb	r3, [r7, #7]
 20863 0010 3B72     		strb	r3, [r7, #8]
2762:..\src/command_processing.c ****     packet_data[1] = value;
 20864              		.loc 1 2762 0
 20865 0012 FB79     		ldrb	r3, [r7, #7]
 20866 0014 7B72     		strb	r3, [r7, #9]
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 20867              		.loc 1 2764 0
 20868 0016 FB68     		ldr	r3, [r7, #12]
 20869 0018 9AB2     		uxth	r2, r3
 20870 001a 07F10803 		add	r3, r7, #8
 20871 001e 1146     		mov	r1, r2
 20872 0020 1846     		mov	r0, r3
 20873 0022 FFF7FEFF 		bl	commWrite
2765:..\src/command_processing.c **** }
 20874              		.loc 1 2765 0
 20875 0026 00BF     		nop
 20876 0028 1037     		adds	r7, r7, #16
 20877              		.cfi_def_cfa_offset 8
 20878 002a BD46     		mov	sp, r7
 20879              		.cfi_def_cfa_register 13
 20880              		@ sp needed
 20881 002c 80BD     		pop	{r7, pc}
 20882              		.cfi_endproc
 20883              	.LFE82:
 20884              		.size	sendAcknowledgment, .-sendAcknowledgment
 20885 002e 00BF     		.section	.text.memStore,"ax",%progbits
 20886              		.align	2
 20887              		.global	memStore
 20888              		.thumb
 20889              		.thumb_func
 20890              		.type	memStore, %function
 20891              	memStore:
 20892              	.LFB83:
2766:..\src/command_processing.c **** 
2767:..\src/command_processing.c **** //==============================================================================
2768:..\src/command_processing.c **** //                                                                  STORE MEMORY
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 457


2769:..\src/command_processing.c **** //==============================================================================
2770:..\src/command_processing.c **** 
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c **** uint8 memStore(int displacement)
2773:..\src/command_processing.c **** {
 20893              		.loc 1 2773 0
 20894              		.cfi_startproc
 20895              		@ args = 0, pretend = 0, frame = 24
 20896              		@ frame_needed = 1, uses_anonymous_args = 0
 20897 0000 80B5     		push	{r7, lr}
 20898              		.cfi_def_cfa_offset 8
 20899              		.cfi_offset 7, -8
 20900              		.cfi_offset 14, -4
 20901 0002 86B0     		sub	sp, sp, #24
 20902              		.cfi_def_cfa_offset 32
 20903 0004 00AF     		add	r7, sp, #0
 20904              		.cfi_def_cfa_register 7
 20905 0006 7860     		str	r0, [r7, #4]
2774:..\src/command_processing.c ****     int i;  // iterator
2775:..\src/command_processing.c ****     uint8 writeStatus;
2776:..\src/command_processing.c ****     int pages;
2777:..\src/command_processing.c ****     uint8 ret_val = 1;
 20906              		.loc 1 2777 0
 20907 0008 0123     		movs	r3, #1
 20908 000a FB74     		strb	r3, [r7, #19]
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     // Disable Interrupt
2780:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 20909              		.loc 1 2780 0
 20910 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c ****     // Stop motor
2783:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 20911              		.loc 1 2783 0
 20912 0010 0020     		movs	r0, #0
 20913 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2786:..\src/command_processing.c ****     CySetTemp();
 20914              		.loc 1 2786 0
 20915 0016 FFF7FEFF 		bl	CySetTemp
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 20916              		.loc 1 2788 0
 20917 001a 1D4A     		ldr	r2, .L801
 20918 001c 1D4B     		ldr	r3, .L801+4
 20919 001e 1046     		mov	r0, r2
 20920 0020 1946     		mov	r1, r3
 20921 0022 4FF43473 		mov	r3, #720
 20922 0026 1A46     		mov	r2, r3
 20923 0028 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 20924              		.loc 1 2790 0
 20925 002c 2D23     		movs	r3, #45
 20926 002e FB60     		str	r3, [r7, #12]
2791:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 458


2792:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 20927              		.loc 1 2792 0
 20928 0030 0023     		movs	r3, #0
 20929 0032 7B61     		str	r3, [r7, #20]
 20930 0034 18E0     		b	.L796
 20931              	.L799:
2793:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20932              		.loc 1 2793 0
 20933 0036 7B69     		ldr	r3, [r7, #20]
 20934 0038 1B01     		lsls	r3, r3, #4
 20935 003a 1A46     		mov	r2, r3
 20936 003c 154B     		ldr	r3, .L801+4
 20937 003e D018     		adds	r0, r2, r3
 20938 0040 7B69     		ldr	r3, [r7, #20]
 20939 0042 DAB2     		uxtb	r2, r3
 20940 0044 7B68     		ldr	r3, [r7, #4]
 20941 0046 DBB2     		uxtb	r3, r3
 20942 0048 1344     		add	r3, r3, r2
 20943 004a DBB2     		uxtb	r3, r3
 20944 004c 1946     		mov	r1, r3
 20945 004e FFF7FEFF 		bl	EEPROM_Write
 20946 0052 0346     		mov	r3, r0
 20947 0054 FB72     		strb	r3, [r7, #11]
2794:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 20948              		.loc 1 2794 0
 20949 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 20950 0058 002B     		cmp	r3, #0
 20951 005a 02D0     		beq	.L797
2795:..\src/command_processing.c ****             ret_val = 0;
 20952              		.loc 1 2795 0
 20953 005c 0023     		movs	r3, #0
 20954 005e FB74     		strb	r3, [r7, #19]
2796:..\src/command_processing.c ****             break;
 20955              		.loc 1 2796 0
 20956 0060 06E0     		b	.L798
 20957              	.L797:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20958              		.loc 1 2792 0 discriminator 2
 20959 0062 7B69     		ldr	r3, [r7, #20]
 20960 0064 0133     		adds	r3, r3, #1
 20961 0066 7B61     		str	r3, [r7, #20]
 20962              	.L796:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 20963              		.loc 1 2792 0 is_stmt 0 discriminator 1
 20964 0068 7A69     		ldr	r2, [r7, #20]
 20965 006a FB68     		ldr	r3, [r7, #12]
 20966 006c 9A42     		cmp	r2, r3
 20967 006e E2DB     		blt	.L799
 20968              	.L798:
2797:..\src/command_processing.c ****         }
2798:..\src/command_processing.c ****     }
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 20969              		.loc 1 2800 0 is_stmt 1
 20970 0070 084A     		ldr	r2, .L801+4
 20971 0072 074B     		ldr	r3, .L801
 20972 0074 1046     		mov	r0, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 459


 20973 0076 1946     		mov	r1, r3
 20974 0078 4FF43473 		mov	r3, #720
 20975 007c 1A46     		mov	r2, r3
 20976 007e FFF7FEFF 		bl	memcpy
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     // Re-Enable Interrupt
2803:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 20977              		.loc 1 2803 0
 20978 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c ****     return ret_val;
 20979              		.loc 1 2805 0
 20980 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2806:..\src/command_processing.c **** }
 20981              		.loc 1 2806 0
 20982 0088 1846     		mov	r0, r3
 20983 008a 1837     		adds	r7, r7, #24
 20984              		.cfi_def_cfa_offset 8
 20985 008c BD46     		mov	sp, r7
 20986              		.cfi_def_cfa_register 13
 20987              		@ sp needed
 20988 008e 80BD     		pop	{r7, pc}
 20989              	.L802:
 20990              		.align	2
 20991              	.L801:
 20992 0090 00000000 		.word	c_mem
 20993 0094 00000000 		.word	g_mem
 20994              		.cfi_endproc
 20995              	.LFE83:
 20996              		.size	memStore, .-memStore
 20997              		.section	.text.memRecall,"ax",%progbits
 20998              		.align	2
 20999              		.global	memRecall
 21000              		.thumb
 21001              		.thumb_func
 21002              		.type	memRecall, %function
 21003              	memRecall:
 21004              	.LFB84:
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** //==============================================================================
2810:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2811:..\src/command_processing.c **** //==============================================================================
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void memRecall(void)
2815:..\src/command_processing.c **** {
 21005              		.loc 1 2815 0
 21006              		.cfi_startproc
 21007              		@ args = 0, pretend = 0, frame = 8
 21008              		@ frame_needed = 1, uses_anonymous_args = 0
 21009 0000 80B5     		push	{r7, lr}
 21010              		.cfi_def_cfa_offset 8
 21011              		.cfi_offset 7, -8
 21012              		.cfi_offset 14, -4
 21013 0002 82B0     		sub	sp, sp, #8
 21014              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 460


 21015 0004 00AF     		add	r7, sp, #0
 21016              		.cfi_def_cfa_register 7
2816:..\src/command_processing.c ****     uint16 i;
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21017              		.loc 1 2818 0
 21018 0006 0023     		movs	r3, #0
 21019 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21020 000a 0CE0     		b	.L804
 21021              	.L805:
2819:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21022              		.loc 1 2819 0 discriminator 3
 21023 000c FB88     		ldrh	r3, [r7, #6]
 21024 000e 184A     		ldr	r2, .L809
 21025 0010 1344     		add	r3, r3, r2
 21026 0012 184A     		ldr	r2, .L809+4
 21027 0014 1168     		ldr	r1, [r2]
 21028 0016 FA88     		ldrh	r2, [r7, #6]
 21029 0018 0A44     		add	r2, r2, r1
 21030 001a 1278     		ldrb	r2, [r2]
 21031 001c D2B2     		uxtb	r2, r2
 21032 001e 1A70     		strb	r2, [r3]
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21033              		.loc 1 2818 0 discriminator 3
 21034 0020 FB88     		ldrh	r3, [r7, #6]
 21035 0022 0133     		adds	r3, r3, #1
 21036 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 21037              	.L804:
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 21038              		.loc 1 2818 0 is_stmt 0 discriminator 1
 21039 0026 FB88     		ldrh	r3, [r7, #6]
 21040 0028 B3F5347F 		cmp	r3, #720
 21041 002c EED3     		bcc	.L805
2820:..\src/command_processing.c ****     }
2821:..\src/command_processing.c ****     
2822:..\src/command_processing.c ****     // Recall saved user_emg structure
2823:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 21042              		.loc 1 2823 0 is_stmt 1
 21043 002e 104B     		ldr	r3, .L809
 21044 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21045 0034 5B01     		lsls	r3, r3, #5
 21046 0036 03F51273 		add	r3, r3, #584
 21047 003a 0D4A     		ldr	r2, .L809
 21048 003c 1344     		add	r3, r3, r2
 21049 003e 1022     		movs	r2, #16
 21050 0040 1946     		mov	r1, r3
 21051 0042 0D48     		ldr	r0, .L809+8
 21052 0044 FFF7FEFF 		bl	memcpy
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c ****     //check for initialization
2826:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21053              		.loc 1 2826 0
 21054 0048 094B     		ldr	r3, .L809
 21055 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21056 004c 002B     		cmp	r3, #0
 21057 004e 02D1     		bne	.L806
2827:..\src/command_processing.c ****         memRestore();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 461


 21058              		.loc 1 2827 0
 21059 0050 FFF7FEFF 		bl	memRestore
2828:..\src/command_processing.c ****     } else {
2829:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2830:..\src/command_processing.c ****     }        
2831:..\src/command_processing.c **** }
 21060              		.loc 1 2831 0
 21061 0054 08E0     		b	.L808
 21062              	.L806:
2829:..\src/command_processing.c ****     }        
 21063              		.loc 1 2829 0
 21064 0056 094A     		ldr	r2, .L809+12
 21065 0058 054B     		ldr	r3, .L809
 21066 005a 1046     		mov	r0, r2
 21067 005c 1946     		mov	r1, r3
 21068 005e 4FF43473 		mov	r3, #720
 21069 0062 1A46     		mov	r2, r3
 21070 0064 FFF7FEFF 		bl	memcpy
 21071              	.L808:
 21072              		.loc 1 2831 0
 21073 0068 00BF     		nop
 21074 006a 0837     		adds	r7, r7, #8
 21075              		.cfi_def_cfa_offset 8
 21076 006c BD46     		mov	sp, r7
 21077              		.cfi_def_cfa_register 13
 21078              		@ sp needed
 21079 006e 80BD     		pop	{r7, pc}
 21080              	.L810:
 21081              		.align	2
 21082              	.L809:
 21083 0070 00000000 		.word	g_mem
 21084 0074 00000000 		.word	EEPROM_ADDR
 21085 0078 F0010000 		.word	g_mem+496
 21086 007c 00000000 		.word	c_mem
 21087              		.cfi_endproc
 21088              	.LFE84:
 21089              		.size	memRecall, .-memRecall
 21090              		.section	.text.memRestore,"ax",%progbits
 21091              		.align	2
 21092              		.global	memRestore
 21093              		.thumb
 21094              		.thumb_func
 21095              		.type	memRestore, %function
 21096              	memRestore:
 21097              	.LFB85:
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c **** //==============================================================================
2835:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c **** uint8 memRestore(void) {
 21098              		.loc 1 2839 0
 21099              		.cfi_startproc
 21100              		@ args = 0, pretend = 0, frame = 8
 21101              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 462


 21102 0000 80B5     		push	{r7, lr}
 21103              		.cfi_def_cfa_offset 8
 21104              		.cfi_offset 7, -8
 21105              		.cfi_offset 14, -4
 21106 0002 82B0     		sub	sp, sp, #8
 21107              		.cfi_def_cfa_offset 16
 21108 0004 00AF     		add	r7, sp, #0
 21109              		.cfi_def_cfa_register 7
2840:..\src/command_processing.c ****     uint16 i;
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 21110              		.loc 1 2842 0
 21111 0006 0023     		movs	r3, #0
 21112 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 21113 000a 0EE0     		b	.L812
 21114              	.L813:
2843:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21115              		.loc 1 2843 0 discriminator 3
 21116 000c FB88     		ldrh	r3, [r7, #6]
 21117 000e 114A     		ldr	r2, .L816
 21118 0010 1344     		add	r3, r3, r2
 21119 0012 114A     		ldr	r2, .L816+4
 21120 0014 1168     		ldr	r1, [r2]
 21121 0016 FA88     		ldrh	r2, [r7, #6]
 21122 0018 02F54872 		add	r2, r2, #800
 21123 001c 0A44     		add	r2, r2, r1
 21124 001e 1278     		ldrb	r2, [r2]
 21125 0020 D2B2     		uxtb	r2, r2
 21126 0022 1A70     		strb	r2, [r3]
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21127              		.loc 1 2842 0 discriminator 3
 21128 0024 FB88     		ldrh	r3, [r7, #6]
 21129 0026 0133     		adds	r3, r3, #1
 21130 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 21131              	.L812:
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 21132              		.loc 1 2842 0 is_stmt 0 discriminator 1
 21133 002a FB88     		ldrh	r3, [r7, #6]
 21134 002c B3F5347F 		cmp	r3, #720
 21135 0030 ECD3     		bcc	.L813
2844:..\src/command_processing.c ****     }
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     //check for initialization
2847:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 21136              		.loc 1 2847 0 is_stmt 1
 21137 0032 084B     		ldr	r3, .L816
 21138 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21139 0036 002B     		cmp	r3, #0
 21140 0038 03D1     		bne	.L814
2848:..\src/command_processing.c ****         return memInit();
 21141              		.loc 1 2848 0
 21142 003a FFF7FEFF 		bl	memInit
 21143 003e 0346     		mov	r3, r0
 21144 0040 03E0     		b	.L815
 21145              	.L814:
2849:..\src/command_processing.c ****     } else {
2850:..\src/command_processing.c ****         return memStore(0);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 463


 21146              		.loc 1 2850 0
 21147 0042 0020     		movs	r0, #0
 21148 0044 FFF7FEFF 		bl	memStore
 21149 0048 0346     		mov	r3, r0
 21150              	.L815:
2851:..\src/command_processing.c ****     }  
2852:..\src/command_processing.c **** }
 21151              		.loc 1 2852 0
 21152 004a 1846     		mov	r0, r3
 21153 004c 0837     		adds	r7, r7, #8
 21154              		.cfi_def_cfa_offset 8
 21155 004e BD46     		mov	sp, r7
 21156              		.cfi_def_cfa_register 13
 21157              		@ sp needed
 21158 0050 80BD     		pop	{r7, pc}
 21159              	.L817:
 21160 0052 00BF     		.align	2
 21161              	.L816:
 21162 0054 00000000 		.word	g_mem
 21163 0058 00000000 		.word	EEPROM_ADDR
 21164              		.cfi_endproc
 21165              	.LFE85:
 21166              		.size	memRestore, .-memRestore
 21167              		.section	.rodata
 21168 1c57 00       		.align	2
 21169              	.LC279:
 21170 1c58 47454E30 		.ascii	"GEN001\000"
 21170      303100
 21171              		.section	.text.memInit,"ax",%progbits
 21172              		.align	2
 21173              		.global	memInit
 21174              		.thumb
 21175              		.thumb_func
 21176              		.type	memInit, %function
 21177              	memInit:
 21178              	.LFB86:
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c **** //==============================================================================
2855:..\src/command_processing.c **** //                                                                   MEMORY INIT
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** 
2858:..\src/command_processing.c **** uint8 memInit(void)
2859:..\src/command_processing.c **** {
 21179              		.loc 1 2859 0
 21180              		.cfi_startproc
 21181              		@ args = 0, pretend = 0, frame = 8
 21182              		@ frame_needed = 1, uses_anonymous_args = 0
 21183 0000 80B5     		push	{r7, lr}
 21184              		.cfi_def_cfa_offset 8
 21185              		.cfi_offset 7, -8
 21186              		.cfi_offset 14, -4
 21187 0002 82B0     		sub	sp, sp, #8
 21188              		.cfi_def_cfa_offset 16
 21189 0004 00AF     		add	r7, sp, #0
 21190              		.cfi_def_cfa_register 7
2860:..\src/command_processing.c ****     uint8 i, j;
2861:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 464


2862:..\src/command_processing.c ****     //initialize memory settings
2863:..\src/command_processing.c ****     for (i=0; i<15; i++){
 21191              		.loc 1 2863 0
 21192 0006 0023     		movs	r3, #0
 21193 0008 FB71     		strb	r3, [r7, #7]
 21194 000a 07E0     		b	.L819
 21195              	.L820:
2864:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21196              		.loc 1 2864 0 discriminator 3
 21197 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21198 000e B44A     		ldr	r2, .L845
 21199 0010 1344     		add	r3, r3, r2
 21200 0012 0022     		movs	r2, #0
 21201 0014 5A70     		strb	r2, [r3, #1]
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21202              		.loc 1 2863 0 discriminator 3
 21203 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21204 0018 0133     		adds	r3, r3, #1
 21205 001a FB71     		strb	r3, [r7, #7]
 21206              	.L819:
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 21207              		.loc 1 2863 0 is_stmt 0 discriminator 1
 21208 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21209 001e 0E2B     		cmp	r3, #14
 21210 0020 F4D9     		bls	.L820
2865:..\src/command_processing.c ****     }
2866:..\src/command_processing.c ****         
2867:..\src/command_processing.c ****     // DEV STRUCT
2868:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 21211              		.loc 1 2868 0 is_stmt 1
 21212 0022 AF4B     		ldr	r3, .L845
 21213 0024 0122     		movs	r2, #1
 21214 0026 83F8A020 		strb	r2, [r3, #160]
2869:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 21215              		.loc 1 2869 0
 21216 002a AD4B     		ldr	r3, .L845
 21217 002c 0022     		movs	r2, #0
 21218 002e 83F8A720 		strb	r2, [r3, #167]
2870:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 21219              		.loc 1 2870 0
 21220 0032 AB4B     		ldr	r3, .L845
 21221 0034 0122     		movs	r2, #1
 21222 0036 83F8AC20 		strb	r2, [r3, #172]
2871:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 21223              		.loc 1 2871 0
 21224 003a A94B     		ldr	r3, .L845
 21225 003c 0022     		movs	r2, #0
 21226 003e 83F8A820 		strb	r2, [r3, #168]
2872:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 21227              		.loc 1 2872 0
 21228 0042 FFF7FEFF 		bl	reset_counters
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21229              		.loc 1 2873 0
 21230 0046 0023     		movs	r3, #0
 21231 0048 FB71     		strb	r3, [r7, #7]
 21232 004a 08E0     		b	.L821
 21233              	.L822:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 465


2874:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 21234              		.loc 1 2874 0 discriminator 3
 21235 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21236 004e A44A     		ldr	r2, .L845
 21237 0050 1344     		add	r3, r3, r2
 21238 0052 0022     		movs	r2, #0
 21239 0054 83F86020 		strb	r2, [r3, #96]
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21240              		.loc 1 2873 0 discriminator 3
 21241 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21242 005a 0133     		adds	r3, r3, #1
 21243 005c FB71     		strb	r3, [r7, #7]
 21244              	.L821:
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 21245              		.loc 1 2873 0 is_stmt 0 discriminator 1
 21246 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21247 0060 3F2B     		cmp	r3, #63
 21248 0062 F3D9     		bls	.L822
2875:..\src/command_processing.c ****     }
2876:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 21249              		.loc 1 2876 0 is_stmt 1
 21250 0064 9E4B     		ldr	r3, .L845
 21251 0066 0022     		movs	r2, #0
 21252 0068 83F8A920 		strb	r2, [r3, #169]
2877:..\src/command_processing.c **** 
2878:..\src/command_processing.c ****     // MOTOR STRUCT
2879:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21253              		.loc 1 2879 0
 21254 006c 0023     		movs	r3, #0
 21255 006e FB71     		strb	r3, [r7, #7]
 21256 0070 15E1     		b	.L823
 21257              	.L826:
2880:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21258              		.loc 1 2880 0
 21259 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21260 0074 9A49     		ldr	r1, .L845
 21261 0076 1346     		mov	r3, r2
 21262 0078 DB00     		lsls	r3, r3, #3
 21263 007a 9B1A     		subs	r3, r3, r2
 21264 007c 1B01     		lsls	r3, r3, #4
 21265 007e 0B44     		add	r3, r3, r1
 21266 0080 B033     		adds	r3, r3, #176
 21267 0082 40F23942 		movw	r2, #1081
 21268 0086 1A60     		str	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 21269              		.loc 1 2881 0
 21270 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21271 008a 9549     		ldr	r1, .L845
 21272 008c 1346     		mov	r3, r2
 21273 008e DB00     		lsls	r3, r3, #3
 21274 0090 9B1A     		subs	r3, r3, r2
 21275 0092 1B01     		lsls	r3, r3, #4
 21276 0094 0B44     		add	r3, r3, r1
 21277 0096 B433     		adds	r3, r3, #180
 21278 0098 0022     		movs	r2, #0
 21279 009a 1A60     		str	r2, [r3]
2882:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 466


 21280              		.loc 1 2882 0
 21281 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21282 009e 9049     		ldr	r1, .L845
 21283 00a0 1346     		mov	r3, r2
 21284 00a2 DB00     		lsls	r3, r3, #3
 21285 00a4 9B1A     		subs	r3, r3, r2
 21286 00a6 1B01     		lsls	r3, r3, #4
 21287 00a8 0B44     		add	r3, r3, r1
 21288 00aa B833     		adds	r3, r3, #184
 21289 00ac 4FF4E572 		mov	r2, #458
 21290 00b0 1A60     		str	r2, [r3]
2883:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 21291              		.loc 1 2883 0
 21292 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21293 00b4 8A49     		ldr	r1, .L845
 21294 00b6 1346     		mov	r3, r2
 21295 00b8 DB00     		lsls	r3, r3, #3
 21296 00ba 9B1A     		subs	r3, r3, r2
 21297 00bc 1B01     		lsls	r3, r3, #4
 21298 00be 0B44     		add	r3, r3, r1
 21299 00c0 BC33     		adds	r3, r3, #188
 21300 00c2 4FF48032 		mov	r2, #65536
 21301 00c6 1A60     		str	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 21302              		.loc 1 2884 0
 21303 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21304 00ca 8549     		ldr	r1, .L845
 21305 00cc 1346     		mov	r3, r2
 21306 00ce DB00     		lsls	r3, r3, #3
 21307 00d0 9B1A     		subs	r3, r3, r2
 21308 00d2 1B01     		lsls	r3, r3, #4
 21309 00d4 0B44     		add	r3, r3, r1
 21310 00d6 C033     		adds	r3, r3, #192
 21311 00d8 4122     		movs	r2, #65
 21312 00da 1A60     		str	r2, [r3]
2885:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 21313              		.loc 1 2885 0
 21314 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21315 00de 8049     		ldr	r1, .L845
 21316 00e0 1346     		mov	r3, r2
 21317 00e2 DB00     		lsls	r3, r3, #3
 21318 00e4 9B1A     		subs	r3, r3, r2
 21319 00e6 1B01     		lsls	r3, r3, #4
 21320 00e8 0B44     		add	r3, r3, r1
 21321 00ea C433     		adds	r3, r3, #196
 21322 00ec 0022     		movs	r2, #0
 21323 00ee 1A60     		str	r2, [r3]
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 21324              		.loc 1 2887 0
 21325 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21326 00f2 7B49     		ldr	r1, .L845
 21327 00f4 1346     		mov	r3, r2
 21328 00f6 DB00     		lsls	r3, r3, #3
 21329 00f8 9B1A     		subs	r3, r3, r2
 21330 00fa 1B01     		lsls	r3, r3, #4
 21331 00fc 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 467


 21332 00fe C833     		adds	r3, r3, #200
 21333 0100 41F69912 		movw	r2, #6553
 21334 0104 1A60     		str	r2, [r3]
2888:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 21335              		.loc 1 2888 0
 21336 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21337 0108 7549     		ldr	r1, .L845
 21338 010a 1346     		mov	r3, r2
 21339 010c DB00     		lsls	r3, r3, #3
 21340 010e 9B1A     		subs	r3, r3, r2
 21341 0110 1B01     		lsls	r3, r3, #4
 21342 0112 0B44     		add	r3, r3, r1
 21343 0114 CC33     		adds	r3, r3, #204
 21344 0116 0022     		movs	r2, #0
 21345 0118 1A60     		str	r2, [r3]
2889:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 21346              		.loc 1 2889 0
 21347 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21348 011c 7049     		ldr	r1, .L845
 21349 011e 1346     		mov	r3, r2
 21350 0120 DB00     		lsls	r3, r3, #3
 21351 0122 9B1A     		subs	r3, r3, r2
 21352 0124 1B01     		lsls	r3, r3, #4
 21353 0126 0B44     		add	r3, r3, r1
 21354 0128 D033     		adds	r3, r3, #208
 21355 012a 0022     		movs	r2, #0
 21356 012c 1A60     		str	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 21357              		.loc 1 2890 0
 21358 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21359 0130 6B49     		ldr	r1, .L845
 21360 0132 1346     		mov	r3, r2
 21361 0134 DB00     		lsls	r3, r3, #3
 21362 0136 9B1A     		subs	r3, r3, r2
 21363 0138 1B01     		lsls	r3, r3, #4
 21364 013a 0B44     		add	r3, r3, r1
 21365 013c D433     		adds	r3, r3, #212
 21366 013e 44F6CC42 		movw	r2, #19660
 21367 0142 1A60     		str	r2, [r3]
2891:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 21368              		.loc 1 2891 0
 21369 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21370 0146 6649     		ldr	r1, .L845
 21371 0148 1346     		mov	r3, r2
 21372 014a DB00     		lsls	r3, r3, #3
 21373 014c 9B1A     		subs	r3, r3, r2
 21374 014e 1B01     		lsls	r3, r3, #4
 21375 0150 0B44     		add	r3, r3, r1
 21376 0152 D833     		adds	r3, r3, #216
 21377 0154 0D22     		movs	r2, #13
 21378 0156 1A60     		str	r2, [r3]
2892:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 21379              		.loc 1 2892 0
 21380 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21381 015a 6149     		ldr	r1, .L845
 21382 015c 1346     		mov	r3, r2
 21383 015e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 468


 21384 0160 9B1A     		subs	r3, r3, r2
 21385 0162 1B01     		lsls	r3, r3, #4
 21386 0164 0B44     		add	r3, r3, r1
 21387 0166 DC33     		adds	r3, r3, #220
 21388 0168 0022     		movs	r2, #0
 21389 016a 1A60     		str	r2, [r3]
2893:..\src/command_processing.c **** 
2894:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 21390              		.loc 1 2894 0
 21391 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21392 016e 5C49     		ldr	r1, .L845
 21393 0170 1346     		mov	r3, r2
 21394 0172 DB00     		lsls	r3, r3, #3
 21395 0174 9B1A     		subs	r3, r3, r2
 21396 0176 1B01     		lsls	r3, r3, #4
 21397 0178 0B44     		add	r3, r3, r1
 21398 017a E033     		adds	r3, r3, #224
 21399 017c 0122     		movs	r2, #1
 21400 017e 1A70     		strb	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 21401              		.loc 1 2895 0
 21402 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21403 0182 5749     		ldr	r1, .L845
 21404 0184 1346     		mov	r3, r2
 21405 0186 DB00     		lsls	r3, r3, #3
 21406 0188 9B1A     		subs	r3, r3, r2
 21407 018a 1B01     		lsls	r3, r3, #4
 21408 018c 0B44     		add	r3, r3, r1
 21409 018e E133     		adds	r3, r3, #225
 21410 0190 0022     		movs	r2, #0
 21411 0192 1A70     		strb	r2, [r3]
2896:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 21412              		.loc 1 2896 0
 21413 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21414 0196 5249     		ldr	r1, .L845
 21415 0198 1346     		mov	r3, r2
 21416 019a DB00     		lsls	r3, r3, #3
 21417 019c 9B1A     		subs	r3, r3, r2
 21418 019e 1B01     		lsls	r3, r3, #4
 21419 01a0 0B44     		add	r3, r3, r1
 21420 01a2 E233     		adds	r3, r3, #226
 21421 01a4 0022     		movs	r2, #0
 21422 01a6 1A70     		strb	r2, [r3]
2897:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 21423              		.loc 1 2897 0
 21424 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21425 01aa 4D49     		ldr	r1, .L845
 21426 01ac 1346     		mov	r3, r2
 21427 01ae DB00     		lsls	r3, r3, #3
 21428 01b0 9B1A     		subs	r3, r3, r2
 21429 01b2 1B01     		lsls	r3, r3, #4
 21430 01b4 0B44     		add	r3, r3, r1
 21431 01b6 03F58773 		add	r3, r3, #270
 21432 01ba 0022     		movs	r2, #0
 21433 01bc 1A70     		strb	r2, [r3]
2898:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 21434              		.loc 1 2898 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 469


 21435 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21436 01c0 4749     		ldr	r1, .L845
 21437 01c2 1346     		mov	r3, r2
 21438 01c4 DB00     		lsls	r3, r3, #3
 21439 01c6 9B1A     		subs	r3, r3, r2
 21440 01c8 1B01     		lsls	r3, r3, #4
 21441 01ca 0B44     		add	r3, r3, r1
 21442 01cc 03F20F13 		addw	r3, r3, #271
 21443 01d0 0022     		movs	r2, #0
 21444 01d2 1A70     		strb	r2, [r3]
2899:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 21445              		.loc 1 2899 0
 21446 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21447 01d6 4249     		ldr	r1, .L845
 21448 01d8 1346     		mov	r3, r2
 21449 01da DB00     		lsls	r3, r3, #3
 21450 01dc 9B1A     		subs	r3, r3, r2
 21451 01de 1B01     		lsls	r3, r3, #4
 21452 01e0 0B44     		add	r3, r3, r1
 21453 01e2 F033     		adds	r3, r3, #240
 21454 01e4 0022     		movs	r2, #0
 21455 01e6 1A60     		str	r2, [r3]
2900:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 21456              		.loc 1 2900 0
 21457 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21458 01ea 3D49     		ldr	r1, .L845
 21459 01ec 1346     		mov	r3, r2
 21460 01ee DB00     		lsls	r3, r3, #3
 21461 01f0 9B1A     		subs	r3, r3, r2
 21462 01f2 1B01     		lsls	r3, r3, #4
 21463 01f4 0B44     		add	r3, r3, r1
 21464 01f6 EC33     		adds	r3, r3, #236
 21465 01f8 0022     		movs	r2, #0
 21466 01fa 1A60     		str	r2, [r3]
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21467              		.loc 1 2901 0
 21468 01fc 0023     		movs	r3, #0
 21469 01fe BB71     		strb	r3, [r7, #6]
 21470 0200 10E0     		b	.L824
 21471              	.L825:
2902:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 21472              		.loc 1 2902 0 discriminator 3
 21473 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21474 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21475 0206 3648     		ldr	r0, .L845
 21476 0208 1346     		mov	r3, r2
 21477 020a DB00     		lsls	r3, r3, #3
 21478 020c 9B1A     		subs	r3, r3, r2
 21479 020e 9B00     		lsls	r3, r3, #2
 21480 0210 0B44     		add	r3, r3, r1
 21481 0212 3C33     		adds	r3, r3, #60
 21482 0214 9B00     		lsls	r3, r3, #2
 21483 0216 0344     		add	r3, r3, r0
 21484 0218 4FF00002 		mov	r2, #0
 21485 021c 5A60     		str	r2, [r3, #4]	@ float
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21486              		.loc 1 2901 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 470


 21487 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21488 0220 0133     		adds	r3, r3, #1
 21489 0222 BB71     		strb	r3, [r7, #6]
 21490              	.L824:
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 21491              		.loc 1 2901 0 is_stmt 0 discriminator 1
 21492 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21493 0226 052B     		cmp	r3, #5
 21494 0228 EBD9     		bls	.L825
2903:..\src/command_processing.c ****         }
2904:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 21495              		.loc 1 2904 0 is_stmt 1 discriminator 2
 21496 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21497 022c 2C49     		ldr	r1, .L845
 21498 022e 1346     		mov	r3, r2
 21499 0230 DB00     		lsls	r3, r3, #3
 21500 0232 9B1A     		subs	r3, r3, r2
 21501 0234 1B01     		lsls	r3, r3, #4
 21502 0236 0B44     		add	r3, r3, r1
 21503 0238 03F58673 		add	r3, r3, #268
 21504 023c 40F2DC52 		movw	r2, #1500
 21505 0240 1A80     		strh	r2, [r3]	@ movhi
2905:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 21506              		.loc 1 2905 0 discriminator 2
 21507 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21508 0244 2649     		ldr	r1, .L845
 21509 0246 1346     		mov	r3, r2
 21510 0248 DB00     		lsls	r3, r3, #3
 21511 024a 9B1A     		subs	r3, r3, r2
 21512 024c 1B01     		lsls	r3, r3, #4
 21513 024e 0B44     		add	r3, r3, r1
 21514 0250 03F58873 		add	r3, r3, #272
 21515 0254 FA79     		ldrb	r2, [r7, #7]
 21516 0256 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 21517              		.loc 1 2906 0 discriminator 2
 21518 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21519 025a 2149     		ldr	r1, .L845
 21520 025c 1346     		mov	r3, r2
 21521 025e DB00     		lsls	r3, r3, #3
 21522 0260 9B1A     		subs	r3, r3, r2
 21523 0262 1B01     		lsls	r3, r3, #4
 21524 0264 0B44     		add	r3, r3, r1
 21525 0266 E333     		adds	r3, r3, #227
 21526 0268 0122     		movs	r2, #1
 21527 026a 1A70     		strb	r2, [r3]
2907:..\src/command_processing.c ****         
2908:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21528              		.loc 1 2908 0 discriminator 2
 21529 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21530 026e 1C49     		ldr	r1, .L845
 21531 0270 1346     		mov	r3, r2
 21532 0272 DB00     		lsls	r3, r3, #3
 21533 0274 9B1A     		subs	r3, r3, r2
 21534 0276 1B01     		lsls	r3, r3, #4
 21535 0278 0B44     		add	r3, r3, r1
 21536 027a 03F21113 		addw	r3, r3, #273
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 471


 21537 027e 0122     		movs	r2, #1
 21538 0280 1A70     		strb	r2, [r3]
2909:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 21539              		.loc 1 2909 0 discriminator 2
 21540 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21541 0284 1649     		ldr	r1, .L845
 21542 0286 1346     		mov	r3, r2
 21543 0288 DB00     		lsls	r3, r3, #3
 21544 028a 9B1A     		subs	r3, r3, r2
 21545 028c 1B01     		lsls	r3, r3, #4
 21546 028e 0B44     		add	r3, r3, r1
 21547 0290 03F58973 		add	r3, r3, #274
 21548 0294 0022     		movs	r2, #0
 21549 0296 1A70     		strb	r2, [r3]
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21550              		.loc 1 2879 0 discriminator 2
 21551 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21552 029a 0133     		adds	r3, r3, #1
 21553 029c FB71     		strb	r3, [r7, #7]
 21554              	.L823:
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 21555              		.loc 1 2879 0 is_stmt 0 discriminator 1
 21556 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21557 02a0 012B     		cmp	r3, #1
 21558 02a2 7FF6E6AE 		bls	.L826
2910:..\src/command_processing.c ****     }
2911:..\src/command_processing.c ****     
2912:..\src/command_processing.c ****     // ENC STRUCT
2913:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 21559              		.loc 1 2913 0 is_stmt 1
 21560 02a6 0023     		movs	r3, #0
 21561 02a8 FB71     		strb	r3, [r7, #7]
 21562 02aa 98E0     		b	.L827
 21563              	.L834:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21564              		.loc 1 2914 0
 21565 02ac 0023     		movs	r3, #0
 21566 02ae BB71     		strb	r3, [r7, #6]
 21567 02b0 0FE0     		b	.L828
 21568              	.L829:
2915:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 21569              		.loc 1 2915 0 discriminator 3
 21570 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21571 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21572 02b6 0A48     		ldr	r0, .L845
 21573 02b8 1346     		mov	r3, r2
 21574 02ba 5B00     		lsls	r3, r3, #1
 21575 02bc 1344     		add	r3, r3, r2
 21576 02be 1B01     		lsls	r3, r3, #4
 21577 02c0 0344     		add	r3, r3, r0
 21578 02c2 0B44     		add	r3, r3, r1
 21579 02c4 03F5C873 		add	r3, r3, #400
 21580 02c8 0022     		movs	r2, #0
 21581 02ca 1A70     		strb	r2, [r3]
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21582              		.loc 1 2914 0 discriminator 3
 21583 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 472


 21584 02ce 0133     		adds	r3, r3, #1
 21585 02d0 BB71     		strb	r3, [r7, #6]
 21586              	.L828:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21587              		.loc 1 2914 0 is_stmt 0 discriminator 1
 21588 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21589 02d4 042B     		cmp	r3, #4
 21590 02d6 ECD9     		bls	.L829
2916:..\src/command_processing.c ****         }
2917:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21591              		.loc 1 2917 0 is_stmt 1
 21592 02d8 0023     		movs	r3, #0
 21593 02da BB71     		strb	r3, [r7, #6]
 21594 02dc 2CE0     		b	.L830
 21595              	.L846:
 21596 02de 00BF     		.align	2
 21597              	.L845:
 21598 02e0 00000000 		.word	g_mem
 21599              	.L831:
2918:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21600              		.loc 1 2918 0 discriminator 3
 21601 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21602 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21603 02e8 BC48     		ldr	r0, .L847
 21604 02ea 1346     		mov	r3, r2
 21605 02ec 5B00     		lsls	r3, r3, #1
 21606 02ee 1344     		add	r3, r3, r2
 21607 02f0 1B01     		lsls	r3, r3, #4
 21608 02f2 0344     		add	r3, r3, r0
 21609 02f4 0B44     		add	r3, r3, r1
 21610 02f6 03F29513 		addw	r3, r3, #405
 21611 02fa 0322     		movs	r2, #3
 21612 02fc 1A70     		strb	r2, [r3]
2919:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 21613              		.loc 1 2919 0 discriminator 3
 21614 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21615 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21616 0302 B648     		ldr	r0, .L847
 21617 0304 1346     		mov	r3, r2
 21618 0306 5B00     		lsls	r3, r3, #1
 21619 0308 1344     		add	r3, r3, r2
 21620 030a 9B00     		lsls	r3, r3, #2
 21621 030c 0B44     		add	r3, r3, r1
 21622 030e 6833     		adds	r3, r3, #104
 21623 0310 9B00     		lsls	r3, r3, #2
 21624 0312 0344     		add	r3, r3, r0
 21625 0314 4FF07E52 		mov	r2, #1065353216
 21626 0318 5A60     		str	r2, [r3, #4]	@ float
2920:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 21627              		.loc 1 2920 0 discriminator 3
 21628 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21629 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21630 031e AF48     		ldr	r0, .L847
 21631 0320 1346     		mov	r3, r2
 21632 0322 5B00     		lsls	r3, r3, #1
 21633 0324 1344     		add	r3, r3, r2
 21634 0326 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 473


 21635 0328 0B44     		add	r3, r3, r1
 21636 032a 6633     		adds	r3, r3, #102
 21637 032c 0022     		movs	r2, #0
 21638 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21639              		.loc 1 2917 0 discriminator 3
 21640 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21641 0334 0133     		adds	r3, r3, #1
 21642 0336 BB71     		strb	r3, [r7, #6]
 21643              	.L830:
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 21644              		.loc 1 2917 0 is_stmt 0 discriminator 1
 21645 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21646 033a 022B     		cmp	r3, #2
 21647 033c D2D9     		bls	.L831
2921:..\src/command_processing.c ****         }
2922:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 21648              		.loc 1 2922 0 is_stmt 1
 21649 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21650 0340 A649     		ldr	r1, .L847
 21651 0342 1346     		mov	r3, r2
 21652 0344 5B00     		lsls	r3, r3, #1
 21653 0346 1344     		add	r3, r3, r2
 21654 0348 1B01     		lsls	r3, r3, #4
 21655 034a 0B44     		add	r3, r3, r1
 21656 034c 03F5D873 		add	r3, r3, #432
 21657 0350 0022     		movs	r2, #0
 21658 0352 1A70     		strb	r2, [r3]
2923:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 21659              		.loc 1 2923 0
 21660 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21661 0356 A149     		ldr	r1, .L847
 21662 0358 1346     		mov	r3, r2
 21663 035a 5B00     		lsls	r3, r3, #1
 21664 035c 1344     		add	r3, r3, r2
 21665 035e 1B01     		lsls	r3, r3, #4
 21666 0360 0B44     		add	r3, r3, r1
 21667 0362 03F5DA73 		add	r3, r3, #436
 21668 0366 1622     		movs	r2, #22
 21669 0368 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21670              		.loc 1 2924 0
 21671 036a 0023     		movs	r3, #0
 21672 036c BB71     		strb	r3, [r7, #6]
 21673 036e 0FE0     		b	.L832
 21674              	.L833:
2925:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 21675              		.loc 1 2925 0 discriminator 3
 21676 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21677 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21678 0374 9948     		ldr	r0, .L847
 21679 0376 1346     		mov	r3, r2
 21680 0378 5B00     		lsls	r3, r3, #1
 21681 037a 1344     		add	r3, r3, r2
 21682 037c 1B01     		lsls	r3, r3, #4
 21683 037e 0344     		add	r3, r3, r0
 21684 0380 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 474


 21685 0382 03F2B113 		addw	r3, r3, #433
 21686 0386 BA79     		ldrb	r2, [r7, #6]
 21687 0388 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21688              		.loc 1 2924 0 discriminator 3
 21689 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21690 038c 0133     		adds	r3, r3, #1
 21691 038e BB71     		strb	r3, [r7, #6]
 21692              	.L832:
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 21693              		.loc 1 2924 0 is_stmt 0 discriminator 1
 21694 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21695 0392 022B     		cmp	r3, #2
 21696 0394 ECD9     		bls	.L833
2926:..\src/command_processing.c ****         }
2927:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 21697              		.loc 1 2927 0 is_stmt 1 discriminator 2
 21698 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21699 0398 9049     		ldr	r1, .L847
 21700 039a 1346     		mov	r3, r2
 21701 039c 5B00     		lsls	r3, r3, #1
 21702 039e 1344     		add	r3, r3, r2
 21703 03a0 1B01     		lsls	r3, r3, #4
 21704 03a2 0B44     		add	r3, r3, r1
 21705 03a4 03F2B513 		addw	r3, r3, #437
 21706 03a8 0F22     		movs	r2, #15
 21707 03aa 1A70     		strb	r2, [r3]
2928:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 21708              		.loc 1 2928 0 discriminator 2
 21709 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21710 03ae 8B49     		ldr	r1, .L847
 21711 03b0 1346     		mov	r3, r2
 21712 03b2 5B00     		lsls	r3, r3, #1
 21713 03b4 1344     		add	r3, r3, r2
 21714 03b6 1B01     		lsls	r3, r3, #4
 21715 03b8 0B44     		add	r3, r3, r1
 21716 03ba 03F5DB73 		add	r3, r3, #438
 21717 03be 0E22     		movs	r2, #14
 21718 03c0 1A70     		strb	r2, [r3]
2929:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 21719              		.loc 1 2929 0 discriminator 2
 21720 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21721 03c4 8549     		ldr	r1, .L847
 21722 03c6 1346     		mov	r3, r2
 21723 03c8 5B00     		lsls	r3, r3, #1
 21724 03ca 1344     		add	r3, r3, r2
 21725 03cc 1B01     		lsls	r3, r3, #4
 21726 03ce 0B44     		add	r3, r3, r1
 21727 03d0 03F2B713 		addw	r3, r3, #439
 21728 03d4 0122     		movs	r2, #1
 21729 03d6 1A70     		strb	r2, [r3]
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21730              		.loc 1 2913 0 discriminator 2
 21731 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21732 03da 0133     		adds	r3, r3, #1
 21733 03dc FB71     		strb	r3, [r7, #7]
 21734              	.L827:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 475


2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 21735              		.loc 1 2913 0 is_stmt 0 discriminator 1
 21736 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21737 03e0 012B     		cmp	r3, #1
 21738 03e2 7FF663AF 		bls	.L834
2930:..\src/command_processing.c ****     }
2931:..\src/command_processing.c ****     
2932:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 21739              		.loc 1 2932 0 is_stmt 1
 21740 03e6 0023     		movs	r3, #0
 21741 03e8 FB71     		strb	r3, [r7, #7]
 21742 03ea 2EE0     		b	.L835
 21743              	.L836:
2933:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21744              		.loc 1 2933 0 discriminator 3
 21745 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21746 03ee 7B49     		ldr	r1, .L847
 21747 03f0 1346     		mov	r3, r2
 21748 03f2 DB00     		lsls	r3, r3, #3
 21749 03f4 9B1A     		subs	r3, r3, r2
 21750 03f6 1B01     		lsls	r3, r3, #4
 21751 03f8 0B44     		add	r3, r3, r1
 21752 03fa E433     		adds	r3, r3, #228
 21753 03fc 0022     		movs	r2, #0
 21754 03fe 1A60     		str	r2, [r3]
2934:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 21755              		.loc 1 2934 0 discriminator 3
 21756 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21757 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 21758 0404 7548     		ldr	r0, .L847
 21759 0406 0B46     		mov	r3, r1
 21760 0408 DB00     		lsls	r3, r3, #3
 21761 040a 5B1A     		subs	r3, r3, r1
 21762 040c 1B01     		lsls	r3, r3, #4
 21763 040e 0344     		add	r3, r3, r0
 21764 0410 03F58873 		add	r3, r3, #272
 21765 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21766 0416 1846     		mov	r0, r3
 21767 0418 7049     		ldr	r1, .L847
 21768 041a 0346     		mov	r3, r0
 21769 041c 5B00     		lsls	r3, r3, #1
 21770 041e 0344     		add	r3, r3, r0
 21771 0420 1B01     		lsls	r3, r3, #4
 21772 0422 0B44     		add	r3, r3, r1
 21773 0424 03F29513 		addw	r3, r3, #405
 21774 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21775 042a 1946     		mov	r1, r3
 21776 042c 44F63823 		movw	r3, #19000
 21777 0430 03FA01F1 		lsl	r1, r3, r1
 21778 0434 6948     		ldr	r0, .L847
 21779 0436 1346     		mov	r3, r2
 21780 0438 DB00     		lsls	r3, r3, #3
 21781 043a 9B1A     		subs	r3, r3, r2
 21782 043c 1B01     		lsls	r3, r3, #4
 21783 043e 0344     		add	r3, r3, r0
 21784 0440 E833     		adds	r3, r3, #232
 21785 0442 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 476


2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21786              		.loc 1 2932 0 discriminator 3
 21787 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21788 0446 0133     		adds	r3, r3, #1
 21789 0448 FB71     		strb	r3, [r7, #7]
 21790              	.L835:
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 21791              		.loc 1 2932 0 is_stmt 0 discriminator 1
 21792 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21793 044c 012B     		cmp	r3, #1
 21794 044e CDD9     		bls	.L836
2935:..\src/command_processing.c ****     }
2936:..\src/command_processing.c ****     
2937:..\src/command_processing.c ****     // EMG STRUCT     
2938:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 21795              		.loc 1 2938 0 is_stmt 1
 21796 0450 624B     		ldr	r3, .L847
 21797 0452 C822     		movs	r2, #200
 21798 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2939:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 21799              		.loc 1 2939 0
 21800 0458 604B     		ldr	r3, .L847
 21801 045a C822     		movs	r2, #200
 21802 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2940:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 21803              		.loc 1 2940 0
 21804 0460 5E4B     		ldr	r3, .L847
 21805 0462 4FF48062 		mov	r2, #1024
 21806 0466 C3F8F421 		str	r2, [r3, #500]
2941:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 21807              		.loc 1 2941 0
 21808 046a 5C4B     		ldr	r3, .L847
 21809 046c 4FF48062 		mov	r2, #1024
 21810 0470 C3F8F821 		str	r2, [r3, #504]
2942:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 21811              		.loc 1 2942 0
 21812 0474 594B     		ldr	r3, .L847
 21813 0476 6422     		movs	r2, #100
 21814 0478 83F8FC21 		strb	r2, [r3, #508]
2943:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 21815              		.loc 1 2943 0
 21816 047c 574B     		ldr	r3, .L847
 21817 047e 6422     		movs	r2, #100
 21818 0480 83F8FD21 		strb	r2, [r3, #509]
2944:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 21819              		.loc 1 2944 0
 21820 0484 554B     		ldr	r3, .L847
 21821 0486 0022     		movs	r2, #0
 21822 0488 83F8FE21 		strb	r2, [r3, #510]
2945:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 21823              		.loc 1 2945 0
 21824 048c 534B     		ldr	r3, .L847
 21825 048e 0022     		movs	r2, #0
 21826 0490 83F8FF21 		strb	r2, [r3, #511]
2946:..\src/command_processing.c **** 
2947:..\src/command_processing.c ****     // IMU STRUCT
2948:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 477


 21827              		.loc 1 2948 0
 21828 0494 514B     		ldr	r3, .L847
 21829 0496 0022     		movs	r2, #0
 21830 0498 83F80022 		strb	r2, [r3, #512]
2949:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 21831              		.loc 1 2949 0
 21832 049c 4F4B     		ldr	r3, .L847
 21833 049e 0022     		movs	r2, #0
 21834 04a0 83F80122 		strb	r2, [r3, #513]
2950:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 21835              		.loc 1 2950 0
 21836 04a4 0023     		movs	r3, #0
 21837 04a6 FB71     		strb	r3, [r7, #7]
 21838 04a8 34E0     		b	.L837
 21839              	.L838:
2951:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21840              		.loc 1 2951 0 discriminator 3
 21841 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21842 04ac 4B49     		ldr	r1, .L847
 21843 04ae 1346     		mov	r3, r2
 21844 04b0 9B00     		lsls	r3, r3, #2
 21845 04b2 1344     		add	r3, r3, r2
 21846 04b4 0B44     		add	r3, r3, r1
 21847 04b6 03F20223 		addw	r3, r3, #514
 21848 04ba 0122     		movs	r2, #1
 21849 04bc 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 21850              		.loc 1 2952 0 discriminator 3
 21851 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21852 04c0 4649     		ldr	r1, .L847
 21853 04c2 1346     		mov	r3, r2
 21854 04c4 9B00     		lsls	r3, r3, #2
 21855 04c6 1344     		add	r3, r3, r2
 21856 04c8 0B44     		add	r3, r3, r1
 21857 04ca 03F20323 		addw	r3, r3, #515
 21858 04ce 0122     		movs	r2, #1
 21859 04d0 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 21860              		.loc 1 2953 0 discriminator 3
 21861 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21862 04d4 4149     		ldr	r1, .L847
 21863 04d6 1346     		mov	r3, r2
 21864 04d8 9B00     		lsls	r3, r3, #2
 21865 04da 1344     		add	r3, r3, r2
 21866 04dc 0B44     		add	r3, r3, r1
 21867 04de 03F50173 		add	r3, r3, #516
 21868 04e2 0022     		movs	r2, #0
 21869 04e4 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 21870              		.loc 1 2954 0 discriminator 3
 21871 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21872 04e8 3C49     		ldr	r1, .L847
 21873 04ea 1346     		mov	r3, r2
 21874 04ec 9B00     		lsls	r3, r3, #2
 21875 04ee 1344     		add	r3, r3, r2
 21876 04f0 0B44     		add	r3, r3, r1
 21877 04f2 03F20523 		addw	r3, r3, #517
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 478


 21878 04f6 0022     		movs	r2, #0
 21879 04f8 1A70     		strb	r2, [r3]
2955:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 21880              		.loc 1 2955 0 discriminator 3
 21881 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21882 04fc 3749     		ldr	r1, .L847
 21883 04fe 1346     		mov	r3, r2
 21884 0500 9B00     		lsls	r3, r3, #2
 21885 0502 1344     		add	r3, r3, r2
 21886 0504 0B44     		add	r3, r3, r1
 21887 0506 03F20623 		addw	r3, r3, #518
 21888 050a 0022     		movs	r2, #0
 21889 050c 1A70     		strb	r2, [r3]
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21890              		.loc 1 2950 0 discriminator 3
 21891 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21892 0510 0133     		adds	r3, r3, #1
 21893 0512 FB71     		strb	r3, [r7, #7]
 21894              	.L837:
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 21895              		.loc 1 2950 0 is_stmt 0 discriminator 1
 21896 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21897 0516 042B     		cmp	r3, #4
 21898 0518 C7D9     		bls	.L838
2956:..\src/command_processing.c ****     }
2957:..\src/command_processing.c ****      
2958:..\src/command_processing.c ****     // EXP STRUCT
2959:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 21899              		.loc 1 2959 0 is_stmt 1
 21900 051a 304B     		ldr	r3, .L847
 21901 051c 0022     		movs	r2, #0
 21902 051e 83F82622 		strb	r2, [r3, #550]
2960:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 21903              		.loc 1 2960 0
 21904 0522 2E4B     		ldr	r3, .L847
 21905 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 21906 0528 1233     		adds	r3, r3, #18
 21907 052a 5B01     		lsls	r3, r3, #5
 21908 052c 2B4A     		ldr	r2, .L847
 21909 052e 1344     		add	r3, r3, r2
 21910 0530 2B4A     		ldr	r2, .L847+4
 21911 0532 1068     		ldr	r0, [r2]	@ unaligned
 21912 0534 1860     		str	r0, [r3]	@ unaligned
 21913 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 21914 0538 9279     		ldrb	r2, [r2, #6]
 21915 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 21916 053c 9A71     		strb	r2, [r3, #6]
2961:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21917              		.loc 1 2961 0
 21918 053e 274B     		ldr	r3, .L847
 21919 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21920 0544 012B     		cmp	r3, #1
 21921 0546 13D1     		bne	.L839
2962:..\src/command_processing.c ****         // Set date of maintenance from RTC
2963:..\src/command_processing.c ****         store_RTC_current_time();
 21922              		.loc 1 2963 0
 21923 0548 FFF7FEFF 		bl	store_RTC_current_time
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 479


2964:..\src/command_processing.c ****         
2965:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 21924              		.loc 1 2965 0
 21925 054c 234B     		ldr	r3, .L847
 21926 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 21927 0552 224B     		ldr	r3, .L847
 21928 0554 83F8A420 		strb	r2, [r3, #164]
2966:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 21929              		.loc 1 2966 0
 21930 0558 204B     		ldr	r3, .L847
 21931 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 21932 055e 1F4B     		ldr	r3, .L847
 21933 0560 83F8A520 		strb	r2, [r3, #165]
2967:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 21934              		.loc 1 2967 0
 21935 0564 1D4B     		ldr	r3, .L847
 21936 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 21937 056a 1C4B     		ldr	r3, .L847
 21938 056c 83F8A620 		strb	r2, [r3, #166]
 21939              	.L839:
2968:..\src/command_processing.c ****     }
2969:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 21940              		.loc 1 2969 0
 21941 0570 1A4B     		ldr	r3, .L847
 21942 0572 0022     		movs	r2, #0
 21943 0574 83F82722 		strb	r2, [r3, #551]
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21944              		.loc 1 2970 0
 21945 0578 0023     		movs	r3, #0
 21946 057a FB71     		strb	r3, [r7, #7]
 21947 057c 08E0     		b	.L840
 21948              	.L841:
2971:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 21949              		.loc 1 2971 0 discriminator 3
 21950 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21951 0580 164A     		ldr	r2, .L847
 21952 0582 1344     		add	r3, r3, r2
 21953 0584 0022     		movs	r2, #0
 21954 0586 83F82822 		strb	r2, [r3, #552]
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21955              		.loc 1 2970 0 discriminator 3
 21956 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21957 058c 0133     		adds	r3, r3, #1
 21958 058e FB71     		strb	r3, [r7, #7]
 21959              	.L840:
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 21960              		.loc 1 2970 0 is_stmt 0 discriminator 1
 21961 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21962 0592 0B2B     		cmp	r3, #11
 21963 0594 F3D9     		bls	.L841
2972:..\src/command_processing.c ****     }
2973:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
2974:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 21964              		.loc 1 2974 0 is_stmt 1
 21965 0596 114B     		ldr	r3, .L847
 21966 0598 0122     		movs	r2, #1
 21967 059a 83F82A22 		strb	r2, [r3, #554]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 480


2975:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 21968              		.loc 1 2975 0
 21969 059e 0F4B     		ldr	r3, .L847
 21970 05a0 0122     		movs	r2, #1
 21971 05a2 83F82B22 		strb	r2, [r3, #555]
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2978:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2979:..\src/command_processing.c ****     memInit_SoftHandPro();
2980:..\src/command_processing.c **** #endif 
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c **** #ifdef MASTER_FW
2983:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
2984:..\src/command_processing.c ****     memInit_Master();
2985:..\src/command_processing.c **** #endif 
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
2988:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chmabers device
2989:..\src/command_processing.c ****     memInit_AirChambersFb();
2990:..\src/command_processing.c **** #endif 
2991:..\src/command_processing.c **** 
2992:..\src/command_processing.c ****     // Default generic user_id
2993:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 21972              		.loc 1 2993 0
 21973 05a6 0D4B     		ldr	r3, .L847
 21974 05a8 0022     		movs	r2, #0
 21975 05aa 83F8AB20 		strb	r2, [r3, #171]
2994:..\src/command_processing.c **** 
2995:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2996:..\src/command_processing.c ****     g_mem.flag = TRUE;
 21976              		.loc 1 2996 0
 21977 05ae 0B4B     		ldr	r3, .L847
 21978 05b0 0122     		movs	r2, #1
 21979 05b2 1A70     		strb	r2, [r3]
2997:..\src/command_processing.c ****     
2998:..\src/command_processing.c ****     //write that configuration to EEPROM
2999:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 21980              		.loc 1 2999 0
 21981 05b4 0020     		movs	r0, #0
 21982 05b6 FFF7FEFF 		bl	memStore
 21983 05ba 0346     		mov	r3, r0
 21984 05bc 002B     		cmp	r3, #0
 21985 05be 07D0     		beq	.L842
 21986              		.loc 1 2999 0 is_stmt 0 discriminator 1
 21987 05c0 3220     		movs	r0, #50
 21988 05c2 FFF7FEFF 		bl	memStore
 21989 05c6 0346     		mov	r3, r0
 21990 05c8 002B     		cmp	r3, #0
 21991 05ca 01D0     		beq	.L842
 21992              		.loc 1 2999 0 discriminator 3
 21993 05cc 0123     		movs	r3, #1
 21994 05ce 00E0     		b	.L843
 21995              	.L842:
 21996              		.loc 1 2999 0 discriminator 4
 21997 05d0 0023     		movs	r3, #0
 21998              	.L843:
 21999              		.loc 1 2999 0 discriminator 6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 481


 22000 05d2 DBB2     		uxtb	r3, r3
3000:..\src/command_processing.c **** }
 22001              		.loc 1 3000 0 is_stmt 1 discriminator 6
 22002 05d4 1846     		mov	r0, r3
 22003 05d6 0837     		adds	r7, r7, #8
 22004              		.cfi_def_cfa_offset 8
 22005 05d8 BD46     		mov	sp, r7
 22006              		.cfi_def_cfa_register 13
 22007              		@ sp needed
 22008 05da 80BD     		pop	{r7, pc}
 22009              	.L848:
 22010              		.align	2
 22011              	.L847:
 22012 05dc 00000000 		.word	g_mem
 22013 05e0 581C0000 		.word	.LC279
 22014              		.cfi_endproc
 22015              	.LFE86:
 22016              		.size	memInit, .-memInit
 22017              		.section	.rodata
 22018 1c5f 00       		.align	2
 22019              	.LC280:
 22020 1c60 55535230 		.ascii	"USR001\000"
 22020      303100
 22021              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 22022              		.align	2
 22023              		.global	memInit_SoftHandPro
 22024              		.thumb
 22025              		.thumb_func
 22026              		.type	memInit_SoftHandPro, %function
 22027              	memInit_SoftHandPro:
 22028              	.LFB87:
3001:..\src/command_processing.c **** 
3002:..\src/command_processing.c **** //==============================================================================
3003:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3004:..\src/command_processing.c **** //==============================================================================
3005:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3006:..\src/command_processing.c **** {
 22029              		.loc 1 3006 0
 22030              		.cfi_startproc
 22031              		@ args = 0, pretend = 0, frame = 8
 22032              		@ frame_needed = 1, uses_anonymous_args = 0
 22033              		@ link register save eliminated.
 22034 0000 80B4     		push	{r7}
 22035              		.cfi_def_cfa_offset 4
 22036              		.cfi_offset 7, -4
 22037 0002 83B0     		sub	sp, sp, #12
 22038              		.cfi_def_cfa_offset 16
 22039 0004 00AF     		add	r7, sp, #0
 22040              		.cfi_def_cfa_register 7
3007:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 22041              		.loc 1 3007 0
 22042 0006 0023     		movs	r3, #0
 22043 0008 FB70     		strb	r3, [r7, #3]
3008:..\src/command_processing.c ****     
3009:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3010:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 22044              		.loc 1 3010 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 482


 22045 000a 894B     		ldr	r3, .L852
 22046 000c 0122     		movs	r2, #1
 22047 000e 83F8A720 		strb	r2, [r3, #167]
3011:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 22048              		.loc 1 3011 0
 22049 0012 874B     		ldr	r3, .L852
 22050 0014 0022     		movs	r2, #0
 22051 0016 83F8AC20 		strb	r2, [r3, #172]
3012:..\src/command_processing.c ****     
3013:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 22052              		.loc 1 3013 0
 22053 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22054 001c 8449     		ldr	r1, .L852
 22055 001e 1346     		mov	r3, r2
 22056 0020 DB00     		lsls	r3, r3, #3
 22057 0022 9B1A     		subs	r3, r3, r2
 22058 0024 1B01     		lsls	r3, r3, #4
 22059 0026 0B44     		add	r3, r3, r1
 22060 0028 E033     		adds	r3, r3, #224
 22061 002a 0122     		movs	r2, #1
 22062 002c 1A70     		strb	r2, [r3]
3014:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 22063              		.loc 1 3014 0
 22064 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22065 0030 7F49     		ldr	r1, .L852
 22066 0032 1346     		mov	r3, r2
 22067 0034 DB00     		lsls	r3, r3, #3
 22068 0036 9B1A     		subs	r3, r3, r2
 22069 0038 1B01     		lsls	r3, r3, #4
 22070 003a 0B44     		add	r3, r3, r1
 22071 003c 03F58773 		add	r3, r3, #270
 22072 0040 0022     		movs	r2, #0
 22073 0042 1A70     		strb	r2, [r3]
3015:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 22074              		.loc 1 3015 0
 22075 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22076 0046 7A49     		ldr	r1, .L852
 22077 0048 1346     		mov	r3, r2
 22078 004a DB00     		lsls	r3, r3, #3
 22079 004c 9B1A     		subs	r3, r3, r2
 22080 004e 1B01     		lsls	r3, r3, #4
 22081 0050 0B44     		add	r3, r3, r1
 22082 0052 03F20F13 		addw	r3, r3, #271
 22083 0056 0022     		movs	r2, #0
 22084 0058 1A70     		strb	r2, [r3]
3016:..\src/command_processing.c ****     
3017:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3018:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 22085              		.loc 1 3018 0
 22086 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22087 005c 744B     		ldr	r3, .L852
 22088 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 22089 0062 7349     		ldr	r1, .L852
 22090 0064 1346     		mov	r3, r2
 22091 0066 DB00     		lsls	r3, r3, #3
 22092 0068 9B1A     		subs	r3, r3, r2
 22093 006a 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 483


 22094 006c 0B44     		add	r3, r3, r1
 22095 006e 03F58873 		add	r3, r3, #272
 22096 0072 0246     		mov	r2, r0
 22097 0074 1A70     		strb	r2, [r3]
3019:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22098              		.loc 1 3019 0
 22099 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22100 0078 6D49     		ldr	r1, .L852
 22101 007a 1346     		mov	r3, r2
 22102 007c DB00     		lsls	r3, r3, #3
 22103 007e 9B1A     		subs	r3, r3, r2
 22104 0080 1B01     		lsls	r3, r3, #4
 22105 0082 0B44     		add	r3, r3, r1
 22106 0084 03F21113 		addw	r3, r3, #273
 22107 0088 0122     		movs	r2, #1
 22108 008a 1A70     		strb	r2, [r3]
3020:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 22109              		.loc 1 3020 0
 22110 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22111 008e 6849     		ldr	r1, .L852
 22112 0090 1346     		mov	r3, r2
 22113 0092 DB00     		lsls	r3, r3, #3
 22114 0094 9B1A     		subs	r3, r3, r2
 22115 0096 1B01     		lsls	r3, r3, #4
 22116 0098 0B44     		add	r3, r3, r1
 22117 009a 03F58973 		add	r3, r3, #274
 22118 009e 0122     		movs	r2, #1
 22119 00a0 1A70     		strb	r2, [r3]
3021:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 22120              		.loc 1 3021 0
 22121 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22122 00a4 6249     		ldr	r1, .L852
 22123 00a6 1346     		mov	r3, r2
 22124 00a8 DB00     		lsls	r3, r3, #3
 22125 00aa 9B1A     		subs	r3, r3, r2
 22126 00ac 1B01     		lsls	r3, r3, #4
 22127 00ae 0B44     		add	r3, r3, r1
 22128 00b0 E433     		adds	r3, r3, #228
 22129 00b2 0022     		movs	r2, #0
 22130 00b4 1A60     		str	r2, [r3]
3022:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 22131              		.loc 1 3022 0
 22132 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22133 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 22134 00ba 5D48     		ldr	r0, .L852
 22135 00bc 0B46     		mov	r3, r1
 22136 00be DB00     		lsls	r3, r3, #3
 22137 00c0 5B1A     		subs	r3, r3, r1
 22138 00c2 1B01     		lsls	r3, r3, #4
 22139 00c4 0344     		add	r3, r3, r0
 22140 00c6 03F58873 		add	r3, r3, #272
 22141 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22142 00cc 1846     		mov	r0, r3
 22143 00ce 5849     		ldr	r1, .L852
 22144 00d0 0346     		mov	r3, r0
 22145 00d2 5B00     		lsls	r3, r3, #1
 22146 00d4 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 484


 22147 00d6 1B01     		lsls	r3, r3, #4
 22148 00d8 0B44     		add	r3, r3, r1
 22149 00da 03F29513 		addw	r3, r3, #405
 22150 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22151 00e0 1946     		mov	r1, r3
 22152 00e2 4FF47A53 		mov	r3, #16000
 22153 00e6 03FA01F1 		lsl	r1, r3, r1
 22154 00ea 5148     		ldr	r0, .L852
 22155 00ec 1346     		mov	r3, r2
 22156 00ee DB00     		lsls	r3, r3, #3
 22157 00f0 9B1A     		subs	r3, r3, r2
 22158 00f2 1B01     		lsls	r3, r3, #4
 22159 00f4 0344     		add	r3, r3, r0
 22160 00f6 E833     		adds	r3, r3, #232
 22161 00f8 1960     		str	r1, [r3]
 22162              	.LBB21:
3023:..\src/command_processing.c ****     
3024:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 22163              		.loc 1 3024 0
 22164 00fa 0023     		movs	r3, #0
 22165 00fc 7B60     		str	r3, [r7, #4]
 22166 00fe 2EE0     		b	.L850
 22167              	.L851:
3025:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3026:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 22168              		.loc 1 3026 0 discriminator 3
 22169 0100 4B49     		ldr	r1, .L852
 22170 0102 7A68     		ldr	r2, [r7, #4]
 22171 0104 1346     		mov	r3, r2
 22172 0106 5B00     		lsls	r3, r3, #1
 22173 0108 1344     		add	r3, r3, r2
 22174 010a 1B01     		lsls	r3, r3, #4
 22175 010c 0B44     		add	r3, r3, r1
 22176 010e 03F5D873 		add	r3, r3, #432
 22177 0112 0122     		movs	r2, #1
 22178 0114 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 22179              		.loc 1 3027 0 discriminator 3
 22180 0116 4649     		ldr	r1, .L852
 22181 0118 7A68     		ldr	r2, [r7, #4]
 22182 011a 1346     		mov	r3, r2
 22183 011c 5B00     		lsls	r3, r3, #1
 22184 011e 1344     		add	r3, r3, r2
 22185 0120 1B01     		lsls	r3, r3, #4
 22186 0122 0B44     		add	r3, r3, r1
 22187 0124 03F2B513 		addw	r3, r3, #437
 22188 0128 2322     		movs	r2, #35
 22189 012a 1A70     		strb	r2, [r3]
3028:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 22190              		.loc 1 3028 0 discriminator 3
 22191 012c 4049     		ldr	r1, .L852
 22192 012e 7A68     		ldr	r2, [r7, #4]
 22193 0130 1346     		mov	r3, r2
 22194 0132 5B00     		lsls	r3, r3, #1
 22195 0134 1344     		add	r3, r3, r2
 22196 0136 1B01     		lsls	r3, r3, #4
 22197 0138 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 485


 22198 013a 03F5DB73 		add	r3, r3, #438
 22199 013e 0322     		movs	r2, #3
 22200 0140 1A70     		strb	r2, [r3]
3029:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 22201              		.loc 1 3029 0 discriminator 3
 22202 0142 3B49     		ldr	r1, .L852
 22203 0144 7A68     		ldr	r2, [r7, #4]
 22204 0146 1346     		mov	r3, r2
 22205 0148 5B00     		lsls	r3, r3, #1
 22206 014a 1344     		add	r3, r3, r2
 22207 014c 1B01     		lsls	r3, r3, #4
 22208 014e 0B44     		add	r3, r3, r1
 22209 0150 03F2B713 		addw	r3, r3, #439
 22210 0154 FF22     		movs	r2, #255
 22211 0156 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22212              		.loc 1 3024 0 discriminator 3
 22213 0158 7B68     		ldr	r3, [r7, #4]
 22214 015a 0133     		adds	r3, r3, #1
 22215 015c 7B60     		str	r3, [r7, #4]
 22216              	.L850:
3024:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 22217              		.loc 1 3024 0 is_stmt 0 discriminator 1
 22218 015e 7B68     		ldr	r3, [r7, #4]
 22219 0160 012B     		cmp	r3, #1
 22220 0162 CDDD     		ble	.L851
 22221              	.LBE21:
3030:..\src/command_processing.c ****     }
3031:..\src/command_processing.c ****     
3032:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22222              		.loc 1 3032 0 is_stmt 1
 22223 0164 324B     		ldr	r3, .L852
 22224 0166 4FF48062 		mov	r2, #1024
 22225 016a C3F8F421 		str	r2, [r3, #500]
3033:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 22226              		.loc 1 3033 0
 22227 016e 304B     		ldr	r3, .L852
 22228 0170 4FF48062 		mov	r2, #1024
 22229 0174 C3F8F821 		str	r2, [r3, #504]
3034:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22230              		.loc 1 3034 0
 22231 0178 2D4B     		ldr	r3, .L852
 22232 017a C822     		movs	r2, #200
 22233 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3035:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22234              		.loc 1 3035 0
 22235 0180 2B4B     		ldr	r3, .L852
 22236 0182 C822     		movs	r2, #200
 22237 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3036:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 22238              		.loc 1 3036 0
 22239 0188 294B     		ldr	r3, .L852
 22240 018a 6422     		movs	r2, #100
 22241 018c 83F8FC21 		strb	r2, [r3, #508]
3037:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 22242              		.loc 1 3037 0
 22243 0190 274B     		ldr	r3, .L852
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 486


 22244 0192 6422     		movs	r2, #100
 22245 0194 83F8FD21 		strb	r2, [r3, #509]
3038:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 22246              		.loc 1 3038 0
 22247 0198 254B     		ldr	r3, .L852
 22248 019a 0022     		movs	r2, #0
 22249 019c 83F8FE21 		strb	r2, [r3, #510]
3039:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 22250              		.loc 1 3039 0
 22251 01a0 234B     		ldr	r3, .L852
 22252 01a2 0022     		movs	r2, #0
 22253 01a4 83F8FF21 		strb	r2, [r3, #511]
3040:..\src/command_processing.c ****     
3041:..\src/command_processing.c ****     //Initialize rest position parameters  
3042:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 22254              		.loc 1 3042 0
 22255 01a8 214B     		ldr	r3, .L852
 22256 01aa 0022     		movs	r2, #0
 22257 01ac 83F8AC22 		strb	r2, [r3, #684]
3043:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 22258              		.loc 1 3043 0
 22259 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22260 01b2 1F49     		ldr	r1, .L852
 22261 01b4 1346     		mov	r3, r2
 22262 01b6 DB00     		lsls	r3, r3, #3
 22263 01b8 9B1A     		subs	r3, r3, r2
 22264 01ba 1B01     		lsls	r3, r3, #4
 22265 01bc 0B44     		add	r3, r3, r1
 22266 01be 03F58873 		add	r3, r3, #272
 22267 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22268 01c4 1946     		mov	r1, r3
 22269 01c6 1A4A     		ldr	r2, .L852
 22270 01c8 0B46     		mov	r3, r1
 22271 01ca 5B00     		lsls	r3, r3, #1
 22272 01cc 0B44     		add	r3, r3, r1
 22273 01ce 1B01     		lsls	r3, r3, #4
 22274 01d0 1344     		add	r3, r3, r2
 22275 01d2 03F29513 		addw	r3, r3, #405
 22276 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22277 01d8 1A46     		mov	r2, r3
 22278 01da 41F65833 		movw	r3, #7000
 22279 01de 9340     		lsls	r3, r3, r2
 22280 01e0 134A     		ldr	r2, .L852
 22281 01e2 C2F8A032 		str	r3, [r2, #672]
3044:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 22282              		.loc 1 3044 0
 22283 01e6 124B     		ldr	r3, .L852
 22284 01e8 0A22     		movs	r2, #10
 22285 01ea C3F8A422 		str	r2, [r3, #676]
3045:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 22286              		.loc 1 3045 0
 22287 01ee 104B     		ldr	r3, .L852
 22288 01f0 42F21072 		movw	r2, #10000
 22289 01f4 C3F8A822 		str	r2, [r3, #680]
3046:..\src/command_processing.c **** 	
3047:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 22290              		.loc 1 3047 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 487


 22291 01f8 0D4B     		ldr	r3, .L852
 22292 01fa 0022     		movs	r2, #0
 22293 01fc 83F80022 		strb	r2, [r3, #512]
3048:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 22294              		.loc 1 3048 0
 22295 0200 0B4B     		ldr	r3, .L852
 22296 0202 0022     		movs	r2, #0
 22297 0204 83F82622 		strb	r2, [r3, #550]
3049:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 22298              		.loc 1 3049 0
 22299 0208 094B     		ldr	r3, .L852
 22300 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22301 020e 1233     		adds	r3, r3, #18
 22302 0210 5B01     		lsls	r3, r3, #5
 22303 0212 074A     		ldr	r2, .L852
 22304 0214 1344     		add	r3, r3, r2
 22305 0216 074A     		ldr	r2, .L852+4
 22306 0218 1068     		ldr	r0, [r2]	@ unaligned
 22307 021a 1860     		str	r0, [r3]	@ unaligned
 22308 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 22309 021e 9279     		ldrb	r2, [r2, #6]
 22310 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 22311 0222 9A71     		strb	r2, [r3, #6]
3050:..\src/command_processing.c **** }
 22312              		.loc 1 3050 0
 22313 0224 00BF     		nop
 22314 0226 0C37     		adds	r7, r7, #12
 22315              		.cfi_def_cfa_offset 4
 22316 0228 BD46     		mov	sp, r7
 22317              		.cfi_def_cfa_register 13
 22318              		@ sp needed
 22319 022a 80BC     		pop	{r7}
 22320              		.cfi_restore 7
 22321              		.cfi_def_cfa_offset 0
 22322 022c 7047     		bx	lr
 22323              	.L853:
 22324 022e 00BF     		.align	2
 22325              	.L852:
 22326 0230 00000000 		.word	g_mem
 22327 0234 601C0000 		.word	.LC280
 22328              		.cfi_endproc
 22329              	.LFE87:
 22330              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 22331              		.section	.text.memInit_Master,"ax",%progbits
 22332              		.align	2
 22333              		.global	memInit_Master
 22334              		.thumb
 22335              		.thumb_func
 22336              		.type	memInit_Master, %function
 22337              	memInit_Master:
 22338              	.LFB88:
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c **** //==============================================================================
3053:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3054:..\src/command_processing.c **** //==============================================================================
3055:..\src/command_processing.c **** void memInit_Master(void)
3056:..\src/command_processing.c **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 488


 22339              		.loc 1 3056 0
 22340              		.cfi_startproc
 22341              		@ args = 0, pretend = 0, frame = 0
 22342              		@ frame_needed = 1, uses_anonymous_args = 0
 22343              		@ link register save eliminated.
 22344 0000 80B4     		push	{r7}
 22345              		.cfi_def_cfa_offset 4
 22346              		.cfi_offset 7, -4
 22347 0002 00AF     		add	r7, sp, #0
 22348              		.cfi_def_cfa_register 7
3057:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 22349              		.loc 1 3057 0
 22350 0004 074B     		ldr	r3, .L855
 22351 0006 0222     		movs	r2, #2
 22352 0008 83F8A020 		strb	r2, [r3, #160]
3058:..\src/command_processing.c ****     
3059:..\src/command_processing.c ****     // MS STRUCT
3060:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 22353              		.loc 1 3060 0
 22354 000c 054B     		ldr	r3, .L855
 22355 000e 0122     		movs	r2, #1
 22356 0010 83F8B122 		strb	r2, [r3, #689]
3061:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 22357              		.loc 1 3061 0
 22358 0014 034B     		ldr	r3, .L855
 22359 0016 0022     		movs	r2, #0
 22360 0018 83F8B022 		strb	r2, [r3, #688]
3062:..\src/command_processing.c **** }
 22361              		.loc 1 3062 0
 22362 001c 00BF     		nop
 22363 001e BD46     		mov	sp, r7
 22364              		.cfi_def_cfa_register 13
 22365              		@ sp needed
 22366 0020 80BC     		pop	{r7}
 22367              		.cfi_restore 7
 22368              		.cfi_def_cfa_offset 0
 22369 0022 7047     		bx	lr
 22370              	.L856:
 22371              		.align	2
 22372              	.L855:
 22373 0024 00000000 		.word	g_mem
 22374              		.cfi_endproc
 22375              	.LFE88:
 22376              		.size	memInit_Master, .-memInit_Master
 22377              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 22378              		.align	2
 22379              		.global	memInit_AirChambersFb
 22380              		.thumb
 22381              		.thumb_func
 22382              		.type	memInit_AirChambersFb, %function
 22383              	memInit_AirChambersFb:
 22384              	.LFB89:
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c **** //==============================================================================
3065:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3066:..\src/command_processing.c **** //==============================================================================
3067:..\src/command_processing.c **** void memInit_AirChambersFb(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 489


3068:..\src/command_processing.c **** {
 22385              		.loc 1 3068 0
 22386              		.cfi_startproc
 22387              		@ args = 0, pretend = 0, frame = 0
 22388              		@ frame_needed = 1, uses_anonymous_args = 0
 22389              		@ link register save eliminated.
 22390 0000 80B4     		push	{r7}
 22391              		.cfi_def_cfa_offset 4
 22392              		.cfi_offset 7, -4
 22393 0002 00AF     		add	r7, sp, #0
 22394              		.cfi_def_cfa_register 7
3069:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3070:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 22395              		.loc 1 3070 0
 22396 0004 1A4B     		ldr	r3, .L858
 22397 0006 0222     		movs	r2, #2
 22398 0008 83F8AC20 		strb	r2, [r3, #172]
3071:..\src/command_processing.c ****     
3072:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 22399              		.loc 1 3072 0
 22400 000c 184B     		ldr	r3, .L858
 22401 000e 0122     		movs	r2, #1
 22402 0010 83F80F21 		strb	r2, [r3, #271]
3073:..\src/command_processing.c ****     
3074:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3075:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3076:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 22403              		.loc 1 3076 0
 22404 0014 164B     		ldr	r3, .L858
 22405 0016 0422     		movs	r2, #4
 22406 0018 83F87E21 		strb	r2, [r3, #382]
3077:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 22407              		.loc 1 3077 0
 22408 001c 144B     		ldr	r3, .L858
 22409 001e 0022     		movs	r2, #0
 22410 0020 C3F85421 		str	r2, [r3, #340]
3078:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 22411              		.loc 1 3078 0
 22412 0024 124B     		ldr	r3, .L858
 22413 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22414 002a 1946     		mov	r1, r3
 22415 002c 104A     		ldr	r2, .L858
 22416 002e 0B46     		mov	r3, r1
 22417 0030 5B00     		lsls	r3, r3, #1
 22418 0032 0B44     		add	r3, r3, r1
 22419 0034 1B01     		lsls	r3, r3, #4
 22420 0036 1344     		add	r3, r3, r2
 22421 0038 03F29513 		addw	r3, r3, #405
 22422 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22423 003e 1A46     		mov	r2, r3
 22424 0040 45F2F053 		movw	r3, #22000
 22425 0044 9340     		lsls	r3, r3, r2
 22426 0046 0A4A     		ldr	r2, .L858
 22427 0048 C2F85831 		str	r3, [r2, #344]
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     // FB STRUCT
3081:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 490


 22428              		.loc 1 3081 0
 22429 004c 084B     		ldr	r3, .L858
 22430 004e 4FF4E172 		mov	r2, #450
 22431 0052 C3F8C022 		str	r2, [r3, #704]
3082:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 22432              		.loc 1 3082 0
 22433 0056 064B     		ldr	r3, .L858
 22434 0058 064A     		ldr	r2, .L858+4
 22435 005a C3F8C422 		str	r2, [r3, #708]	@ float
3083:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 22436              		.loc 1 3083 0
 22437 005e 044B     		ldr	r3, .L858
 22438 0060 4FF07E52 		mov	r2, #1065353216
 22439 0064 C3F8C822 		str	r2, [r3, #712]	@ float
3084:..\src/command_processing.c **** }
 22440              		.loc 1 3084 0
 22441 0068 00BF     		nop
 22442 006a BD46     		mov	sp, r7
 22443              		.cfi_def_cfa_register 13
 22444              		@ sp needed
 22445 006c 80BC     		pop	{r7}
 22446              		.cfi_restore 7
 22447              		.cfi_def_cfa_offset 0
 22448 006e 7047     		bx	lr
 22449              	.L859:
 22450              		.align	2
 22451              	.L858:
 22452 0070 00000000 		.word	g_mem
 22453 0074 0000C841 		.word	1103626240
 22454              		.cfi_endproc
 22455              	.LFE89:
 22456              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 22457              		.section	.text.cmd_get_measurements,"ax",%progbits
 22458              		.align	2
 22459              		.global	cmd_get_measurements
 22460              		.thumb
 22461              		.thumb_func
 22462              		.type	cmd_get_measurements, %function
 22463              	cmd_get_measurements:
 22464              	.LFB90:
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c **** //==============================================================================
3087:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3088:..\src/command_processing.c **** //==============================================================================
3089:..\src/command_processing.c **** /**
3090:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3091:..\src/command_processing.c **** **/
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c **** void cmd_get_measurements(){
 22465              		.loc 1 3093 0
 22466              		.cfi_startproc
 22467              		@ args = 0, pretend = 0, frame = 16
 22468              		@ frame_needed = 1, uses_anonymous_args = 0
 22469 0000 90B5     		push	{r4, r7, lr}
 22470              		.cfi_def_cfa_offset 12
 22471              		.cfi_offset 4, -12
 22472              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 491


 22473              		.cfi_offset 14, -4
 22474 0002 85B0     		sub	sp, sp, #20
 22475              		.cfi_def_cfa_offset 32
 22476 0004 00AF     		add	r7, sp, #0
 22477              		.cfi_def_cfa_register 7
3094:..\src/command_processing.c ****  
3095:..\src/command_processing.c ****     uint8 CYDATA index;
3096:..\src/command_processing.c ****     int16 aux_int16;
3097:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3098:..\src/command_processing.c ****     
3099:..\src/command_processing.c ****     uint8 packet_data[8]; 
3100:..\src/command_processing.c ****     
3101:..\src/command_processing.c ****     //Header package
3102:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 22478              		.loc 1 3102 0
 22479 0006 8423     		movs	r3, #132
 22480 0008 3B71     		strb	r3, [r7, #4]
3103:..\src/command_processing.c ****     
3104:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22481              		.loc 1 3104 0
 22482 000a 0323     		movs	r3, #3
 22483 000c FB73     		strb	r3, [r7, #15]
 22484 000e 38E0     		b	.L861
 22485              	.L862:
3105:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22486              		.loc 1 3105 0
 22487 0010 264B     		ldr	r3, .L863
 22488 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22489 0016 1A46     		mov	r2, r3
 22490 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22491 001a 2548     		ldr	r0, .L863+4
 22492 001c 1346     		mov	r3, r2
 22493 001e 5B00     		lsls	r3, r3, #1
 22494 0020 1344     		add	r3, r3, r2
 22495 0022 9B00     		lsls	r3, r3, #2
 22496 0024 1344     		add	r3, r3, r2
 22497 0026 0B44     		add	r3, r3, r1
 22498 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22499 002c 1F4B     		ldr	r3, .L863
 22500 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22501 0032 1C46     		mov	r4, r3
 22502 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22503 0036 1D48     		ldr	r0, .L863
 22504 0038 2346     		mov	r3, r4
 22505 003a 5B00     		lsls	r3, r3, #1
 22506 003c 2344     		add	r3, r3, r4
 22507 003e 1B01     		lsls	r3, r3, #4
 22508 0040 0344     		add	r3, r3, r0
 22509 0042 0B44     		add	r3, r3, r1
 22510 0044 03F29513 		addw	r3, r3, #405
 22511 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22512 004a 42FA03F3 		asr	r3, r2, r3
 22513 004e 1BB2     		sxth	r3, r3
 22514 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3106:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22515              		.loc 1 3106 0
 22516 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 492


 22517 0054 5B00     		lsls	r3, r3, #1
 22518 0056 0233     		adds	r3, r3, #2
 22519 0058 07F10C02 		add	r2, r7, #12
 22520 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22521 005e 07F11001 		add	r1, r7, #16
 22522 0062 0B44     		add	r3, r3, r1
 22523 0064 03F80C2C 		strb	r2, [r3, #-12]
3107:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22524              		.loc 1 3107 0
 22525 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22526 006a 5B00     		lsls	r3, r3, #1
 22527 006c 5A1C     		adds	r2, r3, #1
 22528 006e 07F10C03 		add	r3, r7, #12
 22529 0072 0133     		adds	r3, r3, #1
 22530 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22531 0076 07F11003 		add	r3, r7, #16
 22532 007a 1344     		add	r3, r3, r2
 22533 007c 0A46     		mov	r2, r1
 22534 007e 03F80C2C 		strb	r2, [r3, #-12]
 22535              	.L861:
3104:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22536              		.loc 1 3104 0 discriminator 1
 22537 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22538 0084 5A1E     		subs	r2, r3, #1
 22539 0086 FA73     		strb	r2, [r7, #15]
 22540 0088 002B     		cmp	r3, #0
 22541 008a C1D1     		bne	.L862
3108:..\src/command_processing.c ****     }
3109:..\src/command_processing.c **** 
3110:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22542              		.loc 1 3112 0
 22543 008c 3B1D     		adds	r3, r7, #4
 22544 008e 0721     		movs	r1, #7
 22545 0090 1846     		mov	r0, r3
 22546 0092 FFF7FEFF 		bl	LCRChecksum
 22547 0096 0346     		mov	r3, r0
 22548 0098 FB72     		strb	r3, [r7, #11]
3113:..\src/command_processing.c **** 
3114:..\src/command_processing.c ****     commWrite(packet_data, 8);
 22549              		.loc 1 3114 0
 22550 009a 3B1D     		adds	r3, r7, #4
 22551 009c 0821     		movs	r1, #8
 22552 009e 1846     		mov	r0, r3
 22553 00a0 FFF7FEFF 		bl	commWrite
3115:..\src/command_processing.c ****    
3116:..\src/command_processing.c **** }
 22554              		.loc 1 3116 0
 22555 00a4 00BF     		nop
 22556 00a6 1437     		adds	r7, r7, #20
 22557              		.cfi_def_cfa_offset 12
 22558 00a8 BD46     		mov	sp, r7
 22559              		.cfi_def_cfa_register 13
 22560              		@ sp needed
 22561 00aa 90BD     		pop	{r4, r7, pc}
 22562              	.L864:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 493


 22563              		.align	2
 22564              	.L863:
 22565 00ac 00000000 		.word	g_mem
 22566 00b0 00000000 		.word	g_measOld
 22567              		.cfi_endproc
 22568              	.LFE90:
 22569              		.size	cmd_get_measurements, .-cmd_get_measurements
 22570              		.section	.text.cmd_get_velocities,"ax",%progbits
 22571              		.align	2
 22572              		.global	cmd_get_velocities
 22573              		.thumb
 22574              		.thumb_func
 22575              		.type	cmd_get_velocities, %function
 22576              	cmd_get_velocities:
 22577              	.LFB91:
3117:..\src/command_processing.c **** 
3118:..\src/command_processing.c **** void cmd_get_velocities(){
 22578              		.loc 1 3118 0
 22579              		.cfi_startproc
 22580              		@ args = 0, pretend = 0, frame = 16
 22581              		@ frame_needed = 1, uses_anonymous_args = 0
 22582 0000 90B5     		push	{r4, r7, lr}
 22583              		.cfi_def_cfa_offset 12
 22584              		.cfi_offset 4, -12
 22585              		.cfi_offset 7, -8
 22586              		.cfi_offset 14, -4
 22587 0002 85B0     		sub	sp, sp, #20
 22588              		.cfi_def_cfa_offset 32
 22589 0004 00AF     		add	r7, sp, #0
 22590              		.cfi_def_cfa_register 7
3119:..\src/command_processing.c ****  
3120:..\src/command_processing.c ****     uint8 CYDATA index;
3121:..\src/command_processing.c ****     int16 aux_int16;
3122:..\src/command_processing.c ****    
3123:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3124:..\src/command_processing.c ****     
3125:..\src/command_processing.c ****     uint8 packet_data[8]; 
3126:..\src/command_processing.c ****     
3127:..\src/command_processing.c ****     //Header package
3128:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 22591              		.loc 1 3128 0
 22592 0006 8923     		movs	r3, #137
 22593 0008 3B71     		strb	r3, [r7, #4]
3129:..\src/command_processing.c ****     
3130:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22594              		.loc 1 3130 0
 22595 000a 0323     		movs	r3, #3
 22596 000c FB73     		strb	r3, [r7, #15]
 22597 000e 3AE0     		b	.L866
 22598              	.L867:
3131:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22599              		.loc 1 3131 0
 22600 0010 274B     		ldr	r3, .L868
 22601 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22602 0016 1A46     		mov	r2, r3
 22603 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22604 001a 2648     		ldr	r0, .L868+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 494


 22605 001c 1346     		mov	r3, r2
 22606 001e 5B00     		lsls	r3, r3, #1
 22607 0020 1344     		add	r3, r3, r2
 22608 0022 9B00     		lsls	r3, r3, #2
 22609 0024 1344     		add	r3, r3, r2
 22610 0026 0B44     		add	r3, r3, r1
 22611 0028 0633     		adds	r3, r3, #6
 22612 002a 9B00     		lsls	r3, r3, #2
 22613 002c 0344     		add	r3, r3, r0
 22614 002e 5A68     		ldr	r2, [r3, #4]
 22615 0030 1F4B     		ldr	r3, .L868
 22616 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22617 0036 1C46     		mov	r4, r3
 22618 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22619 003a 1D48     		ldr	r0, .L868
 22620 003c 2346     		mov	r3, r4
 22621 003e 5B00     		lsls	r3, r3, #1
 22622 0040 2344     		add	r3, r3, r4
 22623 0042 1B01     		lsls	r3, r3, #4
 22624 0044 0344     		add	r3, r3, r0
 22625 0046 0B44     		add	r3, r3, r1
 22626 0048 03F29513 		addw	r3, r3, #405
 22627 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22628 004e 42FA03F3 		asr	r3, r2, r3
 22629 0052 1BB2     		sxth	r3, r3
 22630 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3132:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22631              		.loc 1 3132 0
 22632 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22633 0058 5B00     		lsls	r3, r3, #1
 22634 005a 0233     		adds	r3, r3, #2
 22635 005c 07F10C02 		add	r2, r7, #12
 22636 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22637 0062 07F11001 		add	r1, r7, #16
 22638 0066 0B44     		add	r3, r3, r1
 22639 0068 03F80C2C 		strb	r2, [r3, #-12]
3133:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22640              		.loc 1 3133 0
 22641 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22642 006e 5B00     		lsls	r3, r3, #1
 22643 0070 5A1C     		adds	r2, r3, #1
 22644 0072 07F10C03 		add	r3, r7, #12
 22645 0076 0133     		adds	r3, r3, #1
 22646 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22647 007a 07F11003 		add	r3, r7, #16
 22648 007e 1344     		add	r3, r3, r2
 22649 0080 0A46     		mov	r2, r1
 22650 0082 03F80C2C 		strb	r2, [r3, #-12]
 22651              	.L866:
3130:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 22652              		.loc 1 3130 0 discriminator 1
 22653 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22654 0088 5A1E     		subs	r2, r3, #1
 22655 008a FA73     		strb	r2, [r7, #15]
 22656 008c 002B     		cmp	r3, #0
 22657 008e BFD1     		bne	.L867
3134:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 495


3135:..\src/command_processing.c ****             
3136:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3137:..\src/command_processing.c **** 
3138:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22658              		.loc 1 3138 0
 22659 0090 3B1D     		adds	r3, r7, #4
 22660 0092 0721     		movs	r1, #7
 22661 0094 1846     		mov	r0, r3
 22662 0096 FFF7FEFF 		bl	LCRChecksum
 22663 009a 0346     		mov	r3, r0
 22664 009c FB72     		strb	r3, [r7, #11]
3139:..\src/command_processing.c **** 
3140:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22665              		.loc 1 3140 0
 22666 009e 3B1D     		adds	r3, r7, #4
 22667 00a0 0821     		movs	r1, #8
 22668 00a2 1846     		mov	r0, r3
 22669 00a4 FFF7FEFF 		bl	commWrite
3141:..\src/command_processing.c **** }
 22670              		.loc 1 3141 0
 22671 00a8 00BF     		nop
 22672 00aa 1437     		adds	r7, r7, #20
 22673              		.cfi_def_cfa_offset 12
 22674 00ac BD46     		mov	sp, r7
 22675              		.cfi_def_cfa_register 13
 22676              		@ sp needed
 22677 00ae 90BD     		pop	{r4, r7, pc}
 22678              	.L869:
 22679              		.align	2
 22680              	.L868:
 22681 00b0 00000000 		.word	g_mem
 22682 00b4 00000000 		.word	g_measOld
 22683              		.cfi_endproc
 22684              	.LFE91:
 22685              		.size	cmd_get_velocities, .-cmd_get_velocities
 22686              		.section	.text.cmd_get_accelerations,"ax",%progbits
 22687              		.align	2
 22688              		.global	cmd_get_accelerations
 22689              		.thumb
 22690              		.thumb_func
 22691              		.type	cmd_get_accelerations, %function
 22692              	cmd_get_accelerations:
 22693              	.LFB92:
3142:..\src/command_processing.c **** 
3143:..\src/command_processing.c **** void cmd_get_accelerations(){
 22694              		.loc 1 3143 0
 22695              		.cfi_startproc
 22696              		@ args = 0, pretend = 0, frame = 16
 22697              		@ frame_needed = 1, uses_anonymous_args = 0
 22698 0000 90B5     		push	{r4, r7, lr}
 22699              		.cfi_def_cfa_offset 12
 22700              		.cfi_offset 4, -12
 22701              		.cfi_offset 7, -8
 22702              		.cfi_offset 14, -4
 22703 0002 85B0     		sub	sp, sp, #20
 22704              		.cfi_def_cfa_offset 32
 22705 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 496


 22706              		.cfi_def_cfa_register 7
3144:..\src/command_processing.c ****  
3145:..\src/command_processing.c ****     uint8 CYDATA index;
3146:..\src/command_processing.c ****     int16 aux_int16;
3147:..\src/command_processing.c ****     
3148:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     uint8 packet_data[8]; 
3151:..\src/command_processing.c ****     
3152:..\src/command_processing.c ****     //Header package
3153:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 22707              		.loc 1 3153 0
 22708 0006 8B23     		movs	r3, #139
 22709 0008 3B71     		strb	r3, [r7, #4]
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22710              		.loc 1 3155 0
 22711 000a 0323     		movs	r3, #3
 22712 000c FB73     		strb	r3, [r7, #15]
 22713 000e 39E0     		b	.L871
 22714              	.L872:
3156:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22715              		.loc 1 3156 0
 22716 0010 274B     		ldr	r3, .L873
 22717 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22718 0016 1A46     		mov	r2, r3
 22719 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22720 001a 2648     		ldr	r0, .L873+4
 22721 001c 1346     		mov	r3, r2
 22722 001e 5B00     		lsls	r3, r3, #1
 22723 0020 1344     		add	r3, r3, r2
 22724 0022 9B00     		lsls	r3, r3, #2
 22725 0024 1344     		add	r3, r3, r2
 22726 0026 0B44     		add	r3, r3, r1
 22727 0028 0A33     		adds	r3, r3, #10
 22728 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22729 002e 204B     		ldr	r3, .L873
 22730 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22731 0034 1C46     		mov	r4, r3
 22732 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22733 0038 1D48     		ldr	r0, .L873
 22734 003a 2346     		mov	r3, r4
 22735 003c 5B00     		lsls	r3, r3, #1
 22736 003e 2344     		add	r3, r3, r4
 22737 0040 1B01     		lsls	r3, r3, #4
 22738 0042 0344     		add	r3, r3, r0
 22739 0044 0B44     		add	r3, r3, r1
 22740 0046 03F29513 		addw	r3, r3, #405
 22741 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22742 004c 42FA03F3 		asr	r3, r2, r3
 22743 0050 1BB2     		sxth	r3, r3
 22744 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3157:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 22745              		.loc 1 3157 0
 22746 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22747 0056 5B00     		lsls	r3, r3, #1
 22748 0058 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 497


 22749 005a 07F10C02 		add	r2, r7, #12
 22750 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22751 0060 07F11001 		add	r1, r7, #16
 22752 0064 0B44     		add	r3, r3, r1
 22753 0066 03F80C2C 		strb	r2, [r3, #-12]
3158:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 22754              		.loc 1 3158 0
 22755 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22756 006c 5B00     		lsls	r3, r3, #1
 22757 006e 5A1C     		adds	r2, r3, #1
 22758 0070 07F10C03 		add	r3, r7, #12
 22759 0074 0133     		adds	r3, r3, #1
 22760 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22761 0078 07F11003 		add	r3, r7, #16
 22762 007c 1344     		add	r3, r3, r2
 22763 007e 0A46     		mov	r2, r1
 22764 0080 03F80C2C 		strb	r2, [r3, #-12]
 22765              	.L871:
3155:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 22766              		.loc 1 3155 0 discriminator 1
 22767 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22768 0086 5A1E     		subs	r2, r3, #1
 22769 0088 FA73     		strb	r2, [r7, #15]
 22770 008a 002B     		cmp	r3, #0
 22771 008c C0D1     		bne	.L872
3159:..\src/command_processing.c ****     }
3160:..\src/command_processing.c ****     
3161:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 22772              		.loc 1 3163 0
 22773 008e 3B1D     		adds	r3, r7, #4
 22774 0090 0721     		movs	r1, #7
 22775 0092 1846     		mov	r0, r3
 22776 0094 FFF7FEFF 		bl	LCRChecksum
 22777 0098 0346     		mov	r3, r0
 22778 009a FB72     		strb	r3, [r7, #11]
3164:..\src/command_processing.c **** 
3165:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 22779              		.loc 1 3165 0
 22780 009c 3B1D     		adds	r3, r7, #4
 22781 009e 0821     		movs	r1, #8
 22782 00a0 1846     		mov	r0, r3
 22783 00a2 FFF7FEFF 		bl	commWrite
3166:..\src/command_processing.c **** }
 22784              		.loc 1 3166 0
 22785 00a6 00BF     		nop
 22786 00a8 1437     		adds	r7, r7, #20
 22787              		.cfi_def_cfa_offset 12
 22788 00aa BD46     		mov	sp, r7
 22789              		.cfi_def_cfa_register 13
 22790              		@ sp needed
 22791 00ac 90BD     		pop	{r4, r7, pc}
 22792              	.L874:
 22793 00ae 00BF     		.align	2
 22794              	.L873:
 22795 00b0 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 498


 22796 00b4 00000000 		.word	g_measOld
 22797              		.cfi_endproc
 22798              	.LFE92:
 22799              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 22800              		.section	.text.cmd_set_inputs,"ax",%progbits
 22801              		.align	2
 22802              		.global	cmd_set_inputs
 22803              		.thumb
 22804              		.thumb_func
 22805              		.type	cmd_set_inputs, %function
 22806              	cmd_set_inputs:
 22807              	.LFB93:
3167:..\src/command_processing.c **** 
3168:..\src/command_processing.c **** void cmd_set_inputs(){
 22808              		.loc 1 3168 0
 22809              		.cfi_startproc
 22810              		@ args = 0, pretend = 0, frame = 8
 22811              		@ frame_needed = 1, uses_anonymous_args = 0
 22812              		@ link register save eliminated.
 22813 0000 90B4     		push	{r4, r7}
 22814              		.cfi_def_cfa_offset 8
 22815              		.cfi_offset 4, -8
 22816              		.cfi_offset 7, -4
 22817 0002 82B0     		sub	sp, sp, #8
 22818              		.cfi_def_cfa_offset 16
 22819 0004 00AF     		add	r7, sp, #0
 22820              		.cfi_def_cfa_register 7
3169:..\src/command_processing.c ****     
3170:..\src/command_processing.c ****     // Store position setted in right variables
3171:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3172:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3173:..\src/command_processing.c ****     
3174:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 22821              		.loc 1 3174 0
 22822 0006 894B     		ldr	r3, .L889
 22823 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22824 000a 1B02     		lsls	r3, r3, #8
 22825 000c 1AB2     		sxth	r2, r3
 22826 000e 874B     		ldr	r3, .L889
 22827 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22828 0012 1BB2     		sxth	r3, r3
 22829 0014 1343     		orrs	r3, r3, r2
 22830 0016 1BB2     		sxth	r3, r3
 22831 0018 3B80     		strh	r3, [r7]	@ movhi
3175:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 22832              		.loc 1 3175 0
 22833 001a 844B     		ldr	r3, .L889
 22834 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 22835 001e 1B02     		lsls	r3, r3, #8
 22836 0020 1AB2     		sxth	r2, r3
 22837 0022 824B     		ldr	r3, .L889
 22838 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 22839 0026 1BB2     		sxth	r3, r3
 22840 0028 1343     		orrs	r3, r3, r2
 22841 002a 1BB2     		sxth	r3, r3
 22842 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 22843              	.LBB22:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 499


3176:..\src/command_processing.c ****     
3177:..\src/command_processing.c ****     // Check if last command received was the same as this 
3178:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3179:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 22844              		.loc 1 3179 0
 22845 002e 0023     		movs	r3, #0
 22846 0030 FB71     		strb	r3, [r7, #7]
 22847 0032 1DE0     		b	.L876
 22848              	.L878:
3180:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22849              		.loc 1 3180 0
 22850 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22851 0036 7E4A     		ldr	r2, .L889+4
 22852 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 22853 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22854 003e 5B00     		lsls	r3, r3, #1
 22855 0040 07F10801 		add	r1, r7, #8
 22856 0044 0B44     		add	r3, r3, r1
 22857 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 22858 004a 9A42     		cmp	r2, r3
 22859 004c 02D0     		beq	.L877
3181:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 22860              		.loc 1 3181 0
 22861 004e 794B     		ldr	r3, .L889+8
 22862 0050 0122     		movs	r2, #1
 22863 0052 1A70     		strb	r2, [r3]
 22864              	.L877:
3182:..\src/command_processing.c ****        }
3183:..\src/command_processing.c ****         // Update last command
3184:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 22865              		.loc 1 3184 0 discriminator 2
 22866 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22867 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22868 0058 5B00     		lsls	r3, r3, #1
 22869 005a 07F10801 		add	r1, r7, #8
 22870 005e 0B44     		add	r3, r3, r1
 22871 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 22872 0064 724B     		ldr	r3, .L889+4
 22873 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3179:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22874              		.loc 1 3179 0 discriminator 2
 22875 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22876 006c 0133     		adds	r3, r3, #1
 22877 006e FB71     		strb	r3, [r7, #7]
 22878              	.L876:
3179:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 22879              		.loc 1 3179 0 is_stmt 0 discriminator 1
 22880 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22881 0072 714B     		ldr	r3, .L889+12
 22882 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22883 0078 0133     		adds	r3, r3, #1
 22884 007a 9A42     		cmp	r2, r3
 22885 007c DADB     		blt	.L878
 22886              	.LBE22:
3185:..\src/command_processing.c ****     }
3186:..\src/command_processing.c ****     
3187:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 500


3188:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 22887              		.loc 1 3188 0 is_stmt 1
 22888 007e 6D4B     		ldr	r3, .L889+8
 22889 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22890 0082 002B     		cmp	r3, #0
 22891 0084 00F0CC80 		beq	.L888
 22892              	.LBB23:
3189:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 22893              		.loc 1 3189 0
 22894 0088 0023     		movs	r3, #0
 22895 008a BB71     		strb	r3, [r7, #6]
 22896 008c C4E0     		b	.L880
 22897              	.L887:
3190:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 22898              		.loc 1 3190 0
 22899 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22900 0090 6A49     		ldr	r1, .L889+16
 22901 0092 1346     		mov	r3, r2
 22902 0094 DB00     		lsls	r3, r3, #3
 22903 0096 9B1A     		subs	r3, r3, r2
 22904 0098 1B01     		lsls	r3, r3, #4
 22905 009a 0B44     		add	r3, r3, r1
 22906 009c 03F20F13 		addw	r3, r3, #271
 22907 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22908 00a2 022B     		cmp	r3, #2
 22909 00a4 0ED1     		bne	.L881
3191:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 22910              		.loc 1 3191 0
 22911 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22912 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22913 00aa 5B00     		lsls	r3, r3, #1
 22914 00ac 07F10801 		add	r1, r7, #8
 22915 00b0 0B44     		add	r3, r3, r1
 22916 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 22917 00b6 1846     		mov	r0, r3
 22918 00b8 6149     		ldr	r1, .L889+20
 22919 00ba 1301     		lsls	r3, r2, #4
 22920 00bc 0B44     		add	r3, r3, r1
 22921 00be 0433     		adds	r3, r3, #4
 22922 00c0 1860     		str	r0, [r3]
 22923 00c2 47E0     		b	.L882
 22924              	.L881:
3192:..\src/command_processing.c ****             }
3193:..\src/command_processing.c ****             else {
3194:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 22925              		.loc 1 3194 0
 22926 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22927 00c6 5D49     		ldr	r1, .L889+16
 22928 00c8 1346     		mov	r3, r2
 22929 00ca DB00     		lsls	r3, r3, #3
 22930 00cc 9B1A     		subs	r3, r3, r2
 22931 00ce 1B01     		lsls	r3, r3, #4
 22932 00d0 0B44     		add	r3, r3, r1
 22933 00d2 03F20F13 		addw	r3, r3, #271
 22934 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22935 00d8 012B     		cmp	r3, #1
 22936 00da 0ED1     		bne	.L883
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 501


3195:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 22937              		.loc 1 3195 0
 22938 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22939 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22940 00e0 5B00     		lsls	r3, r3, #1
 22941 00e2 07F10801 		add	r1, r7, #8
 22942 00e6 0B44     		add	r3, r3, r1
 22943 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 22944 00ec 1846     		mov	r0, r3
 22945 00ee 5449     		ldr	r1, .L889+20
 22946 00f0 1301     		lsls	r3, r2, #4
 22947 00f2 0B44     		add	r3, r3, r1
 22948 00f4 0833     		adds	r3, r3, #8
 22949 00f6 1860     		str	r0, [r3]
 22950 00f8 2CE0     		b	.L882
 22951              	.L883:
3196:..\src/command_processing.c ****                 }
3197:..\src/command_processing.c ****                 else {
3198:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 22952              		.loc 1 3198 0
 22953 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22954 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22955 00fe 5B00     		lsls	r3, r3, #1
 22956 0100 07F10801 		add	r1, r7, #8
 22957 0104 0B44     		add	r3, r3, r1
 22958 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 22959 010a 1846     		mov	r0, r3
 22960 010c 4C49     		ldr	r1, .L889+20
 22961 010e 1301     		lsls	r3, r2, #4
 22962 0110 0B44     		add	r3, r3, r1
 22963 0112 1860     		str	r0, [r3]
3199:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 22964              		.loc 1 3199 0
 22965 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22966 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22967 0118 494A     		ldr	r2, .L889+20
 22968 011a 1B01     		lsls	r3, r3, #4
 22969 011c 1344     		add	r3, r3, r2
 22970 011e 1868     		ldr	r0, [r3]
 22971 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22972 0122 454C     		ldr	r4, .L889+12
 22973 0124 1346     		mov	r3, r2
 22974 0126 DB00     		lsls	r3, r3, #3
 22975 0128 9B1A     		subs	r3, r3, r2
 22976 012a 1B01     		lsls	r3, r3, #4
 22977 012c 2344     		add	r3, r3, r4
 22978 012e 03F58873 		add	r3, r3, #272
 22979 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22980 0134 1C46     		mov	r4, r3
 22981 0136 414A     		ldr	r2, .L889+16
 22982 0138 2346     		mov	r3, r4
 22983 013a 5B00     		lsls	r3, r3, #1
 22984 013c 2344     		add	r3, r3, r4
 22985 013e 1B01     		lsls	r3, r3, #4
 22986 0140 1344     		add	r3, r3, r2
 22987 0142 03F29513 		addw	r3, r3, #405
 22988 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 502


 22989 0148 00FA03F2 		lsl	r2, r0, r3
 22990 014c 3C48     		ldr	r0, .L889+20
 22991 014e 0B01     		lsls	r3, r1, #4
 22992 0150 0344     		add	r3, r3, r0
 22993 0152 1A60     		str	r2, [r3]
 22994              	.L882:
3200:..\src/command_processing.c ****                 }
3201:..\src/command_processing.c ****             }  
3202:..\src/command_processing.c ****                
3203:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3204:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 22995              		.loc 1 3204 0
 22996 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 22997 0156 3849     		ldr	r1, .L889+12
 22998 0158 1346     		mov	r3, r2
 22999 015a DB00     		lsls	r3, r3, #3
 23000 015c 9B1A     		subs	r3, r3, r2
 23001 015e 1B01     		lsls	r3, r3, #4
 23002 0160 0B44     		add	r3, r3, r1
 23003 0162 E333     		adds	r3, r3, #227
 23004 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23005 0166 002B     		cmp	r3, #0
 23006 0168 53D0     		beq	.L884
 23007              		.loc 1 3204 0 is_stmt 0 discriminator 1
 23008 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23009 016c 3349     		ldr	r1, .L889+16
 23010 016e 1346     		mov	r3, r2
 23011 0170 DB00     		lsls	r3, r3, #3
 23012 0172 9B1A     		subs	r3, r3, r2
 23013 0174 1B01     		lsls	r3, r3, #4
 23014 0176 0B44     		add	r3, r3, r1
 23015 0178 03F20F13 		addw	r3, r3, #271
 23016 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23017 017e 032B     		cmp	r3, #3
 23018 0180 0BD0     		beq	.L885
 23019              		.loc 1 3204 0 discriminator 2
 23020 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23021 0184 2D49     		ldr	r1, .L889+16
 23022 0186 1346     		mov	r3, r2
 23023 0188 DB00     		lsls	r3, r3, #3
 23024 018a 9B1A     		subs	r3, r3, r2
 23025 018c 1B01     		lsls	r3, r3, #4
 23026 018e 0B44     		add	r3, r3, r1
 23027 0190 03F20F13 		addw	r3, r3, #271
 23028 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23029 0196 002B     		cmp	r3, #0
 23030 0198 3BD1     		bne	.L884
 23031              	.L885:
3205:..\src/command_processing.c ****                 
3206:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 23032              		.loc 1 3206 0 is_stmt 1
 23033 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23034 019c 284A     		ldr	r2, .L889+20
 23035 019e 1B01     		lsls	r3, r3, #4
 23036 01a0 1344     		add	r3, r3, r2
 23037 01a2 1968     		ldr	r1, [r3]
 23038 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 503


 23039 01a6 2448     		ldr	r0, .L889+12
 23040 01a8 1346     		mov	r3, r2
 23041 01aa DB00     		lsls	r3, r3, #3
 23042 01ac 9B1A     		subs	r3, r3, r2
 23043 01ae 1B01     		lsls	r3, r3, #4
 23044 01b0 0344     		add	r3, r3, r0
 23045 01b2 E433     		adds	r3, r3, #228
 23046 01b4 1B68     		ldr	r3, [r3]
 23047 01b6 9942     		cmp	r1, r3
 23048 01b8 0DDA     		bge	.L886
3207:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 23049              		.loc 1 3207 0
 23050 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23051 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23052 01be 1E48     		ldr	r0, .L889+12
 23053 01c0 1346     		mov	r3, r2
 23054 01c2 DB00     		lsls	r3, r3, #3
 23055 01c4 9B1A     		subs	r3, r3, r2
 23056 01c6 1B01     		lsls	r3, r3, #4
 23057 01c8 0344     		add	r3, r3, r0
 23058 01ca E433     		adds	r3, r3, #228
 23059 01cc 1A68     		ldr	r2, [r3]
 23060 01ce 1C48     		ldr	r0, .L889+20
 23061 01d0 0B01     		lsls	r3, r1, #4
 23062 01d2 0344     		add	r3, r3, r0
 23063 01d4 1A60     		str	r2, [r3]
 23064              	.L886:
3208:..\src/command_processing.c **** 
3209:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 23065              		.loc 1 3209 0
 23066 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23067 01d8 194A     		ldr	r2, .L889+20
 23068 01da 1B01     		lsls	r3, r3, #4
 23069 01dc 1344     		add	r3, r3, r2
 23070 01de 1968     		ldr	r1, [r3]
 23071 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23072 01e2 1548     		ldr	r0, .L889+12
 23073 01e4 1346     		mov	r3, r2
 23074 01e6 DB00     		lsls	r3, r3, #3
 23075 01e8 9B1A     		subs	r3, r3, r2
 23076 01ea 1B01     		lsls	r3, r3, #4
 23077 01ec 0344     		add	r3, r3, r0
 23078 01ee E833     		adds	r3, r3, #232
 23079 01f0 1B68     		ldr	r3, [r3]
 23080 01f2 9942     		cmp	r1, r3
 23081 01f4 0DDD     		ble	.L884
3210:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 23082              		.loc 1 3210 0
 23083 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 23084 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 23085 01fa 0F48     		ldr	r0, .L889+12
 23086 01fc 1346     		mov	r3, r2
 23087 01fe DB00     		lsls	r3, r3, #3
 23088 0200 9B1A     		subs	r3, r3, r2
 23089 0202 1B01     		lsls	r3, r3, #4
 23090 0204 0344     		add	r3, r3, r0
 23091 0206 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 504


 23092 0208 1A68     		ldr	r2, [r3]
 23093 020a 0D48     		ldr	r0, .L889+20
 23094 020c 0B01     		lsls	r3, r1, #4
 23095 020e 0344     		add	r3, r3, r0
 23096 0210 1A60     		str	r2, [r3]
 23097              	.L884:
3189:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23098              		.loc 1 3189 0 discriminator 2
 23099 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23100 0214 0133     		adds	r3, r3, #1
 23101 0216 BB71     		strb	r3, [r7, #6]
 23102              	.L880:
3189:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 23103              		.loc 1 3189 0 is_stmt 0 discriminator 1
 23104 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 23105 021a 012B     		cmp	r3, #1
 23106 021c 7FF637AF 		bls	.L887
 23107              	.L888:
 23108              	.LBE23:
3211:..\src/command_processing.c ****             }
3212:..\src/command_processing.c ****         }  
3213:..\src/command_processing.c ****     }
3214:..\src/command_processing.c **** }
 23109              		.loc 1 3214 0 is_stmt 1
 23110 0220 00BF     		nop
 23111 0222 0837     		adds	r7, r7, #8
 23112              		.cfi_def_cfa_offset 8
 23113 0224 BD46     		mov	sp, r7
 23114              		.cfi_def_cfa_register 13
 23115              		@ sp needed
 23116 0226 90BC     		pop	{r4, r7}
 23117              		.cfi_restore 7
 23118              		.cfi_restore 4
 23119              		.cfi_def_cfa_offset 0
 23120 0228 7047     		bx	lr
 23121              	.L890:
 23122 022a 00BF     		.align	2
 23123              	.L889:
 23124 022c 00000000 		.word	g_rx
 23125 0230 04000000 		.word	last_aux_int16.11279
 23126 0234 00000000 		.word	change_ext_ref_flag
 23127 0238 00000000 		.word	c_mem
 23128 023c 00000000 		.word	g_mem
 23129 0240 00000000 		.word	g_refNew
 23130              		.cfi_endproc
 23131              	.LFE93:
 23132              		.size	cmd_set_inputs, .-cmd_set_inputs
 23133              		.section	.text.cmd_activate,"ax",%progbits
 23134              		.align	2
 23135              		.global	cmd_activate
 23136              		.thumb
 23137              		.thumb_func
 23138              		.type	cmd_activate, %function
 23139              	cmd_activate:
 23140              	.LFB94:
3215:..\src/command_processing.c **** 
3216:..\src/command_processing.c **** void cmd_activate(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 505


 23141              		.loc 1 3216 0
 23142              		.cfi_startproc
 23143              		@ args = 0, pretend = 0, frame = 8
 23144              		@ frame_needed = 1, uses_anonymous_args = 0
 23145 0000 80B5     		push	{r7, lr}
 23146              		.cfi_def_cfa_offset 8
 23147              		.cfi_offset 7, -8
 23148              		.cfi_offset 14, -4
 23149 0002 82B0     		sub	sp, sp, #8
 23150              		.cfi_def_cfa_offset 16
 23151 0004 00AF     		add	r7, sp, #0
 23152              		.cfi_def_cfa_register 7
3217:..\src/command_processing.c ****     
3218:..\src/command_processing.c ****     // Store new value reads
3219:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 23153              		.loc 1 3219 0
 23154 0006 294B     		ldr	r3, .L898
 23155 0008 5B78     		ldrb	r3, [r3, #1]
 23156 000a FB71     		strb	r3, [r7, #7]
3220:..\src/command_processing.c ****     
3221:..\src/command_processing.c ****     // Check type of control mode enabled
3222:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 23157              		.loc 1 3222 0
 23158 000c 284B     		ldr	r3, .L898+4
 23159 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23160 0012 002B     		cmp	r3, #0
 23161 0014 04D0     		beq	.L892
 23162              		.loc 1 3222 0 is_stmt 0 discriminator 1
 23163 0016 264B     		ldr	r3, .L898+4
 23164 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 23165 001c 032B     		cmp	r3, #3
 23166 001e 0BD1     		bne	.L893
 23167              	.L892:
3223:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 23168              		.loc 1 3223 0 is_stmt 1
 23169 0020 234B     		ldr	r3, .L898+4
 23170 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23171 0026 1946     		mov	r1, r3
 23172 0028 224A     		ldr	r2, .L898+8
 23173 002a 3423     		movs	r3, #52
 23174 002c 03FB01F3 		mul	r3, r3, r1
 23175 0030 1344     		add	r3, r3, r2
 23176 0032 1B68     		ldr	r3, [r3]
 23177 0034 204A     		ldr	r2, .L898+12
 23178 0036 1360     		str	r3, [r2]
 23179              	.L893:
3224:..\src/command_processing.c ****     }
3225:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 23180              		.loc 1 3225 0
 23181 0038 FB79     		ldrb	r3, [r7, #7]
 23182 003a 03F00103 		and	r3, r3, #1
 23183 003e DAB2     		uxtb	r2, r3
 23184 0040 1D4B     		ldr	r3, .L898+12
 23185 0042 1A73     		strb	r2, [r3, #12]
3226:..\src/command_processing.c ****     
3227:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3228:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 506


3229:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3230:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3231:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3232:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3233:..\src/command_processing.c ****         }
3234:..\src/command_processing.c ****         
3235:..\src/command_processing.c ****         // Activate or deactivate the valve
3236:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3237:..\src/command_processing.c ****     }
3238:..\src/command_processing.c **** #endif
3239:..\src/command_processing.c ****     
3240:..\src/command_processing.c ****     // Activate/Deactivate motor
3241:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 23186              		.loc 1 3241 0
 23187 0044 1C4B     		ldr	r3, .L898+12
 23188 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23189 0048 1946     		mov	r1, r3
 23190 004a 0020     		movs	r0, #0
 23191 004c FFF7FEFF 		bl	enable_motor
3242:..\src/command_processing.c ****     
3243:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23192              		.loc 1 3243 0
 23193 0050 174B     		ldr	r3, .L898+4
 23194 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23195 0056 012B     		cmp	r3, #1
 23196 0058 23D1     		bne	.L897
3244:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 23197              		.loc 1 3244 0
 23198 005a 154B     		ldr	r3, .L898+4
 23199 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23200 0060 002B     		cmp	r3, #0
 23201 0062 04D0     		beq	.L895
 23202              		.loc 1 3244 0 is_stmt 0 discriminator 1
 23203 0064 124B     		ldr	r3, .L898+4
 23204 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 23205 006a 032B     		cmp	r3, #3
 23206 006c 0BD1     		bne	.L896
 23207              	.L895:
3245:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 23208              		.loc 1 3245 0 is_stmt 1
 23209 006e 104B     		ldr	r3, .L898+4
 23210 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23211 0074 1946     		mov	r1, r3
 23212 0076 0F4A     		ldr	r2, .L898+8
 23213 0078 3423     		movs	r3, #52
 23214 007a 03FB01F3 		mul	r3, r3, r1
 23215 007e 1344     		add	r3, r3, r2
 23216 0080 1B68     		ldr	r3, [r3]
 23217 0082 0D4A     		ldr	r2, .L898+12
 23218 0084 1361     		str	r3, [r2, #16]
 23219              	.L896:
3246:..\src/command_processing.c ****         }
3247:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 23220              		.loc 1 3247 0
 23221 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23222 0088 5B08     		lsrs	r3, r3, #1
 23223 008a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 507


 23224 008c 03F00103 		and	r3, r3, #1
 23225 0090 DAB2     		uxtb	r2, r3
 23226 0092 094B     		ldr	r3, .L898+12
 23227 0094 1A77     		strb	r2, [r3, #28]
3248:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 23228              		.loc 1 3248 0
 23229 0096 084B     		ldr	r3, .L898+12
 23230 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23231 009a 1946     		mov	r1, r3
 23232 009c 0120     		movs	r0, #1
 23233 009e FFF7FEFF 		bl	enable_motor
 23234              	.L897:
3249:..\src/command_processing.c ****     }
3250:..\src/command_processing.c ****     
3251:..\src/command_processing.c **** }
 23235              		.loc 1 3251 0
 23236 00a2 00BF     		nop
 23237 00a4 0837     		adds	r7, r7, #8
 23238              		.cfi_def_cfa_offset 8
 23239 00a6 BD46     		mov	sp, r7
 23240              		.cfi_def_cfa_register 13
 23241              		@ sp needed
 23242 00a8 80BD     		pop	{r7, pc}
 23243              	.L899:
 23244 00aa 00BF     		.align	2
 23245              	.L898:
 23246 00ac 00000000 		.word	g_rx
 23247 00b0 00000000 		.word	g_mem
 23248 00b4 00000000 		.word	g_meas
 23249 00b8 00000000 		.word	g_refNew
 23250              		.cfi_endproc
 23251              	.LFE94:
 23252              		.size	cmd_activate, .-cmd_activate
 23253              		.section	.text.cmd_get_activate,"ax",%progbits
 23254              		.align	2
 23255              		.global	cmd_get_activate
 23256              		.thumb
 23257              		.thumb_func
 23258              		.type	cmd_get_activate, %function
 23259              	cmd_get_activate:
 23260              	.LFB95:
3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c **** void cmd_get_activate(){
 23261              		.loc 1 3253 0
 23262              		.cfi_startproc
 23263              		@ args = 0, pretend = 0, frame = 8
 23264              		@ frame_needed = 1, uses_anonymous_args = 0
 23265 0000 80B5     		push	{r7, lr}
 23266              		.cfi_def_cfa_offset 8
 23267              		.cfi_offset 7, -8
 23268              		.cfi_offset 14, -4
 23269 0002 82B0     		sub	sp, sp, #8
 23270              		.cfi_def_cfa_offset 16
 23271 0004 00AF     		add	r7, sp, #0
 23272              		.cfi_def_cfa_register 7
3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     uint8 packet_data[3];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 508


3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     // Header        
3258:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 23273              		.loc 1 3258 0
 23274 0006 8123     		movs	r3, #129
 23275 0008 3B71     		strb	r3, [r7, #4]
3259:..\src/command_processing.c ****     
3260:..\src/command_processing.c ****     // Fill payload
3261:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 23276              		.loc 1 3261 0
 23277 000a 124B     		ldr	r3, .L903
 23278 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23279 0010 012B     		cmp	r3, #1
 23280 0012 0BD1     		bne	.L901
3262:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 23281              		.loc 1 3262 0
 23282 0014 104B     		ldr	r3, .L903+4
 23283 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 23284 0018 5B00     		lsls	r3, r3, #1
 23285 001a 5AB2     		sxtb	r2, r3
 23286 001c 0E4B     		ldr	r3, .L903+4
 23287 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23288 0020 5BB2     		sxtb	r3, r3
 23289 0022 1343     		orrs	r3, r3, r2
 23290 0024 5BB2     		sxtb	r3, r3
 23291 0026 DBB2     		uxtb	r3, r3
 23292 0028 7B71     		strb	r3, [r7, #5]
 23293 002a 02E0     		b	.L902
 23294              	.L901:
3263:..\src/command_processing.c ****     } 
3264:..\src/command_processing.c ****     else {
3265:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 23295              		.loc 1 3265 0
 23296 002c 0A4B     		ldr	r3, .L903+4
 23297 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 23298 0030 7B71     		strb	r3, [r7, #5]
 23299              	.L902:
3266:..\src/command_processing.c ****     }
3267:..\src/command_processing.c ****     
3268:..\src/command_processing.c ****     // Calculate checksum
3269:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 23300              		.loc 1 3269 0
 23301 0032 3B1D     		adds	r3, r7, #4
 23302 0034 0221     		movs	r1, #2
 23303 0036 1846     		mov	r0, r3
 23304 0038 FFF7FEFF 		bl	LCRChecksum
 23305 003c 0346     		mov	r3, r0
 23306 003e BB71     		strb	r3, [r7, #6]
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     // Send package to UART
3272:..\src/command_processing.c ****     commWrite(packet_data, 3);
 23307              		.loc 1 3272 0
 23308 0040 3B1D     		adds	r3, r7, #4
 23309 0042 0321     		movs	r1, #3
 23310 0044 1846     		mov	r0, r3
 23311 0046 FFF7FEFF 		bl	commWrite
3273:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 509


3274:..\src/command_processing.c **** }
 23312              		.loc 1 3274 0
 23313 004a 00BF     		nop
 23314 004c 0837     		adds	r7, r7, #8
 23315              		.cfi_def_cfa_offset 8
 23316 004e BD46     		mov	sp, r7
 23317              		.cfi_def_cfa_register 13
 23318              		@ sp needed
 23319 0050 80BD     		pop	{r7, pc}
 23320              	.L904:
 23321 0052 00BF     		.align	2
 23322              	.L903:
 23323 0054 00000000 		.word	g_mem
 23324 0058 00000000 		.word	g_ref
 23325              		.cfi_endproc
 23326              	.LFE95:
 23327              		.size	cmd_get_activate, .-cmd_get_activate
 23328              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 23329              		.align	2
 23330              		.global	cmd_get_curr_and_meas
 23331              		.thumb
 23332              		.thumb_func
 23333              		.type	cmd_get_curr_and_meas, %function
 23334              	cmd_get_curr_and_meas:
 23335              	.LFB96:
3275:..\src/command_processing.c **** 
3276:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 23336              		.loc 1 3276 0
 23337              		.cfi_startproc
 23338              		@ args = 0, pretend = 0, frame = 16
 23339              		@ frame_needed = 1, uses_anonymous_args = 0
 23340 0000 90B5     		push	{r4, r7, lr}
 23341              		.cfi_def_cfa_offset 12
 23342              		.cfi_offset 4, -12
 23343              		.cfi_offset 7, -8
 23344              		.cfi_offset 14, -4
 23345 0002 85B0     		sub	sp, sp, #20
 23346              		.cfi_def_cfa_offset 32
 23347 0004 00AF     		add	r7, sp, #0
 23348              		.cfi_def_cfa_register 7
3277:..\src/command_processing.c ****     
3278:..\src/command_processing.c ****     uint8 CYDATA index;
3279:..\src/command_processing.c ****     int16 aux_int16;
3280:..\src/command_processing.c ****    
3281:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3282:..\src/command_processing.c ****     
3283:..\src/command_processing.c ****     uint8 packet_data[12]; 
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c ****     //Header package
3286:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 23349              		.loc 1 3286 0
 23350 0006 8623     		movs	r3, #134
 23351 0008 3B70     		strb	r3, [r7]
3287:..\src/command_processing.c **** 
3288:..\src/command_processing.c ****     // Currents
3289:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 23352              		.loc 1 3289 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 510


 23353 000a 484B     		ldr	r3, .L910
 23354 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23355 0010 1946     		mov	r1, r3
 23356 0012 474A     		ldr	r2, .L910+4
 23357 0014 3423     		movs	r3, #52
 23358 0016 03FB01F3 		mul	r3, r3, r1
 23359 001a 1344     		add	r3, r3, r2
 23360 001c 0C33     		adds	r3, r3, #12
 23361 001e 1B68     		ldr	r3, [r3]
 23362 0020 1BB2     		sxth	r3, r3
 23363 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3290:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23364              		.loc 1 3290 0
 23365 0024 07F10C03 		add	r3, r7, #12
 23366 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23367 002a BB70     		strb	r3, [r7, #2]
3291:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23368              		.loc 1 3291 0
 23369 002c 07F10C03 		add	r3, r7, #12
 23370 0030 0133     		adds	r3, r3, #1
 23371 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23372 0034 7B70     		strb	r3, [r7, #1]
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23373              		.loc 1 3293 0
 23374 0036 3F4B     		ldr	r3, .L910+8
 23375 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23376 003c 012B     		cmp	r3, #1
 23377 003e 0DD1     		bne	.L906
3294:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23378              		.loc 1 3294 0
 23379 0040 3A4B     		ldr	r3, .L910
 23380 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23381 0046 1946     		mov	r1, r3
 23382 0048 394A     		ldr	r2, .L910+4
 23383 004a 3423     		movs	r3, #52
 23384 004c 03FB01F3 		mul	r3, r3, r1
 23385 0050 1344     		add	r3, r3, r2
 23386 0052 0C33     		adds	r3, r3, #12
 23387 0054 1B68     		ldr	r3, [r3]
 23388 0056 1BB2     		sxth	r3, r3
 23389 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 23390 005a 0CE0     		b	.L907
 23391              	.L906:
3295:..\src/command_processing.c ****     }
3296:..\src/command_processing.c ****     else {
3297:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23392              		.loc 1 3297 0
 23393 005c 334B     		ldr	r3, .L910
 23394 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23395 0062 1946     		mov	r1, r3
 23396 0064 324A     		ldr	r2, .L910+4
 23397 0066 3423     		movs	r3, #52
 23398 0068 03FB01F3 		mul	r3, r3, r1
 23399 006c 1344     		add	r3, r3, r2
 23400 006e 1033     		adds	r3, r3, #16
 23401 0070 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 511


 23402 0072 1BB2     		sxth	r3, r3
 23403 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 23404              	.L907:
3298:..\src/command_processing.c ****     }
3299:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23405              		.loc 1 3299 0
 23406 0076 07F10C03 		add	r3, r7, #12
 23407 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23408 007c 3B71     		strb	r3, [r7, #4]
3300:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23409              		.loc 1 3300 0
 23410 007e 07F10C03 		add	r3, r7, #12
 23411 0082 0133     		adds	r3, r3, #1
 23412 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23413 0086 FB70     		strb	r3, [r7, #3]
3301:..\src/command_processing.c **** 
3302:..\src/command_processing.c ****     // Positions
3303:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23414              		.loc 1 3303 0
 23415 0088 0323     		movs	r3, #3
 23416 008a FB73     		strb	r3, [r7, #15]
 23417 008c 38E0     		b	.L908
 23418              	.L909:
3304:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23419              		.loc 1 3304 0
 23420 008e 274B     		ldr	r3, .L910
 23421 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23422 0094 1A46     		mov	r2, r3
 23423 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23424 0098 2548     		ldr	r0, .L910+4
 23425 009a 1346     		mov	r3, r2
 23426 009c 5B00     		lsls	r3, r3, #1
 23427 009e 1344     		add	r3, r3, r2
 23428 00a0 9B00     		lsls	r3, r3, #2
 23429 00a2 1344     		add	r3, r3, r2
 23430 00a4 0B44     		add	r3, r3, r1
 23431 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23432 00aa 204B     		ldr	r3, .L910
 23433 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23434 00b0 1C46     		mov	r4, r3
 23435 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23436 00b4 1D48     		ldr	r0, .L910
 23437 00b6 2346     		mov	r3, r4
 23438 00b8 5B00     		lsls	r3, r3, #1
 23439 00ba 2344     		add	r3, r3, r4
 23440 00bc 1B01     		lsls	r3, r3, #4
 23441 00be 0344     		add	r3, r3, r0
 23442 00c0 0B44     		add	r3, r3, r1
 23443 00c2 03F29513 		addw	r3, r3, #405
 23444 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23445 00c8 42FA03F3 		asr	r3, r2, r3
 23446 00cc 1BB2     		sxth	r3, r3
 23447 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3305:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 23448              		.loc 1 3305 0
 23449 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23450 00d2 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 512


 23451 00d4 0633     		adds	r3, r3, #6
 23452 00d6 07F10C02 		add	r2, r7, #12
 23453 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23454 00dc 07F11001 		add	r1, r7, #16
 23455 00e0 0B44     		add	r3, r3, r1
 23456 00e2 03F8102C 		strb	r2, [r3, #-16]
3306:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 23457              		.loc 1 3306 0
 23458 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23459 00e8 5B00     		lsls	r3, r3, #1
 23460 00ea 5A1D     		adds	r2, r3, #5
 23461 00ec 07F10C03 		add	r3, r7, #12
 23462 00f0 0133     		adds	r3, r3, #1
 23463 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23464 00f4 07F11003 		add	r3, r7, #16
 23465 00f8 1344     		add	r3, r3, r2
 23466 00fa 0A46     		mov	r2, r1
 23467 00fc 03F8102C 		strb	r2, [r3, #-16]
 23468              	.L908:
3303:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23469              		.loc 1 3303 0 discriminator 1
 23470 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23471 0102 5A1E     		subs	r2, r3, #1
 23472 0104 FA73     		strb	r2, [r7, #15]
 23473 0106 002B     		cmp	r3, #0
 23474 0108 C1D1     		bne	.L909
3307:..\src/command_processing.c ****     }
3308:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3309:..\src/command_processing.c ****         
3310:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 23475              		.loc 1 3310 0
 23476 010a 3B46     		mov	r3, r7
 23477 010c 0B21     		movs	r1, #11
 23478 010e 1846     		mov	r0, r3
 23479 0110 FFF7FEFF 		bl	LCRChecksum
 23480 0114 0346     		mov	r3, r0
 23481 0116 FB72     		strb	r3, [r7, #11]
3311:..\src/command_processing.c ****     commWrite(packet_data, 12);
 23482              		.loc 1 3311 0
 23483 0118 3B46     		mov	r3, r7
 23484 011a 0C21     		movs	r1, #12
 23485 011c 1846     		mov	r0, r3
 23486 011e FFF7FEFF 		bl	commWrite
3312:..\src/command_processing.c ****    
3313:..\src/command_processing.c **** }
 23487              		.loc 1 3313 0
 23488 0122 00BF     		nop
 23489 0124 1437     		adds	r7, r7, #20
 23490              		.cfi_def_cfa_offset 12
 23491 0126 BD46     		mov	sp, r7
 23492              		.cfi_def_cfa_register 13
 23493              		@ sp needed
 23494 0128 90BD     		pop	{r4, r7, pc}
 23495              	.L911:
 23496 012a 00BF     		.align	2
 23497              	.L910:
 23498 012c 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 513


 23499 0130 00000000 		.word	g_measOld
 23500 0134 00000000 		.word	c_mem
 23501              		.cfi_endproc
 23502              	.LFE96:
 23503              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 23504              		.global	__aeabi_dmul
 23505              		.global	__aeabi_d2iz
 23506              		.section	.text.cmd_get_currents,"ax",%progbits
 23507              		.align	2
 23508              		.global	cmd_get_currents
 23509              		.thumb
 23510              		.thumb_func
 23511              		.type	cmd_get_currents, %function
 23512              	cmd_get_currents:
 23513              	.LFB97:
3314:..\src/command_processing.c **** 
3315:..\src/command_processing.c **** void cmd_get_currents(){
 23514              		.loc 1 3315 0
 23515              		.cfi_startproc
 23516              		@ args = 0, pretend = 0, frame = 16
 23517              		@ frame_needed = 1, uses_anonymous_args = 0
 23518 0000 90B5     		push	{r4, r7, lr}
 23519              		.cfi_def_cfa_offset 12
 23520              		.cfi_offset 4, -12
 23521              		.cfi_offset 7, -8
 23522              		.cfi_offset 14, -4
 23523 0002 85B0     		sub	sp, sp, #20
 23524              		.cfi_def_cfa_offset 32
 23525 0004 00AF     		add	r7, sp, #0
 23526              		.cfi_def_cfa_register 7
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     uint8 packet_data[6]; 
3320:..\src/command_processing.c ****     int16 aux_int16;
3321:..\src/command_processing.c ****     
3322:..\src/command_processing.c ****     //Header package
3323:..\src/command_processing.c **** 
3324:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 23527              		.loc 1 3324 0
 23528 0006 8523     		movs	r3, #133
 23529 0008 3B72     		strb	r3, [r7, #8]
3325:..\src/command_processing.c **** 
3326:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 23530              		.loc 1 3326 0
 23531 000a 334B     		ldr	r3, .L917
 23532 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 23533 0010 022B     		cmp	r3, #2
 23534 0012 0DD0     		beq	.L913
3327:..\src/command_processing.c ****         // Currents
3328:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 23535              		.loc 1 3328 0
 23536 0014 314B     		ldr	r3, .L917+4
 23537 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23538 001a 1946     		mov	r1, r3
 23539 001c 304A     		ldr	r2, .L917+8
 23540 001e 3423     		movs	r3, #52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 514


 23541 0020 03FB01F3 		mul	r3, r3, r1
 23542 0024 1344     		add	r3, r3, r2
 23543 0026 0C33     		adds	r3, r3, #12
 23544 0028 1B68     		ldr	r3, [r3]
 23545 002a 1BB2     		sxth	r3, r3
 23546 002c FB80     		strh	r3, [r7, #6]	@ movhi
 23547 002e 12E0     		b	.L914
 23548              	.L913:
3329:..\src/command_processing.c ****     }
3330:..\src/command_processing.c ****     else {
3331:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3332:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 23549              		.loc 1 3332 0
 23550 0030 2C4B     		ldr	r3, .L917+12
 23551 0032 1B68     		ldr	r3, [r3]	@ float
 23552 0034 1846     		mov	r0, r3
 23553 0036 FFF7FEFF 		bl	__aeabi_f2d
 23554 003a 4FF00002 		mov	r2, #0
 23555 003e 2A4B     		ldr	r3, .L917+16
 23556 0040 FFF7FEFF 		bl	__aeabi_dmul
 23557 0044 0346     		mov	r3, r0
 23558 0046 0C46     		mov	r4, r1
 23559 0048 1846     		mov	r0, r3
 23560 004a 2146     		mov	r1, r4
 23561 004c FFF7FEFF 		bl	__aeabi_d2iz
 23562 0050 0346     		mov	r3, r0
 23563 0052 1BB2     		sxth	r3, r3
 23564 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 23565              	.L914:
3333:..\src/command_processing.c ****     }
3334:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23566              		.loc 1 3334 0
 23567 0056 BB1D     		adds	r3, r7, #6
 23568 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23569 005a BB72     		strb	r3, [r7, #10]
3335:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23570              		.loc 1 3335 0
 23571 005c BB1D     		adds	r3, r7, #6
 23572 005e 0133     		adds	r3, r3, #1
 23573 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23574 0062 7B72     		strb	r3, [r7, #9]
3336:..\src/command_processing.c ****     
3337:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 23575              		.loc 1 3337 0
 23576 0064 1C4B     		ldr	r3, .L917
 23577 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23578 006a 012B     		cmp	r3, #1
 23579 006c 0DD1     		bne	.L915
3338:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 23580              		.loc 1 3338 0
 23581 006e 1B4B     		ldr	r3, .L917+4
 23582 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23583 0074 1946     		mov	r1, r3
 23584 0076 1A4A     		ldr	r2, .L917+8
 23585 0078 3423     		movs	r3, #52
 23586 007a 03FB01F3 		mul	r3, r3, r1
 23587 007e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 515


 23588 0080 0C33     		adds	r3, r3, #12
 23589 0082 1B68     		ldr	r3, [r3]
 23590 0084 1BB2     		sxth	r3, r3
 23591 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 23592 0088 0CE0     		b	.L916
 23593              	.L915:
3339:..\src/command_processing.c ****     }
3340:..\src/command_processing.c ****     else {
3341:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 23594              		.loc 1 3341 0
 23595 008a 144B     		ldr	r3, .L917+4
 23596 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23597 0090 1946     		mov	r1, r3
 23598 0092 134A     		ldr	r2, .L917+8
 23599 0094 3423     		movs	r3, #52
 23600 0096 03FB01F3 		mul	r3, r3, r1
 23601 009a 1344     		add	r3, r3, r2
 23602 009c 1033     		adds	r3, r3, #16
 23603 009e 1B68     		ldr	r3, [r3]
 23604 00a0 1BB2     		sxth	r3, r3
 23605 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 23606              	.L916:
3342:..\src/command_processing.c ****     }
3343:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23607              		.loc 1 3343 0
 23608 00a4 BB1D     		adds	r3, r7, #6
 23609 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23610 00a8 3B73     		strb	r3, [r7, #12]
3344:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23611              		.loc 1 3344 0
 23612 00aa BB1D     		adds	r3, r7, #6
 23613 00ac 0133     		adds	r3, r3, #1
 23614 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23615 00b0 FB72     		strb	r3, [r7, #11]
3345:..\src/command_processing.c **** 
3346:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23616              		.loc 1 3348 0
 23617 00b2 07F10803 		add	r3, r7, #8
 23618 00b6 0521     		movs	r1, #5
 23619 00b8 1846     		mov	r0, r3
 23620 00ba FFF7FEFF 		bl	LCRChecksum
 23621 00be 0346     		mov	r3, r0
 23622 00c0 7B73     		strb	r3, [r7, #13]
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23623              		.loc 1 3350 0
 23624 00c2 07F10803 		add	r3, r7, #8
 23625 00c6 0621     		movs	r1, #6
 23626 00c8 1846     		mov	r0, r3
 23627 00ca FFF7FEFF 		bl	commWrite
3351:..\src/command_processing.c **** }
 23628              		.loc 1 3351 0
 23629 00ce 00BF     		nop
 23630 00d0 1437     		adds	r7, r7, #20
 23631              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 516


 23632 00d2 BD46     		mov	sp, r7
 23633              		.cfi_def_cfa_register 13
 23634              		@ sp needed
 23635 00d4 90BD     		pop	{r4, r7, pc}
 23636              	.L918:
 23637 00d6 00BF     		.align	2
 23638              	.L917:
 23639 00d8 00000000 		.word	c_mem
 23640 00dc 00000000 		.word	g_mem
 23641 00e0 00000000 		.word	g_measOld
 23642 00e4 00000000 		.word	g_fb_meas
 23643 00e8 00005940 		.word	1079574528
 23644              		.cfi_endproc
 23645              	.LFE97:
 23646              		.size	cmd_get_currents, .-cmd_get_currents
 23647              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 23648              		.align	2
 23649              		.global	cmd_get_currents_for_cuff
 23650              		.thumb
 23651              		.thumb_func
 23652              		.type	cmd_get_currents_for_cuff, %function
 23653              	cmd_get_currents_for_cuff:
 23654              	.LFB98:
3352:..\src/command_processing.c **** 
3353:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 23655              		.loc 1 3353 0
 23656              		.cfi_startproc
 23657              		@ args = 0, pretend = 0, frame = 8
 23658              		@ frame_needed = 1, uses_anonymous_args = 0
 23659 0000 80B5     		push	{r7, lr}
 23660              		.cfi_def_cfa_offset 8
 23661              		.cfi_offset 7, -8
 23662              		.cfi_offset 14, -4
 23663 0002 82B0     		sub	sp, sp, #8
 23664              		.cfi_def_cfa_offset 16
 23665 0004 00AF     		add	r7, sp, #0
 23666              		.cfi_def_cfa_register 7
3354:..\src/command_processing.c ****     
3355:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3356:..\src/command_processing.c ****     
3357:..\src/command_processing.c ****     uint8 packet_data[4]; 
3358:..\src/command_processing.c ****     int16 aux_int16;
3359:..\src/command_processing.c ****     
3360:..\src/command_processing.c ****     //Header package
3361:..\src/command_processing.c **** 
3362:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 23667              		.loc 1 3362 0
 23668 0006 8E23     		movs	r3, #142
 23669 0008 3B71     		strb	r3, [r7, #4]
3363:..\src/command_processing.c **** 
3364:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 23670              		.loc 1 3364 0
 23671 000a 144B     		ldr	r3, .L920
 23672 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23673 0010 1946     		mov	r1, r3
 23674 0012 134A     		ldr	r2, .L920+4
 23675 0014 3423     		movs	r3, #52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 517


 23676 0016 03FB01F3 		mul	r3, r3, r1
 23677 001a 1344     		add	r3, r3, r2
 23678 001c 1033     		adds	r3, r3, #16
 23679 001e 1B68     		ldr	r3, [r3]
 23680 0020 1BB2     		sxth	r3, r3
 23681 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3365:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23682              		.loc 1 3365 0
 23683 0024 BB1C     		adds	r3, r7, #2
 23684 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23685 0028 BB71     		strb	r3, [r7, #6]
3366:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23686              		.loc 1 3366 0
 23687 002a BB1C     		adds	r3, r7, #2
 23688 002c 0133     		adds	r3, r3, #1
 23689 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23690 0030 7B71     		strb	r3, [r7, #5]
3367:..\src/command_processing.c **** 
3368:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 23691              		.loc 1 3370 0
 23692 0032 3B1D     		adds	r3, r7, #4
 23693 0034 0321     		movs	r1, #3
 23694 0036 1846     		mov	r0, r3
 23695 0038 FFF7FEFF 		bl	LCRChecksum
 23696 003c 0346     		mov	r3, r0
 23697 003e FB71     		strb	r3, [r7, #7]
3371:..\src/command_processing.c ****     
3372:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 23698              		.loc 1 3372 0
 23699 0040 064B     		ldr	r3, .L920
 23700 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 23701 0046 013B     		subs	r3, r3, #1
 23702 0048 DAB2     		uxtb	r2, r3
 23703 004a 3B1D     		adds	r3, r7, #4
 23704 004c 0421     		movs	r1, #4
 23705 004e 1846     		mov	r0, r3
 23706 0050 FFF7FEFF 		bl	commWriteID
3373:..\src/command_processing.c **** }
 23707              		.loc 1 3373 0
 23708 0054 00BF     		nop
 23709 0056 0837     		adds	r7, r7, #8
 23710              		.cfi_def_cfa_offset 8
 23711 0058 BD46     		mov	sp, r7
 23712              		.cfi_def_cfa_register 13
 23713              		@ sp needed
 23714 005a 80BD     		pop	{r7, pc}
 23715              	.L921:
 23716              		.align	2
 23717              	.L920:
 23718 005c 00000000 		.word	g_mem
 23719 0060 00000000 		.word	g_measOld
 23720              		.cfi_endproc
 23721              	.LFE98:
 23722              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 23723              		.section	.text.commReadResCurrFromSH,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 518


 23724              		.align	2
 23725              		.global	commReadResCurrFromSH
 23726              		.thumb
 23727              		.thumb_func
 23728              		.type	commReadResCurrFromSH, %function
 23729              	commReadResCurrFromSH:
 23730              	.LFB99:
3374:..\src/command_processing.c **** 
3375:..\src/command_processing.c **** //==============================================================================
3376:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3377:..\src/command_processing.c **** //==============================================================================
3378:..\src/command_processing.c **** 
3379:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3380:..\src/command_processing.c **** {
 23731              		.loc 1 3380 0
 23732              		.cfi_startproc
 23733              		@ args = 0, pretend = 0, frame = 32
 23734              		@ frame_needed = 1, uses_anonymous_args = 0
 23735 0000 80B5     		push	{r7, lr}
 23736              		.cfi_def_cfa_offset 8
 23737              		.cfi_offset 7, -8
 23738              		.cfi_offset 14, -4
 23739 0002 88B0     		sub	sp, sp, #32
 23740              		.cfi_def_cfa_offset 40
 23741 0004 00AF     		add	r7, sp, #0
 23742              		.cfi_def_cfa_register 7
3381:..\src/command_processing.c ****     uint8 packet_data[16];
3382:..\src/command_processing.c ****     uint8 packet_lenght;
3383:..\src/command_processing.c ****     int16 curr_diff = 0;
 23743              		.loc 1 3383 0
 23744 0006 0023     		movs	r3, #0
 23745 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3384:..\src/command_processing.c ****     uint32 t_start, t_end;
3385:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 23746              		.loc 1 3385 0
 23747 000a 0123     		movs	r3, #1
 23748 000c 7B77     		strb	r3, [r7, #29]
3386:..\src/command_processing.c **** 
3387:..\src/command_processing.c ****     packet_lenght = 2;
 23749              		.loc 1 3387 0
 23750 000e 0223     		movs	r3, #2
 23751 0010 3B77     		strb	r3, [r7, #28]
3388:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 23752              		.loc 1 3388 0
 23753 0012 8C23     		movs	r3, #140
 23754 0014 3B71     		strb	r3, [r7, #4]
3389:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 23755              		.loc 1 3389 0
 23756 0016 8C23     		movs	r3, #140
 23757 0018 7B71     		strb	r3, [r7, #5]
3390:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 23758              		.loc 1 3390 0
 23759 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 23760 001c 99B2     		uxth	r1, r3
 23761 001e 1D4B     		ldr	r3, .L929
 23762 0020 93F8B122 		ldrb	r2, [r3, #689]	@ zero_extendqisi2
 23763 0024 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 519


 23764 0026 1846     		mov	r0, r3
 23765 0028 FFF7FEFF 		bl	commWriteID
3391:..\src/command_processing.c **** 
3392:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 23766              		.loc 1 3392 0
 23767 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23768 0030 0346     		mov	r3, r0
 23769 0032 BB61     		str	r3, [r7, #24]
3393:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 23770              		.loc 1 3393 0
 23771 0034 18E0     		b	.L923
 23772              	.L926:
3394:..\src/command_processing.c ****         if (interrupt_flag){
 23773              		.loc 1 3394 0
 23774 0036 184B     		ldr	r3, .L929+4
 23775 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23776 003a 002B     		cmp	r3, #0
 23777 003c 04D0     		beq	.L924
3395:..\src/command_processing.c ****             interrupt_flag = FALSE;
 23778              		.loc 1 3395 0
 23779 003e 164B     		ldr	r3, .L929+4
 23780 0040 0022     		movs	r2, #0
 23781 0042 1A70     		strb	r2, [r3]
3396:..\src/command_processing.c ****             interrupt_manager();
 23782              		.loc 1 3396 0
 23783 0044 FFF7FEFF 		bl	interrupt_manager
 23784              	.L924:
3397:..\src/command_processing.c ****         }
3398:..\src/command_processing.c **** 
3399:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 23785              		.loc 1 3399 0
 23786 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 23787 004c 0346     		mov	r3, r0
 23788 004e 7B61     		str	r3, [r7, #20]
3400:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 23789              		.loc 1 3400 0
 23790 0050 BA69     		ldr	r2, [r7, #24]
 23791 0052 7B69     		ldr	r3, [r7, #20]
 23792 0054 D31A     		subs	r3, r2, r3
 23793 0056 114A     		ldr	r2, .L929+8
 23794 0058 9342     		cmp	r3, r2
 23795 005a 05D9     		bls	.L923
3401:..\src/command_processing.c ****             read_flag = FALSE;
 23796              		.loc 1 3401 0
 23797 005c 0023     		movs	r3, #0
 23798 005e 7B77     		strb	r3, [r7, #29]
3402:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 23799              		.loc 1 3402 0
 23800 0060 0F4B     		ldr	r3, .L929+12
 23801 0062 0022     		movs	r2, #0
 23802 0064 1A70     		strb	r2, [r3]
3403:..\src/command_processing.c ****             break;
 23803              		.loc 1 3403 0
 23804 0066 03E0     		b	.L925
 23805              	.L923:
3393:..\src/command_processing.c ****         if (interrupt_flag){
 23806              		.loc 1 3393 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 520


 23807 0068 0E4B     		ldr	r3, .L929+16
 23808 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23809 006c 8E2B     		cmp	r3, #142
 23810 006e E2D1     		bne	.L926
 23811              	.L925:
3404:..\src/command_processing.c ****         }
3405:..\src/command_processing.c ****     }
3406:..\src/command_processing.c **** 
3407:..\src/command_processing.c ****     if (read_flag) {
 23812              		.loc 1 3407 0
 23813 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23814 0072 002B     		cmp	r3, #0
 23815 0074 08D0     		beq	.L927
3408:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 23816              		.loc 1 3408 0
 23817 0076 0B4B     		ldr	r3, .L929+16
 23818 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23819 007a 1B02     		lsls	r3, r3, #8
 23820 007c 1AB2     		sxth	r2, r3
 23821 007e 094B     		ldr	r3, .L929+16
 23822 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 23823 0082 1BB2     		sxth	r3, r3
 23824 0084 1343     		orrs	r3, r3, r2
 23825 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 23826              	.L927:
3409:..\src/command_processing.c ****     }
3410:..\src/command_processing.c ****     
3411:..\src/command_processing.c ****     return curr_diff;
 23827              		.loc 1 3411 0
 23828 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3412:..\src/command_processing.c **** }
 23829              		.loc 1 3412 0
 23830 008c 1846     		mov	r0, r3
 23831 008e 2037     		adds	r7, r7, #32
 23832              		.cfi_def_cfa_offset 8
 23833 0090 BD46     		mov	sp, r7
 23834              		.cfi_def_cfa_register 13
 23835              		@ sp needed
 23836 0092 80BD     		pop	{r7, pc}
 23837              	.L930:
 23838              		.align	2
 23839              	.L929:
 23840 0094 00000000 		.word	c_mem
 23841 0098 00000000 		.word	interrupt_flag
 23842 009c 20AA4400 		.word	4500000
 23843 00a0 00000000 		.word	master_mode
 23844 00a4 00000000 		.word	g_rx
 23845              		.cfi_endproc
 23846              	.LFE99:
 23847              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 23848              		.section	.text.cmd_set_baudrate,"ax",%progbits
 23849              		.align	2
 23850              		.global	cmd_set_baudrate
 23851              		.thumb
 23852              		.thumb_func
 23853              		.type	cmd_set_baudrate, %function
 23854              	cmd_set_baudrate:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 521


 23855              	.LFB100:
3413:..\src/command_processing.c **** 
3414:..\src/command_processing.c **** void cmd_set_baudrate(){
 23856              		.loc 1 3414 0
 23857              		.cfi_startproc
 23858              		@ args = 0, pretend = 0, frame = 0
 23859              		@ frame_needed = 1, uses_anonymous_args = 0
 23860 0000 80B5     		push	{r7, lr}
 23861              		.cfi_def_cfa_offset 8
 23862              		.cfi_offset 7, -8
 23863              		.cfi_offset 14, -4
 23864 0002 00AF     		add	r7, sp, #0
 23865              		.cfi_def_cfa_register 7
3415:..\src/command_processing.c ****     
3416:..\src/command_processing.c ****     // Set BaudRate
3417:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 23866              		.loc 1 3417 0
 23867 0004 094B     		ldr	r3, .L936
 23868 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 23869 0008 094B     		ldr	r3, .L936+4
 23870 000a 83F8AA20 		strb	r2, [r3, #170]
3418:..\src/command_processing.c ****     
3419:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 23871              		.loc 1 3419 0
 23872 000e 074B     		ldr	r3, .L936
 23873 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 23874 0012 0D2B     		cmp	r3, #13
 23875 0014 04D1     		bne	.L935
3420:..\src/command_processing.c ****         case 13:
3421:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 23876              		.loc 1 3421 0
 23877 0016 0121     		movs	r1, #1
 23878 0018 0C20     		movs	r0, #12
 23879 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3422:..\src/command_processing.c ****             break;
 23880              		.loc 1 3422 0
 23881 001e 03E0     		b	.L934
 23882              	.L935:
3423:..\src/command_processing.c ****         default:
3424:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 23883              		.loc 1 3424 0
 23884 0020 0121     		movs	r1, #1
 23885 0022 0220     		movs	r0, #2
 23886 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 23887              	.L934:
3425:..\src/command_processing.c ****     }
3426:..\src/command_processing.c **** }
 23888              		.loc 1 3426 0
 23889 0028 00BF     		nop
 23890 002a 80BD     		pop	{r7, pc}
 23891              	.L937:
 23892              		.align	2
 23893              	.L936:
 23894 002c 00000000 		.word	g_rx
 23895 0030 00000000 		.word	c_mem
 23896              		.cfi_endproc
 23897              	.LFE100:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 522


 23898              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 23899              		.section	.text.cmd_ping,"ax",%progbits
 23900              		.align	2
 23901              		.global	cmd_ping
 23902              		.thumb
 23903              		.thumb_func
 23904              		.type	cmd_ping, %function
 23905              	cmd_ping:
 23906              	.LFB101:
3427:..\src/command_processing.c **** 
3428:..\src/command_processing.c **** void cmd_ping(){
 23907              		.loc 1 3428 0
 23908              		.cfi_startproc
 23909              		@ args = 0, pretend = 0, frame = 8
 23910              		@ frame_needed = 1, uses_anonymous_args = 0
 23911 0000 80B5     		push	{r7, lr}
 23912              		.cfi_def_cfa_offset 8
 23913              		.cfi_offset 7, -8
 23914              		.cfi_offset 14, -4
 23915 0002 82B0     		sub	sp, sp, #8
 23916              		.cfi_def_cfa_offset 16
 23917 0004 00AF     		add	r7, sp, #0
 23918              		.cfi_def_cfa_register 7
3429:..\src/command_processing.c **** 
3430:..\src/command_processing.c ****     uint8 packet_data[2];
3431:..\src/command_processing.c **** 
3432:..\src/command_processing.c ****     // Header
3433:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 23919              		.loc 1 3433 0
 23920 0006 0023     		movs	r3, #0
 23921 0008 3B71     		strb	r3, [r7, #4]
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     // Load Payload
3436:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 23922              		.loc 1 3436 0
 23923 000a 0023     		movs	r3, #0
 23924 000c 7B71     		strb	r3, [r7, #5]
3437:..\src/command_processing.c **** 
3438:..\src/command_processing.c ****     // Send Package to uart
3439:..\src/command_processing.c ****     commWrite(packet_data, 2);
 23925              		.loc 1 3439 0
 23926 000e 3B1D     		adds	r3, r7, #4
 23927 0010 0221     		movs	r1, #2
 23928 0012 1846     		mov	r0, r3
 23929 0014 FFF7FEFF 		bl	commWrite
3440:..\src/command_processing.c **** }
 23930              		.loc 1 3440 0
 23931 0018 00BF     		nop
 23932 001a 0837     		adds	r7, r7, #8
 23933              		.cfi_def_cfa_offset 8
 23934 001c BD46     		mov	sp, r7
 23935              		.cfi_def_cfa_register 13
 23936              		@ sp needed
 23937 001e 80BD     		pop	{r7, pc}
 23938              		.cfi_endproc
 23939              	.LFE101:
 23940              		.size	cmd_ping, .-cmd_ping
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 523


 23941              		.section	.text.cmd_get_inputs,"ax",%progbits
 23942              		.align	2
 23943              		.global	cmd_get_inputs
 23944              		.thumb
 23945              		.thumb_func
 23946              		.type	cmd_get_inputs, %function
 23947              	cmd_get_inputs:
 23948              	.LFB102:
3441:..\src/command_processing.c **** 
3442:..\src/command_processing.c **** void cmd_get_inputs(){
 23949              		.loc 1 3442 0
 23950              		.cfi_startproc
 23951              		@ args = 0, pretend = 0, frame = 16
 23952              		@ frame_needed = 1, uses_anonymous_args = 0
 23953 0000 80B5     		push	{r7, lr}
 23954              		.cfi_def_cfa_offset 8
 23955              		.cfi_offset 7, -8
 23956              		.cfi_offset 14, -4
 23957 0002 84B0     		sub	sp, sp, #16
 23958              		.cfi_def_cfa_offset 24
 23959 0004 00AF     		add	r7, sp, #0
 23960              		.cfi_def_cfa_register 7
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3445:..\src/command_processing.c **** 
3446:..\src/command_processing.c ****     uint8 packet_data[6]; 
3447:..\src/command_processing.c ****     int16 aux_int16;
3448:..\src/command_processing.c ****     
3449:..\src/command_processing.c ****     //Header package
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 23961              		.loc 1 3451 0
 23962 0006 8323     		movs	r3, #131
 23963 0008 3B72     		strb	r3, [r7, #8]
3452:..\src/command_processing.c ****         
3453:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 23964              		.loc 1 3453 0
 23965 000a 164B     		ldr	r3, .L940
 23966 000c 1A68     		ldr	r2, [r3]
 23967 000e 164B     		ldr	r3, .L940+4
 23968 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23969 0014 1846     		mov	r0, r3
 23970 0016 1449     		ldr	r1, .L940+4
 23971 0018 0346     		mov	r3, r0
 23972 001a 5B00     		lsls	r3, r3, #1
 23973 001c 0344     		add	r3, r3, r0
 23974 001e 1B01     		lsls	r3, r3, #4
 23975 0020 0B44     		add	r3, r3, r1
 23976 0022 03F29513 		addw	r3, r3, #405
 23977 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23978 0028 42FA03F3 		asr	r3, r2, r3
 23979 002c 1BB2     		sxth	r3, r3
 23980 002e FB80     		strh	r3, [r7, #6]	@ movhi
3454:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23981              		.loc 1 3454 0
 23982 0030 BB1D     		adds	r3, r7, #6
 23983 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 524


 23984 0034 BB72     		strb	r3, [r7, #10]
3455:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23985              		.loc 1 3455 0
 23986 0036 BB1D     		adds	r3, r7, #6
 23987 0038 0133     		adds	r3, r3, #1
 23988 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23989 003c 7B72     		strb	r3, [r7, #9]
3456:..\src/command_processing.c ****     
3457:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 23990              		.loc 1 3459 0
 23991 003e 07F10803 		add	r3, r7, #8
 23992 0042 0521     		movs	r1, #5
 23993 0044 1846     		mov	r0, r3
 23994 0046 FFF7FEFF 		bl	LCRChecksum
 23995 004a 0346     		mov	r3, r0
 23996 004c 7B73     		strb	r3, [r7, #13]
3460:..\src/command_processing.c **** 
3461:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23997              		.loc 1 3461 0
 23998 004e 07F10803 		add	r3, r7, #8
 23999 0052 0621     		movs	r1, #6
 24000 0054 1846     		mov	r0, r3
 24001 0056 FFF7FEFF 		bl	commWrite
3462:..\src/command_processing.c **** }
 24002              		.loc 1 3462 0
 24003 005a 00BF     		nop
 24004 005c 1037     		adds	r7, r7, #16
 24005              		.cfi_def_cfa_offset 8
 24006 005e BD46     		mov	sp, r7
 24007              		.cfi_def_cfa_register 13
 24008              		@ sp needed
 24009 0060 80BD     		pop	{r7, pc}
 24010              	.L941:
 24011 0062 00BF     		.align	2
 24012              	.L940:
 24013 0064 00000000 		.word	g_refOld
 24014 0068 00000000 		.word	g_mem
 24015              		.cfi_endproc
 24016              	.LFE102:
 24017              		.size	cmd_get_inputs, .-cmd_get_inputs
 24018              		.section	.text.cmd_store_params,"ax",%progbits
 24019              		.align	2
 24020              		.global	cmd_store_params
 24021              		.thumb
 24022              		.thumb_func
 24023              		.type	cmd_store_params, %function
 24024              	cmd_store_params:
 24025              	.LFB103:
3463:..\src/command_processing.c **** 
3464:..\src/command_processing.c **** void cmd_store_params(){
 24026              		.loc 1 3464 0
 24027              		.cfi_startproc
 24028              		@ args = 0, pretend = 0, frame = 16
 24029              		@ frame_needed = 1, uses_anonymous_args = 0
 24030 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 525


 24031              		.cfi_def_cfa_offset 8
 24032              		.cfi_offset 7, -8
 24033              		.cfi_offset 14, -4
 24034 0002 84B0     		sub	sp, sp, #16
 24035              		.cfi_def_cfa_offset 24
 24036 0004 00AF     		add	r7, sp, #0
 24037              		.cfi_def_cfa_register 7
3465:..\src/command_processing.c ****     
3466:..\src/command_processing.c ****     // Check input mode enabled
3467:..\src/command_processing.c ****     uint32 off_1;
3468:..\src/command_processing.c ****     float mult_1;
3469:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 24038              		.loc 1 3469 0
 24039 0006 0223     		movs	r3, #2
 24040 0008 FB73     		strb	r3, [r7, #15]
3470:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3471:..\src/command_processing.c ****     uint8 CYDATA old_id;
3472:..\src/command_processing.c ****     
3473:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 24041              		.loc 1 3473 0
 24042 000a 674B     		ldr	r3, .L953
 24043 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 24044 0010 002B     		cmp	r3, #0
 24045 0012 7CD1     		bne	.L943
3474:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 24046              		.loc 1 3474 0
 24047 0014 644B     		ldr	r3, .L953
 24048 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24049 001a 1946     		mov	r1, r3
 24050 001c 624A     		ldr	r2, .L953
 24051 001e 0B46     		mov	r3, r1
 24052 0020 5B00     		lsls	r3, r3, #1
 24053 0022 0B44     		add	r3, r3, r1
 24054 0024 1B01     		lsls	r3, r3, #4
 24055 0026 1344     		add	r3, r3, r2
 24056 0028 03F5CC73 		add	r3, r3, #408
 24057 002c 1B68     		ldr	r3, [r3]
 24058 002e BB60     		str	r3, [r7, #8]
3475:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 24059              		.loc 1 3475 0
 24060 0030 5D4B     		ldr	r3, .L953
 24061 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24062 0036 1946     		mov	r1, r3
 24063 0038 5B4A     		ldr	r2, .L953
 24064 003a 0B46     		mov	r3, r1
 24065 003c 5B00     		lsls	r3, r3, #1
 24066 003e 0B44     		add	r3, r3, r1
 24067 0040 1B01     		lsls	r3, r3, #4
 24068 0042 1344     		add	r3, r3, r2
 24069 0044 03F5D273 		add	r3, r3, #420
 24070 0048 1B68     		ldr	r3, [r3]	@ float
 24071 004a 7B60     		str	r3, [r7, #4]	@ float
3476:..\src/command_processing.c **** 
3477:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 24072              		.loc 1 3477 0
 24073 004c 574B     		ldr	r3, .L953+4
 24074 004e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 526


 24075 0050 1846     		mov	r0, r3
 24076 0052 FFF7FEFF 		bl	__aeabi_i2f
 24077 0056 0346     		mov	r3, r0
 24078 0058 7968     		ldr	r1, [r7, #4]	@ float
 24079 005a 1846     		mov	r0, r3
 24080 005c FFF7FEFF 		bl	__aeabi_fdiv
 24081 0060 0346     		mov	r3, r0
 24082 0062 1846     		mov	r0, r3
 24083 0064 FFF7FEFF 		bl	__aeabi_f2iz
 24084 0068 0246     		mov	r2, r0
 24085 006a 504B     		ldr	r3, .L953+4
 24086 006c 1A60     		str	r2, [r3]
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 24087              		.loc 1 3479 0
 24088 006e 4F4B     		ldr	r3, .L953+4
 24089 0070 1B68     		ldr	r3, [r3]
 24090 0072 1846     		mov	r0, r3
 24091 0074 FFF7FEFF 		bl	__aeabi_i2f
 24092 0078 4B4B     		ldr	r3, .L953
 24093 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24094 007e 1946     		mov	r1, r3
 24095 0080 4B4A     		ldr	r2, .L953+8
 24096 0082 0B46     		mov	r3, r1
 24097 0084 5B00     		lsls	r3, r3, #1
 24098 0086 0B44     		add	r3, r3, r1
 24099 0088 1B01     		lsls	r3, r3, #4
 24100 008a 1344     		add	r3, r3, r2
 24101 008c 03F5D273 		add	r3, r3, #420
 24102 0090 1B68     		ldr	r3, [r3]	@ float
 24103 0092 1946     		mov	r1, r3
 24104 0094 FFF7FEFF 		bl	__aeabi_fmul
 24105 0098 0346     		mov	r3, r0
 24106 009a 1846     		mov	r0, r3
 24107 009c FFF7FEFF 		bl	__aeabi_f2iz
 24108 00a0 0246     		mov	r2, r0
 24109 00a2 424B     		ldr	r3, .L953+4
 24110 00a4 1A60     		str	r2, [r3]
3480:..\src/command_processing.c **** 
3481:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 24111              		.loc 1 3481 0
 24112 00a6 414B     		ldr	r3, .L953+4
 24113 00a8 1B68     		ldr	r3, [r3]
 24114 00aa 1846     		mov	r0, r3
 24115 00ac 3E4B     		ldr	r3, .L953
 24116 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24117 00b2 1946     		mov	r1, r3
 24118 00b4 3E4A     		ldr	r2, .L953+8
 24119 00b6 0B46     		mov	r3, r1
 24120 00b8 5B00     		lsls	r3, r3, #1
 24121 00ba 0B44     		add	r3, r3, r1
 24122 00bc 1B01     		lsls	r3, r3, #4
 24123 00be 1344     		add	r3, r3, r2
 24124 00c0 03F5CC73 		add	r3, r3, #408
 24125 00c4 1B68     		ldr	r3, [r3]
 24126 00c6 1A46     		mov	r2, r3
 24127 00c8 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 527


 24128 00ca D31A     		subs	r3, r2, r3
 24129 00cc 0344     		add	r3, r3, r0
 24130 00ce 1A46     		mov	r2, r3
 24131 00d0 364B     		ldr	r3, .L953+4
 24132 00d2 1A60     		str	r2, [r3]
3482:..\src/command_processing.c ****         
3483:..\src/command_processing.c ****         // Check position Limits
3484:..\src/command_processing.c **** 
3485:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 24133              		.loc 1 3485 0
 24134 00d4 344B     		ldr	r3, .L953
 24135 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 24136 00da 002B     		cmp	r3, #0
 24137 00dc 17D0     		beq	.L943
3486:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 24138              		.loc 1 3486 0
 24139 00de 334B     		ldr	r3, .L953+4
 24140 00e0 1A68     		ldr	r2, [r3]
 24141 00e2 314B     		ldr	r3, .L953
 24142 00e4 D3F8E430 		ldr	r3, [r3, #228]
 24143 00e8 9A42     		cmp	r2, r3
 24144 00ea 04DA     		bge	.L944
3487:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 24145              		.loc 1 3487 0
 24146 00ec 2E4B     		ldr	r3, .L953
 24147 00ee D3F8E430 		ldr	r3, [r3, #228]
 24148 00f2 2E4A     		ldr	r2, .L953+4
 24149 00f4 1360     		str	r3, [r2]
 24150              	.L944:
3488:..\src/command_processing.c **** 
3489:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 24151              		.loc 1 3489 0
 24152 00f6 2D4B     		ldr	r3, .L953+4
 24153 00f8 1A68     		ldr	r2, [r3]
 24154 00fa 2B4B     		ldr	r3, .L953
 24155 00fc D3F8E830 		ldr	r3, [r3, #232]
 24156 0100 9A42     		cmp	r2, r3
 24157 0102 04DD     		ble	.L943
3490:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 24158              		.loc 1 3490 0
 24159 0104 284B     		ldr	r3, .L953
 24160 0106 D3F8E830 		ldr	r3, [r3, #232]
 24161 010a 284A     		ldr	r2, .L953+4
 24162 010c 1360     		str	r3, [r2]
 24163              	.L943:
3491:..\src/command_processing.c ****         }
3492:..\src/command_processing.c ****     }
3493:..\src/command_processing.c ****     
3494:..\src/command_processing.c ****     // If SD is used, create new param and data file
3495:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 24164              		.loc 1 3495 0
 24165 010e 264B     		ldr	r3, .L953
 24166 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 24167 0114 012B     		cmp	r3, #1
 24168 0116 06D1     		bne	.L945
3496:..\src/command_processing.c ****         FS_FClose(pFile);
 24169              		.loc 1 3496 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 528


 24170 0118 264B     		ldr	r3, .L953+12
 24171 011a 1B68     		ldr	r3, [r3]
 24172 011c 1846     		mov	r0, r3
 24173 011e FFF7FEFF 		bl	FS_FClose
3497:..\src/command_processing.c ****         
3498:..\src/command_processing.c ****         InitSD_FS();
 24174              		.loc 1 3498 0
 24175 0122 FFF7FEFF 		bl	InitSD_FS
 24176              	.L945:
3499:..\src/command_processing.c ****     }
3500:..\src/command_processing.c ****    
3501:..\src/command_processing.c ****     // Store params 
3502:..\src/command_processing.c **** 
3503:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 24177              		.loc 1 3503 0
 24178 0126 204B     		ldr	r3, .L953
 24179 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 24180 012c 204B     		ldr	r3, .L953+8
 24181 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 24182 0132 9A42     		cmp	r2, r3
 24183 0134 21D0     		beq	.L946
3504:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 24184              		.loc 1 3504 0
 24185 0136 1C4B     		ldr	r3, .L953
 24186 0138 93F8A030 		ldrb	r3, [r3, #160]
 24187 013c FB70     		strb	r3, [r7, #3]
3505:..\src/command_processing.c ****         if(memStore(0)) {
 24188              		.loc 1 3505 0
 24189 013e 0020     		movs	r0, #0
 24190 0140 FFF7FEFF 		bl	memStore
 24191 0144 0346     		mov	r3, r0
 24192 0146 002B     		cmp	r3, #0
 24193 0148 0BD0     		beq	.L947
3506:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 24194              		.loc 1 3506 0
 24195 014a 0123     		movs	r3, #1
 24196 014c 3B70     		strb	r3, [r7]
3507:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 24197              		.loc 1 3507 0
 24198 014e 0123     		movs	r3, #1
 24199 0150 7B70     		strb	r3, [r7, #1]
3508:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24200              		.loc 1 3508 0
 24201 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24202 0154 99B2     		uxth	r1, r3
 24203 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24204 0158 3B46     		mov	r3, r7
 24205 015a 1846     		mov	r0, r3
 24206 015c FFF7FEFF 		bl	commWrite_old_id
 24207 0160 18E0     		b	.L949
 24208              	.L947:
3509:..\src/command_processing.c ****         }    
3510:..\src/command_processing.c ****         else{
3511:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 24209              		.loc 1 3511 0
 24210 0162 0023     		movs	r3, #0
 24211 0164 3B70     		strb	r3, [r7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 529


3512:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 24212              		.loc 1 3512 0
 24213 0166 0023     		movs	r3, #0
 24214 0168 7B70     		strb	r3, [r7, #1]
3513:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 24215              		.loc 1 3513 0
 24216 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24217 016c 99B2     		uxth	r1, r3
 24218 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 24219 0170 3B46     		mov	r3, r7
 24220 0172 1846     		mov	r0, r3
 24221 0174 FFF7FEFF 		bl	commWrite_old_id
 24222 0178 0CE0     		b	.L949
 24223              	.L946:
3514:..\src/command_processing.c ****         }
3515:..\src/command_processing.c ****     }    
3516:..\src/command_processing.c ****     else {
3517:..\src/command_processing.c ****         if(memStore(0))
 24224              		.loc 1 3517 0
 24225 017a 0020     		movs	r0, #0
 24226 017c FFF7FEFF 		bl	memStore
 24227 0180 0346     		mov	r3, r0
 24228 0182 002B     		cmp	r3, #0
 24229 0184 03D0     		beq	.L950
3518:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 24230              		.loc 1 3518 0
 24231 0186 0120     		movs	r0, #1
 24232 0188 FFF7FEFF 		bl	sendAcknowledgment
 24233 018c 02E0     		b	.L949
 24234              	.L950:
3519:..\src/command_processing.c ****         else
3520:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 24235              		.loc 1 3520 0
 24236 018e 0020     		movs	r0, #0
 24237 0190 FFF7FEFF 		bl	sendAcknowledgment
 24238              	.L949:
3521:..\src/command_processing.c ****     }
3522:..\src/command_processing.c ****     
3523:..\src/command_processing.c ****     // FW reset (if necessary)
3524:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 24239              		.loc 1 3524 0
 24240 0194 084B     		ldr	r3, .L953+16
 24241 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24242 0198 012B     		cmp	r3, #1
 24243 019a 01D1     		bne	.L952
3525:..\src/command_processing.c ****         CySoftwareReset();
 24244              		.loc 1 3525 0
 24245 019c FFF7FEFF 		bl	CySoftwareReset
 24246              	.L952:
3526:..\src/command_processing.c ****     }
3527:..\src/command_processing.c **** }
 24247              		.loc 1 3527 0
 24248 01a0 00BF     		nop
 24249 01a2 1037     		adds	r7, r7, #16
 24250              		.cfi_def_cfa_offset 8
 24251 01a4 BD46     		mov	sp, r7
 24252              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 530


 24253              		@ sp needed
 24254 01a6 80BD     		pop	{r7, pc}
 24255              	.L954:
 24256              		.align	2
 24257              	.L953:
 24258 01a8 00000000 		.word	c_mem
 24259 01ac 00000000 		.word	g_refNew
 24260 01b0 00000000 		.word	g_mem
 24261 01b4 00000000 		.word	pFile
 24262 01b8 00000000 		.word	reset_PSoC_flag
 24263              		.cfi_endproc
 24264              	.LFE103:
 24265              		.size	cmd_store_params, .-cmd_store_params
 24266              		.section	.text.cmd_get_emg,"ax",%progbits
 24267              		.align	2
 24268              		.global	cmd_get_emg
 24269              		.thumb
 24270              		.thumb_func
 24271              		.type	cmd_get_emg, %function
 24272              	cmd_get_emg:
 24273              	.LFB104:
3528:..\src/command_processing.c **** 
3529:..\src/command_processing.c **** void cmd_get_emg(){
 24274              		.loc 1 3529 0
 24275              		.cfi_startproc
 24276              		@ args = 0, pretend = 0, frame = 16
 24277              		@ frame_needed = 1, uses_anonymous_args = 0
 24278 0000 80B5     		push	{r7, lr}
 24279              		.cfi_def_cfa_offset 8
 24280              		.cfi_offset 7, -8
 24281              		.cfi_offset 14, -4
 24282 0002 84B0     		sub	sp, sp, #16
 24283              		.cfi_def_cfa_offset 24
 24284 0004 00AF     		add	r7, sp, #0
 24285              		.cfi_def_cfa_register 7
3530:..\src/command_processing.c ****     
3531:..\src/command_processing.c ****     uint8 packet_data[6];
3532:..\src/command_processing.c ****     int16 aux_int16;
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     // Header        
3535:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 24286              		.loc 1 3535 0
 24287 0006 8823     		movs	r3, #136
 24288 0008 3B72     		strb	r3, [r7, #8]
3536:..\src/command_processing.c ****     
3537:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 24289              		.loc 1 3537 0
 24290 000a 144B     		ldr	r3, .L956
 24291 000c 1B68     		ldr	r3, [r3]
 24292 000e 1BB2     		sxth	r3, r3
 24293 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3538:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24294              		.loc 1 3538 0
 24295 0012 BB1D     		adds	r3, r7, #6
 24296 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24297 0016 BB72     		strb	r3, [r7, #10]
3539:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 531


 24298              		.loc 1 3539 0
 24299 0018 BB1D     		adds	r3, r7, #6
 24300 001a 0133     		adds	r3, r3, #1
 24301 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24302 001e 7B72     		strb	r3, [r7, #9]
3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 24303              		.loc 1 3541 0
 24304 0020 0E4B     		ldr	r3, .L956
 24305 0022 5B68     		ldr	r3, [r3, #4]
 24306 0024 1BB2     		sxth	r3, r3
 24307 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3542:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24308              		.loc 1 3542 0
 24309 0028 BB1D     		adds	r3, r7, #6
 24310 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24311 002c 3B73     		strb	r3, [r7, #12]
3543:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24312              		.loc 1 3543 0
 24313 002e BB1D     		adds	r3, r7, #6
 24314 0030 0133     		adds	r3, r3, #1
 24315 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24316 0034 FB72     		strb	r3, [r7, #11]
3544:..\src/command_processing.c **** 
3545:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24317              		.loc 1 3545 0
 24318 0036 07F10803 		add	r3, r7, #8
 24319 003a 0521     		movs	r1, #5
 24320 003c 1846     		mov	r0, r3
 24321 003e FFF7FEFF 		bl	LCRChecksum
 24322 0042 0346     		mov	r3, r0
 24323 0044 7B73     		strb	r3, [r7, #13]
3546:..\src/command_processing.c **** 
3547:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24324              		.loc 1 3547 0
 24325 0046 07F10803 		add	r3, r7, #8
 24326 004a 0621     		movs	r1, #6
 24327 004c 1846     		mov	r0, r3
 24328 004e FFF7FEFF 		bl	commWrite
3548:..\src/command_processing.c **** 
3549:..\src/command_processing.c **** }
 24329              		.loc 1 3549 0
 24330 0052 00BF     		nop
 24331 0054 1037     		adds	r7, r7, #16
 24332              		.cfi_def_cfa_offset 8
 24333 0056 BD46     		mov	sp, r7
 24334              		.cfi_def_cfa_register 13
 24335              		@ sp needed
 24336 0058 80BD     		pop	{r7, pc}
 24337              	.L957:
 24338 005a 00BF     		.align	2
 24339              	.L956:
 24340 005c 00000000 		.word	g_emg_measOld
 24341              		.cfi_endproc
 24342              	.LFE104:
 24343              		.size	cmd_get_emg, .-cmd_get_emg
 24344              		.section	.text.cmd_get_imu_readings,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 532


 24345              		.align	2
 24346              		.global	cmd_get_imu_readings
 24347              		.thumb
 24348              		.thumb_func
 24349              		.type	cmd_get_imu_readings, %function
 24350              	cmd_get_imu_readings:
 24351              	.LFB105:
3550:..\src/command_processing.c **** 
3551:..\src/command_processing.c **** void cmd_get_imu_readings(){
 24352              		.loc 1 3551 0
 24353              		.cfi_startproc
 24354              		@ args = 0, pretend = 0, frame = 400
 24355              		@ frame_needed = 1, uses_anonymous_args = 0
 24356 0000 90B5     		push	{r4, r7, lr}
 24357              		.cfi_def_cfa_offset 12
 24358              		.cfi_offset 4, -12
 24359              		.cfi_offset 7, -8
 24360              		.cfi_offset 14, -4
 24361 0002 E5B0     		sub	sp, sp, #404
 24362              		.cfi_def_cfa_offset 416
 24363 0004 00AF     		add	r7, sp, #0
 24364              		.cfi_def_cfa_register 7
3552:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3553:..\src/command_processing.c ****     
3554:..\src/command_processing.c ****     uint8 k_imu;
3555:..\src/command_processing.c ****     uint16 c = 1;
 24365              		.loc 1 3555 0
 24366 0006 0123     		movs	r3, #1
 24367 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3556:..\src/command_processing.c ****     uint8 k = 0;
 24368              		.loc 1 3556 0
 24369 000c 0023     		movs	r3, #0
 24370 000e 87F88B31 		strb	r3, [r7, #395]
3557:..\src/command_processing.c ****     uint16 gl_c = 1;
 24371              		.loc 1 3557 0
 24372 0012 0123     		movs	r3, #1
 24373 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3558:..\src/command_processing.c ****     int16 aux_int16;
3559:..\src/command_processing.c ****     float aux_float;
3560:..\src/command_processing.c ****     
3561:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3562:..\src/command_processing.c ****     uint8 packet_data[350];
3563:..\src/command_processing.c ****     uint8 single_packet[32];
3564:..\src/command_processing.c ****     
3565:..\src/command_processing.c ****     //Header package 
3566:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 24374              		.loc 1 3566 0
 24375 0018 07F12003 		add	r3, r7, #32
 24376 001c A122     		movs	r2, #161
 24377 001e 1A70     		strb	r2, [r3]
3567:..\src/command_processing.c ****  
3568:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 24378              		.loc 1 3568 0
 24379 0020 0023     		movs	r3, #0
 24380 0022 87F88F31 		strb	r3, [r7, #399]
 24381 0026 82E2     		b	.L959
 24382              	.L975:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 533


3569:..\src/command_processing.c ****     {	
3570:..\src/command_processing.c ****             
3571:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 24383              		.loc 1 3571 0
 24384 0028 3B46     		mov	r3, r7
 24385 002a 3A22     		movs	r2, #58
 24386 002c 1A70     		strb	r2, [r3]
3572:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 24387              		.loc 1 3572 0
 24388 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24389 0032 DB4A     		ldr	r2, .L976
 24390 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24391 0036 1946     		mov	r1, r3
 24392 0038 DA4A     		ldr	r2, .L976+4
 24393 003a 0B46     		mov	r3, r1
 24394 003c 9B00     		lsls	r3, r3, #2
 24395 003e 0B44     		add	r3, r3, r1
 24396 0040 1344     		add	r3, r3, r2
 24397 0042 03F20223 		addw	r3, r3, #514
 24398 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24399 0048 002B     		cmp	r3, #0
 24400 004a 5DD0     		beq	.L960
3573:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 24401              		.loc 1 3573 0
 24402 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24403 0050 D549     		ldr	r1, .L976+8
 24404 0052 1346     		mov	r3, r2
 24405 0054 9B00     		lsls	r3, r3, #2
 24406 0056 1344     		add	r3, r3, r2
 24407 0058 DB00     		lsls	r3, r3, #3
 24408 005a 0B44     		add	r3, r3, r1
 24409 005c 0233     		adds	r3, r3, #2
 24410 005e B3F90030 		ldrsh	r3, [r3]
 24411 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3574:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24412              		.loc 1 3574 0
 24413 0066 B7F88C31 		ldrh	r3, [r7, #396]
 24414 006a 0133     		adds	r3, r3, #1
 24415 006c 07F5C372 		add	r2, r7, #390
 24416 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24417 0072 3A46     		mov	r2, r7
 24418 0074 D154     		strb	r1, [r2, r3]
3575:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24419              		.loc 1 3575 0
 24420 0076 B7F88C21 		ldrh	r2, [r7, #396]
 24421 007a 07F5C373 		add	r3, r7, #390
 24422 007e 0133     		adds	r3, r3, #1
 24423 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24424 0082 3B46     		mov	r3, r7
 24425 0084 9954     		strb	r1, [r3, r2]
3576:..\src/command_processing.c **** 
3577:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 24426              		.loc 1 3577 0
 24427 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24428 008a C749     		ldr	r1, .L976+8
 24429 008c 1346     		mov	r3, r2
 24430 008e 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 534


 24431 0090 1344     		add	r3, r3, r2
 24432 0092 DB00     		lsls	r3, r3, #3
 24433 0094 0B44     		add	r3, r3, r1
 24434 0096 0433     		adds	r3, r3, #4
 24435 0098 B3F90030 		ldrsh	r3, [r3]
 24436 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3578:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24437              		.loc 1 3578 0
 24438 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 24439 00a4 0333     		adds	r3, r3, #3
 24440 00a6 07F5C372 		add	r2, r7, #390
 24441 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24442 00ac 3A46     		mov	r2, r7
 24443 00ae D154     		strb	r1, [r2, r3]
3579:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24444              		.loc 1 3579 0
 24445 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 24446 00b4 9A1C     		adds	r2, r3, #2
 24447 00b6 07F5C373 		add	r3, r7, #390
 24448 00ba 0133     		adds	r3, r3, #1
 24449 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24450 00be 3B46     		mov	r3, r7
 24451 00c0 9954     		strb	r1, [r3, r2]
3580:..\src/command_processing.c **** 
3581:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 24452              		.loc 1 3581 0
 24453 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24454 00c6 B849     		ldr	r1, .L976+8
 24455 00c8 1346     		mov	r3, r2
 24456 00ca 9B00     		lsls	r3, r3, #2
 24457 00cc 1344     		add	r3, r3, r2
 24458 00ce DB00     		lsls	r3, r3, #3
 24459 00d0 0B44     		add	r3, r3, r1
 24460 00d2 0633     		adds	r3, r3, #6
 24461 00d4 B3F90030 		ldrsh	r3, [r3]
 24462 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3582:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24463              		.loc 1 3582 0
 24464 00dc B7F88C31 		ldrh	r3, [r7, #396]
 24465 00e0 0533     		adds	r3, r3, #5
 24466 00e2 07F5C372 		add	r2, r7, #390
 24467 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24468 00e8 3A46     		mov	r2, r7
 24469 00ea D154     		strb	r1, [r2, r3]
3583:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24470              		.loc 1 3583 0
 24471 00ec B7F88C31 		ldrh	r3, [r7, #396]
 24472 00f0 1A1D     		adds	r2, r3, #4
 24473 00f2 07F5C373 		add	r3, r7, #390
 24474 00f6 0133     		adds	r3, r3, #1
 24475 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24476 00fa 3B46     		mov	r3, r7
 24477 00fc 9954     		strb	r1, [r3, r2]
3584:..\src/command_processing.c **** 
3585:..\src/command_processing.c ****             c = c + 6;
 24478              		.loc 1 3585 0
 24479 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 535


 24480 0102 0633     		adds	r3, r3, #6
 24481 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24482              	.L960:
3586:..\src/command_processing.c ****         }
3587:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 24483              		.loc 1 3587 0
 24484 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24485 010c A44A     		ldr	r2, .L976
 24486 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24487 0110 1946     		mov	r1, r3
 24488 0112 A44A     		ldr	r2, .L976+4
 24489 0114 0B46     		mov	r3, r1
 24490 0116 9B00     		lsls	r3, r3, #2
 24491 0118 0B44     		add	r3, r3, r1
 24492 011a 1344     		add	r3, r3, r2
 24493 011c 03F20323 		addw	r3, r3, #515
 24494 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24495 0122 002B     		cmp	r3, #0
 24496 0124 5DD0     		beq	.L961
3588:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 24497              		.loc 1 3588 0
 24498 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24499 012a 9F49     		ldr	r1, .L976+8
 24500 012c 1346     		mov	r3, r2
 24501 012e 9B00     		lsls	r3, r3, #2
 24502 0130 1344     		add	r3, r3, r2
 24503 0132 DB00     		lsls	r3, r3, #3
 24504 0134 0B44     		add	r3, r3, r1
 24505 0136 0833     		adds	r3, r3, #8
 24506 0138 B3F90030 		ldrsh	r3, [r3]
 24507 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3589:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24508              		.loc 1 3589 0
 24509 0140 B7F88C31 		ldrh	r3, [r7, #396]
 24510 0144 0133     		adds	r3, r3, #1
 24511 0146 07F5C372 		add	r2, r7, #390
 24512 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24513 014c 3A46     		mov	r2, r7
 24514 014e D154     		strb	r1, [r2, r3]
3590:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24515              		.loc 1 3590 0
 24516 0150 B7F88C21 		ldrh	r2, [r7, #396]
 24517 0154 07F5C373 		add	r3, r7, #390
 24518 0158 0133     		adds	r3, r3, #1
 24519 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24520 015c 3B46     		mov	r3, r7
 24521 015e 9954     		strb	r1, [r3, r2]
3591:..\src/command_processing.c **** 
3592:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 24522              		.loc 1 3592 0
 24523 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24524 0164 9049     		ldr	r1, .L976+8
 24525 0166 1346     		mov	r3, r2
 24526 0168 9B00     		lsls	r3, r3, #2
 24527 016a 1344     		add	r3, r3, r2
 24528 016c DB00     		lsls	r3, r3, #3
 24529 016e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 536


 24530 0170 0A33     		adds	r3, r3, #10
 24531 0172 B3F90030 		ldrsh	r3, [r3]
 24532 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3593:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24533              		.loc 1 3593 0
 24534 017a B7F88C31 		ldrh	r3, [r7, #396]
 24535 017e 0333     		adds	r3, r3, #3
 24536 0180 07F5C372 		add	r2, r7, #390
 24537 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24538 0186 3A46     		mov	r2, r7
 24539 0188 D154     		strb	r1, [r2, r3]
3594:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24540              		.loc 1 3594 0
 24541 018a B7F88C31 		ldrh	r3, [r7, #396]
 24542 018e 9A1C     		adds	r2, r3, #2
 24543 0190 07F5C373 		add	r3, r7, #390
 24544 0194 0133     		adds	r3, r3, #1
 24545 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24546 0198 3B46     		mov	r3, r7
 24547 019a 9954     		strb	r1, [r3, r2]
3595:..\src/command_processing.c **** 
3596:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 24548              		.loc 1 3596 0
 24549 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24550 01a0 8149     		ldr	r1, .L976+8
 24551 01a2 1346     		mov	r3, r2
 24552 01a4 9B00     		lsls	r3, r3, #2
 24553 01a6 1344     		add	r3, r3, r2
 24554 01a8 DB00     		lsls	r3, r3, #3
 24555 01aa 0B44     		add	r3, r3, r1
 24556 01ac 0C33     		adds	r3, r3, #12
 24557 01ae B3F90030 		ldrsh	r3, [r3]
 24558 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3597:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24559              		.loc 1 3597 0
 24560 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 24561 01ba 0533     		adds	r3, r3, #5
 24562 01bc 07F5C372 		add	r2, r7, #390
 24563 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24564 01c2 3A46     		mov	r2, r7
 24565 01c4 D154     		strb	r1, [r2, r3]
3598:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24566              		.loc 1 3598 0
 24567 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 24568 01ca 1A1D     		adds	r2, r3, #4
 24569 01cc 07F5C373 		add	r3, r7, #390
 24570 01d0 0133     		adds	r3, r3, #1
 24571 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24572 01d4 3B46     		mov	r3, r7
 24573 01d6 9954     		strb	r1, [r3, r2]
3599:..\src/command_processing.c **** 
3600:..\src/command_processing.c ****             c = c + 6;
 24574              		.loc 1 3600 0
 24575 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24576 01dc 0633     		adds	r3, r3, #6
 24577 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24578              	.L961:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 537


3601:..\src/command_processing.c ****         }
3602:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 24579              		.loc 1 3602 0
 24580 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24581 01e6 6E4A     		ldr	r2, .L976
 24582 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24583 01ea 1946     		mov	r1, r3
 24584 01ec 6D4A     		ldr	r2, .L976+4
 24585 01ee 0B46     		mov	r3, r1
 24586 01f0 9B00     		lsls	r3, r3, #2
 24587 01f2 0B44     		add	r3, r3, r1
 24588 01f4 1344     		add	r3, r3, r2
 24589 01f6 03F50173 		add	r3, r3, #516
 24590 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24591 01fc 002B     		cmp	r3, #0
 24592 01fe 5DD0     		beq	.L962
3603:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 24593              		.loc 1 3603 0
 24594 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24595 0204 6849     		ldr	r1, .L976+8
 24596 0206 1346     		mov	r3, r2
 24597 0208 9B00     		lsls	r3, r3, #2
 24598 020a 1344     		add	r3, r3, r2
 24599 020c DB00     		lsls	r3, r3, #3
 24600 020e 0B44     		add	r3, r3, r1
 24601 0210 0E33     		adds	r3, r3, #14
 24602 0212 B3F90030 		ldrsh	r3, [r3]
 24603 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3604:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24604              		.loc 1 3604 0
 24605 021a B7F88C31 		ldrh	r3, [r7, #396]
 24606 021e 0133     		adds	r3, r3, #1
 24607 0220 07F5C372 		add	r2, r7, #390
 24608 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24609 0226 3A46     		mov	r2, r7
 24610 0228 D154     		strb	r1, [r2, r3]
3605:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24611              		.loc 1 3605 0
 24612 022a B7F88C21 		ldrh	r2, [r7, #396]
 24613 022e 07F5C373 		add	r3, r7, #390
 24614 0232 0133     		adds	r3, r3, #1
 24615 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24616 0236 3B46     		mov	r3, r7
 24617 0238 9954     		strb	r1, [r3, r2]
3606:..\src/command_processing.c **** 
3607:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 24618              		.loc 1 3607 0
 24619 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24620 023e 5A49     		ldr	r1, .L976+8
 24621 0240 1346     		mov	r3, r2
 24622 0242 9B00     		lsls	r3, r3, #2
 24623 0244 1344     		add	r3, r3, r2
 24624 0246 DB00     		lsls	r3, r3, #3
 24625 0248 0B44     		add	r3, r3, r1
 24626 024a 1033     		adds	r3, r3, #16
 24627 024c B3F90030 		ldrsh	r3, [r3]
 24628 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 538


3608:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 24629              		.loc 1 3608 0
 24630 0254 B7F88C31 		ldrh	r3, [r7, #396]
 24631 0258 0333     		adds	r3, r3, #3
 24632 025a 07F5C372 		add	r2, r7, #390
 24633 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24634 0260 3A46     		mov	r2, r7
 24635 0262 D154     		strb	r1, [r2, r3]
3609:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 24636              		.loc 1 3609 0
 24637 0264 B7F88C31 		ldrh	r3, [r7, #396]
 24638 0268 9A1C     		adds	r2, r3, #2
 24639 026a 07F5C373 		add	r3, r7, #390
 24640 026e 0133     		adds	r3, r3, #1
 24641 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24642 0272 3B46     		mov	r3, r7
 24643 0274 9954     		strb	r1, [r3, r2]
3610:..\src/command_processing.c **** 
3611:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 24644              		.loc 1 3611 0
 24645 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24646 027a 4B49     		ldr	r1, .L976+8
 24647 027c 1346     		mov	r3, r2
 24648 027e 9B00     		lsls	r3, r3, #2
 24649 0280 1344     		add	r3, r3, r2
 24650 0282 DB00     		lsls	r3, r3, #3
 24651 0284 0B44     		add	r3, r3, r1
 24652 0286 1233     		adds	r3, r3, #18
 24653 0288 B3F90030 		ldrsh	r3, [r3]
 24654 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3612:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 24655              		.loc 1 3612 0
 24656 0290 B7F88C31 		ldrh	r3, [r7, #396]
 24657 0294 0533     		adds	r3, r3, #5
 24658 0296 07F5C372 		add	r2, r7, #390
 24659 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24660 029c 3A46     		mov	r2, r7
 24661 029e D154     		strb	r1, [r2, r3]
3613:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 24662              		.loc 1 3613 0
 24663 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 24664 02a4 1A1D     		adds	r2, r3, #4
 24665 02a6 07F5C373 		add	r3, r7, #390
 24666 02aa 0133     		adds	r3, r3, #1
 24667 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24668 02ae 3B46     		mov	r3, r7
 24669 02b0 9954     		strb	r1, [r3, r2]
3614:..\src/command_processing.c **** 
3615:..\src/command_processing.c ****             c = c + 6;
 24670              		.loc 1 3615 0
 24671 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24672 02b6 0633     		adds	r3, r3, #6
 24673 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24674              	.L962:
3616:..\src/command_processing.c ****         }
3617:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 24675              		.loc 1 3617 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 539


 24676 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24677 02c0 374A     		ldr	r2, .L976
 24678 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24679 02c4 1946     		mov	r1, r3
 24680 02c6 374A     		ldr	r2, .L976+4
 24681 02c8 0B46     		mov	r3, r1
 24682 02ca 9B00     		lsls	r3, r3, #2
 24683 02cc 0B44     		add	r3, r3, r1
 24684 02ce 1344     		add	r3, r3, r2
 24685 02d0 03F20523 		addw	r3, r3, #517
 24686 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24687 02d6 002B     		cmp	r3, #0
 24688 02d8 00F0AF80 		beq	.L963
3618:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 24689              		.loc 1 3618 0
 24690 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24691 02e0 3149     		ldr	r1, .L976+8
 24692 02e2 1346     		mov	r3, r2
 24693 02e4 9B00     		lsls	r3, r3, #2
 24694 02e6 1344     		add	r3, r3, r2
 24695 02e8 DB00     		lsls	r3, r3, #3
 24696 02ea 0B44     		add	r3, r3, r1
 24697 02ec 1433     		adds	r3, r3, #20
 24698 02ee 1B68     		ldr	r3, [r3]	@ float
 24699 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24700              		.loc 1 3619 0
 24701 02f4 0023     		movs	r3, #0
 24702 02f6 87F88B31 		strb	r3, [r7, #395]
 24703 02fa 13E0     		b	.L964
 24704              	.L965:
3620:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 24705              		.loc 1 3620 0 discriminator 3
 24706 02fc B7F88C31 		ldrh	r3, [r7, #396]
 24707 0300 1A1D     		adds	r2, r3, #4
 24708 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24709 0306 D31A     		subs	r3, r2, r3
 24710 0308 013B     		subs	r3, r3, #1
 24711 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24712 030e 07F5C071 		add	r1, r7, #384
 24713 0312 0A44     		add	r2, r2, r1
 24714 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24715 0316 3A46     		mov	r2, r7
 24716 0318 D154     		strb	r1, [r2, r3]
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24717              		.loc 1 3619 0 discriminator 3
 24718 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24719 031e 0133     		adds	r3, r3, #1
 24720 0320 87F88B31 		strb	r3, [r7, #395]
 24721              	.L964:
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24722              		.loc 1 3619 0 is_stmt 0 discriminator 1
 24723 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24724 0328 032B     		cmp	r3, #3
 24725 032a E7D9     		bls	.L965
3621:..\src/command_processing.c ****             }
3622:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 540


3623:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 24726              		.loc 1 3623 0 is_stmt 1
 24727 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24728 0330 1D49     		ldr	r1, .L976+8
 24729 0332 1346     		mov	r3, r2
 24730 0334 9B00     		lsls	r3, r3, #2
 24731 0336 1344     		add	r3, r3, r2
 24732 0338 DB00     		lsls	r3, r3, #3
 24733 033a 0B44     		add	r3, r3, r1
 24734 033c 1833     		adds	r3, r3, #24
 24735 033e 1B68     		ldr	r3, [r3]	@ float
 24736 0340 C7F88031 		str	r3, [r7, #384]	@ float
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24737              		.loc 1 3624 0
 24738 0344 0023     		movs	r3, #0
 24739 0346 87F88B31 		strb	r3, [r7, #395]
 24740 034a 14E0     		b	.L966
 24741              	.L967:
3625:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 24742              		.loc 1 3625 0 discriminator 3
 24743 034c B7F88C31 		ldrh	r3, [r7, #396]
 24744 0350 03F10802 		add	r2, r3, #8
 24745 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24746 0358 D31A     		subs	r3, r2, r3
 24747 035a 013B     		subs	r3, r3, #1
 24748 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24749 0360 07F5C071 		add	r1, r7, #384
 24750 0364 0A44     		add	r2, r2, r1
 24751 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24752 0368 3A46     		mov	r2, r7
 24753 036a D154     		strb	r1, [r2, r3]
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24754              		.loc 1 3624 0 discriminator 3
 24755 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24756 0370 0133     		adds	r3, r3, #1
 24757 0372 87F88B31 		strb	r3, [r7, #395]
 24758              	.L966:
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24759              		.loc 1 3624 0 is_stmt 0 discriminator 1
 24760 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24761 037a 032B     		cmp	r3, #3
 24762 037c E6D9     		bls	.L967
3626:..\src/command_processing.c ****             }
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 24763              		.loc 1 3628 0 is_stmt 1
 24764 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24765 0382 0949     		ldr	r1, .L976+8
 24766 0384 1346     		mov	r3, r2
 24767 0386 9B00     		lsls	r3, r3, #2
 24768 0388 1344     		add	r3, r3, r2
 24769 038a DB00     		lsls	r3, r3, #3
 24770 038c 0B44     		add	r3, r3, r1
 24771 038e 1C33     		adds	r3, r3, #28
 24772 0390 1B68     		ldr	r3, [r3]	@ float
 24773 0392 C7F88031 		str	r3, [r7, #384]	@ float
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 541


 24774              		.loc 1 3629 0
 24775 0396 0023     		movs	r3, #0
 24776 0398 87F88B31 		strb	r3, [r7, #395]
 24777 039c 1BE0     		b	.L968
 24778              	.L977:
 24779 039e 00BF     		.align	2
 24780              	.L976:
 24781 03a0 00000000 		.word	IMU_connected
 24782 03a4 00000000 		.word	c_mem
 24783 03a8 00000000 		.word	g_imu
 24784              	.L969:
3630:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 24785              		.loc 1 3630 0 discriminator 3
 24786 03ac B7F88C31 		ldrh	r3, [r7, #396]
 24787 03b0 03F10C02 		add	r2, r3, #12
 24788 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24789 03b8 D31A     		subs	r3, r2, r3
 24790 03ba 013B     		subs	r3, r3, #1
 24791 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24792 03c0 07F5C071 		add	r1, r7, #384
 24793 03c4 0A44     		add	r2, r2, r1
 24794 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24795 03c8 3A46     		mov	r2, r7
 24796 03ca D154     		strb	r1, [r2, r3]
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24797              		.loc 1 3629 0 discriminator 3
 24798 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24799 03d0 0133     		adds	r3, r3, #1
 24800 03d2 87F88B31 		strb	r3, [r7, #395]
 24801              	.L968:
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24802              		.loc 1 3629 0 is_stmt 0 discriminator 1
 24803 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24804 03da 032B     		cmp	r3, #3
 24805 03dc E6D9     		bls	.L969
3631:..\src/command_processing.c ****             }
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 24806              		.loc 1 3633 0 is_stmt 1
 24807 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24808 03e2 6749     		ldr	r1, .L978
 24809 03e4 1346     		mov	r3, r2
 24810 03e6 9B00     		lsls	r3, r3, #2
 24811 03e8 1344     		add	r3, r3, r2
 24812 03ea DB00     		lsls	r3, r3, #3
 24813 03ec 0B44     		add	r3, r3, r1
 24814 03ee 2033     		adds	r3, r3, #32
 24815 03f0 1B68     		ldr	r3, [r3]	@ float
 24816 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24817              		.loc 1 3634 0
 24818 03f6 0023     		movs	r3, #0
 24819 03f8 87F88B31 		strb	r3, [r7, #395]
 24820 03fc 14E0     		b	.L970
 24821              	.L971:
3635:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 24822              		.loc 1 3635 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 542


 24823 03fe B7F88C31 		ldrh	r3, [r7, #396]
 24824 0402 03F11002 		add	r2, r3, #16
 24825 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24826 040a D31A     		subs	r3, r2, r3
 24827 040c 013B     		subs	r3, r3, #1
 24828 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24829 0412 07F5C071 		add	r1, r7, #384
 24830 0416 0A44     		add	r2, r2, r1
 24831 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24832 041a 3A46     		mov	r2, r7
 24833 041c D154     		strb	r1, [r2, r3]
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24834              		.loc 1 3634 0 discriminator 3
 24835 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24836 0422 0133     		adds	r3, r3, #1
 24837 0424 87F88B31 		strb	r3, [r7, #395]
 24838              	.L970:
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 24839              		.loc 1 3634 0 is_stmt 0 discriminator 1
 24840 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24841 042c 032B     		cmp	r3, #3
 24842 042e E6D9     		bls	.L971
3636:..\src/command_processing.c ****             }
3637:..\src/command_processing.c ****             c = c + 16;
 24843              		.loc 1 3637 0 is_stmt 1
 24844 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24845 0434 1033     		adds	r3, r3, #16
 24846 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24847              	.L963:
3638:..\src/command_processing.c ****         }
3639:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 24848              		.loc 1 3639 0
 24849 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24850 043e 514A     		ldr	r2, .L978+4
 24851 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24852 0442 1946     		mov	r1, r3
 24853 0444 504A     		ldr	r2, .L978+8
 24854 0446 0B46     		mov	r3, r1
 24855 0448 9B00     		lsls	r3, r3, #2
 24856 044a 0B44     		add	r3, r3, r1
 24857 044c 1344     		add	r3, r3, r2
 24858 044e 03F20623 		addw	r3, r3, #518
 24859 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24860 0454 002B     		cmp	r3, #0
 24861 0456 21D0     		beq	.L972
3640:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 24862              		.loc 1 3640 0
 24863 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24864 045c 4849     		ldr	r1, .L978
 24865 045e 1346     		mov	r3, r2
 24866 0460 9B00     		lsls	r3, r3, #2
 24867 0462 1344     		add	r3, r3, r2
 24868 0464 DB00     		lsls	r3, r3, #3
 24869 0466 0B44     		add	r3, r3, r1
 24870 0468 2433     		adds	r3, r3, #36
 24871 046a B3F90030 		ldrsh	r3, [r3]
 24872 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 543


3641:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 24873              		.loc 1 3641 0
 24874 0472 B7F88C31 		ldrh	r3, [r7, #396]
 24875 0476 0133     		adds	r3, r3, #1
 24876 0478 07F5C372 		add	r2, r7, #390
 24877 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 24878 047e 3A46     		mov	r2, r7
 24879 0480 D154     		strb	r1, [r2, r3]
3642:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 24880              		.loc 1 3642 0
 24881 0482 B7F88C21 		ldrh	r2, [r7, #396]
 24882 0486 07F5C373 		add	r3, r7, #390
 24883 048a 0133     		adds	r3, r3, #1
 24884 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24885 048e 3B46     		mov	r3, r7
 24886 0490 9954     		strb	r1, [r3, r2]
3643:..\src/command_processing.c ****             c = c + 2;
 24887              		.loc 1 3643 0
 24888 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 24889 0496 0233     		adds	r3, r3, #2
 24890 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 24891              	.L972:
3644:..\src/command_processing.c ****         }
3645:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 24892              		.loc 1 3645 0
 24893 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24894 04a0 384A     		ldr	r2, .L978+4
 24895 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24896 04a4 1A46     		mov	r2, r3
 24897 04a6 394B     		ldr	r3, .L978+12
 24898 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24899 04ac 013B     		subs	r3, r3, #1
 24900 04ae 3A46     		mov	r2, r7
 24901 04b0 3A21     		movs	r1, #58
 24902 04b2 D154     		strb	r1, [r2, r3]
3646:..\src/command_processing.c ****         c = 1;
 24903              		.loc 1 3646 0
 24904 04b4 0123     		movs	r3, #1
 24905 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3647:..\src/command_processing.c ****                
3648:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 24906              		.loc 1 3648 0
 24907 04ba 0023     		movs	r3, #0
 24908 04bc 87F88B31 		strb	r3, [r7, #395]
 24909 04c0 10E0     		b	.L973
 24910              	.L974:
3649:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24911              		.loc 1 3649 0 discriminator 3
 24912 04c2 B7F88821 		ldrh	r2, [r7, #392]
 24913 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24914 04ca 1344     		add	r3, r3, r2
 24915 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24916 04d0 3946     		mov	r1, r7
 24917 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 24918 04d4 07F12002 		add	r2, r7, #32
 24919 04d8 D154     		strb	r1, [r2, r3]
3648:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 544


 24920              		.loc 1 3648 0 discriminator 3
 24921 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 24922 04de 0133     		adds	r3, r3, #1
 24923 04e0 87F88B31 		strb	r3, [r7, #395]
 24924              	.L973:
3648:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 24925              		.loc 1 3648 0 is_stmt 0 discriminator 1
 24926 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 24927 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24928 04ec 2549     		ldr	r1, .L978+4
 24929 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 24930 04f0 1946     		mov	r1, r3
 24931 04f2 264B     		ldr	r3, .L978+12
 24932 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 24933 04f8 9A42     		cmp	r2, r3
 24934 04fa E2DB     		blt	.L974
3650:..\src/command_processing.c ****         }
3651:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 24935              		.loc 1 3651 0 is_stmt 1 discriminator 2
 24936 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24937 0500 204A     		ldr	r2, .L978+4
 24938 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 24939 0504 1A46     		mov	r2, r3
 24940 0506 214B     		ldr	r3, .L978+12
 24941 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 24942 050c 9AB2     		uxth	r2, r3
 24943 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 24944 0512 1344     		add	r3, r3, r2
 24945 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3652:..\src/command_processing.c ****         
3653:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 24946              		.loc 1 3653 0 discriminator 2
 24947 0518 3B46     		mov	r3, r7
 24948 051a 2022     		movs	r2, #32
 24949 051c 0021     		movs	r1, #0
 24950 051e 1846     		mov	r0, r3
 24951 0520 FFF7FEFF 		bl	memset
3568:..\src/command_processing.c ****     {	
 24952              		.loc 1 3568 0 discriminator 2
 24953 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 24954 0528 0133     		adds	r3, r3, #1
 24955 052a 87F88F31 		strb	r3, [r7, #399]
 24956              	.L959:
3568:..\src/command_processing.c ****     {	
 24957              		.loc 1 3568 0 is_stmt 0 discriminator 1
 24958 052e 184B     		ldr	r3, .L978+16
 24959 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24960 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 24961 0536 9A42     		cmp	r2, r3
 24962 0538 FFF476AD 		bcc	.L975
3654:..\src/command_processing.c ****         
3655:..\src/command_processing.c ****     }
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3658:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 24963              		.loc 1 3658 0 is_stmt 1
 24964 053c 154B     		ldr	r3, .L978+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 545


 24965 053e 1B68     		ldr	r3, [r3]
 24966 0540 5C1E     		subs	r4, r3, #1
 24967 0542 144B     		ldr	r3, .L978+20
 24968 0544 1B68     		ldr	r3, [r3]
 24969 0546 DBB2     		uxtb	r3, r3
 24970 0548 013B     		subs	r3, r3, #1
 24971 054a DAB2     		uxtb	r2, r3
 24972 054c 07F12003 		add	r3, r7, #32
 24973 0550 1146     		mov	r1, r2
 24974 0552 1846     		mov	r0, r3
 24975 0554 FFF7FEFF 		bl	LCRChecksum
 24976 0558 0346     		mov	r3, r0
 24977 055a 1A46     		mov	r2, r3
 24978 055c 07F12003 		add	r3, r7, #32
 24979 0560 1A55     		strb	r2, [r3, r4]
3659:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 24980              		.loc 1 3659 0
 24981 0562 0C4B     		ldr	r3, .L978+20
 24982 0564 1B68     		ldr	r3, [r3]
 24983 0566 9AB2     		uxth	r2, r3
 24984 0568 07F12003 		add	r3, r7, #32
 24985 056c 1146     		mov	r1, r2
 24986 056e 1846     		mov	r0, r3
 24987 0570 FFF7FEFF 		bl	commWrite
3660:..\src/command_processing.c **** }
 24988              		.loc 1 3660 0
 24989 0574 00BF     		nop
 24990 0576 07F5CA77 		add	r7, r7, #404
 24991              		.cfi_def_cfa_offset 12
 24992 057a BD46     		mov	sp, r7
 24993              		.cfi_def_cfa_register 13
 24994              		@ sp needed
 24995 057c 90BD     		pop	{r4, r7, pc}
 24996              	.L979:
 24997 057e 00BF     		.align	2
 24998              	.L978:
 24999 0580 00000000 		.word	g_imu
 25000 0584 00000000 		.word	IMU_connected
 25001 0588 00000000 		.word	c_mem
 25002 058c 00000000 		.word	single_imu_size
 25003 0590 00000000 		.word	N_IMU_Connected
 25004 0594 00000000 		.word	imus_data_size
 25005              		.cfi_endproc
 25006              	.LFE105:
 25007              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 25008              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 25009              		.align	2
 25010              		.global	cmd_get_encoder_map
 25011              		.thumb
 25012              		.thumb_func
 25013              		.type	cmd_get_encoder_map, %function
 25014              	cmd_get_encoder_map:
 25015              	.LFB106:
3661:..\src/command_processing.c **** 
3662:..\src/command_processing.c **** void cmd_get_encoder_map(){
 25016              		.loc 1 3662 0
 25017              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 546


 25018              		@ args = 0, pretend = 0, frame = 16
 25019              		@ frame_needed = 1, uses_anonymous_args = 0
 25020 0000 90B5     		push	{r4, r7, lr}
 25021              		.cfi_def_cfa_offset 12
 25022              		.cfi_offset 4, -12
 25023              		.cfi_offset 7, -8
 25024              		.cfi_offset 14, -4
 25025 0002 85B0     		sub	sp, sp, #20
 25026              		.cfi_def_cfa_offset 32
 25027 0004 00AF     		add	r7, sp, #0
 25028              		.cfi_def_cfa_register 7
3663:..\src/command_processing.c ****     //Retrieve Encoder map
3664:..\src/command_processing.c ****     
3665:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3666:..\src/command_processing.c ****     uint8 CYDATA i, j;
3667:..\src/command_processing.c ****     
3668:..\src/command_processing.c ****     // Header        
3669:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 25029              		.loc 1 3669 0
 25030 0006 A323     		movs	r3, #163
 25031 0008 3B70     		strb	r3, [r7]
3670:..\src/command_processing.c ****     
3671:..\src/command_processing.c ****     // Fill payload
3672:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 25032              		.loc 1 3672 0
 25033 000a 0223     		movs	r3, #2
 25034 000c 7B70     		strb	r3, [r7, #1]
3673:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 25035              		.loc 1 3673 0
 25036 000e 0523     		movs	r3, #5
 25037 0010 BB70     		strb	r3, [r7, #2]
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25038              		.loc 1 3674 0
 25039 0012 0023     		movs	r3, #0
 25040 0014 FB73     		strb	r3, [r7, #15]
 25041 0016 23E0     		b	.L981
 25042              	.L984:
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25043              		.loc 1 3675 0
 25044 0018 0023     		movs	r3, #0
 25045 001a BB73     		strb	r3, [r7, #14]
 25046 001c 1AE0     		b	.L982
 25047              	.L983:
3676:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 25048              		.loc 1 3676 0 discriminator 3
 25049 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25050 0020 1346     		mov	r3, r2
 25051 0022 9B00     		lsls	r3, r3, #2
 25052 0024 1344     		add	r3, r3, r2
 25053 0026 DA1C     		adds	r2, r3, #3
 25054 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25055 002a D118     		adds	r1, r2, r3
 25056 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25057 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 25058 0030 154C     		ldr	r4, .L985
 25059 0032 1346     		mov	r3, r2
 25060 0034 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 547


 25061 0036 1344     		add	r3, r3, r2
 25062 0038 1B01     		lsls	r3, r3, #4
 25063 003a 2344     		add	r3, r3, r4
 25064 003c 0344     		add	r3, r3, r0
 25065 003e 03F5C873 		add	r3, r3, #400
 25066 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 25067 0044 07F11003 		add	r3, r7, #16
 25068 0048 0B44     		add	r3, r3, r1
 25069 004a 03F8102C 		strb	r2, [r3, #-16]
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25070              		.loc 1 3675 0 discriminator 3
 25071 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25072 0050 0133     		adds	r3, r3, #1
 25073 0052 BB73     		strb	r3, [r7, #14]
 25074              	.L982:
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 25075              		.loc 1 3675 0 is_stmt 0 discriminator 1
 25076 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 25077 0056 042B     		cmp	r3, #4
 25078 0058 E1D9     		bls	.L983
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25079              		.loc 1 3674 0 is_stmt 1 discriminator 2
 25080 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25081 005c 0133     		adds	r3, r3, #1
 25082 005e FB73     		strb	r3, [r7, #15]
 25083              	.L981:
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25084              		.loc 1 3674 0 is_stmt 0 discriminator 1
 25085 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25086 0062 012B     		cmp	r3, #1
 25087 0064 D8D9     		bls	.L984
3677:..\src/command_processing.c ****         }
3678:..\src/command_processing.c ****     }
3679:..\src/command_processing.c ****     
3680:..\src/command_processing.c ****     // Calculate checksum
3681:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 25088              		.loc 1 3681 0 is_stmt 1
 25089 0066 3B46     		mov	r3, r7
 25090 0068 0D21     		movs	r1, #13
 25091 006a 1846     		mov	r0, r3
 25092 006c FFF7FEFF 		bl	LCRChecksum
 25093 0070 0346     		mov	r3, r0
 25094 0072 7B73     		strb	r3, [r7, #13]
3682:..\src/command_processing.c ****     
3683:..\src/command_processing.c ****     // Send package to UART
3684:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 25095              		.loc 1 3684 0
 25096 0074 3B46     		mov	r3, r7
 25097 0076 0E21     		movs	r1, #14
 25098 0078 1846     		mov	r0, r3
 25099 007a FFF7FEFF 		bl	commWrite
3685:..\src/command_processing.c **** }
 25100              		.loc 1 3685 0
 25101 007e 00BF     		nop
 25102 0080 1437     		adds	r7, r7, #20
 25103              		.cfi_def_cfa_offset 12
 25104 0082 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 548


 25105              		.cfi_def_cfa_register 13
 25106              		@ sp needed
 25107 0084 90BD     		pop	{r4, r7, pc}
 25108              	.L986:
 25109 0086 00BF     		.align	2
 25110              	.L985:
 25111 0088 00000000 		.word	c_mem
 25112              		.cfi_endproc
 25113              	.LFE106:
 25114              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 25115              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 25116              		.align	2
 25117              		.global	cmd_get_encoder_raw
 25118              		.thumb
 25119              		.thumb_func
 25120              		.type	cmd_get_encoder_raw, %function
 25121              	cmd_get_encoder_raw:
 25122              	.LFB107:
3686:..\src/command_processing.c **** 
3687:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 25123              		.loc 1 3687 0
 25124              		.cfi_startproc
 25125              		@ args = 0, pretend = 0, frame = 32
 25126              		@ frame_needed = 1, uses_anonymous_args = 0
 25127 0000 90B5     		push	{r4, r7, lr}
 25128              		.cfi_def_cfa_offset 12
 25129              		.cfi_offset 4, -12
 25130              		.cfi_offset 7, -8
 25131              		.cfi_offset 14, -4
 25132 0002 89B0     		sub	sp, sp, #36
 25133              		.cfi_def_cfa_offset 48
 25134 0004 00AF     		add	r7, sp, #0
 25135              		.cfi_def_cfa_register 7
3688:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3689:..\src/command_processing.c ****     
3690:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3691:..\src/command_processing.c ****     uint8 i, j, idx;
3692:..\src/command_processing.c ****     uint16 aux_uint16;
3693:..\src/command_processing.c ****     
3694:..\src/command_processing.c ****     //Header package 
3695:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 25136              		.loc 1 3695 0
 25137 0006 A423     		movs	r3, #164
 25138 0008 3B71     		strb	r3, [r7, #4]
3696:..\src/command_processing.c ****  
3697:..\src/command_processing.c ****     // Fill payload
3698:..\src/command_processing.c ****     idx = 0;
 25139              		.loc 1 3698 0
 25140 000a 0023     		movs	r3, #0
 25141 000c 7B77     		strb	r3, [r7, #29]
3699:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 25142              		.loc 1 3699 0
 25143 000e 0023     		movs	r3, #0
 25144 0010 FB77     		strb	r3, [r7, #31]
 25145 0012 3FE0     		b	.L988
 25146              	.L992:
3700:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 549


 25147              		.loc 1 3700 0
 25148 0014 0023     		movs	r3, #0
 25149 0016 BB77     		strb	r3, [r7, #30]
 25150 0018 33E0     		b	.L989
 25151              	.L991:
3701:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25152              		.loc 1 3701 0
 25153 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25154 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25155 001e 3048     		ldr	r0, .L993
 25156 0020 1346     		mov	r3, r2
 25157 0022 5B00     		lsls	r3, r3, #1
 25158 0024 1344     		add	r3, r3, r2
 25159 0026 1B01     		lsls	r3, r3, #4
 25160 0028 0344     		add	r3, r3, r0
 25161 002a 0B44     		add	r3, r3, r1
 25162 002c 03F5C873 		add	r3, r3, #400
 25163 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25164 0032 012B     		cmp	r3, #1
 25165 0034 22D1     		bne	.L990
3702:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 25166              		.loc 1 3702 0
 25167 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25168 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 25169 003a 2A48     		ldr	r0, .L993+4
 25170 003c 1346     		mov	r3, r2
 25171 003e 9B00     		lsls	r3, r3, #2
 25172 0040 1344     		add	r3, r3, r2
 25173 0042 0B44     		add	r3, r3, r1
 25174 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 25175 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3703:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 25176              		.loc 1 3703 0
 25177 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25178 004c 5B00     		lsls	r3, r3, #1
 25179 004e 0233     		adds	r3, r3, #2
 25180 0050 BA1C     		adds	r2, r7, #2
 25181 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25182 0054 07F12001 		add	r1, r7, #32
 25183 0058 0B44     		add	r3, r3, r1
 25184 005a 03F81C2C 		strb	r2, [r3, #-28]
3704:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 25185              		.loc 1 3704 0
 25186 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25187 0060 5B00     		lsls	r3, r3, #1
 25188 0062 5A1C     		adds	r2, r3, #1
 25189 0064 BB1C     		adds	r3, r7, #2
 25190 0066 0133     		adds	r3, r3, #1
 25191 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25192 006a 07F12003 		add	r3, r7, #32
 25193 006e 1344     		add	r3, r3, r2
 25194 0070 0A46     		mov	r2, r1
 25195 0072 03F81C2C 		strb	r2, [r3, #-28]
3705:..\src/command_processing.c ****                 idx++;
 25196              		.loc 1 3705 0
 25197 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25198 0078 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 550


 25199 007a 7B77     		strb	r3, [r7, #29]
 25200              	.L990:
3700:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25201              		.loc 1 3700 0 discriminator 2
 25202 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25203 007e 0133     		adds	r3, r3, #1
 25204 0080 BB77     		strb	r3, [r7, #30]
 25205              	.L989:
3700:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 25206              		.loc 1 3700 0 is_stmt 0 discriminator 1
 25207 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25208 0084 184A     		ldr	r2, .L993+8
 25209 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25210 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 25211 008a 9A42     		cmp	r2, r3
 25212 008c C5D3     		bcc	.L991
3699:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25213              		.loc 1 3699 0 is_stmt 1 discriminator 2
 25214 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25215 0090 0133     		adds	r3, r3, #1
 25216 0092 FB77     		strb	r3, [r7, #31]
 25217              	.L988:
3699:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 25218              		.loc 1 3699 0 is_stmt 0 discriminator 1
 25219 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25220 0096 012B     		cmp	r3, #1
 25221 0098 BCD9     		bls	.L992
3706:..\src/command_processing.c ****             }
3707:..\src/command_processing.c ****         }
3708:..\src/command_processing.c ****     }
3709:..\src/command_processing.c **** 
3710:..\src/command_processing.c ****     // Calculate checksum
3711:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25222              		.loc 1 3711 0 is_stmt 1
 25223 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25224 009c 5B00     		lsls	r3, r3, #1
 25225 009e 5C1C     		adds	r4, r3, #1
 25226 00a0 7B7F     		ldrb	r3, [r7, #29]
 25227 00a2 5B00     		lsls	r3, r3, #1
 25228 00a4 DBB2     		uxtb	r3, r3
 25229 00a6 0133     		adds	r3, r3, #1
 25230 00a8 DAB2     		uxtb	r2, r3
 25231 00aa 3B1D     		adds	r3, r7, #4
 25232 00ac 1146     		mov	r1, r2
 25233 00ae 1846     		mov	r0, r3
 25234 00b0 FFF7FEFF 		bl	LCRChecksum
 25235 00b4 0346     		mov	r3, r0
 25236 00b6 1A46     		mov	r2, r3
 25237 00b8 07F12003 		add	r3, r7, #32
 25238 00bc 2344     		add	r3, r3, r4
 25239 00be 03F81C2C 		strb	r2, [r3, #-28]
3712:..\src/command_processing.c ****     
3713:..\src/command_processing.c ****     // Send package to UART
3714:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25240              		.loc 1 3714 0
 25241 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25242 00c4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 551


 25243 00c6 9BB2     		uxth	r3, r3
 25244 00c8 5B00     		lsls	r3, r3, #1
 25245 00ca 9AB2     		uxth	r2, r3
 25246 00cc 3B1D     		adds	r3, r7, #4
 25247 00ce 1146     		mov	r1, r2
 25248 00d0 1846     		mov	r0, r3
 25249 00d2 FFF7FEFF 		bl	commWrite
3715:..\src/command_processing.c **** }
 25250              		.loc 1 3715 0
 25251 00d6 00BF     		nop
 25252 00d8 2437     		adds	r7, r7, #36
 25253              		.cfi_def_cfa_offset 12
 25254 00da BD46     		mov	sp, r7
 25255              		.cfi_def_cfa_register 13
 25256              		@ sp needed
 25257 00dc 90BD     		pop	{r4, r7, pc}
 25258              	.L994:
 25259 00de 00BF     		.align	2
 25260              	.L993:
 25261 00e0 00000000 		.word	c_mem
 25262 00e4 00000000 		.word	Encoder_Value
 25263 00e8 00000000 		.word	N_Encoder_Line_Connected
 25264              		.cfi_endproc
 25265              	.LFE107:
 25266              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 25267              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 25268              		.align	2
 25269              		.global	cmd_get_ADC_map
 25270              		.thumb
 25271              		.thumb_func
 25272              		.type	cmd_get_ADC_map, %function
 25273              	cmd_get_ADC_map:
 25274              	.LFB108:
3716:..\src/command_processing.c **** 
3717:..\src/command_processing.c **** void cmd_get_ADC_map(){
 25275              		.loc 1 3717 0
 25276              		.cfi_startproc
 25277              		@ args = 0, pretend = 0, frame = 16
 25278              		@ frame_needed = 1, uses_anonymous_args = 0
 25279 0000 80B5     		push	{r7, lr}
 25280              		.cfi_def_cfa_offset 8
 25281              		.cfi_offset 7, -8
 25282              		.cfi_offset 14, -4
 25283 0002 84B0     		sub	sp, sp, #16
 25284              		.cfi_def_cfa_offset 24
 25285 0004 00AF     		add	r7, sp, #0
 25286              		.cfi_def_cfa_register 7
3718:..\src/command_processing.c ****     //Retrieve Encoder map
3719:..\src/command_processing.c ****     
3720:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3721:..\src/command_processing.c ****     uint8 CYDATA i;
3722:..\src/command_processing.c ****     
3723:..\src/command_processing.c ****     // Header        
3724:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 25287              		.loc 1 3724 0
 25288 0006 A523     		movs	r3, #165
 25289 0008 3B70     		strb	r3, [r7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 552


3725:..\src/command_processing.c ****     
3726:..\src/command_processing.c ****     // Fill payload
3727:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 25290              		.loc 1 3727 0
 25291 000a 0C23     		movs	r3, #12
 25292 000c 7B70     		strb	r3, [r7, #1]
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25293              		.loc 1 3728 0
 25294 000e 0023     		movs	r3, #0
 25295 0010 FB73     		strb	r3, [r7, #15]
 25296 0012 0EE0     		b	.L996
 25297              	.L997:
3729:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 25298              		.loc 1 3729 0 discriminator 3
 25299 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25300 0016 0233     		adds	r3, r3, #2
 25301 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25302 001a 0F49     		ldr	r1, .L998
 25303 001c 0A44     		add	r2, r2, r1
 25304 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 25305 0022 07F11001 		add	r1, r7, #16
 25306 0026 0B44     		add	r3, r3, r1
 25307 0028 03F8102C 		strb	r2, [r3, #-16]
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25308              		.loc 1 3728 0 discriminator 3
 25309 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25310 002e 0133     		adds	r3, r3, #1
 25311 0030 FB73     		strb	r3, [r7, #15]
 25312              	.L996:
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 25313              		.loc 1 3728 0 is_stmt 0 discriminator 1
 25314 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25315 0034 0B2B     		cmp	r3, #11
 25316 0036 EDD9     		bls	.L997
3730:..\src/command_processing.c ****     }
3731:..\src/command_processing.c ****     
3732:..\src/command_processing.c ****     // Calculate checksum
3733:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 25317              		.loc 1 3733 0 is_stmt 1
 25318 0038 3B46     		mov	r3, r7
 25319 003a 0E21     		movs	r1, #14
 25320 003c 1846     		mov	r0, r3
 25321 003e FFF7FEFF 		bl	LCRChecksum
 25322 0042 0346     		mov	r3, r0
 25323 0044 BB73     		strb	r3, [r7, #14]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     // Send package to UART
3736:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 25324              		.loc 1 3736 0
 25325 0046 3B46     		mov	r3, r7
 25326 0048 0F21     		movs	r1, #15
 25327 004a 1846     		mov	r0, r3
 25328 004c FFF7FEFF 		bl	commWrite
3737:..\src/command_processing.c ****     
3738:..\src/command_processing.c **** }
 25329              		.loc 1 3738 0
 25330 0050 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 553


 25331 0052 1037     		adds	r7, r7, #16
 25332              		.cfi_def_cfa_offset 8
 25333 0054 BD46     		mov	sp, r7
 25334              		.cfi_def_cfa_register 13
 25335              		@ sp needed
 25336 0056 80BD     		pop	{r7, pc}
 25337              	.L999:
 25338              		.align	2
 25339              	.L998:
 25340 0058 00000000 		.word	c_mem
 25341              		.cfi_endproc
 25342              	.LFE108:
 25343              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 25344              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 25345              		.align	2
 25346              		.global	cmd_get_ADC_raw
 25347              		.thumb
 25348              		.thumb_func
 25349              		.type	cmd_get_ADC_raw, %function
 25350              	cmd_get_ADC_raw:
 25351              	.LFB109:
3739:..\src/command_processing.c **** 
3740:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 25352              		.loc 1 3740 0
 25353              		.cfi_startproc
 25354              		@ args = 0, pretend = 0, frame = 32
 25355              		@ frame_needed = 1, uses_anonymous_args = 0
 25356 0000 90B5     		push	{r4, r7, lr}
 25357              		.cfi_def_cfa_offset 12
 25358              		.cfi_offset 4, -12
 25359              		.cfi_offset 7, -8
 25360              		.cfi_offset 14, -4
 25361 0002 89B0     		sub	sp, sp, #36
 25362              		.cfi_def_cfa_offset 48
 25363 0004 00AF     		add	r7, sp, #0
 25364              		.cfi_def_cfa_register 7
3741:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3742:..\src/command_processing.c ****     
3743:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3744:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 25365              		.loc 1 3744 0
 25366 0006 0023     		movs	r3, #0
 25367 0008 BB77     		strb	r3, [r7, #30]
3745:..\src/command_processing.c ****     int16 aux_int16;
3746:..\src/command_processing.c ****     
3747:..\src/command_processing.c ****     // Header        
3748:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 25368              		.loc 1 3748 0
 25369 000a A623     		movs	r3, #166
 25370 000c 3B71     		strb	r3, [r7, #4]
3749:..\src/command_processing.c ****     
3750:..\src/command_processing.c ****     // Fill payload
3751:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 25371              		.loc 1 3751 0
 25372 000e 0023     		movs	r3, #0
 25373 0010 FB77     		strb	r3, [r7, #31]
 25374 0012 27E0     		b	.L1001
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 554


 25375              	.L1003:
3752:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25376              		.loc 1 3752 0
 25377 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25378 0016 274A     		ldr	r2, .L1004
 25379 0018 1344     		add	r3, r3, r2
 25380 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 25381 001e 012B     		cmp	r3, #1
 25382 0020 1DD1     		bne	.L1002
3753:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 25383              		.loc 1 3753 0
 25384 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25385 0024 244A     		ldr	r2, .L1004+4
 25386 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 25387 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3754:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 25388              		.loc 1 3754 0
 25389 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25390 002e 5B00     		lsls	r3, r3, #1
 25391 0030 0233     		adds	r3, r3, #2
 25392 0032 BA1C     		adds	r2, r7, #2
 25393 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 25394 0036 07F12001 		add	r1, r7, #32
 25395 003a 0B44     		add	r3, r3, r1
 25396 003c 03F81C2C 		strb	r2, [r3, #-28]
3755:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 25397              		.loc 1 3755 0
 25398 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25399 0042 5B00     		lsls	r3, r3, #1
 25400 0044 5A1C     		adds	r2, r3, #1
 25401 0046 BB1C     		adds	r3, r7, #2
 25402 0048 0133     		adds	r3, r3, #1
 25403 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25404 004c 07F12003 		add	r3, r7, #32
 25405 0050 1344     		add	r3, r3, r2
 25406 0052 0A46     		mov	r2, r1
 25407 0054 03F81C2C 		strb	r2, [r3, #-28]
3756:..\src/command_processing.c ****             idx++;
 25408              		.loc 1 3756 0
 25409 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25410 005a 0133     		adds	r3, r3, #1
 25411 005c BB77     		strb	r3, [r7, #30]
 25412              	.L1002:
3751:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25413              		.loc 1 3751 0 discriminator 2
 25414 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 25415 0060 0133     		adds	r3, r3, #1
 25416 0062 FB77     		strb	r3, [r7, #31]
 25417              	.L1001:
3751:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 25418              		.loc 1 3751 0 is_stmt 0 discriminator 1
 25419 0064 154B     		ldr	r3, .L1004+8
 25420 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25421 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 25422 006a 9A42     		cmp	r2, r3
 25423 006c D2D3     		bcc	.L1003
3757:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 555


3758:..\src/command_processing.c ****     }
3759:..\src/command_processing.c **** 
3760:..\src/command_processing.c ****     // Calculate checksum
3761:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 25424              		.loc 1 3761 0 is_stmt 1
 25425 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25426 0070 5B00     		lsls	r3, r3, #1
 25427 0072 5C1C     		adds	r4, r3, #1
 25428 0074 BB7F     		ldrb	r3, [r7, #30]
 25429 0076 5B00     		lsls	r3, r3, #1
 25430 0078 DBB2     		uxtb	r3, r3
 25431 007a 0133     		adds	r3, r3, #1
 25432 007c DAB2     		uxtb	r2, r3
 25433 007e 3B1D     		adds	r3, r7, #4
 25434 0080 1146     		mov	r1, r2
 25435 0082 1846     		mov	r0, r3
 25436 0084 FFF7FEFF 		bl	LCRChecksum
 25437 0088 0346     		mov	r3, r0
 25438 008a 1A46     		mov	r2, r3
 25439 008c 07F12003 		add	r3, r7, #32
 25440 0090 2344     		add	r3, r3, r4
 25441 0092 03F81C2C 		strb	r2, [r3, #-28]
3762:..\src/command_processing.c ****     
3763:..\src/command_processing.c ****     // Send package to UART
3764:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 25442              		.loc 1 3764 0
 25443 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 25444 0098 0133     		adds	r3, r3, #1
 25445 009a 9BB2     		uxth	r3, r3
 25446 009c 5B00     		lsls	r3, r3, #1
 25447 009e 9AB2     		uxth	r2, r3
 25448 00a0 3B1D     		adds	r3, r7, #4
 25449 00a2 1146     		mov	r1, r2
 25450 00a4 1846     		mov	r0, r3
 25451 00a6 FFF7FEFF 		bl	commWrite
3765:..\src/command_processing.c **** }
 25452              		.loc 1 3765 0
 25453 00aa 00BF     		nop
 25454 00ac 2437     		adds	r7, r7, #36
 25455              		.cfi_def_cfa_offset 12
 25456 00ae BD46     		mov	sp, r7
 25457              		.cfi_def_cfa_register 13
 25458              		@ sp needed
 25459 00b0 90BD     		pop	{r4, r7, pc}
 25460              	.L1005:
 25461 00b2 00BF     		.align	2
 25462              	.L1004:
 25463 00b4 00000000 		.word	c_mem
 25464 00b8 00000000 		.word	ADC_buf
 25465 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 25466              		.cfi_endproc
 25467              	.LFE109:
 25468              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 25469              		.section	.text.air_chambers_control,"ax",%progbits
 25470              		.align	2
 25471              		.global	air_chambers_control
 25472              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 556


 25473              		.thumb_func
 25474              		.type	air_chambers_control, %function
 25475              	air_chambers_control:
 25476              	.LFB110:
3766:..\src/command_processing.c **** 
3767:..\src/command_processing.c **** //==============================================================================
3768:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3769:..\src/command_processing.c **** //==============================================================================
3770:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3771:..\src/command_processing.c **** 
3772:..\src/command_processing.c **** void air_chambers_control() {
 25477              		.loc 1 3772 0
 25478              		.cfi_startproc
 25479              		@ args = 0, pretend = 0, frame = 0
 25480              		@ frame_needed = 1, uses_anonymous_args = 0
 25481              		@ link register save eliminated.
 25482 0000 80B4     		push	{r7}
 25483              		.cfi_def_cfa_offset 4
 25484              		.cfi_offset 7, -4
 25485 0002 00AF     		add	r7, sp, #0
 25486              		.cfi_def_cfa_register 7
3773:..\src/command_processing.c ****     
3774:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3775:..\src/command_processing.c ****     
3776:..\src/command_processing.c ****     int16 curr_diff;
3777:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
3778:..\src/command_processing.c ****     int32 valve_command;
3779:..\src/command_processing.c ****     int16 x_value;
3780:..\src/command_processing.c **** 
3781:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
3782:..\src/command_processing.c ****     
3783:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
3784:..\src/command_processing.c ****     
3785:..\src/command_processing.c ****     // Current difference saturation old mapping
3786:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3787:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3788:..\src/command_processing.c **** //    }
3789:..\src/command_processing.c **** //    if(curr_diff < 0) {
3790:..\src/command_processing.c **** //        curr_diff = 0;
3791:..\src/command_processing.c **** //    }
3792:..\src/command_processing.c **** 
3793:..\src/command_processing.c ****     // Compute pressure reference
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
3796:..\src/command_processing.c ****     if (x_value < 0)
3797:..\src/command_processing.c ****         x_value = 0;
3798:..\src/command_processing.c ****     
3799:..\src/command_processing.c ****     // old mapping --- linear mapping
3800:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3801:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
3802:..\src/command_processing.c ****     if (pressure_reference < 0)
3803:..\src/command_processing.c ****         pressure_reference = 0;
3804:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
3805:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
3806:..\src/command_processing.c ****     
3807:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
3808:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 557


3809:..\src/command_processing.c **** //    if (err_pressure < 0){
3810:..\src/command_processing.c **** //        err_pressure = 0;
3811:..\src/command_processing.c **** //    }
3812:..\src/command_processing.c ****     
3813:..\src/command_processing.c ****     if (x_value <= 0){
3814:..\src/command_processing.c ****         //i.e the hand is opening
3815:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
3816:..\src/command_processing.c ****     }
3817:..\src/command_processing.c ****     else {
3818:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3819:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3820:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3821:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
3822:..\src/command_processing.c ****     }
3823:..\src/command_processing.c ****     
3824:..\src/command_processing.c ****     // Pump control
3825:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
3826:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3827:..\src/command_processing.c ****     
3828:..\src/command_processing.c ****     // Limit output voltage
3829:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
3830:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
3831:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
3832:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
3833:..\src/command_processing.c ****         
3834:..\src/command_processing.c ****     VALVE_Write(valve_command);
3835:..\src/command_processing.c **** #endif
3836:..\src/command_processing.c **** }
 25487              		.loc 1 3836 0
 25488 0004 00BF     		nop
 25489 0006 BD46     		mov	sp, r7
 25490              		.cfi_def_cfa_register 13
 25491              		@ sp needed
 25492 0008 80BC     		pop	{r7}
 25493              		.cfi_restore 7
 25494              		.cfi_def_cfa_offset 0
 25495 000a 7047     		bx	lr
 25496              		.cfi_endproc
 25497              	.LFE110:
 25498              		.size	air_chambers_control, .-air_chambers_control
 25499              		.section	.text.drive_slave,"ax",%progbits
 25500              		.align	2
 25501              		.global	drive_slave
 25502              		.thumb
 25503              		.thumb_func
 25504              		.type	drive_slave, %function
 25505              	drive_slave:
 25506              	.LFB111:
3837:..\src/command_processing.c **** 
3838:..\src/command_processing.c **** //==============================================================================
3839:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
3840:..\src/command_processing.c **** //==============================================================================
3841:..\src/command_processing.c ****  
3842:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 25507              		.loc 1 3842 0
 25508              		.cfi_startproc
 25509              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 558


 25510              		@ frame_needed = 1, uses_anonymous_args = 0
 25511              		@ link register save eliminated.
 25512 0000 80B4     		push	{r7}
 25513              		.cfi_def_cfa_offset 4
 25514              		.cfi_offset 7, -4
 25515 0002 83B0     		sub	sp, sp, #12
 25516              		.cfi_def_cfa_offset 16
 25517 0004 00AF     		add	r7, sp, #0
 25518              		.cfi_def_cfa_register 7
 25519 0006 0346     		mov	r3, r0
 25520 0008 0A46     		mov	r2, r1
 25521 000a FB71     		strb	r3, [r7, #7]
 25522 000c 1346     		mov	r3, r2
 25523 000e BB71     		strb	r3, [r7, #6]
3843:..\src/command_processing.c **** 
3844:..\src/command_processing.c **** #ifdef MASTER_FW
3845:..\src/command_processing.c ****     uint8 packet_data[6];
3846:..\src/command_processing.c ****     uint8 packet_lenght;
3847:..\src/command_processing.c ****     int16 aux_int16;
3848:..\src/command_processing.c ****     
3849:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
3850:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
3851:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3852:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3853:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
3854:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3855:..\src/command_processing.c ****         master_mode = 0;
3856:..\src/command_processing.c ****         return;
3857:..\src/command_processing.c ****     }
3858:..\src/command_processing.c ****         
3859:..\src/command_processing.c ****     if (dev_tension[0] > 5000 && dev_tension[0] < 7000){
3860:..\src/command_processing.c ****         master_mode = 0;
3861:..\src/command_processing.c ****         return;
3862:..\src/command_processing.c ****     }
3863:..\src/command_processing.c ****     
3864:..\src/command_processing.c ****        
3865:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3866:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
3867:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
3868:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
3869:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
3870:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
3871:..\src/command_processing.c ****     
3872:..\src/command_processing.c ****     packet_lenght = 6;
3873:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3874:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
3875:..\src/command_processing.c **** 
3876:..\src/command_processing.c **** #endif
3877:..\src/command_processing.c **** }
 25524              		.loc 1 3877 0
 25525 0010 00BF     		nop
 25526 0012 0C37     		adds	r7, r7, #12
 25527              		.cfi_def_cfa_offset 4
 25528 0014 BD46     		mov	sp, r7
 25529              		.cfi_def_cfa_register 13
 25530              		@ sp needed
 25531 0016 80BC     		pop	{r7}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 559


 25532              		.cfi_restore 7
 25533              		.cfi_def_cfa_offset 0
 25534 0018 7047     		bx	lr
 25535              		.cfi_endproc
 25536              	.LFE111:
 25537              		.size	drive_slave, .-drive_slave
 25538 001a 00BF     		.section	.text.stop_feedback,"ax",%progbits
 25539              		.align	2
 25540              		.global	stop_feedback
 25541              		.thumb
 25542              		.thumb_func
 25543              		.type	stop_feedback, %function
 25544              	stop_feedback:
 25545              	.LFB112:
3878:..\src/command_processing.c **** 
3879:..\src/command_processing.c **** //==============================================================================
3880:..\src/command_processing.c **** //                                                                 STOP FEEDBACK
3881:..\src/command_processing.c **** //==============================================================================
3882:..\src/command_processing.c ****  
3883:..\src/command_processing.c **** void stop_feedback() {
 25546              		.loc 1 3883 0
 25547              		.cfi_startproc
 25548              		@ args = 0, pretend = 0, frame = 0
 25549              		@ frame_needed = 1, uses_anonymous_args = 0
 25550              		@ link register save eliminated.
 25551 0000 80B4     		push	{r7}
 25552              		.cfi_def_cfa_offset 4
 25553              		.cfi_offset 7, -4
 25554 0002 00AF     		add	r7, sp, #0
 25555              		.cfi_def_cfa_register 7
3884:..\src/command_processing.c ****     
3885:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3886:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
3887:..\src/command_processing.c ****         // Stop pump and open valve
3888:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
3889:..\src/command_processing.c ****         VALVE_Write(0);
3890:..\src/command_processing.c ****     }
3891:..\src/command_processing.c **** #endif
3892:..\src/command_processing.c **** }
 25556              		.loc 1 3892 0
 25557 0004 00BF     		nop
 25558 0006 BD46     		mov	sp, r7
 25559              		.cfi_def_cfa_register 13
 25560              		@ sp needed
 25561 0008 80BC     		pop	{r7}
 25562              		.cfi_restore 7
 25563              		.cfi_def_cfa_offset 0
 25564 000a 7047     		bx	lr
 25565              		.cfi_endproc
 25566              	.LFE112:
 25567              		.size	stop_feedback, .-stop_feedback
 25568              		.section	.text.deactivate_slaves,"ax",%progbits
 25569              		.align	2
 25570              		.global	deactivate_slaves
 25571              		.thumb
 25572              		.thumb_func
 25573              		.type	deactivate_slaves, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 560


 25574              	deactivate_slaves:
 25575              	.LFB113:
3893:..\src/command_processing.c **** 
3894:..\src/command_processing.c **** //==============================================================================
3895:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
3896:..\src/command_processing.c **** //==============================================================================
3897:..\src/command_processing.c ****  
3898:..\src/command_processing.c **** void deactivate_slaves() {
 25576              		.loc 1 3898 0
 25577              		.cfi_startproc
 25578              		@ args = 0, pretend = 0, frame = 0
 25579              		@ frame_needed = 1, uses_anonymous_args = 0
 25580              		@ link register save eliminated.
 25581 0000 80B4     		push	{r7}
 25582              		.cfi_def_cfa_offset 4
 25583              		.cfi_offset 7, -4
 25584 0002 00AF     		add	r7, sp, #0
 25585              		.cfi_def_cfa_register 7
3899:..\src/command_processing.c ****     
3900:..\src/command_processing.c **** #ifdef MASTER_FW
3901:..\src/command_processing.c ****     
3902:..\src/command_processing.c ****     uint8 packet_data[10];
3903:..\src/command_processing.c ****     uint8 packet_lenght;
3904:..\src/command_processing.c ****     
3905:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
3906:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3907:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3908:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS          &&
3909:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3910:..\src/command_processing.c ****         master_mode = 0;
3911:..\src/command_processing.c ****         return;
3912:..\src/command_processing.c ****     }
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3915:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
3916:..\src/command_processing.c **** 
3917:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
3918:..\src/command_processing.c ****     packet_lenght = 3;
3919:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3920:..\src/command_processing.c ****     
3921:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
3922:..\src/command_processing.c ****     
3923:..\src/command_processing.c **** #endif    
3924:..\src/command_processing.c **** }
 25586              		.loc 1 3924 0
 25587 0004 00BF     		nop
 25588 0006 BD46     		mov	sp, r7
 25589              		.cfi_def_cfa_register 13
 25590              		@ sp needed
 25591 0008 80BC     		pop	{r7}
 25592              		.cfi_restore 7
 25593              		.cfi_def_cfa_offset 0
 25594 000a 7047     		bx	lr
 25595              		.cfi_endproc
 25596              	.LFE113:
 25597              		.size	deactivate_slaves, .-deactivate_slaves
 25598              		.bss
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 561


 25599              		.align	1
 25600              	i.11155:
 25601 0000 0000     		.space	2
 25602 0002 0000     		.align	2
 25603              	last_aux_int16.11279:
 25604 0004 00000000 		.space	4
 25605              		.text
 25606              	.Letext0:
 25607              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25608              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 25609              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 25610              		.file 6 "..\\src\\commands.h"
 25611              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 25612              		.file 8 "..\\src\\globals.h"
 25613              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 25614              		.section	.debug_info,"",%progbits
 25615              	.Ldebug_info0:
 25616 0000 A1220000 		.4byte	0x22a1
 25617 0004 0400     		.2byte	0x4
 25618 0006 00000000 		.4byte	.Ldebug_abbrev0
 25619 000a 04       		.byte	0x4
 25620 000b 01       		.uleb128 0x1
 25621 000c 5F080000 		.4byte	.LASF364
 25622 0010 0C       		.byte	0xc
 25623 0011 D1120000 		.4byte	.LASF365
 25624 0015 2A040000 		.4byte	.LASF366
 25625 0019 00000000 		.4byte	.Ldebug_ranges0+0
 25626 001d 00000000 		.4byte	0
 25627 0021 00000000 		.4byte	.Ldebug_line0
 25628 0025 02       		.uleb128 0x2
 25629 0026 01       		.byte	0x1
 25630 0027 06       		.byte	0x6
 25631 0028 55030000 		.4byte	.LASF0
 25632 002c 02       		.uleb128 0x2
 25633 002d 01       		.byte	0x1
 25634 002e 08       		.byte	0x8
 25635 002f CC030000 		.4byte	.LASF1
 25636 0033 02       		.uleb128 0x2
 25637 0034 02       		.byte	0x2
 25638 0035 05       		.byte	0x5
 25639 0036 580F0000 		.4byte	.LASF2
 25640 003a 02       		.uleb128 0x2
 25641 003b 02       		.byte	0x2
 25642 003c 07       		.byte	0x7
 25643 003d D7110000 		.4byte	.LASF3
 25644 0041 03       		.uleb128 0x3
 25645 0042 8F120000 		.4byte	.LASF5
 25646 0046 03       		.byte	0x3
 25647 0047 3F       		.byte	0x3f
 25648 0048 4C000000 		.4byte	0x4c
 25649 004c 02       		.uleb128 0x2
 25650 004d 04       		.byte	0x4
 25651 004e 05       		.byte	0x5
 25652 004f 61020000 		.4byte	.LASF4
 25653 0053 03       		.uleb128 0x3
 25654 0054 19090000 		.4byte	.LASF6
 25655 0058 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 562


 25656 0059 41       		.byte	0x41
 25657 005a 5E000000 		.4byte	0x5e
 25658 005e 02       		.uleb128 0x2
 25659 005f 04       		.byte	0x4
 25660 0060 07       		.byte	0x7
 25661 0061 18070000 		.4byte	.LASF7
 25662 0065 02       		.uleb128 0x2
 25663 0066 08       		.byte	0x8
 25664 0067 05       		.byte	0x5
 25665 0068 24090000 		.4byte	.LASF8
 25666 006c 02       		.uleb128 0x2
 25667 006d 08       		.byte	0x8
 25668 006e 07       		.byte	0x7
 25669 006f A40C0000 		.4byte	.LASF9
 25670 0073 04       		.uleb128 0x4
 25671 0074 04       		.byte	0x4
 25672 0075 05       		.byte	0x5
 25673 0076 696E7400 		.ascii	"int\000"
 25674 007a 02       		.uleb128 0x2
 25675 007b 04       		.byte	0x4
 25676 007c 07       		.byte	0x7
 25677 007d 180A0000 		.4byte	.LASF10
 25678 0081 03       		.uleb128 0x3
 25679 0082 55000000 		.4byte	.LASF11
 25680 0086 04       		.byte	0x4
 25681 0087 2C       		.byte	0x2c
 25682 0088 41000000 		.4byte	0x41
 25683 008c 03       		.uleb128 0x3
 25684 008d 48110000 		.4byte	.LASF12
 25685 0091 04       		.byte	0x4
 25686 0092 30       		.byte	0x30
 25687 0093 53000000 		.4byte	0x53
 25688 0097 05       		.uleb128 0x5
 25689 0098 460F0000 		.4byte	.LASF13
 25690 009c 05       		.byte	0x5
 25691 009d E401     		.2byte	0x1e4
 25692 009f 2C000000 		.4byte	0x2c
 25693 00a3 05       		.uleb128 0x5
 25694 00a4 24130000 		.4byte	.LASF14
 25695 00a8 05       		.byte	0x5
 25696 00a9 E501     		.2byte	0x1e5
 25697 00ab 3A000000 		.4byte	0x3a
 25698 00af 05       		.uleb128 0x5
 25699 00b0 81000000 		.4byte	.LASF15
 25700 00b4 05       		.byte	0x5
 25701 00b5 E601     		.2byte	0x1e6
 25702 00b7 5E000000 		.4byte	0x5e
 25703 00bb 05       		.uleb128 0x5
 25704 00bc 8E010000 		.4byte	.LASF16
 25705 00c0 05       		.byte	0x5
 25706 00c1 E701     		.2byte	0x1e7
 25707 00c3 25000000 		.4byte	0x25
 25708 00c7 05       		.uleb128 0x5
 25709 00c8 A8100000 		.4byte	.LASF17
 25710 00cc 05       		.byte	0x5
 25711 00cd E801     		.2byte	0x1e8
 25712 00cf 33000000 		.4byte	0x33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 563


 25713 00d3 05       		.uleb128 0x5
 25714 00d4 26120000 		.4byte	.LASF18
 25715 00d8 05       		.byte	0x5
 25716 00d9 E901     		.2byte	0x1e9
 25717 00db 4C000000 		.4byte	0x4c
 25718 00df 05       		.uleb128 0x5
 25719 00e0 D8020000 		.4byte	.LASF19
 25720 00e4 05       		.byte	0x5
 25721 00e5 EA01     		.2byte	0x1ea
 25722 00e7 EB000000 		.4byte	0xeb
 25723 00eb 02       		.uleb128 0x2
 25724 00ec 04       		.byte	0x4
 25725 00ed 04       		.byte	0x4
 25726 00ee DE090000 		.4byte	.LASF20
 25727 00f2 02       		.uleb128 0x2
 25728 00f3 08       		.byte	0x8
 25729 00f4 04       		.byte	0x4
 25730 00f5 7C090000 		.4byte	.LASF21
 25731 00f9 02       		.uleb128 0x2
 25732 00fa 01       		.byte	0x1
 25733 00fb 08       		.byte	0x8
 25734 00fc C0040000 		.4byte	.LASF22
 25735 0100 05       		.uleb128 0x5
 25736 0101 990D0000 		.4byte	.LASF23
 25737 0105 05       		.byte	0x5
 25738 0106 8E02     		.2byte	0x28e
 25739 0108 0C010000 		.4byte	0x10c
 25740 010c 06       		.uleb128 0x6
 25741 010d 97000000 		.4byte	0x97
 25742 0111 02       		.uleb128 0x2
 25743 0112 08       		.byte	0x8
 25744 0113 04       		.byte	0x4
 25745 0114 8A0B0000 		.4byte	.LASF24
 25746 0118 02       		.uleb128 0x2
 25747 0119 04       		.byte	0x4
 25748 011a 07       		.byte	0x7
 25749 011b 10000000 		.4byte	.LASF25
 25750 011f 07       		.uleb128 0x7
 25751 0120 04       		.byte	0x4
 25752 0121 F9000000 		.4byte	0xf9
 25753 0125 07       		.uleb128 0x7
 25754 0126 04       		.byte	0x4
 25755 0127 2B010000 		.4byte	0x12b
 25756 012b 08       		.uleb128 0x8
 25757 012c F9000000 		.4byte	0xf9
 25758 0130 09       		.uleb128 0x9
 25759 0131 F9000000 		.4byte	0xf9
 25760 0135 40010000 		.4byte	0x140
 25761 0139 0A       		.uleb128 0xa
 25762 013a 18010000 		.4byte	0x118
 25763 013e 19       		.byte	0x19
 25764 013f 00       		.byte	0
 25765 0140 09       		.uleb128 0x9
 25766 0141 F9000000 		.4byte	0xf9
 25767 0145 50010000 		.4byte	0x150
 25768 0149 0A       		.uleb128 0xa
 25769 014a 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 564


 25770 014e 07       		.byte	0x7
 25771 014f 00       		.byte	0
 25772 0150 0B       		.uleb128 0xb
 25773 0151 600A0000 		.4byte	.LASF55
 25774 0155 01       		.byte	0x1
 25775 0156 2C000000 		.4byte	0x2c
 25776 015a 06       		.byte	0x6
 25777 015b 42       		.byte	0x42
 25778 015c 0F020000 		.4byte	0x20f
 25779 0160 0C       		.uleb128 0xc
 25780 0161 4C130000 		.4byte	.LASF26
 25781 0165 00       		.byte	0
 25782 0166 0C       		.uleb128 0xc
 25783 0167 E00F0000 		.4byte	.LASF27
 25784 016b 01       		.byte	0x1
 25785 016c 0C       		.uleb128 0xc
 25786 016d F4060000 		.4byte	.LASF28
 25787 0171 03       		.byte	0x3
 25788 0172 0C       		.uleb128 0xc
 25789 0173 04040000 		.4byte	.LASF29
 25790 0177 04       		.byte	0x4
 25791 0178 0C       		.uleb128 0xc
 25792 0179 D20D0000 		.4byte	.LASF30
 25793 017d 05       		.byte	0x5
 25794 017e 0C       		.uleb128 0xc
 25795 017f 07080000 		.4byte	.LASF31
 25796 0183 06       		.byte	0x6
 25797 0184 0C       		.uleb128 0xc
 25798 0185 38070000 		.4byte	.LASF32
 25799 0189 09       		.byte	0x9
 25800 018a 0C       		.uleb128 0xc
 25801 018b 19000000 		.4byte	.LASF33
 25802 018f 0A       		.byte	0xa
 25803 0190 0C       		.uleb128 0xc
 25804 0191 7C100000 		.4byte	.LASF34
 25805 0195 0C       		.byte	0xc
 25806 0196 0C       		.uleb128 0xc
 25807 0197 FA0B0000 		.4byte	.LASF35
 25808 019b 0D       		.byte	0xd
 25809 019c 0C       		.uleb128 0xc
 25810 019d 43000000 		.4byte	.LASF36
 25811 01a1 80       		.byte	0x80
 25812 01a2 0C       		.uleb128 0xc
 25813 01a3 AF040000 		.4byte	.LASF37
 25814 01a7 81       		.byte	0x81
 25815 01a8 0C       		.uleb128 0xc
 25816 01a9 C2050000 		.4byte	.LASF38
 25817 01ad 82       		.byte	0x82
 25818 01ae 0C       		.uleb128 0xc
 25819 01af AA0F0000 		.4byte	.LASF39
 25820 01b3 83       		.byte	0x83
 25821 01b4 0C       		.uleb128 0xc
 25822 01b5 1D0F0000 		.4byte	.LASF40
 25823 01b9 84       		.byte	0x84
 25824 01ba 0C       		.uleb128 0xc
 25825 01bb F0020000 		.4byte	.LASF41
 25826 01bf 85       		.byte	0x85
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 565


 25827 01c0 0C       		.uleb128 0xc
 25828 01c1 49080000 		.4byte	.LASF42
 25829 01c5 86       		.byte	0x86
 25830 01c6 0C       		.uleb128 0xc
 25831 01c7 E7070000 		.4byte	.LASF43
 25832 01cb 88       		.byte	0x88
 25833 01cc 0C       		.uleb128 0xc
 25834 01cd 5D100000 		.4byte	.LASF44
 25835 01d1 89       		.byte	0x89
 25836 01d2 0C       		.uleb128 0xc
 25837 01d3 020D0000 		.4byte	.LASF45
 25838 01d7 8B       		.byte	0x8b
 25839 01d8 0C       		.uleb128 0xc
 25840 01d9 5B0B0000 		.4byte	.LASF46
 25841 01dd 8C       		.byte	0x8c
 25842 01de 0C       		.uleb128 0xc
 25843 01df F4080000 		.4byte	.LASF47
 25844 01e3 8E       		.byte	0x8e
 25845 01e4 0C       		.uleb128 0xc
 25846 01e5 3A0D0000 		.4byte	.LASF48
 25847 01e9 90       		.byte	0x90
 25848 01ea 0C       		.uleb128 0xc
 25849 01eb B0110000 		.4byte	.LASF49
 25850 01ef A1       		.byte	0xa1
 25851 01f0 0C       		.uleb128 0xc
 25852 01f1 D60E0000 		.4byte	.LASF50
 25853 01f5 A2       		.byte	0xa2
 25854 01f6 0C       		.uleb128 0xc
 25855 01f7 BE0A0000 		.4byte	.LASF51
 25856 01fb A3       		.byte	0xa3
 25857 01fc 0C       		.uleb128 0xc
 25858 01fd F20E0000 		.4byte	.LASF52
 25859 0201 A4       		.byte	0xa4
 25860 0202 0C       		.uleb128 0xc
 25861 0203 CF0F0000 		.4byte	.LASF53
 25862 0207 A5       		.byte	0xa5
 25863 0208 0C       		.uleb128 0xc
 25864 0209 9D0E0000 		.4byte	.LASF54
 25865 020d A6       		.byte	0xa6
 25866 020e 00       		.byte	0
 25867 020f 0B       		.uleb128 0xb
 25868 0210 FB120000 		.4byte	.LASF56
 25869 0214 01       		.byte	0x1
 25870 0215 2C000000 		.4byte	0x2c
 25871 0219 06       		.byte	0x6
 25872 021a 8B       		.byte	0x8b
 25873 021b 4A020000 		.4byte	0x24a
 25874 021f 0C       		.uleb128 0xc
 25875 0220 4E060000 		.4byte	.LASF57
 25876 0224 00       		.byte	0
 25877 0225 0C       		.uleb128 0xc
 25878 0226 9E0A0000 		.4byte	.LASF58
 25879 022a 01       		.byte	0x1
 25880 022b 0C       		.uleb128 0xc
 25881 022c 10020000 		.4byte	.LASF59
 25882 0230 02       		.byte	0x2
 25883 0231 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 566


 25884 0232 70010000 		.4byte	.LASF60
 25885 0236 03       		.byte	0x3
 25886 0237 0C       		.uleb128 0xc
 25887 0238 14010000 		.4byte	.LASF61
 25888 023c 04       		.byte	0x4
 25889 023d 0C       		.uleb128 0xc
 25890 023e 2B000000 		.4byte	.LASF62
 25891 0242 05       		.byte	0x5
 25892 0243 0C       		.uleb128 0xc
 25893 0244 B70E0000 		.4byte	.LASF63
 25894 0248 06       		.byte	0x6
 25895 0249 00       		.byte	0
 25896 024a 0B       		.uleb128 0xb
 25897 024b 32090000 		.4byte	.LASF64
 25898 024f 01       		.byte	0x1
 25899 0250 2C000000 		.4byte	0x2c
 25900 0254 06       		.byte	0x6
 25901 0255 9E       		.byte	0x9e
 25902 0256 73020000 		.4byte	0x273
 25903 025a 0C       		.uleb128 0xc
 25904 025b 74120000 		.4byte	.LASF65
 25905 025f 00       		.byte	0
 25906 0260 0C       		.uleb128 0xc
 25907 0261 DB070000 		.4byte	.LASF66
 25908 0265 01       		.byte	0x1
 25909 0266 0C       		.uleb128 0xc
 25910 0267 7A0B0000 		.4byte	.LASF67
 25911 026b 02       		.byte	0x2
 25912 026c 0C       		.uleb128 0xc
 25913 026d DF060000 		.4byte	.LASF68
 25914 0271 03       		.byte	0x3
 25915 0272 00       		.byte	0
 25916 0273 0B       		.uleb128 0xb
 25917 0274 94030000 		.4byte	.LASF69
 25918 0278 01       		.byte	0x1
 25919 0279 2C000000 		.4byte	0x2c
 25920 027d 06       		.byte	0x6
 25921 027e A8       		.byte	0xa8
 25922 027f 90020000 		.4byte	0x290
 25923 0283 0C       		.uleb128 0xc
 25924 0284 AD0E0000 		.4byte	.LASF70
 25925 0288 00       		.byte	0
 25926 0289 0C       		.uleb128 0xc
 25927 028a 5E090000 		.4byte	.LASF71
 25928 028e 01       		.byte	0x1
 25929 028f 00       		.byte	0
 25930 0290 0B       		.uleb128 0xb
 25931 0291 530C0000 		.4byte	.LASF72
 25932 0295 01       		.byte	0x1
 25933 0296 2C000000 		.4byte	0x2c
 25934 029a 06       		.byte	0x6
 25935 029b AD       		.byte	0xad
 25936 029c AD020000 		.4byte	0x2ad
 25937 02a0 0C       		.uleb128 0xc
 25938 02a1 33060000 		.4byte	.LASF73
 25939 02a5 00       		.byte	0
 25940 02a6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 567


 25941 02a7 98070000 		.4byte	.LASF74
 25942 02ab 01       		.byte	0x1
 25943 02ac 00       		.byte	0
 25944 02ad 0B       		.uleb128 0xb
 25945 02ae 9D100000 		.4byte	.LASF75
 25946 02b2 01       		.byte	0x1
 25947 02b3 2C000000 		.4byte	0x2c
 25948 02b7 06       		.byte	0x6
 25949 02b8 B5       		.byte	0xb5
 25950 02b9 FA020000 		.4byte	0x2fa
 25951 02bd 0C       		.uleb128 0xc
 25952 02be 9F070000 		.4byte	.LASF76
 25953 02c2 00       		.byte	0
 25954 02c3 0C       		.uleb128 0xc
 25955 02c4 09130000 		.4byte	.LASF77
 25956 02c8 01       		.byte	0x1
 25957 02c9 0C       		.uleb128 0xc
 25958 02ca 42090000 		.4byte	.LASF78
 25959 02ce 02       		.byte	0x2
 25960 02cf 0C       		.uleb128 0xc
 25961 02d0 370B0000 		.4byte	.LASF79
 25962 02d4 03       		.byte	0x3
 25963 02d5 0C       		.uleb128 0xc
 25964 02d6 6B0A0000 		.4byte	.LASF80
 25965 02da 04       		.byte	0x4
 25966 02db 0C       		.uleb128 0xc
 25967 02dc BB0C0000 		.4byte	.LASF81
 25968 02e0 05       		.byte	0x5
 25969 02e1 0C       		.uleb128 0xc
 25970 02e2 960B0000 		.4byte	.LASF82
 25971 02e6 06       		.byte	0x6
 25972 02e7 0C       		.uleb128 0xc
 25973 02e8 F90A0000 		.4byte	.LASF83
 25974 02ec 07       		.byte	0x7
 25975 02ed 0C       		.uleb128 0xc
 25976 02ee 03060000 		.4byte	.LASF84
 25977 02f2 08       		.byte	0x8
 25978 02f3 0C       		.uleb128 0xc
 25979 02f4 D3060000 		.4byte	.LASF85
 25980 02f8 09       		.byte	0x9
 25981 02f9 00       		.byte	0
 25982 02fa 03       		.uleb128 0x3
 25983 02fb 55120000 		.4byte	.LASF86
 25984 02ff 07       		.byte	0x7
 25985 0300 7E       		.byte	0x7e
 25986 0301 05030000 		.4byte	0x305
 25987 0305 0D       		.uleb128 0xd
 25988 0306 55120000 		.4byte	.LASF86
 25989 030a 07       		.uleb128 0x7
 25990 030b 04       		.byte	0x4
 25991 030c FA020000 		.4byte	0x2fa
 25992 0310 0E       		.uleb128 0xe
 25993 0311 ED080000 		.4byte	.LASF89
 25994 0315 10       		.byte	0x10
 25995 0316 08       		.byte	0x8
 25996 0317 D3       		.byte	0xd3
 25997 0318 4D030000 		.4byte	0x34d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 568


 25998 031c 0F       		.uleb128 0xf
 25999 031d 706F7300 		.ascii	"pos\000"
 26000 0321 08       		.byte	0x8
 26001 0322 D4       		.byte	0xd4
 26002 0323 D3000000 		.4byte	0xd3
 26003 0327 00       		.byte	0
 26004 0328 10       		.uleb128 0x10
 26005 0329 CB070000 		.4byte	.LASF87
 26006 032d 08       		.byte	0x8
 26007 032e D5       		.byte	0xd5
 26008 032f D3000000 		.4byte	0xd3
 26009 0333 04       		.byte	0x4
 26010 0334 0F       		.uleb128 0xf
 26011 0335 70776D00 		.ascii	"pwm\000"
 26012 0339 08       		.byte	0x8
 26013 033a D6       		.byte	0xd6
 26014 033b D3000000 		.4byte	0xd3
 26015 033f 08       		.byte	0x8
 26016 0340 10       		.uleb128 0x10
 26017 0341 FC0C0000 		.4byte	.LASF88
 26018 0345 08       		.byte	0x8
 26019 0346 D7       		.byte	0xd7
 26020 0347 97000000 		.4byte	0x97
 26021 034b 0C       		.byte	0xc
 26022 034c 00       		.byte	0
 26023 034d 0E       		.uleb128 0xe
 26024 034e 950E0000 		.4byte	.LASF90
 26025 0352 34       		.byte	0x34
 26026 0353 08       		.byte	0x8
 26027 0354 DE       		.byte	0xde
 26028 0355 AE030000 		.4byte	0x3ae
 26029 0359 0F       		.uleb128 0xf
 26030 035a 706F7300 		.ascii	"pos\000"
 26031 035e 08       		.byte	0x8
 26032 035f DF       		.byte	0xdf
 26033 0360 AE030000 		.4byte	0x3ae
 26034 0364 00       		.byte	0
 26035 0365 10       		.uleb128 0x10
 26036 0366 CB070000 		.4byte	.LASF87
 26037 036a 08       		.byte	0x8
 26038 036b E0       		.byte	0xe0
 26039 036c D3000000 		.4byte	0xd3
 26040 0370 0C       		.byte	0xc
 26041 0371 10       		.uleb128 0x10
 26042 0372 EA100000 		.4byte	.LASF91
 26043 0376 08       		.byte	0x8
 26044 0377 E1       		.byte	0xe1
 26045 0378 D3000000 		.4byte	0xd3
 26046 037c 10       		.byte	0x10
 26047 037d 10       		.uleb128 0x10
 26048 037e 47070000 		.4byte	.LASF92
 26049 0382 08       		.byte	0x8
 26050 0383 E2       		.byte	0xe2
 26051 0384 D3000000 		.4byte	0xd3
 26052 0388 14       		.byte	0x14
 26053 0389 0F       		.uleb128 0xf
 26054 038a 726F7400 		.ascii	"rot\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 569


 26055 038e 08       		.byte	0x8
 26056 038f E3       		.byte	0xe3
 26057 0390 BE030000 		.4byte	0x3be
 26058 0394 18       		.byte	0x18
 26059 0395 0F       		.uleb128 0xf
 26060 0396 76656C00 		.ascii	"vel\000"
 26061 039a 08       		.byte	0x8
 26062 039b E4       		.byte	0xe4
 26063 039c AE030000 		.4byte	0x3ae
 26064 03a0 1C       		.byte	0x1c
 26065 03a1 0F       		.uleb128 0xf
 26066 03a2 61636300 		.ascii	"acc\000"
 26067 03a6 08       		.byte	0x8
 26068 03a7 E5       		.byte	0xe5
 26069 03a8 AE030000 		.4byte	0x3ae
 26070 03ac 28       		.byte	0x28
 26071 03ad 00       		.byte	0
 26072 03ae 09       		.uleb128 0x9
 26073 03af D3000000 		.4byte	0xd3
 26074 03b3 BE030000 		.4byte	0x3be
 26075 03b7 0A       		.uleb128 0xa
 26076 03b8 18010000 		.4byte	0x118
 26077 03bc 02       		.byte	0x2
 26078 03bd 00       		.byte	0
 26079 03be 09       		.uleb128 0x9
 26080 03bf BB000000 		.4byte	0xbb
 26081 03c3 CE030000 		.4byte	0x3ce
 26082 03c7 0A       		.uleb128 0xa
 26083 03c8 18010000 		.4byte	0x118
 26084 03cc 02       		.byte	0x2
 26085 03cd 00       		.byte	0
 26086 03ce 0E       		.uleb128 0xe
 26087 03cf AD0B0000 		.4byte	.LASF93
 26088 03d3 20       		.byte	0x20
 26089 03d4 08       		.byte	0x8
 26090 03d5 E8       		.byte	0xe8
 26091 03d6 F3030000 		.4byte	0x3f3
 26092 03da 0F       		.uleb128 0xf
 26093 03db 656D6700 		.ascii	"emg\000"
 26094 03df 08       		.byte	0x8
 26095 03e0 E9       		.byte	0xe9
 26096 03e1 F3030000 		.4byte	0x3f3
 26097 03e5 00       		.byte	0
 26098 03e6 10       		.uleb128 0x10
 26099 03e7 2F0B0000 		.4byte	.LASF94
 26100 03eb 08       		.byte	0x8
 26101 03ec EA       		.byte	0xea
 26102 03ed 03040000 		.4byte	0x403
 26103 03f1 08       		.byte	0x8
 26104 03f2 00       		.byte	0
 26105 03f3 09       		.uleb128 0x9
 26106 03f4 D3000000 		.4byte	0xd3
 26107 03f8 03040000 		.4byte	0x403
 26108 03fc 0A       		.uleb128 0xa
 26109 03fd 18010000 		.4byte	0x118
 26110 0401 01       		.byte	0x1
 26111 0402 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 570


 26112 0403 09       		.uleb128 0x9
 26113 0404 D3000000 		.4byte	0xd3
 26114 0408 13040000 		.4byte	0x413
 26115 040c 0A       		.uleb128 0xa
 26116 040d 18010000 		.4byte	0x118
 26117 0411 05       		.byte	0x5
 26118 0412 00       		.byte	0
 26119 0413 0E       		.uleb128 0xe
 26120 0414 18050000 		.4byte	.LASF95
 26121 0418 04       		.byte	0x4
 26122 0419 08       		.byte	0x8
 26123 041a ED       		.byte	0xed
 26124 041b 2C040000 		.4byte	0x42c
 26125 041f 10       		.uleb128 0x10
 26126 0420 A6040000 		.4byte	.LASF96
 26127 0424 08       		.byte	0x8
 26128 0425 EE       		.byte	0xee
 26129 0426 EB000000 		.4byte	0xeb
 26130 042a 00       		.byte	0
 26131 042b 00       		.byte	0
 26132 042c 0E       		.uleb128 0xe
 26133 042d 62000000 		.4byte	.LASF97
 26134 0431 86       		.byte	0x86
 26135 0432 08       		.byte	0x8
 26136 0433 F5       		.byte	0xf5
 26137 0434 69040000 		.4byte	0x469
 26138 0438 10       		.uleb128 0x10
 26139 0439 D1050000 		.4byte	.LASF98
 26140 043d 08       		.byte	0x8
 26141 043e F6       		.byte	0xf6
 26142 043f 69040000 		.4byte	0x469
 26143 0443 00       		.byte	0
 26144 0444 10       		.uleb128 0x10
 26145 0445 D10C0000 		.4byte	.LASF99
 26146 0449 08       		.byte	0x8
 26147 044a F7       		.byte	0xf7
 26148 044b C7000000 		.4byte	0xc7
 26149 044f 80       		.byte	0x80
 26150 0450 0F       		.uleb128 0xf
 26151 0451 696E6400 		.ascii	"ind\000"
 26152 0455 08       		.byte	0x8
 26153 0456 F8       		.byte	0xf8
 26154 0457 C7000000 		.4byte	0xc7
 26155 045b 82       		.byte	0x82
 26156 045c 10       		.uleb128 0x10
 26157 045d E8010000 		.4byte	.LASF100
 26158 0461 08       		.byte	0x8
 26159 0462 F9       		.byte	0xf9
 26160 0463 97000000 		.4byte	0x97
 26161 0467 84       		.byte	0x84
 26162 0468 00       		.byte	0
 26163 0469 09       		.uleb128 0x9
 26164 046a 97000000 		.4byte	0x97
 26165 046e 79040000 		.4byte	0x479
 26166 0472 0A       		.uleb128 0xa
 26167 0473 18010000 		.4byte	0x118
 26168 0477 7F       		.byte	0x7f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 571


 26169 0478 00       		.byte	0
 26170 0479 11       		.uleb128 0x11
 26171 047a C6020000 		.4byte	.LASF101
 26172 047e 50       		.byte	0x50
 26173 047f 08       		.byte	0x8
 26174 0480 0201     		.2byte	0x102
 26175 0482 E2040000 		.4byte	0x4e2
 26176 0486 12       		.uleb128 0x12
 26177 0487 01030000 		.4byte	.LASF102
 26178 048b 08       		.byte	0x8
 26179 048c 0301     		.2byte	0x103
 26180 048e E2040000 		.4byte	0x4e2
 26181 0492 00       		.byte	0
 26182 0493 12       		.uleb128 0x12
 26183 0494 B5010000 		.4byte	.LASF103
 26184 0498 08       		.byte	0x8
 26185 0499 0401     		.2byte	0x104
 26186 049b F2040000 		.4byte	0x4f2
 26187 049f 08       		.byte	0x8
 26188 04a0 12       		.uleb128 0x12
 26189 04a1 6D0B0000 		.4byte	.LASF104
 26190 04a5 08       		.byte	0x8
 26191 04a6 0501     		.2byte	0x105
 26192 04a8 02050000 		.4byte	0x502
 26193 04ac 30       		.byte	0x30
 26194 04ad 12       		.uleb128 0x12
 26195 04ae 34010000 		.4byte	.LASF105
 26196 04b2 08       		.byte	0x8
 26197 04b3 0601     		.2byte	0x106
 26198 04b5 AF000000 		.4byte	0xaf
 26199 04b9 40       		.byte	0x40
 26200 04ba 12       		.uleb128 0x12
 26201 04bb A8120000 		.4byte	.LASF106
 26202 04bf 08       		.byte	0x8
 26203 04c0 0701     		.2byte	0x107
 26204 04c2 AF000000 		.4byte	0xaf
 26205 04c6 44       		.byte	0x44
 26206 04c7 12       		.uleb128 0x12
 26207 04c8 2A070000 		.4byte	.LASF107
 26208 04cc 08       		.byte	0x8
 26209 04cd 0801     		.2byte	0x108
 26210 04cf AF000000 		.4byte	0xaf
 26211 04d3 48       		.byte	0x48
 26212 04d4 12       		.uleb128 0x12
 26213 04d5 67070000 		.4byte	.LASF108
 26214 04d9 08       		.byte	0x8
 26215 04da 0901     		.2byte	0x109
 26216 04dc AF000000 		.4byte	0xaf
 26217 04e0 4C       		.byte	0x4c
 26218 04e1 00       		.byte	0
 26219 04e2 09       		.uleb128 0x9
 26220 04e3 AF000000 		.4byte	0xaf
 26221 04e7 F2040000 		.4byte	0x4f2
 26222 04eb 0A       		.uleb128 0xa
 26223 04ec 18010000 		.4byte	0x118
 26224 04f0 01       		.byte	0x1
 26225 04f1 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 572


 26226 04f2 09       		.uleb128 0x9
 26227 04f3 AF000000 		.4byte	0xaf
 26228 04f7 02050000 		.4byte	0x502
 26229 04fb 0A       		.uleb128 0xa
 26230 04fc 18010000 		.4byte	0x118
 26231 0500 09       		.byte	0x9
 26232 0501 00       		.byte	0
 26233 0502 09       		.uleb128 0x9
 26234 0503 AF000000 		.4byte	0xaf
 26235 0507 12050000 		.4byte	0x512
 26236 050b 0A       		.uleb128 0xa
 26237 050c 18010000 		.4byte	0x118
 26238 0510 03       		.byte	0x3
 26239 0511 00       		.byte	0
 26240 0512 11       		.uleb128 0x11
 26241 0513 06020000 		.4byte	.LASF109
 26242 0517 10       		.byte	0x10
 26243 0518 08       		.byte	0x8
 26244 0519 1001     		.2byte	0x110
 26245 051b A1050000 		.4byte	0x5a1
 26246 051f 13       		.uleb128 0x13
 26247 0520 696400   		.ascii	"id\000"
 26248 0523 08       		.byte	0x8
 26249 0524 1101     		.2byte	0x111
 26250 0526 97000000 		.4byte	0x97
 26251 052a 00       		.byte	0
 26252 052b 12       		.uleb128 0x12
 26253 052c B90F0000 		.4byte	.LASF110
 26254 0530 08       		.byte	0x8
 26255 0531 1201     		.2byte	0x112
 26256 0533 A1050000 		.4byte	0x5a1
 26257 0537 01       		.byte	0x1
 26258 0538 12       		.uleb128 0x12
 26259 0539 29100000 		.4byte	.LASF111
 26260 053d 08       		.byte	0x8
 26261 053e 1301     		.2byte	0x113
 26262 0540 A1050000 		.4byte	0x5a1
 26263 0544 04       		.byte	0x4
 26264 0545 12       		.uleb128 0x12
 26265 0546 F9030000 		.4byte	.LASF112
 26266 054a 08       		.byte	0x8
 26267 054b 1401     		.2byte	0x114
 26268 054d 97000000 		.4byte	0x97
 26269 0551 07       		.byte	0x7
 26270 0552 12       		.uleb128 0x12
 26271 0553 82020000 		.4byte	.LASF113
 26272 0557 08       		.byte	0x8
 26273 0558 1501     		.2byte	0x115
 26274 055a 97000000 		.4byte	0x97
 26275 055e 08       		.byte	0x8
 26276 055f 12       		.uleb128 0x12
 26277 0560 2C020000 		.4byte	.LASF114
 26278 0564 08       		.byte	0x8
 26279 0565 1601     		.2byte	0x116
 26280 0567 97000000 		.4byte	0x97
 26281 056b 09       		.byte	0x9
 26282 056c 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 573


 26283 056d 7C110000 		.4byte	.LASF115
 26284 0571 08       		.byte	0x8
 26285 0572 1701     		.2byte	0x117
 26286 0574 97000000 		.4byte	0x97
 26287 0578 0A       		.byte	0xa
 26288 0579 12       		.uleb128 0x12
 26289 057a 40110000 		.4byte	.LASF116
 26290 057e 08       		.byte	0x8
 26291 057f 1801     		.2byte	0x118
 26292 0581 97000000 		.4byte	0x97
 26293 0585 0B       		.byte	0xb
 26294 0586 12       		.uleb128 0x12
 26295 0587 3F0E0000 		.4byte	.LASF117
 26296 058b 08       		.byte	0x8
 26297 058c 1901     		.2byte	0x119
 26298 058e 97000000 		.4byte	0x97
 26299 0592 0C       		.byte	0xc
 26300 0593 12       		.uleb128 0x12
 26301 0594 A3020000 		.4byte	.LASF118
 26302 0598 08       		.byte	0x8
 26303 0599 1A01     		.2byte	0x11a
 26304 059b A1050000 		.4byte	0x5a1
 26305 059f 0D       		.byte	0xd
 26306 05a0 00       		.byte	0
 26307 05a1 09       		.uleb128 0x9
 26308 05a2 97000000 		.4byte	0x97
 26309 05a6 B1050000 		.4byte	0x5b1
 26310 05aa 0A       		.uleb128 0xa
 26311 05ab 18010000 		.4byte	0x118
 26312 05af 02       		.byte	0x2
 26313 05b0 00       		.byte	0
 26314 05b1 11       		.uleb128 0x11
 26315 05b2 F7090000 		.4byte	.LASF119
 26316 05b6 70       		.byte	0x70
 26317 05b7 08       		.byte	0x8
 26318 05b8 2101     		.2byte	0x121
 26319 05ba 2B070000 		.4byte	0x72b
 26320 05be 13       		.uleb128 0x13
 26321 05bf 6B5F7000 		.ascii	"k_p\000"
 26322 05c3 08       		.byte	0x8
 26323 05c4 2201     		.2byte	0x122
 26324 05c6 D3000000 		.4byte	0xd3
 26325 05ca 00       		.byte	0
 26326 05cb 13       		.uleb128 0x13
 26327 05cc 6B5F6900 		.ascii	"k_i\000"
 26328 05d0 08       		.byte	0x8
 26329 05d1 2301     		.2byte	0x123
 26330 05d3 D3000000 		.4byte	0xd3
 26331 05d7 04       		.byte	0x4
 26332 05d8 13       		.uleb128 0x13
 26333 05d9 6B5F6400 		.ascii	"k_d\000"
 26334 05dd 08       		.byte	0x8
 26335 05de 2401     		.2byte	0x124
 26336 05e0 D3000000 		.4byte	0xd3
 26337 05e4 08       		.byte	0x8
 26338 05e5 12       		.uleb128 0x12
 26339 05e6 4B0D0000 		.4byte	.LASF120
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 574


 26340 05ea 08       		.byte	0x8
 26341 05eb 2501     		.2byte	0x125
 26342 05ed D3000000 		.4byte	0xd3
 26343 05f1 0C       		.byte	0xc
 26344 05f2 12       		.uleb128 0x12
 26345 05f3 38050000 		.4byte	.LASF121
 26346 05f7 08       		.byte	0x8
 26347 05f8 2601     		.2byte	0x126
 26348 05fa D3000000 		.4byte	0xd3
 26349 05fe 10       		.byte	0x10
 26350 05ff 12       		.uleb128 0x12
 26351 0600 12050000 		.4byte	.LASF122
 26352 0604 08       		.byte	0x8
 26353 0605 2701     		.2byte	0x127
 26354 0607 D3000000 		.4byte	0xd3
 26355 060b 14       		.byte	0x14
 26356 060c 12       		.uleb128 0x12
 26357 060d E3100000 		.4byte	.LASF123
 26358 0611 08       		.byte	0x8
 26359 0612 2801     		.2byte	0x128
 26360 0614 D3000000 		.4byte	0xd3
 26361 0618 18       		.byte	0x18
 26362 0619 12       		.uleb128 0x12
 26363 061a BB050000 		.4byte	.LASF124
 26364 061e 08       		.byte	0x8
 26365 061f 2901     		.2byte	0x129
 26366 0621 D3000000 		.4byte	0xd3
 26367 0625 1C       		.byte	0x1c
 26368 0626 12       		.uleb128 0x12
 26369 0627 840F0000 		.4byte	.LASF125
 26370 062b 08       		.byte	0x8
 26371 062c 2A01     		.2byte	0x12a
 26372 062e D3000000 		.4byte	0xd3
 26373 0632 20       		.byte	0x20
 26374 0633 12       		.uleb128 0x12
 26375 0634 D8050000 		.4byte	.LASF126
 26376 0638 08       		.byte	0x8
 26377 0639 2B01     		.2byte	0x12b
 26378 063b D3000000 		.4byte	0xd3
 26379 063f 24       		.byte	0x24
 26380 0640 12       		.uleb128 0x12
 26381 0641 96060000 		.4byte	.LASF127
 26382 0645 08       		.byte	0x8
 26383 0646 2C01     		.2byte	0x12c
 26384 0648 D3000000 		.4byte	0xd3
 26385 064c 28       		.byte	0x28
 26386 064d 12       		.uleb128 0x12
 26387 064e 55130000 		.4byte	.LASF128
 26388 0652 08       		.byte	0x8
 26389 0653 2D01     		.2byte	0x12d
 26390 0655 D3000000 		.4byte	0xd3
 26391 0659 2C       		.byte	0x2c
 26392 065a 12       		.uleb128 0x12
 26393 065b 83070000 		.4byte	.LASF129
 26394 065f 08       		.byte	0x8
 26395 0660 2E01     		.2byte	0x12e
 26396 0662 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 575


 26397 0666 30       		.byte	0x30
 26398 0667 12       		.uleb128 0x12
 26399 0668 CC100000 		.4byte	.LASF130
 26400 066c 08       		.byte	0x8
 26401 066d 2F01     		.2byte	0x12f
 26402 066f 97000000 		.4byte	0x97
 26403 0673 31       		.byte	0x31
 26404 0674 12       		.uleb128 0x12
 26405 0675 6B0D0000 		.4byte	.LASF131
 26406 0679 08       		.byte	0x8
 26407 067a 3001     		.2byte	0x130
 26408 067c 97000000 		.4byte	0x97
 26409 0680 32       		.byte	0x32
 26410 0681 12       		.uleb128 0x12
 26411 0682 5D120000 		.4byte	.LASF132
 26412 0686 08       		.byte	0x8
 26413 0687 3101     		.2byte	0x131
 26414 0689 97000000 		.4byte	0x97
 26415 068d 33       		.byte	0x33
 26416 068e 12       		.uleb128 0x12
 26417 068f E8000000 		.4byte	.LASF133
 26418 0693 08       		.byte	0x8
 26419 0694 3201     		.2byte	0x132
 26420 0696 D3000000 		.4byte	0xd3
 26421 069a 34       		.byte	0x34
 26422 069b 12       		.uleb128 0x12
 26423 069c 57050000 		.4byte	.LASF134
 26424 06a0 08       		.byte	0x8
 26425 06a1 3301     		.2byte	0x133
 26426 06a3 D3000000 		.4byte	0xd3
 26427 06a7 38       		.byte	0x38
 26428 06a8 12       		.uleb128 0x12
 26429 06a9 A1090000 		.4byte	.LASF135
 26430 06ad 08       		.byte	0x8
 26431 06ae 3401     		.2byte	0x134
 26432 06b0 D3000000 		.4byte	0xd3
 26433 06b4 3C       		.byte	0x3c
 26434 06b5 12       		.uleb128 0x12
 26435 06b6 C5040000 		.4byte	.LASF136
 26436 06ba 08       		.byte	0x8
 26437 06bb 3501     		.2byte	0x135
 26438 06bd D3000000 		.4byte	0xd3
 26439 06c1 40       		.byte	0x40
 26440 06c2 12       		.uleb128 0x12
 26441 06c3 28010000 		.4byte	.LASF137
 26442 06c7 08       		.byte	0x8
 26443 06c8 3601     		.2byte	0x136
 26444 06ca 2B070000 		.4byte	0x72b
 26445 06ce 44       		.byte	0x44
 26446 06cf 12       		.uleb128 0x12
 26447 06d0 ED120000 		.4byte	.LASF138
 26448 06d4 08       		.byte	0x8
 26449 06d5 3701     		.2byte	0x137
 26450 06d7 C7000000 		.4byte	0xc7
 26451 06db 5C       		.byte	0x5c
 26452 06dc 12       		.uleb128 0x12
 26453 06dd D0070000 		.4byte	.LASF139
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 576


 26454 06e1 08       		.byte	0x8
 26455 06e2 3801     		.2byte	0x138
 26456 06e4 97000000 		.4byte	0x97
 26457 06e8 5E       		.byte	0x5e
 26458 06e9 12       		.uleb128 0x12
 26459 06ea 8B0A0000 		.4byte	.LASF140
 26460 06ee 08       		.byte	0x8
 26461 06ef 3901     		.2byte	0x139
 26462 06f1 97000000 		.4byte	0x97
 26463 06f5 5F       		.byte	0x5f
 26464 06f6 12       		.uleb128 0x12
 26465 06f7 1D040000 		.4byte	.LASF141
 26466 06fb 08       		.byte	0x8
 26467 06fc 3A01     		.2byte	0x13a
 26468 06fe 97000000 		.4byte	0x97
 26469 0702 60       		.byte	0x60
 26470 0703 12       		.uleb128 0x12
 26471 0704 01050000 		.4byte	.LASF142
 26472 0708 08       		.byte	0x8
 26473 0709 3B01     		.2byte	0x13b
 26474 070b 97000000 		.4byte	0x97
 26475 070f 61       		.byte	0x61
 26476 0710 12       		.uleb128 0x12
 26477 0711 DA030000 		.4byte	.LASF143
 26478 0715 08       		.byte	0x8
 26479 0716 3C01     		.2byte	0x13c
 26480 0718 97000000 		.4byte	0x97
 26481 071c 62       		.byte	0x62
 26482 071d 12       		.uleb128 0x12
 26483 071e A3020000 		.4byte	.LASF118
 26484 0722 08       		.byte	0x8
 26485 0723 3D01     		.2byte	0x13d
 26486 0725 3B070000 		.4byte	0x73b
 26487 0729 63       		.byte	0x63
 26488 072a 00       		.byte	0
 26489 072b 09       		.uleb128 0x9
 26490 072c EB000000 		.4byte	0xeb
 26491 0730 3B070000 		.4byte	0x73b
 26492 0734 0A       		.uleb128 0xa
 26493 0735 18010000 		.4byte	0x118
 26494 0739 05       		.byte	0x5
 26495 073a 00       		.byte	0
 26496 073b 09       		.uleb128 0x9
 26497 073c 97000000 		.4byte	0x97
 26498 0740 4B070000 		.4byte	0x74b
 26499 0744 0A       		.uleb128 0xa
 26500 0745 18010000 		.4byte	0x118
 26501 0749 0C       		.byte	0xc
 26502 074a 00       		.byte	0
 26503 074b 11       		.uleb128 0x11
 26504 074c EA110000 		.4byte	.LASF144
 26505 0750 30       		.byte	0x30
 26506 0751 08       		.byte	0x8
 26507 0752 4401     		.2byte	0x144
 26508 0754 CE070000 		.4byte	0x7ce
 26509 0758 12       		.uleb128 0x12
 26510 0759 83090000 		.4byte	.LASF145
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 577


 26511 075d 08       		.byte	0x8
 26512 075e 4501     		.2byte	0x145
 26513 0760 CE070000 		.4byte	0x7ce
 26514 0764 00       		.byte	0
 26515 0765 13       		.uleb128 0x13
 26516 0766 72657300 		.ascii	"res\000"
 26517 076a 08       		.byte	0x8
 26518 076b 4601     		.2byte	0x146
 26519 076d A1050000 		.4byte	0x5a1
 26520 0771 05       		.byte	0x5
 26521 0772 12       		.uleb128 0x12
 26522 0773 92070000 		.4byte	.LASF146
 26523 0777 08       		.byte	0x8
 26524 0778 4701     		.2byte	0x147
 26525 077a AE030000 		.4byte	0x3ae
 26526 077e 08       		.byte	0x8
 26527 077f 12       		.uleb128 0x12
 26528 0780 31050000 		.4byte	.LASF147
 26529 0784 08       		.byte	0x8
 26530 0785 4801     		.2byte	0x148
 26531 0787 DE070000 		.4byte	0x7de
 26532 078b 14       		.byte	0x14
 26533 078c 12       		.uleb128 0x12
 26534 078d 220C0000 		.4byte	.LASF148
 26535 0791 08       		.byte	0x8
 26536 0792 4901     		.2byte	0x149
 26537 0794 97000000 		.4byte	0x97
 26538 0798 20       		.byte	0x20
 26539 0799 12       		.uleb128 0x12
 26540 079a EE010000 		.4byte	.LASF149
 26541 079e 08       		.byte	0x8
 26542 079f 4A01     		.2byte	0x14a
 26543 07a1 A1050000 		.4byte	0x5a1
 26544 07a5 21       		.byte	0x21
 26545 07a6 12       		.uleb128 0x12
 26546 07a7 D50B0000 		.4byte	.LASF150
 26547 07ab 08       		.byte	0x8
 26548 07ac 4B01     		.2byte	0x14b
 26549 07ae BB000000 		.4byte	0xbb
 26550 07b2 24       		.byte	0x24
 26551 07b3 12       		.uleb128 0x12
 26552 07b4 660E0000 		.4byte	.LASF151
 26553 07b8 08       		.byte	0x8
 26554 07b9 4C01     		.2byte	0x14c
 26555 07bb BE030000 		.4byte	0x3be
 26556 07bf 25       		.byte	0x25
 26557 07c0 12       		.uleb128 0x12
 26558 07c1 A3020000 		.4byte	.LASF118
 26559 07c5 08       		.byte	0x8
 26560 07c6 4D01     		.2byte	0x14d
 26561 07c8 EE070000 		.4byte	0x7ee
 26562 07cc 28       		.byte	0x28
 26563 07cd 00       		.byte	0
 26564 07ce 09       		.uleb128 0x9
 26565 07cf 97000000 		.4byte	0x97
 26566 07d3 DE070000 		.4byte	0x7de
 26567 07d7 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 578


 26568 07d8 18010000 		.4byte	0x118
 26569 07dc 04       		.byte	0x4
 26570 07dd 00       		.byte	0
 26571 07de 09       		.uleb128 0x9
 26572 07df DF000000 		.4byte	0xdf
 26573 07e3 EE070000 		.4byte	0x7ee
 26574 07e7 0A       		.uleb128 0xa
 26575 07e8 18010000 		.4byte	0x118
 26576 07ec 02       		.byte	0x2
 26577 07ed 00       		.byte	0
 26578 07ee 09       		.uleb128 0x9
 26579 07ef 97000000 		.4byte	0x97
 26580 07f3 FE070000 		.4byte	0x7fe
 26581 07f7 0A       		.uleb128 0xa
 26582 07f8 18010000 		.4byte	0x118
 26583 07fc 07       		.byte	0x7
 26584 07fd 00       		.byte	0
 26585 07fe 11       		.uleb128 0x11
 26586 07ff AE010000 		.4byte	.LASF152
 26587 0803 10       		.byte	0x10
 26588 0804 08       		.byte	0x8
 26589 0805 5401     		.2byte	0x154
 26590 0807 4D080000 		.4byte	0x84d
 26591 080b 12       		.uleb128 0x12
 26592 080c 4D0B0000 		.4byte	.LASF153
 26593 0810 08       		.byte	0x8
 26594 0811 5501     		.2byte	0x155
 26595 0813 4D080000 		.4byte	0x84d
 26596 0817 00       		.byte	0
 26597 0818 12       		.uleb128 0x12
 26598 0819 B2120000 		.4byte	.LASF154
 26599 081d 08       		.byte	0x8
 26600 081e 5601     		.2byte	0x156
 26601 0820 E2040000 		.4byte	0x4e2
 26602 0824 04       		.byte	0x4
 26603 0825 12       		.uleb128 0x12
 26604 0826 63050000 		.4byte	.LASF155
 26605 082a 08       		.byte	0x8
 26606 082b 5701     		.2byte	0x157
 26607 082d 5D080000 		.4byte	0x85d
 26608 0831 0C       		.byte	0xc
 26609 0832 12       		.uleb128 0x12
 26610 0833 800E0000 		.4byte	.LASF156
 26611 0837 08       		.byte	0x8
 26612 0838 5801     		.2byte	0x158
 26613 083a 97000000 		.4byte	0x97
 26614 083e 0E       		.byte	0xe
 26615 083f 12       		.uleb128 0x12
 26616 0840 C1100000 		.4byte	.LASF157
 26617 0844 08       		.byte	0x8
 26618 0845 5901     		.2byte	0x159
 26619 0847 97000000 		.4byte	0x97
 26620 084b 0F       		.byte	0xf
 26621 084c 00       		.byte	0
 26622 084d 09       		.uleb128 0x9
 26623 084e A3000000 		.4byte	0xa3
 26624 0852 5D080000 		.4byte	0x85d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 579


 26625 0856 0A       		.uleb128 0xa
 26626 0857 18010000 		.4byte	0x118
 26627 085b 01       		.byte	0x1
 26628 085c 00       		.byte	0
 26629 085d 09       		.uleb128 0x9
 26630 085e 97000000 		.4byte	0x97
 26631 0862 6D080000 		.4byte	0x86d
 26632 0866 0A       		.uleb128 0xa
 26633 0867 18010000 		.4byte	0x118
 26634 086b 01       		.byte	0x1
 26635 086c 00       		.byte	0
 26636 086d 11       		.uleb128 0x11
 26637 086e D30A0000 		.4byte	.LASF158
 26638 0872 20       		.byte	0x20
 26639 0873 08       		.byte	0x8
 26640 0874 6001     		.2byte	0x160
 26641 0876 AF080000 		.4byte	0x8af
 26642 087a 12       		.uleb128 0x12
 26643 087b 47020000 		.4byte	.LASF159
 26644 087f 08       		.byte	0x8
 26645 0880 6101     		.2byte	0x161
 26646 0882 97000000 		.4byte	0x97
 26647 0886 00       		.byte	0
 26648 0887 12       		.uleb128 0x12
 26649 0888 440C0000 		.4byte	.LASF160
 26650 088c 08       		.byte	0x8
 26651 088d 6201     		.2byte	0x162
 26652 088f 97000000 		.4byte	0x97
 26653 0893 01       		.byte	0x1
 26654 0894 12       		.uleb128 0x12
 26655 0895 E4090000 		.4byte	.LASF161
 26656 0899 08       		.byte	0x8
 26657 089a 6301     		.2byte	0x163
 26658 089c AF080000 		.4byte	0x8af
 26659 08a0 02       		.byte	0x2
 26660 08a1 12       		.uleb128 0x12
 26661 08a2 A3020000 		.4byte	.LASF118
 26662 08a6 08       		.byte	0x8
 26663 08a7 6401     		.2byte	0x164
 26664 08a9 CE070000 		.4byte	0x7ce
 26665 08ad 1B       		.byte	0x1b
 26666 08ae 00       		.byte	0
 26667 08af 09       		.uleb128 0x9
 26668 08b0 97000000 		.4byte	0x97
 26669 08b4 C5080000 		.4byte	0x8c5
 26670 08b8 0A       		.uleb128 0xa
 26671 08b9 18010000 		.4byte	0x118
 26672 08bd 04       		.byte	0x4
 26673 08be 0A       		.uleb128 0xa
 26674 08bf 18010000 		.4byte	0x118
 26675 08c3 04       		.byte	0x4
 26676 08c4 00       		.byte	0
 26677 08c5 11       		.uleb128 0x11
 26678 08c6 730E0000 		.4byte	.LASF162
 26679 08ca 20       		.byte	0x20
 26680 08cb 08       		.byte	0x8
 26681 08cc 6B01     		.2byte	0x16b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 580


 26682 08ce 14090000 		.4byte	0x914
 26683 08d2 12       		.uleb128 0x12
 26684 08d3 180C0000 		.4byte	.LASF163
 26685 08d7 08       		.byte	0x8
 26686 08d8 6C01     		.2byte	0x16c
 26687 08da 14090000 		.4byte	0x914
 26688 08de 00       		.byte	0
 26689 08df 12       		.uleb128 0x12
 26690 08e0 AE100000 		.4byte	.LASF164
 26691 08e4 08       		.byte	0x8
 26692 08e5 6D01     		.2byte	0x16d
 26693 08e7 97000000 		.4byte	0x97
 26694 08eb 06       		.byte	0x6
 26695 08ec 12       		.uleb128 0x12
 26696 08ed 03110000 		.4byte	.LASF165
 26697 08f1 08       		.byte	0x8
 26698 08f2 6E01     		.2byte	0x16e
 26699 08f4 97000000 		.4byte	0x97
 26700 08f8 07       		.byte	0x7
 26701 08f9 12       		.uleb128 0x12
 26702 08fa 88050000 		.4byte	.LASF166
 26703 08fe 08       		.byte	0x8
 26704 08ff 6F01     		.2byte	0x16f
 26705 0901 24090000 		.4byte	0x924
 26706 0905 08       		.byte	0x8
 26707 0906 12       		.uleb128 0x12
 26708 0907 A3020000 		.4byte	.LASF118
 26709 090b 08       		.byte	0x8
 26710 090c 7001     		.2byte	0x170
 26711 090e 24090000 		.4byte	0x924
 26712 0912 14       		.byte	0x14
 26713 0913 00       		.byte	0
 26714 0914 09       		.uleb128 0x9
 26715 0915 97000000 		.4byte	0x97
 26716 0919 24090000 		.4byte	0x924
 26717 091d 0A       		.uleb128 0xa
 26718 091e 18010000 		.4byte	0x118
 26719 0922 05       		.byte	0x5
 26720 0923 00       		.byte	0
 26721 0924 09       		.uleb128 0x9
 26722 0925 97000000 		.4byte	0x97
 26723 0929 34090000 		.4byte	0x934
 26724 092d 0A       		.uleb128 0xa
 26725 092e 18010000 		.4byte	0x118
 26726 0932 0B       		.byte	0xb
 26727 0933 00       		.byte	0
 26728 0934 11       		.uleb128 0x11
 26729 0935 480E0000 		.4byte	.LASF167
 26730 0939 20       		.byte	0x20
 26731 093a 08       		.byte	0x8
 26732 093b 7701     		.2byte	0x177
 26733 093d 69090000 		.4byte	0x969
 26734 0941 12       		.uleb128 0x12
 26735 0942 61030000 		.4byte	.LASF168
 26736 0946 08       		.byte	0x8
 26737 0947 7801     		.2byte	0x178
 26738 0949 40010000 		.4byte	0x140
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 581


 26739 094d 00       		.byte	0
 26740 094e 12       		.uleb128 0x12
 26741 094f 91020000 		.4byte	.LASF169
 26742 0953 08       		.byte	0x8
 26743 0954 7901     		.2byte	0x179
 26744 0956 FE070000 		.4byte	0x7fe
 26745 095a 08       		.byte	0x8
 26746 095b 12       		.uleb128 0x12
 26747 095c A3020000 		.4byte	.LASF118
 26748 0960 08       		.byte	0x8
 26749 0961 7A01     		.2byte	0x17a
 26750 0963 EE070000 		.4byte	0x7ee
 26751 0967 18       		.byte	0x18
 26752 0968 00       		.byte	0
 26753 0969 11       		.uleb128 0x11
 26754 096a 08090000 		.4byte	.LASF170
 26755 096e 10       		.byte	0x10
 26756 096f 08       		.byte	0x8
 26757 0970 8101     		.2byte	0x181
 26758 0972 B8090000 		.4byte	0x9b8
 26759 0976 12       		.uleb128 0x12
 26760 0977 C2070000 		.4byte	.LASF171
 26761 097b 08       		.byte	0x8
 26762 097c 8201     		.2byte	0x182
 26763 097e D3000000 		.4byte	0xd3
 26764 0982 00       		.byte	0
 26765 0983 12       		.uleb128 0x12
 26766 0984 39130000 		.4byte	.LASF172
 26767 0988 08       		.byte	0x8
 26768 0989 8301     		.2byte	0x183
 26769 098b D3000000 		.4byte	0xd3
 26770 098f 04       		.byte	0x4
 26771 0990 12       		.uleb128 0x12
 26772 0991 6D050000 		.4byte	.LASF173
 26773 0995 08       		.byte	0x8
 26774 0996 8401     		.2byte	0x184
 26775 0998 D3000000 		.4byte	0xd3
 26776 099c 08       		.byte	0x8
 26777 099d 12       		.uleb128 0x12
 26778 099e 7D060000 		.4byte	.LASF174
 26779 09a2 08       		.byte	0x8
 26780 09a3 8501     		.2byte	0x185
 26781 09a5 97000000 		.4byte	0x97
 26782 09a9 0C       		.byte	0xc
 26783 09aa 12       		.uleb128 0x12
 26784 09ab A3020000 		.4byte	.LASF118
 26785 09af 08       		.byte	0x8
 26786 09b0 8601     		.2byte	0x186
 26787 09b2 A1050000 		.4byte	0x5a1
 26788 09b6 0D       		.byte	0xd
 26789 09b7 00       		.byte	0
 26790 09b8 11       		.uleb128 0x11
 26791 09b9 56010000 		.4byte	.LASF175
 26792 09bd 10       		.byte	0x10
 26793 09be 08       		.byte	0x8
 26794 09bf 8D01     		.2byte	0x18d
 26795 09c1 ED090000 		.4byte	0x9ed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 582


 26796 09c5 12       		.uleb128 0x12
 26797 09c6 050E0000 		.4byte	.LASF176
 26798 09ca 08       		.byte	0x8
 26799 09cb 8E01     		.2byte	0x18e
 26800 09cd 97000000 		.4byte	0x97
 26801 09d1 00       		.byte	0
 26802 09d2 12       		.uleb128 0x12
 26803 09d3 AE090000 		.4byte	.LASF177
 26804 09d7 08       		.byte	0x8
 26805 09d8 8F01     		.2byte	0x18f
 26806 09da 97000000 		.4byte	0x97
 26807 09de 01       		.byte	0x1
 26808 09df 12       		.uleb128 0x12
 26809 09e0 A3020000 		.4byte	.LASF118
 26810 09e4 08       		.byte	0x8
 26811 09e5 9001     		.2byte	0x190
 26812 09e7 ED090000 		.4byte	0x9ed
 26813 09eb 02       		.byte	0x2
 26814 09ec 00       		.byte	0
 26815 09ed 09       		.uleb128 0x9
 26816 09ee 97000000 		.4byte	0x97
 26817 09f2 FD090000 		.4byte	0x9fd
 26818 09f6 0A       		.uleb128 0xa
 26819 09f7 18010000 		.4byte	0x118
 26820 09fb 0D       		.byte	0xd
 26821 09fc 00       		.byte	0
 26822 09fd 11       		.uleb128 0x11
 26823 09fe A20B0000 		.4byte	.LASF178
 26824 0a02 10       		.byte	0x10
 26825 0a03 08       		.byte	0x8
 26826 0a04 9701     		.2byte	0x197
 26827 0a06 3F0A0000 		.4byte	0xa3f
 26828 0a0a 12       		.uleb128 0x12
 26829 0a0b F5110000 		.4byte	.LASF179
 26830 0a0f 08       		.byte	0x8
 26831 0a10 9801     		.2byte	0x198
 26832 0a12 D3000000 		.4byte	0xd3
 26833 0a16 00       		.byte	0
 26834 0a17 12       		.uleb128 0x12
 26835 0a18 68060000 		.4byte	.LASF180
 26836 0a1c 08       		.byte	0x8
 26837 0a1d 9901     		.2byte	0x199
 26838 0a1f EB000000 		.4byte	0xeb
 26839 0a23 04       		.byte	0x4
 26840 0a24 12       		.uleb128 0x12
 26841 0a25 9E0D0000 		.4byte	.LASF181
 26842 0a29 08       		.byte	0x8
 26843 0a2a 9A01     		.2byte	0x19a
 26844 0a2c EB000000 		.4byte	0xeb
 26845 0a30 08       		.byte	0x8
 26846 0a31 12       		.uleb128 0x12
 26847 0a32 A3020000 		.4byte	.LASF118
 26848 0a36 08       		.byte	0x8
 26849 0a37 9B01     		.2byte	0x19b
 26850 0a39 3F0A0000 		.4byte	0xa3f
 26851 0a3d 0C       		.byte	0xc
 26852 0a3e 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 583


 26853 0a3f 09       		.uleb128 0x9
 26854 0a40 97000000 		.4byte	0x97
 26855 0a44 4F0A0000 		.4byte	0xa4f
 26856 0a48 0A       		.uleb128 0xa
 26857 0a49 18010000 		.4byte	0x118
 26858 0a4d 03       		.byte	0x3
 26859 0a4e 00       		.byte	0
 26860 0a4f 14       		.uleb128 0x14
 26861 0a50 10120000 		.4byte	.LASF182
 26862 0a54 D002     		.2byte	0x2d0
 26863 0a56 08       		.byte	0x8
 26864 0a57 A401     		.2byte	0x1a4
 26865 0a59 190B0000 		.4byte	0xb19
 26866 0a5d 12       		.uleb128 0x12
 26867 0a5e 770A0000 		.4byte	.LASF183
 26868 0a62 08       		.byte	0x8
 26869 0a63 A601     		.2byte	0x1a6
 26870 0a65 97000000 		.4byte	0x97
 26871 0a69 00       		.byte	0
 26872 0a6a 12       		.uleb128 0x12
 26873 0a6b A3020000 		.4byte	.LASF118
 26874 0a6f 08       		.byte	0x8
 26875 0a70 A701     		.2byte	0x1a7
 26876 0a72 190B0000 		.4byte	0xb19
 26877 0a76 01       		.byte	0x1
 26878 0a77 13       		.uleb128 0x13
 26879 0a78 636E7400 		.ascii	"cnt\000"
 26880 0a7c 08       		.byte	0x8
 26881 0a7d A801     		.2byte	0x1a8
 26882 0a7f 79040000 		.4byte	0x479
 26883 0a83 10       		.byte	0x10
 26884 0a84 12       		.uleb128 0x12
 26885 0a85 6A020000 		.4byte	.LASF184
 26886 0a89 08       		.byte	0x8
 26887 0a8a A901     		.2byte	0x1a9
 26888 0a8c 290B0000 		.4byte	0xb29
 26889 0a90 60       		.byte	0x60
 26890 0a91 13       		.uleb128 0x13
 26891 0a92 64657600 		.ascii	"dev\000"
 26892 0a96 08       		.byte	0x8
 26893 0a97 AA01     		.2byte	0x1aa
 26894 0a99 12050000 		.4byte	0x512
 26895 0a9d A0       		.byte	0xa0
 26896 0a9e 12       		.uleb128 0x12
 26897 0a9f 940F0000 		.4byte	.LASF185
 26898 0aa3 08       		.byte	0x8
 26899 0aa4 AB01     		.2byte	0x1ab
 26900 0aa6 390B0000 		.4byte	0xb39
 26901 0aaa B0       		.byte	0xb0
 26902 0aab 15       		.uleb128 0x15
 26903 0aac 656E6300 		.ascii	"enc\000"
 26904 0ab0 08       		.byte	0x8
 26905 0ab1 AC01     		.2byte	0x1ac
 26906 0ab3 490B0000 		.4byte	0xb49
 26907 0ab7 9001     		.2byte	0x190
 26908 0ab9 15       		.uleb128 0x15
 26909 0aba 656D6700 		.ascii	"emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 584


 26910 0abe 08       		.byte	0x8
 26911 0abf AD01     		.2byte	0x1ad
 26912 0ac1 FE070000 		.4byte	0x7fe
 26913 0ac5 F001     		.2byte	0x1f0
 26914 0ac7 15       		.uleb128 0x15
 26915 0ac8 696D7500 		.ascii	"imu\000"
 26916 0acc 08       		.byte	0x8
 26917 0acd AE01     		.2byte	0x1ae
 26918 0acf 6D080000 		.4byte	0x86d
 26919 0ad3 0002     		.2byte	0x200
 26920 0ad5 15       		.uleb128 0x15
 26921 0ad6 65787000 		.ascii	"exp\000"
 26922 0ada 08       		.byte	0x8
 26923 0adb AF01     		.2byte	0x1af
 26924 0add C5080000 		.4byte	0x8c5
 26925 0ae1 2002     		.2byte	0x220
 26926 0ae3 16       		.uleb128 0x16
 26927 0ae4 50000000 		.4byte	.LASF186
 26928 0ae8 08       		.byte	0x8
 26929 0ae9 B001     		.2byte	0x1b0
 26930 0aeb 590B0000 		.4byte	0xb59
 26931 0aef 4002     		.2byte	0x240
 26932 0af1 15       		.uleb128 0x15
 26933 0af2 534800   		.ascii	"SH\000"
 26934 0af5 08       		.byte	0x8
 26935 0af6 B201     		.2byte	0x1b2
 26936 0af8 69090000 		.4byte	0x969
 26937 0afc A002     		.2byte	0x2a0
 26938 0afe 15       		.uleb128 0x15
 26939 0aff 4D5300   		.ascii	"MS\000"
 26940 0b02 08       		.byte	0x8
 26941 0b03 B301     		.2byte	0x1b3
 26942 0b05 B8090000 		.4byte	0x9b8
 26943 0b09 B002     		.2byte	0x2b0
 26944 0b0b 15       		.uleb128 0x15
 26945 0b0c 464200   		.ascii	"FB\000"
 26946 0b0f 08       		.byte	0x8
 26947 0b10 B401     		.2byte	0x1b4
 26948 0b12 FD090000 		.4byte	0x9fd
 26949 0b16 C002     		.2byte	0x2c0
 26950 0b18 00       		.byte	0
 26951 0b19 09       		.uleb128 0x9
 26952 0b1a 97000000 		.4byte	0x97
 26953 0b1e 290B0000 		.4byte	0xb29
 26954 0b22 0A       		.uleb128 0xa
 26955 0b23 18010000 		.4byte	0x118
 26956 0b27 0E       		.byte	0xe
 26957 0b28 00       		.byte	0
 26958 0b29 09       		.uleb128 0x9
 26959 0b2a 97000000 		.4byte	0x97
 26960 0b2e 390B0000 		.4byte	0xb39
 26961 0b32 0A       		.uleb128 0xa
 26962 0b33 18010000 		.4byte	0x118
 26963 0b37 3F       		.byte	0x3f
 26964 0b38 00       		.byte	0
 26965 0b39 09       		.uleb128 0x9
 26966 0b3a B1050000 		.4byte	0x5b1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 585


 26967 0b3e 490B0000 		.4byte	0xb49
 26968 0b42 0A       		.uleb128 0xa
 26969 0b43 18010000 		.4byte	0x118
 26970 0b47 01       		.byte	0x1
 26971 0b48 00       		.byte	0
 26972 0b49 09       		.uleb128 0x9
 26973 0b4a 4B070000 		.4byte	0x74b
 26974 0b4e 590B0000 		.4byte	0xb59
 26975 0b52 0A       		.uleb128 0xa
 26976 0b53 18010000 		.4byte	0x118
 26977 0b57 01       		.byte	0x1
 26978 0b58 00       		.byte	0
 26979 0b59 09       		.uleb128 0x9
 26980 0b5a 34090000 		.4byte	0x934
 26981 0b5e 690B0000 		.4byte	0xb69
 26982 0b62 0A       		.uleb128 0xa
 26983 0b63 18010000 		.4byte	0x118
 26984 0b67 02       		.byte	0x2
 26985 0b68 00       		.byte	0
 26986 0b69 11       		.uleb128 0x11
 26987 0b6a E60C0000 		.4byte	.LASF187
 26988 0b6e 28       		.byte	0x28
 26989 0b6f 08       		.byte	0x8
 26990 0b70 C001     		.2byte	0x1c0
 26991 0b72 C50B0000 		.4byte	0xbc5
 26992 0b76 12       		.uleb128 0x12
 26993 0b77 A0040000 		.4byte	.LASF188
 26994 0b7b 08       		.byte	0x8
 26995 0b7c C101     		.2byte	0x1c1
 26996 0b7e 97000000 		.4byte	0x97
 26997 0b82 00       		.byte	0
 26998 0b83 12       		.uleb128 0x12
 26999 0b84 B0020000 		.4byte	.LASF189
 27000 0b88 08       		.byte	0x8
 27001 0b89 C201     		.2byte	0x1c2
 27002 0b8b C50B0000 		.4byte	0xbc5
 27003 0b8f 02       		.byte	0x2
 27004 0b90 12       		.uleb128 0x12
 27005 0b91 0D0C0000 		.4byte	.LASF190
 27006 0b95 08       		.byte	0x8
 27007 0b96 C301     		.2byte	0x1c3
 27008 0b98 C50B0000 		.4byte	0xbc5
 27009 0b9c 08       		.byte	0x8
 27010 0b9d 12       		.uleb128 0x12
 27011 0b9e F20C0000 		.4byte	.LASF191
 27012 0ba2 08       		.byte	0x8
 27013 0ba3 C401     		.2byte	0x1c4
 27014 0ba5 C50B0000 		.4byte	0xbc5
 27015 0ba9 0E       		.byte	0xe
 27016 0baa 12       		.uleb128 0x12
 27017 0bab A9070000 		.4byte	.LASF192
 27018 0baf 08       		.byte	0x8
 27019 0bb0 C501     		.2byte	0x1c5
 27020 0bb2 D50B0000 		.4byte	0xbd5
 27021 0bb6 14       		.byte	0x14
 27022 0bb7 12       		.uleb128 0x12
 27023 0bb8 C3010000 		.4byte	.LASF193
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 586


 27024 0bbc 08       		.byte	0x8
 27025 0bbd C601     		.2byte	0x1c6
 27026 0bbf C7000000 		.4byte	0xc7
 27027 0bc3 24       		.byte	0x24
 27028 0bc4 00       		.byte	0
 27029 0bc5 09       		.uleb128 0x9
 27030 0bc6 C7000000 		.4byte	0xc7
 27031 0bca D50B0000 		.4byte	0xbd5
 27032 0bce 0A       		.uleb128 0xa
 27033 0bcf 18010000 		.4byte	0x118
 27034 0bd3 02       		.byte	0x2
 27035 0bd4 00       		.byte	0
 27036 0bd5 09       		.uleb128 0x9
 27037 0bd6 EB000000 		.4byte	0xeb
 27038 0bda E50B0000 		.4byte	0xbe5
 27039 0bde 0A       		.uleb128 0xa
 27040 0bdf 18010000 		.4byte	0x118
 27041 0be3 03       		.byte	0x3
 27042 0be4 00       		.byte	0
 27043 0be5 11       		.uleb128 0x11
 27044 0be6 72030000 		.4byte	.LASF194
 27045 0bea 06       		.byte	0x6
 27046 0beb 08       		.byte	0x8
 27047 0bec D601     		.2byte	0x1d6
 27048 0bee 270C0000 		.4byte	0xc27
 27049 0bf2 12       		.uleb128 0x12
 27050 0bf3 10070000 		.4byte	.LASF195
 27051 0bf7 08       		.byte	0x8
 27052 0bf8 D701     		.2byte	0x1d7
 27053 0bfa 97000000 		.4byte	0x97
 27054 0bfe 00       		.byte	0
 27055 0bff 12       		.uleb128 0x12
 27056 0c00 5E130000 		.4byte	.LASF196
 27057 0c04 08       		.byte	0x8
 27058 0c05 D801     		.2byte	0x1d8
 27059 0c07 97000000 		.4byte	0x97
 27060 0c0b 01       		.byte	0x1
 27061 0c0c 12       		.uleb128 0x12
 27062 0c0d F6050000 		.4byte	.LASF197
 27063 0c11 08       		.byte	0x8
 27064 0c12 D901     		.2byte	0x1d9
 27065 0c14 C7000000 		.4byte	0xc7
 27066 0c18 02       		.byte	0x2
 27067 0c19 12       		.uleb128 0x12
 27068 0c1a 95090000 		.4byte	.LASF198
 27069 0c1e 08       		.byte	0x8
 27070 0c1f DA01     		.2byte	0x1da
 27071 0c21 C7000000 		.4byte	0xc7
 27072 0c25 04       		.byte	0x4
 27073 0c26 00       		.byte	0
 27074 0c27 17       		.uleb128 0x17
 27075 0c28 1E0E0000 		.4byte	.LASF367
 27076 0c2c 02       		.byte	0x2
 27077 0c2d 1403     		.2byte	0x314
 27078 0c2f 8C000000 		.4byte	0x8c
 27079 0c33 03       		.byte	0x3
 27080 0c34 510C0000 		.4byte	0xc51
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 587


 27081 0c38 18       		.uleb128 0x18
 27082 0c39 9A040000 		.4byte	.LASF278
 27083 0c3d 02       		.byte	0x2
 27084 0c3e 1403     		.2byte	0x314
 27085 0c40 8C000000 		.4byte	0x8c
 27086 0c44 19       		.uleb128 0x19
 27087 0c45 CE010000 		.4byte	.LASF368
 27088 0c49 02       		.byte	0x2
 27089 0c4a 1603     		.2byte	0x316
 27090 0c4c 8C000000 		.4byte	0x8c
 27091 0c50 00       		.byte	0
 27092 0c51 1A       		.uleb128 0x1a
 27093 0c52 4C0F0000 		.4byte	.LASF199
 27094 0c56 01       		.byte	0x1
 27095 0c57 3D       		.byte	0x3d
 27096 0c58 00000000 		.4byte	.LFB64
 27097 0c5c DC040000 		.4byte	.LFE64-.LFB64
 27098 0c60 01       		.uleb128 0x1
 27099 0c61 9C       		.byte	0x9c
 27100 0c62 FB0C0000 		.4byte	0xcfb
 27101 0c66 1B       		.uleb128 0x1b
 27102 0c67 FC050000 		.4byte	.LASF201
 27103 0c6b 01       		.byte	0x1
 27104 0c6c 3F       		.byte	0x3f
 27105 0c6d 97000000 		.4byte	0x97
 27106 0c71 02       		.uleb128 0x2
 27107 0c72 91       		.byte	0x91
 27108 0c73 77       		.sleb128 -9
 27109 0c74 1C       		.uleb128 0x1c
 27110 0c75 270C0000 		.4byte	0xc27
 27111 0c79 36030000 		.4byte	.LBB8
 27112 0c7d 08000000 		.4byte	.LBE8-.LBB8
 27113 0c81 01       		.byte	0x1
 27114 0c82 96       		.byte	0x96
 27115 0c83 A20C0000 		.4byte	0xca2
 27116 0c87 1D       		.uleb128 0x1d
 27117 0c88 380C0000 		.4byte	0xc38
 27118 0c8c 02       		.uleb128 0x2
 27119 0c8d 91       		.byte	0x91
 27120 0c8e 68       		.sleb128 -24
 27121 0c8f 1E       		.uleb128 0x1e
 27122 0c90 36030000 		.4byte	.LBB9
 27123 0c94 08000000 		.4byte	.LBE9-.LBB9
 27124 0c98 1F       		.uleb128 0x1f
 27125 0c99 440C0000 		.4byte	0xc44
 27126 0c9d 02       		.uleb128 0x2
 27127 0c9e 91       		.byte	0x91
 27128 0c9f 64       		.sleb128 -28
 27129 0ca0 00       		.byte	0
 27130 0ca1 00       		.byte	0
 27131 0ca2 1C       		.uleb128 0x1c
 27132 0ca3 270C0000 		.4byte	0xc27
 27133 0ca7 54030000 		.4byte	.LBB10
 27134 0cab 08000000 		.4byte	.LBE10-.LBB10
 27135 0caf 01       		.byte	0x1
 27136 0cb0 A2       		.byte	0xa2
 27137 0cb1 D00C0000 		.4byte	0xcd0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 588


 27138 0cb5 1D       		.uleb128 0x1d
 27139 0cb6 380C0000 		.4byte	0xc38
 27140 0cba 02       		.uleb128 0x2
 27141 0cbb 91       		.byte	0x91
 27142 0cbc 70       		.sleb128 -16
 27143 0cbd 1E       		.uleb128 0x1e
 27144 0cbe 54030000 		.4byte	.LBB11
 27145 0cc2 08000000 		.4byte	.LBE11-.LBB11
 27146 0cc6 1F       		.uleb128 0x1f
 27147 0cc7 440C0000 		.4byte	0xc44
 27148 0ccb 02       		.uleb128 0x2
 27149 0ccc 91       		.byte	0x91
 27150 0ccd 60       		.sleb128 -32
 27151 0cce 00       		.byte	0
 27152 0ccf 00       		.byte	0
 27153 0cd0 20       		.uleb128 0x20
 27154 0cd1 270C0000 		.4byte	0xc27
 27155 0cd5 98040000 		.4byte	.LBB12
 27156 0cd9 08000000 		.4byte	.LBE12-.LBB12
 27157 0cdd 01       		.byte	0x1
 27158 0cde FE       		.byte	0xfe
 27159 0cdf 1D       		.uleb128 0x1d
 27160 0ce0 380C0000 		.4byte	0xc38
 27161 0ce4 02       		.uleb128 0x2
 27162 0ce5 91       		.byte	0x91
 27163 0ce6 6C       		.sleb128 -20
 27164 0ce7 1E       		.uleb128 0x1e
 27165 0ce8 98040000 		.4byte	.LBB13
 27166 0cec 08000000 		.4byte	.LBE13-.LBB13
 27167 0cf0 1F       		.uleb128 0x1f
 27168 0cf1 440C0000 		.4byte	0xc44
 27169 0cf5 02       		.uleb128 0x2
 27170 0cf6 91       		.byte	0x91
 27171 0cf7 5C       		.sleb128 -36
 27172 0cf8 00       		.byte	0
 27173 0cf9 00       		.byte	0
 27174 0cfa 00       		.byte	0
 27175 0cfb 21       		.uleb128 0x21
 27176 0cfc 00000000 		.4byte	.LASF200
 27177 0d00 01       		.byte	0x1
 27178 0d01 2501     		.2byte	0x125
 27179 0d03 00000000 		.4byte	.LFB65
 27180 0d07 22000000 		.4byte	.LFE65-.LFB65
 27181 0d0b 01       		.uleb128 0x1
 27182 0d0c 9C       		.byte	0x9c
 27183 0d0d 220D0000 		.4byte	0xd22
 27184 0d11 22       		.uleb128 0x22
 27185 0d12 23050000 		.4byte	.LASF202
 27186 0d16 01       		.byte	0x1
 27187 0d17 2601     		.2byte	0x126
 27188 0d19 220D0000 		.4byte	0xd22
 27189 0d1d 03       		.uleb128 0x3
 27190 0d1e 91       		.byte	0x91
 27191 0d1f 9C74     		.sleb128 -1508
 27192 0d21 00       		.byte	0
 27193 0d22 09       		.uleb128 0x9
 27194 0d23 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 589


 27195 0d27 330D0000 		.4byte	0xd33
 27196 0d2b 23       		.uleb128 0x23
 27197 0d2c 18010000 		.4byte	0x118
 27198 0d30 DB05     		.2byte	0x5db
 27199 0d32 00       		.byte	0
 27200 0d33 21       		.uleb128 0x21
 27201 0d34 41120000 		.4byte	.LASF203
 27202 0d38 01       		.byte	0x1
 27203 0d39 3101     		.2byte	0x131
 27204 0d3b 00000000 		.4byte	.LFB66
 27205 0d3f 02010000 		.4byte	.LFE66-.LFB66
 27206 0d43 01       		.uleb128 0x1
 27207 0d44 9C       		.byte	0x9c
 27208 0d45 7C0D0000 		.4byte	0xd7c
 27209 0d49 24       		.uleb128 0x24
 27210 0d4a A6110000 		.4byte	.LASF206
 27211 0d4e 01       		.byte	0x1
 27212 0d4f 3101     		.2byte	0x131
 27213 0d51 A3000000 		.4byte	0xa3
 27214 0d55 04       		.uleb128 0x4
 27215 0d56 91       		.byte	0x91
 27216 0d57 B6C47E   		.sleb128 -24010
 27217 0d5a 22       		.uleb128 0x22
 27218 0d5b 23050000 		.4byte	.LASF202
 27219 0d5f 01       		.byte	0x1
 27220 0d60 3201     		.2byte	0x132
 27221 0d62 7C0D0000 		.4byte	0xd7c
 27222 0d66 03       		.uleb128 0x3
 27223 0d67 91       		.byte	0x91
 27224 0d68 D860     		.sleb128 -4008
 27225 0d6a 22       		.uleb128 0x22
 27226 0d6b 77070000 		.4byte	.LASF204
 27227 0d6f 01       		.byte	0x1
 27228 0d70 3301     		.2byte	0x133
 27229 0d72 8D0D0000 		.4byte	0xd8d
 27230 0d76 04       		.uleb128 0x4
 27231 0d77 91       		.byte	0x91
 27232 0d78 B8C47E   		.sleb128 -24008
 27233 0d7b 00       		.byte	0
 27234 0d7c 09       		.uleb128 0x9
 27235 0d7d F9000000 		.4byte	0xf9
 27236 0d81 8D0D0000 		.4byte	0xd8d
 27237 0d85 23       		.uleb128 0x23
 27238 0d86 18010000 		.4byte	0x118
 27239 0d8a 9F0F     		.2byte	0xf9f
 27240 0d8c 00       		.byte	0
 27241 0d8d 09       		.uleb128 0x9
 27242 0d8e F9000000 		.4byte	0xf9
 27243 0d92 9E0D0000 		.4byte	0xd9e
 27244 0d96 23       		.uleb128 0x23
 27245 0d97 18010000 		.4byte	0x118
 27246 0d9b 1F4E     		.2byte	0x4e1f
 27247 0d9d 00       		.byte	0
 27248 0d9e 21       		.uleb128 0x21
 27249 0d9f 93010000 		.4byte	.LASF205
 27250 0da3 01       		.byte	0x1
 27251 0da4 5601     		.2byte	0x156
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 590


 27252 0da6 00000000 		.4byte	.LFB67
 27253 0daa 6E2F0000 		.4byte	.LFE67-.LFB67
 27254 0dae 01       		.uleb128 0x1
 27255 0daf 9C       		.byte	0x9c
 27256 0db0 420F0000 		.4byte	0xf42
 27257 0db4 24       		.uleb128 0x24
 27258 0db5 B90B0000 		.4byte	.LASF207
 27259 0db9 01       		.byte	0x1
 27260 0dba 5601     		.2byte	0x156
 27261 0dbc 420F0000 		.4byte	0xf42
 27262 0dc0 03       		.uleb128 0x3
 27263 0dc1 91       		.byte	0x91
 27264 0dc2 9C57     		.sleb128 -5220
 27265 0dc4 24       		.uleb128 0x24
 27266 0dc5 1A120000 		.4byte	.LASF208
 27267 0dc9 01       		.byte	0x1
 27268 0dca 5601     		.2byte	0x156
 27269 0dcc 480F0000 		.4byte	0xf48
 27270 0dd0 03       		.uleb128 0x3
 27271 0dd1 91       		.byte	0x91
 27272 0dd2 9857     		.sleb128 -5224
 27273 0dd4 24       		.uleb128 0x24
 27274 0dd5 BC020000 		.4byte	.LASF209
 27275 0dd9 01       		.byte	0x1
 27276 0dda 5701     		.2byte	0x157
 27277 0ddc 480F0000 		.4byte	0xf48
 27278 0de0 03       		.uleb128 0x3
 27279 0de1 91       		.byte	0x91
 27280 0de2 9457     		.sleb128 -5228
 27281 0de4 24       		.uleb128 0x24
 27282 0de5 1A0B0000 		.4byte	.LASF210
 27283 0de9 01       		.byte	0x1
 27284 0dea 5701     		.2byte	0x157
 27285 0dec 480F0000 		.4byte	0xf48
 27286 0df0 03       		.uleb128 0x3
 27287 0df1 91       		.byte	0x91
 27288 0df2 9057     		.sleb128 -5232
 27289 0df4 24       		.uleb128 0x24
 27290 0df5 69110000 		.4byte	.LASF211
 27291 0df9 01       		.byte	0x1
 27292 0dfa 5801     		.2byte	0x158
 27293 0dfc 480F0000 		.4byte	0xf48
 27294 0e00 02       		.uleb128 0x2
 27295 0e01 91       		.byte	0x91
 27296 0e02 00       		.sleb128 0
 27297 0e03 24       		.uleb128 0x24
 27298 0e04 05070000 		.4byte	.LASF212
 27299 0e08 01       		.byte	0x1
 27300 0e09 5801     		.2byte	0x158
 27301 0e0b 4E0F0000 		.4byte	0xf4e
 27302 0e0f 02       		.uleb128 0x2
 27303 0e10 91       		.byte	0x91
 27304 0e11 04       		.sleb128 4
 27305 0e12 24       		.uleb128 0x24
 27306 0e13 CD090000 		.4byte	.LASF213
 27307 0e17 01       		.byte	0x1
 27308 0e18 5901     		.2byte	0x159
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 591


 27309 0e1a 480F0000 		.4byte	0xf48
 27310 0e1e 02       		.uleb128 0x2
 27311 0e1f 91       		.byte	0x91
 27312 0e20 08       		.sleb128 8
 27313 0e21 24       		.uleb128 0x24
 27314 0e22 89070000 		.4byte	.LASF214
 27315 0e26 01       		.byte	0x1
 27316 0e27 5901     		.2byte	0x159
 27317 0e29 4E0F0000 		.4byte	0xf4e
 27318 0e2d 02       		.uleb128 0x2
 27319 0e2e 91       		.byte	0x91
 27320 0e2f 0C       		.sleb128 12
 27321 0e30 22       		.uleb128 0x22
 27322 0e31 76050000 		.4byte	.LASF215
 27323 0e35 01       		.byte	0x1
 27324 0e36 5C01     		.2byte	0x15c
 27325 0e38 540F0000 		.4byte	0xf54
 27326 0e3c 03       		.uleb128 0x3
 27327 0e3d 91       		.byte	0x91
 27328 0e3e E857     		.sleb128 -5144
 27329 0e40 22       		.uleb128 0x22
 27330 0e41 C5000000 		.4byte	.LASF216
 27331 0e45 01       		.byte	0x1
 27332 0e46 5D01     		.2byte	0x15d
 27333 0e48 A3000000 		.4byte	0xa3
 27334 0e4c 02       		.uleb128 0x2
 27335 0e4d 91       		.byte	0x91
 27336 0e4e 60       		.sleb128 -32
 27337 0e4f 25       		.uleb128 0x25
 27338 0e50 6900     		.ascii	"i\000"
 27339 0e52 01       		.byte	0x1
 27340 0e53 6001     		.2byte	0x160
 27341 0e55 97000000 		.4byte	0x97
 27342 0e59 02       		.uleb128 0x2
 27343 0e5a 91       		.byte	0x91
 27344 0e5b 67       		.sleb128 -25
 27345 0e5c 25       		.uleb128 0x25
 27346 0e5d 6A00     		.ascii	"j\000"
 27347 0e5f 01       		.byte	0x1
 27348 0e60 6001     		.2byte	0x160
 27349 0e62 97000000 		.4byte	0x97
 27350 0e66 02       		.uleb128 0x2
 27351 0e67 91       		.byte	0x91
 27352 0e68 66       		.sleb128 -26
 27353 0e69 25       		.uleb128 0x25
 27354 0e6a 69647800 		.ascii	"idx\000"
 27355 0e6e 01       		.byte	0x1
 27356 0e6f 6101     		.2byte	0x161
 27357 0e71 97000000 		.4byte	0x97
 27358 0e75 02       		.uleb128 0x2
 27359 0e76 91       		.byte	0x91
 27360 0e77 65       		.sleb128 -27
 27361 0e78 22       		.uleb128 0x22
 27362 0e79 8B0F0000 		.4byte	.LASF217
 27363 0e7d 01       		.byte	0x1
 27364 0e7e 6201     		.2byte	0x162
 27365 0e80 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 592


 27366 0e84 02       		.uleb128 0x2
 27367 0e85 91       		.byte	0x91
 27368 0e86 64       		.sleb128 -28
 27369 0e87 25       		.uleb128 0x25
 27370 0e88 736F6400 		.ascii	"sod\000"
 27371 0e8c 01       		.byte	0x1
 27372 0e8d 6301     		.2byte	0x163
 27373 0e8f 97000000 		.4byte	0x97
 27374 0e93 02       		.uleb128 0x2
 27375 0e94 91       		.byte	0x91
 27376 0e95 63       		.sleb128 -29
 27377 0e96 22       		.uleb128 0x22
 27378 0e97 EB0A0000 		.4byte	.LASF218
 27379 0e9b 01       		.byte	0x1
 27380 0e9c 6401     		.2byte	0x164
 27381 0e9e 97000000 		.4byte	0x97
 27382 0ea2 02       		.uleb128 0x2
 27383 0ea3 91       		.byte	0x91
 27384 0ea4 62       		.sleb128 -30
 27385 0ea5 22       		.uleb128 0x22
 27386 0ea6 44130000 		.4byte	.LASF219
 27387 0eaa 01       		.byte	0x1
 27388 0eab 6501     		.2byte	0x165
 27389 0ead 650F0000 		.4byte	0xf65
 27390 0eb1 03       		.uleb128 0x3
 27391 0eb2 91       		.byte	0x91
 27392 0eb3 B457     		.sleb128 -5196
 27393 0eb5 22       		.uleb128 0x22
 27394 0eb6 51110000 		.4byte	.LASF220
 27395 0eba 01       		.byte	0x1
 27396 0ebb 6601     		.2byte	0x166
 27397 0ebd EB000000 		.4byte	0xeb
 27398 0ec1 03       		.uleb128 0x3
 27399 0ec2 91       		.byte	0x91
 27400 0ec3 B057     		.sleb128 -5200
 27401 0ec5 22       		.uleb128 0x22
 27402 0ec6 13100000 		.4byte	.LASF221
 27403 0eca 01       		.byte	0x1
 27404 0ecb 6701     		.2byte	0x167
 27405 0ecd C7000000 		.4byte	0xc7
 27406 0ed1 03       		.uleb128 0x3
 27407 0ed2 91       		.byte	0x91
 27408 0ed3 AE57     		.sleb128 -5202
 27409 0ed5 22       		.uleb128 0x22
 27410 0ed6 420B0000 		.4byte	.LASF222
 27411 0eda 01       		.byte	0x1
 27412 0edb 6801     		.2byte	0x168
 27413 0edd A3000000 		.4byte	0xa3
 27414 0ee1 03       		.uleb128 0x3
 27415 0ee2 91       		.byte	0x91
 27416 0ee3 AC57     		.sleb128 -5204
 27417 0ee5 22       		.uleb128 0x22
 27418 0ee6 72110000 		.4byte	.LASF223
 27419 0eea 01       		.byte	0x1
 27420 0eeb 6901     		.2byte	0x169
 27421 0eed D3000000 		.4byte	0xd3
 27422 0ef1 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 593


 27423 0ef2 91       		.byte	0x91
 27424 0ef3 A857     		.sleb128 -5208
 27425 0ef5 22       		.uleb128 0x22
 27426 0ef6 C60C0000 		.4byte	.LASF224
 27427 0efa 01       		.byte	0x1
 27428 0efb 6A01     		.2byte	0x16a
 27429 0efd AF000000 		.4byte	0xaf
 27430 0f01 03       		.uleb128 0x3
 27431 0f02 91       		.byte	0x91
 27432 0f03 A457     		.sleb128 -5212
 27433 0f05 22       		.uleb128 0x22
 27434 0f06 690C0000 		.4byte	.LASF225
 27435 0f0a 01       		.byte	0x1
 27436 0f0b 6C01     		.2byte	0x16c
 27437 0f0d 97000000 		.4byte	0x97
 27438 0f11 02       		.uleb128 0x2
 27439 0f12 91       		.byte	0x91
 27440 0f13 5F       		.sleb128 -33
 27441 0f14 22       		.uleb128 0x22
 27442 0f15 F4000000 		.4byte	.LASF226
 27443 0f19 01       		.byte	0x1
 27444 0f1a 6D01     		.2byte	0x16d
 27445 0f1c 97000000 		.4byte	0x97
 27446 0f20 02       		.uleb128 0x2
 27447 0f21 91       		.byte	0x91
 27448 0f22 5E       		.sleb128 -34
 27449 0f23 22       		.uleb128 0x22
 27450 0f24 000A0000 		.4byte	.LASF227
 27451 0f28 01       		.byte	0x1
 27452 0f29 6F01     		.2byte	0x16f
 27453 0f2b 480F0000 		.4byte	0xf48
 27454 0f2f 02       		.uleb128 0x2
 27455 0f30 91       		.byte	0x91
 27456 0f31 58       		.sleb128 -40
 27457 0f32 22       		.uleb128 0x22
 27458 0f33 88010000 		.4byte	.LASF228
 27459 0f37 01       		.byte	0x1
 27460 0f38 7001     		.2byte	0x170
 27461 0f3a 480F0000 		.4byte	0xf48
 27462 0f3e 02       		.uleb128 0x2
 27463 0f3f 91       		.byte	0x91
 27464 0f40 54       		.sleb128 -44
 27465 0f41 00       		.byte	0
 27466 0f42 07       		.uleb128 0x7
 27467 0f43 04       		.byte	0x4
 27468 0f44 480F0000 		.4byte	0xf48
 27469 0f48 07       		.uleb128 0x7
 27470 0f49 04       		.byte	0x4
 27471 0f4a 97000000 		.4byte	0x97
 27472 0f4e 07       		.uleb128 0x7
 27473 0f4f 04       		.byte	0x4
 27474 0f50 25010000 		.4byte	0x125
 27475 0f54 09       		.uleb128 0x9
 27476 0f55 97000000 		.4byte	0x97
 27477 0f59 650F0000 		.4byte	0xf65
 27478 0f5d 23       		.uleb128 0x23
 27479 0f5e 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 594


 27480 0f62 EB13     		.2byte	0x13eb
 27481 0f64 00       		.byte	0
 27482 0f65 09       		.uleb128 0x9
 27483 0f66 F9000000 		.4byte	0xf9
 27484 0f6a 750F0000 		.4byte	0xf75
 27485 0f6e 0A       		.uleb128 0xa
 27486 0f6f 18010000 		.4byte	0x118
 27487 0f73 31       		.byte	0x31
 27488 0f74 00       		.byte	0
 27489 0f75 21       		.uleb128 0x21
 27490 0f76 C00D0000 		.4byte	.LASF229
 27491 0f7a 01       		.byte	0x1
 27492 0f7b 3103     		.2byte	0x331
 27493 0f7d 00000000 		.4byte	.LFB68
 27494 0f81 C0170000 		.4byte	.LFE68-.LFB68
 27495 0f85 01       		.uleb128 0x1
 27496 0f86 9C       		.byte	0x9c
 27497 0f87 43110000 		.4byte	0x1143
 27498 0f8b 24       		.uleb128 0x24
 27499 0f8c 62060000 		.4byte	.LASF230
 27500 0f90 01       		.byte	0x1
 27501 0f91 3103     		.2byte	0x331
 27502 0f93 A3000000 		.4byte	0xa3
 27503 0f97 03       		.uleb128 0x3
 27504 0f98 91       		.byte	0x91
 27505 0f99 8E76     		.sleb128 -1266
 27506 0f9b 25       		.uleb128 0x25
 27507 0f9c 6900     		.ascii	"i\000"
 27508 0f9e 01       		.byte	0x1
 27509 0f9f 3203     		.2byte	0x332
 27510 0fa1 97000000 		.4byte	0x97
 27511 0fa5 02       		.uleb128 0x2
 27512 0fa6 91       		.byte	0x91
 27513 0fa7 6F       		.sleb128 -17
 27514 0fa8 25       		.uleb128 0x25
 27515 0fa9 6A00     		.ascii	"j\000"
 27516 0fab 01       		.byte	0x1
 27517 0fac 3203     		.2byte	0x332
 27518 0fae 97000000 		.4byte	0x97
 27519 0fb2 02       		.uleb128 0x2
 27520 0fb3 91       		.byte	0x91
 27521 0fb4 6E       		.sleb128 -18
 27522 0fb5 25       		.uleb128 0x25
 27523 0fb6 736F6400 		.ascii	"sod\000"
 27524 0fba 01       		.byte	0x1
 27525 0fbb 3303     		.2byte	0x333
 27526 0fbd 97000000 		.4byte	0x97
 27527 0fc1 02       		.uleb128 0x2
 27528 0fc2 91       		.byte	0x91
 27529 0fc3 6D       		.sleb128 -19
 27530 0fc4 22       		.uleb128 0x22
 27531 0fc5 ED090000 		.4byte	.LASF231
 27532 0fc9 01       		.byte	0x1
 27533 0fca 3403     		.2byte	0x334
 27534 0fcc 97000000 		.4byte	0x97
 27535 0fd0 02       		.uleb128 0x2
 27536 0fd1 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 595


 27537 0fd2 62       		.sleb128 -30
 27538 0fd3 22       		.uleb128 0x22
 27539 0fd4 13100000 		.4byte	.LASF221
 27540 0fd8 01       		.byte	0x1
 27541 0fd9 3503     		.2byte	0x335
 27542 0fdb C7000000 		.4byte	0xc7
 27543 0fdf 02       		.uleb128 0x2
 27544 0fe0 91       		.byte	0x91
 27545 0fe1 60       		.sleb128 -32
 27546 0fe2 22       		.uleb128 0x22
 27547 0fe3 420B0000 		.4byte	.LASF222
 27548 0fe7 01       		.byte	0x1
 27549 0fe8 3603     		.2byte	0x336
 27550 0fea A3000000 		.4byte	0xa3
 27551 0fee 02       		.uleb128 0x2
 27552 0fef 91       		.byte	0x91
 27553 0ff0 5E       		.sleb128 -34
 27554 0ff1 22       		.uleb128 0x22
 27555 0ff2 72110000 		.4byte	.LASF223
 27556 0ff6 01       		.byte	0x1
 27557 0ff7 3703     		.2byte	0x337
 27558 0ff9 D3000000 		.4byte	0xd3
 27559 0ffd 02       		.uleb128 0x2
 27560 0ffe 91       		.byte	0x91
 27561 0fff 58       		.sleb128 -40
 27562 1000 22       		.uleb128 0x22
 27563 1001 C60C0000 		.4byte	.LASF224
 27564 1005 01       		.byte	0x1
 27565 1006 3803     		.2byte	0x338
 27566 1008 AF000000 		.4byte	0xaf
 27567 100c 02       		.uleb128 0x2
 27568 100d 91       		.byte	0x91
 27569 100e 54       		.sleb128 -44
 27570 100f 22       		.uleb128 0x22
 27571 1010 51110000 		.4byte	.LASF220
 27572 1014 01       		.byte	0x1
 27573 1015 3903     		.2byte	0x339
 27574 1017 EB000000 		.4byte	0xeb
 27575 101b 02       		.uleb128 0x2
 27576 101c 91       		.byte	0x91
 27577 101d 50       		.sleb128 -48
 27578 101e 22       		.uleb128 0x22
 27579 101f 690C0000 		.4byte	.LASF225
 27580 1023 01       		.byte	0x1
 27581 1024 3B03     		.2byte	0x33b
 27582 1026 97000000 		.4byte	0x97
 27583 102a 02       		.uleb128 0x2
 27584 102b 91       		.byte	0x91
 27585 102c 65       		.sleb128 -27
 27586 102d 22       		.uleb128 0x22
 27587 102e F4000000 		.4byte	.LASF226
 27588 1032 01       		.byte	0x1
 27589 1033 3C03     		.2byte	0x33c
 27590 1035 97000000 		.4byte	0x97
 27591 1039 02       		.uleb128 0x2
 27592 103a 91       		.byte	0x91
 27593 103b 64       		.sleb128 -28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 596


 27594 103c 22       		.uleb128 0x22
 27595 103d D2020000 		.4byte	.LASF232
 27596 1041 01       		.byte	0x1
 27597 1042 3F03     		.2byte	0x33f
 27598 1044 43110000 		.4byte	0x1143
 27599 1048 02       		.uleb128 0x2
 27600 1049 91       		.byte	0x91
 27601 104a 68       		.sleb128 -24
 27602 104b 22       		.uleb128 0x22
 27603 104c B90B0000 		.4byte	.LASF207
 27604 1050 01       		.byte	0x1
 27605 1051 4703     		.2byte	0x347
 27606 1053 49110000 		.4byte	0x1149
 27607 1057 03       		.uleb128 0x3
 27608 1058 91       		.byte	0x91
 27609 1059 A07D     		.sleb128 -352
 27610 105b 22       		.uleb128 0x22
 27611 105c 1A120000 		.4byte	.LASF208
 27612 1060 01       		.byte	0x1
 27613 1061 9B03     		.2byte	0x39b
 27614 1063 59110000 		.4byte	0x1159
 27615 1067 03       		.uleb128 0x3
 27616 1068 91       		.byte	0x91
 27617 1069 D47C     		.sleb128 -428
 27618 106b 22       		.uleb128 0x22
 27619 106c BC020000 		.4byte	.LASF209
 27620 1070 01       		.byte	0x1
 27621 1071 B303     		.2byte	0x3b3
 27622 1073 59110000 		.4byte	0x1159
 27623 1077 03       		.uleb128 0x3
 27624 1078 91       		.byte	0x91
 27625 1079 887C     		.sleb128 -504
 27626 107b 22       		.uleb128 0x22
 27627 107c 1A0B0000 		.4byte	.LASF210
 27628 1080 01       		.byte	0x1
 27629 1081 CB03     		.2byte	0x3cb
 27630 1083 59110000 		.4byte	0x1159
 27631 1087 03       		.uleb128 0x3
 27632 1088 91       		.byte	0x91
 27633 1089 BC7B     		.sleb128 -580
 27634 108b 22       		.uleb128 0x22
 27635 108c 05070000 		.4byte	.LASF212
 27636 1090 01       		.byte	0x1
 27637 1091 E303     		.2byte	0x3e3
 27638 1093 69110000 		.4byte	0x1169
 27639 1097 03       		.uleb128 0x3
 27640 1098 91       		.byte	0x91
 27641 1099 8C79     		.sleb128 -884
 27642 109b 22       		.uleb128 0x22
 27643 109c 99120000 		.4byte	.LASF233
 27644 10a0 01       		.byte	0x1
 27645 10a1 FC03     		.2byte	0x3fc
 27646 10a3 79110000 		.4byte	0x1179
 27647 10a7 03       		.uleb128 0x3
 27648 10a8 91       		.byte	0x91
 27649 10a9 9478     		.sleb128 -1004
 27650 10ab 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 597


 27651 10ac 89070000 		.4byte	.LASF214
 27652 10b0 01       		.byte	0x1
 27653 10b1 FF03     		.2byte	0x3ff
 27654 10b3 89110000 		.4byte	0x1189
 27655 10b7 03       		.uleb128 0x3
 27656 10b8 91       		.byte	0x91
 27657 10b9 EC77     		.sleb128 -1044
 27658 10bb 22       		.uleb128 0x22
 27659 10bc 69110000 		.4byte	.LASF211
 27660 10c0 01       		.byte	0x1
 27661 10c1 0C04     		.2byte	0x40c
 27662 10c3 99110000 		.4byte	0x1199
 27663 10c7 03       		.uleb128 0x3
 27664 10c8 91       		.byte	0x91
 27665 10c9 CC77     		.sleb128 -1076
 27666 10cb 22       		.uleb128 0x22
 27667 10cc BF0B0000 		.4byte	.LASF234
 27668 10d0 01       		.byte	0x1
 27669 10d1 0D04     		.2byte	0x40d
 27670 10d3 A9110000 		.4byte	0x11a9
 27671 10d7 03       		.uleb128 0x3
 27672 10d8 91       		.byte	0x91
 27673 10d9 C077     		.sleb128 -1088
 27674 10db 22       		.uleb128 0x22
 27675 10dc 040B0000 		.4byte	.LASF235
 27676 10e0 01       		.byte	0x1
 27677 10e1 0E04     		.2byte	0x40e
 27678 10e3 B9110000 		.4byte	0x11b9
 27679 10e7 03       		.uleb128 0x3
 27680 10e8 91       		.byte	0x91
 27681 10e9 AC77     		.sleb128 -1108
 27682 10eb 22       		.uleb128 0x22
 27683 10ec D80C0000 		.4byte	.LASF236
 27684 10f0 01       		.byte	0x1
 27685 10f1 0F04     		.2byte	0x40f
 27686 10f3 97000000 		.4byte	0x97
 27687 10f7 02       		.uleb128 0x2
 27688 10f8 91       		.byte	0x91
 27689 10f9 63       		.sleb128 -29
 27690 10fa 22       		.uleb128 0x22
 27691 10fb CD090000 		.4byte	.LASF213
 27692 10ff 01       		.byte	0x1
 27693 1100 1804     		.2byte	0x418
 27694 1102 59110000 		.4byte	0x1159
 27695 1106 03       		.uleb128 0x3
 27696 1107 91       		.byte	0x91
 27697 1108 E076     		.sleb128 -1184
 27698 110a 22       		.uleb128 0x22
 27699 110b C0120000 		.4byte	.LASF237
 27700 110f 01       		.byte	0x1
 27701 1110 2304     		.2byte	0x423
 27702 1112 59110000 		.4byte	0x1159
 27703 1116 03       		.uleb128 0x3
 27704 1117 91       		.byte	0x91
 27705 1118 9476     		.sleb128 -1260
 27706 111a 1E       		.uleb128 0x1e
 27707 111b 2A170000 		.4byte	.LBB14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 598


 27708 111f 86000000 		.4byte	.LBE14-.LBB14
 27709 1123 25       		.uleb128 0x25
 27710 1124 69647800 		.ascii	"idx\000"
 27711 1128 01       		.byte	0x1
 27712 1129 8C04     		.2byte	0x48c
 27713 112b 97000000 		.4byte	0x97
 27714 112f 02       		.uleb128 0x2
 27715 1130 91       		.byte	0x91
 27716 1131 67       		.sleb128 -25
 27717 1132 22       		.uleb128 0x22
 27718 1133 DA040000 		.4byte	.LASF238
 27719 1137 01       		.byte	0x1
 27720 1138 8C04     		.2byte	0x48c
 27721 113a 97000000 		.4byte	0x97
 27722 113e 02       		.uleb128 0x2
 27723 113f 91       		.byte	0x91
 27724 1140 66       		.sleb128 -26
 27725 1141 00       		.byte	0
 27726 1142 00       		.byte	0
 27727 1143 07       		.uleb128 0x7
 27728 1144 04       		.byte	0x4
 27729 1145 4F0A0000 		.4byte	0xa4f
 27730 1149 09       		.uleb128 0x9
 27731 114a 480F0000 		.4byte	0xf48
 27732 114e 59110000 		.4byte	0x1159
 27733 1152 0A       		.uleb128 0xa
 27734 1153 18010000 		.4byte	0x118
 27735 1157 4B       		.byte	0x4b
 27736 1158 00       		.byte	0
 27737 1159 09       		.uleb128 0x9
 27738 115a 97000000 		.4byte	0x97
 27739 115e 69110000 		.4byte	0x1169
 27740 1162 0A       		.uleb128 0xa
 27741 1163 18010000 		.4byte	0x118
 27742 1167 4B       		.byte	0x4b
 27743 1168 00       		.byte	0
 27744 1169 09       		.uleb128 0x9
 27745 116a 25010000 		.4byte	0x125
 27746 116e 79110000 		.4byte	0x1179
 27747 1172 0A       		.uleb128 0xa
 27748 1173 18010000 		.4byte	0x118
 27749 1177 4B       		.byte	0x4b
 27750 1178 00       		.byte	0
 27751 1179 09       		.uleb128 0x9
 27752 117a F9000000 		.4byte	0xf9
 27753 117e 89110000 		.4byte	0x1189
 27754 1182 0A       		.uleb128 0xa
 27755 1183 18010000 		.4byte	0x118
 27756 1187 75       		.byte	0x75
 27757 1188 00       		.byte	0
 27758 1189 09       		.uleb128 0x9
 27759 118a 25010000 		.4byte	0x125
 27760 118e 99110000 		.4byte	0x1199
 27761 1192 0A       		.uleb128 0xa
 27762 1193 18010000 		.4byte	0x118
 27763 1197 09       		.byte	0x9
 27764 1198 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 599


 27765 1199 09       		.uleb128 0x9
 27766 119a 97000000 		.4byte	0x97
 27767 119e A9110000 		.4byte	0x11a9
 27768 11a2 0A       		.uleb128 0xa
 27769 11a3 18010000 		.4byte	0x118
 27770 11a7 1C       		.byte	0x1c
 27771 11a8 00       		.byte	0
 27772 11a9 09       		.uleb128 0x9
 27773 11aa 97000000 		.4byte	0x97
 27774 11ae B9110000 		.4byte	0x11b9
 27775 11b2 0A       		.uleb128 0xa
 27776 11b3 18010000 		.4byte	0x118
 27777 11b7 08       		.byte	0x8
 27778 11b8 00       		.byte	0
 27779 11b9 09       		.uleb128 0x9
 27780 11ba 97000000 		.4byte	0x97
 27781 11be C9110000 		.4byte	0x11c9
 27782 11c2 0A       		.uleb128 0xa
 27783 11c3 18010000 		.4byte	0x118
 27784 11c7 11       		.byte	0x11
 27785 11c8 00       		.byte	0
 27786 11c9 21       		.uleb128 0x21
 27787 11ca 44030000 		.4byte	.LASF239
 27788 11ce 01       		.byte	0x1
 27789 11cf 9D04     		.2byte	0x49d
 27790 11d1 00000000 		.4byte	.LFB69
 27791 11d5 18140000 		.4byte	.LFE69-.LFB69
 27792 11d9 01       		.uleb128 0x1
 27793 11da 9C       		.byte	0x9c
 27794 11db 6B120000 		.4byte	0x126b
 27795 11df 24       		.uleb128 0x24
 27796 11e0 62060000 		.4byte	.LASF230
 27797 11e4 01       		.byte	0x1
 27798 11e5 9D04     		.2byte	0x49d
 27799 11e7 A3000000 		.4byte	0xa3
 27800 11eb 02       		.uleb128 0x2
 27801 11ec 91       		.byte	0x91
 27802 11ed 56       		.sleb128 -42
 27803 11ee 25       		.uleb128 0x25
 27804 11ef 6900     		.ascii	"i\000"
 27805 11f1 01       		.byte	0x1
 27806 11f2 9F04     		.2byte	0x49f
 27807 11f4 97000000 		.4byte	0x97
 27808 11f8 02       		.uleb128 0x2
 27809 11f9 91       		.byte	0x91
 27810 11fa 67       		.sleb128 -25
 27811 11fb 25       		.uleb128 0x25
 27812 11fc 6A00     		.ascii	"j\000"
 27813 11fe 01       		.byte	0x1
 27814 11ff 9F04     		.2byte	0x49f
 27815 1201 97000000 		.4byte	0x97
 27816 1205 02       		.uleb128 0x2
 27817 1206 91       		.byte	0x91
 27818 1207 66       		.sleb128 -26
 27819 1208 22       		.uleb128 0x22
 27820 1209 250B0000 		.4byte	.LASF240
 27821 120d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 600


 27822 120e A004     		.2byte	0x4a0
 27823 1210 97000000 		.4byte	0x97
 27824 1214 02       		.uleb128 0x2
 27825 1215 91       		.byte	0x91
 27826 1216 62       		.sleb128 -30
 27827 1217 22       		.uleb128 0x22
 27828 1218 51110000 		.4byte	.LASF220
 27829 121c 01       		.byte	0x1
 27830 121d A104     		.2byte	0x4a1
 27831 121f EB000000 		.4byte	0xeb
 27832 1223 02       		.uleb128 0x2
 27833 1224 91       		.byte	0x91
 27834 1225 5C       		.sleb128 -36
 27835 1226 22       		.uleb128 0x22
 27836 1227 1D030000 		.4byte	.LASF241
 27837 122b 01       		.byte	0x1
 27838 122c A104     		.2byte	0x4a1
 27839 122e EB000000 		.4byte	0xeb
 27840 1232 02       		.uleb128 0x2
 27841 1233 91       		.byte	0x91
 27842 1234 58       		.sleb128 -40
 27843 1235 22       		.uleb128 0x22
 27844 1236 690C0000 		.4byte	.LASF225
 27845 123a 01       		.byte	0x1
 27846 123b A304     		.2byte	0x4a3
 27847 123d 97000000 		.4byte	0x97
 27848 1241 02       		.uleb128 0x2
 27849 1242 91       		.byte	0x91
 27850 1243 64       		.sleb128 -28
 27851 1244 22       		.uleb128 0x22
 27852 1245 F4000000 		.4byte	.LASF226
 27853 1249 01       		.byte	0x1
 27854 124a A404     		.2byte	0x4a4
 27855 124c 97000000 		.4byte	0x97
 27856 1250 02       		.uleb128 0x2
 27857 1251 91       		.byte	0x91
 27858 1252 63       		.sleb128 -29
 27859 1253 1E       		.uleb128 0x1e
 27860 1254 F40A0000 		.4byte	.LBB15
 27861 1258 26000000 		.4byte	.LBE15-.LBB15
 27862 125c 25       		.uleb128 0x25
 27863 125d 6900     		.ascii	"i\000"
 27864 125f 01       		.byte	0x1
 27865 1260 4B05     		.2byte	0x54b
 27866 1262 97000000 		.4byte	0x97
 27867 1266 02       		.uleb128 0x2
 27868 1267 91       		.byte	0x91
 27869 1268 65       		.sleb128 -27
 27870 1269 00       		.byte	0
 27871 126a 00       		.byte	0
 27872 126b 21       		.uleb128 0x21
 27873 126c 14080000 		.4byte	.LASF242
 27874 1270 01       		.byte	0x1
 27875 1271 E405     		.2byte	0x5e4
 27876 1273 00000000 		.4byte	.LFB70
 27877 1277 F40D0000 		.4byte	.LFE70-.LFB70
 27878 127b 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 601


 27879 127c 9C       		.byte	0x9c
 27880 127d FA130000 		.4byte	0x13fa
 27881 1281 24       		.uleb128 0x24
 27882 1282 62060000 		.4byte	.LASF230
 27883 1286 01       		.byte	0x1
 27884 1287 E405     		.2byte	0x5e4
 27885 1289 A3000000 		.4byte	0xa3
 27886 128d 03       		.uleb128 0x3
 27887 128e 91       		.byte	0x91
 27888 128f CE72     		.sleb128 -1714
 27889 1291 22       		.uleb128 0x22
 27890 1292 76050000 		.4byte	.LASF215
 27891 1296 01       		.byte	0x1
 27892 1297 E705     		.2byte	0x5e7
 27893 1299 FA130000 		.4byte	0x13fa
 27894 129d 03       		.uleb128 0x3
 27895 129e 91       		.byte	0x91
 27896 129f DC74     		.sleb128 -1444
 27897 12a1 22       		.uleb128 0x22
 27898 12a2 00100000 		.4byte	.LASF243
 27899 12a6 01       		.byte	0x1
 27900 12a7 EE05     		.2byte	0x5ee
 27901 12a9 A3000000 		.4byte	0xa3
 27902 12ad 02       		.uleb128 0x2
 27903 12ae 91       		.byte	0x91
 27904 12af 62       		.sleb128 -30
 27905 12b0 22       		.uleb128 0x22
 27906 12b1 EE040000 		.4byte	.LASF244
 27907 12b5 01       		.byte	0x1
 27908 12b6 EF05     		.2byte	0x5ef
 27909 12b8 A3000000 		.4byte	0xa3
 27910 12bc 02       		.uleb128 0x2
 27911 12bd 91       		.byte	0x91
 27912 12be 6E       		.sleb128 -18
 27913 12bf 22       		.uleb128 0x22
 27914 12c0 35080000 		.4byte	.LASF245
 27915 12c4 01       		.byte	0x1
 27916 12c5 F005     		.2byte	0x5f0
 27917 12c7 A3000000 		.4byte	0xa3
 27918 12cb 02       		.uleb128 0x2
 27919 12cc 91       		.byte	0x91
 27920 12cd 60       		.sleb128 -32
 27921 12ce 22       		.uleb128 0x22
 27922 12cf B4070000 		.4byte	.LASF246
 27923 12d3 01       		.byte	0x1
 27924 12d4 F105     		.2byte	0x5f1
 27925 12d6 A3000000 		.4byte	0xa3
 27926 12da 02       		.uleb128 0x2
 27927 12db 91       		.byte	0x91
 27928 12dc 5E       		.sleb128 -34
 27929 12dd 25       		.uleb128 0x25
 27930 12de 6900     		.ascii	"i\000"
 27931 12e0 01       		.byte	0x1
 27932 12e1 F905     		.2byte	0x5f9
 27933 12e3 A3000000 		.4byte	0xa3
 27934 12e7 02       		.uleb128 0x2
 27935 12e8 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 602


 27936 12e9 6C       		.sleb128 -20
 27937 12ea 25       		.uleb128 0x25
 27938 12eb 6A00     		.ascii	"j\000"
 27939 12ed 01       		.byte	0x1
 27940 12ee F905     		.2byte	0x5f9
 27941 12f0 A3000000 		.4byte	0xa3
 27942 12f4 02       		.uleb128 0x2
 27943 12f5 91       		.byte	0x91
 27944 12f6 6A       		.sleb128 -22
 27945 12f7 25       		.uleb128 0x25
 27946 12f8 6B00     		.ascii	"k\000"
 27947 12fa 01       		.byte	0x1
 27948 12fb F905     		.2byte	0x5f9
 27949 12fd A3000000 		.4byte	0xa3
 27950 1301 02       		.uleb128 0x2
 27951 1302 91       		.byte	0x91
 27952 1303 68       		.sleb128 -24
 27953 1304 25       		.uleb128 0x25
 27954 1305 6800     		.ascii	"h\000"
 27955 1307 01       		.byte	0x1
 27956 1308 F905     		.2byte	0x5f9
 27957 130a A3000000 		.4byte	0xa3
 27958 130e 02       		.uleb128 0x2
 27959 130f 91       		.byte	0x91
 27960 1310 66       		.sleb128 -26
 27961 1311 22       		.uleb128 0x22
 27962 1312 E3040000 		.4byte	.LASF247
 27963 1316 01       		.byte	0x1
 27964 1317 FA05     		.2byte	0x5fa
 27965 1319 A3000000 		.4byte	0xa3
 27966 131d 02       		.uleb128 0x2
 27967 131e 91       		.byte	0x91
 27968 131f 5C       		.sleb128 -36
 27969 1320 22       		.uleb128 0x22
 27970 1321 7E0C0000 		.4byte	.LASF248
 27971 1325 01       		.byte	0x1
 27972 1326 FD05     		.2byte	0x5fd
 27973 1328 30010000 		.4byte	0x130
 27974 132c 03       		.uleb128 0x3
 27975 132d 91       		.byte	0x91
 27976 132e C074     		.sleb128 -1472
 27977 1330 22       		.uleb128 0x22
 27978 1331 C70F0000 		.4byte	.LASF249
 27979 1335 01       		.byte	0x1
 27980 1336 FE05     		.2byte	0x5fe
 27981 1338 0B140000 		.4byte	0x140b
 27982 133c 03       		.uleb128 0x3
 27983 133d 91       		.byte	0x91
 27984 133e B474     		.sleb128 -1484
 27985 1340 22       		.uleb128 0x22
 27986 1341 B5060000 		.4byte	.LASF250
 27987 1345 01       		.byte	0x1
 27988 1346 FF05     		.2byte	0x5ff
 27989 1348 1B140000 		.4byte	0x141b
 27990 134c 03       		.uleb128 0x3
 27991 134d 91       		.byte	0x91
 27992 134e A074     		.sleb128 -1504
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 603


 27993 1350 22       		.uleb128 0x22
 27994 1351 09000000 		.4byte	.LASF251
 27995 1355 01       		.byte	0x1
 27996 1356 0006     		.2byte	0x600
 27997 1358 2B140000 		.4byte	0x142b
 27998 135c 03       		.uleb128 0x3
 27999 135d 91       		.byte	0x91
 28000 135e 9074     		.sleb128 -1520
 28001 1360 22       		.uleb128 0x22
 28002 1361 510D0000 		.4byte	.LASF252
 28003 1365 01       		.byte	0x1
 28004 1366 0106     		.2byte	0x601
 28005 1368 3B140000 		.4byte	0x143b
 28006 136c 03       		.uleb128 0x3
 28007 136d 91       		.byte	0x91
 28008 136e E473     		.sleb128 -1564
 28009 1370 22       		.uleb128 0x22
 28010 1371 D5010000 		.4byte	.LASF253
 28011 1375 01       		.byte	0x1
 28012 1376 0206     		.2byte	0x602
 28013 1378 30010000 		.4byte	0x130
 28014 137c 03       		.uleb128 0x3
 28015 137d 91       		.byte	0x91
 28016 137e C873     		.sleb128 -1592
 28017 1380 22       		.uleb128 0x22
 28018 1381 65010000 		.4byte	.LASF254
 28019 1385 01       		.byte	0x1
 28020 1386 0506     		.2byte	0x605
 28021 1388 97000000 		.4byte	0x97
 28022 138c 02       		.uleb128 0x2
 28023 138d 91       		.byte	0x91
 28024 138e 5B       		.sleb128 -37
 28025 138f 22       		.uleb128 0x22
 28026 1390 7A040000 		.4byte	.LASF255
 28027 1394 01       		.byte	0x1
 28028 1395 0606     		.2byte	0x606
 28029 1397 97000000 		.4byte	0x97
 28030 139b 02       		.uleb128 0x2
 28031 139c 91       		.byte	0x91
 28032 139d 5A       		.sleb128 -38
 28033 139e 22       		.uleb128 0x22
 28034 139f 780F0000 		.4byte	.LASF256
 28035 13a3 01       		.byte	0x1
 28036 13a4 0706     		.2byte	0x607
 28037 13a6 97000000 		.4byte	0x97
 28038 13aa 02       		.uleb128 0x2
 28039 13ab 91       		.byte	0x91
 28040 13ac 59       		.sleb128 -39
 28041 13ad 22       		.uleb128 0x22
 28042 13ae EE0F0000 		.4byte	.LASF257
 28043 13b2 01       		.byte	0x1
 28044 13b3 0806     		.2byte	0x608
 28045 13b5 97000000 		.4byte	0x97
 28046 13b9 02       		.uleb128 0x2
 28047 13ba 91       		.byte	0x91
 28048 13bb 58       		.sleb128 -40
 28049 13bc 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 604


 28050 13bd 88040000 		.4byte	.LASF258
 28051 13c1 01       		.byte	0x1
 28052 13c2 0906     		.2byte	0x609
 28053 13c4 97000000 		.4byte	0x97
 28054 13c8 02       		.uleb128 0x2
 28055 13c9 91       		.byte	0x91
 28056 13ca 57       		.sleb128 -41
 28057 13cb 22       		.uleb128 0x22
 28058 13cc AE000000 		.4byte	.LASF259
 28059 13d0 01       		.byte	0x1
 28060 13d1 0A06     		.2byte	0x60a
 28061 13d3 97000000 		.4byte	0x97
 28062 13d7 02       		.uleb128 0x2
 28063 13d8 91       		.byte	0x91
 28064 13d9 65       		.sleb128 -27
 28065 13da 22       		.uleb128 0x22
 28066 13db 99120000 		.4byte	.LASF233
 28067 13df 01       		.byte	0x1
 28068 13e0 0C06     		.2byte	0x60c
 28069 13e2 79110000 		.4byte	0x1179
 28070 13e6 03       		.uleb128 0x3
 28071 13e7 91       		.byte	0x91
 28072 13e8 D072     		.sleb128 -1712
 28073 13ea 22       		.uleb128 0x22
 28074 13eb 31030000 		.4byte	.LASF260
 28075 13ef 01       		.byte	0x1
 28076 13f0 0D06     		.2byte	0x60d
 28077 13f2 97000000 		.4byte	0x97
 28078 13f6 02       		.uleb128 0x2
 28079 13f7 91       		.byte	0x91
 28080 13f8 56       		.sleb128 -42
 28081 13f9 00       		.byte	0
 28082 13fa 09       		.uleb128 0x9
 28083 13fb 97000000 		.4byte	0x97
 28084 13ff 0B140000 		.4byte	0x140b
 28085 1403 23       		.uleb128 0x23
 28086 1404 18010000 		.4byte	0x118
 28087 1408 7805     		.2byte	0x578
 28088 140a 00       		.byte	0
 28089 140b 09       		.uleb128 0x9
 28090 140c F9000000 		.4byte	0xf9
 28091 1410 1B140000 		.4byte	0x141b
 28092 1414 0A       		.uleb128 0xa
 28093 1415 18010000 		.4byte	0x118
 28094 1419 0A       		.byte	0xa
 28095 141a 00       		.byte	0
 28096 141b 09       		.uleb128 0x9
 28097 141c F9000000 		.4byte	0xf9
 28098 1420 2B140000 		.4byte	0x142b
 28099 1424 0A       		.uleb128 0xa
 28100 1425 18010000 		.4byte	0x118
 28101 1429 13       		.byte	0x13
 28102 142a 00       		.byte	0
 28103 142b 09       		.uleb128 0x9
 28104 142c F9000000 		.4byte	0xf9
 28105 1430 3B140000 		.4byte	0x143b
 28106 1434 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 605


 28107 1435 18010000 		.4byte	0x118
 28108 1439 0F       		.byte	0xf
 28109 143a 00       		.byte	0
 28110 143b 09       		.uleb128 0x9
 28111 143c F9000000 		.4byte	0xf9
 28112 1440 4B140000 		.4byte	0x144b
 28113 1444 0A       		.uleb128 0xa
 28114 1445 18010000 		.4byte	0x118
 28115 1449 29       		.byte	0x29
 28116 144a 00       		.byte	0
 28117 144b 26       		.uleb128 0x26
 28118 144c 9A020000 		.4byte	.LASF291
 28119 1450 01       		.byte	0x1
 28120 1451 D306     		.2byte	0x6d3
 28121 1453 00000000 		.4byte	.LFB71
 28122 1457 84000000 		.4byte	.LFE71-.LFB71
 28123 145b 01       		.uleb128 0x1
 28124 145c 9C       		.byte	0x9c
 28125 145d 7C140000 		.4byte	0x147c
 28126 1461 25       		.uleb128 0x25
 28127 1462 6900     		.ascii	"i\000"
 28128 1464 01       		.byte	0x1
 28129 1465 D506     		.2byte	0x6d5
 28130 1467 97000000 		.4byte	0x97
 28131 146b 02       		.uleb128 0x2
 28132 146c 91       		.byte	0x91
 28133 146d 6F       		.sleb128 -17
 28134 146e 25       		.uleb128 0x25
 28135 146f 6A00     		.ascii	"j\000"
 28136 1471 01       		.byte	0x1
 28137 1472 D506     		.2byte	0x6d5
 28138 1474 97000000 		.4byte	0x97
 28139 1478 02       		.uleb128 0x2
 28140 1479 91       		.byte	0x91
 28141 147a 6E       		.sleb128 -18
 28142 147b 00       		.byte	0
 28143 147c 21       		.uleb128 0x21
 28144 147d D3000000 		.4byte	.LASF261
 28145 1481 01       		.byte	0x1
 28146 1482 E606     		.2byte	0x6e6
 28147 1484 00000000 		.4byte	.LFB72
 28148 1488 541F0000 		.4byte	.LFE72-.LFB72
 28149 148c 01       		.uleb128 0x1
 28150 148d 9C       		.byte	0x9c
 28151 148e 35150000 		.4byte	0x1535
 28152 1492 24       		.uleb128 0x24
 28153 1493 880C0000 		.4byte	.LASF262
 28154 1497 01       		.byte	0x1
 28155 1498 E606     		.2byte	0x6e6
 28156 149a 1F010000 		.4byte	0x11f
 28157 149e 03       		.uleb128 0x3
 28158 149f 91       		.byte	0x91
 28159 14a0 D47E     		.sleb128 -172
 28160 14a2 25       		.uleb128 0x25
 28161 14a3 6900     		.ascii	"i\000"
 28162 14a5 01       		.byte	0x1
 28163 14a6 E806     		.2byte	0x6e8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 606


 28164 14a8 73000000 		.4byte	0x73
 28165 14ac 02       		.uleb128 0x2
 28166 14ad 91       		.byte	0x91
 28167 14ae 54       		.sleb128 -44
 28168 14af 22       		.uleb128 0x22
 28169 14b0 D2020000 		.4byte	.LASF232
 28170 14b4 01       		.byte	0x1
 28171 14b5 EA06     		.2byte	0x6ea
 28172 14b7 43110000 		.4byte	0x1143
 28173 14bb 02       		.uleb128 0x2
 28174 14bc 91       		.byte	0x91
 28175 14bd 48       		.sleb128 -56
 28176 14be 1E       		.uleb128 0x1e
 28177 14bf 1C000000 		.4byte	.LBB16
 28178 14c3 D01E0000 		.4byte	.LBE16-.LBB16
 28179 14c7 25       		.uleb128 0x25
 28180 14c8 73747200 		.ascii	"str\000"
 28181 14cc 01       		.byte	0x1
 28182 14cd ED06     		.2byte	0x6ed
 28183 14cf 35150000 		.4byte	0x1535
 28184 14d3 03       		.uleb128 0x3
 28185 14d4 91       		.byte	0x91
 28186 14d5 D87E     		.sleb128 -168
 28187 14d7 25       		.uleb128 0x25
 28188 14d8 6A00     		.ascii	"j\000"
 28189 14da 01       		.byte	0x1
 28190 14db 8608     		.2byte	0x886
 28191 14dd 73000000 		.4byte	0x73
 28192 14e1 02       		.uleb128 0x2
 28193 14e2 91       		.byte	0x91
 28194 14e3 4C       		.sleb128 -52
 28195 14e4 1E       		.uleb128 0x1e
 28196 14e5 A0020000 		.4byte	.LBB17
 28197 14e9 42130000 		.4byte	.LBE17-.LBB17
 28198 14ed 25       		.uleb128 0x25
 28199 14ee 6B00     		.ascii	"k\000"
 28200 14f0 01       		.byte	0x1
 28201 14f1 1B07     		.2byte	0x71b
 28202 14f3 97000000 		.4byte	0x97
 28203 14f7 02       		.uleb128 0x2
 28204 14f8 91       		.byte	0x91
 28205 14f9 53       		.sleb128 -45
 28206 14fa 1E       		.uleb128 0x1e
 28207 14fb AA020000 		.4byte	.LBB18
 28208 14ff 1C130000 		.4byte	.LBE18-.LBB18
 28209 1503 22       		.uleb128 0x22
 28210 1504 690C0000 		.4byte	.LASF225
 28211 1508 01       		.byte	0x1
 28212 1509 1D07     		.2byte	0x71d
 28213 150b 97000000 		.4byte	0x97
 28214 150f 02       		.uleb128 0x2
 28215 1510 91       		.byte	0x91
 28216 1511 47       		.sleb128 -57
 28217 1512 25       		.uleb128 0x25
 28218 1513 4D4F5400 		.ascii	"MOT\000"
 28219 1517 01       		.byte	0x1
 28220 1518 1E07     		.2byte	0x71e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 607


 28221 151a 45150000 		.4byte	0x1545
 28222 151e 02       		.uleb128 0x2
 28223 151f 91       		.byte	0x91
 28224 1520 40       		.sleb128 -64
 28225 1521 22       		.uleb128 0x22
 28226 1522 0A120000 		.4byte	.LASF263
 28227 1526 01       		.byte	0x1
 28228 1527 1F07     		.2byte	0x71f
 28229 1529 97000000 		.4byte	0x97
 28230 152d 03       		.uleb128 0x3
 28231 152e 91       		.byte	0x91
 28232 152f BF7F     		.sleb128 -65
 28233 1531 00       		.byte	0
 28234 1532 00       		.byte	0
 28235 1533 00       		.byte	0
 28236 1534 00       		.byte	0
 28237 1535 09       		.uleb128 0x9
 28238 1536 F9000000 		.4byte	0xf9
 28239 153a 45150000 		.4byte	0x1545
 28240 153e 0A       		.uleb128 0xa
 28241 153f 18010000 		.4byte	0x118
 28242 1543 63       		.byte	0x63
 28243 1544 00       		.byte	0
 28244 1545 07       		.uleb128 0x7
 28245 1546 04       		.byte	0x4
 28246 1547 B1050000 		.4byte	0x5b1
 28247 154b 21       		.uleb128 0x21
 28248 154c 840D0000 		.4byte	.LASF264
 28249 1550 01       		.byte	0x1
 28250 1551 B008     		.2byte	0x8b0
 28251 1553 00000000 		.4byte	.LFB73
 28252 1557 B4030000 		.4byte	.LFE73-.LFB73
 28253 155b 01       		.uleb128 0x1
 28254 155c 9C       		.byte	0x9c
 28255 155d CB150000 		.4byte	0x15cb
 28256 1561 24       		.uleb128 0x24
 28257 1562 880C0000 		.4byte	.LASF262
 28258 1566 01       		.byte	0x1
 28259 1567 B008     		.2byte	0x8b0
 28260 1569 1F010000 		.4byte	0x11f
 28261 156d 03       		.uleb128 0x3
 28262 156e 91       		.byte	0x91
 28263 156f EC7E     		.sleb128 -148
 28264 1571 25       		.uleb128 0x25
 28265 1572 73747200 		.ascii	"str\000"
 28266 1576 01       		.byte	0x1
 28267 1577 B208     		.2byte	0x8b2
 28268 1579 35150000 		.4byte	0x1535
 28269 157d 03       		.uleb128 0x3
 28270 157e 91       		.byte	0x91
 28271 157f F07E     		.sleb128 -144
 28272 1581 25       		.uleb128 0x25
 28273 1582 6900     		.ascii	"i\000"
 28274 1584 01       		.byte	0x1
 28275 1585 B308     		.2byte	0x8b3
 28276 1587 73000000 		.4byte	0x73
 28277 158b 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 608


 28278 158c 91       		.byte	0x91
 28279 158d 64       		.sleb128 -28
 28280 158e 22       		.uleb128 0x22
 28281 158f C7030000 		.4byte	.LASF265
 28282 1593 01       		.byte	0x1
 28283 1594 B408     		.2byte	0x8b4
 28284 1596 73000000 		.4byte	0x73
 28285 159a 02       		.uleb128 0x2
 28286 159b 91       		.byte	0x91
 28287 159c 54       		.sleb128 -44
 28288 159d 22       		.uleb128 0x22
 28289 159e D2020000 		.4byte	.LASF232
 28290 15a2 01       		.byte	0x1
 28291 15a3 B608     		.2byte	0x8b6
 28292 15a5 43110000 		.4byte	0x1143
 28293 15a9 02       		.uleb128 0x2
 28294 15aa 91       		.byte	0x91
 28295 15ab 60       		.sleb128 -32
 28296 15ac 25       		.uleb128 0x25
 28297 15ad 4D4F5400 		.ascii	"MOT\000"
 28298 15b1 01       		.byte	0x1
 28299 15b2 B708     		.2byte	0x8b7
 28300 15b4 45150000 		.4byte	0x1545
 28301 15b8 02       		.uleb128 0x2
 28302 15b9 91       		.byte	0x91
 28303 15ba 5C       		.sleb128 -36
 28304 15bb 22       		.uleb128 0x22
 28305 15bc 0A120000 		.4byte	.LASF263
 28306 15c0 01       		.byte	0x1
 28307 15c1 B808     		.2byte	0x8b8
 28308 15c3 97000000 		.4byte	0x97
 28309 15c7 02       		.uleb128 0x2
 28310 15c8 91       		.byte	0x91
 28311 15c9 5B       		.sleb128 -37
 28312 15ca 00       		.byte	0
 28313 15cb 21       		.uleb128 0x21
 28314 15cc E50D0000 		.4byte	.LASF266
 28315 15d0 01       		.byte	0x1
 28316 15d1 F208     		.2byte	0x8f2
 28317 15d3 00000000 		.4byte	.LFB74
 28318 15d7 3C120000 		.4byte	.LFE74-.LFB74
 28319 15db 01       		.uleb128 0x1
 28320 15dc 9C       		.byte	0x9c
 28321 15dd 6C160000 		.4byte	0x166c
 28322 15e1 24       		.uleb128 0x24
 28323 15e2 880C0000 		.4byte	.LASF262
 28324 15e6 01       		.byte	0x1
 28325 15e7 F208     		.2byte	0x8f2
 28326 15e9 1F010000 		.4byte	0x11f
 28327 15ed 03       		.uleb128 0x3
 28328 15ee 91       		.byte	0x91
 28329 15ef D47E     		.sleb128 -172
 28330 15f1 25       		.uleb128 0x25
 28331 15f2 73747200 		.ascii	"str\000"
 28332 15f6 01       		.byte	0x1
 28333 15f7 F408     		.2byte	0x8f4
 28334 15f9 35150000 		.4byte	0x1535
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 609


 28335 15fd 03       		.uleb128 0x3
 28336 15fe 91       		.byte	0x91
 28337 15ff DC7E     		.sleb128 -164
 28338 1601 25       		.uleb128 0x25
 28339 1602 6900     		.ascii	"i\000"
 28340 1604 01       		.byte	0x1
 28341 1605 F508     		.2byte	0x8f5
 28342 1607 73000000 		.4byte	0x73
 28343 160b 02       		.uleb128 0x2
 28344 160c 91       		.byte	0x91
 28345 160d 54       		.sleb128 -44
 28346 160e 22       		.uleb128 0x22
 28347 160f D2020000 		.4byte	.LASF232
 28348 1613 01       		.byte	0x1
 28349 1614 F908     		.2byte	0x8f9
 28350 1616 43110000 		.4byte	0x1143
 28351 161a 02       		.uleb128 0x2
 28352 161b 91       		.byte	0x91
 28353 161c 4C       		.sleb128 -52
 28354 161d 1E       		.uleb128 0x1e
 28355 161e 08010000 		.4byte	.LBB19
 28356 1622 940C0000 		.4byte	.LBE19-.LBB19
 28357 1626 25       		.uleb128 0x25
 28358 1627 6B00     		.ascii	"k\000"
 28359 1629 01       		.byte	0x1
 28360 162a 0E09     		.2byte	0x90e
 28361 162c 97000000 		.4byte	0x97
 28362 1630 02       		.uleb128 0x2
 28363 1631 91       		.byte	0x91
 28364 1632 53       		.sleb128 -45
 28365 1633 1E       		.uleb128 0x1e
 28366 1634 12010000 		.4byte	.LBB20
 28367 1638 6E0C0000 		.4byte	.LBE20-.LBB20
 28368 163c 22       		.uleb128 0x22
 28369 163d 690C0000 		.4byte	.LASF225
 28370 1641 01       		.byte	0x1
 28371 1642 1009     		.2byte	0x910
 28372 1644 97000000 		.4byte	0x97
 28373 1648 02       		.uleb128 0x2
 28374 1649 91       		.byte	0x91
 28375 164a 4B       		.sleb128 -53
 28376 164b 25       		.uleb128 0x25
 28377 164c 4D4F5400 		.ascii	"MOT\000"
 28378 1650 01       		.byte	0x1
 28379 1651 1109     		.2byte	0x911
 28380 1653 45150000 		.4byte	0x1545
 28381 1657 02       		.uleb128 0x2
 28382 1658 91       		.byte	0x91
 28383 1659 44       		.sleb128 -60
 28384 165a 22       		.uleb128 0x22
 28385 165b 0A120000 		.4byte	.LASF263
 28386 165f 01       		.byte	0x1
 28387 1660 1209     		.2byte	0x912
 28388 1662 97000000 		.4byte	0x97
 28389 1666 02       		.uleb128 0x2
 28390 1667 91       		.byte	0x91
 28391 1668 43       		.sleb128 -61
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 610


 28392 1669 00       		.byte	0
 28393 166a 00       		.byte	0
 28394 166b 00       		.byte	0
 28395 166c 21       		.uleb128 0x21
 28396 166d 470A0000 		.4byte	.LASF267
 28397 1671 01       		.byte	0x1
 28398 1672 F609     		.2byte	0x9f6
 28399 1674 00000000 		.4byte	.LFB75
 28400 1678 C8000000 		.4byte	.LFE75-.LFB75
 28401 167c 01       		.uleb128 0x1
 28402 167d 9C       		.byte	0x9c
 28403 167e B0160000 		.4byte	0x16b0
 28404 1682 24       		.uleb128 0x24
 28405 1683 880C0000 		.4byte	.LASF262
 28406 1687 01       		.byte	0x1
 28407 1688 F609     		.2byte	0x9f6
 28408 168a 1F010000 		.4byte	0x11f
 28409 168e 03       		.uleb128 0x3
 28410 168f 91       		.byte	0x91
 28411 1690 847F     		.sleb128 -124
 28412 1692 25       		.uleb128 0x25
 28413 1693 73747200 		.ascii	"str\000"
 28414 1697 01       		.byte	0x1
 28415 1698 F809     		.2byte	0x9f8
 28416 169a 35150000 		.4byte	0x1535
 28417 169e 03       		.uleb128 0x3
 28418 169f 91       		.byte	0x91
 28419 16a0 887F     		.sleb128 -120
 28420 16a2 25       		.uleb128 0x25
 28421 16a3 6900     		.ascii	"i\000"
 28422 16a5 01       		.byte	0x1
 28423 16a6 F909     		.2byte	0x9f9
 28424 16a8 73000000 		.4byte	0x73
 28425 16ac 02       		.uleb128 0x2
 28426 16ad 91       		.byte	0x91
 28427 16ae 6C       		.sleb128 -20
 28428 16af 00       		.byte	0
 28429 16b0 21       		.uleb128 0x21
 28430 16b1 940C0000 		.4byte	.LASF268
 28431 16b5 01       		.byte	0x1
 28432 16b6 0D0A     		.2byte	0xa0d
 28433 16b8 00000000 		.4byte	.LFB76
 28434 16bc 30010000 		.4byte	.LFE76-.LFB76
 28435 16c0 01       		.uleb128 0x1
 28436 16c1 9C       		.byte	0x9c
 28437 16c2 F4160000 		.4byte	0x16f4
 28438 16c6 24       		.uleb128 0x24
 28439 16c7 880C0000 		.4byte	.LASF262
 28440 16cb 01       		.byte	0x1
 28441 16cc 0D0A     		.2byte	0xa0d
 28442 16ce 1F010000 		.4byte	0x11f
 28443 16d2 03       		.uleb128 0x3
 28444 16d3 91       		.byte	0x91
 28445 16d4 847F     		.sleb128 -124
 28446 16d6 25       		.uleb128 0x25
 28447 16d7 73747200 		.ascii	"str\000"
 28448 16db 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 611


 28449 16dc 0F0A     		.2byte	0xa0f
 28450 16de 35150000 		.4byte	0x1535
 28451 16e2 03       		.uleb128 0x3
 28452 16e3 91       		.byte	0x91
 28453 16e4 887F     		.sleb128 -120
 28454 16e6 25       		.uleb128 0x25
 28455 16e7 6900     		.ascii	"i\000"
 28456 16e9 01       		.byte	0x1
 28457 16ea 100A     		.2byte	0xa10
 28458 16ec 73000000 		.4byte	0x73
 28459 16f0 02       		.uleb128 0x2
 28460 16f1 91       		.byte	0x91
 28461 16f2 6C       		.sleb128 -20
 28462 16f3 00       		.byte	0
 28463 16f4 21       		.uleb128 0x21
 28464 16f5 13130000 		.4byte	.LASF269
 28465 16f9 01       		.byte	0x1
 28466 16fa 340A     		.2byte	0xa34
 28467 16fc 00000000 		.4byte	.LFB77
 28468 1700 74030000 		.4byte	.LFE77-.LFB77
 28469 1704 01       		.uleb128 0x1
 28470 1705 9C       		.byte	0x9c
 28471 1706 38170000 		.4byte	0x1738
 28472 170a 24       		.uleb128 0x24
 28473 170b 880C0000 		.4byte	.LASF262
 28474 170f 01       		.byte	0x1
 28475 1710 340A     		.2byte	0xa34
 28476 1712 1F010000 		.4byte	0x11f
 28477 1716 03       		.uleb128 0x3
 28478 1717 91       		.byte	0x91
 28479 1718 AC7D     		.sleb128 -340
 28480 171a 25       		.uleb128 0x25
 28481 171b 73747200 		.ascii	"str\000"
 28482 171f 01       		.byte	0x1
 28483 1720 360A     		.2byte	0xa36
 28484 1722 38170000 		.4byte	0x1738
 28485 1726 03       		.uleb128 0x3
 28486 1727 91       		.byte	0x91
 28487 1728 B07D     		.sleb128 -336
 28488 172a 25       		.uleb128 0x25
 28489 172b 6900     		.ascii	"i\000"
 28490 172d 01       		.byte	0x1
 28491 172e 370A     		.2byte	0xa37
 28492 1730 73000000 		.4byte	0x73
 28493 1734 02       		.uleb128 0x2
 28494 1735 91       		.byte	0x91
 28495 1736 5C       		.sleb128 -36
 28496 1737 00       		.byte	0
 28497 1738 09       		.uleb128 0x9
 28498 1739 F9000000 		.4byte	0xf9
 28499 173d 49170000 		.4byte	0x1749
 28500 1741 23       		.uleb128 0x23
 28501 1742 18010000 		.4byte	0x118
 28502 1746 2B01     		.2byte	0x12b
 28503 1748 00       		.byte	0
 28504 1749 21       		.uleb128 0x21
 28505 174a AF0D0000 		.4byte	.LASF270
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 612


 28506 174e 01       		.byte	0x1
 28507 174f 5F0A     		.2byte	0xa5f
 28508 1751 00000000 		.4byte	.LFB78
 28509 1755 84000000 		.4byte	.LFE78-.LFB78
 28510 1759 01       		.uleb128 0x1
 28511 175a 9C       		.byte	0x9c
 28512 175b 9C170000 		.4byte	0x179c
 28513 175f 24       		.uleb128 0x24
 28514 1760 76050000 		.4byte	.LASF215
 28515 1764 01       		.byte	0x1
 28516 1765 5F0A     		.2byte	0xa5f
 28517 1767 480F0000 		.4byte	0xf48
 28518 176b 02       		.uleb128 0x2
 28519 176c 91       		.byte	0x91
 28520 176d 6C       		.sleb128 -20
 28521 176e 24       		.uleb128 0x24
 28522 176f C5000000 		.4byte	.LASF216
 28523 1773 01       		.byte	0x1
 28524 1774 5F0A     		.2byte	0xa5f
 28525 1776 A3000000 		.4byte	0xa3
 28526 177a 02       		.uleb128 0x2
 28527 177b 91       		.byte	0x91
 28528 177c 6A       		.sleb128 -22
 28529 177d 24       		.uleb128 0x24
 28530 177e 170E0000 		.4byte	.LASF271
 28531 1782 01       		.byte	0x1
 28532 1783 5F0A     		.2byte	0xa5f
 28533 1785 97000000 		.4byte	0x97
 28534 1789 02       		.uleb128 0x2
 28535 178a 91       		.byte	0x91
 28536 178b 69       		.sleb128 -23
 28537 178c 22       		.uleb128 0x22
 28538 178d 62060000 		.4byte	.LASF230
 28539 1791 01       		.byte	0x1
 28540 1792 610A     		.2byte	0xa61
 28541 1794 A3000000 		.4byte	0xa3
 28542 1798 02       		.uleb128 0x2
 28543 1799 91       		.byte	0x91
 28544 179a 76       		.sleb128 -10
 28545 179b 00       		.byte	0
 28546 179c 21       		.uleb128 0x21
 28547 179d 91050000 		.4byte	.LASF272
 28548 17a1 01       		.byte	0x1
 28549 17a2 7B0A     		.2byte	0xa7b
 28550 17a4 00000000 		.4byte	.LFB79
 28551 17a8 88000000 		.4byte	.LFE79-.LFB79
 28552 17ac 01       		.uleb128 0x1
 28553 17ad 9C       		.byte	0x9c
 28554 17ae E0170000 		.4byte	0x17e0
 28555 17b2 24       		.uleb128 0x24
 28556 17b3 76050000 		.4byte	.LASF215
 28557 17b7 01       		.byte	0x1
 28558 17b8 7B0A     		.2byte	0xa7b
 28559 17ba 480F0000 		.4byte	0xf48
 28560 17be 02       		.uleb128 0x2
 28561 17bf 91       		.byte	0x91
 28562 17c0 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 613


 28563 17c1 24       		.uleb128 0x24
 28564 17c2 C5000000 		.4byte	.LASF216
 28565 17c6 01       		.byte	0x1
 28566 17c7 7B0A     		.2byte	0xa7b
 28567 17c9 A3000000 		.4byte	0xa3
 28568 17cd 02       		.uleb128 0x2
 28569 17ce 91       		.byte	0x91
 28570 17cf 6A       		.sleb128 -22
 28571 17d0 22       		.uleb128 0x22
 28572 17d1 62060000 		.4byte	.LASF230
 28573 17d5 01       		.byte	0x1
 28574 17d6 7D0A     		.2byte	0xa7d
 28575 17d8 A3000000 		.4byte	0xa3
 28576 17dc 02       		.uleb128 0x2
 28577 17dd 91       		.byte	0x91
 28578 17de 76       		.sleb128 -10
 28579 17df 00       		.byte	0
 28580 17e0 21       		.uleb128 0x21
 28581 17e1 B20A0000 		.4byte	.LASF273
 28582 17e5 01       		.byte	0x1
 28583 17e6 970A     		.2byte	0xa97
 28584 17e8 00000000 		.4byte	.LFB80
 28585 17ec A0000000 		.4byte	.LFE80-.LFB80
 28586 17f0 01       		.uleb128 0x1
 28587 17f1 9C       		.byte	0x9c
 28588 17f2 33180000 		.4byte	0x1833
 28589 17f6 24       		.uleb128 0x24
 28590 17f7 76050000 		.4byte	.LASF215
 28591 17fb 01       		.byte	0x1
 28592 17fc 970A     		.2byte	0xa97
 28593 17fe 480F0000 		.4byte	0xf48
 28594 1802 02       		.uleb128 0x2
 28595 1803 91       		.byte	0x91
 28596 1804 74       		.sleb128 -12
 28597 1805 24       		.uleb128 0x24
 28598 1806 C5000000 		.4byte	.LASF216
 28599 180a 01       		.byte	0x1
 28600 180b 970A     		.2byte	0xa97
 28601 180d A3000000 		.4byte	0xa3
 28602 1811 02       		.uleb128 0x2
 28603 1812 91       		.byte	0x91
 28604 1813 72       		.sleb128 -14
 28605 1814 27       		.uleb128 0x27
 28606 1815 696400   		.ascii	"id\000"
 28607 1818 01       		.byte	0x1
 28608 1819 970A     		.2byte	0xa97
 28609 181b 97000000 		.4byte	0x97
 28610 181f 02       		.uleb128 0x2
 28611 1820 91       		.byte	0x91
 28612 1821 71       		.sleb128 -15
 28613 1822 25       		.uleb128 0x25
 28614 1823 6900     		.ascii	"i\000"
 28615 1825 01       		.byte	0x1
 28616 1826 990A     		.2byte	0xa99
 28617 1828 A3000000 		.4byte	0xa3
 28618 182c 05       		.uleb128 0x5
 28619 182d 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 614


 28620 182e 00000000 		.4byte	i.11155
 28621 1832 00       		.byte	0
 28622 1833 28       		.uleb128 0x28
 28623 1834 C5110000 		.4byte	.LASF279
 28624 1838 01       		.byte	0x1
 28625 1839 B50A     		.2byte	0xab5
 28626 183b 97000000 		.4byte	0x97
 28627 183f 00000000 		.4byte	.LFB81
 28628 1843 3E000000 		.4byte	.LFE81-.LFB81
 28629 1847 01       		.uleb128 0x1
 28630 1848 9C       		.byte	0x9c
 28631 1849 88180000 		.4byte	0x1888
 28632 184d 24       		.uleb128 0x24
 28633 184e 0D0A0000 		.4byte	.LASF274
 28634 1852 01       		.byte	0x1
 28635 1853 B50A     		.2byte	0xab5
 28636 1855 480F0000 		.4byte	0xf48
 28637 1859 02       		.uleb128 0x2
 28638 185a 91       		.byte	0x91
 28639 185b 6C       		.sleb128 -20
 28640 185c 24       		.uleb128 0x24
 28641 185d 4B050000 		.4byte	.LASF275
 28642 1861 01       		.byte	0x1
 28643 1862 B50A     		.2byte	0xab5
 28644 1864 97000000 		.4byte	0x97
 28645 1868 02       		.uleb128 0x2
 28646 1869 91       		.byte	0x91
 28647 186a 6B       		.sleb128 -21
 28648 186b 25       		.uleb128 0x25
 28649 186c 6900     		.ascii	"i\000"
 28650 186e 01       		.byte	0x1
 28651 186f B70A     		.2byte	0xab7
 28652 1871 97000000 		.4byte	0x97
 28653 1875 02       		.uleb128 0x2
 28654 1876 91       		.byte	0x91
 28655 1877 77       		.sleb128 -9
 28656 1878 22       		.uleb128 0x22
 28657 1879 E80B0000 		.4byte	.LASF276
 28658 187d 01       		.byte	0x1
 28659 187e B80A     		.2byte	0xab8
 28660 1880 97000000 		.4byte	0x97
 28661 1884 02       		.uleb128 0x2
 28662 1885 91       		.byte	0x91
 28663 1886 76       		.sleb128 -10
 28664 1887 00       		.byte	0
 28665 1888 21       		.uleb128 0x21
 28666 1889 340A0000 		.4byte	.LASF277
 28667 188d 01       		.byte	0x1
 28668 188e C50A     		.2byte	0xac5
 28669 1890 00000000 		.4byte	.LFB82
 28670 1894 2E000000 		.4byte	.LFE82-.LFB82
 28671 1898 01       		.uleb128 0x1
 28672 1899 9C       		.byte	0x9c
 28673 189a CC180000 		.4byte	0x18cc
 28674 189e 24       		.uleb128 0x24
 28675 189f 9A040000 		.4byte	.LASF278
 28676 18a3 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 615


 28677 18a4 C50A     		.2byte	0xac5
 28678 18a6 97000000 		.4byte	0x97
 28679 18aa 02       		.uleb128 0x2
 28680 18ab 91       		.byte	0x91
 28681 18ac 6F       		.sleb128 -17
 28682 18ad 22       		.uleb128 0x22
 28683 18ae C5000000 		.4byte	.LASF216
 28684 18b2 01       		.byte	0x1
 28685 18b3 C60A     		.2byte	0xac6
 28686 18b5 73000000 		.4byte	0x73
 28687 18b9 02       		.uleb128 0x2
 28688 18ba 91       		.byte	0x91
 28689 18bb 74       		.sleb128 -12
 28690 18bc 22       		.uleb128 0x22
 28691 18bd 76050000 		.4byte	.LASF215
 28692 18c1 01       		.byte	0x1
 28693 18c2 C70A     		.2byte	0xac7
 28694 18c4 5D080000 		.4byte	0x85d
 28695 18c8 02       		.uleb128 0x2
 28696 18c9 91       		.byte	0x91
 28697 18ca 70       		.sleb128 -16
 28698 18cb 00       		.byte	0
 28699 18cc 29       		.uleb128 0x29
 28700 18cd 7B030000 		.4byte	.LASF280
 28701 18d1 01       		.byte	0x1
 28702 18d2 D40A     		.2byte	0xad4
 28703 18d4 97000000 		.4byte	0x97
 28704 18d8 00000000 		.4byte	.LFB83
 28705 18dc 98000000 		.4byte	.LFE83-.LFB83
 28706 18e0 01       		.uleb128 0x1
 28707 18e1 9C       		.byte	0x9c
 28708 18e2 30190000 		.4byte	0x1930
 28709 18e6 24       		.uleb128 0x24
 28710 18e7 3E050000 		.4byte	.LASF281
 28711 18eb 01       		.byte	0x1
 28712 18ec D40A     		.2byte	0xad4
 28713 18ee 73000000 		.4byte	0x73
 28714 18f2 02       		.uleb128 0x2
 28715 18f3 91       		.byte	0x91
 28716 18f4 64       		.sleb128 -28
 28717 18f5 25       		.uleb128 0x25
 28718 18f6 6900     		.ascii	"i\000"
 28719 18f8 01       		.byte	0x1
 28720 18f9 D60A     		.2byte	0xad6
 28721 18fb 73000000 		.4byte	0x73
 28722 18ff 02       		.uleb128 0x2
 28723 1900 91       		.byte	0x91
 28724 1901 74       		.sleb128 -12
 28725 1902 22       		.uleb128 0x22
 28726 1903 75000000 		.4byte	.LASF282
 28727 1907 01       		.byte	0x1
 28728 1908 D70A     		.2byte	0xad7
 28729 190a 97000000 		.4byte	0x97
 28730 190e 02       		.uleb128 0x2
 28731 190f 91       		.byte	0x91
 28732 1910 6B       		.sleb128 -21
 28733 1911 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 616


 28734 1912 AD050000 		.4byte	.LASF283
 28735 1916 01       		.byte	0x1
 28736 1917 D80A     		.2byte	0xad8
 28737 1919 73000000 		.4byte	0x73
 28738 191d 02       		.uleb128 0x2
 28739 191e 91       		.byte	0x91
 28740 191f 6C       		.sleb128 -20
 28741 1920 22       		.uleb128 0x22
 28742 1921 D2040000 		.4byte	.LASF284
 28743 1925 01       		.byte	0x1
 28744 1926 D90A     		.2byte	0xad9
 28745 1928 97000000 		.4byte	0x97
 28746 192c 02       		.uleb128 0x2
 28747 192d 91       		.byte	0x91
 28748 192e 73       		.sleb128 -13
 28749 192f 00       		.byte	0
 28750 1930 21       		.uleb128 0x21
 28751 1931 230D0000 		.4byte	.LASF285
 28752 1935 01       		.byte	0x1
 28753 1936 FE0A     		.2byte	0xafe
 28754 1938 00000000 		.4byte	.LFB84
 28755 193c 80000000 		.4byte	.LFE84-.LFB84
 28756 1940 01       		.uleb128 0x1
 28757 1941 9C       		.byte	0x9c
 28758 1942 54190000 		.4byte	0x1954
 28759 1946 25       		.uleb128 0x25
 28760 1947 6900     		.ascii	"i\000"
 28761 1949 01       		.byte	0x1
 28762 194a 000B     		.2byte	0xb00
 28763 194c A3000000 		.4byte	0xa3
 28764 1950 02       		.uleb128 0x2
 28765 1951 91       		.byte	0x91
 28766 1952 76       		.sleb128 -10
 28767 1953 00       		.byte	0
 28768 1954 29       		.uleb128 0x29
 28769 1955 730C0000 		.4byte	.LASF286
 28770 1959 01       		.byte	0x1
 28771 195a 170B     		.2byte	0xb17
 28772 195c 97000000 		.4byte	0x97
 28773 1960 00000000 		.4byte	.LFB85
 28774 1964 5C000000 		.4byte	.LFE85-.LFB85
 28775 1968 01       		.uleb128 0x1
 28776 1969 9C       		.byte	0x9c
 28777 196a 7C190000 		.4byte	0x197c
 28778 196e 25       		.uleb128 0x25
 28779 196f 6900     		.ascii	"i\000"
 28780 1971 01       		.byte	0x1
 28781 1972 180B     		.2byte	0xb18
 28782 1974 A3000000 		.4byte	0xa3
 28783 1978 02       		.uleb128 0x2
 28784 1979 91       		.byte	0x91
 28785 197a 76       		.sleb128 -10
 28786 197b 00       		.byte	0
 28787 197c 29       		.uleb128 0x29
 28788 197d B3050000 		.4byte	.LASF287
 28789 1981 01       		.byte	0x1
 28790 1982 2A0B     		.2byte	0xb2a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 617


 28791 1984 97000000 		.4byte	0x97
 28792 1988 00000000 		.4byte	.LFB86
 28793 198c E4050000 		.4byte	.LFE86-.LFB86
 28794 1990 01       		.uleb128 0x1
 28795 1991 9C       		.byte	0x9c
 28796 1992 B1190000 		.4byte	0x19b1
 28797 1996 25       		.uleb128 0x25
 28798 1997 6900     		.ascii	"i\000"
 28799 1999 01       		.byte	0x1
 28800 199a 2C0B     		.2byte	0xb2c
 28801 199c 97000000 		.4byte	0x97
 28802 19a0 02       		.uleb128 0x2
 28803 19a1 91       		.byte	0x91
 28804 19a2 77       		.sleb128 -9
 28805 19a3 25       		.uleb128 0x25
 28806 19a4 6A00     		.ascii	"j\000"
 28807 19a6 01       		.byte	0x1
 28808 19a7 2C0B     		.2byte	0xb2c
 28809 19a9 97000000 		.4byte	0x97
 28810 19ad 02       		.uleb128 0x2
 28811 19ae 91       		.byte	0x91
 28812 19af 76       		.sleb128 -10
 28813 19b0 00       		.byte	0
 28814 19b1 2A       		.uleb128 0x2a
 28815 19b2 F3070000 		.4byte	.LASF288
 28816 19b6 01       		.byte	0x1
 28817 19b7 BD0B     		.2byte	0xbbd
 28818 19b9 00000000 		.4byte	.LFB87
 28819 19bd 38020000 		.4byte	.LFE87-.LFB87
 28820 19c1 01       		.uleb128 0x1
 28821 19c2 9C       		.byte	0x9c
 28822 19c3 EE190000 		.4byte	0x19ee
 28823 19c7 22       		.uleb128 0x22
 28824 19c8 690C0000 		.4byte	.LASF225
 28825 19cc 01       		.byte	0x1
 28826 19cd BF0B     		.2byte	0xbbf
 28827 19cf 97000000 		.4byte	0x97
 28828 19d3 02       		.uleb128 0x2
 28829 19d4 91       		.byte	0x91
 28830 19d5 73       		.sleb128 -13
 28831 19d6 1E       		.uleb128 0x1e
 28832 19d7 FA000000 		.4byte	.LBB21
 28833 19db 6A000000 		.4byte	.LBE21-.LBB21
 28834 19df 25       		.uleb128 0x25
 28835 19e0 6900     		.ascii	"i\000"
 28836 19e2 01       		.byte	0x1
 28837 19e3 D00B     		.2byte	0xbd0
 28838 19e5 73000000 		.4byte	0x73
 28839 19e9 02       		.uleb128 0x2
 28840 19ea 91       		.byte	0x91
 28841 19eb 74       		.sleb128 -12
 28842 19ec 00       		.byte	0
 28843 19ed 00       		.byte	0
 28844 19ee 2B       		.uleb128 0x2b
 28845 19ef 250A0000 		.4byte	.LASF289
 28846 19f3 01       		.byte	0x1
 28847 19f4 EF0B     		.2byte	0xbef
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 618


 28848 19f6 00000000 		.4byte	.LFB88
 28849 19fa 28000000 		.4byte	.LFE88-.LFB88
 28850 19fe 01       		.uleb128 0x1
 28851 19ff 9C       		.byte	0x9c
 28852 1a00 2B       		.uleb128 0x2b
 28853 1a01 620F0000 		.4byte	.LASF290
 28854 1a05 01       		.byte	0x1
 28855 1a06 FB0B     		.2byte	0xbfb
 28856 1a08 00000000 		.4byte	.LFB89
 28857 1a0c 78000000 		.4byte	.LFE89-.LFB89
 28858 1a10 01       		.uleb128 0x1
 28859 1a11 9C       		.byte	0x9c
 28860 1a12 26       		.uleb128 0x26
 28861 1a13 E1050000 		.4byte	.LASF292
 28862 1a17 01       		.byte	0x1
 28863 1a18 150C     		.2byte	0xc15
 28864 1a1a 00000000 		.4byte	.LFB90
 28865 1a1e B4000000 		.4byte	.LFE90-.LFB90
 28866 1a22 01       		.uleb128 0x1
 28867 1a23 9C       		.byte	0x9c
 28868 1a24 561A0000 		.4byte	0x1a56
 28869 1a28 22       		.uleb128 0x22
 28870 1a29 62060000 		.4byte	.LASF230
 28871 1a2d 01       		.byte	0x1
 28872 1a2e 170C     		.2byte	0xc17
 28873 1a30 97000000 		.4byte	0x97
 28874 1a34 02       		.uleb128 0x2
 28875 1a35 91       		.byte	0x91
 28876 1a36 6F       		.sleb128 -17
 28877 1a37 22       		.uleb128 0x22
 28878 1a38 13100000 		.4byte	.LASF221
 28879 1a3c 01       		.byte	0x1
 28880 1a3d 180C     		.2byte	0xc18
 28881 1a3f C7000000 		.4byte	0xc7
 28882 1a43 02       		.uleb128 0x2
 28883 1a44 91       		.byte	0x91
 28884 1a45 6C       		.sleb128 -20
 28885 1a46 22       		.uleb128 0x22
 28886 1a47 76050000 		.4byte	.LASF215
 28887 1a4b 01       		.byte	0x1
 28888 1a4c 1B0C     		.2byte	0xc1b
 28889 1a4e EE070000 		.4byte	0x7ee
 28890 1a52 02       		.uleb128 0x2
 28891 1a53 91       		.byte	0x91
 28892 1a54 64       		.sleb128 -28
 28893 1a55 00       		.byte	0
 28894 1a56 26       		.uleb128 0x26
 28895 1a57 100D0000 		.4byte	.LASF293
 28896 1a5b 01       		.byte	0x1
 28897 1a5c 2E0C     		.2byte	0xc2e
 28898 1a5e 00000000 		.4byte	.LFB91
 28899 1a62 B8000000 		.4byte	.LFE91-.LFB91
 28900 1a66 01       		.uleb128 0x1
 28901 1a67 9C       		.byte	0x9c
 28902 1a68 9A1A0000 		.4byte	0x1a9a
 28903 1a6c 22       		.uleb128 0x22
 28904 1a6d 62060000 		.4byte	.LASF230
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 619


 28905 1a71 01       		.byte	0x1
 28906 1a72 300C     		.2byte	0xc30
 28907 1a74 97000000 		.4byte	0x97
 28908 1a78 02       		.uleb128 0x2
 28909 1a79 91       		.byte	0x91
 28910 1a7a 6F       		.sleb128 -17
 28911 1a7b 22       		.uleb128 0x22
 28912 1a7c 13100000 		.4byte	.LASF221
 28913 1a80 01       		.byte	0x1
 28914 1a81 310C     		.2byte	0xc31
 28915 1a83 C7000000 		.4byte	0xc7
 28916 1a87 02       		.uleb128 0x2
 28917 1a88 91       		.byte	0x91
 28918 1a89 6C       		.sleb128 -20
 28919 1a8a 22       		.uleb128 0x22
 28920 1a8b 76050000 		.4byte	.LASF215
 28921 1a8f 01       		.byte	0x1
 28922 1a90 350C     		.2byte	0xc35
 28923 1a92 EE070000 		.4byte	0x7ee
 28924 1a96 02       		.uleb128 0x2
 28925 1a97 91       		.byte	0x91
 28926 1a98 64       		.sleb128 -28
 28927 1a99 00       		.byte	0
 28928 1a9a 26       		.uleb128 0x26
 28929 1a9b 51070000 		.4byte	.LASF294
 28930 1a9f 01       		.byte	0x1
 28931 1aa0 470C     		.2byte	0xc47
 28932 1aa2 00000000 		.4byte	.LFB92
 28933 1aa6 B8000000 		.4byte	.LFE92-.LFB92
 28934 1aaa 01       		.uleb128 0x1
 28935 1aab 9C       		.byte	0x9c
 28936 1aac DE1A0000 		.4byte	0x1ade
 28937 1ab0 22       		.uleb128 0x22
 28938 1ab1 62060000 		.4byte	.LASF230
 28939 1ab5 01       		.byte	0x1
 28940 1ab6 490C     		.2byte	0xc49
 28941 1ab8 97000000 		.4byte	0x97
 28942 1abc 02       		.uleb128 0x2
 28943 1abd 91       		.byte	0x91
 28944 1abe 6F       		.sleb128 -17
 28945 1abf 22       		.uleb128 0x22
 28946 1ac0 13100000 		.4byte	.LASF221
 28947 1ac4 01       		.byte	0x1
 28948 1ac5 4A0C     		.2byte	0xc4a
 28949 1ac7 C7000000 		.4byte	0xc7
 28950 1acb 02       		.uleb128 0x2
 28951 1acc 91       		.byte	0x91
 28952 1acd 6C       		.sleb128 -20
 28953 1ace 22       		.uleb128 0x22
 28954 1acf 76050000 		.4byte	.LASF215
 28955 1ad3 01       		.byte	0x1
 28956 1ad4 4E0C     		.2byte	0xc4e
 28957 1ad6 EE070000 		.4byte	0x7ee
 28958 1ada 02       		.uleb128 0x2
 28959 1adb 91       		.byte	0x91
 28960 1adc 64       		.sleb128 -28
 28961 1add 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 620


 28962 1ade 2C       		.uleb128 0x2c
 28963 1adf 7C0A0000 		.4byte	.LASF295
 28964 1ae3 01       		.byte	0x1
 28965 1ae4 600C     		.2byte	0xc60
 28966 1ae6 00000000 		.4byte	.LFB93
 28967 1aea 44020000 		.4byte	.LFE93-.LFB93
 28968 1aee 01       		.uleb128 0x1
 28969 1aef 9C       		.byte	0x9c
 28970 1af0 481B0000 		.4byte	0x1b48
 28971 1af4 22       		.uleb128 0x22
 28972 1af5 13100000 		.4byte	.LASF221
 28973 1af9 01       		.byte	0x1
 28974 1afa 630C     		.2byte	0xc63
 28975 1afc 481B0000 		.4byte	0x1b48
 28976 1b00 02       		.uleb128 0x2
 28977 1b01 91       		.byte	0x91
 28978 1b02 70       		.sleb128 -16
 28979 1b03 22       		.uleb128 0x22
 28980 1b04 24060000 		.4byte	.LASF296
 28981 1b08 01       		.byte	0x1
 28982 1b09 640C     		.2byte	0xc64
 28983 1b0b 481B0000 		.4byte	0x1b48
 28984 1b0f 05       		.uleb128 0x5
 28985 1b10 03       		.byte	0x3
 28986 1b11 04000000 		.4byte	last_aux_int16.11279
 28987 1b15 2D       		.uleb128 0x2d
 28988 1b16 2E000000 		.4byte	.LBB22
 28989 1b1a 50000000 		.4byte	.LBE22-.LBB22
 28990 1b1e 301B0000 		.4byte	0x1b30
 28991 1b22 25       		.uleb128 0x25
 28992 1b23 6900     		.ascii	"i\000"
 28993 1b25 01       		.byte	0x1
 28994 1b26 6B0C     		.2byte	0xc6b
 28995 1b28 97000000 		.4byte	0x97
 28996 1b2c 02       		.uleb128 0x2
 28997 1b2d 91       		.byte	0x91
 28998 1b2e 77       		.sleb128 -9
 28999 1b2f 00       		.byte	0
 29000 1b30 1E       		.uleb128 0x1e
 29001 1b31 88000000 		.4byte	.LBB23
 29002 1b35 98010000 		.4byte	.LBE23-.LBB23
 29003 1b39 25       		.uleb128 0x25
 29004 1b3a 6900     		.ascii	"i\000"
 29005 1b3c 01       		.byte	0x1
 29006 1b3d 750C     		.2byte	0xc75
 29007 1b3f 97000000 		.4byte	0x97
 29008 1b43 02       		.uleb128 0x2
 29009 1b44 91       		.byte	0x91
 29010 1b45 76       		.sleb128 -10
 29011 1b46 00       		.byte	0
 29012 1b47 00       		.byte	0
 29013 1b48 09       		.uleb128 0x9
 29014 1b49 C7000000 		.4byte	0xc7
 29015 1b4d 581B0000 		.4byte	0x1b58
 29016 1b51 0A       		.uleb128 0xa
 29017 1b52 18010000 		.4byte	0x118
 29018 1b56 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 621


 29019 1b57 00       		.byte	0
 29020 1b58 26       		.uleb128 0x26
 29021 1b59 82120000 		.4byte	.LASF297
 29022 1b5d 01       		.byte	0x1
 29023 1b5e 900C     		.2byte	0xc90
 29024 1b60 00000000 		.4byte	.LFB94
 29025 1b64 BC000000 		.4byte	.LFE94-.LFB94
 29026 1b68 01       		.uleb128 0x1
 29027 1b69 9C       		.byte	0x9c
 29028 1b6a 7E1B0000 		.4byte	0x1b7e
 29029 1b6e 25       		.uleb128 0x25
 29030 1b6f 61757800 		.ascii	"aux\000"
 29031 1b73 01       		.byte	0x1
 29032 1b74 930C     		.2byte	0xc93
 29033 1b76 97000000 		.4byte	0x97
 29034 1b7a 02       		.uleb128 0x2
 29035 1b7b 91       		.byte	0x91
 29036 1b7c 77       		.sleb128 -9
 29037 1b7d 00       		.byte	0
 29038 1b7e 26       		.uleb128 0x26
 29039 1b7f DA0A0000 		.4byte	.LASF298
 29040 1b83 01       		.byte	0x1
 29041 1b84 B50C     		.2byte	0xcb5
 29042 1b86 00000000 		.4byte	.LFB95
 29043 1b8a 5C000000 		.4byte	.LFE95-.LFB95
 29044 1b8e 01       		.uleb128 0x1
 29045 1b8f 9C       		.byte	0x9c
 29046 1b90 A41B0000 		.4byte	0x1ba4
 29047 1b94 22       		.uleb128 0x22
 29048 1b95 76050000 		.4byte	.LASF215
 29049 1b99 01       		.byte	0x1
 29050 1b9a B70C     		.2byte	0xcb7
 29051 1b9c A1050000 		.4byte	0x5a1
 29052 1ba0 02       		.uleb128 0x2
 29053 1ba1 91       		.byte	0x91
 29054 1ba2 74       		.sleb128 -12
 29055 1ba3 00       		.byte	0
 29056 1ba4 26       		.uleb128 0x26
 29057 1ba5 500E0000 		.4byte	.LASF299
 29058 1ba9 01       		.byte	0x1
 29059 1baa CC0C     		.2byte	0xccc
 29060 1bac 00000000 		.4byte	.LFB96
 29061 1bb0 38010000 		.4byte	.LFE96-.LFB96
 29062 1bb4 01       		.uleb128 0x1
 29063 1bb5 9C       		.byte	0x9c
 29064 1bb6 E81B0000 		.4byte	0x1be8
 29065 1bba 22       		.uleb128 0x22
 29066 1bbb 62060000 		.4byte	.LASF230
 29067 1bbf 01       		.byte	0x1
 29068 1bc0 CE0C     		.2byte	0xcce
 29069 1bc2 97000000 		.4byte	0x97
 29070 1bc6 02       		.uleb128 0x2
 29071 1bc7 91       		.byte	0x91
 29072 1bc8 6F       		.sleb128 -17
 29073 1bc9 22       		.uleb128 0x22
 29074 1bca 13100000 		.4byte	.LASF221
 29075 1bce 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 622


 29076 1bcf CF0C     		.2byte	0xccf
 29077 1bd1 C7000000 		.4byte	0xc7
 29078 1bd5 02       		.uleb128 0x2
 29079 1bd6 91       		.byte	0x91
 29080 1bd7 6C       		.sleb128 -20
 29081 1bd8 22       		.uleb128 0x22
 29082 1bd9 76050000 		.4byte	.LASF215
 29083 1bdd 01       		.byte	0x1
 29084 1bde D30C     		.2byte	0xcd3
 29085 1be0 24090000 		.4byte	0x924
 29086 1be4 02       		.uleb128 0x2
 29087 1be5 91       		.byte	0x91
 29088 1be6 60       		.sleb128 -32
 29089 1be7 00       		.byte	0
 29090 1be8 26       		.uleb128 0x26
 29091 1be9 4D090000 		.4byte	.LASF300
 29092 1bed 01       		.byte	0x1
 29093 1bee F30C     		.2byte	0xcf3
 29094 1bf0 00000000 		.4byte	.LFB97
 29095 1bf4 EC000000 		.4byte	.LFE97-.LFB97
 29096 1bf8 01       		.uleb128 0x1
 29097 1bf9 9C       		.byte	0x9c
 29098 1bfa 1D1C0000 		.4byte	0x1c1d
 29099 1bfe 22       		.uleb128 0x22
 29100 1bff 76050000 		.4byte	.LASF215
 29101 1c03 01       		.byte	0x1
 29102 1c04 F70C     		.2byte	0xcf7
 29103 1c06 14090000 		.4byte	0x914
 29104 1c0a 02       		.uleb128 0x2
 29105 1c0b 91       		.byte	0x91
 29106 1c0c 68       		.sleb128 -24
 29107 1c0d 22       		.uleb128 0x22
 29108 1c0e 13100000 		.4byte	.LASF221
 29109 1c12 01       		.byte	0x1
 29110 1c13 F80C     		.2byte	0xcf8
 29111 1c15 C7000000 		.4byte	0xc7
 29112 1c19 02       		.uleb128 0x2
 29113 1c1a 91       		.byte	0x91
 29114 1c1b 66       		.sleb128 -26
 29115 1c1c 00       		.byte	0
 29116 1c1d 26       		.uleb128 0x26
 29117 1c1e 8C110000 		.4byte	.LASF301
 29118 1c22 01       		.byte	0x1
 29119 1c23 190D     		.2byte	0xd19
 29120 1c25 00000000 		.4byte	.LFB98
 29121 1c29 64000000 		.4byte	.LFE98-.LFB98
 29122 1c2d 01       		.uleb128 0x1
 29123 1c2e 9C       		.byte	0x9c
 29124 1c2f 521C0000 		.4byte	0x1c52
 29125 1c33 22       		.uleb128 0x22
 29126 1c34 76050000 		.4byte	.LASF215
 29127 1c38 01       		.byte	0x1
 29128 1c39 1D0D     		.2byte	0xd1d
 29129 1c3b 3F0A0000 		.4byte	0xa3f
 29130 1c3f 02       		.uleb128 0x2
 29131 1c40 91       		.byte	0x91
 29132 1c41 74       		.sleb128 -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 623


 29133 1c42 22       		.uleb128 0x22
 29134 1c43 13100000 		.4byte	.LASF221
 29135 1c47 01       		.byte	0x1
 29136 1c48 1E0D     		.2byte	0xd1e
 29137 1c4a C7000000 		.4byte	0xc7
 29138 1c4e 02       		.uleb128 0x2
 29139 1c4f 91       		.byte	0x91
 29140 1c50 72       		.sleb128 -14
 29141 1c51 00       		.byte	0
 29142 1c52 2E       		.uleb128 0x2e
 29143 1c53 9F060000 		.4byte	.LASF302
 29144 1c57 01       		.byte	0x1
 29145 1c58 330D     		.2byte	0xd33
 29146 1c5a C7000000 		.4byte	0xc7
 29147 1c5e 00000000 		.4byte	.LFB99
 29148 1c62 A8000000 		.4byte	.LFE99-.LFB99
 29149 1c66 01       		.uleb128 0x1
 29150 1c67 9C       		.byte	0x9c
 29151 1c68 C71C0000 		.4byte	0x1cc7
 29152 1c6c 22       		.uleb128 0x22
 29153 1c6d 76050000 		.4byte	.LASF215
 29154 1c71 01       		.byte	0x1
 29155 1c72 350D     		.2byte	0xd35
 29156 1c74 C71C0000 		.4byte	0x1cc7
 29157 1c78 02       		.uleb128 0x2
 29158 1c79 91       		.byte	0x91
 29159 1c7a 5C       		.sleb128 -36
 29160 1c7b 22       		.uleb128 0x22
 29161 1c7c C5000000 		.4byte	.LASF216
 29162 1c80 01       		.byte	0x1
 29163 1c81 360D     		.2byte	0xd36
 29164 1c83 97000000 		.4byte	0x97
 29165 1c87 02       		.uleb128 0x2
 29166 1c88 91       		.byte	0x91
 29167 1c89 74       		.sleb128 -12
 29168 1c8a 22       		.uleb128 0x22
 29169 1c8b FB0D0000 		.4byte	.LASF303
 29170 1c8f 01       		.byte	0x1
 29171 1c90 370D     		.2byte	0xd37
 29172 1c92 C7000000 		.4byte	0xc7
 29173 1c96 02       		.uleb128 0x2
 29174 1c97 91       		.byte	0x91
 29175 1c98 76       		.sleb128 -10
 29176 1c99 22       		.uleb128 0x22
 29177 1c9a 3F020000 		.4byte	.LASF304
 29178 1c9e 01       		.byte	0x1
 29179 1c9f 380D     		.2byte	0xd38
 29180 1ca1 AF000000 		.4byte	0xaf
 29181 1ca5 02       		.uleb128 0x2
 29182 1ca6 91       		.byte	0x91
 29183 1ca7 70       		.sleb128 -16
 29184 1ca8 22       		.uleb128 0x22
 29185 1ca9 86110000 		.4byte	.LASF305
 29186 1cad 01       		.byte	0x1
 29187 1cae 380D     		.2byte	0xd38
 29188 1cb0 AF000000 		.4byte	0xaf
 29189 1cb4 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 624


 29190 1cb5 91       		.byte	0x91
 29191 1cb6 6C       		.sleb128 -20
 29192 1cb7 22       		.uleb128 0x22
 29193 1cb8 A6030000 		.4byte	.LASF306
 29194 1cbc 01       		.byte	0x1
 29195 1cbd 390D     		.2byte	0xd39
 29196 1cbf 97000000 		.4byte	0x97
 29197 1cc3 02       		.uleb128 0x2
 29198 1cc4 91       		.byte	0x91
 29199 1cc5 75       		.sleb128 -11
 29200 1cc6 00       		.byte	0
 29201 1cc7 09       		.uleb128 0x9
 29202 1cc8 97000000 		.4byte	0x97
 29203 1ccc D71C0000 		.4byte	0x1cd7
 29204 1cd0 0A       		.uleb128 0xa
 29205 1cd1 18010000 		.4byte	0x118
 29206 1cd5 0F       		.byte	0xf
 29207 1cd6 00       		.byte	0
 29208 1cd7 2F       		.uleb128 0x2f
 29209 1cd8 88000000 		.4byte	.LASF321
 29210 1cdc 01       		.byte	0x1
 29211 1cdd 560D     		.2byte	0xd56
 29212 1cdf 00000000 		.4byte	.LFB100
 29213 1ce3 34000000 		.4byte	.LFE100-.LFB100
 29214 1ce7 01       		.uleb128 0x1
 29215 1ce8 9C       		.byte	0x9c
 29216 1ce9 26       		.uleb128 0x26
 29217 1cea 28030000 		.4byte	.LASF307
 29218 1cee 01       		.byte	0x1
 29219 1cef 640D     		.2byte	0xd64
 29220 1cf1 00000000 		.4byte	.LFB101
 29221 1cf5 20000000 		.4byte	.LFE101-.LFB101
 29222 1cf9 01       		.uleb128 0x1
 29223 1cfa 9C       		.byte	0x9c
 29224 1cfb 0F1D0000 		.4byte	0x1d0f
 29225 1cff 22       		.uleb128 0x22
 29226 1d00 76050000 		.4byte	.LASF215
 29227 1d04 01       		.byte	0x1
 29228 1d05 660D     		.2byte	0xd66
 29229 1d07 5D080000 		.4byte	0x85d
 29230 1d0b 02       		.uleb128 0x2
 29231 1d0c 91       		.byte	0x91
 29232 1d0d 74       		.sleb128 -12
 29233 1d0e 00       		.byte	0
 29234 1d0f 26       		.uleb128 0x26
 29235 1d10 05010000 		.4byte	.LASF308
 29236 1d14 01       		.byte	0x1
 29237 1d15 720D     		.2byte	0xd72
 29238 1d17 00000000 		.4byte	.LFB102
 29239 1d1b 6C000000 		.4byte	.LFE102-.LFB102
 29240 1d1f 01       		.uleb128 0x1
 29241 1d20 9C       		.byte	0x9c
 29242 1d21 441D0000 		.4byte	0x1d44
 29243 1d25 22       		.uleb128 0x22
 29244 1d26 76050000 		.4byte	.LASF215
 29245 1d2a 01       		.byte	0x1
 29246 1d2b 760D     		.2byte	0xd76
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 625


 29247 1d2d 14090000 		.4byte	0x914
 29248 1d31 02       		.uleb128 0x2
 29249 1d32 91       		.byte	0x91
 29250 1d33 70       		.sleb128 -16
 29251 1d34 22       		.uleb128 0x22
 29252 1d35 13100000 		.4byte	.LASF221
 29253 1d39 01       		.byte	0x1
 29254 1d3a 770D     		.2byte	0xd77
 29255 1d3c C7000000 		.4byte	0xc7
 29256 1d40 02       		.uleb128 0x2
 29257 1d41 91       		.byte	0x91
 29258 1d42 6E       		.sleb128 -18
 29259 1d43 00       		.byte	0
 29260 1d44 26       		.uleb128 0x26
 29261 1d45 060F0000 		.4byte	.LASF309
 29262 1d49 01       		.byte	0x1
 29263 1d4a 880D     		.2byte	0xd88
 29264 1d4c 00000000 		.4byte	.LFB103
 29265 1d50 BC010000 		.4byte	.LFE103-.LFB103
 29266 1d54 01       		.uleb128 0x1
 29267 1d55 9C       		.byte	0x9c
 29268 1d56 A61D0000 		.4byte	0x1da6
 29269 1d5a 22       		.uleb128 0x22
 29270 1d5b 980A0000 		.4byte	.LASF310
 29271 1d5f 01       		.byte	0x1
 29272 1d60 8B0D     		.2byte	0xd8b
 29273 1d62 AF000000 		.4byte	0xaf
 29274 1d66 02       		.uleb128 0x2
 29275 1d67 91       		.byte	0x91
 29276 1d68 70       		.sleb128 -16
 29277 1d69 22       		.uleb128 0x22
 29278 1d6a 7D0D0000 		.4byte	.LASF311
 29279 1d6e 01       		.byte	0x1
 29280 1d6f 8C0D     		.2byte	0xd8c
 29281 1d71 EB000000 		.4byte	0xeb
 29282 1d75 02       		.uleb128 0x2
 29283 1d76 91       		.byte	0x91
 29284 1d77 6C       		.sleb128 -20
 29285 1d78 22       		.uleb128 0x22
 29286 1d79 C5000000 		.4byte	.LASF216
 29287 1d7d 01       		.byte	0x1
 29288 1d7e 8D0D     		.2byte	0xd8d
 29289 1d80 97000000 		.4byte	0x97
 29290 1d84 02       		.uleb128 0x2
 29291 1d85 91       		.byte	0x91
 29292 1d86 77       		.sleb128 -9
 29293 1d87 22       		.uleb128 0x22
 29294 1d88 76050000 		.4byte	.LASF215
 29295 1d8c 01       		.byte	0x1
 29296 1d8d 8E0D     		.2byte	0xd8e
 29297 1d8f 5D080000 		.4byte	0x85d
 29298 1d93 02       		.uleb128 0x2
 29299 1d94 91       		.byte	0x91
 29300 1d95 68       		.sleb128 -24
 29301 1d96 22       		.uleb128 0x22
 29302 1d97 170E0000 		.4byte	.LASF271
 29303 1d9b 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 626


 29304 1d9c 8F0D     		.2byte	0xd8f
 29305 1d9e 97000000 		.4byte	0x97
 29306 1da2 02       		.uleb128 0x2
 29307 1da3 91       		.byte	0x91
 29308 1da4 6B       		.sleb128 -21
 29309 1da5 00       		.byte	0
 29310 1da6 26       		.uleb128 0x26
 29311 1da7 A2010000 		.4byte	.LASF312
 29312 1dab 01       		.byte	0x1
 29313 1dac C90D     		.2byte	0xdc9
 29314 1dae 00000000 		.4byte	.LFB104
 29315 1db2 60000000 		.4byte	.LFE104-.LFB104
 29316 1db6 01       		.uleb128 0x1
 29317 1db7 9C       		.byte	0x9c
 29318 1db8 DB1D0000 		.4byte	0x1ddb
 29319 1dbc 22       		.uleb128 0x22
 29320 1dbd 76050000 		.4byte	.LASF215
 29321 1dc1 01       		.byte	0x1
 29322 1dc2 CB0D     		.2byte	0xdcb
 29323 1dc4 14090000 		.4byte	0x914
 29324 1dc8 02       		.uleb128 0x2
 29325 1dc9 91       		.byte	0x91
 29326 1dca 70       		.sleb128 -16
 29327 1dcb 22       		.uleb128 0x22
 29328 1dcc 13100000 		.4byte	.LASF221
 29329 1dd0 01       		.byte	0x1
 29330 1dd1 CC0D     		.2byte	0xdcc
 29331 1dd3 C7000000 		.4byte	0xc7
 29332 1dd7 02       		.uleb128 0x2
 29333 1dd8 91       		.byte	0x91
 29334 1dd9 6E       		.sleb128 -18
 29335 1dda 00       		.byte	0
 29336 1ddb 26       		.uleb128 0x26
 29337 1ddc 41010000 		.4byte	.LASF313
 29338 1de0 01       		.byte	0x1
 29339 1de1 DF0D     		.2byte	0xddf
 29340 1de3 00000000 		.4byte	.LFB105
 29341 1de7 98050000 		.4byte	.LFE105-.LFB105
 29342 1deb 01       		.uleb128 0x1
 29343 1dec 9C       		.byte	0x9c
 29344 1ded 681E0000 		.4byte	0x1e68
 29345 1df1 22       		.uleb128 0x22
 29346 1df2 D1110000 		.4byte	.LASF314
 29347 1df6 01       		.byte	0x1
 29348 1df7 E20D     		.2byte	0xde2
 29349 1df9 97000000 		.4byte	0x97
 29350 1dfd 02       		.uleb128 0x2
 29351 1dfe 91       		.byte	0x91
 29352 1dff 6F       		.sleb128 -17
 29353 1e00 25       		.uleb128 0x25
 29354 1e01 6300     		.ascii	"c\000"
 29355 1e03 01       		.byte	0x1
 29356 1e04 E30D     		.2byte	0xde3
 29357 1e06 A3000000 		.4byte	0xa3
 29358 1e0a 02       		.uleb128 0x2
 29359 1e0b 91       		.byte	0x91
 29360 1e0c 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 627


 29361 1e0d 25       		.uleb128 0x25
 29362 1e0e 6B00     		.ascii	"k\000"
 29363 1e10 01       		.byte	0x1
 29364 1e11 E40D     		.2byte	0xde4
 29365 1e13 97000000 		.4byte	0x97
 29366 1e17 02       		.uleb128 0x2
 29367 1e18 91       		.byte	0x91
 29368 1e19 6B       		.sleb128 -21
 29369 1e1a 22       		.uleb128 0x22
 29370 1e1b 26000000 		.4byte	.LASF315
 29371 1e1f 01       		.byte	0x1
 29372 1e20 E50D     		.2byte	0xde5
 29373 1e22 A3000000 		.4byte	0xa3
 29374 1e26 02       		.uleb128 0x2
 29375 1e27 91       		.byte	0x91
 29376 1e28 68       		.sleb128 -24
 29377 1e29 22       		.uleb128 0x22
 29378 1e2a 13100000 		.4byte	.LASF221
 29379 1e2e 01       		.byte	0x1
 29380 1e2f E60D     		.2byte	0xde6
 29381 1e31 C7000000 		.4byte	0xc7
 29382 1e35 02       		.uleb128 0x2
 29383 1e36 91       		.byte	0x91
 29384 1e37 66       		.sleb128 -26
 29385 1e38 22       		.uleb128 0x22
 29386 1e39 51110000 		.4byte	.LASF220
 29387 1e3d 01       		.byte	0x1
 29388 1e3e E70D     		.2byte	0xde7
 29389 1e40 EB000000 		.4byte	0xeb
 29390 1e44 02       		.uleb128 0x2
 29391 1e45 91       		.byte	0x91
 29392 1e46 60       		.sleb128 -32
 29393 1e47 22       		.uleb128 0x22
 29394 1e48 76050000 		.4byte	.LASF215
 29395 1e4c 01       		.byte	0x1
 29396 1e4d EA0D     		.2byte	0xdea
 29397 1e4f 681E0000 		.4byte	0x1e68
 29398 1e53 03       		.uleb128 0x3
 29399 1e54 91       		.byte	0x91
 29400 1e55 807D     		.sleb128 -384
 29401 1e57 22       		.uleb128 0x22
 29402 1e58 27080000 		.4byte	.LASF316
 29403 1e5c 01       		.byte	0x1
 29404 1e5d EB0D     		.2byte	0xdeb
 29405 1e5f 791E0000 		.4byte	0x1e79
 29406 1e63 03       		.uleb128 0x3
 29407 1e64 91       		.byte	0x91
 29408 1e65 E07C     		.sleb128 -416
 29409 1e67 00       		.byte	0
 29410 1e68 09       		.uleb128 0x9
 29411 1e69 97000000 		.4byte	0x97
 29412 1e6d 791E0000 		.4byte	0x1e79
 29413 1e71 23       		.uleb128 0x23
 29414 1e72 18010000 		.4byte	0x118
 29415 1e76 5D01     		.2byte	0x15d
 29416 1e78 00       		.byte	0
 29417 1e79 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 628


 29418 1e7a 97000000 		.4byte	0x97
 29419 1e7e 891E0000 		.4byte	0x1e89
 29420 1e82 0A       		.uleb128 0xa
 29421 1e83 18010000 		.4byte	0x118
 29422 1e87 1F       		.byte	0x1f
 29423 1e88 00       		.byte	0
 29424 1e89 26       		.uleb128 0x26
 29425 1e8a 2C110000 		.4byte	.LASF317
 29426 1e8e 01       		.byte	0x1
 29427 1e8f 4E0E     		.2byte	0xe4e
 29428 1e91 00000000 		.4byte	.LFB106
 29429 1e95 8C000000 		.4byte	.LFE106-.LFB106
 29430 1e99 01       		.uleb128 0x1
 29431 1e9a 9C       		.byte	0x9c
 29432 1e9b C91E0000 		.4byte	0x1ec9
 29433 1e9f 22       		.uleb128 0x22
 29434 1ea0 76050000 		.4byte	.LASF215
 29435 1ea4 01       		.byte	0x1
 29436 1ea5 510E     		.2byte	0xe51
 29437 1ea7 ED090000 		.4byte	0x9ed
 29438 1eab 02       		.uleb128 0x2
 29439 1eac 91       		.byte	0x91
 29440 1ead 60       		.sleb128 -32
 29441 1eae 25       		.uleb128 0x25
 29442 1eaf 6900     		.ascii	"i\000"
 29443 1eb1 01       		.byte	0x1
 29444 1eb2 520E     		.2byte	0xe52
 29445 1eb4 97000000 		.4byte	0x97
 29446 1eb8 02       		.uleb128 0x2
 29447 1eb9 91       		.byte	0x91
 29448 1eba 6F       		.sleb128 -17
 29449 1ebb 25       		.uleb128 0x25
 29450 1ebc 6A00     		.ascii	"j\000"
 29451 1ebe 01       		.byte	0x1
 29452 1ebf 520E     		.2byte	0xe52
 29453 1ec1 97000000 		.4byte	0x97
 29454 1ec5 02       		.uleb128 0x2
 29455 1ec6 91       		.byte	0x91
 29456 1ec7 6E       		.sleb128 -18
 29457 1ec8 00       		.byte	0
 29458 1ec9 26       		.uleb128 0x26
 29459 1eca 320F0000 		.4byte	.LASF318
 29460 1ece 01       		.byte	0x1
 29461 1ecf 670E     		.2byte	0xe67
 29462 1ed1 00000000 		.4byte	.LFB107
 29463 1ed5 EC000000 		.4byte	.LFE107-.LFB107
 29464 1ed9 01       		.uleb128 0x1
 29465 1eda 9C       		.byte	0x9c
 29466 1edb 271F0000 		.4byte	0x1f27
 29467 1edf 22       		.uleb128 0x22
 29468 1ee0 76050000 		.4byte	.LASF215
 29469 1ee4 01       		.byte	0x1
 29470 1ee5 6A0E     		.2byte	0xe6a
 29471 1ee7 271F0000 		.4byte	0x1f27
 29472 1eeb 02       		.uleb128 0x2
 29473 1eec 91       		.byte	0x91
 29474 1eed 54       		.sleb128 -44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 629


 29475 1eee 25       		.uleb128 0x25
 29476 1eef 6900     		.ascii	"i\000"
 29477 1ef1 01       		.byte	0x1
 29478 1ef2 6B0E     		.2byte	0xe6b
 29479 1ef4 97000000 		.4byte	0x97
 29480 1ef8 02       		.uleb128 0x2
 29481 1ef9 91       		.byte	0x91
 29482 1efa 6F       		.sleb128 -17
 29483 1efb 25       		.uleb128 0x25
 29484 1efc 6A00     		.ascii	"j\000"
 29485 1efe 01       		.byte	0x1
 29486 1eff 6B0E     		.2byte	0xe6b
 29487 1f01 97000000 		.4byte	0x97
 29488 1f05 02       		.uleb128 0x2
 29489 1f06 91       		.byte	0x91
 29490 1f07 6E       		.sleb128 -18
 29491 1f08 25       		.uleb128 0x25
 29492 1f09 69647800 		.ascii	"idx\000"
 29493 1f0d 01       		.byte	0x1
 29494 1f0e 6B0E     		.2byte	0xe6b
 29495 1f10 97000000 		.4byte	0x97
 29496 1f14 02       		.uleb128 0x2
 29497 1f15 91       		.byte	0x91
 29498 1f16 6D       		.sleb128 -19
 29499 1f17 22       		.uleb128 0x22
 29500 1f18 420B0000 		.4byte	.LASF222
 29501 1f1c 01       		.byte	0x1
 29502 1f1d 6C0E     		.2byte	0xe6c
 29503 1f1f A3000000 		.4byte	0xa3
 29504 1f23 02       		.uleb128 0x2
 29505 1f24 91       		.byte	0x91
 29506 1f25 52       		.sleb128 -46
 29507 1f26 00       		.byte	0
 29508 1f27 09       		.uleb128 0x9
 29509 1f28 97000000 		.4byte	0x97
 29510 1f2c 371F0000 		.4byte	0x1f37
 29511 1f30 0A       		.uleb128 0xa
 29512 1f31 18010000 		.4byte	0x118
 29513 1f35 15       		.byte	0x15
 29514 1f36 00       		.byte	0
 29515 1f37 26       		.uleb128 0x26
 29516 1f38 E0020000 		.4byte	.LASF319
 29517 1f3c 01       		.byte	0x1
 29518 1f3d 850E     		.2byte	0xe85
 29519 1f3f 00000000 		.4byte	.LFB108
 29520 1f43 5C000000 		.4byte	.LFE108-.LFB108
 29521 1f47 01       		.uleb128 0x1
 29522 1f48 9C       		.byte	0x9c
 29523 1f49 6A1F0000 		.4byte	0x1f6a
 29524 1f4d 22       		.uleb128 0x22
 29525 1f4e 76050000 		.4byte	.LASF215
 29526 1f52 01       		.byte	0x1
 29527 1f53 880E     		.2byte	0xe88
 29528 1f55 190B0000 		.4byte	0xb19
 29529 1f59 02       		.uleb128 0x2
 29530 1f5a 91       		.byte	0x91
 29531 1f5b 68       		.sleb128 -24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 630


 29532 1f5c 25       		.uleb128 0x25
 29533 1f5d 6900     		.ascii	"i\000"
 29534 1f5f 01       		.byte	0x1
 29535 1f60 890E     		.2byte	0xe89
 29536 1f62 97000000 		.4byte	0x97
 29537 1f66 02       		.uleb128 0x2
 29538 1f67 91       		.byte	0x91
 29539 1f68 77       		.sleb128 -9
 29540 1f69 00       		.byte	0
 29541 1f6a 26       		.uleb128 0x26
 29542 1f6b 0D030000 		.4byte	.LASF320
 29543 1f6f 01       		.byte	0x1
 29544 1f70 9C0E     		.2byte	0xe9c
 29545 1f72 00000000 		.4byte	.LFB109
 29546 1f76 C0000000 		.4byte	.LFE109-.LFB109
 29547 1f7a 01       		.uleb128 0x1
 29548 1f7b 9C       		.byte	0x9c
 29549 1f7c BB1F0000 		.4byte	0x1fbb
 29550 1f80 22       		.uleb128 0x22
 29551 1f81 76050000 		.4byte	.LASF215
 29552 1f85 01       		.byte	0x1
 29553 1f86 9F0E     		.2byte	0xe9f
 29554 1f88 BB1F0000 		.4byte	0x1fbb
 29555 1f8c 02       		.uleb128 0x2
 29556 1f8d 91       		.byte	0x91
 29557 1f8e 54       		.sleb128 -44
 29558 1f8f 25       		.uleb128 0x25
 29559 1f90 6900     		.ascii	"i\000"
 29560 1f92 01       		.byte	0x1
 29561 1f93 A00E     		.2byte	0xea0
 29562 1f95 97000000 		.4byte	0x97
 29563 1f99 02       		.uleb128 0x2
 29564 1f9a 91       		.byte	0x91
 29565 1f9b 6F       		.sleb128 -17
 29566 1f9c 25       		.uleb128 0x25
 29567 1f9d 69647800 		.ascii	"idx\000"
 29568 1fa1 01       		.byte	0x1
 29569 1fa2 A00E     		.2byte	0xea0
 29570 1fa4 97000000 		.4byte	0x97
 29571 1fa8 02       		.uleb128 0x2
 29572 1fa9 91       		.byte	0x91
 29573 1faa 6E       		.sleb128 -18
 29574 1fab 22       		.uleb128 0x22
 29575 1fac 13100000 		.4byte	.LASF221
 29576 1fb0 01       		.byte	0x1
 29577 1fb1 A10E     		.2byte	0xea1
 29578 1fb3 C7000000 		.4byte	0xc7
 29579 1fb7 02       		.uleb128 0x2
 29580 1fb8 91       		.byte	0x91
 29581 1fb9 52       		.sleb128 -46
 29582 1fba 00       		.byte	0
 29583 1fbb 09       		.uleb128 0x9
 29584 1fbc 97000000 		.4byte	0x97
 29585 1fc0 CB1F0000 		.4byte	0x1fcb
 29586 1fc4 0A       		.uleb128 0xa
 29587 1fc5 18010000 		.4byte	0x118
 29588 1fc9 19       		.byte	0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 631


 29589 1fca 00       		.byte	0
 29590 1fcb 30       		.uleb128 0x30
 29591 1fcc 99000000 		.4byte	.LASF322
 29592 1fd0 01       		.byte	0x1
 29593 1fd1 BC0E     		.2byte	0xebc
 29594 1fd3 00000000 		.4byte	.LFB110
 29595 1fd7 0C000000 		.4byte	.LFE110-.LFB110
 29596 1fdb 01       		.uleb128 0x1
 29597 1fdc 9C       		.byte	0x9c
 29598 1fdd 2A       		.uleb128 0x2a
 29599 1fde 380C0000 		.4byte	.LASF323
 29600 1fe2 01       		.byte	0x1
 29601 1fe3 020F     		.2byte	0xf02
 29602 1fe5 00000000 		.4byte	.LFB111
 29603 1fe9 1A000000 		.4byte	.LFE111-.LFB111
 29604 1fed 01       		.uleb128 0x1
 29605 1fee 9C       		.byte	0x9c
 29606 1fef 12200000 		.4byte	0x2012
 29607 1ff3 24       		.uleb128 0x24
 29608 1ff4 78020000 		.4byte	.LASF324
 29609 1ff8 01       		.byte	0x1
 29610 1ff9 020F     		.2byte	0xf02
 29611 1ffb 97000000 		.4byte	0x97
 29612 1fff 02       		.uleb128 0x2
 29613 2000 91       		.byte	0x91
 29614 2001 77       		.sleb128 -9
 29615 2002 24       		.uleb128 0x24
 29616 2003 AE090000 		.4byte	.LASF177
 29617 2007 01       		.byte	0x1
 29618 2008 020F     		.2byte	0xf02
 29619 200a 97000000 		.4byte	0x97
 29620 200e 02       		.uleb128 0x2
 29621 200f 91       		.byte	0x91
 29622 2010 76       		.sleb128 -10
 29623 2011 00       		.byte	0
 29624 2012 30       		.uleb128 0x30
 29625 2013 8F100000 		.4byte	.LASF325
 29626 2017 01       		.byte	0x1
 29627 2018 2B0F     		.2byte	0xf2b
 29628 201a 00000000 		.4byte	.LFB112
 29629 201e 0C000000 		.4byte	.LFE112-.LFB112
 29630 2022 01       		.uleb128 0x1
 29631 2023 9C       		.byte	0x9c
 29632 2024 30       		.uleb128 0x30
 29633 2025 9B050000 		.4byte	.LASF326
 29634 2029 01       		.byte	0x1
 29635 202a 3A0F     		.2byte	0xf3a
 29636 202c 00000000 		.4byte	.LFB113
 29637 2030 0C000000 		.4byte	.LFE113-.LFB113
 29638 2034 01       		.uleb128 0x1
 29639 2035 9C       		.byte	0x9c
 29640 2036 31       		.uleb128 0x31
 29641 2037 50100000 		.4byte	.LASF327
 29642 203b 09       		.byte	0x9
 29643 203c 1207     		.2byte	0x712
 29644 203e 42200000 		.4byte	0x2042
 29645 2042 06       		.uleb128 0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 632


 29646 2043 81000000 		.4byte	0x81
 29647 2047 09       		.uleb128 0x9
 29648 2048 10030000 		.4byte	0x310
 29649 204c 57200000 		.4byte	0x2057
 29650 2050 0A       		.uleb128 0xa
 29651 2051 18010000 		.4byte	0x118
 29652 2055 01       		.byte	0x1
 29653 2056 00       		.byte	0
 29654 2057 31       		.uleb128 0x31
 29655 2058 20120000 		.4byte	.LASF328
 29656 205c 08       		.byte	0x8
 29657 205d F301     		.2byte	0x1f3
 29658 205f 47200000 		.4byte	0x2047
 29659 2063 31       		.uleb128 0x31
 29660 2064 F0030000 		.4byte	.LASF329
 29661 2068 08       		.byte	0x8
 29662 2069 F301     		.2byte	0x1f3
 29663 206b 47200000 		.4byte	0x2047
 29664 206f 31       		.uleb128 0x31
 29665 2070 F10B0000 		.4byte	.LASF330
 29666 2074 08       		.byte	0x8
 29667 2075 F301     		.2byte	0x1f3
 29668 2077 47200000 		.4byte	0x2047
 29669 207b 09       		.uleb128 0x9
 29670 207c 4D030000 		.4byte	0x34d
 29671 2080 8B200000 		.4byte	0x208b
 29672 2084 0A       		.uleb128 0xa
 29673 2085 18010000 		.4byte	0x118
 29674 2089 01       		.byte	0x1
 29675 208a 00       		.byte	0
 29676 208b 31       		.uleb128 0x31
 29677 208c 0F060000 		.4byte	.LASF331
 29678 2090 08       		.byte	0x8
 29679 2091 F401     		.2byte	0x1f4
 29680 2093 7B200000 		.4byte	0x207b
 29681 2097 31       		.uleb128 0x31
 29682 2098 6A120000 		.4byte	.LASF332
 29683 209c 08       		.byte	0x8
 29684 209d F401     		.2byte	0x1f4
 29685 209f 7B200000 		.4byte	0x207b
 29686 20a3 31       		.uleb128 0x31
 29687 20a4 6A000000 		.4byte	.LASF333
 29688 20a8 08       		.byte	0x8
 29689 20a9 F501     		.2byte	0x1f5
 29690 20ab CE030000 		.4byte	0x3ce
 29691 20af 31       		.uleb128 0x31
 29692 20b0 2B130000 		.4byte	.LASF334
 29693 20b4 08       		.byte	0x8
 29694 20b5 F501     		.2byte	0x1f5
 29695 20b7 CE030000 		.4byte	0x3ce
 29696 20bb 31       		.uleb128 0x31
 29697 20bc E80E0000 		.4byte	.LASF335
 29698 20c0 08       		.byte	0x8
 29699 20c1 F601     		.2byte	0x1f6
 29700 20c3 13040000 		.4byte	0x413
 29701 20c7 31       		.uleb128 0x31
 29702 20c8 5D000000 		.4byte	.LASF336
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 633


 29703 20cc 08       		.byte	0x8
 29704 20cd F701     		.2byte	0x1f7
 29705 20cf 2C040000 		.4byte	0x42c
 29706 20d3 31       		.uleb128 0x31
 29707 20d4 170F0000 		.4byte	.LASF337
 29708 20d8 08       		.byte	0x8
 29709 20d9 F801     		.2byte	0x1f8
 29710 20db 4F0A0000 		.4byte	0xa4f
 29711 20df 31       		.uleb128 0x31
 29712 20e0 070A0000 		.4byte	.LASF338
 29713 20e4 08       		.byte	0x8
 29714 20e5 F801     		.2byte	0x1f8
 29715 20e7 4F0A0000 		.4byte	0xa4f
 29716 20eb 31       		.uleb128 0x31
 29717 20ec 13090000 		.4byte	.LASF339
 29718 20f0 08       		.byte	0x8
 29719 20f1 F901     		.2byte	0x1f9
 29720 20f3 E50B0000 		.4byte	0xbe5
 29721 20f7 31       		.uleb128 0x31
 29722 20f8 55020000 		.4byte	.LASF340
 29723 20fc 08       		.byte	0x8
 29724 20fd FE01     		.2byte	0x1fe
 29725 20ff A3000000 		.4byte	0xa3
 29726 2103 31       		.uleb128 0x31
 29727 2104 2D0D0000 		.4byte	.LASF341
 29728 2108 08       		.byte	0x8
 29729 2109 FF01     		.2byte	0x1ff
 29730 210b A3000000 		.4byte	0xa3
 29731 210f 31       		.uleb128 0x31
 29732 2110 5F0D0000 		.4byte	.LASF342
 29733 2114 08       		.byte	0x8
 29734 2115 0202     		.2byte	0x202
 29735 2117 F3030000 		.4byte	0x3f3
 29736 211b 31       		.uleb128 0x31
 29737 211c F5100000 		.4byte	.LASF343
 29738 2120 08       		.byte	0x8
 29739 2121 0302     		.2byte	0x203
 29740 2123 5D080000 		.4byte	0x85d
 29741 2127 31       		.uleb128 0x31
 29742 2128 70100000 		.4byte	.LASF344
 29743 212c 08       		.byte	0x8
 29744 212d 0602     		.2byte	0x206
 29745 212f F3030000 		.4byte	0x3f3
 29746 2133 31       		.uleb128 0x31
 29747 2134 B7090000 		.4byte	.LASF345
 29748 2138 08       		.byte	0x8
 29749 2139 0D02     		.2byte	0x20d
 29750 213b 97000000 		.4byte	0x97
 29751 213f 31       		.uleb128 0x31
 29752 2140 B8030000 		.4byte	.LASF346
 29753 2144 08       		.byte	0x8
 29754 2145 0F02     		.2byte	0x20f
 29755 2147 97000000 		.4byte	0x97
 29756 214b 31       		.uleb128 0x31
 29757 214c 68090000 		.4byte	.LASF347
 29758 2150 08       		.byte	0x8
 29759 2151 1602     		.2byte	0x216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 634


 29760 2153 97000000 		.4byte	0x97
 29761 2157 31       		.uleb128 0x31
 29762 2158 C3060000 		.4byte	.LASF348
 29763 215c 08       		.byte	0x8
 29764 215d 1702     		.2byte	0x217
 29765 215f 97000000 		.4byte	0x97
 29766 2163 09       		.uleb128 0x9
 29767 2164 C7000000 		.4byte	0xc7
 29768 2168 73210000 		.4byte	0x2173
 29769 216c 0A       		.uleb128 0xa
 29770 216d 18010000 		.4byte	0x118
 29771 2171 0B       		.byte	0xb
 29772 2172 00       		.byte	0
 29773 2173 31       		.uleb128 0x31
 29774 2174 B0030000 		.4byte	.LASF349
 29775 2178 08       		.byte	0x8
 29776 2179 1A02     		.2byte	0x21a
 29777 217b 63210000 		.4byte	0x2163
 29778 217f 31       		.uleb128 0x31
 29779 2180 2C120000 		.4byte	.LASF350
 29780 2184 08       		.byte	0x8
 29781 2185 1B02     		.2byte	0x21b
 29782 2187 97000000 		.4byte	0x97
 29783 218b 09       		.uleb128 0x9
 29784 218c AF000000 		.4byte	0xaf
 29785 2190 9B210000 		.4byte	0x219b
 29786 2194 0A       		.uleb128 0xa
 29787 2195 18010000 		.4byte	0x118
 29788 2199 04       		.byte	0x4
 29789 219a 00       		.byte	0
 29790 219b 31       		.uleb128 0x31
 29791 219c 3D060000 		.4byte	.LASF351
 29792 21a0 08       		.byte	0x8
 29793 21a1 2102     		.2byte	0x221
 29794 21a3 8B210000 		.4byte	0x218b
 29795 21a7 31       		.uleb128 0x31
 29796 21a8 260E0000 		.4byte	.LASF352
 29797 21ac 08       		.byte	0x8
 29798 21ad 2202     		.2byte	0x222
 29799 21af 5D080000 		.4byte	0x85d
 29800 21b3 09       		.uleb128 0x9
 29801 21b4 A3000000 		.4byte	0xa3
 29802 21b8 C9210000 		.4byte	0x21c9
 29803 21bc 0A       		.uleb128 0xa
 29804 21bd 18010000 		.4byte	0x118
 29805 21c1 01       		.byte	0x1
 29806 21c2 0A       		.uleb128 0xa
 29807 21c3 18010000 		.4byte	0x118
 29808 21c7 04       		.byte	0x4
 29809 21c8 00       		.byte	0
 29810 21c9 31       		.uleb128 0x31
 29811 21ca 1E110000 		.4byte	.LASF353
 29812 21ce 08       		.byte	0x8
 29813 21cf 2302     		.2byte	0x223
 29814 21d1 B3210000 		.4byte	0x21b3
 29815 21d5 09       		.uleb128 0x9
 29816 21d6 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 635


 29817 21da EB210000 		.4byte	0x21eb
 29818 21de 0A       		.uleb128 0xa
 29819 21df 18010000 		.4byte	0x118
 29820 21e3 01       		.byte	0x1
 29821 21e4 0A       		.uleb128 0xa
 29822 21e5 18010000 		.4byte	0x118
 29823 21e9 04       		.byte	0x4
 29824 21ea 00       		.byte	0
 29825 21eb 31       		.uleb128 0x31
 29826 21ec 16060000 		.4byte	.LASF354
 29827 21f0 08       		.byte	0x8
 29828 21f1 2402     		.2byte	0x224
 29829 21f3 D5210000 		.4byte	0x21d5
 29830 21f7 31       		.uleb128 0x31
 29831 21f8 82050000 		.4byte	.LASF355
 29832 21fc 08       		.byte	0x8
 29833 21fd 2A02     		.2byte	0x22a
 29834 21ff 0A030000 		.4byte	0x30a
 29835 2203 31       		.uleb128 0x31
 29836 2204 9A0F0000 		.4byte	.LASF356
 29837 2208 08       		.byte	0x8
 29838 2209 2F02     		.2byte	0x22f
 29839 220b 97000000 		.4byte	0x97
 29840 220f 31       		.uleb128 0x31
 29841 2210 5B110000 		.4byte	.LASF357
 29842 2214 08       		.byte	0x8
 29843 2215 3002     		.2byte	0x230
 29844 2217 CE070000 		.4byte	0x7ce
 29845 221b 31       		.uleb128 0x31
 29846 221c 41100000 		.4byte	.LASF358
 29847 2220 08       		.byte	0x8
 29848 2221 3102     		.2byte	0x231
 29849 2223 73000000 		.4byte	0x73
 29850 2227 09       		.uleb128 0x9
 29851 2228 73000000 		.4byte	0x73
 29852 222c 37220000 		.4byte	0x2237
 29853 2230 0A       		.uleb128 0xa
 29854 2231 18010000 		.4byte	0x118
 29855 2235 04       		.byte	0x4
 29856 2236 00       		.byte	0
 29857 2237 31       		.uleb128 0x31
 29858 2238 84030000 		.4byte	.LASF359
 29859 223c 08       		.byte	0x8
 29860 223d 3202     		.2byte	0x232
 29861 223f 27220000 		.4byte	0x2227
 29862 2243 09       		.uleb128 0x9
 29863 2244 690B0000 		.4byte	0xb69
 29864 2248 53220000 		.4byte	0x2253
 29865 224c 0A       		.uleb128 0xa
 29866 224d 18010000 		.4byte	0x118
 29867 2251 04       		.byte	0x4
 29868 2252 00       		.byte	0
 29869 2253 31       		.uleb128 0x31
 29870 2254 90060000 		.4byte	.LASF360
 29871 2258 08       		.byte	0x8
 29872 2259 3302     		.2byte	0x233
 29873 225b 43220000 		.4byte	0x2243
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 636


 29874 225f 09       		.uleb128 0x9
 29875 2260 97000000 		.4byte	0x97
 29876 2264 75220000 		.4byte	0x2275
 29877 2268 0A       		.uleb128 0xa
 29878 2269 18010000 		.4byte	0x118
 29879 226d 04       		.byte	0x4
 29880 226e 0A       		.uleb128 0xa
 29881 226f 18010000 		.4byte	0x118
 29882 2273 02       		.byte	0x2
 29883 2274 00       		.byte	0
 29884 2275 31       		.uleb128 0x31
 29885 2276 590A0000 		.4byte	.LASF361
 29886 227a 08       		.byte	0x8
 29887 227b 3702     		.2byte	0x237
 29888 227d 5F220000 		.4byte	0x225f
 29889 2281 31       		.uleb128 0x31
 29890 2282 49120000 		.4byte	.LASF362
 29891 2286 08       		.byte	0x8
 29892 2287 3C02     		.2byte	0x23c
 29893 2289 97000000 		.4byte	0x97
 29894 228d 32       		.uleb128 0x32
 29895 228e 1D100000 		.4byte	.LASF363
 29896 2292 01       		.byte	0x1
 29897 2293 33       		.byte	0x33
 29898 2294 9E220000 		.4byte	0x229e
 29899 2298 05       		.uleb128 0x5
 29900 2299 03       		.byte	0x3
 29901 229a 00000000 		.4byte	EEPROM_ADDR
 29902 229e 07       		.uleb128 0x7
 29903 229f 04       		.byte	0x4
 29904 22a0 00010000 		.4byte	0x100
 29905 22a4 00       		.byte	0
 29906              		.section	.debug_abbrev,"",%progbits
 29907              	.Ldebug_abbrev0:
 29908 0000 01       		.uleb128 0x1
 29909 0001 11       		.uleb128 0x11
 29910 0002 01       		.byte	0x1
 29911 0003 25       		.uleb128 0x25
 29912 0004 0E       		.uleb128 0xe
 29913 0005 13       		.uleb128 0x13
 29914 0006 0B       		.uleb128 0xb
 29915 0007 03       		.uleb128 0x3
 29916 0008 0E       		.uleb128 0xe
 29917 0009 1B       		.uleb128 0x1b
 29918 000a 0E       		.uleb128 0xe
 29919 000b 55       		.uleb128 0x55
 29920 000c 17       		.uleb128 0x17
 29921 000d 11       		.uleb128 0x11
 29922 000e 01       		.uleb128 0x1
 29923 000f 10       		.uleb128 0x10
 29924 0010 17       		.uleb128 0x17
 29925 0011 00       		.byte	0
 29926 0012 00       		.byte	0
 29927 0013 02       		.uleb128 0x2
 29928 0014 24       		.uleb128 0x24
 29929 0015 00       		.byte	0
 29930 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 637


 29931 0017 0B       		.uleb128 0xb
 29932 0018 3E       		.uleb128 0x3e
 29933 0019 0B       		.uleb128 0xb
 29934 001a 03       		.uleb128 0x3
 29935 001b 0E       		.uleb128 0xe
 29936 001c 00       		.byte	0
 29937 001d 00       		.byte	0
 29938 001e 03       		.uleb128 0x3
 29939 001f 16       		.uleb128 0x16
 29940 0020 00       		.byte	0
 29941 0021 03       		.uleb128 0x3
 29942 0022 0E       		.uleb128 0xe
 29943 0023 3A       		.uleb128 0x3a
 29944 0024 0B       		.uleb128 0xb
 29945 0025 3B       		.uleb128 0x3b
 29946 0026 0B       		.uleb128 0xb
 29947 0027 49       		.uleb128 0x49
 29948 0028 13       		.uleb128 0x13
 29949 0029 00       		.byte	0
 29950 002a 00       		.byte	0
 29951 002b 04       		.uleb128 0x4
 29952 002c 24       		.uleb128 0x24
 29953 002d 00       		.byte	0
 29954 002e 0B       		.uleb128 0xb
 29955 002f 0B       		.uleb128 0xb
 29956 0030 3E       		.uleb128 0x3e
 29957 0031 0B       		.uleb128 0xb
 29958 0032 03       		.uleb128 0x3
 29959 0033 08       		.uleb128 0x8
 29960 0034 00       		.byte	0
 29961 0035 00       		.byte	0
 29962 0036 05       		.uleb128 0x5
 29963 0037 16       		.uleb128 0x16
 29964 0038 00       		.byte	0
 29965 0039 03       		.uleb128 0x3
 29966 003a 0E       		.uleb128 0xe
 29967 003b 3A       		.uleb128 0x3a
 29968 003c 0B       		.uleb128 0xb
 29969 003d 3B       		.uleb128 0x3b
 29970 003e 05       		.uleb128 0x5
 29971 003f 49       		.uleb128 0x49
 29972 0040 13       		.uleb128 0x13
 29973 0041 00       		.byte	0
 29974 0042 00       		.byte	0
 29975 0043 06       		.uleb128 0x6
 29976 0044 35       		.uleb128 0x35
 29977 0045 00       		.byte	0
 29978 0046 49       		.uleb128 0x49
 29979 0047 13       		.uleb128 0x13
 29980 0048 00       		.byte	0
 29981 0049 00       		.byte	0
 29982 004a 07       		.uleb128 0x7
 29983 004b 0F       		.uleb128 0xf
 29984 004c 00       		.byte	0
 29985 004d 0B       		.uleb128 0xb
 29986 004e 0B       		.uleb128 0xb
 29987 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 638


 29988 0050 13       		.uleb128 0x13
 29989 0051 00       		.byte	0
 29990 0052 00       		.byte	0
 29991 0053 08       		.uleb128 0x8
 29992 0054 26       		.uleb128 0x26
 29993 0055 00       		.byte	0
 29994 0056 49       		.uleb128 0x49
 29995 0057 13       		.uleb128 0x13
 29996 0058 00       		.byte	0
 29997 0059 00       		.byte	0
 29998 005a 09       		.uleb128 0x9
 29999 005b 01       		.uleb128 0x1
 30000 005c 01       		.byte	0x1
 30001 005d 49       		.uleb128 0x49
 30002 005e 13       		.uleb128 0x13
 30003 005f 01       		.uleb128 0x1
 30004 0060 13       		.uleb128 0x13
 30005 0061 00       		.byte	0
 30006 0062 00       		.byte	0
 30007 0063 0A       		.uleb128 0xa
 30008 0064 21       		.uleb128 0x21
 30009 0065 00       		.byte	0
 30010 0066 49       		.uleb128 0x49
 30011 0067 13       		.uleb128 0x13
 30012 0068 2F       		.uleb128 0x2f
 30013 0069 0B       		.uleb128 0xb
 30014 006a 00       		.byte	0
 30015 006b 00       		.byte	0
 30016 006c 0B       		.uleb128 0xb
 30017 006d 04       		.uleb128 0x4
 30018 006e 01       		.byte	0x1
 30019 006f 03       		.uleb128 0x3
 30020 0070 0E       		.uleb128 0xe
 30021 0071 0B       		.uleb128 0xb
 30022 0072 0B       		.uleb128 0xb
 30023 0073 49       		.uleb128 0x49
 30024 0074 13       		.uleb128 0x13
 30025 0075 3A       		.uleb128 0x3a
 30026 0076 0B       		.uleb128 0xb
 30027 0077 3B       		.uleb128 0x3b
 30028 0078 0B       		.uleb128 0xb
 30029 0079 01       		.uleb128 0x1
 30030 007a 13       		.uleb128 0x13
 30031 007b 00       		.byte	0
 30032 007c 00       		.byte	0
 30033 007d 0C       		.uleb128 0xc
 30034 007e 28       		.uleb128 0x28
 30035 007f 00       		.byte	0
 30036 0080 03       		.uleb128 0x3
 30037 0081 0E       		.uleb128 0xe
 30038 0082 1C       		.uleb128 0x1c
 30039 0083 0B       		.uleb128 0xb
 30040 0084 00       		.byte	0
 30041 0085 00       		.byte	0
 30042 0086 0D       		.uleb128 0xd
 30043 0087 13       		.uleb128 0x13
 30044 0088 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 639


 30045 0089 03       		.uleb128 0x3
 30046 008a 0E       		.uleb128 0xe
 30047 008b 3C       		.uleb128 0x3c
 30048 008c 19       		.uleb128 0x19
 30049 008d 00       		.byte	0
 30050 008e 00       		.byte	0
 30051 008f 0E       		.uleb128 0xe
 30052 0090 13       		.uleb128 0x13
 30053 0091 01       		.byte	0x1
 30054 0092 03       		.uleb128 0x3
 30055 0093 0E       		.uleb128 0xe
 30056 0094 0B       		.uleb128 0xb
 30057 0095 0B       		.uleb128 0xb
 30058 0096 3A       		.uleb128 0x3a
 30059 0097 0B       		.uleb128 0xb
 30060 0098 3B       		.uleb128 0x3b
 30061 0099 0B       		.uleb128 0xb
 30062 009a 01       		.uleb128 0x1
 30063 009b 13       		.uleb128 0x13
 30064 009c 00       		.byte	0
 30065 009d 00       		.byte	0
 30066 009e 0F       		.uleb128 0xf
 30067 009f 0D       		.uleb128 0xd
 30068 00a0 00       		.byte	0
 30069 00a1 03       		.uleb128 0x3
 30070 00a2 08       		.uleb128 0x8
 30071 00a3 3A       		.uleb128 0x3a
 30072 00a4 0B       		.uleb128 0xb
 30073 00a5 3B       		.uleb128 0x3b
 30074 00a6 0B       		.uleb128 0xb
 30075 00a7 49       		.uleb128 0x49
 30076 00a8 13       		.uleb128 0x13
 30077 00a9 38       		.uleb128 0x38
 30078 00aa 0B       		.uleb128 0xb
 30079 00ab 00       		.byte	0
 30080 00ac 00       		.byte	0
 30081 00ad 10       		.uleb128 0x10
 30082 00ae 0D       		.uleb128 0xd
 30083 00af 00       		.byte	0
 30084 00b0 03       		.uleb128 0x3
 30085 00b1 0E       		.uleb128 0xe
 30086 00b2 3A       		.uleb128 0x3a
 30087 00b3 0B       		.uleb128 0xb
 30088 00b4 3B       		.uleb128 0x3b
 30089 00b5 0B       		.uleb128 0xb
 30090 00b6 49       		.uleb128 0x49
 30091 00b7 13       		.uleb128 0x13
 30092 00b8 38       		.uleb128 0x38
 30093 00b9 0B       		.uleb128 0xb
 30094 00ba 00       		.byte	0
 30095 00bb 00       		.byte	0
 30096 00bc 11       		.uleb128 0x11
 30097 00bd 13       		.uleb128 0x13
 30098 00be 01       		.byte	0x1
 30099 00bf 03       		.uleb128 0x3
 30100 00c0 0E       		.uleb128 0xe
 30101 00c1 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 640


 30102 00c2 0B       		.uleb128 0xb
 30103 00c3 3A       		.uleb128 0x3a
 30104 00c4 0B       		.uleb128 0xb
 30105 00c5 3B       		.uleb128 0x3b
 30106 00c6 05       		.uleb128 0x5
 30107 00c7 01       		.uleb128 0x1
 30108 00c8 13       		.uleb128 0x13
 30109 00c9 00       		.byte	0
 30110 00ca 00       		.byte	0
 30111 00cb 12       		.uleb128 0x12
 30112 00cc 0D       		.uleb128 0xd
 30113 00cd 00       		.byte	0
 30114 00ce 03       		.uleb128 0x3
 30115 00cf 0E       		.uleb128 0xe
 30116 00d0 3A       		.uleb128 0x3a
 30117 00d1 0B       		.uleb128 0xb
 30118 00d2 3B       		.uleb128 0x3b
 30119 00d3 05       		.uleb128 0x5
 30120 00d4 49       		.uleb128 0x49
 30121 00d5 13       		.uleb128 0x13
 30122 00d6 38       		.uleb128 0x38
 30123 00d7 0B       		.uleb128 0xb
 30124 00d8 00       		.byte	0
 30125 00d9 00       		.byte	0
 30126 00da 13       		.uleb128 0x13
 30127 00db 0D       		.uleb128 0xd
 30128 00dc 00       		.byte	0
 30129 00dd 03       		.uleb128 0x3
 30130 00de 08       		.uleb128 0x8
 30131 00df 3A       		.uleb128 0x3a
 30132 00e0 0B       		.uleb128 0xb
 30133 00e1 3B       		.uleb128 0x3b
 30134 00e2 05       		.uleb128 0x5
 30135 00e3 49       		.uleb128 0x49
 30136 00e4 13       		.uleb128 0x13
 30137 00e5 38       		.uleb128 0x38
 30138 00e6 0B       		.uleb128 0xb
 30139 00e7 00       		.byte	0
 30140 00e8 00       		.byte	0
 30141 00e9 14       		.uleb128 0x14
 30142 00ea 13       		.uleb128 0x13
 30143 00eb 01       		.byte	0x1
 30144 00ec 03       		.uleb128 0x3
 30145 00ed 0E       		.uleb128 0xe
 30146 00ee 0B       		.uleb128 0xb
 30147 00ef 05       		.uleb128 0x5
 30148 00f0 3A       		.uleb128 0x3a
 30149 00f1 0B       		.uleb128 0xb
 30150 00f2 3B       		.uleb128 0x3b
 30151 00f3 05       		.uleb128 0x5
 30152 00f4 01       		.uleb128 0x1
 30153 00f5 13       		.uleb128 0x13
 30154 00f6 00       		.byte	0
 30155 00f7 00       		.byte	0
 30156 00f8 15       		.uleb128 0x15
 30157 00f9 0D       		.uleb128 0xd
 30158 00fa 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 641


 30159 00fb 03       		.uleb128 0x3
 30160 00fc 08       		.uleb128 0x8
 30161 00fd 3A       		.uleb128 0x3a
 30162 00fe 0B       		.uleb128 0xb
 30163 00ff 3B       		.uleb128 0x3b
 30164 0100 05       		.uleb128 0x5
 30165 0101 49       		.uleb128 0x49
 30166 0102 13       		.uleb128 0x13
 30167 0103 38       		.uleb128 0x38
 30168 0104 05       		.uleb128 0x5
 30169 0105 00       		.byte	0
 30170 0106 00       		.byte	0
 30171 0107 16       		.uleb128 0x16
 30172 0108 0D       		.uleb128 0xd
 30173 0109 00       		.byte	0
 30174 010a 03       		.uleb128 0x3
 30175 010b 0E       		.uleb128 0xe
 30176 010c 3A       		.uleb128 0x3a
 30177 010d 0B       		.uleb128 0xb
 30178 010e 3B       		.uleb128 0x3b
 30179 010f 05       		.uleb128 0x5
 30180 0110 49       		.uleb128 0x49
 30181 0111 13       		.uleb128 0x13
 30182 0112 38       		.uleb128 0x38
 30183 0113 05       		.uleb128 0x5
 30184 0114 00       		.byte	0
 30185 0115 00       		.byte	0
 30186 0116 17       		.uleb128 0x17
 30187 0117 2E       		.uleb128 0x2e
 30188 0118 01       		.byte	0x1
 30189 0119 03       		.uleb128 0x3
 30190 011a 0E       		.uleb128 0xe
 30191 011b 3A       		.uleb128 0x3a
 30192 011c 0B       		.uleb128 0xb
 30193 011d 3B       		.uleb128 0x3b
 30194 011e 05       		.uleb128 0x5
 30195 011f 27       		.uleb128 0x27
 30196 0120 19       		.uleb128 0x19
 30197 0121 49       		.uleb128 0x49
 30198 0122 13       		.uleb128 0x13
 30199 0123 20       		.uleb128 0x20
 30200 0124 0B       		.uleb128 0xb
 30201 0125 01       		.uleb128 0x1
 30202 0126 13       		.uleb128 0x13
 30203 0127 00       		.byte	0
 30204 0128 00       		.byte	0
 30205 0129 18       		.uleb128 0x18
 30206 012a 05       		.uleb128 0x5
 30207 012b 00       		.byte	0
 30208 012c 03       		.uleb128 0x3
 30209 012d 0E       		.uleb128 0xe
 30210 012e 3A       		.uleb128 0x3a
 30211 012f 0B       		.uleb128 0xb
 30212 0130 3B       		.uleb128 0x3b
 30213 0131 05       		.uleb128 0x5
 30214 0132 49       		.uleb128 0x49
 30215 0133 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 642


 30216 0134 00       		.byte	0
 30217 0135 00       		.byte	0
 30218 0136 19       		.uleb128 0x19
 30219 0137 34       		.uleb128 0x34
 30220 0138 00       		.byte	0
 30221 0139 03       		.uleb128 0x3
 30222 013a 0E       		.uleb128 0xe
 30223 013b 3A       		.uleb128 0x3a
 30224 013c 0B       		.uleb128 0xb
 30225 013d 3B       		.uleb128 0x3b
 30226 013e 05       		.uleb128 0x5
 30227 013f 49       		.uleb128 0x49
 30228 0140 13       		.uleb128 0x13
 30229 0141 00       		.byte	0
 30230 0142 00       		.byte	0
 30231 0143 1A       		.uleb128 0x1a
 30232 0144 2E       		.uleb128 0x2e
 30233 0145 01       		.byte	0x1
 30234 0146 3F       		.uleb128 0x3f
 30235 0147 19       		.uleb128 0x19
 30236 0148 03       		.uleb128 0x3
 30237 0149 0E       		.uleb128 0xe
 30238 014a 3A       		.uleb128 0x3a
 30239 014b 0B       		.uleb128 0xb
 30240 014c 3B       		.uleb128 0x3b
 30241 014d 0B       		.uleb128 0xb
 30242 014e 27       		.uleb128 0x27
 30243 014f 19       		.uleb128 0x19
 30244 0150 11       		.uleb128 0x11
 30245 0151 01       		.uleb128 0x1
 30246 0152 12       		.uleb128 0x12
 30247 0153 06       		.uleb128 0x6
 30248 0154 40       		.uleb128 0x40
 30249 0155 18       		.uleb128 0x18
 30250 0156 9642     		.uleb128 0x2116
 30251 0158 19       		.uleb128 0x19
 30252 0159 01       		.uleb128 0x1
 30253 015a 13       		.uleb128 0x13
 30254 015b 00       		.byte	0
 30255 015c 00       		.byte	0
 30256 015d 1B       		.uleb128 0x1b
 30257 015e 34       		.uleb128 0x34
 30258 015f 00       		.byte	0
 30259 0160 03       		.uleb128 0x3
 30260 0161 0E       		.uleb128 0xe
 30261 0162 3A       		.uleb128 0x3a
 30262 0163 0B       		.uleb128 0xb
 30263 0164 3B       		.uleb128 0x3b
 30264 0165 0B       		.uleb128 0xb
 30265 0166 49       		.uleb128 0x49
 30266 0167 13       		.uleb128 0x13
 30267 0168 02       		.uleb128 0x2
 30268 0169 18       		.uleb128 0x18
 30269 016a 00       		.byte	0
 30270 016b 00       		.byte	0
 30271 016c 1C       		.uleb128 0x1c
 30272 016d 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 643


 30273 016e 01       		.byte	0x1
 30274 016f 31       		.uleb128 0x31
 30275 0170 13       		.uleb128 0x13
 30276 0171 11       		.uleb128 0x11
 30277 0172 01       		.uleb128 0x1
 30278 0173 12       		.uleb128 0x12
 30279 0174 06       		.uleb128 0x6
 30280 0175 58       		.uleb128 0x58
 30281 0176 0B       		.uleb128 0xb
 30282 0177 59       		.uleb128 0x59
 30283 0178 0B       		.uleb128 0xb
 30284 0179 01       		.uleb128 0x1
 30285 017a 13       		.uleb128 0x13
 30286 017b 00       		.byte	0
 30287 017c 00       		.byte	0
 30288 017d 1D       		.uleb128 0x1d
 30289 017e 05       		.uleb128 0x5
 30290 017f 00       		.byte	0
 30291 0180 31       		.uleb128 0x31
 30292 0181 13       		.uleb128 0x13
 30293 0182 02       		.uleb128 0x2
 30294 0183 18       		.uleb128 0x18
 30295 0184 00       		.byte	0
 30296 0185 00       		.byte	0
 30297 0186 1E       		.uleb128 0x1e
 30298 0187 0B       		.uleb128 0xb
 30299 0188 01       		.byte	0x1
 30300 0189 11       		.uleb128 0x11
 30301 018a 01       		.uleb128 0x1
 30302 018b 12       		.uleb128 0x12
 30303 018c 06       		.uleb128 0x6
 30304 018d 00       		.byte	0
 30305 018e 00       		.byte	0
 30306 018f 1F       		.uleb128 0x1f
 30307 0190 34       		.uleb128 0x34
 30308 0191 00       		.byte	0
 30309 0192 31       		.uleb128 0x31
 30310 0193 13       		.uleb128 0x13
 30311 0194 02       		.uleb128 0x2
 30312 0195 18       		.uleb128 0x18
 30313 0196 00       		.byte	0
 30314 0197 00       		.byte	0
 30315 0198 20       		.uleb128 0x20
 30316 0199 1D       		.uleb128 0x1d
 30317 019a 01       		.byte	0x1
 30318 019b 31       		.uleb128 0x31
 30319 019c 13       		.uleb128 0x13
 30320 019d 11       		.uleb128 0x11
 30321 019e 01       		.uleb128 0x1
 30322 019f 12       		.uleb128 0x12
 30323 01a0 06       		.uleb128 0x6
 30324 01a1 58       		.uleb128 0x58
 30325 01a2 0B       		.uleb128 0xb
 30326 01a3 59       		.uleb128 0x59
 30327 01a4 0B       		.uleb128 0xb
 30328 01a5 00       		.byte	0
 30329 01a6 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 644


 30330 01a7 21       		.uleb128 0x21
 30331 01a8 2E       		.uleb128 0x2e
 30332 01a9 01       		.byte	0x1
 30333 01aa 3F       		.uleb128 0x3f
 30334 01ab 19       		.uleb128 0x19
 30335 01ac 03       		.uleb128 0x3
 30336 01ad 0E       		.uleb128 0xe
 30337 01ae 3A       		.uleb128 0x3a
 30338 01af 0B       		.uleb128 0xb
 30339 01b0 3B       		.uleb128 0x3b
 30340 01b1 05       		.uleb128 0x5
 30341 01b2 27       		.uleb128 0x27
 30342 01b3 19       		.uleb128 0x19
 30343 01b4 11       		.uleb128 0x11
 30344 01b5 01       		.uleb128 0x1
 30345 01b6 12       		.uleb128 0x12
 30346 01b7 06       		.uleb128 0x6
 30347 01b8 40       		.uleb128 0x40
 30348 01b9 18       		.uleb128 0x18
 30349 01ba 9642     		.uleb128 0x2116
 30350 01bc 19       		.uleb128 0x19
 30351 01bd 01       		.uleb128 0x1
 30352 01be 13       		.uleb128 0x13
 30353 01bf 00       		.byte	0
 30354 01c0 00       		.byte	0
 30355 01c1 22       		.uleb128 0x22
 30356 01c2 34       		.uleb128 0x34
 30357 01c3 00       		.byte	0
 30358 01c4 03       		.uleb128 0x3
 30359 01c5 0E       		.uleb128 0xe
 30360 01c6 3A       		.uleb128 0x3a
 30361 01c7 0B       		.uleb128 0xb
 30362 01c8 3B       		.uleb128 0x3b
 30363 01c9 05       		.uleb128 0x5
 30364 01ca 49       		.uleb128 0x49
 30365 01cb 13       		.uleb128 0x13
 30366 01cc 02       		.uleb128 0x2
 30367 01cd 18       		.uleb128 0x18
 30368 01ce 00       		.byte	0
 30369 01cf 00       		.byte	0
 30370 01d0 23       		.uleb128 0x23
 30371 01d1 21       		.uleb128 0x21
 30372 01d2 00       		.byte	0
 30373 01d3 49       		.uleb128 0x49
 30374 01d4 13       		.uleb128 0x13
 30375 01d5 2F       		.uleb128 0x2f
 30376 01d6 05       		.uleb128 0x5
 30377 01d7 00       		.byte	0
 30378 01d8 00       		.byte	0
 30379 01d9 24       		.uleb128 0x24
 30380 01da 05       		.uleb128 0x5
 30381 01db 00       		.byte	0
 30382 01dc 03       		.uleb128 0x3
 30383 01dd 0E       		.uleb128 0xe
 30384 01de 3A       		.uleb128 0x3a
 30385 01df 0B       		.uleb128 0xb
 30386 01e0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 645


 30387 01e1 05       		.uleb128 0x5
 30388 01e2 49       		.uleb128 0x49
 30389 01e3 13       		.uleb128 0x13
 30390 01e4 02       		.uleb128 0x2
 30391 01e5 18       		.uleb128 0x18
 30392 01e6 00       		.byte	0
 30393 01e7 00       		.byte	0
 30394 01e8 25       		.uleb128 0x25
 30395 01e9 34       		.uleb128 0x34
 30396 01ea 00       		.byte	0
 30397 01eb 03       		.uleb128 0x3
 30398 01ec 08       		.uleb128 0x8
 30399 01ed 3A       		.uleb128 0x3a
 30400 01ee 0B       		.uleb128 0xb
 30401 01ef 3B       		.uleb128 0x3b
 30402 01f0 05       		.uleb128 0x5
 30403 01f1 49       		.uleb128 0x49
 30404 01f2 13       		.uleb128 0x13
 30405 01f3 02       		.uleb128 0x2
 30406 01f4 18       		.uleb128 0x18
 30407 01f5 00       		.byte	0
 30408 01f6 00       		.byte	0
 30409 01f7 26       		.uleb128 0x26
 30410 01f8 2E       		.uleb128 0x2e
 30411 01f9 01       		.byte	0x1
 30412 01fa 3F       		.uleb128 0x3f
 30413 01fb 19       		.uleb128 0x19
 30414 01fc 03       		.uleb128 0x3
 30415 01fd 0E       		.uleb128 0xe
 30416 01fe 3A       		.uleb128 0x3a
 30417 01ff 0B       		.uleb128 0xb
 30418 0200 3B       		.uleb128 0x3b
 30419 0201 05       		.uleb128 0x5
 30420 0202 11       		.uleb128 0x11
 30421 0203 01       		.uleb128 0x1
 30422 0204 12       		.uleb128 0x12
 30423 0205 06       		.uleb128 0x6
 30424 0206 40       		.uleb128 0x40
 30425 0207 18       		.uleb128 0x18
 30426 0208 9642     		.uleb128 0x2116
 30427 020a 19       		.uleb128 0x19
 30428 020b 01       		.uleb128 0x1
 30429 020c 13       		.uleb128 0x13
 30430 020d 00       		.byte	0
 30431 020e 00       		.byte	0
 30432 020f 27       		.uleb128 0x27
 30433 0210 05       		.uleb128 0x5
 30434 0211 00       		.byte	0
 30435 0212 03       		.uleb128 0x3
 30436 0213 08       		.uleb128 0x8
 30437 0214 3A       		.uleb128 0x3a
 30438 0215 0B       		.uleb128 0xb
 30439 0216 3B       		.uleb128 0x3b
 30440 0217 05       		.uleb128 0x5
 30441 0218 49       		.uleb128 0x49
 30442 0219 13       		.uleb128 0x13
 30443 021a 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 646


 30444 021b 18       		.uleb128 0x18
 30445 021c 00       		.byte	0
 30446 021d 00       		.byte	0
 30447 021e 28       		.uleb128 0x28
 30448 021f 2E       		.uleb128 0x2e
 30449 0220 01       		.byte	0x1
 30450 0221 3F       		.uleb128 0x3f
 30451 0222 19       		.uleb128 0x19
 30452 0223 03       		.uleb128 0x3
 30453 0224 0E       		.uleb128 0xe
 30454 0225 3A       		.uleb128 0x3a
 30455 0226 0B       		.uleb128 0xb
 30456 0227 3B       		.uleb128 0x3b
 30457 0228 05       		.uleb128 0x5
 30458 0229 27       		.uleb128 0x27
 30459 022a 19       		.uleb128 0x19
 30460 022b 49       		.uleb128 0x49
 30461 022c 13       		.uleb128 0x13
 30462 022d 11       		.uleb128 0x11
 30463 022e 01       		.uleb128 0x1
 30464 022f 12       		.uleb128 0x12
 30465 0230 06       		.uleb128 0x6
 30466 0231 40       		.uleb128 0x40
 30467 0232 18       		.uleb128 0x18
 30468 0233 9742     		.uleb128 0x2117
 30469 0235 19       		.uleb128 0x19
 30470 0236 01       		.uleb128 0x1
 30471 0237 13       		.uleb128 0x13
 30472 0238 00       		.byte	0
 30473 0239 00       		.byte	0
 30474 023a 29       		.uleb128 0x29
 30475 023b 2E       		.uleb128 0x2e
 30476 023c 01       		.byte	0x1
 30477 023d 3F       		.uleb128 0x3f
 30478 023e 19       		.uleb128 0x19
 30479 023f 03       		.uleb128 0x3
 30480 0240 0E       		.uleb128 0xe
 30481 0241 3A       		.uleb128 0x3a
 30482 0242 0B       		.uleb128 0xb
 30483 0243 3B       		.uleb128 0x3b
 30484 0244 05       		.uleb128 0x5
 30485 0245 27       		.uleb128 0x27
 30486 0246 19       		.uleb128 0x19
 30487 0247 49       		.uleb128 0x49
 30488 0248 13       		.uleb128 0x13
 30489 0249 11       		.uleb128 0x11
 30490 024a 01       		.uleb128 0x1
 30491 024b 12       		.uleb128 0x12
 30492 024c 06       		.uleb128 0x6
 30493 024d 40       		.uleb128 0x40
 30494 024e 18       		.uleb128 0x18
 30495 024f 9642     		.uleb128 0x2116
 30496 0251 19       		.uleb128 0x19
 30497 0252 01       		.uleb128 0x1
 30498 0253 13       		.uleb128 0x13
 30499 0254 00       		.byte	0
 30500 0255 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 647


 30501 0256 2A       		.uleb128 0x2a
 30502 0257 2E       		.uleb128 0x2e
 30503 0258 01       		.byte	0x1
 30504 0259 3F       		.uleb128 0x3f
 30505 025a 19       		.uleb128 0x19
 30506 025b 03       		.uleb128 0x3
 30507 025c 0E       		.uleb128 0xe
 30508 025d 3A       		.uleb128 0x3a
 30509 025e 0B       		.uleb128 0xb
 30510 025f 3B       		.uleb128 0x3b
 30511 0260 05       		.uleb128 0x5
 30512 0261 27       		.uleb128 0x27
 30513 0262 19       		.uleb128 0x19
 30514 0263 11       		.uleb128 0x11
 30515 0264 01       		.uleb128 0x1
 30516 0265 12       		.uleb128 0x12
 30517 0266 06       		.uleb128 0x6
 30518 0267 40       		.uleb128 0x40
 30519 0268 18       		.uleb128 0x18
 30520 0269 9742     		.uleb128 0x2117
 30521 026b 19       		.uleb128 0x19
 30522 026c 01       		.uleb128 0x1
 30523 026d 13       		.uleb128 0x13
 30524 026e 00       		.byte	0
 30525 026f 00       		.byte	0
 30526 0270 2B       		.uleb128 0x2b
 30527 0271 2E       		.uleb128 0x2e
 30528 0272 00       		.byte	0
 30529 0273 3F       		.uleb128 0x3f
 30530 0274 19       		.uleb128 0x19
 30531 0275 03       		.uleb128 0x3
 30532 0276 0E       		.uleb128 0xe
 30533 0277 3A       		.uleb128 0x3a
 30534 0278 0B       		.uleb128 0xb
 30535 0279 3B       		.uleb128 0x3b
 30536 027a 05       		.uleb128 0x5
 30537 027b 27       		.uleb128 0x27
 30538 027c 19       		.uleb128 0x19
 30539 027d 11       		.uleb128 0x11
 30540 027e 01       		.uleb128 0x1
 30541 027f 12       		.uleb128 0x12
 30542 0280 06       		.uleb128 0x6
 30543 0281 40       		.uleb128 0x40
 30544 0282 18       		.uleb128 0x18
 30545 0283 9742     		.uleb128 0x2117
 30546 0285 19       		.uleb128 0x19
 30547 0286 00       		.byte	0
 30548 0287 00       		.byte	0
 30549 0288 2C       		.uleb128 0x2c
 30550 0289 2E       		.uleb128 0x2e
 30551 028a 01       		.byte	0x1
 30552 028b 3F       		.uleb128 0x3f
 30553 028c 19       		.uleb128 0x19
 30554 028d 03       		.uleb128 0x3
 30555 028e 0E       		.uleb128 0xe
 30556 028f 3A       		.uleb128 0x3a
 30557 0290 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 648


 30558 0291 3B       		.uleb128 0x3b
 30559 0292 05       		.uleb128 0x5
 30560 0293 11       		.uleb128 0x11
 30561 0294 01       		.uleb128 0x1
 30562 0295 12       		.uleb128 0x12
 30563 0296 06       		.uleb128 0x6
 30564 0297 40       		.uleb128 0x40
 30565 0298 18       		.uleb128 0x18
 30566 0299 9742     		.uleb128 0x2117
 30567 029b 19       		.uleb128 0x19
 30568 029c 01       		.uleb128 0x1
 30569 029d 13       		.uleb128 0x13
 30570 029e 00       		.byte	0
 30571 029f 00       		.byte	0
 30572 02a0 2D       		.uleb128 0x2d
 30573 02a1 0B       		.uleb128 0xb
 30574 02a2 01       		.byte	0x1
 30575 02a3 11       		.uleb128 0x11
 30576 02a4 01       		.uleb128 0x1
 30577 02a5 12       		.uleb128 0x12
 30578 02a6 06       		.uleb128 0x6
 30579 02a7 01       		.uleb128 0x1
 30580 02a8 13       		.uleb128 0x13
 30581 02a9 00       		.byte	0
 30582 02aa 00       		.byte	0
 30583 02ab 2E       		.uleb128 0x2e
 30584 02ac 2E       		.uleb128 0x2e
 30585 02ad 01       		.byte	0x1
 30586 02ae 3F       		.uleb128 0x3f
 30587 02af 19       		.uleb128 0x19
 30588 02b0 03       		.uleb128 0x3
 30589 02b1 0E       		.uleb128 0xe
 30590 02b2 3A       		.uleb128 0x3a
 30591 02b3 0B       		.uleb128 0xb
 30592 02b4 3B       		.uleb128 0x3b
 30593 02b5 05       		.uleb128 0x5
 30594 02b6 49       		.uleb128 0x49
 30595 02b7 13       		.uleb128 0x13
 30596 02b8 11       		.uleb128 0x11
 30597 02b9 01       		.uleb128 0x1
 30598 02ba 12       		.uleb128 0x12
 30599 02bb 06       		.uleb128 0x6
 30600 02bc 40       		.uleb128 0x40
 30601 02bd 18       		.uleb128 0x18
 30602 02be 9642     		.uleb128 0x2116
 30603 02c0 19       		.uleb128 0x19
 30604 02c1 01       		.uleb128 0x1
 30605 02c2 13       		.uleb128 0x13
 30606 02c3 00       		.byte	0
 30607 02c4 00       		.byte	0
 30608 02c5 2F       		.uleb128 0x2f
 30609 02c6 2E       		.uleb128 0x2e
 30610 02c7 00       		.byte	0
 30611 02c8 3F       		.uleb128 0x3f
 30612 02c9 19       		.uleb128 0x19
 30613 02ca 03       		.uleb128 0x3
 30614 02cb 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 649


 30615 02cc 3A       		.uleb128 0x3a
 30616 02cd 0B       		.uleb128 0xb
 30617 02ce 3B       		.uleb128 0x3b
 30618 02cf 05       		.uleb128 0x5
 30619 02d0 11       		.uleb128 0x11
 30620 02d1 01       		.uleb128 0x1
 30621 02d2 12       		.uleb128 0x12
 30622 02d3 06       		.uleb128 0x6
 30623 02d4 40       		.uleb128 0x40
 30624 02d5 18       		.uleb128 0x18
 30625 02d6 9642     		.uleb128 0x2116
 30626 02d8 19       		.uleb128 0x19
 30627 02d9 00       		.byte	0
 30628 02da 00       		.byte	0
 30629 02db 30       		.uleb128 0x30
 30630 02dc 2E       		.uleb128 0x2e
 30631 02dd 00       		.byte	0
 30632 02de 3F       		.uleb128 0x3f
 30633 02df 19       		.uleb128 0x19
 30634 02e0 03       		.uleb128 0x3
 30635 02e1 0E       		.uleb128 0xe
 30636 02e2 3A       		.uleb128 0x3a
 30637 02e3 0B       		.uleb128 0xb
 30638 02e4 3B       		.uleb128 0x3b
 30639 02e5 05       		.uleb128 0x5
 30640 02e6 11       		.uleb128 0x11
 30641 02e7 01       		.uleb128 0x1
 30642 02e8 12       		.uleb128 0x12
 30643 02e9 06       		.uleb128 0x6
 30644 02ea 40       		.uleb128 0x40
 30645 02eb 18       		.uleb128 0x18
 30646 02ec 9742     		.uleb128 0x2117
 30647 02ee 19       		.uleb128 0x19
 30648 02ef 00       		.byte	0
 30649 02f0 00       		.byte	0
 30650 02f1 31       		.uleb128 0x31
 30651 02f2 34       		.uleb128 0x34
 30652 02f3 00       		.byte	0
 30653 02f4 03       		.uleb128 0x3
 30654 02f5 0E       		.uleb128 0xe
 30655 02f6 3A       		.uleb128 0x3a
 30656 02f7 0B       		.uleb128 0xb
 30657 02f8 3B       		.uleb128 0x3b
 30658 02f9 05       		.uleb128 0x5
 30659 02fa 49       		.uleb128 0x49
 30660 02fb 13       		.uleb128 0x13
 30661 02fc 3F       		.uleb128 0x3f
 30662 02fd 19       		.uleb128 0x19
 30663 02fe 3C       		.uleb128 0x3c
 30664 02ff 19       		.uleb128 0x19
 30665 0300 00       		.byte	0
 30666 0301 00       		.byte	0
 30667 0302 32       		.uleb128 0x32
 30668 0303 34       		.uleb128 0x34
 30669 0304 00       		.byte	0
 30670 0305 03       		.uleb128 0x3
 30671 0306 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 650


 30672 0307 3A       		.uleb128 0x3a
 30673 0308 0B       		.uleb128 0xb
 30674 0309 3B       		.uleb128 0x3b
 30675 030a 0B       		.uleb128 0xb
 30676 030b 49       		.uleb128 0x49
 30677 030c 13       		.uleb128 0x13
 30678 030d 3F       		.uleb128 0x3f
 30679 030e 19       		.uleb128 0x19
 30680 030f 02       		.uleb128 0x2
 30681 0310 18       		.uleb128 0x18
 30682 0311 00       		.byte	0
 30683 0312 00       		.byte	0
 30684 0313 00       		.byte	0
 30685              		.section	.debug_aranges,"",%progbits
 30686 0000 A4010000 		.4byte	0x1a4
 30687 0004 0200     		.2byte	0x2
 30688 0006 00000000 		.4byte	.Ldebug_info0
 30689 000a 04       		.byte	0x4
 30690 000b 00       		.byte	0
 30691 000c 0000     		.2byte	0
 30692 000e 0000     		.2byte	0
 30693 0010 00000000 		.4byte	.LFB64
 30694 0014 DC040000 		.4byte	.LFE64-.LFB64
 30695 0018 00000000 		.4byte	.LFB65
 30696 001c 22000000 		.4byte	.LFE65-.LFB65
 30697 0020 00000000 		.4byte	.LFB66
 30698 0024 02010000 		.4byte	.LFE66-.LFB66
 30699 0028 00000000 		.4byte	.LFB67
 30700 002c 6E2F0000 		.4byte	.LFE67-.LFB67
 30701 0030 00000000 		.4byte	.LFB68
 30702 0034 C0170000 		.4byte	.LFE68-.LFB68
 30703 0038 00000000 		.4byte	.LFB69
 30704 003c 18140000 		.4byte	.LFE69-.LFB69
 30705 0040 00000000 		.4byte	.LFB70
 30706 0044 F40D0000 		.4byte	.LFE70-.LFB70
 30707 0048 00000000 		.4byte	.LFB71
 30708 004c 84000000 		.4byte	.LFE71-.LFB71
 30709 0050 00000000 		.4byte	.LFB72
 30710 0054 541F0000 		.4byte	.LFE72-.LFB72
 30711 0058 00000000 		.4byte	.LFB73
 30712 005c B4030000 		.4byte	.LFE73-.LFB73
 30713 0060 00000000 		.4byte	.LFB74
 30714 0064 3C120000 		.4byte	.LFE74-.LFB74
 30715 0068 00000000 		.4byte	.LFB75
 30716 006c C8000000 		.4byte	.LFE75-.LFB75
 30717 0070 00000000 		.4byte	.LFB76
 30718 0074 30010000 		.4byte	.LFE76-.LFB76
 30719 0078 00000000 		.4byte	.LFB77
 30720 007c 74030000 		.4byte	.LFE77-.LFB77
 30721 0080 00000000 		.4byte	.LFB78
 30722 0084 84000000 		.4byte	.LFE78-.LFB78
 30723 0088 00000000 		.4byte	.LFB79
 30724 008c 88000000 		.4byte	.LFE79-.LFB79
 30725 0090 00000000 		.4byte	.LFB80
 30726 0094 A0000000 		.4byte	.LFE80-.LFB80
 30727 0098 00000000 		.4byte	.LFB81
 30728 009c 3E000000 		.4byte	.LFE81-.LFB81
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 651


 30729 00a0 00000000 		.4byte	.LFB82
 30730 00a4 2E000000 		.4byte	.LFE82-.LFB82
 30731 00a8 00000000 		.4byte	.LFB83
 30732 00ac 98000000 		.4byte	.LFE83-.LFB83
 30733 00b0 00000000 		.4byte	.LFB84
 30734 00b4 80000000 		.4byte	.LFE84-.LFB84
 30735 00b8 00000000 		.4byte	.LFB85
 30736 00bc 5C000000 		.4byte	.LFE85-.LFB85
 30737 00c0 00000000 		.4byte	.LFB86
 30738 00c4 E4050000 		.4byte	.LFE86-.LFB86
 30739 00c8 00000000 		.4byte	.LFB87
 30740 00cc 38020000 		.4byte	.LFE87-.LFB87
 30741 00d0 00000000 		.4byte	.LFB88
 30742 00d4 28000000 		.4byte	.LFE88-.LFB88
 30743 00d8 00000000 		.4byte	.LFB89
 30744 00dc 78000000 		.4byte	.LFE89-.LFB89
 30745 00e0 00000000 		.4byte	.LFB90
 30746 00e4 B4000000 		.4byte	.LFE90-.LFB90
 30747 00e8 00000000 		.4byte	.LFB91
 30748 00ec B8000000 		.4byte	.LFE91-.LFB91
 30749 00f0 00000000 		.4byte	.LFB92
 30750 00f4 B8000000 		.4byte	.LFE92-.LFB92
 30751 00f8 00000000 		.4byte	.LFB93
 30752 00fc 44020000 		.4byte	.LFE93-.LFB93
 30753 0100 00000000 		.4byte	.LFB94
 30754 0104 BC000000 		.4byte	.LFE94-.LFB94
 30755 0108 00000000 		.4byte	.LFB95
 30756 010c 5C000000 		.4byte	.LFE95-.LFB95
 30757 0110 00000000 		.4byte	.LFB96
 30758 0114 38010000 		.4byte	.LFE96-.LFB96
 30759 0118 00000000 		.4byte	.LFB97
 30760 011c EC000000 		.4byte	.LFE97-.LFB97
 30761 0120 00000000 		.4byte	.LFB98
 30762 0124 64000000 		.4byte	.LFE98-.LFB98
 30763 0128 00000000 		.4byte	.LFB99
 30764 012c A8000000 		.4byte	.LFE99-.LFB99
 30765 0130 00000000 		.4byte	.LFB100
 30766 0134 34000000 		.4byte	.LFE100-.LFB100
 30767 0138 00000000 		.4byte	.LFB101
 30768 013c 20000000 		.4byte	.LFE101-.LFB101
 30769 0140 00000000 		.4byte	.LFB102
 30770 0144 6C000000 		.4byte	.LFE102-.LFB102
 30771 0148 00000000 		.4byte	.LFB103
 30772 014c BC010000 		.4byte	.LFE103-.LFB103
 30773 0150 00000000 		.4byte	.LFB104
 30774 0154 60000000 		.4byte	.LFE104-.LFB104
 30775 0158 00000000 		.4byte	.LFB105
 30776 015c 98050000 		.4byte	.LFE105-.LFB105
 30777 0160 00000000 		.4byte	.LFB106
 30778 0164 8C000000 		.4byte	.LFE106-.LFB106
 30779 0168 00000000 		.4byte	.LFB107
 30780 016c EC000000 		.4byte	.LFE107-.LFB107
 30781 0170 00000000 		.4byte	.LFB108
 30782 0174 5C000000 		.4byte	.LFE108-.LFB108
 30783 0178 00000000 		.4byte	.LFB109
 30784 017c C0000000 		.4byte	.LFE109-.LFB109
 30785 0180 00000000 		.4byte	.LFB110
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 652


 30786 0184 0C000000 		.4byte	.LFE110-.LFB110
 30787 0188 00000000 		.4byte	.LFB111
 30788 018c 1A000000 		.4byte	.LFE111-.LFB111
 30789 0190 00000000 		.4byte	.LFB112
 30790 0194 0C000000 		.4byte	.LFE112-.LFB112
 30791 0198 00000000 		.4byte	.LFB113
 30792 019c 0C000000 		.4byte	.LFE113-.LFB113
 30793 01a0 00000000 		.4byte	0
 30794 01a4 00000000 		.4byte	0
 30795              		.section	.debug_ranges,"",%progbits
 30796              	.Ldebug_ranges0:
 30797 0000 00000000 		.4byte	.LFB64
 30798 0004 DC040000 		.4byte	.LFE64
 30799 0008 00000000 		.4byte	.LFB65
 30800 000c 22000000 		.4byte	.LFE65
 30801 0010 00000000 		.4byte	.LFB66
 30802 0014 02010000 		.4byte	.LFE66
 30803 0018 00000000 		.4byte	.LFB67
 30804 001c 6E2F0000 		.4byte	.LFE67
 30805 0020 00000000 		.4byte	.LFB68
 30806 0024 C0170000 		.4byte	.LFE68
 30807 0028 00000000 		.4byte	.LFB69
 30808 002c 18140000 		.4byte	.LFE69
 30809 0030 00000000 		.4byte	.LFB70
 30810 0034 F40D0000 		.4byte	.LFE70
 30811 0038 00000000 		.4byte	.LFB71
 30812 003c 84000000 		.4byte	.LFE71
 30813 0040 00000000 		.4byte	.LFB72
 30814 0044 541F0000 		.4byte	.LFE72
 30815 0048 00000000 		.4byte	.LFB73
 30816 004c B4030000 		.4byte	.LFE73
 30817 0050 00000000 		.4byte	.LFB74
 30818 0054 3C120000 		.4byte	.LFE74
 30819 0058 00000000 		.4byte	.LFB75
 30820 005c C8000000 		.4byte	.LFE75
 30821 0060 00000000 		.4byte	.LFB76
 30822 0064 30010000 		.4byte	.LFE76
 30823 0068 00000000 		.4byte	.LFB77
 30824 006c 74030000 		.4byte	.LFE77
 30825 0070 00000000 		.4byte	.LFB78
 30826 0074 84000000 		.4byte	.LFE78
 30827 0078 00000000 		.4byte	.LFB79
 30828 007c 88000000 		.4byte	.LFE79
 30829 0080 00000000 		.4byte	.LFB80
 30830 0084 A0000000 		.4byte	.LFE80
 30831 0088 00000000 		.4byte	.LFB81
 30832 008c 3E000000 		.4byte	.LFE81
 30833 0090 00000000 		.4byte	.LFB82
 30834 0094 2E000000 		.4byte	.LFE82
 30835 0098 00000000 		.4byte	.LFB83
 30836 009c 98000000 		.4byte	.LFE83
 30837 00a0 00000000 		.4byte	.LFB84
 30838 00a4 80000000 		.4byte	.LFE84
 30839 00a8 00000000 		.4byte	.LFB85
 30840 00ac 5C000000 		.4byte	.LFE85
 30841 00b0 00000000 		.4byte	.LFB86
 30842 00b4 E4050000 		.4byte	.LFE86
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 653


 30843 00b8 00000000 		.4byte	.LFB87
 30844 00bc 38020000 		.4byte	.LFE87
 30845 00c0 00000000 		.4byte	.LFB88
 30846 00c4 28000000 		.4byte	.LFE88
 30847 00c8 00000000 		.4byte	.LFB89
 30848 00cc 78000000 		.4byte	.LFE89
 30849 00d0 00000000 		.4byte	.LFB90
 30850 00d4 B4000000 		.4byte	.LFE90
 30851 00d8 00000000 		.4byte	.LFB91
 30852 00dc B8000000 		.4byte	.LFE91
 30853 00e0 00000000 		.4byte	.LFB92
 30854 00e4 B8000000 		.4byte	.LFE92
 30855 00e8 00000000 		.4byte	.LFB93
 30856 00ec 44020000 		.4byte	.LFE93
 30857 00f0 00000000 		.4byte	.LFB94
 30858 00f4 BC000000 		.4byte	.LFE94
 30859 00f8 00000000 		.4byte	.LFB95
 30860 00fc 5C000000 		.4byte	.LFE95
 30861 0100 00000000 		.4byte	.LFB96
 30862 0104 38010000 		.4byte	.LFE96
 30863 0108 00000000 		.4byte	.LFB97
 30864 010c EC000000 		.4byte	.LFE97
 30865 0110 00000000 		.4byte	.LFB98
 30866 0114 64000000 		.4byte	.LFE98
 30867 0118 00000000 		.4byte	.LFB99
 30868 011c A8000000 		.4byte	.LFE99
 30869 0120 00000000 		.4byte	.LFB100
 30870 0124 34000000 		.4byte	.LFE100
 30871 0128 00000000 		.4byte	.LFB101
 30872 012c 20000000 		.4byte	.LFE101
 30873 0130 00000000 		.4byte	.LFB102
 30874 0134 6C000000 		.4byte	.LFE102
 30875 0138 00000000 		.4byte	.LFB103
 30876 013c BC010000 		.4byte	.LFE103
 30877 0140 00000000 		.4byte	.LFB104
 30878 0144 60000000 		.4byte	.LFE104
 30879 0148 00000000 		.4byte	.LFB105
 30880 014c 98050000 		.4byte	.LFE105
 30881 0150 00000000 		.4byte	.LFB106
 30882 0154 8C000000 		.4byte	.LFE106
 30883 0158 00000000 		.4byte	.LFB107
 30884 015c EC000000 		.4byte	.LFE107
 30885 0160 00000000 		.4byte	.LFB108
 30886 0164 5C000000 		.4byte	.LFE108
 30887 0168 00000000 		.4byte	.LFB109
 30888 016c C0000000 		.4byte	.LFE109
 30889 0170 00000000 		.4byte	.LFB110
 30890 0174 0C000000 		.4byte	.LFE110
 30891 0178 00000000 		.4byte	.LFB111
 30892 017c 1A000000 		.4byte	.LFE111
 30893 0180 00000000 		.4byte	.LFB112
 30894 0184 0C000000 		.4byte	.LFE112
 30895 0188 00000000 		.4byte	.LFB113
 30896 018c 0C000000 		.4byte	.LFE113
 30897 0190 00000000 		.4byte	0
 30898 0194 00000000 		.4byte	0
 30899              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 654


 30900              	.Ldebug_line0:
 30901 0000 8A1C0000 		.section	.debug_str,"MS",%progbits,1
 30901      0200C001 
 30901      00000201 
 30901      FB0E0D00 
 30901      01010101 
 30902              	.LASF200:
 30903 0000 696E666F 		.ascii	"infoSend\000"
 30903      53656E64 
 30903      00
 30904              	.LASF251:
 30905 0009 69645F73 		.ascii	"id_str\000"
 30905      747200
 30906              	.LASF25:
 30907 0010 73697A65 		.ascii	"sizetype\000"
 30907      74797065 
 30907      00
 30908              	.LASF33:
 30909 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 30909      494E4954 
 30909      5F4D454D 
 30909      00
 30910              	.LASF315:
 30911 0026 676C5F63 		.ascii	"gl_c\000"
 30911      00
 30912              	.LASF62:
 30913 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 30913      545F4D4F 
 30913      44455F45 
 30913      4D475F46 
 30913      4346535F 
 30914              	.LASF36:
 30915 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 30915      41435449 
 30915      56415445 
 30915      00
 30916              	.LASF186:
 30917 0050 75736572 		.ascii	"user\000"
 30917      00
 30918              	.LASF11:
 30919 0055 696E7433 		.ascii	"int32_t\000"
 30919      325F7400 
 30920              	.LASF336:
 30921 005d 675F7278 		.ascii	"g_rx\000"
 30921      00
 30922              	.LASF97:
 30923 0062 73745F64 		.ascii	"st_data\000"
 30923      61746100 
 30924              	.LASF333:
 30925 006a 675F656D 		.ascii	"g_emg_meas\000"
 30925      675F6D65 
 30925      617300
 30926              	.LASF282:
 30927 0075 77726974 		.ascii	"writeStatus\000"
 30927      65537461 
 30927      74757300 
 30928              	.LASF15:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 655


 30929 0081 75696E74 		.ascii	"uint32\000"
 30929      333200
 30930              	.LASF321:
 30931 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 30931      7365745F 
 30931      62617564 
 30931      72617465 
 30931      00
 30932              	.LASF322:
 30933 0099 6169725F 		.ascii	"air_chambers_control\000"
 30933      6368616D 
 30933      62657273 
 30933      5F636F6E 
 30933      74726F6C 
 30934              	.LASF259:
 30935 00ae 7370695F 		.ascii	"spi_read_delay_str_len\000"
 30935      72656164 
 30935      5F64656C 
 30935      61795F73 
 30935      74725F6C 
 30936              	.LASF216:
 30937 00c5 7061636B 		.ascii	"packet_lenght\000"
 30937      65745F6C 
 30937      656E6768 
 30937      7400
 30938              	.LASF261:
 30939 00d3 70726570 		.ascii	"prepare_generic_info\000"
 30939      6172655F 
 30939      67656E65 
 30939      7269635F 
 30939      696E666F 
 30940              	.LASF133:
 30941 00e8 706F735F 		.ascii	"pos_lim_inf\000"
 30941      6C696D5F 
 30941      696E6600 
 30942              	.LASF226:
 30943 00f4 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 30943      4E445F4D 
 30943      4F544F52 
 30943      5F494458 
 30943      00
 30944              	.LASF308:
 30945 0105 636D645F 		.ascii	"cmd_get_inputs\000"
 30945      6765745F 
 30945      696E7075 
 30945      747300
 30946              	.LASF61:
 30947 0114 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 30947      545F4D4F 
 30947      44455F45 
 30947      4D475F46 
 30947      43465300 
 30948              	.LASF137:
 30949 0128 63757272 		.ascii	"curr_lookup\000"
 30949      5F6C6F6F 
 30949      6B757000 
 30950              	.LASF105:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 656


 30951 0134 72657374 		.ascii	"rest_counter\000"
 30951      5F636F75 
 30951      6E746572 
 30951      00
 30952              	.LASF313:
 30953 0141 636D645F 		.ascii	"cmd_get_imu_readings\000"
 30953      6765745F 
 30953      696D755F 
 30953      72656164 
 30953      696E6773 
 30954              	.LASF175:
 30955 0156 73745F4D 		.ascii	"st_MASTER_spec\000"
 30955      41535445 
 30955      525F7370 
 30955      656300
 30956              	.LASF254:
 30957 0165 69645F73 		.ascii	"id_str_len\000"
 30957      74725F6C 
 30957      656E00
 30958              	.LASF60:
 30959 0170 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 30959      545F4D4F 
 30959      44455F45 
 30959      4D475F49 
 30959      4E544547 
 30960              	.LASF228:
 30961 0188 6D5F746D 		.ascii	"m_tmp\000"
 30961      7000
 30962              	.LASF16:
 30963 018e 696E7438 		.ascii	"int8\000"
 30963      00
 30964              	.LASF205:
 30965 0193 6765745F 		.ascii	"get_param_list\000"
 30965      70617261 
 30965      6D5F6C69 
 30965      737400
 30966              	.LASF312:
 30967 01a2 636D645F 		.ascii	"cmd_get_emg\000"
 30967      6765745F 
 30967      656D6700 
 30968              	.LASF152:
 30969 01ae 73745F65 		.ascii	"st_emg\000"
 30969      6D6700
 30970              	.LASF103:
 30971 01b5 706F7369 		.ascii	"position_hist\000"
 30971      74696F6E 
 30971      5F686973 
 30971      7400
 30972              	.LASF193:
 30973 01c3 74656D70 		.ascii	"temp_value\000"
 30973      5F76616C 
 30973      756500
 30974              	.LASF368:
 30975 01ce 72657375 		.ascii	"result\000"
 30975      6C7400
 30976              	.LASF253:
 30977 01d5 7370695F 		.ascii	"spi_read_delay_str\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 657


 30977      72656164 
 30977      5F64656C 
 30977      61795F73 
 30977      747200
 30978              	.LASF100:
 30979 01e8 72656164 		.ascii	"ready\000"
 30979      7900
 30980              	.LASF149:
 30981 01ee 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 30981      6964785F 
 30981      7573655F 
 30981      666F725F 
 30981      636F6E74 
 30982              	.LASF109:
 30983 0206 73745F64 		.ascii	"st_device\000"
 30983      65766963 
 30983      6500
 30984              	.LASF59:
 30985 0210 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 30985      545F4D4F 
 30985      44455F45 
 30985      4D475F50 
 30985      524F504F 
 30986              	.LASF114:
 30987 022c 7573655F 		.ascii	"use_2nd_motor_flag\000"
 30987      326E645F 
 30987      6D6F746F 
 30987      725F666C 
 30987      616700
 30988              	.LASF304:
 30989 023f 745F7374 		.ascii	"t_start\000"
 30989      61727400 
 30990              	.LASF159:
 30991 0247 72656164 		.ascii	"read_imu_flag\000"
 30991      5F696D75 
 30991      5F666C61 
 30991      6700
 30992              	.LASF340:
 30993 0255 74696D65 		.ascii	"timer_value\000"
 30993      725F7661 
 30993      6C756500 
 30994              	.LASF4:
 30995 0261 6C6F6E67 		.ascii	"long int\000"
 30995      20696E74 
 30995      00
 30996              	.LASF184:
 30997 026a 756E7573 		.ascii	"unused_bytes1\000"
 30997      65645F62 
 30997      79746573 
 30997      3100
 30998              	.LASF324:
 30999 0278 6D6F746F 		.ascii	"motor_idx\000"
 30999      725F6964 
 30999      7800
 31000              	.LASF113:
 31001 0282 72657365 		.ascii	"reset_counters\000"
 31001      745F636F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 658


 31001      756E7465 
 31001      727300
 31002              	.LASF169:
 31003 0291 75736572 		.ascii	"user_emg\000"
 31003      5F656D67 
 31003      00
 31004              	.LASF291:
 31005 029a 7365745A 		.ascii	"setZeros\000"
 31005      65726F73 
 31005      00
 31006              	.LASF118:
 31007 02a3 756E7573 		.ascii	"unused_bytes\000"
 31007      65645F62 
 31007      79746573 
 31007      00
 31008              	.LASF189:
 31009 02b0 61636365 		.ascii	"accel_value\000"
 31009      6C5F7661 
 31009      6C756500 
 31010              	.LASF209:
 31011 02bc 4E554D5F 		.ascii	"NUM_ITEMS\000"
 31011      4954454D 
 31011      5300
 31012              	.LASF101:
 31013 02c6 73745F63 		.ascii	"st_counters\000"
 31013      6F756E74 
 31013      65727300 
 31014              	.LASF232:
 31015 02d2 4D454D5F 		.ascii	"MEM_P\000"
 31015      5000
 31016              	.LASF19:
 31017 02d8 666C6F61 		.ascii	"float32\000"
 31017      74333200 
 31018              	.LASF319:
 31019 02e0 636D645F 		.ascii	"cmd_get_ADC_map\000"
 31019      6765745F 
 31019      4144435F 
 31019      6D617000 
 31020              	.LASF41:
 31021 02f0 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 31021      4745545F 
 31021      43555252 
 31021      454E5453 
 31021      00
 31022              	.LASF102:
 31023 0301 656D675F 		.ascii	"emg_counter\000"
 31023      636F756E 
 31023      74657200 
 31024              	.LASF320:
 31025 030d 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 31025      6765745F 
 31025      4144435F 
 31025      72617700 
 31026              	.LASF241:
 31027 031d 6175785F 		.ascii	"aux_float2\000"
 31027      666C6F61 
 31027      743200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 659


 31028              	.LASF307:
 31029 0328 636D645F 		.ascii	"cmd_ping\000"
 31029      70696E67 
 31029      00
 31030              	.LASF260:
 31031 0331 7370695F 		.ascii	"spi_delay_menu_len\000"
 31031      64656C61 
 31031      795F6D65 
 31031      6E755F6C 
 31031      656E00
 31032              	.LASF239:
 31033 0344 7365745F 		.ascii	"set_custom_param\000"
 31033      63757374 
 31033      6F6D5F70 
 31033      6172616D 
 31033      00
 31034              	.LASF0:
 31035 0355 7369676E 		.ascii	"signed char\000"
 31035      65642063 
 31035      68617200 
 31036              	.LASF168:
 31037 0361 75736572 		.ascii	"user_code_string\000"
 31037      5F636F64 
 31037      655F7374 
 31037      72696E67 
 31037      00
 31038              	.LASF194:
 31039 0372 73745F63 		.ascii	"st_calib\000"
 31039      616C6962 
 31039      00
 31040              	.LASF280:
 31041 037b 6D656D53 		.ascii	"memStore\000"
 31041      746F7265 
 31041      00
 31042              	.LASF359:
 31043 0384 73696E67 		.ascii	"single_imu_size\000"
 31043      6C655F69 
 31043      6D755F73 
 31043      697A6500 
 31044              	.LASF69:
 31045 0394 6D6F746F 		.ascii	"motor_supply_type\000"
 31045      725F7375 
 31045      70706C79 
 31045      5F747970 
 31045      6500
 31046              	.LASF306:
 31047 03a6 72656164 		.ascii	"read_flag\000"
 31047      5F666C61 
 31047      6700
 31048              	.LASF349:
 31049 03b0 4144435F 		.ascii	"ADC_buf\000"
 31049      62756600 
 31050              	.LASF346:
 31051 03b8 696E7465 		.ascii	"interrupt_flag\000"
 31051      72727570 
 31051      745F666C 
 31051      616700
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 660


 31052              	.LASF265:
 31053 03c7 73746570 		.ascii	"step\000"
 31053      00
 31054              	.LASF1:
 31055 03cc 756E7369 		.ascii	"unsigned char\000"
 31055      676E6564 
 31055      20636861 
 31055      7200
 31056              	.LASF143:
 31057 03da 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 31057      72657665 
 31057      72735F6D 
 31057      6F746F72 
 31057      5F666C61 
 31058              	.LASF329:
 31059 03f0 675F7265 		.ascii	"g_refNew\000"
 31059      664E6577 
 31059      00
 31060              	.LASF112:
 31061 03f9 72696768 		.ascii	"right_left\000"
 31061      745F6C65 
 31061      667400
 31062              	.LASF29:
 31063 0404 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 31063      53544F52 
 31063      455F4445 
 31063      4641554C 
 31063      545F5041 
 31064              	.LASF141:
 31065 041d 656E636F 		.ascii	"encoder_line\000"
 31065      6465725F 
 31065      6C696E65 
 31065      00
 31066              	.LASF366:
 31067 042a 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 31067      73657273 
 31067      5C4D6174 
 31067      7469615C 
 31067      446F6375 
 31068 0458 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 31068      656E6572 
 31068      69632D46 
 31068      572D5053 
 31068      6F43355C 
 31069              	.LASF255:
 31070 047a 6E5F696D 		.ascii	"n_imu_str_len\000"
 31070      755F7374 
 31070      725F6C65 
 31070      6E00
 31071              	.LASF258:
 31072 0488 696D755F 		.ascii	"imu_table_str_len\000"
 31072      7461626C 
 31072      655F7374 
 31072      725F6C65 
 31072      6E00
 31073              	.LASF278:
 31074 049a 76616C75 		.ascii	"value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 661


 31074      6500
 31075              	.LASF188:
 31076 04a0 666C6167 		.ascii	"flags\000"
 31076      7300
 31077              	.LASF96:
 31078 04a6 70726573 		.ascii	"pressure\000"
 31078      73757265 
 31078      00
 31079              	.LASF37:
 31080 04af 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 31080      4745545F 
 31080      41435449 
 31080      56415445 
 31080      00
 31081              	.LASF22:
 31082 04c0 63686172 		.ascii	"char\000"
 31082      00
 31083              	.LASF136:
 31084 04c5 6D61785F 		.ascii	"max_step_pos\000"
 31084      73746570 
 31084      5F706F73 
 31084      00
 31085              	.LASF284:
 31086 04d2 7265745F 		.ascii	"ret_val\000"
 31086      76616C00 
 31087              	.LASF238:
 31088 04da 6D656E75 		.ascii	"menu_idx\000"
 31088      5F696478 
 31088      00
 31089              	.LASF247:
 31090 04e3 73746172 		.ascii	"start_byte\000"
 31090      745F6279 
 31090      746500
 31091              	.LASF244:
 31092 04ee 6E756D5F 		.ascii	"num_mag_cal_params\000"
 31092      6D61675F 
 31092      63616C5F 
 31092      70617261 
 31092      6D7300
 31093              	.LASF142:
 31094 0501 70776D5F 		.ascii	"pwm_rate_limiter\000"
 31094      72617465 
 31094      5F6C696D 
 31094      69746572 
 31094      00
 31095              	.LASF122:
 31096 0512 6B5F645F 		.ascii	"k_d_c\000"
 31096      6300
 31097              	.LASF95:
 31098 0518 73745F66 		.ascii	"st_fb_meas\000"
 31098      625F6D65 
 31098      617300
 31099              	.LASF202:
 31100 0523 7061636B 		.ascii	"packet_string\000"
 31100      65745F73 
 31100      7472696E 
 31100      6700
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 662


 31101              	.LASF147:
 31102 0531 6D5F6D75 		.ascii	"m_mult\000"
 31102      6C7400
 31103              	.LASF121:
 31104 0538 6B5F695F 		.ascii	"k_i_c\000"
 31104      6300
 31105              	.LASF281:
 31106 053e 64697370 		.ascii	"displacement\000"
 31106      6C616365 
 31106      6D656E74 
 31106      00
 31107              	.LASF275:
 31108 054b 64617461 		.ascii	"data_length\000"
 31108      5F6C656E 
 31108      67746800 
 31109              	.LASF134:
 31110 0557 706F735F 		.ascii	"pos_lim_sup\000"
 31110      6C696D5F 
 31110      73757000 
 31111              	.LASF155:
 31112 0563 656D675F 		.ascii	"emg_speed\000"
 31112      73706565 
 31112      6400
 31113              	.LASF173:
 31114 056d 72657374 		.ascii	"rest_vel\000"
 31114      5F76656C 
 31114      00
 31115              	.LASF215:
 31116 0576 7061636B 		.ascii	"packet_data\000"
 31116      65745F64 
 31116      61746100 
 31117              	.LASF355:
 31118 0582 7046696C 		.ascii	"pFile\000"
 31118      6500
 31119              	.LASF166:
 31120 0588 4144435F 		.ascii	"ADC_conf\000"
 31120      636F6E66 
 31120      00
 31121              	.LASF272:
 31122 0591 636F6D6D 		.ascii	"commWrite\000"
 31122      57726974 
 31122      6500
 31123              	.LASF326:
 31124 059b 64656163 		.ascii	"deactivate_slaves\000"
 31124      74697661 
 31124      74655F73 
 31124      6C617665 
 31124      7300
 31125              	.LASF283:
 31126 05ad 70616765 		.ascii	"pages\000"
 31126      7300
 31127              	.LASF287:
 31128 05b3 6D656D49 		.ascii	"memInit\000"
 31128      6E697400 
 31129              	.LASF124:
 31130 05bb 6B5F695F 		.ascii	"k_i_dl\000"
 31130      646C00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 663


 31131              	.LASF38:
 31132 05c2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 31132      5345545F 
 31132      494E5055 
 31132      545300
 31133              	.LASF98:
 31134 05d1 62756666 		.ascii	"buffer\000"
 31134      657200
 31135              	.LASF126:
 31136 05d8 6B5F705F 		.ascii	"k_p_c_dl\000"
 31136      635F646C 
 31136      00
 31137              	.LASF292:
 31138 05e1 636D645F 		.ascii	"cmd_get_measurements\000"
 31138      6765745F 
 31138      6D656173 
 31138      7572656D 
 31138      656E7473 
 31139              	.LASF197:
 31140 05f6 73706565 		.ascii	"speed\000"
 31140      6400
 31141              	.LASF201:
 31142 05fc 72785F63 		.ascii	"rx_cmd\000"
 31142      6D6400
 31143              	.LASF84:
 31144 0603 54595045 		.ascii	"TYPE_DOUBLE\000"
 31144      5F444F55 
 31144      424C4500 
 31145              	.LASF331:
 31146 060f 675F6D65 		.ascii	"g_meas\000"
 31146      617300
 31147              	.LASF354:
 31148 0616 456E636F 		.ascii	"Encoder_Check\000"
 31148      6465725F 
 31148      43686563 
 31148      6B00
 31149              	.LASF296:
 31150 0624 6C617374 		.ascii	"last_aux_int16\000"
 31150      5F617578 
 31150      5F696E74 
 31150      313600
 31151              	.LASF73:
 31152 0633 41434B5F 		.ascii	"ACK_ERROR\000"
 31152      4552524F 
 31152      5200
 31153              	.LASF351:
 31154 063d 64617461 		.ascii	"data_encoder_raw\000"
 31154      5F656E63 
 31154      6F646572 
 31154      5F726177 
 31154      00
 31155              	.LASF57:
 31156 064e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 31156      545F4D4F 
 31156      44455F45 
 31156      58544552 
 31156      4E414C00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 664


 31157              	.LASF230:
 31158 0662 696E6465 		.ascii	"index\000"
 31158      7800
 31159              	.LASF180:
 31160 0668 6D617869 		.ascii	"maximum_pressure_kPa\000"
 31160      6D756D5F 
 31160      70726573 
 31160      73757265 
 31160      5F6B5061 
 31161              	.LASF174:
 31162 067d 72657374 		.ascii	"rest_position_flag\000"
 31162      5F706F73 
 31162      6974696F 
 31162      6E5F666C 
 31162      616700
 31163              	.LASF360:
 31164 0690 675F696D 		.ascii	"g_imu\000"
 31164      7500
 31165              	.LASF127:
 31166 0696 6B5F695F 		.ascii	"k_i_c_dl\000"
 31166      635F646C 
 31166      00
 31167              	.LASF302:
 31168 069f 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 31168      52656164 
 31168      52657343 
 31168      75727246 
 31168      726F6D53 
 31169              	.LASF250:
 31170 06b5 6D61675F 		.ascii	"mag_param_str\000"
 31170      70617261 
 31170      6D5F7374 
 31170      7200
 31171              	.LASF348:
 31172 06c3 72657365 		.ascii	"reset_PSoC_flag\000"
 31172      745F5053 
 31172      6F435F66 
 31172      6C616700 
 31173              	.LASF85:
 31174 06d3 54595045 		.ascii	"TYPE_STRING\000"
 31174      5F535452 
 31174      494E4700 
 31175              	.LASF68:
 31176 06df 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 31176      5F414E44 
 31176      5F504F53 
 31176      5F434F4E 
 31176      54524F4C 
 31177              	.LASF28:
 31178 06f4 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 31178      53544F52 
 31178      455F5041 
 31178      52414D53 
 31178      00
 31179              	.LASF212:
 31180 0705 50415241 		.ascii	"PARAMS_STR\000"
 31180      4D535F53 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 665


 31180      545200
 31181              	.LASF195:
 31182 0710 656E6162 		.ascii	"enabled\000"
 31182      6C656400 
 31183              	.LASF7:
 31184 0718 6C6F6E67 		.ascii	"long unsigned int\000"
 31184      20756E73 
 31184      69676E65 
 31184      6420696E 
 31184      7400
 31185              	.LASF107:
 31186 072a 746F7461 		.ascii	"total_time_on\000"
 31186      6C5F7469 
 31186      6D655F6F 
 31186      6E00
 31187              	.LASF32:
 31188 0738 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 31188      424F4F54 
 31188      4C4F4144 
 31188      455200
 31189              	.LASF92:
 31190 0747 686F6C64 		.ascii	"hold_curr\000"
 31190      5F637572 
 31190      7200
 31191              	.LASF294:
 31192 0751 636D645F 		.ascii	"cmd_get_accelerations\000"
 31192      6765745F 
 31192      61636365 
 31192      6C657261 
 31192      74696F6E 
 31193              	.LASF108:
 31194 0767 746F7461 		.ascii	"total_time_rest\000"
 31194      6C5F7469 
 31194      6D655F72 
 31194      65737400 
 31195              	.LASF204:
 31196 0777 7374725F 		.ascii	"str_sd_data\000"
 31196      73645F64 
 31196      61746100 
 31197              	.LASF129:
 31198 0783 61637469 		.ascii	"activ\000"
 31198      7600
 31199              	.LASF214:
 31200 0789 4D454E55 		.ascii	"MENU_STR\000"
 31200      5F535452 
 31200      00
 31201              	.LASF146:
 31202 0792 6D5F6F66 		.ascii	"m_off\000"
 31202      6600
 31203              	.LASF74:
 31204 0798 41434B5F 		.ascii	"ACK_OK\000"
 31204      4F4B00
 31205              	.LASF76:
 31206 079f 54595045 		.ascii	"TYPE_FLAG\000"
 31206      5F464C41 
 31206      4700
 31207              	.LASF192:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 666


 31208 07a9 71756174 		.ascii	"quat_value\000"
 31208      5F76616C 
 31208      756500
 31209              	.LASF246:
 31210 07b4 7061636B 		.ascii	"packet_length\000"
 31210      65745F6C 
 31210      656E6774 
 31210      6800
 31211              	.LASF171:
 31212 07c2 72657374 		.ascii	"rest_pos\000"
 31212      5F706F73 
 31212      00
 31213              	.LASF87:
 31214 07cb 63757272 		.ascii	"curr\000"
 31214      00
 31215              	.LASF139:
 31216 07d0 696E7075 		.ascii	"input_mode\000"
 31216      745F6D6F 
 31216      646500
 31217              	.LASF66:
 31218 07db 434F4E54 		.ascii	"CONTROL_PWM\000"
 31218      524F4C5F 
 31218      50574D00 
 31219              	.LASF43:
 31220 07e7 434D445F 		.ascii	"CMD_GET_EMG\000"
 31220      4745545F 
 31220      454D4700 
 31221              	.LASF288:
 31222 07f3 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 31222      6E69745F 
 31222      536F6674 
 31222      48616E64 
 31222      50726F00 
 31223              	.LASF31:
 31224 0807 434D445F 		.ascii	"CMD_GET_INFO\000"
 31224      4745545F 
 31224      494E464F 
 31224      00
 31225              	.LASF242:
 31226 0814 6765745F 		.ascii	"get_IMU_param_list\000"
 31226      494D555F 
 31226      70617261 
 31226      6D5F6C69 
 31226      737400
 31227              	.LASF316:
 31228 0827 73696E67 		.ascii	"single_packet\000"
 31228      6C655F70 
 31228      61636B65 
 31228      7400
 31229              	.LASF245:
 31230 0835 66697273 		.ascii	"first_imu_parameter\000"
 31230      745F696D 
 31230      755F7061 
 31230      72616D65 
 31230      74657200 
 31231              	.LASF42:
 31232 0849 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 667


 31232      4745545F 
 31232      43555252 
 31232      5F414E44 
 31232      5F4D4541 
 31233              	.LASF364:
 31234 085f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 31234      43313120 
 31234      352E342E 
 31234      31203230 
 31234      31363036 
 31235 0892 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 31235      20726576 
 31235      6973696F 
 31235      6E203233 
 31235      37373135 
 31236 08c5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 31236      66756E63 
 31236      74696F6E 
 31236      2D736563 
 31236      74696F6E 
 31237              	.LASF89:
 31238 08ed 73745F72 		.ascii	"st_ref\000"
 31238      656600
 31239              	.LASF47:
 31240 08f4 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 31240      5345545F 
 31240      43554646 
 31240      5F494E50 
 31240      55545300 
 31241              	.LASF170:
 31242 0908 73745F53 		.ascii	"st_SH_spec\000"
 31242      485F7370 
 31242      656300
 31243              	.LASF339:
 31244 0913 63616C69 		.ascii	"calib\000"
 31244      6200
 31245              	.LASF6:
 31246 0919 5F5F7569 		.ascii	"__uint32_t\000"
 31246      6E743332 
 31246      5F7400
 31247              	.LASF8:
 31248 0924 6C6F6E67 		.ascii	"long long int\000"
 31248      206C6F6E 
 31248      6720696E 
 31248      7400
 31249              	.LASF64:
 31250 0932 53485F63 		.ascii	"SH_control_mode\000"
 31250      6F6E7472 
 31250      6F6C5F6D 
 31250      6F646500 
 31251              	.LASF78:
 31252 0942 54595045 		.ascii	"TYPE_UINT8\000"
 31252      5F55494E 
 31252      543800
 31253              	.LASF300:
 31254 094d 636D645F 		.ascii	"cmd_get_currents\000"
 31254      6765745F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 668


 31254      63757272 
 31254      656E7473 
 31254      00
 31255              	.LASF71:
 31256 095e 4D41584F 		.ascii	"MAXON_12V\000"
 31256      4E5F3132 
 31256      5600
 31257              	.LASF347:
 31258 0968 6368616E 		.ascii	"change_ext_ref_flag\000"
 31258      67655F65 
 31258      78745F72 
 31258      65665F66 
 31258      6C616700 
 31259              	.LASF21:
 31260 097c 646F7562 		.ascii	"double\000"
 31260      6C6500
 31261              	.LASF145:
 31262 0983 456E635F 		.ascii	"Enc_raw_read_conf\000"
 31262      7261775F 
 31262      72656164 
 31262      5F636F6E 
 31262      6600
 31263              	.LASF198:
 31264 0995 72657065 		.ascii	"repetitions\000"
 31264      74697469 
 31264      6F6E7300 
 31265              	.LASF135:
 31266 09a1 6D61785F 		.ascii	"max_step_neg\000"
 31266      73746570 
 31266      5F6E6567 
 31266      00
 31267              	.LASF177:
 31268 09ae 736C6176 		.ascii	"slave_ID\000"
 31268      655F4944 
 31268      00
 31269              	.LASF345:
 31270 09b7 72657365 		.ascii	"reset_last_value_flag\000"
 31270      745F6C61 
 31270      73745F76 
 31270      616C7565 
 31270      5F666C61 
 31271              	.LASF213:
 31272 09cd 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 31272      4F4D5F50 
 31272      4152414D 
 31272      5F474554 
 31272      00
 31273              	.LASF20:
 31274 09de 666C6F61 		.ascii	"float\000"
 31274      7400
 31275              	.LASF161:
 31276 09e4 494D555F 		.ascii	"IMU_conf\000"
 31276      636F6E66 
 31276      00
 31277              	.LASF231:
 31278 09ed 50415241 		.ascii	"PARAM_IDX\000"
 31278      4D5F4944 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 669


 31278      5800
 31279              	.LASF119:
 31280 09f7 73745F6D 		.ascii	"st_motor\000"
 31280      6F746F72 
 31280      00
 31281              	.LASF227:
 31282 0a00 6D5F6164 		.ascii	"m_addr\000"
 31282      647200
 31283              	.LASF338:
 31284 0a07 635F6D65 		.ascii	"c_mem\000"
 31284      6D00
 31285              	.LASF274:
 31286 0a0d 64617461 		.ascii	"data_array\000"
 31286      5F617272 
 31286      617900
 31287              	.LASF10:
 31288 0a18 756E7369 		.ascii	"unsigned int\000"
 31288      676E6564 
 31288      20696E74 
 31288      00
 31289              	.LASF289:
 31290 0a25 6D656D49 		.ascii	"memInit_Master\000"
 31290      6E69745F 
 31290      4D617374 
 31290      657200
 31291              	.LASF277:
 31292 0a34 73656E64 		.ascii	"sendAcknowledgment\000"
 31292      41636B6E 
 31292      6F776C65 
 31292      64676D65 
 31292      6E7400
 31293              	.LASF267:
 31294 0a47 70726570 		.ascii	"prepare_SD_legend\000"
 31294      6172655F 
 31294      53445F6C 
 31294      6567656E 
 31294      6400
 31295              	.LASF361:
 31296 0a59 4D616743 		.ascii	"MagCal\000"
 31296      616C00
 31297              	.LASF55:
 31298 0a60 53485F63 		.ascii	"SH_command\000"
 31298      6F6D6D61 
 31298      6E6400
 31299              	.LASF80:
 31300 0a6b 54595045 		.ascii	"TYPE_UINT16\000"
 31300      5F55494E 
 31300      54313600 
 31301              	.LASF183:
 31302 0a77 666C6167 		.ascii	"flag\000"
 31302      00
 31303              	.LASF295:
 31304 0a7c 636D645F 		.ascii	"cmd_set_inputs\000"
 31304      7365745F 
 31304      696E7075 
 31304      747300
 31305              	.LASF140:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 670


 31306 0a8b 636F6E74 		.ascii	"control_mode\000"
 31306      726F6C5F 
 31306      6D6F6465 
 31306      00
 31307              	.LASF310:
 31308 0a98 6F66665F 		.ascii	"off_1\000"
 31308      3100
 31309              	.LASF58:
 31310 0a9e 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 31310      545F4D4F 
 31310      44455F45 
 31310      4E434F44 
 31310      45523300 
 31311              	.LASF273:
 31312 0ab2 636F6D6D 		.ascii	"commWriteID\000"
 31312      57726974 
 31312      65494400 
 31313              	.LASF51:
 31314 0abe 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 31314      4745545F 
 31314      454E434F 
 31314      4445525F 
 31314      434F4E46 
 31315              	.LASF158:
 31316 0ad3 73745F69 		.ascii	"st_imu\000"
 31316      6D7500
 31317              	.LASF298:
 31318 0ada 636D645F 		.ascii	"cmd_get_activate\000"
 31318      6765745F 
 31318      61637469 
 31318      76617465 
 31318      00
 31319              	.LASF218:
 31320 0aeb 73747269 		.ascii	"string_lenght\000"
 31320      6E675F6C 
 31320      656E6768 
 31320      7400
 31321              	.LASF83:
 31322 0af9 54595045 		.ascii	"TYPE_FLOAT\000"
 31322      5F464C4F 
 31322      415400
 31323              	.LASF235:
 31324 0b04 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 31324      4F4D5F50 
 31324      4152414D 
 31324      5F534554 
 31324      5F4C4953 
 31325              	.LASF210:
 31326 0b1a 4E554D5F 		.ascii	"NUM_STRUCT\000"
 31326      53545255 
 31326      435400
 31327              	.LASF240:
 31328 0b25 6175785F 		.ascii	"aux_uchar\000"
 31328      75636861 
 31328      7200
 31329              	.LASF94:
 31330 0b2f 6164645F 		.ascii	"add_emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 671


 31330      656D6700 
 31331              	.LASF79:
 31332 0b37 54595045 		.ascii	"TYPE_INT16\000"
 31332      5F494E54 
 31332      313600
 31333              	.LASF222:
 31334 0b42 6175785F 		.ascii	"aux_uint16\000"
 31334      75696E74 
 31334      313600
 31335              	.LASF153:
 31336 0b4d 656D675F 		.ascii	"emg_threshold\000"
 31336      74687265 
 31336      73686F6C 
 31336      6400
 31337              	.LASF46:
 31338 0b5b 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 31338      4745545F 
 31338      43555252 
 31338      5F444946 
 31338      4600
 31339              	.LASF104:
 31340 0b6d 63757272 		.ascii	"current_hist\000"
 31340      656E745F 
 31340      68697374 
 31340      00
 31341              	.LASF67:
 31342 0b7a 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 31342      524F4C5F 
 31342      43555252 
 31342      454E5400 
 31343              	.LASF24:
 31344 0b8a 6C6F6E67 		.ascii	"long double\000"
 31344      20646F75 
 31344      626C6500 
 31345              	.LASF82:
 31346 0b96 54595045 		.ascii	"TYPE_UINT32\000"
 31346      5F55494E 
 31346      54333200 
 31347              	.LASF178:
 31348 0ba2 73745F46 		.ascii	"st_FB_spec\000"
 31348      425F7370 
 31348      656300
 31349              	.LASF93:
 31350 0bad 73745F65 		.ascii	"st_emg_meas\000"
 31350      6D675F6D 
 31350      65617300 
 31351              	.LASF207:
 31352 0bb9 5641525F 		.ascii	"VAR_P\000"
 31352      5000
 31353              	.LASF234:
 31354 0bbf 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 31354      4F4D5F50 
 31354      4152414D 
 31354      5F474554 
 31354      5F4C4953 
 31355              	.LASF150:
 31356 0bd5 6D6F746F 		.ascii	"motor_handle_ratio\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 672


 31356      725F6861 
 31356      6E646C65 
 31356      5F726174 
 31356      696F00
 31357              	.LASF276:
 31358 0be8 63686563 		.ascii	"checksum\000"
 31358      6B73756D 
 31358      00
 31359              	.LASF330:
 31360 0bf1 675F7265 		.ascii	"g_refOld\000"
 31360      664F6C64 
 31360      00
 31361              	.LASF35:
 31362 0bfa 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 31362      48414E44 
 31362      5F43414C 
 31362      49425241 
 31362      544500
 31363              	.LASF190:
 31364 0c0d 6779726F 		.ascii	"gyro_value\000"
 31364      5F76616C 
 31364      756500
 31365              	.LASF163:
 31366 0c18 63757272 		.ascii	"curr_time\000"
 31366      5F74696D 
 31366      6500
 31367              	.LASF148:
 31368 0c22 646F7562 		.ascii	"double_encoder_on_off\000"
 31368      6C655F65 
 31368      6E636F64 
 31368      65725F6F 
 31368      6E5F6F66 
 31369              	.LASF323:
 31370 0c38 64726976 		.ascii	"drive_slave\000"
 31370      655F736C 
 31370      61766500 
 31371              	.LASF160:
 31372 0c44 5350495F 		.ascii	"SPI_read_delay\000"
 31372      72656164 
 31372      5F64656C 
 31372      617900
 31373              	.LASF72:
 31374 0c53 61636B6E 		.ascii	"acknowledgment_values\000"
 31374      6F776C65 
 31374      64676D65 
 31374      6E745F76 
 31374      616C7565 
 31375              	.LASF225:
 31376 0c69 4D4F544F 		.ascii	"MOTOR_IDX\000"
 31376      525F4944 
 31376      5800
 31377              	.LASF286:
 31378 0c73 6D656D52 		.ascii	"memRestore\000"
 31378      6573746F 
 31378      726500
 31379              	.LASF248:
 31380 0c7e 6E5F696D 		.ascii	"n_imu_str\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 673


 31380      755F7374 
 31380      7200
 31381              	.LASF262:
 31382 0c88 696E666F 		.ascii	"info_string\000"
 31382      5F737472 
 31382      696E6700 
 31383              	.LASF268:
 31384 0c94 70726570 		.ascii	"prepare_SD_info\000"
 31384      6172655F 
 31384      53445F69 
 31384      6E666F00 
 31385              	.LASF9:
 31386 0ca4 6C6F6E67 		.ascii	"long long unsigned int\000"
 31386      206C6F6E 
 31386      6720756E 
 31386      7369676E 
 31386      65642069 
 31387              	.LASF81:
 31388 0cbb 54595045 		.ascii	"TYPE_INT32\000"
 31388      5F494E54 
 31388      333200
 31389              	.LASF224:
 31390 0cc6 6175785F 		.ascii	"aux_uint32\000"
 31390      75696E74 
 31390      333200
 31391              	.LASF99:
 31392 0cd1 6C656E67 		.ascii	"length\000"
 31392      746800
 31393              	.LASF236:
 31394 0cd8 55534552 		.ascii	"USER_ID_PARAM\000"
 31394      5F49445F 
 31394      50415241 
 31394      4D00
 31395              	.LASF187:
 31396 0ce6 73745F69 		.ascii	"st_imu_data\000"
 31396      6D755F64 
 31396      61746100 
 31397              	.LASF191:
 31398 0cf2 6D61675F 		.ascii	"mag_value\000"
 31398      76616C75 
 31398      6500
 31399              	.LASF88:
 31400 0cfc 6F6E6F66 		.ascii	"onoff\000"
 31400      6600
 31401              	.LASF45:
 31402 0d02 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 31402      4745545F 
 31402      41434345 
 31402      4C00
 31403              	.LASF293:
 31404 0d10 636D645F 		.ascii	"cmd_get_velocities\000"
 31404      6765745F 
 31404      76656C6F 
 31404      63697469 
 31404      657300
 31405              	.LASF285:
 31406 0d23 6D656D52 		.ascii	"memRecall\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 674


 31406      6563616C 
 31406      6C00
 31407              	.LASF341:
 31408 0d2d 74696D65 		.ascii	"timer_value0\000"
 31408      725F7661 
 31408      6C756530 
 31408      00
 31409              	.LASF48:
 31410 0d3a 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 31410      5345545F 
 31410      42415544 
 31410      52415445 
 31410      00
 31411              	.LASF120:
 31412 0d4b 6B5F705F 		.ascii	"k_p_c\000"
 31412      6300
 31413              	.LASF252:
 31414 0d51 696D755F 		.ascii	"imu_table_str\000"
 31414      7461626C 
 31414      655F7374 
 31414      7200
 31415              	.LASF342:
 31416 0d5f 6465765F 		.ascii	"dev_tension\000"
 31416      74656E73 
 31416      696F6E00 
 31417              	.LASF131:
 31418 0d6b 6D6F746F 		.ascii	"motor_driver_type\000"
 31418      725F6472 
 31418      69766572 
 31418      5F747970 
 31418      6500
 31419              	.LASF311:
 31420 0d7d 6D756C74 		.ascii	"mult_1\000"
 31420      5F3100
 31421              	.LASF264:
 31422 0d84 70726570 		.ascii	"prepare_counter_info\000"
 31422      6172655F 
 31422      636F756E 
 31422      7465725F 
 31422      696E666F 
 31423              	.LASF23:
 31424 0d99 72656738 		.ascii	"reg8\000"
 31424      00
 31425              	.LASF181:
 31426 0d9e 70726F70 		.ascii	"prop_err_fb_gain\000"
 31426      5F657272 
 31426      5F66625F 
 31426      6761696E 
 31426      00
 31427              	.LASF270:
 31428 0daf 636F6D6D 		.ascii	"commWrite_old_id\000"
 31428      57726974 
 31428      655F6F6C 
 31428      645F6964 
 31428      00
 31429              	.LASF229:
 31430 0dc0 6D616E61 		.ascii	"manage_param_list\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 675


 31430      67655F70 
 31430      6172616D 
 31430      5F6C6973 
 31430      7400
 31431              	.LASF30:
 31432 0dd2 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 31432      52455354 
 31432      4F52455F 
 31432      50415241 
 31432      4D5300
 31433              	.LASF266:
 31434 0de5 70726570 		.ascii	"prepare_SD_param_info\000"
 31434      6172655F 
 31434      53445F70 
 31434      6172616D 
 31434      5F696E66 
 31435              	.LASF303:
 31436 0dfb 63757272 		.ascii	"curr_diff\000"
 31436      5F646966 
 31436      6600
 31437              	.LASF176:
 31438 0e05 736C6176 		.ascii	"slave_comm_active\000"
 31438      655F636F 
 31438      6D6D5F61 
 31438      63746976 
 31438      6500
 31439              	.LASF271:
 31440 0e17 6F6C645F 		.ascii	"old_id\000"
 31440      696400
 31441              	.LASF367:
 31442 0e1e 5F5F5245 		.ascii	"__REV16\000"
 31442      56313600 
 31443              	.LASF352:
 31444 0e26 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 31444      636F6465 
 31444      725F4C69 
 31444      6E655F43 
 31444      6F6E6E65 
 31445              	.LASF117:
 31446 0e3f 6465765F 		.ascii	"dev_type\000"
 31446      74797065 
 31446      00
 31447              	.LASF167:
 31448 0e48 73745F75 		.ascii	"st_user\000"
 31448      73657200 
 31449              	.LASF299:
 31450 0e50 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 31450      6765745F 
 31450      63757272 
 31450      5F616E64 
 31450      5F6D6561 
 31451              	.LASF151:
 31452 0e66 67656172 		.ascii	"gears_params\000"
 31452      735F7061 
 31452      72616D73 
 31452      00
 31453              	.LASF162:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 676


 31454 0e73 73745F65 		.ascii	"st_expansion\000"
 31454      7870616E 
 31454      73696F6E 
 31454      00
 31455              	.LASF156:
 31456 0e80 656D675F 		.ascii	"emg_calibration_flag\000"
 31456      63616C69 
 31456      62726174 
 31456      696F6E5F 
 31456      666C6167 
 31457              	.LASF90:
 31458 0e95 73745F6D 		.ascii	"st_meas\000"
 31458      65617300 
 31459              	.LASF54:
 31460 0e9d 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 31460      4745545F 
 31460      4144435F 
 31460      52415700 
 31461              	.LASF70:
 31462 0ead 4D41584F 		.ascii	"MAXON_24V\000"
 31462      4E5F3234 
 31462      5600
 31463              	.LASF63:
 31464 0eb7 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 31464      545F4D4F 
 31464      44455F45 
 31464      4D475F50 
 31464      524F504F 
 31465              	.LASF50:
 31466 0ed6 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 31466      4745545F 
 31466      494D555F 
 31466      50415241 
 31466      4D00
 31467              	.LASF335:
 31468 0ee8 675F6662 		.ascii	"g_fb_meas\000"
 31468      5F6D6561 
 31468      7300
 31469              	.LASF52:
 31470 0ef2 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 31470      4745545F 
 31470      454E434F 
 31470      4445525F 
 31470      52415700 
 31471              	.LASF309:
 31472 0f06 636D645F 		.ascii	"cmd_store_params\000"
 31472      73746F72 
 31472      655F7061 
 31472      72616D73 
 31472      00
 31473              	.LASF337:
 31474 0f17 675F6D65 		.ascii	"g_mem\000"
 31474      6D00
 31475              	.LASF40:
 31476 0f1d 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 31476      4745545F 
 31476      4D454153 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 677


 31476      5552454D 
 31476      454E5453 
 31477              	.LASF318:
 31478 0f32 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 31478      6765745F 
 31478      656E636F 
 31478      6465725F 
 31478      72617700 
 31479              	.LASF13:
 31480 0f46 75696E74 		.ascii	"uint8\000"
 31480      3800
 31481              	.LASF199:
 31482 0f4c 636F6D6D 		.ascii	"commProcess\000"
 31482      50726F63 
 31482      65737300 
 31483              	.LASF2:
 31484 0f58 73686F72 		.ascii	"short int\000"
 31484      7420696E 
 31484      7400
 31485              	.LASF290:
 31486 0f62 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 31486      6E69745F 
 31486      41697243 
 31486      68616D62 
 31486      65727346 
 31487              	.LASF256:
 31488 0f78 6964735F 		.ascii	"ids_str_len\000"
 31488      7374725F 
 31488      6C656E00 
 31489              	.LASF125:
 31490 0f84 6B5F645F 		.ascii	"k_d_dl\000"
 31490      646C00
 31491              	.LASF217:
 31492 0f8b 6964785F 		.ascii	"idx_menu\000"
 31492      6D656E75 
 31492      00
 31493              	.LASF185:
 31494 0f94 6D6F746F 		.ascii	"motor\000"
 31494      7200
 31495              	.LASF356:
 31496 0f9a 4E5F494D 		.ascii	"N_IMU_Connected\000"
 31496      555F436F 
 31496      6E6E6563 
 31496      74656400 
 31497              	.LASF39:
 31498 0faa 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 31498      4745545F 
 31498      494E5055 
 31498      545300
 31499              	.LASF110:
 31500 0fb9 68775F6D 		.ascii	"hw_maint_date\000"
 31500      61696E74 
 31500      5F646174 
 31500      6500
 31501              	.LASF249:
 31502 0fc7 6964735F 		.ascii	"ids_str\000"
 31502      73747200 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 678


 31503              	.LASF53:
 31504 0fcf 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 31504      4745545F 
 31504      4144435F 
 31504      434F4E46 
 31504      00
 31505              	.LASF27:
 31506 0fe0 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 31506      5345545F 
 31506      5A45524F 
 31506      5300
 31507              	.LASF257:
 31508 0fee 6D61675F 		.ascii	"mag_param_str_len\000"
 31508      70617261 
 31508      6D5F7374 
 31508      725F6C65 
 31508      6E00
 31509              	.LASF243:
 31510 1000 6E756D5F 		.ascii	"num_imus_id_params\000"
 31510      696D7573 
 31510      5F69645F 
 31510      70617261 
 31510      6D7300
 31511              	.LASF221:
 31512 1013 6175785F 		.ascii	"aux_int16\000"
 31512      696E7431 
 31512      3600
 31513              	.LASF363:
 31514 101d 45455052 		.ascii	"EEPROM_ADDR\000"
 31514      4F4D5F41 
 31514      44445200 
 31515              	.LASF111:
 31516 1029 73746174 		.ascii	"stats_period_begin_date\000"
 31516      735F7065 
 31516      72696F64 
 31516      5F626567 
 31516      696E5F64 
 31517              	.LASF358:
 31518 1041 696D7573 		.ascii	"imus_data_size\000"
 31518      5F646174 
 31518      615F7369 
 31518      7A6500
 31519              	.LASF327:
 31520 1050 49544D5F 		.ascii	"ITM_RxBuffer\000"
 31520      52784275 
 31520      66666572 
 31520      00
 31521              	.LASF44:
 31522 105d 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 31522      4745545F 
 31522      56454C4F 
 31522      43495449 
 31522      455300
 31523              	.LASF344:
 31524 1070 706F775F 		.ascii	"pow_tension\000"
 31524      74656E73 
 31524      696F6E00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 679


 31525              	.LASF34:
 31526 107c 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 31526      4745545F 
 31526      50415241 
 31526      4D5F4C49 
 31526      535400
 31527              	.LASF325:
 31528 108f 73746F70 		.ascii	"stop_feedback\000"
 31528      5F666565 
 31528      64626163 
 31528      6B00
 31529              	.LASF75:
 31530 109d 64617461 		.ascii	"data_types\000"
 31530      5F747970 
 31530      657300
 31531              	.LASF17:
 31532 10a8 696E7431 		.ascii	"int16\000"
 31532      3600
 31533              	.LASF164:
 31534 10ae 72656164 		.ascii	"read_exp_port_flag\000"
 31534      5F657870 
 31534      5F706F72 
 31534      745F666C 
 31534      616700
 31535              	.LASF157:
 31536 10c1 73776974 		.ascii	"switch_emg\000"
 31536      63685F65 
 31536      6D6700
 31537              	.LASF130:
 31538 10cc 61637469 		.ascii	"activate_pwm_rescaling\000"
 31538      76617465 
 31538      5F70776D 
 31538      5F726573 
 31538      63616C69 
 31539              	.LASF123:
 31540 10e3 6B5F705F 		.ascii	"k_p_dl\000"
 31540      646C00
 31541              	.LASF91:
 31542 10ea 65737469 		.ascii	"estim_curr\000"
 31542      6D5F6375 
 31542      727200
 31543              	.LASF343:
 31544 10f5 6465765F 		.ascii	"dev_pwm_limit\000"
 31544      70776D5F 
 31544      6C696D69 
 31544      7400
 31545              	.LASF165:
 31546 1103 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 31546      5F414443 
 31546      5F73656E 
 31546      736F7273 
 31546      5F706F72 
 31547              	.LASF353:
 31548 111e 456E636F 		.ascii	"Encoder_Value\000"
 31548      6465725F 
 31548      56616C75 
 31548      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 680


 31549              	.LASF317:
 31550 112c 636D645F 		.ascii	"cmd_get_encoder_map\000"
 31550      6765745F 
 31550      656E636F 
 31550      6465725F 
 31550      6D617000 
 31551              	.LASF116:
 31552 1140 75736572 		.ascii	"user_id\000"
 31552      5F696400 
 31553              	.LASF12:
 31554 1148 75696E74 		.ascii	"uint32_t\000"
 31554      33325F74 
 31554      00
 31555              	.LASF220:
 31556 1151 6175785F 		.ascii	"aux_float\000"
 31556      666C6F61 
 31556      7400
 31557              	.LASF357:
 31558 115b 494D555F 		.ascii	"IMU_connected\000"
 31558      636F6E6E 
 31558      65637465 
 31558      6400
 31559              	.LASF211:
 31560 1169 4E554D5F 		.ascii	"NUM_MENU\000"
 31560      4D454E55 
 31560      00
 31561              	.LASF223:
 31562 1172 6175785F 		.ascii	"aux_int32\000"
 31562      696E7433 
 31562      3200
 31563              	.LASF115:
 31564 117c 62617564 		.ascii	"baud_rate\000"
 31564      5F726174 
 31564      6500
 31565              	.LASF305:
 31566 1186 745F656E 		.ascii	"t_end\000"
 31566      6400
 31567              	.LASF301:
 31568 118c 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 31568      6765745F 
 31568      63757272 
 31568      656E7473 
 31568      5F666F72 
 31569              	.LASF206:
 31570 11a6 696E666F 		.ascii	"info_type\000"
 31570      5F747970 
 31570      6500
 31571              	.LASF49:
 31572 11b0 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 31572      4745545F 
 31572      494D555F 
 31572      52454144 
 31572      494E4753 
 31573              	.LASF279:
 31574 11c5 4C435243 		.ascii	"LCRChecksum\000"
 31574      6865636B 
 31574      73756D00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 681


 31575              	.LASF314:
 31576 11d1 6B5F696D 		.ascii	"k_imu\000"
 31576      7500
 31577              	.LASF3:
 31578 11d7 73686F72 		.ascii	"short unsigned int\000"
 31578      7420756E 
 31578      7369676E 
 31578      65642069 
 31578      6E7400
 31579              	.LASF144:
 31580 11ea 73745F65 		.ascii	"st_encoder\000"
 31580      6E636F64 
 31580      657200
 31581              	.LASF179:
 31582 11f5 6D61785F 		.ascii	"max_residual_current\000"
 31582      72657369 
 31582      6475616C 
 31582      5F637572 
 31582      72656E74 
 31583              	.LASF263:
 31584 120a 454E435F 		.ascii	"ENC_L\000"
 31584      4C00
 31585              	.LASF182:
 31586 1210 73745F65 		.ascii	"st_eeprom\000"
 31586      6570726F 
 31586      6D00
 31587              	.LASF208:
 31588 121a 54595045 		.ascii	"TYPES\000"
 31588      5300
 31589              	.LASF328:
 31590 1220 675F7265 		.ascii	"g_ref\000"
 31590      6600
 31591              	.LASF18:
 31592 1226 696E7433 		.ascii	"int32\000"
 31592      3200
 31593              	.LASF350:
 31594 122c 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 31594      4F465F41 
 31594      4E414C4F 
 31594      475F494E 
 31594      50555453 
 31595              	.LASF203:
 31596 1241 696E666F 		.ascii	"infoGet\000"
 31596      47657400 
 31597              	.LASF362:
 31598 1249 6D617374 		.ascii	"master_mode\000"
 31598      65725F6D 
 31598      6F646500 
 31599              	.LASF86:
 31600 1255 46535F46 		.ascii	"FS_FILE\000"
 31600      494C4500 
 31601              	.LASF132:
 31602 125d 706F735F 		.ascii	"pos_lim_flag\000"
 31602      6C696D5F 
 31602      666C6167 
 31602      00
 31603              	.LASF332:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 682


 31604 126a 675F6D65 		.ascii	"g_measOld\000"
 31604      61734F6C 
 31604      6400
 31605              	.LASF65:
 31606 1274 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 31606      524F4C5F 
 31606      414E474C 
 31606      4500
 31607              	.LASF297:
 31608 1282 636D645F 		.ascii	"cmd_activate\000"
 31608      61637469 
 31608      76617465 
 31608      00
 31609              	.LASF5:
 31610 128f 5F5F696E 		.ascii	"__int32_t\000"
 31610      7433325F 
 31610      7400
 31611              	.LASF233:
 31612 1299 7370695F 		.ascii	"spi_delay_menu\000"
 31612      64656C61 
 31612      795F6D65 
 31612      6E7500
 31613              	.LASF106:
 31614 12a8 77697265 		.ascii	"wire_disp\000"
 31614      5F646973 
 31614      7000
 31615              	.LASF154:
 31616 12b2 656D675F 		.ascii	"emg_max_value\000"
 31616      6D61785F 
 31616      76616C75 
 31616      6500
 31617              	.LASF237:
 31618 12c0 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 31618      4F4D5F50 
 31618      4152414D 
 31618      5F534554 
 31618      00
 31619              	.LASF365:
 31620 12d1 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 31620      72635C63 
 31620      6F6D6D61 
 31620      6E645F70 
 31620      726F6365 
 31621              	.LASF138:
 31622 12ed 63757272 		.ascii	"current_limit\000"
 31622      656E745F 
 31622      6C696D69 
 31622      7400
 31623              	.LASF56:
 31624 12fb 53485F69 		.ascii	"SH_input_mode\000"
 31624      6E707574 
 31624      5F6D6F64 
 31624      6500
 31625              	.LASF77:
 31626 1309 54595045 		.ascii	"TYPE_INT8\000"
 31626      5F494E54 
 31626      3800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccZslZZt.s 			page 683


 31627              	.LASF269:
 31628 1313 494D555F 		.ascii	"IMU_reading_info\000"
 31628      72656164 
 31628      696E675F 
 31628      696E666F 
 31628      00
 31629              	.LASF14:
 31630 1324 75696E74 		.ascii	"uint16\000"
 31630      313600
 31631              	.LASF334:
 31632 132b 675F656D 		.ascii	"g_emg_measOld\000"
 31632      675F6D65 
 31632      61734F6C 
 31632      6400
 31633              	.LASF172:
 31634 1339 72657374 		.ascii	"rest_delay\000"
 31634      5F64656C 
 31634      617900
 31635              	.LASF219:
 31636 1344 6175785F 		.ascii	"aux_str\000"
 31636      73747200 
 31637              	.LASF26:
 31638 134c 434D445F 		.ascii	"CMD_PING\000"
 31638      50494E47 
 31638      00
 31639              	.LASF128:
 31640 1355 6B5F645F 		.ascii	"k_d_c_dl\000"
 31640      635F646C 
 31640      00
 31641              	.LASF196:
 31642 135e 64697265 		.ascii	"direction\000"
 31642      6374696F 
 31642      6E00
 31643              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
