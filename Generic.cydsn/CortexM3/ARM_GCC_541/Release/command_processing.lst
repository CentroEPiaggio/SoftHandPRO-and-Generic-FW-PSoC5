ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 40
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 8AB0     		sub	sp, sp, #40
  44              		.cfi_def_cfa_offset 48
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L51
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a 87F82730 		strb	r3, [r7, #39]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000e E14B     		ldr	r3, .L51
  53 0010 B3F98030 		ldrsh	r3, [r3, #128]
  54 0014 DBB2     		uxtb	r3, r3
  55 0016 013B     		subs	r3, r3, #1
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 1946     		mov	r1, r3
  58 001c DD48     		ldr	r0, .L51
  59 001e FFF7FEFF 		bl	LCRChecksum
  60 0022 0346     		mov	r3, r0
  61 0024 1946     		mov	r1, r3
  62 0026 DB4B     		ldr	r3, .L51
  63 0028 B3F98030 		ldrsh	r3, [r3, #128]
  64 002c 013B     		subs	r3, r3, #1
  65 002e D94A     		ldr	r2, .L51
  66 0030 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0032 9942     		cmp	r1, r3
  68 0034 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0036 D74B     		ldr	r3, .L51
  71 0038 0022     		movs	r2, #0
  72 003a 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003e 53E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 0040 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
  78 0044 A72B     		cmp	r3, #167
  79 0046 00F24E82 		bhi	.L50
  80 004a 01A2     		adr	r2, .L6
  81 004c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 0050 75030000 		.word	.L5+1
  85 0054 57030000 		.word	.L7+1
  86 0058 E7040000 		.word	.L50+1
  87 005c 7B030000 		.word	.L8+1
  88 0060 81030000 		.word	.L9+1
  89 0064 A5030000 		.word	.L10+1
  90 0068 3F030000 		.word	.L11+1
  91 006c E7040000 		.word	.L50+1
  92 0070 E7040000 		.word	.L50+1
  93 0074 D9030000 		.word	.L12+1
  94 0078 BF030000 		.word	.L13+1
  95 007c E7040000 		.word	.L50+1
  96 0080 5D030000 		.word	.L14+1
  97 0084 FB030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 4


  98 0088 E7040000 		.word	.L50+1
  99 008c E7040000 		.word	.L50+1
 100 0090 E7040000 		.word	.L50+1
 101 0094 E7040000 		.word	.L50+1
 102 0098 E7040000 		.word	.L50+1
 103 009c E7040000 		.word	.L50+1
 104 00a0 E7040000 		.word	.L50+1
 105 00a4 E7040000 		.word	.L50+1
 106 00a8 E7040000 		.word	.L50+1
 107 00ac E7040000 		.word	.L50+1
 108 00b0 E7040000 		.word	.L50+1
 109 00b4 E7040000 		.word	.L50+1
 110 00b8 E7040000 		.word	.L50+1
 111 00bc E7040000 		.word	.L50+1
 112 00c0 E7040000 		.word	.L50+1
 113 00c4 E7040000 		.word	.L50+1
 114 00c8 E7040000 		.word	.L50+1
 115 00cc E7040000 		.word	.L50+1
 116 00d0 E7040000 		.word	.L50+1
 117 00d4 E7040000 		.word	.L50+1
 118 00d8 E7040000 		.word	.L50+1
 119 00dc E7040000 		.word	.L50+1
 120 00e0 E7040000 		.word	.L50+1
 121 00e4 E7040000 		.word	.L50+1
 122 00e8 E7040000 		.word	.L50+1
 123 00ec E7040000 		.word	.L50+1
 124 00f0 E7040000 		.word	.L50+1
 125 00f4 E7040000 		.word	.L50+1
 126 00f8 E7040000 		.word	.L50+1
 127 00fc E7040000 		.word	.L50+1
 128 0100 E7040000 		.word	.L50+1
 129 0104 E7040000 		.word	.L50+1
 130 0108 E7040000 		.word	.L50+1
 131 010c E7040000 		.word	.L50+1
 132 0110 E7040000 		.word	.L50+1
 133 0114 E7040000 		.word	.L50+1
 134 0118 E7040000 		.word	.L50+1
 135 011c E7040000 		.word	.L50+1
 136 0120 E7040000 		.word	.L50+1
 137 0124 E7040000 		.word	.L50+1
 138 0128 E7040000 		.word	.L50+1
 139 012c E7040000 		.word	.L50+1
 140 0130 E7040000 		.word	.L50+1
 141 0134 E7040000 		.word	.L50+1
 142 0138 E7040000 		.word	.L50+1
 143 013c E7040000 		.word	.L50+1
 144 0140 E7040000 		.word	.L50+1
 145 0144 E7040000 		.word	.L50+1
 146 0148 E7040000 		.word	.L50+1
 147 014c E7040000 		.word	.L50+1
 148 0150 E7040000 		.word	.L50+1
 149 0154 E7040000 		.word	.L50+1
 150 0158 E7040000 		.word	.L50+1
 151 015c E7040000 		.word	.L50+1
 152 0160 E7040000 		.word	.L50+1
 153 0164 E7040000 		.word	.L50+1
 154 0168 E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 5


 155 016c E7040000 		.word	.L50+1
 156 0170 E7040000 		.word	.L50+1
 157 0174 E7040000 		.word	.L50+1
 158 0178 E7040000 		.word	.L50+1
 159 017c E7040000 		.word	.L50+1
 160 0180 E7040000 		.word	.L50+1
 161 0184 E7040000 		.word	.L50+1
 162 0188 E7040000 		.word	.L50+1
 163 018c E7040000 		.word	.L50+1
 164 0190 E7040000 		.word	.L50+1
 165 0194 E7040000 		.word	.L50+1
 166 0198 E7040000 		.word	.L50+1
 167 019c E7040000 		.word	.L50+1
 168 01a0 E7040000 		.word	.L50+1
 169 01a4 E7040000 		.word	.L50+1
 170 01a8 E7040000 		.word	.L50+1
 171 01ac E7040000 		.word	.L50+1
 172 01b0 E7040000 		.word	.L50+1
 173 01b4 E7040000 		.word	.L50+1
 174 01b8 E7040000 		.word	.L50+1
 175 01bc E7040000 		.word	.L50+1
 176 01c0 E7040000 		.word	.L50+1
 177 01c4 E7040000 		.word	.L50+1
 178 01c8 E7040000 		.word	.L50+1
 179 01cc E7040000 		.word	.L50+1
 180 01d0 E7040000 		.word	.L50+1
 181 01d4 E7040000 		.word	.L50+1
 182 01d8 E7040000 		.word	.L50+1
 183 01dc E7040000 		.word	.L50+1
 184 01e0 E7040000 		.word	.L50+1
 185 01e4 E7040000 		.word	.L50+1
 186 01e8 E7040000 		.word	.L50+1
 187 01ec E7040000 		.word	.L50+1
 188 01f0 E7040000 		.word	.L50+1
 189 01f4 E7040000 		.word	.L50+1
 190 01f8 E7040000 		.word	.L50+1
 191 01fc E7040000 		.word	.L50+1
 192 0200 E7040000 		.word	.L50+1
 193 0204 E7040000 		.word	.L50+1
 194 0208 E7040000 		.word	.L50+1
 195 020c E7040000 		.word	.L50+1
 196 0210 E7040000 		.word	.L50+1
 197 0214 E7040000 		.word	.L50+1
 198 0218 E7040000 		.word	.L50+1
 199 021c E7040000 		.word	.L50+1
 200 0220 E7040000 		.word	.L50+1
 201 0224 E7040000 		.word	.L50+1
 202 0228 E7040000 		.word	.L50+1
 203 022c E7040000 		.word	.L50+1
 204 0230 E7040000 		.word	.L50+1
 205 0234 E7040000 		.word	.L50+1
 206 0238 E7040000 		.word	.L50+1
 207 023c E7040000 		.word	.L50+1
 208 0240 E7040000 		.word	.L50+1
 209 0244 E7040000 		.word	.L50+1
 210 0248 E7040000 		.word	.L50+1
 211 024c E7040000 		.word	.L50+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 6


 212 0250 F1020000 		.word	.L16+1
 213 0254 2D030000 		.word	.L17+1
 214 0258 F7020000 		.word	.L18+1
 215 025c 39030000 		.word	.L19+1
 216 0260 FD020000 		.word	.L20+1
 217 0264 09030000 		.word	.L21+1
 218 0268 03030000 		.word	.L22+1
 219 026c E7040000 		.word	.L50+1
 220 0270 27030000 		.word	.L23+1
 221 0274 15030000 		.word	.L24+1
 222 0278 E7040000 		.word	.L50+1
 223 027c 1B030000 		.word	.L25+1
 224 0280 0F030000 		.word	.L26+1
 225 0284 E7040000 		.word	.L50+1
 226 0288 E7040000 		.word	.L50+1
 227 028c E7040000 		.word	.L50+1
 228 0290 33030000 		.word	.L27+1
 229 0294 E7040000 		.word	.L50+1
 230 0298 21030000 		.word	.L28+1
 231 029c E7040000 		.word	.L50+1
 232 02a0 E7040000 		.word	.L50+1
 233 02a4 E7040000 		.word	.L50+1
 234 02a8 E7040000 		.word	.L50+1
 235 02ac E7040000 		.word	.L50+1
 236 02b0 E7040000 		.word	.L50+1
 237 02b4 E7040000 		.word	.L50+1
 238 02b8 E7040000 		.word	.L50+1
 239 02bc E7040000 		.word	.L50+1
 240 02c0 E7040000 		.word	.L50+1
 241 02c4 E7040000 		.word	.L50+1
 242 02c8 E7040000 		.word	.L50+1
 243 02cc E7040000 		.word	.L50+1
 244 02d0 E7040000 		.word	.L50+1
 245 02d4 99040000 		.word	.L29+1
 246 02d8 9F040000 		.word	.L30+1
 247 02dc B7040000 		.word	.L31+1
 248 02e0 BD040000 		.word	.L32+1
 249 02e4 C3040000 		.word	.L33+1
 250 02e8 C9040000 		.word	.L34+1
 251 02ec CF040000 		.word	.L35+1
 252              		.p2align 1
 253              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 254              		.loc 1 78 0
 255 02f0 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 256              		.loc 1 79 0
 257 02f4 F8E0     		b	.L1
 258              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 7


 259              		.loc 1 84 0
 260 02f6 FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 261              		.loc 1 85 0
 262 02fa F5E0     		b	.L1
 263              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 264              		.loc 1 90 0
 265 02fc FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 266              		.loc 1 91 0
 267 0300 F2E0     		b	.L1
 268              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 269              		.loc 1 96 0
 270 0302 FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 271              		.loc 1 97 0
 272 0306 EFE0     		b	.L1
 273              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 274              		.loc 1 102 0
 275 0308 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 276              		.loc 1 103 0
 277 030c ECE0     		b	.L1
 278              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 279              		.loc 1 108 0
 280 030e FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 281              		.loc 1 109 0
 282 0312 E9E0     		b	.L1
 283              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 284              		.loc 1 114 0
 285 0314 FFF7FEFF 		bl	cmd_get_velocities
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 8


 115:..\src/command_processing.c ****             break;
 286              		.loc 1 115 0
 287 0318 E6E0     		b	.L1
 288              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 289              		.loc 1 120 0
 290 031a FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 291              		.loc 1 121 0
 292 031e E3E0     		b	.L1
 293              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 294              		.loc 1 126 0
 295 0320 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 296              		.loc 1 127 0
 297 0324 E0E0     		b	.L1
 298              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 299              		.loc 1 132 0
 300 0326 FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 301              		.loc 1 133 0
 302 032a DDE0     		b	.L1
 303              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 304              		.loc 1 138 0
 305 032c FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 306              		.loc 1 139 0
 307 0330 DAE0     		b	.L1
 308              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 309              		.loc 1 144 0
 310 0332 FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 311              		.loc 1 145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 9


 312 0336 D7E0     		b	.L1
 313              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 314              		.loc 1 150 0
 315 0338 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 316              		.loc 1 151 0
 317 033c D4E0     		b	.L1
 318              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 319              		.loc 1 156 0
 320 033e 164B     		ldr	r3, .L51+4
 321 0340 1B88     		ldrh	r3, [r3]
 322 0342 7B61     		str	r3, [r7, #20]
 323              	.LBB10:
 324              	.LBB11:
 325              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 10


  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 11


  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 12


 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 13


 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 14


 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 15


 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 16


 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 17


 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 18


 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 19


 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 20


 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 21


 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 22


 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 23


 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 326              		.loc 2 792 0
 327 0344 7B69     		ldr	r3, [r7, #20]
 328              		.syntax unified
 329              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 330 0346 5BBA     		rev16 r3, r3
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 0348 3B61     		str	r3, [r7, #16]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 335              		.loc 2 793 0
 336 034a 3B69     		ldr	r3, [r7, #16]
 337              	.LBE11:
 338              	.LBE10:
 339              		.loc 1 156 0
 340 034c 9BB2     		uxth	r3, r3
 341 034e 1846     		mov	r0, r3
 342 0350 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 343              		.loc 1 157 0
 344 0354 C8E0     		b	.L1
 345              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 346              		.loc 1 162 0
 347 0356 FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 348              		.loc 1 163 0
 349 035a C5E0     		b	.L1
 350              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 24


 351              		.loc 1 168 0
 352 035c 0E4B     		ldr	r3, .L51+4
 353 035e 1B88     		ldrh	r3, [r3]
 354 0360 3B62     		str	r3, [r7, #32]
 355              	.LBB12:
 356              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 357              		.loc 2 792 0
 358 0362 3B6A     		ldr	r3, [r7, #32]
 359              		.syntax unified
 360              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 361 0364 5BBA     		rev16 r3, r3
 362              	@ 0 "" 2
 363              		.thumb
 364              		.syntax unified
 365 0366 FB60     		str	r3, [r7, #12]
 366              		.loc 2 793 0
 367 0368 FB68     		ldr	r3, [r7, #12]
 368              	.LBE13:
 369              	.LBE12:
 370              		.loc 1 168 0
 371 036a 9BB2     		uxth	r3, r3
 372 036c 1846     		mov	r0, r3
 373 036e FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 374              		.loc 1 169 0
 375 0372 B9E0     		b	.L1
 376              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 377              		.loc 1 174 0
 378 0374 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 379              		.loc 1 175 0
 380 0378 B6E0     		b	.L1
 381              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 382              		.loc 1 180 0
 383 037a FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 384              		.loc 1 181 0
 385 037e B3E0     		b	.L1
 386              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 387              		.loc 1 186 0
 388 0380 3220     		movs	r0, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 25


 389 0382 FFF7FEFF 		bl	memStore
 390 0386 0346     		mov	r3, r0
 391 0388 002B     		cmp	r3, #0
 392 038a 07D0     		beq	.L38
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 393              		.loc 1 187 0
 394 038c 0120     		movs	r0, #1
 395 038e FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 396              		.loc 1 190 0
 397 0392 A9E0     		b	.L1
 398              	.L52:
 399              		.align	2
 400              	.L51:
 401 0394 00000000 		.word	g_rx
 402 0398 01000000 		.word	g_rx+1
 403              	.L38:
 189:..\src/command_processing.c ****             break;
 404              		.loc 1 189 0
 405 039c 0020     		movs	r0, #0
 406 039e FFF7FEFF 		bl	sendAcknowledgment
 407              		.loc 1 190 0
 408 03a2 A1E0     		b	.L1
 409              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 410              		.loc 1 195 0
 411 03a4 FFF7FEFF 		bl	memRestore
 412 03a8 0346     		mov	r3, r0
 413 03aa 002B     		cmp	r3, #0
 414 03ac 03D0     		beq	.L40
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 415              		.loc 1 196 0
 416 03ae 0120     		movs	r0, #1
 417 03b0 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 418              		.loc 1 199 0
 419 03b4 98E0     		b	.L1
 420              	.L40:
 198:..\src/command_processing.c ****             break;
 421              		.loc 1 198 0
 422 03b6 0020     		movs	r0, #0
 423 03b8 FFF7FEFF 		bl	sendAcknowledgment
 424              		.loc 1 199 0
 425 03bc 94E0     		b	.L1
 426              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 26


 204:..\src/command_processing.c ****             if(memInit())
 427              		.loc 1 204 0
 428 03be FFF7FEFF 		bl	memInit
 429 03c2 0346     		mov	r3, r0
 430 03c4 002B     		cmp	r3, #0
 431 03c6 03D0     		beq	.L42
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 432              		.loc 1 205 0
 433 03c8 0120     		movs	r0, #1
 434 03ca FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 435              		.loc 1 208 0
 436 03ce 8BE0     		b	.L1
 437              	.L42:
 207:..\src/command_processing.c ****             break;
 438              		.loc 1 207 0
 439 03d0 0020     		movs	r0, #0
 440 03d2 FFF7FEFF 		bl	sendAcknowledgment
 441              		.loc 1 208 0
 442 03d6 87E0     		b	.L1
 443              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 444              		.loc 1 214 0
 445 03d8 0120     		movs	r0, #1
 446 03da FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 215 0
 448 03de 4FF47A70 		mov	r0, #1000
 449 03e2 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 450              		.loc 1 216 0
 451 03e6 0020     		movs	r0, #0
 452 03e8 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 453              		.loc 1 217 0
 454 03ec 4FF47A70 		mov	r0, #1000
 455 03f0 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 456              		.loc 1 218 0
 457 03f4 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 458              		.loc 1 219 0
 459 03f8 76E0     		b	.L1
 460              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 461              		.loc 1 224 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 27


 462 03fa 3D4B     		ldr	r3, .L53
 463 03fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 464 03fe 1B02     		lsls	r3, r3, #8
 465 0400 1AB2     		sxth	r2, r3
 466 0402 3B4B     		ldr	r3, .L53
 467 0404 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 468 0406 1BB2     		sxth	r3, r3
 469 0408 1343     		orrs	r3, r3, r2
 470 040a 1AB2     		sxth	r2, r3
 471 040c 394B     		ldr	r3, .L53+4
 472 040e 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 473              		.loc 1 225 0
 474 0410 374B     		ldr	r3, .L53
 475 0412 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 476 0414 1B02     		lsls	r3, r3, #8
 477 0416 1AB2     		sxth	r2, r3
 478 0418 354B     		ldr	r3, .L53
 479 041a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 480 041c 1BB2     		sxth	r3, r3
 481 041e 1343     		orrs	r3, r3, r2
 482 0420 1AB2     		sxth	r2, r3
 483 0422 344B     		ldr	r3, .L53+4
 484 0424 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 485              		.loc 1 227 0
 486 0426 334B     		ldr	r3, .L53+4
 487 0428 B3F90230 		ldrsh	r3, [r3, #2]
 488 042c B3F1FF3F 		cmp	r3, #-1
 489 0430 0FD1     		bne	.L44
 490              		.loc 1 227 0 is_stmt 0 discriminator 1
 491 0432 304B     		ldr	r3, .L53+4
 492 0434 B3F90430 		ldrsh	r3, [r3, #4]
 493 0438 B3F1FF3F 		cmp	r3, #-1
 494 043c 09D1     		bne	.L44
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 495              		.loc 1 228 0 is_stmt 1
 496 043e 2D4B     		ldr	r3, .L53+4
 497 0440 0022     		movs	r2, #0
 498 0442 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 499              		.loc 1 229 0
 500 0444 2B4B     		ldr	r3, .L53+4
 501 0446 0022     		movs	r2, #0
 502 0448 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 503              		.loc 1 230 0
 504 044a 2A4B     		ldr	r3, .L53+4
 505 044c 0022     		movs	r2, #0
 506 044e 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 507              		.loc 1 231 0
 508 0450 4AE0     		b	.L1
 509              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 28


 234:..\src/command_processing.c ****             if (calib.speed < 0) {
 510              		.loc 1 234 0
 511 0452 284B     		ldr	r3, .L53+4
 512 0454 B3F90230 		ldrsh	r3, [r3, #2]
 513 0458 002B     		cmp	r3, #0
 514 045a 03DA     		bge	.L45
 235:..\src/command_processing.c ****                 calib.speed = 0;
 515              		.loc 1 235 0
 516 045c 254B     		ldr	r3, .L53+4
 517 045e 0022     		movs	r2, #0
 518 0460 5A80     		strh	r2, [r3, #2]	@ movhi
 519 0462 07E0     		b	.L46
 520              	.L45:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 521              		.loc 1 236 0
 522 0464 234B     		ldr	r3, .L53+4
 523 0466 B3F90230 		ldrsh	r3, [r3, #2]
 524 046a C82B     		cmp	r3, #200
 525 046c 02DD     		ble	.L46
 237:..\src/command_processing.c ****                 calib.speed = 200;
 526              		.loc 1 237 0
 527 046e 214B     		ldr	r3, .L53+4
 528 0470 C822     		movs	r2, #200
 529 0472 5A80     		strh	r2, [r3, #2]	@ movhi
 530              	.L46:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 531              		.loc 1 239 0
 532 0474 1F4B     		ldr	r3, .L53+4
 533 0476 B3F90430 		ldrsh	r3, [r3, #4]
 534 047a 002B     		cmp	r3, #0
 535 047c 02DA     		bge	.L47
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 536              		.loc 1 240 0
 537 047e 1D4B     		ldr	r3, .L53+4
 538 0480 0022     		movs	r2, #0
 539 0482 9A80     		strh	r2, [r3, #4]	@ movhi
 540              	.L47:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 541              		.loc 1 245 0
 542 0484 1C4B     		ldr	r3, .L53+8
 543 0486 0022     		movs	r2, #0
 544 0488 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 545              		.loc 1 246 0
 546 048a 1A4B     		ldr	r3, .L53+4
 547 048c 0122     		movs	r2, #1
 548 048e 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 549              		.loc 1 248 0
 550 0490 0120     		movs	r0, #1
 551 0492 FFF7FEFF 		bl	sendAcknowledgment
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 29


 249:..\src/command_processing.c ****             break;
 552              		.loc 1 249 0
 553 0496 27E0     		b	.L1
 554              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 555              		.loc 1 254 0
 556 0498 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 557              		.loc 1 255 0
 558 049c 24E0     		b	.L1
 559              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 560              		.loc 1 260 0
 561 049e 174B     		ldr	r3, .L53+12
 562 04a0 1B88     		ldrh	r3, [r3]
 563 04a2 FB61     		str	r3, [r7, #28]
 564              	.LBB14:
 565              	.LBB15:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 566              		.loc 2 792 0
 567 04a4 FB69     		ldr	r3, [r7, #28]
 568              		.syntax unified
 569              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 570 04a6 5BBA     		rev16 r3, r3
 571              	@ 0 "" 2
 572              		.thumb
 573              		.syntax unified
 574 04a8 BB60     		str	r3, [r7, #8]
 575              		.loc 2 793 0
 576 04aa BB68     		ldr	r3, [r7, #8]
 577              	.LBE15:
 578              	.LBE14:
 579              		.loc 1 260 0
 580 04ac 9BB2     		uxth	r3, r3
 581 04ae 1846     		mov	r0, r3
 582 04b0 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 583              		.loc 1 261 0
 584 04b4 18E0     		b	.L1
 585              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 586              		.loc 1 266 0
 587 04b6 FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 588              		.loc 1 267 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 30


 589 04ba 15E0     		b	.L1
 590              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 591              		.loc 1 272 0
 592 04bc FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 593              		.loc 1 273 0
 594 04c0 12E0     		b	.L1
 595              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 596              		.loc 1 278 0
 597 04c2 FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 598              		.loc 1 279 0
 599 04c6 0FE0     		b	.L1
 600              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 601              		.loc 1 284 0
 602 04c8 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 603              		.loc 1 285 0
 604 04cc 0CE0     		b	.L1
 605              	.L35:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c **** //=====================================================     CMD_GET_SD_FILESYSTEM
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c ****         case CMD_GET_SD_SINGLE_FILE:
 290:..\src/command_processing.c ****             cmd_get_SD_file( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 606              		.loc 1 290 0
 607 04ce 0B4B     		ldr	r3, .L53+12
 608 04d0 1B88     		ldrh	r3, [r3]
 609 04d2 BB61     		str	r3, [r7, #24]
 610              	.LBB16:
 611              	.LBB17:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 612              		.loc 2 792 0
 613 04d4 BB69     		ldr	r3, [r7, #24]
 614              		.syntax unified
 615              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 616 04d6 5BBA     		rev16 r3, r3
 617              	@ 0 "" 2
 618              		.thumb
 619              		.syntax unified
 620 04d8 7B60     		str	r3, [r7, #4]
 621              		.loc 2 793 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 31


 622 04da 7B68     		ldr	r3, [r7, #4]
 623              	.LBE17:
 624              	.LBE16:
 625              		.loc 1 290 0
 626 04dc 9BB2     		uxth	r3, r3
 627 04de 1846     		mov	r0, r3
 628 04e0 FFF7FEFF 		bl	cmd_get_SD_file
 291:..\src/command_processing.c ****             break;             
 629              		.loc 1 291 0
 630 04e4 00E0     		b	.L1
 631              	.L50:
 292:..\src/command_processing.c ****             
 293:..\src/command_processing.c ****             
 294:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 295:..\src/command_processing.c ****         default:
 296:..\src/command_processing.c ****             break;
 632              		.loc 1 296 0
 633 04e6 00BF     		nop
 634              	.L1:
 297:..\src/command_processing.c **** 
 298:..\src/command_processing.c ****     }
 299:..\src/command_processing.c **** }  
 635              		.loc 1 299 0
 636 04e8 2837     		adds	r7, r7, #40
 637              		.cfi_def_cfa_offset 8
 638 04ea BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 04ec 80BD     		pop	{r7, pc}
 642              	.L54:
 643 04ee 00BF     		.align	2
 644              	.L53:
 645 04f0 00000000 		.word	g_rx
 646 04f4 00000000 		.word	calib
 647 04f8 00000000 		.word	g_refNew
 648 04fc 01000000 		.word	g_rx+1
 649              		.cfi_endproc
 650              	.LFE64:
 651              		.size	commProcess, .-commProcess
 652              		.section	.text.infoSend,"ax",%progbits
 653              		.align	2
 654              		.global	infoSend
 655              		.thumb
 656              		.thumb_func
 657              		.type	infoSend, %function
 658              	infoSend:
 659              	.LFB65:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                                     INFO SEND
 303:..\src/command_processing.c **** //==============================================================================
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoSend(void){
 660              		.loc 1 305 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 1504
 663              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 32


 664 0000 80B5     		push	{r7, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 ADF5BC6D 		sub	sp, sp, #1504
 669              		.cfi_def_cfa_offset 1512
 670 0006 00AF     		add	r7, sp, #0
 671              		.cfi_def_cfa_register 7
 306:..\src/command_processing.c ****     char packet_string[1500];
 307:..\src/command_processing.c ****     
 308:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 672              		.loc 1 308 0
 673 0008 3B1D     		adds	r3, r7, #4
 674 000a 1846     		mov	r0, r3
 675 000c FFF7FEFF 		bl	prepare_generic_info
 309:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 676              		.loc 1 309 0
 677 0010 3B1D     		adds	r3, r7, #4
 678 0012 1846     		mov	r0, r3
 679 0014 FFF7FEFF 		bl	UART_RS485_PutString
 310:..\src/command_processing.c **** }
 680              		.loc 1 310 0
 681 0018 00BF     		nop
 682 001a 07F5BC67 		add	r7, r7, #1504
 683              		.cfi_def_cfa_offset 8
 684 001e BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0020 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE65:
 690              		.size	infoSend, .-infoSend
 691 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 692              		.align	2
 693              		.global	infoGet
 694              		.thumb
 695              		.thumb_func
 696              		.type	infoGet, %function
 697              	infoGet:
 698              	.LFB66:
 311:..\src/command_processing.c **** 
 312:..\src/command_processing.c **** 
 313:..\src/command_processing.c **** //==============================================================================
 314:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 315:..\src/command_processing.c **** //==============================================================================
 316:..\src/command_processing.c **** 
 317:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 699              		.loc 1 317 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 24008
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 7, -8
 706              		.cfi_offset 14, -4
 707 0002 ADF5BB4D 		sub	sp, sp, #23936
 708              		.cfi_def_cfa_offset 23944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 33


 709 0006 92B0     		sub	sp, sp, #72
 710              		.cfi_def_cfa_offset 24016
 711 0008 00AF     		add	r7, sp, #0
 712              		.cfi_def_cfa_register 7
 713 000a 0246     		mov	r2, r0
 714 000c 07F14803 		add	r3, r7, #72
 715 0010 423B     		subs	r3, r3, #66
 716 0012 1A80     		strh	r2, [r3]	@ movhi
 318:..\src/command_processing.c ****     char CYDATA packet_string[4000] = "";
 717              		.loc 1 318 0
 718 0014 07F59C43 		add	r3, r7, #19968
 719 0018 03F12803 		add	r3, r3, #40
 720 001c 0022     		movs	r2, #0
 721 001e 1A60     		str	r2, [r3]
 722 0020 0433     		adds	r3, r3, #4
 723 0022 40F69C72 		movw	r2, #3996
 724 0026 0021     		movs	r1, #0
 725 0028 1846     		mov	r0, r3
 726 002a FFF7FEFF 		bl	memset
 319:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 727              		.loc 1 319 0
 728 002e 07F14803 		add	r3, r7, #72
 729 0032 403B     		subs	r3, r3, #64
 730 0034 0022     		movs	r2, #0
 731 0036 1A60     		str	r2, [r3]
 732 0038 0433     		adds	r3, r3, #4
 733 003a 44F61C62 		movw	r2, #19996
 734 003e 0021     		movs	r1, #0
 735 0040 1846     		mov	r0, r3
 736 0042 FFF7FEFF 		bl	memset
 320:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 321:..\src/command_processing.c **** 
 322:..\src/command_processing.c ****     switch (info_type) {
 737              		.loc 1 322 0
 738 0046 07F14803 		add	r3, r7, #72
 739 004a 423B     		subs	r3, r3, #66
 740 004c 1B88     		ldrh	r3, [r3]
 741 004e 052B     		cmp	r3, #5
 742 0050 66D8     		bhi	.L66
 743 0052 01A2     		adr	r2, .L59
 744 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 745              		.p2align 2
 746              	.L59:
 747 0058 71000000 		.word	.L58+1
 748 005c 93000000 		.word	.L60+1
 749 0060 B5000000 		.word	.L61+1
 750 0064 DD000000 		.word	.L62+1
 751 0068 FF000000 		.word	.L63+1
 752 006c 1D010000 		.word	.L64+1
 753              		.p2align 1
 754              	.L58:
 323:..\src/command_processing.c ****         case INFO_ALL:
 324:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 755              		.loc 1 324 0
 756 0070 07F59C43 		add	r3, r7, #19968
 757 0074 03F12803 		add	r3, r3, #40
 758 0078 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 34


 759 007a FFF7FEFF 		bl	prepare_generic_info
 325:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 760              		.loc 1 325 0
 761 007e FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 326:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 762              		.loc 1 326 0
 763 0082 07F59C43 		add	r3, r7, #19968
 764 0086 03F12803 		add	r3, r3, #40
 765 008a 1846     		mov	r0, r3
 766 008c FFF7FEFF 		bl	UART_RS485_PutString
 327:..\src/command_processing.c ****             break;
 767              		.loc 1 327 0
 768 0090 47E0     		b	.L65
 769              	.L60:
 328:..\src/command_processing.c ****         case CYCLES_INFO:
 329:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 770              		.loc 1 329 0
 771 0092 07F59C43 		add	r3, r7, #19968
 772 0096 03F12803 		add	r3, r3, #40
 773 009a 1846     		mov	r0, r3
 774 009c FFF7FEFF 		bl	prepare_counter_info
 330:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 775              		.loc 1 330 0
 776 00a0 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 331:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 777              		.loc 1 331 0
 778 00a4 07F59C43 		add	r3, r7, #19968
 779 00a8 03F12803 		add	r3, r3, #40
 780 00ac 1846     		mov	r0, r3
 781 00ae FFF7FEFF 		bl	UART_RS485_PutString
 332:..\src/command_processing.c ****             break;
 782              		.loc 1 332 0
 783 00b2 36E0     		b	.L65
 784              	.L61:
 333:..\src/command_processing.c ****         case GET_SD_PARAM:
 334:..\src/command_processing.c ****             Read_SD_Closed_File(sdParam, packet_string, sizeof(packet_string));
 785              		.loc 1 334 0
 786 00b4 07F59C43 		add	r3, r7, #19968
 787 00b8 03F12803 		add	r3, r3, #40
 788 00bc 4FF47A62 		mov	r2, #4000
 789 00c0 1946     		mov	r1, r3
 790 00c2 1B48     		ldr	r0, .L67
 791 00c4 FFF7FEFF 		bl	Read_SD_Closed_File
 335:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 792              		.loc 1 335 0
 793 00c8 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 336:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 794              		.loc 1 336 0
 795 00cc 07F59C43 		add	r3, r7, #19968
 796 00d0 03F12803 		add	r3, r3, #40
 797 00d4 1846     		mov	r0, r3
 798 00d6 FFF7FEFF 		bl	UART_RS485_PutString
 337:..\src/command_processing.c ****             break;
 799              		.loc 1 337 0
 800 00da 22E0     		b	.L65
 801              	.L62:
 338:..\src/command_processing.c ****         case GET_SD_DATA:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 35


 339:..\src/command_processing.c ****             Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 802              		.loc 1 339 0
 803 00dc 07F14803 		add	r3, r7, #72
 804 00e0 403B     		subs	r3, r3, #64
 805 00e2 44F62061 		movw	r1, #20000
 806 00e6 1846     		mov	r0, r3
 807 00e8 FFF7FEFF 		bl	Read_SD_Current_Data
 340:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 808              		.loc 1 340 0
 809 00ec FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 341:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 810              		.loc 1 341 0
 811 00f0 07F14803 		add	r3, r7, #72
 812 00f4 403B     		subs	r3, r3, #64
 813 00f6 1846     		mov	r0, r3
 814 00f8 FFF7FEFF 		bl	UART_RS485_PutString
 342:..\src/command_processing.c ****             break;
 815              		.loc 1 342 0
 816 00fc 11E0     		b	.L65
 817              	.L63:
 343:..\src/command_processing.c ****         case GET_SD_FS_TREE:
 344:..\src/command_processing.c ****             Get_SD_FS(str_sd_data);
 818              		.loc 1 344 0
 819 00fe 07F14803 		add	r3, r7, #72
 820 0102 403B     		subs	r3, r3, #64
 821 0104 1846     		mov	r0, r3
 822 0106 FFF7FEFF 		bl	Get_SD_FS
 345:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 823              		.loc 1 345 0
 824 010a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 346:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 825              		.loc 1 346 0
 826 010e 07F14803 		add	r3, r7, #72
 827 0112 403B     		subs	r3, r3, #64
 828 0114 1846     		mov	r0, r3
 829 0116 FFF7FEFF 		bl	UART_RS485_PutString
 347:..\src/command_processing.c ****             break;
 830              		.loc 1 347 0
 831 011a 02E0     		b	.L65
 832              	.L64:
 348:..\src/command_processing.c ****         case GET_SD_EMG_HIST:
 349:..\src/command_processing.c ****             // Send every single byte inside the function
 350:..\src/command_processing.c ****             Read_SD_EMG_History_Data();
 833              		.loc 1 350 0
 834 011c FFF7FEFF 		bl	Read_SD_EMG_History_Data
 835              	.L66:
 351:..\src/command_processing.c ****         default:
 352:..\src/command_processing.c ****             break;
 836              		.loc 1 352 0
 837 0120 00BF     		nop
 838              	.L65:
 353:..\src/command_processing.c ****     }
 354:..\src/command_processing.c **** }
 839              		.loc 1 354 0 discriminator 1
 840 0122 00BF     		nop
 841 0124 07F5BB47 		add	r7, r7, #23936
 842 0128 4837     		adds	r7, r7, #72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 36


 843              		.cfi_def_cfa_offset 8
 844 012a BD46     		mov	sp, r7
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 012c 80BD     		pop	{r7, pc}
 848              	.L68:
 849 012e 00BF     		.align	2
 850              	.L67:
 851 0130 00000000 		.word	sdParam
 852              		.cfi_endproc
 853              	.LFE66:
 854              		.size	infoGet, .-infoGet
 855              		.global	__aeabi_i2f
 856              		.global	__aeabi_fdiv
 857              		.section	.rodata
 858              		.align	2
 859              	.LC88:
 860 0000 20557362 		.ascii	" Usb\000"
 860      00
 861 0005 000000   		.align	2
 862              	.LC89:
 863 0008 2048616E 		.ascii	" Handle\000"
 863      646C6500 
 864              		.align	2
 865              	.LC90:
 866 0010 20454D47 		.ascii	" EMG proportional\000"
 866      2070726F 
 866      706F7274 
 866      696F6E61 
 866      6C00
 867 0022 0000     		.align	2
 868              	.LC91:
 869 0024 20454D47 		.ascii	" EMG integral\000"
 869      20696E74 
 869      65677261 
 869      6C00
 870 0032 0000     		.align	2
 871              	.LC92:
 872 0034 20454D47 		.ascii	" EMG FCFS\000"
 872      20464346 
 872      5300
 873 003e 0000     		.align	2
 874              	.LC93:
 875 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 875      20464346 
 875      53204164 
 875      76616E63 
 875      656400
 876 0053 00       		.align	2
 877              	.LC94:
 878 0054 204A6F79 		.ascii	" Joystick\000"
 878      73746963 
 878      6B00
 879 005e 0000     		.align	2
 880              	.LC95:
 881 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 881      2070726F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 37


 881      706F7274 
 881      696F6E61 
 881      6C204E6F 
 882 0082 0000     		.align	2
 883              	.LC96:
 884 0084 20506F73 		.ascii	" Position\000"
 884      6974696F 
 884      6E00
 885 008e 0000     		.align	2
 886              	.LC97:
 887 0090 2050574D 		.ascii	" PWM\000"
 887      00
 888 0095 000000   		.align	2
 889              	.LC98:
 890 0098 20437572 		.ascii	" Current\000"
 890      72656E74 
 890      00
 891 00a1 000000   		.align	2
 892              	.LC99:
 893 00a4 20506F73 		.ascii	" Position and Current\000"
 893      6974696F 
 893      6E20616E 
 893      64204375 
 893      7272656E 
 894 00ba 0000     		.align	2
 895              	.LC100:
 896 00bc 20594553 		.ascii	" YES\000\000"
 896      0000
 897 00c2 0000     		.align	2
 898              	.LC101:
 899 00c4 204E4F00 		.ascii	" NO\000\000"
 899      00
 900 00c9 000000   		.align	2
 901              	.LC102:
 902 00cc 20526967 		.ascii	" Right\000\000"
 902      68740000 
 903              		.align	2
 904              	.LC103:
 905 00d4 204C6566 		.ascii	" Left\000\000"
 905      740000
 906 00db 00       		.align	2
 907              	.LC104:
 908 00dc 204F4646 		.ascii	" OFF\000\000"
 908      0000
 909 00e2 0000     		.align	2
 910              	.LC105:
 911 00e4 204F4E00 		.ascii	" ON\000\000"
 911      00
 912 00e9 000000   		.align	2
 913              	.LC106:
 914 00ec 204E6F6E 		.ascii	" None\000\000"
 914      650000
 915 00f3 00       		.align	2
 916              	.LC107:
 917 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 917      52544320 
 917      626F6172 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 38


 917      640000
 918 0103 00       		.align	2
 919              	.LC108:
 920 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 920      6920626F 
 920      61726420 
 920      5B4E2F41 
 920      5D0000
 921 0117 00       		.align	2
 922              	.LC109:
 923 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 923      6572205B 
 923      4E2F415D 
 923      0000
 924 0126 0000     		.align	2
 925              	.LC110:
 926 0128 204C6F77 		.ascii	" Low\000\000"
 926      0000
 927 012e 0000     		.align	2
 928              	.LC111:
 929 0130 20486967 		.ascii	" High\000\000"
 929      680000
 930 0137 00       		.align	2
 931              	.LC112:
 932 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 932      45524943 
 932      20555345 
 932      520000
 933 0147 00       		.align	2
 934              	.LC113:
 935 0148 204D4152 		.ascii	" MARIA\000\000"
 935      49410000 
 936              		.align	2
 937              	.LC114:
 938 0150 20524F5A 		.ascii	" ROZA\000\000"
 938      410000
 939 0157 00       		.align	2
 940              	.LC115:
 941 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 941      33383837 
 941      20285374 
 941      616E6461 
 941      72642900 
 942 016d 000000   		.align	2
 943              	.LC116:
 944 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 944      35303139 
 944      20284869 
 944      67682070 
 944      6F776572 
 945 0187 00       		.align	2
 946              	.LC117:
 947 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 947      5448414E 
 947      44205052 
 947      4F0000
 948 0197 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 39


 949              	.LC118:
 950 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 950      45524943 
 950      2032204D 
 950      4F544F52 
 950      530000
 951 01ab 00       		.align	2
 952              	.LC119:
 953 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
 953      20434841 
 953      4D424552 
 953      530000
 954 01bb 00       		.align	2
 955              	.LC120:
 956 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 956      4F424F43 
 956      4B205752 
 956      49535400 
 956      00
 957 01cd 000000   		.align	2
 958              	.LC121:
 959 01d0 20534F46 		.ascii	" SOFTHAND 2 MOTORS\000\000"
 959      5448414E 
 959      44203220 
 959      4D4F544F 
 959      52530000 
 960              		.align	2
 961              	.LC122:
 962 01e4 20466173 		.ascii	" Fast:syn2, Slow:syn1\000\000"
 962      743A7379 
 962      6E322C20 
 962      536C6F77 
 962      3A73796E 
 963 01fb 00       		.align	2
 964              	.LC123:
 965 01fc 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 965      743A7772 
 965      6973742C 
 965      20536C6F 
 965      773A6861 
 966              		.align	2
 967              	.LC124:
 968 0214 20536C6F 		.ascii	" Slow:syn2, Fast:syn1\000\000"
 968      773A7379 
 968      6E322C20 
 968      46617374 
 968      3A73796E 
 969 022b 00       		.align	2
 970              	.LC125:
 971 022c 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 971      773A7772 
 971      6973742C 
 971      20466173 
 971      743A6861 
 972              		.align	2
 973              	.LC126:
 974 0244 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 40


 974      73653A43 
 974      572C204F 
 974      70656E3A 
 974      43435700 
 975 0259 000000   		.align	2
 976              	.LC127:
 977 025c 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 977      73653A43 
 977      43572C20 
 977      4F70656E 
 977      3A435700 
 978              		.section	.text.get_param_list,"ax",%progbits
 979              		.align	2
 980              		.global	get_param_list
 981              		.thumb
 982              		.thumb_func
 983              		.type	get_param_list, %function
 984              	get_param_list:
 985              	.LFB67:
 355:..\src/command_processing.c **** 
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c **** //==============================================================================
 358:..\src/command_processing.c **** //                                                                GET PARAM LIST
 359:..\src/command_processing.c **** //==============================================================================
 360:..\src/command_processing.c **** 
 361:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 362:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 363:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 364:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 986              		.loc 1 364 0
 987              		.cfi_startproc
 988              		@ args = 16, pretend = 0, frame = 5656
 989              		@ frame_needed = 1, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              		.cfi_def_cfa_offset 20
 992              		.cfi_offset 4, -20
 993              		.cfi_offset 5, -16
 994              		.cfi_offset 6, -12
 995              		.cfi_offset 7, -8
 996              		.cfi_offset 14, -4
 997 0002 ADF5B05D 		sub	sp, sp, #5632
 998              		.cfi_def_cfa_offset 5652
 999 0006 87B0     		sub	sp, sp, #28
 1000              		.cfi_def_cfa_offset 5680
 1001 0008 00AF     		add	r7, sp, #0
 1002              		.cfi_def_cfa_register 7
 1003 000a 07F11804 		add	r4, r7, #24
 1004 000e 0C3C     		subs	r4, r4, #12
 1005 0010 2060     		str	r0, [r4]
 1006 0012 07F11800 		add	r0, r7, #24
 1007 0016 1038     		subs	r0, r0, #16
 1008 0018 0160     		str	r1, [r0]
 1009 001a 07F11801 		add	r1, r7, #24
 1010 001e 1439     		subs	r1, r1, #20
 1011 0020 0A60     		str	r2, [r1]
 1012 0022 07F11802 		add	r2, r7, #24
 1013 0026 183A     		subs	r2, r2, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 41


 1014 0028 1360     		str	r3, [r2]
 365:..\src/command_processing.c ****     
 366:..\src/command_processing.c ****     //Package to be sent variables
 367:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 1015              		.loc 1 367 0
 1016 002a 07F15803 		add	r3, r7, #88
 1017 002e 043B     		subs	r3, r3, #4
 1018 0030 0022     		movs	r2, #0
 1019 0032 1A60     		str	r2, [r3]
 1020 0034 0433     		adds	r3, r3, #4
 1021 0036 41F2AA52 		movw	r2, #5546
 1022 003a 0021     		movs	r1, #0
 1023 003c 1846     		mov	r0, r3
 1024 003e FFF7FEFF 		bl	memset
 368:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 1025              		.loc 1 368 0
 1026 0042 41F2AE53 		movw	r3, #5550
 1027 0046 07F5B052 		add	r2, r7, #5632
 1028 004a 02F11002 		add	r2, r2, #16
 1029 004e 1380     		strh	r3, [r2]	@ movhi
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     //Auxiliary variables
 371:..\src/command_processing.c ****     uint8 CYDATA i, j;
 372:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1030              		.loc 1 372 0
 1031 0050 0023     		movs	r3, #0
 1032 0052 07F5B052 		add	r2, r7, #5632
 1033 0056 02F11502 		add	r2, r2, #21
 1034 005a 1370     		strb	r3, [r2]
 373:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1035              		.loc 1 373 0
 1036 005c 0023     		movs	r3, #0
 1037 005e 07F5B052 		add	r2, r7, #5632
 1038 0062 02F11402 		add	r2, r2, #20
 1039 0066 1370     		strb	r3, [r2]
 374:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1040              		.loc 1 374 0
 1041 0068 0023     		movs	r3, #0
 1042 006a 07F5B052 		add	r2, r7, #5632
 1043 006e 02F11302 		add	r2, r2, #19
 1044 0072 1370     		strb	r3, [r2]
 375:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 376:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1045              		.loc 1 376 0
 1046 0074 07F13803 		add	r3, r7, #56
 1047 0078 183B     		subs	r3, r3, #24
 1048 007a 0022     		movs	r2, #0
 1049 007c 1A60     		str	r2, [r3]
 1050 007e 0433     		adds	r3, r3, #4
 1051 0080 2E22     		movs	r2, #46
 1052 0082 0021     		movs	r1, #0
 1053 0084 1846     		mov	r0, r3
 1054 0086 FFF7FEFF 		bl	memset
 377:..\src/command_processing.c ****     float aux_float;
 378:..\src/command_processing.c ****     int16 aux_int16;
 379:..\src/command_processing.c ****     uint16 aux_uint16;
 380:..\src/command_processing.c ****     int32 aux_int32;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 42


 381:..\src/command_processing.c ****     uint32 aux_uint32;
 382:..\src/command_processing.c **** 
 383:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 1055              		.loc 1 383 0
 1056 008a 0023     		movs	r3, #0
 1057 008c 07F5B052 		add	r2, r7, #5632
 1058 0090 02F10F02 		add	r2, r2, #15
 1059 0094 1370     		strb	r3, [r2]
 384:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 1060              		.loc 1 384 0
 1061 0096 0123     		movs	r3, #1
 1062 0098 07F5B052 		add	r2, r7, #5632
 1063 009c 02F10E02 		add	r2, r2, #14
 1064 00a0 1370     		strb	r3, [r2]
 385:..\src/command_processing.c ****   
 386:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 1065              		.loc 1 386 0
 1066 00a2 07F11803 		add	r3, r7, #24
 1067 00a6 0C3B     		subs	r3, r3, #12
 1068 00a8 1B68     		ldr	r3, [r3]
 1069 00aa 1B68     		ldr	r3, [r3]
 1070 00ac 07F5B052 		add	r2, r7, #5632
 1071 00b0 02F10802 		add	r2, r2, #8
 1072 00b4 1360     		str	r3, [r2]
 387:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1073              		.loc 1 387 0
 1074 00b6 07F5B053 		add	r3, r7, #5632
 1075 00ba 03F10803 		add	r3, r3, #8
 1076 00be 1B68     		ldr	r3, [r3]
 1077 00c0 07F5B052 		add	r2, r7, #5632
 1078 00c4 02F10402 		add	r2, r2, #4
 1079 00c8 1360     		str	r3, [r2]
 388:..\src/command_processing.c ****         
 389:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1080              		.loc 1 389 0
 1081 00ca 07F15803 		add	r3, r7, #88
 1082 00ce 043B     		subs	r3, r3, #4
 1083 00d0 0C22     		movs	r2, #12
 1084 00d2 1A70     		strb	r2, [r3]
 390:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1085              		.loc 1 390 0
 1086 00d4 07F15803 		add	r3, r7, #88
 1087 00d8 043B     		subs	r3, r3, #4
 1088 00da 4D22     		movs	r2, #77
 1089 00dc 5A70     		strb	r2, [r3, #1]
 391:..\src/command_processing.c ****     
 392:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1090              		.loc 1 392 0
 1091 00de 0023     		movs	r3, #0
 1092 00e0 07F5B052 		add	r2, r7, #5632
 1093 00e4 02F11502 		add	r2, r2, #21
 1094 00e8 1370     		strb	r3, [r2]
 1095 00ea 02F0EABF 		b	.L70
 1096              	.L272:
 393:..\src/command_processing.c ****         
 394:..\src/command_processing.c ****         // Assign m_addr memory address
 395:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 43


 1097              		.loc 1 395 0
 1098 00ee 07F5B053 		add	r3, r7, #5632
 1099 00f2 03F11503 		add	r3, r3, #21
 1100 00f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1101 00f8 9A00     		lsls	r2, r3, #2
 1102 00fa 07F11803 		add	r3, r7, #24
 1103 00fe 0C3B     		subs	r3, r3, #12
 1104 0100 1B68     		ldr	r3, [r3]
 1105 0102 1344     		add	r3, r3, r2
 1106 0104 1B68     		ldr	r3, [r3]
 1107 0106 07F5B052 		add	r2, r7, #5632
 1108 010a 02F10802 		add	r2, r2, #8
 1109 010e 1360     		str	r3, [r2]
 396:..\src/command_processing.c ****         
 397:..\src/command_processing.c ****         // Add parameter type and size to packet
 398:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1110              		.loc 1 398 0
 1111 0110 07F5B053 		add	r3, r7, #5632
 1112 0114 03F11503 		add	r3, r3, #21
 1113 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 011a 3222     		movs	r2, #50
 1115 011c 02FB03F3 		mul	r3, r2, r3
 1116 0120 9A1C     		adds	r2, r3, #2
 1117 0122 07F5B053 		add	r3, r7, #5632
 1118 0126 03F11503 		add	r3, r3, #21
 1119 012a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1120 012c 07F11803 		add	r3, r7, #24
 1121 0130 103B     		subs	r3, r3, #16
 1122 0132 1B68     		ldr	r3, [r3]
 1123 0134 0B44     		add	r3, r3, r1
 1124 0136 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1125 0138 07F15803 		add	r3, r7, #88
 1126 013c 043B     		subs	r3, r3, #4
 1127 013e 9954     		strb	r1, [r3, r2]
 399:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1128              		.loc 1 399 0
 1129 0140 07F5B053 		add	r3, r7, #5632
 1130 0144 03F11503 		add	r3, r3, #21
 1131 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1132 014a 3222     		movs	r2, #50
 1133 014c 02FB03F3 		mul	r3, r2, r3
 1134 0150 DA1C     		adds	r2, r3, #3
 1135 0152 07F5B053 		add	r3, r7, #5632
 1136 0156 03F11503 		add	r3, r3, #21
 1137 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1138 015c 07F11803 		add	r3, r7, #24
 1139 0160 143B     		subs	r3, r3, #20
 1140 0162 1B68     		ldr	r3, [r3]
 1141 0164 0B44     		add	r3, r3, r1
 1142 0166 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1143 0168 07F15803 		add	r3, r7, #88
 1144 016c 043B     		subs	r3, r3, #4
 1145 016e 9954     		strb	r1, [r3, r2]
 400:..\src/command_processing.c ****         
 401:..\src/command_processing.c ****         // Find size of data
 402:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1146              		.loc 1 402 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 44


 1147 0170 07F5B053 		add	r3, r7, #5632
 1148 0174 03F11503 		add	r3, r3, #21
 1149 0178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1150 017a 07F11803 		add	r3, r7, #24
 1151 017e 103B     		subs	r3, r3, #16
 1152 0180 1B68     		ldr	r3, [r3]
 1153 0182 1344     		add	r3, r3, r2
 1154 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1155 0186 092B     		cmp	r3, #9
 1156 0188 2BD8     		bhi	.L71
 1157 018a 01A2     		adr	r2, .L73
 1158 018c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1159              		.p2align 2
 1160              	.L73:
 1161 0190 B9010000 		.word	.L72+1
 1162 0194 B9010000 		.word	.L72+1
 1163 0198 B9010000 		.word	.L72+1
 1164 019c C7010000 		.word	.L74+1
 1165 01a0 C7010000 		.word	.L74+1
 1166 01a4 D5010000 		.word	.L75+1
 1167 01a8 D5010000 		.word	.L75+1
 1168 01ac D5010000 		.word	.L75+1
 1169 01b0 E3010000 		.word	.L71+1
 1170 01b4 B9010000 		.word	.L72+1
 1171              		.p2align 1
 1172              	.L72:
 403:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 404:..\src/command_processing.c ****                 sod = 1; break;
 1173              		.loc 1 404 0
 1174 01b8 0123     		movs	r3, #1
 1175 01ba 07F5B052 		add	r2, r7, #5632
 1176 01be 02F11302 		add	r2, r2, #19
 1177 01c2 1370     		strb	r3, [r2]
 1178 01c4 0DE0     		b	.L71
 1179              	.L74:
 405:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 406:..\src/command_processing.c ****                 sod = 2; break;
 1180              		.loc 1 406 0
 1181 01c6 0223     		movs	r3, #2
 1182 01c8 07F5B052 		add	r2, r7, #5632
 1183 01cc 02F11302 		add	r2, r2, #19
 1184 01d0 1370     		strb	r3, [r2]
 1185 01d2 06E0     		b	.L71
 1186              	.L75:
 407:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 408:..\src/command_processing.c ****                 sod = 4; break;
 1187              		.loc 1 408 0
 1188 01d4 0423     		movs	r3, #4
 1189 01d6 07F5B052 		add	r2, r7, #5632
 1190 01da 02F11302 		add	r2, r2, #19
 1191 01de 1370     		strb	r3, [r2]
 1192 01e0 00BF     		nop
 1193              	.L71:
 409:..\src/command_processing.c ****         }
 410:..\src/command_processing.c ****             
 411:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1194              		.loc 1 411 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 45


 1195 01e2 07F5B053 		add	r3, r7, #5632
 1196 01e6 03F11503 		add	r3, r3, #21
 1197 01ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1198 01ec 07F5B152 		add	r2, r7, #5664
 1199 01f0 02F11802 		add	r2, r2, #24
 1200 01f4 1268     		ldr	r2, [r2]
 1201 01f6 1344     		add	r3, r3, r2
 1202 01f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1203 01fa 002B     		cmp	r3, #0
 1204 01fc 40F0DA83 		bne	.L76
 412:..\src/command_processing.c ****             
 413:..\src/command_processing.c ****             // Add parameter data to packet
 414:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1205              		.loc 1 414 0
 1206 0200 07F5B053 		add	r3, r7, #5632
 1207 0204 03F11503 		add	r3, r3, #21
 1208 0208 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1209 020a 07F11803 		add	r3, r7, #24
 1210 020e 103B     		subs	r3, r3, #16
 1211 0210 1B68     		ldr	r3, [r3]
 1212 0212 1344     		add	r3, r3, r2
 1213 0214 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1214 0216 092B     		cmp	r3, #9
 1215 0218 02F23381 		bhi	.L110
 1216 021c 01A2     		adr	r2, .L79
 1217 021e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1218 0222 00BF     		.p2align 2
 1219              	.L79:
 1220 0224 4D020000 		.word	.L78+1
 1221 0228 09030000 		.word	.L80+1
 1222 022c 4D020000 		.word	.L78+1
 1223 0230 C5030000 		.word	.L81+1
 1224 0234 F7040000 		.word	.L82+1
 1225 0238 23060000 		.word	.L83+1
 1226 023c 53070000 		.word	.L84+1
 1227 0240 83080000 		.word	.L85+1
 1228 0244 83240000 		.word	.L110+1
 1229 0248 4D020000 		.word	.L78+1
 1230              		.p2align 1
 1231              	.L78:
 415:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 416:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1232              		.loc 1 416 0
 1233 024c 0023     		movs	r3, #0
 1234 024e 07F5B052 		add	r2, r7, #5632
 1235 0252 02F11702 		add	r2, r2, #23
 1236 0256 1370     		strb	r3, [r2]
 1237 0258 42E0     		b	.L86
 1238              	.L87:
 417:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1239              		.loc 1 417 0 discriminator 3
 1240 025a 07F5B053 		add	r3, r7, #5632
 1241 025e 03F11703 		add	r3, r3, #23
 1242 0262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1243 0264 07F5B052 		add	r2, r7, #5632
 1244 0268 02F11302 		add	r2, r2, #19
 1245 026c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 46


 1246 026e 02FB03F3 		mul	r3, r2, r3
 1247 0272 1A46     		mov	r2, r3
 1248 0274 07F5B053 		add	r3, r7, #5632
 1249 0278 03F10803 		add	r3, r3, #8
 1250 027c 1B68     		ldr	r3, [r3]
 1251 027e 1344     		add	r3, r3, r2
 1252 0280 07F5B052 		add	r2, r7, #5632
 1253 0284 02F10402 		add	r2, r2, #4
 1254 0288 1360     		str	r3, [r2]
 418:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1255              		.loc 1 418 0 discriminator 3
 1256 028a 07F5B053 		add	r3, r7, #5632
 1257 028e 03F11503 		add	r3, r3, #21
 1258 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1259 0294 3222     		movs	r2, #50
 1260 0296 02FB03F3 		mul	r3, r2, r3
 1261 029a 1A1D     		adds	r2, r3, #4
 1262 029c 07F5B053 		add	r3, r7, #5632
 1263 02a0 03F11703 		add	r3, r3, #23
 1264 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1265 02a6 07F5B051 		add	r1, r7, #5632
 1266 02aa 01F11301 		add	r1, r1, #19
 1267 02ae 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1268 02b0 01FB03F3 		mul	r3, r1, r3
 1269 02b4 1A44     		add	r2, r2, r3
 1270 02b6 07F5B053 		add	r3, r7, #5632
 1271 02ba 03F10403 		add	r3, r3, #4
 1272 02be 1B68     		ldr	r3, [r3]
 1273 02c0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1274 02c2 07F15803 		add	r3, r7, #88
 1275 02c6 043B     		subs	r3, r3, #4
 1276 02c8 9954     		strb	r1, [r3, r2]
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1277              		.loc 1 416 0 discriminator 3
 1278 02ca 07F5B053 		add	r3, r7, #5632
 1279 02ce 03F11703 		add	r3, r3, #23
 1280 02d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1281 02d4 0133     		adds	r3, r3, #1
 1282 02d6 07F5B052 		add	r2, r7, #5632
 1283 02da 02F11702 		add	r2, r2, #23
 1284 02de 1370     		strb	r3, [r2]
 1285              	.L86:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1286              		.loc 1 416 0 is_stmt 0 discriminator 1
 1287 02e0 07F5B053 		add	r3, r7, #5632
 1288 02e4 03F11503 		add	r3, r3, #21
 1289 02e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1290 02ea 07F11803 		add	r3, r7, #24
 1291 02ee 143B     		subs	r3, r3, #20
 1292 02f0 1B68     		ldr	r3, [r3]
 1293 02f2 1344     		add	r3, r3, r2
 1294 02f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1295 02f6 07F5B052 		add	r2, r7, #5632
 1296 02fa 02F11702 		add	r2, r2, #23
 1297 02fe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1298 0300 9A42     		cmp	r2, r3
 1299 0302 AAD3     		bcc	.L87
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 47


 419:..\src/command_processing.c ****                     }
 420:..\src/command_processing.c ****                     break;                
 1300              		.loc 1 420 0 is_stmt 1
 1301 0304 02F0BDB8 		b	.L110
 1302              	.L80:
 421:..\src/command_processing.c ****                 case TYPE_INT8:
 422:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1303              		.loc 1 422 0
 1304 0308 0023     		movs	r3, #0
 1305 030a 07F5B052 		add	r2, r7, #5632
 1306 030e 02F11702 		add	r2, r2, #23
 1307 0312 1370     		strb	r3, [r2]
 1308 0314 42E0     		b	.L88
 1309              	.L89:
 423:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1310              		.loc 1 423 0 discriminator 3
 1311 0316 07F5B053 		add	r3, r7, #5632
 1312 031a 03F11703 		add	r3, r3, #23
 1313 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1314 0320 07F5B052 		add	r2, r7, #5632
 1315 0324 02F11302 		add	r2, r2, #19
 1316 0328 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1317 032a 02FB03F3 		mul	r3, r2, r3
 1318 032e 1A46     		mov	r2, r3
 1319 0330 07F5B053 		add	r3, r7, #5632
 1320 0334 03F10803 		add	r3, r3, #8
 1321 0338 1B68     		ldr	r3, [r3]
 1322 033a 1344     		add	r3, r3, r2
 1323 033c 07F5B052 		add	r2, r7, #5632
 1324 0340 02F10402 		add	r2, r2, #4
 1325 0344 1360     		str	r3, [r2]
 424:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1326              		.loc 1 424 0 discriminator 3
 1327 0346 07F5B053 		add	r3, r7, #5632
 1328 034a 03F11503 		add	r3, r3, #21
 1329 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1330 0350 3222     		movs	r2, #50
 1331 0352 02FB03F3 		mul	r3, r2, r3
 1332 0356 1A1D     		adds	r2, r3, #4
 1333 0358 07F5B053 		add	r3, r7, #5632
 1334 035c 03F11703 		add	r3, r3, #23
 1335 0360 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1336 0362 07F5B051 		add	r1, r7, #5632
 1337 0366 01F11301 		add	r1, r1, #19
 1338 036a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1339 036c 01FB03F3 		mul	r3, r1, r3
 1340 0370 1A44     		add	r2, r2, r3
 1341 0372 07F5B053 		add	r3, r7, #5632
 1342 0376 03F10403 		add	r3, r3, #4
 1343 037a 1B68     		ldr	r3, [r3]
 1344 037c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1345 037e 07F15803 		add	r3, r7, #88
 1346 0382 043B     		subs	r3, r3, #4
 1347 0384 9954     		strb	r1, [r3, r2]
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1348              		.loc 1 422 0 discriminator 3
 1349 0386 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 48


 1350 038a 03F11703 		add	r3, r3, #23
 1351 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1352 0390 0133     		adds	r3, r3, #1
 1353 0392 07F5B052 		add	r2, r7, #5632
 1354 0396 02F11702 		add	r2, r2, #23
 1355 039a 1370     		strb	r3, [r2]
 1356              	.L88:
 422:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1357              		.loc 1 422 0 is_stmt 0 discriminator 1
 1358 039c 07F5B053 		add	r3, r7, #5632
 1359 03a0 03F11503 		add	r3, r3, #21
 1360 03a4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1361 03a6 07F11803 		add	r3, r7, #24
 1362 03aa 143B     		subs	r3, r3, #20
 1363 03ac 1B68     		ldr	r3, [r3]
 1364 03ae 1344     		add	r3, r3, r2
 1365 03b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1366 03b2 07F5B052 		add	r2, r7, #5632
 1367 03b6 02F11702 		add	r2, r2, #23
 1368 03ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1369 03bc 9A42     		cmp	r2, r3
 1370 03be AAD3     		bcc	.L89
 425:..\src/command_processing.c ****                     }
 426:..\src/command_processing.c ****                     break;
 1371              		.loc 1 426 0 is_stmt 1
 1372 03c0 02F05FB8 		b	.L110
 1373              	.L81:
 427:..\src/command_processing.c ****                 case TYPE_INT16:
 428:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1374              		.loc 1 428 0
 1375 03c4 0023     		movs	r3, #0
 1376 03c6 07F5B052 		add	r2, r7, #5632
 1377 03ca 02F11702 		add	r2, r2, #23
 1378 03ce 1370     		strb	r3, [r2]
 1379 03d0 7CE0     		b	.L90
 1380              	.L93:
 429:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1381              		.loc 1 429 0
 1382 03d2 07F5B053 		add	r3, r7, #5632
 1383 03d6 03F11703 		add	r3, r3, #23
 1384 03da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1385 03dc 07F5B052 		add	r2, r7, #5632
 1386 03e0 02F11302 		add	r2, r2, #19
 1387 03e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1388 03e6 02FB03F3 		mul	r3, r2, r3
 1389 03ea 1A46     		mov	r2, r3
 1390 03ec 07F5B053 		add	r3, r7, #5632
 1391 03f0 03F10803 		add	r3, r3, #8
 1392 03f4 1B68     		ldr	r3, [r3]
 1393 03f6 1344     		add	r3, r3, r2
 1394 03f8 07F5B052 		add	r2, r7, #5632
 1395 03fc 02F10402 		add	r2, r2, #4
 1396 0400 1360     		str	r3, [r2]
 430:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1397              		.loc 1 430 0
 1398 0402 07F5B053 		add	r3, r7, #5632
 1399 0406 03F10403 		add	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 49


 1400 040a 1B68     		ldr	r3, [r3]
 1401 040c B3F90020 		ldrsh	r2, [r3]
 1402 0410 07F13803 		add	r3, r7, #56
 1403 0414 1E3B     		subs	r3, r3, #30
 1404 0416 1A80     		strh	r2, [r3]	@ movhi
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1405              		.loc 1 431 0
 1406 0418 0023     		movs	r3, #0
 1407 041a 07F5B052 		add	r2, r7, #5632
 1408 041e 02F11602 		add	r2, r2, #22
 1409 0422 1370     		strb	r3, [r2]
 1410 0424 3BE0     		b	.L91
 1411              	.L92:
 432:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1412              		.loc 1 432 0 discriminator 3
 1413 0426 07F5B053 		add	r3, r7, #5632
 1414 042a 03F11503 		add	r3, r3, #21
 1415 042e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1416 0430 3222     		movs	r2, #50
 1417 0432 02FB03F3 		mul	r3, r2, r3
 1418 0436 1A1D     		adds	r2, r3, #4
 1419 0438 07F5B053 		add	r3, r7, #5632
 1420 043c 03F11703 		add	r3, r3, #23
 1421 0440 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1422 0442 07F5B051 		add	r1, r7, #5632
 1423 0446 01F11301 		add	r1, r1, #19
 1424 044a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1425 044c 01FB03F3 		mul	r3, r1, r3
 1426 0450 1A44     		add	r2, r2, r3
 1427 0452 07F5B053 		add	r3, r7, #5632
 1428 0456 03F11303 		add	r3, r3, #19
 1429 045a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1430 045c 1A44     		add	r2, r2, r3
 1431 045e 07F5B053 		add	r3, r7, #5632
 1432 0462 03F11603 		add	r3, r3, #22
 1433 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1434 0468 D31A     		subs	r3, r2, r3
 1435 046a 5A1E     		subs	r2, r3, #1
 1436 046c 07F5B053 		add	r3, r7, #5632
 1437 0470 03F11603 		add	r3, r3, #22
 1438 0474 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1439 0476 07F13803 		add	r3, r7, #56
 1440 047a 1E3B     		subs	r3, r3, #30
 1441 047c 0B44     		add	r3, r3, r1
 1442 047e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1443 0480 07F15803 		add	r3, r7, #88
 1444 0484 043B     		subs	r3, r3, #4
 1445 0486 9954     		strb	r1, [r3, r2]
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1446              		.loc 1 431 0 discriminator 3
 1447 0488 07F5B053 		add	r3, r7, #5632
 1448 048c 03F11603 		add	r3, r3, #22
 1449 0490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1450 0492 0133     		adds	r3, r3, #1
 1451 0494 07F5B052 		add	r2, r7, #5632
 1452 0498 02F11602 		add	r2, r2, #22
 1453 049c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 50


 1454              	.L91:
 431:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1455              		.loc 1 431 0 is_stmt 0 discriminator 1
 1456 049e 07F5B053 		add	r3, r7, #5632
 1457 04a2 03F11603 		add	r3, r3, #22
 1458 04a6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1459 04a8 07F5B053 		add	r3, r7, #5632
 1460 04ac 03F11303 		add	r3, r3, #19
 1461 04b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1462 04b2 9A42     		cmp	r2, r3
 1463 04b4 B7D3     		bcc	.L92
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1464              		.loc 1 428 0 is_stmt 1 discriminator 2
 1465 04b6 07F5B053 		add	r3, r7, #5632
 1466 04ba 03F11703 		add	r3, r3, #23
 1467 04be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 04c0 0133     		adds	r3, r3, #1
 1469 04c2 07F5B052 		add	r2, r7, #5632
 1470 04c6 02F11702 		add	r2, r2, #23
 1471 04ca 1370     		strb	r3, [r2]
 1472              	.L90:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1473              		.loc 1 428 0 is_stmt 0 discriminator 1
 1474 04cc 07F5B053 		add	r3, r7, #5632
 1475 04d0 03F11503 		add	r3, r3, #21
 1476 04d4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1477 04d6 07F11803 		add	r3, r7, #24
 1478 04da 143B     		subs	r3, r3, #20
 1479 04dc 1B68     		ldr	r3, [r3]
 1480 04de 1344     		add	r3, r3, r2
 1481 04e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1482 04e2 07F5B052 		add	r2, r7, #5632
 1483 04e6 02F11702 		add	r2, r2, #23
 1484 04ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1485 04ec 9A42     		cmp	r2, r3
 1486 04ee FFF470AF 		bcc	.L93
 433:..\src/command_processing.c ****                         }
 434:..\src/command_processing.c ****                     }
 435:..\src/command_processing.c ****                     break;
 1487              		.loc 1 435 0 is_stmt 1
 1488 04f2 01F0C6BF 		b	.L110
 1489              	.L82:
 436:..\src/command_processing.c ****                 case TYPE_UINT16:
 437:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1490              		.loc 1 437 0
 1491 04f6 0023     		movs	r3, #0
 1492 04f8 07F5B052 		add	r2, r7, #5632
 1493 04fc 02F11702 		add	r2, r2, #23
 1494 0500 1370     		strb	r3, [r2]
 1495 0502 79E0     		b	.L94
 1496              	.L97:
 438:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1497              		.loc 1 438 0
 1498 0504 07F5B053 		add	r3, r7, #5632
 1499 0508 03F11703 		add	r3, r3, #23
 1500 050c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1501 050e 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 51


 1502 0512 02F11302 		add	r2, r2, #19
 1503 0516 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1504 0518 02FB03F3 		mul	r3, r2, r3
 1505 051c 1A46     		mov	r2, r3
 1506 051e 07F5B053 		add	r3, r7, #5632
 1507 0522 03F10803 		add	r3, r3, #8
 1508 0526 1B68     		ldr	r3, [r3]
 1509 0528 1344     		add	r3, r3, r2
 1510 052a 07F5B052 		add	r2, r7, #5632
 1511 052e 02F10402 		add	r2, r2, #4
 1512 0532 1360     		str	r3, [r2]
 439:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1513              		.loc 1 439 0
 1514 0534 07F5B053 		add	r3, r7, #5632
 1515 0538 03F10403 		add	r3, r3, #4
 1516 053c 1B68     		ldr	r3, [r3]
 1517 053e 1A88     		ldrh	r2, [r3]
 1518 0540 07F11803 		add	r3, r7, #24
 1519 0544 1A80     		strh	r2, [r3]	@ movhi
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1520              		.loc 1 440 0
 1521 0546 0023     		movs	r3, #0
 1522 0548 07F5B052 		add	r2, r7, #5632
 1523 054c 02F11602 		add	r2, r2, #22
 1524 0550 1370     		strb	r3, [r2]
 1525 0552 3AE0     		b	.L95
 1526              	.L96:
 441:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1527              		.loc 1 441 0 discriminator 3
 1528 0554 07F5B053 		add	r3, r7, #5632
 1529 0558 03F11503 		add	r3, r3, #21
 1530 055c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1531 055e 3222     		movs	r2, #50
 1532 0560 02FB03F3 		mul	r3, r2, r3
 1533 0564 1A1D     		adds	r2, r3, #4
 1534 0566 07F5B053 		add	r3, r7, #5632
 1535 056a 03F11703 		add	r3, r3, #23
 1536 056e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 0570 07F5B051 		add	r1, r7, #5632
 1538 0574 01F11301 		add	r1, r1, #19
 1539 0578 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1540 057a 01FB03F3 		mul	r3, r1, r3
 1541 057e 1A44     		add	r2, r2, r3
 1542 0580 07F5B053 		add	r3, r7, #5632
 1543 0584 03F11303 		add	r3, r3, #19
 1544 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1545 058a 1A44     		add	r2, r2, r3
 1546 058c 07F5B053 		add	r3, r7, #5632
 1547 0590 03F11603 		add	r3, r3, #22
 1548 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1549 0596 D31A     		subs	r3, r2, r3
 1550 0598 5A1E     		subs	r2, r3, #1
 1551 059a 07F5B053 		add	r3, r7, #5632
 1552 059e 03F11603 		add	r3, r3, #22
 1553 05a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1554 05a4 07F11801 		add	r1, r7, #24
 1555 05a8 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 52


 1556 05aa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1557 05ac 07F15803 		add	r3, r7, #88
 1558 05b0 043B     		subs	r3, r3, #4
 1559 05b2 9954     		strb	r1, [r3, r2]
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1560              		.loc 1 440 0 discriminator 3
 1561 05b4 07F5B053 		add	r3, r7, #5632
 1562 05b8 03F11603 		add	r3, r3, #22
 1563 05bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1564 05be 0133     		adds	r3, r3, #1
 1565 05c0 07F5B052 		add	r2, r7, #5632
 1566 05c4 02F11602 		add	r2, r2, #22
 1567 05c8 1370     		strb	r3, [r2]
 1568              	.L95:
 440:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1569              		.loc 1 440 0 is_stmt 0 discriminator 1
 1570 05ca 07F5B053 		add	r3, r7, #5632
 1571 05ce 03F11603 		add	r3, r3, #22
 1572 05d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1573 05d4 07F5B053 		add	r3, r7, #5632
 1574 05d8 03F11303 		add	r3, r3, #19
 1575 05dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1576 05de 9A42     		cmp	r2, r3
 1577 05e0 B8D3     		bcc	.L96
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1578              		.loc 1 437 0 is_stmt 1 discriminator 2
 1579 05e2 07F5B053 		add	r3, r7, #5632
 1580 05e6 03F11703 		add	r3, r3, #23
 1581 05ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1582 05ec 0133     		adds	r3, r3, #1
 1583 05ee 07F5B052 		add	r2, r7, #5632
 1584 05f2 02F11702 		add	r2, r2, #23
 1585 05f6 1370     		strb	r3, [r2]
 1586              	.L94:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1587              		.loc 1 437 0 is_stmt 0 discriminator 1
 1588 05f8 07F5B053 		add	r3, r7, #5632
 1589 05fc 03F11503 		add	r3, r3, #21
 1590 0600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1591 0602 07F11803 		add	r3, r7, #24
 1592 0606 143B     		subs	r3, r3, #20
 1593 0608 1B68     		ldr	r3, [r3]
 1594 060a 1344     		add	r3, r3, r2
 1595 060c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1596 060e 07F5B052 		add	r2, r7, #5632
 1597 0612 02F11702 		add	r2, r2, #23
 1598 0616 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1599 0618 9A42     		cmp	r2, r3
 1600 061a FFF473AF 		bcc	.L97
 442:..\src/command_processing.c ****                         }
 443:..\src/command_processing.c ****                     }
 444:..\src/command_processing.c ****                     break;
 1601              		.loc 1 444 0 is_stmt 1
 1602 061e 01F030BF 		b	.L110
 1603              	.L83:
 445:..\src/command_processing.c ****                 case TYPE_INT32: 
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 53


 1604              		.loc 1 446 0
 1605 0622 0023     		movs	r3, #0
 1606 0624 07F5B052 		add	r2, r7, #5632
 1607 0628 02F11702 		add	r2, r2, #23
 1608 062c 1370     		strb	r3, [r2]
 1609 062e 7BE0     		b	.L98
 1610              	.L101:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1611              		.loc 1 447 0
 1612 0630 07F5B053 		add	r3, r7, #5632
 1613 0634 03F11703 		add	r3, r3, #23
 1614 0638 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1615 063a 07F5B052 		add	r2, r7, #5632
 1616 063e 02F11302 		add	r2, r2, #19
 1617 0642 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1618 0644 02FB03F3 		mul	r3, r2, r3
 1619 0648 1A46     		mov	r2, r3
 1620 064a 07F5B053 		add	r3, r7, #5632
 1621 064e 03F10803 		add	r3, r3, #8
 1622 0652 1B68     		ldr	r3, [r3]
 1623 0654 1344     		add	r3, r3, r2
 1624 0656 07F5B052 		add	r2, r7, #5632
 1625 065a 02F10402 		add	r2, r2, #4
 1626 065e 1360     		str	r3, [r2]
 448:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1627              		.loc 1 448 0
 1628 0660 07F5B053 		add	r3, r7, #5632
 1629 0664 03F10403 		add	r3, r3, #4
 1630 0668 1B68     		ldr	r3, [r3]
 1631 066a 1A68     		ldr	r2, [r3]
 1632 066c 07F11803 		add	r3, r7, #24
 1633 0670 043B     		subs	r3, r3, #4
 1634 0672 1A60     		str	r2, [r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1635              		.loc 1 449 0
 1636 0674 0023     		movs	r3, #0
 1637 0676 07F5B052 		add	r2, r7, #5632
 1638 067a 02F11602 		add	r2, r2, #22
 1639 067e 1370     		strb	r3, [r2]
 1640 0680 3BE0     		b	.L99
 1641              	.L100:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1642              		.loc 1 450 0 discriminator 3
 1643 0682 07F5B053 		add	r3, r7, #5632
 1644 0686 03F11503 		add	r3, r3, #21
 1645 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1646 068c 3222     		movs	r2, #50
 1647 068e 02FB03F3 		mul	r3, r2, r3
 1648 0692 1A1D     		adds	r2, r3, #4
 1649 0694 07F5B053 		add	r3, r7, #5632
 1650 0698 03F11703 		add	r3, r3, #23
 1651 069c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1652 069e 07F5B051 		add	r1, r7, #5632
 1653 06a2 01F11301 		add	r1, r1, #19
 1654 06a6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1655 06a8 01FB03F3 		mul	r3, r1, r3
 1656 06ac 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 54


 1657 06ae 07F5B053 		add	r3, r7, #5632
 1658 06b2 03F11303 		add	r3, r3, #19
 1659 06b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1660 06b8 1A44     		add	r2, r2, r3
 1661 06ba 07F5B053 		add	r3, r7, #5632
 1662 06be 03F11603 		add	r3, r3, #22
 1663 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1664 06c4 D31A     		subs	r3, r2, r3
 1665 06c6 5A1E     		subs	r2, r3, #1
 1666 06c8 07F5B053 		add	r3, r7, #5632
 1667 06cc 03F11603 		add	r3, r3, #22
 1668 06d0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1669 06d2 07F11803 		add	r3, r7, #24
 1670 06d6 043B     		subs	r3, r3, #4
 1671 06d8 0B44     		add	r3, r3, r1
 1672 06da 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1673 06dc 07F15803 		add	r3, r7, #88
 1674 06e0 043B     		subs	r3, r3, #4
 1675 06e2 9954     		strb	r1, [r3, r2]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1676              		.loc 1 449 0 discriminator 3
 1677 06e4 07F5B053 		add	r3, r7, #5632
 1678 06e8 03F11603 		add	r3, r3, #22
 1679 06ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1680 06ee 0133     		adds	r3, r3, #1
 1681 06f0 07F5B052 		add	r2, r7, #5632
 1682 06f4 02F11602 		add	r2, r2, #22
 1683 06f8 1370     		strb	r3, [r2]
 1684              	.L99:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1685              		.loc 1 449 0 is_stmt 0 discriminator 1
 1686 06fa 07F5B053 		add	r3, r7, #5632
 1687 06fe 03F11603 		add	r3, r3, #22
 1688 0702 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1689 0704 07F5B053 		add	r3, r7, #5632
 1690 0708 03F11303 		add	r3, r3, #19
 1691 070c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1692 070e 9A42     		cmp	r2, r3
 1693 0710 B7D3     		bcc	.L100
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1694              		.loc 1 446 0 is_stmt 1 discriminator 2
 1695 0712 07F5B053 		add	r3, r7, #5632
 1696 0716 03F11703 		add	r3, r3, #23
 1697 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1698 071c 0133     		adds	r3, r3, #1
 1699 071e 07F5B052 		add	r2, r7, #5632
 1700 0722 02F11702 		add	r2, r2, #23
 1701 0726 1370     		strb	r3, [r2]
 1702              	.L98:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1703              		.loc 1 446 0 is_stmt 0 discriminator 1
 1704 0728 07F5B053 		add	r3, r7, #5632
 1705 072c 03F11503 		add	r3, r3, #21
 1706 0730 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1707 0732 07F11803 		add	r3, r7, #24
 1708 0736 143B     		subs	r3, r3, #20
 1709 0738 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 55


 1710 073a 1344     		add	r3, r3, r2
 1711 073c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1712 073e 07F5B052 		add	r2, r7, #5632
 1713 0742 02F11702 		add	r2, r2, #23
 1714 0746 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1715 0748 9A42     		cmp	r2, r3
 1716 074a FFF471AF 		bcc	.L101
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;
 1717              		.loc 1 453 0 is_stmt 1
 1718 074e 01F098BE 		b	.L110
 1719              	.L84:
 454:..\src/command_processing.c ****                 case TYPE_UINT32: 
 455:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1720              		.loc 1 455 0
 1721 0752 0023     		movs	r3, #0
 1722 0754 07F5B052 		add	r2, r7, #5632
 1723 0758 02F11702 		add	r2, r2, #23
 1724 075c 1370     		strb	r3, [r2]
 1725 075e 7BE0     		b	.L102
 1726              	.L105:
 456:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1727              		.loc 1 456 0
 1728 0760 07F5B053 		add	r3, r7, #5632
 1729 0764 03F11703 		add	r3, r3, #23
 1730 0768 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1731 076a 07F5B052 		add	r2, r7, #5632
 1732 076e 02F11302 		add	r2, r2, #19
 1733 0772 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1734 0774 02FB03F3 		mul	r3, r2, r3
 1735 0778 1A46     		mov	r2, r3
 1736 077a 07F5B053 		add	r3, r7, #5632
 1737 077e 03F10803 		add	r3, r3, #8
 1738 0782 1B68     		ldr	r3, [r3]
 1739 0784 1344     		add	r3, r3, r2
 1740 0786 07F5B052 		add	r2, r7, #5632
 1741 078a 02F10402 		add	r2, r2, #4
 1742 078e 1360     		str	r3, [r2]
 457:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1743              		.loc 1 457 0
 1744 0790 07F5B053 		add	r3, r7, #5632
 1745 0794 03F10403 		add	r3, r3, #4
 1746 0798 1B68     		ldr	r3, [r3]
 1747 079a 1A68     		ldr	r2, [r3]
 1748 079c 07F11803 		add	r3, r7, #24
 1749 07a0 083B     		subs	r3, r3, #8
 1750 07a2 1A60     		str	r2, [r3]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1751              		.loc 1 458 0
 1752 07a4 0023     		movs	r3, #0
 1753 07a6 07F5B052 		add	r2, r7, #5632
 1754 07aa 02F11602 		add	r2, r2, #22
 1755 07ae 1370     		strb	r3, [r2]
 1756 07b0 3BE0     		b	.L103
 1757              	.L104:
 459:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 56


 1758              		.loc 1 459 0 discriminator 3
 1759 07b2 07F5B053 		add	r3, r7, #5632
 1760 07b6 03F11503 		add	r3, r3, #21
 1761 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1762 07bc 3222     		movs	r2, #50
 1763 07be 02FB03F3 		mul	r3, r2, r3
 1764 07c2 1A1D     		adds	r2, r3, #4
 1765 07c4 07F5B053 		add	r3, r7, #5632
 1766 07c8 03F11703 		add	r3, r3, #23
 1767 07cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1768 07ce 07F5B051 		add	r1, r7, #5632
 1769 07d2 01F11301 		add	r1, r1, #19
 1770 07d6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1771 07d8 01FB03F3 		mul	r3, r1, r3
 1772 07dc 1A44     		add	r2, r2, r3
 1773 07de 07F5B053 		add	r3, r7, #5632
 1774 07e2 03F11303 		add	r3, r3, #19
 1775 07e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 07e8 1A44     		add	r2, r2, r3
 1777 07ea 07F5B053 		add	r3, r7, #5632
 1778 07ee 03F11603 		add	r3, r3, #22
 1779 07f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1780 07f4 D31A     		subs	r3, r2, r3
 1781 07f6 5A1E     		subs	r2, r3, #1
 1782 07f8 07F5B053 		add	r3, r7, #5632
 1783 07fc 03F11603 		add	r3, r3, #22
 1784 0800 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1785 0802 07F11803 		add	r3, r7, #24
 1786 0806 083B     		subs	r3, r3, #8
 1787 0808 0B44     		add	r3, r3, r1
 1788 080a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1789 080c 07F15803 		add	r3, r7, #88
 1790 0810 043B     		subs	r3, r3, #4
 1791 0812 9954     		strb	r1, [r3, r2]
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1792              		.loc 1 458 0 discriminator 3
 1793 0814 07F5B053 		add	r3, r7, #5632
 1794 0818 03F11603 		add	r3, r3, #22
 1795 081c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1796 081e 0133     		adds	r3, r3, #1
 1797 0820 07F5B052 		add	r2, r7, #5632
 1798 0824 02F11602 		add	r2, r2, #22
 1799 0828 1370     		strb	r3, [r2]
 1800              	.L103:
 458:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1801              		.loc 1 458 0 is_stmt 0 discriminator 1
 1802 082a 07F5B053 		add	r3, r7, #5632
 1803 082e 03F11603 		add	r3, r3, #22
 1804 0832 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1805 0834 07F5B053 		add	r3, r7, #5632
 1806 0838 03F11303 		add	r3, r3, #19
 1807 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1808 083e 9A42     		cmp	r2, r3
 1809 0840 B7D3     		bcc	.L104
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1810              		.loc 1 455 0 is_stmt 1 discriminator 2
 1811 0842 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 57


 1812 0846 03F11703 		add	r3, r3, #23
 1813 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1814 084c 0133     		adds	r3, r3, #1
 1815 084e 07F5B052 		add	r2, r7, #5632
 1816 0852 02F11702 		add	r2, r2, #23
 1817 0856 1370     		strb	r3, [r2]
 1818              	.L102:
 455:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1819              		.loc 1 455 0 is_stmt 0 discriminator 1
 1820 0858 07F5B053 		add	r3, r7, #5632
 1821 085c 03F11503 		add	r3, r3, #21
 1822 0860 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1823 0862 07F11803 		add	r3, r7, #24
 1824 0866 143B     		subs	r3, r3, #20
 1825 0868 1B68     		ldr	r3, [r3]
 1826 086a 1344     		add	r3, r3, r2
 1827 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1828 086e 07F5B052 		add	r2, r7, #5632
 1829 0872 02F11702 		add	r2, r2, #23
 1830 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1831 0878 9A42     		cmp	r2, r3
 1832 087a FFF471AF 		bcc	.L105
 460:..\src/command_processing.c ****                         }
 461:..\src/command_processing.c ****                     }
 462:..\src/command_processing.c ****                     break;
 1833              		.loc 1 462 0 is_stmt 1
 1834 087e 01F000BE 		b	.L110
 1835              	.L85:
 463:..\src/command_processing.c ****                     
 464:..\src/command_processing.c ****                 case TYPE_FLOAT:
 465:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1836              		.loc 1 465 0
 1837 0882 0023     		movs	r3, #0
 1838 0884 07F5B052 		add	r2, r7, #5632
 1839 0888 02F11702 		add	r2, r2, #23
 1840 088c 1370     		strb	r3, [r2]
 1841 088e 7BE0     		b	.L106
 1842              	.L109:
 466:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1843              		.loc 1 466 0
 1844 0890 07F5B053 		add	r3, r7, #5632
 1845 0894 03F11703 		add	r3, r3, #23
 1846 0898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1847 089a 07F5B052 		add	r2, r7, #5632
 1848 089e 02F11302 		add	r2, r2, #19
 1849 08a2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1850 08a4 02FB03F3 		mul	r3, r2, r3
 1851 08a8 1A46     		mov	r2, r3
 1852 08aa 07F5B053 		add	r3, r7, #5632
 1853 08ae 03F10803 		add	r3, r3, #8
 1854 08b2 1B68     		ldr	r3, [r3]
 1855 08b4 1344     		add	r3, r3, r2
 1856 08b6 07F5B052 		add	r2, r7, #5632
 1857 08ba 02F10402 		add	r2, r2, #4
 1858 08be 1360     		str	r3, [r2]
 467:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1859              		.loc 1 467 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 58


 1860 08c0 07F5B053 		add	r3, r7, #5632
 1861 08c4 03F10403 		add	r3, r3, #4
 1862 08c8 1B68     		ldr	r3, [r3]
 1863 08ca 1A68     		ldr	r2, [r3]	@ float
 1864 08cc 07F13803 		add	r3, r7, #56
 1865 08d0 1C3B     		subs	r3, r3, #28
 1866 08d2 1A60     		str	r2, [r3]	@ float
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1867              		.loc 1 468 0
 1868 08d4 0023     		movs	r3, #0
 1869 08d6 07F5B052 		add	r2, r7, #5632
 1870 08da 02F11602 		add	r2, r2, #22
 1871 08de 1370     		strb	r3, [r2]
 1872 08e0 3BE0     		b	.L107
 1873              	.L108:
 469:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1874              		.loc 1 469 0 discriminator 3
 1875 08e2 07F5B053 		add	r3, r7, #5632
 1876 08e6 03F11503 		add	r3, r3, #21
 1877 08ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1878 08ec 3222     		movs	r2, #50
 1879 08ee 02FB03F3 		mul	r3, r2, r3
 1880 08f2 1A1D     		adds	r2, r3, #4
 1881 08f4 07F5B053 		add	r3, r7, #5632
 1882 08f8 03F11703 		add	r3, r3, #23
 1883 08fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1884 08fe 07F5B051 		add	r1, r7, #5632
 1885 0902 01F11301 		add	r1, r1, #19
 1886 0906 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 1887 0908 01FB03F3 		mul	r3, r1, r3
 1888 090c 1A44     		add	r2, r2, r3
 1889 090e 07F5B053 		add	r3, r7, #5632
 1890 0912 03F11303 		add	r3, r3, #19
 1891 0916 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1892 0918 1A44     		add	r2, r2, r3
 1893 091a 07F5B053 		add	r3, r7, #5632
 1894 091e 03F11603 		add	r3, r3, #22
 1895 0922 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1896 0924 D31A     		subs	r3, r2, r3
 1897 0926 5A1E     		subs	r2, r3, #1
 1898 0928 07F5B053 		add	r3, r7, #5632
 1899 092c 03F11603 		add	r3, r3, #22
 1900 0930 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1901 0932 07F13803 		add	r3, r7, #56
 1902 0936 1C3B     		subs	r3, r3, #28
 1903 0938 0B44     		add	r3, r3, r1
 1904 093a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1905 093c 07F15803 		add	r3, r7, #88
 1906 0940 043B     		subs	r3, r3, #4
 1907 0942 9954     		strb	r1, [r3, r2]
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1908              		.loc 1 468 0 discriminator 3
 1909 0944 07F5B053 		add	r3, r7, #5632
 1910 0948 03F11603 		add	r3, r3, #22
 1911 094c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1912 094e 0133     		adds	r3, r3, #1
 1913 0950 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 59


 1914 0954 02F11602 		add	r2, r2, #22
 1915 0958 1370     		strb	r3, [r2]
 1916              	.L107:
 468:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1917              		.loc 1 468 0 is_stmt 0 discriminator 1
 1918 095a 07F5B053 		add	r3, r7, #5632
 1919 095e 03F11603 		add	r3, r3, #22
 1920 0962 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1921 0964 07F5B053 		add	r3, r7, #5632
 1922 0968 03F11303 		add	r3, r3, #19
 1923 096c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1924 096e 9A42     		cmp	r2, r3
 1925 0970 B7D3     		bcc	.L108
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1926              		.loc 1 465 0 is_stmt 1 discriminator 2
 1927 0972 07F5B053 		add	r3, r7, #5632
 1928 0976 03F11703 		add	r3, r3, #23
 1929 097a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 097c 0133     		adds	r3, r3, #1
 1931 097e 07F5B052 		add	r2, r7, #5632
 1932 0982 02F11702 		add	r2, r2, #23
 1933 0986 1370     		strb	r3, [r2]
 1934              	.L106:
 465:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1935              		.loc 1 465 0 is_stmt 0 discriminator 1
 1936 0988 07F5B053 		add	r3, r7, #5632
 1937 098c 03F11503 		add	r3, r3, #21
 1938 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1939 0992 07F11803 		add	r3, r7, #24
 1940 0996 143B     		subs	r3, r3, #20
 1941 0998 1B68     		ldr	r3, [r3]
 1942 099a 1344     		add	r3, r3, r2
 1943 099c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1944 099e 07F5B052 		add	r2, r7, #5632
 1945 09a2 02F11702 		add	r2, r2, #23
 1946 09a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1947 09a8 9A42     		cmp	r2, r3
 1948 09aa FFF471AF 		bcc	.L109
 470:..\src/command_processing.c ****                         }
 471:..\src/command_processing.c ****                     }
 472:..\src/command_processing.c ****                     break;   
 1949              		.loc 1 472 0 is_stmt 1 discriminator 7
 1950 09ae 00BF     		nop
 1951 09b0 01F067BD 		b	.L110
 1952              	.L76:
 473:..\src/command_processing.c ****             }
 474:..\src/command_processing.c ****         }
 475:..\src/command_processing.c ****         else {
 476:..\src/command_processing.c ****             
 477:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 478:..\src/command_processing.c ****             
 479:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 480:..\src/command_processing.c ****                 switch(idx+1){
 1953              		.loc 1 480 0
 1954 09b4 07F5B053 		add	r3, r7, #5632
 1955 09b8 03F11503 		add	r3, r3, #21
 1956 09bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 60


 1957 09be 0133     		adds	r3, r3, #1
 1958 09c0 023B     		subs	r3, r3, #2
 1959 09c2 332B     		cmp	r3, #51
 1960 09c4 01F25C85 		bhi	.L277
 1961 09c8 01A2     		adr	r2, .L113
 1962 09ca 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1963 09ce 00BF     		.p2align 2
 1964              	.L113:
 1965 09d0 A10A0000 		.word	.L112+1
 1966 09d4 6D0F0000 		.word	.L114+1
 1967 09d8 81240000 		.word	.L277+1
 1968 09dc 81240000 		.word	.L277+1
 1969 09e0 81240000 		.word	.L277+1
 1970 09e4 81240000 		.word	.L277+1
 1971 09e8 3D140000 		.word	.L115+1
 1972 09ec 81240000 		.word	.L277+1
 1973 09f0 81240000 		.word	.L277+1
 1974 09f4 63150000 		.word	.L116+1
 1975 09f8 81240000 		.word	.L277+1
 1976 09fc 81240000 		.word	.L277+1
 1977 0a00 81240000 		.word	.L277+1
 1978 0a04 81240000 		.word	.L277+1
 1979 0a08 81240000 		.word	.L277+1
 1980 0a0c 81240000 		.word	.L277+1
 1981 0a10 81240000 		.word	.L277+1
 1982 0a14 81240000 		.word	.L277+1
 1983 0a18 81240000 		.word	.L277+1
 1984 0a1c 81240000 		.word	.L277+1
 1985 0a20 81240000 		.word	.L277+1
 1986 0a24 27170000 		.word	.L117+1
 1987 0a28 81240000 		.word	.L277+1
 1988 0a2c 81240000 		.word	.L277+1
 1989 0a30 81240000 		.word	.L277+1
 1990 0a34 81240000 		.word	.L277+1
 1991 0a38 81240000 		.word	.L277+1
 1992 0a3c 81240000 		.word	.L277+1
 1993 0a40 81240000 		.word	.L277+1
 1994 0a44 81240000 		.word	.L277+1
 1995 0a48 81240000 		.word	.L277+1
 1996 0a4c 81240000 		.word	.L277+1
 1997 0a50 81240000 		.word	.L277+1
 1998 0a54 81240000 		.word	.L277+1
 1999 0a58 81240000 		.word	.L277+1
 2000 0a5c 81240000 		.word	.L277+1
 2001 0a60 81240000 		.word	.L277+1
 2002 0a64 81240000 		.word	.L277+1
 2003 0a68 81240000 		.word	.L277+1
 2004 0a6c 81240000 		.word	.L277+1
 2005 0a70 81240000 		.word	.L277+1
 2006 0a74 81240000 		.word	.L277+1
 2007 0a78 FB170000 		.word	.L118+1
 2008 0a7c C31C0000 		.word	.L119+1
 2009 0a80 81240000 		.word	.L277+1
 2010 0a84 81240000 		.word	.L277+1
 2011 0a88 81240000 		.word	.L277+1
 2012 0a8c 81240000 		.word	.L277+1
 2013 0a90 91210000 		.word	.L120+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 61


 2014 0a94 81240000 		.word	.L277+1
 2015 0a98 81240000 		.word	.L277+1
 2016 0a9c B5220000 		.word	.L121+1
 2017              		.p2align 1
 2018              	.L112:
 481:..\src/command_processing.c ****                     case 2:         // Position PID
 482:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2019              		.loc 1 482 0
 2020 0aa0 07F5B053 		add	r3, r7, #5632
 2021 0aa4 03F10F03 		add	r3, r3, #15
 2022 0aa8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2023 0aaa AC49     		ldr	r1, .L283
 2024 0aac 1346     		mov	r3, r2
 2025 0aae DB00     		lsls	r3, r3, #3
 2026 0ab0 9B1A     		subs	r3, r3, r2
 2027 0ab2 1B01     		lsls	r3, r3, #4
 2028 0ab4 0B44     		add	r3, r3, r1
 2029 0ab6 03F20F13 		addw	r3, r3, #271
 2030 0aba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2031 0abc 032B     		cmp	r3, #3
 2032 0abe 00F02981 		beq	.L122
 483:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 2033              		.loc 1 483 0
 2034 0ac2 07F5B053 		add	r3, r7, #5632
 2035 0ac6 03F10F03 		add	r3, r3, #15
 2036 0aca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2037 0acc A349     		ldr	r1, .L283
 2038 0ace 1346     		mov	r3, r2
 2039 0ad0 DB00     		lsls	r3, r3, #3
 2040 0ad2 9B1A     		subs	r3, r3, r2
 2041 0ad4 1B01     		lsls	r3, r3, #4
 2042 0ad6 0B44     		add	r3, r3, r1
 2043 0ad8 B033     		adds	r3, r3, #176
 2044 0ada 1B68     		ldr	r3, [r3]
 2045 0adc 1846     		mov	r0, r3
 2046 0ade FFF7FEFF 		bl	__aeabi_i2f
 2047 0ae2 0346     		mov	r3, r0
 2048 0ae4 4FF08F41 		mov	r1, #1199570944
 2049 0ae8 1846     		mov	r0, r3
 2050 0aea FFF7FEFF 		bl	__aeabi_fdiv
 2051 0aee 0346     		mov	r3, r0
 2052 0af0 1A46     		mov	r2, r3
 2053 0af2 07F13803 		add	r3, r7, #56
 2054 0af6 1C3B     		subs	r3, r3, #28
 2055 0af8 1A60     		str	r2, [r3]	@ float
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2056              		.loc 1 484 0
 2057 0afa 0023     		movs	r3, #0
 2058 0afc 07F5B052 		add	r2, r7, #5632
 2059 0b00 02F11702 		add	r2, r2, #23
 2060 0b04 1370     		strb	r3, [r2]
 2061 0b06 2EE0     		b	.L123
 2062              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2063              		.loc 1 485 0 discriminator 3
 2064 0b08 07F5B053 		add	r3, r7, #5632
 2065 0b0c 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 62


 2066 0b10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2067 0b12 3222     		movs	r2, #50
 2068 0b14 02FB03F3 		mul	r3, r2, r3
 2069 0b18 1A1D     		adds	r2, r3, #4
 2070 0b1a 07F5B053 		add	r3, r7, #5632
 2071 0b1e 03F11303 		add	r3, r3, #19
 2072 0b22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2073 0b24 1A44     		add	r2, r2, r3
 2074 0b26 07F5B053 		add	r3, r7, #5632
 2075 0b2a 03F11703 		add	r3, r3, #23
 2076 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2077 0b30 D31A     		subs	r3, r2, r3
 2078 0b32 5A1E     		subs	r2, r3, #1
 2079 0b34 07F5B053 		add	r3, r7, #5632
 2080 0b38 03F11703 		add	r3, r3, #23
 2081 0b3c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2082 0b3e 07F13803 		add	r3, r7, #56
 2083 0b42 1C3B     		subs	r3, r3, #28
 2084 0b44 0B44     		add	r3, r3, r1
 2085 0b46 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2086 0b48 07F15803 		add	r3, r7, #88
 2087 0b4c 043B     		subs	r3, r3, #4
 2088 0b4e 9954     		strb	r1, [r3, r2]
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2089              		.loc 1 484 0 discriminator 3
 2090 0b50 07F5B053 		add	r3, r7, #5632
 2091 0b54 03F11703 		add	r3, r3, #23
 2092 0b58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2093 0b5a 0133     		adds	r3, r3, #1
 2094 0b5c 07F5B052 		add	r2, r7, #5632
 2095 0b60 02F11702 		add	r2, r2, #23
 2096 0b64 1370     		strb	r3, [r2]
 2097              	.L123:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2098              		.loc 1 484 0 is_stmt 0 discriminator 1
 2099 0b66 07F5B053 		add	r3, r7, #5632
 2100 0b6a 03F11703 		add	r3, r3, #23
 2101 0b6e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2102 0b70 07F5B053 		add	r3, r7, #5632
 2103 0b74 03F11303 		add	r3, r3, #19
 2104 0b78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2105 0b7a 9A42     		cmp	r2, r3
 2106 0b7c C4D3     		bcc	.L124
 486:..\src/command_processing.c ****                             }
 487:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 2107              		.loc 1 487 0 is_stmt 1
 2108 0b7e 07F5B053 		add	r3, r7, #5632
 2109 0b82 03F10F03 		add	r3, r3, #15
 2110 0b86 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2111 0b88 7449     		ldr	r1, .L283
 2112 0b8a 1346     		mov	r3, r2
 2113 0b8c DB00     		lsls	r3, r3, #3
 2114 0b8e 9B1A     		subs	r3, r3, r2
 2115 0b90 1B01     		lsls	r3, r3, #4
 2116 0b92 0B44     		add	r3, r3, r1
 2117 0b94 B433     		adds	r3, r3, #180
 2118 0b96 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 63


 2119 0b98 1846     		mov	r0, r3
 2120 0b9a FFF7FEFF 		bl	__aeabi_i2f
 2121 0b9e 0346     		mov	r3, r0
 2122 0ba0 4FF08F41 		mov	r1, #1199570944
 2123 0ba4 1846     		mov	r0, r3
 2124 0ba6 FFF7FEFF 		bl	__aeabi_fdiv
 2125 0baa 0346     		mov	r3, r0
 2126 0bac 1A46     		mov	r2, r3
 2127 0bae 07F13803 		add	r3, r7, #56
 2128 0bb2 1C3B     		subs	r3, r3, #28
 2129 0bb4 1A60     		str	r2, [r3]	@ float
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2130              		.loc 1 488 0
 2131 0bb6 0023     		movs	r3, #0
 2132 0bb8 07F5B052 		add	r2, r7, #5632
 2133 0bbc 02F11702 		add	r2, r2, #23
 2134 0bc0 1370     		strb	r3, [r2]
 2135 0bc2 34E0     		b	.L125
 2136              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2137              		.loc 1 489 0 discriminator 3
 2138 0bc4 07F5B053 		add	r3, r7, #5632
 2139 0bc8 03F11503 		add	r3, r3, #21
 2140 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2141 0bce 3222     		movs	r2, #50
 2142 0bd0 02FB03F3 		mul	r3, r2, r3
 2143 0bd4 1A1D     		adds	r2, r3, #4
 2144 0bd6 07F5B053 		add	r3, r7, #5632
 2145 0bda 03F11303 		add	r3, r3, #19
 2146 0bde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2147 0be0 1A44     		add	r2, r2, r3
 2148 0be2 07F5B053 		add	r3, r7, #5632
 2149 0be6 03F11303 		add	r3, r3, #19
 2150 0bea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2151 0bec 1A44     		add	r2, r2, r3
 2152 0bee 07F5B053 		add	r3, r7, #5632
 2153 0bf2 03F11703 		add	r3, r3, #23
 2154 0bf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2155 0bf8 D31A     		subs	r3, r2, r3
 2156 0bfa 5A1E     		subs	r2, r3, #1
 2157 0bfc 07F5B053 		add	r3, r7, #5632
 2158 0c00 03F11703 		add	r3, r3, #23
 2159 0c04 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2160 0c06 07F13803 		add	r3, r7, #56
 2161 0c0a 1C3B     		subs	r3, r3, #28
 2162 0c0c 0B44     		add	r3, r3, r1
 2163 0c0e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2164 0c10 07F15803 		add	r3, r7, #88
 2165 0c14 043B     		subs	r3, r3, #4
 2166 0c16 9954     		strb	r1, [r3, r2]
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2167              		.loc 1 488 0 discriminator 3
 2168 0c18 07F5B053 		add	r3, r7, #5632
 2169 0c1c 03F11703 		add	r3, r3, #23
 2170 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2171 0c22 0133     		adds	r3, r3, #1
 2172 0c24 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 64


 2173 0c28 02F11702 		add	r2, r2, #23
 2174 0c2c 1370     		strb	r3, [r2]
 2175              	.L125:
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2176              		.loc 1 488 0 is_stmt 0 discriminator 1
 2177 0c2e 07F5B053 		add	r3, r7, #5632
 2178 0c32 03F11703 		add	r3, r3, #23
 2179 0c36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2180 0c38 07F5B053 		add	r3, r7, #5632
 2181 0c3c 03F11303 		add	r3, r3, #19
 2182 0c40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2183 0c42 9A42     		cmp	r2, r3
 2184 0c44 BED3     		bcc	.L126
 490:..\src/command_processing.c ****                             }
 491:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 2185              		.loc 1 491 0 is_stmt 1
 2186 0c46 07F5B053 		add	r3, r7, #5632
 2187 0c4a 03F10F03 		add	r3, r3, #15
 2188 0c4e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2189 0c50 4249     		ldr	r1, .L283
 2190 0c52 1346     		mov	r3, r2
 2191 0c54 DB00     		lsls	r3, r3, #3
 2192 0c56 9B1A     		subs	r3, r3, r2
 2193 0c58 1B01     		lsls	r3, r3, #4
 2194 0c5a 0B44     		add	r3, r3, r1
 2195 0c5c B833     		adds	r3, r3, #184
 2196 0c5e 1B68     		ldr	r3, [r3]
 2197 0c60 1846     		mov	r0, r3
 2198 0c62 FFF7FEFF 		bl	__aeabi_i2f
 2199 0c66 0346     		mov	r3, r0
 2200 0c68 4FF08F41 		mov	r1, #1199570944
 2201 0c6c 1846     		mov	r0, r3
 2202 0c6e FFF7FEFF 		bl	__aeabi_fdiv
 2203 0c72 0346     		mov	r3, r0
 2204 0c74 1A46     		mov	r2, r3
 2205 0c76 07F13803 		add	r3, r7, #56
 2206 0c7a 1C3B     		subs	r3, r3, #28
 2207 0c7c 1A60     		str	r2, [r3]	@ float
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2208              		.loc 1 492 0
 2209 0c7e 0023     		movs	r3, #0
 2210 0c80 07F5B052 		add	r2, r7, #5632
 2211 0c84 02F11702 		add	r2, r2, #23
 2212 0c88 1370     		strb	r3, [r2]
 2213 0c8a 35E0     		b	.L127
 2214              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2215              		.loc 1 493 0 discriminator 3
 2216 0c8c 07F5B053 		add	r3, r7, #5632
 2217 0c90 03F11503 		add	r3, r3, #21
 2218 0c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 0c96 3222     		movs	r2, #50
 2220 0c98 02FB03F3 		mul	r3, r2, r3
 2221 0c9c 1A1D     		adds	r2, r3, #4
 2222 0c9e 07F5B053 		add	r3, r7, #5632
 2223 0ca2 03F11303 		add	r3, r3, #19
 2224 0ca6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 65


 2225 0ca8 5B00     		lsls	r3, r3, #1
 2226 0caa 1A44     		add	r2, r2, r3
 2227 0cac 07F5B053 		add	r3, r7, #5632
 2228 0cb0 03F11303 		add	r3, r3, #19
 2229 0cb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2230 0cb6 1A44     		add	r2, r2, r3
 2231 0cb8 07F5B053 		add	r3, r7, #5632
 2232 0cbc 03F11703 		add	r3, r3, #23
 2233 0cc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 0cc2 D31A     		subs	r3, r2, r3
 2235 0cc4 5A1E     		subs	r2, r3, #1
 2236 0cc6 07F5B053 		add	r3, r7, #5632
 2237 0cca 03F11703 		add	r3, r3, #23
 2238 0cce 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2239 0cd0 07F13803 		add	r3, r7, #56
 2240 0cd4 1C3B     		subs	r3, r3, #28
 2241 0cd6 0B44     		add	r3, r3, r1
 2242 0cd8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2243 0cda 07F15803 		add	r3, r7, #88
 2244 0cde 043B     		subs	r3, r3, #4
 2245 0ce0 9954     		strb	r1, [r3, r2]
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2246              		.loc 1 492 0 discriminator 3
 2247 0ce2 07F5B053 		add	r3, r7, #5632
 2248 0ce6 03F11703 		add	r3, r3, #23
 2249 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2250 0cec 0133     		adds	r3, r3, #1
 2251 0cee 07F5B052 		add	r2, r7, #5632
 2252 0cf2 02F11702 		add	r2, r2, #23
 2253 0cf6 1370     		strb	r3, [r2]
 2254              	.L127:
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2255              		.loc 1 492 0 is_stmt 0 discriminator 1
 2256 0cf8 07F5B053 		add	r3, r7, #5632
 2257 0cfc 03F11703 		add	r3, r3, #23
 2258 0d00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2259 0d02 07F5B053 		add	r3, r7, #5632
 2260 0d06 03F11303 		add	r3, r3, #19
 2261 0d0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2262 0d0c 9A42     		cmp	r2, r3
 2263 0d0e BDD3     		bcc	.L128
 494:..\src/command_processing.c ****                             } 
 495:..\src/command_processing.c ****                         }
 496:..\src/command_processing.c ****                         else {
 497:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 498:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 499:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 500:..\src/command_processing.c ****                             }
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 66


 510:..\src/command_processing.c ****                         break;
 2264              		.loc 1 510 0 is_stmt 1
 2265 0d10 01F0B7BB 		b	.L110
 2266              	.L122:
 497:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2267              		.loc 1 497 0
 2268 0d14 07F5B053 		add	r3, r7, #5632
 2269 0d18 03F10F03 		add	r3, r3, #15
 2270 0d1c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2271 0d1e 0F49     		ldr	r1, .L283
 2272 0d20 1346     		mov	r3, r2
 2273 0d22 DB00     		lsls	r3, r3, #3
 2274 0d24 9B1A     		subs	r3, r3, r2
 2275 0d26 1B01     		lsls	r3, r3, #4
 2276 0d28 0B44     		add	r3, r3, r1
 2277 0d2a C833     		adds	r3, r3, #200
 2278 0d2c 1B68     		ldr	r3, [r3]
 2279 0d2e 1846     		mov	r0, r3
 2280 0d30 FFF7FEFF 		bl	__aeabi_i2f
 2281 0d34 0346     		mov	r3, r0
 2282 0d36 4FF08F41 		mov	r1, #1199570944
 2283 0d3a 1846     		mov	r0, r3
 2284 0d3c FFF7FEFF 		bl	__aeabi_fdiv
 2285 0d40 0346     		mov	r3, r0
 2286 0d42 1A46     		mov	r2, r3
 2287 0d44 07F13803 		add	r3, r7, #56
 2288 0d48 1C3B     		subs	r3, r3, #28
 2289 0d4a 1A60     		str	r2, [r3]	@ float
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2290              		.loc 1 498 0
 2291 0d4c 0023     		movs	r3, #0
 2292 0d4e 07F5B052 		add	r2, r7, #5632
 2293 0d52 02F11702 		add	r2, r2, #23
 2294 0d56 1370     		strb	r3, [r2]
 2295 0d58 31E0     		b	.L130
 2296              	.L284:
 2297 0d5a 00BF     		.align	2
 2298              	.L283:
 2299 0d5c 00000000 		.word	c_mem
 2300              	.L131:
 499:..\src/command_processing.c ****                             }
 2301              		.loc 1 499 0 discriminator 3
 2302 0d60 07F5B053 		add	r3, r7, #5632
 2303 0d64 03F11503 		add	r3, r3, #21
 2304 0d68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2305 0d6a 3222     		movs	r2, #50
 2306 0d6c 02FB03F3 		mul	r3, r2, r3
 2307 0d70 1A1D     		adds	r2, r3, #4
 2308 0d72 07F5B053 		add	r3, r7, #5632
 2309 0d76 03F11303 		add	r3, r3, #19
 2310 0d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2311 0d7c 1A44     		add	r2, r2, r3
 2312 0d7e 07F5B053 		add	r3, r7, #5632
 2313 0d82 03F11703 		add	r3, r3, #23
 2314 0d86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2315 0d88 D31A     		subs	r3, r2, r3
 2316 0d8a 5A1E     		subs	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 67


 2317 0d8c 07F5B053 		add	r3, r7, #5632
 2318 0d90 03F11703 		add	r3, r3, #23
 2319 0d94 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2320 0d96 07F13803 		add	r3, r7, #56
 2321 0d9a 1C3B     		subs	r3, r3, #28
 2322 0d9c 0B44     		add	r3, r3, r1
 2323 0d9e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2324 0da0 07F15803 		add	r3, r7, #88
 2325 0da4 043B     		subs	r3, r3, #4
 2326 0da6 9954     		strb	r1, [r3, r2]
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2327              		.loc 1 498 0 discriminator 3
 2328 0da8 07F5B053 		add	r3, r7, #5632
 2329 0dac 03F11703 		add	r3, r3, #23
 2330 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2331 0db2 0133     		adds	r3, r3, #1
 2332 0db4 07F5B052 		add	r2, r7, #5632
 2333 0db8 02F11702 		add	r2, r2, #23
 2334 0dbc 1370     		strb	r3, [r2]
 2335              	.L130:
 498:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2336              		.loc 1 498 0 is_stmt 0 discriminator 1
 2337 0dbe 07F5B053 		add	r3, r7, #5632
 2338 0dc2 03F11703 		add	r3, r3, #23
 2339 0dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2340 0dc8 07F5B053 		add	r3, r7, #5632
 2341 0dcc 03F11303 		add	r3, r3, #19
 2342 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2343 0dd2 9A42     		cmp	r2, r3
 2344 0dd4 C4D3     		bcc	.L131
 501:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2345              		.loc 1 501 0 is_stmt 1
 2346 0dd6 07F5B053 		add	r3, r7, #5632
 2347 0dda 03F10F03 		add	r3, r3, #15
 2348 0dde 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2349 0de0 AB49     		ldr	r1, .L285
 2350 0de2 1346     		mov	r3, r2
 2351 0de4 DB00     		lsls	r3, r3, #3
 2352 0de6 9B1A     		subs	r3, r3, r2
 2353 0de8 1B01     		lsls	r3, r3, #4
 2354 0dea 0B44     		add	r3, r3, r1
 2355 0dec CC33     		adds	r3, r3, #204
 2356 0dee 1B68     		ldr	r3, [r3]
 2357 0df0 1846     		mov	r0, r3
 2358 0df2 FFF7FEFF 		bl	__aeabi_i2f
 2359 0df6 0346     		mov	r3, r0
 2360 0df8 4FF08F41 		mov	r1, #1199570944
 2361 0dfc 1846     		mov	r0, r3
 2362 0dfe FFF7FEFF 		bl	__aeabi_fdiv
 2363 0e02 0346     		mov	r3, r0
 2364 0e04 1A46     		mov	r2, r3
 2365 0e06 07F13803 		add	r3, r7, #56
 2366 0e0a 1C3B     		subs	r3, r3, #28
 2367 0e0c 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2368              		.loc 1 502 0
 2369 0e0e 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 68


 2370 0e10 07F5B052 		add	r2, r7, #5632
 2371 0e14 02F11702 		add	r2, r2, #23
 2372 0e18 1370     		strb	r3, [r2]
 2373 0e1a 34E0     		b	.L132
 2374              	.L133:
 503:..\src/command_processing.c ****                             }
 2375              		.loc 1 503 0 discriminator 3
 2376 0e1c 07F5B053 		add	r3, r7, #5632
 2377 0e20 03F11503 		add	r3, r3, #21
 2378 0e24 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2379 0e26 3222     		movs	r2, #50
 2380 0e28 02FB03F3 		mul	r3, r2, r3
 2381 0e2c 1A1D     		adds	r2, r3, #4
 2382 0e2e 07F5B053 		add	r3, r7, #5632
 2383 0e32 03F11303 		add	r3, r3, #19
 2384 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0e38 1A44     		add	r2, r2, r3
 2386 0e3a 07F5B053 		add	r3, r7, #5632
 2387 0e3e 03F11303 		add	r3, r3, #19
 2388 0e42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2389 0e44 1A44     		add	r2, r2, r3
 2390 0e46 07F5B053 		add	r3, r7, #5632
 2391 0e4a 03F11703 		add	r3, r3, #23
 2392 0e4e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0e50 D31A     		subs	r3, r2, r3
 2394 0e52 5A1E     		subs	r2, r3, #1
 2395 0e54 07F5B053 		add	r3, r7, #5632
 2396 0e58 03F11703 		add	r3, r3, #23
 2397 0e5c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2398 0e5e 07F13803 		add	r3, r7, #56
 2399 0e62 1C3B     		subs	r3, r3, #28
 2400 0e64 0B44     		add	r3, r3, r1
 2401 0e66 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2402 0e68 07F15803 		add	r3, r7, #88
 2403 0e6c 043B     		subs	r3, r3, #4
 2404 0e6e 9954     		strb	r1, [r3, r2]
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2405              		.loc 1 502 0 discriminator 3
 2406 0e70 07F5B053 		add	r3, r7, #5632
 2407 0e74 03F11703 		add	r3, r3, #23
 2408 0e78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2409 0e7a 0133     		adds	r3, r3, #1
 2410 0e7c 07F5B052 		add	r2, r7, #5632
 2411 0e80 02F11702 		add	r2, r2, #23
 2412 0e84 1370     		strb	r3, [r2]
 2413              	.L132:
 502:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2414              		.loc 1 502 0 is_stmt 0 discriminator 1
 2415 0e86 07F5B053 		add	r3, r7, #5632
 2416 0e8a 03F11703 		add	r3, r3, #23
 2417 0e8e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2418 0e90 07F5B053 		add	r3, r7, #5632
 2419 0e94 03F11303 		add	r3, r3, #19
 2420 0e98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2421 0e9a 9A42     		cmp	r2, r3
 2422 0e9c BED3     		bcc	.L133
 505:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 69


 2423              		.loc 1 505 0 is_stmt 1
 2424 0e9e 07F5B053 		add	r3, r7, #5632
 2425 0ea2 03F10F03 		add	r3, r3, #15
 2426 0ea6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2427 0ea8 7949     		ldr	r1, .L285
 2428 0eaa 1346     		mov	r3, r2
 2429 0eac DB00     		lsls	r3, r3, #3
 2430 0eae 9B1A     		subs	r3, r3, r2
 2431 0eb0 1B01     		lsls	r3, r3, #4
 2432 0eb2 0B44     		add	r3, r3, r1
 2433 0eb4 D033     		adds	r3, r3, #208
 2434 0eb6 1B68     		ldr	r3, [r3]
 2435 0eb8 1846     		mov	r0, r3
 2436 0eba FFF7FEFF 		bl	__aeabi_i2f
 2437 0ebe 0346     		mov	r3, r0
 2438 0ec0 4FF08F41 		mov	r1, #1199570944
 2439 0ec4 1846     		mov	r0, r3
 2440 0ec6 FFF7FEFF 		bl	__aeabi_fdiv
 2441 0eca 0346     		mov	r3, r0
 2442 0ecc 1A46     		mov	r2, r3
 2443 0ece 07F13803 		add	r3, r7, #56
 2444 0ed2 1C3B     		subs	r3, r3, #28
 2445 0ed4 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2446              		.loc 1 506 0
 2447 0ed6 0023     		movs	r3, #0
 2448 0ed8 07F5B052 		add	r2, r7, #5632
 2449 0edc 02F11702 		add	r2, r2, #23
 2450 0ee0 1370     		strb	r3, [r2]
 2451 0ee2 35E0     		b	.L134
 2452              	.L135:
 507:..\src/command_processing.c ****                             }
 2453              		.loc 1 507 0 discriminator 3
 2454 0ee4 07F5B053 		add	r3, r7, #5632
 2455 0ee8 03F11503 		add	r3, r3, #21
 2456 0eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2457 0eee 3222     		movs	r2, #50
 2458 0ef0 02FB03F3 		mul	r3, r2, r3
 2459 0ef4 1A1D     		adds	r2, r3, #4
 2460 0ef6 07F5B053 		add	r3, r7, #5632
 2461 0efa 03F11303 		add	r3, r3, #19
 2462 0efe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2463 0f00 5B00     		lsls	r3, r3, #1
 2464 0f02 1A44     		add	r2, r2, r3
 2465 0f04 07F5B053 		add	r3, r7, #5632
 2466 0f08 03F11303 		add	r3, r3, #19
 2467 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2468 0f0e 1A44     		add	r2, r2, r3
 2469 0f10 07F5B053 		add	r3, r7, #5632
 2470 0f14 03F11703 		add	r3, r3, #23
 2471 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2472 0f1a D31A     		subs	r3, r2, r3
 2473 0f1c 5A1E     		subs	r2, r3, #1
 2474 0f1e 07F5B053 		add	r3, r7, #5632
 2475 0f22 03F11703 		add	r3, r3, #23
 2476 0f26 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2477 0f28 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 70


 2478 0f2c 1C3B     		subs	r3, r3, #28
 2479 0f2e 0B44     		add	r3, r3, r1
 2480 0f30 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2481 0f32 07F15803 		add	r3, r7, #88
 2482 0f36 043B     		subs	r3, r3, #4
 2483 0f38 9954     		strb	r1, [r3, r2]
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2484              		.loc 1 506 0 discriminator 3
 2485 0f3a 07F5B053 		add	r3, r7, #5632
 2486 0f3e 03F11703 		add	r3, r3, #23
 2487 0f42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2488 0f44 0133     		adds	r3, r3, #1
 2489 0f46 07F5B052 		add	r2, r7, #5632
 2490 0f4a 02F11702 		add	r2, r2, #23
 2491 0f4e 1370     		strb	r3, [r2]
 2492              	.L134:
 506:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2493              		.loc 1 506 0 is_stmt 0 discriminator 1
 2494 0f50 07F5B053 		add	r3, r7, #5632
 2495 0f54 03F11703 		add	r3, r3, #23
 2496 0f58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2497 0f5a 07F5B053 		add	r3, r7, #5632
 2498 0f5e 03F11303 		add	r3, r3, #19
 2499 0f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2500 0f64 9A42     		cmp	r2, r3
 2501 0f66 BDD3     		bcc	.L135
 2502              		.loc 1 510 0 is_stmt 1
 2503 0f68 01F08BBA 		b	.L110
 2504              	.L114:
 511:..\src/command_processing.c ****                         
 512:..\src/command_processing.c ****                     case 3:         //Current PID
 513:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2505              		.loc 1 513 0
 2506 0f6c 07F5B053 		add	r3, r7, #5632
 2507 0f70 03F10F03 		add	r3, r3, #15
 2508 0f74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2509 0f76 4649     		ldr	r1, .L285
 2510 0f78 1346     		mov	r3, r2
 2511 0f7a DB00     		lsls	r3, r3, #3
 2512 0f7c 9B1A     		subs	r3, r3, r2
 2513 0f7e 1B01     		lsls	r3, r3, #4
 2514 0f80 0B44     		add	r3, r3, r1
 2515 0f82 03F20F13 		addw	r3, r3, #271
 2516 0f86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2517 0f88 032B     		cmp	r3, #3
 2518 0f8a 00F02B81 		beq	.L136
 514:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 2519              		.loc 1 514 0
 2520 0f8e 07F5B053 		add	r3, r7, #5632
 2521 0f92 03F10F03 		add	r3, r3, #15
 2522 0f96 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2523 0f98 3D49     		ldr	r1, .L285
 2524 0f9a 1346     		mov	r3, r2
 2525 0f9c DB00     		lsls	r3, r3, #3
 2526 0f9e 9B1A     		subs	r3, r3, r2
 2527 0fa0 1B01     		lsls	r3, r3, #4
 2528 0fa2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 71


 2529 0fa4 BC33     		adds	r3, r3, #188
 2530 0fa6 1B68     		ldr	r3, [r3]
 2531 0fa8 1846     		mov	r0, r3
 2532 0faa FFF7FEFF 		bl	__aeabi_i2f
 2533 0fae 0346     		mov	r3, r0
 2534 0fb0 4FF08F41 		mov	r1, #1199570944
 2535 0fb4 1846     		mov	r0, r3
 2536 0fb6 FFF7FEFF 		bl	__aeabi_fdiv
 2537 0fba 0346     		mov	r3, r0
 2538 0fbc 1A46     		mov	r2, r3
 2539 0fbe 07F13803 		add	r3, r7, #56
 2540 0fc2 1C3B     		subs	r3, r3, #28
 2541 0fc4 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2542              		.loc 1 515 0
 2543 0fc6 0023     		movs	r3, #0
 2544 0fc8 07F5B052 		add	r2, r7, #5632
 2545 0fcc 02F11702 		add	r2, r2, #23
 2546 0fd0 1370     		strb	r3, [r2]
 2547 0fd2 2EE0     		b	.L137
 2548              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2549              		.loc 1 516 0 discriminator 3
 2550 0fd4 07F5B053 		add	r3, r7, #5632
 2551 0fd8 03F11503 		add	r3, r3, #21
 2552 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2553 0fde 3222     		movs	r2, #50
 2554 0fe0 02FB03F3 		mul	r3, r2, r3
 2555 0fe4 1A1D     		adds	r2, r3, #4
 2556 0fe6 07F5B053 		add	r3, r7, #5632
 2557 0fea 03F11303 		add	r3, r3, #19
 2558 0fee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2559 0ff0 1A44     		add	r2, r2, r3
 2560 0ff2 07F5B053 		add	r3, r7, #5632
 2561 0ff6 03F11703 		add	r3, r3, #23
 2562 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0ffc D31A     		subs	r3, r2, r3
 2564 0ffe 5A1E     		subs	r2, r3, #1
 2565 1000 07F5B053 		add	r3, r7, #5632
 2566 1004 03F11703 		add	r3, r3, #23
 2567 1008 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2568 100a 07F13803 		add	r3, r7, #56
 2569 100e 1C3B     		subs	r3, r3, #28
 2570 1010 0B44     		add	r3, r3, r1
 2571 1012 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2572 1014 07F15803 		add	r3, r7, #88
 2573 1018 043B     		subs	r3, r3, #4
 2574 101a 9954     		strb	r1, [r3, r2]
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2575              		.loc 1 515 0 discriminator 3
 2576 101c 07F5B053 		add	r3, r7, #5632
 2577 1020 03F11703 		add	r3, r3, #23
 2578 1024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2579 1026 0133     		adds	r3, r3, #1
 2580 1028 07F5B052 		add	r2, r7, #5632
 2581 102c 02F11702 		add	r2, r2, #23
 2582 1030 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 72


 2583              	.L137:
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2584              		.loc 1 515 0 is_stmt 0 discriminator 1
 2585 1032 07F5B053 		add	r3, r7, #5632
 2586 1036 03F11703 		add	r3, r3, #23
 2587 103a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2588 103c 07F5B053 		add	r3, r7, #5632
 2589 1040 03F11303 		add	r3, r3, #19
 2590 1044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2591 1046 9A42     		cmp	r2, r3
 2592 1048 C4D3     		bcc	.L138
 517:..\src/command_processing.c ****                             }
 518:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2593              		.loc 1 518 0 is_stmt 1
 2594 104a 07F5B053 		add	r3, r7, #5632
 2595 104e 03F10F03 		add	r3, r3, #15
 2596 1052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2597 1054 0E49     		ldr	r1, .L285
 2598 1056 1346     		mov	r3, r2
 2599 1058 DB00     		lsls	r3, r3, #3
 2600 105a 9B1A     		subs	r3, r3, r2
 2601 105c 1B01     		lsls	r3, r3, #4
 2602 105e 0B44     		add	r3, r3, r1
 2603 1060 C033     		adds	r3, r3, #192
 2604 1062 1B68     		ldr	r3, [r3]
 2605 1064 1846     		mov	r0, r3
 2606 1066 FFF7FEFF 		bl	__aeabi_i2f
 2607 106a 0346     		mov	r3, r0
 2608 106c 4FF08F41 		mov	r1, #1199570944
 2609 1070 1846     		mov	r0, r3
 2610 1072 FFF7FEFF 		bl	__aeabi_fdiv
 2611 1076 0346     		mov	r3, r0
 2612 1078 1A46     		mov	r2, r3
 2613 107a 07F13803 		add	r3, r7, #56
 2614 107e 1C3B     		subs	r3, r3, #28
 2615 1080 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2616              		.loc 1 519 0
 2617 1082 0023     		movs	r3, #0
 2618 1084 07F5B052 		add	r2, r7, #5632
 2619 1088 02F11702 		add	r2, r2, #23
 2620 108c 1370     		strb	r3, [r2]
 2621 108e 36E0     		b	.L139
 2622              	.L286:
 2623              		.align	2
 2624              	.L285:
 2625 1090 00000000 		.word	c_mem
 2626              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2627              		.loc 1 520 0 discriminator 3
 2628 1094 07F5B053 		add	r3, r7, #5632
 2629 1098 03F11503 		add	r3, r3, #21
 2630 109c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2631 109e 3222     		movs	r2, #50
 2632 10a0 02FB03F3 		mul	r3, r2, r3
 2633 10a4 1A1D     		adds	r2, r3, #4
 2634 10a6 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 73


 2635 10aa 03F11303 		add	r3, r3, #19
 2636 10ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2637 10b0 1A44     		add	r2, r2, r3
 2638 10b2 07F5B053 		add	r3, r7, #5632
 2639 10b6 03F11303 		add	r3, r3, #19
 2640 10ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2641 10bc 1A44     		add	r2, r2, r3
 2642 10be 07F5B053 		add	r3, r7, #5632
 2643 10c2 03F11703 		add	r3, r3, #23
 2644 10c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2645 10c8 D31A     		subs	r3, r2, r3
 2646 10ca 5A1E     		subs	r2, r3, #1
 2647 10cc 07F5B053 		add	r3, r7, #5632
 2648 10d0 03F11703 		add	r3, r3, #23
 2649 10d4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2650 10d6 07F13803 		add	r3, r7, #56
 2651 10da 1C3B     		subs	r3, r3, #28
 2652 10dc 0B44     		add	r3, r3, r1
 2653 10de 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2654 10e0 07F15803 		add	r3, r7, #88
 2655 10e4 043B     		subs	r3, r3, #4
 2656 10e6 9954     		strb	r1, [r3, r2]
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2657              		.loc 1 519 0 discriminator 3
 2658 10e8 07F5B053 		add	r3, r7, #5632
 2659 10ec 03F11703 		add	r3, r3, #23
 2660 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2661 10f2 0133     		adds	r3, r3, #1
 2662 10f4 07F5B052 		add	r2, r7, #5632
 2663 10f8 02F11702 		add	r2, r2, #23
 2664 10fc 1370     		strb	r3, [r2]
 2665              	.L139:
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2666              		.loc 1 519 0 is_stmt 0 discriminator 1
 2667 10fe 07F5B053 		add	r3, r7, #5632
 2668 1102 03F11703 		add	r3, r3, #23
 2669 1106 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2670 1108 07F5B053 		add	r3, r7, #5632
 2671 110c 03F11303 		add	r3, r3, #19
 2672 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2673 1112 9A42     		cmp	r2, r3
 2674 1114 BED3     		bcc	.L140
 521:..\src/command_processing.c ****                             }
 522:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2675              		.loc 1 522 0 is_stmt 1
 2676 1116 07F5B053 		add	r3, r7, #5632
 2677 111a 03F10F03 		add	r3, r3, #15
 2678 111e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2679 1120 C549     		ldr	r1, .L287
 2680 1122 1346     		mov	r3, r2
 2681 1124 DB00     		lsls	r3, r3, #3
 2682 1126 9B1A     		subs	r3, r3, r2
 2683 1128 1B01     		lsls	r3, r3, #4
 2684 112a 0B44     		add	r3, r3, r1
 2685 112c C433     		adds	r3, r3, #196
 2686 112e 1B68     		ldr	r3, [r3]
 2687 1130 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 74


 2688 1132 FFF7FEFF 		bl	__aeabi_i2f
 2689 1136 0346     		mov	r3, r0
 2690 1138 4FF08F41 		mov	r1, #1199570944
 2691 113c 1846     		mov	r0, r3
 2692 113e FFF7FEFF 		bl	__aeabi_fdiv
 2693 1142 0346     		mov	r3, r0
 2694 1144 1A46     		mov	r2, r3
 2695 1146 07F13803 		add	r3, r7, #56
 2696 114a 1C3B     		subs	r3, r3, #28
 2697 114c 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2698              		.loc 1 523 0
 2699 114e 0023     		movs	r3, #0
 2700 1150 07F5B052 		add	r2, r7, #5632
 2701 1154 02F11702 		add	r2, r2, #23
 2702 1158 1370     		strb	r3, [r2]
 2703 115a 35E0     		b	.L141
 2704              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2705              		.loc 1 524 0 discriminator 3
 2706 115c 07F5B053 		add	r3, r7, #5632
 2707 1160 03F11503 		add	r3, r3, #21
 2708 1164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2709 1166 3222     		movs	r2, #50
 2710 1168 02FB03F3 		mul	r3, r2, r3
 2711 116c 1A1D     		adds	r2, r3, #4
 2712 116e 07F5B053 		add	r3, r7, #5632
 2713 1172 03F11303 		add	r3, r3, #19
 2714 1176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2715 1178 5B00     		lsls	r3, r3, #1
 2716 117a 1A44     		add	r2, r2, r3
 2717 117c 07F5B053 		add	r3, r7, #5632
 2718 1180 03F11303 		add	r3, r3, #19
 2719 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2720 1186 1A44     		add	r2, r2, r3
 2721 1188 07F5B053 		add	r3, r7, #5632
 2722 118c 03F11703 		add	r3, r3, #23
 2723 1190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2724 1192 D31A     		subs	r3, r2, r3
 2725 1194 5A1E     		subs	r2, r3, #1
 2726 1196 07F5B053 		add	r3, r7, #5632
 2727 119a 03F11703 		add	r3, r3, #23
 2728 119e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2729 11a0 07F13803 		add	r3, r7, #56
 2730 11a4 1C3B     		subs	r3, r3, #28
 2731 11a6 0B44     		add	r3, r3, r1
 2732 11a8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2733 11aa 07F15803 		add	r3, r7, #88
 2734 11ae 043B     		subs	r3, r3, #4
 2735 11b0 9954     		strb	r1, [r3, r2]
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2736              		.loc 1 523 0 discriminator 3
 2737 11b2 07F5B053 		add	r3, r7, #5632
 2738 11b6 03F11703 		add	r3, r3, #23
 2739 11ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2740 11bc 0133     		adds	r3, r3, #1
 2741 11be 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 75


 2742 11c2 02F11702 		add	r2, r2, #23
 2743 11c6 1370     		strb	r3, [r2]
 2744              	.L141:
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2745              		.loc 1 523 0 is_stmt 0 discriminator 1
 2746 11c8 07F5B053 		add	r3, r7, #5632
 2747 11cc 03F11703 		add	r3, r3, #23
 2748 11d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2749 11d2 07F5B053 		add	r3, r7, #5632
 2750 11d6 03F11303 		add	r3, r3, #19
 2751 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2752 11dc 9A42     		cmp	r2, r3
 2753 11de BDD3     		bcc	.L142
 525:..\src/command_processing.c ****                             }
 526:..\src/command_processing.c ****                         }
 527:..\src/command_processing.c ****                         else {
 528:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 529:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 531:..\src/command_processing.c ****                             }
 532:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 533:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 535:..\src/command_processing.c ****                             }
 536:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 537:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 539:..\src/command_processing.c ****                             }
 540:..\src/command_processing.c ****                         }            
 541:..\src/command_processing.c ****                         break;  
 2754              		.loc 1 541 0 is_stmt 1
 2755 11e0 01F04FB9 		b	.L110
 2756              	.L136:
 528:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2757              		.loc 1 528 0
 2758 11e4 07F5B053 		add	r3, r7, #5632
 2759 11e8 03F10F03 		add	r3, r3, #15
 2760 11ec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2761 11ee 9249     		ldr	r1, .L287
 2762 11f0 1346     		mov	r3, r2
 2763 11f2 DB00     		lsls	r3, r3, #3
 2764 11f4 9B1A     		subs	r3, r3, r2
 2765 11f6 1B01     		lsls	r3, r3, #4
 2766 11f8 0B44     		add	r3, r3, r1
 2767 11fa D433     		adds	r3, r3, #212
 2768 11fc 1B68     		ldr	r3, [r3]
 2769 11fe 1846     		mov	r0, r3
 2770 1200 FFF7FEFF 		bl	__aeabi_i2f
 2771 1204 0346     		mov	r3, r0
 2772 1206 4FF08F41 		mov	r1, #1199570944
 2773 120a 1846     		mov	r0, r3
 2774 120c FFF7FEFF 		bl	__aeabi_fdiv
 2775 1210 0346     		mov	r3, r0
 2776 1212 1A46     		mov	r2, r3
 2777 1214 07F13803 		add	r3, r7, #56
 2778 1218 1C3B     		subs	r3, r3, #28
 2779 121a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 76


 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2780              		.loc 1 529 0
 2781 121c 0023     		movs	r3, #0
 2782 121e 07F5B052 		add	r2, r7, #5632
 2783 1222 02F11702 		add	r2, r2, #23
 2784 1226 1370     		strb	r3, [r2]
 2785 1228 2EE0     		b	.L144
 2786              	.L145:
 530:..\src/command_processing.c ****                             }
 2787              		.loc 1 530 0 discriminator 3
 2788 122a 07F5B053 		add	r3, r7, #5632
 2789 122e 03F11503 		add	r3, r3, #21
 2790 1232 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2791 1234 3222     		movs	r2, #50
 2792 1236 02FB03F3 		mul	r3, r2, r3
 2793 123a 1A1D     		adds	r2, r3, #4
 2794 123c 07F5B053 		add	r3, r7, #5632
 2795 1240 03F11303 		add	r3, r3, #19
 2796 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2797 1246 1A44     		add	r2, r2, r3
 2798 1248 07F5B053 		add	r3, r7, #5632
 2799 124c 03F11703 		add	r3, r3, #23
 2800 1250 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2801 1252 D31A     		subs	r3, r2, r3
 2802 1254 5A1E     		subs	r2, r3, #1
 2803 1256 07F5B053 		add	r3, r7, #5632
 2804 125a 03F11703 		add	r3, r3, #23
 2805 125e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2806 1260 07F13803 		add	r3, r7, #56
 2807 1264 1C3B     		subs	r3, r3, #28
 2808 1266 0B44     		add	r3, r3, r1
 2809 1268 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2810 126a 07F15803 		add	r3, r7, #88
 2811 126e 043B     		subs	r3, r3, #4
 2812 1270 9954     		strb	r1, [r3, r2]
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2813              		.loc 1 529 0 discriminator 3
 2814 1272 07F5B053 		add	r3, r7, #5632
 2815 1276 03F11703 		add	r3, r3, #23
 2816 127a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2817 127c 0133     		adds	r3, r3, #1
 2818 127e 07F5B052 		add	r2, r7, #5632
 2819 1282 02F11702 		add	r2, r2, #23
 2820 1286 1370     		strb	r3, [r2]
 2821              	.L144:
 529:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2822              		.loc 1 529 0 is_stmt 0 discriminator 1
 2823 1288 07F5B053 		add	r3, r7, #5632
 2824 128c 03F11703 		add	r3, r3, #23
 2825 1290 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2826 1292 07F5B053 		add	r3, r7, #5632
 2827 1296 03F11303 		add	r3, r3, #19
 2828 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 129c 9A42     		cmp	r2, r3
 2830 129e C4D3     		bcc	.L145
 532:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2831              		.loc 1 532 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 77


 2832 12a0 07F5B053 		add	r3, r7, #5632
 2833 12a4 03F10F03 		add	r3, r3, #15
 2834 12a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2835 12aa 6349     		ldr	r1, .L287
 2836 12ac 1346     		mov	r3, r2
 2837 12ae DB00     		lsls	r3, r3, #3
 2838 12b0 9B1A     		subs	r3, r3, r2
 2839 12b2 1B01     		lsls	r3, r3, #4
 2840 12b4 0B44     		add	r3, r3, r1
 2841 12b6 D833     		adds	r3, r3, #216
 2842 12b8 1B68     		ldr	r3, [r3]
 2843 12ba 1846     		mov	r0, r3
 2844 12bc FFF7FEFF 		bl	__aeabi_i2f
 2845 12c0 0346     		mov	r3, r0
 2846 12c2 4FF08F41 		mov	r1, #1199570944
 2847 12c6 1846     		mov	r0, r3
 2848 12c8 FFF7FEFF 		bl	__aeabi_fdiv
 2849 12cc 0346     		mov	r3, r0
 2850 12ce 1A46     		mov	r2, r3
 2851 12d0 07F13803 		add	r3, r7, #56
 2852 12d4 1C3B     		subs	r3, r3, #28
 2853 12d6 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2854              		.loc 1 533 0
 2855 12d8 0023     		movs	r3, #0
 2856 12da 07F5B052 		add	r2, r7, #5632
 2857 12de 02F11702 		add	r2, r2, #23
 2858 12e2 1370     		strb	r3, [r2]
 2859 12e4 34E0     		b	.L146
 2860              	.L147:
 534:..\src/command_processing.c ****                             }
 2861              		.loc 1 534 0 discriminator 3
 2862 12e6 07F5B053 		add	r3, r7, #5632
 2863 12ea 03F11503 		add	r3, r3, #21
 2864 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2865 12f0 3222     		movs	r2, #50
 2866 12f2 02FB03F3 		mul	r3, r2, r3
 2867 12f6 1A1D     		adds	r2, r3, #4
 2868 12f8 07F5B053 		add	r3, r7, #5632
 2869 12fc 03F11303 		add	r3, r3, #19
 2870 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2871 1302 1A44     		add	r2, r2, r3
 2872 1304 07F5B053 		add	r3, r7, #5632
 2873 1308 03F11303 		add	r3, r3, #19
 2874 130c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2875 130e 1A44     		add	r2, r2, r3
 2876 1310 07F5B053 		add	r3, r7, #5632
 2877 1314 03F11703 		add	r3, r3, #23
 2878 1318 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 131a D31A     		subs	r3, r2, r3
 2880 131c 5A1E     		subs	r2, r3, #1
 2881 131e 07F5B053 		add	r3, r7, #5632
 2882 1322 03F11703 		add	r3, r3, #23
 2883 1326 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2884 1328 07F13803 		add	r3, r7, #56
 2885 132c 1C3B     		subs	r3, r3, #28
 2886 132e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 78


 2887 1330 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2888 1332 07F15803 		add	r3, r7, #88
 2889 1336 043B     		subs	r3, r3, #4
 2890 1338 9954     		strb	r1, [r3, r2]
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2891              		.loc 1 533 0 discriminator 3
 2892 133a 07F5B053 		add	r3, r7, #5632
 2893 133e 03F11703 		add	r3, r3, #23
 2894 1342 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2895 1344 0133     		adds	r3, r3, #1
 2896 1346 07F5B052 		add	r2, r7, #5632
 2897 134a 02F11702 		add	r2, r2, #23
 2898 134e 1370     		strb	r3, [r2]
 2899              	.L146:
 533:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2900              		.loc 1 533 0 is_stmt 0 discriminator 1
 2901 1350 07F5B053 		add	r3, r7, #5632
 2902 1354 03F11703 		add	r3, r3, #23
 2903 1358 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2904 135a 07F5B053 		add	r3, r7, #5632
 2905 135e 03F11303 		add	r3, r3, #19
 2906 1362 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2907 1364 9A42     		cmp	r2, r3
 2908 1366 BED3     		bcc	.L147
 536:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2909              		.loc 1 536 0 is_stmt 1
 2910 1368 07F5B053 		add	r3, r7, #5632
 2911 136c 03F10F03 		add	r3, r3, #15
 2912 1370 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2913 1372 3149     		ldr	r1, .L287
 2914 1374 1346     		mov	r3, r2
 2915 1376 DB00     		lsls	r3, r3, #3
 2916 1378 9B1A     		subs	r3, r3, r2
 2917 137a 1B01     		lsls	r3, r3, #4
 2918 137c 0B44     		add	r3, r3, r1
 2919 137e DC33     		adds	r3, r3, #220
 2920 1380 1B68     		ldr	r3, [r3]
 2921 1382 1846     		mov	r0, r3
 2922 1384 FFF7FEFF 		bl	__aeabi_i2f
 2923 1388 0346     		mov	r3, r0
 2924 138a 4FF08F41 		mov	r1, #1199570944
 2925 138e 1846     		mov	r0, r3
 2926 1390 FFF7FEFF 		bl	__aeabi_fdiv
 2927 1394 0346     		mov	r3, r0
 2928 1396 1A46     		mov	r2, r3
 2929 1398 07F13803 		add	r3, r7, #56
 2930 139c 1C3B     		subs	r3, r3, #28
 2931 139e 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2932              		.loc 1 537 0
 2933 13a0 0023     		movs	r3, #0
 2934 13a2 07F5B052 		add	r2, r7, #5632
 2935 13a6 02F11702 		add	r2, r2, #23
 2936 13aa 1370     		strb	r3, [r2]
 2937 13ac 35E0     		b	.L148
 2938              	.L149:
 538:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 79


 2939              		.loc 1 538 0 discriminator 3
 2940 13ae 07F5B053 		add	r3, r7, #5632
 2941 13b2 03F11503 		add	r3, r3, #21
 2942 13b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2943 13b8 3222     		movs	r2, #50
 2944 13ba 02FB03F3 		mul	r3, r2, r3
 2945 13be 1A1D     		adds	r2, r3, #4
 2946 13c0 07F5B053 		add	r3, r7, #5632
 2947 13c4 03F11303 		add	r3, r3, #19
 2948 13c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2949 13ca 5B00     		lsls	r3, r3, #1
 2950 13cc 1A44     		add	r2, r2, r3
 2951 13ce 07F5B053 		add	r3, r7, #5632
 2952 13d2 03F11303 		add	r3, r3, #19
 2953 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2954 13d8 1A44     		add	r2, r2, r3
 2955 13da 07F5B053 		add	r3, r7, #5632
 2956 13de 03F11703 		add	r3, r3, #23
 2957 13e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2958 13e4 D31A     		subs	r3, r2, r3
 2959 13e6 5A1E     		subs	r2, r3, #1
 2960 13e8 07F5B053 		add	r3, r7, #5632
 2961 13ec 03F11703 		add	r3, r3, #23
 2962 13f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2963 13f2 07F13803 		add	r3, r7, #56
 2964 13f6 1C3B     		subs	r3, r3, #28
 2965 13f8 0B44     		add	r3, r3, r1
 2966 13fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2967 13fc 07F15803 		add	r3, r7, #88
 2968 1400 043B     		subs	r3, r3, #4
 2969 1402 9954     		strb	r1, [r3, r2]
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2970              		.loc 1 537 0 discriminator 3
 2971 1404 07F5B053 		add	r3, r7, #5632
 2972 1408 03F11703 		add	r3, r3, #23
 2973 140c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2974 140e 0133     		adds	r3, r3, #1
 2975 1410 07F5B052 		add	r2, r7, #5632
 2976 1414 02F11702 		add	r2, r2, #23
 2977 1418 1370     		strb	r3, [r2]
 2978              	.L148:
 537:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2979              		.loc 1 537 0 is_stmt 0 discriminator 1
 2980 141a 07F5B053 		add	r3, r7, #5632
 2981 141e 03F11703 		add	r3, r3, #23
 2982 1422 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2983 1424 07F5B053 		add	r3, r7, #5632
 2984 1428 03F11303 		add	r3, r3, #19
 2985 142c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2986 142e 9A42     		cmp	r2, r3
 2987 1430 BDD3     		bcc	.L149
 2988              		.loc 1 541 0 is_stmt 1
 2989 1432 01F026B8 		b	.L110
 2990              	.L288:
 2991 1436 00BF     		.align	2
 2992              	.L287:
 2993 1438 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 80


 2994              	.L115:
 542:..\src/command_processing.c **** 
 543:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 544:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2995              		.loc 1 544 0
 2996 143c 07F5B053 		add	r3, r7, #5632
 2997 1440 03F10F03 		add	r3, r3, #15
 2998 1444 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2999 1446 CC49     		ldr	r1, .L289
 3000 1448 1346     		mov	r3, r2
 3001 144a DB00     		lsls	r3, r3, #3
 3002 144c 9B1A     		subs	r3, r3, r2
 3003 144e 1B01     		lsls	r3, r3, #4
 3004 1450 0B44     		add	r3, r3, r1
 3005 1452 03F58873 		add	r3, r3, #272
 3006 1456 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3007 1458 1846     		mov	r0, r3
 3008 145a 07F5B053 		add	r3, r7, #5632
 3009 145e 03F11703 		add	r3, r3, #23
 3010 1462 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3011 1464 C549     		ldr	r1, .L289+4
 3012 1466 0346     		mov	r3, r0
 3013 1468 5B00     		lsls	r3, r3, #1
 3014 146a 0344     		add	r3, r3, r0
 3015 146c 9B00     		lsls	r3, r3, #2
 3016 146e 1344     		add	r3, r3, r2
 3017 1470 6633     		adds	r3, r3, #102
 3018 1472 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3019 1476 07F5B053 		add	r3, r7, #5632
 3020 147a 03F10F03 		add	r3, r3, #15
 3021 147e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3022 1480 BD48     		ldr	r0, .L289
 3023 1482 1346     		mov	r3, r2
 3024 1484 DB00     		lsls	r3, r3, #3
 3025 1486 9B1A     		subs	r3, r3, r2
 3026 1488 1B01     		lsls	r3, r3, #4
 3027 148a 0344     		add	r3, r3, r0
 3028 148c 03F58873 		add	r3, r3, #272
 3029 1490 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3030 1492 1C46     		mov	r4, r3
 3031 1494 07F5B053 		add	r3, r7, #5632
 3032 1498 03F11703 		add	r3, r3, #23
 3033 149c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3034 149e B748     		ldr	r0, .L289+4
 3035 14a0 2346     		mov	r3, r4
 3036 14a2 5B00     		lsls	r3, r3, #1
 3037 14a4 2344     		add	r3, r3, r4
 3038 14a6 1B01     		lsls	r3, r3, #4
 3039 14a8 0344     		add	r3, r3, r0
 3040 14aa 1344     		add	r3, r3, r2
 3041 14ac 03F29513 		addw	r3, r3, #405
 3042 14b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3043 14b2 41FA03F3 		asr	r3, r1, r3
 3044 14b6 1AB2     		sxth	r2, r3
 3045 14b8 07F13803 		add	r3, r7, #56
 3046 14bc 1E3B     		subs	r3, r3, #30
 3047 14be 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 81


 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3048              		.loc 1 545 0
 3049 14c0 0023     		movs	r3, #0
 3050 14c2 07F5B052 		add	r2, r7, #5632
 3051 14c6 02F11602 		add	r2, r2, #22
 3052 14ca 1370     		strb	r3, [r2]
 3053 14cc 3BE0     		b	.L150
 3054              	.L151:
 546:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3055              		.loc 1 546 0 discriminator 3
 3056 14ce 07F5B053 		add	r3, r7, #5632
 3057 14d2 03F11503 		add	r3, r3, #21
 3058 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3059 14d8 3222     		movs	r2, #50
 3060 14da 02FB03F3 		mul	r3, r2, r3
 3061 14de 1A1D     		adds	r2, r3, #4
 3062 14e0 07F5B053 		add	r3, r7, #5632
 3063 14e4 03F11703 		add	r3, r3, #23
 3064 14e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3065 14ea 07F5B051 		add	r1, r7, #5632
 3066 14ee 01F11301 		add	r1, r1, #19
 3067 14f2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 3068 14f4 01FB03F3 		mul	r3, r1, r3
 3069 14f8 1A44     		add	r2, r2, r3
 3070 14fa 07F5B053 		add	r3, r7, #5632
 3071 14fe 03F11303 		add	r3, r3, #19
 3072 1502 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3073 1504 1A44     		add	r2, r2, r3
 3074 1506 07F5B053 		add	r3, r7, #5632
 3075 150a 03F11603 		add	r3, r3, #22
 3076 150e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3077 1510 D31A     		subs	r3, r2, r3
 3078 1512 5A1E     		subs	r2, r3, #1
 3079 1514 07F5B053 		add	r3, r7, #5632
 3080 1518 03F11603 		add	r3, r3, #22
 3081 151c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3082 151e 07F13803 		add	r3, r7, #56
 3083 1522 1E3B     		subs	r3, r3, #30
 3084 1524 0B44     		add	r3, r3, r1
 3085 1526 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3086 1528 07F15803 		add	r3, r7, #88
 3087 152c 043B     		subs	r3, r3, #4
 3088 152e 9954     		strb	r1, [r3, r2]
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3089              		.loc 1 545 0 discriminator 3
 3090 1530 07F5B053 		add	r3, r7, #5632
 3091 1534 03F11603 		add	r3, r3, #22
 3092 1538 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3093 153a 0133     		adds	r3, r3, #1
 3094 153c 07F5B052 		add	r2, r7, #5632
 3095 1540 02F11602 		add	r2, r2, #22
 3096 1544 1370     		strb	r3, [r2]
 3097              	.L150:
 545:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3098              		.loc 1 545 0 is_stmt 0 discriminator 1
 3099 1546 07F5B053 		add	r3, r7, #5632
 3100 154a 03F11603 		add	r3, r3, #22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 82


 3101 154e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3102 1550 07F5B053 		add	r3, r7, #5632
 3103 1554 03F11303 		add	r3, r3, #19
 3104 1558 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3105 155a 9A42     		cmp	r2, r3
 3106 155c B7D3     		bcc	.L151
 547:..\src/command_processing.c ****                         }
 548:..\src/command_processing.c ****                         break;
 3107              		.loc 1 548 0 is_stmt 1
 3108 155e 00F090BF 		b	.L110
 3109              	.L116:
 549:..\src/command_processing.c ****                 
 550:..\src/command_processing.c ****                     case 11:        //Position limits
 551:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 3110              		.loc 1 551 0
 3111 1562 07F5B053 		add	r3, r7, #5632
 3112 1566 03F10F03 		add	r3, r3, #15
 3113 156a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3114 156c 8349     		ldr	r1, .L289+4
 3115 156e 1346     		mov	r3, r2
 3116 1570 DB00     		lsls	r3, r3, #3
 3117 1572 9B1A     		subs	r3, r3, r2
 3118 1574 1B01     		lsls	r3, r3, #4
 3119 1576 0B44     		add	r3, r3, r1
 3120 1578 E433     		adds	r3, r3, #228
 3121 157a 1968     		ldr	r1, [r3]
 3122 157c 07F5B053 		add	r3, r7, #5632
 3123 1580 03F10F03 		add	r3, r3, #15
 3124 1584 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3125 1586 7C48     		ldr	r0, .L289
 3126 1588 1346     		mov	r3, r2
 3127 158a DB00     		lsls	r3, r3, #3
 3128 158c 9B1A     		subs	r3, r3, r2
 3129 158e 1B01     		lsls	r3, r3, #4
 3130 1590 0344     		add	r3, r3, r0
 3131 1592 03F58873 		add	r3, r3, #272
 3132 1596 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3133 1598 1846     		mov	r0, r3
 3134 159a 784A     		ldr	r2, .L289+4
 3135 159c 0346     		mov	r3, r0
 3136 159e 5B00     		lsls	r3, r3, #1
 3137 15a0 0344     		add	r3, r3, r0
 3138 15a2 1B01     		lsls	r3, r3, #4
 3139 15a4 1344     		add	r3, r3, r2
 3140 15a6 03F29513 		addw	r3, r3, #405
 3141 15aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3142 15ac 41FA03F2 		asr	r2, r1, r3
 3143 15b0 07F11803 		add	r3, r7, #24
 3144 15b4 043B     		subs	r3, r3, #4
 3145 15b6 1A60     		str	r2, [r3]
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3146              		.loc 1 552 0
 3147 15b8 0023     		movs	r3, #0
 3148 15ba 07F5B052 		add	r2, r7, #5632
 3149 15be 02F11602 		add	r2, r2, #22
 3150 15c2 1370     		strb	r3, [r2]
 3151 15c4 2EE0     		b	.L152
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 83


 3152              	.L153:
 553:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3153              		.loc 1 553 0 discriminator 3
 3154 15c6 07F5B053 		add	r3, r7, #5632
 3155 15ca 03F11503 		add	r3, r3, #21
 3156 15ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3157 15d0 3222     		movs	r2, #50
 3158 15d2 02FB03F3 		mul	r3, r2, r3
 3159 15d6 1A1D     		adds	r2, r3, #4
 3160 15d8 07F5B053 		add	r3, r7, #5632
 3161 15dc 03F11303 		add	r3, r3, #19
 3162 15e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3163 15e2 1A44     		add	r2, r2, r3
 3164 15e4 07F5B053 		add	r3, r7, #5632
 3165 15e8 03F11603 		add	r3, r3, #22
 3166 15ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3167 15ee D31A     		subs	r3, r2, r3
 3168 15f0 5A1E     		subs	r2, r3, #1
 3169 15f2 07F5B053 		add	r3, r7, #5632
 3170 15f6 03F11603 		add	r3, r3, #22
 3171 15fa 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3172 15fc 07F11803 		add	r3, r7, #24
 3173 1600 043B     		subs	r3, r3, #4
 3174 1602 0B44     		add	r3, r3, r1
 3175 1604 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3176 1606 07F15803 		add	r3, r7, #88
 3177 160a 043B     		subs	r3, r3, #4
 3178 160c 9954     		strb	r1, [r3, r2]
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3179              		.loc 1 552 0 discriminator 3
 3180 160e 07F5B053 		add	r3, r7, #5632
 3181 1612 03F11603 		add	r3, r3, #22
 3182 1616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3183 1618 0133     		adds	r3, r3, #1
 3184 161a 07F5B052 		add	r2, r7, #5632
 3185 161e 02F11602 		add	r2, r2, #22
 3186 1622 1370     		strb	r3, [r2]
 3187              	.L152:
 552:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3188              		.loc 1 552 0 is_stmt 0 discriminator 1
 3189 1624 07F5B053 		add	r3, r7, #5632
 3190 1628 03F11603 		add	r3, r3, #22
 3191 162c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3192 162e 07F5B053 		add	r3, r7, #5632
 3193 1632 03F11303 		add	r3, r3, #19
 3194 1636 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3195 1638 9A42     		cmp	r2, r3
 3196 163a C4D3     		bcc	.L153
 554:..\src/command_processing.c ****                         }
 555:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 3197              		.loc 1 555 0 is_stmt 1
 3198 163c 07F5B053 		add	r3, r7, #5632
 3199 1640 03F10F03 		add	r3, r3, #15
 3200 1644 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3201 1646 4D49     		ldr	r1, .L289+4
 3202 1648 1346     		mov	r3, r2
 3203 164a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 84


 3204 164c 9B1A     		subs	r3, r3, r2
 3205 164e 1B01     		lsls	r3, r3, #4
 3206 1650 0B44     		add	r3, r3, r1
 3207 1652 E833     		adds	r3, r3, #232
 3208 1654 1968     		ldr	r1, [r3]
 3209 1656 07F5B053 		add	r3, r7, #5632
 3210 165a 03F10F03 		add	r3, r3, #15
 3211 165e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3212 1660 4548     		ldr	r0, .L289
 3213 1662 1346     		mov	r3, r2
 3214 1664 DB00     		lsls	r3, r3, #3
 3215 1666 9B1A     		subs	r3, r3, r2
 3216 1668 1B01     		lsls	r3, r3, #4
 3217 166a 0344     		add	r3, r3, r0
 3218 166c 03F58873 		add	r3, r3, #272
 3219 1670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3220 1672 1846     		mov	r0, r3
 3221 1674 414A     		ldr	r2, .L289+4
 3222 1676 0346     		mov	r3, r0
 3223 1678 5B00     		lsls	r3, r3, #1
 3224 167a 0344     		add	r3, r3, r0
 3225 167c 1B01     		lsls	r3, r3, #4
 3226 167e 1344     		add	r3, r3, r2
 3227 1680 03F29513 		addw	r3, r3, #405
 3228 1684 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3229 1686 41FA03F2 		asr	r2, r1, r3
 3230 168a 07F11803 		add	r3, r7, #24
 3231 168e 043B     		subs	r3, r3, #4
 3232 1690 1A60     		str	r2, [r3]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3233              		.loc 1 556 0
 3234 1692 0023     		movs	r3, #0
 3235 1694 07F5B052 		add	r2, r7, #5632
 3236 1698 02F11602 		add	r2, r2, #22
 3237 169c 1370     		strb	r3, [r2]
 3238 169e 34E0     		b	.L154
 3239              	.L155:
 557:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3240              		.loc 1 557 0 discriminator 3
 3241 16a0 07F5B053 		add	r3, r7, #5632
 3242 16a4 03F11503 		add	r3, r3, #21
 3243 16a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 16aa 3222     		movs	r2, #50
 3245 16ac 02FB03F3 		mul	r3, r2, r3
 3246 16b0 1A1D     		adds	r2, r3, #4
 3247 16b2 07F5B053 		add	r3, r7, #5632
 3248 16b6 03F11303 		add	r3, r3, #19
 3249 16ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3250 16bc 1A44     		add	r2, r2, r3
 3251 16be 07F5B053 		add	r3, r7, #5632
 3252 16c2 03F11303 		add	r3, r3, #19
 3253 16c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3254 16c8 1A44     		add	r2, r2, r3
 3255 16ca 07F5B053 		add	r3, r7, #5632
 3256 16ce 03F11603 		add	r3, r3, #22
 3257 16d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3258 16d4 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 85


 3259 16d6 5A1E     		subs	r2, r3, #1
 3260 16d8 07F5B053 		add	r3, r7, #5632
 3261 16dc 03F11603 		add	r3, r3, #22
 3262 16e0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3263 16e2 07F11803 		add	r3, r7, #24
 3264 16e6 043B     		subs	r3, r3, #4
 3265 16e8 0B44     		add	r3, r3, r1
 3266 16ea 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3267 16ec 07F15803 		add	r3, r7, #88
 3268 16f0 043B     		subs	r3, r3, #4
 3269 16f2 9954     		strb	r1, [r3, r2]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3270              		.loc 1 556 0 discriminator 3
 3271 16f4 07F5B053 		add	r3, r7, #5632
 3272 16f8 03F11603 		add	r3, r3, #22
 3273 16fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3274 16fe 0133     		adds	r3, r3, #1
 3275 1700 07F5B052 		add	r2, r7, #5632
 3276 1704 02F11602 		add	r2, r2, #22
 3277 1708 1370     		strb	r3, [r2]
 3278              	.L154:
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3279              		.loc 1 556 0 is_stmt 0 discriminator 1
 3280 170a 07F5B053 		add	r3, r7, #5632
 3281 170e 03F11603 		add	r3, r3, #22
 3282 1712 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3283 1714 07F5B053 		add	r3, r7, #5632
 3284 1718 03F11303 		add	r3, r3, #19
 3285 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3286 171e 9A42     		cmp	r2, r3
 3287 1720 BED3     		bcc	.L155
 558:..\src/command_processing.c ****                         }
 559:..\src/command_processing.c ****                         break;            
 3288              		.loc 1 559 0 is_stmt 1
 3289 1722 00F0AEBE 		b	.L110
 3290              	.L117:
 560:..\src/command_processing.c **** 
 561:..\src/command_processing.c ****                     case 23:        //Rest Position
 562:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 3291              		.loc 1 562 0
 3292 1726 154B     		ldr	r3, .L289+4
 3293 1728 D3F8A012 		ldr	r1, [r3, #672]
 3294 172c 07F5B053 		add	r3, r7, #5632
 3295 1730 03F10F03 		add	r3, r3, #15
 3296 1734 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3297 1736 1048     		ldr	r0, .L289
 3298 1738 1346     		mov	r3, r2
 3299 173a DB00     		lsls	r3, r3, #3
 3300 173c 9B1A     		subs	r3, r3, r2
 3301 173e 1B01     		lsls	r3, r3, #4
 3302 1740 0344     		add	r3, r3, r0
 3303 1742 03F58873 		add	r3, r3, #272
 3304 1746 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3305 1748 1846     		mov	r0, r3
 3306 174a 0C4A     		ldr	r2, .L289+4
 3307 174c 0346     		mov	r3, r0
 3308 174e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 86


 3309 1750 0344     		add	r3, r3, r0
 3310 1752 1B01     		lsls	r3, r3, #4
 3311 1754 1344     		add	r3, r3, r2
 3312 1756 03F29513 		addw	r3, r3, #405
 3313 175a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 175c 41FA03F2 		asr	r2, r1, r3
 3315 1760 07F11803 		add	r3, r7, #24
 3316 1764 043B     		subs	r3, r3, #4
 3317 1766 1A60     		str	r2, [r3]
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3318              		.loc 1 563 0
 3319 1768 0023     		movs	r3, #0
 3320 176a 07F5B052 		add	r2, r7, #5632
 3321 176e 02F11602 		add	r2, r2, #22
 3322 1772 1370     		strb	r3, [r2]
 3323 1774 33E0     		b	.L156
 3324              	.L290:
 3325 1776 00BF     		.align	2
 3326              	.L289:
 3327 1778 00000000 		.word	g_mem
 3328 177c 00000000 		.word	c_mem
 3329              	.L157:
 564:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3330              		.loc 1 564 0 discriminator 3
 3331 1780 07F5B053 		add	r3, r7, #5632
 3332 1784 03F11503 		add	r3, r3, #21
 3333 1788 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3334 178a 3222     		movs	r2, #50
 3335 178c 02FB03F3 		mul	r3, r2, r3
 3336 1790 1A1D     		adds	r2, r3, #4
 3337 1792 07F5B053 		add	r3, r7, #5632
 3338 1796 03F11303 		add	r3, r3, #19
 3339 179a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 179c 1A44     		add	r2, r2, r3
 3341 179e 07F5B053 		add	r3, r7, #5632
 3342 17a2 03F11603 		add	r3, r3, #22
 3343 17a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3344 17a8 D31A     		subs	r3, r2, r3
 3345 17aa 5A1E     		subs	r2, r3, #1
 3346 17ac 07F5B053 		add	r3, r7, #5632
 3347 17b0 03F11603 		add	r3, r3, #22
 3348 17b4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3349 17b6 07F11803 		add	r3, r7, #24
 3350 17ba 043B     		subs	r3, r3, #4
 3351 17bc 0B44     		add	r3, r3, r1
 3352 17be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3353 17c0 07F15803 		add	r3, r7, #88
 3354 17c4 043B     		subs	r3, r3, #4
 3355 17c6 9954     		strb	r1, [r3, r2]
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3356              		.loc 1 563 0 discriminator 3
 3357 17c8 07F5B053 		add	r3, r7, #5632
 3358 17cc 03F11603 		add	r3, r3, #22
 3359 17d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3360 17d2 0133     		adds	r3, r3, #1
 3361 17d4 07F5B052 		add	r2, r7, #5632
 3362 17d8 02F11602 		add	r2, r2, #22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 87


 3363 17dc 1370     		strb	r3, [r2]
 3364              	.L156:
 563:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3365              		.loc 1 563 0 is_stmt 0 discriminator 1
 3366 17de 07F5B053 		add	r3, r7, #5632
 3367 17e2 03F11603 		add	r3, r3, #22
 3368 17e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3369 17e8 07F5B053 		add	r3, r7, #5632
 3370 17ec 03F11303 		add	r3, r3, #19
 3371 17f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3372 17f2 9A42     		cmp	r2, r3
 3373 17f4 C4D3     		bcc	.L157
 565:..\src/command_processing.c ****                         }
 566:..\src/command_processing.c ****                         break; 
 3374              		.loc 1 566 0 is_stmt 1
 3375 17f6 00F044BE 		b	.L110
 3376              	.L118:
 567:..\src/command_processing.c ****                         
 568:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 569:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3377              		.loc 1 569 0
 3378 17fa 07F5B053 		add	r3, r7, #5632
 3379 17fe 03F10E03 		add	r3, r3, #14
 3380 1802 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3381 1804 AB49     		ldr	r1, .L291
 3382 1806 1346     		mov	r3, r2
 3383 1808 DB00     		lsls	r3, r3, #3
 3384 180a 9B1A     		subs	r3, r3, r2
 3385 180c 1B01     		lsls	r3, r3, #4
 3386 180e 0B44     		add	r3, r3, r1
 3387 1810 03F20F13 		addw	r3, r3, #271
 3388 1814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3389 1816 032B     		cmp	r3, #3
 3390 1818 00F02981 		beq	.L158
 570:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 3391              		.loc 1 570 0
 3392 181c 07F5B053 		add	r3, r7, #5632
 3393 1820 03F10E03 		add	r3, r3, #14
 3394 1824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3395 1826 A349     		ldr	r1, .L291
 3396 1828 1346     		mov	r3, r2
 3397 182a DB00     		lsls	r3, r3, #3
 3398 182c 9B1A     		subs	r3, r3, r2
 3399 182e 1B01     		lsls	r3, r3, #4
 3400 1830 0B44     		add	r3, r3, r1
 3401 1832 B033     		adds	r3, r3, #176
 3402 1834 1B68     		ldr	r3, [r3]
 3403 1836 1846     		mov	r0, r3
 3404 1838 FFF7FEFF 		bl	__aeabi_i2f
 3405 183c 0346     		mov	r3, r0
 3406 183e 4FF08F41 		mov	r1, #1199570944
 3407 1842 1846     		mov	r0, r3
 3408 1844 FFF7FEFF 		bl	__aeabi_fdiv
 3409 1848 0346     		mov	r3, r0
 3410 184a 1A46     		mov	r2, r3
 3411 184c 07F13803 		add	r3, r7, #56
 3412 1850 1C3B     		subs	r3, r3, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 88


 3413 1852 1A60     		str	r2, [r3]	@ float
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3414              		.loc 1 571 0
 3415 1854 0023     		movs	r3, #0
 3416 1856 07F5B052 		add	r2, r7, #5632
 3417 185a 02F11702 		add	r2, r2, #23
 3418 185e 1370     		strb	r3, [r2]
 3419 1860 2EE0     		b	.L159
 3420              	.L160:
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3421              		.loc 1 572 0 discriminator 3
 3422 1862 07F5B053 		add	r3, r7, #5632
 3423 1866 03F11503 		add	r3, r3, #21
 3424 186a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3425 186c 3222     		movs	r2, #50
 3426 186e 02FB03F3 		mul	r3, r2, r3
 3427 1872 1A1D     		adds	r2, r3, #4
 3428 1874 07F5B053 		add	r3, r7, #5632
 3429 1878 03F11303 		add	r3, r3, #19
 3430 187c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3431 187e 1A44     		add	r2, r2, r3
 3432 1880 07F5B053 		add	r3, r7, #5632
 3433 1884 03F11703 		add	r3, r3, #23
 3434 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3435 188a D31A     		subs	r3, r2, r3
 3436 188c 5A1E     		subs	r2, r3, #1
 3437 188e 07F5B053 		add	r3, r7, #5632
 3438 1892 03F11703 		add	r3, r3, #23
 3439 1896 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3440 1898 07F13803 		add	r3, r7, #56
 3441 189c 1C3B     		subs	r3, r3, #28
 3442 189e 0B44     		add	r3, r3, r1
 3443 18a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3444 18a2 07F15803 		add	r3, r7, #88
 3445 18a6 043B     		subs	r3, r3, #4
 3446 18a8 9954     		strb	r1, [r3, r2]
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3447              		.loc 1 571 0 discriminator 3
 3448 18aa 07F5B053 		add	r3, r7, #5632
 3449 18ae 03F11703 		add	r3, r3, #23
 3450 18b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3451 18b4 0133     		adds	r3, r3, #1
 3452 18b6 07F5B052 		add	r2, r7, #5632
 3453 18ba 02F11702 		add	r2, r2, #23
 3454 18be 1370     		strb	r3, [r2]
 3455              	.L159:
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3456              		.loc 1 571 0 is_stmt 0 discriminator 1
 3457 18c0 07F5B053 		add	r3, r7, #5632
 3458 18c4 03F11703 		add	r3, r3, #23
 3459 18c8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3460 18ca 07F5B053 		add	r3, r7, #5632
 3461 18ce 03F11303 		add	r3, r3, #19
 3462 18d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3463 18d4 9A42     		cmp	r2, r3
 3464 18d6 C4D3     		bcc	.L160
 573:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 89


 574:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 3465              		.loc 1 574 0 is_stmt 1
 3466 18d8 07F5B053 		add	r3, r7, #5632
 3467 18dc 03F10E03 		add	r3, r3, #14
 3468 18e0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3469 18e2 7449     		ldr	r1, .L291
 3470 18e4 1346     		mov	r3, r2
 3471 18e6 DB00     		lsls	r3, r3, #3
 3472 18e8 9B1A     		subs	r3, r3, r2
 3473 18ea 1B01     		lsls	r3, r3, #4
 3474 18ec 0B44     		add	r3, r3, r1
 3475 18ee B433     		adds	r3, r3, #180
 3476 18f0 1B68     		ldr	r3, [r3]
 3477 18f2 1846     		mov	r0, r3
 3478 18f4 FFF7FEFF 		bl	__aeabi_i2f
 3479 18f8 0346     		mov	r3, r0
 3480 18fa 4FF08F41 		mov	r1, #1199570944
 3481 18fe 1846     		mov	r0, r3
 3482 1900 FFF7FEFF 		bl	__aeabi_fdiv
 3483 1904 0346     		mov	r3, r0
 3484 1906 1A46     		mov	r2, r3
 3485 1908 07F13803 		add	r3, r7, #56
 3486 190c 1C3B     		subs	r3, r3, #28
 3487 190e 1A60     		str	r2, [r3]	@ float
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3488              		.loc 1 575 0
 3489 1910 0023     		movs	r3, #0
 3490 1912 07F5B052 		add	r2, r7, #5632
 3491 1916 02F11702 		add	r2, r2, #23
 3492 191a 1370     		strb	r3, [r2]
 3493 191c 34E0     		b	.L161
 3494              	.L162:
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3495              		.loc 1 576 0 discriminator 3
 3496 191e 07F5B053 		add	r3, r7, #5632
 3497 1922 03F11503 		add	r3, r3, #21
 3498 1926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3499 1928 3222     		movs	r2, #50
 3500 192a 02FB03F3 		mul	r3, r2, r3
 3501 192e 1A1D     		adds	r2, r3, #4
 3502 1930 07F5B053 		add	r3, r7, #5632
 3503 1934 03F11303 		add	r3, r3, #19
 3504 1938 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3505 193a 1A44     		add	r2, r2, r3
 3506 193c 07F5B053 		add	r3, r7, #5632
 3507 1940 03F11303 		add	r3, r3, #19
 3508 1944 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3509 1946 1A44     		add	r2, r2, r3
 3510 1948 07F5B053 		add	r3, r7, #5632
 3511 194c 03F11703 		add	r3, r3, #23
 3512 1950 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3513 1952 D31A     		subs	r3, r2, r3
 3514 1954 5A1E     		subs	r2, r3, #1
 3515 1956 07F5B053 		add	r3, r7, #5632
 3516 195a 03F11703 		add	r3, r3, #23
 3517 195e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3518 1960 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 90


 3519 1964 1C3B     		subs	r3, r3, #28
 3520 1966 0B44     		add	r3, r3, r1
 3521 1968 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3522 196a 07F15803 		add	r3, r7, #88
 3523 196e 043B     		subs	r3, r3, #4
 3524 1970 9954     		strb	r1, [r3, r2]
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3525              		.loc 1 575 0 discriminator 3
 3526 1972 07F5B053 		add	r3, r7, #5632
 3527 1976 03F11703 		add	r3, r3, #23
 3528 197a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3529 197c 0133     		adds	r3, r3, #1
 3530 197e 07F5B052 		add	r2, r7, #5632
 3531 1982 02F11702 		add	r2, r2, #23
 3532 1986 1370     		strb	r3, [r2]
 3533              	.L161:
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3534              		.loc 1 575 0 is_stmt 0 discriminator 1
 3535 1988 07F5B053 		add	r3, r7, #5632
 3536 198c 03F11703 		add	r3, r3, #23
 3537 1990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3538 1992 07F5B053 		add	r3, r7, #5632
 3539 1996 03F11303 		add	r3, r3, #19
 3540 199a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3541 199c 9A42     		cmp	r2, r3
 3542 199e BED3     		bcc	.L162
 577:..\src/command_processing.c ****                             }
 578:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 3543              		.loc 1 578 0 is_stmt 1
 3544 19a0 07F5B053 		add	r3, r7, #5632
 3545 19a4 03F10E03 		add	r3, r3, #14
 3546 19a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3547 19aa 4249     		ldr	r1, .L291
 3548 19ac 1346     		mov	r3, r2
 3549 19ae DB00     		lsls	r3, r3, #3
 3550 19b0 9B1A     		subs	r3, r3, r2
 3551 19b2 1B01     		lsls	r3, r3, #4
 3552 19b4 0B44     		add	r3, r3, r1
 3553 19b6 B833     		adds	r3, r3, #184
 3554 19b8 1B68     		ldr	r3, [r3]
 3555 19ba 1846     		mov	r0, r3
 3556 19bc FFF7FEFF 		bl	__aeabi_i2f
 3557 19c0 0346     		mov	r3, r0
 3558 19c2 4FF08F41 		mov	r1, #1199570944
 3559 19c6 1846     		mov	r0, r3
 3560 19c8 FFF7FEFF 		bl	__aeabi_fdiv
 3561 19cc 0346     		mov	r3, r0
 3562 19ce 1A46     		mov	r2, r3
 3563 19d0 07F13803 		add	r3, r7, #56
 3564 19d4 1C3B     		subs	r3, r3, #28
 3565 19d6 1A60     		str	r2, [r3]	@ float
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3566              		.loc 1 579 0
 3567 19d8 0023     		movs	r3, #0
 3568 19da 07F5B052 		add	r2, r7, #5632
 3569 19de 02F11702 		add	r2, r2, #23
 3570 19e2 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 91


 3571 19e4 35E0     		b	.L163
 3572              	.L164:
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3573              		.loc 1 580 0 discriminator 3
 3574 19e6 07F5B053 		add	r3, r7, #5632
 3575 19ea 03F11503 		add	r3, r3, #21
 3576 19ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3577 19f0 3222     		movs	r2, #50
 3578 19f2 02FB03F3 		mul	r3, r2, r3
 3579 19f6 1A1D     		adds	r2, r3, #4
 3580 19f8 07F5B053 		add	r3, r7, #5632
 3581 19fc 03F11303 		add	r3, r3, #19
 3582 1a00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3583 1a02 5B00     		lsls	r3, r3, #1
 3584 1a04 1A44     		add	r2, r2, r3
 3585 1a06 07F5B053 		add	r3, r7, #5632
 3586 1a0a 03F11303 		add	r3, r3, #19
 3587 1a0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3588 1a10 1A44     		add	r2, r2, r3
 3589 1a12 07F5B053 		add	r3, r7, #5632
 3590 1a16 03F11703 		add	r3, r3, #23
 3591 1a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3592 1a1c D31A     		subs	r3, r2, r3
 3593 1a1e 5A1E     		subs	r2, r3, #1
 3594 1a20 07F5B053 		add	r3, r7, #5632
 3595 1a24 03F11703 		add	r3, r3, #23
 3596 1a28 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3597 1a2a 07F13803 		add	r3, r7, #56
 3598 1a2e 1C3B     		subs	r3, r3, #28
 3599 1a30 0B44     		add	r3, r3, r1
 3600 1a32 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3601 1a34 07F15803 		add	r3, r7, #88
 3602 1a38 043B     		subs	r3, r3, #4
 3603 1a3a 9954     		strb	r1, [r3, r2]
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3604              		.loc 1 579 0 discriminator 3
 3605 1a3c 07F5B053 		add	r3, r7, #5632
 3606 1a40 03F11703 		add	r3, r3, #23
 3607 1a44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 1a46 0133     		adds	r3, r3, #1
 3609 1a48 07F5B052 		add	r2, r7, #5632
 3610 1a4c 02F11702 		add	r2, r2, #23
 3611 1a50 1370     		strb	r3, [r2]
 3612              	.L163:
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3613              		.loc 1 579 0 is_stmt 0 discriminator 1
 3614 1a52 07F5B053 		add	r3, r7, #5632
 3615 1a56 03F11703 		add	r3, r3, #23
 3616 1a5a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3617 1a5c 07F5B053 		add	r3, r7, #5632
 3618 1a60 03F11303 		add	r3, r3, #19
 3619 1a64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3620 1a66 9A42     		cmp	r2, r3
 3621 1a68 BDD3     		bcc	.L164
 581:..\src/command_processing.c ****                             } 
 582:..\src/command_processing.c ****                         }
 583:..\src/command_processing.c ****                         else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 92


 584:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 585:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 586:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 587:..\src/command_processing.c ****                             }
 588:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 591:..\src/command_processing.c ****                             }
 592:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 594:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 595:..\src/command_processing.c ****                             }
 596:..\src/command_processing.c ****                         }
 597:..\src/command_processing.c ****                         break;
 3622              		.loc 1 597 0 is_stmt 1
 3623 1a6a 00F00ABD 		b	.L110
 3624              	.L158:
 584:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3625              		.loc 1 584 0
 3626 1a6e 07F5B053 		add	r3, r7, #5632
 3627 1a72 03F10E03 		add	r3, r3, #14
 3628 1a76 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3629 1a78 0E49     		ldr	r1, .L291
 3630 1a7a 1346     		mov	r3, r2
 3631 1a7c DB00     		lsls	r3, r3, #3
 3632 1a7e 9B1A     		subs	r3, r3, r2
 3633 1a80 1B01     		lsls	r3, r3, #4
 3634 1a82 0B44     		add	r3, r3, r1
 3635 1a84 C833     		adds	r3, r3, #200
 3636 1a86 1B68     		ldr	r3, [r3]
 3637 1a88 1846     		mov	r0, r3
 3638 1a8a FFF7FEFF 		bl	__aeabi_i2f
 3639 1a8e 0346     		mov	r3, r0
 3640 1a90 4FF08F41 		mov	r1, #1199570944
 3641 1a94 1846     		mov	r0, r3
 3642 1a96 FFF7FEFF 		bl	__aeabi_fdiv
 3643 1a9a 0346     		mov	r3, r0
 3644 1a9c 1A46     		mov	r2, r3
 3645 1a9e 07F13803 		add	r3, r7, #56
 3646 1aa2 1C3B     		subs	r3, r3, #28
 3647 1aa4 1A60     		str	r2, [r3]	@ float
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3648              		.loc 1 585 0
 3649 1aa6 0023     		movs	r3, #0
 3650 1aa8 07F5B052 		add	r2, r7, #5632
 3651 1aac 02F11702 		add	r2, r2, #23
 3652 1ab0 1370     		strb	r3, [r2]
 3653 1ab2 30E0     		b	.L166
 3654              	.L292:
 3655              		.align	2
 3656              	.L291:
 3657 1ab4 00000000 		.word	c_mem
 3658              	.L167:
 586:..\src/command_processing.c ****                             }
 3659              		.loc 1 586 0 discriminator 3
 3660 1ab8 07F5B053 		add	r3, r7, #5632
 3661 1abc 03F11503 		add	r3, r3, #21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 93


 3662 1ac0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3663 1ac2 3222     		movs	r2, #50
 3664 1ac4 02FB03F3 		mul	r3, r2, r3
 3665 1ac8 1A1D     		adds	r2, r3, #4
 3666 1aca 07F5B053 		add	r3, r7, #5632
 3667 1ace 03F11303 		add	r3, r3, #19
 3668 1ad2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3669 1ad4 1A44     		add	r2, r2, r3
 3670 1ad6 07F5B053 		add	r3, r7, #5632
 3671 1ada 03F11703 		add	r3, r3, #23
 3672 1ade 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3673 1ae0 D31A     		subs	r3, r2, r3
 3674 1ae2 5A1E     		subs	r2, r3, #1
 3675 1ae4 07F5B053 		add	r3, r7, #5632
 3676 1ae8 03F11703 		add	r3, r3, #23
 3677 1aec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3678 1aee 07F13803 		add	r3, r7, #56
 3679 1af2 1C3B     		subs	r3, r3, #28
 3680 1af4 0B44     		add	r3, r3, r1
 3681 1af6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3682 1af8 07F15803 		add	r3, r7, #88
 3683 1afc 043B     		subs	r3, r3, #4
 3684 1afe 9954     		strb	r1, [r3, r2]
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3685              		.loc 1 585 0 discriminator 3
 3686 1b00 07F5B053 		add	r3, r7, #5632
 3687 1b04 03F11703 		add	r3, r3, #23
 3688 1b08 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3689 1b0a 0133     		adds	r3, r3, #1
 3690 1b0c 07F5B052 		add	r2, r7, #5632
 3691 1b10 02F11702 		add	r2, r2, #23
 3692 1b14 1370     		strb	r3, [r2]
 3693              	.L166:
 585:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3694              		.loc 1 585 0 is_stmt 0 discriminator 1
 3695 1b16 07F5B053 		add	r3, r7, #5632
 3696 1b1a 03F11703 		add	r3, r3, #23
 3697 1b1e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3698 1b20 07F5B053 		add	r3, r7, #5632
 3699 1b24 03F11303 		add	r3, r3, #19
 3700 1b28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3701 1b2a 9A42     		cmp	r2, r3
 3702 1b2c C4D3     		bcc	.L167
 588:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3703              		.loc 1 588 0 is_stmt 1
 3704 1b2e 07F5B053 		add	r3, r7, #5632
 3705 1b32 03F10E03 		add	r3, r3, #14
 3706 1b36 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3707 1b38 AB49     		ldr	r1, .L293
 3708 1b3a 1346     		mov	r3, r2
 3709 1b3c DB00     		lsls	r3, r3, #3
 3710 1b3e 9B1A     		subs	r3, r3, r2
 3711 1b40 1B01     		lsls	r3, r3, #4
 3712 1b42 0B44     		add	r3, r3, r1
 3713 1b44 CC33     		adds	r3, r3, #204
 3714 1b46 1B68     		ldr	r3, [r3]
 3715 1b48 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 94


 3716 1b4a FFF7FEFF 		bl	__aeabi_i2f
 3717 1b4e 0346     		mov	r3, r0
 3718 1b50 4FF08F41 		mov	r1, #1199570944
 3719 1b54 1846     		mov	r0, r3
 3720 1b56 FFF7FEFF 		bl	__aeabi_fdiv
 3721 1b5a 0346     		mov	r3, r0
 3722 1b5c 1A46     		mov	r2, r3
 3723 1b5e 07F13803 		add	r3, r7, #56
 3724 1b62 1C3B     		subs	r3, r3, #28
 3725 1b64 1A60     		str	r2, [r3]	@ float
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3726              		.loc 1 589 0
 3727 1b66 0023     		movs	r3, #0
 3728 1b68 07F5B052 		add	r2, r7, #5632
 3729 1b6c 02F11702 		add	r2, r2, #23
 3730 1b70 1370     		strb	r3, [r2]
 3731 1b72 34E0     		b	.L168
 3732              	.L169:
 590:..\src/command_processing.c ****                             }
 3733              		.loc 1 590 0 discriminator 3
 3734 1b74 07F5B053 		add	r3, r7, #5632
 3735 1b78 03F11503 		add	r3, r3, #21
 3736 1b7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3737 1b7e 3222     		movs	r2, #50
 3738 1b80 02FB03F3 		mul	r3, r2, r3
 3739 1b84 1A1D     		adds	r2, r3, #4
 3740 1b86 07F5B053 		add	r3, r7, #5632
 3741 1b8a 03F11303 		add	r3, r3, #19
 3742 1b8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3743 1b90 1A44     		add	r2, r2, r3
 3744 1b92 07F5B053 		add	r3, r7, #5632
 3745 1b96 03F11303 		add	r3, r3, #19
 3746 1b9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3747 1b9c 1A44     		add	r2, r2, r3
 3748 1b9e 07F5B053 		add	r3, r7, #5632
 3749 1ba2 03F11703 		add	r3, r3, #23
 3750 1ba6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3751 1ba8 D31A     		subs	r3, r2, r3
 3752 1baa 5A1E     		subs	r2, r3, #1
 3753 1bac 07F5B053 		add	r3, r7, #5632
 3754 1bb0 03F11703 		add	r3, r3, #23
 3755 1bb4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3756 1bb6 07F13803 		add	r3, r7, #56
 3757 1bba 1C3B     		subs	r3, r3, #28
 3758 1bbc 0B44     		add	r3, r3, r1
 3759 1bbe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3760 1bc0 07F15803 		add	r3, r7, #88
 3761 1bc4 043B     		subs	r3, r3, #4
 3762 1bc6 9954     		strb	r1, [r3, r2]
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3763              		.loc 1 589 0 discriminator 3
 3764 1bc8 07F5B053 		add	r3, r7, #5632
 3765 1bcc 03F11703 		add	r3, r3, #23
 3766 1bd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3767 1bd2 0133     		adds	r3, r3, #1
 3768 1bd4 07F5B052 		add	r2, r7, #5632
 3769 1bd8 02F11702 		add	r2, r2, #23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 95


 3770 1bdc 1370     		strb	r3, [r2]
 3771              	.L168:
 589:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3772              		.loc 1 589 0 is_stmt 0 discriminator 1
 3773 1bde 07F5B053 		add	r3, r7, #5632
 3774 1be2 03F11703 		add	r3, r3, #23
 3775 1be6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3776 1be8 07F5B053 		add	r3, r7, #5632
 3777 1bec 03F11303 		add	r3, r3, #19
 3778 1bf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3779 1bf2 9A42     		cmp	r2, r3
 3780 1bf4 BED3     		bcc	.L169
 592:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3781              		.loc 1 592 0 is_stmt 1
 3782 1bf6 07F5B053 		add	r3, r7, #5632
 3783 1bfa 03F10E03 		add	r3, r3, #14
 3784 1bfe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3785 1c00 7949     		ldr	r1, .L293
 3786 1c02 1346     		mov	r3, r2
 3787 1c04 DB00     		lsls	r3, r3, #3
 3788 1c06 9B1A     		subs	r3, r3, r2
 3789 1c08 1B01     		lsls	r3, r3, #4
 3790 1c0a 0B44     		add	r3, r3, r1
 3791 1c0c D033     		adds	r3, r3, #208
 3792 1c0e 1B68     		ldr	r3, [r3]
 3793 1c10 1846     		mov	r0, r3
 3794 1c12 FFF7FEFF 		bl	__aeabi_i2f
 3795 1c16 0346     		mov	r3, r0
 3796 1c18 4FF08F41 		mov	r1, #1199570944
 3797 1c1c 1846     		mov	r0, r3
 3798 1c1e FFF7FEFF 		bl	__aeabi_fdiv
 3799 1c22 0346     		mov	r3, r0
 3800 1c24 1A46     		mov	r2, r3
 3801 1c26 07F13803 		add	r3, r7, #56
 3802 1c2a 1C3B     		subs	r3, r3, #28
 3803 1c2c 1A60     		str	r2, [r3]	@ float
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3804              		.loc 1 593 0
 3805 1c2e 0023     		movs	r3, #0
 3806 1c30 07F5B052 		add	r2, r7, #5632
 3807 1c34 02F11702 		add	r2, r2, #23
 3808 1c38 1370     		strb	r3, [r2]
 3809 1c3a 35E0     		b	.L170
 3810              	.L171:
 594:..\src/command_processing.c ****                             }
 3811              		.loc 1 594 0 discriminator 3
 3812 1c3c 07F5B053 		add	r3, r7, #5632
 3813 1c40 03F11503 		add	r3, r3, #21
 3814 1c44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3815 1c46 3222     		movs	r2, #50
 3816 1c48 02FB03F3 		mul	r3, r2, r3
 3817 1c4c 1A1D     		adds	r2, r3, #4
 3818 1c4e 07F5B053 		add	r3, r7, #5632
 3819 1c52 03F11303 		add	r3, r3, #19
 3820 1c56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821 1c58 5B00     		lsls	r3, r3, #1
 3822 1c5a 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 96


 3823 1c5c 07F5B053 		add	r3, r7, #5632
 3824 1c60 03F11303 		add	r3, r3, #19
 3825 1c64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3826 1c66 1A44     		add	r2, r2, r3
 3827 1c68 07F5B053 		add	r3, r7, #5632
 3828 1c6c 03F11703 		add	r3, r3, #23
 3829 1c70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3830 1c72 D31A     		subs	r3, r2, r3
 3831 1c74 5A1E     		subs	r2, r3, #1
 3832 1c76 07F5B053 		add	r3, r7, #5632
 3833 1c7a 03F11703 		add	r3, r3, #23
 3834 1c7e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3835 1c80 07F13803 		add	r3, r7, #56
 3836 1c84 1C3B     		subs	r3, r3, #28
 3837 1c86 0B44     		add	r3, r3, r1
 3838 1c88 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3839 1c8a 07F15803 		add	r3, r7, #88
 3840 1c8e 043B     		subs	r3, r3, #4
 3841 1c90 9954     		strb	r1, [r3, r2]
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3842              		.loc 1 593 0 discriminator 3
 3843 1c92 07F5B053 		add	r3, r7, #5632
 3844 1c96 03F11703 		add	r3, r3, #23
 3845 1c9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3846 1c9c 0133     		adds	r3, r3, #1
 3847 1c9e 07F5B052 		add	r2, r7, #5632
 3848 1ca2 02F11702 		add	r2, r2, #23
 3849 1ca6 1370     		strb	r3, [r2]
 3850              	.L170:
 593:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3851              		.loc 1 593 0 is_stmt 0 discriminator 1
 3852 1ca8 07F5B053 		add	r3, r7, #5632
 3853 1cac 03F11703 		add	r3, r3, #23
 3854 1cb0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3855 1cb2 07F5B053 		add	r3, r7, #5632
 3856 1cb6 03F11303 		add	r3, r3, #19
 3857 1cba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3858 1cbc 9A42     		cmp	r2, r3
 3859 1cbe BDD3     		bcc	.L171
 3860              		.loc 1 597 0 is_stmt 1
 3861 1cc0 DFE3     		b	.L110
 3862              	.L119:
 598:..\src/command_processing.c ****                         
 599:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 600:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 3863              		.loc 1 600 0
 3864 1cc2 07F5B053 		add	r3, r7, #5632
 3865 1cc6 03F10E03 		add	r3, r3, #14
 3866 1cca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3867 1ccc 4649     		ldr	r1, .L293
 3868 1cce 1346     		mov	r3, r2
 3869 1cd0 DB00     		lsls	r3, r3, #3
 3870 1cd2 9B1A     		subs	r3, r3, r2
 3871 1cd4 1B01     		lsls	r3, r3, #4
 3872 1cd6 0B44     		add	r3, r3, r1
 3873 1cd8 03F20F13 		addw	r3, r3, #271
 3874 1cdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 97


 3875 1cde 032B     		cmp	r3, #3
 3876 1ce0 00F02B81 		beq	.L172
 601:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 3877              		.loc 1 601 0
 3878 1ce4 07F5B053 		add	r3, r7, #5632
 3879 1ce8 03F10E03 		add	r3, r3, #14
 3880 1cec 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3881 1cee 3E49     		ldr	r1, .L293
 3882 1cf0 1346     		mov	r3, r2
 3883 1cf2 DB00     		lsls	r3, r3, #3
 3884 1cf4 9B1A     		subs	r3, r3, r2
 3885 1cf6 1B01     		lsls	r3, r3, #4
 3886 1cf8 0B44     		add	r3, r3, r1
 3887 1cfa BC33     		adds	r3, r3, #188
 3888 1cfc 1B68     		ldr	r3, [r3]
 3889 1cfe 1846     		mov	r0, r3
 3890 1d00 FFF7FEFF 		bl	__aeabi_i2f
 3891 1d04 0346     		mov	r3, r0
 3892 1d06 4FF08F41 		mov	r1, #1199570944
 3893 1d0a 1846     		mov	r0, r3
 3894 1d0c FFF7FEFF 		bl	__aeabi_fdiv
 3895 1d10 0346     		mov	r3, r0
 3896 1d12 1A46     		mov	r2, r3
 3897 1d14 07F13803 		add	r3, r7, #56
 3898 1d18 1C3B     		subs	r3, r3, #28
 3899 1d1a 1A60     		str	r2, [r3]	@ float
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3900              		.loc 1 602 0
 3901 1d1c 0023     		movs	r3, #0
 3902 1d1e 07F5B052 		add	r2, r7, #5632
 3903 1d22 02F11702 		add	r2, r2, #23
 3904 1d26 1370     		strb	r3, [r2]
 3905 1d28 2EE0     		b	.L173
 3906              	.L174:
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3907              		.loc 1 603 0 discriminator 3
 3908 1d2a 07F5B053 		add	r3, r7, #5632
 3909 1d2e 03F11503 		add	r3, r3, #21
 3910 1d32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1d34 3222     		movs	r2, #50
 3912 1d36 02FB03F3 		mul	r3, r2, r3
 3913 1d3a 1A1D     		adds	r2, r3, #4
 3914 1d3c 07F5B053 		add	r3, r7, #5632
 3915 1d40 03F11303 		add	r3, r3, #19
 3916 1d44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3917 1d46 1A44     		add	r2, r2, r3
 3918 1d48 07F5B053 		add	r3, r7, #5632
 3919 1d4c 03F11703 		add	r3, r3, #23
 3920 1d50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3921 1d52 D31A     		subs	r3, r2, r3
 3922 1d54 5A1E     		subs	r2, r3, #1
 3923 1d56 07F5B053 		add	r3, r7, #5632
 3924 1d5a 03F11703 		add	r3, r3, #23
 3925 1d5e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3926 1d60 07F13803 		add	r3, r7, #56
 3927 1d64 1C3B     		subs	r3, r3, #28
 3928 1d66 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 98


 3929 1d68 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 3930 1d6a 07F15803 		add	r3, r7, #88
 3931 1d6e 043B     		subs	r3, r3, #4
 3932 1d70 9954     		strb	r1, [r3, r2]
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3933              		.loc 1 602 0 discriminator 3
 3934 1d72 07F5B053 		add	r3, r7, #5632
 3935 1d76 03F11703 		add	r3, r3, #23
 3936 1d7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3937 1d7c 0133     		adds	r3, r3, #1
 3938 1d7e 07F5B052 		add	r2, r7, #5632
 3939 1d82 02F11702 		add	r2, r2, #23
 3940 1d86 1370     		strb	r3, [r2]
 3941              	.L173:
 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3942              		.loc 1 602 0 is_stmt 0 discriminator 1
 3943 1d88 07F5B053 		add	r3, r7, #5632
 3944 1d8c 03F11703 		add	r3, r3, #23
 3945 1d90 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3946 1d92 07F5B053 		add	r3, r7, #5632
 3947 1d96 03F11303 		add	r3, r3, #19
 3948 1d9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 1d9c 9A42     		cmp	r2, r3
 3950 1d9e C4D3     		bcc	.L174
 604:..\src/command_processing.c ****                             }
 605:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 3951              		.loc 1 605 0 is_stmt 1
 3952 1da0 07F5B053 		add	r3, r7, #5632
 3953 1da4 03F10E03 		add	r3, r3, #14
 3954 1da8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3955 1daa 0F49     		ldr	r1, .L293
 3956 1dac 1346     		mov	r3, r2
 3957 1dae DB00     		lsls	r3, r3, #3
 3958 1db0 9B1A     		subs	r3, r3, r2
 3959 1db2 1B01     		lsls	r3, r3, #4
 3960 1db4 0B44     		add	r3, r3, r1
 3961 1db6 C033     		adds	r3, r3, #192
 3962 1db8 1B68     		ldr	r3, [r3]
 3963 1dba 1846     		mov	r0, r3
 3964 1dbc FFF7FEFF 		bl	__aeabi_i2f
 3965 1dc0 0346     		mov	r3, r0
 3966 1dc2 4FF08F41 		mov	r1, #1199570944
 3967 1dc6 1846     		mov	r0, r3
 3968 1dc8 FFF7FEFF 		bl	__aeabi_fdiv
 3969 1dcc 0346     		mov	r3, r0
 3970 1dce 1A46     		mov	r2, r3
 3971 1dd0 07F13803 		add	r3, r7, #56
 3972 1dd4 1C3B     		subs	r3, r3, #28
 3973 1dd6 1A60     		str	r2, [r3]	@ float
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3974              		.loc 1 606 0
 3975 1dd8 0023     		movs	r3, #0
 3976 1dda 07F5B052 		add	r2, r7, #5632
 3977 1dde 02F11702 		add	r2, r2, #23
 3978 1de2 1370     		strb	r3, [r2]
 3979 1de4 37E0     		b	.L175
 3980              	.L294:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 99


 3981 1de6 00BF     		.align	2
 3982              	.L293:
 3983 1de8 00000000 		.word	c_mem
 3984              	.L176:
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3985              		.loc 1 607 0 discriminator 3
 3986 1dec 07F5B053 		add	r3, r7, #5632
 3987 1df0 03F11503 		add	r3, r3, #21
 3988 1df4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3989 1df6 3222     		movs	r2, #50
 3990 1df8 02FB03F3 		mul	r3, r2, r3
 3991 1dfc 1A1D     		adds	r2, r3, #4
 3992 1dfe 07F5B053 		add	r3, r7, #5632
 3993 1e02 03F11303 		add	r3, r3, #19
 3994 1e06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3995 1e08 1A44     		add	r2, r2, r3
 3996 1e0a 07F5B053 		add	r3, r7, #5632
 3997 1e0e 03F11303 		add	r3, r3, #19
 3998 1e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3999 1e14 1A44     		add	r2, r2, r3
 4000 1e16 07F5B053 		add	r3, r7, #5632
 4001 1e1a 03F11703 		add	r3, r3, #23
 4002 1e1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4003 1e20 D31A     		subs	r3, r2, r3
 4004 1e22 5A1E     		subs	r2, r3, #1
 4005 1e24 07F5B053 		add	r3, r7, #5632
 4006 1e28 03F11703 		add	r3, r3, #23
 4007 1e2c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4008 1e2e 07F13803 		add	r3, r7, #56
 4009 1e32 1C3B     		subs	r3, r3, #28
 4010 1e34 0B44     		add	r3, r3, r1
 4011 1e36 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4012 1e38 07F15803 		add	r3, r7, #88
 4013 1e3c 043B     		subs	r3, r3, #4
 4014 1e3e 9954     		strb	r1, [r3, r2]
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4015              		.loc 1 606 0 discriminator 3
 4016 1e40 07F5B053 		add	r3, r7, #5632
 4017 1e44 03F11703 		add	r3, r3, #23
 4018 1e48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4019 1e4a 0133     		adds	r3, r3, #1
 4020 1e4c 07F5B052 		add	r2, r7, #5632
 4021 1e50 02F11702 		add	r2, r2, #23
 4022 1e54 1370     		strb	r3, [r2]
 4023              	.L175:
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4024              		.loc 1 606 0 is_stmt 0 discriminator 1
 4025 1e56 07F5B053 		add	r3, r7, #5632
 4026 1e5a 03F11703 		add	r3, r3, #23
 4027 1e5e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4028 1e60 07F5B053 		add	r3, r7, #5632
 4029 1e64 03F11303 		add	r3, r3, #19
 4030 1e68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4031 1e6a 9A42     		cmp	r2, r3
 4032 1e6c BED3     		bcc	.L176
 608:..\src/command_processing.c ****                             }
 609:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 100


 4033              		.loc 1 609 0 is_stmt 1
 4034 1e6e 07F5B053 		add	r3, r7, #5632
 4035 1e72 03F10E03 		add	r3, r3, #14
 4036 1e76 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4037 1e78 C449     		ldr	r1, .L295
 4038 1e7a 1346     		mov	r3, r2
 4039 1e7c DB00     		lsls	r3, r3, #3
 4040 1e7e 9B1A     		subs	r3, r3, r2
 4041 1e80 1B01     		lsls	r3, r3, #4
 4042 1e82 0B44     		add	r3, r3, r1
 4043 1e84 C433     		adds	r3, r3, #196
 4044 1e86 1B68     		ldr	r3, [r3]
 4045 1e88 1846     		mov	r0, r3
 4046 1e8a FFF7FEFF 		bl	__aeabi_i2f
 4047 1e8e 0346     		mov	r3, r0
 4048 1e90 4FF08F41 		mov	r1, #1199570944
 4049 1e94 1846     		mov	r0, r3
 4050 1e96 FFF7FEFF 		bl	__aeabi_fdiv
 4051 1e9a 0346     		mov	r3, r0
 4052 1e9c 1A46     		mov	r2, r3
 4053 1e9e 07F13803 		add	r3, r7, #56
 4054 1ea2 1C3B     		subs	r3, r3, #28
 4055 1ea4 1A60     		str	r2, [r3]	@ float
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4056              		.loc 1 610 0
 4057 1ea6 0023     		movs	r3, #0
 4058 1ea8 07F5B052 		add	r2, r7, #5632
 4059 1eac 02F11702 		add	r2, r2, #23
 4060 1eb0 1370     		strb	r3, [r2]
 4061 1eb2 35E0     		b	.L177
 4062              	.L178:
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4063              		.loc 1 611 0 discriminator 3
 4064 1eb4 07F5B053 		add	r3, r7, #5632
 4065 1eb8 03F11503 		add	r3, r3, #21
 4066 1ebc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4067 1ebe 3222     		movs	r2, #50
 4068 1ec0 02FB03F3 		mul	r3, r2, r3
 4069 1ec4 1A1D     		adds	r2, r3, #4
 4070 1ec6 07F5B053 		add	r3, r7, #5632
 4071 1eca 03F11303 		add	r3, r3, #19
 4072 1ece 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4073 1ed0 5B00     		lsls	r3, r3, #1
 4074 1ed2 1A44     		add	r2, r2, r3
 4075 1ed4 07F5B053 		add	r3, r7, #5632
 4076 1ed8 03F11303 		add	r3, r3, #19
 4077 1edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4078 1ede 1A44     		add	r2, r2, r3
 4079 1ee0 07F5B053 		add	r3, r7, #5632
 4080 1ee4 03F11703 		add	r3, r3, #23
 4081 1ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4082 1eea D31A     		subs	r3, r2, r3
 4083 1eec 5A1E     		subs	r2, r3, #1
 4084 1eee 07F5B053 		add	r3, r7, #5632
 4085 1ef2 03F11703 		add	r3, r3, #23
 4086 1ef6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4087 1ef8 07F13803 		add	r3, r7, #56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 101


 4088 1efc 1C3B     		subs	r3, r3, #28
 4089 1efe 0B44     		add	r3, r3, r1
 4090 1f00 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4091 1f02 07F15803 		add	r3, r7, #88
 4092 1f06 043B     		subs	r3, r3, #4
 4093 1f08 9954     		strb	r1, [r3, r2]
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4094              		.loc 1 610 0 discriminator 3
 4095 1f0a 07F5B053 		add	r3, r7, #5632
 4096 1f0e 03F11703 		add	r3, r3, #23
 4097 1f12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4098 1f14 0133     		adds	r3, r3, #1
 4099 1f16 07F5B052 		add	r2, r7, #5632
 4100 1f1a 02F11702 		add	r2, r2, #23
 4101 1f1e 1370     		strb	r3, [r2]
 4102              	.L177:
 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4103              		.loc 1 610 0 is_stmt 0 discriminator 1
 4104 1f20 07F5B053 		add	r3, r7, #5632
 4105 1f24 03F11703 		add	r3, r3, #23
 4106 1f28 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4107 1f2a 07F5B053 		add	r3, r7, #5632
 4108 1f2e 03F11303 		add	r3, r3, #19
 4109 1f32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4110 1f34 9A42     		cmp	r2, r3
 4111 1f36 BDD3     		bcc	.L178
 612:..\src/command_processing.c ****                             }
 613:..\src/command_processing.c ****                         }
 614:..\src/command_processing.c ****                         else {
 615:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 616:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 617:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 618:..\src/command_processing.c ****                             }
 619:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 620:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 621:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 622:..\src/command_processing.c ****                             }
 623:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 624:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 625:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 626:..\src/command_processing.c ****                             }
 627:..\src/command_processing.c ****                         }            
 628:..\src/command_processing.c ****                         break;  
 4112              		.loc 1 628 0 is_stmt 1
 4113 1f38 A3E2     		b	.L110
 4114              	.L172:
 615:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4115              		.loc 1 615 0
 4116 1f3a 07F5B053 		add	r3, r7, #5632
 4117 1f3e 03F10E03 		add	r3, r3, #14
 4118 1f42 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4119 1f44 9149     		ldr	r1, .L295
 4120 1f46 1346     		mov	r3, r2
 4121 1f48 DB00     		lsls	r3, r3, #3
 4122 1f4a 9B1A     		subs	r3, r3, r2
 4123 1f4c 1B01     		lsls	r3, r3, #4
 4124 1f4e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 102


 4125 1f50 D433     		adds	r3, r3, #212
 4126 1f52 1B68     		ldr	r3, [r3]
 4127 1f54 1846     		mov	r0, r3
 4128 1f56 FFF7FEFF 		bl	__aeabi_i2f
 4129 1f5a 0346     		mov	r3, r0
 4130 1f5c 4FF08F41 		mov	r1, #1199570944
 4131 1f60 1846     		mov	r0, r3
 4132 1f62 FFF7FEFF 		bl	__aeabi_fdiv
 4133 1f66 0346     		mov	r3, r0
 4134 1f68 1A46     		mov	r2, r3
 4135 1f6a 07F13803 		add	r3, r7, #56
 4136 1f6e 1C3B     		subs	r3, r3, #28
 4137 1f70 1A60     		str	r2, [r3]	@ float
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4138              		.loc 1 616 0
 4139 1f72 0023     		movs	r3, #0
 4140 1f74 07F5B052 		add	r2, r7, #5632
 4141 1f78 02F11702 		add	r2, r2, #23
 4142 1f7c 1370     		strb	r3, [r2]
 4143 1f7e 2EE0     		b	.L180
 4144              	.L181:
 617:..\src/command_processing.c ****                             }
 4145              		.loc 1 617 0 discriminator 3
 4146 1f80 07F5B053 		add	r3, r7, #5632
 4147 1f84 03F11503 		add	r3, r3, #21
 4148 1f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4149 1f8a 3222     		movs	r2, #50
 4150 1f8c 02FB03F3 		mul	r3, r2, r3
 4151 1f90 1A1D     		adds	r2, r3, #4
 4152 1f92 07F5B053 		add	r3, r7, #5632
 4153 1f96 03F11303 		add	r3, r3, #19
 4154 1f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4155 1f9c 1A44     		add	r2, r2, r3
 4156 1f9e 07F5B053 		add	r3, r7, #5632
 4157 1fa2 03F11703 		add	r3, r3, #23
 4158 1fa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4159 1fa8 D31A     		subs	r3, r2, r3
 4160 1faa 5A1E     		subs	r2, r3, #1
 4161 1fac 07F5B053 		add	r3, r7, #5632
 4162 1fb0 03F11703 		add	r3, r3, #23
 4163 1fb4 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4164 1fb6 07F13803 		add	r3, r7, #56
 4165 1fba 1C3B     		subs	r3, r3, #28
 4166 1fbc 0B44     		add	r3, r3, r1
 4167 1fbe 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4168 1fc0 07F15803 		add	r3, r7, #88
 4169 1fc4 043B     		subs	r3, r3, #4
 4170 1fc6 9954     		strb	r1, [r3, r2]
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4171              		.loc 1 616 0 discriminator 3
 4172 1fc8 07F5B053 		add	r3, r7, #5632
 4173 1fcc 03F11703 		add	r3, r3, #23
 4174 1fd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4175 1fd2 0133     		adds	r3, r3, #1
 4176 1fd4 07F5B052 		add	r2, r7, #5632
 4177 1fd8 02F11702 		add	r2, r2, #23
 4178 1fdc 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 103


 4179              	.L180:
 616:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 4180              		.loc 1 616 0 is_stmt 0 discriminator 1
 4181 1fde 07F5B053 		add	r3, r7, #5632
 4182 1fe2 03F11703 		add	r3, r3, #23
 4183 1fe6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4184 1fe8 07F5B053 		add	r3, r7, #5632
 4185 1fec 03F11303 		add	r3, r3, #19
 4186 1ff0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4187 1ff2 9A42     		cmp	r2, r3
 4188 1ff4 C4D3     		bcc	.L181
 619:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4189              		.loc 1 619 0 is_stmt 1
 4190 1ff6 07F5B053 		add	r3, r7, #5632
 4191 1ffa 03F10E03 		add	r3, r3, #14
 4192 1ffe 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4193 2000 6249     		ldr	r1, .L295
 4194 2002 1346     		mov	r3, r2
 4195 2004 DB00     		lsls	r3, r3, #3
 4196 2006 9B1A     		subs	r3, r3, r2
 4197 2008 1B01     		lsls	r3, r3, #4
 4198 200a 0B44     		add	r3, r3, r1
 4199 200c D833     		adds	r3, r3, #216
 4200 200e 1B68     		ldr	r3, [r3]
 4201 2010 1846     		mov	r0, r3
 4202 2012 FFF7FEFF 		bl	__aeabi_i2f
 4203 2016 0346     		mov	r3, r0
 4204 2018 4FF08F41 		mov	r1, #1199570944
 4205 201c 1846     		mov	r0, r3
 4206 201e FFF7FEFF 		bl	__aeabi_fdiv
 4207 2022 0346     		mov	r3, r0
 4208 2024 1A46     		mov	r2, r3
 4209 2026 07F13803 		add	r3, r7, #56
 4210 202a 1C3B     		subs	r3, r3, #28
 4211 202c 1A60     		str	r2, [r3]	@ float
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4212              		.loc 1 620 0
 4213 202e 0023     		movs	r3, #0
 4214 2030 07F5B052 		add	r2, r7, #5632
 4215 2034 02F11702 		add	r2, r2, #23
 4216 2038 1370     		strb	r3, [r2]
 4217 203a 34E0     		b	.L182
 4218              	.L183:
 621:..\src/command_processing.c ****                             }
 4219              		.loc 1 621 0 discriminator 3
 4220 203c 07F5B053 		add	r3, r7, #5632
 4221 2040 03F11503 		add	r3, r3, #21
 4222 2044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4223 2046 3222     		movs	r2, #50
 4224 2048 02FB03F3 		mul	r3, r2, r3
 4225 204c 1A1D     		adds	r2, r3, #4
 4226 204e 07F5B053 		add	r3, r7, #5632
 4227 2052 03F11303 		add	r3, r3, #19
 4228 2056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4229 2058 1A44     		add	r2, r2, r3
 4230 205a 07F5B053 		add	r3, r7, #5632
 4231 205e 03F11303 		add	r3, r3, #19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 104


 4232 2062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4233 2064 1A44     		add	r2, r2, r3
 4234 2066 07F5B053 		add	r3, r7, #5632
 4235 206a 03F11703 		add	r3, r3, #23
 4236 206e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4237 2070 D31A     		subs	r3, r2, r3
 4238 2072 5A1E     		subs	r2, r3, #1
 4239 2074 07F5B053 		add	r3, r7, #5632
 4240 2078 03F11703 		add	r3, r3, #23
 4241 207c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4242 207e 07F13803 		add	r3, r7, #56
 4243 2082 1C3B     		subs	r3, r3, #28
 4244 2084 0B44     		add	r3, r3, r1
 4245 2086 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4246 2088 07F15803 		add	r3, r7, #88
 4247 208c 043B     		subs	r3, r3, #4
 4248 208e 9954     		strb	r1, [r3, r2]
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4249              		.loc 1 620 0 discriminator 3
 4250 2090 07F5B053 		add	r3, r7, #5632
 4251 2094 03F11703 		add	r3, r3, #23
 4252 2098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4253 209a 0133     		adds	r3, r3, #1
 4254 209c 07F5B052 		add	r2, r7, #5632
 4255 20a0 02F11702 		add	r2, r2, #23
 4256 20a4 1370     		strb	r3, [r2]
 4257              	.L182:
 620:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 4258              		.loc 1 620 0 is_stmt 0 discriminator 1
 4259 20a6 07F5B053 		add	r3, r7, #5632
 4260 20aa 03F11703 		add	r3, r3, #23
 4261 20ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4262 20b0 07F5B053 		add	r3, r7, #5632
 4263 20b4 03F11303 		add	r3, r3, #19
 4264 20b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4265 20ba 9A42     		cmp	r2, r3
 4266 20bc BED3     		bcc	.L183
 623:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 4267              		.loc 1 623 0 is_stmt 1
 4268 20be 07F5B053 		add	r3, r7, #5632
 4269 20c2 03F10E03 		add	r3, r3, #14
 4270 20c6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4271 20c8 3049     		ldr	r1, .L295
 4272 20ca 1346     		mov	r3, r2
 4273 20cc DB00     		lsls	r3, r3, #3
 4274 20ce 9B1A     		subs	r3, r3, r2
 4275 20d0 1B01     		lsls	r3, r3, #4
 4276 20d2 0B44     		add	r3, r3, r1
 4277 20d4 DC33     		adds	r3, r3, #220
 4278 20d6 1B68     		ldr	r3, [r3]
 4279 20d8 1846     		mov	r0, r3
 4280 20da FFF7FEFF 		bl	__aeabi_i2f
 4281 20de 0346     		mov	r3, r0
 4282 20e0 4FF08F41 		mov	r1, #1199570944
 4283 20e4 1846     		mov	r0, r3
 4284 20e6 FFF7FEFF 		bl	__aeabi_fdiv
 4285 20ea 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 105


 4286 20ec 1A46     		mov	r2, r3
 4287 20ee 07F13803 		add	r3, r7, #56
 4288 20f2 1C3B     		subs	r3, r3, #28
 4289 20f4 1A60     		str	r2, [r3]	@ float
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4290              		.loc 1 624 0
 4291 20f6 0023     		movs	r3, #0
 4292 20f8 07F5B052 		add	r2, r7, #5632
 4293 20fc 02F11702 		add	r2, r2, #23
 4294 2100 1370     		strb	r3, [r2]
 4295 2102 35E0     		b	.L184
 4296              	.L185:
 625:..\src/command_processing.c ****                             }
 4297              		.loc 1 625 0 discriminator 3
 4298 2104 07F5B053 		add	r3, r7, #5632
 4299 2108 03F11503 		add	r3, r3, #21
 4300 210c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4301 210e 3222     		movs	r2, #50
 4302 2110 02FB03F3 		mul	r3, r2, r3
 4303 2114 1A1D     		adds	r2, r3, #4
 4304 2116 07F5B053 		add	r3, r7, #5632
 4305 211a 03F11303 		add	r3, r3, #19
 4306 211e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4307 2120 5B00     		lsls	r3, r3, #1
 4308 2122 1A44     		add	r2, r2, r3
 4309 2124 07F5B053 		add	r3, r7, #5632
 4310 2128 03F11303 		add	r3, r3, #19
 4311 212c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4312 212e 1A44     		add	r2, r2, r3
 4313 2130 07F5B053 		add	r3, r7, #5632
 4314 2134 03F11703 		add	r3, r3, #23
 4315 2138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 213a D31A     		subs	r3, r2, r3
 4317 213c 5A1E     		subs	r2, r3, #1
 4318 213e 07F5B053 		add	r3, r7, #5632
 4319 2142 03F11703 		add	r3, r3, #23
 4320 2146 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4321 2148 07F13803 		add	r3, r7, #56
 4322 214c 1C3B     		subs	r3, r3, #28
 4323 214e 0B44     		add	r3, r3, r1
 4324 2150 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4325 2152 07F15803 		add	r3, r7, #88
 4326 2156 043B     		subs	r3, r3, #4
 4327 2158 9954     		strb	r1, [r3, r2]
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4328              		.loc 1 624 0 discriminator 3
 4329 215a 07F5B053 		add	r3, r7, #5632
 4330 215e 03F11703 		add	r3, r3, #23
 4331 2162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4332 2164 0133     		adds	r3, r3, #1
 4333 2166 07F5B052 		add	r2, r7, #5632
 4334 216a 02F11702 		add	r2, r2, #23
 4335 216e 1370     		strb	r3, [r2]
 4336              	.L184:
 624:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 4337              		.loc 1 624 0 is_stmt 0 discriminator 1
 4338 2170 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 106


 4339 2174 03F11703 		add	r3, r3, #23
 4340 2178 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4341 217a 07F5B053 		add	r3, r7, #5632
 4342 217e 03F11303 		add	r3, r3, #19
 4343 2182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4344 2184 9A42     		cmp	r2, r3
 4345 2186 BDD3     		bcc	.L185
 4346              		.loc 1 628 0 is_stmt 1
 4347 2188 7BE1     		b	.L110
 4348              	.L296:
 4349 218a 00BF     		.align	2
 4350              	.L295:
 4351 218c 00000000 		.word	c_mem
 4352              	.L120:
 629:..\src/command_processing.c **** 
 630:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 631:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 4353              		.loc 1 631 0
 4354 2190 07F5B053 		add	r3, r7, #5632
 4355 2194 03F10E03 		add	r3, r3, #14
 4356 2198 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4357 219a B749     		ldr	r1, .L297
 4358 219c 1346     		mov	r3, r2
 4359 219e DB00     		lsls	r3, r3, #3
 4360 21a0 9B1A     		subs	r3, r3, r2
 4361 21a2 1B01     		lsls	r3, r3, #4
 4362 21a4 0B44     		add	r3, r3, r1
 4363 21a6 03F58873 		add	r3, r3, #272
 4364 21aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4365 21ac 1846     		mov	r0, r3
 4366 21ae 07F5B053 		add	r3, r7, #5632
 4367 21b2 03F11703 		add	r3, r3, #23
 4368 21b6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4369 21b8 B049     		ldr	r1, .L297+4
 4370 21ba 0346     		mov	r3, r0
 4371 21bc 5B00     		lsls	r3, r3, #1
 4372 21be 0344     		add	r3, r3, r0
 4373 21c0 9B00     		lsls	r3, r3, #2
 4374 21c2 1344     		add	r3, r3, r2
 4375 21c4 6633     		adds	r3, r3, #102
 4376 21c6 51F82310 		ldr	r1, [r1, r3, lsl #2]
 4377 21ca 07F5B053 		add	r3, r7, #5632
 4378 21ce 03F10E03 		add	r3, r3, #14
 4379 21d2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4380 21d4 A848     		ldr	r0, .L297
 4381 21d6 1346     		mov	r3, r2
 4382 21d8 DB00     		lsls	r3, r3, #3
 4383 21da 9B1A     		subs	r3, r3, r2
 4384 21dc 1B01     		lsls	r3, r3, #4
 4385 21de 0344     		add	r3, r3, r0
 4386 21e0 03F58873 		add	r3, r3, #272
 4387 21e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4388 21e6 1C46     		mov	r4, r3
 4389 21e8 07F5B053 		add	r3, r7, #5632
 4390 21ec 03F11703 		add	r3, r3, #23
 4391 21f0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4392 21f2 A248     		ldr	r0, .L297+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 107


 4393 21f4 2346     		mov	r3, r4
 4394 21f6 5B00     		lsls	r3, r3, #1
 4395 21f8 2344     		add	r3, r3, r4
 4396 21fa 1B01     		lsls	r3, r3, #4
 4397 21fc 0344     		add	r3, r3, r0
 4398 21fe 1344     		add	r3, r3, r2
 4399 2200 03F29513 		addw	r3, r3, #405
 4400 2204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 2206 41FA03F3 		asr	r3, r1, r3
 4402 220a 1AB2     		sxth	r2, r3
 4403 220c 07F13803 		add	r3, r7, #56
 4404 2210 1E3B     		subs	r3, r3, #30
 4405 2212 1A80     		strh	r2, [r3]	@ movhi
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4406              		.loc 1 632 0
 4407 2214 0023     		movs	r3, #0
 4408 2216 07F5B052 		add	r2, r7, #5632
 4409 221a 02F11602 		add	r2, r2, #22
 4410 221e 1370     		strb	r3, [r2]
 4411 2220 3BE0     		b	.L186
 4412              	.L187:
 633:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 4413              		.loc 1 633 0 discriminator 3
 4414 2222 07F5B053 		add	r3, r7, #5632
 4415 2226 03F11503 		add	r3, r3, #21
 4416 222a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4417 222c 3222     		movs	r2, #50
 4418 222e 02FB03F3 		mul	r3, r2, r3
 4419 2232 1A1D     		adds	r2, r3, #4
 4420 2234 07F5B053 		add	r3, r7, #5632
 4421 2238 03F11703 		add	r3, r3, #23
 4422 223c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4423 223e 07F5B051 		add	r1, r7, #5632
 4424 2242 01F11301 		add	r1, r1, #19
 4425 2246 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4426 2248 01FB03F3 		mul	r3, r1, r3
 4427 224c 1A44     		add	r2, r2, r3
 4428 224e 07F5B053 		add	r3, r7, #5632
 4429 2252 03F11303 		add	r3, r3, #19
 4430 2256 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4431 2258 1A44     		add	r2, r2, r3
 4432 225a 07F5B053 		add	r3, r7, #5632
 4433 225e 03F11603 		add	r3, r3, #22
 4434 2262 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4435 2264 D31A     		subs	r3, r2, r3
 4436 2266 5A1E     		subs	r2, r3, #1
 4437 2268 07F5B053 		add	r3, r7, #5632
 4438 226c 03F11603 		add	r3, r3, #22
 4439 2270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4440 2272 07F13803 		add	r3, r7, #56
 4441 2276 1E3B     		subs	r3, r3, #30
 4442 2278 0B44     		add	r3, r3, r1
 4443 227a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4444 227c 07F15803 		add	r3, r7, #88
 4445 2280 043B     		subs	r3, r3, #4
 4446 2282 9954     		strb	r1, [r3, r2]
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 108


 4447              		.loc 1 632 0 discriminator 3
 4448 2284 07F5B053 		add	r3, r7, #5632
 4449 2288 03F11603 		add	r3, r3, #22
 4450 228c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4451 228e 0133     		adds	r3, r3, #1
 4452 2290 07F5B052 		add	r2, r7, #5632
 4453 2294 02F11602 		add	r2, r2, #22
 4454 2298 1370     		strb	r3, [r2]
 4455              	.L186:
 632:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4456              		.loc 1 632 0 is_stmt 0 discriminator 1
 4457 229a 07F5B053 		add	r3, r7, #5632
 4458 229e 03F11603 		add	r3, r3, #22
 4459 22a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4460 22a4 07F5B053 		add	r3, r7, #5632
 4461 22a8 03F11303 		add	r3, r3, #19
 4462 22ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4463 22ae 9A42     		cmp	r2, r3
 4464 22b0 B7D3     		bcc	.L187
 634:..\src/command_processing.c ****                         }
 635:..\src/command_processing.c ****                         break;
 4465              		.loc 1 635 0 is_stmt 1
 4466 22b2 E6E0     		b	.L110
 4467              	.L121:
 636:..\src/command_processing.c ****                 
 637:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 638:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 4468              		.loc 1 638 0
 4469 22b4 07F5B053 		add	r3, r7, #5632
 4470 22b8 03F10E03 		add	r3, r3, #14
 4471 22bc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4472 22be 6F49     		ldr	r1, .L297+4
 4473 22c0 1346     		mov	r3, r2
 4474 22c2 DB00     		lsls	r3, r3, #3
 4475 22c4 9B1A     		subs	r3, r3, r2
 4476 22c6 1B01     		lsls	r3, r3, #4
 4477 22c8 0B44     		add	r3, r3, r1
 4478 22ca E433     		adds	r3, r3, #228
 4479 22cc 1968     		ldr	r1, [r3]
 4480 22ce 07F5B053 		add	r3, r7, #5632
 4481 22d2 03F10E03 		add	r3, r3, #14
 4482 22d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4483 22d8 6748     		ldr	r0, .L297
 4484 22da 1346     		mov	r3, r2
 4485 22dc DB00     		lsls	r3, r3, #3
 4486 22de 9B1A     		subs	r3, r3, r2
 4487 22e0 1B01     		lsls	r3, r3, #4
 4488 22e2 0344     		add	r3, r3, r0
 4489 22e4 03F58873 		add	r3, r3, #272
 4490 22e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4491 22ea 1846     		mov	r0, r3
 4492 22ec 634A     		ldr	r2, .L297+4
 4493 22ee 0346     		mov	r3, r0
 4494 22f0 5B00     		lsls	r3, r3, #1
 4495 22f2 0344     		add	r3, r3, r0
 4496 22f4 1B01     		lsls	r3, r3, #4
 4497 22f6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 109


 4498 22f8 03F29513 		addw	r3, r3, #405
 4499 22fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4500 22fe 41FA03F2 		asr	r2, r1, r3
 4501 2302 07F11803 		add	r3, r7, #24
 4502 2306 043B     		subs	r3, r3, #4
 4503 2308 1A60     		str	r2, [r3]
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4504              		.loc 1 639 0
 4505 230a 0023     		movs	r3, #0
 4506 230c 07F5B052 		add	r2, r7, #5632
 4507 2310 02F11602 		add	r2, r2, #22
 4508 2314 1370     		strb	r3, [r2]
 4509 2316 2EE0     		b	.L188
 4510              	.L189:
 640:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 4511              		.loc 1 640 0 discriminator 3
 4512 2318 07F5B053 		add	r3, r7, #5632
 4513 231c 03F11503 		add	r3, r3, #21
 4514 2320 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4515 2322 3222     		movs	r2, #50
 4516 2324 02FB03F3 		mul	r3, r2, r3
 4517 2328 1A1D     		adds	r2, r3, #4
 4518 232a 07F5B053 		add	r3, r7, #5632
 4519 232e 03F11303 		add	r3, r3, #19
 4520 2332 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4521 2334 1A44     		add	r2, r2, r3
 4522 2336 07F5B053 		add	r3, r7, #5632
 4523 233a 03F11603 		add	r3, r3, #22
 4524 233e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4525 2340 D31A     		subs	r3, r2, r3
 4526 2342 5A1E     		subs	r2, r3, #1
 4527 2344 07F5B053 		add	r3, r7, #5632
 4528 2348 03F11603 		add	r3, r3, #22
 4529 234c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4530 234e 07F11803 		add	r3, r7, #24
 4531 2352 043B     		subs	r3, r3, #4
 4532 2354 0B44     		add	r3, r3, r1
 4533 2356 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4534 2358 07F15803 		add	r3, r7, #88
 4535 235c 043B     		subs	r3, r3, #4
 4536 235e 9954     		strb	r1, [r3, r2]
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4537              		.loc 1 639 0 discriminator 3
 4538 2360 07F5B053 		add	r3, r7, #5632
 4539 2364 03F11603 		add	r3, r3, #22
 4540 2368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4541 236a 0133     		adds	r3, r3, #1
 4542 236c 07F5B052 		add	r2, r7, #5632
 4543 2370 02F11602 		add	r2, r2, #22
 4544 2374 1370     		strb	r3, [r2]
 4545              	.L188:
 639:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4546              		.loc 1 639 0 is_stmt 0 discriminator 1
 4547 2376 07F5B053 		add	r3, r7, #5632
 4548 237a 03F11603 		add	r3, r3, #22
 4549 237e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4550 2380 07F5B053 		add	r3, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 110


 4551 2384 03F11303 		add	r3, r3, #19
 4552 2388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4553 238a 9A42     		cmp	r2, r3
 4554 238c C4D3     		bcc	.L189
 641:..\src/command_processing.c ****                         }
 642:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 4555              		.loc 1 642 0 is_stmt 1
 4556 238e 07F5B053 		add	r3, r7, #5632
 4557 2392 03F10E03 		add	r3, r3, #14
 4558 2396 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4559 2398 3849     		ldr	r1, .L297+4
 4560 239a 1346     		mov	r3, r2
 4561 239c DB00     		lsls	r3, r3, #3
 4562 239e 9B1A     		subs	r3, r3, r2
 4563 23a0 1B01     		lsls	r3, r3, #4
 4564 23a2 0B44     		add	r3, r3, r1
 4565 23a4 E833     		adds	r3, r3, #232
 4566 23a6 1968     		ldr	r1, [r3]
 4567 23a8 07F5B053 		add	r3, r7, #5632
 4568 23ac 03F10E03 		add	r3, r3, #14
 4569 23b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4570 23b2 3148     		ldr	r0, .L297
 4571 23b4 1346     		mov	r3, r2
 4572 23b6 DB00     		lsls	r3, r3, #3
 4573 23b8 9B1A     		subs	r3, r3, r2
 4574 23ba 1B01     		lsls	r3, r3, #4
 4575 23bc 0344     		add	r3, r3, r0
 4576 23be 03F58873 		add	r3, r3, #272
 4577 23c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4578 23c4 1846     		mov	r0, r3
 4579 23c6 2D4A     		ldr	r2, .L297+4
 4580 23c8 0346     		mov	r3, r0
 4581 23ca 5B00     		lsls	r3, r3, #1
 4582 23cc 0344     		add	r3, r3, r0
 4583 23ce 1B01     		lsls	r3, r3, #4
 4584 23d0 1344     		add	r3, r3, r2
 4585 23d2 03F29513 		addw	r3, r3, #405
 4586 23d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4587 23d8 41FA03F2 		asr	r2, r1, r3
 4588 23dc 07F11803 		add	r3, r7, #24
 4589 23e0 043B     		subs	r3, r3, #4
 4590 23e2 1A60     		str	r2, [r3]
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4591              		.loc 1 643 0
 4592 23e4 0023     		movs	r3, #0
 4593 23e6 07F5B052 		add	r2, r7, #5632
 4594 23ea 02F11602 		add	r2, r2, #22
 4595 23ee 1370     		strb	r3, [r2]
 4596 23f0 34E0     		b	.L190
 4597              	.L191:
 644:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 4598              		.loc 1 644 0 discriminator 3
 4599 23f2 07F5B053 		add	r3, r7, #5632
 4600 23f6 03F11503 		add	r3, r3, #21
 4601 23fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4602 23fc 3222     		movs	r2, #50
 4603 23fe 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 111


 4604 2402 1A1D     		adds	r2, r3, #4
 4605 2404 07F5B053 		add	r3, r7, #5632
 4606 2408 03F11303 		add	r3, r3, #19
 4607 240c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4608 240e 1A44     		add	r2, r2, r3
 4609 2410 07F5B053 		add	r3, r7, #5632
 4610 2414 03F11303 		add	r3, r3, #19
 4611 2418 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4612 241a 1A44     		add	r2, r2, r3
 4613 241c 07F5B053 		add	r3, r7, #5632
 4614 2420 03F11603 		add	r3, r3, #22
 4615 2424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4616 2426 D31A     		subs	r3, r2, r3
 4617 2428 5A1E     		subs	r2, r3, #1
 4618 242a 07F5B053 		add	r3, r7, #5632
 4619 242e 03F11603 		add	r3, r3, #22
 4620 2432 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4621 2434 07F11803 		add	r3, r7, #24
 4622 2438 043B     		subs	r3, r3, #4
 4623 243a 0B44     		add	r3, r3, r1
 4624 243c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4625 243e 07F15803 		add	r3, r7, #88
 4626 2442 043B     		subs	r3, r3, #4
 4627 2444 9954     		strb	r1, [r3, r2]
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4628              		.loc 1 643 0 discriminator 3
 4629 2446 07F5B053 		add	r3, r7, #5632
 4630 244a 03F11603 		add	r3, r3, #22
 4631 244e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4632 2450 0133     		adds	r3, r3, #1
 4633 2452 07F5B052 		add	r2, r7, #5632
 4634 2456 02F11602 		add	r2, r2, #22
 4635 245a 1370     		strb	r3, [r2]
 4636              	.L190:
 643:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 4637              		.loc 1 643 0 is_stmt 0 discriminator 1
 4638 245c 07F5B053 		add	r3, r7, #5632
 4639 2460 03F11603 		add	r3, r3, #22
 4640 2464 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4641 2466 07F5B053 		add	r3, r7, #5632
 4642 246a 03F11303 		add	r3, r3, #19
 4643 246e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4644 2470 9A42     		cmp	r2, r3
 4645 2472 BED3     		bcc	.L191
 645:..\src/command_processing.c ****                         }
 646:..\src/command_processing.c ****                         break;
 4646              		.loc 1 646 0 is_stmt 1
 4647 2474 05E0     		b	.L110
 4648              	.L298:
 4649 2476 00BF     		.align	2
 4650              	.L297:
 4651 2478 00000000 		.word	g_mem
 4652 247c 00000000 		.word	c_mem
 4653              	.L277:
 647:..\src/command_processing.c ****                         
 648:..\src/command_processing.c ****                     default:
 649:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 112


 4654              		.loc 1 649 0
 4655 2480 00BF     		nop
 4656              	.L110:
 650:..\src/command_processing.c ****                 }
 651:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 652:..\src/command_processing.c ****                         
 653:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 654:..\src/command_processing.c ****         }
 655:..\src/command_processing.c ****         
 656:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 4657              		.loc 1 656 0
 4658 2482 07F5B053 		add	r3, r7, #5632
 4659 2486 03F11503 		add	r3, r3, #21
 4660 248a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4661 248c 9B00     		lsls	r3, r3, #2
 4662 248e 07F5B152 		add	r2, r7, #5664
 4663 2492 02F11402 		add	r2, r2, #20
 4664 2496 1268     		ldr	r2, [r2]
 4665 2498 1344     		add	r3, r3, r2
 4666 249a 1A68     		ldr	r2, [r3]
 4667 249c 07F13803 		add	r3, r7, #56
 4668 24a0 183B     		subs	r3, r3, #24
 4669 24a2 1146     		mov	r1, r2
 4670 24a4 1846     		mov	r0, r3
 4671 24a6 FFF7FEFF 		bl	sprintf
 657:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 4672              		.loc 1 657 0
 4673 24aa 07F13803 		add	r3, r7, #56
 4674 24ae 183B     		subs	r3, r3, #24
 4675 24b0 1846     		mov	r0, r3
 4676 24b2 FFF7FEFF 		bl	strlen
 4677 24b6 0346     		mov	r3, r0
 4678 24b8 07F5B052 		add	r2, r7, #5632
 4679 24bc 02F11202 		add	r2, r2, #18
 4680 24c0 1370     		strb	r3, [r2]
 658:..\src/command_processing.c ****         
 659:..\src/command_processing.c ****         // Parameters with a menu
 660:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4681              		.loc 1 660 0
 4682 24c2 07F5B053 		add	r3, r7, #5632
 4683 24c6 03F11503 		add	r3, r3, #21
 4684 24ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4685 24cc 07F11803 		add	r3, r7, #24
 4686 24d0 103B     		subs	r3, r3, #16
 4687 24d2 1B68     		ldr	r3, [r3]
 4688 24d4 1344     		add	r3, r3, r2
 4689 24d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4690 24d8 002B     		cmp	r3, #0
 4691 24da 40F0C584 		bne	.L192
 661:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 4692              		.loc 1 661 0
 4693 24de 07F5B053 		add	r3, r7, #5632
 4694 24e2 03F11403 		add	r3, r3, #20
 4695 24e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4696 24e8 07F5B152 		add	r2, r7, #5664
 4697 24ec 02F11002 		add	r2, r2, #16
 4698 24f0 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 113


 4699 24f2 1344     		add	r3, r3, r2
 4700 24f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4701 24f6 013B     		subs	r3, r3, #1
 4702 24f8 0B2B     		cmp	r3, #11
 4703 24fa 00F2A784 		bhi	.L193
 4704 24fe 01A2     		adr	r2, .L195
 4705 2500 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4706              		.p2align 2
 4707              	.L195:
 4708 2504 35250000 		.word	.L194+1
 4709 2508 DF260000 		.word	.L196+1
 4710 250c B5270000 		.word	.L197+1
 4711 2510 09280000 		.word	.L198+1
 4712 2514 6D280000 		.word	.L199+1
 4713 2518 C9280000 		.word	.L200+1
 4714 251c E5290000 		.word	.L201+1
 4715 2520 6D2A0000 		.word	.L202+1
 4716 2524 012B0000 		.word	.L203+1
 4717 2528 792B0000 		.word	.L204+1
 4718 252c 8B2C0000 		.word	.L205+1
 4719 2530 CB2D0000 		.word	.L206+1
 4720              		.p2align 1
 4721              	.L194:
 662:..\src/command_processing.c ****                 case 1:     // input mode menu
 663:..\src/command_processing.c ****                     switch(*m_addr) {
 4722              		.loc 1 663 0
 4723 2534 07F5B053 		add	r3, r7, #5632
 4724 2538 03F10803 		add	r3, r3, #8
 4725 253c 1B68     		ldr	r3, [r3]
 4726 253e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4727 2540 072B     		cmp	r3, #7
 4728 2542 00F27C84 		bhi	.L278
 4729 2546 01A2     		adr	r2, .L209
 4730 2548 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4731              		.p2align 2
 4732              	.L209:
 4733 254c 6D250000 		.word	.L208+1
 4734 2550 91250000 		.word	.L210+1
 4735 2554 B7250000 		.word	.L211+1
 4736 2558 E5250000 		.word	.L212+1
 4737 255c 11260000 		.word	.L213+1
 4738 2560 3B260000 		.word	.L214+1
 4739 2564 6F260000 		.word	.L215+1
 4740 2568 99260000 		.word	.L216+1
 4741              		.p2align 1
 4742              	.L208:
 664:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 665:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 4743              		.loc 1 665 0
 4744 256c 07F13803 		add	r3, r7, #56
 4745 2570 183B     		subs	r3, r3, #24
 4746 2572 1846     		mov	r0, r3
 4747 2574 FFF7FEFF 		bl	strlen
 4748 2578 0346     		mov	r3, r0
 4749 257a 1A46     		mov	r2, r3
 4750 257c 07F13803 		add	r3, r7, #56
 4751 2580 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 114


 4752 2582 1344     		add	r3, r3, r2
 4753 2584 DA4A     		ldr	r2, .L299
 4754 2586 1068     		ldr	r0, [r2]	@ unaligned
 4755 2588 1860     		str	r0, [r3]	@ unaligned
 4756 258a 1279     		ldrb	r2, [r2, #4]
 4757 258c 1A71     		strb	r2, [r3, #4]
 666:..\src/command_processing.c ****                         break;
 4758              		.loc 1 666 0
 4759 258e A5E0     		b	.L207
 4760              	.L210:
 667:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 668:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 4761              		.loc 1 668 0
 4762 2590 07F13803 		add	r3, r7, #56
 4763 2594 183B     		subs	r3, r3, #24
 4764 2596 1846     		mov	r0, r3
 4765 2598 FFF7FEFF 		bl	strlen
 4766 259c 0346     		mov	r3, r0
 4767 259e 1A46     		mov	r2, r3
 4768 25a0 07F13803 		add	r3, r7, #56
 4769 25a4 183B     		subs	r3, r3, #24
 4770 25a6 1344     		add	r3, r3, r2
 4771 25a8 D249     		ldr	r1, .L299+4
 4772 25aa 1A46     		mov	r2, r3
 4773 25ac 0B46     		mov	r3, r1
 4774 25ae 03CB     		ldmia	r3!, {r0, r1}
 4775 25b0 1060     		str	r0, [r2]	@ unaligned
 4776 25b2 5160     		str	r1, [r2, #4]	@ unaligned
 669:..\src/command_processing.c ****                         break;
 4777              		.loc 1 669 0
 4778 25b4 92E0     		b	.L207
 4779              	.L211:
 670:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 671:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 4780              		.loc 1 671 0
 4781 25b6 07F13803 		add	r3, r7, #56
 4782 25ba 183B     		subs	r3, r3, #24
 4783 25bc 1846     		mov	r0, r3
 4784 25be FFF7FEFF 		bl	strlen
 4785 25c2 0346     		mov	r3, r0
 4786 25c4 1A46     		mov	r2, r3
 4787 25c6 07F13803 		add	r3, r7, #56
 4788 25ca 183B     		subs	r3, r3, #24
 4789 25cc 1344     		add	r3, r3, r2
 4790 25ce CA4A     		ldr	r2, .L299+8
 4791 25d0 1D46     		mov	r5, r3
 4792 25d2 1446     		mov	r4, r2
 4793 25d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4794 25d6 2860     		str	r0, [r5]	@ unaligned
 4795 25d8 6960     		str	r1, [r5, #4]	@ unaligned
 4796 25da AA60     		str	r2, [r5, #8]	@ unaligned
 4797 25dc EB60     		str	r3, [r5, #12]	@ unaligned
 4798 25de 2388     		ldrh	r3, [r4]	@ unaligned
 4799 25e0 2B82     		strh	r3, [r5, #16]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 4800              		.loc 1 672 0
 4801 25e2 7BE0     		b	.L207
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 115


 4802              	.L212:
 673:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 674:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 4803              		.loc 1 674 0
 4804 25e4 07F13803 		add	r3, r7, #56
 4805 25e8 183B     		subs	r3, r3, #24
 4806 25ea 1846     		mov	r0, r3
 4807 25ec FFF7FEFF 		bl	strlen
 4808 25f0 0346     		mov	r3, r0
 4809 25f2 1A46     		mov	r2, r3
 4810 25f4 07F13803 		add	r3, r7, #56
 4811 25f8 183B     		subs	r3, r3, #24
 4812 25fa 1344     		add	r3, r3, r2
 4813 25fc BF4A     		ldr	r2, .L299+12
 4814 25fe 1C46     		mov	r4, r3
 4815 2600 1346     		mov	r3, r2
 4816 2602 07CB     		ldmia	r3!, {r0, r1, r2}
 4817 2604 2060     		str	r0, [r4]	@ unaligned
 4818 2606 6160     		str	r1, [r4, #4]	@ unaligned
 4819 2608 A260     		str	r2, [r4, #8]	@ unaligned
 4820 260a 1B88     		ldrh	r3, [r3]	@ unaligned
 4821 260c A381     		strh	r3, [r4, #12]	@ unaligned
 675:..\src/command_processing.c ****                         break;
 4822              		.loc 1 675 0
 4823 260e 65E0     		b	.L207
 4824              	.L213:
 676:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 677:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 4825              		.loc 1 677 0
 4826 2610 07F13803 		add	r3, r7, #56
 4827 2614 183B     		subs	r3, r3, #24
 4828 2616 1846     		mov	r0, r3
 4829 2618 FFF7FEFF 		bl	strlen
 4830 261c 0346     		mov	r3, r0
 4831 261e 1A46     		mov	r2, r3
 4832 2620 07F13803 		add	r3, r7, #56
 4833 2624 183B     		subs	r3, r3, #24
 4834 2626 1344     		add	r3, r3, r2
 4835 2628 B549     		ldr	r1, .L299+16
 4836 262a 1A46     		mov	r2, r3
 4837 262c 0B46     		mov	r3, r1
 4838 262e 03CB     		ldmia	r3!, {r0, r1}
 4839 2630 1060     		str	r0, [r2]	@ unaligned
 4840 2632 5160     		str	r1, [r2, #4]	@ unaligned
 4841 2634 1B88     		ldrh	r3, [r3]	@ unaligned
 4842 2636 1381     		strh	r3, [r2, #8]	@ unaligned
 678:..\src/command_processing.c ****                         break;
 4843              		.loc 1 678 0
 4844 2638 50E0     		b	.L207
 4845              	.L214:
 679:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 680:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 4846              		.loc 1 680 0
 4847 263a 07F13803 		add	r3, r7, #56
 4848 263e 183B     		subs	r3, r3, #24
 4849 2640 1846     		mov	r0, r3
 4850 2642 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 116


 4851 2646 0346     		mov	r3, r0
 4852 2648 1A46     		mov	r2, r3
 4853 264a 07F13803 		add	r3, r7, #56
 4854 264e 183B     		subs	r3, r3, #24
 4855 2650 1344     		add	r3, r3, r2
 4856 2652 AC4A     		ldr	r2, .L299+20
 4857 2654 1D46     		mov	r5, r3
 4858 2656 1446     		mov	r4, r2
 4859 2658 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4860 265a 2860     		str	r0, [r5]	@ unaligned
 4861 265c 6960     		str	r1, [r5, #4]	@ unaligned
 4862 265e AA60     		str	r2, [r5, #8]	@ unaligned
 4863 2660 EB60     		str	r3, [r5, #12]	@ unaligned
 4864 2662 2388     		ldrh	r3, [r4]	@ unaligned
 4865 2664 A278     		ldrb	r2, [r4, #2]
 4866 2666 2B82     		strh	r3, [r5, #16]	@ unaligned
 4867 2668 1346     		mov	r3, r2
 4868 266a AB74     		strb	r3, [r5, #18]
 681:..\src/command_processing.c ****                         break;
 4869              		.loc 1 681 0
 4870 266c 36E0     		b	.L207
 4871              	.L215:
 682:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 683:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 4872              		.loc 1 683 0
 4873 266e 07F13803 		add	r3, r7, #56
 4874 2672 183B     		subs	r3, r3, #24
 4875 2674 1846     		mov	r0, r3
 4876 2676 FFF7FEFF 		bl	strlen
 4877 267a 0346     		mov	r3, r0
 4878 267c 1A46     		mov	r2, r3
 4879 267e 07F13803 		add	r3, r7, #56
 4880 2682 183B     		subs	r3, r3, #24
 4881 2684 1344     		add	r3, r3, r2
 4882 2686 A049     		ldr	r1, .L299+24
 4883 2688 1A46     		mov	r2, r3
 4884 268a 0B46     		mov	r3, r1
 4885 268c 03CB     		ldmia	r3!, {r0, r1}
 4886 268e 1060     		str	r0, [r2]	@ unaligned
 4887 2690 5160     		str	r1, [r2, #4]	@ unaligned
 4888 2692 1B88     		ldrh	r3, [r3]	@ unaligned
 4889 2694 1381     		strh	r3, [r2, #8]	@ unaligned
 684:..\src/command_processing.c ****                         break;
 4890              		.loc 1 684 0
 4891 2696 21E0     		b	.L207
 4892              	.L216:
 685:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 686:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 4893              		.loc 1 686 0
 4894 2698 07F13803 		add	r3, r7, #56
 4895 269c 183B     		subs	r3, r3, #24
 4896 269e 1846     		mov	r0, r3
 4897 26a0 FFF7FEFF 		bl	strlen
 4898 26a4 0346     		mov	r3, r0
 4899 26a6 1A46     		mov	r2, r3
 4900 26a8 07F13803 		add	r3, r7, #56
 4901 26ac 183B     		subs	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 117


 4902 26ae 1344     		add	r3, r3, r2
 4903 26b0 964A     		ldr	r2, .L299+28
 4904 26b2 1446     		mov	r4, r2
 4905 26b4 9E46     		mov	lr, r3
 4906 26b6 04F1200C 		add	ip, r4, #32
 4907              	.L217:
 4908 26ba 7546     		mov	r5, lr
 4909 26bc 2646     		mov	r6, r4
 4910 26be 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 4911 26c0 2860     		str	r0, [r5]	@ unaligned
 4912 26c2 6960     		str	r1, [r5, #4]	@ unaligned
 4913 26c4 AA60     		str	r2, [r5, #8]	@ unaligned
 4914 26c6 EB60     		str	r3, [r5, #12]	@ unaligned
 4915 26c8 1034     		adds	r4, r4, #16
 4916 26ca 0EF1100E 		add	lr, lr, #16
 4917 26ce 6445     		cmp	r4, ip
 4918 26d0 F3D1     		bne	.L217
 4919 26d2 7246     		mov	r2, lr
 4920 26d4 2346     		mov	r3, r4
 4921 26d6 1B88     		ldrh	r3, [r3]	@ unaligned
 4922 26d8 1380     		strh	r3, [r2]	@ unaligned
 687:..\src/command_processing.c ****                         break;
 4923              		.loc 1 687 0
 4924 26da 00BF     		nop
 4925              	.L207:
 688:..\src/command_processing.c ****                     }
 689:..\src/command_processing.c ****                     break;
 4926              		.loc 1 689 0
 4927 26dc AFE3     		b	.L278
 4928              	.L196:
 690:..\src/command_processing.c ****                 case 2:     // control mode menu
 691:..\src/command_processing.c ****                     switch(*m_addr){
 4929              		.loc 1 691 0
 4930 26de 07F5B053 		add	r3, r7, #5632
 4931 26e2 03F10803 		add	r3, r3, #8
 4932 26e6 1B68     		ldr	r3, [r3]
 4933 26e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4934 26ea 032B     		cmp	r3, #3
 4935 26ec 00F2A983 		bhi	.L279
 4936 26f0 01A2     		adr	r2, .L220
 4937 26f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4938 26f6 00BF     		.p2align 2
 4939              	.L220:
 4940 26f8 09270000 		.word	.L219+1
 4941 26fc 33270000 		.word	.L221+1
 4942 2700 57270000 		.word	.L222+1
 4943 2704 81270000 		.word	.L223+1
 4944              		.p2align 1
 4945              	.L219:
 692:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 693:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 4946              		.loc 1 693 0
 4947 2708 07F13803 		add	r3, r7, #56
 4948 270c 183B     		subs	r3, r3, #24
 4949 270e 1846     		mov	r0, r3
 4950 2710 FFF7FEFF 		bl	strlen
 4951 2714 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 118


 4952 2716 1A46     		mov	r2, r3
 4953 2718 07F13803 		add	r3, r7, #56
 4954 271c 183B     		subs	r3, r3, #24
 4955 271e 1344     		add	r3, r3, r2
 4956 2720 7B49     		ldr	r1, .L299+32
 4957 2722 1A46     		mov	r2, r3
 4958 2724 0B46     		mov	r3, r1
 4959 2726 03CB     		ldmia	r3!, {r0, r1}
 4960 2728 1060     		str	r0, [r2]	@ unaligned
 4961 272a 5160     		str	r1, [r2, #4]	@ unaligned
 4962 272c 1B88     		ldrh	r3, [r3]	@ unaligned
 4963 272e 1381     		strh	r3, [r2, #8]	@ unaligned
 694:..\src/command_processing.c ****                         break;
 4964              		.loc 1 694 0
 4965 2730 3FE0     		b	.L218
 4966              	.L221:
 695:..\src/command_processing.c ****                         case CONTROL_PWM:
 696:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 4967              		.loc 1 696 0
 4968 2732 07F13803 		add	r3, r7, #56
 4969 2736 183B     		subs	r3, r3, #24
 4970 2738 1846     		mov	r0, r3
 4971 273a FFF7FEFF 		bl	strlen
 4972 273e 0346     		mov	r3, r0
 4973 2740 1A46     		mov	r2, r3
 4974 2742 07F13803 		add	r3, r7, #56
 4975 2746 183B     		subs	r3, r3, #24
 4976 2748 1344     		add	r3, r3, r2
 4977 274a 724A     		ldr	r2, .L299+36
 4978 274c 1068     		ldr	r0, [r2]	@ unaligned
 4979 274e 1860     		str	r0, [r3]	@ unaligned
 4980 2750 1279     		ldrb	r2, [r2, #4]
 4981 2752 1A71     		strb	r2, [r3, #4]
 697:..\src/command_processing.c ****                         break;
 4982              		.loc 1 697 0
 4983 2754 2DE0     		b	.L218
 4984              	.L222:
 698:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 699:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 4985              		.loc 1 699 0
 4986 2756 07F13803 		add	r3, r7, #56
 4987 275a 183B     		subs	r3, r3, #24
 4988 275c 1846     		mov	r0, r3
 4989 275e FFF7FEFF 		bl	strlen
 4990 2762 0346     		mov	r3, r0
 4991 2764 1A46     		mov	r2, r3
 4992 2766 07F13803 		add	r3, r7, #56
 4993 276a 183B     		subs	r3, r3, #24
 4994 276c 1344     		add	r3, r3, r2
 4995 276e 6A49     		ldr	r1, .L299+40
 4996 2770 1A46     		mov	r2, r3
 4997 2772 0B46     		mov	r3, r1
 4998 2774 03CB     		ldmia	r3!, {r0, r1}
 4999 2776 1060     		str	r0, [r2]	@ unaligned
 5000 2778 5160     		str	r1, [r2, #4]	@ unaligned
 5001 277a 1B78     		ldrb	r3, [r3]
 5002 277c 1372     		strb	r3, [r2, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 119


 700:..\src/command_processing.c ****                         break;
 5003              		.loc 1 700 0
 5004 277e 18E0     		b	.L218
 5005              	.L223:
 701:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 702:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 5006              		.loc 1 702 0
 5007 2780 07F13803 		add	r3, r7, #56
 5008 2784 183B     		subs	r3, r3, #24
 5009 2786 1846     		mov	r0, r3
 5010 2788 FFF7FEFF 		bl	strlen
 5011 278c 0346     		mov	r3, r0
 5012 278e 1A46     		mov	r2, r3
 5013 2790 07F13803 		add	r3, r7, #56
 5014 2794 183B     		subs	r3, r3, #24
 5015 2796 1344     		add	r3, r3, r2
 5016 2798 604A     		ldr	r2, .L299+44
 5017 279a 1D46     		mov	r5, r3
 5018 279c 1446     		mov	r4, r2
 5019 279e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5020 27a0 2860     		str	r0, [r5]	@ unaligned
 5021 27a2 6960     		str	r1, [r5, #4]	@ unaligned
 5022 27a4 AA60     		str	r2, [r5, #8]	@ unaligned
 5023 27a6 EB60     		str	r3, [r5, #12]	@ unaligned
 5024 27a8 2068     		ldr	r0, [r4]	@ unaligned
 5025 27aa 2861     		str	r0, [r5, #16]	@ unaligned
 5026 27ac A388     		ldrh	r3, [r4, #4]	@ unaligned
 5027 27ae AB82     		strh	r3, [r5, #20]	@ unaligned
 703:..\src/command_processing.c ****                         break;
 5028              		.loc 1 703 0
 5029 27b0 00BF     		nop
 5030              	.L218:
 704:..\src/command_processing.c ****                     }
 705:..\src/command_processing.c ****                     break;
 5031              		.loc 1 705 0
 5032 27b2 46E3     		b	.L279
 5033              	.L197:
 706:..\src/command_processing.c ****                 case 3:     // yes/no menu
 707:..\src/command_processing.c ****                     if(*m_addr){
 5034              		.loc 1 707 0
 5035 27b4 07F5B053 		add	r3, r7, #5632
 5036 27b8 03F10803 		add	r3, r3, #8
 5037 27bc 1B68     		ldr	r3, [r3]
 5038 27be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5039 27c0 002B     		cmp	r3, #0
 5040 27c2 11D0     		beq	.L224
 708:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 5041              		.loc 1 708 0
 5042 27c4 07F13803 		add	r3, r7, #56
 5043 27c8 183B     		subs	r3, r3, #24
 5044 27ca 1846     		mov	r0, r3
 5045 27cc FFF7FEFF 		bl	strlen
 5046 27d0 0346     		mov	r3, r0
 5047 27d2 1A46     		mov	r2, r3
 5048 27d4 07F13803 		add	r3, r7, #56
 5049 27d8 183B     		subs	r3, r3, #24
 5050 27da 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 120


 5051 27dc 504A     		ldr	r2, .L299+48
 5052 27de 1068     		ldr	r0, [r2]	@ unaligned
 5053 27e0 1860     		str	r0, [r3]	@ unaligned
 5054 27e2 1279     		ldrb	r2, [r2, #4]
 5055 27e4 1A71     		strb	r2, [r3, #4]
 709:..\src/command_processing.c ****                     }
 710:..\src/command_processing.c ****                     else {
 711:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 712:..\src/command_processing.c ****                     }
 713:..\src/command_processing.c ****                     break;    
 5056              		.loc 1 713 0
 5057 27e6 31E3     		b	.L193
 5058              	.L224:
 711:..\src/command_processing.c ****                     }
 5059              		.loc 1 711 0
 5060 27e8 07F13803 		add	r3, r7, #56
 5061 27ec 183B     		subs	r3, r3, #24
 5062 27ee 1846     		mov	r0, r3
 5063 27f0 FFF7FEFF 		bl	strlen
 5064 27f4 0346     		mov	r3, r0
 5065 27f6 1A46     		mov	r2, r3
 5066 27f8 07F13803 		add	r3, r7, #56
 5067 27fc 183B     		subs	r3, r3, #24
 5068 27fe 1344     		add	r3, r3, r2
 5069 2800 484A     		ldr	r2, .L299+52
 5070 2802 1068     		ldr	r0, [r2]	@ unaligned
 5071 2804 1860     		str	r0, [r3]	@ unaligned
 5072              		.loc 1 713 0
 5073 2806 21E3     		b	.L193
 5074              	.L198:
 714:..\src/command_processing.c ****                 case 4:     // right/lef menu
 715:..\src/command_processing.c ****                     switch(*m_addr){
 5075              		.loc 1 715 0
 5076 2808 07F5B053 		add	r3, r7, #5632
 5077 280c 03F10803 		add	r3, r3, #8
 5078 2810 1B68     		ldr	r3, [r3]
 5079 2812 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5080 2814 002B     		cmp	r3, #0
 5081 2816 02D0     		beq	.L227
 5082 2818 012B     		cmp	r3, #1
 5083 281a 14D0     		beq	.L228
 716:..\src/command_processing.c ****                         case RIGHT_HAND:
 717:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 718:..\src/command_processing.c ****                         break;
 719:..\src/command_processing.c ****                         case LEFT_HAND:
 720:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 721:..\src/command_processing.c ****                         break;
 722:..\src/command_processing.c ****                     }
 723:..\src/command_processing.c ****                     break;
 5084              		.loc 1 723 0
 5085 281c 16E3     		b	.L193
 5086              	.L227:
 717:..\src/command_processing.c ****                         break;
 5087              		.loc 1 717 0
 5088 281e 07F13803 		add	r3, r7, #56
 5089 2822 183B     		subs	r3, r3, #24
 5090 2824 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 121


 5091 2826 FFF7FEFF 		bl	strlen
 5092 282a 0346     		mov	r3, r0
 5093 282c 1A46     		mov	r2, r3
 5094 282e 07F13803 		add	r3, r7, #56
 5095 2832 183B     		subs	r3, r3, #24
 5096 2834 1344     		add	r3, r3, r2
 5097 2836 3C4A     		ldr	r2, .L299+56
 5098 2838 1068     		ldr	r0, [r2]	@ unaligned
 5099 283a 1860     		str	r0, [r3]	@ unaligned
 5100 283c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5101 283e 9279     		ldrb	r2, [r2, #6]
 5102 2840 9980     		strh	r1, [r3, #4]	@ unaligned
 5103 2842 9A71     		strb	r2, [r3, #6]
 718:..\src/command_processing.c ****                         case LEFT_HAND:
 5104              		.loc 1 718 0
 5105 2844 11E0     		b	.L226
 5106              	.L228:
 720:..\src/command_processing.c ****                         break;
 5107              		.loc 1 720 0
 5108 2846 07F13803 		add	r3, r7, #56
 5109 284a 183B     		subs	r3, r3, #24
 5110 284c 1846     		mov	r0, r3
 5111 284e FFF7FEFF 		bl	strlen
 5112 2852 0346     		mov	r3, r0
 5113 2854 1A46     		mov	r2, r3
 5114 2856 07F13803 		add	r3, r7, #56
 5115 285a 183B     		subs	r3, r3, #24
 5116 285c 1344     		add	r3, r3, r2
 5117 285e 334A     		ldr	r2, .L299+60
 5118 2860 1068     		ldr	r0, [r2]	@ unaligned
 5119 2862 1860     		str	r0, [r3]	@ unaligned
 5120 2864 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5121 2866 9A80     		strh	r2, [r3, #4]	@ unaligned
 721:..\src/command_processing.c ****                     }
 5122              		.loc 1 721 0
 5123 2868 00BF     		nop
 5124              	.L226:
 5125              		.loc 1 723 0
 5126 286a EFE2     		b	.L193
 5127              	.L199:
 724:..\src/command_processing.c ****                 case 5:     // on/off menu
 725:..\src/command_processing.c ****                     switch(*m_addr){
 5128              		.loc 1 725 0
 5129 286c 07F5B053 		add	r3, r7, #5632
 5130 2870 03F10803 		add	r3, r3, #8
 5131 2874 1B68     		ldr	r3, [r3]
 5132 2876 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5133 2878 002B     		cmp	r3, #0
 5134 287a 02D0     		beq	.L230
 5135 287c 012B     		cmp	r3, #1
 5136 287e 12D0     		beq	.L231
 726:..\src/command_processing.c ****                         case 0:
 727:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 728:..\src/command_processing.c ****                         break;
 729:..\src/command_processing.c ****                         case 1:
 730:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 731:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 122


 732:..\src/command_processing.c ****                     }
 733:..\src/command_processing.c ****                     break;
 5137              		.loc 1 733 0
 5138 2880 E4E2     		b	.L193
 5139              	.L230:
 727:..\src/command_processing.c ****                         break;
 5140              		.loc 1 727 0
 5141 2882 07F13803 		add	r3, r7, #56
 5142 2886 183B     		subs	r3, r3, #24
 5143 2888 1846     		mov	r0, r3
 5144 288a FFF7FEFF 		bl	strlen
 5145 288e 0346     		mov	r3, r0
 5146 2890 1A46     		mov	r2, r3
 5147 2892 07F13803 		add	r3, r7, #56
 5148 2896 183B     		subs	r3, r3, #24
 5149 2898 1344     		add	r3, r3, r2
 5150 289a 254A     		ldr	r2, .L299+64
 5151 289c 1068     		ldr	r0, [r2]	@ unaligned
 5152 289e 1860     		str	r0, [r3]	@ unaligned
 5153 28a0 1279     		ldrb	r2, [r2, #4]
 5154 28a2 1A71     		strb	r2, [r3, #4]
 728:..\src/command_processing.c ****                         case 1:
 5155              		.loc 1 728 0
 5156 28a4 0FE0     		b	.L229
 5157              	.L231:
 730:..\src/command_processing.c ****                         break;
 5158              		.loc 1 730 0
 5159 28a6 07F13803 		add	r3, r7, #56
 5160 28aa 183B     		subs	r3, r3, #24
 5161 28ac 1846     		mov	r0, r3
 5162 28ae FFF7FEFF 		bl	strlen
 5163 28b2 0346     		mov	r3, r0
 5164 28b4 1A46     		mov	r2, r3
 5165 28b6 07F13803 		add	r3, r7, #56
 5166 28ba 183B     		subs	r3, r3, #24
 5167 28bc 1344     		add	r3, r3, r2
 5168 28be 1D4A     		ldr	r2, .L299+68
 5169 28c0 1068     		ldr	r0, [r2]	@ unaligned
 5170 28c2 1860     		str	r0, [r3]	@ unaligned
 731:..\src/command_processing.c ****                     }
 5171              		.loc 1 731 0
 5172 28c4 00BF     		nop
 5173              	.L229:
 5174              		.loc 1 733 0
 5175 28c6 C1E2     		b	.L193
 5176              	.L200:
 734:..\src/command_processing.c ****                 case 6:     // expansion port menu
 735:..\src/command_processing.c ****                     switch(*m_addr){
 5177              		.loc 1 735 0
 5178 28c8 07F5B053 		add	r3, r7, #5632
 5179 28cc 03F10803 		add	r3, r3, #8
 5180 28d0 1B68     		ldr	r3, [r3]
 5181 28d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5182 28d4 032B     		cmp	r3, #3
 5183 28d6 00F2B682 		bhi	.L280
 5184 28da 01A2     		adr	r2, .L234
 5185 28dc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 123


 5186              		.p2align 2
 5187              	.L234:
 5188 28e0 39290000 		.word	.L233+1
 5189 28e4 5D290000 		.word	.L235+1
 5190 28e8 89290000 		.word	.L236+1
 5191 28ec B7290000 		.word	.L237+1
 5192              		.p2align 1
 5193              	.L300:
 5194              		.align	2
 5195              	.L299:
 5196 28f0 00000000 		.word	.LC88
 5197 28f4 08000000 		.word	.LC89
 5198 28f8 10000000 		.word	.LC90
 5199 28fc 24000000 		.word	.LC91
 5200 2900 34000000 		.word	.LC92
 5201 2904 40000000 		.word	.LC93
 5202 2908 54000000 		.word	.LC94
 5203 290c 60000000 		.word	.LC95
 5204 2910 84000000 		.word	.LC96
 5205 2914 90000000 		.word	.LC97
 5206 2918 98000000 		.word	.LC98
 5207 291c A4000000 		.word	.LC99
 5208 2920 BC000000 		.word	.LC100
 5209 2924 C4000000 		.word	.LC101
 5210 2928 CC000000 		.word	.LC102
 5211 292c D4000000 		.word	.LC103
 5212 2930 DC000000 		.word	.LC104
 5213 2934 E4000000 		.word	.LC105
 5214              	.L233:
 736:..\src/command_processing.c ****                         case EXP_NONE:
 737:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 5215              		.loc 1 737 0
 5216 2938 07F13803 		add	r3, r7, #56
 5217 293c 183B     		subs	r3, r3, #24
 5218 293e 1846     		mov	r0, r3
 5219 2940 FFF7FEFF 		bl	strlen
 5220 2944 0346     		mov	r3, r0
 5221 2946 1A46     		mov	r2, r3
 5222 2948 07F13803 		add	r3, r7, #56
 5223 294c 183B     		subs	r3, r3, #24
 5224 294e 1344     		add	r3, r3, r2
 5225 2950 D34A     		ldr	r2, .L301
 5226 2952 1068     		ldr	r0, [r2]	@ unaligned
 5227 2954 1860     		str	r0, [r3]	@ unaligned
 5228 2956 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5229 2958 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                             break;
 5230              		.loc 1 738 0
 5231 295a 42E0     		b	.L232
 5232              	.L235:
 739:..\src/command_processing.c ****                         case EXP_SD_RTC:
 740:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 5233              		.loc 1 740 0
 5234 295c 07F13803 		add	r3, r7, #56
 5235 2960 183B     		subs	r3, r3, #24
 5236 2962 1846     		mov	r0, r3
 5237 2964 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 124


 5238 2968 0346     		mov	r3, r0
 5239 296a 1A46     		mov	r2, r3
 5240 296c 07F13803 		add	r3, r7, #56
 5241 2970 183B     		subs	r3, r3, #24
 5242 2972 1344     		add	r3, r3, r2
 5243 2974 CB4A     		ldr	r2, .L301+4
 5244 2976 1C46     		mov	r4, r3
 5245 2978 1346     		mov	r3, r2
 5246 297a 07CB     		ldmia	r3!, {r0, r1, r2}
 5247 297c 2060     		str	r0, [r4]	@ unaligned
 5248 297e 6160     		str	r1, [r4, #4]	@ unaligned
 5249 2980 A260     		str	r2, [r4, #8]	@ unaligned
 5250 2982 1B88     		ldrh	r3, [r3]	@ unaligned
 5251 2984 A381     		strh	r3, [r4, #12]	@ unaligned
 741:..\src/command_processing.c ****                             break;
 5252              		.loc 1 741 0
 5253 2986 2CE0     		b	.L232
 5254              	.L236:
 742:..\src/command_processing.c ****                         case EXP_WIFI:
 743:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 5255              		.loc 1 743 0
 5256 2988 07F13803 		add	r3, r7, #56
 5257 298c 183B     		subs	r3, r3, #24
 5258 298e 1846     		mov	r0, r3
 5259 2990 FFF7FEFF 		bl	strlen
 5260 2994 0346     		mov	r3, r0
 5261 2996 1A46     		mov	r2, r3
 5262 2998 07F13803 		add	r3, r7, #56
 5263 299c 183B     		subs	r3, r3, #24
 5264 299e 1344     		add	r3, r3, r2
 5265 29a0 C14A     		ldr	r2, .L301+8
 5266 29a2 1D46     		mov	r5, r3
 5267 29a4 1446     		mov	r4, r2
 5268 29a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5269 29a8 2860     		str	r0, [r5]	@ unaligned
 5270 29aa 6960     		str	r1, [r5, #4]	@ unaligned
 5271 29ac AA60     		str	r2, [r5, #8]	@ unaligned
 5272 29ae EB60     		str	r3, [r5, #12]	@ unaligned
 5273 29b0 2388     		ldrh	r3, [r4]	@ unaligned
 5274 29b2 2B82     		strh	r3, [r5, #16]	@ unaligned
 744:..\src/command_processing.c ****         					break;
 5275              		.loc 1 744 0
 5276 29b4 15E0     		b	.L232
 5277              	.L237:
 745:..\src/command_processing.c ****                         case EXP_OTHER:
 746:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 5278              		.loc 1 746 0
 5279 29b6 07F13803 		add	r3, r7, #56
 5280 29ba 183B     		subs	r3, r3, #24
 5281 29bc 1846     		mov	r0, r3
 5282 29be FFF7FEFF 		bl	strlen
 5283 29c2 0346     		mov	r3, r0
 5284 29c4 1A46     		mov	r2, r3
 5285 29c6 07F13803 		add	r3, r7, #56
 5286 29ca 183B     		subs	r3, r3, #24
 5287 29cc 1344     		add	r3, r3, r2
 5288 29ce B74A     		ldr	r2, .L301+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 125


 5289 29d0 1C46     		mov	r4, r3
 5290 29d2 1346     		mov	r3, r2
 5291 29d4 07CB     		ldmia	r3!, {r0, r1, r2}
 5292 29d6 2060     		str	r0, [r4]	@ unaligned
 5293 29d8 6160     		str	r1, [r4, #4]	@ unaligned
 5294 29da A260     		str	r2, [r4, #8]	@ unaligned
 5295 29dc 1B78     		ldrb	r3, [r3]
 5296 29de 2373     		strb	r3, [r4, #12]
 747:..\src/command_processing.c ****         					break;
 5297              		.loc 1 747 0
 5298 29e0 00BF     		nop
 5299              	.L232:
 748:..\src/command_processing.c ****                     }
 749:..\src/command_processing.c ****                     break;
 5300              		.loc 1 749 0
 5301 29e2 30E2     		b	.L280
 5302              	.L201:
 750:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 751:..\src/command_processing.c ****                     switch(*m_addr){
 5303              		.loc 1 751 0
 5304 29e4 07F5B053 		add	r3, r7, #5632
 5305 29e8 03F10803 		add	r3, r3, #8
 5306 29ec 1B68     		ldr	r3, [r3]
 5307 29ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5308 29f0 012B     		cmp	r3, #1
 5309 29f2 16D0     		beq	.L239
 5310 29f4 022B     		cmp	r3, #2
 5311 29f6 26D0     		beq	.L240
 5312 29f8 002B     		cmp	r3, #0
 5313 29fa 00D0     		beq	.L241
 752:..\src/command_processing.c ****                         case 0: 
 753:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 754:..\src/command_processing.c ****                             break;
 755:..\src/command_processing.c ****                         case 1: 
 756:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 757:..\src/command_processing.c ****                             break;
 758:..\src/command_processing.c ****                         case 2: 
 759:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 760:..\src/command_processing.c ****                             break;
 761:..\src/command_processing.c ****                         default:
 762:..\src/command_processing.c ****                             break;
 5314              		.loc 1 762 0
 5315 29fc 35E0     		b	.L242
 5316              	.L241:
 753:..\src/command_processing.c ****                             break;
 5317              		.loc 1 753 0
 5318 29fe 07F13803 		add	r3, r7, #56
 5319 2a02 183B     		subs	r3, r3, #24
 5320 2a04 1846     		mov	r0, r3
 5321 2a06 FFF7FEFF 		bl	strlen
 5322 2a0a 0346     		mov	r3, r0
 5323 2a0c 1A46     		mov	r2, r3
 5324 2a0e 07F13803 		add	r3, r7, #56
 5325 2a12 183B     		subs	r3, r3, #24
 5326 2a14 1344     		add	r3, r3, r2
 5327 2a16 A24A     		ldr	r2, .L301
 5328 2a18 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 126


 5329 2a1a 1860     		str	r0, [r3]	@ unaligned
 5330 2a1c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5331 2a1e 9A80     		strh	r2, [r3, #4]	@ unaligned
 754:..\src/command_processing.c ****                         case 1: 
 5332              		.loc 1 754 0
 5333 2a20 23E0     		b	.L242
 5334              	.L239:
 756:..\src/command_processing.c ****                             break;
 5335              		.loc 1 756 0
 5336 2a22 07F13803 		add	r3, r7, #56
 5337 2a26 183B     		subs	r3, r3, #24
 5338 2a28 1846     		mov	r0, r3
 5339 2a2a FFF7FEFF 		bl	strlen
 5340 2a2e 0346     		mov	r3, r0
 5341 2a30 1A46     		mov	r2, r3
 5342 2a32 07F13803 		add	r3, r7, #56
 5343 2a36 183B     		subs	r3, r3, #24
 5344 2a38 1344     		add	r3, r3, r2
 5345 2a3a 9D4A     		ldr	r2, .L301+16
 5346 2a3c 1068     		ldr	r0, [r2]	@ unaligned
 5347 2a3e 1860     		str	r0, [r3]	@ unaligned
 5348 2a40 1279     		ldrb	r2, [r2, #4]
 5349 2a42 1A71     		strb	r2, [r3, #4]
 757:..\src/command_processing.c ****                         case 2: 
 5350              		.loc 1 757 0
 5351 2a44 11E0     		b	.L242
 5352              	.L240:
 759:..\src/command_processing.c ****                             break;
 5353              		.loc 1 759 0
 5354 2a46 07F13803 		add	r3, r7, #56
 5355 2a4a 183B     		subs	r3, r3, #24
 5356 2a4c 1846     		mov	r0, r3
 5357 2a4e FFF7FEFF 		bl	strlen
 5358 2a52 0346     		mov	r3, r0
 5359 2a54 1A46     		mov	r2, r3
 5360 2a56 07F13803 		add	r3, r7, #56
 5361 2a5a 183B     		subs	r3, r3, #24
 5362 2a5c 1344     		add	r3, r3, r2
 5363 2a5e 954A     		ldr	r2, .L301+20
 5364 2a60 1068     		ldr	r0, [r2]	@ unaligned
 5365 2a62 1860     		str	r0, [r3]	@ unaligned
 5366 2a64 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5367 2a66 9A80     		strh	r2, [r3, #4]	@ unaligned
 760:..\src/command_processing.c ****                         default:
 5368              		.loc 1 760 0
 5369 2a68 00BF     		nop
 5370              	.L242:
 763:..\src/command_processing.c ****                     } 
 764:..\src/command_processing.c ****                     break;
 5371              		.loc 1 764 0 discriminator 12
 5372 2a6a EFE1     		b	.L193
 5373              	.L202:
 765:..\src/command_processing.c ****                 case 8:     // user menu          
 766:..\src/command_processing.c ****                     switch(*m_addr){
 5374              		.loc 1 766 0
 5375 2a6c 07F5B053 		add	r3, r7, #5632
 5376 2a70 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 127


 5377 2a74 1B68     		ldr	r3, [r3]
 5378 2a76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5379 2a78 012B     		cmp	r3, #1
 5380 2a7a 1AD0     		beq	.L244
 5381 2a7c 022B     		cmp	r3, #2
 5382 2a7e 2CD0     		beq	.L245
 5383 2a80 002B     		cmp	r3, #0
 5384 2a82 00D0     		beq	.L246
 767:..\src/command_processing.c ****                         case GENERIC_USER:
 768:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 769:..\src/command_processing.c ****                         break;
 770:..\src/command_processing.c ****                         case MARIA:
 771:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 772:..\src/command_processing.c ****                         break;
 773:..\src/command_processing.c ****                         case ROZA:
 774:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 775:..\src/command_processing.c ****                         break;
 776:..\src/command_processing.c ****                     }   
 777:..\src/command_processing.c ****                     break;                    
 5385              		.loc 1 777 0
 5386 2a84 E2E1     		b	.L193
 5387              	.L246:
 768:..\src/command_processing.c ****                         break;
 5388              		.loc 1 768 0
 5389 2a86 07F13803 		add	r3, r7, #56
 5390 2a8a 183B     		subs	r3, r3, #24
 5391 2a8c 1846     		mov	r0, r3
 5392 2a8e FFF7FEFF 		bl	strlen
 5393 2a92 0346     		mov	r3, r0
 5394 2a94 1A46     		mov	r2, r3
 5395 2a96 07F13803 		add	r3, r7, #56
 5396 2a9a 183B     		subs	r3, r3, #24
 5397 2a9c 1344     		add	r3, r3, r2
 5398 2a9e 864A     		ldr	r2, .L301+24
 5399 2aa0 1C46     		mov	r4, r3
 5400 2aa2 1346     		mov	r3, r2
 5401 2aa4 07CB     		ldmia	r3!, {r0, r1, r2}
 5402 2aa6 2060     		str	r0, [r4]	@ unaligned
 5403 2aa8 6160     		str	r1, [r4, #4]	@ unaligned
 5404 2aaa A260     		str	r2, [r4, #8]	@ unaligned
 5405 2aac 1B88     		ldrh	r3, [r3]	@ unaligned
 5406 2aae A381     		strh	r3, [r4, #12]	@ unaligned
 769:..\src/command_processing.c ****                         case MARIA:
 5407              		.loc 1 769 0
 5408 2ab0 25E0     		b	.L243
 5409              	.L244:
 771:..\src/command_processing.c ****                         break;
 5410              		.loc 1 771 0
 5411 2ab2 07F13803 		add	r3, r7, #56
 5412 2ab6 183B     		subs	r3, r3, #24
 5413 2ab8 1846     		mov	r0, r3
 5414 2aba FFF7FEFF 		bl	strlen
 5415 2abe 0346     		mov	r3, r0
 5416 2ac0 1A46     		mov	r2, r3
 5417 2ac2 07F13803 		add	r3, r7, #56
 5418 2ac6 183B     		subs	r3, r3, #24
 5419 2ac8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 128


 5420 2aca 7C4A     		ldr	r2, .L301+28
 5421 2acc 1068     		ldr	r0, [r2]	@ unaligned
 5422 2ace 1860     		str	r0, [r3]	@ unaligned
 5423 2ad0 9188     		ldrh	r1, [r2, #4]	@ unaligned
 5424 2ad2 9279     		ldrb	r2, [r2, #6]
 5425 2ad4 9980     		strh	r1, [r3, #4]	@ unaligned
 5426 2ad6 9A71     		strb	r2, [r3, #6]
 772:..\src/command_processing.c ****                         case ROZA:
 5427              		.loc 1 772 0
 5428 2ad8 11E0     		b	.L243
 5429              	.L245:
 774:..\src/command_processing.c ****                         break;
 5430              		.loc 1 774 0
 5431 2ada 07F13803 		add	r3, r7, #56
 5432 2ade 183B     		subs	r3, r3, #24
 5433 2ae0 1846     		mov	r0, r3
 5434 2ae2 FFF7FEFF 		bl	strlen
 5435 2ae6 0346     		mov	r3, r0
 5436 2ae8 1A46     		mov	r2, r3
 5437 2aea 07F13803 		add	r3, r7, #56
 5438 2aee 183B     		subs	r3, r3, #24
 5439 2af0 1344     		add	r3, r3, r2
 5440 2af2 734A     		ldr	r2, .L301+32
 5441 2af4 1068     		ldr	r0, [r2]	@ unaligned
 5442 2af6 1860     		str	r0, [r3]	@ unaligned
 5443 2af8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 5444 2afa 9A80     		strh	r2, [r3, #4]	@ unaligned
 775:..\src/command_processing.c ****                     }   
 5445              		.loc 1 775 0
 5446 2afc 00BF     		nop
 5447              	.L243:
 5448              		.loc 1 777 0
 5449 2afe A5E1     		b	.L193
 5450              	.L203:
 778:..\src/command_processing.c ****                 case 9:     // driver type menu
 779:..\src/command_processing.c ****                     switch(*m_addr){
 5451              		.loc 1 779 0
 5452 2b00 07F5B053 		add	r3, r7, #5632
 5453 2b04 03F10803 		add	r3, r3, #8
 5454 2b08 1B68     		ldr	r3, [r3]
 5455 2b0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5456 2b0c 002B     		cmp	r3, #0
 5457 2b0e 02D0     		beq	.L248
 5458 2b10 012B     		cmp	r3, #1
 5459 2b12 17D0     		beq	.L249
 780:..\src/command_processing.c ****                         case 0:
 781:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 782:..\src/command_processing.c ****                         break;
 783:..\src/command_processing.c ****                         case 1:
 784:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 785:..\src/command_processing.c ****                         break;
 786:..\src/command_processing.c ****                     }
 787:..\src/command_processing.c ****                     break;
 5460              		.loc 1 787 0
 5461 2b14 9AE1     		b	.L193
 5462              	.L248:
 781:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 129


 5463              		.loc 1 781 0
 5464 2b16 07F13803 		add	r3, r7, #56
 5465 2b1a 183B     		subs	r3, r3, #24
 5466 2b1c 1846     		mov	r0, r3
 5467 2b1e FFF7FEFF 		bl	strlen
 5468 2b22 0346     		mov	r3, r0
 5469 2b24 1A46     		mov	r2, r3
 5470 2b26 07F13803 		add	r3, r7, #56
 5471 2b2a 183B     		subs	r3, r3, #24
 5472 2b2c 1344     		add	r3, r3, r2
 5473 2b2e 654A     		ldr	r2, .L301+36
 5474 2b30 1D46     		mov	r5, r3
 5475 2b32 1446     		mov	r4, r2
 5476 2b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5477 2b36 2860     		str	r0, [r5]	@ unaligned
 5478 2b38 6960     		str	r1, [r5, #4]	@ unaligned
 5479 2b3a AA60     		str	r2, [r5, #8]	@ unaligned
 5480 2b3c EB60     		str	r3, [r5, #12]	@ unaligned
 5481 2b3e 2068     		ldr	r0, [r4]	@ unaligned
 5482 2b40 2861     		str	r0, [r5, #16]	@ unaligned
 782:..\src/command_processing.c ****                         case 1:
 5483              		.loc 1 782 0
 5484 2b42 18E0     		b	.L247
 5485              	.L249:
 784:..\src/command_processing.c ****                         break;
 5486              		.loc 1 784 0
 5487 2b44 07F13803 		add	r3, r7, #56
 5488 2b48 183B     		subs	r3, r3, #24
 5489 2b4a 1846     		mov	r0, r3
 5490 2b4c FFF7FEFF 		bl	strlen
 5491 2b50 0346     		mov	r3, r0
 5492 2b52 1A46     		mov	r2, r3
 5493 2b54 07F13803 		add	r3, r7, #56
 5494 2b58 183B     		subs	r3, r3, #24
 5495 2b5a 1344     		add	r3, r3, r2
 5496 2b5c 5A4A     		ldr	r2, .L301+40
 5497 2b5e 1D46     		mov	r5, r3
 5498 2b60 1446     		mov	r4, r2
 5499 2b62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5500 2b64 2860     		str	r0, [r5]	@ unaligned
 5501 2b66 6960     		str	r1, [r5, #4]	@ unaligned
 5502 2b68 AA60     		str	r2, [r5, #8]	@ unaligned
 5503 2b6a EB60     		str	r3, [r5, #12]	@ unaligned
 5504 2b6c 2068     		ldr	r0, [r4]	@ unaligned
 5505 2b6e 2861     		str	r0, [r5, #16]	@ unaligned
 5506 2b70 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5507 2b72 AB82     		strh	r3, [r5, #20]	@ unaligned
 785:..\src/command_processing.c ****                     }
 5508              		.loc 1 785 0
 5509 2b74 00BF     		nop
 5510              	.L247:
 5511              		.loc 1 787 0
 5512 2b76 69E1     		b	.L193
 5513              	.L204:
 788:..\src/command_processing.c ****                 case 10:    // device type menu
 789:..\src/command_processing.c ****                     switch(*m_addr){
 5514              		.loc 1 789 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 130


 5515 2b78 07F5B053 		add	r3, r7, #5632
 5516 2b7c 03F10803 		add	r3, r3, #8
 5517 2b80 1B68     		ldr	r3, [r3]
 5518 2b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5519 2b84 042B     		cmp	r3, #4
 5520 2b86 00F26081 		bhi	.L281
 5521 2b8a 01A2     		adr	r2, .L252
 5522 2b8c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5523              		.p2align 2
 5524              	.L252:
 5525 2b90 A52B0000 		.word	.L251+1
 5526 2b94 D12B0000 		.word	.L253+1
 5527 2b98 FF2B0000 		.word	.L254+1
 5528 2b9c 2B2C0000 		.word	.L255+1
 5529 2ba0 552C0000 		.word	.L256+1
 5530              		.p2align 1
 5531              	.L251:
 790:..\src/command_processing.c ****                         case 0:
 791:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 5532              		.loc 1 791 0
 5533 2ba4 07F13803 		add	r3, r7, #56
 5534 2ba8 183B     		subs	r3, r3, #24
 5535 2baa 1846     		mov	r0, r3
 5536 2bac FFF7FEFF 		bl	strlen
 5537 2bb0 0346     		mov	r3, r0
 5538 2bb2 1A46     		mov	r2, r3
 5539 2bb4 07F13803 		add	r3, r7, #56
 5540 2bb8 183B     		subs	r3, r3, #24
 5541 2bba 1344     		add	r3, r3, r2
 5542 2bbc 434A     		ldr	r2, .L301+44
 5543 2bbe 1C46     		mov	r4, r3
 5544 2bc0 1346     		mov	r3, r2
 5545 2bc2 07CB     		ldmia	r3!, {r0, r1, r2}
 5546 2bc4 2060     		str	r0, [r4]	@ unaligned
 5547 2bc6 6160     		str	r1, [r4, #4]	@ unaligned
 5548 2bc8 A260     		str	r2, [r4, #8]	@ unaligned
 5549 2bca 1B88     		ldrh	r3, [r3]	@ unaligned
 5550 2bcc A381     		strh	r3, [r4, #12]	@ unaligned
 792:..\src/command_processing.c ****                         break;
 5551              		.loc 1 792 0
 5552 2bce 5BE0     		b	.L250
 5553              	.L253:
 793:..\src/command_processing.c ****                         case 1:
 794:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 5554              		.loc 1 794 0
 5555 2bd0 07F13803 		add	r3, r7, #56
 5556 2bd4 183B     		subs	r3, r3, #24
 5557 2bd6 1846     		mov	r0, r3
 5558 2bd8 FFF7FEFF 		bl	strlen
 5559 2bdc 0346     		mov	r3, r0
 5560 2bde 1A46     		mov	r2, r3
 5561 2be0 07F13803 		add	r3, r7, #56
 5562 2be4 183B     		subs	r3, r3, #24
 5563 2be6 1344     		add	r3, r3, r2
 5564 2be8 394A     		ldr	r2, .L301+48
 5565 2bea 1D46     		mov	r5, r3
 5566 2bec 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 131


 5567 2bee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5568 2bf0 2860     		str	r0, [r5]	@ unaligned
 5569 2bf2 6960     		str	r1, [r5, #4]	@ unaligned
 5570 2bf4 AA60     		str	r2, [r5, #8]	@ unaligned
 5571 2bf6 EB60     		str	r3, [r5, #12]	@ unaligned
 5572 2bf8 2388     		ldrh	r3, [r4]	@ unaligned
 5573 2bfa 2B82     		strh	r3, [r5, #16]	@ unaligned
 795:..\src/command_processing.c ****                         break;
 5574              		.loc 1 795 0
 5575 2bfc 44E0     		b	.L250
 5576              	.L254:
 796:..\src/command_processing.c ****                         case 2:
 797:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 5577              		.loc 1 797 0
 5578 2bfe 07F13803 		add	r3, r7, #56
 5579 2c02 183B     		subs	r3, r3, #24
 5580 2c04 1846     		mov	r0, r3
 5581 2c06 FFF7FEFF 		bl	strlen
 5582 2c0a 0346     		mov	r3, r0
 5583 2c0c 1A46     		mov	r2, r3
 5584 2c0e 07F13803 		add	r3, r7, #56
 5585 2c12 183B     		subs	r3, r3, #24
 5586 2c14 1344     		add	r3, r3, r2
 5587 2c16 2F4A     		ldr	r2, .L301+52
 5588 2c18 1C46     		mov	r4, r3
 5589 2c1a 1346     		mov	r3, r2
 5590 2c1c 07CB     		ldmia	r3!, {r0, r1, r2}
 5591 2c1e 2060     		str	r0, [r4]	@ unaligned
 5592 2c20 6160     		str	r1, [r4, #4]	@ unaligned
 5593 2c22 A260     		str	r2, [r4, #8]	@ unaligned
 5594 2c24 1B88     		ldrh	r3, [r3]	@ unaligned
 5595 2c26 A381     		strh	r3, [r4, #12]	@ unaligned
 798:..\src/command_processing.c ****                         break;
 5596              		.loc 1 798 0
 5597 2c28 2EE0     		b	.L250
 5598              	.L255:
 799:..\src/command_processing.c ****                         case 3:
 800:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 5599              		.loc 1 800 0
 5600 2c2a 07F13803 		add	r3, r7, #56
 5601 2c2e 183B     		subs	r3, r3, #24
 5602 2c30 1846     		mov	r0, r3
 5603 2c32 FFF7FEFF 		bl	strlen
 5604 2c36 0346     		mov	r3, r0
 5605 2c38 1A46     		mov	r2, r3
 5606 2c3a 07F13803 		add	r3, r7, #56
 5607 2c3e 183B     		subs	r3, r3, #24
 5608 2c40 1344     		add	r3, r3, r2
 5609 2c42 254A     		ldr	r2, .L301+56
 5610 2c44 1C46     		mov	r4, r3
 5611 2c46 1546     		mov	r5, r2
 5612 2c48 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5613 2c4a 2060     		str	r0, [r4]	@ unaligned
 5614 2c4c 6160     		str	r1, [r4, #4]	@ unaligned
 5615 2c4e A260     		str	r2, [r4, #8]	@ unaligned
 5616 2c50 E360     		str	r3, [r4, #12]	@ unaligned
 801:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 132


 5617              		.loc 1 801 0
 5618 2c52 19E0     		b	.L250
 5619              	.L256:
 802:..\src/command_processing.c ****                         case 4:
 803:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND 2 MOTORS\0");
 5620              		.loc 1 803 0
 5621 2c54 07F13803 		add	r3, r7, #56
 5622 2c58 183B     		subs	r3, r3, #24
 5623 2c5a 1846     		mov	r0, r3
 5624 2c5c FFF7FEFF 		bl	strlen
 5625 2c60 0346     		mov	r3, r0
 5626 2c62 1A46     		mov	r2, r3
 5627 2c64 07F13803 		add	r3, r7, #56
 5628 2c68 183B     		subs	r3, r3, #24
 5629 2c6a 1344     		add	r3, r3, r2
 5630 2c6c 1B4A     		ldr	r2, .L301+60
 5631 2c6e 1D46     		mov	r5, r3
 5632 2c70 1446     		mov	r4, r2
 5633 2c72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5634 2c74 2860     		str	r0, [r5]	@ unaligned
 5635 2c76 6960     		str	r1, [r5, #4]	@ unaligned
 5636 2c78 AA60     		str	r2, [r5, #8]	@ unaligned
 5637 2c7a EB60     		str	r3, [r5, #12]	@ unaligned
 5638 2c7c 2388     		ldrh	r3, [r4]	@ unaligned
 5639 2c7e A278     		ldrb	r2, [r4, #2]
 5640 2c80 2B82     		strh	r3, [r5, #16]	@ unaligned
 5641 2c82 1346     		mov	r3, r2
 5642 2c84 AB74     		strb	r3, [r5, #18]
 804:..\src/command_processing.c ****                         break;
 5643              		.loc 1 804 0
 5644 2c86 00BF     		nop
 5645              	.L250:
 805:..\src/command_processing.c ****                     }
 806:..\src/command_processing.c ****                     break;
 5646              		.loc 1 806 0
 5647 2c88 DFE0     		b	.L281
 5648              	.L205:
 807:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 808:..\src/command_processing.c ****                     switch(*m_addr){
 5649              		.loc 1 808 0
 5650 2c8a 07F5B053 		add	r3, r7, #5632
 5651 2c8e 03F10803 		add	r3, r3, #8
 5652 2c92 1B68     		ldr	r3, [r3]
 5653 2c94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5654 2c96 002B     		cmp	r3, #0
 5655 2c98 22D0     		beq	.L258
 5656 2c9a 012B     		cmp	r3, #1
 5657 2c9c 5AD0     		beq	.L259
 809:..\src/command_processing.c ****                         case 0:
 810:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 811:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 812:..\src/command_processing.c ****                             }
 813:..\src/command_processing.c ****                             else {
 814:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:wrist, Slow:hand\0");
 815:..\src/command_processing.c ****                             }                            
 816:..\src/command_processing.c ****                         break;
 817:..\src/command_processing.c ****                         case 1:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 133


 818:..\src/command_processing.c ****                             if (c_mem.dev.dev_type == SOFTHAND_2_MOTORS){
 819:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 820:..\src/command_processing.c ****                             }
 821:..\src/command_processing.c ****                             else {
 822:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:wrist, Fast:hand\0");
 823:..\src/command_processing.c ****                             }
 824:..\src/command_processing.c ****                         break;
 825:..\src/command_processing.c ****                     }
 826:..\src/command_processing.c ****                     break;
 5658              		.loc 1 826 0
 5659 2c9e D5E0     		b	.L193
 5660              	.L302:
 5661              		.align	2
 5662              	.L301:
 5663 2ca0 EC000000 		.word	.LC106
 5664 2ca4 F4000000 		.word	.LC107
 5665 2ca8 04010000 		.word	.LC108
 5666 2cac 18010000 		.word	.LC109
 5667 2cb0 28010000 		.word	.LC110
 5668 2cb4 30010000 		.word	.LC111
 5669 2cb8 38010000 		.word	.LC112
 5670 2cbc 48010000 		.word	.LC113
 5671 2cc0 50010000 		.word	.LC114
 5672 2cc4 58010000 		.word	.LC115
 5673 2cc8 70010000 		.word	.LC116
 5674 2ccc 88010000 		.word	.LC117
 5675 2cd0 98010000 		.word	.LC118
 5676 2cd4 AC010000 		.word	.LC119
 5677 2cd8 BC010000 		.word	.LC120
 5678 2cdc D0010000 		.word	.LC121
 5679              	.L258:
 810:..\src/command_processing.c ****                                 strcat(aux_str, " Fast:syn2, Slow:syn1\0");
 5680              		.loc 1 810 0
 5681 2ce0 D24B     		ldr	r3, .L303
 5682 2ce2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5683 2ce6 042B     		cmp	r3, #4
 5684 2ce8 18D1     		bne	.L260
 811:..\src/command_processing.c ****                             }
 5685              		.loc 1 811 0
 5686 2cea 07F13803 		add	r3, r7, #56
 5687 2cee 183B     		subs	r3, r3, #24
 5688 2cf0 1846     		mov	r0, r3
 5689 2cf2 FFF7FEFF 		bl	strlen
 5690 2cf6 0346     		mov	r3, r0
 5691 2cf8 1A46     		mov	r2, r3
 5692 2cfa 07F13803 		add	r3, r7, #56
 5693 2cfe 183B     		subs	r3, r3, #24
 5694 2d00 1344     		add	r3, r3, r2
 5695 2d02 CB4A     		ldr	r2, .L303+4
 5696 2d04 1D46     		mov	r5, r3
 5697 2d06 1446     		mov	r4, r2
 5698 2d08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5699 2d0a 2860     		str	r0, [r5]	@ unaligned
 5700 2d0c 6960     		str	r1, [r5, #4]	@ unaligned
 5701 2d0e AA60     		str	r2, [r5, #8]	@ unaligned
 5702 2d10 EB60     		str	r3, [r5, #12]	@ unaligned
 5703 2d12 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 134


 5704 2d14 2861     		str	r0, [r5, #16]	@ unaligned
 5705 2d16 A388     		ldrh	r3, [r4, #4]	@ unaligned
 5706 2d18 AB82     		strh	r3, [r5, #20]	@ unaligned
 816:..\src/command_processing.c ****                         case 1:
 5707              		.loc 1 816 0
 5708 2d1a 55E0     		b	.L257
 5709              	.L260:
 814:..\src/command_processing.c ****                             }                            
 5710              		.loc 1 814 0
 5711 2d1c 07F13803 		add	r3, r7, #56
 5712 2d20 183B     		subs	r3, r3, #24
 5713 2d22 1846     		mov	r0, r3
 5714 2d24 FFF7FEFF 		bl	strlen
 5715 2d28 0346     		mov	r3, r0
 5716 2d2a 1A46     		mov	r2, r3
 5717 2d2c 07F13803 		add	r3, r7, #56
 5718 2d30 183B     		subs	r3, r3, #24
 5719 2d32 1344     		add	r3, r3, r2
 5720 2d34 BF4A     		ldr	r2, .L303+8
 5721 2d36 1C46     		mov	r4, r3
 5722 2d38 1546     		mov	r5, r2
 5723 2d3a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5724 2d3c 2060     		str	r0, [r4]	@ unaligned
 5725 2d3e 6160     		str	r1, [r4, #4]	@ unaligned
 5726 2d40 A260     		str	r2, [r4, #8]	@ unaligned
 5727 2d42 E360     		str	r3, [r4, #12]	@ unaligned
 5728 2d44 2868     		ldr	r0, [r5]	@ unaligned
 5729 2d46 2061     		str	r0, [r4, #16]	@ unaligned
 5730 2d48 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5731 2d4a AA79     		ldrb	r2, [r5, #6]
 5732 2d4c A382     		strh	r3, [r4, #20]	@ unaligned
 5733 2d4e 1346     		mov	r3, r2
 5734 2d50 A375     		strb	r3, [r4, #22]
 816:..\src/command_processing.c ****                         case 1:
 5735              		.loc 1 816 0
 5736 2d52 39E0     		b	.L257
 5737              	.L259:
 818:..\src/command_processing.c ****                                 strcat(aux_str, " Slow:syn2, Fast:syn1\0");
 5738              		.loc 1 818 0
 5739 2d54 B54B     		ldr	r3, .L303
 5740 2d56 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 5741 2d5a 042B     		cmp	r3, #4
 5742 2d5c 18D1     		bne	.L262
 819:..\src/command_processing.c ****                             }
 5743              		.loc 1 819 0
 5744 2d5e 07F13803 		add	r3, r7, #56
 5745 2d62 183B     		subs	r3, r3, #24
 5746 2d64 1846     		mov	r0, r3
 5747 2d66 FFF7FEFF 		bl	strlen
 5748 2d6a 0346     		mov	r3, r0
 5749 2d6c 1A46     		mov	r2, r3
 5750 2d6e 07F13803 		add	r3, r7, #56
 5751 2d72 183B     		subs	r3, r3, #24
 5752 2d74 1344     		add	r3, r3, r2
 5753 2d76 B04A     		ldr	r2, .L303+12
 5754 2d78 1D46     		mov	r5, r3
 5755 2d7a 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 135


 5756 2d7c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5757 2d7e 2860     		str	r0, [r5]	@ unaligned
 5758 2d80 6960     		str	r1, [r5, #4]	@ unaligned
 5759 2d82 AA60     		str	r2, [r5, #8]	@ unaligned
 5760 2d84 EB60     		str	r3, [r5, #12]	@ unaligned
 5761 2d86 2068     		ldr	r0, [r4]	@ unaligned
 5762 2d88 2861     		str	r0, [r5, #16]	@ unaligned
 5763 2d8a A388     		ldrh	r3, [r4, #4]	@ unaligned
 5764 2d8c AB82     		strh	r3, [r5, #20]	@ unaligned
 824:..\src/command_processing.c ****                     }
 5765              		.loc 1 824 0
 5766 2d8e 1AE0     		b	.L282
 5767              	.L262:
 822:..\src/command_processing.c ****                             }
 5768              		.loc 1 822 0
 5769 2d90 07F13803 		add	r3, r7, #56
 5770 2d94 183B     		subs	r3, r3, #24
 5771 2d96 1846     		mov	r0, r3
 5772 2d98 FFF7FEFF 		bl	strlen
 5773 2d9c 0346     		mov	r3, r0
 5774 2d9e 1A46     		mov	r2, r3
 5775 2da0 07F13803 		add	r3, r7, #56
 5776 2da4 183B     		subs	r3, r3, #24
 5777 2da6 1344     		add	r3, r3, r2
 5778 2da8 A44A     		ldr	r2, .L303+16
 5779 2daa 1C46     		mov	r4, r3
 5780 2dac 1546     		mov	r5, r2
 5781 2dae 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5782 2db0 2060     		str	r0, [r4]	@ unaligned
 5783 2db2 6160     		str	r1, [r4, #4]	@ unaligned
 5784 2db4 A260     		str	r2, [r4, #8]	@ unaligned
 5785 2db6 E360     		str	r3, [r4, #12]	@ unaligned
 5786 2db8 2868     		ldr	r0, [r5]	@ unaligned
 5787 2dba 2061     		str	r0, [r4, #16]	@ unaligned
 5788 2dbc AB88     		ldrh	r3, [r5, #4]	@ unaligned
 5789 2dbe AA79     		ldrb	r2, [r5, #6]
 5790 2dc0 A382     		strh	r3, [r4, #20]	@ unaligned
 5791 2dc2 1346     		mov	r3, r2
 5792 2dc4 A375     		strb	r3, [r4, #22]
 5793              	.L282:
 824:..\src/command_processing.c ****                     }
 5794              		.loc 1 824 0
 5795 2dc6 00BF     		nop
 5796              	.L257:
 5797              		.loc 1 826 0 discriminator 13
 5798 2dc8 40E0     		b	.L193
 5799              	.L206:
 827:..\src/command_processing.c ****                 case 12:    // wrist direction association menu
 828:..\src/command_processing.c ****                     switch(*m_addr){
 5800              		.loc 1 828 0
 5801 2dca 07F5B053 		add	r3, r7, #5632
 5802 2dce 03F10803 		add	r3, r3, #8
 5803 2dd2 1B68     		ldr	r3, [r3]
 5804 2dd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5805 2dd6 002B     		cmp	r3, #0
 5806 2dd8 02D0     		beq	.L265
 5807 2dda 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 136


 5808 2ddc 17D0     		beq	.L266
 829:..\src/command_processing.c ****                         case 0:
 830:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 831:..\src/command_processing.c ****                         break;
 832:..\src/command_processing.c ****                         case 1:
 833:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 834:..\src/command_processing.c ****                         break;
 835:..\src/command_processing.c ****                     }
 836:..\src/command_processing.c ****                     break;
 5809              		.loc 1 836 0
 5810 2dde 35E0     		b	.L193
 5811              	.L265:
 830:..\src/command_processing.c ****                         break;
 5812              		.loc 1 830 0
 5813 2de0 07F13803 		add	r3, r7, #56
 5814 2de4 183B     		subs	r3, r3, #24
 5815 2de6 1846     		mov	r0, r3
 5816 2de8 FFF7FEFF 		bl	strlen
 5817 2dec 0346     		mov	r3, r0
 5818 2dee 1A46     		mov	r2, r3
 5819 2df0 07F13803 		add	r3, r7, #56
 5820 2df4 183B     		subs	r3, r3, #24
 5821 2df6 1344     		add	r3, r3, r2
 5822 2df8 914A     		ldr	r2, .L303+20
 5823 2dfa 1D46     		mov	r5, r3
 5824 2dfc 1446     		mov	r4, r2
 5825 2dfe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5826 2e00 2860     		str	r0, [r5]	@ unaligned
 5827 2e02 6960     		str	r1, [r5, #4]	@ unaligned
 5828 2e04 AA60     		str	r2, [r5, #8]	@ unaligned
 5829 2e06 EB60     		str	r3, [r5, #12]	@ unaligned
 5830 2e08 2068     		ldr	r0, [r4]	@ unaligned
 5831 2e0a 2861     		str	r0, [r5, #16]	@ unaligned
 831:..\src/command_processing.c ****                         case 1:
 5832              		.loc 1 831 0
 5833 2e0c 16E0     		b	.L264
 5834              	.L266:
 833:..\src/command_processing.c ****                         break;
 5835              		.loc 1 833 0
 5836 2e0e 07F13803 		add	r3, r7, #56
 5837 2e12 183B     		subs	r3, r3, #24
 5838 2e14 1846     		mov	r0, r3
 5839 2e16 FFF7FEFF 		bl	strlen
 5840 2e1a 0346     		mov	r3, r0
 5841 2e1c 1A46     		mov	r2, r3
 5842 2e1e 07F13803 		add	r3, r7, #56
 5843 2e22 183B     		subs	r3, r3, #24
 5844 2e24 1344     		add	r3, r3, r2
 5845 2e26 874A     		ldr	r2, .L303+24
 5846 2e28 1D46     		mov	r5, r3
 5847 2e2a 1446     		mov	r4, r2
 5848 2e2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 5849 2e2e 2860     		str	r0, [r5]	@ unaligned
 5850 2e30 6960     		str	r1, [r5, #4]	@ unaligned
 5851 2e32 AA60     		str	r2, [r5, #8]	@ unaligned
 5852 2e34 EB60     		str	r3, [r5, #12]	@ unaligned
 5853 2e36 2068     		ldr	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 137


 5854 2e38 2861     		str	r0, [r5, #16]	@ unaligned
 834:..\src/command_processing.c ****                     }
 5855              		.loc 1 834 0
 5856 2e3a 00BF     		nop
 5857              	.L264:
 5858              		.loc 1 836 0
 5859 2e3c 06E0     		b	.L193
 5860              	.L278:
 689:..\src/command_processing.c ****                 case 2:     // control mode menu
 5861              		.loc 1 689 0
 5862 2e3e 00BF     		nop
 5863 2e40 04E0     		b	.L193
 5864              	.L279:
 705:..\src/command_processing.c ****                 case 3:     // yes/no menu
 5865              		.loc 1 705 0
 5866 2e42 00BF     		nop
 5867 2e44 02E0     		b	.L193
 5868              	.L280:
 749:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 5869              		.loc 1 749 0
 5870 2e46 00BF     		nop
 5871 2e48 00E0     		b	.L193
 5872              	.L281:
 806:..\src/command_processing.c ****                 case 11:    // fsm activation mode menu
 5873              		.loc 1 806 0
 5874 2e4a 00BF     		nop
 5875              	.L193:
 837:..\src/command_processing.c ****             }
 838:..\src/command_processing.c ****             //Recomputes string lenght
 839:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 5876              		.loc 1 839 0
 5877 2e4c 07F13803 		add	r3, r7, #56
 5878 2e50 183B     		subs	r3, r3, #24
 5879 2e52 1846     		mov	r0, r3
 5880 2e54 FFF7FEFF 		bl	strlen
 5881 2e58 0346     		mov	r3, r0
 5882 2e5a DBB2     		uxtb	r3, r3
 5883 2e5c 0133     		adds	r3, r3, #1
 5884 2e5e 07F5B052 		add	r2, r7, #5632
 5885 2e62 02F11202 		add	r2, r2, #18
 5886 2e66 1370     		strb	r3, [r2]
 5887              	.L192:
 840:..\src/command_processing.c ****         }
 841:..\src/command_processing.c **** 
 842:..\src/command_processing.c ****         // Add parameter string to packet
 843:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 5888              		.loc 1 843 0
 5889 2e68 07F5B053 		add	r3, r7, #5632
 5890 2e6c 03F11203 		add	r3, r3, #18
 5891 2e70 1B78     		ldrb	r3, [r3]
 5892 2e72 07F5B052 		add	r2, r7, #5632
 5893 2e76 02F11702 		add	r2, r2, #23
 5894 2e7a 1370     		strb	r3, [r2]
 5895 2e7c 45E0     		b	.L267
 5896              	.L268:
 844:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5897              		.loc 1 844 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 138


 5898 2e7e 07F5B053 		add	r3, r7, #5632
 5899 2e82 03F11503 		add	r3, r3, #21
 5900 2e86 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5901 2e88 3222     		movs	r2, #50
 5902 2e8a 02FB03F3 		mul	r3, r2, r3
 5903 2e8e 1A1D     		adds	r2, r3, #4
 5904 2e90 07F5B053 		add	r3, r7, #5632
 5905 2e94 03F11303 		add	r3, r3, #19
 5906 2e98 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5907 2e9a 07F5B053 		add	r3, r7, #5632
 5908 2e9e 03F11503 		add	r3, r3, #21
 5909 2ea2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5910 2ea4 07F11803 		add	r3, r7, #24
 5911 2ea8 143B     		subs	r3, r3, #20
 5912 2eaa 1B68     		ldr	r3, [r3]
 5913 2eac 0344     		add	r3, r3, r0
 5914 2eae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5915 2eb0 03FB01F3 		mul	r3, r3, r1
 5916 2eb4 1A44     		add	r2, r2, r3
 5917 2eb6 07F5B053 		add	r3, r7, #5632
 5918 2eba 03F11203 		add	r3, r3, #18
 5919 2ebe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5920 2ec0 1A44     		add	r2, r2, r3
 5921 2ec2 07F5B053 		add	r3, r7, #5632
 5922 2ec6 03F11703 		add	r3, r3, #23
 5923 2eca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5924 2ecc D21A     		subs	r2, r2, r3
 5925 2ece 07F5B053 		add	r3, r7, #5632
 5926 2ed2 03F11203 		add	r3, r3, #18
 5927 2ed6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5928 2ed8 07F5B053 		add	r3, r7, #5632
 5929 2edc 03F11703 		add	r3, r3, #23
 5930 2ee0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5931 2ee2 C91A     		subs	r1, r1, r3
 5932 2ee4 07F13803 		add	r3, r7, #56
 5933 2ee8 183B     		subs	r3, r3, #24
 5934 2eea 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 5935 2eec 07F15803 		add	r3, r7, #88
 5936 2ef0 043B     		subs	r3, r3, #4
 5937 2ef2 9954     		strb	r1, [r3, r2]
 843:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5938              		.loc 1 843 0 discriminator 3
 5939 2ef4 07F5B053 		add	r3, r7, #5632
 5940 2ef8 03F11703 		add	r3, r3, #23
 5941 2efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5942 2efe 013B     		subs	r3, r3, #1
 5943 2f00 07F5B052 		add	r2, r7, #5632
 5944 2f04 02F11702 		add	r2, r2, #23
 5945 2f08 1370     		strb	r3, [r2]
 5946              	.L267:
 843:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 5947              		.loc 1 843 0 is_stmt 0 discriminator 1
 5948 2f0a 07F5B053 		add	r3, r7, #5632
 5949 2f0e 03F11703 		add	r3, r3, #23
 5950 2f12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5951 2f14 002B     		cmp	r3, #0
 5952 2f16 B2D1     		bne	.L268
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 139


 845:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 846:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 5953              		.loc 1 846 0 is_stmt 1
 5954 2f18 07F5B053 		add	r3, r7, #5632
 5955 2f1c 03F11503 		add	r3, r3, #21
 5956 2f20 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5957 2f22 07F11803 		add	r3, r7, #24
 5958 2f26 103B     		subs	r3, r3, #16
 5959 2f28 1B68     		ldr	r3, [r3]
 5960 2f2a 1344     		add	r3, r3, r2
 5961 2f2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5962 2f2e 002B     		cmp	r3, #0
 5963 2f30 3CD1     		bne	.L269
 847:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 5964              		.loc 1 847 0
 5965 2f32 07F5B053 		add	r3, r7, #5632
 5966 2f36 03F11503 		add	r3, r3, #21
 5967 2f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5968 2f3c 3222     		movs	r2, #50
 5969 2f3e 02FB03F3 		mul	r3, r2, r3
 5970 2f42 1A1D     		adds	r2, r3, #4
 5971 2f44 07F5B053 		add	r3, r7, #5632
 5972 2f48 03F11303 		add	r3, r3, #19
 5973 2f4c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5974 2f4e 07F5B053 		add	r3, r7, #5632
 5975 2f52 03F11503 		add	r3, r3, #21
 5976 2f56 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5977 2f58 07F11803 		add	r3, r7, #24
 5978 2f5c 143B     		subs	r3, r3, #20
 5979 2f5e 1B68     		ldr	r3, [r3]
 5980 2f60 0344     		add	r3, r3, r0
 5981 2f62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5982 2f64 03FB01F3 		mul	r3, r3, r1
 5983 2f68 1A44     		add	r2, r2, r3
 5984 2f6a 07F5B053 		add	r3, r7, #5632
 5985 2f6e 03F11203 		add	r3, r3, #18
 5986 2f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5987 2f74 1A44     		add	r2, r2, r3
 5988 2f76 07F5B053 		add	r3, r7, #5632
 5989 2f7a 03F11403 		add	r3, r3, #20
 5990 2f7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5991 2f80 07F5B151 		add	r1, r7, #5664
 5992 2f84 01F11001 		add	r1, r1, #16
 5993 2f88 0968     		ldr	r1, [r1]
 5994 2f8a 0B44     		add	r3, r3, r1
 5995 2f8c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5996 2f8e 07F15803 		add	r3, r7, #88
 5997 2f92 043B     		subs	r3, r3, #4
 5998 2f94 9954     		strb	r1, [r3, r2]
 848:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 5999              		.loc 1 848 0
 6000 2f96 07F5B053 		add	r3, r7, #5632
 6001 2f9a 03F11403 		add	r3, r3, #20
 6002 2f9e 1B78     		ldrb	r3, [r3]
 6003 2fa0 0133     		adds	r3, r3, #1
 6004 2fa2 07F5B052 		add	r2, r7, #5632
 6005 2fa6 02F11402 		add	r2, r2, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 140


 6006 2faa 1370     		strb	r3, [r2]
 6007              	.L269:
 849:..\src/command_processing.c ****         }      
 850:..\src/command_processing.c ****         
 851:..\src/command_processing.c ****         // Add struct index after an empty bit
 852:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 853:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 6008              		.loc 1 853 0
 6009 2fac 07F5B053 		add	r3, r7, #5632
 6010 2fb0 03F11503 		add	r3, r3, #21
 6011 2fb4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6012 2fb6 07F11803 		add	r3, r7, #24
 6013 2fba 103B     		subs	r3, r3, #16
 6014 2fbc 1B68     		ldr	r3, [r3]
 6015 2fbe 1344     		add	r3, r3, r2
 6016 2fc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6017 2fc2 002B     		cmp	r3, #0
 6018 2fc4 40D1     		bne	.L270
 854:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 6019              		.loc 1 854 0
 6020 2fc6 07F5B053 		add	r3, r7, #5632
 6021 2fca 03F11503 		add	r3, r3, #21
 6022 2fce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6023 2fd0 3222     		movs	r2, #50
 6024 2fd2 02FB03F3 		mul	r3, r2, r3
 6025 2fd6 1A1D     		adds	r2, r3, #4
 6026 2fd8 07F5B053 		add	r3, r7, #5632
 6027 2fdc 03F11303 		add	r3, r3, #19
 6028 2fe0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6029 2fe2 07F5B053 		add	r3, r7, #5632
 6030 2fe6 03F11503 		add	r3, r3, #21
 6031 2fea 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6032 2fec 07F11803 		add	r3, r7, #24
 6033 2ff0 143B     		subs	r3, r3, #20
 6034 2ff2 1B68     		ldr	r3, [r3]
 6035 2ff4 0344     		add	r3, r3, r0
 6036 2ff6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6037 2ff8 03FB01F3 		mul	r3, r3, r1
 6038 2ffc 1A44     		add	r2, r2, r3
 6039 2ffe 07F5B053 		add	r3, r7, #5632
 6040 3002 03F11203 		add	r3, r3, #18
 6041 3006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6042 3008 1344     		add	r3, r3, r2
 6043 300a 9A1C     		adds	r2, r3, #2
 6044 300c 07F5B053 		add	r3, r7, #5632
 6045 3010 03F11503 		add	r3, r3, #21
 6046 3014 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6047 3016 07F11803 		add	r3, r7, #24
 6048 301a 183B     		subs	r3, r3, #24
 6049 301c 1B68     		ldr	r3, [r3]
 6050 301e 0B44     		add	r3, r3, r1
 6051 3020 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6052 3022 07F15803 		add	r3, r7, #88
 6053 3026 043B     		subs	r3, r3, #4
 6054 3028 9954     		strb	r1, [r3, r2]
 6055 302a 3FE0     		b	.L271
 6056              	.L304:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 141


 6057              		.align	2
 6058              	.L303:
 6059 302c 00000000 		.word	c_mem
 6060 3030 E4010000 		.word	.LC122
 6061 3034 FC010000 		.word	.LC123
 6062 3038 14020000 		.word	.LC124
 6063 303c 2C020000 		.word	.LC125
 6064 3040 44020000 		.word	.LC126
 6065 3044 5C020000 		.word	.LC127
 6066              	.L270:
 855:..\src/command_processing.c ****         }
 856:..\src/command_processing.c ****         else {
 857:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 6067              		.loc 1 857 0
 6068 3048 07F5B053 		add	r3, r7, #5632
 6069 304c 03F11503 		add	r3, r3, #21
 6070 3050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6071 3052 3222     		movs	r2, #50
 6072 3054 02FB03F3 		mul	r3, r2, r3
 6073 3058 1A1D     		adds	r2, r3, #4
 6074 305a 07F5B053 		add	r3, r7, #5632
 6075 305e 03F11303 		add	r3, r3, #19
 6076 3062 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6077 3064 07F5B053 		add	r3, r7, #5632
 6078 3068 03F11503 		add	r3, r3, #21
 6079 306c 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6080 306e 07F11803 		add	r3, r7, #24
 6081 3072 143B     		subs	r3, r3, #20
 6082 3074 1B68     		ldr	r3, [r3]
 6083 3076 0344     		add	r3, r3, r0
 6084 3078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6085 307a 03FB01F3 		mul	r3, r3, r1
 6086 307e 1A44     		add	r2, r2, r3
 6087 3080 07F5B053 		add	r3, r7, #5632
 6088 3084 03F11203 		add	r3, r3, #18
 6089 3088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6090 308a 1344     		add	r3, r3, r2
 6091 308c 5A1C     		adds	r2, r3, #1
 6092 308e 07F5B053 		add	r3, r7, #5632
 6093 3092 03F11503 		add	r3, r3, #21
 6094 3096 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6095 3098 07F11803 		add	r3, r7, #24
 6096 309c 183B     		subs	r3, r3, #24
 6097 309e 1B68     		ldr	r3, [r3]
 6098 30a0 0B44     		add	r3, r3, r1
 6099 30a2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6100 30a4 07F15803 		add	r3, r7, #88
 6101 30a8 043B     		subs	r3, r3, #4
 6102 30aa 9954     		strb	r1, [r3, r2]
 6103              	.L271:
 392:..\src/command_processing.c ****         
 6104              		.loc 1 392 0 discriminator 2
 6105 30ac 07F5B053 		add	r3, r7, #5632
 6106 30b0 03F11503 		add	r3, r3, #21
 6107 30b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6108 30b6 0133     		adds	r3, r3, #1
 6109 30b8 07F5B052 		add	r2, r7, #5632
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 142


 6110 30bc 02F11502 		add	r2, r2, #21
 6111 30c0 1370     		strb	r3, [r2]
 6112              	.L70:
 392:..\src/command_processing.c ****         
 6113              		.loc 1 392 0 is_stmt 0 discriminator 1
 6114 30c2 07F5B053 		add	r3, r7, #5632
 6115 30c6 03F11503 		add	r3, r3, #21
 6116 30ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6117 30cc 4C2B     		cmp	r3, #76
 6118 30ce 7DF60EA8 		bls	.L272
 858:..\src/command_processing.c ****         }
 859:..\src/command_processing.c ****     }
 860:..\src/command_processing.c **** 
 861:..\src/command_processing.c ****     // Add menu
 862:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 6119              		.loc 1 862 0 is_stmt 1
 6120 30d2 0023     		movs	r3, #0
 6121 30d4 07F5B052 		add	r2, r7, #5632
 6122 30d8 02F11602 		add	r2, r2, #22
 6123 30dc 1370     		strb	r3, [r2]
 6124 30de 71E0     		b	.L273
 6125              	.L276:
 863:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6126              		.loc 1 863 0
 6127 30e0 07F5B053 		add	r3, r7, #5632
 6128 30e4 03F11603 		add	r3, r3, #22
 6129 30e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6130 30ea 9B00     		lsls	r3, r3, #2
 6131 30ec 07F5B152 		add	r2, r7, #5664
 6132 30f0 02F11C02 		add	r2, r2, #28
 6133 30f4 1268     		ldr	r2, [r2]
 6134 30f6 1344     		add	r3, r3, r2
 6135 30f8 1B68     		ldr	r3, [r3]
 6136 30fa 1846     		mov	r0, r3
 6137 30fc FFF7FEFF 		bl	strlen
 6138 3100 0346     		mov	r3, r0
 6139 3102 07F5B052 		add	r2, r7, #5632
 6140 3106 02F11202 		add	r2, r2, #18
 6141 310a 1370     		strb	r3, [r2]
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6142              		.loc 1 864 0
 6143 310c 07F5B053 		add	r3, r7, #5632
 6144 3110 03F11203 		add	r3, r3, #18
 6145 3114 1B78     		ldrb	r3, [r3]
 6146 3116 07F5B052 		add	r2, r7, #5632
 6147 311a 02F11702 		add	r2, r2, #23
 6148 311e 1370     		strb	r3, [r2]
 6149 3120 3EE0     		b	.L274
 6150              	.L275:
 865:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 6151              		.loc 1 865 0 discriminator 3
 6152 3122 07F5B053 		add	r3, r7, #5632
 6153 3126 03F11603 		add	r3, r3, #22
 6154 312a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6155 312c 9622     		movs	r2, #150
 6156 312e 02FB03F3 		mul	r3, r2, r3
 6157 3132 03F60C72 		addw	r2, r3, #3852
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 143


 6158 3136 07F5B053 		add	r3, r7, #5632
 6159 313a 03F11203 		add	r3, r3, #18
 6160 313e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6161 3140 1A44     		add	r2, r2, r3
 6162 3142 07F5B053 		add	r3, r7, #5632
 6163 3146 03F11703 		add	r3, r3, #23
 6164 314a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165 314c D21A     		subs	r2, r2, r3
 6166 314e 07F5B053 		add	r3, r7, #5632
 6167 3152 03F11603 		add	r3, r3, #22
 6168 3156 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6169 3158 9B00     		lsls	r3, r3, #2
 6170 315a 07F5B151 		add	r1, r7, #5664
 6171 315e 01F11C01 		add	r1, r1, #28
 6172 3162 0968     		ldr	r1, [r1]
 6173 3164 0B44     		add	r3, r3, r1
 6174 3166 1B68     		ldr	r3, [r3]
 6175 3168 07F5B051 		add	r1, r7, #5632
 6176 316c 01F11201 		add	r1, r1, #18
 6177 3170 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 6178 3172 07F5B051 		add	r1, r7, #5632
 6179 3176 01F11701 		add	r1, r1, #23
 6180 317a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6181 317c 411A     		subs	r1, r0, r1
 6182 317e 0B44     		add	r3, r3, r1
 6183 3180 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6184 3182 07F15803 		add	r3, r7, #88
 6185 3186 043B     		subs	r3, r3, #4
 6186 3188 9954     		strb	r1, [r3, r2]
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6187              		.loc 1 864 0 discriminator 3
 6188 318a 07F5B053 		add	r3, r7, #5632
 6189 318e 03F11703 		add	r3, r3, #23
 6190 3192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6191 3194 013B     		subs	r3, r3, #1
 6192 3196 07F5B052 		add	r2, r7, #5632
 6193 319a 02F11702 		add	r2, r2, #23
 6194 319e 1370     		strb	r3, [r2]
 6195              	.L274:
 864:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 6196              		.loc 1 864 0 is_stmt 0 discriminator 1
 6197 31a0 07F5B053 		add	r3, r7, #5632
 6198 31a4 03F11703 		add	r3, r3, #23
 6199 31a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6200 31aa 002B     		cmp	r3, #0
 6201 31ac B9D1     		bne	.L275
 862:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 6202              		.loc 1 862 0 is_stmt 1 discriminator 2
 6203 31ae 07F5B053 		add	r3, r7, #5632
 6204 31b2 03F11603 		add	r3, r3, #22
 6205 31b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6206 31b8 0133     		adds	r3, r3, #1
 6207 31ba 07F5B052 		add	r2, r7, #5632
 6208 31be 02F11602 		add	r2, r2, #22
 6209 31c2 1370     		strb	r3, [r2]
 6210              	.L273:
 862:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 144


 6211              		.loc 1 862 0 is_stmt 0 discriminator 1
 6212 31c4 07F5B053 		add	r3, r7, #5632
 6213 31c8 03F11603 		add	r3, r3, #22
 6214 31cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6215 31ce 0A2B     		cmp	r3, #10
 6216 31d0 86D9     		bls	.L276
 866:..\src/command_processing.c ****     }
 867:..\src/command_processing.c ****     
 868:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 6217              		.loc 1 868 0 is_stmt 1
 6218 31d2 07F5B053 		add	r3, r7, #5632
 6219 31d6 03F11003 		add	r3, r3, #16
 6220 31da 1B88     		ldrh	r3, [r3]
 6221 31dc 5C1E     		subs	r4, r3, #1
 6222 31de 07F5B053 		add	r3, r7, #5632
 6223 31e2 03F11003 		add	r3, r3, #16
 6224 31e6 1B88     		ldrh	r3, [r3]	@ movhi
 6225 31e8 DBB2     		uxtb	r3, r3
 6226 31ea 013B     		subs	r3, r3, #1
 6227 31ec DAB2     		uxtb	r2, r3
 6228 31ee 07F15803 		add	r3, r7, #88
 6229 31f2 043B     		subs	r3, r3, #4
 6230 31f4 1146     		mov	r1, r2
 6231 31f6 1846     		mov	r0, r3
 6232 31f8 FFF7FEFF 		bl	LCRChecksum
 6233 31fc 0346     		mov	r3, r0
 6234 31fe 1A46     		mov	r2, r3
 6235 3200 07F15803 		add	r3, r7, #88
 6236 3204 043B     		subs	r3, r3, #4
 6237 3206 1A55     		strb	r2, [r3, r4]
 869:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 6238              		.loc 1 869 0
 6239 3208 07F5B053 		add	r3, r7, #5632
 6240 320c 03F11003 		add	r3, r3, #16
 6241 3210 1A88     		ldrh	r2, [r3]
 6242 3212 07F15803 		add	r3, r7, #88
 6243 3216 043B     		subs	r3, r3, #4
 6244 3218 1146     		mov	r1, r2
 6245 321a 1846     		mov	r0, r3
 6246 321c FFF7FEFF 		bl	commWrite
 870:..\src/command_processing.c **** }
 6247              		.loc 1 870 0
 6248 3220 00BF     		nop
 6249 3222 07F5B057 		add	r7, r7, #5632
 6250 3226 1C37     		adds	r7, r7, #28
 6251              		.cfi_def_cfa_offset 20
 6252 3228 BD46     		mov	sp, r7
 6253              		.cfi_def_cfa_register 13
 6254              		@ sp needed
 6255 322a F0BD     		pop	{r4, r5, r6, r7, pc}
 6256              		.cfi_endproc
 6257              	.LFE67:
 6258              		.size	get_param_list, .-get_param_list
 6259              		.section	.rodata
 6260 0271 000000   		.align	2
 6261              	.LC129:
 6262 0274 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 145


 6262      204E6F6E 
 6262      650A3120 
 6262      2D3E204C 
 6262      6F772028 
 6263 02a4 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 6263      74657220 
 6263      72656164 
 6263      290A3220 
 6263      2D3E2048 
 6264 02d4 62697420 		.ascii	"bit register read)\012\000"
 6264      72656769 
 6264      73746572 
 6264      20726561 
 6264      64290A00 
 6265              		.align	2
 6266              	.LC130:
 6267 02e8 30202D3E 		.ascii	"0 -> Fast:syn2, Slow:syn1\0121 -> Slow:syn2, Fast:s"
 6267      20466173 
 6267      743A7379 
 6267      6E322C20 
 6267      536C6F77 
 6268 0318 796E310A 		.ascii	"yn1\012\000"
 6268      00
 6269 031d 000000   		.align	2
 6270              	.LC131:
 6271 0320 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 6271      20466173 
 6271      743A7772 
 6271      6973742C 
 6271      20536C6F 
 6272 0350 3A68616E 		.ascii	":hand\012\000"
 6272      640A00
 6273 0357 00       		.align	2
 6274              	.LC132:
 6275 0358 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 6275      20557362 
 6275      0A31202D 
 6275      3E204861 
 6275      6E646C65 
 6276 0383 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 6276      20454D47 
 6276      20496E74 
 6276      65677261 
 6276      6C0A3420 
 6277 03b0 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 6277      616E6365 
 6277      640A3620 
 6277      2D3E204A 
 6277      6F797374 
 6278 03dd 204E430A 		.ascii	" NC\012\000"
 6278      00
 6279 03e2 0000     		.align	2
 6280              	.LC133:
 6281 03e4 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 6281      20506F73 
 6281      6974696F 
 6281      6E0A3120 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 146


 6281      2D3E2050 
 6282 040e 6F736974 		.ascii	"osition and Current\012\000"
 6282      696F6E20 
 6282      616E6420 
 6282      43757272 
 6282      656E740A 
 6283 0423 00       		.align	2
 6284              	.LC134:
 6285 0424 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 6285      20446561 
 6285      63746976 
 6285      61746520 
 6285      5B4E4F5D 
 6286 044e 0000     		.align	2
 6287              	.LC135:
 6288 0450 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 6288      20526967 
 6288      68740A31 
 6288      202D3E20 
 6288      4C656674 
 6289 0466 0000     		.align	2
 6290              	.LC136:
 6291 0468 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 6291      204F4646 
 6291      0A31202D 
 6291      3E204F4E 
 6291      0A546865 
 6292 048f 00       		.align	2
 6293              	.LC137:
 6294 0490 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 6294      204E6F6E 
 6294      650A3120 
 6294      2D3E2053 
 6294      442F5254 
 6295 04bd 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 6295      0A33202D 
 6295      3E204F74 
 6295      68657220 
 6295      5B4E2F41 
 6296 04e8 00       		.ascii	"\000"
 6297 04e9 000000   		.align	2
 6298              	.LC138:
 6299 04ec 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 6299      2047656E 
 6299      65726963 
 6299      20757365 
 6299      720A3120 
 6300 0516 20626F61 		.ascii	" board will reset\012\000"
 6300      72642077 
 6300      696C6C20 
 6300      72657365 
 6300      740A00
 6301 0529 000000   		.align	2
 6302              	.LC139:
 6303 052c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 6303      204D4333 
 6303      33383837 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 147


 6303      20285374 
 6303      616E6461 
 6304 055c 290A5468 		.ascii	")\012The board will reset\012\000"
 6304      6520626F 
 6304      61726420 
 6304      77696C6C 
 6304      20726573 
 6305              		.align	2
 6306              	.LC140:
 6307 0574 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 6307      20534F46 
 6307      5448414E 
 6307      44205052 
 6307      4F0A3120 
 6308 05a1 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\0124 -> SOFTHAN"
 6308      4348414D 
 6308      42455253 
 6308      0A33202D 
 6308      3E204F54 
 6309 05ce 44203220 		.ascii	"D 2 MOTORS\012The board will reset\012\000"
 6309      4D4F544F 
 6309      52530A54 
 6309      68652062 
 6309      6F617264 
 6310 05ef 00       		.align	2
 6311              	.LC141:
 6312 05f0 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 6312      20436C6F 
 6312      73653A43 
 6312      572C204F 
 6312      70656E3A 
 6313 0620 00       		.ascii	"\000"
 6314 0621 000000   		.align	2
 6315              	.LC0:
 6316 0624 02       		.byte	2
 6317 0625 07       		.byte	7
 6318 0626 07       		.byte	7
 6319 0627 00       		.byte	0
 6320 0628 00       		.byte	0
 6321 0629 00       		.byte	0
 6322 062a 02       		.byte	2
 6323 062b 03       		.byte	3
 6324 062c 07       		.byte	7
 6325 062d 00       		.byte	0
 6326 062e 05       		.byte	5
 6327 062f 05       		.byte	5
 6328 0630 03       		.byte	3
 6329 0631 04       		.byte	4
 6330 0632 00       		.byte	0
 6331 0633 06       		.byte	6
 6332 0634 02       		.byte	2
 6333 0635 00       		.byte	0
 6334 0636 01       		.byte	1
 6335 0637 00       		.byte	0
 6336 0638 07       		.byte	7
 6337 0639 02       		.byte	2
 6338 063a 05       		.byte	5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 148


 6339 063b 05       		.byte	5
 6340 063c 05       		.byte	5
 6341 063d 00       		.byte	0
 6342 063e 00       		.byte	0
 6343 063f 00       		.byte	0
 6344 0640 00       		.byte	0
 6345 0641 00       		.byte	0
 6346 0642 00       		.byte	0
 6347 0643 02       		.byte	2
 6348 0644 00       		.byte	0
 6349 0645 02       		.byte	2
 6350 0646 00       		.byte	0
 6351 0647 09       		.byte	9
 6352 0648 02       		.byte	2
 6353 0649 00       		.byte	0
 6354 064a 02       		.byte	2
 6355 064b 00       		.byte	0
 6356 064c 02       		.byte	2
 6357 064d 01       		.byte	1
 6358 064e 00       		.byte	0
 6359 064f 07       		.byte	7
 6360 0650 07       		.byte	7
 6361 0651 00       		.byte	0
 6362 0652 00       		.byte	0
 6363 0653 00       		.byte	0
 6364 0654 02       		.byte	2
 6365 0655 03       		.byte	3
 6366 0656 07       		.byte	7
 6367 0657 00       		.byte	0
 6368 0658 05       		.byte	5
 6369 0659 05       		.byte	5
 6370 065a 03       		.byte	3
 6371 065b 00       		.byte	0
 6372 065c 01       		.byte	1
 6373 065d 00       		.byte	0
 6374 065e 07       		.byte	7
 6375 065f 02       		.byte	2
 6376 0660 00       		.byte	0
 6377 0661 02       		.byte	2
 6378 0662 00       		.byte	0
 6379 0663 02       		.byte	2
 6380 0664 01       		.byte	1
 6381 0665 02       		.byte	2
 6382 0666 02       		.byte	2
 6383 0667 00       		.byte	0
 6384 0668 02       		.byte	2
 6385 0669 02       		.byte	2
 6386 066a 00       		.byte	0
 6387 066b 04       		.byte	4
 6388 066c 03       		.byte	3
 6389 066d 04       		.byte	4
 6390 066e 00       		.byte	0
 6391 066f 00       		.byte	0
 6392 0670 04       		.byte	4
 6393 0671 00       		.byte	0
 6394 0672 00       		.byte	0
 6395 0673 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 149


 6396 0674 05       		.byte	5
 6397 0675 07       		.byte	7
 6398 0676 07       		.byte	7
 6399 0677 00       		.align	2
 6400              	.LC1:
 6401 0678 31202D20 		.ascii	"1 - Device ID:\000"
 6401      44657669 
 6401      63652049 
 6401      443A00
 6402 0687 00       		.align	2
 6403              	.LC2:
 6404 0688 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 6404      506F7369 
 6404      74696F6E 
 6404      20504944 
 6404      205B502C 
 6405              		.align	2
 6406              	.LC3:
 6407 06a4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 6407      43757272 
 6407      656E7420 
 6407      50494420 
 6407      5B502C20 
 6408 06bf 00       		.align	2
 6409              	.LC4:
 6410 06c0 34202D20 		.ascii	"4 - Startup Activation:\000"
 6410      53746172 
 6410      74757020 
 6410      41637469 
 6410      76617469 
 6411              		.align	2
 6412              	.LC5:
 6413 06d8 35202D20 		.ascii	"5 - Input mode:\000"
 6413      496E7075 
 6413      74206D6F 
 6413      64653A00 
 6414              		.align	2
 6415              	.LC6:
 6416 06e8 36202D20 		.ascii	"6 - Control mode:\000"
 6416      436F6E74 
 6416      726F6C20 
 6416      6D6F6465 
 6416      3A00
 6417 06fa 0000     		.align	2
 6418              	.LC7:
 6419 06fc 37202D20 		.ascii	"7 - Resolutions:\000"
 6419      5265736F 
 6419      6C757469 
 6419      6F6E733A 
 6419      00
 6420 070d 000000   		.align	2
 6421              	.LC8:
 6422 0710 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 6422      4D656173 
 6422      7572656D 
 6422      656E7420 
 6422      4F666673 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 150


 6423 0729 000000   		.align	2
 6424              	.LC9:
 6425 072c 39202D20 		.ascii	"9 - Multipliers:\000"
 6425      4D756C74 
 6425      69706C69 
 6425      6572733A 
 6425      00
 6426 073d 000000   		.align	2
 6427              	.LC10:
 6428 0740 3130202D 		.ascii	"10 - Pos. limit active:\000"
 6428      20506F73 
 6428      2E206C69 
 6428      6D697420 
 6428      61637469 
 6429              		.align	2
 6430              	.LC11:
 6431 0758 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 6431      20506F73 
 6431      2E206C69 
 6431      6D697473 
 6431      205B696E 
 6432 0775 000000   		.align	2
 6433              	.LC12:
 6434 0778 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 6434      204D6178 
 6434      20737465 
 6434      7073205B 
 6434      6E65672C 
 6435 0793 00       		.align	2
 6436              	.LC13:
 6437 0794 3133202D 		.ascii	"13 - Current limit:\000"
 6437      20437572 
 6437      72656E74 
 6437      206C696D 
 6437      69743A00 
 6438              		.align	2
 6439              	.LC14:
 6440 07a8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 6440      20454D47 
 6440      20746872 
 6440      6573686F 
 6440      6C64733A 
 6441 07bd 000000   		.align	2
 6442              	.LC15:
 6443 07c0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 6443      20454D47 
 6443      2063616C 
 6443      69627261 
 6443      74696F6E 
 6444 07e1 000000   		.align	2
 6445              	.LC16:
 6446 07e4 3136202D 		.ascii	"16 - EMG max values:\000"
 6446      20454D47 
 6446      206D6178 
 6446      2076616C 
 6446      7565733A 
 6447 07f9 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 151


 6448              	.LC17:
 6449 07fc 3137202D 		.ascii	"17 - EMG max speeds:\000"
 6449      20454D47 
 6449      206D6178 
 6449      20737065 
 6449      6564733A 
 6450 0811 000000   		.align	2
 6451              	.LC18:
 6452 0814 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 6452      20416273 
 6452      6F6C7574 
 6452      6520656E 
 6452      636F6465 
 6453              		.align	2
 6454              	.LC19:
 6455 0834 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 6455      204D6F74 
 6455      6F722068 
 6455      616E646C 
 6455      65207261 
 6456 084d 000000   		.align	2
 6457              	.LC20:
 6458 0850 3230202D 		.ascii	"20 - PWM rescaling:\000"
 6458      2050574D 
 6458      20726573 
 6458      63616C69 
 6458      6E673A00 
 6459              		.align	2
 6460              	.LC21:
 6461 0864 3231202D 		.ascii	"21 - Current lookup:\000"
 6461      20437572 
 6461      72656E74 
 6461      206C6F6F 
 6461      6B75703A 
 6462 0879 000000   		.align	2
 6463              	.LC22:
 6464 087c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 6464      20446174 
 6464      65206F66 
 6464      206D6169 
 6464      6E74656E 
 6465 089e 0000     		.align	2
 6466              	.LC23:
 6467 08a0 3233202D 		.ascii	"23 - Rest position:\000"
 6467      20526573 
 6467      7420706F 
 6467      73697469 
 6467      6F6E3A00 
 6468              		.align	2
 6469              	.LC24:
 6470 08b4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 6470      20526573 
 6470      7420706F 
 6470      73697469 
 6470      6F6E2074 
 6471              		.align	2
 6472              	.LC25:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 152


 6473 08d8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 6473      20526573 
 6473      74207665 
 6473      6C20636C 
 6473      6F737572 
 6474 08fb 00       		.align	2
 6475              	.LC26:
 6476 08fc 3236202D 		.ascii	"26 - Rest position enabled:\000"
 6476      20526573 
 6476      7420706F 
 6476      73697469 
 6476      6F6E2065 
 6477              		.align	2
 6478              	.LC27:
 6479 0918 3237202D 		.ascii	"27 - EMG inversion:\000"
 6479      20454D47 
 6479      20696E76 
 6479      65727369 
 6479      6F6E3A00 
 6480              		.align	2
 6481              	.LC28:
 6482 092c 3238202D 		.ascii	"28 - Hand side:\000"
 6482      2048616E 
 6482      64207369 
 6482      64653A00 
 6483              		.align	2
 6484              	.LC29:
 6485 093c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 6485      20456E61 
 6485      626C6520 
 6485      494D5573 
 6485      3A00
 6486 094e 0000     		.align	2
 6487              	.LC30:
 6488 0950 3330202D 		.ascii	"30 - Read Expansion port:\000"
 6488      20526561 
 6488      64204578 
 6488      70616E73 
 6488      696F6E20 
 6489 096a 0000     		.align	2
 6490              	.LC31:
 6491 096c 3331202D 		.ascii	"31 - Reset counters:\000"
 6491      20526573 
 6491      65742063 
 6491      6F756E74 
 6491      6572733A 
 6492 0981 000000   		.align	2
 6493              	.LC32:
 6494 0984 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 6494      204C6173 
 6494      74206368 
 6494      65636B65 
 6494      64205469 
 6495 09aa 0000     		.align	2
 6496              	.LC33:
 6497 09ac 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 6497      20535049 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 153


 6497      20726561 
 6497      64206465 
 6497      6C617920 
 6498 09c7 00       		.align	2
 6499              	.LC34:
 6500 09c8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 6500      204F6E20 
 6500      626F6172 
 6500      6420494D 
 6500      5520636F 
 6501 09ed 000000   		.align	2
 6502              	.LC35:
 6503 09f0 3335202D 		.ascii	"35 - User ID:\000"
 6503      20557365 
 6503      72204944 
 6503      3A00
 6504 09fe 0000     		.align	2
 6505              	.LC36:
 6506 0a00 3336202D 		.ascii	"36 - User code:\000"
 6506      20557365 
 6506      7220636F 
 6506      64653A00 
 6507              		.align	2
 6508              	.LC37:
 6509 0a10 3337202D 		.ascii	"37 - Associated encoder line:\000"
 6509      20417373 
 6509      6F636961 
 6509      74656420 
 6509      656E636F 
 6510 0a2e 0000     		.align	2
 6511              	.LC38:
 6512 0a30 3338202D 		.ascii	"38 - Driver type:\000"
 6512      20447269 
 6512      76657220 
 6512      74797065 
 6512      3A00
 6513 0a42 0000     		.align	2
 6514              	.LC39:
 6515 0a44 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 6515      2050574D 
 6515      20726174 
 6515      65206C69 
 6515      6D697465 
 6516 0a5b 00       		.align	2
 6517              	.LC40:
 6518 0a5c 3430202D 		.ascii	"40 - Not reversible:\000"
 6518      204E6F74 
 6518      20726576 
 6518      65727369 
 6518      626C653A 
 6519 0a71 000000   		.align	2
 6520              	.LC41:
 6521 0a74 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 6521      20456E63 
 6521      20696478 
 6521      20757365 
 6521      6420666F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 154


 6522 0a93 00       		.align	2
 6523              	.LC42:
 6524 0a94 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 6524      20476561 
 6524      72207061 
 6524      72616D73 
 6524      5B4E312C 
 6525 0ab2 0000     		.align	2
 6526              	.LC43:
 6527 0ab4 3433202D 		.ascii	"43 - Use second motor:\000"
 6527      20557365 
 6527      20736563 
 6527      6F6E6420 
 6527      6D6F746F 
 6528 0acb 00       		.align	2
 6529              	.LC44:
 6530 0acc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 6530      20506F73 
 6530      6974696F 
 6530      6E205049 
 6530      44205B50 
 6531 0ae9 000000   		.align	2
 6532              	.LC45:
 6533 0aec 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 6533      20437572 
 6533      72656E74 
 6533      20504944 
 6533      205B502C 
 6534              		.align	2
 6535              	.LC46:
 6536 0b08 3436202D 		.ascii	"46 - Startup Activation:\000"
 6536      20537461 
 6536      72747570 
 6536      20416374 
 6536      69766174 
 6537 0b21 000000   		.align	2
 6538              	.LC47:
 6539 0b24 3437202D 		.ascii	"47 - Input mode:\000"
 6539      20496E70 
 6539      7574206D 
 6539      6F64653A 
 6539      00
 6540 0b35 000000   		.align	2
 6541              	.LC48:
 6542 0b38 3438202D 		.ascii	"48 - Control mode:\000"
 6542      20436F6E 
 6542      74726F6C 
 6542      206D6F64 
 6542      653A00
 6543 0b4b 00       		.align	2
 6544              	.LC49:
 6545 0b4c 3439202D 		.ascii	"49 - Resolutions:\000"
 6545      20526573 
 6545      6F6C7574 
 6545      696F6E73 
 6545      3A00
 6546 0b5e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 155


 6547              	.LC50:
 6548 0b60 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 6548      204D6561 
 6548      73757265 
 6548      6D656E74 
 6548      204F6666 
 6549 0b7a 0000     		.align	2
 6550              	.LC51:
 6551 0b7c 3531202D 		.ascii	"51 - Multipliers:\000"
 6551      204D756C 
 6551      7469706C 
 6551      69657273 
 6551      3A00
 6552 0b8e 0000     		.align	2
 6553              	.LC52:
 6554 0b90 3532202D 		.ascii	"52 - Pos. limit active:\000"
 6554      20506F73 
 6554      2E206C69 
 6554      6D697420 
 6554      61637469 
 6555              		.align	2
 6556              	.LC53:
 6557 0ba8 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 6557      20506F73 
 6557      2E206C69 
 6557      6D697473 
 6557      205B696E 
 6558 0bc5 000000   		.align	2
 6559              	.LC54:
 6560 0bc8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 6560      204D6178 
 6560      20737465 
 6560      7073205B 
 6560      6E65672C 
 6561 0be3 00       		.align	2
 6562              	.LC55:
 6563 0be4 3535202D 		.ascii	"55 - Current limit:\000"
 6563      20437572 
 6563      72656E74 
 6563      206C696D 
 6563      69743A00 
 6564              		.align	2
 6565              	.LC56:
 6566 0bf8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 6566      20416273 
 6566      6F6C7574 
 6566      6520656E 
 6566      636F6465 
 6567              		.align	2
 6568              	.LC57:
 6569 0c18 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 6569      204D6F74 
 6569      6F722068 
 6569      616E646C 
 6569      65207261 
 6570 0c31 000000   		.align	2
 6571              	.LC58:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 156


 6572 0c34 3538202D 		.ascii	"58 - PWM rescaling:\000"
 6572      2050574D 
 6572      20726573 
 6572      63616C69 
 6572      6E673A00 
 6573              		.align	2
 6574              	.LC59:
 6575 0c48 3539202D 		.ascii	"59 - Current lookup:\000"
 6575      20437572 
 6575      72656E74 
 6575      206C6F6F 
 6575      6B75703A 
 6576 0c5d 000000   		.align	2
 6577              	.LC60:
 6578 0c60 3630202D 		.ascii	"60 - Associated encoder line:\000"
 6578      20417373 
 6578      6F636961 
 6578      74656420 
 6578      656E636F 
 6579 0c7e 0000     		.align	2
 6580              	.LC61:
 6581 0c80 3631202D 		.ascii	"61 - Driver type:\000"
 6581      20447269 
 6581      76657220 
 6581      74797065 
 6581      3A00
 6582 0c92 0000     		.align	2
 6583              	.LC62:
 6584 0c94 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 6584      2050574D 
 6584      20726174 
 6584      65206C69 
 6584      6D697465 
 6585 0cab 00       		.align	2
 6586              	.LC63:
 6587 0cac 3633202D 		.ascii	"63 - Not reversible:\000"
 6587      204E6F74 
 6587      20726576 
 6587      65727369 
 6587      626C653A 
 6588 0cc1 000000   		.align	2
 6589              	.LC64:
 6590 0cc4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 6590      20456E63 
 6590      20696478 
 6590      20757365 
 6590      6420666F 
 6591 0ce3 00       		.align	2
 6592              	.LC65:
 6593 0ce4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 6593      20476561 
 6593      72207061 
 6593      72616D73 
 6593      5B4E312C 
 6594 0d02 0000     		.align	2
 6595              	.LC66:
 6596 0d04 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 157


 6596      20526561 
 6596      6420656E 
 6596      63207261 
 6596      77206C69 
 6597 0d1e 0000     		.align	2
 6598              	.LC67:
 6599 0d20 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 6599      20526561 
 6599      6420656E 
 6599      63207261 
 6599      77206C69 
 6600 0d3a 0000     		.align	2
 6601              	.LC68:
 6602 0d3c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 6602      20526561 
 6602      64206164 
 6602      64697469 
 6602      6F6E616C 
 6603 0d5b 00       		.align	2
 6604              	.LC69:
 6605 0d5c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 6605      20414443 
 6605      20636861 
 6605      6E6E656C 
 6605      205B312D 
 6606              		.align	2
 6607              	.LC70:
 6608 0d74 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 6608      20414443 
 6608      20636861 
 6608      6E6E656C 
 6608      205B372D 
 6609 0d8d 000000   		.align	2
 6610              	.LC71:
 6611 0d90 3731202D 		.ascii	"71 - Record EMG on SD card:\000"
 6611      20526563 
 6611      6F726420 
 6611      454D4720 
 6611      6F6E2053 
 6612              		.align	2
 6613              	.LC72:
 6614 0dac 3732202D 		.ascii	"72 - Joystick closure speed:\000"
 6614      204A6F79 
 6614      73746963 
 6614      6B20636C 
 6614      6F737572 
 6615 0dc9 000000   		.align	2
 6616              	.LC73:
 6617 0dcc 3733202D 		.ascii	"73 - Joystick threshold:\000"
 6617      204A6F79 
 6617      73746963 
 6617      6B207468 
 6617      72657368 
 6618 0de5 000000   		.align	2
 6619              	.LC74:
 6620 0de8 3734202D 		.ascii	"74 - Joystick gains:\000"
 6620      204A6F79 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 158


 6620      73746963 
 6620      6B206761 
 6620      696E733A 
 6621 0dfd 000000   		.align	2
 6622              	.LC75:
 6623 0e00 3735202D 		.ascii	"75 - Device type:\000"
 6623      20446576 
 6623      69636520 
 6623      74797065 
 6623      3A00
 6624 0e12 0000     		.align	2
 6625              	.LC76:
 6626 0e14 3736202D 		.ascii	"76 - EMG FSM act.mode:\000"
 6626      20454D47 
 6626      2046534D 
 6626      20616374 
 6626      2E6D6F64 
 6627 0e2b 00       		.align	2
 6628              	.LC77:
 6629 0e2c 3737202D 		.ascii	"77 - Fast act.thresholds:\000"
 6629      20466173 
 6629      74206163 
 6629      742E7468 
 6629      72657368 
 6630 0e46 0000     		.align	2
 6631              	.LC78:
 6632 0e48 3738202D 		.ascii	"78 - Wrist direction:\000"
 6632      20577269 
 6632      73742064 
 6632      69726563 
 6632      74696F6E 
 6633 0e5e 0000     		.align	2
 6634              	.LC79:
 6635 0e60 3739202D 		.ascii	"79 - Slave communication active:\000"
 6635      20536C61 
 6635      76652063 
 6635      6F6D6D75 
 6635      6E696361 
 6636 0e81 000000   		.align	2
 6637              	.LC80:
 6638 0e84 3830202D 		.ascii	"80 - Slave ID:\000"
 6638      20536C61 
 6638      76652049 
 6638      443A00
 6639 0e93 00       		.align	2
 6640              	.LC81:
 6641 0e94 3831202D 		.ascii	"81 - Maximum slave residual current:\000"
 6641      204D6178 
 6641      696D756D 
 6641      20736C61 
 6641      76652072 
 6642 0eb9 000000   		.align	2
 6643              	.LC82:
 6644 0ebc 3832202D 		.ascii	"82 - Maximum pressure feedback (kPa):\000"
 6644      204D6178 
 6644      696D756D 
 6644      20707265 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 159


 6644      73737572 
 6645 0ee2 0000     		.align	2
 6646              	.LC83:
 6647 0ee4 3833202D 		.ascii	"83 - Proportional pressure error gain:\000"
 6647      2050726F 
 6647      706F7274 
 6647      696F6E61 
 6647      6C207072 
 6648 0f0b 00       		.align	2
 6649              	.LC128:
 6650 0f0c 78060000 		.word	.LC1
 6651 0f10 88060000 		.word	.LC2
 6652 0f14 A4060000 		.word	.LC3
 6653 0f18 C0060000 		.word	.LC4
 6654 0f1c D8060000 		.word	.LC5
 6655 0f20 E8060000 		.word	.LC6
 6656 0f24 FC060000 		.word	.LC7
 6657 0f28 10070000 		.word	.LC8
 6658 0f2c 2C070000 		.word	.LC9
 6659 0f30 40070000 		.word	.LC10
 6660 0f34 58070000 		.word	.LC11
 6661 0f38 78070000 		.word	.LC12
 6662 0f3c 94070000 		.word	.LC13
 6663 0f40 A8070000 		.word	.LC14
 6664 0f44 C0070000 		.word	.LC15
 6665 0f48 E4070000 		.word	.LC16
 6666 0f4c FC070000 		.word	.LC17
 6667 0f50 14080000 		.word	.LC18
 6668 0f54 34080000 		.word	.LC19
 6669 0f58 50080000 		.word	.LC20
 6670 0f5c 64080000 		.word	.LC21
 6671 0f60 7C080000 		.word	.LC22
 6672 0f64 A0080000 		.word	.LC23
 6673 0f68 B4080000 		.word	.LC24
 6674 0f6c D8080000 		.word	.LC25
 6675 0f70 FC080000 		.word	.LC26
 6676 0f74 18090000 		.word	.LC27
 6677 0f78 2C090000 		.word	.LC28
 6678 0f7c 3C090000 		.word	.LC29
 6679 0f80 50090000 		.word	.LC30
 6680 0f84 6C090000 		.word	.LC31
 6681 0f88 84090000 		.word	.LC32
 6682 0f8c AC090000 		.word	.LC33
 6683 0f90 C8090000 		.word	.LC34
 6684 0f94 F0090000 		.word	.LC35
 6685 0f98 000A0000 		.word	.LC36
 6686 0f9c 100A0000 		.word	.LC37
 6687 0fa0 300A0000 		.word	.LC38
 6688 0fa4 440A0000 		.word	.LC39
 6689 0fa8 5C0A0000 		.word	.LC40
 6690 0fac 740A0000 		.word	.LC41
 6691 0fb0 940A0000 		.word	.LC42
 6692 0fb4 B40A0000 		.word	.LC43
 6693 0fb8 CC0A0000 		.word	.LC44
 6694 0fbc EC0A0000 		.word	.LC45
 6695 0fc0 080B0000 		.word	.LC46
 6696 0fc4 240B0000 		.word	.LC47
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 160


 6697 0fc8 380B0000 		.word	.LC48
 6698 0fcc 4C0B0000 		.word	.LC49
 6699 0fd0 600B0000 		.word	.LC50
 6700 0fd4 7C0B0000 		.word	.LC51
 6701 0fd8 900B0000 		.word	.LC52
 6702 0fdc A80B0000 		.word	.LC53
 6703 0fe0 C80B0000 		.word	.LC54
 6704 0fe4 E40B0000 		.word	.LC55
 6705 0fe8 F80B0000 		.word	.LC56
 6706 0fec 180C0000 		.word	.LC57
 6707 0ff0 340C0000 		.word	.LC58
 6708 0ff4 480C0000 		.word	.LC59
 6709 0ff8 600C0000 		.word	.LC60
 6710 0ffc 800C0000 		.word	.LC61
 6711 1000 940C0000 		.word	.LC62
 6712 1004 AC0C0000 		.word	.LC63
 6713 1008 C40C0000 		.word	.LC64
 6714 100c E40C0000 		.word	.LC65
 6715 1010 040D0000 		.word	.LC66
 6716 1014 200D0000 		.word	.LC67
 6717 1018 3C0D0000 		.word	.LC68
 6718 101c 5C0D0000 		.word	.LC69
 6719 1020 740D0000 		.word	.LC70
 6720 1024 900D0000 		.word	.LC71
 6721 1028 AC0D0000 		.word	.LC72
 6722 102c CC0D0000 		.word	.LC73
 6723 1030 E80D0000 		.word	.LC74
 6724 1034 000E0000 		.word	.LC75
 6725 1038 140E0000 		.word	.LC76
 6726 103c 2C0E0000 		.word	.LC77
 6727 1040 480E0000 		.word	.LC78
 6728 1044 600E0000 		.word	.LC79
 6729 1048 840E0000 		.word	.LC80
 6730 104c 940E0000 		.word	.LC81
 6731 1050 BC0E0000 		.word	.LC82
 6732 1054 E40E0000 		.word	.LC83
 6733              		.align	2
 6734              	.LC85:
 6735 1058 03       		.byte	3
 6736 1059 01       		.byte	1
 6737 105a 02       		.byte	2
 6738 105b 03       		.byte	3
 6739 105c 03       		.byte	3
 6740 105d 03       		.byte	3
 6741 105e 03       		.byte	3
 6742 105f 03       		.byte	3
 6743 1060 03       		.byte	3
 6744 1061 04       		.byte	4
 6745 1062 05       		.byte	5
 6746 1063 06       		.byte	6
 6747 1064 03       		.byte	3
 6748 1065 07       		.byte	7
 6749 1066 08       		.byte	8
 6750 1067 09       		.byte	9
 6751 1068 03       		.byte	3
 6752 1069 05       		.byte	5
 6753 106a 03       		.byte	3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 161


 6754 106b 01       		.byte	1
 6755 106c 02       		.byte	2
 6756 106d 03       		.byte	3
 6757 106e 03       		.byte	3
 6758 106f 03       		.byte	3
 6759 1070 09       		.byte	9
 6760 1071 03       		.byte	3
 6761 1072 05       		.byte	5
 6762 1073 03       		.byte	3
 6763 1074 0A       		.byte	10
 6764 1075 0B       		.byte	11
 6765 1076 0C       		.byte	12
 6766 1077 03       		.byte	3
 6767              		.align	2
 6768              	.LC86:
 6769 1078 02       		.byte	2
 6770 1079 03       		.byte	3
 6771 107a 08       		.byte	8
 6772 107b 0B       		.byte	11
 6773 107c 17       		.byte	23
 6774 107d 2C       		.byte	44
 6775 107e 2D       		.byte	45
 6776 107f 32       		.byte	50
 6777 1080 35       		.byte	53
 6778 1081 000000   		.align	2
 6779              	.LC87:
 6780 1084 02       		.byte	2
 6781 1085 03       		.byte	3
 6782 1086 05       		.byte	5
 6783 1087 08       		.byte	8
 6784 1088 0B       		.byte	11
 6785 1089 17       		.byte	23
 6786 108a 18       		.byte	24
 6787 108b 1C       		.byte	28
 6788 108c 1F       		.byte	31
 6789 108d 20       		.byte	32
 6790 108e 26       		.byte	38
 6791 108f 2C       		.byte	44
 6792 1090 2D       		.byte	45
 6793 1091 2F       		.byte	47
 6794 1092 32       		.byte	50
 6795 1093 35       		.byte	53
 6796 1094 3D       		.byte	61
 6797 1095 4B       		.byte	75
 6798              		.section	.text.manage_param_list,"ax",%progbits
 6799              		.align	2
 6800              		.global	manage_param_list
 6801              		.thumb
 6802              		.thumb_func
 6803              		.type	manage_param_list, %function
 6804              	manage_param_list:
 6805              	.LFB68:
 871:..\src/command_processing.c **** 
 872:..\src/command_processing.c **** //==============================================================================
 873:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 874:..\src/command_processing.c **** //==============================================================================
 875:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 162


 876:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 6806              		.loc 1 876 0
 6807              		.cfi_startproc
 6808              		@ args = 0, pretend = 0, frame = 1416
 6809              		@ frame_needed = 1, uses_anonymous_args = 0
 6810 0000 B0B5     		push	{r4, r5, r7, lr}
 6811              		.cfi_def_cfa_offset 16
 6812              		.cfi_offset 4, -16
 6813              		.cfi_offset 5, -12
 6814              		.cfi_offset 7, -8
 6815              		.cfi_offset 14, -4
 6816 0002 ADF5B36D 		sub	sp, sp, #1432
 6817              		.cfi_def_cfa_offset 1448
 6818 0006 04AF     		add	r7, sp, #16
 6819              		.cfi_def_cfa 7, 1432
 6820 0008 0246     		mov	r2, r0
 6821 000a BB1D     		adds	r3, r7, #6
 6822 000c 1A80     		strh	r2, [r3]	@ movhi
 877:..\src/command_processing.c ****     uint8 CYDATA i, j;
 878:..\src/command_processing.c ****     uint8 CYDATA sod;
 879:..\src/command_processing.c ****     uint8 PARAM_IDX;
 880:..\src/command_processing.c ****     int16 aux_int16;
 881:..\src/command_processing.c ****     uint16 aux_uint16;
 882:..\src/command_processing.c ****     int32 aux_int32;
 883:..\src/command_processing.c ****     uint32 aux_uint32;
 884:..\src/command_processing.c ****     float aux_float;
 885:..\src/command_processing.c ****  
 886:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 6823              		.loc 1 886 0
 6824 000e 0023     		movs	r3, #0
 6825 0010 87F87D35 		strb	r3, [r7, #1405]
 887:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 6826              		.loc 1 887 0
 6827 0014 0123     		movs	r3, #1
 6828 0016 87F87C35 		strb	r3, [r7, #1404]
 888:..\src/command_processing.c ****     
 889:..\src/command_processing.c ****     // Arrays
 890:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 6829              		.loc 1 890 0
 6830 001a 054B     		ldr	r3, .L369
 6831 001c C7F88035 		str	r3, [r7, #1408]
 891:..\src/command_processing.c ****     
 892:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 6832              		.loc 1 892 0
 6833 0020 BB1D     		adds	r3, r7, #6
 6834 0022 1B88     		ldrh	r3, [r3]
 6835 0024 002B     		cmp	r3, #0
 6836 0026 07D0     		beq	.L306
 893:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 6837              		.loc 1 893 0
 6838 0028 024B     		ldr	r3, .L369+4
 6839 002a C7F88035 		str	r3, [r7, #1408]
 6840 002e 03E0     		b	.L370
 6841              	.L371:
 6842              		.align	2
 6843              	.L369:
 6844 0030 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 163


 6845 0034 00000000 		.word	g_mem
 6846              	.L370:
 6847              	.L306:
 894:..\src/command_processing.c ****     }
 895:..\src/command_processing.c ****  
 896:..\src/command_processing.c ****     
 897:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 898:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6848              		.loc 1 899 0
 6849 0038 D7F88035 		ldr	r3, [r7, #1408]
 6850 003c 03F1A002 		add	r2, r3, #160
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6851              		.loc 1 898 0
 6852 0040 07F21C43 		addw	r3, r7, #1052
 6853 0044 1A60     		str	r2, [r3]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 6854              		.loc 1 900 0
 6855 0046 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6856 004a 1346     		mov	r3, r2
 6857 004c DB00     		lsls	r3, r3, #3
 6858 004e 9B1A     		subs	r3, r3, r2
 6859 0050 1B01     		lsls	r3, r3, #4
 6860 0052 B033     		adds	r3, r3, #176
 6861 0054 D7F88025 		ldr	r2, [r7, #1408]
 6862 0058 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6863              		.loc 1 898 0
 6864 005a 07F21C43 		addw	r3, r7, #1052
 6865 005e 5A60     		str	r2, [r3, #4]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 6866              		.loc 1 901 0
 6867 0060 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6868 0064 1346     		mov	r3, r2
 6869 0066 DB00     		lsls	r3, r3, #3
 6870 0068 9B1A     		subs	r3, r3, r2
 6871 006a 1B01     		lsls	r3, r3, #4
 6872 006c B833     		adds	r3, r3, #184
 6873 006e D7F88025 		ldr	r2, [r7, #1408]
 6874 0072 1344     		add	r3, r3, r2
 6875 0074 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6876              		.loc 1 898 0
 6877 0076 07F21C43 		addw	r3, r7, #1052
 6878 007a 9A60     		str	r2, [r3, #8]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 6879              		.loc 1 902 0
 6880 007c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6881 0080 1346     		mov	r3, r2
 6882 0082 DB00     		lsls	r3, r3, #3
 6883 0084 9B1A     		subs	r3, r3, r2
 6884 0086 1B01     		lsls	r3, r3, #4
 6885 0088 E033     		adds	r3, r3, #224
 6886 008a D7F88025 		ldr	r2, [r7, #1408]
 6887 008e 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6888              		.loc 1 898 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 164


 6889 0090 07F21C43 		addw	r3, r7, #1052
 6890 0094 DA60     		str	r2, [r3, #12]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 6891              		.loc 1 903 0
 6892 0096 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6893 009a 1346     		mov	r3, r2
 6894 009c DB00     		lsls	r3, r3, #3
 6895 009e 9B1A     		subs	r3, r3, r2
 6896 00a0 1B01     		lsls	r3, r3, #4
 6897 00a2 03F58473 		add	r3, r3, #264
 6898 00a6 D7F88025 		ldr	r2, [r7, #1408]
 6899 00aa 1344     		add	r3, r3, r2
 6900 00ac 9A1D     		adds	r2, r3, #6
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6901              		.loc 1 898 0
 6902 00ae 07F21C43 		addw	r3, r7, #1052
 6903 00b2 1A61     		str	r2, [r3, #16]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 6904              		.loc 1 904 0
 6905 00b4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6906 00b8 1346     		mov	r3, r2
 6907 00ba DB00     		lsls	r3, r3, #3
 6908 00bc 9B1A     		subs	r3, r3, r2
 6909 00be 1B01     		lsls	r3, r3, #4
 6910 00c0 03F58473 		add	r3, r3, #264
 6911 00c4 D7F88025 		ldr	r2, [r7, #1408]
 6912 00c8 1344     		add	r3, r3, r2
 6913 00ca DA1D     		adds	r2, r3, #7
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6914              		.loc 1 898 0
 6915 00cc 07F21C43 		addw	r3, r7, #1052
 6916 00d0 5A61     		str	r2, [r3, #20]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 6917              		.loc 1 905 0
 6918 00d2 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6919 00d6 D7F88015 		ldr	r1, [r7, #1408]
 6920 00da 1346     		mov	r3, r2
 6921 00dc DB00     		lsls	r3, r3, #3
 6922 00de 9B1A     		subs	r3, r3, r2
 6923 00e0 1B01     		lsls	r3, r3, #4
 6924 00e2 0B44     		add	r3, r3, r1
 6925 00e4 03F58873 		add	r3, r3, #272
 6926 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6927 00ea 1A46     		mov	r2, r3
 6928 00ec 1346     		mov	r3, r2
 6929 00ee 5B00     		lsls	r3, r3, #1
 6930 00f0 1344     		add	r3, r3, r2
 6931 00f2 1B01     		lsls	r3, r3, #4
 6932 00f4 03F5C873 		add	r3, r3, #400
 6933 00f8 D7F88025 		ldr	r2, [r7, #1408]
 6934 00fc 1344     		add	r3, r3, r2
 6935 00fe 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6936              		.loc 1 898 0
 6937 0100 07F21C43 		addw	r3, r7, #1052
 6938 0104 9A61     		str	r2, [r3, #24]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 165


 6939              		.loc 1 906 0
 6940 0106 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6941 010a D7F88015 		ldr	r1, [r7, #1408]
 6942 010e 1346     		mov	r3, r2
 6943 0110 DB00     		lsls	r3, r3, #3
 6944 0112 9B1A     		subs	r3, r3, r2
 6945 0114 1B01     		lsls	r3, r3, #4
 6946 0116 0B44     		add	r3, r3, r1
 6947 0118 03F58873 		add	r3, r3, #272
 6948 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6949 011e 1A46     		mov	r2, r3
 6950 0120 1346     		mov	r3, r2
 6951 0122 5B00     		lsls	r3, r3, #1
 6952 0124 1344     		add	r3, r3, r2
 6953 0126 1B01     		lsls	r3, r3, #4
 6954 0128 03F5CC73 		add	r3, r3, #408
 6955 012c D7F88025 		ldr	r2, [r7, #1408]
 6956 0130 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6957              		.loc 1 898 0
 6958 0132 07F21C43 		addw	r3, r7, #1052
 6959 0136 DA61     		str	r2, [r3, #28]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 6960              		.loc 1 907 0
 6961 0138 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6962 013c D7F88015 		ldr	r1, [r7, #1408]
 6963 0140 1346     		mov	r3, r2
 6964 0142 DB00     		lsls	r3, r3, #3
 6965 0144 9B1A     		subs	r3, r3, r2
 6966 0146 1B01     		lsls	r3, r3, #4
 6967 0148 0B44     		add	r3, r3, r1
 6968 014a 03F58873 		add	r3, r3, #272
 6969 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6970 0150 1A46     		mov	r2, r3
 6971 0152 1346     		mov	r3, r2
 6972 0154 5B00     		lsls	r3, r3, #1
 6973 0156 1344     		add	r3, r3, r2
 6974 0158 1B01     		lsls	r3, r3, #4
 6975 015a 03F5D073 		add	r3, r3, #416
 6976 015e D7F88025 		ldr	r2, [r7, #1408]
 6977 0162 1344     		add	r3, r3, r2
 6978 0164 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6979              		.loc 1 898 0
 6980 0166 07F21C43 		addw	r3, r7, #1052
 6981 016a 1A62     		str	r2, [r3, #32]
 908:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 6982              		.loc 1 908 0
 6983 016c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6984 0170 1346     		mov	r3, r2
 6985 0172 DB00     		lsls	r3, r3, #3
 6986 0174 9B1A     		subs	r3, r3, r2
 6987 0176 1B01     		lsls	r3, r3, #4
 6988 0178 E033     		adds	r3, r3, #224
 6989 017a D7F88025 		ldr	r2, [r7, #1408]
 6990 017e 1344     		add	r3, r3, r2
 6991 0180 DA1C     		adds	r2, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 166


 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6992              		.loc 1 898 0
 6993 0182 07F21C43 		addw	r3, r7, #1052
 6994 0186 5A62     		str	r2, [r3, #36]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 6995              		.loc 1 909 0
 6996 0188 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 6997 018c 1346     		mov	r3, r2
 6998 018e DB00     		lsls	r3, r3, #3
 6999 0190 9B1A     		subs	r3, r3, r2
 7000 0192 1B01     		lsls	r3, r3, #4
 7001 0194 E033     		adds	r3, r3, #224
 7002 0196 D7F88025 		ldr	r2, [r7, #1408]
 7003 019a 1344     		add	r3, r3, r2
 7004 019c 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7005              		.loc 1 898 0
 7006 019e 07F21C43 		addw	r3, r7, #1052
 7007 01a2 9A62     		str	r2, [r3, #40]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 7008              		.loc 1 910 0
 7009 01a4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7010 01a8 1346     		mov	r3, r2
 7011 01aa DB00     		lsls	r3, r3, #3
 7012 01ac 9B1A     		subs	r3, r3, r2
 7013 01ae 1B01     		lsls	r3, r3, #4
 7014 01b0 E833     		adds	r3, r3, #232
 7015 01b2 D7F88025 		ldr	r2, [r7, #1408]
 7016 01b6 1344     		add	r3, r3, r2
 7017 01b8 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7018              		.loc 1 898 0
 7019 01ba 07F21C43 		addw	r3, r7, #1052
 7020 01be DA62     		str	r2, [r3, #44]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 7021              		.loc 1 911 0
 7022 01c0 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7023 01c4 1346     		mov	r3, r2
 7024 01c6 DB00     		lsls	r3, r3, #3
 7025 01c8 9B1A     		subs	r3, r3, r2
 7026 01ca 1B01     		lsls	r3, r3, #4
 7027 01cc 03F58473 		add	r3, r3, #264
 7028 01d0 D7F88025 		ldr	r2, [r7, #1408]
 7029 01d4 1344     		add	r3, r3, r2
 7030 01d6 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7031              		.loc 1 898 0
 7032 01d8 07F21C43 		addw	r3, r7, #1052
 7033 01dc 1A63     		str	r2, [r3, #48]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 7034              		.loc 1 912 0
 7035 01de D7F88035 		ldr	r3, [r7, #1408]
 7036 01e2 03F5F872 		add	r2, r3, #496
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7037              		.loc 1 898 0
 7038 01e6 07F21C43 		addw	r3, r7, #1052
 7039 01ea 5A63     		str	r2, [r3, #52]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 167


 913:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 7040              		.loc 1 913 0
 7041 01ec D7F88035 		ldr	r3, [r7, #1408]
 7042 01f0 03F5FF72 		add	r2, r3, #510
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7043              		.loc 1 898 0
 7044 01f4 07F21C43 		addw	r3, r7, #1052
 7045 01f8 9A63     		str	r2, [r3, #56]
 914:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 7046              		.loc 1 914 0
 7047 01fa D7F88035 		ldr	r3, [r7, #1408]
 7048 01fe 03F5FA72 		add	r2, r3, #500
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7049              		.loc 1 898 0
 7050 0202 07F21C43 		addw	r3, r7, #1052
 7051 0206 DA63     		str	r2, [r3, #60]
 915:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 7052              		.loc 1 915 0
 7053 0208 D7F88035 		ldr	r3, [r7, #1408]
 7054 020c 03F5FE72 		add	r2, r3, #508
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7055              		.loc 1 898 0
 7056 0210 07F21C43 		addw	r3, r7, #1052
 7057 0214 1A64     		str	r2, [r3, #64]
 916:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 7058              		.loc 1 916 0
 7059 0216 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7060 021a D7F88015 		ldr	r1, [r7, #1408]
 7061 021e 1346     		mov	r3, r2
 7062 0220 DB00     		lsls	r3, r3, #3
 7063 0222 9B1A     		subs	r3, r3, r2
 7064 0224 1B01     		lsls	r3, r3, #4
 7065 0226 0B44     		add	r3, r3, r1
 7066 0228 03F58873 		add	r3, r3, #272
 7067 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7068 022e 1A46     		mov	r2, r3
 7069 0230 1346     		mov	r3, r2
 7070 0232 5B00     		lsls	r3, r3, #1
 7071 0234 1344     		add	r3, r3, r2
 7072 0236 1B01     		lsls	r3, r3, #4
 7073 0238 03F5D873 		add	r3, r3, #432
 7074 023c D7F88025 		ldr	r2, [r7, #1408]
 7075 0240 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7076              		.loc 1 898 0
 7077 0242 07F21C43 		addw	r3, r7, #1052
 7078 0246 5A64     		str	r2, [r3, #68]
 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 7079              		.loc 1 917 0
 7080 0248 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7081 024c D7F88015 		ldr	r1, [r7, #1408]
 7082 0250 1346     		mov	r3, r2
 7083 0252 DB00     		lsls	r3, r3, #3
 7084 0254 9B1A     		subs	r3, r3, r2
 7085 0256 1B01     		lsls	r3, r3, #4
 7086 0258 0B44     		add	r3, r3, r1
 7087 025a 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 168


 7088 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7089 0260 1A46     		mov	r2, r3
 7090 0262 1346     		mov	r3, r2
 7091 0264 5B00     		lsls	r3, r3, #1
 7092 0266 1344     		add	r3, r3, r2
 7093 0268 1B01     		lsls	r3, r3, #4
 7094 026a 03F5D873 		add	r3, r3, #432
 7095 026e D7F88025 		ldr	r2, [r7, #1408]
 7096 0272 1344     		add	r3, r3, r2
 7097 0274 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7098              		.loc 1 898 0
 7099 0276 07F21C43 		addw	r3, r7, #1052
 7100 027a 9A64     		str	r2, [r3, #72]
 918:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 7101              		.loc 1 918 0
 7102 027c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7103 0280 1346     		mov	r3, r2
 7104 0282 DB00     		lsls	r3, r3, #3
 7105 0284 9B1A     		subs	r3, r3, r2
 7106 0286 1B01     		lsls	r3, r3, #4
 7107 0288 E033     		adds	r3, r3, #224
 7108 028a D7F88025 		ldr	r2, [r7, #1408]
 7109 028e 1344     		add	r3, r3, r2
 7110 0290 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7111              		.loc 1 898 0
 7112 0292 07F21C43 		addw	r3, r7, #1052
 7113 0296 DA64     		str	r2, [r3, #76]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 7114              		.loc 1 919 0
 7115 0298 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7116 029c 1346     		mov	r3, r2
 7117 029e DB00     		lsls	r3, r3, #3
 7118 02a0 9B1A     		subs	r3, r3, r2
 7119 02a2 1B01     		lsls	r3, r3, #4
 7120 02a4 F033     		adds	r3, r3, #240
 7121 02a6 D7F88025 		ldr	r2, [r7, #1408]
 7122 02aa 1344     		add	r3, r3, r2
 7123 02ac 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7124              		.loc 1 898 0
 7125 02ae 07F21C43 		addw	r3, r7, #1052
 7126 02b2 1A65     		str	r2, [r3, #80]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 7127              		.loc 1 920 0
 7128 02b4 D7F88035 		ldr	r3, [r7, #1408]
 7129 02b8 03F1A102 		add	r2, r3, #161
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7130              		.loc 1 898 0
 7131 02bc 07F21C43 		addw	r3, r7, #1052
 7132 02c0 5A65     		str	r2, [r3, #84]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 7133              		.loc 1 921 0
 7134 02c2 D7F88035 		ldr	r3, [r7, #1408]
 7135 02c6 03F52872 		add	r2, r3, #672
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 169


 7136              		.loc 1 898 0
 7137 02ca 07F21C43 		addw	r3, r7, #1052
 7138 02ce 9A65     		str	r2, [r3, #88]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 7139              		.loc 1 922 0
 7140 02d0 D7F88035 		ldr	r3, [r7, #1408]
 7141 02d4 03F52972 		add	r2, r3, #676
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7142              		.loc 1 898 0
 7143 02d8 07F21C43 		addw	r3, r7, #1052
 7144 02dc DA65     		str	r2, [r3, #92]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 7145              		.loc 1 923 0
 7146 02de D7F88035 		ldr	r3, [r7, #1408]
 7147 02e2 03F52A72 		add	r2, r3, #680
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7148              		.loc 1 898 0
 7149 02e6 07F21C43 		addw	r3, r7, #1052
 7150 02ea 1A66     		str	r2, [r3, #96]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 7151              		.loc 1 924 0
 7152 02ec D7F88035 		ldr	r3, [r7, #1408]
 7153 02f0 03F52B72 		add	r2, r3, #684
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7154              		.loc 1 898 0
 7155 02f4 07F21C43 		addw	r3, r7, #1052
 7156 02f8 5A66     		str	r2, [r3, #100]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 7157              		.loc 1 925 0
 7158 02fa D7F88035 		ldr	r3, [r7, #1408]
 7159 02fe 03F2FF12 		addw	r2, r3, #511
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7160              		.loc 1 898 0
 7161 0302 07F21C43 		addw	r3, r7, #1052
 7162 0306 9A66     		str	r2, [r3, #104]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 7163              		.loc 1 926 0
 7164 0308 D7F88035 		ldr	r3, [r7, #1408]
 7165 030c 03F1A702 		add	r2, r3, #167
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7166              		.loc 1 898 0
 7167 0310 07F21C43 		addw	r3, r7, #1052
 7168 0314 DA66     		str	r2, [r3, #108]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 7169              		.loc 1 927 0
 7170 0316 D7F88035 		ldr	r3, [r7, #1408]
 7171 031a 03F50072 		add	r2, r3, #512
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7172              		.loc 1 898 0
 7173 031e 07F21C43 		addw	r3, r7, #1052
 7174 0322 1A67     		str	r2, [r3, #112]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 7175              		.loc 1 928 0
 7176 0324 D7F88035 		ldr	r3, [r7, #1408]
 7177 0328 03F22622 		addw	r2, r3, #550
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7178              		.loc 1 898 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 170


 7179 032c 07F21C43 		addw	r3, r7, #1052
 7180 0330 5A67     		str	r2, [r3, #116]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 7181              		.loc 1 929 0
 7182 0332 D7F88035 		ldr	r3, [r7, #1408]
 7183 0336 03F1A802 		add	r2, r3, #168
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7184              		.loc 1 898 0
 7185 033a 07F21C43 		addw	r3, r7, #1052
 7186 033e 9A67     		str	r2, [r3, #120]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 7187              		.loc 1 930 0
 7188 0340 D7F88035 		ldr	r3, [r7, #1408]
 7189 0344 03F50872 		add	r2, r3, #544
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7190              		.loc 1 898 0
 7191 0348 07F21C43 		addw	r3, r7, #1052
 7192 034c DA67     		str	r2, [r3, #124]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 7193              		.loc 1 931 0
 7194 034e D7F88035 		ldr	r3, [r7, #1408]
 7195 0352 03F20122 		addw	r2, r3, #513
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7196              		.loc 1 898 0
 7197 0356 07F21C43 		addw	r3, r7, #1052
 7198 035a C3F88020 		str	r2, [r3, #128]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 7199              		.loc 1 932 0
 7200 035e D7F88035 		ldr	r3, [r7, #1408]
 7201 0362 03F20222 		addw	r2, r3, #514
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7202              		.loc 1 898 0
 7203 0366 07F21C43 		addw	r3, r7, #1052
 7204 036a C3F88420 		str	r2, [r3, #132]
 933:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 7205              		.loc 1 933 0
 7206 036e D7F88035 		ldr	r3, [r7, #1408]
 7207 0372 03F1AB02 		add	r2, r3, #171
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7208              		.loc 1 898 0
 7209 0376 07F21C43 		addw	r3, r7, #1052
 7210 037a C3F88820 		str	r2, [r3, #136]
 934:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 7211              		.loc 1 934 0
 7212 037e D7F88035 		ldr	r3, [r7, #1408]
 7213 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7214 0386 1233     		adds	r3, r3, #18
 7215 0388 5B01     		lsls	r3, r3, #5
 7216 038a D7F88025 		ldr	r2, [r7, #1408]
 7217 038e 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7218              		.loc 1 898 0
 7219 0390 07F21C43 		addw	r3, r7, #1052
 7220 0394 C3F88C20 		str	r2, [r3, #140]
 935:..\src/command_processing.c ****         
 936:..\src/command_processing.c ****         // GENERIC PARAMS
 937:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 171


 7221              		.loc 1 937 0
 7222 0398 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7223 039c 1346     		mov	r3, r2
 7224 039e DB00     		lsls	r3, r3, #3
 7225 03a0 9B1A     		subs	r3, r3, r2
 7226 03a2 1B01     		lsls	r3, r3, #4
 7227 03a4 03F58873 		add	r3, r3, #272
 7228 03a8 D7F88025 		ldr	r2, [r7, #1408]
 7229 03ac 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7230              		.loc 1 898 0
 7231 03ae 07F21C43 		addw	r3, r7, #1052
 7232 03b2 C3F89020 		str	r2, [r3, #144]
 938:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 7233              		.loc 1 938 0
 7234 03b6 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7235 03ba 1346     		mov	r3, r2
 7236 03bc DB00     		lsls	r3, r3, #3
 7237 03be 9B1A     		subs	r3, r3, r2
 7238 03c0 1B01     		lsls	r3, r3, #4
 7239 03c2 E033     		adds	r3, r3, #224
 7240 03c4 D7F88025 		ldr	r2, [r7, #1408]
 7241 03c8 1344     		add	r3, r3, r2
 7242 03ca 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7243              		.loc 1 898 0
 7244 03cc 07F21C43 		addw	r3, r7, #1052
 7245 03d0 C3F89420 		str	r2, [r3, #148]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 7246              		.loc 1 939 0
 7247 03d4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7248 03d8 1346     		mov	r3, r2
 7249 03da DB00     		lsls	r3, r3, #3
 7250 03dc 9B1A     		subs	r3, r3, r2
 7251 03de 1B01     		lsls	r3, r3, #4
 7252 03e0 03F58873 		add	r3, r3, #272
 7253 03e4 D7F88025 		ldr	r2, [r7, #1408]
 7254 03e8 1344     		add	r3, r3, r2
 7255 03ea 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7256              		.loc 1 898 0
 7257 03ec 07F21C43 		addw	r3, r7, #1052
 7258 03f0 C3F89820 		str	r2, [r3, #152]
 940:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 7259              		.loc 1 940 0
 7260 03f4 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7261 03f8 1346     		mov	r3, r2
 7262 03fa DB00     		lsls	r3, r3, #3
 7263 03fc 9B1A     		subs	r3, r3, r2
 7264 03fe 1B01     		lsls	r3, r3, #4
 7265 0400 03F58873 		add	r3, r3, #272
 7266 0404 D7F88025 		ldr	r2, [r7, #1408]
 7267 0408 1344     		add	r3, r3, r2
 7268 040a 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7269              		.loc 1 898 0
 7270 040c 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 172


 7271 0410 C3F89C20 		str	r2, [r3, #156]
 941:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7272              		.loc 1 941 0
 7273 0414 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7274 0418 D7F88015 		ldr	r1, [r7, #1408]
 7275 041c 1346     		mov	r3, r2
 7276 041e DB00     		lsls	r3, r3, #3
 7277 0420 9B1A     		subs	r3, r3, r2
 7278 0422 1B01     		lsls	r3, r3, #4
 7279 0424 0B44     		add	r3, r3, r1
 7280 0426 03F58873 		add	r3, r3, #272
 7281 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7282 042c 1A46     		mov	r2, r3
 7283 042e 1346     		mov	r3, r2
 7284 0430 5B00     		lsls	r3, r3, #1
 7285 0432 1344     		add	r3, r3, r2
 7286 0434 1B01     		lsls	r3, r3, #4
 7287 0436 03F5D873 		add	r3, r3, #432
 7288 043a D7F88025 		ldr	r2, [r7, #1408]
 7289 043e 1344     		add	r3, r3, r2
 7290 0440 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7291              		.loc 1 898 0
 7292 0442 07F21C43 		addw	r3, r7, #1052
 7293 0446 C3F8A020 		str	r2, [r3, #160]
 942:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 7294              		.loc 1 942 0
 7295 044a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 7296 044e D7F88015 		ldr	r1, [r7, #1408]
 7297 0452 1346     		mov	r3, r2
 7298 0454 DB00     		lsls	r3, r3, #3
 7299 0456 9B1A     		subs	r3, r3, r2
 7300 0458 1B01     		lsls	r3, r3, #4
 7301 045a 0B44     		add	r3, r3, r1
 7302 045c 03F58873 		add	r3, r3, #272
 7303 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7304 0462 1A46     		mov	r2, r3
 7305 0464 1346     		mov	r3, r2
 7306 0466 5B00     		lsls	r3, r3, #1
 7307 0468 1344     		add	r3, r3, r2
 7308 046a 1B01     		lsls	r3, r3, #4
 7309 046c 03F5D873 		add	r3, r3, #432
 7310 0470 D7F88025 		ldr	r2, [r7, #1408]
 7311 0474 1344     		add	r3, r3, r2
 7312 0476 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7313              		.loc 1 898 0
 7314 0478 07F21C43 		addw	r3, r7, #1052
 7315 047c C3F8A420 		str	r2, [r3, #164]
 943:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 7316              		.loc 1 943 0
 7317 0480 D7F88035 		ldr	r3, [r7, #1408]
 7318 0484 03F1A902 		add	r2, r3, #169
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7319              		.loc 1 898 0
 7320 0488 07F21C43 		addw	r3, r7, #1052
 7321 048c C3F8A820 		str	r2, [r3, #168]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 173


 944:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 7322              		.loc 1 944 0
 7323 0490 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7324 0494 1346     		mov	r3, r2
 7325 0496 DB00     		lsls	r3, r3, #3
 7326 0498 9B1A     		subs	r3, r3, r2
 7327 049a 1B01     		lsls	r3, r3, #4
 7328 049c B033     		adds	r3, r3, #176
 7329 049e D7F88025 		ldr	r2, [r7, #1408]
 7330 04a2 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7331              		.loc 1 898 0
 7332 04a4 07F21C43 		addw	r3, r7, #1052
 7333 04a8 C3F8AC20 		str	r2, [r3, #172]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 7334              		.loc 1 945 0
 7335 04ac 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7336 04b0 1346     		mov	r3, r2
 7337 04b2 DB00     		lsls	r3, r3, #3
 7338 04b4 9B1A     		subs	r3, r3, r2
 7339 04b6 1B01     		lsls	r3, r3, #4
 7340 04b8 B833     		adds	r3, r3, #184
 7341 04ba D7F88025 		ldr	r2, [r7, #1408]
 7342 04be 1344     		add	r3, r3, r2
 7343 04c0 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7344              		.loc 1 898 0
 7345 04c2 07F21C43 		addw	r3, r7, #1052
 7346 04c6 C3F8B020 		str	r2, [r3, #176]
 946:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 7347              		.loc 1 946 0
 7348 04ca 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7349 04ce 1346     		mov	r3, r2
 7350 04d0 DB00     		lsls	r3, r3, #3
 7351 04d2 9B1A     		subs	r3, r3, r2
 7352 04d4 1B01     		lsls	r3, r3, #4
 7353 04d6 E033     		adds	r3, r3, #224
 7354 04d8 D7F88025 		ldr	r2, [r7, #1408]
 7355 04dc 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7356              		.loc 1 898 0
 7357 04de 07F21C43 		addw	r3, r7, #1052
 7358 04e2 C3F8B420 		str	r2, [r3, #180]
 947:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 7359              		.loc 1 947 0
 7360 04e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7361 04ea 1346     		mov	r3, r2
 7362 04ec DB00     		lsls	r3, r3, #3
 7363 04ee 9B1A     		subs	r3, r3, r2
 7364 04f0 1B01     		lsls	r3, r3, #4
 7365 04f2 03F58473 		add	r3, r3, #264
 7366 04f6 D7F88025 		ldr	r2, [r7, #1408]
 7367 04fa 1344     		add	r3, r3, r2
 7368 04fc 9A1D     		adds	r2, r3, #6
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7369              		.loc 1 898 0
 7370 04fe 07F21C43 		addw	r3, r7, #1052
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 174


 7371 0502 C3F8B820 		str	r2, [r3, #184]
 948:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 7372              		.loc 1 948 0
 7373 0506 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7374 050a 1346     		mov	r3, r2
 7375 050c DB00     		lsls	r3, r3, #3
 7376 050e 9B1A     		subs	r3, r3, r2
 7377 0510 1B01     		lsls	r3, r3, #4
 7378 0512 03F58473 		add	r3, r3, #264
 7379 0516 D7F88025 		ldr	r2, [r7, #1408]
 7380 051a 1344     		add	r3, r3, r2
 7381 051c DA1D     		adds	r2, r3, #7
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7382              		.loc 1 898 0
 7383 051e 07F21C43 		addw	r3, r7, #1052
 7384 0522 C3F8BC20 		str	r2, [r3, #188]
 949:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 7385              		.loc 1 949 0
 7386 0526 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7387 052a D7F88015 		ldr	r1, [r7, #1408]
 7388 052e 1346     		mov	r3, r2
 7389 0530 DB00     		lsls	r3, r3, #3
 7390 0532 9B1A     		subs	r3, r3, r2
 7391 0534 1B01     		lsls	r3, r3, #4
 7392 0536 0B44     		add	r3, r3, r1
 7393 0538 03F58873 		add	r3, r3, #272
 7394 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7395 053e 1A46     		mov	r2, r3
 7396 0540 1346     		mov	r3, r2
 7397 0542 5B00     		lsls	r3, r3, #1
 7398 0544 1344     		add	r3, r3, r2
 7399 0546 1B01     		lsls	r3, r3, #4
 7400 0548 03F5C873 		add	r3, r3, #400
 7401 054c D7F88025 		ldr	r2, [r7, #1408]
 7402 0550 1344     		add	r3, r3, r2
 7403 0552 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7404              		.loc 1 898 0
 7405 0554 07F21C43 		addw	r3, r7, #1052
 7406 0558 C3F8C020 		str	r2, [r3, #192]
 950:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 7407              		.loc 1 950 0
 7408 055c 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7409 0560 D7F88015 		ldr	r1, [r7, #1408]
 7410 0564 1346     		mov	r3, r2
 7411 0566 DB00     		lsls	r3, r3, #3
 7412 0568 9B1A     		subs	r3, r3, r2
 7413 056a 1B01     		lsls	r3, r3, #4
 7414 056c 0B44     		add	r3, r3, r1
 7415 056e 03F58873 		add	r3, r3, #272
 7416 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7417 0574 1A46     		mov	r2, r3
 7418 0576 1346     		mov	r3, r2
 7419 0578 5B00     		lsls	r3, r3, #1
 7420 057a 1344     		add	r3, r3, r2
 7421 057c 1B01     		lsls	r3, r3, #4
 7422 057e 03F5CC73 		add	r3, r3, #408
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 175


 7423 0582 D7F88025 		ldr	r2, [r7, #1408]
 7424 0586 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7425              		.loc 1 898 0
 7426 0588 07F21C43 		addw	r3, r7, #1052
 7427 058c C3F8C420 		str	r2, [r3, #196]
 951:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 7428              		.loc 1 951 0
 7429 0590 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7430 0594 D7F88015 		ldr	r1, [r7, #1408]
 7431 0598 1346     		mov	r3, r2
 7432 059a DB00     		lsls	r3, r3, #3
 7433 059c 9B1A     		subs	r3, r3, r2
 7434 059e 1B01     		lsls	r3, r3, #4
 7435 05a0 0B44     		add	r3, r3, r1
 7436 05a2 03F58873 		add	r3, r3, #272
 7437 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7438 05a8 1A46     		mov	r2, r3
 7439 05aa 1346     		mov	r3, r2
 7440 05ac 5B00     		lsls	r3, r3, #1
 7441 05ae 1344     		add	r3, r3, r2
 7442 05b0 1B01     		lsls	r3, r3, #4
 7443 05b2 03F5D073 		add	r3, r3, #416
 7444 05b6 D7F88025 		ldr	r2, [r7, #1408]
 7445 05ba 1344     		add	r3, r3, r2
 7446 05bc 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7447              		.loc 1 898 0
 7448 05be 07F21C43 		addw	r3, r7, #1052
 7449 05c2 C3F8C820 		str	r2, [r3, #200]
 952:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 7450              		.loc 1 952 0
 7451 05c6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7452 05ca 1346     		mov	r3, r2
 7453 05cc DB00     		lsls	r3, r3, #3
 7454 05ce 9B1A     		subs	r3, r3, r2
 7455 05d0 1B01     		lsls	r3, r3, #4
 7456 05d2 E033     		adds	r3, r3, #224
 7457 05d4 D7F88025 		ldr	r2, [r7, #1408]
 7458 05d8 1344     		add	r3, r3, r2
 7459 05da DA1C     		adds	r2, r3, #3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7460              		.loc 1 898 0
 7461 05dc 07F21C43 		addw	r3, r7, #1052
 7462 05e0 C3F8CC20 		str	r2, [r3, #204]
 953:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 7463              		.loc 1 953 0
 7464 05e4 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7465 05e8 1346     		mov	r3, r2
 7466 05ea DB00     		lsls	r3, r3, #3
 7467 05ec 9B1A     		subs	r3, r3, r2
 7468 05ee 1B01     		lsls	r3, r3, #4
 7469 05f0 E033     		adds	r3, r3, #224
 7470 05f2 D7F88025 		ldr	r2, [r7, #1408]
 7471 05f6 1344     		add	r3, r3, r2
 7472 05f8 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 176


 7473              		.loc 1 898 0
 7474 05fa 07F21C43 		addw	r3, r7, #1052
 7475 05fe C3F8D020 		str	r2, [r3, #208]
 954:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 7476              		.loc 1 954 0
 7477 0602 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7478 0606 1346     		mov	r3, r2
 7479 0608 DB00     		lsls	r3, r3, #3
 7480 060a 9B1A     		subs	r3, r3, r2
 7481 060c 1B01     		lsls	r3, r3, #4
 7482 060e E833     		adds	r3, r3, #232
 7483 0610 D7F88025 		ldr	r2, [r7, #1408]
 7484 0614 1344     		add	r3, r3, r2
 7485 0616 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7486              		.loc 1 898 0
 7487 0618 07F21C43 		addw	r3, r7, #1052
 7488 061c C3F8D420 		str	r2, [r3, #212]
 955:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 7489              		.loc 1 955 0
 7490 0620 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7491 0624 1346     		mov	r3, r2
 7492 0626 DB00     		lsls	r3, r3, #3
 7493 0628 9B1A     		subs	r3, r3, r2
 7494 062a 1B01     		lsls	r3, r3, #4
 7495 062c 03F58473 		add	r3, r3, #264
 7496 0630 D7F88025 		ldr	r2, [r7, #1408]
 7497 0634 1344     		add	r3, r3, r2
 7498 0636 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7499              		.loc 1 898 0
 7500 0638 07F21C43 		addw	r3, r7, #1052
 7501 063c C3F8D820 		str	r2, [r3, #216]
 956:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 7502              		.loc 1 956 0
 7503 0640 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7504 0644 D7F88015 		ldr	r1, [r7, #1408]
 7505 0648 1346     		mov	r3, r2
 7506 064a DB00     		lsls	r3, r3, #3
 7507 064c 9B1A     		subs	r3, r3, r2
 7508 064e 1B01     		lsls	r3, r3, #4
 7509 0650 0B44     		add	r3, r3, r1
 7510 0652 03F58873 		add	r3, r3, #272
 7511 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7512 0658 1A46     		mov	r2, r3
 7513 065a 1346     		mov	r3, r2
 7514 065c 5B00     		lsls	r3, r3, #1
 7515 065e 1344     		add	r3, r3, r2
 7516 0660 1B01     		lsls	r3, r3, #4
 7517 0662 03F5D873 		add	r3, r3, #432
 7518 0666 D7F88025 		ldr	r2, [r7, #1408]
 7519 066a 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7520              		.loc 1 898 0
 7521 066c 07F21C43 		addw	r3, r7, #1052
 7522 0670 C3F8DC20 		str	r2, [r3, #220]
 957:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 177


 7523              		.loc 1 957 0
 7524 0674 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7525 0678 D7F88015 		ldr	r1, [r7, #1408]
 7526 067c 1346     		mov	r3, r2
 7527 067e DB00     		lsls	r3, r3, #3
 7528 0680 9B1A     		subs	r3, r3, r2
 7529 0682 1B01     		lsls	r3, r3, #4
 7530 0684 0B44     		add	r3, r3, r1
 7531 0686 03F58873 		add	r3, r3, #272
 7532 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7533 068c 1A46     		mov	r2, r3
 7534 068e 1346     		mov	r3, r2
 7535 0690 5B00     		lsls	r3, r3, #1
 7536 0692 1344     		add	r3, r3, r2
 7537 0694 1B01     		lsls	r3, r3, #4
 7538 0696 03F5D873 		add	r3, r3, #432
 7539 069a D7F88025 		ldr	r2, [r7, #1408]
 7540 069e 1344     		add	r3, r3, r2
 7541 06a0 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7542              		.loc 1 898 0
 7543 06a2 07F21C43 		addw	r3, r7, #1052
 7544 06a6 C3F8E020 		str	r2, [r3, #224]
 958:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 7545              		.loc 1 958 0
 7546 06aa 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7547 06ae 1346     		mov	r3, r2
 7548 06b0 DB00     		lsls	r3, r3, #3
 7549 06b2 9B1A     		subs	r3, r3, r2
 7550 06b4 1B01     		lsls	r3, r3, #4
 7551 06b6 E033     		adds	r3, r3, #224
 7552 06b8 D7F88025 		ldr	r2, [r7, #1408]
 7553 06bc 1344     		add	r3, r3, r2
 7554 06be 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7555              		.loc 1 898 0
 7556 06c0 07F21C43 		addw	r3, r7, #1052
 7557 06c4 C3F8E420 		str	r2, [r3, #228]
 959:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 7558              		.loc 1 959 0
 7559 06c8 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7560 06cc 1346     		mov	r3, r2
 7561 06ce DB00     		lsls	r3, r3, #3
 7562 06d0 9B1A     		subs	r3, r3, r2
 7563 06d2 1B01     		lsls	r3, r3, #4
 7564 06d4 F033     		adds	r3, r3, #240
 7565 06d6 D7F88025 		ldr	r2, [r7, #1408]
 7566 06da 1344     		add	r3, r3, r2
 7567 06dc 1A1D     		adds	r2, r3, #4
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7568              		.loc 1 898 0
 7569 06de 07F21C43 		addw	r3, r7, #1052
 7570 06e2 C3F8E820 		str	r2, [r3, #232]
 960:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 7571              		.loc 1 960 0
 7572 06e6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7573 06ea 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 178


 7574 06ec DB00     		lsls	r3, r3, #3
 7575 06ee 9B1A     		subs	r3, r3, r2
 7576 06f0 1B01     		lsls	r3, r3, #4
 7577 06f2 03F58873 		add	r3, r3, #272
 7578 06f6 D7F88025 		ldr	r2, [r7, #1408]
 7579 06fa 1A44     		add	r2, r2, r3
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7580              		.loc 1 898 0
 7581 06fc 07F21C43 		addw	r3, r7, #1052
 7582 0700 C3F8EC20 		str	r2, [r3, #236]
 961:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 7583              		.loc 1 961 0
 7584 0704 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7585 0708 1346     		mov	r3, r2
 7586 070a DB00     		lsls	r3, r3, #3
 7587 070c 9B1A     		subs	r3, r3, r2
 7588 070e 1B01     		lsls	r3, r3, #4
 7589 0710 E033     		adds	r3, r3, #224
 7590 0712 D7F88025 		ldr	r2, [r7, #1408]
 7591 0716 1344     		add	r3, r3, r2
 7592 0718 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7593              		.loc 1 898 0
 7594 071a 07F21C43 		addw	r3, r7, #1052
 7595 071e C3F8F020 		str	r2, [r3, #240]
 962:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 7596              		.loc 1 962 0
 7597 0722 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7598 0726 1346     		mov	r3, r2
 7599 0728 DB00     		lsls	r3, r3, #3
 7600 072a 9B1A     		subs	r3, r3, r2
 7601 072c 1B01     		lsls	r3, r3, #4
 7602 072e 03F58873 		add	r3, r3, #272
 7603 0732 D7F88025 		ldr	r2, [r7, #1408]
 7604 0736 1344     		add	r3, r3, r2
 7605 0738 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7606              		.loc 1 898 0
 7607 073a 07F21C43 		addw	r3, r7, #1052
 7608 073e C3F8F420 		str	r2, [r3, #244]
 963:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 7609              		.loc 1 963 0
 7610 0742 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7611 0746 1346     		mov	r3, r2
 7612 0748 DB00     		lsls	r3, r3, #3
 7613 074a 9B1A     		subs	r3, r3, r2
 7614 074c 1B01     		lsls	r3, r3, #4
 7615 074e 03F58873 		add	r3, r3, #272
 7616 0752 D7F88025 		ldr	r2, [r7, #1408]
 7617 0756 1344     		add	r3, r3, r2
 7618 0758 9A1C     		adds	r2, r3, #2
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7619              		.loc 1 898 0
 7620 075a 07F21C43 		addw	r3, r7, #1052
 7621 075e C3F8F820 		str	r2, [r3, #248]
 964:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 7622              		.loc 1 964 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 179


 7623 0762 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7624 0766 D7F88015 		ldr	r1, [r7, #1408]
 7625 076a 1346     		mov	r3, r2
 7626 076c DB00     		lsls	r3, r3, #3
 7627 076e 9B1A     		subs	r3, r3, r2
 7628 0770 1B01     		lsls	r3, r3, #4
 7629 0772 0B44     		add	r3, r3, r1
 7630 0774 03F58873 		add	r3, r3, #272
 7631 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7632 077a 1A46     		mov	r2, r3
 7633 077c 1346     		mov	r3, r2
 7634 077e 5B00     		lsls	r3, r3, #1
 7635 0780 1344     		add	r3, r3, r2
 7636 0782 1B01     		lsls	r3, r3, #4
 7637 0784 03F5D873 		add	r3, r3, #432
 7638 0788 D7F88025 		ldr	r2, [r7, #1408]
 7639 078c 1344     		add	r3, r3, r2
 7640 078e 5A1C     		adds	r2, r3, #1
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7641              		.loc 1 898 0
 7642 0790 07F21C43 		addw	r3, r7, #1052
 7643 0794 C3F8FC20 		str	r2, [r3, #252]
 965:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 7644              		.loc 1 965 0
 7645 0798 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 7646 079c D7F88015 		ldr	r1, [r7, #1408]
 7647 07a0 1346     		mov	r3, r2
 7648 07a2 DB00     		lsls	r3, r3, #3
 7649 07a4 9B1A     		subs	r3, r3, r2
 7650 07a6 1B01     		lsls	r3, r3, #4
 7651 07a8 0B44     		add	r3, r3, r1
 7652 07aa 03F58873 		add	r3, r3, #272
 7653 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7654 07b0 1A46     		mov	r2, r3
 7655 07b2 1346     		mov	r3, r2
 7656 07b4 5B00     		lsls	r3, r3, #1
 7657 07b6 1344     		add	r3, r3, r2
 7658 07b8 1B01     		lsls	r3, r3, #4
 7659 07ba 03F5D873 		add	r3, r3, #432
 7660 07be D7F88025 		ldr	r2, [r7, #1408]
 7661 07c2 1344     		add	r3, r3, r2
 7662 07c4 5A1D     		adds	r2, r3, #5
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7663              		.loc 1 898 0
 7664 07c6 07F21C43 		addw	r3, r7, #1052
 7665 07ca C3F80021 		str	r2, [r3, #256]
 966:..\src/command_processing.c ****         
 967:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 7666              		.loc 1 967 0
 7667 07ce D7F88035 		ldr	r3, [r7, #1408]
 7668 07d2 03F5C872 		add	r2, r3, #400
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7669              		.loc 1 898 0
 7670 07d6 07F21C43 		addw	r3, r7, #1052
 7671 07da C3F80421 		str	r2, [r3, #260]
 968:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 7672              		.loc 1 968 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 180


 7673 07de D7F88035 		ldr	r3, [r7, #1408]
 7674 07e2 03F5E072 		add	r2, r3, #448
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7675              		.loc 1 898 0
 7676 07e6 07F21C43 		addw	r3, r7, #1052
 7677 07ea C3F80821 		str	r2, [r3, #264]
 969:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 7678              		.loc 1 969 0
 7679 07ee D7F88035 		ldr	r3, [r7, #1408]
 7680 07f2 03F22722 		addw	r2, r3, #551
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7681              		.loc 1 898 0
 7682 07f6 07F21C43 		addw	r3, r7, #1052
 7683 07fa C3F80C21 		str	r2, [r3, #268]
 970:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 7684              		.loc 1 970 0
 7685 07fe D7F88035 		ldr	r3, [r7, #1408]
 7686 0802 03F50A72 		add	r2, r3, #552
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7687              		.loc 1 898 0
 7688 0806 07F21C43 		addw	r3, r7, #1052
 7689 080a C3F81021 		str	r2, [r3, #272]
 971:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70  
 7690              		.loc 1 971 0
 7691 080e D7F88035 		ldr	r3, [r7, #1408]
 7692 0812 03F22E22 		addw	r2, r3, #558
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7693              		.loc 1 898 0
 7694 0816 07F21C43 		addw	r3, r7, #1052
 7695 081a C3F81421 		str	r2, [r3, #276]
 972:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.record_EMG_history_on_SD),
 7696              		.loc 1 972 0
 7697 081e D7F88035 		ldr	r3, [r7, #1408]
 7698 0822 03F50D72 		add	r2, r3, #564
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7699              		.loc 1 898 0
 7700 0826 07F21C43 		addw	r3, r7, #1052
 7701 082a C3F81821 		str	r2, [r3, #280]
 973:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_closure_speed),
 7702              		.loc 1 973 0
 7703 082e D7F88035 		ldr	r3, [r7, #1408]
 7704 0832 03F52C72 		add	r2, r3, #688
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7705              		.loc 1 898 0
 7706 0836 07F21C43 		addw	r3, r7, #1052
 7707 083a C3F81C21 		str	r2, [r3, #284]
 974:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_threshold),
 7708              		.loc 1 974 0
 7709 083e D7F88035 		ldr	r3, [r7, #1408]
 7710 0842 03F2B222 		addw	r2, r3, #690
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7711              		.loc 1 898 0
 7712 0846 07F21C43 		addw	r3, r7, #1052
 7713 084a C3F82021 		str	r2, [r3, #288]
 975:..\src/command_processing.c ****         (uint8*)&(MEM_P->JOY_spec.joystick_gains[0]),
 7714              		.loc 1 975 0
 7715 084e D7F88035 		ldr	r3, [r7, #1408]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 181


 7716 0852 03F52D72 		add	r2, r3, #692
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7717              		.loc 1 898 0
 7718 0856 07F21C43 		addw	r3, r7, #1052
 7719 085a C3F82421 		str	r2, [r3, #292]
 976:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 7720              		.loc 1 976 0
 7721 085e D7F88035 		ldr	r3, [r7, #1408]
 7722 0862 03F1AC02 		add	r2, r3, #172
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7723              		.loc 1 898 0
 7724 0866 07F21C43 		addw	r3, r7, #1052
 7725 086a C3F82821 		str	r2, [r3, #296]
 977:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.activation_mode),                           
 7726              		.loc 1 977 0
 7727 086e D7F88035 		ldr	r3, [r7, #1408]
 7728 0872 03F53872 		add	r2, r3, #736
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7729              		.loc 1 898 0
 7730 0876 07F21C43 		addw	r3, r7, #1052
 7731 087a C3F82C21 		str	r2, [r3, #300]
 978:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 7732              		.loc 1 978 0
 7733 087e D7F88035 		ldr	r3, [r7, #1408]
 7734 0882 03F2E222 		addw	r2, r3, #738
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7735              		.loc 1 898 0
 7736 0886 07F21C43 		addw	r3, r7, #1052
 7737 088a C3F83021 		str	r2, [r3, #304]
 979:..\src/command_processing.c ****         
 980:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association),              // additional wrist params
 7738              		.loc 1 980 0
 7739 088e D7F88035 		ldr	r3, [r7, #1408]
 7740 0892 03F2E622 		addw	r2, r3, #742
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7741              		.loc 1 898 0
 7742 0896 07F21C43 		addw	r3, r7, #1052
 7743 089a C3F83421 		str	r2, [r3, #308]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 7744              		.loc 1 982 0
 7745 089e D7F88035 		ldr	r3, [r7, #1408]
 7746 08a2 03F53072 		add	r2, r3, #704
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7747              		.loc 1 898 0
 7748 08a6 07F21C43 		addw	r3, r7, #1052
 7749 08aa C3F83821 		str	r2, [r3, #312]
 983:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 7750              		.loc 1 983 0
 7751 08ae D7F88035 		ldr	r3, [r7, #1408]
 7752 08b2 03F2C122 		addw	r2, r3, #705
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7753              		.loc 1 898 0
 7754 08b6 07F21C43 		addw	r3, r7, #1052
 7755 08ba C3F83C21 		str	r2, [r3, #316]
 984:..\src/command_processing.c ****         
 985:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 182


 7756              		.loc 1 985 0
 7757 08be D7F88035 		ldr	r3, [r7, #1408]
 7758 08c2 03F53472 		add	r2, r3, #720
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7759              		.loc 1 898 0
 7760 08c6 07F21C43 		addw	r3, r7, #1052
 7761 08ca C3F84021 		str	r2, [r3, #320]
 986:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 7762              		.loc 1 986 0
 7763 08ce D7F88035 		ldr	r3, [r7, #1408]
 7764 08d2 03F53572 		add	r2, r3, #724
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7765              		.loc 1 898 0
 7766 08d6 07F21C43 		addw	r3, r7, #1052
 7767 08da C3F84421 		str	r2, [r3, #324]
 987:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 7768              		.loc 1 987 0
 7769 08de D7F88035 		ldr	r3, [r7, #1408]
 7770 08e2 03F53672 		add	r2, r3, #728
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 7771              		.loc 1 898 0
 7772 08e6 07F21C43 		addw	r3, r7, #1052
 7773 08ea C3F84821 		str	r2, [r3, #328]
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** 
 990:..\src/command_processing.c ****     };
 991:..\src/command_processing.c ****     
 992:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 7774              		.loc 1 992 0
 7775 08ee 07F57273 		add	r3, r7, #968
 7776 08f2 F64A     		ldr	r2, .L372
 7777 08f4 1846     		mov	r0, r3
 7778 08f6 1146     		mov	r1, r2
 7779 08f8 5323     		movs	r3, #83
 7780 08fa 1A46     		mov	r2, r3
 7781 08fc FFF7FEFF 		bl	memcpy
 993:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 994:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 995:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 996:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 997:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 998:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 999:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
1000:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
1001:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
1002:..\src/command_processing.c ****         
1003:..\src/command_processing.c ****         // GENERIC PARAMS
1004:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
1005:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
1006:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
1007:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
1008:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
1009:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
1010:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
1011:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
1012:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_UINT16, 
1013:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_FLAG,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 183


1014:..\src/command_processing.c ****         TYPE_UINT16,
1015:..\src/command_processing.c ****         
1016:..\src/command_processing.c ****                     TYPE_FLAG, TYPE_FLAG, TYPE_UINT8,
1017:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT
1018:..\src/command_processing.c ****     };
1019:..\src/command_processing.c **** 
1020:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 7782              		.loc 1 1020 0
 7783 0900 07F55D73 		add	r3, r7, #884
 7784 0904 0122     		movs	r2, #1
 7785 0906 1A70     		strb	r2, [r3]
 7786 0908 07F55D73 		add	r3, r7, #884
 7787 090c 0322     		movs	r2, #3
 7788 090e 5A70     		strb	r2, [r3, #1]
 7789 0910 07F55D73 		add	r3, r7, #884
 7790 0914 0322     		movs	r2, #3
 7791 0916 9A70     		strb	r2, [r3, #2]
 7792 0918 07F55D73 		add	r3, r7, #884
 7793 091c 0122     		movs	r2, #1
 7794 091e DA70     		strb	r2, [r3, #3]
 7795 0920 07F55D73 		add	r3, r7, #884
 7796 0924 0122     		movs	r2, #1
 7797 0926 1A71     		strb	r2, [r3, #4]
 7798 0928 07F55D73 		add	r3, r7, #884
 7799 092c 0122     		movs	r2, #1
 7800 092e 5A71     		strb	r2, [r3, #5]
 7801 0930 07F55D73 		add	r3, r7, #884
 7802 0934 0322     		movs	r2, #3
 7803 0936 9A71     		strb	r2, [r3, #6]
 7804 0938 07F55D73 		add	r3, r7, #884
 7805 093c 0322     		movs	r2, #3
 7806 093e DA71     		strb	r2, [r3, #7]
 7807 0940 07F55D73 		add	r3, r7, #884
 7808 0944 0322     		movs	r2, #3
 7809 0946 1A72     		strb	r2, [r3, #8]
 7810 0948 07F55D73 		add	r3, r7, #884
 7811 094c 0122     		movs	r2, #1
 7812 094e 5A72     		strb	r2, [r3, #9]
 7813 0950 07F55D73 		add	r3, r7, #884
 7814 0954 0222     		movs	r2, #2
 7815 0956 9A72     		strb	r2, [r3, #10]
 7816 0958 07F55D73 		add	r3, r7, #884
 7817 095c 0222     		movs	r2, #2
 7818 095e DA72     		strb	r2, [r3, #11]
 7819 0960 07F55D73 		add	r3, r7, #884
 7820 0964 0122     		movs	r2, #1
 7821 0966 1A73     		strb	r2, [r3, #12]
 7822 0968 07F55D73 		add	r3, r7, #884
 7823 096c 0222     		movs	r2, #2
 7824 096e 5A73     		strb	r2, [r3, #13]
 7825 0970 07F55D73 		add	r3, r7, #884
 7826 0974 0122     		movs	r2, #1
 7827 0976 9A73     		strb	r2, [r3, #14]
 7828 0978 07F55D73 		add	r3, r7, #884
 7829 097c 0222     		movs	r2, #2
 7830 097e DA73     		strb	r2, [r3, #15]
 7831 0980 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 184


 7832 0984 0222     		movs	r2, #2
 7833 0986 1A74     		strb	r2, [r3, #16]
 7834 0988 07F55D73 		add	r3, r7, #884
 7835 098c 0122     		movs	r2, #1
 7836 098e 5A74     		strb	r2, [r3, #17]
 7837 0990 07F55D73 		add	r3, r7, #884
 7838 0994 0122     		movs	r2, #1
 7839 0996 9A74     		strb	r2, [r3, #18]
 7840 0998 07F55D73 		add	r3, r7, #884
 7841 099c 0122     		movs	r2, #1
 7842 099e DA74     		strb	r2, [r3, #19]
 7843 09a0 07F55D73 		add	r3, r7, #884
 7844 09a4 0622     		movs	r2, #6
 7845 09a6 1A75     		strb	r2, [r3, #20]
 7846 09a8 07F55D73 		add	r3, r7, #884
 7847 09ac 0322     		movs	r2, #3
 7848 09ae 5A75     		strb	r2, [r3, #21]
 7849 09b0 07F55D73 		add	r3, r7, #884
 7850 09b4 0122     		movs	r2, #1
 7851 09b6 9A75     		strb	r2, [r3, #22]
 7852 09b8 07F55D73 		add	r3, r7, #884
 7853 09bc 0122     		movs	r2, #1
 7854 09be DA75     		strb	r2, [r3, #23]
 7855 09c0 07F55D73 		add	r3, r7, #884
 7856 09c4 0122     		movs	r2, #1
 7857 09c6 1A76     		strb	r2, [r3, #24]
 7858 09c8 07F55D73 		add	r3, r7, #884
 7859 09cc 0122     		movs	r2, #1
 7860 09ce 5A76     		strb	r2, [r3, #25]
 7861 09d0 07F55D73 		add	r3, r7, #884
 7862 09d4 0122     		movs	r2, #1
 7863 09d6 9A76     		strb	r2, [r3, #26]
 7864 09d8 07F55D73 		add	r3, r7, #884
 7865 09dc 0122     		movs	r2, #1
 7866 09de DA76     		strb	r2, [r3, #27]
 7867 09e0 07F55D73 		add	r3, r7, #884
 7868 09e4 0122     		movs	r2, #1
 7869 09e6 1A77     		strb	r2, [r3, #28]
 7870 09e8 07F55D73 		add	r3, r7, #884
 7871 09ec 0122     		movs	r2, #1
 7872 09ee 5A77     		strb	r2, [r3, #29]
 7873 09f0 07F55D73 		add	r3, r7, #884
 7874 09f4 0122     		movs	r2, #1
 7875 09f6 9A77     		strb	r2, [r3, #30]
 7876 09f8 07F55D73 		add	r3, r7, #884
 7877 09fc 0622     		movs	r2, #6
 7878 09fe DA77     		strb	r2, [r3, #31]
 7879 0a00 07F55D73 		add	r3, r7, #884
 7880 0a04 0122     		movs	r2, #1
 7881 0a06 83F82020 		strb	r2, [r3, #32]
 7882 0a0a 07F55D73 		add	r3, r7, #884
 7883 0a0e 0522     		movs	r2, #5
 7884 0a10 83F82120 		strb	r2, [r3, #33]
 7885 0a14 07F55D73 		add	r3, r7, #884
 7886 0a18 0122     		movs	r2, #1
 7887 0a1a 83F82220 		strb	r2, [r3, #34]
 7888 0a1e 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 185


 7889 0a22 0622     		movs	r2, #6
 7890 0a24 83F82320 		strb	r2, [r3, #35]
 7891 0a28 07F55D73 		add	r3, r7, #884
 7892 0a2c 0122     		movs	r2, #1
 7893 0a2e 83F82420 		strb	r2, [r3, #36]
 7894 0a32 07F55D73 		add	r3, r7, #884
 7895 0a36 0122     		movs	r2, #1
 7896 0a38 83F82520 		strb	r2, [r3, #37]
 7897 0a3c 07F55D73 		add	r3, r7, #884
 7898 0a40 0122     		movs	r2, #1
 7899 0a42 83F82620 		strb	r2, [r3, #38]
 7900 0a46 07F55D73 		add	r3, r7, #884
 7901 0a4a 0122     		movs	r2, #1
 7902 0a4c 83F82720 		strb	r2, [r3, #39]
 7903 0a50 07F55D73 		add	r3, r7, #884
 7904 0a54 0322     		movs	r2, #3
 7905 0a56 83F82820 		strb	r2, [r3, #40]
 7906 0a5a 07F55D73 		add	r3, r7, #884
 7907 0a5e 0322     		movs	r2, #3
 7908 0a60 83F82920 		strb	r2, [r3, #41]
 7909 0a64 07F55D73 		add	r3, r7, #884
 7910 0a68 0122     		movs	r2, #1
 7911 0a6a 83F82A20 		strb	r2, [r3, #42]
 7912 0a6e 07F55D73 		add	r3, r7, #884
 7913 0a72 0322     		movs	r2, #3
 7914 0a74 83F82B20 		strb	r2, [r3, #43]
 7915 0a78 07F55D73 		add	r3, r7, #884
 7916 0a7c 0322     		movs	r2, #3
 7917 0a7e 83F82C20 		strb	r2, [r3, #44]
 7918 0a82 07F55D73 		add	r3, r7, #884
 7919 0a86 0122     		movs	r2, #1
 7920 0a88 83F82D20 		strb	r2, [r3, #45]
 7921 0a8c 07F55D73 		add	r3, r7, #884
 7922 0a90 0122     		movs	r2, #1
 7923 0a92 83F82E20 		strb	r2, [r3, #46]
 7924 0a96 07F55D73 		add	r3, r7, #884
 7925 0a9a 0122     		movs	r2, #1
 7926 0a9c 83F82F20 		strb	r2, [r3, #47]
 7927 0aa0 07F55D73 		add	r3, r7, #884
 7928 0aa4 0322     		movs	r2, #3
 7929 0aa6 83F83020 		strb	r2, [r3, #48]
 7930 0aaa 07F55D73 		add	r3, r7, #884
 7931 0aae 0322     		movs	r2, #3
 7932 0ab0 83F83120 		strb	r2, [r3, #49]
 7933 0ab4 07F55D73 		add	r3, r7, #884
 7934 0ab8 0322     		movs	r2, #3
 7935 0aba 83F83220 		strb	r2, [r3, #50]
 7936 0abe 07F55D73 		add	r3, r7, #884
 7937 0ac2 0122     		movs	r2, #1
 7938 0ac4 83F83320 		strb	r2, [r3, #51]
 7939 0ac8 07F55D73 		add	r3, r7, #884
 7940 0acc 0222     		movs	r2, #2
 7941 0ace 83F83420 		strb	r2, [r3, #52]
 7942 0ad2 07F55D73 		add	r3, r7, #884
 7943 0ad6 0222     		movs	r2, #2
 7944 0ad8 83F83520 		strb	r2, [r3, #53]
 7945 0adc 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 186


 7946 0ae0 0122     		movs	r2, #1
 7947 0ae2 83F83620 		strb	r2, [r3, #54]
 7948 0ae6 07F55D73 		add	r3, r7, #884
 7949 0aea 0122     		movs	r2, #1
 7950 0aec 83F83720 		strb	r2, [r3, #55]
 7951 0af0 07F55D73 		add	r3, r7, #884
 7952 0af4 0122     		movs	r2, #1
 7953 0af6 83F83820 		strb	r2, [r3, #56]
 7954 0afa 07F55D73 		add	r3, r7, #884
 7955 0afe 0122     		movs	r2, #1
 7956 0b00 83F83920 		strb	r2, [r3, #57]
 7957 0b04 07F55D73 		add	r3, r7, #884
 7958 0b08 0622     		movs	r2, #6
 7959 0b0a 83F83A20 		strb	r2, [r3, #58]
 7960 0b0e 07F55D73 		add	r3, r7, #884
 7961 0b12 0122     		movs	r2, #1
 7962 0b14 83F83B20 		strb	r2, [r3, #59]
 7963 0b18 07F55D73 		add	r3, r7, #884
 7964 0b1c 0122     		movs	r2, #1
 7965 0b1e 83F83C20 		strb	r2, [r3, #60]
 7966 0b22 07F55D73 		add	r3, r7, #884
 7967 0b26 0122     		movs	r2, #1
 7968 0b28 83F83D20 		strb	r2, [r3, #61]
 7969 0b2c 07F55D73 		add	r3, r7, #884
 7970 0b30 0122     		movs	r2, #1
 7971 0b32 83F83E20 		strb	r2, [r3, #62]
 7972 0b36 07F55D73 		add	r3, r7, #884
 7973 0b3a 0322     		movs	r2, #3
 7974 0b3c 83F83F20 		strb	r2, [r3, #63]
 7975 0b40 07F55D73 		add	r3, r7, #884
 7976 0b44 0322     		movs	r2, #3
 7977 0b46 83F84020 		strb	r2, [r3, #64]
1021:..\src/command_processing.c ****         1, 3, 3, 1, 
1022:..\src/command_processing.c ****         1, 1, 3, 3,
1023:..\src/command_processing.c ****         3, 1, 2, 2, 
1024:..\src/command_processing.c ****         1, 2, 1, 2,
1025:..\src/command_processing.c ****         2, 1, 1, 1, 
1026:..\src/command_processing.c ****         6, 3, 1, 1,
1027:..\src/command_processing.c ****         1, 1, 1, 1, 
1028:..\src/command_processing.c ****         1, 1, 1, 6,
1029:..\src/command_processing.c ****         1, 5, 1, 6,
1030:..\src/command_processing.c ****         
1031:..\src/command_processing.c ****         // GENERIC PARAMS
1032:..\src/command_processing.c ****         1, 1, 1, 1,
1033:..\src/command_processing.c ****         3, 3, 1, 3,
1034:..\src/command_processing.c ****         3, 1, 1, 1,
1035:..\src/command_processing.c ****         3, 3, 3, 1,
1036:..\src/command_processing.c ****         2, 2, 1, 1,
1037:..\src/command_processing.c ****         1, 1, 6, 1,
1038:..\src/command_processing.c ****         1, 1, 1, 3, 
1039:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 7978              		.loc 1 1039 0
 7979 0b4a 614B     		ldr	r3, .L372+4
 7980 0b4c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
1020:..\src/command_processing.c ****         1, 3, 3, 1, 
 7981              		.loc 1 1020 0
 7982 0b4e 07F55D73 		add	r3, r7, #884
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 187


 7983 0b52 83F84120 		strb	r2, [r3, #65]
 7984              		.loc 1 1039 0
 7985 0b56 5E4B     		ldr	r3, .L372+4
 7986 0b58 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
1020:..\src/command_processing.c ****         1, 3, 3, 1, 
 7987              		.loc 1 1020 0
 7988 0b5a 07F55D73 		add	r3, r7, #884
 7989 0b5e 83F84220 		strb	r2, [r3, #66]
 7990 0b62 07F55D73 		add	r3, r7, #884
 7991 0b66 0122     		movs	r2, #1
 7992 0b68 83F84320 		strb	r2, [r3, #67]
 7993 0b6c 07F55D73 		add	r3, r7, #884
 7994 0b70 0622     		movs	r2, #6
 7995 0b72 83F84420 		strb	r2, [r3, #68]
 7996 0b76 07F55D73 		add	r3, r7, #884
 7997 0b7a 0622     		movs	r2, #6
 7998 0b7c 83F84520 		strb	r2, [r3, #69]
 7999 0b80 07F55D73 		add	r3, r7, #884
 8000 0b84 0122     		movs	r2, #1
 8001 0b86 83F84620 		strb	r2, [r3, #70]
 8002 0b8a 07F55D73 		add	r3, r7, #884
 8003 0b8e 0122     		movs	r2, #1
 8004 0b90 83F84720 		strb	r2, [r3, #71]
 8005 0b94 07F55D73 		add	r3, r7, #884
 8006 0b98 0122     		movs	r2, #1
 8007 0b9a 83F84820 		strb	r2, [r3, #72]
 8008 0b9e 07F55D73 		add	r3, r7, #884
 8009 0ba2 0222     		movs	r2, #2
 8010 0ba4 83F84920 		strb	r2, [r3, #73]
 8011 0ba8 07F55D73 		add	r3, r7, #884
 8012 0bac 0122     		movs	r2, #1
 8013 0bae 83F84A20 		strb	r2, [r3, #74]
 8014 0bb2 07F55D73 		add	r3, r7, #884
 8015 0bb6 0122     		movs	r2, #1
 8016 0bb8 83F84B20 		strb	r2, [r3, #75]
 8017 0bbc 07F55D73 		add	r3, r7, #884
 8018 0bc0 0222     		movs	r2, #2
 8019 0bc2 83F84C20 		strb	r2, [r3, #76]
 8020 0bc6 07F55D73 		add	r3, r7, #884
 8021 0bca 0122     		movs	r2, #1
 8022 0bcc 83F84D20 		strb	r2, [r3, #77]
 8023 0bd0 07F55D73 		add	r3, r7, #884
 8024 0bd4 0122     		movs	r2, #1
 8025 0bd6 83F84E20 		strb	r2, [r3, #78]
 8026 0bda 07F55D73 		add	r3, r7, #884
 8027 0bde 0122     		movs	r2, #1
 8028 0be0 83F84F20 		strb	r2, [r3, #79]
 8029 0be4 07F55D73 		add	r3, r7, #884
 8030 0be8 0122     		movs	r2, #1
 8031 0bea 83F85020 		strb	r2, [r3, #80]
 8032 0bee 07F55D73 		add	r3, r7, #884
 8033 0bf2 0122     		movs	r2, #1
 8034 0bf4 83F85120 		strb	r2, [r3, #81]
 8035 0bf8 07F55D73 		add	r3, r7, #884
 8036 0bfc 0122     		movs	r2, #1
 8037 0bfe 83F85220 		strb	r2, [r3, #82]
1040:..\src/command_processing.c ****         6, 6, 1, 1,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 188


1041:..\src/command_processing.c ****         1, 2, 1, 1,
1042:..\src/command_processing.c ****         2,
1043:..\src/command_processing.c ****         
1044:..\src/command_processing.c ****            1, 1, 1, 
1045:..\src/command_processing.c ****         1, 1, 1
1046:..\src/command_processing.c ****     };
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 8038              		.loc 1 1048 0
 8039 0c02 07F54873 		add	r3, r7, #800
 8040 0c06 0022     		movs	r2, #0
 8041 0c08 1A70     		strb	r2, [r3]
 8042 0c0a 97F87D35 		ldrb	r3, [r7, #1405]
 8043 0c0e 0A33     		adds	r3, r3, #10
 8044 0c10 DAB2     		uxtb	r2, r3
 8045 0c12 07F54873 		add	r3, r7, #800
 8046 0c16 5A70     		strb	r2, [r3, #1]
 8047 0c18 97F87D35 		ldrb	r3, [r7, #1405]
 8048 0c1c 0A33     		adds	r3, r3, #10
 8049 0c1e DAB2     		uxtb	r2, r3
 8050 0c20 07F54873 		add	r3, r7, #800
 8051 0c24 9A70     		strb	r2, [r3, #2]
 8052 0c26 97F87D35 		ldrb	r3, [r7, #1405]
 8053 0c2a 0A33     		adds	r3, r3, #10
 8054 0c2c DAB2     		uxtb	r2, r3
 8055 0c2e 07F54873 		add	r3, r7, #800
 8056 0c32 DA70     		strb	r2, [r3, #3]
 8057 0c34 97F87D35 		ldrb	r3, [r7, #1405]
 8058 0c38 0A33     		adds	r3, r3, #10
 8059 0c3a DAB2     		uxtb	r2, r3
 8060 0c3c 07F54873 		add	r3, r7, #800
 8061 0c40 1A71     		strb	r2, [r3, #4]
 8062 0c42 97F87D35 		ldrb	r3, [r7, #1405]
 8063 0c46 0A33     		adds	r3, r3, #10
 8064 0c48 DAB2     		uxtb	r2, r3
 8065 0c4a 07F54873 		add	r3, r7, #800
 8066 0c4e 5A71     		strb	r2, [r3, #5]
1049:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1050:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 8067              		.loc 1 1050 0
 8068 0c50 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8069 0c54 D7F88015 		ldr	r1, [r7, #1408]
 8070 0c58 1346     		mov	r3, r2
 8071 0c5a DB00     		lsls	r3, r3, #3
 8072 0c5c 9B1A     		subs	r3, r3, r2
 8073 0c5e 1B01     		lsls	r3, r3, #4
 8074 0c60 0B44     		add	r3, r3, r1
 8075 0c62 03F58873 		add	r3, r3, #272
 8076 0c66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8077              		.loc 1 1048 0
 8078 0c68 1433     		adds	r3, r3, #20
 8079 0c6a DAB2     		uxtb	r2, r3
 8080 0c6c 07F54873 		add	r3, r7, #800
 8081 0c70 9A71     		strb	r2, [r3, #6]
 8082              		.loc 1 1050 0
 8083 0c72 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 189


 8084 0c76 D7F88015 		ldr	r1, [r7, #1408]
 8085 0c7a 1346     		mov	r3, r2
 8086 0c7c DB00     		lsls	r3, r3, #3
 8087 0c7e 9B1A     		subs	r3, r3, r2
 8088 0c80 1B01     		lsls	r3, r3, #4
 8089 0c82 0B44     		add	r3, r3, r1
 8090 0c84 03F58873 		add	r3, r3, #272
 8091 0c88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8092              		.loc 1 1048 0
 8093 0c8a 1433     		adds	r3, r3, #20
 8094 0c8c DAB2     		uxtb	r2, r3
 8095 0c8e 07F54873 		add	r3, r7, #800
 8096 0c92 DA71     		strb	r2, [r3, #7]
1051:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8097              		.loc 1 1051 0
 8098 0c94 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8099 0c98 D7F88015 		ldr	r1, [r7, #1408]
 8100 0c9c 1346     		mov	r3, r2
 8101 0c9e DB00     		lsls	r3, r3, #3
 8102 0ca0 9B1A     		subs	r3, r3, r2
 8103 0ca2 1B01     		lsls	r3, r3, #4
 8104 0ca4 0B44     		add	r3, r3, r1
 8105 0ca6 03F58873 		add	r3, r3, #272
 8106 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8107              		.loc 1 1048 0
 8108 0cac 1433     		adds	r3, r3, #20
 8109 0cae DAB2     		uxtb	r2, r3
 8110 0cb0 07F54873 		add	r3, r7, #800
 8111 0cb4 1A72     		strb	r2, [r3, #8]
 8112 0cb6 97F87D35 		ldrb	r3, [r7, #1405]
 8113 0cba 0A33     		adds	r3, r3, #10
 8114 0cbc DAB2     		uxtb	r2, r3
 8115 0cbe 07F54873 		add	r3, r7, #800
 8116 0cc2 5A72     		strb	r2, [r3, #9]
 8117 0cc4 97F87D35 		ldrb	r3, [r7, #1405]
 8118 0cc8 04E0     		b	.L373
 8119              	.L374:
 8120 0cca 00BF     		.align	2
 8121              	.L372:
 8122 0ccc 24060000 		.word	.LC0
 8123 0cd0 00000000 		.word	N_Encoder_Line_Connected
 8124              	.L373:
 8125 0cd4 0A33     		adds	r3, r3, #10
 8126 0cd6 DAB2     		uxtb	r2, r3
 8127 0cd8 07F54873 		add	r3, r7, #800
 8128 0cdc 9A72     		strb	r2, [r3, #10]
 8129 0cde 97F87D35 		ldrb	r3, [r7, #1405]
 8130 0ce2 0A33     		adds	r3, r3, #10
 8131 0ce4 DAB2     		uxtb	r2, r3
 8132 0ce6 07F54873 		add	r3, r7, #800
 8133 0cea DA72     		strb	r2, [r3, #11]
 8134 0cec 97F87D35 		ldrb	r3, [r7, #1405]
 8135 0cf0 0A33     		adds	r3, r3, #10
 8136 0cf2 DAB2     		uxtb	r2, r3
 8137 0cf4 07F54873 		add	r3, r7, #800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 190


 8138 0cf8 1A73     		strb	r2, [r3, #12]
 8139 0cfa 07F54873 		add	r3, r7, #800
 8140 0cfe 1E22     		movs	r2, #30
 8141 0d00 5A73     		strb	r2, [r3, #13]
 8142 0d02 07F54873 		add	r3, r7, #800
 8143 0d06 1E22     		movs	r2, #30
 8144 0d08 9A73     		strb	r2, [r3, #14]
 8145 0d0a 07F54873 		add	r3, r7, #800
 8146 0d0e 1E22     		movs	r2, #30
 8147 0d10 DA73     		strb	r2, [r3, #15]
 8148 0d12 07F54873 		add	r3, r7, #800
 8149 0d16 1E22     		movs	r2, #30
 8150 0d18 1A74     		strb	r2, [r3, #16]
1052:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1053:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 8151              		.loc 1 1053 0
 8152 0d1a 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8153 0d1e D7F88015 		ldr	r1, [r7, #1408]
 8154 0d22 1346     		mov	r3, r2
 8155 0d24 DB00     		lsls	r3, r3, #3
 8156 0d26 9B1A     		subs	r3, r3, r2
 8157 0d28 1B01     		lsls	r3, r3, #4
 8158 0d2a 0B44     		add	r3, r3, r1
 8159 0d2c 03F58873 		add	r3, r3, #272
 8160 0d30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8161              		.loc 1 1048 0
 8162 0d32 1433     		adds	r3, r3, #20
 8163 0d34 DAB2     		uxtb	r2, r3
 8164 0d36 07F54873 		add	r3, r7, #800
 8165 0d3a 5A74     		strb	r2, [r3, #17]
 8166              		.loc 1 1053 0
 8167 0d3c 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8168 0d40 D7F88015 		ldr	r1, [r7, #1408]
 8169 0d44 1346     		mov	r3, r2
 8170 0d46 DB00     		lsls	r3, r3, #3
 8171 0d48 9B1A     		subs	r3, r3, r2
 8172 0d4a 1B01     		lsls	r3, r3, #4
 8173 0d4c 0B44     		add	r3, r3, r1
 8174 0d4e 03F58873 		add	r3, r3, #272
 8175 0d52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8176              		.loc 1 1048 0
 8177 0d54 1433     		adds	r3, r3, #20
 8178 0d56 DAB2     		uxtb	r2, r3
 8179 0d58 07F54873 		add	r3, r7, #800
 8180 0d5c 9A74     		strb	r2, [r3, #18]
 8181 0d5e 97F87D35 		ldrb	r3, [r7, #1405]
 8182 0d62 0A33     		adds	r3, r3, #10
 8183 0d64 DAB2     		uxtb	r2, r3
 8184 0d66 07F54873 		add	r3, r7, #800
 8185 0d6a DA74     		strb	r2, [r3, #19]
 8186 0d6c 97F87D35 		ldrb	r3, [r7, #1405]
 8187 0d70 0A33     		adds	r3, r3, #10
 8188 0d72 DAB2     		uxtb	r2, r3
 8189 0d74 07F54873 		add	r3, r7, #800
 8190 0d78 1A75     		strb	r2, [r3, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 191


 8191 0d7a 07F54873 		add	r3, r7, #800
 8192 0d7e 0022     		movs	r2, #0
 8193 0d80 5A75     		strb	r2, [r3, #21]
 8194 0d82 07F54873 		add	r3, r7, #800
 8195 0d86 4622     		movs	r2, #70
 8196 0d88 9A75     		strb	r2, [r3, #22]
 8197 0d8a 07F54873 		add	r3, r7, #800
 8198 0d8e 4622     		movs	r2, #70
 8199 0d90 DA75     		strb	r2, [r3, #23]
 8200 0d92 07F54873 		add	r3, r7, #800
 8201 0d96 4622     		movs	r2, #70
 8202 0d98 1A76     		strb	r2, [r3, #24]
 8203 0d9a 07F54873 		add	r3, r7, #800
 8204 0d9e 4622     		movs	r2, #70
 8205 0da0 5A76     		strb	r2, [r3, #25]
 8206 0da2 07F54873 		add	r3, r7, #800
 8207 0da6 1E22     		movs	r2, #30
 8208 0da8 9A76     		strb	r2, [r3, #26]
 8209 0daa 07F54873 		add	r3, r7, #800
 8210 0dae 0022     		movs	r2, #0
 8211 0db0 DA76     		strb	r2, [r3, #27]
 8212 0db2 07F54873 		add	r3, r7, #800
 8213 0db6 2822     		movs	r2, #40
 8214 0db8 1A77     		strb	r2, [r3, #28]
 8215 0dba 07F54873 		add	r3, r7, #800
 8216 0dbe 3222     		movs	r2, #50
 8217 0dc0 5A77     		strb	r2, [r3, #29]
 8218 0dc2 07F54873 		add	r3, r7, #800
 8219 0dc6 0022     		movs	r2, #0
 8220 0dc8 9A77     		strb	r2, [r3, #30]
 8221 0dca 07F54873 		add	r3, r7, #800
 8222 0dce 3222     		movs	r2, #50
 8223 0dd0 DA77     		strb	r2, [r3, #31]
 8224 0dd2 07F54873 		add	r3, r7, #800
 8225 0dd6 2822     		movs	r2, #40
 8226 0dd8 83F82020 		strb	r2, [r3, #32]
 8227 0ddc 07F54873 		add	r3, r7, #800
 8228 0de0 2822     		movs	r2, #40
 8229 0de2 83F82120 		strb	r2, [r3, #33]
 8230 0de6 07F54873 		add	r3, r7, #800
 8231 0dea 0022     		movs	r2, #0
 8232 0dec 83F82220 		strb	r2, [r3, #34]
1054:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1055:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
1056:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1057:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 8233              		.loc 1 1057 0
 8234 0df0 D7F88035 		ldr	r3, [r7, #1408]
 8235 0df4 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8236              		.loc 1 1048 0
 8237 0df8 3C33     		adds	r3, r3, #60
 8238 0dfa DAB2     		uxtb	r2, r3
 8239 0dfc 07F54873 		add	r3, r7, #800
 8240 0e00 83F82320 		strb	r2, [r3, #35]
 8241 0e04 97F87D35 		ldrb	r3, [r7, #1405]
 8242 0e08 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 192


 8243 0e0a DAB2     		uxtb	r2, r3
 8244 0e0c 07F54873 		add	r3, r7, #800
 8245 0e10 83F82420 		strb	r2, [r3, #36]
 8246 0e14 97F87D35 		ldrb	r3, [r7, #1405]
 8247 0e18 0A33     		adds	r3, r3, #10
 8248 0e1a DAB2     		uxtb	r2, r3
 8249 0e1c 07F54873 		add	r3, r7, #800
 8250 0e20 83F82520 		strb	r2, [r3, #37]
 8251 0e24 97F87D35 		ldrb	r3, [r7, #1405]
 8252 0e28 0A33     		adds	r3, r3, #10
 8253 0e2a DAB2     		uxtb	r2, r3
 8254 0e2c 07F54873 		add	r3, r7, #800
 8255 0e30 83F82620 		strb	r2, [r3, #38]
 8256 0e34 97F87D35 		ldrb	r3, [r7, #1405]
 8257 0e38 0A33     		adds	r3, r3, #10
 8258 0e3a DAB2     		uxtb	r2, r3
 8259 0e3c 07F54873 		add	r3, r7, #800
 8260 0e40 83F82720 		strb	r2, [r3, #39]
1058:..\src/command_processing.c ****         
1059:..\src/command_processing.c ****         // GENERIC PARAMS
1060:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1061:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 8261              		.loc 1 1061 0
 8262 0e44 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8263 0e48 D7F88015 		ldr	r1, [r7, #1408]
 8264 0e4c 1346     		mov	r3, r2
 8265 0e4e DB00     		lsls	r3, r3, #3
 8266 0e50 9B1A     		subs	r3, r3, r2
 8267 0e52 1B01     		lsls	r3, r3, #4
 8268 0e54 0B44     		add	r3, r3, r1
 8269 0e56 03F58873 		add	r3, r3, #272
 8270 0e5a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8271              		.loc 1 1048 0
 8272 0e5c 1433     		adds	r3, r3, #20
 8273 0e5e DAB2     		uxtb	r2, r3
 8274 0e60 07F54873 		add	r3, r7, #800
 8275 0e64 83F82820 		strb	r2, [r3, #40]
 8276              		.loc 1 1061 0
 8277 0e68 97F87D25 		ldrb	r2, [r7, #1405]	@ zero_extendqisi2
 8278 0e6c D7F88015 		ldr	r1, [r7, #1408]
 8279 0e70 1346     		mov	r3, r2
 8280 0e72 DB00     		lsls	r3, r3, #3
 8281 0e74 9B1A     		subs	r3, r3, r2
 8282 0e76 1B01     		lsls	r3, r3, #4
 8283 0e78 0B44     		add	r3, r3, r1
 8284 0e7a 03F58873 		add	r3, r3, #272
 8285 0e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8286              		.loc 1 1048 0
 8287 0e80 1433     		adds	r3, r3, #20
 8288 0e82 DAB2     		uxtb	r2, r3
 8289 0e84 07F54873 		add	r3, r7, #800
 8290 0e88 83F82920 		strb	r2, [r3, #41]
 8291 0e8c 07F54873 		add	r3, r7, #800
 8292 0e90 0022     		movs	r2, #0
 8293 0e92 83F82A20 		strb	r2, [r3, #42]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 193


 8294 0e96 97F87C35 		ldrb	r3, [r7, #1404]
 8295 0e9a 0A33     		adds	r3, r3, #10
 8296 0e9c DAB2     		uxtb	r2, r3
 8297 0e9e 07F54873 		add	r3, r7, #800
 8298 0ea2 83F82B20 		strb	r2, [r3, #43]
 8299 0ea6 97F87C35 		ldrb	r3, [r7, #1404]
 8300 0eaa 0A33     		adds	r3, r3, #10
 8301 0eac DAB2     		uxtb	r2, r3
 8302 0eae 07F54873 		add	r3, r7, #800
 8303 0eb2 83F82C20 		strb	r2, [r3, #44]
 8304 0eb6 97F87C35 		ldrb	r3, [r7, #1404]
 8305 0eba 0A33     		adds	r3, r3, #10
 8306 0ebc DAB2     		uxtb	r2, r3
 8307 0ebe 07F54873 		add	r3, r7, #800
 8308 0ec2 83F82D20 		strb	r2, [r3, #45]
 8309 0ec6 97F87C35 		ldrb	r3, [r7, #1404]
 8310 0eca 0A33     		adds	r3, r3, #10
 8311 0ecc DAB2     		uxtb	r2, r3
 8312 0ece 07F54873 		add	r3, r7, #800
 8313 0ed2 83F82E20 		strb	r2, [r3, #46]
 8314 0ed6 97F87C35 		ldrb	r3, [r7, #1404]
 8315 0eda 0A33     		adds	r3, r3, #10
 8316 0edc DAB2     		uxtb	r2, r3
 8317 0ede 07F54873 		add	r3, r7, #800
 8318 0ee2 83F82F20 		strb	r2, [r3, #47]
1062:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1063:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 8319              		.loc 1 1063 0
 8320 0ee6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8321 0eea D7F88015 		ldr	r1, [r7, #1408]
 8322 0eee 1346     		mov	r3, r2
 8323 0ef0 DB00     		lsls	r3, r3, #3
 8324 0ef2 9B1A     		subs	r3, r3, r2
 8325 0ef4 1B01     		lsls	r3, r3, #4
 8326 0ef6 0B44     		add	r3, r3, r1
 8327 0ef8 03F58873 		add	r3, r3, #272
 8328 0efc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8329              		.loc 1 1048 0
 8330 0efe 1433     		adds	r3, r3, #20
 8331 0f00 DAB2     		uxtb	r2, r3
 8332 0f02 07F54873 		add	r3, r7, #800
 8333 0f06 83F83020 		strb	r2, [r3, #48]
 8334              		.loc 1 1063 0
 8335 0f0a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8336 0f0e D7F88015 		ldr	r1, [r7, #1408]
 8337 0f12 1346     		mov	r3, r2
 8338 0f14 DB00     		lsls	r3, r3, #3
 8339 0f16 9B1A     		subs	r3, r3, r2
 8340 0f18 1B01     		lsls	r3, r3, #4
 8341 0f1a 0B44     		add	r3, r3, r1
 8342 0f1c 03F58873 		add	r3, r3, #272
 8343 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8344              		.loc 1 1048 0
 8345 0f22 1433     		adds	r3, r3, #20
 8346 0f24 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 194


 8347 0f26 07F54873 		add	r3, r7, #800
 8348 0f2a 83F83120 		strb	r2, [r3, #49]
 8349              		.loc 1 1063 0
 8350 0f2e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8351 0f32 D7F88015 		ldr	r1, [r7, #1408]
 8352 0f36 1346     		mov	r3, r2
 8353 0f38 DB00     		lsls	r3, r3, #3
 8354 0f3a 9B1A     		subs	r3, r3, r2
 8355 0f3c 1B01     		lsls	r3, r3, #4
 8356 0f3e 0B44     		add	r3, r3, r1
 8357 0f40 03F58873 		add	r3, r3, #272
 8358 0f44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8359              		.loc 1 1048 0
 8360 0f46 1433     		adds	r3, r3, #20
 8361 0f48 DAB2     		uxtb	r2, r3
 8362 0f4a 07F54873 		add	r3, r7, #800
 8363 0f4e 83F83220 		strb	r2, [r3, #50]
 8364 0f52 97F87C35 		ldrb	r3, [r7, #1404]
 8365 0f56 0A33     		adds	r3, r3, #10
 8366 0f58 DAB2     		uxtb	r2, r3
 8367 0f5a 07F54873 		add	r3, r7, #800
 8368 0f5e 83F83320 		strb	r2, [r3, #51]
 8369 0f62 97F87C35 		ldrb	r3, [r7, #1404]
 8370 0f66 0A33     		adds	r3, r3, #10
 8371 0f68 DAB2     		uxtb	r2, r3
 8372 0f6a 07F54873 		add	r3, r7, #800
 8373 0f6e 83F83420 		strb	r2, [r3, #52]
 8374 0f72 97F87C35 		ldrb	r3, [r7, #1404]
 8375 0f76 0A33     		adds	r3, r3, #10
 8376 0f78 DAB2     		uxtb	r2, r3
 8377 0f7a 07F54873 		add	r3, r7, #800
 8378 0f7e 83F83520 		strb	r2, [r3, #53]
 8379 0f82 97F87C35 		ldrb	r3, [r7, #1404]
 8380 0f86 0A33     		adds	r3, r3, #10
 8381 0f88 DAB2     		uxtb	r2, r3
 8382 0f8a 07F54873 		add	r3, r7, #800
 8383 0f8e 83F83620 		strb	r2, [r3, #54]
1064:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8384              		.loc 1 1064 0
 8385 0f92 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8386 0f96 D7F88015 		ldr	r1, [r7, #1408]
 8387 0f9a 1346     		mov	r3, r2
 8388 0f9c DB00     		lsls	r3, r3, #3
 8389 0f9e 9B1A     		subs	r3, r3, r2
 8390 0fa0 1B01     		lsls	r3, r3, #4
 8391 0fa2 0B44     		add	r3, r3, r1
 8392 0fa4 03F58873 		add	r3, r3, #272
 8393 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8394              		.loc 1 1048 0
 8395 0faa 1433     		adds	r3, r3, #20
 8396 0fac DAB2     		uxtb	r2, r3
 8397 0fae 07F54873 		add	r3, r7, #800
 8398 0fb2 83F83720 		strb	r2, [r3, #55]
1065:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 8399              		.loc 1 1065 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 195


 8400 0fb6 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8401 0fba D7F88015 		ldr	r1, [r7, #1408]
 8402 0fbe 1346     		mov	r3, r2
 8403 0fc0 DB00     		lsls	r3, r3, #3
 8404 0fc2 9B1A     		subs	r3, r3, r2
 8405 0fc4 1B01     		lsls	r3, r3, #4
 8406 0fc6 0B44     		add	r3, r3, r1
 8407 0fc8 03F58873 		add	r3, r3, #272
 8408 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8409              		.loc 1 1048 0
 8410 0fce 1433     		adds	r3, r3, #20
 8411 0fd0 DAB2     		uxtb	r2, r3
 8412 0fd2 07F54873 		add	r3, r7, #800
 8413 0fd6 83F83820 		strb	r2, [r3, #56]
 8414 0fda 97F87C35 		ldrb	r3, [r7, #1404]
 8415 0fde 0A33     		adds	r3, r3, #10
 8416 0fe0 DAB2     		uxtb	r2, r3
 8417 0fe2 07F54873 		add	r3, r7, #800
 8418 0fe6 83F83920 		strb	r2, [r3, #57]
 8419 0fea 97F87C35 		ldrb	r3, [r7, #1404]
 8420 0fee 0A33     		adds	r3, r3, #10
 8421 0ff0 DAB2     		uxtb	r2, r3
 8422 0ff2 07F54873 		add	r3, r7, #800
 8423 0ff6 83F83A20 		strb	r2, [r3, #58]
 8424 0ffa 97F87C35 		ldrb	r3, [r7, #1404]
 8425 0ffe 0A33     		adds	r3, r3, #10
 8426 1000 DAB2     		uxtb	r2, r3
 8427 1002 07F54873 		add	r3, r7, #800
 8428 1006 83F83B20 		strb	r2, [r3, #59]
 8429 100a 97F87C35 		ldrb	r3, [r7, #1404]
 8430 100e 0A33     		adds	r3, r3, #10
 8431 1010 DAB2     		uxtb	r2, r3
 8432 1012 07F54873 		add	r3, r7, #800
 8433 1016 83F83C20 		strb	r2, [r3, #60]
 8434 101a 97F87C35 		ldrb	r3, [r7, #1404]
 8435 101e 0A33     		adds	r3, r3, #10
 8436 1020 DAB2     		uxtb	r2, r3
 8437 1022 07F54873 		add	r3, r7, #800
 8438 1026 83F83D20 		strb	r2, [r3, #61]
 8439 102a 97F87C35 		ldrb	r3, [r7, #1404]
 8440 102e 0A33     		adds	r3, r3, #10
 8441 1030 DAB2     		uxtb	r2, r3
 8442 1032 07F54873 		add	r3, r7, #800
 8443 1036 83F83E20 		strb	r2, [r3, #62]
1066:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 8444              		.loc 1 1066 0
 8445 103a 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8446 103e D7F88015 		ldr	r1, [r7, #1408]
 8447 1042 1346     		mov	r3, r2
 8448 1044 DB00     		lsls	r3, r3, #3
 8449 1046 9B1A     		subs	r3, r3, r2
 8450 1048 1B01     		lsls	r3, r3, #4
 8451 104a 0B44     		add	r3, r3, r1
 8452 104c 03F58873 		add	r3, r3, #272
 8453 1050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 196


 8454              		.loc 1 1048 0
 8455 1052 1433     		adds	r3, r3, #20
 8456 1054 DAB2     		uxtb	r2, r3
 8457 1056 07F54873 		add	r3, r7, #800
 8458 105a 83F83F20 		strb	r2, [r3, #63]
1067:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 8459              		.loc 1 1067 0
 8460 105e 97F87C25 		ldrb	r2, [r7, #1404]	@ zero_extendqisi2
 8461 1062 D7F88015 		ldr	r1, [r7, #1408]
 8462 1066 1346     		mov	r3, r2
 8463 1068 DB00     		lsls	r3, r3, #3
 8464 106a 9B1A     		subs	r3, r3, r2
 8465 106c 1B01     		lsls	r3, r3, #4
 8466 106e 0B44     		add	r3, r3, r1
 8467 1070 03F58873 		add	r3, r3, #272
 8468 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1048:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 8469              		.loc 1 1048 0
 8470 1076 1433     		adds	r3, r3, #20
 8471 1078 DAB2     		uxtb	r2, r3
 8472 107a 07F54873 		add	r3, r7, #800
 8473 107e 83F84020 		strb	r2, [r3, #64]
 8474 1082 07F54873 		add	r3, r7, #800
 8475 1086 1422     		movs	r2, #20
 8476 1088 83F84120 		strb	r2, [r3, #65]
 8477 108c 07F54873 		add	r3, r7, #800
 8478 1090 1522     		movs	r2, #21
 8479 1092 83F84220 		strb	r2, [r3, #66]
 8480 1096 07F54873 		add	r3, r7, #800
 8481 109a 3222     		movs	r2, #50
 8482 109c 83F84320 		strb	r2, [r3, #67]
 8483 10a0 07F54873 		add	r3, r7, #800
 8484 10a4 3222     		movs	r2, #50
 8485 10a6 83F84420 		strb	r2, [r3, #68]
 8486 10aa 07F54873 		add	r3, r7, #800
 8487 10ae 3222     		movs	r2, #50
 8488 10b0 83F84520 		strb	r2, [r3, #69]
 8489 10b4 07F54873 		add	r3, r7, #800
 8490 10b8 3222     		movs	r2, #50
 8491 10ba 83F84620 		strb	r2, [r3, #70]
 8492 10be 07F54873 		add	r3, r7, #800
 8493 10c2 6E22     		movs	r2, #110
 8494 10c4 83F84720 		strb	r2, [r3, #71]
 8495 10c8 07F54873 		add	r3, r7, #800
 8496 10cc 6E22     		movs	r2, #110
 8497 10ce 83F84820 		strb	r2, [r3, #72]
 8498 10d2 07F54873 		add	r3, r7, #800
 8499 10d6 6E22     		movs	r2, #110
 8500 10d8 83F84920 		strb	r2, [r3, #73]
 8501 10dc 07F54873 		add	r3, r7, #800
 8502 10e0 0022     		movs	r2, #0
 8503 10e2 83F84A20 		strb	r2, [r3, #74]
 8504 10e6 07F54873 		add	r3, r7, #800
 8505 10ea 6422     		movs	r2, #100
 8506 10ec 83F84B20 		strb	r2, [r3, #75]
 8507 10f0 07F54873 		add	r3, r7, #800
 8508 10f4 6422     		movs	r2, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 197


 8509 10f6 83F84C20 		strb	r2, [r3, #76]
 8510 10fa 07F54873 		add	r3, r7, #800
 8511 10fe 6422     		movs	r2, #100
 8512 1100 83F84D20 		strb	r2, [r3, #77]
 8513 1104 07F54873 		add	r3, r7, #800
 8514 1108 5022     		movs	r2, #80
 8515 110a 83F84E20 		strb	r2, [r3, #78]
 8516 110e 07F54873 		add	r3, r7, #800
 8517 1112 5022     		movs	r2, #80
 8518 1114 83F84F20 		strb	r2, [r3, #79]
 8519 1118 07F54873 		add	r3, r7, #800
 8520 111c 5A22     		movs	r2, #90
 8521 111e 83F85020 		strb	r2, [r3, #80]
 8522 1122 07F54873 		add	r3, r7, #800
 8523 1126 5A22     		movs	r2, #90
 8524 1128 83F85120 		strb	r2, [r3, #81]
 8525 112c 07F54873 		add	r3, r7, #800
 8526 1130 5A22     		movs	r2, #90
 8527 1132 83F85220 		strb	r2, [r3, #82]
1068:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_EXPANSION, ST_JOY_SPEC,
1069:..\src/command_processing.c ****         ST_JOY_SPEC, ST_JOY_SPEC, ST_DEVICE, ST_WR_SPEC, 
1070:..\src/command_processing.c ****         ST_WR_SPEC,
1071:..\src/command_processing.c ****         
1072:..\src/command_processing.c ****                     ST_WR_SPEC, ST_MS_SPEC, ST_MS_SPEC,
1073:..\src/command_processing.c ****         ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
1074:..\src/command_processing.c ****         
1075:..\src/command_processing.c ****     };
1076:..\src/command_processing.c ****     
1077:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 8528              		.loc 1 1077 0
 8529 1136 07F5EA73 		add	r3, r7, #468
 8530 113a CE4A     		ldr	r2, .L375
 8531 113c 1846     		mov	r0, r3
 8532 113e 1146     		mov	r1, r2
 8533 1140 4FF4A673 		mov	r3, #332
 8534 1144 1A46     		mov	r2, r3
 8535 1146 FFF7FEFF 		bl	memcpy
1078:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1079:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1080:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1081:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1082:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1083:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1084:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1085:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1086:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1087:..\src/command_processing.c ****         
1088:..\src/command_processing.c ****         // GENERIC PARAMS
1089:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1090:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1091:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1092:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1093:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1094:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1095:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1096:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1097:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Record EMG on SD card:", "72 -
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 198


1098:..\src/command_processing.c ****         "73 - Joystick threshold:", "74 - Joystick gains:", "75 - Device type:", "76 - EMG FSM act.
1099:..\src/command_processing.c ****         "77 - Fast act.thresholds:",
1100:..\src/command_processing.c ****         
1101:..\src/command_processing.c ****                                      "78 - Wrist direction:", "79 - Slave communication active:", "
1102:..\src/command_processing.c ****         "81 - Maximum slave residual current:", "82 - Maximum pressure feedback (kPa):", "83 - Prop
1103:..\src/command_processing.c ****     };
1104:..\src/command_processing.c **** 
1105:..\src/command_processing.c ****     //Parameters menu
1106:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 8536              		.loc 1 1106 0
 8537 114a 07F5AE73 		add	r3, r7, #348
 8538 114e 0022     		movs	r2, #0
 8539 1150 1A60     		str	r2, [r3]
 8540 1152 0433     		adds	r3, r3, #4
 8541 1154 7222     		movs	r2, #114
 8542 1156 0021     		movs	r1, #0
 8543 1158 1846     		mov	r0, r3
 8544 115a FFF7FEFF 		bl	memset
1107:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 8545              		.loc 1 1107 0
 8546 115e 07F5AE70 		add	r0, r7, #348
 8547 1162 6423     		movs	r3, #100
 8548 1164 0A22     		movs	r2, #10
 8549 1166 C449     		ldr	r1, .L375+4
 8550 1168 FFF7FEFF 		bl	sprintf
1108:..\src/command_processing.c **** 
1109:..\src/command_processing.c ****     char fsm_activation_mode_menu[56] = "";
 8551              		.loc 1 1109 0
 8552 116c 07F59273 		add	r3, r7, #292
 8553 1170 0022     		movs	r2, #0
 8554 1172 1A60     		str	r2, [r3]
 8555 1174 0433     		adds	r3, r3, #4
 8556 1176 3422     		movs	r2, #52
 8557 1178 0021     		movs	r1, #0
 8558 117a 1846     		mov	r0, r3
 8559 117c FFF7FEFF 		bl	memset
1110:..\src/command_processing.c ****     if (MEM_P->dev.dev_type == SOFTHAND_2_MOTORS){
 8560              		.loc 1 1110 0
 8561 1180 D7F88035 		ldr	r3, [r7, #1408]
 8562 1184 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8563 1188 042B     		cmp	r3, #4
 8564 118a 10D1     		bne	.L307
1111:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:syn2, Slow:syn1\n1 -> Slow:syn2, Fast:syn1\n")
 8565              		.loc 1 1111 0
 8566 118c 07F59273 		add	r3, r7, #292
 8567 1190 BA4A     		ldr	r2, .L375+8
 8568 1192 1C46     		mov	r4, r3
 8569 1194 1546     		mov	r5, r2
 8570 1196 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8571 1198 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8572 119a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8573 119c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8574 119e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8575 11a0 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8576 11a2 95E80300 		ldmia	r5, {r0, r1}
 8577 11a6 2060     		str	r0, [r4]
 8578 11a8 0434     		adds	r4, r4, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 199


 8579 11aa 2170     		strb	r1, [r4]
 8580 11ac 12E0     		b	.L308
 8581              	.L307:
1112:..\src/command_processing.c ****     }
1113:..\src/command_processing.c ****     else {
1114:..\src/command_processing.c ****         sprintf(fsm_activation_mode_menu, "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n
 8582              		.loc 1 1114 0
 8583 11ae 07F59273 		add	r3, r7, #292
 8584 11b2 B34A     		ldr	r2, .L375+12
 8585 11b4 1C46     		mov	r4, r3
 8586 11b6 1546     		mov	r5, r2
 8587 11b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8588 11ba 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8589 11bc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8590 11be 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8591 11c0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8592 11c2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8593 11c4 95E80300 		ldmia	r5, {r0, r1}
 8594 11c8 2060     		str	r0, [r4]
 8595 11ca 0434     		adds	r4, r4, #4
 8596 11cc 2180     		strh	r1, [r4]	@ movhi
 8597 11ce 0234     		adds	r4, r4, #2
 8598 11d0 0B0C     		lsrs	r3, r1, #16
 8599 11d2 2370     		strb	r3, [r4]
 8600              	.L308:
1115:..\src/command_processing.c ****     }
1116:..\src/command_processing.c ****     
1117:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 8601              		.loc 1 1117 0
 8602 11d4 07F1F403 		add	r3, r7, #244
 8603 11d8 AA4A     		ldr	r2, .L375+16
 8604 11da 1A60     		str	r2, [r3]
 8605 11dc 07F1F403 		add	r3, r7, #244
 8606 11e0 A94A     		ldr	r2, .L375+20
 8607 11e2 5A60     		str	r2, [r3, #4]
 8608 11e4 07F1F403 		add	r3, r7, #244
 8609 11e8 A84A     		ldr	r2, .L375+24
 8610 11ea 9A60     		str	r2, [r3, #8]
 8611 11ec 07F1F403 		add	r3, r7, #244
 8612 11f0 A74A     		ldr	r2, .L375+28
 8613 11f2 DA60     		str	r2, [r3, #12]
 8614 11f4 07F1F403 		add	r3, r7, #244
 8615 11f8 A64A     		ldr	r2, .L375+32
 8616 11fa 1A61     		str	r2, [r3, #16]
 8617 11fc 07F1F403 		add	r3, r7, #244
 8618 1200 A54A     		ldr	r2, .L375+36
 8619 1202 5A61     		str	r2, [r3, #20]
 8620 1204 07F1F403 		add	r3, r7, #244
 8621 1208 07F5AE72 		add	r2, r7, #348
 8622 120c 9A61     		str	r2, [r3, #24]
 8623 120e 07F1F403 		add	r3, r7, #244
 8624 1212 A24A     		ldr	r2, .L375+40
 8625 1214 DA61     		str	r2, [r3, #28]
 8626 1216 07F1F403 		add	r3, r7, #244
 8627 121a A14A     		ldr	r2, .L375+44
 8628 121c 1A62     		str	r2, [r3, #32]
 8629 121e 07F1F403 		add	r3, r7, #244
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 200


 8630 1222 A04A     		ldr	r2, .L375+48
 8631 1224 5A62     		str	r2, [r3, #36]
 8632 1226 07F1F403 		add	r3, r7, #244
 8633 122a 07F59272 		add	r2, r7, #292
 8634 122e 9A62     		str	r2, [r3, #40]
 8635 1230 07F1F403 		add	r3, r7, #244
 8636 1234 9C4A     		ldr	r2, .L375+52
 8637 1236 DA62     		str	r2, [r3, #44]
1118:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1119:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1120:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1121:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1122:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1123:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1124:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1125:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1126:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1127:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\n4 -> SOF
1128:..\src/command_processing.c ****         fsm_activation_mode_menu,                                                                  
1129:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1130:..\src/command_processing.c ****     };   
1131:..\src/command_processing.c ****     
1132:..\src/command_processing.c ****     uint8 NUM_MENU[32] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 8638              		.loc 1 1132 0
 8639 1238 07F1D403 		add	r3, r7, #212
 8640 123c 9B4A     		ldr	r2, .L375+56
 8641 123e 1C46     		mov	r4, r3
 8642 1240 1546     		mov	r5, r2
 8643 1242 2868     		ldr	r0, [r5]	@ unaligned
 8644 1244 6968     		ldr	r1, [r5, #4]	@ unaligned
 8645 1246 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8646 1248 EB68     		ldr	r3, [r5, #12]	@ unaligned
 8647 124a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8648 124c 2869     		ldr	r0, [r5, #16]	@ unaligned
 8649 124e 6969     		ldr	r1, [r5, #20]	@ unaligned
 8650 1250 AA69     		ldr	r2, [r5, #24]	@ unaligned
 8651 1252 EB69     		ldr	r3, [r5, #28]	@ unaligned
 8652 1254 0FC4     		stmia	r4!, {r0, r1, r2, r3}
1133:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 8653              		.loc 1 1133 0
 8654 1256 07F1C803 		add	r3, r7, #200
 8655 125a 954A     		ldr	r2, .L375+60
 8656 125c 1068     		ldr	r0, [r2]	@ unaligned
 8657 125e 5168     		ldr	r1, [r2, #4]	@ unaligned
 8658 1260 03C3     		stmia	r3!, {r0, r1}
 8659 1262 127A     		ldrb	r2, [r2, #8]
 8660 1264 1A70     		strb	r2, [r3]
1134:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 8661              		.loc 1 1134 0
 8662 1266 07F1B403 		add	r3, r7, #180
 8663 126a 924A     		ldr	r2, .L375+64
 8664 126c 1C46     		mov	r4, r3
 8665 126e 1546     		mov	r5, r2
 8666 1270 2868     		ldr	r0, [r5]	@ unaligned
 8667 1272 6968     		ldr	r1, [r5, #4]	@ unaligned
 8668 1274 AA68     		ldr	r2, [r5, #8]	@ unaligned
 8669 1276 EB68     		ldr	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 201


 8670 1278 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 8671 127a 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 8672 127c 2380     		strh	r3, [r4]	@ unaligned
1135:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 8673              		.loc 1 1135 0
 8674 127e 2323     		movs	r3, #35
 8675 1280 87F87B35 		strb	r3, [r7, #1403]
1136:..\src/command_processing.c **** 
1137:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1138:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1139:..\src/command_processing.c ****     
1140:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1141:..\src/command_processing.c **** 
1142:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1143:..\src/command_processing.c ****     
1144:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1145:..\src/command_processing.c ****     j = 0;
 8676              		.loc 1 1145 0
 8677 1284 0023     		movs	r3, #0
 8678 1286 87F88635 		strb	r3, [r7, #1414]
1146:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8679              		.loc 1 1146 0
 8680 128a 0023     		movs	r3, #0
 8681 128c 87F88735 		strb	r3, [r7, #1415]
 8682 1290 21E0     		b	.L309
 8683              	.L312:
1147:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8684              		.loc 1 1147 0
 8685 1292 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8686 1296 07F1C802 		add	r2, r7, #200
 8687 129a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8688 129c 1A46     		mov	r2, r3
 8689 129e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8690 12a2 0133     		adds	r3, r3, #1
 8691 12a4 9A42     		cmp	r2, r3
 8692 12a6 0BD1     		bne	.L310
1148:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 8693              		.loc 1 1148 0
 8694 12a8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8695 12ac 07F16002 		add	r2, r7, #96
 8696 12b0 0121     		movs	r1, #1
 8697 12b2 D154     		strb	r1, [r2, r3]
1149:..\src/command_processing.c ****             j++;
 8698              		.loc 1 1149 0
 8699 12b4 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8700 12b8 0133     		adds	r3, r3, #1
 8701 12ba 87F88635 		strb	r3, [r7, #1414]
 8702 12be 05E0     		b	.L311
 8703              	.L310:
1150:..\src/command_processing.c ****         }
1151:..\src/command_processing.c ****         else {
1152:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 8704              		.loc 1 1152 0
 8705 12c0 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8706 12c4 07F16002 		add	r2, r7, #96
 8707 12c8 0021     		movs	r1, #0
 8708 12ca D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 202


 8709              	.L311:
1146:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8710              		.loc 1 1146 0 discriminator 2
 8711 12cc 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8712 12d0 0133     		adds	r3, r3, #1
 8713 12d2 87F88735 		strb	r3, [r7, #1415]
 8714              	.L309:
1146:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 8715              		.loc 1 1146 0 is_stmt 0 discriminator 1
 8716 12d6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8717 12da 522B     		cmp	r3, #82
 8718 12dc D9D9     		bls	.L312
1153:..\src/command_processing.c ****         }
1154:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1155:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1156:..\src/command_processing.c ****     j = 0;
 8719              		.loc 1 1156 0 is_stmt 1
 8720 12de 0023     		movs	r3, #0
 8721 12e0 87F88635 		strb	r3, [r7, #1414]
1157:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 8722              		.loc 1 1157 0
 8723 12e4 0023     		movs	r3, #0
 8724 12e6 87F88735 		strb	r3, [r7, #1415]
 8725 12ea 21E0     		b	.L313
 8726              	.L316:
1158:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8727              		.loc 1 1158 0
 8728 12ec 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8729 12f0 07F1B402 		add	r2, r7, #180
 8730 12f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8731 12f6 1A46     		mov	r2, r3
 8732 12f8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8733 12fc 0133     		adds	r3, r3, #1
 8734 12fe 9A42     		cmp	r2, r3
 8735 1300 0BD1     		bne	.L314
1159:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 8736              		.loc 1 1159 0
 8737 1302 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8738 1306 07F10C02 		add	r2, r7, #12
 8739 130a 0121     		movs	r1, #1
 8740 130c D154     		strb	r1, [r2, r3]
1160:..\src/command_processing.c ****             j++;
 8741              		.loc 1 1160 0
 8742 130e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 8743 1312 0133     		adds	r3, r3, #1
 8744 1314 87F88635 		strb	r3, [r7, #1414]
 8745 1318 05E0     		b	.L315
 8746              	.L314:
1161:..\src/command_processing.c ****         }
1162:..\src/command_processing.c ****         else {
1163:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 8747              		.loc 1 1163 0
 8748 131a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8749 131e 07F10C02 		add	r2, r7, #12
 8750 1322 0021     		movs	r1, #0
 8751 1324 D154     		strb	r1, [r2, r3]
 8752              	.L315:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 203


1157:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8753              		.loc 1 1157 0 discriminator 2
 8754 1326 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8755 132a 0133     		adds	r3, r3, #1
 8756 132c 87F88735 		strb	r3, [r7, #1415]
 8757              	.L313:
1157:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 8758              		.loc 1 1157 0 is_stmt 0 discriminator 1
 8759 1330 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8760 1334 522B     		cmp	r3, #82
 8761 1336 D9D9     		bls	.L316
1164:..\src/command_processing.c ****         }
1165:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1166:..\src/command_processing.c ****         
1167:..\src/command_processing.c ****     if (!index) {
 8762              		.loc 1 1167 0 is_stmt 1
 8763 1338 BB1D     		adds	r3, r7, #6
 8764 133a 1B88     		ldrh	r3, [r3]
 8765 133c 002B     		cmp	r3, #0
 8766 133e 17D1     		bne	.L317
1168:..\src/command_processing.c ****         // Get parameters list with relative types
1169:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 8767              		.loc 1 1169 0
 8768 1340 07F54874 		add	r4, r7, #800
 8769 1344 07F55D72 		add	r2, r7, #884
 8770 1348 07F57271 		add	r1, r7, #968
 8771 134c 07F21C40 		addw	r0, r7, #1052
 8772 1350 07F1F403 		add	r3, r7, #244
 8773 1354 0393     		str	r3, [sp, #12]
 8774 1356 07F16003 		add	r3, r7, #96
 8775 135a 0293     		str	r3, [sp, #8]
 8776 135c 07F5EA73 		add	r3, r7, #468
 8777 1360 0193     		str	r3, [sp, #4]
 8778 1362 07F1D403 		add	r3, r7, #212
 8779 1366 0093     		str	r3, [sp]
 8780 1368 2346     		mov	r3, r4
 8781 136a FFF7FEFF 		bl	get_param_list
1170:..\src/command_processing.c ****     }
1171:..\src/command_processing.c ****     else {
1172:..\src/command_processing.c ****         // Set specific parameter        
1173:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1174:..\src/command_processing.c ****         
1175:..\src/command_processing.c ****         // Find size of data
1176:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1177:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1178:..\src/command_processing.c ****                 sod = 1; break;
1179:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1180:..\src/command_processing.c ****                 sod = 2; break;
1181:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1182:..\src/command_processing.c ****                 sod = 4; break;
1183:..\src/command_processing.c ****         }   
1184:..\src/command_processing.c ****             
1185:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1186:..\src/command_processing.c ****             // Use default specifications for param setting
1187:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1188:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1189:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 204


1190:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1191:..\src/command_processing.c ****                     }
1192:..\src/command_processing.c ****                     break;                
1193:..\src/command_processing.c ****                 case TYPE_STRING:
1194:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1195:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1196:..\src/command_processing.c ****                     }
1197:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1198:..\src/command_processing.c ****                 break; 
1199:..\src/command_processing.c ****                 case TYPE_INT8:
1200:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1201:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1202:..\src/command_processing.c ****                     }
1203:..\src/command_processing.c ****                     break;                    
1204:..\src/command_processing.c ****                 case TYPE_INT16:
1205:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1206:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1207:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1208:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1209:..\src/command_processing.c ****                         }
1210:..\src/command_processing.c ****                     }                   
1211:..\src/command_processing.c ****                     break;
1212:..\src/command_processing.c ****                 case TYPE_UINT16:
1213:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1214:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1215:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1216:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1217:..\src/command_processing.c ****                         }
1218:..\src/command_processing.c ****                     }
1219:..\src/command_processing.c ****                     break;
1220:..\src/command_processing.c ****                 case TYPE_INT32:
1221:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1222:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1223:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1224:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1225:..\src/command_processing.c ****                         }
1226:..\src/command_processing.c ****                     }
1227:..\src/command_processing.c ****                     break;
1228:..\src/command_processing.c ****                 case TYPE_UINT32:
1229:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1230:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1231:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1232:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1233:..\src/command_processing.c ****                         }
1234:..\src/command_processing.c ****                     }
1235:..\src/command_processing.c ****                     break;
1236:..\src/command_processing.c ****                 case TYPE_FLOAT:
1237:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1238:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1239:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1240:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1241:..\src/command_processing.c ****                         }
1242:..\src/command_processing.c ****                     }
1243:..\src/command_processing.c ****                     break;
1244:..\src/command_processing.c ****                 default:
1245:..\src/command_processing.c ****                     break;
1246:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 205


1247:..\src/command_processing.c ****         }
1248:..\src/command_processing.c ****         else {  
1249:..\src/command_processing.c ****             // Use custom specifications for param setting
1250:..\src/command_processing.c ****             set_custom_param(index);
1251:..\src/command_processing.c ****         }
1252:..\src/command_processing.c ****         
1253:..\src/command_processing.c ****         // Store param also in user_emg structure
1254:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1255:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1256:..\src/command_processing.c ****         }
1257:..\src/command_processing.c ****         
1258:..\src/command_processing.c ****         // Perform chip reset if needed
1259:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1260:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1261:..\src/command_processing.c ****             do {
1262:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1263:..\src/command_processing.c ****                 idx++;
1264:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1265:..\src/command_processing.c ****             
1266:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1267:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1268:..\src/command_processing.c ****             }   
1269:..\src/command_processing.c ****         }
1270:..\src/command_processing.c ****     }
1271:..\src/command_processing.c **** } 
 8782              		.loc 1 1271 0
 8783 136e DFE2     		b	.L368
 8784              	.L317:
1173:..\src/command_processing.c ****         
 8785              		.loc 1 1173 0
 8786 1370 BB1D     		adds	r3, r7, #6
 8787 1372 1B88     		ldrh	r3, [r3]	@ movhi
 8788 1374 DBB2     		uxtb	r3, r3
 8789 1376 013B     		subs	r3, r3, #1
 8790 1378 87F87A35 		strb	r3, [r7, #1402]
1176:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 8791              		.loc 1 1176 0
 8792 137c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8793 1380 07F57272 		add	r2, r7, #968
 8794 1384 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8795 1386 092B     		cmp	r3, #9
 8796 1388 22D8     		bhi	.L319
 8797 138a 01A2     		adr	r2, .L321
 8798 138c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8799              		.p2align 2
 8800              	.L321:
 8801 1390 B9130000 		.word	.L320+1
 8802 1394 B9130000 		.word	.L320+1
 8803 1398 B9130000 		.word	.L320+1
 8804 139c C1130000 		.word	.L322+1
 8805 13a0 C1130000 		.word	.L322+1
 8806 13a4 C9130000 		.word	.L323+1
 8807 13a8 C9130000 		.word	.L323+1
 8808 13ac C9130000 		.word	.L323+1
 8809 13b0 D1130000 		.word	.L319+1
 8810 13b4 B9130000 		.word	.L320+1
 8811              		.p2align 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 206


 8812              	.L320:
1178:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 8813              		.loc 1 1178 0
 8814 13b8 0123     		movs	r3, #1
 8815 13ba 87F88535 		strb	r3, [r7, #1413]
 8816 13be 07E0     		b	.L319
 8817              	.L322:
1180:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 8818              		.loc 1 1180 0
 8819 13c0 0223     		movs	r3, #2
 8820 13c2 87F88535 		strb	r3, [r7, #1413]
 8821 13c6 03E0     		b	.L319
 8822              	.L323:
1182:..\src/command_processing.c ****         }   
 8823              		.loc 1 1182 0
 8824 13c8 0423     		movs	r3, #4
 8825 13ca 87F88535 		strb	r3, [r7, #1413]
 8826 13ce 00BF     		nop
 8827              	.L319:
1185:..\src/command_processing.c ****             // Use default specifications for param setting
 8828              		.loc 1 1185 0
 8829 13d0 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8830 13d4 07F10C02 		add	r2, r7, #12
 8831 13d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8832 13da 002B     		cmp	r3, #0
 8833 13dc 40F03B82 		bne	.L324
1187:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 8834              		.loc 1 1187 0
 8835 13e0 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8836 13e4 07F57272 		add	r2, r7, #968
 8837 13e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8838 13ea 092B     		cmp	r3, #9
 8839 13ec 00F23C82 		bhi	.L367
 8840 13f0 01A2     		adr	r2, .L327
 8841 13f2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8842 13f6 00BF     		.p2align 2
 8843              	.L327:
 8844 13f8 21140000 		.word	.L326+1
 8845 13fc 1F150000 		.word	.L328+1
 8846 1400 21140000 		.word	.L326+1
 8847 1404 71150000 		.word	.L329+1
 8848 1408 07160000 		.word	.L330+1
 8849 140c 9B160000 		.word	.L331+1
 8850 1410 2F170000 		.word	.L332+1
 8851 1414 C3170000 		.word	.L333+1
 8852 1418 69180000 		.word	.L367+1
 8853 141c 6D140000 		.word	.L334+1
 8854              		.p2align 1
 8855              	.L326:
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8856              		.loc 1 1189 0
 8857 1420 0023     		movs	r3, #0
 8858 1422 87F88735 		strb	r3, [r7, #1415]
 8859 1426 17E0     		b	.L335
 8860              	.L336:
1190:..\src/command_processing.c ****                     }
 8861              		.loc 1 1190 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 207


 8862 1428 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8863 142c 07F21C43 		addw	r3, r7, #1052
 8864 1430 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8865 1434 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8866 1438 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8867 143c 01FB02F2 		mul	r2, r1, r2
 8868 1440 1344     		add	r3, r3, r2
 8869 1442 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8870 1446 0332     		adds	r2, r2, #3
 8871 1448 1B49     		ldr	r1, .L375+68
 8872 144a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8873 144c 1A70     		strb	r2, [r3]
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8874              		.loc 1 1189 0 discriminator 3
 8875 144e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8876 1452 0133     		adds	r3, r3, #1
 8877 1454 87F88735 		strb	r3, [r7, #1415]
 8878              	.L335:
1189:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8879              		.loc 1 1189 0 is_stmt 0 discriminator 1
 8880 1458 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8881 145c 07F55D72 		add	r2, r7, #884
 8882 1460 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8883 1462 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8884 1466 9A42     		cmp	r2, r3
 8885 1468 DED3     		bcc	.L336
1192:..\src/command_processing.c ****                 case TYPE_STRING:
 8886              		.loc 1 1192 0 is_stmt 1
 8887 146a FEE1     		b	.L362
 8888              	.L334:
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8889              		.loc 1 1194 0
 8890 146c 0023     		movs	r3, #0
 8891 146e 87F88735 		strb	r3, [r7, #1415]
 8892 1472 3BE0     		b	.L338
 8893              	.L376:
 8894              		.align	2
 8895              	.L375:
 8896 1474 0C0F0000 		.word	.LC128
 8897 1478 74020000 		.word	.LC129
 8898 147c E8020000 		.word	.LC130
 8899 1480 20030000 		.word	.LC131
 8900 1484 58030000 		.word	.LC132
 8901 1488 E4030000 		.word	.LC133
 8902 148c 24040000 		.word	.LC134
 8903 1490 50040000 		.word	.LC135
 8904 1494 68040000 		.word	.LC136
 8905 1498 90040000 		.word	.LC137
 8906 149c EC040000 		.word	.LC138
 8907 14a0 2C050000 		.word	.LC139
 8908 14a4 74050000 		.word	.LC140
 8909 14a8 F0050000 		.word	.LC141
 8910 14ac 58100000 		.word	.LC85
 8911 14b0 78100000 		.word	.LC86
 8912 14b4 84100000 		.word	.LC87
 8913 14b8 00000000 		.word	g_rx
 8914              	.L339:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 208


1195:..\src/command_processing.c ****                     }
 8915              		.loc 1 1195 0 discriminator 3
 8916 14bc 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8917 14c0 07F21C43 		addw	r3, r7, #1052
 8918 14c4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8919 14c8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8920 14cc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8921 14d0 01FB02F2 		mul	r2, r1, r2
 8922 14d4 1344     		add	r3, r3, r2
 8923 14d6 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8924 14da 0332     		adds	r2, r2, #3
 8925 14dc E149     		ldr	r1, .L377
 8926 14de 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8927 14e0 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8928              		.loc 1 1194 0 discriminator 3
 8929 14e2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8930 14e6 0133     		adds	r3, r3, #1
 8931 14e8 87F88735 		strb	r3, [r7, #1415]
 8932              	.L338:
1194:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 8933              		.loc 1 1194 0 is_stmt 0 discriminator 1
 8934 14ec 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8935 14f0 07F55D72 		add	r2, r7, #884
 8936 14f4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8937 14f6 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8938 14fa 9A42     		cmp	r2, r3
 8939 14fc DED3     		bcc	.L339
1197:..\src/command_processing.c ****                 break; 
 8940              		.loc 1 1197 0 is_stmt 1
 8941 14fe 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8942 1502 07F21C43 		addw	r3, r7, #1052
 8943 1506 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8944 150a 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8945 150e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8946 1512 01FB02F2 		mul	r2, r1, r2
 8947 1516 1344     		add	r3, r3, r2
 8948 1518 0022     		movs	r2, #0
 8949 151a 1A70     		strb	r2, [r3]
1198:..\src/command_processing.c ****                 case TYPE_INT8:
 8950              		.loc 1 1198 0
 8951 151c A5E1     		b	.L362
 8952              	.L328:
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8953              		.loc 1 1200 0
 8954 151e 0023     		movs	r3, #0
 8955 1520 87F88735 		strb	r3, [r7, #1415]
 8956 1524 1AE0     		b	.L340
 8957              	.L341:
1201:..\src/command_processing.c ****                     }
 8958              		.loc 1 1201 0 discriminator 3
 8959 1526 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 8960 152a 07F21C43 		addw	r3, r7, #1052
 8961 152e 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8962 1532 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8963 1536 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 8964 153a 01FB02F2 		mul	r2, r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 209


 8965 153e 1344     		add	r3, r3, r2
 8966 1540 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8967 1544 0332     		adds	r2, r2, #3
 8968 1546 C749     		ldr	r1, .L377
 8969 1548 0A44     		add	r2, r2, r1
 8970 154a 92F90020 		ldrsb	r2, [r2]
 8971 154e D2B2     		uxtb	r2, r2
 8972 1550 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8973              		.loc 1 1200 0 discriminator 3
 8974 1552 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8975 1556 0133     		adds	r3, r3, #1
 8976 1558 87F88735 		strb	r3, [r7, #1415]
 8977              	.L340:
1200:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 8978              		.loc 1 1200 0 is_stmt 0 discriminator 1
 8979 155c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 8980 1560 07F55D72 		add	r2, r7, #884
 8981 1564 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8982 1566 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 8983 156a 9A42     		cmp	r2, r3
 8984 156c DBD3     		bcc	.L341
1203:..\src/command_processing.c ****                 case TYPE_INT16:
 8985              		.loc 1 1203 0 is_stmt 1
 8986 156e 7CE1     		b	.L362
 8987              	.L329:
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 8988              		.loc 1 1205 0
 8989 1570 0023     		movs	r3, #0
 8990 1572 87F88735 		strb	r3, [r7, #1415]
 8991 1576 3CE0     		b	.L342
 8992              	.L345:
1206:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 8993              		.loc 1 1206 0
 8994 1578 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 8995 157c 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 8996 1580 02FB03F3 		mul	r3, r2, r3
 8997 1584 0333     		adds	r3, r3, #3
 8998 1586 B74A     		ldr	r2, .L377
 8999 1588 1344     		add	r3, r3, r2
 9000 158a B3F90030 		ldrsh	r3, [r3]
 9001 158e A7F87835 		strh	r3, [r7, #1400]	@ movhi
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9002              		.loc 1 1207 0
 9003 1592 0023     		movs	r3, #0
 9004 1594 87F88635 		strb	r3, [r7, #1414]
 9005 1598 20E0     		b	.L343
 9006              	.L344:
1208:..\src/command_processing.c ****                         }
 9007              		.loc 1 1208 0 discriminator 3
 9008 159a 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9009 159e 07F21C43 		addw	r3, r7, #1052
 9010 15a2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9011 15a6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9012 15aa 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9013 15ae 01FB03F3 		mul	r3, r1, r3
 9014 15b2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 210


 9015 15b4 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9016 15b8 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9017 15bc CB1A     		subs	r3, r1, r3
 9018 15be 0344     		add	r3, r3, r0
 9019 15c0 013B     		subs	r3, r3, #1
 9020 15c2 1344     		add	r3, r3, r2
 9021 15c4 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9022 15c8 07F5AF61 		add	r1, r7, #1400
 9023 15cc 0A44     		add	r2, r2, r1
 9024 15ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9025 15d0 1A70     		strb	r2, [r3]
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9026              		.loc 1 1207 0 discriminator 3
 9027 15d2 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9028 15d6 0133     		adds	r3, r3, #1
 9029 15d8 87F88635 		strb	r3, [r7, #1414]
 9030              	.L343:
1207:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 9031              		.loc 1 1207 0 is_stmt 0 discriminator 1
 9032 15dc 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9033 15e0 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9034 15e4 9A42     		cmp	r2, r3
 9035 15e6 D8D3     		bcc	.L344
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9036              		.loc 1 1205 0 is_stmt 1 discriminator 2
 9037 15e8 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9038 15ec 0133     		adds	r3, r3, #1
 9039 15ee 87F88735 		strb	r3, [r7, #1415]
 9040              	.L342:
1205:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 9041              		.loc 1 1205 0 is_stmt 0 discriminator 1
 9042 15f2 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9043 15f6 07F55D72 		add	r2, r7, #884
 9044 15fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9045 15fc 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9046 1600 9A42     		cmp	r2, r3
 9047 1602 B9D3     		bcc	.L345
1211:..\src/command_processing.c ****                 case TYPE_UINT16:
 9048              		.loc 1 1211 0 is_stmt 1
 9049 1604 31E1     		b	.L362
 9050              	.L330:
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9051              		.loc 1 1213 0
 9052 1606 0023     		movs	r3, #0
 9053 1608 87F88735 		strb	r3, [r7, #1415]
 9054 160c 3BE0     		b	.L346
 9055              	.L349:
1214:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9056              		.loc 1 1214 0
 9057 160e 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9058 1612 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9059 1616 02FB03F3 		mul	r3, r2, r3
 9060 161a 0333     		adds	r3, r3, #3
 9061 161c 914A     		ldr	r2, .L377
 9062 161e 1344     		add	r3, r3, r2
 9063 1620 1B88     		ldrh	r3, [r3]
 9064 1622 A7F87635 		strh	r3, [r7, #1398]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 211


1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9065              		.loc 1 1215 0
 9066 1626 0023     		movs	r3, #0
 9067 1628 87F88635 		strb	r3, [r7, #1414]
 9068 162c 20E0     		b	.L347
 9069              	.L348:
1216:..\src/command_processing.c ****                         }
 9070              		.loc 1 1216 0 discriminator 3
 9071 162e 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9072 1632 07F21C43 		addw	r3, r7, #1052
 9073 1636 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9074 163a 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9075 163e 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9076 1642 01FB03F3 		mul	r3, r1, r3
 9077 1646 1846     		mov	r0, r3
 9078 1648 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9079 164c 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9080 1650 CB1A     		subs	r3, r1, r3
 9081 1652 0344     		add	r3, r3, r0
 9082 1654 013B     		subs	r3, r3, #1
 9083 1656 1344     		add	r3, r3, r2
 9084 1658 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9085 165c 07F27651 		addw	r1, r7, #1398
 9086 1660 0A44     		add	r2, r2, r1
 9087 1662 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9088 1664 1A70     		strb	r2, [r3]
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9089              		.loc 1 1215 0 discriminator 3
 9090 1666 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9091 166a 0133     		adds	r3, r3, #1
 9092 166c 87F88635 		strb	r3, [r7, #1414]
 9093              	.L347:
1215:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 9094              		.loc 1 1215 0 is_stmt 0 discriminator 1
 9095 1670 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9096 1674 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9097 1678 9A42     		cmp	r2, r3
 9098 167a D8D3     		bcc	.L348
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9099              		.loc 1 1213 0 is_stmt 1 discriminator 2
 9100 167c 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9101 1680 0133     		adds	r3, r3, #1
 9102 1682 87F88735 		strb	r3, [r7, #1415]
 9103              	.L346:
1213:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 9104              		.loc 1 1213 0 is_stmt 0 discriminator 1
 9105 1686 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9106 168a 07F55D72 		add	r2, r7, #884
 9107 168e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9108 1690 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9109 1694 9A42     		cmp	r2, r3
 9110 1696 BAD3     		bcc	.L349
1219:..\src/command_processing.c ****                 case TYPE_INT32:
 9111              		.loc 1 1219 0 is_stmt 1
 9112 1698 E7E0     		b	.L362
 9113              	.L331:
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 212


 9114              		.loc 1 1221 0
 9115 169a 0023     		movs	r3, #0
 9116 169c 87F88735 		strb	r3, [r7, #1415]
 9117 16a0 3BE0     		b	.L350
 9118              	.L353:
1222:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9119              		.loc 1 1222 0
 9120 16a2 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9121 16a6 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9122 16aa 02FB03F3 		mul	r3, r2, r3
 9123 16ae 0333     		adds	r3, r3, #3
 9124 16b0 6C4A     		ldr	r2, .L377
 9125 16b2 1344     		add	r3, r3, r2
 9126 16b4 1B68     		ldr	r3, [r3]
 9127 16b6 C7F87035 		str	r3, [r7, #1392]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9128              		.loc 1 1223 0
 9129 16ba 0023     		movs	r3, #0
 9130 16bc 87F88635 		strb	r3, [r7, #1414]
 9131 16c0 20E0     		b	.L351
 9132              	.L352:
1224:..\src/command_processing.c ****                         }
 9133              		.loc 1 1224 0 discriminator 3
 9134 16c2 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9135 16c6 07F21C43 		addw	r3, r7, #1052
 9136 16ca 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9137 16ce 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9138 16d2 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9139 16d6 01FB03F3 		mul	r3, r1, r3
 9140 16da 1846     		mov	r0, r3
 9141 16dc 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9142 16e0 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9143 16e4 CB1A     		subs	r3, r1, r3
 9144 16e6 0344     		add	r3, r3, r0
 9145 16e8 013B     		subs	r3, r3, #1
 9146 16ea 1344     		add	r3, r3, r2
 9147 16ec 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9148 16f0 07F5AE61 		add	r1, r7, #1392
 9149 16f4 0A44     		add	r2, r2, r1
 9150 16f6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9151 16f8 1A70     		strb	r2, [r3]
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9152              		.loc 1 1223 0 discriminator 3
 9153 16fa 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9154 16fe 0133     		adds	r3, r3, #1
 9155 1700 87F88635 		strb	r3, [r7, #1414]
 9156              	.L351:
1223:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 9157              		.loc 1 1223 0 is_stmt 0 discriminator 1
 9158 1704 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9159 1708 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9160 170c 9A42     		cmp	r2, r3
 9161 170e D8D3     		bcc	.L352
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9162              		.loc 1 1221 0 is_stmt 1 discriminator 2
 9163 1710 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9164 1714 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 213


 9165 1716 87F88735 		strb	r3, [r7, #1415]
 9166              	.L350:
1221:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 9167              		.loc 1 1221 0 is_stmt 0 discriminator 1
 9168 171a 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9169 171e 07F55D72 		add	r2, r7, #884
 9170 1722 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9171 1724 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9172 1728 9A42     		cmp	r2, r3
 9173 172a BAD3     		bcc	.L353
1227:..\src/command_processing.c ****                 case TYPE_UINT32:
 9174              		.loc 1 1227 0 is_stmt 1
 9175 172c 9DE0     		b	.L362
 9176              	.L332:
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9177              		.loc 1 1229 0
 9178 172e 0023     		movs	r3, #0
 9179 1730 87F88735 		strb	r3, [r7, #1415]
 9180 1734 3BE0     		b	.L354
 9181              	.L357:
1230:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9182              		.loc 1 1230 0
 9183 1736 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9184 173a 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9185 173e 02FB03F3 		mul	r3, r2, r3
 9186 1742 0333     		adds	r3, r3, #3
 9187 1744 474A     		ldr	r2, .L377
 9188 1746 1344     		add	r3, r3, r2
 9189 1748 1B68     		ldr	r3, [r3]
 9190 174a C7F86C35 		str	r3, [r7, #1388]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9191              		.loc 1 1231 0
 9192 174e 0023     		movs	r3, #0
 9193 1750 87F88635 		strb	r3, [r7, #1414]
 9194 1754 20E0     		b	.L355
 9195              	.L356:
1232:..\src/command_processing.c ****                         }
 9196              		.loc 1 1232 0 discriminator 3
 9197 1756 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9198 175a 07F21C43 		addw	r3, r7, #1052
 9199 175e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9200 1762 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9201 1766 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9202 176a 01FB03F3 		mul	r3, r1, r3
 9203 176e 1846     		mov	r0, r3
 9204 1770 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9205 1774 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9206 1778 CB1A     		subs	r3, r1, r3
 9207 177a 0344     		add	r3, r3, r0
 9208 177c 013B     		subs	r3, r3, #1
 9209 177e 1344     		add	r3, r3, r2
 9210 1780 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9211 1784 07F26C51 		addw	r1, r7, #1388
 9212 1788 0A44     		add	r2, r2, r1
 9213 178a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9214 178c 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 214


 9215              		.loc 1 1231 0 discriminator 3
 9216 178e 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9217 1792 0133     		adds	r3, r3, #1
 9218 1794 87F88635 		strb	r3, [r7, #1414]
 9219              	.L355:
1231:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 9220              		.loc 1 1231 0 is_stmt 0 discriminator 1
 9221 1798 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9222 179c 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9223 17a0 9A42     		cmp	r2, r3
 9224 17a2 D8D3     		bcc	.L356
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9225              		.loc 1 1229 0 is_stmt 1 discriminator 2
 9226 17a4 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9227 17a8 0133     		adds	r3, r3, #1
 9228 17aa 87F88735 		strb	r3, [r7, #1415]
 9229              	.L354:
1229:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 9230              		.loc 1 1229 0 is_stmt 0 discriminator 1
 9231 17ae 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9232 17b2 07F55D72 		add	r2, r7, #884
 9233 17b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9234 17b8 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9235 17bc 9A42     		cmp	r2, r3
 9236 17be BAD3     		bcc	.L357
1235:..\src/command_processing.c ****                 case TYPE_FLOAT:
 9237              		.loc 1 1235 0 is_stmt 1
 9238 17c0 53E0     		b	.L362
 9239              	.L333:
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9240              		.loc 1 1237 0
 9241 17c2 0023     		movs	r3, #0
 9242 17c4 87F88735 		strb	r3, [r7, #1415]
 9243 17c8 3BE0     		b	.L358
 9244              	.L361:
1238:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 9245              		.loc 1 1238 0
 9246 17ca 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9247 17ce 97F88525 		ldrb	r2, [r7, #1413]	@ zero_extendqisi2
 9248 17d2 02FB03F3 		mul	r3, r2, r3
 9249 17d6 0333     		adds	r3, r3, #3
 9250 17d8 224A     		ldr	r2, .L377
 9251 17da 1344     		add	r3, r3, r2
 9252 17dc 1B68     		ldr	r3, [r3]	@ float
 9253 17de C7F86835 		str	r3, [r7, #1384]	@ float
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9254              		.loc 1 1239 0
 9255 17e2 0023     		movs	r3, #0
 9256 17e4 87F88635 		strb	r3, [r7, #1414]
 9257 17e8 20E0     		b	.L359
 9258              	.L360:
1240:..\src/command_processing.c ****                         }
 9259              		.loc 1 1240 0 discriminator 3
 9260 17ea 97F87A25 		ldrb	r2, [r7, #1402]	@ zero_extendqisi2
 9261 17ee 07F21C43 		addw	r3, r7, #1052
 9262 17f2 53F82220 		ldr	r2, [r3, r2, lsl #2]
 9263 17f6 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 215


 9264 17fa 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9265 17fe 01FB03F3 		mul	r3, r1, r3
 9266 1802 1846     		mov	r0, r3
 9267 1804 97F88515 		ldrb	r1, [r7, #1413]	@ zero_extendqisi2
 9268 1808 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9269 180c CB1A     		subs	r3, r1, r3
 9270 180e 0344     		add	r3, r3, r0
 9271 1810 013B     		subs	r3, r3, #1
 9272 1812 1344     		add	r3, r3, r2
 9273 1814 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9274 1818 07F5AD61 		add	r1, r7, #1384
 9275 181c 0A44     		add	r2, r2, r1
 9276 181e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9277 1820 1A70     		strb	r2, [r3]
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9278              		.loc 1 1239 0 discriminator 3
 9279 1822 97F88635 		ldrb	r3, [r7, #1414]	@ zero_extendqisi2
 9280 1826 0133     		adds	r3, r3, #1
 9281 1828 87F88635 		strb	r3, [r7, #1414]
 9282              	.L359:
1239:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 9283              		.loc 1 1239 0 is_stmt 0 discriminator 1
 9284 182c 97F88625 		ldrb	r2, [r7, #1414]	@ zero_extendqisi2
 9285 1830 97F88535 		ldrb	r3, [r7, #1413]	@ zero_extendqisi2
 9286 1834 9A42     		cmp	r2, r3
 9287 1836 D8D3     		bcc	.L360
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9288              		.loc 1 1237 0 is_stmt 1 discriminator 2
 9289 1838 97F88735 		ldrb	r3, [r7, #1415]	@ zero_extendqisi2
 9290 183c 0133     		adds	r3, r3, #1
 9291 183e 87F88735 		strb	r3, [r7, #1415]
 9292              	.L358:
1237:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 9293              		.loc 1 1237 0 is_stmt 0 discriminator 1
 9294 1842 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9295 1846 07F55D72 		add	r2, r7, #884
 9296 184a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9297 184c 97F88725 		ldrb	r2, [r7, #1415]	@ zero_extendqisi2
 9298 1850 9A42     		cmp	r2, r3
 9299 1852 BAD3     		bcc	.L361
1243:..\src/command_processing.c ****                 default:
 9300              		.loc 1 1243 0 is_stmt 1
 9301 1854 09E0     		b	.L362
 9302              	.L324:
1250:..\src/command_processing.c ****         }
 9303              		.loc 1 1250 0
 9304 1856 BB1D     		adds	r3, r7, #6
 9305 1858 1B88     		ldrh	r3, [r3]
 9306 185a 1846     		mov	r0, r3
 9307 185c FFF7FEFF 		bl	set_custom_param
 9308 1860 03E0     		b	.L362
 9309              	.L378:
 9310 1862 00BF     		.align	2
 9311              	.L377:
 9312 1864 00000000 		.word	g_rx
 9313              	.L367:
1245:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 216


 9314              		.loc 1 1245 0
 9315 1868 00BF     		nop
 9316              	.L362:
1254:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 9317              		.loc 1 1254 0
 9318 186a 97F87B35 		ldrb	r3, [r7, #1403]	@ zero_extendqisi2
 9319 186e 9BB2     		uxth	r3, r3
 9320 1870 BA1D     		adds	r2, r7, #6
 9321 1872 1288     		ldrh	r2, [r2]
 9322 1874 9A42     		cmp	r2, r3
 9323 1876 11D0     		beq	.L363
1255:..\src/command_processing.c ****         }
 9324              		.loc 1 1255 0
 9325 1878 D7F88035 		ldr	r3, [r7, #1408]
 9326 187c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 9327 1880 5B01     		lsls	r3, r3, #5
 9328 1882 03F51273 		add	r3, r3, #584
 9329 1886 D7F88025 		ldr	r2, [r7, #1408]
 9330 188a D018     		adds	r0, r2, r3
 9331 188c D7F88035 		ldr	r3, [r7, #1408]
 9332 1890 03F5F873 		add	r3, r3, #496
 9333 1894 1022     		movs	r2, #16
 9334 1896 1946     		mov	r1, r3
 9335 1898 FFF7FEFF 		bl	memcpy
 9336              	.L363:
1259:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 9337              		.loc 1 1259 0
 9338 189c 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9339 18a0 07F57272 		add	r2, r7, #968
 9340 18a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9341 18a6 002B     		cmp	r3, #0
 9342 18a8 42D1     		bne	.L368
 9343              	.LBB18:
1260:..\src/command_processing.c ****             do {
 9344              		.loc 1 1260 0
 9345 18aa 0023     		movs	r3, #0
 9346 18ac 87F87F35 		strb	r3, [r7, #1407]
 9347 18b0 FF23     		movs	r3, #255
 9348 18b2 87F87E35 		strb	r3, [r7, #1406]
 9349              	.L365:
1262:..\src/command_processing.c ****                 idx++;
 9350              		.loc 1 1262 0
 9351 18b6 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9352 18ba 07F57272 		add	r2, r7, #968
 9353 18be D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9354 18c0 002B     		cmp	r3, #0
 9355 18c2 04D1     		bne	.L364
1262:..\src/command_processing.c ****                 idx++;
 9356              		.loc 1 1262 0 is_stmt 0 discriminator 1
 9357 18c4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9358 18c8 0133     		adds	r3, r3, #1
 9359 18ca 87F87E35 		strb	r3, [r7, #1406]
 9360              	.L364:
1263:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 9361              		.loc 1 1263 0 is_stmt 1
 9362 18ce 97F87F35 		ldrb	r3, [r7, #1407]	@ zero_extendqisi2
 9363 18d2 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 217


 9364 18d4 87F87F35 		strb	r3, [r7, #1407]
1264:..\src/command_processing.c ****             
 9365              		.loc 1 1264 0
 9366 18d8 97F87F25 		ldrb	r2, [r7, #1407]	@ zero_extendqisi2
 9367 18dc 97F87A35 		ldrb	r3, [r7, #1402]	@ zero_extendqisi2
 9368 18e0 9A42     		cmp	r2, r3
 9369 18e2 E8D9     		bls	.L365
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9370              		.loc 1 1266 0
 9371 18e4 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9372 18e8 07F1D402 		add	r2, r7, #212
 9373 18ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9374 18ee 052B     		cmp	r3, #5
 9375 18f0 1BD0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9376              		.loc 1 1266 0 is_stmt 0 discriminator 1
 9377 18f2 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9378 18f6 07F1D402 		add	r2, r7, #212
 9379 18fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9380 18fc 062B     		cmp	r3, #6
 9381 18fe 14D0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9382              		.loc 1 1266 0 discriminator 2
 9383 1900 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9384 1904 07F1D402 		add	r2, r7, #212
 9385 1908 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9386 190a 082B     		cmp	r3, #8
 9387 190c 0DD0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9388              		.loc 1 1266 0 discriminator 3
 9389 190e 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9390 1912 07F1D402 		add	r2, r7, #212
 9391 1916 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9392 1918 092B     		cmp	r3, #9
 9393 191a 06D0     		beq	.L366
1266:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 9394              		.loc 1 1266 0 discriminator 4
 9395 191c 97F87E35 		ldrb	r3, [r7, #1406]	@ zero_extendqisi2
 9396 1920 07F1D402 		add	r2, r7, #212
 9397 1924 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9398 1926 0A2B     		cmp	r3, #10
 9399 1928 02D1     		bne	.L368
 9400              	.L366:
1267:..\src/command_processing.c ****             }   
 9401              		.loc 1 1267 0 is_stmt 1
 9402 192a 044B     		ldr	r3, .L379
 9403 192c 0122     		movs	r2, #1
 9404 192e 1A70     		strb	r2, [r3]
 9405              	.L368:
 9406              	.LBE18:
 9407              		.loc 1 1271 0
 9408 1930 00BF     		nop
 9409 1932 07F5B167 		add	r7, r7, #1416
 9410              		.cfi_def_cfa_offset 16
 9411 1936 BD46     		mov	sp, r7
 9412              		.cfi_def_cfa_register 13
 9413              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 218


 9414 1938 B0BD     		pop	{r4, r5, r7, pc}
 9415              	.L380:
 9416 193a 00BF     		.align	2
 9417              	.L379:
 9418 193c 00000000 		.word	reset_PSoC_flag
 9419              		.cfi_endproc
 9420              	.LFE68:
 9421              		.size	manage_param_list, .-manage_param_list
 9422              		.global	__aeabi_fmul
 9423              		.global	__aeabi_f2iz
 9424              		.section	.text.set_custom_param,"ax",%progbits
 9425              		.align	2
 9426              		.global	set_custom_param
 9427              		.thumb
 9428              		.thumb_func
 9429              		.type	set_custom_param, %function
 9430              	set_custom_param:
 9431              	.LFB69:
1272:..\src/command_processing.c **** 
1273:..\src/command_processing.c **** //==============================================================================
1274:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1275:..\src/command_processing.c **** //==============================================================================
1276:..\src/command_processing.c **** 
1277:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 9432              		.loc 1 1277 0
 9433              		.cfi_startproc
 9434              		@ args = 0, pretend = 0, frame = 24
 9435              		@ frame_needed = 1, uses_anonymous_args = 0
 9436 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9437              		.cfi_def_cfa_offset 20
 9438              		.cfi_offset 4, -20
 9439              		.cfi_offset 5, -16
 9440              		.cfi_offset 6, -12
 9441              		.cfi_offset 7, -8
 9442              		.cfi_offset 14, -4
 9443 0002 87B0     		sub	sp, sp, #28
 9444              		.cfi_def_cfa_offset 48
 9445 0004 00AF     		add	r7, sp, #0
 9446              		.cfi_def_cfa_register 7
 9447 0006 0346     		mov	r3, r0
 9448 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1278:..\src/command_processing.c **** 
1279:..\src/command_processing.c ****     uint8 CYDATA i, j;
1280:..\src/command_processing.c ****     uint8 aux_uchar;
1281:..\src/command_processing.c ****     float aux_float, aux_float2;
1282:..\src/command_processing.c **** 
1283:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 9449              		.loc 1 1283 0
 9450 000a 0023     		movs	r3, #0
 9451 000c 3B75     		strb	r3, [r7, #20]
1284:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 9452              		.loc 1 1284 0
 9453 000e 0123     		movs	r3, #1
 9454 0010 FB74     		strb	r3, [r7, #19]
1285:..\src/command_processing.c ****     
1286:..\src/command_processing.c ****     switch(index){
 9455              		.loc 1 1286 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 219


 9456 0012 FB88     		ldrh	r3, [r7, #6]
 9457 0014 023B     		subs	r3, r3, #2
 9458 0016 492B     		cmp	r3, #73
 9459 0018 01F22682 		bhi	.L474
 9460 001c 01A2     		adr	r2, .L384
 9461 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 9462 0022 00BF     		.p2align 2
 9463              	.L384:
 9464 0024 4D010000 		.word	.L383+1
 9465 0028 7F030000 		.word	.L385+1
 9466 002c 69140000 		.word	.L474+1
 9467 0030 C5050000 		.word	.L386+1
 9468 0034 69140000 		.word	.L474+1
 9469 0038 69140000 		.word	.L474+1
 9470 003c 0F060000 		.word	.L387+1
 9471 0040 69140000 		.word	.L474+1
 9472 0044 69140000 		.word	.L474+1
 9473 0048 45070000 		.word	.L388+1
 9474 004c 69140000 		.word	.L474+1
 9475 0050 69140000 		.word	.L474+1
 9476 0054 69140000 		.word	.L474+1
 9477 0058 69140000 		.word	.L474+1
 9478 005c 69140000 		.word	.L474+1
 9479 0060 69140000 		.word	.L474+1
 9480 0064 69140000 		.word	.L474+1
 9481 0068 69140000 		.word	.L474+1
 9482 006c 69140000 		.word	.L474+1
 9483 0070 69140000 		.word	.L474+1
 9484 0074 69140000 		.word	.L474+1
 9485 0078 45080000 		.word	.L389+1
 9486 007c A3080000 		.word	.L390+1
 9487 0080 69140000 		.word	.L474+1
 9488 0084 69140000 		.word	.L474+1
 9489 0088 69140000 		.word	.L474+1
 9490 008c DD080000 		.word	.L391+1
 9491 0090 69140000 		.word	.L474+1
 9492 0094 69140000 		.word	.L474+1
 9493 0098 590A0000 		.word	.L392+1
 9494 009c 050B0000 		.word	.L393+1
 9495 00a0 69140000 		.word	.L474+1
 9496 00a4 69140000 		.word	.L474+1
 9497 00a8 69140000 		.word	.L474+1
 9498 00ac 69140000 		.word	.L474+1
 9499 00b0 69140000 		.word	.L474+1
 9500 00b4 3F0B0000 		.word	.L394+1
 9501 00b8 69140000 		.word	.L474+1
 9502 00bc 69140000 		.word	.L474+1
 9503 00c0 69140000 		.word	.L474+1
 9504 00c4 69140000 		.word	.L474+1
 9505 00c8 69140000 		.word	.L474+1
 9506 00cc 790B0000 		.word	.L395+1
 9507 00d0 BF0D0000 		.word	.L396+1
 9508 00d4 69140000 		.word	.L474+1
 9509 00d8 ED0F0000 		.word	.L397+1
 9510 00dc 69140000 		.word	.L474+1
 9511 00e0 69140000 		.word	.L474+1
 9512 00e4 55100000 		.word	.L398+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 220


 9513 00e8 69140000 		.word	.L474+1
 9514 00ec 69140000 		.word	.L474+1
 9515 00f0 69110000 		.word	.L399+1
 9516 00f4 69140000 		.word	.L474+1
 9517 00f8 69140000 		.word	.L474+1
 9518 00fc 69140000 		.word	.L474+1
 9519 0100 69140000 		.word	.L474+1
 9520 0104 69140000 		.word	.L474+1
 9521 0108 69140000 		.word	.L474+1
 9522 010c 69140000 		.word	.L474+1
 9523 0110 67120000 		.word	.L400+1
 9524 0114 69140000 		.word	.L474+1
 9525 0118 69140000 		.word	.L474+1
 9526 011c 69140000 		.word	.L474+1
 9527 0120 69140000 		.word	.L474+1
 9528 0124 69140000 		.word	.L474+1
 9529 0128 69140000 		.word	.L474+1
 9530 012c 69140000 		.word	.L474+1
 9531 0130 69140000 		.word	.L474+1
 9532 0134 69140000 		.word	.L474+1
 9533 0138 69140000 		.word	.L474+1
 9534 013c 69140000 		.word	.L474+1
 9535 0140 69140000 		.word	.L474+1
 9536 0144 69140000 		.word	.L474+1
 9537 0148 B1120000 		.word	.L401+1
 9538              		.p2align 1
 9539              	.L383:
1287:..\src/command_processing.c ****         case 2:         // Position PID
1288:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9540              		.loc 1 1288 0
 9541 014c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9542 014e AB49     		ldr	r1, .L480
 9543 0150 1346     		mov	r3, r2
 9544 0152 DB00     		lsls	r3, r3, #3
 9545 0154 9B1A     		subs	r3, r3, r2
 9546 0156 1B01     		lsls	r3, r3, #4
 9547 0158 0B44     		add	r3, r3, r1
 9548 015a 03F20F13 		addw	r3, r3, #271
 9549 015e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9550 0160 032B     		cmp	r3, #3
 9551 0162 00F08680 		beq	.L402
1289:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9552              		.loc 1 1289 0
 9553 0166 A64B     		ldr	r3, .L480+4
 9554 0168 1B68     		ldr	r3, [r3]	@ float
 9555 016a FB60     		str	r3, [r7, #12]	@ float
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9556              		.loc 1 1290 0
 9557 016c 0023     		movs	r3, #0
 9558 016e BB75     		strb	r3, [r7, #22]
 9559 0170 0EE0     		b	.L403
 9560              	.L404:
1291:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9561              		.loc 1 1291 0 discriminator 3
 9562 0172 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9563 0174 C3F10303 		rsb	r3, r3, #3
 9564 0178 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 221


 9565 017c 1344     		add	r3, r3, r2
 9566 017e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9567 0180 07F10C01 		add	r1, r7, #12
 9568 0184 0A44     		add	r2, r2, r1
 9569 0186 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9570 0188 1A70     		strb	r2, [r3]
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9571              		.loc 1 1290 0 discriminator 3
 9572 018a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9573 018c 0133     		adds	r3, r3, #1
 9574 018e BB75     		strb	r3, [r7, #22]
 9575              	.L403:
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9576              		.loc 1 1290 0 is_stmt 0 discriminator 1
 9577 0190 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9578 0192 032B     		cmp	r3, #3
 9579 0194 EDD9     		bls	.L404
1292:..\src/command_processing.c ****                 }
1293:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 9580              		.loc 1 1293 0 is_stmt 1
 9581 0196 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9582 0198 BB68     		ldr	r3, [r7, #8]	@ float
 9583 019a 4FF08F41 		mov	r1, #1199570944
 9584 019e 1846     		mov	r0, r3
 9585 01a0 FFF7FEFF 		bl	__aeabi_fmul
 9586 01a4 0346     		mov	r3, r0
 9587 01a6 1846     		mov	r0, r3
 9588 01a8 FFF7FEFF 		bl	__aeabi_f2iz
 9589 01ac 0146     		mov	r1, r0
 9590 01ae 954A     		ldr	r2, .L480+8
 9591 01b0 2346     		mov	r3, r4
 9592 01b2 DB00     		lsls	r3, r3, #3
 9593 01b4 1B1B     		subs	r3, r3, r4
 9594 01b6 1B01     		lsls	r3, r3, #4
 9595 01b8 1344     		add	r3, r3, r2
 9596 01ba B033     		adds	r3, r3, #176
 9597 01bc 1960     		str	r1, [r3]
1294:..\src/command_processing.c ****                 
1295:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9598              		.loc 1 1295 0
 9599 01be 924B     		ldr	r3, .L480+12
 9600 01c0 1B68     		ldr	r3, [r3]	@ float
 9601 01c2 FB60     		str	r3, [r7, #12]	@ float
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9602              		.loc 1 1296 0
 9603 01c4 0023     		movs	r3, #0
 9604 01c6 BB75     		strb	r3, [r7, #22]
 9605 01c8 0EE0     		b	.L405
 9606              	.L406:
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9607              		.loc 1 1297 0 discriminator 3
 9608 01ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9609 01cc C3F10303 		rsb	r3, r3, #3
 9610 01d0 07F10802 		add	r2, r7, #8
 9611 01d4 1344     		add	r3, r3, r2
 9612 01d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9613 01d8 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 222


 9614 01dc 0A44     		add	r2, r2, r1
 9615 01de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9616 01e0 1A70     		strb	r2, [r3]
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9617              		.loc 1 1296 0 discriminator 3
 9618 01e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9619 01e4 0133     		adds	r3, r3, #1
 9620 01e6 BB75     		strb	r3, [r7, #22]
 9621              	.L405:
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9622              		.loc 1 1296 0 is_stmt 0 discriminator 1
 9623 01e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9624 01ea 032B     		cmp	r3, #3
 9625 01ec EDD9     		bls	.L406
1298:..\src/command_processing.c ****                 }
1299:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 9626              		.loc 1 1299 0 is_stmt 1
 9627 01ee 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9628 01f0 BB68     		ldr	r3, [r7, #8]	@ float
 9629 01f2 4FF08F41 		mov	r1, #1199570944
 9630 01f6 1846     		mov	r0, r3
 9631 01f8 FFF7FEFF 		bl	__aeabi_fmul
 9632 01fc 0346     		mov	r3, r0
 9633 01fe 1846     		mov	r0, r3
 9634 0200 FFF7FEFF 		bl	__aeabi_f2iz
 9635 0204 0146     		mov	r1, r0
 9636 0206 7F4A     		ldr	r2, .L480+8
 9637 0208 2346     		mov	r3, r4
 9638 020a DB00     		lsls	r3, r3, #3
 9639 020c 1B1B     		subs	r3, r3, r4
 9640 020e 1B01     		lsls	r3, r3, #4
 9641 0210 1344     		add	r3, r3, r2
 9642 0212 B433     		adds	r3, r3, #180
 9643 0214 1960     		str	r1, [r3]
1300:..\src/command_processing.c ****                 
1301:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9644              		.loc 1 1301 0
 9645 0216 7D4B     		ldr	r3, .L480+16
 9646 0218 1B68     		ldr	r3, [r3]	@ float
 9647 021a FB60     		str	r3, [r7, #12]	@ float
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9648              		.loc 1 1302 0
 9649 021c 0023     		movs	r3, #0
 9650 021e BB75     		strb	r3, [r7, #22]
 9651 0220 0EE0     		b	.L407
 9652              	.L408:
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9653              		.loc 1 1303 0 discriminator 3
 9654 0222 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9655 0224 C3F10303 		rsb	r3, r3, #3
 9656 0228 07F10802 		add	r2, r7, #8
 9657 022c 1344     		add	r3, r3, r2
 9658 022e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9659 0230 07F10C01 		add	r1, r7, #12
 9660 0234 0A44     		add	r2, r2, r1
 9661 0236 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9662 0238 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 223


1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9663              		.loc 1 1302 0 discriminator 3
 9664 023a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9665 023c 0133     		adds	r3, r3, #1
 9666 023e BB75     		strb	r3, [r7, #22]
 9667              	.L407:
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9668              		.loc 1 1302 0 is_stmt 0 discriminator 1
 9669 0240 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9670 0242 032B     		cmp	r3, #3
 9671 0244 EDD9     		bls	.L408
1304:..\src/command_processing.c ****                 }
1305:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 9672              		.loc 1 1305 0 is_stmt 1
 9673 0246 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9674 0248 BB68     		ldr	r3, [r7, #8]	@ float
 9675 024a 4FF08F41 		mov	r1, #1199570944
 9676 024e 1846     		mov	r0, r3
 9677 0250 FFF7FEFF 		bl	__aeabi_fmul
 9678 0254 0346     		mov	r3, r0
 9679 0256 1846     		mov	r0, r3
 9680 0258 FFF7FEFF 		bl	__aeabi_f2iz
 9681 025c 0146     		mov	r1, r0
 9682 025e 694A     		ldr	r2, .L480+8
 9683 0260 2346     		mov	r3, r4
 9684 0262 DB00     		lsls	r3, r3, #3
 9685 0264 1B1B     		subs	r3, r3, r4
 9686 0266 1B01     		lsls	r3, r3, #4
 9687 0268 1344     		add	r3, r3, r2
 9688 026a B833     		adds	r3, r3, #184
 9689 026c 1960     		str	r1, [r3]
1306:..\src/command_processing.c ****             }
1307:..\src/command_processing.c ****             else {
1308:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1310:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1311:..\src/command_processing.c ****                 }
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1313:..\src/command_processing.c ****                 
1314:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1315:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1316:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1317:..\src/command_processing.c ****                 }
1318:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1319:..\src/command_processing.c ****                 
1320:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1321:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1322:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1323:..\src/command_processing.c ****                 }
1324:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1325:..\src/command_processing.c ****             }
1326:..\src/command_processing.c ****             break;
 9690              		.loc 1 1326 0
 9691 026e 01F006B9 		b	.L416
 9692              	.L402:
1308:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9693              		.loc 1 1308 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 224


 9694 0272 634B     		ldr	r3, .L480+4
 9695 0274 1B68     		ldr	r3, [r3]	@ float
 9696 0276 FB60     		str	r3, [r7, #12]	@ float
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9697              		.loc 1 1309 0
 9698 0278 0023     		movs	r3, #0
 9699 027a BB75     		strb	r3, [r7, #22]
 9700 027c 0EE0     		b	.L410
 9701              	.L411:
1310:..\src/command_processing.c ****                 }
 9702              		.loc 1 1310 0 discriminator 3
 9703 027e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9704 0280 C3F10303 		rsb	r3, r3, #3
 9705 0284 07F10802 		add	r2, r7, #8
 9706 0288 1344     		add	r3, r3, r2
 9707 028a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9708 028c 07F10C01 		add	r1, r7, #12
 9709 0290 0A44     		add	r2, r2, r1
 9710 0292 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9711 0294 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9712              		.loc 1 1309 0 discriminator 3
 9713 0296 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9714 0298 0133     		adds	r3, r3, #1
 9715 029a BB75     		strb	r3, [r7, #22]
 9716              	.L410:
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9717              		.loc 1 1309 0 is_stmt 0 discriminator 1
 9718 029c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9719 029e 032B     		cmp	r3, #3
 9720 02a0 EDD9     		bls	.L411
1312:..\src/command_processing.c ****                 
 9721              		.loc 1 1312 0 is_stmt 1
 9722 02a2 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9723 02a4 BB68     		ldr	r3, [r7, #8]	@ float
 9724 02a6 4FF08F41 		mov	r1, #1199570944
 9725 02aa 1846     		mov	r0, r3
 9726 02ac FFF7FEFF 		bl	__aeabi_fmul
 9727 02b0 0346     		mov	r3, r0
 9728 02b2 1846     		mov	r0, r3
 9729 02b4 FFF7FEFF 		bl	__aeabi_f2iz
 9730 02b8 0146     		mov	r1, r0
 9731 02ba 524A     		ldr	r2, .L480+8
 9732 02bc 2346     		mov	r3, r4
 9733 02be DB00     		lsls	r3, r3, #3
 9734 02c0 1B1B     		subs	r3, r3, r4
 9735 02c2 1B01     		lsls	r3, r3, #4
 9736 02c4 1344     		add	r3, r3, r2
 9737 02c6 C833     		adds	r3, r3, #200
 9738 02c8 1960     		str	r1, [r3]
1314:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9739              		.loc 1 1314 0
 9740 02ca 4F4B     		ldr	r3, .L480+12
 9741 02cc 1B68     		ldr	r3, [r3]	@ float
 9742 02ce FB60     		str	r3, [r7, #12]	@ float
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9743              		.loc 1 1315 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 225


 9744 02d0 0023     		movs	r3, #0
 9745 02d2 BB75     		strb	r3, [r7, #22]
 9746 02d4 0EE0     		b	.L412
 9747              	.L413:
1316:..\src/command_processing.c ****                 }
 9748              		.loc 1 1316 0 discriminator 3
 9749 02d6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9750 02d8 C3F10303 		rsb	r3, r3, #3
 9751 02dc 07F10802 		add	r2, r7, #8
 9752 02e0 1344     		add	r3, r3, r2
 9753 02e2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9754 02e4 07F10C01 		add	r1, r7, #12
 9755 02e8 0A44     		add	r2, r2, r1
 9756 02ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9757 02ec 1A70     		strb	r2, [r3]
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9758              		.loc 1 1315 0 discriminator 3
 9759 02ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9760 02f0 0133     		adds	r3, r3, #1
 9761 02f2 BB75     		strb	r3, [r7, #22]
 9762              	.L412:
1315:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9763              		.loc 1 1315 0 is_stmt 0 discriminator 1
 9764 02f4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9765 02f6 032B     		cmp	r3, #3
 9766 02f8 EDD9     		bls	.L413
1318:..\src/command_processing.c ****                 
 9767              		.loc 1 1318 0 is_stmt 1
 9768 02fa 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9769 02fc BB68     		ldr	r3, [r7, #8]	@ float
 9770 02fe 4FF08F41 		mov	r1, #1199570944
 9771 0302 1846     		mov	r0, r3
 9772 0304 FFF7FEFF 		bl	__aeabi_fmul
 9773 0308 0346     		mov	r3, r0
 9774 030a 1846     		mov	r0, r3
 9775 030c FFF7FEFF 		bl	__aeabi_f2iz
 9776 0310 0146     		mov	r1, r0
 9777 0312 3C4A     		ldr	r2, .L480+8
 9778 0314 2346     		mov	r3, r4
 9779 0316 DB00     		lsls	r3, r3, #3
 9780 0318 1B1B     		subs	r3, r3, r4
 9781 031a 1B01     		lsls	r3, r3, #4
 9782 031c 1344     		add	r3, r3, r2
 9783 031e CC33     		adds	r3, r3, #204
 9784 0320 1960     		str	r1, [r3]
1320:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9785              		.loc 1 1320 0
 9786 0322 3A4B     		ldr	r3, .L480+16
 9787 0324 1B68     		ldr	r3, [r3]	@ float
 9788 0326 FB60     		str	r3, [r7, #12]	@ float
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9789              		.loc 1 1321 0
 9790 0328 0023     		movs	r3, #0
 9791 032a BB75     		strb	r3, [r7, #22]
 9792 032c 0EE0     		b	.L414
 9793              	.L415:
1322:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 226


 9794              		.loc 1 1322 0 discriminator 3
 9795 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9796 0330 C3F10303 		rsb	r3, r3, #3
 9797 0334 07F10802 		add	r2, r7, #8
 9798 0338 1344     		add	r3, r3, r2
 9799 033a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9800 033c 07F10C01 		add	r1, r7, #12
 9801 0340 0A44     		add	r2, r2, r1
 9802 0342 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9803 0344 1A70     		strb	r2, [r3]
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9804              		.loc 1 1321 0 discriminator 3
 9805 0346 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9806 0348 0133     		adds	r3, r3, #1
 9807 034a BB75     		strb	r3, [r7, #22]
 9808              	.L414:
1321:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9809              		.loc 1 1321 0 is_stmt 0 discriminator 1
 9810 034c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9811 034e 032B     		cmp	r3, #3
 9812 0350 EDD9     		bls	.L415
1324:..\src/command_processing.c ****             }
 9813              		.loc 1 1324 0 is_stmt 1
 9814 0352 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9815 0354 BB68     		ldr	r3, [r7, #8]	@ float
 9816 0356 4FF08F41 		mov	r1, #1199570944
 9817 035a 1846     		mov	r0, r3
 9818 035c FFF7FEFF 		bl	__aeabi_fmul
 9819 0360 0346     		mov	r3, r0
 9820 0362 1846     		mov	r0, r3
 9821 0364 FFF7FEFF 		bl	__aeabi_f2iz
 9822 0368 0146     		mov	r1, r0
 9823 036a 264A     		ldr	r2, .L480+8
 9824 036c 2346     		mov	r3, r4
 9825 036e DB00     		lsls	r3, r3, #3
 9826 0370 1B1B     		subs	r3, r3, r4
 9827 0372 1B01     		lsls	r3, r3, #4
 9828 0374 1344     		add	r3, r3, r2
 9829 0376 D033     		adds	r3, r3, #208
 9830 0378 1960     		str	r1, [r3]
 9831              		.loc 1 1326 0
 9832 037a 01F080B8 		b	.L416
 9833              	.L385:
1327:..\src/command_processing.c ****             
1328:..\src/command_processing.c ****         case 3:         //Current PID
1329:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9834              		.loc 1 1329 0
 9835 037e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9836 0380 1E49     		ldr	r1, .L480
 9837 0382 1346     		mov	r3, r2
 9838 0384 DB00     		lsls	r3, r3, #3
 9839 0386 9B1A     		subs	r3, r3, r2
 9840 0388 1B01     		lsls	r3, r3, #4
 9841 038a 0B44     		add	r3, r3, r1
 9842 038c 03F20F13 		addw	r3, r3, #271
 9843 0390 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9844 0392 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 227


 9845 0394 00F09080 		beq	.L417
1330:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9846              		.loc 1 1330 0
 9847 0398 194B     		ldr	r3, .L480+4
 9848 039a 1B68     		ldr	r3, [r3]	@ float
 9849 039c FB60     		str	r3, [r7, #12]	@ float
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9850              		.loc 1 1331 0
 9851 039e 0023     		movs	r3, #0
 9852 03a0 BB75     		strb	r3, [r7, #22]
 9853 03a2 0EE0     		b	.L418
 9854              	.L419:
1332:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9855              		.loc 1 1332 0 discriminator 3
 9856 03a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9857 03a6 C3F10303 		rsb	r3, r3, #3
 9858 03aa 07F10802 		add	r2, r7, #8
 9859 03ae 1344     		add	r3, r3, r2
 9860 03b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9861 03b2 07F10C01 		add	r1, r7, #12
 9862 03b6 0A44     		add	r2, r2, r1
 9863 03b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9864 03ba 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9865              		.loc 1 1331 0 discriminator 3
 9866 03bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9867 03be 0133     		adds	r3, r3, #1
 9868 03c0 BB75     		strb	r3, [r7, #22]
 9869              	.L418:
1331:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9870              		.loc 1 1331 0 is_stmt 0 discriminator 1
 9871 03c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9872 03c4 032B     		cmp	r3, #3
 9873 03c6 EDD9     		bls	.L419
1333:..\src/command_processing.c ****                 }
1334:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9874              		.loc 1 1334 0 is_stmt 1
 9875 03c8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9876 03ca BB68     		ldr	r3, [r7, #8]	@ float
 9877 03cc 4FF08F41 		mov	r1, #1199570944
 9878 03d0 1846     		mov	r0, r3
 9879 03d2 FFF7FEFF 		bl	__aeabi_fmul
 9880 03d6 0346     		mov	r3, r0
 9881 03d8 1846     		mov	r0, r3
 9882 03da FFF7FEFF 		bl	__aeabi_f2iz
 9883 03de 0146     		mov	r1, r0
 9884 03e0 084A     		ldr	r2, .L480+8
 9885 03e2 2346     		mov	r3, r4
 9886 03e4 DB00     		lsls	r3, r3, #3
 9887 03e6 1B1B     		subs	r3, r3, r4
 9888 03e8 1B01     		lsls	r3, r3, #4
 9889 03ea 1344     		add	r3, r3, r2
 9890 03ec BC33     		adds	r3, r3, #188
 9891 03ee 1960     		str	r1, [r3]
1335:..\src/command_processing.c ****                 
1336:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9892              		.loc 1 1336 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 228


 9893 03f0 054B     		ldr	r3, .L480+12
 9894 03f2 1B68     		ldr	r3, [r3]	@ float
 9895 03f4 FB60     		str	r3, [r7, #12]	@ float
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9896              		.loc 1 1337 0
 9897 03f6 0023     		movs	r3, #0
 9898 03f8 BB75     		strb	r3, [r7, #22]
 9899 03fa 18E0     		b	.L420
 9900              	.L481:
 9901              		.align	2
 9902              	.L480:
 9903 03fc 00000000 		.word	c_mem
 9904 0400 03000000 		.word	g_rx+3
 9905 0404 00000000 		.word	g_mem
 9906 0408 07000000 		.word	g_rx+7
 9907 040c 0B000000 		.word	g_rx+11
 9908              	.L421:
1338:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9909              		.loc 1 1338 0 discriminator 3
 9910 0410 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9911 0412 C3F10303 		rsb	r3, r3, #3
 9912 0416 07F10802 		add	r2, r7, #8
 9913 041a 1344     		add	r3, r3, r2
 9914 041c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9915 041e 07F10C01 		add	r1, r7, #12
 9916 0422 0A44     		add	r2, r2, r1
 9917 0424 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9918 0426 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9919              		.loc 1 1337 0 discriminator 3
 9920 0428 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9921 042a 0133     		adds	r3, r3, #1
 9922 042c BB75     		strb	r3, [r7, #22]
 9923              	.L420:
1337:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9924              		.loc 1 1337 0 is_stmt 0 discriminator 1
 9925 042e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9926 0430 032B     		cmp	r3, #3
 9927 0432 EDD9     		bls	.L421
1339:..\src/command_processing.c ****                 }
1340:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9928              		.loc 1 1340 0 is_stmt 1
 9929 0434 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9930 0436 BB68     		ldr	r3, [r7, #8]	@ float
 9931 0438 4FF08F41 		mov	r1, #1199570944
 9932 043c 1846     		mov	r0, r3
 9933 043e FFF7FEFF 		bl	__aeabi_fmul
 9934 0442 0346     		mov	r3, r0
 9935 0444 1846     		mov	r0, r3
 9936 0446 FFF7FEFF 		bl	__aeabi_f2iz
 9937 044a 0146     		mov	r1, r0
 9938 044c B54A     		ldr	r2, .L482
 9939 044e 2346     		mov	r3, r4
 9940 0450 DB00     		lsls	r3, r3, #3
 9941 0452 1B1B     		subs	r3, r3, r4
 9942 0454 1B01     		lsls	r3, r3, #4
 9943 0456 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 229


 9944 0458 C033     		adds	r3, r3, #192
 9945 045a 1960     		str	r1, [r3]
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9946              		.loc 1 1342 0
 9947 045c B24B     		ldr	r3, .L482+4
 9948 045e 1B68     		ldr	r3, [r3]	@ float
 9949 0460 FB60     		str	r3, [r7, #12]	@ float
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9950              		.loc 1 1343 0
 9951 0462 0023     		movs	r3, #0
 9952 0464 BB75     		strb	r3, [r7, #22]
 9953 0466 0EE0     		b	.L422
 9954              	.L423:
1344:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9955              		.loc 1 1344 0 discriminator 3
 9956 0468 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9957 046a C3F10303 		rsb	r3, r3, #3
 9958 046e 07F10802 		add	r2, r7, #8
 9959 0472 1344     		add	r3, r3, r2
 9960 0474 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9961 0476 07F10C01 		add	r1, r7, #12
 9962 047a 0A44     		add	r2, r2, r1
 9963 047c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9964 047e 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9965              		.loc 1 1343 0 discriminator 3
 9966 0480 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9967 0482 0133     		adds	r3, r3, #1
 9968 0484 BB75     		strb	r3, [r7, #22]
 9969              	.L422:
1343:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9970              		.loc 1 1343 0 is_stmt 0 discriminator 1
 9971 0486 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9972 0488 032B     		cmp	r3, #3
 9973 048a EDD9     		bls	.L423
1345:..\src/command_processing.c ****                 }
1346:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9974              		.loc 1 1346 0 is_stmt 1
 9975 048c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 9976 048e BB68     		ldr	r3, [r7, #8]	@ float
 9977 0490 4FF08F41 		mov	r1, #1199570944
 9978 0494 1846     		mov	r0, r3
 9979 0496 FFF7FEFF 		bl	__aeabi_fmul
 9980 049a 0346     		mov	r3, r0
 9981 049c 1846     		mov	r0, r3
 9982 049e FFF7FEFF 		bl	__aeabi_f2iz
 9983 04a2 0146     		mov	r1, r0
 9984 04a4 9F4A     		ldr	r2, .L482
 9985 04a6 2346     		mov	r3, r4
 9986 04a8 DB00     		lsls	r3, r3, #3
 9987 04aa 1B1B     		subs	r3, r3, r4
 9988 04ac 1B01     		lsls	r3, r3, #4
 9989 04ae 1344     		add	r3, r3, r2
 9990 04b0 C433     		adds	r3, r3, #196
 9991 04b2 1960     		str	r1, [r3]
1347:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 230


1348:..\src/command_processing.c ****             else {
1349:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1350:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1351:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1352:..\src/command_processing.c ****                 }
1353:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1354:..\src/command_processing.c ****                 
1355:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1357:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1360:..\src/command_processing.c ****                 
1361:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1363:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1364:..\src/command_processing.c ****                 }
1365:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1366:..\src/command_processing.c ****             }            
1367:..\src/command_processing.c ****             break;  
 9992              		.loc 1 1367 0
 9993 04b4 00F0E3BF 		b	.L416
 9994              	.L417:
1349:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9995              		.loc 1 1349 0
 9996 04b8 9C4B     		ldr	r3, .L482+8
 9997 04ba 1B68     		ldr	r3, [r3]	@ float
 9998 04bc FB60     		str	r3, [r7, #12]	@ float
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9999              		.loc 1 1350 0
 10000 04be 0023     		movs	r3, #0
 10001 04c0 BB75     		strb	r3, [r7, #22]
 10002 04c2 0EE0     		b	.L425
 10003              	.L426:
1351:..\src/command_processing.c ****                 }
 10004              		.loc 1 1351 0 discriminator 3
 10005 04c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10006 04c6 C3F10303 		rsb	r3, r3, #3
 10007 04ca 07F10802 		add	r2, r7, #8
 10008 04ce 1344     		add	r3, r3, r2
 10009 04d0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10010 04d2 07F10C01 		add	r1, r7, #12
 10011 04d6 0A44     		add	r2, r2, r1
 10012 04d8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10013 04da 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10014              		.loc 1 1350 0 discriminator 3
 10015 04dc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10016 04de 0133     		adds	r3, r3, #1
 10017 04e0 BB75     		strb	r3, [r7, #22]
 10018              	.L425:
1350:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10019              		.loc 1 1350 0 is_stmt 0 discriminator 1
 10020 04e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10021 04e4 032B     		cmp	r3, #3
 10022 04e6 EDD9     		bls	.L426
1353:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 231


 10023              		.loc 1 1353 0 is_stmt 1
 10024 04e8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10025 04ea BB68     		ldr	r3, [r7, #8]	@ float
 10026 04ec 4FF08F41 		mov	r1, #1199570944
 10027 04f0 1846     		mov	r0, r3
 10028 04f2 FFF7FEFF 		bl	__aeabi_fmul
 10029 04f6 0346     		mov	r3, r0
 10030 04f8 1846     		mov	r0, r3
 10031 04fa FFF7FEFF 		bl	__aeabi_f2iz
 10032 04fe 0146     		mov	r1, r0
 10033 0500 884A     		ldr	r2, .L482
 10034 0502 2346     		mov	r3, r4
 10035 0504 DB00     		lsls	r3, r3, #3
 10036 0506 1B1B     		subs	r3, r3, r4
 10037 0508 1B01     		lsls	r3, r3, #4
 10038 050a 1344     		add	r3, r3, r2
 10039 050c D433     		adds	r3, r3, #212
 10040 050e 1960     		str	r1, [r3]
1355:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10041              		.loc 1 1355 0
 10042 0510 874B     		ldr	r3, .L482+12
 10043 0512 1B68     		ldr	r3, [r3]	@ float
 10044 0514 FB60     		str	r3, [r7, #12]	@ float
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10045              		.loc 1 1356 0
 10046 0516 0023     		movs	r3, #0
 10047 0518 BB75     		strb	r3, [r7, #22]
 10048 051a 0EE0     		b	.L427
 10049              	.L428:
1357:..\src/command_processing.c ****                 }
 10050              		.loc 1 1357 0 discriminator 3
 10051 051c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10052 051e C3F10303 		rsb	r3, r3, #3
 10053 0522 07F10802 		add	r2, r7, #8
 10054 0526 1344     		add	r3, r3, r2
 10055 0528 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10056 052a 07F10C01 		add	r1, r7, #12
 10057 052e 0A44     		add	r2, r2, r1
 10058 0530 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10059 0532 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10060              		.loc 1 1356 0 discriminator 3
 10061 0534 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10062 0536 0133     		adds	r3, r3, #1
 10063 0538 BB75     		strb	r3, [r7, #22]
 10064              	.L427:
1356:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10065              		.loc 1 1356 0 is_stmt 0 discriminator 1
 10066 053a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10067 053c 032B     		cmp	r3, #3
 10068 053e EDD9     		bls	.L428
1359:..\src/command_processing.c ****                 
 10069              		.loc 1 1359 0 is_stmt 1
 10070 0540 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10071 0542 BB68     		ldr	r3, [r7, #8]	@ float
 10072 0544 4FF08F41 		mov	r1, #1199570944
 10073 0548 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 232


 10074 054a FFF7FEFF 		bl	__aeabi_fmul
 10075 054e 0346     		mov	r3, r0
 10076 0550 1846     		mov	r0, r3
 10077 0552 FFF7FEFF 		bl	__aeabi_f2iz
 10078 0556 0146     		mov	r1, r0
 10079 0558 724A     		ldr	r2, .L482
 10080 055a 2346     		mov	r3, r4
 10081 055c DB00     		lsls	r3, r3, #3
 10082 055e 1B1B     		subs	r3, r3, r4
 10083 0560 1B01     		lsls	r3, r3, #4
 10084 0562 1344     		add	r3, r3, r2
 10085 0564 D833     		adds	r3, r3, #216
 10086 0566 1960     		str	r1, [r3]
1361:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10087              		.loc 1 1361 0
 10088 0568 6F4B     		ldr	r3, .L482+4
 10089 056a 1B68     		ldr	r3, [r3]	@ float
 10090 056c FB60     		str	r3, [r7, #12]	@ float
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10091              		.loc 1 1362 0
 10092 056e 0023     		movs	r3, #0
 10093 0570 BB75     		strb	r3, [r7, #22]
 10094 0572 0EE0     		b	.L429
 10095              	.L430:
1363:..\src/command_processing.c ****                 }
 10096              		.loc 1 1363 0 discriminator 3
 10097 0574 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10098 0576 C3F10303 		rsb	r3, r3, #3
 10099 057a 07F10802 		add	r2, r7, #8
 10100 057e 1344     		add	r3, r3, r2
 10101 0580 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10102 0582 07F10C01 		add	r1, r7, #12
 10103 0586 0A44     		add	r2, r2, r1
 10104 0588 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10105 058a 1A70     		strb	r2, [r3]
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10106              		.loc 1 1362 0 discriminator 3
 10107 058c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10108 058e 0133     		adds	r3, r3, #1
 10109 0590 BB75     		strb	r3, [r7, #22]
 10110              	.L429:
1362:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10111              		.loc 1 1362 0 is_stmt 0 discriminator 1
 10112 0592 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10113 0594 032B     		cmp	r3, #3
 10114 0596 EDD9     		bls	.L430
1365:..\src/command_processing.c ****             }            
 10115              		.loc 1 1365 0 is_stmt 1
 10116 0598 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 10117 059a BB68     		ldr	r3, [r7, #8]	@ float
 10118 059c 4FF08F41 		mov	r1, #1199570944
 10119 05a0 1846     		mov	r0, r3
 10120 05a2 FFF7FEFF 		bl	__aeabi_fmul
 10121 05a6 0346     		mov	r3, r0
 10122 05a8 1846     		mov	r0, r3
 10123 05aa FFF7FEFF 		bl	__aeabi_f2iz
 10124 05ae 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 233


 10125 05b0 5C4A     		ldr	r2, .L482
 10126 05b2 2346     		mov	r3, r4
 10127 05b4 DB00     		lsls	r3, r3, #3
 10128 05b6 1B1B     		subs	r3, r3, r4
 10129 05b8 1B01     		lsls	r3, r3, #4
 10130 05ba 1344     		add	r3, r3, r2
 10131 05bc DC33     		adds	r3, r3, #220
 10132 05be 1960     		str	r1, [r3]
 10133              		.loc 1 1367 0
 10134 05c0 00F05DBF 		b	.L416
 10135              	.L386:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 5:         //Input mode
1370:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 10136              		.loc 1 1370 0
 10137 05c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10138 05c6 5B4B     		ldr	r3, .L482+16
 10139 05c8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10140 05ca 5649     		ldr	r1, .L482
 10141 05cc 1346     		mov	r3, r2
 10142 05ce DB00     		lsls	r3, r3, #3
 10143 05d0 9B1A     		subs	r3, r3, r2
 10144 05d2 1B01     		lsls	r3, r3, #4
 10145 05d4 0B44     		add	r3, r3, r1
 10146 05d6 03F58773 		add	r3, r3, #270
 10147 05da 0246     		mov	r2, r0
 10148 05dc 1A70     		strb	r2, [r3]
1371:..\src/command_processing.c ****             
1372:..\src/command_processing.c ****             // Hold the actual position
1373:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 10149              		.loc 1 1373 0
 10150 05de 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10151 05e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10152 05e2 5048     		ldr	r0, .L482
 10153 05e4 1346     		mov	r3, r2
 10154 05e6 DB00     		lsls	r3, r3, #3
 10155 05e8 9B1A     		subs	r3, r3, r2
 10156 05ea 1B01     		lsls	r3, r3, #4
 10157 05ec 0344     		add	r3, r3, r0
 10158 05ee 03F58873 		add	r3, r3, #272
 10159 05f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10160 05f4 1846     		mov	r0, r3
 10161 05f6 504A     		ldr	r2, .L482+20
 10162 05f8 3423     		movs	r3, #52
 10163 05fa 03FB00F3 		mul	r3, r3, r0
 10164 05fe 1344     		add	r3, r3, r2
 10165 0600 1A68     		ldr	r2, [r3]
 10166 0602 4E48     		ldr	r0, .L482+24
 10167 0604 0B01     		lsls	r3, r1, #4
 10168 0606 0344     		add	r3, r3, r0
 10169 0608 1A60     		str	r2, [r3]
1374:..\src/command_processing.c ****             break;   
 10170              		.loc 1 1374 0
 10171 060a 00F038BF 		b	.L416
 10172              	.L387:
1375:..\src/command_processing.c **** 
1376:..\src/command_processing.c ****         case 8:         //Measurement Offset
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 234


1377:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 10173              		.loc 1 1377 0
 10174 060e 0023     		movs	r3, #0
 10175 0610 FB75     		strb	r3, [r7, #23]
 10176 0612 7EE0     		b	.L431
 10177              	.L432:
1378:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10178              		.loc 1 1378 0 discriminator 3
 10179 0614 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10180 0616 4349     		ldr	r1, .L482
 10181 0618 1346     		mov	r3, r2
 10182 061a DB00     		lsls	r3, r3, #3
 10183 061c 9B1A     		subs	r3, r3, r2
 10184 061e 1B01     		lsls	r3, r3, #4
 10185 0620 0B44     		add	r3, r3, r1
 10186 0622 03F58873 		add	r3, r3, #272
 10187 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10188 0628 1C46     		mov	r4, r3
 10189 062a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10190 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10191 062e 5B00     		lsls	r3, r3, #1
 10192 0630 0333     		adds	r3, r3, #3
 10193 0632 4049     		ldr	r1, .L482+16
 10194 0634 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10195 0636 1B02     		lsls	r3, r3, #8
 10196 0638 19B2     		sxth	r1, r3
 10197 063a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10198 063c 0233     		adds	r3, r3, #2
 10199 063e 5B00     		lsls	r3, r3, #1
 10200 0640 3C48     		ldr	r0, .L482+16
 10201 0642 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 10202 0644 1BB2     		sxth	r3, r3
 10203 0646 0B43     		orrs	r3, r3, r1
 10204 0648 1BB2     		sxth	r3, r3
 10205 064a 1846     		mov	r0, r3
 10206 064c 3549     		ldr	r1, .L482
 10207 064e 2346     		mov	r3, r4
 10208 0650 5B00     		lsls	r3, r3, #1
 10209 0652 2344     		add	r3, r3, r4
 10210 0654 9B00     		lsls	r3, r3, #2
 10211 0656 1344     		add	r3, r3, r2
 10212 0658 6633     		adds	r3, r3, #102
 10213 065a 41F82300 		str	r0, [r1, r3, lsl #2]
1379:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 10214              		.loc 1 1379 0 discriminator 3
 10215 065e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10216 0660 3049     		ldr	r1, .L482
 10217 0662 1346     		mov	r3, r2
 10218 0664 DB00     		lsls	r3, r3, #3
 10219 0666 9B1A     		subs	r3, r3, r2
 10220 0668 1B01     		lsls	r3, r3, #4
 10221 066a 0B44     		add	r3, r3, r1
 10222 066c 03F58873 		add	r3, r3, #272
 10223 0670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10224 0672 1D46     		mov	r5, r3
 10225 0674 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 10226 0676 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 235


 10227 0678 2A48     		ldr	r0, .L482
 10228 067a 1346     		mov	r3, r2
 10229 067c DB00     		lsls	r3, r3, #3
 10230 067e 9B1A     		subs	r3, r3, r2
 10231 0680 1B01     		lsls	r3, r3, #4
 10232 0682 0344     		add	r3, r3, r0
 10233 0684 03F58873 		add	r3, r3, #272
 10234 0688 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10235 068a 1C46     		mov	r4, r3
 10236 068c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10237 068e 2548     		ldr	r0, .L482
 10238 0690 2346     		mov	r3, r4
 10239 0692 5B00     		lsls	r3, r3, #1
 10240 0694 2344     		add	r3, r3, r4
 10241 0696 9B00     		lsls	r3, r3, #2
 10242 0698 1344     		add	r3, r3, r2
 10243 069a 6633     		adds	r3, r3, #102
 10244 069c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 10245 06a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10246 06a2 204C     		ldr	r4, .L482
 10247 06a4 1346     		mov	r3, r2
 10248 06a6 DB00     		lsls	r3, r3, #3
 10249 06a8 9B1A     		subs	r3, r3, r2
 10250 06aa 1B01     		lsls	r3, r3, #4
 10251 06ac 2344     		add	r3, r3, r4
 10252 06ae 03F58873 		add	r3, r3, #272
 10253 06b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10254 06b4 1E46     		mov	r6, r3
 10255 06b6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 10256 06b8 1A4C     		ldr	r4, .L482
 10257 06ba 3346     		mov	r3, r6
 10258 06bc 5B00     		lsls	r3, r3, #1
 10259 06be 3344     		add	r3, r3, r6
 10260 06c0 1B01     		lsls	r3, r3, #4
 10261 06c2 2344     		add	r3, r3, r4
 10262 06c4 1344     		add	r3, r3, r2
 10263 06c6 03F29513 		addw	r3, r3, #405
 10264 06ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10265 06cc 00FA03F2 		lsl	r2, r0, r3
 10266 06d0 1448     		ldr	r0, .L482
 10267 06d2 2B46     		mov	r3, r5
 10268 06d4 5B00     		lsls	r3, r3, #1
 10269 06d6 2B44     		add	r3, r3, r5
 10270 06d8 9B00     		lsls	r3, r3, #2
 10271 06da 0B44     		add	r3, r3, r1
 10272 06dc 6633     		adds	r3, r3, #102
 10273 06de 40F82320 		str	r2, [r0, r3, lsl #2]
1380:..\src/command_processing.c **** 
1381:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 10274              		.loc 1 1381 0 discriminator 3
 10275 06e2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10276 06e4 0F49     		ldr	r1, .L482
 10277 06e6 1346     		mov	r3, r2
 10278 06e8 DB00     		lsls	r3, r3, #3
 10279 06ea 9B1A     		subs	r3, r3, r2
 10280 06ec 1B01     		lsls	r3, r3, #4
 10281 06ee 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 236


 10282 06f0 03F58873 		add	r3, r3, #272
 10283 06f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10284 06f6 1846     		mov	r0, r3
 10285 06f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10286 06fa 0F49     		ldr	r1, .L482+20
 10287 06fc 3422     		movs	r2, #52
 10288 06fe 02FB00F2 		mul	r2, r2, r0
 10289 0702 0A44     		add	r2, r2, r1
 10290 0704 1344     		add	r3, r3, r2
 10291 0706 1833     		adds	r3, r3, #24
 10292 0708 0022     		movs	r2, #0
 10293 070a 1A70     		strb	r2, [r3]
1377:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10294              		.loc 1 1377 0 discriminator 3
 10295 070c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10296 070e 0133     		adds	r3, r3, #1
 10297 0710 FB75     		strb	r3, [r7, #23]
 10298              	.L431:
1377:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 10299              		.loc 1 1377 0 is_stmt 0 discriminator 1
 10300 0712 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 10301 0714 022B     		cmp	r3, #2
 10302 0716 7FF67DAF 		bls	.L432
1382:..\src/command_processing.c ****             }
1383:..\src/command_processing.c ****             reset_last_value_flag = 1;
 10303              		.loc 1 1383 0 is_stmt 1
 10304 071a 094B     		ldr	r3, .L482+28
 10305 071c 0122     		movs	r2, #1
 10306 071e 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****             break;
 10307              		.loc 1 1384 0
 10308 0720 00F0ADBE 		b	.L416
 10309              	.L483:
 10310              		.align	2
 10311              	.L482:
 10312 0724 00000000 		.word	g_mem
 10313 0728 0B000000 		.word	g_rx+11
 10314 072c 03000000 		.word	g_rx+3
 10315 0730 07000000 		.word	g_rx+7
 10316 0734 00000000 		.word	g_rx
 10317 0738 00000000 		.word	g_meas
 10318 073c 00000000 		.word	g_refNew
 10319 0740 00000000 		.word	reset_last_value_flag
 10320              	.L388:
1385:..\src/command_processing.c ****     
1386:..\src/command_processing.c ****         case 11:        //Position limits
1387:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 10321              		.loc 1 1387 0
 10322 0744 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10323 0746 C14B     		ldr	r3, .L484
 10324 0748 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10325 074a 1906     		lsls	r1, r3, #24
 10326 074c BF4B     		ldr	r3, .L484
 10327 074e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10328 0750 1B04     		lsls	r3, r3, #16
 10329 0752 1943     		orrs	r1, r1, r3
 10330 0754 BD4B     		ldr	r3, .L484
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 237


 10331 0756 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10332 0758 1B02     		lsls	r3, r3, #8
 10333 075a 0B43     		orrs	r3, r3, r1
 10334 075c BB49     		ldr	r1, .L484
 10335 075e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 10336 0760 1943     		orrs	r1, r1, r3
 10337 0762 BB48     		ldr	r0, .L484+4
 10338 0764 1346     		mov	r3, r2
 10339 0766 DB00     		lsls	r3, r3, #3
 10340 0768 9B1A     		subs	r3, r3, r2
 10341 076a 1B01     		lsls	r3, r3, #4
 10342 076c 0344     		add	r3, r3, r0
 10343 076e E433     		adds	r3, r3, #228
 10344 0770 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 10345              		.loc 1 1388 0
 10346 0772 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10347 0774 B54B     		ldr	r3, .L484
 10348 0776 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 10349 0778 1906     		lsls	r1, r3, #24
 10350 077a B44B     		ldr	r3, .L484
 10351 077c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 10352 077e 1B04     		lsls	r3, r3, #16
 10353 0780 1943     		orrs	r1, r1, r3
 10354 0782 B24B     		ldr	r3, .L484
 10355 0784 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10356 0786 1B02     		lsls	r3, r3, #8
 10357 0788 0B43     		orrs	r3, r3, r1
 10358 078a B049     		ldr	r1, .L484
 10359 078c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10360 078e 1943     		orrs	r1, r1, r3
 10361 0790 AF48     		ldr	r0, .L484+4
 10362 0792 1346     		mov	r3, r2
 10363 0794 DB00     		lsls	r3, r3, #3
 10364 0796 9B1A     		subs	r3, r3, r2
 10365 0798 1B01     		lsls	r3, r3, #4
 10366 079a 0344     		add	r3, r3, r0
 10367 079c E833     		adds	r3, r3, #232
 10368 079e 1960     		str	r1, [r3]
1389:..\src/command_processing.c **** 
1390:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 10369              		.loc 1 1390 0
 10370 07a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10371 07a2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10372 07a4 AA48     		ldr	r0, .L484+4
 10373 07a6 0B46     		mov	r3, r1
 10374 07a8 DB00     		lsls	r3, r3, #3
 10375 07aa 5B1A     		subs	r3, r3, r1
 10376 07ac 1B01     		lsls	r3, r3, #4
 10377 07ae 0344     		add	r3, r3, r0
 10378 07b0 E433     		adds	r3, r3, #228
 10379 07b2 1868     		ldr	r0, [r3]
 10380 07b4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10381 07b6 A64C     		ldr	r4, .L484+4
 10382 07b8 0B46     		mov	r3, r1
 10383 07ba DB00     		lsls	r3, r3, #3
 10384 07bc 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 238


 10385 07be 1B01     		lsls	r3, r3, #4
 10386 07c0 2344     		add	r3, r3, r4
 10387 07c2 03F58873 		add	r3, r3, #272
 10388 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10389 07c8 1C46     		mov	r4, r3
 10390 07ca A149     		ldr	r1, .L484+4
 10391 07cc 2346     		mov	r3, r4
 10392 07ce 5B00     		lsls	r3, r3, #1
 10393 07d0 2344     		add	r3, r3, r4
 10394 07d2 1B01     		lsls	r3, r3, #4
 10395 07d4 0B44     		add	r3, r3, r1
 10396 07d6 03F29513 		addw	r3, r3, #405
 10397 07da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10398 07dc 00FA03F1 		lsl	r1, r0, r3
 10399 07e0 9B48     		ldr	r0, .L484+4
 10400 07e2 1346     		mov	r3, r2
 10401 07e4 DB00     		lsls	r3, r3, #3
 10402 07e6 9B1A     		subs	r3, r3, r2
 10403 07e8 1B01     		lsls	r3, r3, #4
 10404 07ea 0344     		add	r3, r3, r0
 10405 07ec E433     		adds	r3, r3, #228
 10406 07ee 1960     		str	r1, [r3]
1391:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 10407              		.loc 1 1391 0
 10408 07f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10409 07f2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10410 07f4 9648     		ldr	r0, .L484+4
 10411 07f6 0B46     		mov	r3, r1
 10412 07f8 DB00     		lsls	r3, r3, #3
 10413 07fa 5B1A     		subs	r3, r3, r1
 10414 07fc 1B01     		lsls	r3, r3, #4
 10415 07fe 0344     		add	r3, r3, r0
 10416 0800 E833     		adds	r3, r3, #232
 10417 0802 1868     		ldr	r0, [r3]
 10418 0804 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 10419 0806 924C     		ldr	r4, .L484+4
 10420 0808 0B46     		mov	r3, r1
 10421 080a DB00     		lsls	r3, r3, #3
 10422 080c 5B1A     		subs	r3, r3, r1
 10423 080e 1B01     		lsls	r3, r3, #4
 10424 0810 2344     		add	r3, r3, r4
 10425 0812 03F58873 		add	r3, r3, #272
 10426 0816 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10427 0818 1C46     		mov	r4, r3
 10428 081a 8D49     		ldr	r1, .L484+4
 10429 081c 2346     		mov	r3, r4
 10430 081e 5B00     		lsls	r3, r3, #1
 10431 0820 2344     		add	r3, r3, r4
 10432 0822 1B01     		lsls	r3, r3, #4
 10433 0824 0B44     		add	r3, r3, r1
 10434 0826 03F29513 		addw	r3, r3, #405
 10435 082a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10436 082c 00FA03F1 		lsl	r1, r0, r3
 10437 0830 8748     		ldr	r0, .L484+4
 10438 0832 1346     		mov	r3, r2
 10439 0834 DB00     		lsls	r3, r3, #3
 10440 0836 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 239


 10441 0838 1B01     		lsls	r3, r3, #4
 10442 083a 0344     		add	r3, r3, r0
 10443 083c E833     		adds	r3, r3, #232
 10444 083e 1960     		str	r1, [r3]
1392:..\src/command_processing.c ****             break;            
 10445              		.loc 1 1392 0
 10446 0840 00F01DBE 		b	.L416
 10447              	.L389:
1393:..\src/command_processing.c **** 
1394:..\src/command_processing.c ****         case 23:        //Rest Position
1395:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 10448              		.loc 1 1395 0
 10449 0844 814B     		ldr	r3, .L484
 10450 0846 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10451 0848 1A06     		lsls	r2, r3, #24
 10452 084a 804B     		ldr	r3, .L484
 10453 084c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10454 084e 1B04     		lsls	r3, r3, #16
 10455 0850 1A43     		orrs	r2, r2, r3
 10456 0852 7E4B     		ldr	r3, .L484
 10457 0854 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10458 0856 1B02     		lsls	r3, r3, #8
 10459 0858 1343     		orrs	r3, r3, r2
 10460 085a 7C4A     		ldr	r2, .L484
 10461 085c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10462 085e 1343     		orrs	r3, r3, r2
 10463 0860 7B4A     		ldr	r2, .L484+4
 10464 0862 C2F8A032 		str	r3, [r2, #672]
1396:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 10465              		.loc 1 1396 0
 10466 0866 7A4B     		ldr	r3, .L484+4
 10467 0868 D3F8A012 		ldr	r1, [r3, #672]
 10468 086c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10469 086e 7848     		ldr	r0, .L484+4
 10470 0870 1346     		mov	r3, r2
 10471 0872 DB00     		lsls	r3, r3, #3
 10472 0874 9B1A     		subs	r3, r3, r2
 10473 0876 1B01     		lsls	r3, r3, #4
 10474 0878 0344     		add	r3, r3, r0
 10475 087a 03F58873 		add	r3, r3, #272
 10476 087e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10477 0880 1846     		mov	r0, r3
 10478 0882 734A     		ldr	r2, .L484+4
 10479 0884 0346     		mov	r3, r0
 10480 0886 5B00     		lsls	r3, r3, #1
 10481 0888 0344     		add	r3, r3, r0
 10482 088a 1B01     		lsls	r3, r3, #4
 10483 088c 1344     		add	r3, r3, r2
 10484 088e 03F29513 		addw	r3, r3, #405
 10485 0892 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10486 0894 01FA03F3 		lsl	r3, r1, r3
 10487 0898 6D4A     		ldr	r2, .L484+4
 10488 089a C2F8A032 		str	r3, [r2, #672]
1397:..\src/command_processing.c ****             break; 
 10489              		.loc 1 1397 0
 10490 089e 00F0EEBD 		b	.L416
 10491              	.L390:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 240


1398:..\src/command_processing.c ****             
1399:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1400:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 10492              		.loc 1 1400 0
 10493 08a2 6A4B     		ldr	r3, .L484
 10494 08a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10495 08a6 1A06     		lsls	r2, r3, #24
 10496 08a8 684B     		ldr	r3, .L484
 10497 08aa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 10498 08ac 1B04     		lsls	r3, r3, #16
 10499 08ae 1A43     		orrs	r2, r2, r3
 10500 08b0 664B     		ldr	r3, .L484
 10501 08b2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 10502 08b4 1B02     		lsls	r3, r3, #8
 10503 08b6 1343     		orrs	r3, r3, r2
 10504 08b8 644A     		ldr	r2, .L484
 10505 08ba 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 10506 08bc 1343     		orrs	r3, r3, r2
 10507 08be 644A     		ldr	r2, .L484+4
 10508 08c0 C2F8A432 		str	r3, [r2, #676]
1401:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 10509              		.loc 1 1401 0
 10510 08c4 624B     		ldr	r3, .L484+4
 10511 08c6 D3F8A432 		ldr	r3, [r3, #676]
 10512 08ca 092B     		cmp	r3, #9
 10513 08cc 00F3CE85 		bgt	.L475
 10514              		.loc 1 1401 0 is_stmt 0 discriminator 1
 10515 08d0 5F4B     		ldr	r3, .L484+4
 10516 08d2 0A22     		movs	r2, #10
 10517 08d4 C3F8A422 		str	r2, [r3, #676]
1402:..\src/command_processing.c ****            break; 
 10518              		.loc 1 1402 0 is_stmt 1 discriminator 1
 10519 08d8 00F0C8BD 		b	.L475
 10520              	.L391:
1403:..\src/command_processing.c ****             
1404:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1405:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10521              		.loc 1 1405 0
 10522 08dc 5B4B     		ldr	r3, .L484
 10523 08de DB78     		ldrb	r3, [r3, #3]
 10524 08e0 BB74     		strb	r3, [r7, #18]
1406:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 10525              		.loc 1 1406 0
 10526 08e2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10527 08e4 002B     		cmp	r3, #0
 10528 08e6 04D0     		beq	.L434
1407:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 10529              		.loc 1 1407 0
 10530 08e8 594B     		ldr	r3, .L484+4
 10531 08ea 0122     		movs	r2, #1
 10532 08ec 83F8A720 		strb	r2, [r3, #167]
 10533 08f0 03E0     		b	.L435
 10534              	.L434:
1408:..\src/command_processing.c ****             } else {            // 0
1409:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 10535              		.loc 1 1409 0
 10536 08f2 574B     		ldr	r3, .L484+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 241


 10537 08f4 0022     		movs	r2, #0
 10538 08f6 83F8A720 		strb	r2, [r3, #167]
 10539              	.L435:
1410:..\src/command_processing.c ****             }
1411:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 10540              		.loc 1 1411 0
 10541 08fa 564B     		ldr	r3, .L484+8
 10542 08fc 0122     		movs	r2, #1
 10543 08fe 1A70     		strb	r2, [r3]
1412:..\src/command_processing.c **** 
1413:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 10544              		.loc 1 1413 0
 10545 0900 534B     		ldr	r3, .L484+4
 10546 0902 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10547 0906 002B     		cmp	r3, #0
 10548 0908 40F0B285 		bne	.L476
1414:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1415:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 10549              		.loc 1 1415 0
 10550 090c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10551 090e 504B     		ldr	r3, .L484+4
 10552 0910 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10553 0914 4E49     		ldr	r1, .L484+4
 10554 0916 1346     		mov	r3, r2
 10555 0918 DB00     		lsls	r3, r3, #3
 10556 091a 9B1A     		subs	r3, r3, r2
 10557 091c 1B01     		lsls	r3, r3, #4
 10558 091e 0B44     		add	r3, r3, r1
 10559 0920 03F58873 		add	r3, r3, #272
 10560 0924 0246     		mov	r2, r0
 10561 0926 1A70     		strb	r2, [r3]
1416:..\src/command_processing.c ****                 
1417:..\src/command_processing.c ****                 // Change also gears parameters
1418:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10562              		.loc 1 1418 0
 10563 0928 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10564 092a 4949     		ldr	r1, .L484+4
 10565 092c 1346     		mov	r3, r2
 10566 092e DB00     		lsls	r3, r3, #3
 10567 0930 9B1A     		subs	r3, r3, r2
 10568 0932 1B01     		lsls	r3, r3, #4
 10569 0934 0B44     		add	r3, r3, r1
 10570 0936 03F58873 		add	r3, r3, #272
 10571 093a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10572 093c 1946     		mov	r1, r3
 10573 093e 444A     		ldr	r2, .L484+4
 10574 0940 0B46     		mov	r3, r1
 10575 0942 5B00     		lsls	r3, r3, #1
 10576 0944 0B44     		add	r3, r3, r1
 10577 0946 1B01     		lsls	r3, r3, #4
 10578 0948 1344     		add	r3, r3, r2
 10579 094a 03F5D873 		add	r3, r3, #432
 10580 094e 0122     		movs	r2, #1
 10581 0950 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10582              		.loc 1 1419 0
 10583 0952 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 242


 10584 0954 3E49     		ldr	r1, .L484+4
 10585 0956 1346     		mov	r3, r2
 10586 0958 DB00     		lsls	r3, r3, #3
 10587 095a 9B1A     		subs	r3, r3, r2
 10588 095c 1B01     		lsls	r3, r3, #4
 10589 095e 0B44     		add	r3, r3, r1
 10590 0960 03F58873 		add	r3, r3, #272
 10591 0964 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10592 0966 1946     		mov	r1, r3
 10593 0968 394A     		ldr	r2, .L484+4
 10594 096a 0B46     		mov	r3, r1
 10595 096c 5B00     		lsls	r3, r3, #1
 10596 096e 0B44     		add	r3, r3, r1
 10597 0970 1B01     		lsls	r3, r3, #4
 10598 0972 1344     		add	r3, r3, r2
 10599 0974 03F2B513 		addw	r3, r3, #437
 10600 0978 2322     		movs	r2, #35
 10601 097a 1A70     		strb	r2, [r3]
1420:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10602              		.loc 1 1420 0
 10603 097c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10604 097e 3449     		ldr	r1, .L484+4
 10605 0980 1346     		mov	r3, r2
 10606 0982 DB00     		lsls	r3, r3, #3
 10607 0984 9B1A     		subs	r3, r3, r2
 10608 0986 1B01     		lsls	r3, r3, #4
 10609 0988 0B44     		add	r3, r3, r1
 10610 098a 03F58873 		add	r3, r3, #272
 10611 098e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10612 0990 1946     		mov	r1, r3
 10613 0992 2F4A     		ldr	r2, .L484+4
 10614 0994 0B46     		mov	r3, r1
 10615 0996 5B00     		lsls	r3, r3, #1
 10616 0998 0B44     		add	r3, r3, r1
 10617 099a 1B01     		lsls	r3, r3, #4
 10618 099c 1344     		add	r3, r3, r2
 10619 099e 03F5DB73 		add	r3, r3, #438
 10620 09a2 0322     		movs	r2, #3
 10621 09a4 1A70     		strb	r2, [r3]
1421:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10622              		.loc 1 1421 0
 10623 09a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10624 09a8 2949     		ldr	r1, .L484+4
 10625 09aa 1346     		mov	r3, r2
 10626 09ac DB00     		lsls	r3, r3, #3
 10627 09ae 9B1A     		subs	r3, r3, r2
 10628 09b0 1B01     		lsls	r3, r3, #4
 10629 09b2 0B44     		add	r3, r3, r1
 10630 09b4 03F58873 		add	r3, r3, #272
 10631 09b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10632 09ba 1946     		mov	r1, r3
 10633 09bc 244A     		ldr	r2, .L484+4
 10634 09be 0B46     		mov	r3, r1
 10635 09c0 5B00     		lsls	r3, r3, #1
 10636 09c2 0B44     		add	r3, r3, r1
 10637 09c4 1B01     		lsls	r3, r3, #4
 10638 09c6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 243


 10639 09c8 03F2B713 		addw	r3, r3, #439
 10640 09cc FF22     		movs	r2, #255
 10641 09ce 1A70     		strb	r2, [r3]
1422:..\src/command_processing.c ****                 
1423:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1424:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10642              		.loc 1 1424 0
 10643 09d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10644 09d2 1F49     		ldr	r1, .L484+4
 10645 09d4 1346     		mov	r3, r2
 10646 09d6 DB00     		lsls	r3, r3, #3
 10647 09d8 9B1A     		subs	r3, r3, r2
 10648 09da 1B01     		lsls	r3, r3, #4
 10649 09dc 0B44     		add	r3, r3, r1
 10650 09de 03F21113 		addw	r3, r3, #273
 10651 09e2 0122     		movs	r2, #1
 10652 09e4 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10653              		.loc 1 1425 0
 10654 09e6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10655 09e8 1949     		ldr	r1, .L484+4
 10656 09ea 1346     		mov	r3, r2
 10657 09ec DB00     		lsls	r3, r3, #3
 10658 09ee 9B1A     		subs	r3, r3, r2
 10659 09f0 1B01     		lsls	r3, r3, #4
 10660 09f2 0B44     		add	r3, r3, r1
 10661 09f4 03F58973 		add	r3, r3, #274
 10662 09f8 0122     		movs	r2, #1
 10663 09fa 1A70     		strb	r2, [r3]
1426:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10664              		.loc 1 1426 0
 10665 09fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10666 09fe 1449     		ldr	r1, .L484+4
 10667 0a00 1346     		mov	r3, r2
 10668 0a02 DB00     		lsls	r3, r3, #3
 10669 0a04 9B1A     		subs	r3, r3, r2
 10670 0a06 1B01     		lsls	r3, r3, #4
 10671 0a08 0B44     		add	r3, r3, r1
 10672 0a0a E433     		adds	r3, r3, #228
 10673 0a0c 0022     		movs	r2, #0
 10674 0a0e 1A60     		str	r2, [r3]
1427:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10675              		.loc 1 1427 0
 10676 0a10 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10677 0a12 0F4B     		ldr	r3, .L484+4
 10678 0a14 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10679 0a18 1846     		mov	r0, r3
 10680 0a1a 0D49     		ldr	r1, .L484+4
 10681 0a1c 0346     		mov	r3, r0
 10682 0a1e 5B00     		lsls	r3, r3, #1
 10683 0a20 0344     		add	r3, r3, r0
 10684 0a22 1B01     		lsls	r3, r3, #4
 10685 0a24 0B44     		add	r3, r3, r1
 10686 0a26 03F29513 		addw	r3, r3, #405
 10687 0a2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10688 0a2c 1946     		mov	r1, r3
 10689 0a2e 4FF47A53 		mov	r3, #16000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 244


 10690 0a32 03FA01F1 		lsl	r1, r3, r1
 10691 0a36 0648     		ldr	r0, .L484+4
 10692 0a38 1346     		mov	r3, r2
 10693 0a3a DB00     		lsls	r3, r3, #3
 10694 0a3c 9B1A     		subs	r3, r3, r2
 10695 0a3e 1B01     		lsls	r3, r3, #4
 10696 0a40 0344     		add	r3, r3, r0
 10697 0a42 E833     		adds	r3, r3, #232
 10698 0a44 1960     		str	r1, [r3]
1428:..\src/command_processing.c ****             }    
1429:..\src/command_processing.c **** 
1430:..\src/command_processing.c ****             break; 
 10699              		.loc 1 1430 0
 10700 0a46 00F013BD 		b	.L476
 10701              	.L485:
 10702 0a4a 00BF     		.align	2
 10703              	.L484:
 10704 0a4c 00000000 		.word	g_rx
 10705 0a50 00000000 		.word	g_mem
 10706 0a54 00000000 		.word	reset_last_value_flag
 10707              	.L392:
1431:..\src/command_processing.c **** 
1432:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1433:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 10708              		.loc 1 1433 0
 10709 0a58 A94B     		ldr	r3, .L486
 10710 0a5a DB78     		ldrb	r3, [r3, #3]
 10711 0a5c BB74     		strb	r3, [r7, #18]
1434:..\src/command_processing.c ****             if (aux_uchar) {
 10712              		.loc 1 1434 0
 10713 0a5e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10714 0a60 002B     		cmp	r3, #0
 10715 0a62 05D0     		beq	.L437
1435:..\src/command_processing.c ****                 reset_counters();
 10716              		.loc 1 1435 0
 10717 0a64 FFF7FEFF 		bl	reset_counters
1436:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 10718              		.loc 1 1436 0
 10719 0a68 A64B     		ldr	r3, .L486+4
 10720 0a6a 0022     		movs	r2, #0
 10721 0a6c 83F8A820 		strb	r2, [r3, #168]
 10722              	.L437:
1437:..\src/command_processing.c ****             }
1438:..\src/command_processing.c ****             
1439:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10723              		.loc 1 1439 0
 10724 0a70 A54B     		ldr	r3, .L486+8
 10725 0a72 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10726 0a76 012B     		cmp	r3, #1
 10727 0a78 40F0FC84 		bne	.L477
1440:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1441:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 10728              		.loc 1 1441 0
 10729 0a7c 8720     		movs	r0, #135
 10730 0a7e FFF7FEFF 		bl	DS1302_read
 10731 0a82 0346     		mov	r3, r0
 10732 0a84 BB74     		strb	r3, [r7, #18]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 245


1442:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 10733              		.loc 1 1442 0
 10734 0a86 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10735 0a88 1B09     		lsrs	r3, r3, #4
 10736 0a8a DBB2     		uxtb	r3, r3
 10737 0a8c 1A46     		mov	r2, r3
 10738 0a8e 9200     		lsls	r2, r2, #2
 10739 0a90 1344     		add	r3, r3, r2
 10740 0a92 5B00     		lsls	r3, r3, #1
 10741 0a94 DAB2     		uxtb	r2, r3
 10742 0a96 BB7C     		ldrb	r3, [r7, #18]
 10743 0a98 03F00F03 		and	r3, r3, #15
 10744 0a9c DBB2     		uxtb	r3, r3
 10745 0a9e 1344     		add	r3, r3, r2
 10746 0aa0 DAB2     		uxtb	r2, r3
 10747 0aa2 984B     		ldr	r3, .L486+4
 10748 0aa4 83F8A420 		strb	r2, [r3, #164]
1443:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 10749              		.loc 1 1443 0
 10750 0aa8 8920     		movs	r0, #137
 10751 0aaa FFF7FEFF 		bl	DS1302_read
 10752 0aae 0346     		mov	r3, r0
 10753 0ab0 BB74     		strb	r3, [r7, #18]
1444:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 10754              		.loc 1 1444 0
 10755 0ab2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10756 0ab4 1B09     		lsrs	r3, r3, #4
 10757 0ab6 DBB2     		uxtb	r3, r3
 10758 0ab8 1A46     		mov	r2, r3
 10759 0aba 9200     		lsls	r2, r2, #2
 10760 0abc 1344     		add	r3, r3, r2
 10761 0abe 5B00     		lsls	r3, r3, #1
 10762 0ac0 DAB2     		uxtb	r2, r3
 10763 0ac2 BB7C     		ldrb	r3, [r7, #18]
 10764 0ac4 03F00F03 		and	r3, r3, #15
 10765 0ac8 DBB2     		uxtb	r3, r3
 10766 0aca 1344     		add	r3, r3, r2
 10767 0acc DAB2     		uxtb	r2, r3
 10768 0ace 8D4B     		ldr	r3, .L486+4
 10769 0ad0 83F8A520 		strb	r2, [r3, #165]
1445:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 10770              		.loc 1 1445 0
 10771 0ad4 8D20     		movs	r0, #141
 10772 0ad6 FFF7FEFF 		bl	DS1302_read
 10773 0ada 0346     		mov	r3, r0
 10774 0adc BB74     		strb	r3, [r7, #18]
1446:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 10775              		.loc 1 1446 0
 10776 0ade BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 10777 0ae0 1B09     		lsrs	r3, r3, #4
 10778 0ae2 DBB2     		uxtb	r3, r3
 10779 0ae4 1A46     		mov	r2, r3
 10780 0ae6 9200     		lsls	r2, r2, #2
 10781 0ae8 1344     		add	r3, r3, r2
 10782 0aea 5B00     		lsls	r3, r3, #1
 10783 0aec DAB2     		uxtb	r2, r3
 10784 0aee BB7C     		ldrb	r3, [r7, #18]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 246


 10785 0af0 03F00F03 		and	r3, r3, #15
 10786 0af4 DBB2     		uxtb	r3, r3
 10787 0af6 1344     		add	r3, r3, r2
 10788 0af8 DAB2     		uxtb	r2, r3
 10789 0afa 824B     		ldr	r3, .L486+4
 10790 0afc 83F8A620 		strb	r2, [r3, #166]
1447:..\src/command_processing.c ****             }
1448:..\src/command_processing.c ****             break;             
 10791              		.loc 1 1448 0
 10792 0b00 00F0B8BC 		b	.L477
 10793              	.L393:
 10794              	.LBB19:
1449:..\src/command_processing.c ****             
1450:..\src/command_processing.c ****         case 32:         //Current Time
1451:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 10795              		.loc 1 1451 0
 10796 0b04 0023     		movs	r3, #0
 10797 0b06 7B75     		strb	r3, [r7, #21]
 10798 0b08 0CE0     		b	.L439
 10799              	.L440:
1452:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10800              		.loc 1 1452 0 discriminator 3
 10801 0b0a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10802 0b0c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 10803 0b0e 0332     		adds	r2, r2, #3
 10804 0b10 7B49     		ldr	r1, .L486
 10805 0b12 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10806 0b14 7B4A     		ldr	r2, .L486+4
 10807 0b16 1344     		add	r3, r3, r2
 10808 0b18 0A46     		mov	r2, r1
 10809 0b1a 83F82022 		strb	r2, [r3, #544]
1451:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10810              		.loc 1 1451 0 discriminator 3
 10811 0b1e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10812 0b20 0133     		adds	r3, r3, #1
 10813 0b22 7B75     		strb	r3, [r7, #21]
 10814              	.L439:
1451:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 10815              		.loc 1 1451 0 is_stmt 0 discriminator 1
 10816 0b24 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 10817 0b26 052B     		cmp	r3, #5
 10818 0b28 EFD9     		bls	.L440
 10819              	.LBE19:
1453:..\src/command_processing.c ****             }
1454:..\src/command_processing.c ****             
1455:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 10820              		.loc 1 1455 0 is_stmt 1
 10821 0b2a 764B     		ldr	r3, .L486+4
 10822 0b2c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 10823 0b30 012B     		cmp	r3, #1
 10824 0b32 40F0A184 		bne	.L478
1456:..\src/command_processing.c ****                 set_RTC_time();
 10825              		.loc 1 1456 0
 10826 0b36 FFF7FEFF 		bl	set_RTC_time
1457:..\src/command_processing.c ****             }
1458:..\src/command_processing.c ****             break;
 10827              		.loc 1 1458 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 247


 10828 0b3a 00F09DBC 		b	.L478
 10829              	.L394:
1459:..\src/command_processing.c ****            
1460:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1461:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10830              		.loc 1 1461 0
 10831 0b3e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10832 0b40 6F4B     		ldr	r3, .L486
 10833 0b42 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10834 0b44 6F49     		ldr	r1, .L486+4
 10835 0b46 1346     		mov	r3, r2
 10836 0b48 DB00     		lsls	r3, r3, #3
 10837 0b4a 9B1A     		subs	r3, r3, r2
 10838 0b4c 1B01     		lsls	r3, r3, #4
 10839 0b4e 0B44     		add	r3, r3, r1
 10840 0b50 E233     		adds	r3, r3, #226
 10841 0b52 0246     		mov	r2, r0
 10842 0b54 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10843              		.loc 1 1462 0
 10844 0b56 6B4B     		ldr	r3, .L486+4
 10845 0b58 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10846 0b5c 5B00     		lsls	r3, r3, #1
 10847 0b5e 5AB2     		sxtb	r2, r3
 10848 0b60 684B     		ldr	r3, .L486+4
 10849 0b62 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10850 0b66 5BB2     		sxtb	r3, r3
 10851 0b68 1343     		orrs	r3, r3, r2
 10852 0b6a 5BB2     		sxtb	r3, r3
 10853 0b6c DBB2     		uxtb	r3, r3
 10854 0b6e 1846     		mov	r0, r3
 10855 0b70 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1463:..\src/command_processing.c ****             break;
 10856              		.loc 1 1463 0
 10857 0b74 00F083BC 		b	.L416
 10858              	.L395:
1464:..\src/command_processing.c ****             
1465:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1466:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 10859              		.loc 1 1466 0
 10860 0b78 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10861 0b7a 6349     		ldr	r1, .L486+8
 10862 0b7c 1346     		mov	r3, r2
 10863 0b7e DB00     		lsls	r3, r3, #3
 10864 0b80 9B1A     		subs	r3, r3, r2
 10865 0b82 1B01     		lsls	r3, r3, #4
 10866 0b84 0B44     		add	r3, r3, r1
 10867 0b86 03F20F13 		addw	r3, r3, #271
 10868 0b8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10869 0b8c 032B     		cmp	r3, #3
 10870 0b8e 00F08580 		beq	.L442
1467:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 10871              		.loc 1 1467 0
 10872 0b92 5E4B     		ldr	r3, .L486+12
 10873 0b94 1B68     		ldr	r3, [r3]	@ float
 10874 0b96 FB60     		str	r3, [r7, #12]	@ float
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 248


 10875              		.loc 1 1468 0
 10876 0b98 0023     		movs	r3, #0
 10877 0b9a BB75     		strb	r3, [r7, #22]
 10878 0b9c 0EE0     		b	.L443
 10879              	.L444:
1469:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10880              		.loc 1 1469 0 discriminator 3
 10881 0b9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10882 0ba0 C3F10303 		rsb	r3, r3, #3
 10883 0ba4 07F10802 		add	r2, r7, #8
 10884 0ba8 1344     		add	r3, r3, r2
 10885 0baa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10886 0bac 07F10C01 		add	r1, r7, #12
 10887 0bb0 0A44     		add	r2, r2, r1
 10888 0bb2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10889 0bb4 1A70     		strb	r2, [r3]
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10890              		.loc 1 1468 0 discriminator 3
 10891 0bb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10892 0bb8 0133     		adds	r3, r3, #1
 10893 0bba BB75     		strb	r3, [r7, #22]
 10894              	.L443:
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10895              		.loc 1 1468 0 is_stmt 0 discriminator 1
 10896 0bbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10897 0bbe 032B     		cmp	r3, #3
 10898 0bc0 EDD9     		bls	.L444
1470:..\src/command_processing.c ****                 }
1471:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 10899              		.loc 1 1471 0 is_stmt 1
 10900 0bc2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10901 0bc4 BB68     		ldr	r3, [r7, #8]	@ float
 10902 0bc6 4FF08F41 		mov	r1, #1199570944
 10903 0bca 1846     		mov	r0, r3
 10904 0bcc FFF7FEFF 		bl	__aeabi_fmul
 10905 0bd0 0346     		mov	r3, r0
 10906 0bd2 1846     		mov	r0, r3
 10907 0bd4 FFF7FEFF 		bl	__aeabi_f2iz
 10908 0bd8 0146     		mov	r1, r0
 10909 0bda 4A4A     		ldr	r2, .L486+4
 10910 0bdc 2346     		mov	r3, r4
 10911 0bde DB00     		lsls	r3, r3, #3
 10912 0be0 1B1B     		subs	r3, r3, r4
 10913 0be2 1B01     		lsls	r3, r3, #4
 10914 0be4 1344     		add	r3, r3, r2
 10915 0be6 B033     		adds	r3, r3, #176
 10916 0be8 1960     		str	r1, [r3]
1472:..\src/command_processing.c ****                 
1473:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 10917              		.loc 1 1473 0
 10918 0bea 494B     		ldr	r3, .L486+16
 10919 0bec 1B68     		ldr	r3, [r3]	@ float
 10920 0bee FB60     		str	r3, [r7, #12]	@ float
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10921              		.loc 1 1474 0
 10922 0bf0 0023     		movs	r3, #0
 10923 0bf2 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 249


 10924 0bf4 0EE0     		b	.L445
 10925              	.L446:
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 10926              		.loc 1 1475 0 discriminator 3
 10927 0bf6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10928 0bf8 C3F10303 		rsb	r3, r3, #3
 10929 0bfc 07F10802 		add	r2, r7, #8
 10930 0c00 1344     		add	r3, r3, r2
 10931 0c02 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10932 0c04 07F10C01 		add	r1, r7, #12
 10933 0c08 0A44     		add	r2, r2, r1
 10934 0c0a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10935 0c0c 1A70     		strb	r2, [r3]
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10936              		.loc 1 1474 0 discriminator 3
 10937 0c0e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10938 0c10 0133     		adds	r3, r3, #1
 10939 0c12 BB75     		strb	r3, [r7, #22]
 10940              	.L445:
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10941              		.loc 1 1474 0 is_stmt 0 discriminator 1
 10942 0c14 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10943 0c16 032B     		cmp	r3, #3
 10944 0c18 EDD9     		bls	.L446
1476:..\src/command_processing.c ****                 }
1477:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 10945              		.loc 1 1477 0 is_stmt 1
 10946 0c1a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10947 0c1c BB68     		ldr	r3, [r7, #8]	@ float
 10948 0c1e 4FF08F41 		mov	r1, #1199570944
 10949 0c22 1846     		mov	r0, r3
 10950 0c24 FFF7FEFF 		bl	__aeabi_fmul
 10951 0c28 0346     		mov	r3, r0
 10952 0c2a 1846     		mov	r0, r3
 10953 0c2c FFF7FEFF 		bl	__aeabi_f2iz
 10954 0c30 0146     		mov	r1, r0
 10955 0c32 344A     		ldr	r2, .L486+4
 10956 0c34 2346     		mov	r3, r4
 10957 0c36 DB00     		lsls	r3, r3, #3
 10958 0c38 1B1B     		subs	r3, r3, r4
 10959 0c3a 1B01     		lsls	r3, r3, #4
 10960 0c3c 1344     		add	r3, r3, r2
 10961 0c3e B433     		adds	r3, r3, #180
 10962 0c40 1960     		str	r1, [r3]
1478:..\src/command_processing.c ****                 
1479:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 10963              		.loc 1 1479 0
 10964 0c42 344B     		ldr	r3, .L486+20
 10965 0c44 1B68     		ldr	r3, [r3]	@ float
 10966 0c46 FB60     		str	r3, [r7, #12]	@ float
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10967              		.loc 1 1480 0
 10968 0c48 0023     		movs	r3, #0
 10969 0c4a BB75     		strb	r3, [r7, #22]
 10970 0c4c 0EE0     		b	.L447
 10971              	.L448:
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 250


 10972              		.loc 1 1481 0 discriminator 3
 10973 0c4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10974 0c50 C3F10303 		rsb	r3, r3, #3
 10975 0c54 07F10802 		add	r2, r7, #8
 10976 0c58 1344     		add	r3, r3, r2
 10977 0c5a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 10978 0c5c 07F10C01 		add	r1, r7, #12
 10979 0c60 0A44     		add	r2, r2, r1
 10980 0c62 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 10981 0c64 1A70     		strb	r2, [r3]
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10982              		.loc 1 1480 0 discriminator 3
 10983 0c66 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10984 0c68 0133     		adds	r3, r3, #1
 10985 0c6a BB75     		strb	r3, [r7, #22]
 10986              	.L447:
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 10987              		.loc 1 1480 0 is_stmt 0 discriminator 1
 10988 0c6c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 10989 0c6e 032B     		cmp	r3, #3
 10990 0c70 EDD9     		bls	.L448
1482:..\src/command_processing.c ****                 }
1483:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 10991              		.loc 1 1483 0 is_stmt 1
 10992 0c72 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 10993 0c74 BB68     		ldr	r3, [r7, #8]	@ float
 10994 0c76 4FF08F41 		mov	r1, #1199570944
 10995 0c7a 1846     		mov	r0, r3
 10996 0c7c FFF7FEFF 		bl	__aeabi_fmul
 10997 0c80 0346     		mov	r3, r0
 10998 0c82 1846     		mov	r0, r3
 10999 0c84 FFF7FEFF 		bl	__aeabi_f2iz
 11000 0c88 0146     		mov	r1, r0
 11001 0c8a 1E4A     		ldr	r2, .L486+4
 11002 0c8c 2346     		mov	r3, r4
 11003 0c8e DB00     		lsls	r3, r3, #3
 11004 0c90 1B1B     		subs	r3, r3, r4
 11005 0c92 1B01     		lsls	r3, r3, #4
 11006 0c94 1344     		add	r3, r3, r2
 11007 0c96 B833     		adds	r3, r3, #184
 11008 0c98 1960     		str	r1, [r3]
1484:..\src/command_processing.c ****             }
1485:..\src/command_processing.c ****             else {
1486:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1488:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1489:..\src/command_processing.c ****                 }
1490:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1491:..\src/command_processing.c ****                 
1492:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1493:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1494:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1495:..\src/command_processing.c ****                 }
1496:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1497:..\src/command_processing.c ****                 
1498:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1499:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 251


1500:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1501:..\src/command_processing.c ****                 }
1502:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1503:..\src/command_processing.c ****             }
1504:..\src/command_processing.c ****             break;
 11009              		.loc 1 1504 0
 11010 0c9a F0E3     		b	.L416
 11011              	.L442:
1486:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11012              		.loc 1 1486 0
 11013 0c9c 1B4B     		ldr	r3, .L486+12
 11014 0c9e 1B68     		ldr	r3, [r3]	@ float
 11015 0ca0 FB60     		str	r3, [r7, #12]	@ float
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11016              		.loc 1 1487 0
 11017 0ca2 0023     		movs	r3, #0
 11018 0ca4 BB75     		strb	r3, [r7, #22]
 11019 0ca6 0EE0     		b	.L450
 11020              	.L451:
1488:..\src/command_processing.c ****                 }
 11021              		.loc 1 1488 0 discriminator 3
 11022 0ca8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11023 0caa C3F10303 		rsb	r3, r3, #3
 11024 0cae 07F10802 		add	r2, r7, #8
 11025 0cb2 1344     		add	r3, r3, r2
 11026 0cb4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11027 0cb6 07F10C01 		add	r1, r7, #12
 11028 0cba 0A44     		add	r2, r2, r1
 11029 0cbc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11030 0cbe 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11031              		.loc 1 1487 0 discriminator 3
 11032 0cc0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11033 0cc2 0133     		adds	r3, r3, #1
 11034 0cc4 BB75     		strb	r3, [r7, #22]
 11035              	.L450:
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11036              		.loc 1 1487 0 is_stmt 0 discriminator 1
 11037 0cc6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11038 0cc8 032B     		cmp	r3, #3
 11039 0cca EDD9     		bls	.L451
1490:..\src/command_processing.c ****                 
 11040              		.loc 1 1490 0 is_stmt 1
 11041 0ccc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11042 0cce BB68     		ldr	r3, [r7, #8]	@ float
 11043 0cd0 4FF08F41 		mov	r1, #1199570944
 11044 0cd4 1846     		mov	r0, r3
 11045 0cd6 FFF7FEFF 		bl	__aeabi_fmul
 11046 0cda 0346     		mov	r3, r0
 11047 0cdc 1846     		mov	r0, r3
 11048 0cde FFF7FEFF 		bl	__aeabi_f2iz
 11049 0ce2 0146     		mov	r1, r0
 11050 0ce4 074A     		ldr	r2, .L486+4
 11051 0ce6 2346     		mov	r3, r4
 11052 0ce8 DB00     		lsls	r3, r3, #3
 11053 0cea 1B1B     		subs	r3, r3, r4
 11054 0cec 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 252


 11055 0cee 1344     		add	r3, r3, r2
 11056 0cf0 C833     		adds	r3, r3, #200
 11057 0cf2 1960     		str	r1, [r3]
1492:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11058              		.loc 1 1492 0
 11059 0cf4 064B     		ldr	r3, .L486+16
 11060 0cf6 1B68     		ldr	r3, [r3]	@ float
 11061 0cf8 FB60     		str	r3, [r7, #12]	@ float
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11062              		.loc 1 1493 0
 11063 0cfa 0023     		movs	r3, #0
 11064 0cfc BB75     		strb	r3, [r7, #22]
 11065 0cfe 1AE0     		b	.L452
 11066              	.L487:
 11067              		.align	2
 11068              	.L486:
 11069 0d00 00000000 		.word	g_rx
 11070 0d04 00000000 		.word	g_mem
 11071 0d08 00000000 		.word	c_mem
 11072 0d0c 03000000 		.word	g_rx+3
 11073 0d10 07000000 		.word	g_rx+7
 11074 0d14 0B000000 		.word	g_rx+11
 11075              	.L453:
1494:..\src/command_processing.c ****                 }
 11076              		.loc 1 1494 0 discriminator 3
 11077 0d18 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11078 0d1a C3F10303 		rsb	r3, r3, #3
 11079 0d1e 07F10802 		add	r2, r7, #8
 11080 0d22 1344     		add	r3, r3, r2
 11081 0d24 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11082 0d26 07F10C01 		add	r1, r7, #12
 11083 0d2a 0A44     		add	r2, r2, r1
 11084 0d2c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11085 0d2e 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11086              		.loc 1 1493 0 discriminator 3
 11087 0d30 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11088 0d32 0133     		adds	r3, r3, #1
 11089 0d34 BB75     		strb	r3, [r7, #22]
 11090              	.L452:
1493:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11091              		.loc 1 1493 0 is_stmt 0 discriminator 1
 11092 0d36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11093 0d38 032B     		cmp	r3, #3
 11094 0d3a EDD9     		bls	.L453
1496:..\src/command_processing.c ****                 
 11095              		.loc 1 1496 0 is_stmt 1
 11096 0d3c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11097 0d3e BB68     		ldr	r3, [r7, #8]	@ float
 11098 0d40 4FF08F41 		mov	r1, #1199570944
 11099 0d44 1846     		mov	r0, r3
 11100 0d46 FFF7FEFF 		bl	__aeabi_fmul
 11101 0d4a 0346     		mov	r3, r0
 11102 0d4c 1846     		mov	r0, r3
 11103 0d4e FFF7FEFF 		bl	__aeabi_f2iz
 11104 0d52 0146     		mov	r1, r0
 11105 0d54 B74A     		ldr	r2, .L488
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 253


 11106 0d56 2346     		mov	r3, r4
 11107 0d58 DB00     		lsls	r3, r3, #3
 11108 0d5a 1B1B     		subs	r3, r3, r4
 11109 0d5c 1B01     		lsls	r3, r3, #4
 11110 0d5e 1344     		add	r3, r3, r2
 11111 0d60 CC33     		adds	r3, r3, #204
 11112 0d62 1960     		str	r1, [r3]
1498:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11113              		.loc 1 1498 0
 11114 0d64 B44B     		ldr	r3, .L488+4
 11115 0d66 1B68     		ldr	r3, [r3]	@ float
 11116 0d68 FB60     		str	r3, [r7, #12]	@ float
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11117              		.loc 1 1499 0
 11118 0d6a 0023     		movs	r3, #0
 11119 0d6c BB75     		strb	r3, [r7, #22]
 11120 0d6e 0EE0     		b	.L454
 11121              	.L455:
1500:..\src/command_processing.c ****                 }
 11122              		.loc 1 1500 0 discriminator 3
 11123 0d70 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11124 0d72 C3F10303 		rsb	r3, r3, #3
 11125 0d76 07F10802 		add	r2, r7, #8
 11126 0d7a 1344     		add	r3, r3, r2
 11127 0d7c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11128 0d7e 07F10C01 		add	r1, r7, #12
 11129 0d82 0A44     		add	r2, r2, r1
 11130 0d84 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11131 0d86 1A70     		strb	r2, [r3]
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11132              		.loc 1 1499 0 discriminator 3
 11133 0d88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11134 0d8a 0133     		adds	r3, r3, #1
 11135 0d8c BB75     		strb	r3, [r7, #22]
 11136              	.L454:
1499:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11137              		.loc 1 1499 0 is_stmt 0 discriminator 1
 11138 0d8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11139 0d90 032B     		cmp	r3, #3
 11140 0d92 EDD9     		bls	.L455
1502:..\src/command_processing.c ****             }
 11141              		.loc 1 1502 0 is_stmt 1
 11142 0d94 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11143 0d96 BB68     		ldr	r3, [r7, #8]	@ float
 11144 0d98 4FF08F41 		mov	r1, #1199570944
 11145 0d9c 1846     		mov	r0, r3
 11146 0d9e FFF7FEFF 		bl	__aeabi_fmul
 11147 0da2 0346     		mov	r3, r0
 11148 0da4 1846     		mov	r0, r3
 11149 0da6 FFF7FEFF 		bl	__aeabi_f2iz
 11150 0daa 0146     		mov	r1, r0
 11151 0dac A14A     		ldr	r2, .L488
 11152 0dae 2346     		mov	r3, r4
 11153 0db0 DB00     		lsls	r3, r3, #3
 11154 0db2 1B1B     		subs	r3, r3, r4
 11155 0db4 1B01     		lsls	r3, r3, #4
 11156 0db6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 254


 11157 0db8 D033     		adds	r3, r3, #208
 11158 0dba 1960     		str	r1, [r3]
 11159              		.loc 1 1504 0
 11160 0dbc 5FE3     		b	.L416
 11161              	.L396:
1505:..\src/command_processing.c ****             
1506:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1507:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 11162              		.loc 1 1507 0
 11163 0dbe FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11164 0dc0 9E49     		ldr	r1, .L488+8
 11165 0dc2 1346     		mov	r3, r2
 11166 0dc4 DB00     		lsls	r3, r3, #3
 11167 0dc6 9B1A     		subs	r3, r3, r2
 11168 0dc8 1B01     		lsls	r3, r3, #4
 11169 0dca 0B44     		add	r3, r3, r1
 11170 0dcc 03F20F13 		addw	r3, r3, #271
 11171 0dd0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11172 0dd2 032B     		cmp	r3, #3
 11173 0dd4 00F08580 		beq	.L456
1508:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 11174              		.loc 1 1508 0
 11175 0dd8 994B     		ldr	r3, .L488+12
 11176 0dda 1B68     		ldr	r3, [r3]	@ float
 11177 0ddc FB60     		str	r3, [r7, #12]	@ float
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11178              		.loc 1 1509 0
 11179 0dde 0023     		movs	r3, #0
 11180 0de0 BB75     		strb	r3, [r7, #22]
 11181 0de2 0EE0     		b	.L457
 11182              	.L458:
1510:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11183              		.loc 1 1510 0 discriminator 3
 11184 0de4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11185 0de6 C3F10303 		rsb	r3, r3, #3
 11186 0dea 07F10802 		add	r2, r7, #8
 11187 0dee 1344     		add	r3, r3, r2
 11188 0df0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11189 0df2 07F10C01 		add	r1, r7, #12
 11190 0df6 0A44     		add	r2, r2, r1
 11191 0df8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11192 0dfa 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11193              		.loc 1 1509 0 discriminator 3
 11194 0dfc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11195 0dfe 0133     		adds	r3, r3, #1
 11196 0e00 BB75     		strb	r3, [r7, #22]
 11197              	.L457:
1509:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11198              		.loc 1 1509 0 is_stmt 0 discriminator 1
 11199 0e02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11200 0e04 032B     		cmp	r3, #3
 11201 0e06 EDD9     		bls	.L458
1511:..\src/command_processing.c ****                 }
1512:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 11202              		.loc 1 1512 0 is_stmt 1
 11203 0e08 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 255


 11204 0e0a BB68     		ldr	r3, [r7, #8]	@ float
 11205 0e0c 4FF08F41 		mov	r1, #1199570944
 11206 0e10 1846     		mov	r0, r3
 11207 0e12 FFF7FEFF 		bl	__aeabi_fmul
 11208 0e16 0346     		mov	r3, r0
 11209 0e18 1846     		mov	r0, r3
 11210 0e1a FFF7FEFF 		bl	__aeabi_f2iz
 11211 0e1e 0146     		mov	r1, r0
 11212 0e20 844A     		ldr	r2, .L488
 11213 0e22 2346     		mov	r3, r4
 11214 0e24 DB00     		lsls	r3, r3, #3
 11215 0e26 1B1B     		subs	r3, r3, r4
 11216 0e28 1B01     		lsls	r3, r3, #4
 11217 0e2a 1344     		add	r3, r3, r2
 11218 0e2c BC33     		adds	r3, r3, #188
 11219 0e2e 1960     		str	r1, [r3]
1513:..\src/command_processing.c ****                 
1514:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 11220              		.loc 1 1514 0
 11221 0e30 844B     		ldr	r3, .L488+16
 11222 0e32 1B68     		ldr	r3, [r3]	@ float
 11223 0e34 FB60     		str	r3, [r7, #12]	@ float
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11224              		.loc 1 1515 0
 11225 0e36 0023     		movs	r3, #0
 11226 0e38 BB75     		strb	r3, [r7, #22]
 11227 0e3a 0EE0     		b	.L459
 11228              	.L460:
1516:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11229              		.loc 1 1516 0 discriminator 3
 11230 0e3c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11231 0e3e C3F10303 		rsb	r3, r3, #3
 11232 0e42 07F10802 		add	r2, r7, #8
 11233 0e46 1344     		add	r3, r3, r2
 11234 0e48 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11235 0e4a 07F10C01 		add	r1, r7, #12
 11236 0e4e 0A44     		add	r2, r2, r1
 11237 0e50 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11238 0e52 1A70     		strb	r2, [r3]
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11239              		.loc 1 1515 0 discriminator 3
 11240 0e54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11241 0e56 0133     		adds	r3, r3, #1
 11242 0e58 BB75     		strb	r3, [r7, #22]
 11243              	.L459:
1515:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11244              		.loc 1 1515 0 is_stmt 0 discriminator 1
 11245 0e5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11246 0e5c 032B     		cmp	r3, #3
 11247 0e5e EDD9     		bls	.L460
1517:..\src/command_processing.c ****                 }
1518:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 11248              		.loc 1 1518 0 is_stmt 1
 11249 0e60 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11250 0e62 BB68     		ldr	r3, [r7, #8]	@ float
 11251 0e64 4FF08F41 		mov	r1, #1199570944
 11252 0e68 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 256


 11253 0e6a FFF7FEFF 		bl	__aeabi_fmul
 11254 0e6e 0346     		mov	r3, r0
 11255 0e70 1846     		mov	r0, r3
 11256 0e72 FFF7FEFF 		bl	__aeabi_f2iz
 11257 0e76 0146     		mov	r1, r0
 11258 0e78 6E4A     		ldr	r2, .L488
 11259 0e7a 2346     		mov	r3, r4
 11260 0e7c DB00     		lsls	r3, r3, #3
 11261 0e7e 1B1B     		subs	r3, r3, r4
 11262 0e80 1B01     		lsls	r3, r3, #4
 11263 0e82 1344     		add	r3, r3, r2
 11264 0e84 C033     		adds	r3, r3, #192
 11265 0e86 1960     		str	r1, [r3]
1519:..\src/command_processing.c ****                 
1520:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 11266              		.loc 1 1520 0
 11267 0e88 6B4B     		ldr	r3, .L488+4
 11268 0e8a 1B68     		ldr	r3, [r3]	@ float
 11269 0e8c FB60     		str	r3, [r7, #12]	@ float
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11270              		.loc 1 1521 0
 11271 0e8e 0023     		movs	r3, #0
 11272 0e90 BB75     		strb	r3, [r7, #22]
 11273 0e92 0EE0     		b	.L461
 11274              	.L462:
1522:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11275              		.loc 1 1522 0 discriminator 3
 11276 0e94 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11277 0e96 C3F10303 		rsb	r3, r3, #3
 11278 0e9a 07F10802 		add	r2, r7, #8
 11279 0e9e 1344     		add	r3, r3, r2
 11280 0ea0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11281 0ea2 07F10C01 		add	r1, r7, #12
 11282 0ea6 0A44     		add	r2, r2, r1
 11283 0ea8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11284 0eaa 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11285              		.loc 1 1521 0 discriminator 3
 11286 0eac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11287 0eae 0133     		adds	r3, r3, #1
 11288 0eb0 BB75     		strb	r3, [r7, #22]
 11289              	.L461:
1521:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11290              		.loc 1 1521 0 is_stmt 0 discriminator 1
 11291 0eb2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11292 0eb4 032B     		cmp	r3, #3
 11293 0eb6 EDD9     		bls	.L462
1523:..\src/command_processing.c ****                 }
1524:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 11294              		.loc 1 1524 0 is_stmt 1
 11295 0eb8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11296 0eba BB68     		ldr	r3, [r7, #8]	@ float
 11297 0ebc 4FF08F41 		mov	r1, #1199570944
 11298 0ec0 1846     		mov	r0, r3
 11299 0ec2 FFF7FEFF 		bl	__aeabi_fmul
 11300 0ec6 0346     		mov	r3, r0
 11301 0ec8 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 257


 11302 0eca FFF7FEFF 		bl	__aeabi_f2iz
 11303 0ece 0146     		mov	r1, r0
 11304 0ed0 584A     		ldr	r2, .L488
 11305 0ed2 2346     		mov	r3, r4
 11306 0ed4 DB00     		lsls	r3, r3, #3
 11307 0ed6 1B1B     		subs	r3, r3, r4
 11308 0ed8 1B01     		lsls	r3, r3, #4
 11309 0eda 1344     		add	r3, r3, r2
 11310 0edc C433     		adds	r3, r3, #196
 11311 0ede 1960     		str	r1, [r3]
1525:..\src/command_processing.c ****             }
1526:..\src/command_processing.c ****             else {
1527:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1528:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1529:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1530:..\src/command_processing.c ****                 }
1531:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1532:..\src/command_processing.c ****                 
1533:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1534:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1535:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1536:..\src/command_processing.c ****                 }
1537:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1538:..\src/command_processing.c ****                 
1539:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1540:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1541:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1542:..\src/command_processing.c ****                 }
1543:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1544:..\src/command_processing.c ****             }            
1545:..\src/command_processing.c ****             break;  
 11312              		.loc 1 1545 0
 11313 0ee0 CDE2     		b	.L416
 11314              	.L456:
1527:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11315              		.loc 1 1527 0
 11316 0ee2 574B     		ldr	r3, .L488+12
 11317 0ee4 1B68     		ldr	r3, [r3]	@ float
 11318 0ee6 FB60     		str	r3, [r7, #12]	@ float
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11319              		.loc 1 1528 0
 11320 0ee8 0023     		movs	r3, #0
 11321 0eea BB75     		strb	r3, [r7, #22]
 11322 0eec 0EE0     		b	.L464
 11323              	.L465:
1529:..\src/command_processing.c ****                 }
 11324              		.loc 1 1529 0 discriminator 3
 11325 0eee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11326 0ef0 C3F10303 		rsb	r3, r3, #3
 11327 0ef4 07F10802 		add	r2, r7, #8
 11328 0ef8 1344     		add	r3, r3, r2
 11329 0efa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11330 0efc 07F10C01 		add	r1, r7, #12
 11331 0f00 0A44     		add	r2, r2, r1
 11332 0f02 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11333 0f04 1A70     		strb	r2, [r3]
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 258


 11334              		.loc 1 1528 0 discriminator 3
 11335 0f06 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11336 0f08 0133     		adds	r3, r3, #1
 11337 0f0a BB75     		strb	r3, [r7, #22]
 11338              	.L464:
1528:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11339              		.loc 1 1528 0 is_stmt 0 discriminator 1
 11340 0f0c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11341 0f0e 032B     		cmp	r3, #3
 11342 0f10 EDD9     		bls	.L465
1531:..\src/command_processing.c ****                 
 11343              		.loc 1 1531 0 is_stmt 1
 11344 0f12 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11345 0f14 BB68     		ldr	r3, [r7, #8]	@ float
 11346 0f16 4FF08F41 		mov	r1, #1199570944
 11347 0f1a 1846     		mov	r0, r3
 11348 0f1c FFF7FEFF 		bl	__aeabi_fmul
 11349 0f20 0346     		mov	r3, r0
 11350 0f22 1846     		mov	r0, r3
 11351 0f24 FFF7FEFF 		bl	__aeabi_f2iz
 11352 0f28 0146     		mov	r1, r0
 11353 0f2a 424A     		ldr	r2, .L488
 11354 0f2c 2346     		mov	r3, r4
 11355 0f2e DB00     		lsls	r3, r3, #3
 11356 0f30 1B1B     		subs	r3, r3, r4
 11357 0f32 1B01     		lsls	r3, r3, #4
 11358 0f34 1344     		add	r3, r3, r2
 11359 0f36 D433     		adds	r3, r3, #212
 11360 0f38 1960     		str	r1, [r3]
1533:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11361              		.loc 1 1533 0
 11362 0f3a 424B     		ldr	r3, .L488+16
 11363 0f3c 1B68     		ldr	r3, [r3]	@ float
 11364 0f3e FB60     		str	r3, [r7, #12]	@ float
1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11365              		.loc 1 1534 0
 11366 0f40 0023     		movs	r3, #0
 11367 0f42 BB75     		strb	r3, [r7, #22]
 11368 0f44 0EE0     		b	.L466
 11369              	.L467:
1535:..\src/command_processing.c ****                 }
 11370              		.loc 1 1535 0 discriminator 3
 11371 0f46 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11372 0f48 C3F10303 		rsb	r3, r3, #3
 11373 0f4c 07F10802 		add	r2, r7, #8
 11374 0f50 1344     		add	r3, r3, r2
 11375 0f52 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11376 0f54 07F10C01 		add	r1, r7, #12
 11377 0f58 0A44     		add	r2, r2, r1
 11378 0f5a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11379 0f5c 1A70     		strb	r2, [r3]
1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11380              		.loc 1 1534 0 discriminator 3
 11381 0f5e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11382 0f60 0133     		adds	r3, r3, #1
 11383 0f62 BB75     		strb	r3, [r7, #22]
 11384              	.L466:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 259


1534:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11385              		.loc 1 1534 0 is_stmt 0 discriminator 1
 11386 0f64 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11387 0f66 032B     		cmp	r3, #3
 11388 0f68 EDD9     		bls	.L467
1537:..\src/command_processing.c ****                 
 11389              		.loc 1 1537 0 is_stmt 1
 11390 0f6a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11391 0f6c BB68     		ldr	r3, [r7, #8]	@ float
 11392 0f6e 4FF08F41 		mov	r1, #1199570944
 11393 0f72 1846     		mov	r0, r3
 11394 0f74 FFF7FEFF 		bl	__aeabi_fmul
 11395 0f78 0346     		mov	r3, r0
 11396 0f7a 1846     		mov	r0, r3
 11397 0f7c FFF7FEFF 		bl	__aeabi_f2iz
 11398 0f80 0146     		mov	r1, r0
 11399 0f82 2C4A     		ldr	r2, .L488
 11400 0f84 2346     		mov	r3, r4
 11401 0f86 DB00     		lsls	r3, r3, #3
 11402 0f88 1B1B     		subs	r3, r3, r4
 11403 0f8a 1B01     		lsls	r3, r3, #4
 11404 0f8c 1344     		add	r3, r3, r2
 11405 0f8e D833     		adds	r3, r3, #216
 11406 0f90 1960     		str	r1, [r3]
1539:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 11407              		.loc 1 1539 0
 11408 0f92 294B     		ldr	r3, .L488+4
 11409 0f94 1B68     		ldr	r3, [r3]	@ float
 11410 0f96 FB60     		str	r3, [r7, #12]	@ float
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11411              		.loc 1 1540 0
 11412 0f98 0023     		movs	r3, #0
 11413 0f9a BB75     		strb	r3, [r7, #22]
 11414 0f9c 0EE0     		b	.L468
 11415              	.L469:
1541:..\src/command_processing.c ****                 }
 11416              		.loc 1 1541 0 discriminator 3
 11417 0f9e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11418 0fa0 C3F10303 		rsb	r3, r3, #3
 11419 0fa4 07F10802 		add	r2, r7, #8
 11420 0fa8 1344     		add	r3, r3, r2
 11421 0faa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 11422 0fac 07F10C01 		add	r1, r7, #12
 11423 0fb0 0A44     		add	r2, r2, r1
 11424 0fb2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11425 0fb4 1A70     		strb	r2, [r3]
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11426              		.loc 1 1540 0 discriminator 3
 11427 0fb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11428 0fb8 0133     		adds	r3, r3, #1
 11429 0fba BB75     		strb	r3, [r7, #22]
 11430              	.L468:
1540:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 11431              		.loc 1 1540 0 is_stmt 0 discriminator 1
 11432 0fbc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 11433 0fbe 032B     		cmp	r3, #3
 11434 0fc0 EDD9     		bls	.L469
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 260


1543:..\src/command_processing.c ****             }            
 11435              		.loc 1 1543 0 is_stmt 1
 11436 0fc2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 11437 0fc4 BB68     		ldr	r3, [r7, #8]	@ float
 11438 0fc6 4FF08F41 		mov	r1, #1199570944
 11439 0fca 1846     		mov	r0, r3
 11440 0fcc FFF7FEFF 		bl	__aeabi_fmul
 11441 0fd0 0346     		mov	r3, r0
 11442 0fd2 1846     		mov	r0, r3
 11443 0fd4 FFF7FEFF 		bl	__aeabi_f2iz
 11444 0fd8 0146     		mov	r1, r0
 11445 0fda 164A     		ldr	r2, .L488
 11446 0fdc 2346     		mov	r3, r4
 11447 0fde DB00     		lsls	r3, r3, #3
 11448 0fe0 1B1B     		subs	r3, r3, r4
 11449 0fe2 1B01     		lsls	r3, r3, #4
 11450 0fe4 1344     		add	r3, r3, r2
 11451 0fe6 DC33     		adds	r3, r3, #220
 11452 0fe8 1960     		str	r1, [r3]
 11453              		.loc 1 1545 0
 11454 0fea 48E2     		b	.L416
 11455              	.L397:
1546:..\src/command_processing.c ****             
1547:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1548:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 11456              		.loc 1 1548 0
 11457 0fec FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11458 0fee 164B     		ldr	r3, .L488+20
 11459 0ff0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11460 0ff2 1049     		ldr	r1, .L488
 11461 0ff4 1346     		mov	r3, r2
 11462 0ff6 DB00     		lsls	r3, r3, #3
 11463 0ff8 9B1A     		subs	r3, r3, r2
 11464 0ffa 1B01     		lsls	r3, r3, #4
 11465 0ffc 0B44     		add	r3, r3, r1
 11466 0ffe 03F58773 		add	r3, r3, #270
 11467 1002 0246     		mov	r2, r0
 11468 1004 1A70     		strb	r2, [r3]
1549:..\src/command_processing.c ****             
1550:..\src/command_processing.c ****             // Hold the actual position
1551:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 11469              		.loc 1 1551 0
 11470 1006 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11471 1008 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11472 100a 0A48     		ldr	r0, .L488
 11473 100c 1346     		mov	r3, r2
 11474 100e DB00     		lsls	r3, r3, #3
 11475 1010 9B1A     		subs	r3, r3, r2
 11476 1012 1B01     		lsls	r3, r3, #4
 11477 1014 0344     		add	r3, r3, r0
 11478 1016 03F58873 		add	r3, r3, #272
 11479 101a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11480 101c 1846     		mov	r0, r3
 11481 101e 0B4A     		ldr	r2, .L488+24
 11482 1020 3423     		movs	r3, #52
 11483 1022 03FB00F3 		mul	r3, r3, r0
 11484 1026 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 261


 11485 1028 1A68     		ldr	r2, [r3]
 11486 102a 0948     		ldr	r0, .L488+28
 11487 102c 0B01     		lsls	r3, r1, #4
 11488 102e 0344     		add	r3, r3, r0
 11489 1030 1A60     		str	r2, [r3]
1552:..\src/command_processing.c ****             break;   
 11490              		.loc 1 1552 0
 11491 1032 24E2     		b	.L416
 11492              	.L489:
 11493              		.align	2
 11494              	.L488:
 11495 1034 00000000 		.word	g_mem
 11496 1038 0B000000 		.word	g_rx+11
 11497 103c 00000000 		.word	c_mem
 11498 1040 03000000 		.word	g_rx+3
 11499 1044 07000000 		.word	g_rx+7
 11500 1048 00000000 		.word	g_rx
 11501 104c 00000000 		.word	g_meas
 11502 1050 00000000 		.word	g_refNew
 11503              	.L398:
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1555:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 11504              		.loc 1 1555 0
 11505 1054 0023     		movs	r3, #0
 11506 1056 FB75     		strb	r3, [r7, #23]
 11507 1058 7EE0     		b	.L470
 11508              	.L471:
1556:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11509              		.loc 1 1556 0 discriminator 3
 11510 105a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11511 105c 9049     		ldr	r1, .L490
 11512 105e 1346     		mov	r3, r2
 11513 1060 DB00     		lsls	r3, r3, #3
 11514 1062 9B1A     		subs	r3, r3, r2
 11515 1064 1B01     		lsls	r3, r3, #4
 11516 1066 0B44     		add	r3, r3, r1
 11517 1068 03F58873 		add	r3, r3, #272
 11518 106c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11519 106e 1C46     		mov	r4, r3
 11520 1070 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11521 1072 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11522 1074 5B00     		lsls	r3, r3, #1
 11523 1076 0333     		adds	r3, r3, #3
 11524 1078 8A49     		ldr	r1, .L490+4
 11525 107a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11526 107c 1B02     		lsls	r3, r3, #8
 11527 107e 19B2     		sxth	r1, r3
 11528 1080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11529 1082 0233     		adds	r3, r3, #2
 11530 1084 5B00     		lsls	r3, r3, #1
 11531 1086 8748     		ldr	r0, .L490+4
 11532 1088 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 11533 108a 1BB2     		sxth	r3, r3
 11534 108c 0B43     		orrs	r3, r3, r1
 11535 108e 1BB2     		sxth	r3, r3
 11536 1090 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 262


 11537 1092 8349     		ldr	r1, .L490
 11538 1094 2346     		mov	r3, r4
 11539 1096 5B00     		lsls	r3, r3, #1
 11540 1098 2344     		add	r3, r3, r4
 11541 109a 9B00     		lsls	r3, r3, #2
 11542 109c 1344     		add	r3, r3, r2
 11543 109e 6633     		adds	r3, r3, #102
 11544 10a0 41F82300 		str	r0, [r1, r3, lsl #2]
1557:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 11545              		.loc 1 1557 0 discriminator 3
 11546 10a4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11547 10a6 7E49     		ldr	r1, .L490
 11548 10a8 1346     		mov	r3, r2
 11549 10aa DB00     		lsls	r3, r3, #3
 11550 10ac 9B1A     		subs	r3, r3, r2
 11551 10ae 1B01     		lsls	r3, r3, #4
 11552 10b0 0B44     		add	r3, r3, r1
 11553 10b2 03F58873 		add	r3, r3, #272
 11554 10b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11555 10b8 1D46     		mov	r5, r3
 11556 10ba F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 11557 10bc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11558 10be 7848     		ldr	r0, .L490
 11559 10c0 1346     		mov	r3, r2
 11560 10c2 DB00     		lsls	r3, r3, #3
 11561 10c4 9B1A     		subs	r3, r3, r2
 11562 10c6 1B01     		lsls	r3, r3, #4
 11563 10c8 0344     		add	r3, r3, r0
 11564 10ca 03F58873 		add	r3, r3, #272
 11565 10ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11566 10d0 1C46     		mov	r4, r3
 11567 10d2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11568 10d4 7248     		ldr	r0, .L490
 11569 10d6 2346     		mov	r3, r4
 11570 10d8 5B00     		lsls	r3, r3, #1
 11571 10da 2344     		add	r3, r3, r4
 11572 10dc 9B00     		lsls	r3, r3, #2
 11573 10de 1344     		add	r3, r3, r2
 11574 10e0 6633     		adds	r3, r3, #102
 11575 10e2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 11576 10e6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11577 10e8 6D4C     		ldr	r4, .L490
 11578 10ea 1346     		mov	r3, r2
 11579 10ec DB00     		lsls	r3, r3, #3
 11580 10ee 9B1A     		subs	r3, r3, r2
 11581 10f0 1B01     		lsls	r3, r3, #4
 11582 10f2 2344     		add	r3, r3, r4
 11583 10f4 03F58873 		add	r3, r3, #272
 11584 10f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11585 10fa 1E46     		mov	r6, r3
 11586 10fc FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 11587 10fe 684C     		ldr	r4, .L490
 11588 1100 3346     		mov	r3, r6
 11589 1102 5B00     		lsls	r3, r3, #1
 11590 1104 3344     		add	r3, r3, r6
 11591 1106 1B01     		lsls	r3, r3, #4
 11592 1108 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 263


 11593 110a 1344     		add	r3, r3, r2
 11594 110c 03F29513 		addw	r3, r3, #405
 11595 1110 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11596 1112 00FA03F2 		lsl	r2, r0, r3
 11597 1116 6248     		ldr	r0, .L490
 11598 1118 2B46     		mov	r3, r5
 11599 111a 5B00     		lsls	r3, r3, #1
 11600 111c 2B44     		add	r3, r3, r5
 11601 111e 9B00     		lsls	r3, r3, #2
 11602 1120 0B44     		add	r3, r3, r1
 11603 1122 6633     		adds	r3, r3, #102
 11604 1124 40F82320 		str	r2, [r0, r3, lsl #2]
1558:..\src/command_processing.c **** 
1559:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 11605              		.loc 1 1559 0 discriminator 3
 11606 1128 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11607 112a 5D49     		ldr	r1, .L490
 11608 112c 1346     		mov	r3, r2
 11609 112e DB00     		lsls	r3, r3, #3
 11610 1130 9B1A     		subs	r3, r3, r2
 11611 1132 1B01     		lsls	r3, r3, #4
 11612 1134 0B44     		add	r3, r3, r1
 11613 1136 03F58873 		add	r3, r3, #272
 11614 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11615 113c 1846     		mov	r0, r3
 11616 113e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11617 1140 5949     		ldr	r1, .L490+8
 11618 1142 3422     		movs	r2, #52
 11619 1144 02FB00F2 		mul	r2, r2, r0
 11620 1148 0A44     		add	r2, r2, r1
 11621 114a 1344     		add	r3, r3, r2
 11622 114c 1833     		adds	r3, r3, #24
 11623 114e 0022     		movs	r2, #0
 11624 1150 1A70     		strb	r2, [r3]
1555:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11625              		.loc 1 1555 0 discriminator 3
 11626 1152 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11627 1154 0133     		adds	r3, r3, #1
 11628 1156 FB75     		strb	r3, [r7, #23]
 11629              	.L470:
1555:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 11630              		.loc 1 1555 0 is_stmt 0 discriminator 1
 11631 1158 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 11632 115a 022B     		cmp	r3, #2
 11633 115c 7FF67DAF 		bls	.L471
1560:..\src/command_processing.c ****             }
1561:..\src/command_processing.c ****             reset_last_value_flag = 1;
 11634              		.loc 1 1561 0 is_stmt 1
 11635 1160 524B     		ldr	r3, .L490+12
 11636 1162 0122     		movs	r2, #1
 11637 1164 1A70     		strb	r2, [r3]
1562:..\src/command_processing.c ****             break;
 11638              		.loc 1 1562 0
 11639 1166 8AE1     		b	.L416
 11640              	.L399:
1563:..\src/command_processing.c ****     
1564:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 264


1565:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 11641              		.loc 1 1565 0
 11642 1168 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11643 116a 4E4B     		ldr	r3, .L490+4
 11644 116c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 11645 116e 1906     		lsls	r1, r3, #24
 11646 1170 4C4B     		ldr	r3, .L490+4
 11647 1172 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 11648 1174 1B04     		lsls	r3, r3, #16
 11649 1176 1943     		orrs	r1, r1, r3
 11650 1178 4A4B     		ldr	r3, .L490+4
 11651 117a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 11652 117c 1B02     		lsls	r3, r3, #8
 11653 117e 0B43     		orrs	r3, r3, r1
 11654 1180 4849     		ldr	r1, .L490+4
 11655 1182 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 11656 1184 1943     		orrs	r1, r1, r3
 11657 1186 4648     		ldr	r0, .L490
 11658 1188 1346     		mov	r3, r2
 11659 118a DB00     		lsls	r3, r3, #3
 11660 118c 9B1A     		subs	r3, r3, r2
 11661 118e 1B01     		lsls	r3, r3, #4
 11662 1190 0344     		add	r3, r3, r0
 11663 1192 E433     		adds	r3, r3, #228
 11664 1194 1960     		str	r1, [r3]
1566:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 11665              		.loc 1 1566 0
 11666 1196 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11667 1198 424B     		ldr	r3, .L490+4
 11668 119a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 11669 119c 1906     		lsls	r1, r3, #24
 11670 119e 414B     		ldr	r3, .L490+4
 11671 11a0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 11672 11a2 1B04     		lsls	r3, r3, #16
 11673 11a4 1943     		orrs	r1, r1, r3
 11674 11a6 3F4B     		ldr	r3, .L490+4
 11675 11a8 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 11676 11aa 1B02     		lsls	r3, r3, #8
 11677 11ac 0B43     		orrs	r3, r3, r1
 11678 11ae 3D49     		ldr	r1, .L490+4
 11679 11b0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 11680 11b2 1943     		orrs	r1, r1, r3
 11681 11b4 3A48     		ldr	r0, .L490
 11682 11b6 1346     		mov	r3, r2
 11683 11b8 DB00     		lsls	r3, r3, #3
 11684 11ba 9B1A     		subs	r3, r3, r2
 11685 11bc 1B01     		lsls	r3, r3, #4
 11686 11be 0344     		add	r3, r3, r0
 11687 11c0 E833     		adds	r3, r3, #232
 11688 11c2 1960     		str	r1, [r3]
1567:..\src/command_processing.c **** 
1568:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 11689              		.loc 1 1568 0
 11690 11c4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11691 11c6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11692 11c8 3548     		ldr	r0, .L490
 11693 11ca 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 265


 11694 11cc DB00     		lsls	r3, r3, #3
 11695 11ce 5B1A     		subs	r3, r3, r1
 11696 11d0 1B01     		lsls	r3, r3, #4
 11697 11d2 0344     		add	r3, r3, r0
 11698 11d4 E433     		adds	r3, r3, #228
 11699 11d6 1868     		ldr	r0, [r3]
 11700 11d8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11701 11da 314C     		ldr	r4, .L490
 11702 11dc 0B46     		mov	r3, r1
 11703 11de DB00     		lsls	r3, r3, #3
 11704 11e0 5B1A     		subs	r3, r3, r1
 11705 11e2 1B01     		lsls	r3, r3, #4
 11706 11e4 2344     		add	r3, r3, r4
 11707 11e6 03F58873 		add	r3, r3, #272
 11708 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11709 11ec 1C46     		mov	r4, r3
 11710 11ee 2C49     		ldr	r1, .L490
 11711 11f0 2346     		mov	r3, r4
 11712 11f2 5B00     		lsls	r3, r3, #1
 11713 11f4 2344     		add	r3, r3, r4
 11714 11f6 1B01     		lsls	r3, r3, #4
 11715 11f8 0B44     		add	r3, r3, r1
 11716 11fa 03F29513 		addw	r3, r3, #405
 11717 11fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11718 1200 00FA03F1 		lsl	r1, r0, r3
 11719 1204 2648     		ldr	r0, .L490
 11720 1206 1346     		mov	r3, r2
 11721 1208 DB00     		lsls	r3, r3, #3
 11722 120a 9B1A     		subs	r3, r3, r2
 11723 120c 1B01     		lsls	r3, r3, #4
 11724 120e 0344     		add	r3, r3, r0
 11725 1210 E433     		adds	r3, r3, #228
 11726 1212 1960     		str	r1, [r3]
1569:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 11727              		.loc 1 1569 0
 11728 1214 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11729 1216 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11730 1218 2148     		ldr	r0, .L490
 11731 121a 0B46     		mov	r3, r1
 11732 121c DB00     		lsls	r3, r3, #3
 11733 121e 5B1A     		subs	r3, r3, r1
 11734 1220 1B01     		lsls	r3, r3, #4
 11735 1222 0344     		add	r3, r3, r0
 11736 1224 E833     		adds	r3, r3, #232
 11737 1226 1868     		ldr	r0, [r3]
 11738 1228 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 11739 122a 1D4C     		ldr	r4, .L490
 11740 122c 0B46     		mov	r3, r1
 11741 122e DB00     		lsls	r3, r3, #3
 11742 1230 5B1A     		subs	r3, r3, r1
 11743 1232 1B01     		lsls	r3, r3, #4
 11744 1234 2344     		add	r3, r3, r4
 11745 1236 03F58873 		add	r3, r3, #272
 11746 123a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11747 123c 1C46     		mov	r4, r3
 11748 123e 1849     		ldr	r1, .L490
 11749 1240 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 266


 11750 1242 5B00     		lsls	r3, r3, #1
 11751 1244 2344     		add	r3, r3, r4
 11752 1246 1B01     		lsls	r3, r3, #4
 11753 1248 0B44     		add	r3, r3, r1
 11754 124a 03F29513 		addw	r3, r3, #405
 11755 124e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11756 1250 00FA03F1 		lsl	r1, r0, r3
 11757 1254 1248     		ldr	r0, .L490
 11758 1256 1346     		mov	r3, r2
 11759 1258 DB00     		lsls	r3, r3, #3
 11760 125a 9B1A     		subs	r3, r3, r2
 11761 125c 1B01     		lsls	r3, r3, #4
 11762 125e 0344     		add	r3, r3, r0
 11763 1260 E833     		adds	r3, r3, #232
 11764 1262 1960     		str	r1, [r3]
1570:..\src/command_processing.c ****             break;
 11765              		.loc 1 1570 0
 11766 1264 0BE1     		b	.L416
 11767              	.L400:
1571:..\src/command_processing.c ****             
1572:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1573:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 11768              		.loc 1 1573 0
 11769 1266 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11770 1268 0E4B     		ldr	r3, .L490+4
 11771 126a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11772 126c 0C49     		ldr	r1, .L490
 11773 126e 1346     		mov	r3, r2
 11774 1270 DB00     		lsls	r3, r3, #3
 11775 1272 9B1A     		subs	r3, r3, r2
 11776 1274 1B01     		lsls	r3, r3, #4
 11777 1276 0B44     		add	r3, r3, r1
 11778 1278 E233     		adds	r3, r3, #226
 11779 127a 0246     		mov	r2, r0
 11780 127c 1A70     		strb	r2, [r3]
1574:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 11781              		.loc 1 1574 0
 11782 127e 084B     		ldr	r3, .L490
 11783 1280 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 11784 1284 5B00     		lsls	r3, r3, #1
 11785 1286 5AB2     		sxtb	r2, r3
 11786 1288 054B     		ldr	r3, .L490
 11787 128a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 11788 128e 5BB2     		sxtb	r3, r3
 11789 1290 1343     		orrs	r3, r3, r2
 11790 1292 5BB2     		sxtb	r3, r3
 11791 1294 DBB2     		uxtb	r3, r3
 11792 1296 1846     		mov	r0, r3
 11793 1298 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1575:..\src/command_processing.c ****             break;
 11794              		.loc 1 1575 0
 11795 129c EFE0     		b	.L416
 11796              	.L491:
 11797 129e 00BF     		.align	2
 11798              	.L490:
 11799 12a0 00000000 		.word	g_mem
 11800 12a4 00000000 		.word	g_rx
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 267


 11801 12a8 00000000 		.word	g_meas
 11802 12ac 00000000 		.word	reset_last_value_flag
 11803              	.L401:
1576:..\src/command_processing.c **** 
1577:..\src/command_processing.c ****         case 75:        // Device type
1578:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 11804              		.loc 1 1578 0
 11805 12b0 754B     		ldr	r3, .L492
 11806 12b2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11807 12b4 754B     		ldr	r3, .L492+4
 11808 12b6 83F8AC20 		strb	r2, [r3, #172]
1579:..\src/command_processing.c ****             
1580:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 11809              		.loc 1 1580 0
 11810 12ba 744B     		ldr	r3, .L492+4
 11811 12bc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11812 12c0 002B     		cmp	r3, #0
 11813 12c2 40F09D80 		bne	.L472
1581:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11814              		.loc 1 1581 0
 11815 12c6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11816 12c8 7049     		ldr	r1, .L492+4
 11817 12ca 1346     		mov	r3, r2
 11818 12cc DB00     		lsls	r3, r3, #3
 11819 12ce 9B1A     		subs	r3, r3, r2
 11820 12d0 1B01     		lsls	r3, r3, #4
 11821 12d2 0B44     		add	r3, r3, r1
 11822 12d4 03F58873 		add	r3, r3, #272
 11823 12d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11824 12da 1946     		mov	r1, r3
 11825 12dc 6B4A     		ldr	r2, .L492+4
 11826 12de 0B46     		mov	r3, r1
 11827 12e0 5B00     		lsls	r3, r3, #1
 11828 12e2 0B44     		add	r3, r3, r1
 11829 12e4 1B01     		lsls	r3, r3, #4
 11830 12e6 1344     		add	r3, r3, r2
 11831 12e8 03F5D873 		add	r3, r3, #432
 11832 12ec 0122     		movs	r2, #1
 11833 12ee 1A70     		strb	r2, [r3]
1582:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 11834              		.loc 1 1582 0
 11835 12f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11836 12f2 6649     		ldr	r1, .L492+4
 11837 12f4 1346     		mov	r3, r2
 11838 12f6 DB00     		lsls	r3, r3, #3
 11839 12f8 9B1A     		subs	r3, r3, r2
 11840 12fa 1B01     		lsls	r3, r3, #4
 11841 12fc 0B44     		add	r3, r3, r1
 11842 12fe 03F58873 		add	r3, r3, #272
 11843 1302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11844 1304 1946     		mov	r1, r3
 11845 1306 614A     		ldr	r2, .L492+4
 11846 1308 0B46     		mov	r3, r1
 11847 130a 5B00     		lsls	r3, r3, #1
 11848 130c 0B44     		add	r3, r3, r1
 11849 130e 1B01     		lsls	r3, r3, #4
 11850 1310 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 268


 11851 1312 03F2B513 		addw	r3, r3, #437
 11852 1316 2322     		movs	r2, #35
 11853 1318 1A70     		strb	r2, [r3]
1583:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 11854              		.loc 1 1583 0
 11855 131a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11856 131c 5B49     		ldr	r1, .L492+4
 11857 131e 1346     		mov	r3, r2
 11858 1320 DB00     		lsls	r3, r3, #3
 11859 1322 9B1A     		subs	r3, r3, r2
 11860 1324 1B01     		lsls	r3, r3, #4
 11861 1326 0B44     		add	r3, r3, r1
 11862 1328 03F58873 		add	r3, r3, #272
 11863 132c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11864 132e 1946     		mov	r1, r3
 11865 1330 564A     		ldr	r2, .L492+4
 11866 1332 0B46     		mov	r3, r1
 11867 1334 5B00     		lsls	r3, r3, #1
 11868 1336 0B44     		add	r3, r3, r1
 11869 1338 1B01     		lsls	r3, r3, #4
 11870 133a 1344     		add	r3, r3, r2
 11871 133c 03F5DB73 		add	r3, r3, #438
 11872 1340 0322     		movs	r2, #3
 11873 1342 1A70     		strb	r2, [r3]
1584:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 11874              		.loc 1 1584 0
 11875 1344 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11876 1346 5149     		ldr	r1, .L492+4
 11877 1348 1346     		mov	r3, r2
 11878 134a DB00     		lsls	r3, r3, #3
 11879 134c 9B1A     		subs	r3, r3, r2
 11880 134e 1B01     		lsls	r3, r3, #4
 11881 1350 0B44     		add	r3, r3, r1
 11882 1352 03F58873 		add	r3, r3, #272
 11883 1356 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11884 1358 1946     		mov	r1, r3
 11885 135a 4C4A     		ldr	r2, .L492+4
 11886 135c 0B46     		mov	r3, r1
 11887 135e 5B00     		lsls	r3, r3, #1
 11888 1360 0B44     		add	r3, r3, r1
 11889 1362 1B01     		lsls	r3, r3, #4
 11890 1364 1344     		add	r3, r3, r2
 11891 1366 03F2B713 		addw	r3, r3, #439
 11892 136a FF22     		movs	r2, #255
 11893 136c 1A70     		strb	r2, [r3]
1585:..\src/command_processing.c ****                 
1586:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1587:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 11894              		.loc 1 1587 0
 11895 136e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11896 1370 464B     		ldr	r3, .L492+4
 11897 1372 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 11898 1376 4549     		ldr	r1, .L492+4
 11899 1378 1346     		mov	r3, r2
 11900 137a DB00     		lsls	r3, r3, #3
 11901 137c 9B1A     		subs	r3, r3, r2
 11902 137e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 269


 11903 1380 0B44     		add	r3, r3, r1
 11904 1382 03F58873 		add	r3, r3, #272
 11905 1386 0246     		mov	r2, r0
 11906 1388 1A70     		strb	r2, [r3]
1588:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 11907              		.loc 1 1588 0
 11908 138a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11909 138c 3F49     		ldr	r1, .L492+4
 11910 138e 1346     		mov	r3, r2
 11911 1390 DB00     		lsls	r3, r3, #3
 11912 1392 9B1A     		subs	r3, r3, r2
 11913 1394 1B01     		lsls	r3, r3, #4
 11914 1396 0B44     		add	r3, r3, r1
 11915 1398 03F21113 		addw	r3, r3, #273
 11916 139c 0122     		movs	r2, #1
 11917 139e 1A70     		strb	r2, [r3]
1589:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 11918              		.loc 1 1589 0
 11919 13a0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11920 13a2 3A49     		ldr	r1, .L492+4
 11921 13a4 1346     		mov	r3, r2
 11922 13a6 DB00     		lsls	r3, r3, #3
 11923 13a8 9B1A     		subs	r3, r3, r2
 11924 13aa 1B01     		lsls	r3, r3, #4
 11925 13ac 0B44     		add	r3, r3, r1
 11926 13ae 03F58973 		add	r3, r3, #274
 11927 13b2 0122     		movs	r2, #1
 11928 13b4 1A70     		strb	r2, [r3]
1590:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 11929              		.loc 1 1590 0
 11930 13b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11931 13b8 3449     		ldr	r1, .L492+4
 11932 13ba 1346     		mov	r3, r2
 11933 13bc DB00     		lsls	r3, r3, #3
 11934 13be 9B1A     		subs	r3, r3, r2
 11935 13c0 1B01     		lsls	r3, r3, #4
 11936 13c2 0B44     		add	r3, r3, r1
 11937 13c4 E433     		adds	r3, r3, #228
 11938 13c6 0022     		movs	r2, #0
 11939 13c8 1A60     		str	r2, [r3]
1591:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 11940              		.loc 1 1591 0
 11941 13ca 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11942 13cc 2F4B     		ldr	r3, .L492+4
 11943 13ce 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 11944 13d2 1846     		mov	r0, r3
 11945 13d4 2D49     		ldr	r1, .L492+4
 11946 13d6 0346     		mov	r3, r0
 11947 13d8 5B00     		lsls	r3, r3, #1
 11948 13da 0344     		add	r3, r3, r0
 11949 13dc 1B01     		lsls	r3, r3, #4
 11950 13de 0B44     		add	r3, r3, r1
 11951 13e0 03F29513 		addw	r3, r3, #405
 11952 13e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11953 13e6 1946     		mov	r1, r3
 11954 13e8 4FF47A53 		mov	r3, #16000
 11955 13ec 03FA01F1 		lsl	r1, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 270


 11956 13f0 2648     		ldr	r0, .L492+4
 11957 13f2 1346     		mov	r3, r2
 11958 13f4 DB00     		lsls	r3, r3, #3
 11959 13f6 9B1A     		subs	r3, r3, r2
 11960 13f8 1B01     		lsls	r3, r3, #4
 11961 13fa 0344     		add	r3, r3, r0
 11962 13fc E833     		adds	r3, r3, #232
 11963 13fe 1960     		str	r1, [r3]
 11964              	.L472:
1592:..\src/command_processing.c ****             }      
1593:..\src/command_processing.c ****             
1594:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 11965              		.loc 1 1594 0
 11966 1400 224B     		ldr	r3, .L492+4
 11967 1402 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 11968 1406 042B     		cmp	r3, #4
 11969 1408 38D1     		bne	.L479
1595:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 11970              		.loc 1 1595 0
 11971 140a 204B     		ldr	r3, .L492+4
 11972 140c 0122     		movs	r2, #1
 11973 140e 83F8A920 		strb	r2, [r3, #169]
1596:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11974              		.loc 1 1596 0
 11975 1412 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 11976 1414 1D49     		ldr	r1, .L492+4
 11977 1416 1346     		mov	r3, r2
 11978 1418 DB00     		lsls	r3, r3, #3
 11979 141a 9B1A     		subs	r3, r3, r2
 11980 141c 1B01     		lsls	r3, r3, #4
 11981 141e 0B44     		add	r3, r3, r1
 11982 1420 03F58873 		add	r3, r3, #272
 11983 1424 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11984 1426 1946     		mov	r1, r3
 11985 1428 184A     		ldr	r2, .L492+4
 11986 142a 0B46     		mov	r3, r1
 11987 142c 5B00     		lsls	r3, r3, #1
 11988 142e 0B44     		add	r3, r3, r1
 11989 1430 1B01     		lsls	r3, r3, #4
 11990 1432 1344     		add	r3, r3, r2
 11991 1434 03F5D873 		add	r3, r3, #432
 11992 1438 0122     		movs	r2, #1
 11993 143a 1A70     		strb	r2, [r3]
1597:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 11994              		.loc 1 1597 0
 11995 143c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 11996 143e 1349     		ldr	r1, .L492+4
 11997 1440 1346     		mov	r3, r2
 11998 1442 DB00     		lsls	r3, r3, #3
 11999 1444 9B1A     		subs	r3, r3, r2
 12000 1446 1B01     		lsls	r3, r3, #4
 12001 1448 0B44     		add	r3, r3, r1
 12002 144a 03F58873 		add	r3, r3, #272
 12003 144e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12004 1450 1946     		mov	r1, r3
 12005 1452 0E4A     		ldr	r2, .L492+4
 12006 1454 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 271


 12007 1456 5B00     		lsls	r3, r3, #1
 12008 1458 0B44     		add	r3, r3, r1
 12009 145a 1B01     		lsls	r3, r3, #4
 12010 145c 1344     		add	r3, r3, r2
 12011 145e 03F5D873 		add	r3, r3, #432
 12012 1462 0122     		movs	r2, #1
 12013 1464 1A70     		strb	r2, [r3]
1598:..\src/command_processing.c ****             }      
1599:..\src/command_processing.c ****             
1600:..\src/command_processing.c ****             break;
 12014              		.loc 1 1600 0
 12015 1466 09E0     		b	.L479
 12016              	.L474:
1601:..\src/command_processing.c ****             
1602:..\src/command_processing.c ****         default:
1603:..\src/command_processing.c ****             break;
 12017              		.loc 1 1603 0
 12018 1468 00BF     		nop
 12019 146a 08E0     		b	.L416
 12020              	.L475:
1402:..\src/command_processing.c ****             
 12021              		.loc 1 1402 0
 12022 146c 00BF     		nop
 12023 146e 06E0     		b	.L416
 12024              	.L476:
1430:..\src/command_processing.c **** 
 12025              		.loc 1 1430 0
 12026 1470 00BF     		nop
 12027 1472 04E0     		b	.L416
 12028              	.L477:
1448:..\src/command_processing.c ****             
 12029              		.loc 1 1448 0
 12030 1474 00BF     		nop
 12031 1476 02E0     		b	.L416
 12032              	.L478:
1458:..\src/command_processing.c ****            
 12033              		.loc 1 1458 0
 12034 1478 00BF     		nop
 12035 147a 00E0     		b	.L416
 12036              	.L479:
1600:..\src/command_processing.c ****             
 12037              		.loc 1 1600 0
 12038 147c 00BF     		nop
 12039              	.L416:
1604:..\src/command_processing.c ****     }
1605:..\src/command_processing.c **** }
 12040              		.loc 1 1605 0 discriminator 1
 12041 147e 00BF     		nop
 12042 1480 1C37     		adds	r7, r7, #28
 12043              		.cfi_def_cfa_offset 20
 12044 1482 BD46     		mov	sp, r7
 12045              		.cfi_def_cfa_register 13
 12046              		@ sp needed
 12047 1484 F0BD     		pop	{r4, r5, r6, r7, pc}
 12048              	.L493:
 12049 1486 00BF     		.align	2
 12050              	.L492:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 272


 12051 1488 00000000 		.word	g_rx
 12052 148c 00000000 		.word	g_mem
 12053              		.cfi_endproc
 12054              	.LFE69:
 12055              		.size	set_custom_param, .-set_custom_param
 12056              		.section	.rodata
 12057 1096 0000     		.align	2
 12058              	.LC144:
 12059 1098 506F7274 		.ascii	"Port %u ID:\000"
 12059      20257520 
 12059      49443A00 
 12060              		.align	2
 12061              	.LC145:
 12062 10a4 2575202D 		.ascii	"%u - Device ID:\000"
 12062      20446576 
 12062      69636520 
 12062      49443A00 
 12063              		.align	2
 12064              	.LC146:
 12065 10b4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 12065      20494D55 
 12065      20256420 
 12065      636F6E66 
 12065      69677572 
 12066 10cf 00       		.align	2
 12067              	.LC147:
 12068 10d0 2575202D 		.ascii	"%u - SPI read delay:\000"
 12068      20535049 
 12068      20726561 
 12068      64206465 
 12068      6C61793A 
 12069 10e5 000000   		.align	2
 12070              	.LC148:
 12071 10e8 204E6F6E 		.ascii	" None\000"
 12071      6500
 12072 10ee 0000     		.align	2
 12073              	.LC149:
 12074 10f0 204C6F77 		.ascii	" Low\000"
 12074      00
 12075 10f5 000000   		.align	2
 12076              	.LC150:
 12077 10f8 20486967 		.ascii	" High\000"
 12077      6800
 12078 10fe 0000     		.align	2
 12079              	.LC142:
 12080 1100 4E756D62 		.ascii	"Number of connected IMUs:\000"
 12080      6572206F 
 12080      6620636F 
 12080      6E6E6563 
 12080      74656420 
 12081 111a 0000     		.align	2
 12082              	.LC143:
 12083 111c 4D616720 		.ascii	"Mag cal parameters:\000"
 12083      63616C20 
 12083      70617261 
 12083      6D657465 
 12083      72733A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 273


 12084              		.section	.text.get_IMU_param_list,"ax",%progbits
 12085              		.align	2
 12086              		.global	get_IMU_param_list
 12087              		.thumb
 12088              		.thumb_func
 12089              		.type	get_IMU_param_list, %function
 12090              	get_IMU_param_list:
 12091              	.LFB70:
1606:..\src/command_processing.c **** 
1607:..\src/command_processing.c **** //==============================================================================
1608:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1609:..\src/command_processing.c **** //==============================================================================
1610:..\src/command_processing.c **** 
1611:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1612:..\src/command_processing.c **** {
 12092              		.loc 1 1612 0
 12093              		.cfi_startproc
 12094              		@ args = 0, pretend = 0, frame = 1704
 12095              		@ frame_needed = 1, uses_anonymous_args = 0
 12096 0000 B0B5     		push	{r4, r5, r7, lr}
 12097              		.cfi_def_cfa_offset 16
 12098              		.cfi_offset 4, -16
 12099              		.cfi_offset 5, -12
 12100              		.cfi_offset 7, -8
 12101              		.cfi_offset 14, -4
 12102 0002 ADF5D56D 		sub	sp, sp, #1704
 12103              		.cfi_def_cfa_offset 1720
 12104 0006 00AF     		add	r7, sp, #0
 12105              		.cfi_def_cfa_register 7
 12106 0008 0246     		mov	r2, r0
 12107 000a BB1D     		adds	r3, r7, #6
 12108 000c 1A80     		strh	r2, [r3]	@ movhi
1613:..\src/command_processing.c ****     //Package to be sent variables
1614:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 12109              		.loc 1 1614 0
 12110 000e 07F58A73 		add	r3, r7, #276
 12111 0012 0022     		movs	r2, #0
 12112 0014 1A60     		str	r2, [r3]
 12113 0016 0433     		adds	r3, r3, #4
 12114 0018 40F27552 		movw	r2, #1397
 12115 001c 0021     		movs	r1, #0
 12116 001e 1846     		mov	r0, r3
 12117 0020 FFF7FEFF 		bl	memset
1615:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1616:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1617:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1618:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1619:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1620:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1621:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 12118              		.loc 1 1621 0
 12119 0024 0723     		movs	r3, #7
 12120 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1622:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 12121              		.loc 1 1622 0
 12122 002a 0023     		movs	r3, #0
 12123 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 274


1623:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 12124              		.loc 1 1623 0
 12125 0030 0223     		movs	r3, #2
 12126 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1624:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12127              		.loc 1 1624 0
 12128 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 12129 003a 5A1C     		adds	r2, r3, #1
1625:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 12130              		.loc 1 1625 0
 12131 003c B7F8A636 		ldrh	r3, [r7, #1702]
 12132 0040 1344     		add	r3, r3, r2
1626:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 12133              		.loc 1 1626 0
 12134 0042 0133     		adds	r3, r3, #1
1624:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 12135              		.loc 1 1624 0
 12136 0044 9AB2     		uxth	r2, r3
 12137 0046 D24B     		ldr	r3, .L540
 12138 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12139 004a 9BB2     		uxth	r3, r3
 12140 004c 1344     		add	r3, r3, r2
 12141 004e 9BB2     		uxth	r3, r3
 12142 0050 1A46     		mov	r2, r3	@ movhi
 12143 0052 9200     		lsls	r2, r2, #2
 12144 0054 1344     		add	r3, r3, r2
 12145 0056 1A46     		mov	r2, r3	@ movhi
 12146 0058 9100     		lsls	r1, r2, #2
 12147 005a 1A46     		mov	r2, r3	@ movhi
 12148 005c 0B46     		mov	r3, r1	@ movhi
 12149 005e 1344     		add	r3, r3, r2
 12150 0060 5B00     		lsls	r3, r3, #1
 12151 0062 9BB2     		uxth	r3, r3
 12152 0064 FB33     		adds	r3, r3, #251
 12153 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1627:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1628:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1629:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1630:..\src/command_processing.c **** 
1631:..\src/command_processing.c ****     //Auxiliary variables
1632:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1633:..\src/command_processing.c ****     uint16 start_byte = 0;
 12154              		.loc 1 1633 0
 12155 006a 0023     		movs	r3, #0
 12156 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1634:..\src/command_processing.c **** 
1635:..\src/command_processing.c ****     //Parameters menu string definitions
1636:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 12157              		.loc 1 1636 0
 12158 0070 07F1F803 		add	r3, r7, #248
 12159 0074 C74A     		ldr	r2, .L540+4
 12160 0076 1C46     		mov	r4, r3
 12161 0078 1546     		mov	r5, r2
 12162 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12163 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12164 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 12165 0082 03C4     		stmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 275


 12166 0084 2280     		strh	r2, [r4]	@ movhi
1637:..\src/command_processing.c ****     char ids_str[11]            = "";
 12167              		.loc 1 1637 0
 12168 0086 07F1EC03 		add	r3, r7, #236
 12169 008a 0022     		movs	r2, #0
 12170 008c 1A60     		str	r2, [r3]
 12171 008e 0433     		adds	r3, r3, #4
 12172 0090 0022     		movs	r2, #0
 12173 0092 1A60     		str	r2, [r3]
 12174 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1638:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 12175              		.loc 1 1638 0
 12176 0098 07F1D803 		add	r3, r7, #216
 12177 009c BE4A     		ldr	r2, .L540+8
 12178 009e 1C46     		mov	r4, r3
 12179 00a0 1546     		mov	r5, r2
 12180 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12181 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 12182 00a6 2B68     		ldr	r3, [r5]
 12183 00a8 2360     		str	r3, [r4]
1639:..\src/command_processing.c ****     char id_str[16]             = "";
 12184              		.loc 1 1639 0
 12185 00aa 07F1C803 		add	r3, r7, #200
 12186 00ae 0022     		movs	r2, #0
 12187 00b0 1A60     		str	r2, [r3]
 12188 00b2 0433     		adds	r3, r3, #4
 12189 00b4 0022     		movs	r2, #0
 12190 00b6 1A60     		str	r2, [r3]
 12191 00b8 5A60     		str	r2, [r3, #4]
 12192 00ba 9A60     		str	r2, [r3, #8]
1640:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 12193              		.loc 1 1640 0
 12194 00bc 07F19C03 		add	r3, r7, #156
 12195 00c0 0022     		movs	r2, #0
 12196 00c2 1A60     		str	r2, [r3]
 12197 00c4 0433     		adds	r3, r3, #4
 12198 00c6 2622     		movs	r2, #38
 12199 00c8 0021     		movs	r1, #0
 12200 00ca 1846     		mov	r0, r3
 12201 00cc FFF7FEFF 		bl	memset
1641:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 12202              		.loc 1 1641 0
 12203 00d0 07F18003 		add	r3, r7, #128
 12204 00d4 0022     		movs	r2, #0
 12205 00d6 1A60     		str	r2, [r3]
 12206 00d8 0433     		adds	r3, r3, #4
 12207 00da 0022     		movs	r2, #0
 12208 00dc 1A60     		str	r2, [r3]
 12209 00de 5A60     		str	r2, [r3, #4]
 12210 00e0 9A60     		str	r2, [r3, #8]
 12211 00e2 DA60     		str	r2, [r3, #12]
 12212 00e4 1A61     		str	r2, [r3, #16]
 12213 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1642:..\src/command_processing.c ****     
1643:..\src/command_processing.c ****     //Strings lenghts
1644:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 12214              		.loc 1 1644 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 276


 12215 00e8 07F1C803 		add	r3, r7, #200
 12216 00ec 1846     		mov	r0, r3
 12217 00ee FFF7FEFF 		bl	strlen
 12218 00f2 0346     		mov	r3, r0
 12219 00f4 87F89336 		strb	r3, [r7, #1683]
1645:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 12220              		.loc 1 1645 0
 12221 00f8 07F1F803 		add	r3, r7, #248
 12222 00fc 1846     		mov	r0, r3
 12223 00fe FFF7FEFF 		bl	strlen
 12224 0102 0346     		mov	r3, r0
 12225 0104 87F89236 		strb	r3, [r7, #1682]
1646:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 12226              		.loc 1 1646 0
 12227 0108 07F1EC03 		add	r3, r7, #236
 12228 010c 1846     		mov	r0, r3
 12229 010e FFF7FEFF 		bl	strlen
 12230 0112 0346     		mov	r3, r0
 12231 0114 87F89136 		strb	r3, [r7, #1681]
1647:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 12232              		.loc 1 1647 0
 12233 0118 07F1D803 		add	r3, r7, #216
 12234 011c 1846     		mov	r0, r3
 12235 011e FFF7FEFF 		bl	strlen
 12236 0122 0346     		mov	r3, r0
 12237 0124 87F89036 		strb	r3, [r7, #1680]
1648:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 12238              		.loc 1 1648 0
 12239 0128 07F19C03 		add	r3, r7, #156
 12240 012c 1846     		mov	r0, r3
 12241 012e FFF7FEFF 		bl	strlen
 12242 0132 0346     		mov	r3, r0
 12243 0134 87F88F36 		strb	r3, [r7, #1679]
1649:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 12244              		.loc 1 1649 0
 12245 0138 07F18003 		add	r3, r7, #128
 12246 013c 1846     		mov	r0, r3
 12247 013e FFF7FEFF 		bl	strlen
 12248 0142 0346     		mov	r3, r0
 12249 0144 87F89D36 		strb	r3, [r7, #1693]
1650:..\src/command_processing.c ****     
1651:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 12250              		.loc 1 1651 0
 12251 0148 07F10803 		add	r3, r7, #8
 12252 014c 0022     		movs	r2, #0
 12253 014e 1A60     		str	r2, [r3]
 12254 0150 0433     		adds	r3, r3, #4
 12255 0152 7222     		movs	r2, #114
 12256 0154 0021     		movs	r1, #0
 12257 0156 1846     		mov	r0, r3
 12258 0158 FFF7FEFF 		bl	memset
1652:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1653:..\src/command_processing.c ****  
1654:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 12259              		.loc 1 1654 0
 12260 015c 07F10800 		add	r0, r7, #8
 12261 0160 6423     		movs	r3, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 277


 12262 0162 0A22     		movs	r2, #10
 12263 0164 8D49     		ldr	r1, .L540+12
 12264 0166 FFF7FEFF 		bl	sprintf
1655:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 12265              		.loc 1 1655 0
 12266 016a 07F10803 		add	r3, r7, #8
 12267 016e 1846     		mov	r0, r3
 12268 0170 FFF7FEFF 		bl	strlen
 12269 0174 0346     		mov	r3, r0
 12270 0176 87F88E36 		strb	r3, [r7, #1678]
1656:..\src/command_processing.c **** 
1657:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1658:..\src/command_processing.c ****     // update packet_length
1659:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 12271              		.loc 1 1659 0
 12272 017a 854B     		ldr	r3, .L540
 12273 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12274 017e 5B08     		lsrs	r3, r3, #1
 12275 0180 DBB2     		uxtb	r3, r3
 12276 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1660:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 12277              		.loc 1 1660 0
 12278 0186 824B     		ldr	r3, .L540
 12279 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12280 018a 1A46     		mov	r2, r3
 12281 018c B7F8A636 		ldrh	r3, [r7, #1702]
 12282 0190 5B00     		lsls	r3, r3, #1
 12283 0192 D31A     		subs	r3, r2, r3
 12284 0194 002B     		cmp	r3, #0
 12285 0196 04DD     		ble	.L495
 12286              		.loc 1 1660 0 is_stmt 0 discriminator 1
 12287 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 12288 019c 0133     		adds	r3, r3, #1
 12289 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 12290              	.L495:
1661:..\src/command_processing.c ****     
1662:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 12291              		.loc 1 1662 0 is_stmt 1
 12292 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 12293 01a6 5A1C     		adds	r2, r3, #1
1663:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12294              		.loc 1 1663 0
 12295 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 12296 01ac 1344     		add	r3, r3, r2
1664:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 12297              		.loc 1 1664 0
 12298 01ae 0133     		adds	r3, r3, #1
1662:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 12299              		.loc 1 1662 0
 12300 01b0 9AB2     		uxth	r2, r3
 12301 01b2 774B     		ldr	r3, .L540
 12302 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12303 01b6 9BB2     		uxth	r3, r3
 12304 01b8 1344     		add	r3, r3, r2
 12305 01ba 9BB2     		uxth	r3, r3
 12306 01bc 1A46     		mov	r2, r3	@ movhi
 12307 01be 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 278


 12308 01c0 1344     		add	r3, r3, r2
 12309 01c2 1A46     		mov	r2, r3	@ movhi
 12310 01c4 9100     		lsls	r1, r2, #2
 12311 01c6 1A46     		mov	r2, r3	@ movhi
 12312 01c8 0B46     		mov	r3, r1	@ movhi
 12313 01ca 1344     		add	r3, r3, r2
 12314 01cc 5B00     		lsls	r3, r3, #1
 12315 01ce 9BB2     		uxth	r3, r3
 12316 01d0 C933     		adds	r3, r3, #201
 12317 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1665:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1666:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1667:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1668:..\src/command_processing.c **** 
1669:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 12318              		.loc 1 1669 0
 12319 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 12320 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12321 01de 1344     		add	r3, r3, r2
 12322 01e0 9BB2     		uxth	r3, r3
 12323 01e2 0333     		adds	r3, r3, #3
 12324 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1670:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 12325              		.loc 1 1670 0
 12326 01e8 07F58A73 		add	r3, r7, #276
 12327 01ec A222     		movs	r2, #162
 12328 01ee 1A70     		strb	r2, [r3]
1671:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 12329              		.loc 1 1671 0
 12330 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12331 01f4 DAB2     		uxtb	r2, r3
 12332 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12333 01fa DBB2     		uxtb	r3, r3
 12334 01fc 1344     		add	r3, r3, r2
 12335 01fe DAB2     		uxtb	r2, r3
 12336 0200 634B     		ldr	r3, .L540
 12337 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12338 0204 1344     		add	r3, r3, r2
 12339 0206 DBB2     		uxtb	r3, r3
 12340 0208 0333     		adds	r3, r3, #3
 12341 020a DAB2     		uxtb	r2, r3
 12342 020c 07F58A73 		add	r3, r7, #276
 12343 0210 5A70     		strb	r2, [r3, #1]
1672:..\src/command_processing.c **** 
1673:..\src/command_processing.c ****     switch(index) {
 12344              		.loc 1 1673 0
 12345 0212 BB1D     		adds	r3, r7, #6
 12346 0214 1B88     		ldrh	r3, [r3]
 12347 0216 002B     		cmp	r3, #0
 12348 0218 40F0D084 		bne	.L538
1674:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1675:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1676:..\src/command_processing.c ****             start_byte = 0;
 12349              		.loc 1 1676 0
 12350 021c 0023     		movs	r3, #0
 12351 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1677:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 279


 12352              		.loc 1 1677 0
 12353 0222 07F58A73 		add	r3, r7, #276
 12354 0226 0222     		movs	r2, #2
 12355 0228 9A70     		strb	r2, [r3, #2]
1678:..\src/command_processing.c ****             packet_data[3] = 1;
 12356              		.loc 1 1678 0
 12357 022a 07F58A73 		add	r3, r7, #276
 12358 022e 0122     		movs	r2, #1
 12359 0230 DA70     		strb	r2, [r3, #3]
1679:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 12360              		.loc 1 1679 0
 12361 0232 574B     		ldr	r3, .L540
 12362 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12363 0236 07F58A73 		add	r3, r7, #276
 12364 023a 1A71     		strb	r2, [r3, #4]
1680:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12365              		.loc 1 1680 0
 12366 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12367 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12368 0244 15E0     		b	.L498
 12369              	.L499:
1681:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 12370              		.loc 1 1681 0 discriminator 3
 12371 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 12372 024a 5A1D     		adds	r2, r3, #5
 12373 024c B7F8A436 		ldrh	r3, [r7, #1700]
 12374 0250 D31A     		subs	r3, r2, r3
 12375 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 12376 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 12377 025a 8A1A     		subs	r2, r1, r2
 12378 025c 07F1F801 		add	r1, r7, #248
 12379 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12380 0262 07F58A72 		add	r2, r7, #276
 12381 0266 D154     		strb	r1, [r2, r3]
1680:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12382              		.loc 1 1680 0 discriminator 3
 12383 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 12384 026c 013B     		subs	r3, r3, #1
 12385 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12386              	.L498:
1680:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 12387              		.loc 1 1680 0 is_stmt 0 discriminator 1
 12388 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 12389 0276 002B     		cmp	r3, #0
 12390 0278 E5D1     		bne	.L499
1682:..\src/command_processing.c ****                 
1683:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1684:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12391              		.loc 1 1684 0 is_stmt 1
 12392 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12393 027e 3233     		adds	r3, r3, #50
 12394 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1685:..\src/command_processing.c ****             i = 0;
 12395              		.loc 1 1685 0
 12396 0284 0023     		movs	r3, #0
 12397 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1686:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 280


 12398              		.loc 1 1686 0
 12399 028a 0023     		movs	r3, #0
 12400 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12401 0290 B2E0     		b	.L500
 12402              	.L507:
1687:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12403              		.loc 1 1687 0
 12404 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 12405 0296 07F1EC03 		add	r3, r7, #236
 12406 029a 4149     		ldr	r1, .L540+16
 12407 029c 1846     		mov	r0, r3
 12408 029e FFF7FEFF 		bl	sprintf
1688:..\src/command_processing.c ****                 h = 4;
 12409              		.loc 1 1688 0
 12410 02a2 0423     		movs	r3, #4
 12411 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1689:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 12412              		.loc 1 1689 0
 12413 02a8 07F1EC03 		add	r3, r7, #236
 12414 02ac 1846     		mov	r0, r3
 12415 02ae FFF7FEFF 		bl	strlen
 12416 02b2 0346     		mov	r3, r0
 12417 02b4 87F89136 		strb	r3, [r7, #1681]
1690:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12418              		.loc 1 1690 0
 12419 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 12420 02bc 9A1C     		adds	r2, r3, #2
 12421 02be B7F8A036 		ldrh	r3, [r7, #1696]
 12422 02c2 3221     		movs	r1, #50
 12423 02c4 01FB03F3 		mul	r3, r1, r3
 12424 02c8 1344     		add	r3, r3, r2
 12425 02ca 07F58A72 		add	r2, r7, #276
 12426 02ce 0221     		movs	r1, #2
 12427 02d0 D154     		strb	r1, [r2, r3]
1691:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12428              		.loc 1 1691 0
 12429 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 12430 02d6 DA1C     		adds	r2, r3, #3
 12431 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12432 02dc 3221     		movs	r1, #50
 12433 02de 01FB03F3 		mul	r3, r1, r3
 12434 02e2 1344     		add	r3, r3, r2
 12435 02e4 07F58A72 		add	r2, r7, #276
 12436 02e8 0321     		movs	r1, #3
 12437 02ea D154     		strb	r1, [r2, r3]
1692:..\src/command_processing.c ****                 
1693:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 12438              		.loc 1 1693 0
 12439 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 12440 02f0 1A46     		mov	r2, r3	@ movhi
 12441 02f2 5200     		lsls	r2, r2, #1
 12442 02f4 1344     		add	r3, r3, r2
 12443 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12444 02fa 39E0     		b	.L501
 12445              	.L504:
1694:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12446              		.loc 1 1694 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 281


 12447 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 12448 0300 284A     		ldr	r2, .L540+20
 12449 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12450 0304 9BB2     		uxth	r3, r3
 12451 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 12452 030a 9A42     		cmp	r2, r3
 12453 030c 17D1     		bne	.L502
1695:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 12454              		.loc 1 1695 0
 12455 030e B7F89E26 		ldrh	r2, [r7, #1694]
 12456 0312 B7F89436 		ldrh	r3, [r7, #1684]
 12457 0316 1A44     		add	r2, r2, r3
 12458 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 12459 031c 3221     		movs	r1, #50
 12460 031e 01FB03F3 		mul	r3, r1, r3
 12461 0322 1344     		add	r3, r3, r2
 12462 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 12463 0328 1E49     		ldr	r1, .L540+20
 12464 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12465 032c 07F58A72 		add	r2, r7, #276
 12466 0330 D154     		strb	r1, [r2, r3]
1696:..\src/command_processing.c ****                         i++;
 12467              		.loc 1 1696 0
 12468 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 12469 0336 0133     		adds	r3, r3, #1
 12470 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12471 033c 0EE0     		b	.L503
 12472              	.L502:
1697:..\src/command_processing.c ****                     } 
1698:..\src/command_processing.c ****                     else {
1699:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 12473              		.loc 1 1699 0
 12474 033e B7F89E26 		ldrh	r2, [r7, #1694]
 12475 0342 B7F89436 		ldrh	r3, [r7, #1684]
 12476 0346 1A44     		add	r2, r2, r3
 12477 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 12478 034c 3221     		movs	r1, #50
 12479 034e 01FB03F3 		mul	r3, r1, r3
 12480 0352 1344     		add	r3, r3, r2
 12481 0354 07F58A72 		add	r2, r7, #276
 12482 0358 FF21     		movs	r1, #255
 12483 035a D154     		strb	r1, [r2, r3]
 12484              	.L503:
1700:..\src/command_processing.c ****                     }
1701:..\src/command_processing.c ****                     h++;
 12485              		.loc 1 1701 0 discriminator 2
 12486 035c B7F89E36 		ldrh	r3, [r7, #1694]
 12487 0360 0133     		adds	r3, r3, #1
 12488 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1693:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12489              		.loc 1 1693 0 discriminator 2
 12490 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 12491 036a 0133     		adds	r3, r3, #1
 12492 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12493              	.L501:
1693:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 12494              		.loc 1 1693 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 282


 12495 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 12496 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 12497 0378 1346     		mov	r3, r2
 12498 037a 5B00     		lsls	r3, r3, #1
 12499 037c 1344     		add	r3, r3, r2
 12500 037e 0233     		adds	r3, r3, #2
 12501 0380 9942     		cmp	r1, r3
 12502 0382 BBDD     		ble	.L504
1702:..\src/command_processing.c ****                 }
1703:..\src/command_processing.c **** 
1704:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1705:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 12503              		.loc 1 1705 0 is_stmt 1
 12504 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12505 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12506 038c 2BE0     		b	.L505
 12507              	.L541:
 12508 038e 00BF     		.align	2
 12509              	.L540:
 12510 0390 00000000 		.word	N_IMU_Connected
 12511 0394 00110000 		.word	.LC142
 12512 0398 1C110000 		.word	.LC143
 12513 039c 74020000 		.word	.LC129
 12514 03a0 98100000 		.word	.LC144
 12515 03a4 00000000 		.word	IMU_connected
 12516              	.L506:
1706:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12517              		.loc 1 1706 0 discriminator 3
 12518 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 12519 03ac DA1D     		adds	r2, r3, #7
 12520 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 12521 03b2 3221     		movs	r1, #50
 12522 03b4 01FB03F3 		mul	r3, r1, r3
 12523 03b8 1A44     		add	r2, r2, r3
 12524 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 12525 03be 1A44     		add	r2, r2, r3
 12526 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 12527 03c4 D31A     		subs	r3, r2, r3
 12528 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 12529 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 12530 03ce 8A1A     		subs	r2, r1, r2
 12531 03d0 07F1EC01 		add	r1, r7, #236
 12532 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12533 03d6 07F58A72 		add	r2, r7, #276
 12534 03da D154     		strb	r1, [r2, r3]
1705:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12535              		.loc 1 1705 0 discriminator 3
 12536 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 12537 03e0 013B     		subs	r3, r3, #1
 12538 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12539              	.L505:
1705:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 12540              		.loc 1 1705 0 is_stmt 0 discriminator 1
 12541 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 12542 03ea 002B     		cmp	r3, #0
 12543 03ec DCD1     		bne	.L506
1686:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 283


 12544              		.loc 1 1686 0 is_stmt 1 discriminator 2
 12545 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 12546 03f2 0133     		adds	r3, r3, #1
 12547 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12548              	.L500:
1686:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 12549              		.loc 1 1686 0 is_stmt 0 discriminator 1
 12550 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 12551 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 12552 0400 9A42     		cmp	r2, r3
 12553 0402 FFF446AF 		bcc	.L507
1707:..\src/command_processing.c ****             }
1708:..\src/command_processing.c ****             
1709:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1710:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 12554              		.loc 1 1710 0 is_stmt 1
 12555 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 12556 040a 1A46     		mov	r2, r3	@ movhi
 12557 040c 9200     		lsls	r2, r2, #2
 12558 040e 1344     		add	r3, r3, r2
 12559 0410 1A46     		mov	r2, r3	@ movhi
 12560 0412 9100     		lsls	r1, r2, #2
 12561 0414 1A46     		mov	r2, r3	@ movhi
 12562 0416 0B46     		mov	r3, r1	@ movhi
 12563 0418 1344     		add	r3, r3, r2
 12564 041a 5B00     		lsls	r3, r3, #1
 12565 041c 9AB2     		uxth	r2, r3
 12566 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12567 0422 1344     		add	r3, r3, r2
 12568 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1711:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 12569              		.loc 1 1711 0
 12570 0428 0023     		movs	r3, #0
 12571 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12572 042e 1FE1     		b	.L508
 12573              	.L515:
1712:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12574              		.loc 1 1712 0
 12575 0430 B7F89436 		ldrh	r3, [r7, #1684]
 12576 0434 9A1C     		adds	r2, r3, #2
 12577 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 12578 043a 3221     		movs	r1, #50
 12579 043c 01FB03F3 		mul	r3, r1, r3
 12580 0440 1344     		add	r3, r3, r2
 12581 0442 07F58A72 		add	r2, r7, #276
 12582 0446 0221     		movs	r1, #2
 12583 0448 D154     		strb	r1, [r2, r3]
1713:..\src/command_processing.c ****                 
1714:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 12584              		.loc 1 1714 0
 12585 044a B7F89436 		ldrh	r3, [r7, #1684]
 12586 044e DA1C     		adds	r2, r3, #3
 12587 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 12588 0454 3221     		movs	r1, #50
 12589 0456 01FB03F3 		mul	r3, r1, r3
 12590 045a 1344     		add	r3, r3, r2
 12591 045c 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 284


 12592 0460 0321     		movs	r1, #3
 12593 0462 D154     		strb	r1, [r2, r3]
1715:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12594              		.loc 1 1715 0
 12595 0464 B7F89436 		ldrh	r3, [r7, #1684]
 12596 0468 1A1D     		adds	r2, r3, #4
 12597 046a B7F8A036 		ldrh	r3, [r7, #1696]
 12598 046e 3221     		movs	r1, #50
 12599 0470 01FB03F3 		mul	r3, r1, r3
 12600 0474 1A44     		add	r2, r2, r3
 12601 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 12602 047a 5B00     		lsls	r3, r3, #1
 12603 047c B249     		ldr	r1, .L542
 12604 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12605 0480 1846     		mov	r0, r3
 12606 0482 B249     		ldr	r1, .L542+4
 12607 0484 0346     		mov	r3, r0
 12608 0486 5B00     		lsls	r3, r3, #1
 12609 0488 0344     		add	r3, r3, r0
 12610 048a 0B44     		add	r3, r3, r1
 12611 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12612 048e 07F58A73 		add	r3, r7, #276
 12613 0492 9954     		strb	r1, [r3, r2]
1716:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12614              		.loc 1 1716 0
 12615 0494 B7F89436 		ldrh	r3, [r7, #1684]
 12616 0498 5A1D     		adds	r2, r3, #5
 12617 049a B7F8A036 		ldrh	r3, [r7, #1696]
 12618 049e 3221     		movs	r1, #50
 12619 04a0 01FB03F3 		mul	r3, r1, r3
 12620 04a4 1A44     		add	r2, r2, r3
 12621 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 12622 04aa 5B00     		lsls	r3, r3, #1
 12623 04ac A649     		ldr	r1, .L542
 12624 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12625 04b0 1846     		mov	r0, r3
 12626 04b2 A649     		ldr	r1, .L542+4
 12627 04b4 0346     		mov	r3, r0
 12628 04b6 5B00     		lsls	r3, r3, #1
 12629 04b8 0344     		add	r3, r3, r0
 12630 04ba 0B44     		add	r3, r3, r1
 12631 04bc 0133     		adds	r3, r3, #1
 12632 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12633 04c0 07F58A73 		add	r3, r7, #276
 12634 04c4 9954     		strb	r1, [r3, r2]
1717:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 12635              		.loc 1 1717 0
 12636 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 12637 04ca 9A1D     		adds	r2, r3, #6
 12638 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 12639 04d0 3221     		movs	r1, #50
 12640 04d2 01FB03F3 		mul	r3, r1, r3
 12641 04d6 1A44     		add	r2, r2, r3
 12642 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 12643 04dc 5B00     		lsls	r3, r3, #1
 12644 04de 9A49     		ldr	r1, .L542
 12645 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 285


 12646 04e2 1846     		mov	r0, r3
 12647 04e4 9949     		ldr	r1, .L542+4
 12648 04e6 0346     		mov	r3, r0
 12649 04e8 5B00     		lsls	r3, r3, #1
 12650 04ea 0344     		add	r3, r3, r0
 12651 04ec 0B44     		add	r3, r3, r1
 12652 04ee 0233     		adds	r3, r3, #2
 12653 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12654 04f2 07F58A73 		add	r3, r7, #276
 12655 04f6 9954     		strb	r1, [r3, r2]
1718:..\src/command_processing.c ****                 
1719:..\src/command_processing.c ****                 // check if there is a second value
1720:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 12656              		.loc 1 1720 0
 12657 04f8 954B     		ldr	r3, .L542+8
 12658 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12659 04fc 1A46     		mov	r2, r3
 12660 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 12661 0502 0133     		adds	r3, r3, #1
 12662 0504 5B00     		lsls	r3, r3, #1
 12663 0506 9A42     		cmp	r2, r3
 12664 0508 28DA     		bge	.L509
1721:..\src/command_processing.c ****                     // there is only one value
1722:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12665              		.loc 1 1722 0
 12666 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12667 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12668 0512 1EE0     		b	.L510
 12669              	.L511:
1723:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12670              		.loc 1 1723 0 discriminator 3
 12671 0514 B7F89436 		ldrh	r3, [r7, #1684]
 12672 0518 DA1D     		adds	r2, r3, #7
 12673 051a B7F8A036 		ldrh	r3, [r7, #1696]
 12674 051e 3221     		movs	r1, #50
 12675 0520 01FB03F3 		mul	r3, r1, r3
 12676 0524 1A44     		add	r2, r2, r3
 12677 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12678 052a 1A44     		add	r2, r2, r3
 12679 052c B7F8A236 		ldrh	r3, [r7, #1698]
 12680 0530 D31A     		subs	r3, r2, r3
 12681 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12682 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 12683 053a 8A1A     		subs	r2, r1, r2
 12684 053c 07F1D801 		add	r1, r7, #216
 12685 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12686 0542 07F58A72 		add	r2, r7, #276
 12687 0546 D154     		strb	r1, [r2, r3]
1722:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12688              		.loc 1 1722 0 discriminator 3
 12689 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 12690 054c 013B     		subs	r3, r3, #1
 12691 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12692              	.L510:
1722:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 12693              		.loc 1 1722 0 is_stmt 0 discriminator 1
 12694 0552 B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 286


 12695 0556 002B     		cmp	r3, #0
 12696 0558 DCD1     		bne	.L511
 12697 055a 84E0     		b	.L512
 12698              	.L509:
1724:..\src/command_processing.c ****                 }
1725:..\src/command_processing.c ****                 else {
1726:..\src/command_processing.c ****                     // fill the second value
1727:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 12699              		.loc 1 1727 0 is_stmt 1
 12700 055c B7F89436 		ldrh	r3, [r7, #1684]
 12701 0560 DA1C     		adds	r2, r3, #3
 12702 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 12703 0566 3221     		movs	r1, #50
 12704 0568 01FB03F3 		mul	r3, r1, r3
 12705 056c 1344     		add	r3, r3, r2
 12706 056e 07F58A72 		add	r2, r7, #276
 12707 0572 0621     		movs	r1, #6
 12708 0574 D154     		strb	r1, [r2, r3]
1728:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12709              		.loc 1 1728 0
 12710 0576 B7F89436 		ldrh	r3, [r7, #1684]
 12711 057a DA1D     		adds	r2, r3, #7
 12712 057c B7F8A036 		ldrh	r3, [r7, #1696]
 12713 0580 3221     		movs	r1, #50
 12714 0582 01FB03F3 		mul	r3, r1, r3
 12715 0586 1A44     		add	r2, r2, r3
 12716 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 12717 058c 5B00     		lsls	r3, r3, #1
 12718 058e 0133     		adds	r3, r3, #1
 12719 0590 6D49     		ldr	r1, .L542
 12720 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12721 0594 1846     		mov	r0, r3
 12722 0596 6D49     		ldr	r1, .L542+4
 12723 0598 0346     		mov	r3, r0
 12724 059a 5B00     		lsls	r3, r3, #1
 12725 059c 0344     		add	r3, r3, r0
 12726 059e 0B44     		add	r3, r3, r1
 12727 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12728 05a2 07F58A73 		add	r3, r7, #276
 12729 05a6 9954     		strb	r1, [r3, r2]
1729:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12730              		.loc 1 1729 0
 12731 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 12732 05ac 03F10802 		add	r2, r3, #8
 12733 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 12734 05b4 3221     		movs	r1, #50
 12735 05b6 01FB03F3 		mul	r3, r1, r3
 12736 05ba 1A44     		add	r2, r2, r3
 12737 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 12738 05c0 5B00     		lsls	r3, r3, #1
 12739 05c2 0133     		adds	r3, r3, #1
 12740 05c4 6049     		ldr	r1, .L542
 12741 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12742 05c8 1846     		mov	r0, r3
 12743 05ca 6049     		ldr	r1, .L542+4
 12744 05cc 0346     		mov	r3, r0
 12745 05ce 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 287


 12746 05d0 0344     		add	r3, r3, r0
 12747 05d2 0B44     		add	r3, r3, r1
 12748 05d4 0133     		adds	r3, r3, #1
 12749 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12750 05d8 07F58A73 		add	r3, r7, #276
 12751 05dc 9954     		strb	r1, [r3, r2]
1730:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 12752              		.loc 1 1730 0
 12753 05de B7F89436 		ldrh	r3, [r7, #1684]
 12754 05e2 03F10902 		add	r2, r3, #9
 12755 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 12756 05ea 3221     		movs	r1, #50
 12757 05ec 01FB03F3 		mul	r3, r1, r3
 12758 05f0 1A44     		add	r2, r2, r3
 12759 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 12760 05f6 5B00     		lsls	r3, r3, #1
 12761 05f8 0133     		adds	r3, r3, #1
 12762 05fa 5349     		ldr	r1, .L542
 12763 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 12764 05fe 1846     		mov	r0, r3
 12765 0600 5249     		ldr	r1, .L542+4
 12766 0602 0346     		mov	r3, r0
 12767 0604 5B00     		lsls	r3, r3, #1
 12768 0606 0344     		add	r3, r3, r0
 12769 0608 0B44     		add	r3, r3, r1
 12770 060a 0233     		adds	r3, r3, #2
 12771 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12772 060e 07F58A73 		add	r3, r7, #276
 12773 0612 9954     		strb	r1, [r3, r2]
1731:..\src/command_processing.c ****                 
1732:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 12774              		.loc 1 1732 0
 12775 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12776 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12777 061c 1FE0     		b	.L513
 12778              	.L514:
1733:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12779              		.loc 1 1733 0 discriminator 3
 12780 061e B7F89436 		ldrh	r3, [r7, #1684]
 12781 0622 03F10A02 		add	r2, r3, #10
 12782 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 12783 062a 3221     		movs	r1, #50
 12784 062c 01FB03F3 		mul	r3, r1, r3
 12785 0630 1A44     		add	r2, r2, r3
 12786 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 12787 0636 1A44     		add	r2, r2, r3
 12788 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 12789 063c D31A     		subs	r3, r2, r3
 12790 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 12791 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 12792 0646 8A1A     		subs	r2, r1, r2
 12793 0648 07F1D801 		add	r1, r7, #216
 12794 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12795 064e 07F58A72 		add	r2, r7, #276
 12796 0652 D154     		strb	r1, [r2, r3]
1732:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12797              		.loc 1 1732 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 288


 12798 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 12799 0658 013B     		subs	r3, r3, #1
 12800 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 12801              	.L513:
1732:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 12802              		.loc 1 1732 0 is_stmt 0 discriminator 1
 12803 065e B7F8A236 		ldrh	r3, [r7, #1698]
 12804 0662 002B     		cmp	r3, #0
 12805 0664 DBD1     		bne	.L514
 12806              	.L512:
1711:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12807              		.loc 1 1711 0 is_stmt 1 discriminator 2
 12808 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 12809 066a 0133     		adds	r3, r3, #1
 12810 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 12811              	.L508:
1711:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 12812              		.loc 1 1711 0 is_stmt 0 discriminator 1
 12813 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 12814 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 12815 0678 9A42     		cmp	r2, r3
 12816 067a FFF4D9AE 		bcc	.L515
1734:..\src/command_processing.c ****                 }
1735:..\src/command_processing.c ****             }
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1738:..\src/command_processing.c ****             
1739:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 12817              		.loc 1 1739 0 is_stmt 1
 12818 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 12819 0682 1A46     		mov	r2, r3	@ movhi
 12820 0684 9200     		lsls	r2, r2, #2
 12821 0686 1344     		add	r3, r3, r2
 12822 0688 1A46     		mov	r2, r3	@ movhi
 12823 068a 9100     		lsls	r1, r2, #2
 12824 068c 1A46     		mov	r2, r3	@ movhi
 12825 068e 0B46     		mov	r3, r1	@ movhi
 12826 0690 1344     		add	r3, r3, r2
 12827 0692 5B00     		lsls	r3, r3, #1
 12828 0694 9AB2     		uxth	r2, r3
 12829 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12830 069a 1344     		add	r3, r3, r2
 12831 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1740:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 12832              		.loc 1 1740 0
 12833 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 12834 06a4 5A1E     		subs	r2, r3, #1
 12835 06a6 07F1C803 		add	r3, r7, #200
 12836 06aa 2A49     		ldr	r1, .L542+12
 12837 06ac 1846     		mov	r0, r3
 12838 06ae FFF7FEFF 		bl	sprintf
1741:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 12839              		.loc 1 1741 0
 12840 06b2 07F1C803 		add	r3, r7, #200
 12841 06b6 1846     		mov	r0, r3
 12842 06b8 FFF7FEFF 		bl	strlen
 12843 06bc 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 289


 12844 06be 87F89336 		strb	r3, [r7, #1683]
1742:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 12845              		.loc 1 1742 0
 12846 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 12847 06c6 0233     		adds	r3, r3, #2
 12848 06c8 07F58A72 		add	r2, r7, #276
 12849 06cc 0221     		movs	r1, #2
 12850 06ce D154     		strb	r1, [r2, r3]
1743:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 12851              		.loc 1 1743 0
 12852 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 12853 06d4 0333     		adds	r3, r3, #3
 12854 06d6 07F58A72 		add	r2, r7, #276
 12855 06da 0121     		movs	r1, #1
 12856 06dc D154     		strb	r1, [r2, r3]
1744:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 12857              		.loc 1 1744 0
 12858 06de B7F89436 		ldrh	r3, [r7, #1684]
 12859 06e2 0433     		adds	r3, r3, #4
 12860 06e4 1C4A     		ldr	r2, .L542+16
 12861 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 12862 06ea 07F58A72 		add	r2, r7, #276
 12863 06ee D154     		strb	r1, [r2, r3]
1745:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12864              		.loc 1 1745 0
 12865 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12866 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12867 06f8 18E0     		b	.L516
 12868              	.L517:
1746:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 12869              		.loc 1 1746 0 discriminator 3
 12870 06fa B7F89436 		ldrh	r3, [r7, #1684]
 12871 06fe 5A1D     		adds	r2, r3, #5
 12872 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 12873 0704 1A44     		add	r2, r2, r3
 12874 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 12875 070a D31A     		subs	r3, r2, r3
 12876 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 12877 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 12878 0714 8A1A     		subs	r2, r1, r2
 12879 0716 07F1C801 		add	r1, r7, #200
 12880 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 12881 071c 07F58A72 		add	r2, r7, #276
 12882 0720 D154     		strb	r1, [r2, r3]
1745:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12883              		.loc 1 1745 0 discriminator 3
 12884 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 12885 0726 013B     		subs	r3, r3, #1
 12886 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12887              	.L516:
1745:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 12888              		.loc 1 1745 0 is_stmt 0 discriminator 1
 12889 072c B7F8A436 		ldrh	r3, [r7, #1700]
 12890 0730 002B     		cmp	r3, #0
 12891 0732 E2D1     		bne	.L517
1747:..\src/command_processing.c ****                 
1748:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 290


1749:..\src/command_processing.c ****             
1750:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 12892              		.loc 1 1750 0 is_stmt 1
 12893 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12894 0738 3233     		adds	r3, r3, #50
 12895 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1751:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 12896              		.loc 1 1751 0
 12897 073e 0023     		movs	r3, #0
 12898 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 12899 0744 38E1     		b	.L518
 12900              	.L543:
 12901 0746 00BF     		.align	2
 12902              	.L542:
 12903 0748 00000000 		.word	IMU_connected
 12904 074c 00000000 		.word	MagCal
 12905 0750 00000000 		.word	N_IMU_Connected
 12906 0754 A4100000 		.word	.LC145
 12907 0758 00000000 		.word	c_mem
 12908              	.L521:
1752:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 12909              		.loc 1 1752 0
 12910 075c B7F89826 		ldrh	r2, [r7, #1688]
 12911 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 12912 0764 D118     		adds	r1, r2, r3
 12913 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 12914 076a D54A     		ldr	r2, .L544
 12915 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12916 076e 07F19C00 		add	r0, r7, #156
 12917 0772 0A46     		mov	r2, r1
 12918 0774 D349     		ldr	r1, .L544+4
 12919 0776 FFF7FEFF 		bl	sprintf
1753:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 12920              		.loc 1 1753 0
 12921 077a 07F19C03 		add	r3, r7, #156
 12922 077e 1846     		mov	r0, r3
 12923 0780 FFF7FEFF 		bl	strlen
 12924 0784 0346     		mov	r3, r0
 12925 0786 87F88F36 		strb	r3, [r7, #1679]
1754:..\src/command_processing.c ****             
1755:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 12926              		.loc 1 1755 0
 12927 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12928 078e 1A46     		mov	r2, r3	@ movhi
 12929 0790 9200     		lsls	r2, r2, #2
 12930 0792 1344     		add	r3, r3, r2
 12931 0794 1A46     		mov	r2, r3	@ movhi
 12932 0796 9100     		lsls	r1, r2, #2
 12933 0798 1A46     		mov	r2, r3	@ movhi
 12934 079a 0B46     		mov	r3, r1	@ movhi
 12935 079c 1344     		add	r3, r3, r2
 12936 079e 5B00     		lsls	r3, r3, #1
 12937 07a0 9AB2     		uxth	r2, r3
 12938 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12939 07a6 1344     		add	r3, r3, r2
 12940 07a8 9BB2     		uxth	r3, r3
 12941 07aa 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 291


 12942 07ac 9BB2     		uxth	r3, r3
 12943 07ae 1A46     		mov	r2, r3
 12944 07b0 07F58A73 		add	r3, r7, #276
 12945 07b4 0221     		movs	r1, #2
 12946 07b6 9954     		strb	r1, [r3, r2]
1756:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 12947              		.loc 1 1756 0
 12948 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12949 07bc 1A46     		mov	r2, r3	@ movhi
 12950 07be 9200     		lsls	r2, r2, #2
 12951 07c0 1344     		add	r3, r3, r2
 12952 07c2 1A46     		mov	r2, r3	@ movhi
 12953 07c4 9100     		lsls	r1, r2, #2
 12954 07c6 1A46     		mov	r2, r3	@ movhi
 12955 07c8 0B46     		mov	r3, r1	@ movhi
 12956 07ca 1344     		add	r3, r3, r2
 12957 07cc 5B00     		lsls	r3, r3, #1
 12958 07ce 9AB2     		uxth	r2, r3
 12959 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12960 07d4 1344     		add	r3, r3, r2
 12961 07d6 9BB2     		uxth	r3, r3
 12962 07d8 0333     		adds	r3, r3, #3
 12963 07da 9BB2     		uxth	r3, r3
 12964 07dc 1A46     		mov	r2, r3
 12965 07de 07F58A73 		add	r3, r7, #276
 12966 07e2 0521     		movs	r1, #5
 12967 07e4 9954     		strb	r1, [r3, r2]
1757:..\src/command_processing.c ****                 
1758:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12968              		.loc 1 1758 0
 12969 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 12970 07ea 1A46     		mov	r2, r3	@ movhi
 12971 07ec 9200     		lsls	r2, r2, #2
 12972 07ee 1344     		add	r3, r3, r2
 12973 07f0 1A46     		mov	r2, r3	@ movhi
 12974 07f2 9100     		lsls	r1, r2, #2
 12975 07f4 1A46     		mov	r2, r3	@ movhi
 12976 07f6 0B46     		mov	r3, r1	@ movhi
 12977 07f8 1344     		add	r3, r3, r2
 12978 07fa 5B00     		lsls	r3, r3, #1
 12979 07fc 9AB2     		uxth	r2, r3
 12980 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 12981 0802 1344     		add	r3, r3, r2
 12982 0804 9BB2     		uxth	r3, r3
 12983 0806 0433     		adds	r3, r3, #4
 12984 0808 9BB2     		uxth	r3, r3
 12985 080a 1846     		mov	r0, r3
 12986 080c B7F8A436 		ldrh	r3, [r7, #1700]
 12987 0810 AB4A     		ldr	r2, .L544
 12988 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12989 0814 1946     		mov	r1, r3
 12990 0816 AC4A     		ldr	r2, .L544+8
 12991 0818 0B46     		mov	r3, r1
 12992 081a 9B00     		lsls	r3, r3, #2
 12993 081c 0B44     		add	r3, r3, r1
 12994 081e 1344     		add	r3, r3, r2
 12995 0820 03F20223 		addw	r3, r3, #514
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 292


 12996 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 12997 0826 07F58A73 		add	r3, r7, #276
 12998 082a 1A54     		strb	r2, [r3, r0]
1759:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 12999              		.loc 1 1759 0
 13000 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13001 0830 1A46     		mov	r2, r3	@ movhi
 13002 0832 9200     		lsls	r2, r2, #2
 13003 0834 1344     		add	r3, r3, r2
 13004 0836 1A46     		mov	r2, r3	@ movhi
 13005 0838 9100     		lsls	r1, r2, #2
 13006 083a 1A46     		mov	r2, r3	@ movhi
 13007 083c 0B46     		mov	r3, r1	@ movhi
 13008 083e 1344     		add	r3, r3, r2
 13009 0840 5B00     		lsls	r3, r3, #1
 13010 0842 9AB2     		uxth	r2, r3
 13011 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13012 0848 1344     		add	r3, r3, r2
 13013 084a 9BB2     		uxth	r3, r3
 13014 084c 0533     		adds	r3, r3, #5
 13015 084e 9BB2     		uxth	r3, r3
 13016 0850 1846     		mov	r0, r3
 13017 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 13018 0856 9A4A     		ldr	r2, .L544
 13019 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13020 085a 1946     		mov	r1, r3
 13021 085c 9A4A     		ldr	r2, .L544+8
 13022 085e 0B46     		mov	r3, r1
 13023 0860 9B00     		lsls	r3, r3, #2
 13024 0862 0B44     		add	r3, r3, r1
 13025 0864 1344     		add	r3, r3, r2
 13026 0866 03F20323 		addw	r3, r3, #515
 13027 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13028 086c 07F58A73 		add	r3, r7, #276
 13029 0870 1A54     		strb	r2, [r3, r0]
1760:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13030              		.loc 1 1760 0
 13031 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13032 0876 1A46     		mov	r2, r3	@ movhi
 13033 0878 9200     		lsls	r2, r2, #2
 13034 087a 1344     		add	r3, r3, r2
 13035 087c 1A46     		mov	r2, r3	@ movhi
 13036 087e 9100     		lsls	r1, r2, #2
 13037 0880 1A46     		mov	r2, r3	@ movhi
 13038 0882 0B46     		mov	r3, r1	@ movhi
 13039 0884 1344     		add	r3, r3, r2
 13040 0886 5B00     		lsls	r3, r3, #1
 13041 0888 9AB2     		uxth	r2, r3
 13042 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13043 088e 1344     		add	r3, r3, r2
 13044 0890 9BB2     		uxth	r3, r3
 13045 0892 0633     		adds	r3, r3, #6
 13046 0894 9BB2     		uxth	r3, r3
 13047 0896 1846     		mov	r0, r3
 13048 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 13049 089c 884A     		ldr	r2, .L544
 13050 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 293


 13051 08a0 1946     		mov	r1, r3
 13052 08a2 894A     		ldr	r2, .L544+8
 13053 08a4 0B46     		mov	r3, r1
 13054 08a6 9B00     		lsls	r3, r3, #2
 13055 08a8 0B44     		add	r3, r3, r1
 13056 08aa 1344     		add	r3, r3, r2
 13057 08ac 03F50173 		add	r3, r3, #516
 13058 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13059 08b2 07F58A73 		add	r3, r7, #276
 13060 08b6 1A54     		strb	r2, [r3, r0]
1761:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13061              		.loc 1 1761 0
 13062 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13063 08bc 1A46     		mov	r2, r3	@ movhi
 13064 08be 9200     		lsls	r2, r2, #2
 13065 08c0 1344     		add	r3, r3, r2
 13066 08c2 1A46     		mov	r2, r3	@ movhi
 13067 08c4 9100     		lsls	r1, r2, #2
 13068 08c6 1A46     		mov	r2, r3	@ movhi
 13069 08c8 0B46     		mov	r3, r1	@ movhi
 13070 08ca 1344     		add	r3, r3, r2
 13071 08cc 5B00     		lsls	r3, r3, #1
 13072 08ce 9AB2     		uxth	r2, r3
 13073 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13074 08d4 1344     		add	r3, r3, r2
 13075 08d6 9BB2     		uxth	r3, r3
 13076 08d8 0733     		adds	r3, r3, #7
 13077 08da 9BB2     		uxth	r3, r3
 13078 08dc 1846     		mov	r0, r3
 13079 08de B7F8A436 		ldrh	r3, [r7, #1700]
 13080 08e2 774A     		ldr	r2, .L544
 13081 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13082 08e6 1946     		mov	r1, r3
 13083 08e8 774A     		ldr	r2, .L544+8
 13084 08ea 0B46     		mov	r3, r1
 13085 08ec 9B00     		lsls	r3, r3, #2
 13086 08ee 0B44     		add	r3, r3, r1
 13087 08f0 1344     		add	r3, r3, r2
 13088 08f2 03F20523 		addw	r3, r3, #517
 13089 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13090 08f8 07F58A73 		add	r3, r7, #276
 13091 08fc 1A54     		strb	r2, [r3, r0]
1762:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 13092              		.loc 1 1762 0
 13093 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13094 0902 1A46     		mov	r2, r3	@ movhi
 13095 0904 9200     		lsls	r2, r2, #2
 13096 0906 1344     		add	r3, r3, r2
 13097 0908 1A46     		mov	r2, r3	@ movhi
 13098 090a 9100     		lsls	r1, r2, #2
 13099 090c 1A46     		mov	r2, r3	@ movhi
 13100 090e 0B46     		mov	r3, r1	@ movhi
 13101 0910 1344     		add	r3, r3, r2
 13102 0912 5B00     		lsls	r3, r3, #1
 13103 0914 9AB2     		uxth	r2, r3
 13104 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13105 091a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 294


 13106 091c 9BB2     		uxth	r3, r3
 13107 091e 0833     		adds	r3, r3, #8
 13108 0920 9BB2     		uxth	r3, r3
 13109 0922 1846     		mov	r0, r3
 13110 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 13111 0928 654A     		ldr	r2, .L544
 13112 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13113 092c 1946     		mov	r1, r3
 13114 092e 664A     		ldr	r2, .L544+8
 13115 0930 0B46     		mov	r3, r1
 13116 0932 9B00     		lsls	r3, r3, #2
 13117 0934 0B44     		add	r3, r3, r1
 13118 0936 1344     		add	r3, r3, r2
 13119 0938 03F20623 		addw	r3, r3, #518
 13120 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13121 093e 07F58A73 		add	r3, r7, #276
 13122 0942 1A54     		strb	r2, [r3, r0]
1763:..\src/command_processing.c **** 
1764:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 13123              		.loc 1 1764 0
 13124 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13125 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13126 094c 2BE0     		b	.L519
 13127              	.L520:
1765:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13128              		.loc 1 1765 0 discriminator 3
 13129 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 13130 0952 1A46     		mov	r2, r3	@ movhi
 13131 0954 9200     		lsls	r2, r2, #2
 13132 0956 1344     		add	r3, r3, r2
 13133 0958 1A46     		mov	r2, r3	@ movhi
 13134 095a 9100     		lsls	r1, r2, #2
 13135 095c 1A46     		mov	r2, r3	@ movhi
 13136 095e 0B46     		mov	r3, r1	@ movhi
 13137 0960 1344     		add	r3, r3, r2
 13138 0962 5B00     		lsls	r3, r3, #1
 13139 0964 9AB2     		uxth	r2, r3
 13140 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13141 096a 1344     		add	r3, r3, r2
 13142 096c 9AB2     		uxth	r2, r3
 13143 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 13144 0972 9BB2     		uxth	r3, r3
 13145 0974 1344     		add	r3, r3, r2
 13146 0976 9AB2     		uxth	r2, r3
 13147 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 13148 097c D31A     		subs	r3, r2, r3
 13149 097e 9BB2     		uxth	r3, r3
 13150 0980 0933     		adds	r3, r3, #9
 13151 0982 9BB2     		uxth	r3, r3
 13152 0984 1946     		mov	r1, r3
 13153 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 13154 098a B7F8A236 		ldrh	r3, [r7, #1698]
 13155 098e D31A     		subs	r3, r2, r3
 13156 0990 07F19C02 		add	r2, r7, #156
 13157 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 13158 0996 07F58A73 		add	r3, r7, #276
 13159 099a 5A54     		strb	r2, [r3, r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 295


1764:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13160              		.loc 1 1764 0 discriminator 3
 13161 099c B7F8A236 		ldrh	r3, [r7, #1698]
 13162 09a0 013B     		subs	r3, r3, #1
 13163 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 13164              	.L519:
1764:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 13165              		.loc 1 1764 0 is_stmt 0 discriminator 1
 13166 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 13167 09aa 002B     		cmp	r3, #0
 13168 09ac CFD1     		bne	.L520
1751:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13169              		.loc 1 1751 0 is_stmt 1 discriminator 2
 13170 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 13171 09b2 0133     		adds	r3, r3, #1
 13172 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13173              	.L518:
1751:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 13174              		.loc 1 1751 0 is_stmt 0 discriminator 1
 13175 09b8 444B     		ldr	r3, .L544+12
 13176 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13177 09bc 9BB2     		uxth	r3, r3
 13178 09be B7F8A426 		ldrh	r2, [r7, #1700]
 13179 09c2 9A42     		cmp	r2, r3
 13180 09c4 FFF4CAAE 		bcc	.L521
1766:..\src/command_processing.c ****             }  
1767:..\src/command_processing.c ****           
1768:..\src/command_processing.c **** 
1769:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 13181              		.loc 1 1771 0 is_stmt 1
 13182 09c8 404B     		ldr	r3, .L544+12
 13183 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13184 09cc 9BB2     		uxth	r3, r3
 13185 09ce 1A46     		mov	r2, r3	@ movhi
 13186 09d0 9200     		lsls	r2, r2, #2
 13187 09d2 1344     		add	r3, r3, r2
 13188 09d4 1A46     		mov	r2, r3	@ movhi
 13189 09d6 9100     		lsls	r1, r2, #2
 13190 09d8 1A46     		mov	r2, r3	@ movhi
 13191 09da 0B46     		mov	r3, r1	@ movhi
 13192 09dc 1344     		add	r3, r3, r2
 13193 09de 5B00     		lsls	r3, r3, #1
 13194 09e0 9AB2     		uxth	r2, r3
 13195 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13196 09e6 1344     		add	r3, r3, r2
 13197 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1772:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 13198              		.loc 1 1772 0
 13199 09ec B7F89836 		ldrh	r3, [r7, #1688]
 13200 09f0 364A     		ldr	r2, .L544+12
 13201 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 13202 09f4 1A44     		add	r2, r2, r3
 13203 09f6 07F18003 		add	r3, r7, #128
 13204 09fa 3549     		ldr	r1, .L544+16
 13205 09fc 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 296


 13206 09fe FFF7FEFF 		bl	sprintf
1773:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 13207              		.loc 1 1773 0
 13208 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 13209 0a06 0233     		adds	r3, r3, #2
 13210 0a08 07F58A72 		add	r2, r7, #276
 13211 0a0c 0021     		movs	r1, #0
 13212 0a0e D154     		strb	r1, [r2, r3]
1774:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 13213              		.loc 1 1774 0
 13214 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 13215 0a14 0333     		adds	r3, r3, #3
 13216 0a16 07F58A72 		add	r2, r7, #276
 13217 0a1a 0121     		movs	r1, #1
 13218 0a1c D154     		strb	r1, [r2, r3]
1775:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 13219              		.loc 1 1775 0
 13220 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 13221 0a22 0433     		adds	r3, r3, #4
 13222 0a24 284A     		ldr	r2, .L544+8
 13223 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 13224 0a2a 07F58A72 		add	r2, r7, #276
 13225 0a2e D154     		strb	r1, [r2, r3]
1776:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 13226              		.loc 1 1776 0
 13227 0a30 254B     		ldr	r3, .L544+8
 13228 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 13229 0a36 012B     		cmp	r3, #1
 13230 0a38 17D0     		beq	.L523
 13231 0a3a 022B     		cmp	r3, #2
 13232 0a3c 28D0     		beq	.L524
 13233 0a3e 002B     		cmp	r3, #0
 13234 0a40 00D0     		beq	.L525
1777:..\src/command_processing.c ****                 case 0: 
1778:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1779:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1780:..\src/command_processing.c ****                     break;
1781:..\src/command_processing.c ****                 case 1: 
1782:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1783:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1784:..\src/command_processing.c ****                     break;
1785:..\src/command_processing.c ****                 case 2: 
1786:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1787:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1788:..\src/command_processing.c ****                     break;
1789:..\src/command_processing.c ****                 default:
1790:..\src/command_processing.c ****                     break;
 13235              		.loc 1 1790 0
 13236 0a42 38E0     		b	.L526
 13237              	.L525:
1778:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13238              		.loc 1 1778 0
 13239 0a44 07F18003 		add	r3, r7, #128
 13240 0a48 1846     		mov	r0, r3
 13241 0a4a FFF7FEFF 		bl	strlen
 13242 0a4e 0346     		mov	r3, r0
 13243 0a50 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 297


 13244 0a52 07F18003 		add	r3, r7, #128
 13245 0a56 1344     		add	r3, r3, r2
 13246 0a58 1E4A     		ldr	r2, .L544+20
 13247 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 13248 0a5c 1860     		str	r0, [r3]	@ unaligned
 13249 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13250 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c ****                     break;
 13251              		.loc 1 1779 0
 13252 0a62 1A23     		movs	r3, #26
 13253 0a64 87F89D36 		strb	r3, [r7, #1693]
1780:..\src/command_processing.c ****                 case 1: 
 13254              		.loc 1 1780 0
 13255 0a68 25E0     		b	.L526
 13256              	.L523:
1782:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 13257              		.loc 1 1782 0
 13258 0a6a 07F18003 		add	r3, r7, #128
 13259 0a6e 1846     		mov	r0, r3
 13260 0a70 FFF7FEFF 		bl	strlen
 13261 0a74 0346     		mov	r3, r0
 13262 0a76 1A46     		mov	r2, r3
 13263 0a78 07F18003 		add	r3, r7, #128
 13264 0a7c 1344     		add	r3, r3, r2
 13265 0a7e 164A     		ldr	r2, .L544+24
 13266 0a80 1068     		ldr	r0, [r2]	@ unaligned
 13267 0a82 1860     		str	r0, [r3]	@ unaligned
 13268 0a84 1279     		ldrb	r2, [r2, #4]
 13269 0a86 1A71     		strb	r2, [r3, #4]
1783:..\src/command_processing.c ****                     break;
 13270              		.loc 1 1783 0
 13271 0a88 1923     		movs	r3, #25
 13272 0a8a 87F89D36 		strb	r3, [r7, #1693]
1784:..\src/command_processing.c ****                 case 2: 
 13273              		.loc 1 1784 0
 13274 0a8e 12E0     		b	.L526
 13275              	.L524:
1786:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 13276              		.loc 1 1786 0
 13277 0a90 07F18003 		add	r3, r7, #128
 13278 0a94 1846     		mov	r0, r3
 13279 0a96 FFF7FEFF 		bl	strlen
 13280 0a9a 0346     		mov	r3, r0
 13281 0a9c 1A46     		mov	r2, r3
 13282 0a9e 07F18003 		add	r3, r7, #128
 13283 0aa2 1344     		add	r3, r3, r2
 13284 0aa4 0D4A     		ldr	r2, .L544+28
 13285 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 13286 0aa8 1860     		str	r0, [r3]	@ unaligned
 13287 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13288 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1787:..\src/command_processing.c ****                     break;
 13289              		.loc 1 1787 0
 13290 0aae 1A23     		movs	r3, #26
 13291 0ab0 87F89D36 		strb	r3, [r7, #1693]
1788:..\src/command_processing.c ****                 default:
 13292              		.loc 1 1788 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 298


 13293 0ab4 00BF     		nop
 13294              	.L526:
1791:..\src/command_processing.c ****             }            
1792:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 13295              		.loc 1 1792 0
 13296 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13297 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13298 0abe 28E0     		b	.L527
 13299              	.L545:
 13300              		.align	2
 13301              	.L544:
 13302 0ac0 00000000 		.word	IMU_connected
 13303 0ac4 B4100000 		.word	.LC146
 13304 0ac8 00000000 		.word	c_mem
 13305 0acc 00000000 		.word	N_IMU_Connected
 13306 0ad0 D0100000 		.word	.LC147
 13307 0ad4 E8100000 		.word	.LC148
 13308 0ad8 F0100000 		.word	.LC149
 13309 0adc F8100000 		.word	.LC150
 13310              	.L528:
1793:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13311              		.loc 1 1793 0 discriminator 3
 13312 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 13313 0ae4 5A1D     		adds	r2, r3, #5
 13314 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13315 0aea 1A44     		add	r2, r2, r3
 13316 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 13317 0af0 D31A     		subs	r3, r2, r3
 13318 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 13319 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 13320 0afa 8A1A     		subs	r2, r1, r2
 13321 0afc 07F18001 		add	r1, r7, #128
 13322 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13323 0b02 07F58A72 		add	r2, r7, #276
 13324 0b06 D154     		strb	r1, [r2, r3]
1792:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13325              		.loc 1 1792 0 discriminator 3
 13326 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 13327 0b0c 013B     		subs	r3, r3, #1
 13328 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13329              	.L527:
1792:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 13330              		.loc 1 1792 0 is_stmt 0 discriminator 1
 13331 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 13332 0b16 002B     		cmp	r3, #0
 13333 0b18 E2D1     		bne	.L528
1794:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1795:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 13334              		.loc 1 1795 0 is_stmt 1
 13335 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 13336 0b1e 5A1D     		adds	r2, r3, #5
 13337 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 13338 0b24 1344     		add	r3, r3, r2
 13339 0b26 07F58A72 		add	r2, r7, #276
 13340 0b2a 0121     		movs	r1, #1
 13341 0b2c D154     		strb	r1, [r2, r3]
1796:..\src/command_processing.c ****                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 299


1797:..\src/command_processing.c ****             
1798:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1799:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 13342              		.loc 1 1799 0
 13343 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13344 0b32 3233     		adds	r3, r3, #50
 13345 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1800:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13346              		.loc 1 1800 0
 13347 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13348 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13349 0b40 1AE0     		b	.L529
 13350              	.L530:
1801:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 13351              		.loc 1 1801 0 discriminator 3
 13352 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 13353 0b46 0233     		adds	r3, r3, #2
 13354 0b48 9BB2     		uxth	r3, r3
 13355 0b4a 1A46     		mov	r2, r3
 13356 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 13357 0b50 1A44     		add	r2, r2, r3
 13358 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 13359 0b56 D31A     		subs	r3, r2, r3
 13360 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 13361 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 13362 0b60 8A1A     		subs	r2, r1, r2
 13363 0b62 07F10801 		add	r1, r7, #8
 13364 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13365 0b68 07F58A72 		add	r2, r7, #276
 13366 0b6c D154     		strb	r1, [r2, r3]
1800:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13367              		.loc 1 1800 0 discriminator 3
 13368 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 13369 0b72 013B     		subs	r3, r3, #1
 13370 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13371              	.L529:
1800:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 13372              		.loc 1 1800 0 is_stmt 0 discriminator 1
 13373 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 13374 0b7c 002B     		cmp	r3, #0
 13375 0b7e E0D1     		bne	.L530
1802:..\src/command_processing.c **** 
1803:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 13376              		.loc 1 1803 0 is_stmt 1
 13377 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 13378 0b84 5C1E     		subs	r4, r3, #1
 13379 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 13380 0b8a DBB2     		uxtb	r3, r3
 13381 0b8c 013B     		subs	r3, r3, #1
 13382 0b8e DAB2     		uxtb	r2, r3
 13383 0b90 07F58A73 		add	r3, r7, #276
 13384 0b94 1146     		mov	r1, r2
 13385 0b96 1846     		mov	r0, r3
 13386 0b98 FFF7FEFF 		bl	LCRChecksum
 13387 0b9c 0346     		mov	r3, r0
 13388 0b9e 1A46     		mov	r2, r3
 13389 0ba0 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 300


 13390 0ba4 1A55     		strb	r2, [r3, r4]
1804:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 13391              		.loc 1 1804 0
 13392 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 13393 0baa 07F58A73 		add	r3, r7, #276
 13394 0bae 1146     		mov	r1, r2
 13395 0bb0 1846     		mov	r0, r3
 13396 0bb2 FFF7FEFF 		bl	commWrite
1805:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 13397              		.loc 1 1805 0
 13398 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1806:..\src/command_processing.c ****         break;
 13399              		.loc 1 1806 0
 13400 0bba 09E1     		b	.L531
 13401              	.L538:
1807:..\src/command_processing.c **** 
1808:..\src/command_processing.c **** //=========================================================     other_params
1809:..\src/command_processing.c ****         default: 
1810:..\src/command_processing.c ****             
1811:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 13402              		.loc 1 1811 0
 13403 0bbc BB1D     		adds	r3, r7, #6
 13404 0bbe 1A88     		ldrh	r2, [r3]
 13405 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 13406 0bc4 013B     		subs	r3, r3, #1
 13407 0bc6 9A42     		cmp	r2, r3
 13408 0bc8 C0F20181 		blt	.L539
1812:..\src/command_processing.c ****                 break;
1813:..\src/command_processing.c ****             
1814:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 13409              		.loc 1 1814 0
 13410 0bcc BB1D     		adds	r3, r7, #6
 13411 0bce 1A88     		ldrh	r2, [r3]
 13412 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 13413 0bd4 8149     		ldr	r1, .L546
 13414 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 13415 0bd8 0B44     		add	r3, r3, r1
 13416 0bda 9A42     		cmp	r2, r3
 13417 0bdc 05D1     		bne	.L533
1815:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 13418              		.loc 1 1815 0
 13419 0bde 804B     		ldr	r3, .L546+4
 13420 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13421 0be2 804B     		ldr	r3, .L546+8
 13422 0be4 83F80122 		strb	r2, [r3, #513]
1816:..\src/command_processing.c ****                 break;
 13423              		.loc 1 1816 0
 13424 0be8 F2E0     		b	.L531
 13425              	.L533:
1817:..\src/command_processing.c ****             }
1818:..\src/command_processing.c ****             
1819:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 13426              		.loc 1 1819 0
 13427 0bea BB1D     		adds	r3, r7, #6
 13428 0bec 1A88     		ldrh	r2, [r3]
 13429 0bee B7F89836 		ldrh	r3, [r7, #1688]
 13430 0bf2 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 301


 13431 0bf4 9A42     		cmp	r2, r3
 13432 0bf6 05D1     		bne	.L534
1820:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 13433              		.loc 1 1820 0
 13434 0bf8 794B     		ldr	r3, .L546+4
 13435 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 13436 0bfc 794B     		ldr	r3, .L546+8
 13437 0bfe 83F8A020 		strb	r2, [r3, #160]
1821:..\src/command_processing.c ****             }
1822:..\src/command_processing.c ****             else {
1823:..\src/command_processing.c ****             
1824:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1825:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1826:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1827:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1828:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1829:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1830:..\src/command_processing.c ****                 
1831:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1832:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1833:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1834:..\src/command_processing.c ****                 {
1835:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1836:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1837:..\src/command_processing.c ****                 }
1838:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1839:..\src/command_processing.c ****             
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             
1842:..\src/command_processing.c ****         break;
 13438              		.loc 1 1842 0
 13439 0c02 E5E0     		b	.L531
 13440              	.L534:
1825:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 13441              		.loc 1 1825 0
 13442 0c04 BB1D     		adds	r3, r7, #6
 13443 0c06 1A88     		ldrh	r2, [r3]
 13444 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 13445 0c0c D31A     		subs	r3, r2, r3
 13446 0c0e 764A     		ldr	r2, .L546+12
 13447 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13448 0c12 1946     		mov	r1, r3
 13449 0c14 724B     		ldr	r3, .L546+4
 13450 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 13451 0c18 724A     		ldr	r2, .L546+8
 13452 0c1a 0B46     		mov	r3, r1
 13453 0c1c 9B00     		lsls	r3, r3, #2
 13454 0c1e 0B44     		add	r3, r3, r1
 13455 0c20 1344     		add	r3, r3, r2
 13456 0c22 03F20223 		addw	r3, r3, #514
 13457 0c26 0246     		mov	r2, r0
 13458 0c28 1A70     		strb	r2, [r3]
1826:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 13459              		.loc 1 1826 0
 13460 0c2a BB1D     		adds	r3, r7, #6
 13461 0c2c 1A88     		ldrh	r2, [r3]
 13462 0c2e B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 302


 13463 0c32 D31A     		subs	r3, r2, r3
 13464 0c34 6C4A     		ldr	r2, .L546+12
 13465 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13466 0c38 1946     		mov	r1, r3
 13467 0c3a 694B     		ldr	r3, .L546+4
 13468 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 13469 0c3e 694A     		ldr	r2, .L546+8
 13470 0c40 0B46     		mov	r3, r1
 13471 0c42 9B00     		lsls	r3, r3, #2
 13472 0c44 0B44     		add	r3, r3, r1
 13473 0c46 1344     		add	r3, r3, r2
 13474 0c48 03F20323 		addw	r3, r3, #515
 13475 0c4c 0246     		mov	r2, r0
 13476 0c4e 1A70     		strb	r2, [r3]
1827:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 13477              		.loc 1 1827 0
 13478 0c50 BB1D     		adds	r3, r7, #6
 13479 0c52 1A88     		ldrh	r2, [r3]
 13480 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 13481 0c58 D31A     		subs	r3, r2, r3
 13482 0c5a 634A     		ldr	r2, .L546+12
 13483 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13484 0c5e 1946     		mov	r1, r3
 13485 0c60 5F4B     		ldr	r3, .L546+4
 13486 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 13487 0c64 5F4A     		ldr	r2, .L546+8
 13488 0c66 0B46     		mov	r3, r1
 13489 0c68 9B00     		lsls	r3, r3, #2
 13490 0c6a 0B44     		add	r3, r3, r1
 13491 0c6c 1344     		add	r3, r3, r2
 13492 0c6e 03F50173 		add	r3, r3, #516
 13493 0c72 0246     		mov	r2, r0
 13494 0c74 1A70     		strb	r2, [r3]
1828:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 13495              		.loc 1 1828 0
 13496 0c76 BB1D     		adds	r3, r7, #6
 13497 0c78 1A88     		ldrh	r2, [r3]
 13498 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 13499 0c7e D31A     		subs	r3, r2, r3
 13500 0c80 594A     		ldr	r2, .L546+12
 13501 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13502 0c84 1946     		mov	r1, r3
 13503 0c86 564B     		ldr	r3, .L546+4
 13504 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 13505 0c8a 564A     		ldr	r2, .L546+8
 13506 0c8c 0B46     		mov	r3, r1
 13507 0c8e 9B00     		lsls	r3, r3, #2
 13508 0c90 0B44     		add	r3, r3, r1
 13509 0c92 1344     		add	r3, r3, r2
 13510 0c94 03F20523 		addw	r3, r3, #517
 13511 0c98 0246     		mov	r2, r0
 13512 0c9a 1A70     		strb	r2, [r3]
1829:..\src/command_processing.c ****                 
 13513              		.loc 1 1829 0
 13514 0c9c BB1D     		adds	r3, r7, #6
 13515 0c9e 1A88     		ldrh	r2, [r3]
 13516 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 303


 13517 0ca4 D31A     		subs	r3, r2, r3
 13518 0ca6 504A     		ldr	r2, .L546+12
 13519 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13520 0caa 1946     		mov	r1, r3
 13521 0cac 4C4B     		ldr	r3, .L546+4
 13522 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 13523 0cb0 4C4A     		ldr	r2, .L546+8
 13524 0cb2 0B46     		mov	r3, r1
 13525 0cb4 9B00     		lsls	r3, r3, #2
 13526 0cb6 0B44     		add	r3, r3, r1
 13527 0cb8 1344     		add	r3, r3, r2
 13528 0cba 03F20623 		addw	r3, r3, #518
 13529 0cbe 0246     		mov	r2, r0
 13530 0cc0 1A70     		strb	r2, [r3]
1832:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 13531              		.loc 1 1832 0
 13532 0cc2 4A4B     		ldr	r3, .L546+16
 13533 0cc4 0122     		movs	r2, #1
 13534 0cc6 1A60     		str	r2, [r3]
1833:..\src/command_processing.c ****                 {
 13535              		.loc 1 1833 0
 13536 0cc8 0023     		movs	r3, #0
 13537 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13538 0cce 71E0     		b	.L536
 13539              	.L537:
1835:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 13540              		.loc 1 1835 0 discriminator 3
 13541 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 13542 0cd4 444A     		ldr	r2, .L546+12
 13543 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13544 0cd8 1C46     		mov	r4, r3
 13545 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 13546 0cde 424A     		ldr	r2, .L546+12
 13547 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13548 0ce2 1946     		mov	r1, r3
 13549 0ce4 3F4A     		ldr	r2, .L546+8
 13550 0ce6 0B46     		mov	r3, r1
 13551 0ce8 9B00     		lsls	r3, r3, #2
 13552 0cea 0B44     		add	r3, r3, r1
 13553 0cec 1344     		add	r3, r3, r2
 13554 0cee 03F20223 		addw	r3, r3, #514
 13555 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13556 0cf4 1A46     		mov	r2, r3
 13557 0cf6 1346     		mov	r3, r2
 13558 0cf8 5B00     		lsls	r3, r3, #1
 13559 0cfa 1344     		add	r3, r3, r2
 13560 0cfc 5B00     		lsls	r3, r3, #1
 13561 0cfe 5A1C     		adds	r2, r3, #1
 13562 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 13563 0d04 3849     		ldr	r1, .L546+12
 13564 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13565 0d08 1846     		mov	r0, r3
 13566 0d0a 3649     		ldr	r1, .L546+8
 13567 0d0c 0346     		mov	r3, r0
 13568 0d0e 9B00     		lsls	r3, r3, #2
 13569 0d10 0344     		add	r3, r3, r0
 13570 0d12 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 304


 13571 0d14 03F20323 		addw	r3, r3, #515
 13572 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13573 0d1a 1946     		mov	r1, r3
 13574 0d1c 0B46     		mov	r3, r1
 13575 0d1e 5B00     		lsls	r3, r3, #1
 13576 0d20 0B44     		add	r3, r3, r1
 13577 0d22 5B00     		lsls	r3, r3, #1
 13578 0d24 1A44     		add	r2, r2, r3
 13579 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 13580 0d2a 2F49     		ldr	r1, .L546+12
 13581 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13582 0d2e 1846     		mov	r0, r3
 13583 0d30 2C49     		ldr	r1, .L546+8
 13584 0d32 0346     		mov	r3, r0
 13585 0d34 9B00     		lsls	r3, r3, #2
 13586 0d36 0344     		add	r3, r3, r0
 13587 0d38 0B44     		add	r3, r3, r1
 13588 0d3a 03F50173 		add	r3, r3, #516
 13589 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13590 0d40 1946     		mov	r1, r3
 13591 0d42 0B46     		mov	r3, r1
 13592 0d44 5B00     		lsls	r3, r3, #1
 13593 0d46 0B44     		add	r3, r3, r1
 13594 0d48 5B00     		lsls	r3, r3, #1
 13595 0d4a 1A44     		add	r2, r2, r3
 13596 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 13597 0d50 2549     		ldr	r1, .L546+12
 13598 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13599 0d54 1846     		mov	r0, r3
 13600 0d56 2349     		ldr	r1, .L546+8
 13601 0d58 0346     		mov	r3, r0
 13602 0d5a 9B00     		lsls	r3, r3, #2
 13603 0d5c 0344     		add	r3, r3, r0
 13604 0d5e 0B44     		add	r3, r3, r1
 13605 0d60 03F20523 		addw	r3, r3, #517
 13606 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13607 0d66 1B01     		lsls	r3, r3, #4
 13608 0d68 1A44     		add	r2, r2, r3
 13609 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 13610 0d6e 1E49     		ldr	r1, .L546+12
 13611 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13612 0d72 1846     		mov	r0, r3
 13613 0d74 1B49     		ldr	r1, .L546+8
 13614 0d76 0346     		mov	r3, r0
 13615 0d78 9B00     		lsls	r3, r3, #2
 13616 0d7a 0344     		add	r3, r3, r0
 13617 0d7c 0B44     		add	r3, r3, r1
 13618 0d7e 03F20623 		addw	r3, r3, #518
 13619 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13620 0d84 5B00     		lsls	r3, r3, #1
 13621 0d86 1344     		add	r3, r3, r2
 13622 0d88 0133     		adds	r3, r3, #1
 13623 0d8a 194A     		ldr	r2, .L546+20
 13624 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1836:..\src/command_processing.c ****                 }
 13625              		.loc 1 1836 0 discriminator 3
 13626 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 305


 13627 0d94 144A     		ldr	r2, .L546+12
 13628 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13629 0d98 1A46     		mov	r2, r3
 13630 0d9a 154B     		ldr	r3, .L546+20
 13631 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 13632 0da0 124B     		ldr	r3, .L546+16
 13633 0da2 1B68     		ldr	r3, [r3]
 13634 0da4 1344     		add	r3, r3, r2
 13635 0da6 114A     		ldr	r2, .L546+16
 13636 0da8 1360     		str	r3, [r2]
1833:..\src/command_processing.c ****                 {
 13637              		.loc 1 1833 0 discriminator 3
 13638 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 13639 0dae 0133     		adds	r3, r3, #1
 13640 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 13641              	.L536:
1833:..\src/command_processing.c ****                 {
 13642              		.loc 1 1833 0 is_stmt 0 discriminator 1
 13643 0db4 094B     		ldr	r3, .L546
 13644 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13645 0db8 9BB2     		uxth	r3, r3
 13646 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 13647 0dbe 9A42     		cmp	r2, r3
 13648 0dc0 86D3     		bcc	.L537
1838:..\src/command_processing.c ****             
 13649              		.loc 1 1838 0 is_stmt 1
 13650 0dc2 0A4B     		ldr	r3, .L546+16
 13651 0dc4 1B68     		ldr	r3, [r3]
 13652 0dc6 0133     		adds	r3, r3, #1
 13653 0dc8 084A     		ldr	r2, .L546+16
 13654 0dca 1360     		str	r3, [r2]
 13655              		.loc 1 1842 0
 13656 0dcc 00E0     		b	.L531
 13657              	.L539:
1812:..\src/command_processing.c ****             
 13658              		.loc 1 1812 0
 13659 0dce 00BF     		nop
 13660              	.L531:
1843:..\src/command_processing.c ****     }
1844:..\src/command_processing.c **** }
 13661              		.loc 1 1844 0 discriminator 1
 13662 0dd0 00BF     		nop
 13663 0dd2 07F5D567 		add	r7, r7, #1704
 13664              		.cfi_def_cfa_offset 16
 13665 0dd6 BD46     		mov	sp, r7
 13666              		.cfi_def_cfa_register 13
 13667              		@ sp needed
 13668 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 13669              	.L547:
 13670 0dda 00BF     		.align	2
 13671              	.L546:
 13672 0ddc 00000000 		.word	N_IMU_Connected
 13673 0de0 00000000 		.word	g_rx
 13674 0de4 00000000 		.word	g_mem
 13675 0de8 00000000 		.word	IMU_connected
 13676 0dec 00000000 		.word	imus_data_size
 13677 0df0 00000000 		.word	single_imu_size
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 306


 13678              		.cfi_endproc
 13679              	.LFE70:
 13680              		.size	get_IMU_param_list, .-get_IMU_param_list
 13681              		.section	.text.setZeros,"ax",%progbits
 13682              		.align	2
 13683              		.global	setZeros
 13684              		.thumb
 13685              		.thumb_func
 13686              		.type	setZeros, %function
 13687              	setZeros:
 13688              	.LFB71:
1845:..\src/command_processing.c **** 
1846:..\src/command_processing.c **** //==============================================================================
1847:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1848:..\src/command_processing.c **** //==============================================================================
1849:..\src/command_processing.c **** 
1850:..\src/command_processing.c **** void setZeros()
1851:..\src/command_processing.c **** {
 13689              		.loc 1 1851 0
 13690              		.cfi_startproc
 13691              		@ args = 0, pretend = 0, frame = 8
 13692              		@ frame_needed = 1, uses_anonymous_args = 0
 13693 0000 B0B5     		push	{r4, r5, r7, lr}
 13694              		.cfi_def_cfa_offset 16
 13695              		.cfi_offset 4, -16
 13696              		.cfi_offset 5, -12
 13697              		.cfi_offset 7, -8
 13698              		.cfi_offset 14, -4
 13699 0002 82B0     		sub	sp, sp, #8
 13700              		.cfi_def_cfa_offset 24
 13701 0004 00AF     		add	r7, sp, #0
 13702              		.cfi_def_cfa_register 7
1852:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1853:..\src/command_processing.c ****     
1854:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 13703              		.loc 1 1854 0
 13704 0006 0023     		movs	r3, #0
 13705 0008 BB71     		strb	r3, [r7, #6]
 13706 000a 2BE0     		b	.L549
 13707              	.L552:
1855:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13708              		.loc 1 1855 0
 13709 000c 0023     		movs	r3, #0
 13710 000e FB71     		strb	r3, [r7, #7]
 13711 0010 22E0     		b	.L550
 13712              	.L551:
1856:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[j][i];
 13713              		.loc 1 1856 0 discriminator 3
 13714 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13715 0014 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 13716 0016 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13717 0018 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 13718 001a 194D     		ldr	r5, .L553
 13719 001c 0B46     		mov	r3, r1
 13720 001e 9B00     		lsls	r3, r3, #2
 13721 0020 0B44     		add	r3, r3, r1
 13722 0022 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 307


 13723 0024 55F82330 		ldr	r3, [r5, r3, lsl #2]
 13724 0028 1C46     		mov	r4, r3
 13725 002a 1649     		ldr	r1, .L553+4
 13726 002c 1346     		mov	r3, r2
 13727 002e 5B00     		lsls	r3, r3, #1
 13728 0030 1344     		add	r3, r3, r2
 13729 0032 9B00     		lsls	r3, r3, #2
 13730 0034 0344     		add	r3, r3, r0
 13731 0036 6633     		adds	r3, r3, #102
 13732 0038 41F82340 		str	r4, [r1, r3, lsl #2]
1857:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 13733              		.loc 1 1857 0 discriminator 3
 13734 003c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 13735 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13736 0040 1149     		ldr	r1, .L553+8
 13737 0042 3420     		movs	r0, #52
 13738 0044 00FB02F2 		mul	r2, r0, r2
 13739 0048 0A44     		add	r2, r2, r1
 13740 004a 1344     		add	r3, r3, r2
 13741 004c 1833     		adds	r3, r3, #24
 13742 004e 0022     		movs	r2, #0
 13743 0050 1A70     		strb	r2, [r3]
1855:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13744              		.loc 1 1855 0 discriminator 3
 13745 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13746 0054 0133     		adds	r3, r3, #1
 13747 0056 FB71     		strb	r3, [r7, #7]
 13748              	.L550:
1855:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13749              		.loc 1 1855 0 is_stmt 0 discriminator 1
 13750 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13751 005a 022B     		cmp	r3, #2
 13752 005c D9D9     		bls	.L551
1854:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13753              		.loc 1 1854 0 is_stmt 1 discriminator 2
 13754 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13755 0060 0133     		adds	r3, r3, #1
 13756 0062 BB71     		strb	r3, [r7, #6]
 13757              	.L549:
1854:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; i++) {
 13758              		.loc 1 1854 0 is_stmt 0 discriminator 1
 13759 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13760 0066 012B     		cmp	r3, #1
 13761 0068 D0D9     		bls	.L552
1858:..\src/command_processing.c ****         }
1859:..\src/command_processing.c ****     }
1860:..\src/command_processing.c ****     reset_last_value_flag = 1;
 13762              		.loc 1 1860 0 is_stmt 1
 13763 006a 084B     		ldr	r3, .L553+12
 13764 006c 0122     		movs	r2, #1
 13765 006e 1A70     		strb	r2, [r3]
1861:..\src/command_processing.c **** 
1862:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 13766              		.loc 1 1862 0
 13767 0070 0120     		movs	r0, #1
 13768 0072 FFF7FEFF 		bl	sendAcknowledgment
1863:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 308


 13769              		.loc 1 1863 0
 13770 0076 00BF     		nop
 13771 0078 0837     		adds	r7, r7, #8
 13772              		.cfi_def_cfa_offset 16
 13773 007a BD46     		mov	sp, r7
 13774              		.cfi_def_cfa_register 13
 13775              		@ sp needed
 13776 007c B0BD     		pop	{r4, r5, r7, pc}
 13777              	.L554:
 13778 007e 00BF     		.align	2
 13779              	.L553:
 13780 0080 00000000 		.word	data_encoder_raw
 13781 0084 00000000 		.word	g_mem
 13782 0088 00000000 		.word	g_meas
 13783 008c 00000000 		.word	reset_last_value_flag
 13784              		.cfi_endproc
 13785              	.LFE71:
 13786              		.size	setZeros, .-setZeros
 13787              		.section	.rodata
 13788              		.align	2
 13789              	.LC151:
 13790 1130 0D0A00   		.ascii	"\015\012\000"
 13791 1133 00       		.align	2
 13792              	.LC152:
 13793 1134 4669726D 		.ascii	"Firmware version: \000"
 13793      77617265 
 13793      20766572 
 13793      73696F6E 
 13793      3A2000
 13794 1147 00       		.align	2
 13795              	.LC153:
 13796 1148 47656E65 		.ascii	"Generic firmware v. 1.9.2 (PSoC5)\000"
 13796      72696320 
 13796      6669726D 
 13796      77617265 
 13796      20762E20 
 13797 116a 0000     		.align	2
 13798              	.LC154:
 13799 116c 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 13799      0A00
 13800 1172 0000     		.align	2
 13801              	.LC155:
 13802 1174 44455649 		.ascii	"DEVICE INFO\015\012\000"
 13802      43452049 
 13802      4E464F0D 
 13802      0A00
 13803 1182 0000     		.align	2
 13804              	.LC156:
 13805 1184 49443A20 		.ascii	"ID: %d\015\012\000"
 13805      25640D0A 
 13805      00
 13806 118d 000000   		.align	2
 13807              	.LC157:
 13808 1190 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 13808      63653A20 
 13808      534F4654 
 13808      48414E44 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 309


 13808      2050524F 
 13809 11a7 00       		.align	2
 13810              	.LC158:
 13811 11a8 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 13811      63653A20 
 13811      47454E45 
 13811      52494320 
 13811      32204D4F 
 13812 11c3 00       		.align	2
 13813              	.LC159:
 13814 11c4 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 13814      63653A20 
 13814      41495220 
 13814      4348414D 
 13814      42455253 
 13815 11eb 00       		.align	2
 13816              	.LC160:
 13817 11ec 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 13817      63653A20 
 13817      4F54544F 
 13817      424F434B 
 13817      20367620 
 13818 1216 0000     		.align	2
 13819              	.LC161:
 13820 1218 44657669 		.ascii	"Device: SOFTHAND 2 MOTORS\015\012\000"
 13820      63653A20 
 13820      534F4654 
 13820      48414E44 
 13820      2032204D 
 13821              		.align	2
 13822              	.LC162:
 13823 1234 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 13823      20736964 
 13823      653A2052 
 13823      49474854 
 13823      0D0A00
 13824 1247 00       		.align	2
 13825              	.LC163:
 13826 1248 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 13826      20736964 
 13826      653A204C 
 13826      4546540D 
 13826      0A00
 13827 125a 0000     		.align	2
 13828              	.LC164:
 13829 125c 55736572 		.ascii	"User: MARIA\015\012\000"
 13829      3A204D41 
 13829      5249410D 
 13829      0A00
 13830 126a 0000     		.align	2
 13831              	.LC165:
 13832 126c 55736572 		.ascii	"User: ROZA\015\012\000"
 13832      3A20524F 
 13832      5A410D0A 
 13832      00
 13833 1279 000000   		.align	2
 13834              	.LC166:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 310


 13835 127c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 13835      3A204745 
 13835      4E455249 
 13835      43205553 
 13835      45520D0A 
 13836 1291 000000   		.align	2
 13837              	.LC167:
 13838 1294 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 13838      52202564 
 13838      20494E46 
 13838      4F0D0A00 
 13839              		.align	2
 13840              	.LC168:
 13841 12a4 4D6F746F 		.ascii	"Motor reference\000"
 13841      72207265 
 13841      66657265 
 13841      6E636500 
 13842              		.align	2
 13843              	.LC169:
 13844 12b4 202D2043 		.ascii	" - Currents: \000"
 13844      75727265 
 13844      6E74733A 
 13844      2000
 13845 12c2 0000     		.align	2
 13846              	.LC170:
 13847 12c4 202D2050 		.ascii	" - Pwm: \000"
 13847      776D3A20 
 13847      00
 13848 12cd 000000   		.align	2
 13849              	.LC171:
 13850 12d0 202D2050 		.ascii	" - Position: \000"
 13850      6F736974 
 13850      696F6E3A 
 13850      2000
 13851 12de 0000     		.align	2
 13852              	.LC172:
 13853 12e0 25642000 		.ascii	"%d \000"
 13854              		.align	2
 13855              	.LC173:
 13856 12e4 4D6F746F 		.ascii	"Motor enabled: \000"
 13856      7220656E 
 13856      61626C65 
 13856      643A2000 
 13857              		.align	2
 13858              	.LC174:
 13859 12f4 5945530D 		.ascii	"YES\015\012\000"
 13859      0A00
 13860 12fa 0000     		.align	2
 13861              	.LC175:
 13862 12fc 4E4F0D0A 		.ascii	"NO\015\012\000"
 13862      00
 13863 1301 000000   		.align	2
 13864              	.LC176:
 13865 1304 50574D20 		.ascii	"PWM rescaling activation: \000"
 13865      72657363 
 13865      616C696E 
 13865      67206163 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 311


 13865      74697661 
 13866 131f 00       		.align	2
 13867              	.LC177:
 13868 1320 5945530A 		.ascii	"YES\012\000"
 13868      00
 13869 1325 000000   		.align	2
 13870              	.LC178:
 13871 1328 4E4F0A00 		.ascii	"NO\012\000"
 13872              		.align	2
 13873              	.LC179:
 13874 132c 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 13874      4C696D69 
 13874      743A2025 
 13874      640D0A00 
 13875              		.align	2
 13876              	.LC180:
 13877 133c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 13877      41535552 
 13877      454D454E 
 13877      54532049 
 13877      4E464F0D 
 13878 1352 0000     		.align	2
 13879              	.LC181:
 13880 1354 53656E73 		.ascii	"Sensor value: \000"
 13880      6F722076 
 13880      616C7565 
 13880      3A2000
 13881 1363 00       		.align	2
 13882              	.LC182:
 13883 1364 256400   		.ascii	"%d\000"
 13884 1367 00       		.align	2
 13885              	.LC183:
 13886 1368 2C2000   		.ascii	", \000"
 13887 136b 00       		.align	2
 13888              	.LC184:
 13889 136c 4A6F7973 		.ascii	"Joystick measurements: %d, %d\000"
 13889      7469636B 
 13889      206D6561 
 13889      73757265 
 13889      6D656E74 
 13890 138a 0000     		.align	2
 13891              	.LC185:
 13892 138c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 13892      65727920 
 13892      25642056 
 13892      6F6C7461 
 13892      67652028 
 13893 13a9 000000   		.align	2
 13894              	.LC186:
 13895 13ac 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 13895      20636861 
 13895      72676520 
 13895      706F7765 
 13895      72207465 
 13896 13d3 00       		.align	2
 13897              	.LC187:
 13898 13d4 43757272 		.ascii	"Current %d (mA): %ld\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 312


 13898      656E7420 
 13898      25642028 
 13898      6D41293A 
 13898      20256C64 
 13899 13e9 000000   		.align	2
 13900              	.LC188:
 13901 13ec 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 13901      20477261 
 13901      73702048 
 13901      6F6C6420 
 13901      43757272 
 13902 1411 000000   		.align	2
 13903              	.LC189:
 13904 1414 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 13904      544F5220 
 13904      25642043 
 13904      4F4E4649 
 13904      47555241 
 13905 142f 00       		.align	2
 13906              	.LC190:
 13907 1430 50494420 		.ascii	"PID Controller: \000"
 13907      436F6E74 
 13907      726F6C6C 
 13907      65723A20 
 13907      00
 13908              		.global	__aeabi_i2d
 13909              		.global	__aeabi_ddiv
 13910 1441 000000   		.align	2
 13911              	.LC191:
 13912 1444 50202D3E 		.ascii	"P -> %f  \000"
 13912      20256620 
 13912      2000
 13913 144e 0000     		.align	2
 13914              	.LC192:
 13915 1450 49202D3E 		.ascii	"I -> %f  \000"
 13915      20256620 
 13915      2000
 13916 145a 0000     		.align	2
 13917              	.LC193:
 13918 145c 44202D3E 		.ascii	"D -> %f\015\012\000"
 13918      2025660D 
 13918      0A00
 13919 1466 0000     		.align	2
 13920              	.LC194:
 13921 1468 43757272 		.ascii	"Current PID Controller: \000"
 13921      656E7420 
 13921      50494420 
 13921      436F6E74 
 13921      726F6C6C 
 13922 1481 000000   		.align	2
 13923              	.LC195:
 13924 1484 53746172 		.ascii	"Startup activation: YES\015\012\000"
 13924      74757020 
 13924      61637469 
 13924      76617469 
 13924      6F6E3A20 
 13925 149e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 313


 13926              	.LC196:
 13927 14a0 53746172 		.ascii	"Startup activation: NO\015\012\000"
 13927      74757020 
 13927      61637469 
 13927      76617469 
 13927      6F6E3A20 
 13928 14b9 000000   		.align	2
 13929              	.LC197:
 13930 14bc 496E7075 		.ascii	"Input mode: USB\015\012\000"
 13930      74206D6F 
 13930      64653A20 
 13930      5553420D 
 13930      0A00
 13931 14ce 0000     		.align	2
 13932              	.LC198:
 13933 14d0 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 13933      74206D6F 
 13933      64653A20 
 13933      48616E64 
 13933      6C650D0A 
 13934 14e5 000000   		.align	2
 13935              	.LC199:
 13936 14e8 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 13936      74206D6F 
 13936      64653A20 
 13936      454D4720 
 13936      70726F70 
 13937 1507 00       		.align	2
 13938              	.LC200:
 13939 1508 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 13939      74206D6F 
 13939      64653A20 
 13939      454D4720 
 13939      696E7465 
 13940 1523 00       		.align	2
 13941              	.LC201:
 13942 1524 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 13942      74206D6F 
 13942      64653A20 
 13942      454D4720 
 13942      46434653 
 13943 153b 00       		.align	2
 13944              	.LC202:
 13945 153c 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 13945      74206D6F 
 13945      64653A20 
 13945      454D4720 
 13945      46434653 
 13946 1557 00       		.align	2
 13947              	.LC203:
 13948 1558 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 13948      74206D6F 
 13948      64653A20 
 13948      4A6F7973 
 13948      7469636B 
 13949 156f 00       		.align	2
 13950              	.LC204:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 314


 13951 1570 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 13951      74206D6F 
 13951      64653A20 
 13951      454D4720 
 13951      70726F70 
 13952 159e 00       		.ascii	"\000"
 13953 159f 00       		.align	2
 13954              	.LC205:
 13955 15a0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 13955      726F6C20 
 13955      6D6F6465 
 13955      3A20506F 
 13955      73697469 
 13956 15b9 000000   		.align	2
 13957              	.LC206:
 13958 15bc 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 13958      726F6C20 
 13958      6D6F6465 
 13958      3A205057 
 13958      4D0D0A00 
 13959              		.align	2
 13960              	.LC207:
 13961 15d0 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 13961      726F6C20 
 13961      6D6F6465 
 13961      3A204375 
 13961      7272656E 
 13962              		.align	2
 13963              	.LC208:
 13964 15e8 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 13964      726F6C20 
 13964      6D6F6465 
 13964      3A20506F 
 13964      73697469 
 13965 160d 000000   		.align	2
 13966              	.LC209:
 13967 1610 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 13967      6C757465 
 13967      20656E63 
 13967      6F646572 
 13967      20706F73 
 13968 1631 000000   		.align	2
 13969              	.LC210:
 13970 1634 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 13970      6C757465 
 13970      20656E63 
 13970      6F646572 
 13970      20706F73 
 13971              		.align	2
 13972              	.LC211:
 13973 1654 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 13973      722D4861 
 13973      6E646C65 
 13973      20526174 
 13973      696F3A20 
 13974 166d 000000   		.align	2
 13975              	.LC212:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 315


 13976 1670 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 13976      64657220 
 13976      696E6469 
 13976      63657320 
 13976      75736564 
 13977 1699 000000   		.align	2
 13978              	.LC213:
 13979 169c 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 13979      74204765 
 13979      61723A20 
 13979      25642074 
 13979      65657468 
 13980 16b3 00       		.align	2
 13981              	.LC214:
 13982 16b4 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 13982      6E642047 
 13982      6561723A 
 13982      20256420 
 13982      74656574 
 13983              		.align	2
 13984              	.LC215:
 13985 16cc 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 13985      20696E76 
 13985      61726961 
 13985      6E743A20 
 13985      25640D0A 
 13986 16e1 000000   		.align	2
 13987              	.LC216:
 13988 16e4 53656E73 		.ascii	"Sensor resolution: \000"
 13988      6F722072 
 13988      65736F6C 
 13988      7574696F 
 13988      6E3A2000 
 13989              		.align	2
 13990              	.LC217:
 13991 16f8 4D656173 		.ascii	"Measurement Offset: \000"
 13991      7572656D 
 13991      656E7420 
 13991      4F666673 
 13991      65743A20 
 13992 170d 000000   		.align	2
 13993              	.LC218:
 13994 1710 256C6400 		.ascii	"%ld\000"
 13995              		.align	2
 13996              	.LC219:
 13997 1714 4D656173 		.ascii	"Measurement Multiplier: \000"
 13997      7572656D 
 13997      656E7420 
 13997      4D756C74 
 13997      69706C69 
 13998              		.global	__aeabi_f2d
 13999 172d 000000   		.align	2
 14000              	.LC220:
 14001 1730 256600   		.ascii	"%f\000"
 14002 1733 00       		.align	2
 14003              	.LC221:
 14004 1734 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 316


 14004      656E7420 
 14004      6C6F6F6B 
 14004      75702074 
 14004      61626C65 
 14005 1762 00       		.ascii	"\000"
 14006 1763 00       		.align	2
 14007              	.LC222:
 14008 1764 506F7369 		.ascii	"Position limit active: %d\000"
 14008      74696F6E 
 14008      206C696D 
 14008      69742061 
 14008      63746976 
 14009 177e 0000     		.align	2
 14010              	.LC223:
 14011 1780 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 14011      74696F6E 
 14011      206C696D 
 14011      6974206D 
 14011      6F746F72 
 14012 17a3 00       		.align	2
 14013              	.LC224:
 14014 17a4 73757020 		.ascii	"sup -> %ld\015\012\000"
 14014      2D3E2025 
 14014      6C640D0A 
 14014      00
 14015 17b1 000000   		.align	2
 14016              	.LC225:
 14017 17b4 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 14017      73746570 
 14017      20706F73 
 14017      20616E64 
 14017      206E6567 
 14018              		.align	2
 14019              	.LC226:
 14020 17d0 43757272 		.ascii	"Current limit: %d\015\012\000"
 14020      656E7420 
 14020      6C696D69 
 14020      743A2025 
 14020      640D0A00 
 14021              		.align	2
 14022              	.LC227:
 14023 17e4 4D6F746F 		.ascii	"Motor board associated encoder line: %d\015\012\000"
 14023      7220626F 
 14023      61726420 
 14023      6173736F 
 14023      63696174 
 14024 180e 0000     		.align	2
 14025              	.LC228:
 14026 1810 44726976 		.ascii	"Driver type: MC33887 (Standard)\015\012\000"
 14026      65722074 
 14026      7970653A 
 14026      204D4333 
 14026      33383837 
 14027 1832 0000     		.align	2
 14028              	.LC229:
 14029 1834 44726976 		.ascii	"Driver type: VNH5019 (High power)\015\012\000"
 14029      65722074 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 317


 14029      7970653A 
 14029      20564E48 
 14029      35303139 
 14030              		.align	2
 14031              	.LC230:
 14032 1858 50574D20 		.ascii	"PWM rate limiter value: %d\015\012\000"
 14032      72617465 
 14032      206C696D 
 14032      69746572 
 14032      2076616C 
 14033 1875 000000   		.align	2
 14034              	.LC231:
 14035 1878 4E6F7420 		.ascii	"Not reversible motor: YES\015\012\000"
 14035      72657665 
 14035      72736962 
 14035      6C65206D 
 14035      6F746F72 
 14036              		.align	2
 14037              	.LC232:
 14038 1894 4E6F7420 		.ascii	"Not reversible motor: NO\015\012\000"
 14038      72657665 
 14038      72736962 
 14038      6C65206D 
 14038      6F746F72 
 14039 18af 00       		.align	2
 14040              	.LC233:
 14041 18b0 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 14041      434F4E46 
 14041      49475552 
 14041      4154494F 
 14041      4E0D0A00 
 14042              		.align	2
 14043              	.LC234:
 14044 18c4 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 14044      74687265 
 14044      73686F6C 
 14044      6473205B 
 14044      30202D20 
 14045 18e6 0000     		.align	2
 14046              	.LC235:
 14047 18e8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 14047      6D617820 
 14047      76616C75 
 14047      6573205B 
 14047      30202D20 
 14048              		.align	2
 14049              	.LC236:
 14050 190c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 14050      696E7665 
 14050      7273696F 
 14050      6E3A2059 
 14050      45530D0A 
 14051 1921 000000   		.align	2
 14052              	.LC237:
 14053 1924 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 14053      696E7665 
 14053      7273696F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 318


 14053      6E3A204E 
 14053      4F0D0A00 
 14054              		.align	2
 14055              	.LC238:
 14056 1938 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 14056      62726174 
 14056      696F6E20 
 14056      656E6162 
 14056      6C65643A 
 14057 1953 00       		.align	2
 14058              	.LC239:
 14059 1954 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 14059      62726174 
 14059      696F6E20 
 14059      656E6162 
 14059      6C65643A 
 14060 196e 0000     		.align	2
 14061              	.LC240:
 14062 1970 454D4720 		.ascii	"EMG max speed: %d %d\000"
 14062      6D617820 
 14062      73706565 
 14062      643A2025 
 14062      64202564 
 14063 1985 000000   		.align	2
 14064              	.LC241:
 14065 1988 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 14065      74696F6E 
 14065      616C2041 
 14065      44432073 
 14065      656E736F 
 14066              		.align	2
 14067              	.LC242:
 14068 19a8 41444320 		.ascii	"ADC %d -> %d\000"
 14068      2564202D 
 14068      3E202564 
 14068      00
 14069 19b5 000000   		.align	2
 14070              	.LC243:
 14071 19b8 454D4720 		.ascii	"EMG input %d -> %d\000"
 14071      696E7075 
 14071      74202564 
 14071      202D3E20 
 14071      256400
 14072 19cb 00       		.align	2
 14073              	.LC244:
 14074 19cc 4A4F5953 		.ascii	"JOYSTICK CONFIGURATION\015\012\000"
 14074      5449434B 
 14074      20434F4E 
 14074      46494755 
 14074      52415449 
 14075 19e5 000000   		.align	2
 14076              	.LC245:
 14077 19e8 436C6F73 		.ascii	"Closure speed: %d\000"
 14077      75726520 
 14077      73706565 
 14077      643A2025 
 14077      6400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 319


 14078 19fa 0000     		.align	2
 14079              	.LC246:
 14080 19fc 4A6F7973 		.ascii	"Joystick Threshold: %d\000"
 14080      7469636B 
 14080      20546872 
 14080      6573686F 
 14080      6C643A20 
 14081 1a13 00       		.align	2
 14082              	.LC247:
 14083 1a14 4A6F7973 		.ascii	"Joystick Gains - X:%hu  Y:%hu\000"
 14083      7469636B 
 14083      20476169 
 14083      6E73202D 
 14083      20583A25 
 14084 1a32 0000     		.align	2
 14085              	.LC248:
 14086 1a34 52657374 		.ascii	"Rest time delay (ms): %d\000"
 14086      2074696D 
 14086      65206465 
 14086      6C617920 
 14086      286D7329 
 14087 1a4d 000000   		.align	2
 14088              	.LC249:
 14089 1a50 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 14089      2076656C 
 14089      6F636974 
 14089      7920636C 
 14089      6F737572 
 14090 1a76 0000     		.align	2
 14091              	.LC250:
 14092 1a78 52657374 		.ascii	"Rest position: %d\000"
 14092      20706F73 
 14092      6974696F 
 14092      6E3A2025 
 14092      6400
 14093 1a8a 0000     		.align	2
 14094              	.LC251:
 14095 1a8c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 14095      436F6E6E 
 14095      65637465 
 14095      643A2025 
 14095      640D0A00 
 14096              		.align	2
 14097              	.LC252:
 14098 1aa0 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 14098      20434F4E 
 14098      46494755 
 14098      52415449 
 14098      4F4E0D0A 
 14099 1ab5 000000   		.align	2
 14100              	.LC253:
 14101 1ab8 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 14101      2564200D 
 14101      0A094944 
 14101      3A202564 
 14101      0D0A00
 14102 1acb 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 320


 14103              	.LC254:
 14104 1acc 09416363 		.ascii	"\011Accelerometers: \000"
 14104      656C6572 
 14104      6F6D6574 
 14104      6572733A 
 14104      2000
 14105 1ade 0000     		.align	2
 14106              	.LC255:
 14107 1ae0 09477972 		.ascii	"\011Gyroscopes: \000"
 14107      6F73636F 
 14107      7065733A 
 14107      2000
 14108 1aee 0000     		.align	2
 14109              	.LC256:
 14110 1af0 094D6167 		.ascii	"\011Magnetometers: \000"
 14110      6E65746F 
 14110      6D657465 
 14110      72733A20 
 14110      00
 14111 1b01 000000   		.align	2
 14112              	.LC257:
 14113 1b04 09517561 		.ascii	"\011Quaternion: \000"
 14113      7465726E 
 14113      696F6E3A 
 14113      2000
 14114 1b12 0000     		.align	2
 14115              	.LC258:
 14116 1b14 0954656D 		.ascii	"\011Temperature: \000"
 14116      70657261 
 14116      74757265 
 14116      3A2000
 14117 1b23 00       		.align	2
 14118              	.LC259:
 14119 1b24 454E434F 		.ascii	"ENCODER CONFIGURATION\015\012\000"
 14119      44455220 
 14119      434F4E46 
 14119      49475552 
 14119      4154494F 
 14120              		.align	2
 14121              	.LC260:
 14122 1b3c 456E636F 		.ascii	"Encoder Connected Line %d: %d\000"
 14122      64657220 
 14122      436F6E6E 
 14122      65637465 
 14122      64204C69 
 14123 1b5a 0000     		.align	2
 14124              	.LC261:
 14125 1b5c 4C454654 		.ascii	"LEFT\000"
 14125      00
 14126 1b61 000000   		.align	2
 14127              	.LC262:
 14128 1b64 52494748 		.ascii	"RIGHT\000"
 14128      5400
 14129 1b6a 0000     		.align	2
 14130              	.LC263:
 14131 1b6c 205B2573 		.ascii	" [%s HAND main encoder line]\000"
 14131      2048414E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 321


 14131      44206D61 
 14131      696E2065 
 14131      6E636F64 
 14132 1b89 000000   		.align	2
 14133              	.LC264:
 14134 1b8c 52617720 		.ascii	"Raw value [status]:\015\012\000"
 14134      76616C75 
 14134      65205B73 
 14134      74617475 
 14134      735D3A0D 
 14135 1ba2 0000     		.align	2
 14136              	.LC265:
 14137 1ba4 4F4B00   		.ascii	"OK\000"
 14138 1ba7 00       		.align	2
 14139              	.LC266:
 14140 1ba8 5800     		.ascii	"X\000"
 14141 1baa 0000     		.align	2
 14142              	.LC267:
 14143 1bac 2564095B 		.ascii	"%d\011[%s]\015\012\000"
 14143      25735D0D 
 14143      0A00
 14144 1bb6 0000     		.align	2
 14145              	.LC268:
 14146 1bb8 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 14146      20465720 
 14146      6379636C 
 14146      65207469 
 14146      6D653A20 
 14147              		.align	2
 14148              	.LC269:
 14149 1bd4 0D0A0000 		.ascii	"\015\012\000\000"
 14150              		.section	.text.prepare_generic_info,"ax",%progbits
 14151              		.align	2
 14152              		.global	prepare_generic_info
 14153              		.thumb
 14154              		.thumb_func
 14155              		.type	prepare_generic_info, %function
 14156              	prepare_generic_info:
 14157              	.LFB72:
1864:..\src/command_processing.c **** 
1865:..\src/command_processing.c **** //==============================================================================
1866:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1867:..\src/command_processing.c **** //==============================================================================
1868:..\src/command_processing.c **** 
1869:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1870:..\src/command_processing.c **** {
 14158              		.loc 1 1870 0
 14159              		.cfi_startproc
 14160              		@ args = 0, pretend = 0, frame = 152
 14161              		@ frame_needed = 1, uses_anonymous_args = 0
 14162 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 14163              		.cfi_def_cfa_offset 36
 14164              		.cfi_offset 4, -36
 14165              		.cfi_offset 5, -32
 14166              		.cfi_offset 6, -28
 14167              		.cfi_offset 7, -24
 14168              		.cfi_offset 8, -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 322


 14169              		.cfi_offset 9, -16
 14170              		.cfi_offset 10, -12
 14171              		.cfi_offset 11, -8
 14172              		.cfi_offset 14, -4
 14173 0004 B1B0     		sub	sp, sp, #196
 14174              		.cfi_def_cfa_offset 232
 14175 0006 0AAF     		add	r7, sp, #40
 14176              		.cfi_def_cfa 7, 192
 14177 0008 7861     		str	r0, [r7, #20]
1871:..\src/command_processing.c ****     int i;
1872:..\src/command_processing.c **** 
1873:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 14178              		.loc 1 1873 0
 14179 000a C74B     		ldr	r3, .L678
 14180 000c C7F88830 		str	r3, [r7, #136]
1874:..\src/command_processing.c ****     
1875:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 14181              		.loc 1 1875 0
 14182 0010 C54B     		ldr	r3, .L678
 14183 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14184 0016 FA2B     		cmp	r3, #250
 14185 0018 02F08080 		beq	.L675
 14186              	.LBB20:
1876:..\src/command_processing.c ****         char str[100];
1877:..\src/command_processing.c ****         strcpy(info_string, "");
 14187              		.loc 1 1877 0
 14188 001c 7B69     		ldr	r3, [r7, #20]
 14189 001e 0022     		movs	r2, #0
 14190 0020 1A70     		strb	r2, [r3]
1878:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14191              		.loc 1 1878 0
 14192 0022 7869     		ldr	r0, [r7, #20]
 14193 0024 FFF7FEFF 		bl	strlen
 14194 0028 0346     		mov	r3, r0
 14195 002a 1A46     		mov	r2, r3
 14196 002c 7B69     		ldr	r3, [r7, #20]
 14197 002e 1344     		add	r3, r3, r2
 14198 0030 BE4A     		ldr	r2, .L678+4
 14199 0032 1188     		ldrh	r1, [r2]	@ unaligned
 14200 0034 9278     		ldrb	r2, [r2, #2]
 14201 0036 1980     		strh	r1, [r3]	@ unaligned
 14202 0038 9A70     		strb	r2, [r3, #2]
1879:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 14203              		.loc 1 1879 0
 14204 003a 7869     		ldr	r0, [r7, #20]
 14205 003c FFF7FEFF 		bl	strlen
 14206 0040 0346     		mov	r3, r0
 14207 0042 1A46     		mov	r2, r3
 14208 0044 7B69     		ldr	r3, [r7, #20]
 14209 0046 1344     		add	r3, r3, r2
 14210 0048 B94A     		ldr	r2, .L678+8
 14211 004a 1D46     		mov	r5, r3
 14212 004c 1446     		mov	r4, r2
 14213 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14214 0050 2860     		str	r0, [r5]	@ unaligned
 14215 0052 6960     		str	r1, [r5, #4]	@ unaligned
 14216 0054 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 323


 14217 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 14218 0058 2388     		ldrh	r3, [r4]	@ unaligned
 14219 005a A278     		ldrb	r2, [r4, #2]
 14220 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 14221 005e 1346     		mov	r3, r2
 14222 0060 AB74     		strb	r3, [r5, #18]
1880:..\src/command_processing.c ****         strcat(info_string, VERSION);
 14223              		.loc 1 1880 0
 14224 0062 7869     		ldr	r0, [r7, #20]
 14225 0064 FFF7FEFF 		bl	strlen
 14226 0068 0346     		mov	r3, r0
 14227 006a 1A46     		mov	r2, r3
 14228 006c 7B69     		ldr	r3, [r7, #20]
 14229 006e 1344     		add	r3, r3, r2
 14230 0070 B04A     		ldr	r2, .L678+12
 14231 0072 1446     		mov	r4, r2
 14232 0074 9E46     		mov	lr, r3
 14233 0076 04F1200C 		add	ip, r4, #32
 14234              	.L557:
 14235 007a 7546     		mov	r5, lr
 14236 007c 2646     		mov	r6, r4
 14237 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14238 0080 2860     		str	r0, [r5]	@ unaligned
 14239 0082 6960     		str	r1, [r5, #4]	@ unaligned
 14240 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 14241 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 14242 0088 1034     		adds	r4, r4, #16
 14243 008a 0EF1100E 		add	lr, lr, #16
 14244 008e 6445     		cmp	r4, ip
 14245 0090 F3D1     		bne	.L557
 14246 0092 7246     		mov	r2, lr
 14247 0094 2346     		mov	r3, r4
 14248 0096 1B88     		ldrh	r3, [r3]	@ unaligned
 14249 0098 1380     		strh	r3, [r2]	@ unaligned
1881:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 14250              		.loc 1 1881 0
 14251 009a 7869     		ldr	r0, [r7, #20]
 14252 009c FFF7FEFF 		bl	strlen
 14253 00a0 0346     		mov	r3, r0
 14254 00a2 1A46     		mov	r2, r3
 14255 00a4 7B69     		ldr	r3, [r7, #20]
 14256 00a6 1344     		add	r3, r3, r2
 14257 00a8 A34A     		ldr	r2, .L678+16
 14258 00aa 1068     		ldr	r0, [r2]	@ unaligned
 14259 00ac 1860     		str	r0, [r3]	@ unaligned
 14260 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14261 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1882:..\src/command_processing.c **** 
1883:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 14262              		.loc 1 1883 0
 14263 00b2 7869     		ldr	r0, [r7, #20]
 14264 00b4 FFF7FEFF 		bl	strlen
 14265 00b8 0346     		mov	r3, r0
 14266 00ba 1A46     		mov	r2, r3
 14267 00bc 7B69     		ldr	r3, [r7, #20]
 14268 00be 1344     		add	r3, r3, r2
 14269 00c0 9E4A     		ldr	r2, .L678+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 324


 14270 00c2 1C46     		mov	r4, r3
 14271 00c4 1346     		mov	r3, r2
 14272 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 14273 00c8 2060     		str	r0, [r4]	@ unaligned
 14274 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 14275 00cc A260     		str	r2, [r4, #8]	@ unaligned
 14276 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 14277 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1884:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 14278              		.loc 1 1884 0
 14279 00d2 D7F88830 		ldr	r3, [r7, #136]
 14280 00d6 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 14281 00da 1A46     		mov	r2, r3
 14282 00dc 07F11803 		add	r3, r7, #24
 14283 00e0 9749     		ldr	r1, .L678+24
 14284 00e2 1846     		mov	r0, r3
 14285 00e4 FFF7FEFF 		bl	sprintf
1885:..\src/command_processing.c ****         strcat(info_string, str);
 14286              		.loc 1 1885 0
 14287 00e8 07F11803 		add	r3, r7, #24
 14288 00ec 1946     		mov	r1, r3
 14289 00ee 7869     		ldr	r0, [r7, #20]
 14290 00f0 FFF7FEFF 		bl	strcat
1886:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 14291              		.loc 1 1886 0
 14292 00f4 D7F88830 		ldr	r3, [r7, #136]
 14293 00f8 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 14294 00fc 042B     		cmp	r3, #4
 14295 00fe 00F29180 		bhi	.L676
 14296 0102 01A2     		adr	r2, .L560
 14297 0104 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14298              		.p2align 2
 14299              	.L560:
 14300 0108 1D010000 		.word	.L559+1
 14301 010c 4B010000 		.word	.L561+1
 14302 0110 7B010000 		.word	.L562+1
 14303 0114 BD010000 		.word	.L563+1
 14304 0118 FD010000 		.word	.L564+1
 14305              		.p2align 1
 14306              	.L559:
1887:..\src/command_processing.c ****             case SOFTHAND_PRO:
1888:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 14307              		.loc 1 1888 0
 14308 011c 7869     		ldr	r0, [r7, #20]
 14309 011e FFF7FEFF 		bl	strlen
 14310 0122 0346     		mov	r3, r0
 14311 0124 1A46     		mov	r2, r3
 14312 0126 7B69     		ldr	r3, [r7, #20]
 14313 0128 1344     		add	r3, r3, r2
 14314 012a 864A     		ldr	r2, .L678+28
 14315 012c 1C46     		mov	r4, r3
 14316 012e 1546     		mov	r5, r2
 14317 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14318 0132 2060     		str	r0, [r4]	@ unaligned
 14319 0134 6160     		str	r1, [r4, #4]	@ unaligned
 14320 0136 A260     		str	r2, [r4, #8]	@ unaligned
 14321 0138 E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 325


 14322 013a 2868     		ldr	r0, [r5]	@ unaligned
 14323 013c 2061     		str	r0, [r4, #16]	@ unaligned
 14324 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 14325 0140 AA79     		ldrb	r2, [r5, #6]
 14326 0142 A382     		strh	r3, [r4, #20]	@ unaligned
 14327 0144 1346     		mov	r3, r2
 14328 0146 A375     		strb	r3, [r4, #22]
1889:..\src/command_processing.c ****                 break;
 14329              		.loc 1 1889 0
 14330 0148 6DE0     		b	.L565
 14331              	.L561:
1890:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1891:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 14332              		.loc 1 1891 0
 14333 014a 7869     		ldr	r0, [r7, #20]
 14334 014c FFF7FEFF 		bl	strlen
 14335 0150 0346     		mov	r3, r0
 14336 0152 1A46     		mov	r2, r3
 14337 0154 7B69     		ldr	r3, [r7, #20]
 14338 0156 1344     		add	r3, r3, r2
 14339 0158 7B4A     		ldr	r2, .L678+32
 14340 015a 1D46     		mov	r5, r3
 14341 015c 1446     		mov	r4, r2
 14342 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14343 0160 2860     		str	r0, [r5]	@ unaligned
 14344 0162 6960     		str	r1, [r5, #4]	@ unaligned
 14345 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 14346 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 14347 0168 03CC     		ldmia	r4!, {r0, r1}
 14348 016a 2861     		str	r0, [r5, #16]	@ unaligned
 14349 016c 6961     		str	r1, [r5, #20]	@ unaligned
 14350 016e 2388     		ldrh	r3, [r4]	@ unaligned
 14351 0170 A278     		ldrb	r2, [r4, #2]
 14352 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 14353 0174 1346     		mov	r3, r2
 14354 0176 AB76     		strb	r3, [r5, #26]
1892:..\src/command_processing.c ****                 break;
 14355              		.loc 1 1892 0
 14356 0178 55E0     		b	.L565
 14357              	.L562:
1893:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1894:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 14358              		.loc 1 1894 0
 14359 017a 7869     		ldr	r0, [r7, #20]
 14360 017c FFF7FEFF 		bl	strlen
 14361 0180 0346     		mov	r3, r0
 14362 0182 1A46     		mov	r2, r3
 14363 0184 7B69     		ldr	r3, [r7, #20]
 14364 0186 1344     		add	r3, r3, r2
 14365 0188 704A     		ldr	r2, .L678+36
 14366 018a 1446     		mov	r4, r2
 14367 018c 9E46     		mov	lr, r3
 14368 018e 04F1200C 		add	ip, r4, #32
 14369              	.L566:
 14370 0192 7546     		mov	r5, lr
 14371 0194 2646     		mov	r6, r4
 14372 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 326


 14373 0198 2860     		str	r0, [r5]	@ unaligned
 14374 019a 6960     		str	r1, [r5, #4]	@ unaligned
 14375 019c AA60     		str	r2, [r5, #8]	@ unaligned
 14376 019e EB60     		str	r3, [r5, #12]	@ unaligned
 14377 01a0 1034     		adds	r4, r4, #16
 14378 01a2 0EF1100E 		add	lr, lr, #16
 14379 01a6 6445     		cmp	r4, ip
 14380 01a8 F3D1     		bne	.L566
 14381 01aa 7346     		mov	r3, lr
 14382 01ac 2246     		mov	r2, r4
 14383 01ae 1068     		ldr	r0, [r2]	@ unaligned
 14384 01b0 1860     		str	r0, [r3]	@ unaligned
 14385 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 14386 01b4 9279     		ldrb	r2, [r2, #6]
 14387 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 14388 01b8 9A71     		strb	r2, [r3, #6]
1895:..\src/command_processing.c ****                 break;
 14389              		.loc 1 1895 0
 14390 01ba 34E0     		b	.L565
 14391              	.L563:
1896:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1897:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 14392              		.loc 1 1897 0
 14393 01bc 7869     		ldr	r0, [r7, #20]
 14394 01be FFF7FEFF 		bl	strlen
 14395 01c2 0346     		mov	r3, r0
 14396 01c4 1A46     		mov	r2, r3
 14397 01c6 7B69     		ldr	r3, [r7, #20]
 14398 01c8 1344     		add	r3, r3, r2
 14399 01ca 614A     		ldr	r2, .L678+40
 14400 01cc 1446     		mov	r4, r2
 14401 01ce 9E46     		mov	lr, r3
 14402 01d0 04F1200C 		add	ip, r4, #32
 14403              	.L567:
 14404 01d4 7546     		mov	r5, lr
 14405 01d6 2646     		mov	r6, r4
 14406 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14407 01da 2860     		str	r0, [r5]	@ unaligned
 14408 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 14409 01de AA60     		str	r2, [r5, #8]	@ unaligned
 14410 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14411 01e2 1034     		adds	r4, r4, #16
 14412 01e4 0EF1100E 		add	lr, lr, #16
 14413 01e8 6445     		cmp	r4, ip
 14414 01ea F3D1     		bne	.L567
 14415 01ec 7246     		mov	r2, lr
 14416 01ee 2346     		mov	r3, r4
 14417 01f0 03CB     		ldmia	r3!, {r0, r1}
 14418 01f2 1060     		str	r0, [r2]	@ unaligned
 14419 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 14420 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 14421 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
1898:..\src/command_processing.c ****                 break;
 14422              		.loc 1 1898 0
 14423 01fa 14E0     		b	.L565
 14424              	.L564:
1899:..\src/command_processing.c ****             case SOFTHAND_2_MOTORS:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 327


1900:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND 2 MOTORS\r\n");
 14425              		.loc 1 1900 0
 14426 01fc 7869     		ldr	r0, [r7, #20]
 14427 01fe FFF7FEFF 		bl	strlen
 14428 0202 0346     		mov	r3, r0
 14429 0204 1A46     		mov	r2, r3
 14430 0206 7B69     		ldr	r3, [r7, #20]
 14431 0208 1344     		add	r3, r3, r2
 14432 020a 524A     		ldr	r2, .L678+44
 14433 020c 1D46     		mov	r5, r3
 14434 020e 1446     		mov	r4, r2
 14435 0210 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14436 0212 2860     		str	r0, [r5]	@ unaligned
 14437 0214 6960     		str	r1, [r5, #4]	@ unaligned
 14438 0216 AA60     		str	r2, [r5, #8]	@ unaligned
 14439 0218 EB60     		str	r3, [r5, #12]	@ unaligned
 14440 021a 07CC     		ldmia	r4!, {r0, r1, r2}
 14441 021c 2861     		str	r0, [r5, #16]	@ unaligned
 14442 021e 6961     		str	r1, [r5, #20]	@ unaligned
 14443 0220 AA61     		str	r2, [r5, #24]	@ unaligned
1901:..\src/command_processing.c ****                 break;
 14444              		.loc 1 1901 0
 14445 0222 00E0     		b	.L565
 14446              	.L676:
1902:..\src/command_processing.c ****             default:
1903:..\src/command_processing.c ****                 break;
 14447              		.loc 1 1903 0
 14448 0224 00BF     		nop
 14449              	.L565:
1904:..\src/command_processing.c ****         }
1905:..\src/command_processing.c ****         
1906:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 14450              		.loc 1 1906 0
 14451 0226 D7F88830 		ldr	r3, [r7, #136]
 14452 022a 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 14453 022e 002B     		cmp	r3, #0
 14454 0230 02D0     		beq	.L569
 14455 0232 012B     		cmp	r3, #1
 14456 0234 15D0     		beq	.L570
 14457 0236 26E0     		b	.L568
 14458              	.L569:
1907:..\src/command_processing.c ****             case RIGHT_HAND:
1908:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 14459              		.loc 1 1908 0
 14460 0238 7869     		ldr	r0, [r7, #20]
 14461 023a FFF7FEFF 		bl	strlen
 14462 023e 0346     		mov	r3, r0
 14463 0240 1A46     		mov	r2, r3
 14464 0242 7B69     		ldr	r3, [r7, #20]
 14465 0244 1344     		add	r3, r3, r2
 14466 0246 444A     		ldr	r2, .L678+48
 14467 0248 1D46     		mov	r5, r3
 14468 024a 1446     		mov	r4, r2
 14469 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14470 024e 2860     		str	r0, [r5]	@ unaligned
 14471 0250 6960     		str	r1, [r5, #4]	@ unaligned
 14472 0252 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 328


 14473 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 14474 0256 2388     		ldrh	r3, [r4]	@ unaligned
 14475 0258 A278     		ldrb	r2, [r4, #2]
 14476 025a 2B82     		strh	r3, [r5, #16]	@ unaligned
 14477 025c 1346     		mov	r3, r2
 14478 025e AB74     		strb	r3, [r5, #18]
1909:..\src/command_processing.c ****                 break;
 14479              		.loc 1 1909 0
 14480 0260 11E0     		b	.L568
 14481              	.L570:
1910:..\src/command_processing.c ****             case LEFT_HAND:
1911:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 14482              		.loc 1 1911 0
 14483 0262 7869     		ldr	r0, [r7, #20]
 14484 0264 FFF7FEFF 		bl	strlen
 14485 0268 0346     		mov	r3, r0
 14486 026a 1A46     		mov	r2, r3
 14487 026c 7B69     		ldr	r3, [r7, #20]
 14488 026e 1344     		add	r3, r3, r2
 14489 0270 3A4A     		ldr	r2, .L678+52
 14490 0272 1D46     		mov	r5, r3
 14491 0274 1446     		mov	r4, r2
 14492 0276 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14493 0278 2860     		str	r0, [r5]	@ unaligned
 14494 027a 6960     		str	r1, [r5, #4]	@ unaligned
 14495 027c AA60     		str	r2, [r5, #8]	@ unaligned
 14496 027e EB60     		str	r3, [r5, #12]	@ unaligned
 14497 0280 2388     		ldrh	r3, [r4]	@ unaligned
 14498 0282 2B82     		strh	r3, [r5, #16]	@ unaligned
1912:..\src/command_processing.c ****                 break;
 14499              		.loc 1 1912 0
 14500 0284 00BF     		nop
 14501              	.L568:
1913:..\src/command_processing.c ****         }
1914:..\src/command_processing.c **** 
1915:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 14502              		.loc 1 1915 0
 14503 0286 D7F88830 		ldr	r3, [r7, #136]
 14504 028a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 14505 028e 012B     		cmp	r3, #1
 14506 0290 02D0     		beq	.L572
 14507 0292 022B     		cmp	r3, #2
 14508 0294 11D0     		beq	.L573
 14509 0296 21E0     		b	.L674
 14510              	.L572:
1916:..\src/command_processing.c ****             case MARIA:
1917:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 14511              		.loc 1 1917 0
 14512 0298 7869     		ldr	r0, [r7, #20]
 14513 029a FFF7FEFF 		bl	strlen
 14514 029e 0346     		mov	r3, r0
 14515 02a0 1A46     		mov	r2, r3
 14516 02a2 7B69     		ldr	r3, [r7, #20]
 14517 02a4 1344     		add	r3, r3, r2
 14518 02a6 2E4A     		ldr	r2, .L678+56
 14519 02a8 1C46     		mov	r4, r3
 14520 02aa 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 329


 14521 02ac 07CB     		ldmia	r3!, {r0, r1, r2}
 14522 02ae 2060     		str	r0, [r4]	@ unaligned
 14523 02b0 6160     		str	r1, [r4, #4]	@ unaligned
 14524 02b2 A260     		str	r2, [r4, #8]	@ unaligned
 14525 02b4 1B88     		ldrh	r3, [r3]	@ unaligned
 14526 02b6 A381     		strh	r3, [r4, #12]	@ unaligned
1918:..\src/command_processing.c ****                 break;
 14527              		.loc 1 1918 0
 14528 02b8 24E0     		b	.L574
 14529              	.L573:
1919:..\src/command_processing.c ****             case ROZA:
1920:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 14530              		.loc 1 1920 0
 14531 02ba 7869     		ldr	r0, [r7, #20]
 14532 02bc FFF7FEFF 		bl	strlen
 14533 02c0 0346     		mov	r3, r0
 14534 02c2 1A46     		mov	r2, r3
 14535 02c4 7B69     		ldr	r3, [r7, #20]
 14536 02c6 1344     		add	r3, r3, r2
 14537 02c8 264A     		ldr	r2, .L678+60
 14538 02ca 1C46     		mov	r4, r3
 14539 02cc 1346     		mov	r3, r2
 14540 02ce 07CB     		ldmia	r3!, {r0, r1, r2}
 14541 02d0 2060     		str	r0, [r4]	@ unaligned
 14542 02d2 6160     		str	r1, [r4, #4]	@ unaligned
 14543 02d4 A260     		str	r2, [r4, #8]	@ unaligned
 14544 02d6 1B78     		ldrb	r3, [r3]
 14545 02d8 2373     		strb	r3, [r4, #12]
1921:..\src/command_processing.c ****                 break;
 14546              		.loc 1 1921 0
 14547 02da 13E0     		b	.L574
 14548              	.L674:
1922:..\src/command_processing.c ****             default:
1923:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 14549              		.loc 1 1923 0
 14550 02dc 7869     		ldr	r0, [r7, #20]
 14551 02de FFF7FEFF 		bl	strlen
 14552 02e2 0346     		mov	r3, r0
 14553 02e4 1A46     		mov	r2, r3
 14554 02e6 7B69     		ldr	r3, [r7, #20]
 14555 02e8 1344     		add	r3, r3, r2
 14556 02ea 1F4A     		ldr	r2, .L678+64
 14557 02ec 1D46     		mov	r5, r3
 14558 02ee 1446     		mov	r4, r2
 14559 02f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14560 02f2 2860     		str	r0, [r5]	@ unaligned
 14561 02f4 6960     		str	r1, [r5, #4]	@ unaligned
 14562 02f6 AA60     		str	r2, [r5, #8]	@ unaligned
 14563 02f8 EB60     		str	r3, [r5, #12]	@ unaligned
 14564 02fa 2068     		ldr	r0, [r4]	@ unaligned
 14565 02fc 2861     		str	r0, [r5, #16]	@ unaligned
 14566 02fe 2379     		ldrb	r3, [r4, #4]
 14567 0300 2B75     		strb	r3, [r5, #20]
1924:..\src/command_processing.c ****                 break;
 14568              		.loc 1 1924 0
 14569 0302 00BF     		nop
 14570              	.L574:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 330


1925:..\src/command_processing.c ****         }
1926:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 14571              		.loc 1 1926 0
 14572 0304 7869     		ldr	r0, [r7, #20]
 14573 0306 FFF7FEFF 		bl	strlen
 14574 030a 0346     		mov	r3, r0
 14575 030c 1A46     		mov	r2, r3
 14576 030e 7B69     		ldr	r3, [r7, #20]
 14577 0310 1344     		add	r3, r3, r2
 14578 0312 064A     		ldr	r2, .L678+4
 14579 0314 1188     		ldrh	r1, [r2]	@ unaligned
 14580 0316 9278     		ldrb	r2, [r2, #2]
 14581 0318 1980     		strh	r1, [r3]	@ unaligned
 14582 031a 9A70     		strb	r2, [r3, #2]
 14583              	.LBB21:
1927:..\src/command_processing.c ****         
1928:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 14584              		.loc 1 1928 0
 14585 031c 0023     		movs	r3, #0
 14586 031e 87F89330 		strb	r3, [r7, #147]
 14587 0322 01F0D9B9 		b	.L575
 14588              	.L679:
 14589 0326 00BF     		.align	2
 14590              	.L678:
 14591 0328 00000000 		.word	c_mem
 14592 032c 30110000 		.word	.LC151
 14593 0330 34110000 		.word	.LC152
 14594 0334 48110000 		.word	.LC153
 14595 0338 6C110000 		.word	.LC154
 14596 033c 74110000 		.word	.LC155
 14597 0340 84110000 		.word	.LC156
 14598 0344 90110000 		.word	.LC157
 14599 0348 A8110000 		.word	.LC158
 14600 034c C4110000 		.word	.LC159
 14601 0350 EC110000 		.word	.LC160
 14602 0354 18120000 		.word	.LC161
 14603 0358 34120000 		.word	.LC162
 14604 035c 48120000 		.word	.LC163
 14605 0360 5C120000 		.word	.LC164
 14606 0364 6C120000 		.word	.LC165
 14607 0368 7C120000 		.word	.LC166
 14608              	.L640:
 14609              	.LBB22:
1929:..\src/command_processing.c ****             
1930:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 14610              		.loc 1 1930 0
 14611 036c 97F89330 		ldrb	r3, [r7, #147]
 14612 0370 87F88730 		strb	r3, [r7, #135]
1931:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 14613              		.loc 1 1931 0
 14614 0374 97F88720 		ldrb	r2, [r7, #135]	@ zero_extendqisi2
 14615 0378 1346     		mov	r3, r2
 14616 037a DB00     		lsls	r3, r3, #3
 14617 037c 9B1A     		subs	r3, r3, r2
 14618 037e 1B01     		lsls	r3, r3, #4
 14619 0380 B033     		adds	r3, r3, #176
 14620 0382 D7F88820 		ldr	r2, [r7, #136]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 331


 14621 0386 1344     		add	r3, r3, r2
 14622 0388 C7F88030 		str	r3, [r7, #128]
1932:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 14623              		.loc 1 1932 0
 14624 038c D7F88030 		ldr	r3, [r7, #128]
 14625 0390 93F86030 		ldrb	r3, [r3, #96]
 14626 0394 87F87F30 		strb	r3, [r7, #127]
1933:..\src/command_processing.c ****                   
1934:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 14627              		.loc 1 1934 0
 14628 0398 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14629 039c 5A1C     		adds	r2, r3, #1
 14630 039e 07F11803 		add	r3, r7, #24
 14631 03a2 AE49     		ldr	r1, .L680
 14632 03a4 1846     		mov	r0, r3
 14633 03a6 FFF7FEFF 		bl	sprintf
1935:..\src/command_processing.c ****             strcat(info_string, str);
 14634              		.loc 1 1935 0
 14635 03aa 07F11803 		add	r3, r7, #24
 14636 03ae 1946     		mov	r1, r3
 14637 03b0 7869     		ldr	r0, [r7, #20]
 14638 03b2 FFF7FEFF 		bl	strcat
1936:..\src/command_processing.c ****                         
1937:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 14639              		.loc 1 1937 0
 14640 03b6 7869     		ldr	r0, [r7, #20]
 14641 03b8 FFF7FEFF 		bl	strlen
 14642 03bc 0346     		mov	r3, r0
 14643 03be 1A46     		mov	r2, r3
 14644 03c0 7B69     		ldr	r3, [r7, #20]
 14645 03c2 1344     		add	r3, r3, r2
 14646 03c4 A64A     		ldr	r2, .L680+4
 14647 03c6 1C46     		mov	r4, r3
 14648 03c8 1546     		mov	r5, r2
 14649 03ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14650 03cc 2060     		str	r0, [r4]	@ unaligned
 14651 03ce 6160     		str	r1, [r4, #4]	@ unaligned
 14652 03d0 A260     		str	r2, [r4, #8]	@ unaligned
 14653 03d2 E360     		str	r3, [r4, #12]	@ unaligned
1938:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 14654              		.loc 1 1938 0
 14655 03d4 D7F88030 		ldr	r3, [r7, #128]
 14656 03d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14657 03dc 022B     		cmp	r3, #2
 14658 03de 10D1     		bne	.L576
1939:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 14659              		.loc 1 1939 0
 14660 03e0 7869     		ldr	r0, [r7, #20]
 14661 03e2 FFF7FEFF 		bl	strlen
 14662 03e6 0346     		mov	r3, r0
 14663 03e8 1A46     		mov	r2, r3
 14664 03ea 7B69     		ldr	r3, [r7, #20]
 14665 03ec 1344     		add	r3, r3, r2
 14666 03ee 9D4A     		ldr	r2, .L680+8
 14667 03f0 1C46     		mov	r4, r3
 14668 03f2 1346     		mov	r3, r2
 14669 03f4 07CB     		ldmia	r3!, {r0, r1, r2}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 332


 14670 03f6 2060     		str	r0, [r4]	@ unaligned
 14671 03f8 6160     		str	r1, [r4, #4]	@ unaligned
 14672 03fa A260     		str	r2, [r4, #8]	@ unaligned
 14673 03fc 1B88     		ldrh	r3, [r3]	@ unaligned
 14674 03fe A381     		strh	r3, [r4, #12]	@ unaligned
 14675 0400 25E0     		b	.L577
 14676              	.L576:
1940:..\src/command_processing.c ****             else {
1941:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 14677              		.loc 1 1941 0
 14678 0402 D7F88030 		ldr	r3, [r7, #128]
 14679 0406 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14680 040a 012B     		cmp	r3, #1
 14681 040c 0FD1     		bne	.L578
1942:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 14682              		.loc 1 1942 0
 14683 040e 7869     		ldr	r0, [r7, #20]
 14684 0410 FFF7FEFF 		bl	strlen
 14685 0414 0346     		mov	r3, r0
 14686 0416 1A46     		mov	r2, r3
 14687 0418 7B69     		ldr	r3, [r7, #20]
 14688 041a 1344     		add	r3, r3, r2
 14689 041c 9249     		ldr	r1, .L680+12
 14690 041e 1A46     		mov	r2, r3
 14691 0420 0B46     		mov	r3, r1
 14692 0422 03CB     		ldmia	r3!, {r0, r1}
 14693 0424 1060     		str	r0, [r2]	@ unaligned
 14694 0426 5160     		str	r1, [r2, #4]	@ unaligned
 14695 0428 1B78     		ldrb	r3, [r3]
 14696 042a 1372     		strb	r3, [r2, #8]
 14697 042c 0FE0     		b	.L577
 14698              	.L578:
1943:..\src/command_processing.c ****                 else
1944:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 14699              		.loc 1 1944 0
 14700 042e 7869     		ldr	r0, [r7, #20]
 14701 0430 FFF7FEFF 		bl	strlen
 14702 0434 0346     		mov	r3, r0
 14703 0436 1A46     		mov	r2, r3
 14704 0438 7B69     		ldr	r3, [r7, #20]
 14705 043a 1344     		add	r3, r3, r2
 14706 043c 8B4A     		ldr	r2, .L680+16
 14707 043e 1C46     		mov	r4, r3
 14708 0440 1346     		mov	r3, r2
 14709 0442 07CB     		ldmia	r3!, {r0, r1, r2}
 14710 0444 2060     		str	r0, [r4]	@ unaligned
 14711 0446 6160     		str	r1, [r4, #4]	@ unaligned
 14712 0448 A260     		str	r2, [r4, #8]	@ unaligned
 14713 044a 1B88     		ldrh	r3, [r3]	@ unaligned
 14714 044c A381     		strh	r3, [r4, #12]	@ unaligned
 14715              	.L577:
1945:..\src/command_processing.c ****             }
1946:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 14716              		.loc 1 1946 0
 14717 044e D7F88030 		ldr	r3, [r7, #128]
 14718 0452 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14719 0456 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 333


 14720 0458 13D1     		bne	.L579
1947:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 14721              		.loc 1 1947 0
 14722 045a 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14723 045e 844A     		ldr	r2, .L680+20
 14724 0460 1B01     		lsls	r3, r3, #4
 14725 0462 1344     		add	r3, r3, r2
 14726 0464 0433     		adds	r3, r3, #4
 14727 0466 1A68     		ldr	r2, [r3]
 14728 0468 07F11803 		add	r3, r7, #24
 14729 046c 8149     		ldr	r1, .L680+24
 14730 046e 1846     		mov	r0, r3
 14731 0470 FFF7FEFF 		bl	sprintf
1948:..\src/command_processing.c ****                 strcat(info_string,str);
 14732              		.loc 1 1948 0
 14733 0474 07F11803 		add	r3, r7, #24
 14734 0478 1946     		mov	r1, r3
 14735 047a 7869     		ldr	r0, [r7, #20]
 14736 047c FFF7FEFF 		bl	strcat
 14737 0480 39E0     		b	.L580
 14738              	.L579:
1949:..\src/command_processing.c ****             }
1950:..\src/command_processing.c ****             else {
1951:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 14739              		.loc 1 1951 0
 14740 0482 D7F88030 		ldr	r3, [r7, #128]
 14741 0486 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14742 048a 012B     		cmp	r3, #1
 14743 048c 13D1     		bne	.L581
1952:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 14744              		.loc 1 1952 0
 14745 048e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14746 0492 774A     		ldr	r2, .L680+20
 14747 0494 1B01     		lsls	r3, r3, #4
 14748 0496 1344     		add	r3, r3, r2
 14749 0498 0833     		adds	r3, r3, #8
 14750 049a 1A68     		ldr	r2, [r3]
 14751 049c 07F11803 		add	r3, r7, #24
 14752 04a0 7449     		ldr	r1, .L680+24
 14753 04a2 1846     		mov	r0, r3
 14754 04a4 FFF7FEFF 		bl	sprintf
1953:..\src/command_processing.c ****                     strcat(info_string,str);
 14755              		.loc 1 1953 0
 14756 04a8 07F11803 		add	r3, r7, #24
 14757 04ac 1946     		mov	r1, r3
 14758 04ae 7869     		ldr	r0, [r7, #20]
 14759 04b0 FFF7FEFF 		bl	strcat
 14760 04b4 1FE0     		b	.L580
 14761              	.L581:
1954:..\src/command_processing.c ****                 }
1955:..\src/command_processing.c ****                 else {
1956:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 14762              		.loc 1 1956 0
 14763 04b6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14764 04ba 6D4A     		ldr	r2, .L680+20
 14765 04bc 1B01     		lsls	r3, r3, #4
 14766 04be 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 334


 14767 04c0 1968     		ldr	r1, [r3]
 14768 04c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14769 04c6 D7F88800 		ldr	r0, [r7, #136]
 14770 04ca 1346     		mov	r3, r2
 14771 04cc 5B00     		lsls	r3, r3, #1
 14772 04ce 1344     		add	r3, r3, r2
 14773 04d0 1B01     		lsls	r3, r3, #4
 14774 04d2 0344     		add	r3, r3, r0
 14775 04d4 03F29513 		addw	r3, r3, #405
 14776 04d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14777 04da 41FA03F2 		asr	r2, r1, r3
 14778 04de 07F11803 		add	r3, r7, #24
 14779 04e2 6449     		ldr	r1, .L680+24
 14780 04e4 1846     		mov	r0, r3
 14781 04e6 FFF7FEFF 		bl	sprintf
1957:..\src/command_processing.c ****                     strcat(info_string,str);
 14782              		.loc 1 1957 0
 14783 04ea 07F11803 		add	r3, r7, #24
 14784 04ee 1946     		mov	r1, r3
 14785 04f0 7869     		ldr	r0, [r7, #20]
 14786 04f2 FFF7FEFF 		bl	strcat
 14787              	.L580:
1958:..\src/command_processing.c ****                 }
1959:..\src/command_processing.c ****             }
1960:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 14788              		.loc 1 1960 0
 14789 04f6 7869     		ldr	r0, [r7, #20]
 14790 04f8 FFF7FEFF 		bl	strlen
 14791 04fc 0346     		mov	r3, r0
 14792 04fe 1A46     		mov	r2, r3
 14793 0500 7B69     		ldr	r3, [r7, #20]
 14794 0502 1344     		add	r3, r3, r2
 14795 0504 5C4A     		ldr	r2, .L680+28
 14796 0506 1188     		ldrh	r1, [r2]	@ unaligned
 14797 0508 9278     		ldrb	r2, [r2, #2]
 14798 050a 1980     		strh	r1, [r3]	@ unaligned
 14799 050c 9A70     		strb	r2, [r3, #2]
1961:..\src/command_processing.c **** 
1962:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 14800              		.loc 1 1962 0
 14801 050e 07F11803 		add	r3, r7, #24
 14802 0512 5A4A     		ldr	r2, .L680+32
 14803 0514 1C46     		mov	r4, r3
 14804 0516 1346     		mov	r3, r2
 14805 0518 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 14806 051a 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1963:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 14807              		.loc 1 1963 0
 14808 051e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14809 0522 574A     		ldr	r2, .L680+36
 14810 0524 1B01     		lsls	r3, r3, #4
 14811 0526 1344     		add	r3, r3, r2
 14812 0528 0C33     		adds	r3, r3, #12
 14813 052a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14814 052c 03F00103 		and	r3, r3, #1
 14815 0530 002B     		cmp	r3, #0
 14816 0532 0FD0     		beq	.L582
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 335


1964:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 14817              		.loc 1 1964 0
 14818 0534 07F11803 		add	r3, r7, #24
 14819 0538 1846     		mov	r0, r3
 14820 053a FFF7FEFF 		bl	strlen
 14821 053e 0346     		mov	r3, r0
 14822 0540 1A46     		mov	r2, r3
 14823 0542 07F11803 		add	r3, r7, #24
 14824 0546 1344     		add	r3, r3, r2
 14825 0548 4E4A     		ldr	r2, .L680+40
 14826 054a 1068     		ldr	r0, [r2]	@ unaligned
 14827 054c 1860     		str	r0, [r3]	@ unaligned
 14828 054e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14829 0550 9A80     		strh	r2, [r3, #4]	@ unaligned
 14830 0552 0EE0     		b	.L583
 14831              	.L582:
1965:..\src/command_processing.c ****             } else {
1966:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 14832              		.loc 1 1966 0
 14833 0554 07F11803 		add	r3, r7, #24
 14834 0558 1846     		mov	r0, r3
 14835 055a FFF7FEFF 		bl	strlen
 14836 055e 0346     		mov	r3, r0
 14837 0560 1A46     		mov	r2, r3
 14838 0562 07F11803 		add	r3, r7, #24
 14839 0566 1344     		add	r3, r3, r2
 14840 0568 474A     		ldr	r2, .L680+44
 14841 056a 1068     		ldr	r0, [r2]	@ unaligned
 14842 056c 1860     		str	r0, [r3]	@ unaligned
 14843 056e 1279     		ldrb	r2, [r2, #4]
 14844 0570 1A71     		strb	r2, [r3, #4]
 14845              	.L583:
1967:..\src/command_processing.c ****             }
1968:..\src/command_processing.c ****             strcat(info_string, str);
 14846              		.loc 1 1968 0
 14847 0572 07F11803 		add	r3, r7, #24
 14848 0576 1946     		mov	r1, r3
 14849 0578 7869     		ldr	r0, [r7, #20]
 14850 057a FFF7FEFF 		bl	strcat
1969:..\src/command_processing.c ****                         
1970:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 14851              		.loc 1 1970 0
 14852 057e 7869     		ldr	r0, [r7, #20]
 14853 0580 FFF7FEFF 		bl	strlen
 14854 0584 0346     		mov	r3, r0
 14855 0586 1A46     		mov	r2, r3
 14856 0588 7B69     		ldr	r3, [r7, #20]
 14857 058a 1344     		add	r3, r3, r2
 14858 058c 3F4A     		ldr	r2, .L680+48
 14859 058e 1D46     		mov	r5, r3
 14860 0590 1446     		mov	r4, r2
 14861 0592 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14862 0594 2860     		str	r0, [r5]	@ unaligned
 14863 0596 6960     		str	r1, [r5, #4]	@ unaligned
 14864 0598 AA60     		str	r2, [r5, #8]	@ unaligned
 14865 059a EB60     		str	r3, [r5, #12]	@ unaligned
 14866 059c 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 336


 14867 059e 2861     		str	r0, [r5, #16]	@ unaligned
 14868 05a0 6961     		str	r1, [r5, #20]	@ unaligned
 14869 05a2 2388     		ldrh	r3, [r4]	@ unaligned
 14870 05a4 A278     		ldrb	r2, [r4, #2]
 14871 05a6 2B83     		strh	r3, [r5, #24]	@ unaligned
 14872 05a8 1346     		mov	r3, r2
 14873 05aa AB76     		strb	r3, [r5, #26]
1971:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 14874              		.loc 1 1971 0
 14875 05ac D7F88030 		ldr	r3, [r7, #128]
 14876 05b0 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 14877 05b4 012B     		cmp	r3, #1
 14878 05b6 0CD1     		bne	.L584
1972:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 14879              		.loc 1 1972 0
 14880 05b8 7869     		ldr	r0, [r7, #20]
 14881 05ba FFF7FEFF 		bl	strlen
 14882 05be 0346     		mov	r3, r0
 14883 05c0 1A46     		mov	r2, r3
 14884 05c2 7B69     		ldr	r3, [r7, #20]
 14885 05c4 1344     		add	r3, r3, r2
 14886 05c6 324A     		ldr	r2, .L680+52
 14887 05c8 1068     		ldr	r0, [r2]	@ unaligned
 14888 05ca 1860     		str	r0, [r3]	@ unaligned
 14889 05cc 1279     		ldrb	r2, [r2, #4]
 14890 05ce 1A71     		strb	r2, [r3, #4]
 14891 05d0 09E0     		b	.L585
 14892              	.L584:
1973:..\src/command_processing.c ****             else
1974:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 14893              		.loc 1 1974 0
 14894 05d2 7869     		ldr	r0, [r7, #20]
 14895 05d4 FFF7FEFF 		bl	strlen
 14896 05d8 0346     		mov	r3, r0
 14897 05da 1A46     		mov	r2, r3
 14898 05dc 7B69     		ldr	r3, [r7, #20]
 14899 05de 1344     		add	r3, r3, r2
 14900 05e0 2C4A     		ldr	r2, .L680+56
 14901 05e2 1068     		ldr	r0, [r2]	@ unaligned
 14902 05e4 1860     		str	r0, [r3]	@ unaligned
 14903              	.L585:
1975:..\src/command_processing.c ****             
1976:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 14904              		.loc 1 1976 0
 14905 05e6 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 14906 05ea 2B4A     		ldr	r2, .L680+60
 14907 05ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 14908 05ee 1A46     		mov	r2, r3
 14909 05f0 07F11803 		add	r3, r7, #24
 14910 05f4 2949     		ldr	r1, .L680+64
 14911 05f6 1846     		mov	r0, r3
 14912 05f8 FFF7FEFF 		bl	sprintf
1977:..\src/command_processing.c ****             strcat(info_string, str);
 14913              		.loc 1 1977 0
 14914 05fc 07F11803 		add	r3, r7, #24
 14915 0600 1946     		mov	r1, r3
 14916 0602 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 337


 14917 0604 FFF7FEFF 		bl	strcat
1978:..\src/command_processing.c **** 
1979:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 14918              		.loc 1 1979 0
 14919 0608 7869     		ldr	r0, [r7, #20]
 14920 060a FFF7FEFF 		bl	strlen
 14921 060e 0346     		mov	r3, r0
 14922 0610 1A46     		mov	r2, r3
 14923 0612 7B69     		ldr	r3, [r7, #20]
 14924 0614 1344     		add	r3, r3, r2
 14925 0616 224A     		ldr	r2, .L680+68
 14926 0618 1D46     		mov	r5, r3
 14927 061a 1446     		mov	r4, r2
 14928 061c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14929 061e 2860     		str	r0, [r5]	@ unaligned
 14930 0620 6960     		str	r1, [r5, #4]	@ unaligned
 14931 0622 AA60     		str	r2, [r5, #8]	@ unaligned
 14932 0624 EB60     		str	r3, [r5, #12]	@ unaligned
 14933 0626 2068     		ldr	r0, [r4]	@ unaligned
 14934 0628 2861     		str	r0, [r5, #16]	@ unaligned
 14935 062a A388     		ldrh	r3, [r4, #4]	@ unaligned
 14936 062c AB82     		strh	r3, [r5, #20]	@ unaligned
1980:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 14937              		.loc 1 1980 0
 14938 062e 7869     		ldr	r0, [r7, #20]
 14939 0630 FFF7FEFF 		bl	strlen
 14940 0634 0346     		mov	r3, r0
 14941 0636 1A46     		mov	r2, r3
 14942 0638 7B69     		ldr	r3, [r7, #20]
 14943 063a 1344     		add	r3, r3, r2
 14944 063c 194A     		ldr	r2, .L680+72
 14945 063e 1C46     		mov	r4, r3
 14946 0640 1346     		mov	r3, r2
 14947 0642 07CB     		ldmia	r3!, {r0, r1, r2}
 14948 0644 2060     		str	r0, [r4]	@ unaligned
 14949 0646 6160     		str	r1, [r4, #4]	@ unaligned
 14950 0648 A260     		str	r2, [r4, #8]	@ unaligned
 14951 064a 1A88     		ldrh	r2, [r3]	@ unaligned
 14952 064c 9B78     		ldrb	r3, [r3, #2]
 14953 064e A281     		strh	r2, [r4, #12]	@ unaligned
 14954 0650 A373     		strb	r3, [r4, #14]
1981:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 14955              		.loc 1 1981 0
 14956 0652 0023     		movs	r3, #0
 14957 0654 C7F89430 		str	r3, [r7, #148]
 14958 0658 65E0     		b	.L586
 14959              	.L681:
 14960 065a 00BF     		.align	2
 14961              	.L680:
 14962 065c 94120000 		.word	.LC167
 14963 0660 A4120000 		.word	.LC168
 14964 0664 B4120000 		.word	.LC169
 14965 0668 C4120000 		.word	.LC170
 14966 066c D0120000 		.word	.LC171
 14967 0670 00000000 		.word	g_refOld
 14968 0674 E0120000 		.word	.LC172
 14969 0678 30110000 		.word	.LC151
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 338


 14970 067c E4120000 		.word	.LC173
 14971 0680 00000000 		.word	g_ref
 14972 0684 F4120000 		.word	.LC174
 14973 0688 FC120000 		.word	.LC175
 14974 068c 04130000 		.word	.LC176
 14975 0690 20130000 		.word	.LC177
 14976 0694 28130000 		.word	.LC178
 14977 0698 00000000 		.word	dev_pwm_limit
 14978 069c 2C130000 		.word	.LC179
 14979 06a0 3C130000 		.word	.LC180
 14980 06a4 54130000 		.word	.LC181
 14981              	.L588:
1982:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 14982              		.loc 1 1982 0
 14983 06a8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14984 06ac B849     		ldr	r1, .L682
 14985 06ae 1346     		mov	r3, r2
 14986 06b0 5B00     		lsls	r3, r3, #1
 14987 06b2 1344     		add	r3, r3, r2
 14988 06b4 9B00     		lsls	r3, r3, #2
 14989 06b6 1344     		add	r3, r3, r2
 14990 06b8 D7F89420 		ldr	r2, [r7, #148]
 14991 06bc 1344     		add	r3, r3, r2
 14992 06be 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14993 06c2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 14994 06c6 D7F88800 		ldr	r0, [r7, #136]
 14995 06ca 1346     		mov	r3, r2
 14996 06cc 5B00     		lsls	r3, r3, #1
 14997 06ce 1344     		add	r3, r3, r2
 14998 06d0 1B01     		lsls	r3, r3, #4
 14999 06d2 C218     		adds	r2, r0, r3
 15000 06d4 D7F89430 		ldr	r3, [r7, #148]
 15001 06d8 1344     		add	r3, r3, r2
 15002 06da 03F29513 		addw	r3, r3, #405
 15003 06de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15004 06e0 41FA03F2 		asr	r2, r1, r3
 15005 06e4 07F11803 		add	r3, r7, #24
 15006 06e8 AA49     		ldr	r1, .L682+4
 15007 06ea 1846     		mov	r0, r3
 15008 06ec FFF7FEFF 		bl	sprintf
1983:..\src/command_processing.c ****                 strcat(info_string, str);
 15009              		.loc 1 1983 0
 15010 06f0 07F11803 		add	r3, r7, #24
 15011 06f4 1946     		mov	r1, r3
 15012 06f6 7869     		ldr	r0, [r7, #20]
 15013 06f8 FFF7FEFF 		bl	strcat
1984:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 15014              		.loc 1 1984 0
 15015 06fc D7F89430 		ldr	r3, [r7, #148]
 15016 0700 022B     		cmp	r3, #2
 15017 0702 0BD0     		beq	.L587
1985:..\src/command_processing.c ****                     strcat(info_string, ", ");
 15018              		.loc 1 1985 0
 15019 0704 7869     		ldr	r0, [r7, #20]
 15020 0706 FFF7FEFF 		bl	strlen
 15021 070a 0346     		mov	r3, r0
 15022 070c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 339


 15023 070e 7B69     		ldr	r3, [r7, #20]
 15024 0710 1344     		add	r3, r3, r2
 15025 0712 A14A     		ldr	r2, .L682+8
 15026 0714 1188     		ldrh	r1, [r2]	@ unaligned
 15027 0716 9278     		ldrb	r2, [r2, #2]
 15028 0718 1980     		strh	r1, [r3]	@ unaligned
 15029 071a 9A70     		strb	r2, [r3, #2]
 15030              	.L587:
1981:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15031              		.loc 1 1981 0 discriminator 2
 15032 071c D7F89430 		ldr	r3, [r7, #148]
 15033 0720 0133     		adds	r3, r3, #1
 15034 0722 C7F89430 		str	r3, [r7, #148]
 15035              	.L586:
1981:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 15036              		.loc 1 1981 0 is_stmt 0 discriminator 1
 15037 0726 D7F89430 		ldr	r3, [r7, #148]
 15038 072a 022B     		cmp	r3, #2
 15039 072c BCDD     		ble	.L588
1986:..\src/command_processing.c ****                 }                
1987:..\src/command_processing.c ****             }
1988:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15040              		.loc 1 1988 0 is_stmt 1
 15041 072e 7869     		ldr	r0, [r7, #20]
 15042 0730 FFF7FEFF 		bl	strlen
 15043 0734 0346     		mov	r3, r0
 15044 0736 1A46     		mov	r2, r3
 15045 0738 7B69     		ldr	r3, [r7, #20]
 15046 073a 1344     		add	r3, r3, r2
 15047 073c 974A     		ldr	r2, .L682+12
 15048 073e 1188     		ldrh	r1, [r2]	@ unaligned
 15049 0740 9278     		ldrb	r2, [r2, #2]
 15050 0742 1980     		strh	r1, [r3]	@ unaligned
 15051 0744 9A70     		strb	r2, [r3, #2]
1989:..\src/command_processing.c ****             
1990:..\src/command_processing.c ****             if (MOT->input_mode == INPUT_MODE_JOYSTICK){
 15052              		.loc 1 1990 0
 15053 0746 D7F88030 		ldr	r3, [r7, #128]
 15054 074a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15055 074e 062B     		cmp	r3, #6
 15056 0750 1AD1     		bne	.L589
1991:..\src/command_processing.c ****                 sprintf(str, "Joystick measurements: %d, %d", (int)g_adc_measOld.joystick[0], (int)
 15057              		.loc 1 1991 0
 15058 0752 934B     		ldr	r3, .L682+16
 15059 0754 1A6A     		ldr	r2, [r3, #32]
 15060 0756 924B     		ldr	r3, .L682+16
 15061 0758 5B6A     		ldr	r3, [r3, #36]
 15062 075a 07F11800 		add	r0, r7, #24
 15063 075e 9149     		ldr	r1, .L682+20
 15064 0760 FFF7FEFF 		bl	sprintf
1992:..\src/command_processing.c ****                 strcat(info_string, str);
 15065              		.loc 1 1992 0
 15066 0764 07F11803 		add	r3, r7, #24
 15067 0768 1946     		mov	r1, r3
 15068 076a 7869     		ldr	r0, [r7, #20]
 15069 076c FFF7FEFF 		bl	strcat
1993:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 340


 15070              		.loc 1 1993 0
 15071 0770 7869     		ldr	r0, [r7, #20]
 15072 0772 FFF7FEFF 		bl	strlen
 15073 0776 0346     		mov	r3, r0
 15074 0778 1A46     		mov	r2, r3
 15075 077a 7B69     		ldr	r3, [r7, #20]
 15076 077c 1344     		add	r3, r3, r2
 15077 077e 874A     		ldr	r2, .L682+12
 15078 0780 1188     		ldrh	r1, [r2]	@ unaligned
 15079 0782 9278     		ldrb	r2, [r2, #2]
 15080 0784 1980     		strh	r1, [r3]	@ unaligned
 15081 0786 9A70     		strb	r2, [r3, #2]
 15082              	.L589:
1994:..\src/command_processing.c ****             }
1995:..\src/command_processing.c **** 
1996:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 15083              		.loc 1 1996 0
 15084 0788 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15085 078c 591C     		adds	r1, r3, #1
 15086 078e 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15087 0792 854A     		ldr	r2, .L682+24
 15088 0794 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15089 0798 07F11800 		add	r0, r7, #24
 15090 079c 0A46     		mov	r2, r1
 15091 079e 8349     		ldr	r1, .L682+28
 15092 07a0 FFF7FEFF 		bl	sprintf
1997:..\src/command_processing.c ****             strcat(info_string, str);
 15093              		.loc 1 1997 0
 15094 07a4 07F11803 		add	r3, r7, #24
 15095 07a8 1946     		mov	r1, r3
 15096 07aa 7869     		ldr	r0, [r7, #20]
 15097 07ac FFF7FEFF 		bl	strcat
1998:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15098              		.loc 1 1998 0
 15099 07b0 7869     		ldr	r0, [r7, #20]
 15100 07b2 FFF7FEFF 		bl	strlen
 15101 07b6 0346     		mov	r3, r0
 15102 07b8 1A46     		mov	r2, r3
 15103 07ba 7B69     		ldr	r3, [r7, #20]
 15104 07bc 1344     		add	r3, r3, r2
 15105 07be 774A     		ldr	r2, .L682+12
 15106 07c0 1188     		ldrh	r1, [r2]	@ unaligned
 15107 07c2 9278     		ldrb	r2, [r2, #2]
 15108 07c4 1980     		strh	r1, [r3]	@ unaligned
 15109 07c6 9A70     		strb	r2, [r3, #2]
1999:..\src/command_processing.c ****             
2000:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 15110              		.loc 1 2000 0
 15111 07c8 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15112 07cc 591C     		adds	r1, r3, #1
 15113 07ce 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15114 07d2 774A     		ldr	r2, .L682+32
 15115 07d4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 15116 07d8 07F11800 		add	r0, r7, #24
 15117 07dc 0A46     		mov	r2, r1
 15118 07de 7549     		ldr	r1, .L682+36
 15119 07e0 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 341


2001:..\src/command_processing.c ****             strcat(info_string, str);
 15120              		.loc 1 2001 0
 15121 07e4 07F11803 		add	r3, r7, #24
 15122 07e8 1946     		mov	r1, r3
 15123 07ea 7869     		ldr	r0, [r7, #20]
 15124 07ec FFF7FEFF 		bl	strcat
2002:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15125              		.loc 1 2002 0
 15126 07f0 7869     		ldr	r0, [r7, #20]
 15127 07f2 FFF7FEFF 		bl	strlen
 15128 07f6 0346     		mov	r3, r0
 15129 07f8 1A46     		mov	r2, r3
 15130 07fa 7B69     		ldr	r3, [r7, #20]
 15131 07fc 1344     		add	r3, r3, r2
 15132 07fe 674A     		ldr	r2, .L682+12
 15133 0800 1188     		ldrh	r1, [r2]	@ unaligned
 15134 0802 9278     		ldrb	r2, [r2, #2]
 15135 0804 1980     		strh	r1, [r3]	@ unaligned
 15136 0806 9A70     		strb	r2, [r3, #2]
2003:..\src/command_processing.c **** 
2004:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 15137              		.loc 1 2004 0
 15138 0808 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15139 080c 5C1C     		adds	r4, r3, #1
 15140 080e 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15141 0812 5F4A     		ldr	r2, .L682
 15142 0814 3421     		movs	r1, #52
 15143 0816 01FB03F3 		mul	r3, r1, r3
 15144 081a 1344     		add	r3, r3, r2
 15145 081c 0C33     		adds	r3, r3, #12
 15146 081e 1B68     		ldr	r3, [r3]
 15147 0820 07F11800 		add	r0, r7, #24
 15148 0824 2246     		mov	r2, r4
 15149 0826 6449     		ldr	r1, .L682+40
 15150 0828 FFF7FEFF 		bl	sprintf
2005:..\src/command_processing.c ****             strcat(info_string, str);
 15151              		.loc 1 2005 0
 15152 082c 07F11803 		add	r3, r7, #24
 15153 0830 1946     		mov	r1, r3
 15154 0832 7869     		ldr	r0, [r7, #20]
 15155 0834 FFF7FEFF 		bl	strcat
2006:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15156              		.loc 1 2006 0
 15157 0838 7869     		ldr	r0, [r7, #20]
 15158 083a FFF7FEFF 		bl	strlen
 15159 083e 0346     		mov	r3, r0
 15160 0840 1A46     		mov	r2, r3
 15161 0842 7B69     		ldr	r3, [r7, #20]
 15162 0844 1344     		add	r3, r3, r2
 15163 0846 554A     		ldr	r2, .L682+12
 15164 0848 1188     		ldrh	r1, [r2]	@ unaligned
 15165 084a 9278     		ldrb	r2, [r2, #2]
 15166 084c 1980     		strh	r1, [r3]	@ unaligned
 15167 084e 9A70     		strb	r2, [r3, #2]
2007:..\src/command_processing.c ****             
2008:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 15168              		.loc 1 2008 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 342


 15169 0850 D7F88030 		ldr	r3, [r7, #128]
 15170 0854 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 15171 0858 012B     		cmp	r3, #1
 15172 085a 23D1     		bne	.L590
2009:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 15173              		.loc 1 2009 0
 15174 085c 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15175 0860 5C1C     		adds	r4, r3, #1
 15176 0862 97F87F30 		ldrb	r3, [r7, #127]	@ zero_extendqisi2
 15177 0866 4A4A     		ldr	r2, .L682
 15178 0868 3421     		movs	r1, #52
 15179 086a 01FB03F3 		mul	r3, r1, r3
 15180 086e 1344     		add	r3, r3, r2
 15181 0870 1433     		adds	r3, r3, #20
 15182 0872 1B68     		ldr	r3, [r3]
 15183 0874 07F11800 		add	r0, r7, #24
 15184 0878 2246     		mov	r2, r4
 15185 087a 5049     		ldr	r1, .L682+44
 15186 087c FFF7FEFF 		bl	sprintf
2010:..\src/command_processing.c ****                 strcat(info_string, str);
 15187              		.loc 1 2010 0
 15188 0880 07F11803 		add	r3, r7, #24
 15189 0884 1946     		mov	r1, r3
 15190 0886 7869     		ldr	r0, [r7, #20]
 15191 0888 FFF7FEFF 		bl	strcat
2011:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 15192              		.loc 1 2011 0
 15193 088c 7869     		ldr	r0, [r7, #20]
 15194 088e FFF7FEFF 		bl	strlen
 15195 0892 0346     		mov	r3, r0
 15196 0894 1A46     		mov	r2, r3
 15197 0896 7B69     		ldr	r3, [r7, #20]
 15198 0898 1344     		add	r3, r3, r2
 15199 089a 404A     		ldr	r2, .L682+12
 15200 089c 1188     		ldrh	r1, [r2]	@ unaligned
 15201 089e 9278     		ldrb	r2, [r2, #2]
 15202 08a0 1980     		strh	r1, [r3]	@ unaligned
 15203 08a2 9A70     		strb	r2, [r3, #2]
 15204              	.L590:
2012:..\src/command_processing.c ****             }
2013:..\src/command_processing.c ****             
2014:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 15205              		.loc 1 2014 0
 15206 08a4 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 15207 08a8 5A1C     		adds	r2, r3, #1
 15208 08aa 07F11803 		add	r3, r7, #24
 15209 08ae 4449     		ldr	r1, .L682+48
 15210 08b0 1846     		mov	r0, r3
 15211 08b2 FFF7FEFF 		bl	sprintf
2015:..\src/command_processing.c ****             strcat(info_string, str);
 15212              		.loc 1 2015 0
 15213 08b6 07F11803 		add	r3, r7, #24
 15214 08ba 1946     		mov	r1, r3
 15215 08bc 7869     		ldr	r0, [r7, #20]
 15216 08be FFF7FEFF 		bl	strcat
2016:..\src/command_processing.c **** 
2017:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 343


 15217              		.loc 1 2017 0
 15218 08c2 7869     		ldr	r0, [r7, #20]
 15219 08c4 FFF7FEFF 		bl	strlen
 15220 08c8 0346     		mov	r3, r0
 15221 08ca 1A46     		mov	r2, r3
 15222 08cc 7B69     		ldr	r3, [r7, #20]
 15223 08ce 1344     		add	r3, r3, r2
 15224 08d0 3C4A     		ldr	r2, .L682+52
 15225 08d2 1D46     		mov	r5, r3
 15226 08d4 1446     		mov	r4, r2
 15227 08d6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15228 08d8 2860     		str	r0, [r5]	@ unaligned
 15229 08da 6960     		str	r1, [r5, #4]	@ unaligned
 15230 08dc AA60     		str	r2, [r5, #8]	@ unaligned
 15231 08de EB60     		str	r3, [r5, #12]	@ unaligned
 15232 08e0 2378     		ldrb	r3, [r4]
 15233 08e2 2B74     		strb	r3, [r5, #16]
2018:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15234              		.loc 1 2018 0
 15235 08e4 D7F88030 		ldr	r3, [r7, #128]
 15236 08e8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15237 08ec 032B     		cmp	r3, #3
 15238 08ee 73D0     		beq	.L591
2019:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15239              		.loc 1 2019 0
 15240 08f0 D7F88030 		ldr	r3, [r7, #128]
 15241 08f4 1B68     		ldr	r3, [r3]
 15242 08f6 1846     		mov	r0, r3
 15243 08f8 FFF7FEFF 		bl	__aeabi_i2d
 15244 08fc 4FF00002 		mov	r2, #0
 15245 0900 314B     		ldr	r3, .L682+56
 15246 0902 FFF7FEFF 		bl	__aeabi_ddiv
 15247 0906 0346     		mov	r3, r0
 15248 0908 0C46     		mov	r4, r1
 15249 090a 07F11800 		add	r0, r7, #24
 15250 090e 1A46     		mov	r2, r3
 15251 0910 2346     		mov	r3, r4
 15252 0912 2E49     		ldr	r1, .L682+60
 15253 0914 FFF7FEFF 		bl	sprintf
2020:..\src/command_processing.c ****                 strcat(info_string, str);
 15254              		.loc 1 2020 0
 15255 0918 07F11803 		add	r3, r7, #24
 15256 091c 1946     		mov	r1, r3
 15257 091e 7869     		ldr	r0, [r7, #20]
 15258 0920 FFF7FEFF 		bl	strcat
2021:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15259              		.loc 1 2021 0
 15260 0924 D7F88030 		ldr	r3, [r7, #128]
 15261 0928 5B68     		ldr	r3, [r3, #4]
 15262 092a 1846     		mov	r0, r3
 15263 092c FFF7FEFF 		bl	__aeabi_i2d
 15264 0930 4FF00002 		mov	r2, #0
 15265 0934 244B     		ldr	r3, .L682+56
 15266 0936 FFF7FEFF 		bl	__aeabi_ddiv
 15267 093a 0346     		mov	r3, r0
 15268 093c 0C46     		mov	r4, r1
 15269 093e 07F11800 		add	r0, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 344


 15270 0942 1A46     		mov	r2, r3
 15271 0944 2346     		mov	r3, r4
 15272 0946 2249     		ldr	r1, .L682+64
 15273 0948 FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****                 strcat(info_string, str);
 15274              		.loc 1 2022 0
 15275 094c 07F11803 		add	r3, r7, #24
 15276 0950 1946     		mov	r1, r3
 15277 0952 7869     		ldr	r0, [r7, #20]
 15278 0954 FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15279              		.loc 1 2023 0
 15280 0958 D7F88030 		ldr	r3, [r7, #128]
 15281 095c 9B68     		ldr	r3, [r3, #8]
 15282 095e 1846     		mov	r0, r3
 15283 0960 FFF7FEFF 		bl	__aeabi_i2d
 15284 0964 4FF00002 		mov	r2, #0
 15285 0968 174B     		ldr	r3, .L682+56
 15286 096a FFF7FEFF 		bl	__aeabi_ddiv
 15287 096e 0346     		mov	r3, r0
 15288 0970 0C46     		mov	r4, r1
 15289 0972 07F11800 		add	r0, r7, #24
 15290 0976 1A46     		mov	r2, r3
 15291 0978 2346     		mov	r3, r4
 15292 097a 1649     		ldr	r1, .L682+68
 15293 097c FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****                 strcat(info_string, str);
 15294              		.loc 1 2024 0
 15295 0980 07F11803 		add	r3, r7, #24
 15296 0984 1946     		mov	r1, r3
 15297 0986 7869     		ldr	r0, [r7, #20]
 15298 0988 FFF7FEFF 		bl	strcat
 15299 098c 72E0     		b	.L592
 15300              	.L683:
 15301 098e 00BF     		.align	2
 15302              	.L682:
 15303 0990 00000000 		.word	g_meas
 15304 0994 64130000 		.word	.LC182
 15305 0998 68130000 		.word	.LC183
 15306 099c 30110000 		.word	.LC151
 15307 09a0 00000000 		.word	g_adc_measOld
 15308 09a4 6C130000 		.word	.LC184
 15309 09a8 00000000 		.word	dev_tension
 15310 09ac 8C130000 		.word	.LC185
 15311 09b0 00000000 		.word	pow_tension
 15312 09b4 AC130000 		.word	.LC186
 15313 09b8 D4130000 		.word	.LC187
 15314 09bc EC130000 		.word	.LC188
 15315 09c0 14140000 		.word	.LC189
 15316 09c4 30140000 		.word	.LC190
 15317 09c8 0000F040 		.word	1089470464
 15318 09cc 44140000 		.word	.LC191
 15319 09d0 50140000 		.word	.LC192
 15320 09d4 5C140000 		.word	.LC193
 15321              	.L591:
2025:..\src/command_processing.c ****             }
2026:..\src/command_processing.c ****             else { 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 345


2027:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15322              		.loc 1 2027 0
 15323 09d8 D7F88030 		ldr	r3, [r7, #128]
 15324 09dc 9B69     		ldr	r3, [r3, #24]
 15325 09de 1846     		mov	r0, r3
 15326 09e0 FFF7FEFF 		bl	__aeabi_i2d
 15327 09e4 4FF00002 		mov	r2, #0
 15328 09e8 CE4B     		ldr	r3, .L684
 15329 09ea FFF7FEFF 		bl	__aeabi_ddiv
 15330 09ee 0346     		mov	r3, r0
 15331 09f0 0C46     		mov	r4, r1
 15332 09f2 07F11800 		add	r0, r7, #24
 15333 09f6 1A46     		mov	r2, r3
 15334 09f8 2346     		mov	r3, r4
 15335 09fa CB49     		ldr	r1, .L684+4
 15336 09fc FFF7FEFF 		bl	sprintf
2028:..\src/command_processing.c ****                 strcat(info_string, str);
 15337              		.loc 1 2028 0
 15338 0a00 07F11803 		add	r3, r7, #24
 15339 0a04 1946     		mov	r1, r3
 15340 0a06 7869     		ldr	r0, [r7, #20]
 15341 0a08 FFF7FEFF 		bl	strcat
2029:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15342              		.loc 1 2029 0
 15343 0a0c D7F88030 		ldr	r3, [r7, #128]
 15344 0a10 DB69     		ldr	r3, [r3, #28]
 15345 0a12 1846     		mov	r0, r3
 15346 0a14 FFF7FEFF 		bl	__aeabi_i2d
 15347 0a18 4FF00002 		mov	r2, #0
 15348 0a1c C14B     		ldr	r3, .L684
 15349 0a1e FFF7FEFF 		bl	__aeabi_ddiv
 15350 0a22 0346     		mov	r3, r0
 15351 0a24 0C46     		mov	r4, r1
 15352 0a26 07F11800 		add	r0, r7, #24
 15353 0a2a 1A46     		mov	r2, r3
 15354 0a2c 2346     		mov	r3, r4
 15355 0a2e BF49     		ldr	r1, .L684+8
 15356 0a30 FFF7FEFF 		bl	sprintf
2030:..\src/command_processing.c ****                 strcat(info_string, str);
 15357              		.loc 1 2030 0
 15358 0a34 07F11803 		add	r3, r7, #24
 15359 0a38 1946     		mov	r1, r3
 15360 0a3a 7869     		ldr	r0, [r7, #20]
 15361 0a3c FFF7FEFF 		bl	strcat
2031:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15362              		.loc 1 2031 0
 15363 0a40 D7F88030 		ldr	r3, [r7, #128]
 15364 0a44 1B6A     		ldr	r3, [r3, #32]
 15365 0a46 1846     		mov	r0, r3
 15366 0a48 FFF7FEFF 		bl	__aeabi_i2d
 15367 0a4c 4FF00002 		mov	r2, #0
 15368 0a50 B44B     		ldr	r3, .L684
 15369 0a52 FFF7FEFF 		bl	__aeabi_ddiv
 15370 0a56 0346     		mov	r3, r0
 15371 0a58 0C46     		mov	r4, r1
 15372 0a5a 07F11800 		add	r0, r7, #24
 15373 0a5e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 346


 15374 0a60 2346     		mov	r3, r4
 15375 0a62 B349     		ldr	r1, .L684+12
 15376 0a64 FFF7FEFF 		bl	sprintf
2032:..\src/command_processing.c ****                 strcat(info_string, str);
 15377              		.loc 1 2032 0
 15378 0a68 07F11803 		add	r3, r7, #24
 15379 0a6c 1946     		mov	r1, r3
 15380 0a6e 7869     		ldr	r0, [r7, #20]
 15381 0a70 FFF7FEFF 		bl	strcat
 15382              	.L592:
2033:..\src/command_processing.c ****             }
2034:..\src/command_processing.c **** 
2035:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 15383              		.loc 1 2035 0
 15384 0a74 7869     		ldr	r0, [r7, #20]
 15385 0a76 FFF7FEFF 		bl	strlen
 15386 0a7a 0346     		mov	r3, r0
 15387 0a7c 1A46     		mov	r2, r3
 15388 0a7e 7B69     		ldr	r3, [r7, #20]
 15389 0a80 1344     		add	r3, r3, r2
 15390 0a82 AC4A     		ldr	r2, .L684+16
 15391 0a84 1D46     		mov	r5, r3
 15392 0a86 1446     		mov	r4, r2
 15393 0a88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15394 0a8a 2860     		str	r0, [r5]	@ unaligned
 15395 0a8c 6960     		str	r1, [r5, #4]	@ unaligned
 15396 0a8e AA60     		str	r2, [r5, #8]	@ unaligned
 15397 0a90 EB60     		str	r3, [r5, #12]	@ unaligned
 15398 0a92 03CC     		ldmia	r4!, {r0, r1}
 15399 0a94 2861     		str	r0, [r5, #16]	@ unaligned
 15400 0a96 6961     		str	r1, [r5, #20]	@ unaligned
 15401 0a98 2378     		ldrb	r3, [r4]
 15402 0a9a 2B76     		strb	r3, [r5, #24]
2036:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15403              		.loc 1 2036 0
 15404 0a9c D7F88030 		ldr	r3, [r7, #128]
 15405 0aa0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15406 0aa4 032B     		cmp	r3, #3
 15407 0aa6 4ED0     		beq	.L593
2037:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 15408              		.loc 1 2037 0
 15409 0aa8 D7F88030 		ldr	r3, [r7, #128]
 15410 0aac DB68     		ldr	r3, [r3, #12]
 15411 0aae 1846     		mov	r0, r3
 15412 0ab0 FFF7FEFF 		bl	__aeabi_i2d
 15413 0ab4 4FF00002 		mov	r2, #0
 15414 0ab8 9A4B     		ldr	r3, .L684
 15415 0aba FFF7FEFF 		bl	__aeabi_ddiv
 15416 0abe 0346     		mov	r3, r0
 15417 0ac0 0C46     		mov	r4, r1
 15418 0ac2 07F11800 		add	r0, r7, #24
 15419 0ac6 1A46     		mov	r2, r3
 15420 0ac8 2346     		mov	r3, r4
 15421 0aca 9749     		ldr	r1, .L684+4
 15422 0acc FFF7FEFF 		bl	sprintf
2038:..\src/command_processing.c ****                 strcat(info_string, str);
 15423              		.loc 1 2038 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 347


 15424 0ad0 07F11803 		add	r3, r7, #24
 15425 0ad4 1946     		mov	r1, r3
 15426 0ad6 7869     		ldr	r0, [r7, #20]
 15427 0ad8 FFF7FEFF 		bl	strcat
2039:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 15428              		.loc 1 2039 0
 15429 0adc D7F88030 		ldr	r3, [r7, #128]
 15430 0ae0 1B69     		ldr	r3, [r3, #16]
 15431 0ae2 1846     		mov	r0, r3
 15432 0ae4 FFF7FEFF 		bl	__aeabi_i2d
 15433 0ae8 4FF00002 		mov	r2, #0
 15434 0aec 8D4B     		ldr	r3, .L684
 15435 0aee FFF7FEFF 		bl	__aeabi_ddiv
 15436 0af2 0346     		mov	r3, r0
 15437 0af4 0C46     		mov	r4, r1
 15438 0af6 07F11800 		add	r0, r7, #24
 15439 0afa 1A46     		mov	r2, r3
 15440 0afc 2346     		mov	r3, r4
 15441 0afe 8B49     		ldr	r1, .L684+8
 15442 0b00 FFF7FEFF 		bl	sprintf
2040:..\src/command_processing.c ****                 strcat(info_string, str);
 15443              		.loc 1 2040 0
 15444 0b04 07F11803 		add	r3, r7, #24
 15445 0b08 1946     		mov	r1, r3
 15446 0b0a 7869     		ldr	r0, [r7, #20]
 15447 0b0c FFF7FEFF 		bl	strcat
2041:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 15448              		.loc 1 2041 0
 15449 0b10 D7F88030 		ldr	r3, [r7, #128]
 15450 0b14 5B69     		ldr	r3, [r3, #20]
 15451 0b16 1846     		mov	r0, r3
 15452 0b18 FFF7FEFF 		bl	__aeabi_i2d
 15453 0b1c 4FF00002 		mov	r2, #0
 15454 0b20 804B     		ldr	r3, .L684
 15455 0b22 FFF7FEFF 		bl	__aeabi_ddiv
 15456 0b26 0346     		mov	r3, r0
 15457 0b28 0C46     		mov	r4, r1
 15458 0b2a 07F11800 		add	r0, r7, #24
 15459 0b2e 1A46     		mov	r2, r3
 15460 0b30 2346     		mov	r3, r4
 15461 0b32 7F49     		ldr	r1, .L684+12
 15462 0b34 FFF7FEFF 		bl	sprintf
2042:..\src/command_processing.c ****                 strcat(info_string, str);
 15463              		.loc 1 2042 0
 15464 0b38 07F11803 		add	r3, r7, #24
 15465 0b3c 1946     		mov	r1, r3
 15466 0b3e 7869     		ldr	r0, [r7, #20]
 15467 0b40 FFF7FEFF 		bl	strcat
 15468 0b44 4DE0     		b	.L594
 15469              	.L593:
2043:..\src/command_processing.c **** 
2044:..\src/command_processing.c ****             }
2045:..\src/command_processing.c ****             else {
2046:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 15470              		.loc 1 2046 0
 15471 0b46 D7F88030 		ldr	r3, [r7, #128]
 15472 0b4a 5B6A     		ldr	r3, [r3, #36]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 348


 15473 0b4c 1846     		mov	r0, r3
 15474 0b4e FFF7FEFF 		bl	__aeabi_i2d
 15475 0b52 4FF00002 		mov	r2, #0
 15476 0b56 734B     		ldr	r3, .L684
 15477 0b58 FFF7FEFF 		bl	__aeabi_ddiv
 15478 0b5c 0346     		mov	r3, r0
 15479 0b5e 0C46     		mov	r4, r1
 15480 0b60 07F11800 		add	r0, r7, #24
 15481 0b64 1A46     		mov	r2, r3
 15482 0b66 2346     		mov	r3, r4
 15483 0b68 6F49     		ldr	r1, .L684+4
 15484 0b6a FFF7FEFF 		bl	sprintf
2047:..\src/command_processing.c ****                 strcat(info_string, str);
 15485              		.loc 1 2047 0
 15486 0b6e 07F11803 		add	r3, r7, #24
 15487 0b72 1946     		mov	r1, r3
 15488 0b74 7869     		ldr	r0, [r7, #20]
 15489 0b76 FFF7FEFF 		bl	strcat
2048:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 15490              		.loc 1 2048 0
 15491 0b7a D7F88030 		ldr	r3, [r7, #128]
 15492 0b7e 9B6A     		ldr	r3, [r3, #40]
 15493 0b80 1846     		mov	r0, r3
 15494 0b82 FFF7FEFF 		bl	__aeabi_i2d
 15495 0b86 4FF00002 		mov	r2, #0
 15496 0b8a 664B     		ldr	r3, .L684
 15497 0b8c FFF7FEFF 		bl	__aeabi_ddiv
 15498 0b90 0346     		mov	r3, r0
 15499 0b92 0C46     		mov	r4, r1
 15500 0b94 07F11800 		add	r0, r7, #24
 15501 0b98 1A46     		mov	r2, r3
 15502 0b9a 2346     		mov	r3, r4
 15503 0b9c 6349     		ldr	r1, .L684+8
 15504 0b9e FFF7FEFF 		bl	sprintf
2049:..\src/command_processing.c ****                 strcat(info_string, str);
 15505              		.loc 1 2049 0
 15506 0ba2 07F11803 		add	r3, r7, #24
 15507 0ba6 1946     		mov	r1, r3
 15508 0ba8 7869     		ldr	r0, [r7, #20]
 15509 0baa FFF7FEFF 		bl	strcat
2050:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 15510              		.loc 1 2050 0
 15511 0bae D7F88030 		ldr	r3, [r7, #128]
 15512 0bb2 DB6A     		ldr	r3, [r3, #44]
 15513 0bb4 1846     		mov	r0, r3
 15514 0bb6 FFF7FEFF 		bl	__aeabi_i2d
 15515 0bba 4FF00002 		mov	r2, #0
 15516 0bbe 594B     		ldr	r3, .L684
 15517 0bc0 FFF7FEFF 		bl	__aeabi_ddiv
 15518 0bc4 0346     		mov	r3, r0
 15519 0bc6 0C46     		mov	r4, r1
 15520 0bc8 07F11800 		add	r0, r7, #24
 15521 0bcc 1A46     		mov	r2, r3
 15522 0bce 2346     		mov	r3, r4
 15523 0bd0 5749     		ldr	r1, .L684+12
 15524 0bd2 FFF7FEFF 		bl	sprintf
2051:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 349


 15525              		.loc 1 2051 0
 15526 0bd6 07F11803 		add	r3, r7, #24
 15527 0bda 1946     		mov	r1, r3
 15528 0bdc 7869     		ldr	r0, [r7, #20]
 15529 0bde FFF7FEFF 		bl	strcat
 15530              	.L594:
2052:..\src/command_processing.c ****             }
2053:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 15531              		.loc 1 2053 0
 15532 0be2 D7F88030 		ldr	r3, [r7, #128]
 15533 0be6 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 15534 0bea 012B     		cmp	r3, #1
 15535 0bec 14D1     		bne	.L595
2054:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 15536              		.loc 1 2054 0
 15537 0bee 7869     		ldr	r0, [r7, #20]
 15538 0bf0 FFF7FEFF 		bl	strlen
 15539 0bf4 0346     		mov	r3, r0
 15540 0bf6 1A46     		mov	r2, r3
 15541 0bf8 7B69     		ldr	r3, [r7, #20]
 15542 0bfa 1344     		add	r3, r3, r2
 15543 0bfc 4E4A     		ldr	r2, .L684+20
 15544 0bfe 1D46     		mov	r5, r3
 15545 0c00 1446     		mov	r4, r2
 15546 0c02 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15547 0c04 2860     		str	r0, [r5]	@ unaligned
 15548 0c06 6960     		str	r1, [r5, #4]	@ unaligned
 15549 0c08 AA60     		str	r2, [r5, #8]	@ unaligned
 15550 0c0a EB60     		str	r3, [r5, #12]	@ unaligned
 15551 0c0c 03CC     		ldmia	r4!, {r0, r1}
 15552 0c0e 2861     		str	r0, [r5, #16]	@ unaligned
 15553 0c10 6961     		str	r1, [r5, #20]	@ unaligned
 15554 0c12 2388     		ldrh	r3, [r4]	@ unaligned
 15555 0c14 2B83     		strh	r3, [r5, #24]	@ unaligned
 15556 0c16 13E0     		b	.L596
 15557              	.L595:
2055:..\src/command_processing.c ****             else
2056:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 15558              		.loc 1 2056 0
 15559 0c18 7869     		ldr	r0, [r7, #20]
 15560 0c1a FFF7FEFF 		bl	strlen
 15561 0c1e 0346     		mov	r3, r0
 15562 0c20 1A46     		mov	r2, r3
 15563 0c22 7B69     		ldr	r3, [r7, #20]
 15564 0c24 1344     		add	r3, r3, r2
 15565 0c26 454A     		ldr	r2, .L684+24
 15566 0c28 1D46     		mov	r5, r3
 15567 0c2a 1446     		mov	r4, r2
 15568 0c2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15569 0c2e 2860     		str	r0, [r5]	@ unaligned
 15570 0c30 6960     		str	r1, [r5, #4]	@ unaligned
 15571 0c32 AA60     		str	r2, [r5, #8]	@ unaligned
 15572 0c34 EB60     		str	r3, [r5, #12]	@ unaligned
 15573 0c36 03CC     		ldmia	r4!, {r0, r1}
 15574 0c38 2861     		str	r0, [r5, #16]	@ unaligned
 15575 0c3a 6961     		str	r1, [r5, #20]	@ unaligned
 15576 0c3c 2378     		ldrb	r3, [r4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 350


 15577 0c3e 2B76     		strb	r3, [r5, #24]
 15578              	.L596:
2057:..\src/command_processing.c **** 
2058:..\src/command_processing.c ****             switch(MOT->input_mode) {
 15579              		.loc 1 2058 0
 15580 0c40 D7F88030 		ldr	r3, [r7, #128]
 15581 0c44 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 15582 0c48 072B     		cmp	r3, #7
 15583 0c4a 00F2EA80 		bhi	.L597
 15584 0c4e 01A2     		adr	r2, .L599
 15585 0c50 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15586              		.p2align 2
 15587              	.L599:
 15588 0c54 750C0000 		.word	.L598+1
 15589 0c58 990C0000 		.word	.L600+1
 15590 0c5c C10C0000 		.word	.L601+1
 15591 0c60 F30C0000 		.word	.L602+1
 15592 0c64 510D0000 		.word	.L603+1
 15593 0c68 7F0D0000 		.word	.L604+1
 15594 0c6c AF0D0000 		.word	.L605+1
 15595 0c70 DD0D0000 		.word	.L606+1
 15596              		.p2align 1
 15597              	.L598:
2059:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
2060:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 15598              		.loc 1 2060 0
 15599 0c74 7869     		ldr	r0, [r7, #20]
 15600 0c76 FFF7FEFF 		bl	strlen
 15601 0c7a 0346     		mov	r3, r0
 15602 0c7c 1A46     		mov	r2, r3
 15603 0c7e 7B69     		ldr	r3, [r7, #20]
 15604 0c80 1344     		add	r3, r3, r2
 15605 0c82 2F4A     		ldr	r2, .L684+28
 15606 0c84 1D46     		mov	r5, r3
 15607 0c86 1446     		mov	r4, r2
 15608 0c88 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15609 0c8a 2860     		str	r0, [r5]	@ unaligned
 15610 0c8c 6960     		str	r1, [r5, #4]	@ unaligned
 15611 0c8e AA60     		str	r2, [r5, #8]	@ unaligned
 15612 0c90 EB60     		str	r3, [r5, #12]	@ unaligned
 15613 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 15614 0c94 2B82     		strh	r3, [r5, #16]	@ unaligned
2061:..\src/command_processing.c ****                     break;
 15615              		.loc 1 2061 0
 15616 0c96 C4E0     		b	.L597
 15617              	.L600:
2062:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2063:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 15618              		.loc 1 2063 0
 15619 0c98 7869     		ldr	r0, [r7, #20]
 15620 0c9a FFF7FEFF 		bl	strlen
 15621 0c9e 0346     		mov	r3, r0
 15622 0ca0 1A46     		mov	r2, r3
 15623 0ca2 7B69     		ldr	r3, [r7, #20]
 15624 0ca4 1344     		add	r3, r3, r2
 15625 0ca6 274A     		ldr	r2, .L684+32
 15626 0ca8 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 351


 15627 0caa 1446     		mov	r4, r2
 15628 0cac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15629 0cae 2860     		str	r0, [r5]	@ unaligned
 15630 0cb0 6960     		str	r1, [r5, #4]	@ unaligned
 15631 0cb2 AA60     		str	r2, [r5, #8]	@ unaligned
 15632 0cb4 EB60     		str	r3, [r5, #12]	@ unaligned
 15633 0cb6 2068     		ldr	r0, [r4]	@ unaligned
 15634 0cb8 2861     		str	r0, [r5, #16]	@ unaligned
 15635 0cba 2379     		ldrb	r3, [r4, #4]
 15636 0cbc 2B75     		strb	r3, [r5, #20]
2064:..\src/command_processing.c ****                     break;
 15637              		.loc 1 2064 0
 15638 0cbe B0E0     		b	.L597
 15639              	.L601:
2065:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2066:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 15640              		.loc 1 2066 0
 15641 0cc0 7869     		ldr	r0, [r7, #20]
 15642 0cc2 FFF7FEFF 		bl	strlen
 15643 0cc6 0346     		mov	r3, r0
 15644 0cc8 1A46     		mov	r2, r3
 15645 0cca 7B69     		ldr	r3, [r7, #20]
 15646 0ccc 1344     		add	r3, r3, r2
 15647 0cce 1E4A     		ldr	r2, .L684+36
 15648 0cd0 1D46     		mov	r5, r3
 15649 0cd2 1446     		mov	r4, r2
 15650 0cd4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15651 0cd6 2860     		str	r0, [r5]	@ unaligned
 15652 0cd8 6960     		str	r1, [r5, #4]	@ unaligned
 15653 0cda AA60     		str	r2, [r5, #8]	@ unaligned
 15654 0cdc EB60     		str	r3, [r5, #12]	@ unaligned
 15655 0cde 07CC     		ldmia	r4!, {r0, r1, r2}
 15656 0ce0 2861     		str	r0, [r5, #16]	@ unaligned
 15657 0ce2 6961     		str	r1, [r5, #20]	@ unaligned
 15658 0ce4 AA61     		str	r2, [r5, #24]	@ unaligned
 15659 0ce6 2388     		ldrh	r3, [r4]	@ unaligned
 15660 0ce8 A278     		ldrb	r2, [r4, #2]
 15661 0cea AB83     		strh	r3, [r5, #28]	@ unaligned
 15662 0cec 1346     		mov	r3, r2
 15663 0cee AB77     		strb	r3, [r5, #30]
2067:..\src/command_processing.c ****                     break;
 15664              		.loc 1 2067 0
 15665 0cf0 97E0     		b	.L597
 15666              	.L602:
2068:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2069:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 15667              		.loc 1 2069 0
 15668 0cf2 7869     		ldr	r0, [r7, #20]
 15669 0cf4 FFF7FEFF 		bl	strlen
 15670 0cf8 0346     		mov	r3, r0
 15671 0cfa 1A46     		mov	r2, r3
 15672 0cfc 7B69     		ldr	r3, [r7, #20]
 15673 0cfe 1344     		add	r3, r3, r2
 15674 0d00 124A     		ldr	r2, .L684+40
 15675 0d02 1D46     		mov	r5, r3
 15676 0d04 1446     		mov	r4, r2
 15677 0d06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 352


 15678 0d08 2860     		str	r0, [r5]	@ unaligned
 15679 0d0a 6960     		str	r1, [r5, #4]	@ unaligned
 15680 0d0c AA60     		str	r2, [r5, #8]	@ unaligned
 15681 0d0e EB60     		str	r3, [r5, #12]	@ unaligned
 15682 0d10 03CC     		ldmia	r4!, {r0, r1}
 15683 0d12 2861     		str	r0, [r5, #16]	@ unaligned
 15684 0d14 6961     		str	r1, [r5, #20]	@ unaligned
 15685 0d16 2388     		ldrh	r3, [r4]	@ unaligned
 15686 0d18 A278     		ldrb	r2, [r4, #2]
 15687 0d1a 2B83     		strh	r3, [r5, #24]	@ unaligned
 15688 0d1c 1346     		mov	r3, r2
 15689 0d1e AB76     		strb	r3, [r5, #26]
2070:..\src/command_processing.c ****                     break;
 15690              		.loc 1 2070 0
 15691 0d20 7FE0     		b	.L597
 15692              	.L685:
 15693 0d22 00BF     		.align	2
 15694              	.L684:
 15695 0d24 0000F040 		.word	1089470464
 15696 0d28 44140000 		.word	.LC191
 15697 0d2c 50140000 		.word	.LC192
 15698 0d30 5C140000 		.word	.LC193
 15699 0d34 68140000 		.word	.LC194
 15700 0d38 84140000 		.word	.LC195
 15701 0d3c A0140000 		.word	.LC196
 15702 0d40 BC140000 		.word	.LC197
 15703 0d44 D0140000 		.word	.LC198
 15704 0d48 E8140000 		.word	.LC199
 15705 0d4c 08150000 		.word	.LC200
 15706              	.L603:
2071:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2072:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 15707              		.loc 1 2072 0
 15708 0d50 7869     		ldr	r0, [r7, #20]
 15709 0d52 FFF7FEFF 		bl	strlen
 15710 0d56 0346     		mov	r3, r0
 15711 0d58 1A46     		mov	r2, r3
 15712 0d5a 7B69     		ldr	r3, [r7, #20]
 15713 0d5c 1344     		add	r3, r3, r2
 15714 0d5e A44A     		ldr	r2, .L686
 15715 0d60 1C46     		mov	r4, r3
 15716 0d62 1546     		mov	r5, r2
 15717 0d64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15718 0d66 2060     		str	r0, [r4]	@ unaligned
 15719 0d68 6160     		str	r1, [r4, #4]	@ unaligned
 15720 0d6a A260     		str	r2, [r4, #8]	@ unaligned
 15721 0d6c E360     		str	r3, [r4, #12]	@ unaligned
 15722 0d6e 2868     		ldr	r0, [r5]	@ unaligned
 15723 0d70 2061     		str	r0, [r4, #16]	@ unaligned
 15724 0d72 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15725 0d74 AA79     		ldrb	r2, [r5, #6]
 15726 0d76 A382     		strh	r3, [r4, #20]	@ unaligned
 15727 0d78 1346     		mov	r3, r2
 15728 0d7a A375     		strb	r3, [r4, #22]
2073:..\src/command_processing.c ****                     break;
 15729              		.loc 1 2073 0
 15730 0d7c 51E0     		b	.L597
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 353


 15731              	.L604:
2074:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2075:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 15732              		.loc 1 2075 0
 15733 0d7e 7869     		ldr	r0, [r7, #20]
 15734 0d80 FFF7FEFF 		bl	strlen
 15735 0d84 0346     		mov	r3, r0
 15736 0d86 1A46     		mov	r2, r3
 15737 0d88 7B69     		ldr	r3, [r7, #20]
 15738 0d8a 1344     		add	r3, r3, r2
 15739 0d8c 994A     		ldr	r2, .L686+4
 15740 0d8e 1D46     		mov	r5, r3
 15741 0d90 1446     		mov	r4, r2
 15742 0d92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15743 0d94 2860     		str	r0, [r5]	@ unaligned
 15744 0d96 6960     		str	r1, [r5, #4]	@ unaligned
 15745 0d98 AA60     		str	r2, [r5, #8]	@ unaligned
 15746 0d9a EB60     		str	r3, [r5, #12]	@ unaligned
 15747 0d9c 03CC     		ldmia	r4!, {r0, r1}
 15748 0d9e 2861     		str	r0, [r5, #16]	@ unaligned
 15749 0da0 6961     		str	r1, [r5, #20]	@ unaligned
 15750 0da2 2388     		ldrh	r3, [r4]	@ unaligned
 15751 0da4 A278     		ldrb	r2, [r4, #2]
 15752 0da6 2B83     		strh	r3, [r5, #24]	@ unaligned
 15753 0da8 1346     		mov	r3, r2
 15754 0daa AB76     		strb	r3, [r5, #26]
2076:..\src/command_processing.c ****                     break;
 15755              		.loc 1 2076 0
 15756 0dac 39E0     		b	.L597
 15757              	.L605:
2077:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2078:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 15758              		.loc 1 2078 0
 15759 0dae 7869     		ldr	r0, [r7, #20]
 15760 0db0 FFF7FEFF 		bl	strlen
 15761 0db4 0346     		mov	r3, r0
 15762 0db6 1A46     		mov	r2, r3
 15763 0db8 7B69     		ldr	r3, [r7, #20]
 15764 0dba 1344     		add	r3, r3, r2
 15765 0dbc 8E4A     		ldr	r2, .L686+8
 15766 0dbe 1C46     		mov	r4, r3
 15767 0dc0 1546     		mov	r5, r2
 15768 0dc2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15769 0dc4 2060     		str	r0, [r4]	@ unaligned
 15770 0dc6 6160     		str	r1, [r4, #4]	@ unaligned
 15771 0dc8 A260     		str	r2, [r4, #8]	@ unaligned
 15772 0dca E360     		str	r3, [r4, #12]	@ unaligned
 15773 0dcc 2868     		ldr	r0, [r5]	@ unaligned
 15774 0dce 2061     		str	r0, [r4, #16]	@ unaligned
 15775 0dd0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 15776 0dd2 AA79     		ldrb	r2, [r5, #6]
 15777 0dd4 A382     		strh	r3, [r4, #20]	@ unaligned
 15778 0dd6 1346     		mov	r3, r2
 15779 0dd8 A375     		strb	r3, [r4, #22]
2079:..\src/command_processing.c ****                     break;
 15780              		.loc 1 2079 0
 15781 0dda 22E0     		b	.L597
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 354


 15782              	.L606:
2080:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2081:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 15783              		.loc 1 2081 0
 15784 0ddc 7869     		ldr	r0, [r7, #20]
 15785 0dde FFF7FEFF 		bl	strlen
 15786 0de2 0346     		mov	r3, r0
 15787 0de4 1A46     		mov	r2, r3
 15788 0de6 7B69     		ldr	r3, [r7, #20]
 15789 0de8 1344     		add	r3, r3, r2
 15790 0dea 844A     		ldr	r2, .L686+12
 15791 0dec 1546     		mov	r5, r2
 15792 0dee 9E46     		mov	lr, r3
 15793 0df0 05F1200C 		add	ip, r5, #32
 15794              	.L607:
 15795 0df4 7446     		mov	r4, lr
 15796 0df6 2E46     		mov	r6, r5
 15797 0df8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15798 0dfa 2060     		str	r0, [r4]	@ unaligned
 15799 0dfc 6160     		str	r1, [r4, #4]	@ unaligned
 15800 0dfe A260     		str	r2, [r4, #8]	@ unaligned
 15801 0e00 E360     		str	r3, [r4, #12]	@ unaligned
 15802 0e02 1035     		adds	r5, r5, #16
 15803 0e04 0EF1100E 		add	lr, lr, #16
 15804 0e08 6545     		cmp	r5, ip
 15805 0e0a F3D1     		bne	.L607
 15806 0e0c 7446     		mov	r4, lr
 15807 0e0e 2B46     		mov	r3, r5
 15808 0e10 07CB     		ldmia	r3!, {r0, r1, r2}
 15809 0e12 2060     		str	r0, [r4]	@ unaligned
 15810 0e14 6160     		str	r1, [r4, #4]	@ unaligned
 15811 0e16 A260     		str	r2, [r4, #8]	@ unaligned
 15812 0e18 1A88     		ldrh	r2, [r3]	@ unaligned
 15813 0e1a 9B78     		ldrb	r3, [r3, #2]
 15814 0e1c A281     		strh	r2, [r4, #12]	@ unaligned
 15815 0e1e A373     		strb	r3, [r4, #14]
2082:..\src/command_processing.c ****                     break;
 15816              		.loc 1 2082 0
 15817 0e20 00BF     		nop
 15818              	.L597:
2083:..\src/command_processing.c ****             }
2084:..\src/command_processing.c **** 
2085:..\src/command_processing.c ****             switch(MOT->control_mode) {
 15819              		.loc 1 2085 0
 15820 0e22 D7F88030 		ldr	r3, [r7, #128]
 15821 0e26 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15822 0e2a 032B     		cmp	r3, #3
 15823 0e2c 63D8     		bhi	.L677
 15824 0e2e 01A2     		adr	r2, .L610
 15825 0e30 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 15826              		.p2align 2
 15827              	.L610:
 15828 0e34 450E0000 		.word	.L609+1
 15829 0e38 6F0E0000 		.word	.L611+1
 15830 0e3c 930E0000 		.word	.L612+1
 15831 0e40 B90E0000 		.word	.L613+1
 15832              		.p2align 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 355


 15833              	.L609:
2086:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2087:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 15834              		.loc 1 2087 0
 15835 0e44 7869     		ldr	r0, [r7, #20]
 15836 0e46 FFF7FEFF 		bl	strlen
 15837 0e4a 0346     		mov	r3, r0
 15838 0e4c 1A46     		mov	r2, r3
 15839 0e4e 7B69     		ldr	r3, [r7, #20]
 15840 0e50 1344     		add	r3, r3, r2
 15841 0e52 6B4A     		ldr	r2, .L686+16
 15842 0e54 1D46     		mov	r5, r3
 15843 0e56 1446     		mov	r4, r2
 15844 0e58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15845 0e5a 2860     		str	r0, [r5]	@ unaligned
 15846 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 15847 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 15848 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 15849 0e62 03CC     		ldmia	r4!, {r0, r1}
 15850 0e64 2861     		str	r0, [r5, #16]	@ unaligned
 15851 0e66 6961     		str	r1, [r5, #20]	@ unaligned
 15852 0e68 2378     		ldrb	r3, [r4]
 15853 0e6a 2B76     		strb	r3, [r5, #24]
2088:..\src/command_processing.c ****                     break;
 15854              		.loc 1 2088 0
 15855 0e6c 44E0     		b	.L614
 15856              	.L611:
2089:..\src/command_processing.c ****                 case CONTROL_PWM:
2090:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 15857              		.loc 1 2090 0
 15858 0e6e 7869     		ldr	r0, [r7, #20]
 15859 0e70 FFF7FEFF 		bl	strlen
 15860 0e74 0346     		mov	r3, r0
 15861 0e76 1A46     		mov	r2, r3
 15862 0e78 7B69     		ldr	r3, [r7, #20]
 15863 0e7a 1344     		add	r3, r3, r2
 15864 0e7c 614A     		ldr	r2, .L686+20
 15865 0e7e 1D46     		mov	r5, r3
 15866 0e80 1446     		mov	r4, r2
 15867 0e82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15868 0e84 2860     		str	r0, [r5]	@ unaligned
 15869 0e86 6960     		str	r1, [r5, #4]	@ unaligned
 15870 0e88 AA60     		str	r2, [r5, #8]	@ unaligned
 15871 0e8a EB60     		str	r3, [r5, #12]	@ unaligned
 15872 0e8c 2068     		ldr	r0, [r4]	@ unaligned
 15873 0e8e 2861     		str	r0, [r5, #16]	@ unaligned
2091:..\src/command_processing.c ****                     break;
 15874              		.loc 1 2091 0
 15875 0e90 32E0     		b	.L614
 15876              	.L612:
2092:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2093:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 15877              		.loc 1 2093 0
 15878 0e92 7869     		ldr	r0, [r7, #20]
 15879 0e94 FFF7FEFF 		bl	strlen
 15880 0e98 0346     		mov	r3, r0
 15881 0e9a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 356


 15882 0e9c 7B69     		ldr	r3, [r7, #20]
 15883 0e9e 1344     		add	r3, r3, r2
 15884 0ea0 594A     		ldr	r2, .L686+24
 15885 0ea2 1D46     		mov	r5, r3
 15886 0ea4 1446     		mov	r4, r2
 15887 0ea6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15888 0ea8 2860     		str	r0, [r5]	@ unaligned
 15889 0eaa 6960     		str	r1, [r5, #4]	@ unaligned
 15890 0eac AA60     		str	r2, [r5, #8]	@ unaligned
 15891 0eae EB60     		str	r3, [r5, #12]	@ unaligned
 15892 0eb0 03CC     		ldmia	r4!, {r0, r1}
 15893 0eb2 2861     		str	r0, [r5, #16]	@ unaligned
 15894 0eb4 6961     		str	r1, [r5, #20]	@ unaligned
2094:..\src/command_processing.c ****                     break;
 15895              		.loc 1 2094 0
 15896 0eb6 1FE0     		b	.L614
 15897              	.L613:
2095:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2096:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 15898              		.loc 1 2096 0
 15899 0eb8 7869     		ldr	r0, [r7, #20]
 15900 0eba FFF7FEFF 		bl	strlen
 15901 0ebe 0346     		mov	r3, r0
 15902 0ec0 1A46     		mov	r2, r3
 15903 0ec2 7B69     		ldr	r3, [r7, #20]
 15904 0ec4 1344     		add	r3, r3, r2
 15905 0ec6 514A     		ldr	r2, .L686+28
 15906 0ec8 1446     		mov	r4, r2
 15907 0eca 9E46     		mov	lr, r3
 15908 0ecc 04F1200C 		add	ip, r4, #32
 15909              	.L615:
 15910 0ed0 7546     		mov	r5, lr
 15911 0ed2 2646     		mov	r6, r4
 15912 0ed4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15913 0ed6 2860     		str	r0, [r5]	@ unaligned
 15914 0ed8 6960     		str	r1, [r5, #4]	@ unaligned
 15915 0eda AA60     		str	r2, [r5, #8]	@ unaligned
 15916 0edc EB60     		str	r3, [r5, #12]	@ unaligned
 15917 0ede 1034     		adds	r4, r4, #16
 15918 0ee0 0EF1100E 		add	lr, lr, #16
 15919 0ee4 6445     		cmp	r4, ip
 15920 0ee6 F3D1     		bne	.L615
 15921 0ee8 7346     		mov	r3, lr
 15922 0eea 2246     		mov	r2, r4
 15923 0eec 1068     		ldr	r0, [r2]	@ unaligned
 15924 0eee 1860     		str	r0, [r3]	@ unaligned
 15925 0ef0 1279     		ldrb	r2, [r2, #4]
 15926 0ef2 1A71     		strb	r2, [r3, #4]
2097:..\src/command_processing.c ****                     break;
 15927              		.loc 1 2097 0
 15928 0ef4 00E0     		b	.L614
 15929              	.L677:
2098:..\src/command_processing.c ****                 default:
2099:..\src/command_processing.c ****                     break;
 15930              		.loc 1 2099 0
 15931 0ef6 00BF     		nop
 15932              	.L614:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 357


2100:..\src/command_processing.c ****             }
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 15933              		.loc 1 2102 0
 15934 0ef8 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15935 0efc D7F88810 		ldr	r1, [r7, #136]
 15936 0f00 1346     		mov	r3, r2
 15937 0f02 5B00     		lsls	r3, r3, #1
 15938 0f04 1344     		add	r3, r3, r2
 15939 0f06 1B01     		lsls	r3, r3, #4
 15940 0f08 0B44     		add	r3, r3, r1
 15941 0f0a 03F5D873 		add	r3, r3, #432
 15942 0f0e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15943 0f10 002B     		cmp	r3, #0
 15944 0f12 1CD0     		beq	.L616
2103:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 15945              		.loc 1 2103 0
 15946 0f14 7869     		ldr	r0, [r7, #20]
 15947 0f16 FFF7FEFF 		bl	strlen
 15948 0f1a 0346     		mov	r3, r0
 15949 0f1c 1A46     		mov	r2, r3
 15950 0f1e 7B69     		ldr	r3, [r7, #20]
 15951 0f20 1344     		add	r3, r3, r2
 15952 0f22 3B4A     		ldr	r2, .L686+32
 15953 0f24 1446     		mov	r4, r2
 15954 0f26 9E46     		mov	lr, r3
 15955 0f28 04F1200C 		add	ip, r4, #32
 15956              	.L617:
 15957 0f2c 7546     		mov	r5, lr
 15958 0f2e 2646     		mov	r6, r4
 15959 0f30 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 15960 0f32 2860     		str	r0, [r5]	@ unaligned
 15961 0f34 6960     		str	r1, [r5, #4]	@ unaligned
 15962 0f36 AA60     		str	r2, [r5, #8]	@ unaligned
 15963 0f38 EB60     		str	r3, [r5, #12]	@ unaligned
 15964 0f3a 1034     		adds	r4, r4, #16
 15965 0f3c 0EF1100E 		add	lr, lr, #16
 15966 0f40 6445     		cmp	r4, ip
 15967 0f42 F3D1     		bne	.L617
 15968 0f44 7346     		mov	r3, lr
 15969 0f46 2246     		mov	r2, r4
 15970 0f48 1278     		ldrb	r2, [r2]
 15971 0f4a 1A70     		strb	r2, [r3]
 15972 0f4c 13E0     		b	.L618
 15973              	.L616:
2104:..\src/command_processing.c ****             else
2105:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 15974              		.loc 1 2105 0
 15975 0f4e 7869     		ldr	r0, [r7, #20]
 15976 0f50 FFF7FEFF 		bl	strlen
 15977 0f54 0346     		mov	r3, r0
 15978 0f56 1A46     		mov	r2, r3
 15979 0f58 7B69     		ldr	r3, [r7, #20]
 15980 0f5a 1344     		add	r3, r3, r2
 15981 0f5c 2D4A     		ldr	r2, .L686+36
 15982 0f5e 1C46     		mov	r4, r3
 15983 0f60 1546     		mov	r5, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 358


 15984 0f62 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15985 0f64 2060     		str	r0, [r4]	@ unaligned
 15986 0f66 6160     		str	r1, [r4, #4]	@ unaligned
 15987 0f68 A260     		str	r2, [r4, #8]	@ unaligned
 15988 0f6a E360     		str	r3, [r4, #12]	@ unaligned
 15989 0f6c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15990 0f6e 2061     		str	r0, [r4, #16]	@ unaligned
 15991 0f70 6161     		str	r1, [r4, #20]	@ unaligned
 15992 0f72 A261     		str	r2, [r4, #24]	@ unaligned
 15993 0f74 E361     		str	r3, [r4, #28]	@ unaligned
 15994              	.L618:
2106:..\src/command_processing.c **** 
2107:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 15995              		.loc 1 2107 0
 15996 0f76 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 15997 0f7a D7F88810 		ldr	r1, [r7, #136]
 15998 0f7e 1346     		mov	r3, r2
 15999 0f80 5B00     		lsls	r3, r3, #1
 16000 0f82 1344     		add	r3, r3, r2
 16001 0f84 1B01     		lsls	r3, r3, #4
 16002 0f86 0B44     		add	r3, r3, r1
 16003 0f88 03F5DA73 		add	r3, r3, #436
 16004 0f8c 93F90030 		ldrsb	r3, [r3]
 16005 0f90 1A46     		mov	r2, r3
 16006 0f92 07F11803 		add	r3, r7, #24
 16007 0f96 2049     		ldr	r1, .L686+40
 16008 0f98 1846     		mov	r0, r3
 16009 0f9a FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****             strcat(info_string, str);
 16010              		.loc 1 2108 0
 16011 0f9e 07F11803 		add	r3, r7, #24
 16012 0fa2 1946     		mov	r1, r3
 16013 0fa4 7869     		ldr	r0, [r7, #20]
 16014 0fa6 FFF7FEFF 		bl	strcat
2109:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2110:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 16015              		.loc 1 2110 0
 16016 0faa 7869     		ldr	r0, [r7, #20]
 16017 0fac FFF7FEFF 		bl	strlen
 16018 0fb0 0346     		mov	r3, r0
 16019 0fb2 1A46     		mov	r2, r3
 16020 0fb4 7B69     		ldr	r3, [r7, #20]
 16021 0fb6 1344     		add	r3, r3, r2
 16022 0fb8 184A     		ldr	r2, .L686+44
 16023 0fba 1446     		mov	r4, r2
 16024 0fbc 9E46     		mov	lr, r3
 16025 0fbe 04F1200C 		add	ip, r4, #32
 16026              	.L619:
 16027 0fc2 7546     		mov	r5, lr
 16028 0fc4 2646     		mov	r6, r4
 16029 0fc6 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16030 0fc8 2860     		str	r0, [r5]	@ unaligned
 16031 0fca 6960     		str	r1, [r5, #4]	@ unaligned
 16032 0fcc AA60     		str	r2, [r5, #8]	@ unaligned
 16033 0fce EB60     		str	r3, [r5, #12]	@ unaligned
 16034 0fd0 1034     		adds	r4, r4, #16
 16035 0fd2 0EF1100E 		add	lr, lr, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 359


 16036 0fd6 6445     		cmp	r4, ip
 16037 0fd8 F3D1     		bne	.L619
 16038 0fda 7246     		mov	r2, lr
 16039 0fdc 2346     		mov	r3, r4
 16040 0fde 03CB     		ldmia	r3!, {r0, r1}
 16041 0fe0 1060     		str	r0, [r2]	@ unaligned
 16042 0fe2 5160     		str	r1, [r2, #4]	@ unaligned
 16043 0fe4 1B78     		ldrb	r3, [r3]
 16044 0fe6 1372     		strb	r3, [r2, #8]
2111:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16045              		.loc 1 2111 0
 16046 0fe8 0023     		movs	r3, #0
 16047 0fea C7F89430 		str	r3, [r7, #148]
 16048 0fee 48E0     		b	.L620
 16049              	.L687:
 16050              		.align	2
 16051              	.L686:
 16052 0ff0 24150000 		.word	.LC201
 16053 0ff4 3C150000 		.word	.LC202
 16054 0ff8 58150000 		.word	.LC203
 16055 0ffc 70150000 		.word	.LC204
 16056 1000 A0150000 		.word	.LC205
 16057 1004 BC150000 		.word	.LC206
 16058 1008 D0150000 		.word	.LC207
 16059 100c E8150000 		.word	.LC208
 16060 1010 10160000 		.word	.LC209
 16061 1014 34160000 		.word	.LC210
 16062 1018 54160000 		.word	.LC211
 16063 101c 70160000 		.word	.LC212
 16064              	.L622:
2112:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16065              		.loc 1 2112 0
 16066 1020 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16067 1024 D7F88810 		ldr	r1, [r7, #136]
 16068 1028 1346     		mov	r3, r2
 16069 102a 5B00     		lsls	r3, r3, #1
 16070 102c 1344     		add	r3, r3, r2
 16071 102e 1B01     		lsls	r3, r3, #4
 16072 1030 CA18     		adds	r2, r1, r3
 16073 1032 D7F89430 		ldr	r3, [r7, #148]
 16074 1036 1344     		add	r3, r3, r2
 16075 1038 03F2B113 		addw	r3, r3, #433
 16076 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16077 103e 1A46     		mov	r2, r3
 16078 1040 07F11803 		add	r3, r7, #24
 16079 1044 AE49     		ldr	r1, .L688
 16080 1046 1846     		mov	r0, r3
 16081 1048 FFF7FEFF 		bl	sprintf
2113:..\src/command_processing.c ****                 strcat(info_string, str);
 16082              		.loc 1 2113 0
 16083 104c 07F11803 		add	r3, r7, #24
 16084 1050 1946     		mov	r1, r3
 16085 1052 7869     		ldr	r0, [r7, #20]
 16086 1054 FFF7FEFF 		bl	strcat
2114:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16087              		.loc 1 2114 0
 16088 1058 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 360


 16089 105c 022B     		cmp	r3, #2
 16090 105e 0BD0     		beq	.L621
2115:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16091              		.loc 1 2115 0
 16092 1060 7869     		ldr	r0, [r7, #20]
 16093 1062 FFF7FEFF 		bl	strlen
 16094 1066 0346     		mov	r3, r0
 16095 1068 1A46     		mov	r2, r3
 16096 106a 7B69     		ldr	r3, [r7, #20]
 16097 106c 1344     		add	r3, r3, r2
 16098 106e A54A     		ldr	r2, .L688+4
 16099 1070 1188     		ldrh	r1, [r2]	@ unaligned
 16100 1072 9278     		ldrb	r2, [r2, #2]
 16101 1074 1980     		strh	r1, [r3]	@ unaligned
 16102 1076 9A70     		strb	r2, [r3, #2]
 16103              	.L621:
2111:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16104              		.loc 1 2111 0 discriminator 2
 16105 1078 D7F89430 		ldr	r3, [r7, #148]
 16106 107c 0133     		adds	r3, r3, #1
 16107 107e C7F89430 		str	r3, [r7, #148]
 16108              	.L620:
2111:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 16109              		.loc 1 2111 0 is_stmt 0 discriminator 1
 16110 1082 D7F89430 		ldr	r3, [r7, #148]
 16111 1086 022B     		cmp	r3, #2
 16112 1088 CADD     		ble	.L622
2116:..\src/command_processing.c ****                 }                
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16113              		.loc 1 2118 0 is_stmt 1
 16114 108a 7869     		ldr	r0, [r7, #20]
 16115 108c FFF7FEFF 		bl	strlen
 16116 1090 0346     		mov	r3, r0
 16117 1092 1A46     		mov	r2, r3
 16118 1094 7B69     		ldr	r3, [r7, #20]
 16119 1096 1344     		add	r3, r3, r2
 16120 1098 9B4A     		ldr	r2, .L688+8
 16121 109a 1188     		ldrh	r1, [r2]	@ unaligned
 16122 109c 9278     		ldrb	r2, [r2, #2]
 16123 109e 1980     		strh	r1, [r3]	@ unaligned
 16124 10a0 9A70     		strb	r2, [r3, #2]
2119:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 16125              		.loc 1 2119 0
 16126 10a2 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16127 10a6 D7F88810 		ldr	r1, [r7, #136]
 16128 10aa 1346     		mov	r3, r2
 16129 10ac 5B00     		lsls	r3, r3, #1
 16130 10ae 1344     		add	r3, r3, r2
 16131 10b0 1B01     		lsls	r3, r3, #4
 16132 10b2 0B44     		add	r3, r3, r1
 16133 10b4 03F2B513 		addw	r3, r3, #437
 16134 10b8 93F90030 		ldrsb	r3, [r3]
 16135 10bc 1A46     		mov	r2, r3
 16136 10be 07F11803 		add	r3, r7, #24
 16137 10c2 9249     		ldr	r1, .L688+12
 16138 10c4 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 361


 16139 10c6 FFF7FEFF 		bl	sprintf
2120:..\src/command_processing.c ****             strcat(info_string, str);
 16140              		.loc 1 2120 0
 16141 10ca 07F11803 		add	r3, r7, #24
 16142 10ce 1946     		mov	r1, r3
 16143 10d0 7869     		ldr	r0, [r7, #20]
 16144 10d2 FFF7FEFF 		bl	strcat
2121:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 16145              		.loc 1 2121 0
 16146 10d6 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16147 10da D7F88810 		ldr	r1, [r7, #136]
 16148 10de 1346     		mov	r3, r2
 16149 10e0 5B00     		lsls	r3, r3, #1
 16150 10e2 1344     		add	r3, r3, r2
 16151 10e4 1B01     		lsls	r3, r3, #4
 16152 10e6 0B44     		add	r3, r3, r1
 16153 10e8 03F5DB73 		add	r3, r3, #438
 16154 10ec 93F90030 		ldrsb	r3, [r3]
 16155 10f0 1A46     		mov	r2, r3
 16156 10f2 07F11803 		add	r3, r7, #24
 16157 10f6 8649     		ldr	r1, .L688+16
 16158 10f8 1846     		mov	r0, r3
 16159 10fa FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 16160              		.loc 1 2122 0
 16161 10fe 07F11803 		add	r3, r7, #24
 16162 1102 1946     		mov	r1, r3
 16163 1104 7869     		ldr	r0, [r7, #20]
 16164 1106 FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 16165              		.loc 1 2123 0
 16166 110a 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16167 110e D7F88810 		ldr	r1, [r7, #136]
 16168 1112 1346     		mov	r3, r2
 16169 1114 5B00     		lsls	r3, r3, #1
 16170 1116 1344     		add	r3, r3, r2
 16171 1118 1B01     		lsls	r3, r3, #4
 16172 111a 0B44     		add	r3, r3, r1
 16173 111c 03F2B713 		addw	r3, r3, #439
 16174 1120 93F90030 		ldrsb	r3, [r3]
 16175 1124 1A46     		mov	r2, r3
 16176 1126 07F11803 		add	r3, r7, #24
 16177 112a 7A49     		ldr	r1, .L688+20
 16178 112c 1846     		mov	r0, r3
 16179 112e FFF7FEFF 		bl	sprintf
2124:..\src/command_processing.c ****             strcat(info_string, str);
 16180              		.loc 1 2124 0
 16181 1132 07F11803 		add	r3, r7, #24
 16182 1136 1946     		mov	r1, r3
 16183 1138 7869     		ldr	r0, [r7, #20]
 16184 113a FFF7FEFF 		bl	strcat
2125:..\src/command_processing.c **** #endif            
2126:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16185              		.loc 1 2126 0
 16186 113e 7869     		ldr	r0, [r7, #20]
 16187 1140 FFF7FEFF 		bl	strlen
 16188 1144 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 362


 16189 1146 1A46     		mov	r2, r3
 16190 1148 7B69     		ldr	r3, [r7, #20]
 16191 114a 1344     		add	r3, r3, r2
 16192 114c 6E4A     		ldr	r2, .L688+8
 16193 114e 1188     		ldrh	r1, [r2]	@ unaligned
 16194 1150 9278     		ldrb	r2, [r2, #2]
 16195 1152 1980     		strh	r1, [r3]	@ unaligned
 16196 1154 9A70     		strb	r2, [r3, #2]
2127:..\src/command_processing.c **** 
2128:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 16197              		.loc 1 2128 0
 16198 1156 7869     		ldr	r0, [r7, #20]
 16199 1158 FFF7FEFF 		bl	strlen
 16200 115c 0346     		mov	r3, r0
 16201 115e 1A46     		mov	r2, r3
 16202 1160 7B69     		ldr	r3, [r7, #20]
 16203 1162 1344     		add	r3, r3, r2
 16204 1164 6C4A     		ldr	r2, .L688+24
 16205 1166 1D46     		mov	r5, r3
 16206 1168 1446     		mov	r4, r2
 16207 116a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16208 116c 2860     		str	r0, [r5]	@ unaligned
 16209 116e 6960     		str	r1, [r5, #4]	@ unaligned
 16210 1170 AA60     		str	r2, [r5, #8]	@ unaligned
 16211 1172 EB60     		str	r3, [r5, #12]	@ unaligned
 16212 1174 2068     		ldr	r0, [r4]	@ unaligned
 16213 1176 2861     		str	r0, [r5, #16]	@ unaligned
2129:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16214              		.loc 1 2129 0
 16215 1178 0023     		movs	r3, #0
 16216 117a C7F89430 		str	r3, [r7, #148]
 16217 117e 30E0     		b	.L623
 16218              	.L625:
2130:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16219              		.loc 1 2130 0
 16220 1180 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16221 1184 D7F88810 		ldr	r1, [r7, #136]
 16222 1188 1346     		mov	r3, r2
 16223 118a 5B00     		lsls	r3, r3, #1
 16224 118c 1344     		add	r3, r3, r2
 16225 118e 1B01     		lsls	r3, r3, #4
 16226 1190 CA18     		adds	r2, r1, r3
 16227 1192 D7F89430 		ldr	r3, [r7, #148]
 16228 1196 1344     		add	r3, r3, r2
 16229 1198 03F29513 		addw	r3, r3, #405
 16230 119c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16231 119e 1A46     		mov	r2, r3
 16232 11a0 07F11803 		add	r3, r7, #24
 16233 11a4 5649     		ldr	r1, .L688
 16234 11a6 1846     		mov	r0, r3
 16235 11a8 FFF7FEFF 		bl	sprintf
2131:..\src/command_processing.c ****                 strcat(info_string, str);
 16236              		.loc 1 2131 0
 16237 11ac 07F11803 		add	r3, r7, #24
 16238 11b0 1946     		mov	r1, r3
 16239 11b2 7869     		ldr	r0, [r7, #20]
 16240 11b4 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 363


2132:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16241              		.loc 1 2132 0
 16242 11b8 D7F89430 		ldr	r3, [r7, #148]
 16243 11bc 022B     		cmp	r3, #2
 16244 11be 0BD0     		beq	.L624
2133:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16245              		.loc 1 2133 0
 16246 11c0 7869     		ldr	r0, [r7, #20]
 16247 11c2 FFF7FEFF 		bl	strlen
 16248 11c6 0346     		mov	r3, r0
 16249 11c8 1A46     		mov	r2, r3
 16250 11ca 7B69     		ldr	r3, [r7, #20]
 16251 11cc 1344     		add	r3, r3, r2
 16252 11ce 4D4A     		ldr	r2, .L688+4
 16253 11d0 1188     		ldrh	r1, [r2]	@ unaligned
 16254 11d2 9278     		ldrb	r2, [r2, #2]
 16255 11d4 1980     		strh	r1, [r3]	@ unaligned
 16256 11d6 9A70     		strb	r2, [r3, #2]
 16257              	.L624:
2129:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16258              		.loc 1 2129 0 discriminator 2
 16259 11d8 D7F89430 		ldr	r3, [r7, #148]
 16260 11dc 0133     		adds	r3, r3, #1
 16261 11de C7F89430 		str	r3, [r7, #148]
 16262              	.L623:
2129:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16263              		.loc 1 2129 0 is_stmt 0 discriminator 1
 16264 11e2 D7F89430 		ldr	r3, [r7, #148]
 16265 11e6 022B     		cmp	r3, #2
 16266 11e8 CADD     		ble	.L625
2134:..\src/command_processing.c ****                 }                
2135:..\src/command_processing.c ****             }
2136:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16267              		.loc 1 2136 0 is_stmt 1
 16268 11ea 7869     		ldr	r0, [r7, #20]
 16269 11ec FFF7FEFF 		bl	strlen
 16270 11f0 0346     		mov	r3, r0
 16271 11f2 1A46     		mov	r2, r3
 16272 11f4 7B69     		ldr	r3, [r7, #20]
 16273 11f6 1344     		add	r3, r3, r2
 16274 11f8 434A     		ldr	r2, .L688+8
 16275 11fa 1188     		ldrh	r1, [r2]	@ unaligned
 16276 11fc 9278     		ldrb	r2, [r2, #2]
 16277 11fe 1980     		strh	r1, [r3]	@ unaligned
 16278 1200 9A70     		strb	r2, [r3, #2]
2137:..\src/command_processing.c **** 
2138:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 16279              		.loc 1 2138 0
 16280 1202 7869     		ldr	r0, [r7, #20]
 16281 1204 FFF7FEFF 		bl	strlen
 16282 1208 0346     		mov	r3, r0
 16283 120a 1A46     		mov	r2, r3
 16284 120c 7B69     		ldr	r3, [r7, #20]
 16285 120e 1344     		add	r3, r3, r2
 16286 1210 424A     		ldr	r2, .L688+28
 16287 1212 1D46     		mov	r5, r3
 16288 1214 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 364


 16289 1216 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16290 1218 2860     		str	r0, [r5]	@ unaligned
 16291 121a 6960     		str	r1, [r5, #4]	@ unaligned
 16292 121c AA60     		str	r2, [r5, #8]	@ unaligned
 16293 121e EB60     		str	r3, [r5, #12]	@ unaligned
 16294 1220 2068     		ldr	r0, [r4]	@ unaligned
 16295 1222 2861     		str	r0, [r5, #16]	@ unaligned
 16296 1224 2379     		ldrb	r3, [r4, #4]
 16297 1226 2B75     		strb	r3, [r5, #20]
2139:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16298              		.loc 1 2139 0
 16299 1228 0023     		movs	r3, #0
 16300 122a C7F89430 		str	r3, [r7, #148]
 16301 122e 3FE0     		b	.L626
 16302              	.L628:
2140:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16303              		.loc 1 2140 0
 16304 1230 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16305 1234 D7F88810 		ldr	r1, [r7, #136]
 16306 1238 1346     		mov	r3, r2
 16307 123a 5B00     		lsls	r3, r3, #1
 16308 123c 1344     		add	r3, r3, r2
 16309 123e 9B00     		lsls	r3, r3, #2
 16310 1240 D7F89420 		ldr	r2, [r7, #148]
 16311 1244 1344     		add	r3, r3, r2
 16312 1246 6633     		adds	r3, r3, #102
 16313 1248 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16314 124c 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16315 1250 D7F88800 		ldr	r0, [r7, #136]
 16316 1254 1346     		mov	r3, r2
 16317 1256 5B00     		lsls	r3, r3, #1
 16318 1258 1344     		add	r3, r3, r2
 16319 125a 1B01     		lsls	r3, r3, #4
 16320 125c C218     		adds	r2, r0, r3
 16321 125e D7F89430 		ldr	r3, [r7, #148]
 16322 1262 1344     		add	r3, r3, r2
 16323 1264 03F29513 		addw	r3, r3, #405
 16324 1268 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16325 126a 41FA03F2 		asr	r2, r1, r3
 16326 126e 07F11803 		add	r3, r7, #24
 16327 1272 2B49     		ldr	r1, .L688+32
 16328 1274 1846     		mov	r0, r3
 16329 1276 FFF7FEFF 		bl	sprintf
2141:..\src/command_processing.c ****                 strcat(info_string, str);
 16330              		.loc 1 2141 0
 16331 127a 07F11803 		add	r3, r7, #24
 16332 127e 1946     		mov	r1, r3
 16333 1280 7869     		ldr	r0, [r7, #20]
 16334 1282 FFF7FEFF 		bl	strcat
2142:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16335              		.loc 1 2142 0
 16336 1286 D7F89430 		ldr	r3, [r7, #148]
 16337 128a 022B     		cmp	r3, #2
 16338 128c 0BD0     		beq	.L627
2143:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16339              		.loc 1 2143 0
 16340 128e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 365


 16341 1290 FFF7FEFF 		bl	strlen
 16342 1294 0346     		mov	r3, r0
 16343 1296 1A46     		mov	r2, r3
 16344 1298 7B69     		ldr	r3, [r7, #20]
 16345 129a 1344     		add	r3, r3, r2
 16346 129c 194A     		ldr	r2, .L688+4
 16347 129e 1188     		ldrh	r1, [r2]	@ unaligned
 16348 12a0 9278     		ldrb	r2, [r2, #2]
 16349 12a2 1980     		strh	r1, [r3]	@ unaligned
 16350 12a4 9A70     		strb	r2, [r3, #2]
 16351              	.L627:
2139:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16352              		.loc 1 2139 0 discriminator 2
 16353 12a6 D7F89430 		ldr	r3, [r7, #148]
 16354 12aa 0133     		adds	r3, r3, #1
 16355 12ac C7F89430 		str	r3, [r7, #148]
 16356              	.L626:
2139:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 16357              		.loc 1 2139 0 is_stmt 0 discriminator 1
 16358 12b0 D7F89430 		ldr	r3, [r7, #148]
 16359 12b4 022B     		cmp	r3, #2
 16360 12b6 BBDD     		ble	.L628
2144:..\src/command_processing.c ****                 }
2145:..\src/command_processing.c ****             }
2146:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16361              		.loc 1 2146 0 is_stmt 1
 16362 12b8 7869     		ldr	r0, [r7, #20]
 16363 12ba FFF7FEFF 		bl	strlen
 16364 12be 0346     		mov	r3, r0
 16365 12c0 1A46     		mov	r2, r3
 16366 12c2 7B69     		ldr	r3, [r7, #20]
 16367 12c4 1344     		add	r3, r3, r2
 16368 12c6 104A     		ldr	r2, .L688+8
 16369 12c8 1188     		ldrh	r1, [r2]	@ unaligned
 16370 12ca 9278     		ldrb	r2, [r2, #2]
 16371 12cc 1980     		strh	r1, [r3]	@ unaligned
 16372 12ce 9A70     		strb	r2, [r3, #2]
2147:..\src/command_processing.c ****                 
2148:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 16373              		.loc 1 2148 0
 16374 12d0 7869     		ldr	r0, [r7, #20]
 16375 12d2 FFF7FEFF 		bl	strlen
 16376 12d6 0346     		mov	r3, r0
 16377 12d8 1A46     		mov	r2, r3
 16378 12da 7B69     		ldr	r3, [r7, #20]
 16379 12dc 1344     		add	r3, r3, r2
 16380 12de 114A     		ldr	r2, .L688+36
 16381 12e0 1D46     		mov	r5, r3
 16382 12e2 1446     		mov	r4, r2
 16383 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16384 12e6 2860     		str	r0, [r5]	@ unaligned
 16385 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 16386 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 16387 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 16388 12ee 03CC     		ldmia	r4!, {r0, r1}
 16389 12f0 2861     		str	r0, [r5, #16]	@ unaligned
 16390 12f2 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 366


 16391 12f4 2378     		ldrb	r3, [r4]
 16392 12f6 2B76     		strb	r3, [r5, #24]
2149:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16393              		.loc 1 2149 0
 16394 12f8 0023     		movs	r3, #0
 16395 12fa C7F89430 		str	r3, [r7, #148]
 16396 12fe 49E0     		b	.L629
 16397              	.L689:
 16398              		.align	2
 16399              	.L688:
 16400 1300 64130000 		.word	.LC182
 16401 1304 68130000 		.word	.LC183
 16402 1308 30110000 		.word	.LC151
 16403 130c 9C160000 		.word	.LC213
 16404 1310 B4160000 		.word	.LC214
 16405 1314 CC160000 		.word	.LC215
 16406 1318 E4160000 		.word	.LC216
 16407 131c F8160000 		.word	.LC217
 16408 1320 10170000 		.word	.LC218
 16409 1324 14170000 		.word	.LC219
 16410              	.L631:
2150:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16411              		.loc 1 2150 0
 16412 1328 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16413 132c D7F88810 		ldr	r1, [r7, #136]
 16414 1330 1346     		mov	r3, r2
 16415 1332 5B00     		lsls	r3, r3, #1
 16416 1334 1344     		add	r3, r3, r2
 16417 1336 9B00     		lsls	r3, r3, #2
 16418 1338 D7F89420 		ldr	r2, [r7, #148]
 16419 133c 1344     		add	r3, r3, r2
 16420 133e 6833     		adds	r3, r3, #104
 16421 1340 9B00     		lsls	r3, r3, #2
 16422 1342 0B44     		add	r3, r3, r1
 16423 1344 5B68     		ldr	r3, [r3, #4]	@ float
 16424 1346 1846     		mov	r0, r3
 16425 1348 FFF7FEFF 		bl	__aeabi_f2d
 16426 134c 0346     		mov	r3, r0
 16427 134e 0C46     		mov	r4, r1
 16428 1350 07F11800 		add	r0, r7, #24
 16429 1354 1A46     		mov	r2, r3
 16430 1356 2346     		mov	r3, r4
 16431 1358 BD49     		ldr	r1, .L690
 16432 135a FFF7FEFF 		bl	sprintf
2151:..\src/command_processing.c ****                 strcat(info_string, str);
 16433              		.loc 1 2151 0
 16434 135e 07F11803 		add	r3, r7, #24
 16435 1362 1946     		mov	r1, r3
 16436 1364 7869     		ldr	r0, [r7, #20]
 16437 1366 FFF7FEFF 		bl	strcat
2152:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 16438              		.loc 1 2152 0
 16439 136a D7F89430 		ldr	r3, [r7, #148]
 16440 136e 022B     		cmp	r3, #2
 16441 1370 0BD0     		beq	.L630
2153:..\src/command_processing.c ****                     strcat(info_string, ", ");
 16442              		.loc 1 2153 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 367


 16443 1372 7869     		ldr	r0, [r7, #20]
 16444 1374 FFF7FEFF 		bl	strlen
 16445 1378 0346     		mov	r3, r0
 16446 137a 1A46     		mov	r2, r3
 16447 137c 7B69     		ldr	r3, [r7, #20]
 16448 137e 1344     		add	r3, r3, r2
 16449 1380 B44A     		ldr	r2, .L690+4
 16450 1382 1188     		ldrh	r1, [r2]	@ unaligned
 16451 1384 9278     		ldrb	r2, [r2, #2]
 16452 1386 1980     		strh	r1, [r3]	@ unaligned
 16453 1388 9A70     		strb	r2, [r3, #2]
 16454              	.L630:
2149:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16455              		.loc 1 2149 0 discriminator 2
 16456 138a D7F89430 		ldr	r3, [r7, #148]
 16457 138e 0133     		adds	r3, r3, #1
 16458 1390 C7F89430 		str	r3, [r7, #148]
 16459              	.L629:
2149:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16460              		.loc 1 2149 0 is_stmt 0 discriminator 1
 16461 1394 D7F89430 		ldr	r3, [r7, #148]
 16462 1398 022B     		cmp	r3, #2
 16463 139a C5DD     		ble	.L631
2154:..\src/command_processing.c ****                 }
2155:..\src/command_processing.c ****             }
2156:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16464              		.loc 1 2156 0 is_stmt 1
 16465 139c 7869     		ldr	r0, [r7, #20]
 16466 139e FFF7FEFF 		bl	strlen
 16467 13a2 0346     		mov	r3, r0
 16468 13a4 1A46     		mov	r2, r3
 16469 13a6 7B69     		ldr	r3, [r7, #20]
 16470 13a8 1344     		add	r3, r3, r2
 16471 13aa AB4A     		ldr	r2, .L690+8
 16472 13ac 1188     		ldrh	r1, [r2]	@ unaligned
 16473 13ae 9278     		ldrb	r2, [r2, #2]
 16474 13b0 1980     		strh	r1, [r3]	@ unaligned
 16475 13b2 9A70     		strb	r2, [r3, #2]
2157:..\src/command_processing.c ****             
2158:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2159:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16476              		.loc 1 2159 0
 16477 13b4 D7F88030 		ldr	r3, [r7, #128]
 16478 13b8 5B6C     		ldr	r3, [r3, #68]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16479              		.loc 1 2158 0
 16480 13ba 1846     		mov	r0, r3
 16481 13bc FFF7FEFF 		bl	__aeabi_f2d
 16482 13c0 C7E90201 		strd	r0, [r7, #8]
 16483              		.loc 1 2159 0
 16484 13c4 D7F88030 		ldr	r3, [r7, #128]
 16485 13c8 9B6C     		ldr	r3, [r3, #72]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16486              		.loc 1 2158 0
 16487 13ca 1846     		mov	r0, r3
 16488 13cc FFF7FEFF 		bl	__aeabi_f2d
 16489 13d0 0446     		mov	r4, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 368


 16490 13d2 0D46     		mov	r5, r1
 16491              		.loc 1 2159 0
 16492 13d4 D7F88030 		ldr	r3, [r7, #128]
 16493 13d8 DB6C     		ldr	r3, [r3, #76]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16494              		.loc 1 2158 0
 16495 13da 1846     		mov	r0, r3
 16496 13dc FFF7FEFF 		bl	__aeabi_f2d
 16497 13e0 8046     		mov	r8, r0
 16498 13e2 8946     		mov	r9, r1
2160:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 16499              		.loc 1 2160 0
 16500 13e4 D7F88030 		ldr	r3, [r7, #128]
 16501 13e8 1B6D     		ldr	r3, [r3, #80]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16502              		.loc 1 2158 0
 16503 13ea 1846     		mov	r0, r3
 16504 13ec FFF7FEFF 		bl	__aeabi_f2d
 16505 13f0 8246     		mov	r10, r0
 16506 13f2 8B46     		mov	fp, r1
 16507              		.loc 1 2160 0
 16508 13f4 D7F88030 		ldr	r3, [r7, #128]
 16509 13f8 5B6D     		ldr	r3, [r3, #84]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16510              		.loc 1 2158 0
 16511 13fa 1846     		mov	r0, r3
 16512 13fc FFF7FEFF 		bl	__aeabi_f2d
 16513 1400 C7E90001 		strd	r0, [r7]
 16514              		.loc 1 2160 0
 16515 1404 D7F88030 		ldr	r3, [r7, #128]
 16516 1408 9B6D     		ldr	r3, [r3, #88]	@ float
2158:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 16517              		.loc 1 2158 0
 16518 140a 1846     		mov	r0, r3
 16519 140c FFF7FEFF 		bl	__aeabi_f2d
 16520 1410 0246     		mov	r2, r0
 16521 1412 0B46     		mov	r3, r1
 16522 1414 07F11800 		add	r0, r7, #24
 16523 1418 CDE90823 		strd	r2, [sp, #32]
 16524 141c D7E90012 		ldrd	r1, [r7]
 16525 1420 CDE90612 		strd	r1, [sp, #24]
 16526 1424 CDE904AB 		strd	r10, [sp, #16]
 16527 1428 CDE90289 		strd	r8, [sp, #8]
 16528 142c CDE90045 		strd	r4, [sp]
 16529 1430 D7E90223 		ldrd	r2, [r7, #8]
 16530 1434 8949     		ldr	r1, .L690+12
 16531 1436 FFF7FEFF 		bl	sprintf
2161:..\src/command_processing.c **** 		    strcat(info_string, str);       
 16532              		.loc 1 2161 0
 16533 143a 07F11803 		add	r3, r7, #24
 16534 143e 1946     		mov	r1, r3
 16535 1440 7869     		ldr	r0, [r7, #20]
 16536 1442 FFF7FEFF 		bl	strcat
2162:..\src/command_processing.c **** 
2163:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 16537              		.loc 1 2163 0
 16538 1446 D7F88030 		ldr	r3, [r7, #128]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 369


 16539 144a 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16540 144e 1A46     		mov	r2, r3
 16541 1450 07F11803 		add	r3, r7, #24
 16542 1454 8249     		ldr	r1, .L690+16
 16543 1456 1846     		mov	r0, r3
 16544 1458 FFF7FEFF 		bl	sprintf
2164:..\src/command_processing.c ****             strcat(info_string, str);
 16545              		.loc 1 2164 0
 16546 145c 07F11803 		add	r3, r7, #24
 16547 1460 1946     		mov	r1, r3
 16548 1462 7869     		ldr	r0, [r7, #20]
 16549 1464 FFF7FEFF 		bl	strcat
2165:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16550              		.loc 1 2165 0
 16551 1468 7869     		ldr	r0, [r7, #20]
 16552 146a FFF7FEFF 		bl	strlen
 16553 146e 0346     		mov	r3, r0
 16554 1470 1A46     		mov	r2, r3
 16555 1472 7B69     		ldr	r3, [r7, #20]
 16556 1474 1344     		add	r3, r3, r2
 16557 1476 784A     		ldr	r2, .L690+8
 16558 1478 1188     		ldrh	r1, [r2]	@ unaligned
 16559 147a 9278     		ldrb	r2, [r2, #2]
 16560 147c 1980     		strh	r1, [r3]	@ unaligned
 16561 147e 9A70     		strb	r2, [r3, #2]
2166:..\src/command_processing.c **** 
2167:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 16562              		.loc 1 2167 0
 16563 1480 D7F88030 		ldr	r3, [r7, #128]
 16564 1484 596B     		ldr	r1, [r3, #52]
 16565 1486 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16566 148a D7F88800 		ldr	r0, [r7, #136]
 16567 148e 1346     		mov	r3, r2
 16568 1490 5B00     		lsls	r3, r3, #1
 16569 1492 1344     		add	r3, r3, r2
 16570 1494 1B01     		lsls	r3, r3, #4
 16571 1496 0344     		add	r3, r3, r0
 16572 1498 03F29513 		addw	r3, r3, #405
 16573 149c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16574 149e 41FA03F2 		asr	r2, r1, r3
 16575 14a2 07F11803 		add	r3, r7, #24
 16576 14a6 6F49     		ldr	r1, .L690+20
 16577 14a8 1846     		mov	r0, r3
 16578 14aa FFF7FEFF 		bl	sprintf
2168:..\src/command_processing.c ****             strcat(info_string, str);
 16579              		.loc 1 2168 0
 16580 14ae 07F11803 		add	r3, r7, #24
 16581 14b2 1946     		mov	r1, r3
 16582 14b4 7869     		ldr	r0, [r7, #20]
 16583 14b6 FFF7FEFF 		bl	strcat
2169:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 16584              		.loc 1 2169 0
 16585 14ba D7F88030 		ldr	r3, [r7, #128]
 16586 14be 996B     		ldr	r1, [r3, #56]
 16587 14c0 97F87F20 		ldrb	r2, [r7, #127]	@ zero_extendqisi2
 16588 14c4 D7F88800 		ldr	r0, [r7, #136]
 16589 14c8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 370


 16590 14ca 5B00     		lsls	r3, r3, #1
 16591 14cc 1344     		add	r3, r3, r2
 16592 14ce 1B01     		lsls	r3, r3, #4
 16593 14d0 0344     		add	r3, r3, r0
 16594 14d2 03F29513 		addw	r3, r3, #405
 16595 14d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16596 14d8 41FA03F2 		asr	r2, r1, r3
 16597 14dc 07F11803 		add	r3, r7, #24
 16598 14e0 6149     		ldr	r1, .L690+24
 16599 14e2 1846     		mov	r0, r3
 16600 14e4 FFF7FEFF 		bl	sprintf
2170:..\src/command_processing.c ****             strcat(info_string, str);
 16601              		.loc 1 2170 0
 16602 14e8 07F11803 		add	r3, r7, #24
 16603 14ec 1946     		mov	r1, r3
 16604 14ee 7869     		ldr	r0, [r7, #20]
 16605 14f0 FFF7FEFF 		bl	strcat
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 16606              		.loc 1 2172 0
 16607 14f4 D7F88030 		ldr	r3, [r7, #128]
 16608 14f8 1A6C     		ldr	r2, [r3, #64]
 16609 14fa D7F88030 		ldr	r3, [r7, #128]
 16610 14fe DB6B     		ldr	r3, [r3, #60]
 16611 1500 07F11800 		add	r0, r7, #24
 16612 1504 5949     		ldr	r1, .L690+28
 16613 1506 FFF7FEFF 		bl	sprintf
2173:..\src/command_processing.c ****             strcat(info_string, str);
 16614              		.loc 1 2173 0
 16615 150a 07F11803 		add	r3, r7, #24
 16616 150e 1946     		mov	r1, r3
 16617 1510 7869     		ldr	r0, [r7, #20]
 16618 1512 FFF7FEFF 		bl	strcat
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16619              		.loc 1 2174 0
 16620 1516 7869     		ldr	r0, [r7, #20]
 16621 1518 FFF7FEFF 		bl	strlen
 16622 151c 0346     		mov	r3, r0
 16623 151e 1A46     		mov	r2, r3
 16624 1520 7B69     		ldr	r3, [r7, #20]
 16625 1522 1344     		add	r3, r3, r2
 16626 1524 4C4A     		ldr	r2, .L690+8
 16627 1526 1188     		ldrh	r1, [r2]	@ unaligned
 16628 1528 9278     		ldrb	r2, [r2, #2]
 16629 152a 1980     		strh	r1, [r3]	@ unaligned
 16630 152c 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c **** 
2176:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16631              		.loc 1 2176 0
 16632 152e D7F88030 		ldr	r3, [r7, #128]
 16633 1532 B3F95C30 		ldrsh	r3, [r3, #92]
 16634 1536 1A46     		mov	r2, r3
 16635 1538 07F11803 		add	r3, r7, #24
 16636 153c 4C49     		ldr	r1, .L690+32
 16637 153e 1846     		mov	r0, r3
 16638 1540 FFF7FEFF 		bl	sprintf
2177:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 371


 16639              		.loc 1 2177 0
 16640 1544 07F11803 		add	r3, r7, #24
 16641 1548 1946     		mov	r1, r3
 16642 154a 7869     		ldr	r0, [r7, #20]
 16643 154c FFF7FEFF 		bl	strcat
2178:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2179:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
 16644              		.loc 1 2179 0
 16645 1550 D7F88030 		ldr	r3, [r7, #128]
 16646 1554 93F86030 		ldrb	r3, [r3, #96]	@ zero_extendqisi2
 16647 1558 1A46     		mov	r2, r3
 16648 155a 07F11803 		add	r3, r7, #24
 16649 155e 4549     		ldr	r1, .L690+36
 16650 1560 1846     		mov	r0, r3
 16651 1562 FFF7FEFF 		bl	sprintf
2180:..\src/command_processing.c ****             strcat(info_string, str);
 16652              		.loc 1 2180 0
 16653 1566 07F11803 		add	r3, r7, #24
 16654 156a 1946     		mov	r1, r3
 16655 156c 7869     		ldr	r0, [r7, #20]
 16656 156e FFF7FEFF 		bl	strcat
2181:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
 16657              		.loc 1 2181 0
 16658 1572 D7F88030 		ldr	r3, [r7, #128]
 16659 1576 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 16660 157a 002B     		cmp	r3, #0
 16661 157c 02D0     		beq	.L633
 16662 157e 012B     		cmp	r3, #1
 16663 1580 1DD0     		beq	.L634
2182:..\src/command_processing.c ****                 case DRIVER_MC33887:
2183:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2184:..\src/command_processing.c ****                     break;
2185:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2186:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2187:..\src/command_processing.c ****                     break;
2188:..\src/command_processing.c ****                 default:
2189:..\src/command_processing.c ****                     break;
 16664              		.loc 1 2189 0
 16665 1582 39E0     		b	.L636
 16666              	.L633:
2183:..\src/command_processing.c ****                     break;
 16667              		.loc 1 2183 0
 16668 1584 7869     		ldr	r0, [r7, #20]
 16669 1586 FFF7FEFF 		bl	strlen
 16670 158a 0346     		mov	r3, r0
 16671 158c 1A46     		mov	r2, r3
 16672 158e 7B69     		ldr	r3, [r7, #20]
 16673 1590 1344     		add	r3, r3, r2
 16674 1592 394A     		ldr	r2, .L690+40
 16675 1594 1446     		mov	r4, r2
 16676 1596 9E46     		mov	lr, r3
 16677 1598 04F1200C 		add	ip, r4, #32
 16678              	.L635:
 16679 159c 7546     		mov	r5, lr
 16680 159e 2646     		mov	r6, r4
 16681 15a0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16682 15a2 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 372


 16683 15a4 6960     		str	r1, [r5, #4]	@ unaligned
 16684 15a6 AA60     		str	r2, [r5, #8]	@ unaligned
 16685 15a8 EB60     		str	r3, [r5, #12]	@ unaligned
 16686 15aa 1034     		adds	r4, r4, #16
 16687 15ac 0EF1100E 		add	lr, lr, #16
 16688 15b0 6445     		cmp	r4, ip
 16689 15b2 F3D1     		bne	.L635
 16690 15b4 7246     		mov	r2, lr
 16691 15b6 2346     		mov	r3, r4
 16692 15b8 1B88     		ldrh	r3, [r3]	@ unaligned
 16693 15ba 1380     		strh	r3, [r2]	@ unaligned
2184:..\src/command_processing.c ****                 case DRIVER_VNH5019:
 16694              		.loc 1 2184 0
 16695 15bc 1CE0     		b	.L636
 16696              	.L634:
2186:..\src/command_processing.c ****                     break;
 16697              		.loc 1 2186 0
 16698 15be 7869     		ldr	r0, [r7, #20]
 16699 15c0 FFF7FEFF 		bl	strlen
 16700 15c4 0346     		mov	r3, r0
 16701 15c6 1A46     		mov	r2, r3
 16702 15c8 7B69     		ldr	r3, [r7, #20]
 16703 15ca 1344     		add	r3, r3, r2
 16704 15cc 2B4A     		ldr	r2, .L690+44
 16705 15ce 1446     		mov	r4, r2
 16706 15d0 9E46     		mov	lr, r3
 16707 15d2 04F1200C 		add	ip, r4, #32
 16708              	.L637:
 16709 15d6 7546     		mov	r5, lr
 16710 15d8 2646     		mov	r6, r4
 16711 15da 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16712 15dc 2860     		str	r0, [r5]	@ unaligned
 16713 15de 6960     		str	r1, [r5, #4]	@ unaligned
 16714 15e0 AA60     		str	r2, [r5, #8]	@ unaligned
 16715 15e2 EB60     		str	r3, [r5, #12]	@ unaligned
 16716 15e4 1034     		adds	r4, r4, #16
 16717 15e6 0EF1100E 		add	lr, lr, #16
 16718 15ea 6445     		cmp	r4, ip
 16719 15ec F3D1     		bne	.L637
 16720 15ee 7346     		mov	r3, lr
 16721 15f0 2246     		mov	r2, r4
 16722 15f2 1068     		ldr	r0, [r2]	@ unaligned
 16723 15f4 1860     		str	r0, [r3]	@ unaligned
2187:..\src/command_processing.c ****                 default:
 16724              		.loc 1 2187 0
 16725 15f6 00BF     		nop
 16726              	.L636:
2190:..\src/command_processing.c ****             }
2191:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
 16727              		.loc 1 2191 0
 16728 15f8 D7F88030 		ldr	r3, [r7, #128]
 16729 15fc 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 16730 1600 1A46     		mov	r2, r3
 16731 1602 07F11803 		add	r3, r7, #24
 16732 1606 1E49     		ldr	r1, .L690+48
 16733 1608 1846     		mov	r0, r3
 16734 160a FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 373


2192:..\src/command_processing.c ****             strcat(info_string, str);
 16735              		.loc 1 2192 0
 16736 160e 07F11803 		add	r3, r7, #24
 16737 1612 1946     		mov	r1, r3
 16738 1614 7869     		ldr	r0, [r7, #20]
 16739 1616 FFF7FEFF 		bl	strcat
2193:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
 16740              		.loc 1 2193 0
 16741 161a D7F88030 		ldr	r3, [r7, #128]
 16742 161e 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 16743 1622 002B     		cmp	r3, #0
 16744 1624 30D0     		beq	.L638
2194:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
 16745              		.loc 1 2194 0
 16746 1626 7869     		ldr	r0, [r7, #20]
 16747 1628 FFF7FEFF 		bl	strlen
 16748 162c 0346     		mov	r3, r0
 16749 162e 1A46     		mov	r2, r3
 16750 1630 7B69     		ldr	r3, [r7, #20]
 16751 1632 1344     		add	r3, r3, r2
 16752 1634 134A     		ldr	r2, .L690+52
 16753 1636 1D46     		mov	r5, r3
 16754 1638 1446     		mov	r4, r2
 16755 163a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16756 163c 2860     		str	r0, [r5]	@ unaligned
 16757 163e 6960     		str	r1, [r5, #4]	@ unaligned
 16758 1640 AA60     		str	r2, [r5, #8]	@ unaligned
 16759 1642 EB60     		str	r3, [r5, #12]	@ unaligned
 16760 1644 07CC     		ldmia	r4!, {r0, r1, r2}
 16761 1646 2861     		str	r0, [r5, #16]	@ unaligned
 16762 1648 6961     		str	r1, [r5, #20]	@ unaligned
 16763 164a AA61     		str	r2, [r5, #24]	@ unaligned
 16764 164c 33E0     		b	.L639
 16765              	.L691:
 16766 164e 00BF     		.align	2
 16767              	.L690:
 16768 1650 30170000 		.word	.LC220
 16769 1654 68130000 		.word	.LC183
 16770 1658 30110000 		.word	.LC151
 16771 165c 34170000 		.word	.LC221
 16772 1660 64170000 		.word	.LC222
 16773 1664 80170000 		.word	.LC223
 16774 1668 A4170000 		.word	.LC224
 16775 166c B4170000 		.word	.LC225
 16776 1670 D0170000 		.word	.LC226
 16777 1674 E4170000 		.word	.LC227
 16778 1678 10180000 		.word	.LC228
 16779 167c 34180000 		.word	.LC229
 16780 1680 58180000 		.word	.LC230
 16781 1684 78180000 		.word	.LC231
 16782              	.L638:
2195:..\src/command_processing.c ****             else
2196:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
 16783              		.loc 1 2196 0
 16784 1688 7869     		ldr	r0, [r7, #20]
 16785 168a FFF7FEFF 		bl	strlen
 16786 168e 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 374


 16787 1690 1A46     		mov	r2, r3
 16788 1692 7B69     		ldr	r3, [r7, #20]
 16789 1694 1344     		add	r3, r3, r2
 16790 1696 A24A     		ldr	r2, .L692
 16791 1698 1D46     		mov	r5, r3
 16792 169a 1446     		mov	r4, r2
 16793 169c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16794 169e 2860     		str	r0, [r5]	@ unaligned
 16795 16a0 6960     		str	r1, [r5, #4]	@ unaligned
 16796 16a2 AA60     		str	r2, [r5, #8]	@ unaligned
 16797 16a4 EB60     		str	r3, [r5, #12]	@ unaligned
 16798 16a6 03CC     		ldmia	r4!, {r0, r1}
 16799 16a8 2861     		str	r0, [r5, #16]	@ unaligned
 16800 16aa 6961     		str	r1, [r5, #20]	@ unaligned
 16801 16ac 2388     		ldrh	r3, [r4]	@ unaligned
 16802 16ae A278     		ldrb	r2, [r4, #2]
 16803 16b0 2B83     		strh	r3, [r5, #24]	@ unaligned
 16804 16b2 1346     		mov	r3, r2
 16805 16b4 AB76     		strb	r3, [r5, #26]
 16806              	.L639:
2197:..\src/command_processing.c **** #endif                
2198:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 16807              		.loc 1 2198 0 discriminator 2
 16808 16b6 7869     		ldr	r0, [r7, #20]
 16809 16b8 FFF7FEFF 		bl	strlen
 16810 16bc 0346     		mov	r3, r0
 16811 16be 1A46     		mov	r2, r3
 16812 16c0 7B69     		ldr	r3, [r7, #20]
 16813 16c2 1344     		add	r3, r3, r2
 16814 16c4 974A     		ldr	r2, .L692+4
 16815 16c6 1188     		ldrh	r1, [r2]	@ unaligned
 16816 16c8 9278     		ldrb	r2, [r2, #2]
 16817 16ca 1980     		strh	r1, [r3]	@ unaligned
 16818 16cc 9A70     		strb	r2, [r3, #2]
 16819              	.LBE22:
1928:..\src/command_processing.c ****             
 16820              		.loc 1 1928 0 discriminator 2
 16821 16ce 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 16822 16d2 0133     		adds	r3, r3, #1
 16823 16d4 87F89330 		strb	r3, [r7, #147]
 16824              	.L575:
1928:..\src/command_processing.c ****             
 16825              		.loc 1 1928 0 is_stmt 0 discriminator 1
 16826 16d8 D7F88830 		ldr	r3, [r7, #136]
 16827 16dc 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 16828 16e0 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 16829 16e4 9A42     		cmp	r2, r3
 16830 16e6 7EF641AE 		bls	.L640
 16831              	.LBE21:
2199:..\src/command_processing.c ****         }
2200:..\src/command_processing.c ****       
2201:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 16832              		.loc 1 2201 0 is_stmt 1
 16833 16ea 7869     		ldr	r0, [r7, #20]
 16834 16ec FFF7FEFF 		bl	strlen
 16835 16f0 0346     		mov	r3, r0
 16836 16f2 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 375


 16837 16f4 7B69     		ldr	r3, [r7, #20]
 16838 16f6 1344     		add	r3, r3, r2
 16839 16f8 8B4A     		ldr	r2, .L692+8
 16840 16fa 1D46     		mov	r5, r3
 16841 16fc 1446     		mov	r4, r2
 16842 16fe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16843 1700 2860     		str	r0, [r5]	@ unaligned
 16844 1702 6960     		str	r1, [r5, #4]	@ unaligned
 16845 1704 AA60     		str	r2, [r5, #8]	@ unaligned
 16846 1706 EB60     		str	r3, [r5, #12]	@ unaligned
 16847 1708 2068     		ldr	r0, [r4]	@ unaligned
 16848 170a 2861     		str	r0, [r5, #16]	@ unaligned
2202:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 16849              		.loc 1 2202 0
 16850 170c D7F88830 		ldr	r3, [r7, #136]
 16851 1710 B3F8F031 		ldrh	r3, [r3, #496]
 16852 1714 1A46     		mov	r2, r3
 16853 1716 D7F88830 		ldr	r3, [r7, #136]
 16854 171a B3F8F231 		ldrh	r3, [r3, #498]
 16855 171e 07F11800 		add	r0, r7, #24
 16856 1722 8249     		ldr	r1, .L692+12
 16857 1724 FFF7FEFF 		bl	sprintf
2203:..\src/command_processing.c ****         strcat(info_string, str);
 16858              		.loc 1 2203 0
 16859 1728 07F11803 		add	r3, r7, #24
 16860 172c 1946     		mov	r1, r3
 16861 172e 7869     		ldr	r0, [r7, #20]
 16862 1730 FFF7FEFF 		bl	strcat
2204:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16863              		.loc 1 2204 0
 16864 1734 7869     		ldr	r0, [r7, #20]
 16865 1736 FFF7FEFF 		bl	strlen
 16866 173a 0346     		mov	r3, r0
 16867 173c 1A46     		mov	r2, r3
 16868 173e 7B69     		ldr	r3, [r7, #20]
 16869 1740 1344     		add	r3, r3, r2
 16870 1742 784A     		ldr	r2, .L692+4
 16871 1744 1188     		ldrh	r1, [r2]	@ unaligned
 16872 1746 9278     		ldrb	r2, [r2, #2]
 16873 1748 1980     		strh	r1, [r3]	@ unaligned
 16874 174a 9A70     		strb	r2, [r3, #2]
2205:..\src/command_processing.c **** 
2206:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 16875              		.loc 1 2206 0
 16876 174c D7F88830 		ldr	r3, [r7, #136]
 16877 1750 D3F8F421 		ldr	r2, [r3, #500]
 16878 1754 D7F88830 		ldr	r3, [r7, #136]
 16879 1758 D3F8F831 		ldr	r3, [r3, #504]
 16880 175c 07F11800 		add	r0, r7, #24
 16881 1760 7349     		ldr	r1, .L692+16
 16882 1762 FFF7FEFF 		bl	sprintf
2207:..\src/command_processing.c ****         strcat(info_string, str);
 16883              		.loc 1 2207 0
 16884 1766 07F11803 		add	r3, r7, #24
 16885 176a 1946     		mov	r1, r3
 16886 176c 7869     		ldr	r0, [r7, #20]
 16887 176e FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 376


2208:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16888              		.loc 1 2208 0
 16889 1772 7869     		ldr	r0, [r7, #20]
 16890 1774 FFF7FEFF 		bl	strlen
 16891 1778 0346     		mov	r3, r0
 16892 177a 1A46     		mov	r2, r3
 16893 177c 7B69     		ldr	r3, [r7, #20]
 16894 177e 1344     		add	r3, r3, r2
 16895 1780 684A     		ldr	r2, .L692+4
 16896 1782 1188     		ldrh	r1, [r2]	@ unaligned
 16897 1784 9278     		ldrb	r2, [r2, #2]
 16898 1786 1980     		strh	r1, [r3]	@ unaligned
 16899 1788 9A70     		strb	r2, [r3, #2]
2209:..\src/command_processing.c **** 
2210:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 16900              		.loc 1 2210 0
 16901 178a D7F88830 		ldr	r3, [r7, #136]
 16902 178e 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 16903 1792 002B     		cmp	r3, #0
 16904 1794 13D0     		beq	.L641
2211:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 16905              		.loc 1 2211 0
 16906 1796 7869     		ldr	r0, [r7, #20]
 16907 1798 FFF7FEFF 		bl	strlen
 16908 179c 0346     		mov	r3, r0
 16909 179e 1A46     		mov	r2, r3
 16910 17a0 7B69     		ldr	r3, [r7, #20]
 16911 17a2 1344     		add	r3, r3, r2
 16912 17a4 634A     		ldr	r2, .L692+20
 16913 17a6 1D46     		mov	r5, r3
 16914 17a8 1446     		mov	r4, r2
 16915 17aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16916 17ac 2860     		str	r0, [r5]	@ unaligned
 16917 17ae 6960     		str	r1, [r5, #4]	@ unaligned
 16918 17b0 AA60     		str	r2, [r5, #8]	@ unaligned
 16919 17b2 EB60     		str	r3, [r5, #12]	@ unaligned
 16920 17b4 2068     		ldr	r0, [r4]	@ unaligned
 16921 17b6 2861     		str	r0, [r5, #16]	@ unaligned
 16922 17b8 2379     		ldrb	r3, [r4, #4]
 16923 17ba 2B75     		strb	r3, [r5, #20]
 16924 17bc 10E0     		b	.L642
 16925              	.L641:
2212:..\src/command_processing.c ****         else
2213:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 16926              		.loc 1 2213 0
 16927 17be 7869     		ldr	r0, [r7, #20]
 16928 17c0 FFF7FEFF 		bl	strlen
 16929 17c4 0346     		mov	r3, r0
 16930 17c6 1A46     		mov	r2, r3
 16931 17c8 7B69     		ldr	r3, [r7, #20]
 16932 17ca 1344     		add	r3, r3, r2
 16933 17cc 5A4A     		ldr	r2, .L692+24
 16934 17ce 1D46     		mov	r5, r3
 16935 17d0 1446     		mov	r4, r2
 16936 17d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16937 17d4 2860     		str	r0, [r5]	@ unaligned
 16938 17d6 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 377


 16939 17d8 AA60     		str	r2, [r5, #8]	@ unaligned
 16940 17da EB60     		str	r3, [r5, #12]	@ unaligned
 16941 17dc 2068     		ldr	r0, [r4]	@ unaligned
 16942 17de 2861     		str	r0, [r5, #16]	@ unaligned
 16943              	.L642:
2214:..\src/command_processing.c ****             
2215:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 16944              		.loc 1 2215 0
 16945 17e0 D7F88830 		ldr	r3, [r7, #136]
 16946 17e4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 16947 17e8 002B     		cmp	r3, #0
 16948 17ea 17D0     		beq	.L643
2216:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 16949              		.loc 1 2216 0
 16950 17ec 7869     		ldr	r0, [r7, #20]
 16951 17ee FFF7FEFF 		bl	strlen
 16952 17f2 0346     		mov	r3, r0
 16953 17f4 1A46     		mov	r2, r3
 16954 17f6 7B69     		ldr	r3, [r7, #20]
 16955 17f8 1344     		add	r3, r3, r2
 16956 17fa 504A     		ldr	r2, .L692+28
 16957 17fc 1D46     		mov	r5, r3
 16958 17fe 1446     		mov	r4, r2
 16959 1800 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16960 1802 2860     		str	r0, [r5]	@ unaligned
 16961 1804 6960     		str	r1, [r5, #4]	@ unaligned
 16962 1806 AA60     		str	r2, [r5, #8]	@ unaligned
 16963 1808 EB60     		str	r3, [r5, #12]	@ unaligned
 16964 180a 03CC     		ldmia	r4!, {r0, r1}
 16965 180c 2861     		str	r0, [r5, #16]	@ unaligned
 16966 180e 6961     		str	r1, [r5, #20]	@ unaligned
 16967 1810 2388     		ldrh	r3, [r4]	@ unaligned
 16968 1812 A278     		ldrb	r2, [r4, #2]
 16969 1814 2B83     		strh	r3, [r5, #24]	@ unaligned
 16970 1816 1346     		mov	r3, r2
 16971 1818 AB76     		strb	r3, [r5, #26]
 16972 181a 13E0     		b	.L644
 16973              	.L643:
2217:..\src/command_processing.c ****         else
2218:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 16974              		.loc 1 2218 0
 16975 181c 7869     		ldr	r0, [r7, #20]
 16976 181e FFF7FEFF 		bl	strlen
 16977 1822 0346     		mov	r3, r0
 16978 1824 1A46     		mov	r2, r3
 16979 1826 7B69     		ldr	r3, [r7, #20]
 16980 1828 1344     		add	r3, r3, r2
 16981 182a 454A     		ldr	r2, .L692+32
 16982 182c 1D46     		mov	r5, r3
 16983 182e 1446     		mov	r4, r2
 16984 1830 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16985 1832 2860     		str	r0, [r5]	@ unaligned
 16986 1834 6960     		str	r1, [r5, #4]	@ unaligned
 16987 1836 AA60     		str	r2, [r5, #8]	@ unaligned
 16988 1838 EB60     		str	r3, [r5, #12]	@ unaligned
 16989 183a 03CC     		ldmia	r4!, {r0, r1}
 16990 183c 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 378


 16991 183e 6961     		str	r1, [r5, #20]	@ unaligned
 16992 1840 2388     		ldrh	r3, [r4]	@ unaligned
 16993 1842 2B83     		strh	r3, [r5, #24]	@ unaligned
 16994              	.L644:
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 16995              		.loc 1 2220 0
 16996 1844 D7F88830 		ldr	r3, [r7, #136]
 16997 1848 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 16998 184c 1A46     		mov	r2, r3
 16999 184e D7F88830 		ldr	r3, [r7, #136]
 17000 1852 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17001 1856 07F11800 		add	r0, r7, #24
 17002 185a 3A49     		ldr	r1, .L692+36
 17003 185c FFF7FEFF 		bl	sprintf
2221:..\src/command_processing.c ****         strcat(info_string, str);
 17004              		.loc 1 2221 0
 17005 1860 07F11803 		add	r3, r7, #24
 17006 1864 1946     		mov	r1, r3
 17007 1866 7869     		ldr	r0, [r7, #20]
 17008 1868 FFF7FEFF 		bl	strcat
2222:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17009              		.loc 1 2222 0
 17010 186c 7869     		ldr	r0, [r7, #20]
 17011 186e FFF7FEFF 		bl	strlen
 17012 1872 0346     		mov	r3, r0
 17013 1874 1A46     		mov	r2, r3
 17014 1876 7B69     		ldr	r3, [r7, #20]
 17015 1878 1344     		add	r3, r3, r2
 17016 187a 2A4A     		ldr	r2, .L692+4
 17017 187c 1188     		ldrh	r1, [r2]	@ unaligned
 17018 187e 9278     		ldrb	r2, [r2, #2]
 17019 1880 1980     		strh	r1, [r3]	@ unaligned
 17020 1882 9A70     		strb	r2, [r3, #2]
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 17021              		.loc 1 2224 0
 17022 1884 D7F88830 		ldr	r3, [r7, #136]
 17023 1888 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 17024 188c 012B     		cmp	r3, #1
 17025 188e 40F08A80 		bne	.L645
2225:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 17026              		.loc 1 2225 0
 17027 1892 7869     		ldr	r0, [r7, #20]
 17028 1894 FFF7FEFF 		bl	strlen
 17029 1898 0346     		mov	r3, r0
 17030 189a 1A46     		mov	r2, r3
 17031 189c 7B69     		ldr	r3, [r7, #20]
 17032 189e 1344     		add	r3, r3, r2
 17033 18a0 294A     		ldr	r2, .L692+40
 17034 18a2 1C46     		mov	r4, r3
 17035 18a4 1546     		mov	r5, r2
 17036 18a6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17037 18a8 2060     		str	r0, [r4]	@ unaligned
 17038 18aa 6160     		str	r1, [r4, #4]	@ unaligned
 17039 18ac A260     		str	r2, [r4, #8]	@ unaligned
 17040 18ae E360     		str	r3, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 379


 17041 18b0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17042 18b2 2061     		str	r0, [r4, #16]	@ unaligned
 17043 18b4 6161     		str	r1, [r4, #20]	@ unaligned
 17044 18b6 A261     		str	r2, [r4, #24]	@ unaligned
 17045 18b8 E361     		str	r3, [r4, #28]	@ unaligned
2226:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 17046              		.loc 1 2226 0
 17047 18ba 0023     		movs	r3, #0
 17048 18bc C7F89430 		str	r3, [r7, #148]
 17049 18c0 25E0     		b	.L646
 17050              	.L647:
2227:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17051              		.loc 1 2227 0 discriminator 3
 17052 18c2 D7F89430 		ldr	r3, [r7, #148]
 17053 18c6 591C     		adds	r1, r3, #1
 17054 18c8 204A     		ldr	r2, .L692+44
 17055 18ca D7F89430 		ldr	r3, [r7, #148]
 17056 18ce 0233     		adds	r3, r3, #2
 17057 18d0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17058 18d4 07F11800 		add	r0, r7, #24
 17059 18d8 0A46     		mov	r2, r1
 17060 18da 1D49     		ldr	r1, .L692+48
 17061 18dc FFF7FEFF 		bl	sprintf
2228:..\src/command_processing.c ****                 strcat(info_string, str);
 17062              		.loc 1 2228 0 discriminator 3
 17063 18e0 07F11803 		add	r3, r7, #24
 17064 18e4 1946     		mov	r1, r3
 17065 18e6 7869     		ldr	r0, [r7, #20]
 17066 18e8 FFF7FEFF 		bl	strcat
2229:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17067              		.loc 1 2229 0 discriminator 3
 17068 18ec 7869     		ldr	r0, [r7, #20]
 17069 18ee FFF7FEFF 		bl	strlen
 17070 18f2 0346     		mov	r3, r0
 17071 18f4 1A46     		mov	r2, r3
 17072 18f6 7B69     		ldr	r3, [r7, #20]
 17073 18f8 1344     		add	r3, r3, r2
 17074 18fa 0A4A     		ldr	r2, .L692+4
 17075 18fc 1188     		ldrh	r1, [r2]	@ unaligned
 17076 18fe 9278     		ldrb	r2, [r2, #2]
 17077 1900 1980     		strh	r1, [r3]	@ unaligned
 17078 1902 9A70     		strb	r2, [r3, #2]
2226:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17079              		.loc 1 2226 0 discriminator 3
 17080 1904 D7F89430 		ldr	r3, [r7, #148]
 17081 1908 0133     		adds	r3, r3, #1
 17082 190a C7F89430 		str	r3, [r7, #148]
 17083              	.L646:
2226:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 17084              		.loc 1 2226 0 is_stmt 0 discriminator 1
 17085 190e D7F89430 		ldr	r3, [r7, #148]
 17086 1912 052B     		cmp	r3, #5
 17087 1914 D5DD     		ble	.L647
2230:..\src/command_processing.c ****             }
2231:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 17088              		.loc 1 2231 0 is_stmt 1
 17089 1916 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 380


 17090 1918 C7F89430 		str	r3, [r7, #148]
 17091 191c 3FE0     		b	.L648
 17092              	.L693:
 17093 191e 00BF     		.align	2
 17094              	.L692:
 17095 1920 94180000 		.word	.LC232
 17096 1924 30110000 		.word	.LC151
 17097 1928 B0180000 		.word	.LC233
 17098 192c C4180000 		.word	.LC234
 17099 1930 E8180000 		.word	.LC235
 17100 1934 0C190000 		.word	.LC236
 17101 1938 24190000 		.word	.LC237
 17102 193c 38190000 		.word	.LC238
 17103 1940 54190000 		.word	.LC239
 17104 1944 70190000 		.word	.LC240
 17105 1948 88190000 		.word	.LC241
 17106 194c 00000000 		.word	g_adc_meas
 17107 1950 A8190000 		.word	.LC242
 17108              	.L649:
2232:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17109              		.loc 1 2232 0 discriminator 3
 17110 1954 D7F89430 		ldr	r3, [r7, #148]
 17111 1958 591C     		adds	r1, r3, #1
 17112 195a BD4A     		ldr	r2, .L694
 17113 195c D7F89430 		ldr	r3, [r7, #148]
 17114 1960 52F82330 		ldr	r3, [r2, r3, lsl #2]
 17115 1964 07F11800 		add	r0, r7, #24
 17116 1968 0A46     		mov	r2, r1
 17117 196a BA49     		ldr	r1, .L694+4
 17118 196c FFF7FEFF 		bl	sprintf
2233:..\src/command_processing.c ****                 strcat(info_string, str);
 17119              		.loc 1 2233 0 discriminator 3
 17120 1970 07F11803 		add	r3, r7, #24
 17121 1974 1946     		mov	r1, r3
 17122 1976 7869     		ldr	r0, [r7, #20]
 17123 1978 FFF7FEFF 		bl	strcat
2234:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 17124              		.loc 1 2234 0 discriminator 3
 17125 197c 7869     		ldr	r0, [r7, #20]
 17126 197e FFF7FEFF 		bl	strlen
 17127 1982 0346     		mov	r3, r0
 17128 1984 1A46     		mov	r2, r3
 17129 1986 7B69     		ldr	r3, [r7, #20]
 17130 1988 1344     		add	r3, r3, r2
 17131 198a B34A     		ldr	r2, .L694+8
 17132 198c 1188     		ldrh	r1, [r2]	@ unaligned
 17133 198e 9278     		ldrb	r2, [r2, #2]
 17134 1990 1980     		strh	r1, [r3]	@ unaligned
 17135 1992 9A70     		strb	r2, [r3, #2]
2231:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17136              		.loc 1 2231 0 discriminator 3
 17137 1994 D7F89430 		ldr	r3, [r7, #148]
 17138 1998 0133     		adds	r3, r3, #1
 17139 199a C7F89430 		str	r3, [r7, #148]
 17140              	.L648:
2231:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 17141              		.loc 1 2231 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 381


 17142 199e D7F89430 		ldr	r3, [r7, #148]
 17143 19a2 012B     		cmp	r3, #1
 17144 19a4 D6DD     		ble	.L649
 17145              	.L645:
2235:..\src/command_processing.c ****             }
2236:..\src/command_processing.c ****         }
2237:..\src/command_processing.c **** 
2238:..\src/command_processing.c **** #ifdef GENERIC_FW
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17146              		.loc 1 2240 0 is_stmt 1
 17147 19a6 7869     		ldr	r0, [r7, #20]
 17148 19a8 FFF7FEFF 		bl	strlen
 17149 19ac 0346     		mov	r3, r0
 17150 19ae 1A46     		mov	r2, r3
 17151 19b0 7B69     		ldr	r3, [r7, #20]
 17152 19b2 1344     		add	r3, r3, r2
 17153 19b4 A84A     		ldr	r2, .L694+8
 17154 19b6 1188     		ldrh	r1, [r2]	@ unaligned
 17155 19b8 9278     		ldrb	r2, [r2, #2]
 17156 19ba 1980     		strh	r1, [r3]	@ unaligned
 17157 19bc 9A70     		strb	r2, [r3, #2]
2241:..\src/command_processing.c ****         strcat(info_string, "JOYSTICK CONFIGURATION\r\n");
 17158              		.loc 1 2241 0
 17159 19be 7869     		ldr	r0, [r7, #20]
 17160 19c0 FFF7FEFF 		bl	strlen
 17161 19c4 0346     		mov	r3, r0
 17162 19c6 1A46     		mov	r2, r3
 17163 19c8 7B69     		ldr	r3, [r7, #20]
 17164 19ca 1344     		add	r3, r3, r2
 17165 19cc A34A     		ldr	r2, .L694+12
 17166 19ce 1D46     		mov	r5, r3
 17167 19d0 1446     		mov	r4, r2
 17168 19d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17169 19d4 2860     		str	r0, [r5]	@ unaligned
 17170 19d6 6960     		str	r1, [r5, #4]	@ unaligned
 17171 19d8 AA60     		str	r2, [r5, #8]	@ unaligned
 17172 19da EB60     		str	r3, [r5, #12]	@ unaligned
 17173 19dc 03CC     		ldmia	r4!, {r0, r1}
 17174 19de 2861     		str	r0, [r5, #16]	@ unaligned
 17175 19e0 6961     		str	r1, [r5, #20]	@ unaligned
 17176 19e2 2378     		ldrb	r3, [r4]
 17177 19e4 2B76     		strb	r3, [r5, #24]
2242:..\src/command_processing.c ****         sprintf(str, "Closure speed: %d", c_mem.JOY_spec.joystick_closure_speed);
 17178              		.loc 1 2242 0
 17179 19e6 9E4B     		ldr	r3, .L694+16
 17180 19e8 B3F8B032 		ldrh	r3, [r3, #688]
 17181 19ec 1A46     		mov	r2, r3
 17182 19ee 07F11803 		add	r3, r7, #24
 17183 19f2 9C49     		ldr	r1, .L694+20
 17184 19f4 1846     		mov	r0, r3
 17185 19f6 FFF7FEFF 		bl	sprintf
2243:..\src/command_processing.c ****         strcat(info_string, str);
 17186              		.loc 1 2243 0
 17187 19fa 07F11803 		add	r3, r7, #24
 17188 19fe 1946     		mov	r1, r3
 17189 1a00 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 382


 17190 1a02 FFF7FEFF 		bl	strcat
2244:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17191              		.loc 1 2244 0
 17192 1a06 7869     		ldr	r0, [r7, #20]
 17193 1a08 FFF7FEFF 		bl	strlen
 17194 1a0c 0346     		mov	r3, r0
 17195 1a0e 1A46     		mov	r2, r3
 17196 1a10 7B69     		ldr	r3, [r7, #20]
 17197 1a12 1344     		add	r3, r3, r2
 17198 1a14 904A     		ldr	r2, .L694+8
 17199 1a16 1188     		ldrh	r1, [r2]	@ unaligned
 17200 1a18 9278     		ldrb	r2, [r2, #2]
 17201 1a1a 1980     		strh	r1, [r3]	@ unaligned
 17202 1a1c 9A70     		strb	r2, [r3, #2]
2245:..\src/command_processing.c **** 
2246:..\src/command_processing.c ****         sprintf(str, "Joystick Threshold: %d", c_mem.JOY_spec.joystick_threshold);
 17203              		.loc 1 2246 0
 17204 1a1e 904B     		ldr	r3, .L694+16
 17205 1a20 B3F9B232 		ldrsh	r3, [r3, #690]
 17206 1a24 1A46     		mov	r2, r3
 17207 1a26 07F11803 		add	r3, r7, #24
 17208 1a2a 8F49     		ldr	r1, .L694+24
 17209 1a2c 1846     		mov	r0, r3
 17210 1a2e FFF7FEFF 		bl	sprintf
2247:..\src/command_processing.c ****         strcat(info_string, str);
 17211              		.loc 1 2247 0
 17212 1a32 07F11803 		add	r3, r7, #24
 17213 1a36 1946     		mov	r1, r3
 17214 1a38 7869     		ldr	r0, [r7, #20]
 17215 1a3a FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17216              		.loc 1 2248 0
 17217 1a3e 7869     		ldr	r0, [r7, #20]
 17218 1a40 FFF7FEFF 		bl	strlen
 17219 1a44 0346     		mov	r3, r0
 17220 1a46 1A46     		mov	r2, r3
 17221 1a48 7B69     		ldr	r3, [r7, #20]
 17222 1a4a 1344     		add	r3, r3, r2
 17223 1a4c 824A     		ldr	r2, .L694+8
 17224 1a4e 1188     		ldrh	r1, [r2]	@ unaligned
 17225 1a50 9278     		ldrb	r2, [r2, #2]
 17226 1a52 1980     		strh	r1, [r3]	@ unaligned
 17227 1a54 9A70     		strb	r2, [r3, #2]
2249:..\src/command_processing.c ****         sprintf(str, "Joystick Gains - X:%hu  Y:%hu", c_mem.JOY_spec.joystick_gains[0], c_mem.JOY_s
 17228              		.loc 1 2249 0
 17229 1a56 824B     		ldr	r3, .L694+16
 17230 1a58 B3F8B432 		ldrh	r3, [r3, #692]
 17231 1a5c 1A46     		mov	r2, r3
 17232 1a5e 804B     		ldr	r3, .L694+16
 17233 1a60 B3F8B632 		ldrh	r3, [r3, #694]
 17234 1a64 07F11800 		add	r0, r7, #24
 17235 1a68 8049     		ldr	r1, .L694+28
 17236 1a6a FFF7FEFF 		bl	sprintf
2250:..\src/command_processing.c ****         strcat(info_string, str);
 17237              		.loc 1 2250 0
 17238 1a6e 07F11803 		add	r3, r7, #24
 17239 1a72 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 383


 17240 1a74 7869     		ldr	r0, [r7, #20]
 17241 1a76 FFF7FEFF 		bl	strcat
2251:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17242              		.loc 1 2251 0
 17243 1a7a 7869     		ldr	r0, [r7, #20]
 17244 1a7c FFF7FEFF 		bl	strlen
 17245 1a80 0346     		mov	r3, r0
 17246 1a82 1A46     		mov	r2, r3
 17247 1a84 7B69     		ldr	r3, [r7, #20]
 17248 1a86 1344     		add	r3, r3, r2
 17249 1a88 734A     		ldr	r2, .L694+8
 17250 1a8a 1188     		ldrh	r1, [r2]	@ unaligned
 17251 1a8c 9278     		ldrb	r2, [r2, #2]
 17252 1a8e 1980     		strh	r1, [r3]	@ unaligned
 17253 1a90 9A70     		strb	r2, [r3, #2]
2252:..\src/command_processing.c **** 
2253:..\src/command_processing.c **** #endif
2254:..\src/command_processing.c ****         
2255:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 17254              		.loc 1 2255 0
 17255 1a92 D7F88830 		ldr	r3, [r7, #136]
 17256 1a96 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17257 1a9a 002B     		cmp	r3, #0
 17258 1a9c 63D0     		beq	.L650
2256:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17259              		.loc 1 2256 0
 17260 1a9e D7F88830 		ldr	r3, [r7, #136]
 17261 1aa2 D3F8A422 		ldr	r2, [r3, #676]
 17262 1aa6 07F11803 		add	r3, r7, #24
 17263 1aaa 7149     		ldr	r1, .L694+32
 17264 1aac 1846     		mov	r0, r3
 17265 1aae FFF7FEFF 		bl	sprintf
2257:..\src/command_processing.c ****             strcat(info_string, str);
 17266              		.loc 1 2257 0
 17267 1ab2 07F11803 		add	r3, r7, #24
 17268 1ab6 1946     		mov	r1, r3
 17269 1ab8 7869     		ldr	r0, [r7, #20]
 17270 1aba FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17271              		.loc 1 2258 0
 17272 1abe 7869     		ldr	r0, [r7, #20]
 17273 1ac0 FFF7FEFF 		bl	strlen
 17274 1ac4 0346     		mov	r3, r0
 17275 1ac6 1A46     		mov	r2, r3
 17276 1ac8 7B69     		ldr	r3, [r7, #20]
 17277 1aca 1344     		add	r3, r3, r2
 17278 1acc 624A     		ldr	r2, .L694+8
 17279 1ace 1188     		ldrh	r1, [r2]	@ unaligned
 17280 1ad0 9278     		ldrb	r2, [r2, #2]
 17281 1ad2 1980     		strh	r1, [r3]	@ unaligned
 17282 1ad4 9A70     		strb	r2, [r3, #2]
2259:..\src/command_processing.c ****             
2260:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17283              		.loc 1 2260 0
 17284 1ad6 D7F88830 		ldr	r3, [r7, #136]
 17285 1ada D3F8A822 		ldr	r2, [r3, #680]
 17286 1ade 07F11803 		add	r3, r7, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 384


 17287 1ae2 6449     		ldr	r1, .L694+36
 17288 1ae4 1846     		mov	r0, r3
 17289 1ae6 FFF7FEFF 		bl	sprintf
2261:..\src/command_processing.c ****             strcat(info_string, str);
 17290              		.loc 1 2261 0
 17291 1aea 07F11803 		add	r3, r7, #24
 17292 1aee 1946     		mov	r1, r3
 17293 1af0 7869     		ldr	r0, [r7, #20]
 17294 1af2 FFF7FEFF 		bl	strcat
2262:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17295              		.loc 1 2262 0
 17296 1af6 7869     		ldr	r0, [r7, #20]
 17297 1af8 FFF7FEFF 		bl	strlen
 17298 1afc 0346     		mov	r3, r0
 17299 1afe 1A46     		mov	r2, r3
 17300 1b00 7B69     		ldr	r3, [r7, #20]
 17301 1b02 1344     		add	r3, r3, r2
 17302 1b04 544A     		ldr	r2, .L694+8
 17303 1b06 1188     		ldrh	r1, [r2]	@ unaligned
 17304 1b08 9278     		ldrb	r2, [r2, #2]
 17305 1b0a 1980     		strh	r1, [r3]	@ unaligned
 17306 1b0c 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****             
2264:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 17307              		.loc 1 2264 0
 17308 1b0e D7F88830 		ldr	r3, [r7, #136]
 17309 1b12 D3F8A022 		ldr	r2, [r3, #672]
 17310 1b16 D7F88830 		ldr	r3, [r7, #136]
 17311 1b1a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17312 1b1e 1846     		mov	r0, r3
 17313 1b20 D7F88810 		ldr	r1, [r7, #136]
 17314 1b24 0346     		mov	r3, r0
 17315 1b26 5B00     		lsls	r3, r3, #1
 17316 1b28 0344     		add	r3, r3, r0
 17317 1b2a 1B01     		lsls	r3, r3, #4
 17318 1b2c 0B44     		add	r3, r3, r1
 17319 1b2e 03F29513 		addw	r3, r3, #405
 17320 1b32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17321 1b34 1A41     		asrs	r2, r2, r3
 17322 1b36 07F11803 		add	r3, r7, #24
 17323 1b3a 4F49     		ldr	r1, .L694+40
 17324 1b3c 1846     		mov	r0, r3
 17325 1b3e FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****             strcat(info_string, str);
 17326              		.loc 1 2265 0
 17327 1b42 07F11803 		add	r3, r7, #24
 17328 1b46 1946     		mov	r1, r3
 17329 1b48 7869     		ldr	r0, [r7, #20]
 17330 1b4a FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 17331              		.loc 1 2266 0
 17332 1b4e 7869     		ldr	r0, [r7, #20]
 17333 1b50 FFF7FEFF 		bl	strlen
 17334 1b54 0346     		mov	r3, r0
 17335 1b56 1A46     		mov	r2, r3
 17336 1b58 7B69     		ldr	r3, [r7, #20]
 17337 1b5a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 385


 17338 1b5c 3E4A     		ldr	r2, .L694+8
 17339 1b5e 1188     		ldrh	r1, [r2]	@ unaligned
 17340 1b60 9278     		ldrb	r2, [r2, #2]
 17341 1b62 1980     		strh	r1, [r3]	@ unaligned
 17342 1b64 9A70     		strb	r2, [r3, #2]
 17343              	.L650:
2267:..\src/command_processing.c ****         }
2268:..\src/command_processing.c **** 
2269:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 17344              		.loc 1 2269 0
 17345 1b66 D7F88830 		ldr	r3, [r7, #136]
 17346 1b6a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17347 1b6e 002B     		cmp	r3, #0
 17348 1b70 00F0D281 		beq	.L651
2270:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17349              		.loc 1 2270 0
 17350 1b74 414B     		ldr	r3, .L694+44
 17351 1b76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17352 1b78 1A46     		mov	r2, r3
 17353 1b7a 07F11803 		add	r3, r7, #24
 17354 1b7e 4049     		ldr	r1, .L694+48
 17355 1b80 1846     		mov	r0, r3
 17356 1b82 FFF7FEFF 		bl	sprintf
2271:..\src/command_processing.c ****             strcat(info_string, str);
 17357              		.loc 1 2271 0
 17358 1b86 07F11803 		add	r3, r7, #24
 17359 1b8a 1946     		mov	r1, r3
 17360 1b8c 7869     		ldr	r0, [r7, #20]
 17361 1b8e FFF7FEFF 		bl	strcat
2272:..\src/command_processing.c ****             
2273:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17362              		.loc 1 2273 0
 17363 1b92 7869     		ldr	r0, [r7, #20]
 17364 1b94 FFF7FEFF 		bl	strlen
 17365 1b98 0346     		mov	r3, r0
 17366 1b9a 1A46     		mov	r2, r3
 17367 1b9c 7B69     		ldr	r3, [r7, #20]
 17368 1b9e 1344     		add	r3, r3, r2
 17369 1ba0 2D4A     		ldr	r2, .L694+8
 17370 1ba2 1188     		ldrh	r1, [r2]	@ unaligned
 17371 1ba4 9278     		ldrb	r2, [r2, #2]
 17372 1ba6 1980     		strh	r1, [r3]	@ unaligned
 17373 1ba8 9A70     		strb	r2, [r3, #2]
2274:..\src/command_processing.c ****             
2275:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 17374              		.loc 1 2275 0
 17375 1baa 7869     		ldr	r0, [r7, #20]
 17376 1bac FFF7FEFF 		bl	strlen
 17377 1bb0 0346     		mov	r3, r0
 17378 1bb2 1A46     		mov	r2, r3
 17379 1bb4 7B69     		ldr	r3, [r7, #20]
 17380 1bb6 1344     		add	r3, r3, r2
 17381 1bb8 324A     		ldr	r2, .L694+52
 17382 1bba 1D46     		mov	r5, r3
 17383 1bbc 1446     		mov	r4, r2
 17384 1bbe 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17385 1bc0 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 386


 17386 1bc2 6960     		str	r1, [r5, #4]	@ unaligned
 17387 1bc4 AA60     		str	r2, [r5, #8]	@ unaligned
 17388 1bc6 EB60     		str	r3, [r5, #12]	@ unaligned
 17389 1bc8 2068     		ldr	r0, [r4]	@ unaligned
 17390 1bca 2861     		str	r0, [r5, #16]	@ unaligned
 17391 1bcc 2379     		ldrb	r3, [r4, #4]
 17392 1bce 2B75     		strb	r3, [r5, #20]
2276:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 17393              		.loc 1 2276 0
 17394 1bd0 0023     		movs	r3, #0
 17395 1bd2 C7F89430 		str	r3, [r7, #148]
 17396 1bd6 88E1     		b	.L652
 17397              	.L663:
2277:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17398              		.loc 1 2277 0
 17399 1bd8 2B4A     		ldr	r2, .L694+56
 17400 1bda D7F89430 		ldr	r3, [r7, #148]
 17401 1bde 1344     		add	r3, r3, r2
 17402 1be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17403 1be2 07F11800 		add	r0, r7, #24
 17404 1be6 D7F89420 		ldr	r2, [r7, #148]
 17405 1bea 2849     		ldr	r1, .L694+60
 17406 1bec FFF7FEFF 		bl	sprintf
2278:..\src/command_processing.c ****                 strcat(info_string, str);
 17407              		.loc 1 2278 0
 17408 1bf0 07F11803 		add	r3, r7, #24
 17409 1bf4 1946     		mov	r1, r3
 17410 1bf6 7869     		ldr	r0, [r7, #20]
 17411 1bf8 FFF7FEFF 		bl	strcat
2279:..\src/command_processing.c ****                 
2280:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 17412              		.loc 1 2280 0
 17413 1bfc 07F11803 		add	r3, r7, #24
 17414 1c00 234A     		ldr	r2, .L694+64
 17415 1c02 1C46     		mov	r4, r3
 17416 1c04 1546     		mov	r5, r2
 17417 1c06 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17418 1c08 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17419 1c0a 2B68     		ldr	r3, [r5]
 17420 1c0c 2380     		strh	r3, [r4]	@ movhi
2281:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17421              		.loc 1 2281 0
 17422 1c0e 1E4A     		ldr	r2, .L694+56
 17423 1c10 D7F89430 		ldr	r3, [r7, #148]
 17424 1c14 1344     		add	r3, r3, r2
 17425 1c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17426 1c18 1946     		mov	r1, r3
 17427 1c1a D7F88820 		ldr	r2, [r7, #136]
 17428 1c1e 0B46     		mov	r3, r1
 17429 1c20 9B00     		lsls	r3, r3, #2
 17430 1c22 0B44     		add	r3, r3, r1
 17431 1c24 1344     		add	r3, r3, r2
 17432 1c26 03F20223 		addw	r3, r3, #514
 17433 1c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17434 1c2c 002B     		cmp	r3, #0
 17435 1c2e 33D0     		beq	.L653
2282:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 387


 17436              		.loc 1 2282 0
 17437 1c30 07F11803 		add	r3, r7, #24
 17438 1c34 1846     		mov	r0, r3
 17439 1c36 FFF7FEFF 		bl	strlen
 17440 1c3a 0346     		mov	r3, r0
 17441 1c3c 1A46     		mov	r2, r3
 17442 1c3e 07F11803 		add	r3, r7, #24
 17443 1c42 1344     		add	r3, r3, r2
 17444 1c44 134A     		ldr	r2, .L694+68
 17445 1c46 1068     		ldr	r0, [r2]	@ unaligned
 17446 1c48 1860     		str	r0, [r3]	@ unaligned
 17447 1c4a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17448 1c4c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17449 1c4e 32E0     		b	.L654
 17450              	.L695:
 17451              		.align	2
 17452              	.L694:
 17453 1c50 00000000 		.word	g_adc_meas
 17454 1c54 B8190000 		.word	.LC243
 17455 1c58 30110000 		.word	.LC151
 17456 1c5c CC190000 		.word	.LC244
 17457 1c60 00000000 		.word	c_mem
 17458 1c64 E8190000 		.word	.LC245
 17459 1c68 FC190000 		.word	.LC246
 17460 1c6c 141A0000 		.word	.LC247
 17461 1c70 341A0000 		.word	.LC248
 17462 1c74 501A0000 		.word	.LC249
 17463 1c78 781A0000 		.word	.LC250
 17464 1c7c 00000000 		.word	N_IMU_Connected
 17465 1c80 8C1A0000 		.word	.LC251
 17466 1c84 A01A0000 		.word	.LC252
 17467 1c88 00000000 		.word	IMU_connected
 17468 1c8c B81A0000 		.word	.LC253
 17469 1c90 CC1A0000 		.word	.LC254
 17470 1c94 F4120000 		.word	.LC174
 17471              	.L653:
2283:..\src/command_processing.c ****                 else
2284:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17472              		.loc 1 2284 0
 17473 1c98 07F11803 		add	r3, r7, #24
 17474 1c9c 1846     		mov	r0, r3
 17475 1c9e FFF7FEFF 		bl	strlen
 17476 1ca2 0346     		mov	r3, r0
 17477 1ca4 1A46     		mov	r2, r3
 17478 1ca6 07F11803 		add	r3, r7, #24
 17479 1caa 1344     		add	r3, r3, r2
 17480 1cac BD4A     		ldr	r2, .L696
 17481 1cae 1068     		ldr	r0, [r2]	@ unaligned
 17482 1cb0 1860     		str	r0, [r3]	@ unaligned
 17483 1cb2 1279     		ldrb	r2, [r2, #4]
 17484 1cb4 1A71     		strb	r2, [r3, #4]
 17485              	.L654:
2285:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 17486              		.loc 1 2285 0
 17487 1cb6 07F11803 		add	r3, r7, #24
 17488 1cba 1846     		mov	r0, r3
 17489 1cbc FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 388


 17490 1cc0 0346     		mov	r3, r0
 17491 1cc2 1A46     		mov	r2, r3
 17492 1cc4 07F11803 		add	r3, r7, #24
 17493 1cc8 1344     		add	r3, r3, r2
 17494 1cca B74A     		ldr	r2, .L696+4
 17495 1ccc 1C46     		mov	r4, r3
 17496 1cce 1346     		mov	r3, r2
 17497 1cd0 07CB     		ldmia	r3!, {r0, r1, r2}
 17498 1cd2 2060     		str	r0, [r4]	@ unaligned
 17499 1cd4 6160     		str	r1, [r4, #4]	@ unaligned
 17500 1cd6 A260     		str	r2, [r4, #8]	@ unaligned
 17501 1cd8 1B88     		ldrh	r3, [r3]	@ unaligned
 17502 1cda A381     		strh	r3, [r4, #12]	@ unaligned
2286:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17503              		.loc 1 2286 0
 17504 1cdc B34A     		ldr	r2, .L696+8
 17505 1cde D7F89430 		ldr	r3, [r7, #148]
 17506 1ce2 1344     		add	r3, r3, r2
 17507 1ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17508 1ce6 1946     		mov	r1, r3
 17509 1ce8 D7F88820 		ldr	r2, [r7, #136]
 17510 1cec 0B46     		mov	r3, r1
 17511 1cee 9B00     		lsls	r3, r3, #2
 17512 1cf0 0B44     		add	r3, r3, r1
 17513 1cf2 1344     		add	r3, r3, r2
 17514 1cf4 03F20323 		addw	r3, r3, #515
 17515 1cf8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17516 1cfa 002B     		cmp	r3, #0
 17517 1cfc 0FD0     		beq	.L655
2287:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17518              		.loc 1 2287 0
 17519 1cfe 07F11803 		add	r3, r7, #24
 17520 1d02 1846     		mov	r0, r3
 17521 1d04 FFF7FEFF 		bl	strlen
 17522 1d08 0346     		mov	r3, r0
 17523 1d0a 1A46     		mov	r2, r3
 17524 1d0c 07F11803 		add	r3, r7, #24
 17525 1d10 1344     		add	r3, r3, r2
 17526 1d12 A74A     		ldr	r2, .L696+12
 17527 1d14 1068     		ldr	r0, [r2]	@ unaligned
 17528 1d16 1860     		str	r0, [r3]	@ unaligned
 17529 1d18 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17530 1d1a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17531 1d1c 0EE0     		b	.L656
 17532              	.L655:
2288:..\src/command_processing.c ****                 else
2289:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 17533              		.loc 1 2289 0
 17534 1d1e 07F11803 		add	r3, r7, #24
 17535 1d22 1846     		mov	r0, r3
 17536 1d24 FFF7FEFF 		bl	strlen
 17537 1d28 0346     		mov	r3, r0
 17538 1d2a 1A46     		mov	r2, r3
 17539 1d2c 07F11803 		add	r3, r7, #24
 17540 1d30 1344     		add	r3, r3, r2
 17541 1d32 9C4A     		ldr	r2, .L696
 17542 1d34 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 389


 17543 1d36 1860     		str	r0, [r3]	@ unaligned
 17544 1d38 1279     		ldrb	r2, [r2, #4]
 17545 1d3a 1A71     		strb	r2, [r3, #4]
 17546              	.L656:
2290:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 17547              		.loc 1 2290 0
 17548 1d3c 07F11803 		add	r3, r7, #24
 17549 1d40 1846     		mov	r0, r3
 17550 1d42 FFF7FEFF 		bl	strlen
 17551 1d46 0346     		mov	r3, r0
 17552 1d48 1A46     		mov	r2, r3
 17553 1d4a 07F11803 		add	r3, r7, #24
 17554 1d4e 1344     		add	r3, r3, r2
 17555 1d50 984A     		ldr	r2, .L696+16
 17556 1d52 1D46     		mov	r5, r3
 17557 1d54 1446     		mov	r4, r2
 17558 1d56 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17559 1d58 2860     		str	r0, [r5]	@ unaligned
 17560 1d5a 6960     		str	r1, [r5, #4]	@ unaligned
 17561 1d5c AA60     		str	r2, [r5, #8]	@ unaligned
 17562 1d5e EB60     		str	r3, [r5, #12]	@ unaligned
 17563 1d60 2378     		ldrb	r3, [r4]
 17564 1d62 2B74     		strb	r3, [r5, #16]
2291:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17565              		.loc 1 2291 0
 17566 1d64 914A     		ldr	r2, .L696+8
 17567 1d66 D7F89430 		ldr	r3, [r7, #148]
 17568 1d6a 1344     		add	r3, r3, r2
 17569 1d6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17570 1d6e 1946     		mov	r1, r3
 17571 1d70 D7F88820 		ldr	r2, [r7, #136]
 17572 1d74 0B46     		mov	r3, r1
 17573 1d76 9B00     		lsls	r3, r3, #2
 17574 1d78 0B44     		add	r3, r3, r1
 17575 1d7a 1344     		add	r3, r3, r2
 17576 1d7c 03F50173 		add	r3, r3, #516
 17577 1d80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17578 1d82 002B     		cmp	r3, #0
 17579 1d84 0FD0     		beq	.L657
2292:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17580              		.loc 1 2292 0
 17581 1d86 07F11803 		add	r3, r7, #24
 17582 1d8a 1846     		mov	r0, r3
 17583 1d8c FFF7FEFF 		bl	strlen
 17584 1d90 0346     		mov	r3, r0
 17585 1d92 1A46     		mov	r2, r3
 17586 1d94 07F11803 		add	r3, r7, #24
 17587 1d98 1344     		add	r3, r3, r2
 17588 1d9a 854A     		ldr	r2, .L696+12
 17589 1d9c 1068     		ldr	r0, [r2]	@ unaligned
 17590 1d9e 1860     		str	r0, [r3]	@ unaligned
 17591 1da0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17592 1da2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17593 1da4 0EE0     		b	.L658
 17594              	.L657:
2293:..\src/command_processing.c ****                 else
2294:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 390


 17595              		.loc 1 2294 0
 17596 1da6 07F11803 		add	r3, r7, #24
 17597 1daa 1846     		mov	r0, r3
 17598 1dac FFF7FEFF 		bl	strlen
 17599 1db0 0346     		mov	r3, r0
 17600 1db2 1A46     		mov	r2, r3
 17601 1db4 07F11803 		add	r3, r7, #24
 17602 1db8 1344     		add	r3, r3, r2
 17603 1dba 7A4A     		ldr	r2, .L696
 17604 1dbc 1068     		ldr	r0, [r2]	@ unaligned
 17605 1dbe 1860     		str	r0, [r3]	@ unaligned
 17606 1dc0 1279     		ldrb	r2, [r2, #4]
 17607 1dc2 1A71     		strb	r2, [r3, #4]
 17608              	.L658:
2295:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 17609              		.loc 1 2295 0
 17610 1dc4 07F11803 		add	r3, r7, #24
 17611 1dc8 1846     		mov	r0, r3
 17612 1dca FFF7FEFF 		bl	strlen
 17613 1dce 0346     		mov	r3, r0
 17614 1dd0 1A46     		mov	r2, r3
 17615 1dd2 07F11803 		add	r3, r7, #24
 17616 1dd6 1344     		add	r3, r3, r2
 17617 1dd8 774A     		ldr	r2, .L696+20
 17618 1dda 1C46     		mov	r4, r3
 17619 1ddc 1346     		mov	r3, r2
 17620 1dde 07CB     		ldmia	r3!, {r0, r1, r2}
 17621 1de0 2060     		str	r0, [r4]	@ unaligned
 17622 1de2 6160     		str	r1, [r4, #4]	@ unaligned
 17623 1de4 A260     		str	r2, [r4, #8]	@ unaligned
 17624 1de6 1B88     		ldrh	r3, [r3]	@ unaligned
 17625 1de8 A381     		strh	r3, [r4, #12]	@ unaligned
2296:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17626              		.loc 1 2296 0
 17627 1dea 704A     		ldr	r2, .L696+8
 17628 1dec D7F89430 		ldr	r3, [r7, #148]
 17629 1df0 1344     		add	r3, r3, r2
 17630 1df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17631 1df4 1946     		mov	r1, r3
 17632 1df6 D7F88820 		ldr	r2, [r7, #136]
 17633 1dfa 0B46     		mov	r3, r1
 17634 1dfc 9B00     		lsls	r3, r3, #2
 17635 1dfe 0B44     		add	r3, r3, r1
 17636 1e00 1344     		add	r3, r3, r2
 17637 1e02 03F20523 		addw	r3, r3, #517
 17638 1e06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17639 1e08 002B     		cmp	r3, #0
 17640 1e0a 0FD0     		beq	.L659
2297:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17641              		.loc 1 2297 0
 17642 1e0c 07F11803 		add	r3, r7, #24
 17643 1e10 1846     		mov	r0, r3
 17644 1e12 FFF7FEFF 		bl	strlen
 17645 1e16 0346     		mov	r3, r0
 17646 1e18 1A46     		mov	r2, r3
 17647 1e1a 07F11803 		add	r3, r7, #24
 17648 1e1e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 391


 17649 1e20 634A     		ldr	r2, .L696+12
 17650 1e22 1068     		ldr	r0, [r2]	@ unaligned
 17651 1e24 1860     		str	r0, [r3]	@ unaligned
 17652 1e26 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17653 1e28 9A80     		strh	r2, [r3, #4]	@ unaligned
 17654 1e2a 0EE0     		b	.L660
 17655              	.L659:
2298:..\src/command_processing.c ****                 else
2299:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17656              		.loc 1 2299 0
 17657 1e2c 07F11803 		add	r3, r7, #24
 17658 1e30 1846     		mov	r0, r3
 17659 1e32 FFF7FEFF 		bl	strlen
 17660 1e36 0346     		mov	r3, r0
 17661 1e38 1A46     		mov	r2, r3
 17662 1e3a 07F11803 		add	r3, r7, #24
 17663 1e3e 1344     		add	r3, r3, r2
 17664 1e40 584A     		ldr	r2, .L696
 17665 1e42 1068     		ldr	r0, [r2]	@ unaligned
 17666 1e44 1860     		str	r0, [r3]	@ unaligned
 17667 1e46 1279     		ldrb	r2, [r2, #4]
 17668 1e48 1A71     		strb	r2, [r3, #4]
 17669              	.L660:
2300:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 17670              		.loc 1 2300 0
 17671 1e4a 07F11803 		add	r3, r7, #24
 17672 1e4e 1846     		mov	r0, r3
 17673 1e50 FFF7FEFF 		bl	strlen
 17674 1e54 0346     		mov	r3, r0
 17675 1e56 1A46     		mov	r2, r3
 17676 1e58 07F11803 		add	r3, r7, #24
 17677 1e5c 1344     		add	r3, r3, r2
 17678 1e5e 574A     		ldr	r2, .L696+24
 17679 1e60 1C46     		mov	r4, r3
 17680 1e62 1346     		mov	r3, r2
 17681 1e64 07CB     		ldmia	r3!, {r0, r1, r2}
 17682 1e66 2060     		str	r0, [r4]	@ unaligned
 17683 1e68 6160     		str	r1, [r4, #4]	@ unaligned
 17684 1e6a A260     		str	r2, [r4, #8]	@ unaligned
 17685 1e6c 1A88     		ldrh	r2, [r3]	@ unaligned
 17686 1e6e 9B78     		ldrb	r3, [r3, #2]
 17687 1e70 A281     		strh	r2, [r4, #12]	@ unaligned
 17688 1e72 A373     		strb	r3, [r4, #14]
2301:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17689              		.loc 1 2301 0
 17690 1e74 4D4A     		ldr	r2, .L696+8
 17691 1e76 D7F89430 		ldr	r3, [r7, #148]
 17692 1e7a 1344     		add	r3, r3, r2
 17693 1e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17694 1e7e 1946     		mov	r1, r3
 17695 1e80 D7F88820 		ldr	r2, [r7, #136]
 17696 1e84 0B46     		mov	r3, r1
 17697 1e86 9B00     		lsls	r3, r3, #2
 17698 1e88 0B44     		add	r3, r3, r1
 17699 1e8a 1344     		add	r3, r3, r2
 17700 1e8c 03F20623 		addw	r3, r3, #518
 17701 1e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 392


 17702 1e92 002B     		cmp	r3, #0
 17703 1e94 0FD0     		beq	.L661
2302:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 17704              		.loc 1 2302 0
 17705 1e96 07F11803 		add	r3, r7, #24
 17706 1e9a 1846     		mov	r0, r3
 17707 1e9c FFF7FEFF 		bl	strlen
 17708 1ea0 0346     		mov	r3, r0
 17709 1ea2 1A46     		mov	r2, r3
 17710 1ea4 07F11803 		add	r3, r7, #24
 17711 1ea8 1344     		add	r3, r3, r2
 17712 1eaa 414A     		ldr	r2, .L696+12
 17713 1eac 1068     		ldr	r0, [r2]	@ unaligned
 17714 1eae 1860     		str	r0, [r3]	@ unaligned
 17715 1eb0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17716 1eb2 9A80     		strh	r2, [r3, #4]	@ unaligned
 17717 1eb4 0EE0     		b	.L662
 17718              	.L661:
2303:..\src/command_processing.c ****                 else
2304:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 17719              		.loc 1 2304 0
 17720 1eb6 07F11803 		add	r3, r7, #24
 17721 1eba 1846     		mov	r0, r3
 17722 1ebc FFF7FEFF 		bl	strlen
 17723 1ec0 0346     		mov	r3, r0
 17724 1ec2 1A46     		mov	r2, r3
 17725 1ec4 07F11803 		add	r3, r7, #24
 17726 1ec8 1344     		add	r3, r3, r2
 17727 1eca 364A     		ldr	r2, .L696
 17728 1ecc 1068     		ldr	r0, [r2]	@ unaligned
 17729 1ece 1860     		str	r0, [r3]	@ unaligned
 17730 1ed0 1279     		ldrb	r2, [r2, #4]
 17731 1ed2 1A71     		strb	r2, [r3, #4]
 17732              	.L662:
2305:..\src/command_processing.c ****                      
2306:..\src/command_processing.c ****                 strcat(info_string, str);
 17733              		.loc 1 2306 0 discriminator 2
 17734 1ed4 07F11803 		add	r3, r7, #24
 17735 1ed8 1946     		mov	r1, r3
 17736 1eda 7869     		ldr	r0, [r7, #20]
 17737 1edc FFF7FEFF 		bl	strcat
2276:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17738              		.loc 1 2276 0 discriminator 2
 17739 1ee0 D7F89430 		ldr	r3, [r7, #148]
 17740 1ee4 0133     		adds	r3, r3, #1
 17741 1ee6 C7F89430 		str	r3, [r7, #148]
 17742              	.L652:
2276:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17743              		.loc 1 2276 0 is_stmt 0 discriminator 1
 17744 1eea 354B     		ldr	r3, .L696+28
 17745 1eec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17746 1eee 1A46     		mov	r2, r3
 17747 1ef0 D7F89430 		ldr	r3, [r7, #148]
 17748 1ef4 9A42     		cmp	r2, r3
 17749 1ef6 3FF76FAE 		bgt	.L663
2307:..\src/command_processing.c ****             }       
2308:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 393


2309:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17750              		.loc 1 2309 0 is_stmt 1
 17751 1efa 7869     		ldr	r0, [r7, #20]
 17752 1efc FFF7FEFF 		bl	strlen
 17753 1f00 0346     		mov	r3, r0
 17754 1f02 1A46     		mov	r2, r3
 17755 1f04 7B69     		ldr	r3, [r7, #20]
 17756 1f06 1344     		add	r3, r3, r2
 17757 1f08 2E4A     		ldr	r2, .L696+32
 17758 1f0a 1188     		ldrh	r1, [r2]	@ unaligned
 17759 1f0c 9278     		ldrb	r2, [r2, #2]
 17760 1f0e 1980     		strh	r1, [r3]	@ unaligned
 17761 1f10 9A70     		strb	r2, [r3, #2]
2310:..\src/command_processing.c ****           
2311:..\src/command_processing.c ****             IMU_reading_info(info_string);
 17762              		.loc 1 2311 0
 17763 1f12 7869     		ldr	r0, [r7, #20]
 17764 1f14 FFF7FEFF 		bl	IMU_reading_info
 17765              	.L651:
2312:..\src/command_processing.c ****         }
2313:..\src/command_processing.c ****         
2314:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17766              		.loc 1 2314 0
 17767 1f18 7869     		ldr	r0, [r7, #20]
 17768 1f1a FFF7FEFF 		bl	strlen
 17769 1f1e 0346     		mov	r3, r0
 17770 1f20 1A46     		mov	r2, r3
 17771 1f22 7B69     		ldr	r3, [r7, #20]
 17772 1f24 1344     		add	r3, r3, r2
 17773 1f26 274A     		ldr	r2, .L696+32
 17774 1f28 1188     		ldrh	r1, [r2]	@ unaligned
 17775 1f2a 9278     		ldrb	r2, [r2, #2]
 17776 1f2c 1980     		strh	r1, [r3]	@ unaligned
 17777 1f2e 9A70     		strb	r2, [r3, #2]
2315:..\src/command_processing.c **** 
2316:..\src/command_processing.c **** #ifdef GENERIC_FW   
2317:..\src/command_processing.c ****         int j;
2318:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
 17778              		.loc 1 2318 0
 17779 1f30 7869     		ldr	r0, [r7, #20]
 17780 1f32 FFF7FEFF 		bl	strlen
 17781 1f36 0346     		mov	r3, r0
 17782 1f38 1A46     		mov	r2, r3
 17783 1f3a 7B69     		ldr	r3, [r7, #20]
 17784 1f3c 1344     		add	r3, r3, r2
 17785 1f3e 224A     		ldr	r2, .L696+36
 17786 1f40 1D46     		mov	r5, r3
 17787 1f42 1446     		mov	r4, r2
 17788 1f44 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17789 1f46 2860     		str	r0, [r5]	@ unaligned
 17790 1f48 6960     		str	r1, [r5, #4]	@ unaligned
 17791 1f4a AA60     		str	r2, [r5, #8]	@ unaligned
 17792 1f4c EB60     		str	r3, [r5, #12]	@ unaligned
 17793 1f4e 03CC     		ldmia	r4!, {r0, r1}
 17794 1f50 2861     		str	r0, [r5, #16]	@ unaligned
 17795 1f52 6961     		str	r1, [r5, #20]	@ unaligned
2319:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 394


 17796              		.loc 1 2319 0
 17797 1f54 0023     		movs	r3, #0
 17798 1f56 C7F89430 		str	r3, [r7, #148]
 17799 1f5a BCE0     		b	.L664
 17800              	.L673:
2320:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17801              		.loc 1 2320 0
 17802 1f5c 1B4A     		ldr	r2, .L696+40
 17803 1f5e D7F89430 		ldr	r3, [r7, #148]
 17804 1f62 1344     		add	r3, r3, r2
 17805 1f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17806 1f66 07F11800 		add	r0, r7, #24
 17807 1f6a D7F89420 		ldr	r2, [r7, #148]
 17808 1f6e 1849     		ldr	r1, .L696+44
 17809 1f70 FFF7FEFF 		bl	sprintf
2321:..\src/command_processing.c ****             strcat(info_string, str);
 17810              		.loc 1 2321 0
 17811 1f74 07F11803 		add	r3, r7, #24
 17812 1f78 1946     		mov	r1, r3
 17813 1f7a 7869     		ldr	r0, [r7, #20]
 17814 1f7c FFF7FEFF 		bl	strcat
2322:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
 17815              		.loc 1 2322 0
 17816 1f80 D7F88830 		ldr	r3, [r7, #136]
 17817 1f84 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17818 1f88 1A46     		mov	r2, r3
 17819 1f8a D7F89430 		ldr	r3, [r7, #148]
 17820 1f8e 9A42     		cmp	r2, r3
 17821 1f90 2FD1     		bne	.L665
2323:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
 17822              		.loc 1 2323 0
 17823 1f92 D7F88830 		ldr	r3, [r7, #136]
 17824 1f96 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 17825 1f9a 002B     		cmp	r3, #0
 17826 1f9c 1CD0     		beq	.L666
 17827              		.loc 1 2323 0 is_stmt 0 discriminator 1
 17828 1f9e 0D4A     		ldr	r2, .L696+48
 17829 1fa0 1BE0     		b	.L667
 17830              	.L697:
 17831 1fa2 00BF     		.align	2
 17832              	.L696:
 17833 1fa4 FC120000 		.word	.LC175
 17834 1fa8 E01A0000 		.word	.LC255
 17835 1fac 00000000 		.word	IMU_connected
 17836 1fb0 F4120000 		.word	.LC174
 17837 1fb4 F01A0000 		.word	.LC256
 17838 1fb8 041B0000 		.word	.LC257
 17839 1fbc 141B0000 		.word	.LC258
 17840 1fc0 00000000 		.word	N_IMU_Connected
 17841 1fc4 30110000 		.word	.LC151
 17842 1fc8 241B0000 		.word	.LC259
 17843 1fcc 00000000 		.word	N_Encoder_Line_Connected
 17844 1fd0 3C1B0000 		.word	.LC260
 17845 1fd4 5C1B0000 		.word	.LC261
 17846              	.L666:
 17847              		.loc 1 2323 0 discriminator 2
 17848 1fd8 534A     		ldr	r2, .L698
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 395


 17849              	.L667:
 17850              		.loc 1 2323 0 discriminator 4
 17851 1fda 07F11803 		add	r3, r7, #24
 17852 1fde 5349     		ldr	r1, .L698+4
 17853 1fe0 1846     		mov	r0, r3
 17854 1fe2 FFF7FEFF 		bl	sprintf
2324:..\src/command_processing.c ****                 strcat(info_string, str);
 17855              		.loc 1 2324 0 is_stmt 1 discriminator 4
 17856 1fe6 07F11803 		add	r3, r7, #24
 17857 1fea 1946     		mov	r1, r3
 17858 1fec 7869     		ldr	r0, [r7, #20]
 17859 1fee FFF7FEFF 		bl	strcat
 17860              	.L665:
2325:..\src/command_processing.c ****             }
2326:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 17861              		.loc 1 2326 0
 17862 1ff2 7869     		ldr	r0, [r7, #20]
 17863 1ff4 FFF7FEFF 		bl	strlen
 17864 1ff8 0346     		mov	r3, r0
 17865 1ffa 1A46     		mov	r2, r3
 17866 1ffc 7B69     		ldr	r3, [r7, #20]
 17867 1ffe 1344     		add	r3, r3, r2
 17868 2000 4B4A     		ldr	r2, .L698+8
 17869 2002 1188     		ldrh	r1, [r2]	@ unaligned
 17870 2004 9278     		ldrb	r2, [r2, #2]
 17871 2006 1980     		strh	r1, [r3]	@ unaligned
 17872 2008 9A70     		strb	r2, [r3, #2]
2327:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
 17873              		.loc 1 2327 0
 17874 200a 4A4A     		ldr	r2, .L698+12
 17875 200c D7F89430 		ldr	r3, [r7, #148]
 17876 2010 1344     		add	r3, r3, r2
 17877 2012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17878 2014 002B     		cmp	r3, #0
 17879 2016 59D0     		beq	.L668
2328:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
 17880              		.loc 1 2328 0
 17881 2018 7869     		ldr	r0, [r7, #20]
 17882 201a FFF7FEFF 		bl	strlen
 17883 201e 0346     		mov	r3, r0
 17884 2020 1A46     		mov	r2, r3
 17885 2022 7B69     		ldr	r3, [r7, #20]
 17886 2024 1344     		add	r3, r3, r2
 17887 2026 444A     		ldr	r2, .L698+16
 17888 2028 1D46     		mov	r5, r3
 17889 202a 1446     		mov	r4, r2
 17890 202c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17891 202e 2860     		str	r0, [r5]	@ unaligned
 17892 2030 6960     		str	r1, [r5, #4]	@ unaligned
 17893 2032 AA60     		str	r2, [r5, #8]	@ unaligned
 17894 2034 EB60     		str	r3, [r5, #12]	@ unaligned
 17895 2036 2068     		ldr	r0, [r4]	@ unaligned
 17896 2038 2861     		str	r0, [r5, #16]	@ unaligned
 17897 203a A388     		ldrh	r3, [r4, #4]	@ unaligned
 17898 203c AB82     		strh	r3, [r5, #20]	@ unaligned
2329:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17899              		.loc 1 2329 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 396


 17900 203e 0023     		movs	r3, #0
 17901 2040 C7F88C30 		str	r3, [r7, #140]
 17902 2044 2CE0     		b	.L669
 17903              	.L672:
2330:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
 17904              		.loc 1 2330 0
 17905 2046 3D49     		ldr	r1, .L698+20
 17906 2048 D7F89420 		ldr	r2, [r7, #148]
 17907 204c 1346     		mov	r3, r2
 17908 204e 9B00     		lsls	r3, r3, #2
 17909 2050 1344     		add	r3, r3, r2
 17910 2052 D7F88C20 		ldr	r2, [r7, #140]
 17911 2056 1344     		add	r3, r3, r2
 17912 2058 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 17913 205c 1C46     		mov	r4, r3
 17914 205e 3849     		ldr	r1, .L698+24
 17915 2060 D7F89420 		ldr	r2, [r7, #148]
 17916 2064 1346     		mov	r3, r2
 17917 2066 9B00     		lsls	r3, r3, #2
 17918 2068 1344     		add	r3, r3, r2
 17919 206a CA18     		adds	r2, r1, r3
 17920 206c D7F88C30 		ldr	r3, [r7, #140]
 17921 2070 1344     		add	r3, r3, r2
 17922 2072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17923 2074 102B     		cmp	r3, #16
 17924 2076 01D1     		bne	.L670
 17925              		.loc 1 2330 0 is_stmt 0 discriminator 1
 17926 2078 324B     		ldr	r3, .L698+28
 17927 207a 00E0     		b	.L671
 17928              	.L670:
 17929              		.loc 1 2330 0 discriminator 2
 17930 207c 324B     		ldr	r3, .L698+32
 17931              	.L671:
 17932              		.loc 1 2330 0 discriminator 4
 17933 207e 07F11800 		add	r0, r7, #24
 17934 2082 2246     		mov	r2, r4
 17935 2084 3149     		ldr	r1, .L698+36
 17936 2086 FFF7FEFF 		bl	sprintf
2331:..\src/command_processing.c ****                     strcat(info_string, str);
 17937              		.loc 1 2331 0 is_stmt 1 discriminator 4
 17938 208a 07F11803 		add	r3, r7, #24
 17939 208e 1946     		mov	r1, r3
 17940 2090 7869     		ldr	r0, [r7, #20]
 17941 2092 FFF7FEFF 		bl	strcat
2329:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17942              		.loc 1 2329 0 discriminator 4
 17943 2096 D7F88C30 		ldr	r3, [r7, #140]
 17944 209a 0133     		adds	r3, r3, #1
 17945 209c C7F88C30 		str	r3, [r7, #140]
 17946              	.L669:
2329:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
 17947              		.loc 1 2329 0 is_stmt 0 discriminator 2
 17948 20a0 244A     		ldr	r2, .L698+12
 17949 20a2 D7F89430 		ldr	r3, [r7, #148]
 17950 20a6 1344     		add	r3, r3, r2
 17951 20a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17952 20aa 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 397


 17953 20ac D7F88C30 		ldr	r3, [r7, #140]
 17954 20b0 9A42     		cmp	r2, r3
 17955 20b2 C8DC     		bgt	.L672
2332:..\src/command_processing.c ****                 }
2333:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 17956              		.loc 1 2333 0 is_stmt 1
 17957 20b4 7869     		ldr	r0, [r7, #20]
 17958 20b6 FFF7FEFF 		bl	strlen
 17959 20ba 0346     		mov	r3, r0
 17960 20bc 1A46     		mov	r2, r3
 17961 20be 7B69     		ldr	r3, [r7, #20]
 17962 20c0 1344     		add	r3, r3, r2
 17963 20c2 1B4A     		ldr	r2, .L698+8
 17964 20c4 1188     		ldrh	r1, [r2]	@ unaligned
 17965 20c6 9278     		ldrb	r2, [r2, #2]
 17966 20c8 1980     		strh	r1, [r3]	@ unaligned
 17967 20ca 9A70     		strb	r2, [r3, #2]
 17968              	.L668:
2319:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17969              		.loc 1 2319 0 discriminator 2
 17970 20cc D7F89430 		ldr	r3, [r7, #148]
 17971 20d0 0133     		adds	r3, r3, #1
 17972 20d2 C7F89430 		str	r3, [r7, #148]
 17973              	.L664:
2319:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
 17974              		.loc 1 2319 0 is_stmt 0 discriminator 1
 17975 20d6 D7F89430 		ldr	r3, [r7, #148]
 17976 20da 012B     		cmp	r3, #1
 17977 20dc 7FF73EAF 		ble	.L673
2334:..\src/command_processing.c ****             }
2335:..\src/command_processing.c ****         }
2336:..\src/command_processing.c **** #endif   
2337:..\src/command_processing.c ****         
2338:..\src/command_processing.c **** #ifdef MASTER_FW
2339:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2340:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2341:..\src/command_processing.c ****         else
2342:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2343:..\src/command_processing.c **** 
2344:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2345:..\src/command_processing.c ****         strcat(info_string, str);
2346:..\src/command_processing.c **** #endif
2347:..\src/command_processing.c **** 
2348:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 17978              		.loc 1 2348 0 is_stmt 1
 17979 20e0 1B4B     		ldr	r3, .L698+40
 17980 20e2 1B88     		ldrh	r3, [r3]
 17981 20e4 1A46     		mov	r2, r3
 17982 20e6 1B4B     		ldr	r3, .L698+44
 17983 20e8 1B88     		ldrh	r3, [r3]
 17984 20ea D21A     		subs	r2, r2, r3
 17985 20ec 07F11803 		add	r3, r7, #24
 17986 20f0 1949     		ldr	r1, .L698+48
 17987 20f2 1846     		mov	r0, r3
 17988 20f4 FFF7FEFF 		bl	sprintf
2349:..\src/command_processing.c ****         strcat(info_string, str);
 17989              		.loc 1 2349 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 398


 17990 20f8 07F11803 		add	r3, r7, #24
 17991 20fc 1946     		mov	r1, r3
 17992 20fe 7869     		ldr	r0, [r7, #20]
 17993 2100 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****   
2351:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 17994              		.loc 1 2351 0
 17995 2104 7869     		ldr	r0, [r7, #20]
 17996 2106 FFF7FEFF 		bl	strlen
 17997 210a 0346     		mov	r3, r0
 17998 210c 1A46     		mov	r2, r3
 17999 210e 7B69     		ldr	r3, [r7, #20]
 18000 2110 1344     		add	r3, r3, r2
 18001 2112 124A     		ldr	r2, .L698+52
 18002 2114 1188     		ldrh	r1, [r2]	@ unaligned
 18003 2116 9278     		ldrb	r2, [r2, #2]
 18004 2118 1980     		strh	r1, [r3]	@ unaligned
 18005 211a 9A70     		strb	r2, [r3, #2]
 18006              	.L675:
 18007              	.LBE20:
2352:..\src/command_processing.c ****     }
2353:..\src/command_processing.c **** }
 18008              		.loc 1 2353 0
 18009 211c 00BF     		nop
 18010 211e 9C37     		adds	r7, r7, #156
 18011              		.cfi_def_cfa_offset 36
 18012 2120 BD46     		mov	sp, r7
 18013              		.cfi_def_cfa_register 13
 18014              		@ sp needed
 18015 2122 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18016              	.L699:
 18017 2126 00BF     		.align	2
 18018              	.L698:
 18019 2128 641B0000 		.word	.LC262
 18020 212c 6C1B0000 		.word	.LC263
 18021 2130 30110000 		.word	.LC151
 18022 2134 00000000 		.word	N_Encoder_Line_Connected
 18023 2138 8C1B0000 		.word	.LC264
 18024 213c 00000000 		.word	Encoder_Value
 18025 2140 00000000 		.word	Encoder_Check
 18026 2144 A41B0000 		.word	.LC265
 18027 2148 A81B0000 		.word	.LC266
 18028 214c AC1B0000 		.word	.LC267
 18029 2150 00000000 		.word	timer_value0
 18030 2154 00000000 		.word	timer_value
 18031 2158 B81B0000 		.word	.LC268
 18032 215c D41B0000 		.word	.LC269
 18033              		.cfi_endproc
 18034              	.LFE72:
 18035              		.size	prepare_generic_info, .-prepare_generic_info
 18036              		.section	.rodata
 18037              		.align	2
 18038              	.LC270:
 18039 1bd8 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 18039      41474520 
 18039      53544154 
 18039      49535449 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 399


 18039      43530D0A 
 18040 1bed 000000   		.align	2
 18041              	.LC271:
 18042 1bf0 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 18042      206F6620 
 18042      4857206D 
 18042      61696E74 
 18042      656E616E 
 18043 1c1b 00       		.align	2
 18044              	.LC272:
 18045 1c1c 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 18045      206F6620 
 18045      75736167 
 18045      65207374 
 18045      61747320 
 18046 1c4f 0A00     		.ascii	"\012\000"
 18047 1c51 000000   		.align	2
 18048              	.LC273:
 18049 1c54 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 18049      20636865 
 18049      636B6564 
 18049      2054696D 
 18049      653A2025 
 18050 1c87 0A00     		.ascii	"\012\000"
 18051 1c89 000000   		.align	2
 18052              	.LC274:
 18053 1c8c 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 18053      74696F6E 
 18053      73206869 
 18053      73746F67 
 18053      72616D20 
 18054 1cab 00       		.align	2
 18055              	.LC275:
 18056 1cac 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 18056      2564205B 
 18056      25642D25 
 18056      645D3A20 
 18056      256C750D 
 18057 1cc2 0000     		.align	2
 18058              	.LC276:
 18059 1cc4 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 18059      656E7420 
 18059      68697374 
 18059      6F677261 
 18059      6D20286D 
 18060 1cde 0000     		.align	2
 18061              	.LC277:
 18062 1ce0 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 18062      73686F6C 
 18062      64202564 
 18062      205B2564 
 18062      2D25645D 
 18063              		.align	2
 18064              	.LC278:
 18065 1cfc 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 18065      61637469 
 18065      76617469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 400


 18065      6F6E7320 
 18065      636F756E 
 18066 1d1e 0000     		.align	2
 18067              	.LC279:
 18068 1d20 52657374 		.ascii	"Rest position occurrences: %lu\000"
 18068      20706F73 
 18068      6974696F 
 18068      6E206F63 
 18068      63757272 
 18069 1d3f 00       		.align	2
 18070              	.LC280:
 18071 1d40 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 18071      6520746F 
 18071      74616C20 
 18071      64697370 
 18071      6C616365 
 18072 1d66 0000     		.align	2
 18073              	.LC281:
 18074 1d68 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 18074      6C20706F 
 18074      77657220 
 18074      6F6E2074 
 18074      696D6520 
 18075 1d87 00       		.align	2
 18076              	.LC282:
 18077 1d88 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 18077      6C207265 
 18077      73742070 
 18077      6F736974 
 18077      696F6E20 
 18078              		.section	.text.prepare_counter_info,"ax",%progbits
 18079              		.align	2
 18080              		.global	prepare_counter_info
 18081              		.thumb
 18082              		.thumb_func
 18083              		.type	prepare_counter_info, %function
 18084              	prepare_counter_info:
 18085              	.LFB73:
2354:..\src/command_processing.c **** 
2355:..\src/command_processing.c **** //==============================================================================
2356:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2357:..\src/command_processing.c **** //==============================================================================
2358:..\src/command_processing.c **** 
2359:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2360:..\src/command_processing.c **** {
 18086              		.loc 1 2360 0
 18087              		.cfi_startproc
 18088              		@ args = 0, pretend = 0, frame = 128
 18089              		@ frame_needed = 1, uses_anonymous_args = 0
 18090 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18091              		.cfi_def_cfa_offset 20
 18092              		.cfi_offset 4, -20
 18093              		.cfi_offset 5, -16
 18094              		.cfi_offset 6, -12
 18095              		.cfi_offset 7, -8
 18096              		.cfi_offset 14, -4
 18097 0002 A5B0     		sub	sp, sp, #148
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 401


 18098              		.cfi_def_cfa_offset 168
 18099 0004 04AF     		add	r7, sp, #16
 18100              		.cfi_def_cfa 7, 152
 18101 0006 7860     		str	r0, [r7, #4]
2361:..\src/command_processing.c ****     char str[100];  
2362:..\src/command_processing.c ****     int i;
2363:..\src/command_processing.c ****     int step;
2364:..\src/command_processing.c **** 
2365:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18102              		.loc 1 2365 0
 18103 0008 7F4B     		ldr	r3, .L706
 18104 000a BB67     		str	r3, [r7, #120]
2366:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 18105              		.loc 1 2366 0
 18106 000c BB6F     		ldr	r3, [r7, #120]
 18107 000e B033     		adds	r3, r3, #176
 18108 0010 7B67     		str	r3, [r7, #116]
2367:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 18109              		.loc 1 2367 0
 18110 0012 7B6F     		ldr	r3, [r7, #116]
 18111 0014 93F86030 		ldrb	r3, [r3, #96]
 18112 0018 87F87330 		strb	r3, [r7, #115]
2368:..\src/command_processing.c ****     
2369:..\src/command_processing.c ****     strcpy(info_string, "");
 18113              		.loc 1 2369 0
 18114 001c 7B68     		ldr	r3, [r7, #4]
 18115 001e 0022     		movs	r2, #0
 18116 0020 1A70     		strb	r2, [r3]
2370:..\src/command_processing.c ****     
2371:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 18117              		.loc 1 2371 0
 18118 0022 7868     		ldr	r0, [r7, #4]
 18119 0024 FFF7FEFF 		bl	strlen
 18120 0028 0346     		mov	r3, r0
 18121 002a 1A46     		mov	r2, r3
 18122 002c 7B68     		ldr	r3, [r7, #4]
 18123 002e 1344     		add	r3, r3, r2
 18124 0030 764A     		ldr	r2, .L706+4
 18125 0032 1D46     		mov	r5, r3
 18126 0034 1446     		mov	r4, r2
 18127 0036 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18128 0038 2860     		str	r0, [r5]	@ unaligned
 18129 003a 6960     		str	r1, [r5, #4]	@ unaligned
 18130 003c AA60     		str	r2, [r5, #8]	@ unaligned
 18131 003e EB60     		str	r3, [r5, #12]	@ unaligned
 18132 0040 2068     		ldr	r0, [r4]	@ unaligned
 18133 0042 2861     		str	r0, [r5, #16]	@ unaligned
 18134 0044 2379     		ldrb	r3, [r4, #4]
 18135 0046 2B75     		strb	r3, [r5, #20]
2372:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18136              		.loc 1 2372 0
 18137 0048 7868     		ldr	r0, [r7, #4]
 18138 004a FFF7FEFF 		bl	strlen
 18139 004e 0346     		mov	r3, r0
 18140 0050 1A46     		mov	r2, r3
 18141 0052 7B68     		ldr	r3, [r7, #4]
 18142 0054 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 402


 18143 0056 6E4A     		ldr	r2, .L706+8
 18144 0058 1188     		ldrh	r1, [r2]	@ unaligned
 18145 005a 9278     		ldrb	r2, [r2, #2]
 18146 005c 1980     		strh	r1, [r3]	@ unaligned
 18147 005e 9A70     		strb	r2, [r3, #2]
2373:..\src/command_processing.c ****     
2374:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18148              		.loc 1 2374 0
 18149 0060 BB6F     		ldr	r3, [r7, #120]
 18150 0062 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18151 0066 1A46     		mov	r2, r3
 18152 0068 BB6F     		ldr	r3, [r7, #120]
 18153 006a 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18154 006e 1946     		mov	r1, r3
 18155 0070 BB6F     		ldr	r3, [r7, #120]
 18156 0072 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18157 0076 07F10800 		add	r0, r7, #8
 18158 007a 0093     		str	r3, [sp]
 18159 007c 0B46     		mov	r3, r1
 18160 007e 6549     		ldr	r1, .L706+12
 18161 0080 FFF7FEFF 		bl	sprintf
2375:..\src/command_processing.c ****     strcat(info_string, str);
 18162              		.loc 1 2375 0
 18163 0084 07F10803 		add	r3, r7, #8
 18164 0088 1946     		mov	r1, r3
 18165 008a 7868     		ldr	r0, [r7, #4]
 18166 008c FFF7FEFF 		bl	strcat
2376:..\src/command_processing.c ****     
2377:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18167              		.loc 1 2377 0
 18168 0090 BB6F     		ldr	r3, [r7, #120]
 18169 0092 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18170 0096 1A46     		mov	r2, r3
 18171 0098 BB6F     		ldr	r3, [r7, #120]
 18172 009a 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18173 009e 1946     		mov	r1, r3
 18174 00a0 BB6F     		ldr	r3, [r7, #120]
 18175 00a2 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18176 00a6 07F10800 		add	r0, r7, #8
 18177 00aa 0093     		str	r3, [sp]
 18178 00ac 0B46     		mov	r3, r1
 18179 00ae 5A49     		ldr	r1, .L706+16
 18180 00b0 FFF7FEFF 		bl	sprintf
2378:..\src/command_processing.c ****     strcat(info_string, str);
 18181              		.loc 1 2378 0
 18182 00b4 07F10803 		add	r3, r7, #8
 18183 00b8 1946     		mov	r1, r3
 18184 00ba 7868     		ldr	r0, [r7, #4]
 18185 00bc FFF7FEFF 		bl	strcat
2379:..\src/command_processing.c ****             
2380:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 18186              		.loc 1 2380 0
 18187 00c0 BB6F     		ldr	r3, [r7, #120]
 18188 00c2 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 18189 00c6 1D46     		mov	r5, r3
 18190 00c8 BB6F     		ldr	r3, [r7, #120]
 18191 00ca 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 403


 18192 00ce 1E46     		mov	r6, r3
 18193 00d0 BB6F     		ldr	r3, [r7, #120]
 18194 00d2 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 18195 00d6 1A46     		mov	r2, r3
 18196 00d8 BB6F     		ldr	r3, [r7, #120]
 18197 00da 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18198 00de 1946     		mov	r1, r3
 18199 00e0 BB6F     		ldr	r3, [r7, #120]
 18200 00e2 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18201 00e6 1C46     		mov	r4, r3
 18202 00e8 BB6F     		ldr	r3, [r7, #120]
 18203 00ea 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18204 00ee 07F10800 		add	r0, r7, #8
 18205 00f2 0393     		str	r3, [sp, #12]
 18206 00f4 0294     		str	r4, [sp, #8]
 18207 00f6 0191     		str	r1, [sp, #4]
 18208 00f8 0092     		str	r2, [sp]
 18209 00fa 3346     		mov	r3, r6
 18210 00fc 2A46     		mov	r2, r5
 18211 00fe 4749     		ldr	r1, .L706+20
 18212 0100 FFF7FEFF 		bl	sprintf
2381:..\src/command_processing.c ****     strcat(info_string, str);
 18213              		.loc 1 2381 0
 18214 0104 07F10803 		add	r3, r7, #8
 18215 0108 1946     		mov	r1, r3
 18216 010a 7868     		ldr	r0, [r7, #4]
 18217 010c FFF7FEFF 		bl	strcat
2382:..\src/command_processing.c ****     
2383:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 18218              		.loc 1 2383 0
 18219 0110 07F10803 		add	r3, r7, #8
 18220 0114 424A     		ldr	r2, .L706+24
 18221 0116 1C46     		mov	r4, r3
 18222 0118 1546     		mov	r5, r2
 18223 011a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18224 011c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18225 011e 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 18226 0122 07C4     		stmia	r4!, {r0, r1, r2}
 18227 0124 2380     		strh	r3, [r4]	@ movhi
 18228 0126 0234     		adds	r4, r4, #2
 18229 0128 1B0C     		lsrs	r3, r3, #16
 18230 012a 2370     		strb	r3, [r4]
2384:..\src/command_processing.c ****     strcat(info_string, str);
 18231              		.loc 1 2384 0
 18232 012c 07F10803 		add	r3, r7, #8
 18233 0130 1946     		mov	r1, r3
 18234 0132 7868     		ldr	r0, [r7, #4]
 18235 0134 FFF7FEFF 		bl	strcat
2385:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 18236              		.loc 1 2385 0
 18237 0138 7B6F     		ldr	r3, [r7, #116]
 18238 013a 996B     		ldr	r1, [r3, #56]
 18239 013c 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 18240 0140 B86F     		ldr	r0, [r7, #120]
 18241 0142 1346     		mov	r3, r2
 18242 0144 5B00     		lsls	r3, r3, #1
 18243 0146 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 404


 18244 0148 1B01     		lsls	r3, r3, #4
 18245 014a 0344     		add	r3, r3, r0
 18246 014c 03F29513 		addw	r3, r3, #405
 18247 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18248 0152 41FA03F3 		asr	r3, r1, r3
 18249 0156 334A     		ldr	r2, .L706+28
 18250 0158 82FB0312 		smull	r1, r2, r2, r3
 18251 015c 9210     		asrs	r2, r2, #2
 18252 015e DB17     		asrs	r3, r3, #31
 18253 0160 D31A     		subs	r3, r2, r3
 18254 0162 FB66     		str	r3, [r7, #108]
2386:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18255              		.loc 1 2386 0
 18256 0164 0123     		movs	r3, #1
 18257 0166 FB67     		str	r3, [r7, #124]
 18258 0168 21E0     		b	.L701
 18259              	.L702:
2387:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 18260              		.loc 1 2387 0 discriminator 3
 18261 016a FB6F     		ldr	r3, [r7, #124]
 18262 016c 013B     		subs	r3, r3, #1
 18263 016e FA6E     		ldr	r2, [r7, #108]
 18264 0170 02FB03F3 		mul	r3, r2, r3
 18265 0174 5C1C     		adds	r4, r3, #1
 18266 0176 FB6E     		ldr	r3, [r7, #108]
 18267 0178 FA6F     		ldr	r2, [r7, #124]
 18268 017a 02FB03F3 		mul	r3, r2, r3
 18269 017e FA6F     		ldr	r2, [r7, #124]
 18270 0180 511E     		subs	r1, r2, #1
 18271 0182 BA6F     		ldr	r2, [r7, #120]
 18272 0184 0631     		adds	r1, r1, #6
 18273 0186 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18274 018a 07F10800 		add	r0, r7, #8
 18275 018e 0192     		str	r2, [sp, #4]
 18276 0190 0093     		str	r3, [sp]
 18277 0192 2346     		mov	r3, r4
 18278 0194 FA6F     		ldr	r2, [r7, #124]
 18279 0196 2449     		ldr	r1, .L706+32
 18280 0198 FFF7FEFF 		bl	sprintf
2388:..\src/command_processing.c ****         strcat(info_string, str);
 18281              		.loc 1 2388 0 discriminator 3
 18282 019c 07F10803 		add	r3, r7, #8
 18283 01a0 1946     		mov	r1, r3
 18284 01a2 7868     		ldr	r0, [r7, #4]
 18285 01a4 FFF7FEFF 		bl	strcat
2386:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18286              		.loc 1 2386 0 discriminator 3
 18287 01a8 FB6F     		ldr	r3, [r7, #124]
 18288 01aa 0133     		adds	r3, r3, #1
 18289 01ac FB67     		str	r3, [r7, #124]
 18290              	.L701:
2386:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18291              		.loc 1 2386 0 is_stmt 0 discriminator 1
 18292 01ae FB6F     		ldr	r3, [r7, #124]
 18293 01b0 0A2B     		cmp	r3, #10
 18294 01b2 DADD     		ble	.L702
2389:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 405


2390:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18295              		.loc 1 2390 0 is_stmt 1
 18296 01b4 7868     		ldr	r0, [r7, #4]
 18297 01b6 FFF7FEFF 		bl	strlen
 18298 01ba 0346     		mov	r3, r0
 18299 01bc 1A46     		mov	r2, r3
 18300 01be 7B68     		ldr	r3, [r7, #4]
 18301 01c0 1344     		add	r3, r3, r2
 18302 01c2 134A     		ldr	r2, .L706+8
 18303 01c4 1188     		ldrh	r1, [r2]	@ unaligned
 18304 01c6 9278     		ldrb	r2, [r2, #2]
 18305 01c8 1980     		strh	r1, [r3]	@ unaligned
 18306 01ca 9A70     		strb	r2, [r3, #2]
2391:..\src/command_processing.c ****     
2392:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 18307              		.loc 1 2392 0
 18308 01cc 07F10803 		add	r3, r7, #8
 18309 01d0 164A     		ldr	r2, .L706+36
 18310 01d2 1C46     		mov	r4, r3
 18311 01d4 1546     		mov	r5, r2
 18312 01d6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 18313 01d8 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 18314 01da 95E80700 		ldmia	r5, {r0, r1, r2}
 18315 01de 03C4     		stmia	r4!, {r0, r1}
 18316 01e0 2280     		strh	r2, [r4]	@ movhi
2393:..\src/command_processing.c ****     strcat(info_string, str);
 18317              		.loc 1 2393 0
 18318 01e2 07F10803 		add	r3, r7, #8
 18319 01e6 1946     		mov	r1, r3
 18320 01e8 7868     		ldr	r0, [r7, #4]
 18321 01ea FFF7FEFF 		bl	strcat
2394:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 18322              		.loc 1 2394 0
 18323 01ee 7B6F     		ldr	r3, [r7, #116]
 18324 01f0 B3F95C30 		ldrsh	r3, [r3, #92]
 18325 01f4 002B     		cmp	r3, #0
 18326 01f6 00DA     		bge	.L703
 18327 01f8 0333     		adds	r3, r3, #3
 18328              	.L703:
 18329 01fa 9B10     		asrs	r3, r3, #2
 18330 01fc 1BB2     		sxth	r3, r3
 18331 01fe FB66     		str	r3, [r7, #108]
2395:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18332              		.loc 1 2395 0
 18333 0200 0123     		movs	r3, #1
 18334 0202 FB67     		str	r3, [r7, #124]
 18335 0204 35E0     		b	.L704
 18336              	.L707:
 18337 0206 00BF     		.align	2
 18338              	.L706:
 18339 0208 00000000 		.word	g_mem
 18340 020c D81B0000 		.word	.LC270
 18341 0210 30110000 		.word	.LC151
 18342 0214 F01B0000 		.word	.LC271
 18343 0218 1C1C0000 		.word	.LC272
 18344 021c 541C0000 		.word	.LC273
 18345 0220 8C1C0000 		.word	.LC274
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 406


 18346 0224 67666666 		.word	1717986919
 18347 0228 AC1C0000 		.word	.LC275
 18348 022c C41C0000 		.word	.LC276
 18349              	.L705:
2396:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 18350              		.loc 1 2396 0 discriminator 3
 18351 0230 FB6F     		ldr	r3, [r7, #124]
 18352 0232 013B     		subs	r3, r3, #1
 18353 0234 FA6E     		ldr	r2, [r7, #108]
 18354 0236 02FB03F4 		mul	r4, r2, r3
 18355 023a FB6E     		ldr	r3, [r7, #108]
 18356 023c FA6F     		ldr	r2, [r7, #124]
 18357 023e 02FB03F3 		mul	r3, r2, r3
 18358 0242 FA6F     		ldr	r2, [r7, #124]
 18359 0244 511E     		subs	r1, r2, #1
 18360 0246 BA6F     		ldr	r2, [r7, #120]
 18361 0248 1031     		adds	r1, r1, #16
 18362 024a 52F82120 		ldr	r2, [r2, r1, lsl #2]
 18363 024e 07F10800 		add	r0, r7, #8
 18364 0252 0192     		str	r2, [sp, #4]
 18365 0254 0093     		str	r3, [sp]
 18366 0256 2346     		mov	r3, r4
 18367 0258 FA6F     		ldr	r2, [r7, #124]
 18368 025a 5149     		ldr	r1, .L708
 18369 025c FFF7FEFF 		bl	sprintf
2397:..\src/command_processing.c ****         strcat(info_string, str);
 18370              		.loc 1 2397 0 discriminator 3
 18371 0260 07F10803 		add	r3, r7, #8
 18372 0264 1946     		mov	r1, r3
 18373 0266 7868     		ldr	r0, [r7, #4]
 18374 0268 FFF7FEFF 		bl	strcat
2395:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18375              		.loc 1 2395 0 discriminator 3
 18376 026c FB6F     		ldr	r3, [r7, #124]
 18377 026e 0133     		adds	r3, r3, #1
 18378 0270 FB67     		str	r3, [r7, #124]
 18379              	.L704:
2395:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18380              		.loc 1 2395 0 is_stmt 0 discriminator 1
 18381 0272 FB6F     		ldr	r3, [r7, #124]
 18382 0274 042B     		cmp	r3, #4
 18383 0276 DBDD     		ble	.L705
2398:..\src/command_processing.c ****     }
2399:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18384              		.loc 1 2399 0 is_stmt 1
 18385 0278 7868     		ldr	r0, [r7, #4]
 18386 027a FFF7FEFF 		bl	strlen
 18387 027e 0346     		mov	r3, r0
 18388 0280 1A46     		mov	r2, r3
 18389 0282 7B68     		ldr	r3, [r7, #4]
 18390 0284 1344     		add	r3, r3, r2
 18391 0286 474A     		ldr	r2, .L708+4
 18392 0288 1188     		ldrh	r1, [r2]	@ unaligned
 18393 028a 9278     		ldrb	r2, [r2, #2]
 18394 028c 1980     		strh	r1, [r3]	@ unaligned
 18395 028e 9A70     		strb	r2, [r3, #2]
2400:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 407


2401:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 18396              		.loc 1 2401 0
 18397 0290 BB6F     		ldr	r3, [r7, #120]
 18398 0292 1A69     		ldr	r2, [r3, #16]
 18399 0294 BB6F     		ldr	r3, [r7, #120]
 18400 0296 5B69     		ldr	r3, [r3, #20]
 18401 0298 07F10800 		add	r0, r7, #8
 18402 029c 4249     		ldr	r1, .L708+8
 18403 029e FFF7FEFF 		bl	sprintf
2402:..\src/command_processing.c ****     strcat(info_string, str);
 18404              		.loc 1 2402 0
 18405 02a2 07F10803 		add	r3, r7, #8
 18406 02a6 1946     		mov	r1, r3
 18407 02a8 7868     		ldr	r0, [r7, #4]
 18408 02aa FFF7FEFF 		bl	strcat
2403:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18409              		.loc 1 2403 0
 18410 02ae 7868     		ldr	r0, [r7, #4]
 18411 02b0 FFF7FEFF 		bl	strlen
 18412 02b4 0346     		mov	r3, r0
 18413 02b6 1A46     		mov	r2, r3
 18414 02b8 7B68     		ldr	r3, [r7, #4]
 18415 02ba 1344     		add	r3, r3, r2
 18416 02bc 394A     		ldr	r2, .L708+4
 18417 02be 1188     		ldrh	r1, [r2]	@ unaligned
 18418 02c0 9278     		ldrb	r2, [r2, #2]
 18419 02c2 1980     		strh	r1, [r3]	@ unaligned
 18420 02c4 9A70     		strb	r2, [r3, #2]
2404:..\src/command_processing.c ****     
2405:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 18421              		.loc 1 2405 0
 18422 02c6 BB6F     		ldr	r3, [r7, #120]
 18423 02c8 1A6D     		ldr	r2, [r3, #80]
 18424 02ca 07F10803 		add	r3, r7, #8
 18425 02ce 3749     		ldr	r1, .L708+12
 18426 02d0 1846     		mov	r0, r3
 18427 02d2 FFF7FEFF 		bl	sprintf
2406:..\src/command_processing.c ****     strcat(info_string, str);
 18428              		.loc 1 2406 0
 18429 02d6 07F10803 		add	r3, r7, #8
 18430 02da 1946     		mov	r1, r3
 18431 02dc 7868     		ldr	r0, [r7, #4]
 18432 02de FFF7FEFF 		bl	strcat
2407:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18433              		.loc 1 2407 0
 18434 02e2 7868     		ldr	r0, [r7, #4]
 18435 02e4 FFF7FEFF 		bl	strlen
 18436 02e8 0346     		mov	r3, r0
 18437 02ea 1A46     		mov	r2, r3
 18438 02ec 7B68     		ldr	r3, [r7, #4]
 18439 02ee 1344     		add	r3, r3, r2
 18440 02f0 2C4A     		ldr	r2, .L708+4
 18441 02f2 1188     		ldrh	r1, [r2]	@ unaligned
 18442 02f4 9278     		ldrb	r2, [r2, #2]
 18443 02f6 1980     		strh	r1, [r3]	@ unaligned
 18444 02f8 9A70     		strb	r2, [r3, #2]
2408:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 408


2409:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 18445              		.loc 1 2409 0
 18446 02fa BB6F     		ldr	r3, [r7, #120]
 18447 02fc 5A6D     		ldr	r2, [r3, #84]
 18448 02fe 07F10803 		add	r3, r7, #8
 18449 0302 2B49     		ldr	r1, .L708+16
 18450 0304 1846     		mov	r0, r3
 18451 0306 FFF7FEFF 		bl	sprintf
2410:..\src/command_processing.c ****     strcat(info_string, str);
 18452              		.loc 1 2410 0
 18453 030a 07F10803 		add	r3, r7, #8
 18454 030e 1946     		mov	r1, r3
 18455 0310 7868     		ldr	r0, [r7, #4]
 18456 0312 FFF7FEFF 		bl	strcat
2411:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18457              		.loc 1 2411 0
 18458 0316 7868     		ldr	r0, [r7, #4]
 18459 0318 FFF7FEFF 		bl	strlen
 18460 031c 0346     		mov	r3, r0
 18461 031e 1A46     		mov	r2, r3
 18462 0320 7B68     		ldr	r3, [r7, #4]
 18463 0322 1344     		add	r3, r3, r2
 18464 0324 1F4A     		ldr	r2, .L708+4
 18465 0326 1188     		ldrh	r1, [r2]	@ unaligned
 18466 0328 9278     		ldrb	r2, [r2, #2]
 18467 032a 1980     		strh	r1, [r3]	@ unaligned
 18468 032c 9A70     		strb	r2, [r3, #2]
2412:..\src/command_processing.c ****     
2413:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 18469              		.loc 1 2413 0
 18470 032e BB6F     		ldr	r3, [r7, #120]
 18471 0330 9A6D     		ldr	r2, [r3, #88]
 18472 0332 07F10803 		add	r3, r7, #8
 18473 0336 1F49     		ldr	r1, .L708+20
 18474 0338 1846     		mov	r0, r3
 18475 033a FFF7FEFF 		bl	sprintf
2414:..\src/command_processing.c ****     strcat(info_string, str);
 18476              		.loc 1 2414 0
 18477 033e 07F10803 		add	r3, r7, #8
 18478 0342 1946     		mov	r1, r3
 18479 0344 7868     		ldr	r0, [r7, #4]
 18480 0346 FFF7FEFF 		bl	strcat
2415:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18481              		.loc 1 2415 0
 18482 034a 7868     		ldr	r0, [r7, #4]
 18483 034c FFF7FEFF 		bl	strlen
 18484 0350 0346     		mov	r3, r0
 18485 0352 1A46     		mov	r2, r3
 18486 0354 7B68     		ldr	r3, [r7, #4]
 18487 0356 1344     		add	r3, r3, r2
 18488 0358 124A     		ldr	r2, .L708+4
 18489 035a 1188     		ldrh	r1, [r2]	@ unaligned
 18490 035c 9278     		ldrb	r2, [r2, #2]
 18491 035e 1980     		strh	r1, [r3]	@ unaligned
 18492 0360 9A70     		strb	r2, [r3, #2]
2416:..\src/command_processing.c ****     
2417:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 409


 18493              		.loc 1 2417 0
 18494 0362 BB6F     		ldr	r3, [r7, #120]
 18495 0364 DA6D     		ldr	r2, [r3, #92]
 18496 0366 07F10803 		add	r3, r7, #8
 18497 036a 1349     		ldr	r1, .L708+24
 18498 036c 1846     		mov	r0, r3
 18499 036e FFF7FEFF 		bl	sprintf
2418:..\src/command_processing.c ****     strcat(info_string, str);
 18500              		.loc 1 2418 0
 18501 0372 07F10803 		add	r3, r7, #8
 18502 0376 1946     		mov	r1, r3
 18503 0378 7868     		ldr	r0, [r7, #4]
 18504 037a FFF7FEFF 		bl	strcat
2419:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18505              		.loc 1 2419 0
 18506 037e 7868     		ldr	r0, [r7, #4]
 18507 0380 FFF7FEFF 		bl	strlen
 18508 0384 0346     		mov	r3, r0
 18509 0386 1A46     		mov	r2, r3
 18510 0388 7B68     		ldr	r3, [r7, #4]
 18511 038a 1344     		add	r3, r3, r2
 18512 038c 054A     		ldr	r2, .L708+4
 18513 038e 1188     		ldrh	r1, [r2]	@ unaligned
 18514 0390 9278     		ldrb	r2, [r2, #2]
 18515 0392 1980     		strh	r1, [r3]	@ unaligned
 18516 0394 9A70     		strb	r2, [r3, #2]
2420:..\src/command_processing.c **** 
2421:..\src/command_processing.c **** }
 18517              		.loc 1 2421 0
 18518 0396 00BF     		nop
 18519 0398 8437     		adds	r7, r7, #132
 18520              		.cfi_def_cfa_offset 20
 18521 039a BD46     		mov	sp, r7
 18522              		.cfi_def_cfa_register 13
 18523              		@ sp needed
 18524 039c F0BD     		pop	{r4, r5, r6, r7, pc}
 18525              	.L709:
 18526 039e 00BF     		.align	2
 18527              	.L708:
 18528 03a0 E01C0000 		.word	.LC277
 18529 03a4 30110000 		.word	.LC151
 18530 03a8 FC1C0000 		.word	.LC278
 18531 03ac 201D0000 		.word	.LC279
 18532 03b0 401D0000 		.word	.LC280
 18533 03b4 681D0000 		.word	.LC281
 18534 03b8 881D0000 		.word	.LC282
 18535              		.cfi_endproc
 18536              	.LFE73:
 18537              		.size	prepare_counter_info, .-prepare_counter_info
 18538              		.section	.rodata
 18539              		.align	2
 18540              	.LC283:
 18541 1dac 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 18541      77617265 
 18541      20766572 
 18541      73696F6E 
 18541      3A202573 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 410


 18542 1dc3 00       		.align	2
 18543              	.LC284:
 18544 1dc4 506F7369 		.ascii	"Position PID: \000"
 18544      74696F6E 
 18544      20504944 
 18544      3A2000
 18545 1dd3 00       		.align	2
 18546              	.LC285:
 18547 1dd4 43757272 		.ascii	"Current PID: \000"
 18547      656E7420 
 18547      5049443A 
 18547      2000
 18548 1de2 0000     		.align	2
 18549              	.LC286:
 18550 1de4 5265736F 		.ascii	"Resolutions: \000"
 18550      6C757469 
 18550      6F6E733A 
 18550      2000
 18551 1df2 0000     		.align	2
 18552              	.LC287:
 18553 1df4 4F666673 		.ascii	"Offsets: \000"
 18553      6574733A 
 18553      2000
 18554 1dfe 0000     		.align	2
 18555              	.LC288:
 18556 1e00 4D756C74 		.ascii	"Multipliers: \000"
 18556      69706C69 
 18556      6572733A 
 18556      2000
 18557 1e0e 0000     		.align	2
 18558              	.LC289:
 18559 1e10 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 18559      656E7420 
 18559      6C6F6F6B 
 18559      75702074 
 18559      61626C65 
 18560 1e43 662C2025 		.ascii	"f, %f\015\012\000"
 18560      660D0A00 
 18561 1e4b 00       		.align	2
 18562              	.LC290:
 18563 1e4c 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 18563      74696F6E 
 18563      206C696D 
 18563      69742061 
 18563      63746976 
 18564              		.align	2
 18565              	.LC291:
 18566 1e68 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 18566      74696F6E 
 18566      206C696D 
 18566      6974733A 
 18566      20696E66 
 18567              		.section	.text.prepare_SD_param_info,"ax",%progbits
 18568              		.align	2
 18569              		.global	prepare_SD_param_info
 18570              		.thumb
 18571              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 411


 18572              		.type	prepare_SD_param_info, %function
 18573              	prepare_SD_param_info:
 18574              	.LFB74:
2422:..\src/command_processing.c **** 
2423:..\src/command_processing.c **** //==============================================================================
2424:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2425:..\src/command_processing.c **** //==============================================================================
2426:..\src/command_processing.c **** 
2427:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2428:..\src/command_processing.c **** {
 18575              		.loc 1 2428 0
 18576              		.cfi_startproc
 18577              		@ args = 0, pretend = 0, frame = 152
 18578              		@ frame_needed = 1, uses_anonymous_args = 0
 18579 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 18580              		.cfi_def_cfa_offset 36
 18581              		.cfi_offset 4, -36
 18582              		.cfi_offset 5, -32
 18583              		.cfi_offset 6, -28
 18584              		.cfi_offset 7, -24
 18585              		.cfi_offset 8, -20
 18586              		.cfi_offset 9, -16
 18587              		.cfi_offset 10, -12
 18588              		.cfi_offset 11, -8
 18589              		.cfi_offset 14, -4
 18590 0004 B1B0     		sub	sp, sp, #196
 18591              		.cfi_def_cfa_offset 232
 18592 0006 0AAF     		add	r7, sp, #40
 18593              		.cfi_def_cfa 7, 192
 18594 0008 7861     		str	r0, [r7, #20]
2429:..\src/command_processing.c ****     char str[100];  
2430:..\src/command_processing.c ****     int i;
2431:..\src/command_processing.c ****            
2432:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2433:..\src/command_processing.c ****     
2434:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 18595              		.loc 1 2434 0
 18596 000a AB4B     		ldr	r3, .L775
 18597 000c C7F88C30 		str	r3, [r7, #140]
2435:..\src/command_processing.c ****         
2436:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 18598              		.loc 1 2436 0
 18599 0010 AA4A     		ldr	r2, .L775+4
 18600 0012 AB49     		ldr	r1, .L775+8
 18601 0014 7869     		ldr	r0, [r7, #20]
 18602 0016 FFF7FEFF 		bl	sprintf
2437:..\src/command_processing.c ****     
2438:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 18603              		.loc 1 2438 0
 18604 001a D7F88C30 		ldr	r3, [r7, #140]
 18605 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18606 0022 1A46     		mov	r2, r3
 18607 0024 07F11C03 		add	r3, r7, #28
 18608 0028 A649     		ldr	r1, .L775+12
 18609 002a 1846     		mov	r0, r3
 18610 002c FFF7FEFF 		bl	sprintf
2439:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 412


 18611              		.loc 1 2439 0
 18612 0030 07F11C03 		add	r3, r7, #28
 18613 0034 1946     		mov	r1, r3
 18614 0036 7869     		ldr	r0, [r7, #20]
 18615 0038 FFF7FEFF 		bl	strcat
2440:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 18616              		.loc 1 2440 0
 18617 003c D7F88C30 		ldr	r3, [r7, #140]
 18618 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 18619 0044 002B     		cmp	r3, #0
 18620 0046 02D0     		beq	.L712
 18621 0048 012B     		cmp	r3, #1
 18622 004a 15D0     		beq	.L713
 18623 004c 26E0     		b	.L711
 18624              	.L712:
2441:..\src/command_processing.c ****         case RIGHT_HAND:
2442:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 18625              		.loc 1 2442 0
 18626 004e 7869     		ldr	r0, [r7, #20]
 18627 0050 FFF7FEFF 		bl	strlen
 18628 0054 0346     		mov	r3, r0
 18629 0056 1A46     		mov	r2, r3
 18630 0058 7B69     		ldr	r3, [r7, #20]
 18631 005a 1344     		add	r3, r3, r2
 18632 005c 9A4A     		ldr	r2, .L775+16
 18633 005e 1D46     		mov	r5, r3
 18634 0060 1446     		mov	r4, r2
 18635 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18636 0064 2860     		str	r0, [r5]	@ unaligned
 18637 0066 6960     		str	r1, [r5, #4]	@ unaligned
 18638 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 18639 006a EB60     		str	r3, [r5, #12]	@ unaligned
 18640 006c 2388     		ldrh	r3, [r4]	@ unaligned
 18641 006e A278     		ldrb	r2, [r4, #2]
 18642 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 18643 0072 1346     		mov	r3, r2
 18644 0074 AB74     		strb	r3, [r5, #18]
2443:..\src/command_processing.c ****             break;
 18645              		.loc 1 2443 0
 18646 0076 11E0     		b	.L711
 18647              	.L713:
2444:..\src/command_processing.c ****         case LEFT_HAND:
2445:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 18648              		.loc 1 2445 0
 18649 0078 7869     		ldr	r0, [r7, #20]
 18650 007a FFF7FEFF 		bl	strlen
 18651 007e 0346     		mov	r3, r0
 18652 0080 1A46     		mov	r2, r3
 18653 0082 7B69     		ldr	r3, [r7, #20]
 18654 0084 1344     		add	r3, r3, r2
 18655 0086 914A     		ldr	r2, .L775+20
 18656 0088 1D46     		mov	r5, r3
 18657 008a 1446     		mov	r4, r2
 18658 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18659 008e 2860     		str	r0, [r5]	@ unaligned
 18660 0090 6960     		str	r1, [r5, #4]	@ unaligned
 18661 0092 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 413


 18662 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 18663 0096 2388     		ldrh	r3, [r4]	@ unaligned
 18664 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2446:..\src/command_processing.c ****             break;
 18665              		.loc 1 2446 0
 18666 009a 00BF     		nop
 18667              	.L711:
2447:..\src/command_processing.c ****     }
2448:..\src/command_processing.c **** 
2449:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 18668              		.loc 1 2449 0
 18669 009c D7F88C30 		ldr	r3, [r7, #140]
 18670 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 18671 00a4 1A46     		mov	r2, r3
 18672 00a6 D7F88C30 		ldr	r3, [r7, #140]
 18673 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 18674 00ae 1946     		mov	r1, r3
 18675 00b0 D7F88C30 		ldr	r3, [r7, #140]
 18676 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 18677 00b8 07F11C00 		add	r0, r7, #28
 18678 00bc 0093     		str	r3, [sp]
 18679 00be 0B46     		mov	r3, r1
 18680 00c0 8349     		ldr	r1, .L775+24
 18681 00c2 FFF7FEFF 		bl	sprintf
2450:..\src/command_processing.c ****     strcat(info_string, str);
 18682              		.loc 1 2450 0
 18683 00c6 07F11C03 		add	r3, r7, #28
 18684 00ca 1946     		mov	r1, r3
 18685 00cc 7869     		ldr	r0, [r7, #20]
 18686 00ce FFF7FEFF 		bl	strcat
2451:..\src/command_processing.c ****     
2452:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 18687              		.loc 1 2452 0
 18688 00d2 D7F88C30 		ldr	r3, [r7, #140]
 18689 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 18690 00da 1A46     		mov	r2, r3
 18691 00dc D7F88C30 		ldr	r3, [r7, #140]
 18692 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 18693 00e4 1946     		mov	r1, r3
 18694 00e6 D7F88C30 		ldr	r3, [r7, #140]
 18695 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 18696 00ee 07F11C00 		add	r0, r7, #28
 18697 00f2 0093     		str	r3, [sp]
 18698 00f4 0B46     		mov	r3, r1
 18699 00f6 7749     		ldr	r1, .L775+28
 18700 00f8 FFF7FEFF 		bl	sprintf
2453:..\src/command_processing.c ****     strcat(info_string, str);
 18701              		.loc 1 2453 0
 18702 00fc 07F11C03 		add	r3, r7, #28
 18703 0100 1946     		mov	r1, r3
 18704 0102 7869     		ldr	r0, [r7, #20]
 18705 0104 FFF7FEFF 		bl	strcat
 18706              	.LBB23:
2454:..\src/command_processing.c ****     
2455:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 18707              		.loc 1 2455 0
 18708 0108 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 414


 18709 010a 87F89330 		strb	r3, [r7, #147]
 18710 010e 00F05CBE 		b	.L714
 18711              	.L758:
 18712              	.LBB24:
2456:..\src/command_processing.c ****             
2457:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 18713              		.loc 1 2457 0
 18714 0112 97F89330 		ldrb	r3, [r7, #147]
 18715 0116 87F88B30 		strb	r3, [r7, #139]
2458:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 18716              		.loc 1 2458 0
 18717 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 18718 011e 1346     		mov	r3, r2
 18719 0120 DB00     		lsls	r3, r3, #3
 18720 0122 9B1A     		subs	r3, r3, r2
 18721 0124 1B01     		lsls	r3, r3, #4
 18722 0126 B033     		adds	r3, r3, #176
 18723 0128 D7F88C20 		ldr	r2, [r7, #140]
 18724 012c 1344     		add	r3, r3, r2
 18725 012e C7F88430 		str	r3, [r7, #132]
2459:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 18726              		.loc 1 2459 0
 18727 0132 D7F88430 		ldr	r3, [r7, #132]
 18728 0136 93F86030 		ldrb	r3, [r3, #96]
 18729 013a 87F88330 		strb	r3, [r7, #131]
2460:..\src/command_processing.c ****               
2461:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 18730              		.loc 1 2461 0
 18731 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18732 0142 5A1C     		adds	r2, r3, #1
 18733 0144 07F11C03 		add	r3, r7, #28
 18734 0148 6349     		ldr	r1, .L775+32
 18735 014a 1846     		mov	r0, r3
 18736 014c FFF7FEFF 		bl	sprintf
2462:..\src/command_processing.c ****         strcat(info_string, str);
 18737              		.loc 1 2462 0
 18738 0150 07F11C03 		add	r3, r7, #28
 18739 0154 1946     		mov	r1, r3
 18740 0156 7869     		ldr	r0, [r7, #20]
 18741 0158 FFF7FEFF 		bl	strcat
2463:..\src/command_processing.c ****                     
2464:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 18742              		.loc 1 2464 0
 18743 015c 7869     		ldr	r0, [r7, #20]
 18744 015e FFF7FEFF 		bl	strlen
 18745 0162 0346     		mov	r3, r0
 18746 0164 1A46     		mov	r2, r3
 18747 0166 7B69     		ldr	r3, [r7, #20]
 18748 0168 1344     		add	r3, r3, r2
 18749 016a 5C4A     		ldr	r2, .L775+36
 18750 016c 1D46     		mov	r5, r3
 18751 016e 1446     		mov	r4, r2
 18752 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 18753 0172 2860     		str	r0, [r5]	@ unaligned
 18754 0174 6960     		str	r1, [r5, #4]	@ unaligned
 18755 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 18756 0178 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 415


 18757 017a 03CC     		ldmia	r4!, {r0, r1}
 18758 017c 2861     		str	r0, [r5, #16]	@ unaligned
 18759 017e 6961     		str	r1, [r5, #20]	@ unaligned
 18760 0180 2388     		ldrh	r3, [r4]	@ unaligned
 18761 0182 A278     		ldrb	r2, [r4, #2]
 18762 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 18763 0186 1346     		mov	r3, r2
 18764 0188 AB76     		strb	r3, [r5, #26]
2465:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 18765              		.loc 1 2465 0
 18766 018a D7F88430 		ldr	r3, [r7, #132]
 18767 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 18768 0192 012B     		cmp	r3, #1
 18769 0194 0CD1     		bne	.L715
2466:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 18770              		.loc 1 2466 0
 18771 0196 7869     		ldr	r0, [r7, #20]
 18772 0198 FFF7FEFF 		bl	strlen
 18773 019c 0346     		mov	r3, r0
 18774 019e 1A46     		mov	r2, r3
 18775 01a0 7B69     		ldr	r3, [r7, #20]
 18776 01a2 1344     		add	r3, r3, r2
 18777 01a4 4E4A     		ldr	r2, .L775+40
 18778 01a6 1068     		ldr	r0, [r2]	@ unaligned
 18779 01a8 1860     		str	r0, [r3]	@ unaligned
 18780 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18781 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 18782 01ae 0BE0     		b	.L716
 18783              	.L715:
2467:..\src/command_processing.c ****         else
2468:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 18784              		.loc 1 2468 0
 18785 01b0 7869     		ldr	r0, [r7, #20]
 18786 01b2 FFF7FEFF 		bl	strlen
 18787 01b6 0346     		mov	r3, r0
 18788 01b8 1A46     		mov	r2, r3
 18789 01ba 7B69     		ldr	r3, [r7, #20]
 18790 01bc 1344     		add	r3, r3, r2
 18791 01be 494A     		ldr	r2, .L775+44
 18792 01c0 1068     		ldr	r0, [r2]	@ unaligned
 18793 01c2 1860     		str	r0, [r3]	@ unaligned
 18794 01c4 1279     		ldrb	r2, [r2, #4]
 18795 01c6 1A71     		strb	r2, [r3, #4]
 18796              	.L716:
2469:..\src/command_processing.c ****         
2470:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 18797              		.loc 1 2470 0
 18798 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 18799 01cc 464A     		ldr	r2, .L775+48
 18800 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 18801 01d0 1A46     		mov	r2, r3
 18802 01d2 07F11C03 		add	r3, r7, #28
 18803 01d6 4549     		ldr	r1, .L775+52
 18804 01d8 1846     		mov	r0, r3
 18805 01da FFF7FEFF 		bl	sprintf
2471:..\src/command_processing.c ****         strcat(info_string, str);
 18806              		.loc 1 2471 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 416


 18807 01de 07F11C03 		add	r3, r7, #28
 18808 01e2 1946     		mov	r1, r3
 18809 01e4 7869     		ldr	r0, [r7, #20]
 18810 01e6 FFF7FEFF 		bl	strcat
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 18811              		.loc 1 2473 0
 18812 01ea 7869     		ldr	r0, [r7, #20]
 18813 01ec FFF7FEFF 		bl	strlen
 18814 01f0 0346     		mov	r3, r0
 18815 01f2 1A46     		mov	r2, r3
 18816 01f4 7B69     		ldr	r3, [r7, #20]
 18817 01f6 1344     		add	r3, r3, r2
 18818 01f8 3D4A     		ldr	r2, .L775+56
 18819 01fa 1C46     		mov	r4, r3
 18820 01fc 1346     		mov	r3, r2
 18821 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 18822 0200 2060     		str	r0, [r4]	@ unaligned
 18823 0202 6160     		str	r1, [r4, #4]	@ unaligned
 18824 0204 A260     		str	r2, [r4, #8]	@ unaligned
 18825 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 18826 0208 9B78     		ldrb	r3, [r3, #2]
 18827 020a A281     		strh	r2, [r4, #12]	@ unaligned
 18828 020c A373     		strb	r3, [r4, #14]
2474:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18829              		.loc 1 2474 0
 18830 020e D7F88430 		ldr	r3, [r7, #132]
 18831 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18832 0216 032B     		cmp	r3, #3
 18833 0218 74D0     		beq	.L717
2475:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 18834              		.loc 1 2475 0
 18835 021a D7F88430 		ldr	r3, [r7, #132]
 18836 021e 1B68     		ldr	r3, [r3]
 18837 0220 1846     		mov	r0, r3
 18838 0222 FFF7FEFF 		bl	__aeabi_i2d
 18839 0226 4FF00002 		mov	r2, #0
 18840 022a 324B     		ldr	r3, .L775+60
 18841 022c FFF7FEFF 		bl	__aeabi_ddiv
 18842 0230 0346     		mov	r3, r0
 18843 0232 0C46     		mov	r4, r1
 18844 0234 07F11C00 		add	r0, r7, #28
 18845 0238 1A46     		mov	r2, r3
 18846 023a 2346     		mov	r3, r4
 18847 023c 2E49     		ldr	r1, .L775+64
 18848 023e FFF7FEFF 		bl	sprintf
2476:..\src/command_processing.c ****             strcat(info_string, str);
 18849              		.loc 1 2476 0
 18850 0242 07F11C03 		add	r3, r7, #28
 18851 0246 1946     		mov	r1, r3
 18852 0248 7869     		ldr	r0, [r7, #20]
 18853 024a FFF7FEFF 		bl	strcat
2477:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 18854              		.loc 1 2477 0
 18855 024e D7F88430 		ldr	r3, [r7, #132]
 18856 0252 5B68     		ldr	r3, [r3, #4]
 18857 0254 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 417


 18858 0256 FFF7FEFF 		bl	__aeabi_i2d
 18859 025a 4FF00002 		mov	r2, #0
 18860 025e 254B     		ldr	r3, .L775+60
 18861 0260 FFF7FEFF 		bl	__aeabi_ddiv
 18862 0264 0346     		mov	r3, r0
 18863 0266 0C46     		mov	r4, r1
 18864 0268 07F11C00 		add	r0, r7, #28
 18865 026c 1A46     		mov	r2, r3
 18866 026e 2346     		mov	r3, r4
 18867 0270 2249     		ldr	r1, .L775+68
 18868 0272 FFF7FEFF 		bl	sprintf
2478:..\src/command_processing.c ****             strcat(info_string, str);
 18869              		.loc 1 2478 0
 18870 0276 07F11C03 		add	r3, r7, #28
 18871 027a 1946     		mov	r1, r3
 18872 027c 7869     		ldr	r0, [r7, #20]
 18873 027e FFF7FEFF 		bl	strcat
2479:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 18874              		.loc 1 2479 0
 18875 0282 D7F88430 		ldr	r3, [r7, #132]
 18876 0286 9B68     		ldr	r3, [r3, #8]
 18877 0288 1846     		mov	r0, r3
 18878 028a FFF7FEFF 		bl	__aeabi_i2d
 18879 028e 4FF00002 		mov	r2, #0
 18880 0292 184B     		ldr	r3, .L775+60
 18881 0294 FFF7FEFF 		bl	__aeabi_ddiv
 18882 0298 0346     		mov	r3, r0
 18883 029a 0C46     		mov	r4, r1
 18884 029c 07F11C00 		add	r0, r7, #28
 18885 02a0 1A46     		mov	r2, r3
 18886 02a2 2346     		mov	r3, r4
 18887 02a4 1649     		ldr	r1, .L775+72
 18888 02a6 FFF7FEFF 		bl	sprintf
2480:..\src/command_processing.c ****             strcat(info_string, str);
 18889              		.loc 1 2480 0
 18890 02aa 07F11C03 		add	r3, r7, #28
 18891 02ae 1946     		mov	r1, r3
 18892 02b0 7869     		ldr	r0, [r7, #20]
 18893 02b2 FFF7FEFF 		bl	strcat
 18894 02b6 73E0     		b	.L718
 18895              	.L776:
 18896              		.align	2
 18897              	.L775:
 18898 02b8 00000000 		.word	g_mem
 18899 02bc 48110000 		.word	.LC153
 18900 02c0 AC1D0000 		.word	.LC283
 18901 02c4 84110000 		.word	.LC156
 18902 02c8 34120000 		.word	.LC162
 18903 02cc 48120000 		.word	.LC163
 18904 02d0 F01B0000 		.word	.LC271
 18905 02d4 1C1C0000 		.word	.LC272
 18906 02d8 94120000 		.word	.LC167
 18907 02dc 04130000 		.word	.LC176
 18908 02e0 F4120000 		.word	.LC174
 18909 02e4 FC120000 		.word	.LC175
 18910 02e8 00000000 		.word	dev_pwm_limit
 18911 02ec 2C130000 		.word	.LC179
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 418


 18912 02f0 C41D0000 		.word	.LC284
 18913 02f4 0000F040 		.word	1089470464
 18914 02f8 44140000 		.word	.LC191
 18915 02fc 50140000 		.word	.LC192
 18916 0300 5C140000 		.word	.LC193
 18917              	.L717:
2481:..\src/command_processing.c ****         }
2482:..\src/command_processing.c ****         else { 
2483:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 18918              		.loc 1 2483 0
 18919 0304 D7F88430 		ldr	r3, [r7, #132]
 18920 0308 9B69     		ldr	r3, [r3, #24]
 18921 030a 1846     		mov	r0, r3
 18922 030c FFF7FEFF 		bl	__aeabi_i2d
 18923 0310 4FF00002 		mov	r2, #0
 18924 0314 CC4B     		ldr	r3, .L777
 18925 0316 FFF7FEFF 		bl	__aeabi_ddiv
 18926 031a 0346     		mov	r3, r0
 18927 031c 0C46     		mov	r4, r1
 18928 031e 07F11C00 		add	r0, r7, #28
 18929 0322 1A46     		mov	r2, r3
 18930 0324 2346     		mov	r3, r4
 18931 0326 C949     		ldr	r1, .L777+4
 18932 0328 FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****             strcat(info_string, str);
 18933              		.loc 1 2484 0
 18934 032c 07F11C03 		add	r3, r7, #28
 18935 0330 1946     		mov	r1, r3
 18936 0332 7869     		ldr	r0, [r7, #20]
 18937 0334 FFF7FEFF 		bl	strcat
2485:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 18938              		.loc 1 2485 0
 18939 0338 D7F88430 		ldr	r3, [r7, #132]
 18940 033c DB69     		ldr	r3, [r3, #28]
 18941 033e 1846     		mov	r0, r3
 18942 0340 FFF7FEFF 		bl	__aeabi_i2d
 18943 0344 4FF00002 		mov	r2, #0
 18944 0348 BF4B     		ldr	r3, .L777
 18945 034a FFF7FEFF 		bl	__aeabi_ddiv
 18946 034e 0346     		mov	r3, r0
 18947 0350 0C46     		mov	r4, r1
 18948 0352 07F11C00 		add	r0, r7, #28
 18949 0356 1A46     		mov	r2, r3
 18950 0358 2346     		mov	r3, r4
 18951 035a BD49     		ldr	r1, .L777+8
 18952 035c FFF7FEFF 		bl	sprintf
2486:..\src/command_processing.c ****             strcat(info_string, str);
 18953              		.loc 1 2486 0
 18954 0360 07F11C03 		add	r3, r7, #28
 18955 0364 1946     		mov	r1, r3
 18956 0366 7869     		ldr	r0, [r7, #20]
 18957 0368 FFF7FEFF 		bl	strcat
2487:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 18958              		.loc 1 2487 0
 18959 036c D7F88430 		ldr	r3, [r7, #132]
 18960 0370 1B6A     		ldr	r3, [r3, #32]
 18961 0372 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 419


 18962 0374 FFF7FEFF 		bl	__aeabi_i2d
 18963 0378 4FF00002 		mov	r2, #0
 18964 037c B24B     		ldr	r3, .L777
 18965 037e FFF7FEFF 		bl	__aeabi_ddiv
 18966 0382 0346     		mov	r3, r0
 18967 0384 0C46     		mov	r4, r1
 18968 0386 07F11C00 		add	r0, r7, #28
 18969 038a 1A46     		mov	r2, r3
 18970 038c 2346     		mov	r3, r4
 18971 038e B149     		ldr	r1, .L777+12
 18972 0390 FFF7FEFF 		bl	sprintf
2488:..\src/command_processing.c ****             strcat(info_string, str);
 18973              		.loc 1 2488 0
 18974 0394 07F11C03 		add	r3, r7, #28
 18975 0398 1946     		mov	r1, r3
 18976 039a 7869     		ldr	r0, [r7, #20]
 18977 039c FFF7FEFF 		bl	strcat
 18978              	.L718:
2489:..\src/command_processing.c ****         }
2490:..\src/command_processing.c **** 
2491:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 18979              		.loc 1 2491 0
 18980 03a0 7869     		ldr	r0, [r7, #20]
 18981 03a2 FFF7FEFF 		bl	strlen
 18982 03a6 0346     		mov	r3, r0
 18983 03a8 1A46     		mov	r2, r3
 18984 03aa 7B69     		ldr	r3, [r7, #20]
 18985 03ac 1344     		add	r3, r3, r2
 18986 03ae AA4A     		ldr	r2, .L777+16
 18987 03b0 1C46     		mov	r4, r3
 18988 03b2 1346     		mov	r3, r2
 18989 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 18990 03b6 2060     		str	r0, [r4]	@ unaligned
 18991 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 18992 03ba A260     		str	r2, [r4, #8]	@ unaligned
 18993 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 18994 03be A381     		strh	r3, [r4, #12]	@ unaligned
2492:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 18995              		.loc 1 2492 0
 18996 03c0 D7F88430 		ldr	r3, [r7, #132]
 18997 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 18998 03c8 032B     		cmp	r3, #3
 18999 03ca 4ED0     		beq	.L719
2493:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 19000              		.loc 1 2493 0
 19001 03cc D7F88430 		ldr	r3, [r7, #132]
 19002 03d0 DB68     		ldr	r3, [r3, #12]
 19003 03d2 1846     		mov	r0, r3
 19004 03d4 FFF7FEFF 		bl	__aeabi_i2d
 19005 03d8 4FF00002 		mov	r2, #0
 19006 03dc 9A4B     		ldr	r3, .L777
 19007 03de FFF7FEFF 		bl	__aeabi_ddiv
 19008 03e2 0346     		mov	r3, r0
 19009 03e4 0C46     		mov	r4, r1
 19010 03e6 07F11C00 		add	r0, r7, #28
 19011 03ea 1A46     		mov	r2, r3
 19012 03ec 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 420


 19013 03ee 9749     		ldr	r1, .L777+4
 19014 03f0 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****             strcat(info_string, str);
 19015              		.loc 1 2494 0
 19016 03f4 07F11C03 		add	r3, r7, #28
 19017 03f8 1946     		mov	r1, r3
 19018 03fa 7869     		ldr	r0, [r7, #20]
 19019 03fc FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 19020              		.loc 1 2495 0
 19021 0400 D7F88430 		ldr	r3, [r7, #132]
 19022 0404 1B69     		ldr	r3, [r3, #16]
 19023 0406 1846     		mov	r0, r3
 19024 0408 FFF7FEFF 		bl	__aeabi_i2d
 19025 040c 4FF00002 		mov	r2, #0
 19026 0410 8D4B     		ldr	r3, .L777
 19027 0412 FFF7FEFF 		bl	__aeabi_ddiv
 19028 0416 0346     		mov	r3, r0
 19029 0418 0C46     		mov	r4, r1
 19030 041a 07F11C00 		add	r0, r7, #28
 19031 041e 1A46     		mov	r2, r3
 19032 0420 2346     		mov	r3, r4
 19033 0422 8B49     		ldr	r1, .L777+8
 19034 0424 FFF7FEFF 		bl	sprintf
2496:..\src/command_processing.c ****             strcat(info_string, str);
 19035              		.loc 1 2496 0
 19036 0428 07F11C03 		add	r3, r7, #28
 19037 042c 1946     		mov	r1, r3
 19038 042e 7869     		ldr	r0, [r7, #20]
 19039 0430 FFF7FEFF 		bl	strcat
2497:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 19040              		.loc 1 2497 0
 19041 0434 D7F88430 		ldr	r3, [r7, #132]
 19042 0438 5B69     		ldr	r3, [r3, #20]
 19043 043a 1846     		mov	r0, r3
 19044 043c FFF7FEFF 		bl	__aeabi_i2d
 19045 0440 4FF00002 		mov	r2, #0
 19046 0444 804B     		ldr	r3, .L777
 19047 0446 FFF7FEFF 		bl	__aeabi_ddiv
 19048 044a 0346     		mov	r3, r0
 19049 044c 0C46     		mov	r4, r1
 19050 044e 07F11C00 		add	r0, r7, #28
 19051 0452 1A46     		mov	r2, r3
 19052 0454 2346     		mov	r3, r4
 19053 0456 7F49     		ldr	r1, .L777+12
 19054 0458 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****             strcat(info_string, str);
 19055              		.loc 1 2498 0
 19056 045c 07F11C03 		add	r3, r7, #28
 19057 0460 1946     		mov	r1, r3
 19058 0462 7869     		ldr	r0, [r7, #20]
 19059 0464 FFF7FEFF 		bl	strcat
 19060 0468 4DE0     		b	.L720
 19061              	.L719:
2499:..\src/command_processing.c **** 
2500:..\src/command_processing.c ****         }
2501:..\src/command_processing.c ****         else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 421


2502:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 19062              		.loc 1 2502 0
 19063 046a D7F88430 		ldr	r3, [r7, #132]
 19064 046e 5B6A     		ldr	r3, [r3, #36]
 19065 0470 1846     		mov	r0, r3
 19066 0472 FFF7FEFF 		bl	__aeabi_i2d
 19067 0476 4FF00002 		mov	r2, #0
 19068 047a 734B     		ldr	r3, .L777
 19069 047c FFF7FEFF 		bl	__aeabi_ddiv
 19070 0480 0346     		mov	r3, r0
 19071 0482 0C46     		mov	r4, r1
 19072 0484 07F11C00 		add	r0, r7, #28
 19073 0488 1A46     		mov	r2, r3
 19074 048a 2346     		mov	r3, r4
 19075 048c 6F49     		ldr	r1, .L777+4
 19076 048e FFF7FEFF 		bl	sprintf
2503:..\src/command_processing.c ****             strcat(info_string, str);
 19077              		.loc 1 2503 0
 19078 0492 07F11C03 		add	r3, r7, #28
 19079 0496 1946     		mov	r1, r3
 19080 0498 7869     		ldr	r0, [r7, #20]
 19081 049a FFF7FEFF 		bl	strcat
2504:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 19082              		.loc 1 2504 0
 19083 049e D7F88430 		ldr	r3, [r7, #132]
 19084 04a2 9B6A     		ldr	r3, [r3, #40]
 19085 04a4 1846     		mov	r0, r3
 19086 04a6 FFF7FEFF 		bl	__aeabi_i2d
 19087 04aa 4FF00002 		mov	r2, #0
 19088 04ae 664B     		ldr	r3, .L777
 19089 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 19090 04b4 0346     		mov	r3, r0
 19091 04b6 0C46     		mov	r4, r1
 19092 04b8 07F11C00 		add	r0, r7, #28
 19093 04bc 1A46     		mov	r2, r3
 19094 04be 2346     		mov	r3, r4
 19095 04c0 6349     		ldr	r1, .L777+8
 19096 04c2 FFF7FEFF 		bl	sprintf
2505:..\src/command_processing.c ****             strcat(info_string, str);
 19097              		.loc 1 2505 0
 19098 04c6 07F11C03 		add	r3, r7, #28
 19099 04ca 1946     		mov	r1, r3
 19100 04cc 7869     		ldr	r0, [r7, #20]
 19101 04ce FFF7FEFF 		bl	strcat
2506:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 19102              		.loc 1 2506 0
 19103 04d2 D7F88430 		ldr	r3, [r7, #132]
 19104 04d6 DB6A     		ldr	r3, [r3, #44]
 19105 04d8 1846     		mov	r0, r3
 19106 04da FFF7FEFF 		bl	__aeabi_i2d
 19107 04de 4FF00002 		mov	r2, #0
 19108 04e2 594B     		ldr	r3, .L777
 19109 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 19110 04e8 0346     		mov	r3, r0
 19111 04ea 0C46     		mov	r4, r1
 19112 04ec 07F11C00 		add	r0, r7, #28
 19113 04f0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 422


 19114 04f2 2346     		mov	r3, r4
 19115 04f4 5749     		ldr	r1, .L777+12
 19116 04f6 FFF7FEFF 		bl	sprintf
2507:..\src/command_processing.c ****             strcat(info_string, str);
 19117              		.loc 1 2507 0
 19118 04fa 07F11C03 		add	r3, r7, #28
 19119 04fe 1946     		mov	r1, r3
 19120 0500 7869     		ldr	r0, [r7, #20]
 19121 0502 FFF7FEFF 		bl	strcat
 19122              	.L720:
2508:..\src/command_processing.c ****         }
2509:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 19123              		.loc 1 2509 0
 19124 0506 D7F88430 		ldr	r3, [r7, #132]
 19125 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 19126 050e 012B     		cmp	r3, #1
 19127 0510 14D1     		bne	.L721
2510:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 19128              		.loc 1 2510 0
 19129 0512 7869     		ldr	r0, [r7, #20]
 19130 0514 FFF7FEFF 		bl	strlen
 19131 0518 0346     		mov	r3, r0
 19132 051a 1A46     		mov	r2, r3
 19133 051c 7B69     		ldr	r3, [r7, #20]
 19134 051e 1344     		add	r3, r3, r2
 19135 0520 4E4A     		ldr	r2, .L777+20
 19136 0522 1D46     		mov	r5, r3
 19137 0524 1446     		mov	r4, r2
 19138 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19139 0528 2860     		str	r0, [r5]	@ unaligned
 19140 052a 6960     		str	r1, [r5, #4]	@ unaligned
 19141 052c AA60     		str	r2, [r5, #8]	@ unaligned
 19142 052e EB60     		str	r3, [r5, #12]	@ unaligned
 19143 0530 03CC     		ldmia	r4!, {r0, r1}
 19144 0532 2861     		str	r0, [r5, #16]	@ unaligned
 19145 0534 6961     		str	r1, [r5, #20]	@ unaligned
 19146 0536 2388     		ldrh	r3, [r4]	@ unaligned
 19147 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 19148 053a 13E0     		b	.L722
 19149              	.L721:
2511:..\src/command_processing.c ****         else
2512:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 19150              		.loc 1 2512 0
 19151 053c 7869     		ldr	r0, [r7, #20]
 19152 053e FFF7FEFF 		bl	strlen
 19153 0542 0346     		mov	r3, r0
 19154 0544 1A46     		mov	r2, r3
 19155 0546 7B69     		ldr	r3, [r7, #20]
 19156 0548 1344     		add	r3, r3, r2
 19157 054a 454A     		ldr	r2, .L777+24
 19158 054c 1D46     		mov	r5, r3
 19159 054e 1446     		mov	r4, r2
 19160 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19161 0552 2860     		str	r0, [r5]	@ unaligned
 19162 0554 6960     		str	r1, [r5, #4]	@ unaligned
 19163 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 19164 0558 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 423


 19165 055a 03CC     		ldmia	r4!, {r0, r1}
 19166 055c 2861     		str	r0, [r5, #16]	@ unaligned
 19167 055e 6961     		str	r1, [r5, #20]	@ unaligned
 19168 0560 2378     		ldrb	r3, [r4]
 19169 0562 2B76     		strb	r3, [r5, #24]
 19170              	.L722:
2513:..\src/command_processing.c **** 
2514:..\src/command_processing.c ****         switch(MOT->input_mode) {
 19171              		.loc 1 2514 0
 19172 0564 D7F88430 		ldr	r3, [r7, #132]
 19173 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19174 056c 072B     		cmp	r3, #7
 19175 056e 00F2EA80 		bhi	.L723
 19176 0572 01A2     		adr	r2, .L725
 19177 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19178              		.p2align 2
 19179              	.L725:
 19180 0578 99050000 		.word	.L724+1
 19181 057c BD050000 		.word	.L726+1
 19182 0580 E5050000 		.word	.L727+1
 19183 0584 17060000 		.word	.L728+1
 19184 0588 75060000 		.word	.L729+1
 19185 058c A3060000 		.word	.L730+1
 19186 0590 D3060000 		.word	.L731+1
 19187 0594 01070000 		.word	.L732+1
 19188              		.p2align 1
 19189              	.L724:
2515:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2516:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 19190              		.loc 1 2516 0
 19191 0598 7869     		ldr	r0, [r7, #20]
 19192 059a FFF7FEFF 		bl	strlen
 19193 059e 0346     		mov	r3, r0
 19194 05a0 1A46     		mov	r2, r3
 19195 05a2 7B69     		ldr	r3, [r7, #20]
 19196 05a4 1344     		add	r3, r3, r2
 19197 05a6 2F4A     		ldr	r2, .L777+28
 19198 05a8 1D46     		mov	r5, r3
 19199 05aa 1446     		mov	r4, r2
 19200 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19201 05ae 2860     		str	r0, [r5]	@ unaligned
 19202 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 19203 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 19204 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 19205 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 19206 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2517:..\src/command_processing.c ****                 break;
 19207              		.loc 1 2517 0
 19208 05ba C4E0     		b	.L723
 19209              	.L726:
2518:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2519:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 19210              		.loc 1 2519 0
 19211 05bc 7869     		ldr	r0, [r7, #20]
 19212 05be FFF7FEFF 		bl	strlen
 19213 05c2 0346     		mov	r3, r0
 19214 05c4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 424


 19215 05c6 7B69     		ldr	r3, [r7, #20]
 19216 05c8 1344     		add	r3, r3, r2
 19217 05ca 274A     		ldr	r2, .L777+32
 19218 05cc 1D46     		mov	r5, r3
 19219 05ce 1446     		mov	r4, r2
 19220 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19221 05d2 2860     		str	r0, [r5]	@ unaligned
 19222 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 19223 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 19224 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 19225 05da 2068     		ldr	r0, [r4]	@ unaligned
 19226 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 19227 05de 2379     		ldrb	r3, [r4, #4]
 19228 05e0 2B75     		strb	r3, [r5, #20]
2520:..\src/command_processing.c ****                 break;
 19229              		.loc 1 2520 0
 19230 05e2 B0E0     		b	.L723
 19231              	.L727:
2521:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2522:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 19232              		.loc 1 2522 0
 19233 05e4 7869     		ldr	r0, [r7, #20]
 19234 05e6 FFF7FEFF 		bl	strlen
 19235 05ea 0346     		mov	r3, r0
 19236 05ec 1A46     		mov	r2, r3
 19237 05ee 7B69     		ldr	r3, [r7, #20]
 19238 05f0 1344     		add	r3, r3, r2
 19239 05f2 1E4A     		ldr	r2, .L777+36
 19240 05f4 1D46     		mov	r5, r3
 19241 05f6 1446     		mov	r4, r2
 19242 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19243 05fa 2860     		str	r0, [r5]	@ unaligned
 19244 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 19245 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 19246 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 19247 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 19248 0604 2861     		str	r0, [r5, #16]	@ unaligned
 19249 0606 6961     		str	r1, [r5, #20]	@ unaligned
 19250 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 19251 060a 2388     		ldrh	r3, [r4]	@ unaligned
 19252 060c A278     		ldrb	r2, [r4, #2]
 19253 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 19254 0610 1346     		mov	r3, r2
 19255 0612 AB77     		strb	r3, [r5, #30]
2523:..\src/command_processing.c ****                 break;
 19256              		.loc 1 2523 0
 19257 0614 97E0     		b	.L723
 19258              	.L728:
2524:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2525:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 19259              		.loc 1 2525 0
 19260 0616 7869     		ldr	r0, [r7, #20]
 19261 0618 FFF7FEFF 		bl	strlen
 19262 061c 0346     		mov	r3, r0
 19263 061e 1A46     		mov	r2, r3
 19264 0620 7B69     		ldr	r3, [r7, #20]
 19265 0622 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 425


 19266 0624 124A     		ldr	r2, .L777+40
 19267 0626 1D46     		mov	r5, r3
 19268 0628 1446     		mov	r4, r2
 19269 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19270 062c 2860     		str	r0, [r5]	@ unaligned
 19271 062e 6960     		str	r1, [r5, #4]	@ unaligned
 19272 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 19273 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 19274 0634 03CC     		ldmia	r4!, {r0, r1}
 19275 0636 2861     		str	r0, [r5, #16]	@ unaligned
 19276 0638 6961     		str	r1, [r5, #20]	@ unaligned
 19277 063a 2388     		ldrh	r3, [r4]	@ unaligned
 19278 063c A278     		ldrb	r2, [r4, #2]
 19279 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 19280 0640 1346     		mov	r3, r2
 19281 0642 AB76     		strb	r3, [r5, #26]
2526:..\src/command_processing.c ****                 break;
 19282              		.loc 1 2526 0
 19283 0644 7FE0     		b	.L723
 19284              	.L778:
 19285 0646 00BF     		.align	2
 19286              	.L777:
 19287 0648 0000F040 		.word	1089470464
 19288 064c 44140000 		.word	.LC191
 19289 0650 50140000 		.word	.LC192
 19290 0654 5C140000 		.word	.LC193
 19291 0658 D41D0000 		.word	.LC285
 19292 065c 84140000 		.word	.LC195
 19293 0660 A0140000 		.word	.LC196
 19294 0664 BC140000 		.word	.LC197
 19295 0668 D0140000 		.word	.LC198
 19296 066c E8140000 		.word	.LC199
 19297 0670 08150000 		.word	.LC200
 19298              	.L729:
2527:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2528:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 19299              		.loc 1 2528 0
 19300 0674 7869     		ldr	r0, [r7, #20]
 19301 0676 FFF7FEFF 		bl	strlen
 19302 067a 0346     		mov	r3, r0
 19303 067c 1A46     		mov	r2, r3
 19304 067e 7B69     		ldr	r3, [r7, #20]
 19305 0680 1344     		add	r3, r3, r2
 19306 0682 BA4A     		ldr	r2, .L779
 19307 0684 1C46     		mov	r4, r3
 19308 0686 1546     		mov	r5, r2
 19309 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19310 068a 2060     		str	r0, [r4]	@ unaligned
 19311 068c 6160     		str	r1, [r4, #4]	@ unaligned
 19312 068e A260     		str	r2, [r4, #8]	@ unaligned
 19313 0690 E360     		str	r3, [r4, #12]	@ unaligned
 19314 0692 2868     		ldr	r0, [r5]	@ unaligned
 19315 0694 2061     		str	r0, [r4, #16]	@ unaligned
 19316 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19317 0698 AA79     		ldrb	r2, [r5, #6]
 19318 069a A382     		strh	r3, [r4, #20]	@ unaligned
 19319 069c 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 426


 19320 069e A375     		strb	r3, [r4, #22]
2529:..\src/command_processing.c ****                 break;
 19321              		.loc 1 2529 0
 19322 06a0 51E0     		b	.L723
 19323              	.L730:
2530:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2531:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 19324              		.loc 1 2531 0
 19325 06a2 7869     		ldr	r0, [r7, #20]
 19326 06a4 FFF7FEFF 		bl	strlen
 19327 06a8 0346     		mov	r3, r0
 19328 06aa 1A46     		mov	r2, r3
 19329 06ac 7B69     		ldr	r3, [r7, #20]
 19330 06ae 1344     		add	r3, r3, r2
 19331 06b0 AF4A     		ldr	r2, .L779+4
 19332 06b2 1D46     		mov	r5, r3
 19333 06b4 1446     		mov	r4, r2
 19334 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19335 06b8 2860     		str	r0, [r5]	@ unaligned
 19336 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 19337 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 19338 06be EB60     		str	r3, [r5, #12]	@ unaligned
 19339 06c0 03CC     		ldmia	r4!, {r0, r1}
 19340 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 19341 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 19342 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 19343 06c8 A278     		ldrb	r2, [r4, #2]
 19344 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 19345 06cc 1346     		mov	r3, r2
 19346 06ce AB76     		strb	r3, [r5, #26]
2532:..\src/command_processing.c ****                 break;
 19347              		.loc 1 2532 0
 19348 06d0 39E0     		b	.L723
 19349              	.L731:
2533:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2534:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 19350              		.loc 1 2534 0
 19351 06d2 7869     		ldr	r0, [r7, #20]
 19352 06d4 FFF7FEFF 		bl	strlen
 19353 06d8 0346     		mov	r3, r0
 19354 06da 1A46     		mov	r2, r3
 19355 06dc 7B69     		ldr	r3, [r7, #20]
 19356 06de 1344     		add	r3, r3, r2
 19357 06e0 A44A     		ldr	r2, .L779+8
 19358 06e2 1C46     		mov	r4, r3
 19359 06e4 1546     		mov	r5, r2
 19360 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19361 06e8 2060     		str	r0, [r4]	@ unaligned
 19362 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 19363 06ec A260     		str	r2, [r4, #8]	@ unaligned
 19364 06ee E360     		str	r3, [r4, #12]	@ unaligned
 19365 06f0 2868     		ldr	r0, [r5]	@ unaligned
 19366 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 19367 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 19368 06f6 AA79     		ldrb	r2, [r5, #6]
 19369 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 19370 06fa 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 427


 19371 06fc A375     		strb	r3, [r4, #22]
2535:..\src/command_processing.c ****                 break;
 19372              		.loc 1 2535 0
 19373 06fe 22E0     		b	.L723
 19374              	.L732:
2536:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2537:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 19375              		.loc 1 2537 0
 19376 0700 7869     		ldr	r0, [r7, #20]
 19377 0702 FFF7FEFF 		bl	strlen
 19378 0706 0346     		mov	r3, r0
 19379 0708 1A46     		mov	r2, r3
 19380 070a 7B69     		ldr	r3, [r7, #20]
 19381 070c 1344     		add	r3, r3, r2
 19382 070e 9A4A     		ldr	r2, .L779+12
 19383 0710 1546     		mov	r5, r2
 19384 0712 9E46     		mov	lr, r3
 19385 0714 05F1200C 		add	ip, r5, #32
 19386              	.L733:
 19387 0718 7446     		mov	r4, lr
 19388 071a 2E46     		mov	r6, r5
 19389 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19390 071e 2060     		str	r0, [r4]	@ unaligned
 19391 0720 6160     		str	r1, [r4, #4]	@ unaligned
 19392 0722 A260     		str	r2, [r4, #8]	@ unaligned
 19393 0724 E360     		str	r3, [r4, #12]	@ unaligned
 19394 0726 1035     		adds	r5, r5, #16
 19395 0728 0EF1100E 		add	lr, lr, #16
 19396 072c 6545     		cmp	r5, ip
 19397 072e F3D1     		bne	.L733
 19398 0730 7446     		mov	r4, lr
 19399 0732 2B46     		mov	r3, r5
 19400 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 19401 0736 2060     		str	r0, [r4]	@ unaligned
 19402 0738 6160     		str	r1, [r4, #4]	@ unaligned
 19403 073a A260     		str	r2, [r4, #8]	@ unaligned
 19404 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 19405 073e 9B78     		ldrb	r3, [r3, #2]
 19406 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 19407 0742 A373     		strb	r3, [r4, #14]
2538:..\src/command_processing.c ****                 break;
 19408              		.loc 1 2538 0
 19409 0744 00BF     		nop
 19410              	.L723:
2539:..\src/command_processing.c ****         }
2540:..\src/command_processing.c **** 
2541:..\src/command_processing.c ****         switch(MOT->control_mode) {
 19411              		.loc 1 2541 0
 19412 0746 D7F88430 		ldr	r3, [r7, #132]
 19413 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 19414 074e 032B     		cmp	r3, #3
 19415 0750 63D8     		bhi	.L773
 19416 0752 01A2     		adr	r2, .L736
 19417 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 19418              		.p2align 2
 19419              	.L736:
 19420 0758 69070000 		.word	.L735+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 428


 19421 075c 93070000 		.word	.L737+1
 19422 0760 B7070000 		.word	.L738+1
 19423 0764 DD070000 		.word	.L739+1
 19424              		.p2align 1
 19425              	.L735:
2542:..\src/command_processing.c ****             case CONTROL_ANGLE:
2543:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 19426              		.loc 1 2543 0
 19427 0768 7869     		ldr	r0, [r7, #20]
 19428 076a FFF7FEFF 		bl	strlen
 19429 076e 0346     		mov	r3, r0
 19430 0770 1A46     		mov	r2, r3
 19431 0772 7B69     		ldr	r3, [r7, #20]
 19432 0774 1344     		add	r3, r3, r2
 19433 0776 814A     		ldr	r2, .L779+16
 19434 0778 1D46     		mov	r5, r3
 19435 077a 1446     		mov	r4, r2
 19436 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19437 077e 2860     		str	r0, [r5]	@ unaligned
 19438 0780 6960     		str	r1, [r5, #4]	@ unaligned
 19439 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 19440 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 19441 0786 03CC     		ldmia	r4!, {r0, r1}
 19442 0788 2861     		str	r0, [r5, #16]	@ unaligned
 19443 078a 6961     		str	r1, [r5, #20]	@ unaligned
 19444 078c 2378     		ldrb	r3, [r4]
 19445 078e 2B76     		strb	r3, [r5, #24]
2544:..\src/command_processing.c ****                 break;
 19446              		.loc 1 2544 0
 19447 0790 44E0     		b	.L740
 19448              	.L737:
2545:..\src/command_processing.c ****             case CONTROL_PWM:
2546:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 19449              		.loc 1 2546 0
 19450 0792 7869     		ldr	r0, [r7, #20]
 19451 0794 FFF7FEFF 		bl	strlen
 19452 0798 0346     		mov	r3, r0
 19453 079a 1A46     		mov	r2, r3
 19454 079c 7B69     		ldr	r3, [r7, #20]
 19455 079e 1344     		add	r3, r3, r2
 19456 07a0 774A     		ldr	r2, .L779+20
 19457 07a2 1D46     		mov	r5, r3
 19458 07a4 1446     		mov	r4, r2
 19459 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19460 07a8 2860     		str	r0, [r5]	@ unaligned
 19461 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 19462 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 19463 07ae EB60     		str	r3, [r5, #12]	@ unaligned
 19464 07b0 2068     		ldr	r0, [r4]	@ unaligned
 19465 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2547:..\src/command_processing.c ****                 break;
 19466              		.loc 1 2547 0
 19467 07b4 32E0     		b	.L740
 19468              	.L738:
2548:..\src/command_processing.c ****             case CONTROL_CURRENT:
2549:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 19469              		.loc 1 2549 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 429


 19470 07b6 7869     		ldr	r0, [r7, #20]
 19471 07b8 FFF7FEFF 		bl	strlen
 19472 07bc 0346     		mov	r3, r0
 19473 07be 1A46     		mov	r2, r3
 19474 07c0 7B69     		ldr	r3, [r7, #20]
 19475 07c2 1344     		add	r3, r3, r2
 19476 07c4 6F4A     		ldr	r2, .L779+24
 19477 07c6 1D46     		mov	r5, r3
 19478 07c8 1446     		mov	r4, r2
 19479 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 19480 07cc 2860     		str	r0, [r5]	@ unaligned
 19481 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 19482 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 19483 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 19484 07d4 03CC     		ldmia	r4!, {r0, r1}
 19485 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 19486 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2550:..\src/command_processing.c ****                 break;
 19487              		.loc 1 2550 0
 19488 07da 1FE0     		b	.L740
 19489              	.L739:
2551:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2552:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 19490              		.loc 1 2552 0
 19491 07dc 7869     		ldr	r0, [r7, #20]
 19492 07de FFF7FEFF 		bl	strlen
 19493 07e2 0346     		mov	r3, r0
 19494 07e4 1A46     		mov	r2, r3
 19495 07e6 7B69     		ldr	r3, [r7, #20]
 19496 07e8 1344     		add	r3, r3, r2
 19497 07ea 674A     		ldr	r2, .L779+28
 19498 07ec 1446     		mov	r4, r2
 19499 07ee 9E46     		mov	lr, r3
 19500 07f0 04F1200C 		add	ip, r4, #32
 19501              	.L741:
 19502 07f4 7546     		mov	r5, lr
 19503 07f6 2646     		mov	r6, r4
 19504 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19505 07fa 2860     		str	r0, [r5]	@ unaligned
 19506 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 19507 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 19508 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 19509 0802 1034     		adds	r4, r4, #16
 19510 0804 0EF1100E 		add	lr, lr, #16
 19511 0808 6445     		cmp	r4, ip
 19512 080a F3D1     		bne	.L741
 19513 080c 7346     		mov	r3, lr
 19514 080e 2246     		mov	r2, r4
 19515 0810 1068     		ldr	r0, [r2]	@ unaligned
 19516 0812 1860     		str	r0, [r3]	@ unaligned
 19517 0814 1279     		ldrb	r2, [r2, #4]
 19518 0816 1A71     		strb	r2, [r3, #4]
2553:..\src/command_processing.c ****                 break;
 19519              		.loc 1 2553 0
 19520 0818 00E0     		b	.L740
 19521              	.L773:
2554:..\src/command_processing.c ****             default:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 430


2555:..\src/command_processing.c ****                 break;
 19522              		.loc 1 2555 0
 19523 081a 00BF     		nop
 19524              	.L740:
2556:..\src/command_processing.c ****         }
2557:..\src/command_processing.c **** 
2558:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 19525              		.loc 1 2558 0
 19526 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19527 0820 D7F88C10 		ldr	r1, [r7, #140]
 19528 0824 1346     		mov	r3, r2
 19529 0826 5B00     		lsls	r3, r3, #1
 19530 0828 1344     		add	r3, r3, r2
 19531 082a 1B01     		lsls	r3, r3, #4
 19532 082c 0B44     		add	r3, r3, r1
 19533 082e 03F5D873 		add	r3, r3, #432
 19534 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19535 0834 002B     		cmp	r3, #0
 19536 0836 1CD0     		beq	.L742
2559:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 19537              		.loc 1 2559 0
 19538 0838 7869     		ldr	r0, [r7, #20]
 19539 083a FFF7FEFF 		bl	strlen
 19540 083e 0346     		mov	r3, r0
 19541 0840 1A46     		mov	r2, r3
 19542 0842 7B69     		ldr	r3, [r7, #20]
 19543 0844 1344     		add	r3, r3, r2
 19544 0846 514A     		ldr	r2, .L779+32
 19545 0848 1446     		mov	r4, r2
 19546 084a 9E46     		mov	lr, r3
 19547 084c 04F1200C 		add	ip, r4, #32
 19548              	.L743:
 19549 0850 7546     		mov	r5, lr
 19550 0852 2646     		mov	r6, r4
 19551 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 19552 0856 2860     		str	r0, [r5]	@ unaligned
 19553 0858 6960     		str	r1, [r5, #4]	@ unaligned
 19554 085a AA60     		str	r2, [r5, #8]	@ unaligned
 19555 085c EB60     		str	r3, [r5, #12]	@ unaligned
 19556 085e 1034     		adds	r4, r4, #16
 19557 0860 0EF1100E 		add	lr, lr, #16
 19558 0864 6445     		cmp	r4, ip
 19559 0866 F3D1     		bne	.L743
 19560 0868 7346     		mov	r3, lr
 19561 086a 2246     		mov	r2, r4
 19562 086c 1278     		ldrb	r2, [r2]
 19563 086e 1A70     		strb	r2, [r3]
 19564 0870 13E0     		b	.L744
 19565              	.L742:
2560:..\src/command_processing.c ****         else
2561:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 19566              		.loc 1 2561 0
 19567 0872 7869     		ldr	r0, [r7, #20]
 19568 0874 FFF7FEFF 		bl	strlen
 19569 0878 0346     		mov	r3, r0
 19570 087a 1A46     		mov	r2, r3
 19571 087c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 431


 19572 087e 1344     		add	r3, r3, r2
 19573 0880 434A     		ldr	r2, .L779+36
 19574 0882 1C46     		mov	r4, r3
 19575 0884 1546     		mov	r5, r2
 19576 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19577 0888 2060     		str	r0, [r4]	@ unaligned
 19578 088a 6160     		str	r1, [r4, #4]	@ unaligned
 19579 088c A260     		str	r2, [r4, #8]	@ unaligned
 19580 088e E360     		str	r3, [r4, #12]	@ unaligned
 19581 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 19582 0892 2061     		str	r0, [r4, #16]	@ unaligned
 19583 0894 6161     		str	r1, [r4, #20]	@ unaligned
 19584 0896 A261     		str	r2, [r4, #24]	@ unaligned
 19585 0898 E361     		str	r3, [r4, #28]	@ unaligned
 19586              	.L744:
2562:..\src/command_processing.c **** 
2563:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 19587              		.loc 1 2563 0
 19588 089a 7869     		ldr	r0, [r7, #20]
 19589 089c FFF7FEFF 		bl	strlen
 19590 08a0 0346     		mov	r3, r0
 19591 08a2 1A46     		mov	r2, r3
 19592 08a4 7B69     		ldr	r3, [r7, #20]
 19593 08a6 1344     		add	r3, r3, r2
 19594 08a8 3A4A     		ldr	r2, .L779+40
 19595 08aa 1C46     		mov	r4, r3
 19596 08ac 1346     		mov	r3, r2
 19597 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 19598 08b0 2060     		str	r0, [r4]	@ unaligned
 19599 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 19600 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 19601 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 19602 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2564:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19603              		.loc 1 2564 0
 19604 08ba 0023     		movs	r3, #0
 19605 08bc C7F89430 		str	r3, [r7, #148]
 19606 08c0 30E0     		b	.L745
 19607              	.L747:
2565:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19608              		.loc 1 2565 0
 19609 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19610 08c6 D7F88C10 		ldr	r1, [r7, #140]
 19611 08ca 1346     		mov	r3, r2
 19612 08cc 5B00     		lsls	r3, r3, #1
 19613 08ce 1344     		add	r3, r3, r2
 19614 08d0 1B01     		lsls	r3, r3, #4
 19615 08d2 CA18     		adds	r2, r1, r3
 19616 08d4 D7F89430 		ldr	r3, [r7, #148]
 19617 08d8 1344     		add	r3, r3, r2
 19618 08da 03F29513 		addw	r3, r3, #405
 19619 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19620 08e0 1A46     		mov	r2, r3
 19621 08e2 07F11C03 		add	r3, r7, #28
 19622 08e6 2C49     		ldr	r1, .L779+44
 19623 08e8 1846     		mov	r0, r3
 19624 08ea FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 432


2566:..\src/command_processing.c ****             strcat(info_string, str);
 19625              		.loc 1 2566 0
 19626 08ee 07F11C03 		add	r3, r7, #28
 19627 08f2 1946     		mov	r1, r3
 19628 08f4 7869     		ldr	r0, [r7, #20]
 19629 08f6 FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19630              		.loc 1 2567 0
 19631 08fa D7F89430 		ldr	r3, [r7, #148]
 19632 08fe 022B     		cmp	r3, #2
 19633 0900 0BD0     		beq	.L746
2568:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19634              		.loc 1 2568 0
 19635 0902 7869     		ldr	r0, [r7, #20]
 19636 0904 FFF7FEFF 		bl	strlen
 19637 0908 0346     		mov	r3, r0
 19638 090a 1A46     		mov	r2, r3
 19639 090c 7B69     		ldr	r3, [r7, #20]
 19640 090e 1344     		add	r3, r3, r2
 19641 0910 224A     		ldr	r2, .L779+48
 19642 0912 1188     		ldrh	r1, [r2]	@ unaligned
 19643 0914 9278     		ldrb	r2, [r2, #2]
 19644 0916 1980     		strh	r1, [r3]	@ unaligned
 19645 0918 9A70     		strb	r2, [r3, #2]
 19646              	.L746:
2564:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19647              		.loc 1 2564 0 discriminator 2
 19648 091a D7F89430 		ldr	r3, [r7, #148]
 19649 091e 0133     		adds	r3, r3, #1
 19650 0920 C7F89430 		str	r3, [r7, #148]
 19651              	.L745:
2564:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 19652              		.loc 1 2564 0 is_stmt 0 discriminator 1
 19653 0924 D7F89430 		ldr	r3, [r7, #148]
 19654 0928 022B     		cmp	r3, #2
 19655 092a CADD     		ble	.L747
2569:..\src/command_processing.c ****             }                
2570:..\src/command_processing.c ****         }
2571:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19656              		.loc 1 2571 0 is_stmt 1
 19657 092c 7869     		ldr	r0, [r7, #20]
 19658 092e FFF7FEFF 		bl	strlen
 19659 0932 0346     		mov	r3, r0
 19660 0934 1A46     		mov	r2, r3
 19661 0936 7B69     		ldr	r3, [r7, #20]
 19662 0938 1344     		add	r3, r3, r2
 19663 093a 194A     		ldr	r2, .L779+52
 19664 093c 1188     		ldrh	r1, [r2]	@ unaligned
 19665 093e 9278     		ldrb	r2, [r2, #2]
 19666 0940 1980     		strh	r1, [r3]	@ unaligned
 19667 0942 9A70     		strb	r2, [r3, #2]
2572:..\src/command_processing.c **** 
2573:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 19668              		.loc 1 2573 0
 19669 0944 7869     		ldr	r0, [r7, #20]
 19670 0946 FFF7FEFF 		bl	strlen
 19671 094a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 433


 19672 094c 1A46     		mov	r2, r3
 19673 094e 7B69     		ldr	r3, [r7, #20]
 19674 0950 1344     		add	r3, r3, r2
 19675 0952 1449     		ldr	r1, .L779+56
 19676 0954 1A46     		mov	r2, r3
 19677 0956 0B46     		mov	r3, r1
 19678 0958 03CB     		ldmia	r3!, {r0, r1}
 19679 095a 1060     		str	r0, [r2]	@ unaligned
 19680 095c 5160     		str	r1, [r2, #4]	@ unaligned
 19681 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 19682 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2574:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19683              		.loc 1 2574 0
 19684 0962 0023     		movs	r3, #0
 19685 0964 C7F89430 		str	r3, [r7, #148]
 19686 0968 5EE0     		b	.L748
 19687              	.L780:
 19688 096a 00BF     		.align	2
 19689              	.L779:
 19690 096c 24150000 		.word	.LC201
 19691 0970 3C150000 		.word	.LC202
 19692 0974 58150000 		.word	.LC203
 19693 0978 70150000 		.word	.LC204
 19694 097c A0150000 		.word	.LC205
 19695 0980 BC150000 		.word	.LC206
 19696 0984 D0150000 		.word	.LC207
 19697 0988 E8150000 		.word	.LC208
 19698 098c 10160000 		.word	.LC209
 19699 0990 34160000 		.word	.LC210
 19700 0994 E41D0000 		.word	.LC286
 19701 0998 64130000 		.word	.LC182
 19702 099c 68130000 		.word	.LC183
 19703 09a0 30110000 		.word	.LC151
 19704 09a4 F41D0000 		.word	.LC287
 19705              	.L750:
2575:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19706              		.loc 1 2575 0
 19707 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19708 09ac D7F88C10 		ldr	r1, [r7, #140]
 19709 09b0 1346     		mov	r3, r2
 19710 09b2 5B00     		lsls	r3, r3, #1
 19711 09b4 1344     		add	r3, r3, r2
 19712 09b6 9B00     		lsls	r3, r3, #2
 19713 09b8 D7F89420 		ldr	r2, [r7, #148]
 19714 09bc 1344     		add	r3, r3, r2
 19715 09be 6633     		adds	r3, r3, #102
 19716 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 19717 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19718 09c8 D7F88C00 		ldr	r0, [r7, #140]
 19719 09cc 1346     		mov	r3, r2
 19720 09ce 5B00     		lsls	r3, r3, #1
 19721 09d0 1344     		add	r3, r3, r2
 19722 09d2 1B01     		lsls	r3, r3, #4
 19723 09d4 C218     		adds	r2, r0, r3
 19724 09d6 D7F89430 		ldr	r3, [r7, #148]
 19725 09da 1344     		add	r3, r3, r2
 19726 09dc 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 434


 19727 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19728 09e2 41FA03F2 		asr	r2, r1, r3
 19729 09e6 07F11C03 		add	r3, r7, #28
 19730 09ea CF49     		ldr	r1, .L781
 19731 09ec 1846     		mov	r0, r3
 19732 09ee FFF7FEFF 		bl	sprintf
2576:..\src/command_processing.c ****             strcat(info_string, str);
 19733              		.loc 1 2576 0
 19734 09f2 07F11C03 		add	r3, r7, #28
 19735 09f6 1946     		mov	r1, r3
 19736 09f8 7869     		ldr	r0, [r7, #20]
 19737 09fa FFF7FEFF 		bl	strcat
2577:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19738              		.loc 1 2577 0
 19739 09fe D7F89430 		ldr	r3, [r7, #148]
 19740 0a02 022B     		cmp	r3, #2
 19741 0a04 0BD0     		beq	.L749
2578:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19742              		.loc 1 2578 0
 19743 0a06 7869     		ldr	r0, [r7, #20]
 19744 0a08 FFF7FEFF 		bl	strlen
 19745 0a0c 0346     		mov	r3, r0
 19746 0a0e 1A46     		mov	r2, r3
 19747 0a10 7B69     		ldr	r3, [r7, #20]
 19748 0a12 1344     		add	r3, r3, r2
 19749 0a14 C54A     		ldr	r2, .L781+4
 19750 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 19751 0a18 9278     		ldrb	r2, [r2, #2]
 19752 0a1a 1980     		strh	r1, [r3]	@ unaligned
 19753 0a1c 9A70     		strb	r2, [r3, #2]
 19754              	.L749:
2574:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19755              		.loc 1 2574 0 discriminator 2
 19756 0a1e D7F89430 		ldr	r3, [r7, #148]
 19757 0a22 0133     		adds	r3, r3, #1
 19758 0a24 C7F89430 		str	r3, [r7, #148]
 19759              	.L748:
2574:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 19760              		.loc 1 2574 0 is_stmt 0 discriminator 1
 19761 0a28 D7F89430 		ldr	r3, [r7, #148]
 19762 0a2c 022B     		cmp	r3, #2
 19763 0a2e BBDD     		ble	.L750
2579:..\src/command_processing.c ****             }
2580:..\src/command_processing.c ****         }
2581:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 19764              		.loc 1 2581 0 is_stmt 1
 19765 0a30 7869     		ldr	r0, [r7, #20]
 19766 0a32 FFF7FEFF 		bl	strlen
 19767 0a36 0346     		mov	r3, r0
 19768 0a38 1A46     		mov	r2, r3
 19769 0a3a 7B69     		ldr	r3, [r7, #20]
 19770 0a3c 1344     		add	r3, r3, r2
 19771 0a3e BC4A     		ldr	r2, .L781+8
 19772 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 19773 0a42 9278     		ldrb	r2, [r2, #2]
 19774 0a44 1980     		strh	r1, [r3]	@ unaligned
 19775 0a46 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 435


2582:..\src/command_processing.c ****             
2583:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 19776              		.loc 1 2583 0
 19777 0a48 7869     		ldr	r0, [r7, #20]
 19778 0a4a FFF7FEFF 		bl	strlen
 19779 0a4e 0346     		mov	r3, r0
 19780 0a50 1A46     		mov	r2, r3
 19781 0a52 7B69     		ldr	r3, [r7, #20]
 19782 0a54 1344     		add	r3, r3, r2
 19783 0a56 B74A     		ldr	r2, .L781+12
 19784 0a58 1C46     		mov	r4, r3
 19785 0a5a 1346     		mov	r3, r2
 19786 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 19787 0a5e 2060     		str	r0, [r4]	@ unaligned
 19788 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 19789 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 19790 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 19791 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2584:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 19792              		.loc 1 2584 0
 19793 0a68 0023     		movs	r3, #0
 19794 0a6a C7F89430 		str	r3, [r7, #148]
 19795 0a6e 35E0     		b	.L751
 19796              	.L753:
2585:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19797              		.loc 1 2585 0
 19798 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19799 0a74 D7F88C10 		ldr	r1, [r7, #140]
 19800 0a78 1346     		mov	r3, r2
 19801 0a7a 5B00     		lsls	r3, r3, #1
 19802 0a7c 1344     		add	r3, r3, r2
 19803 0a7e 9B00     		lsls	r3, r3, #2
 19804 0a80 D7F89420 		ldr	r2, [r7, #148]
 19805 0a84 1344     		add	r3, r3, r2
 19806 0a86 6833     		adds	r3, r3, #104
 19807 0a88 9B00     		lsls	r3, r3, #2
 19808 0a8a 0B44     		add	r3, r3, r1
 19809 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 19810 0a8e 1846     		mov	r0, r3
 19811 0a90 FFF7FEFF 		bl	__aeabi_f2d
 19812 0a94 0346     		mov	r3, r0
 19813 0a96 0C46     		mov	r4, r1
 19814 0a98 07F11C00 		add	r0, r7, #28
 19815 0a9c 1A46     		mov	r2, r3
 19816 0a9e 2346     		mov	r3, r4
 19817 0aa0 A549     		ldr	r1, .L781+16
 19818 0aa2 FFF7FEFF 		bl	sprintf
2586:..\src/command_processing.c ****             strcat(info_string, str);
 19819              		.loc 1 2586 0
 19820 0aa6 07F11C03 		add	r3, r7, #28
 19821 0aaa 1946     		mov	r1, r3
 19822 0aac 7869     		ldr	r0, [r7, #20]
 19823 0aae FFF7FEFF 		bl	strcat
2587:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 19824              		.loc 1 2587 0
 19825 0ab2 D7F89430 		ldr	r3, [r7, #148]
 19826 0ab6 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 436


 19827 0ab8 0BD0     		beq	.L752
2588:..\src/command_processing.c ****                 strcat(info_string, ", ");
 19828              		.loc 1 2588 0
 19829 0aba 7869     		ldr	r0, [r7, #20]
 19830 0abc FFF7FEFF 		bl	strlen
 19831 0ac0 0346     		mov	r3, r0
 19832 0ac2 1A46     		mov	r2, r3
 19833 0ac4 7B69     		ldr	r3, [r7, #20]
 19834 0ac6 1344     		add	r3, r3, r2
 19835 0ac8 984A     		ldr	r2, .L781+4
 19836 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 19837 0acc 9278     		ldrb	r2, [r2, #2]
 19838 0ace 1980     		strh	r1, [r3]	@ unaligned
 19839 0ad0 9A70     		strb	r2, [r3, #2]
 19840              	.L752:
2584:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19841              		.loc 1 2584 0 discriminator 2
 19842 0ad2 D7F89430 		ldr	r3, [r7, #148]
 19843 0ad6 0133     		adds	r3, r3, #1
 19844 0ad8 C7F89430 		str	r3, [r7, #148]
 19845              	.L751:
2584:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 19846              		.loc 1 2584 0 is_stmt 0 discriminator 1
 19847 0adc D7F89430 		ldr	r3, [r7, #148]
 19848 0ae0 022B     		cmp	r3, #2
 19849 0ae2 C5DD     		ble	.L753
2589:..\src/command_processing.c ****             }
2590:..\src/command_processing.c ****         }
2591:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 19850              		.loc 1 2591 0 is_stmt 1
 19851 0ae4 7869     		ldr	r0, [r7, #20]
 19852 0ae6 FFF7FEFF 		bl	strlen
 19853 0aea 0346     		mov	r3, r0
 19854 0aec 1A46     		mov	r2, r3
 19855 0aee 7B69     		ldr	r3, [r7, #20]
 19856 0af0 1344     		add	r3, r3, r2
 19857 0af2 8F4A     		ldr	r2, .L781+8
 19858 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 19859 0af6 9278     		ldrb	r2, [r2, #2]
 19860 0af8 1980     		strh	r1, [r3]	@ unaligned
 19861 0afa 9A70     		strb	r2, [r3, #2]
2592:..\src/command_processing.c **** 
2593:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 19862              		.loc 1 2593 0
 19863 0afc D7F88430 		ldr	r3, [r7, #132]
 19864 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 19865 0b02 1846     		mov	r0, r3
 19866 0b04 FFF7FEFF 		bl	__aeabi_f2d
 19867 0b08 C7E90201 		strd	r0, [r7, #8]
 19868 0b0c D7F88430 		ldr	r3, [r7, #132]
 19869 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 19870 0b12 1846     		mov	r0, r3
 19871 0b14 FFF7FEFF 		bl	__aeabi_f2d
 19872 0b18 0446     		mov	r4, r0
 19873 0b1a 0D46     		mov	r5, r1
 19874 0b1c D7F88430 		ldr	r3, [r7, #132]
 19875 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 437


 19876 0b22 1846     		mov	r0, r3
 19877 0b24 FFF7FEFF 		bl	__aeabi_f2d
 19878 0b28 8046     		mov	r8, r0
 19879 0b2a 8946     		mov	r9, r1
 19880 0b2c D7F88430 		ldr	r3, [r7, #132]
 19881 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 19882 0b32 1846     		mov	r0, r3
 19883 0b34 FFF7FEFF 		bl	__aeabi_f2d
 19884 0b38 8246     		mov	r10, r0
 19885 0b3a 8B46     		mov	fp, r1
 19886 0b3c D7F88430 		ldr	r3, [r7, #132]
 19887 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 19888 0b42 1846     		mov	r0, r3
 19889 0b44 FFF7FEFF 		bl	__aeabi_f2d
 19890 0b48 C7E90001 		strd	r0, [r7]
 19891 0b4c D7F88430 		ldr	r3, [r7, #132]
 19892 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 19893 0b52 1846     		mov	r0, r3
 19894 0b54 FFF7FEFF 		bl	__aeabi_f2d
 19895 0b58 0246     		mov	r2, r0
 19896 0b5a 0B46     		mov	r3, r1
 19897 0b5c 07F11C00 		add	r0, r7, #28
 19898 0b60 CDE90823 		strd	r2, [sp, #32]
 19899 0b64 D7E90012 		ldrd	r1, [r7]
 19900 0b68 CDE90612 		strd	r1, [sp, #24]
 19901 0b6c CDE904AB 		strd	r10, [sp, #16]
 19902 0b70 CDE90289 		strd	r8, [sp, #8]
 19903 0b74 CDE90045 		strd	r4, [sp]
 19904 0b78 D7E90223 		ldrd	r2, [r7, #8]
 19905 0b7c 6F49     		ldr	r1, .L781+20
 19906 0b7e FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c **** 		strcat(info_string, str);
 19907              		.loc 1 2594 0
 19908 0b82 07F11C03 		add	r3, r7, #28
 19909 0b86 1946     		mov	r1, r3
 19910 0b88 7869     		ldr	r0, [r7, #20]
 19911 0b8a FFF7FEFF 		bl	strcat
2595:..\src/command_processing.c **** 
2596:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 19912              		.loc 1 2596 0
 19913 0b8e D7F88430 		ldr	r3, [r7, #132]
 19914 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 19915 0b96 1A46     		mov	r2, r3
 19916 0b98 07F11C03 		add	r3, r7, #28
 19917 0b9c 6849     		ldr	r1, .L781+24
 19918 0b9e 1846     		mov	r0, r3
 19919 0ba0 FFF7FEFF 		bl	sprintf
2597:..\src/command_processing.c **** 		strcat(info_string, str);
 19920              		.loc 1 2597 0
 19921 0ba4 07F11C03 		add	r3, r7, #28
 19922 0ba8 1946     		mov	r1, r3
 19923 0baa 7869     		ldr	r0, [r7, #20]
 19924 0bac FFF7FEFF 		bl	strcat
2598:..\src/command_processing.c **** 
2599:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 19925              		.loc 1 2599 0
 19926 0bb0 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 438


 19927 0bb4 596B     		ldr	r1, [r3, #52]
 19928 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19929 0bba D7F88C00 		ldr	r0, [r7, #140]
 19930 0bbe 1346     		mov	r3, r2
 19931 0bc0 5B00     		lsls	r3, r3, #1
 19932 0bc2 1344     		add	r3, r3, r2
 19933 0bc4 1B01     		lsls	r3, r3, #4
 19934 0bc6 0344     		add	r3, r3, r0
 19935 0bc8 03F29513 		addw	r3, r3, #405
 19936 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19937 0bce 41FA03F4 		asr	r4, r1, r3
 19938 0bd2 D7F88430 		ldr	r3, [r7, #132]
 19939 0bd6 996B     		ldr	r1, [r3, #56]
 19940 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 19941 0bdc D7F88C00 		ldr	r0, [r7, #140]
 19942 0be0 1346     		mov	r3, r2
 19943 0be2 5B00     		lsls	r3, r3, #1
 19944 0be4 1344     		add	r3, r3, r2
 19945 0be6 1B01     		lsls	r3, r3, #4
 19946 0be8 0344     		add	r3, r3, r0
 19947 0bea 03F29513 		addw	r3, r3, #405
 19948 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19949 0bf0 41FA03F3 		asr	r3, r1, r3
 19950 0bf4 07F11C00 		add	r0, r7, #28
 19951 0bf8 2246     		mov	r2, r4
 19952 0bfa 5249     		ldr	r1, .L781+28
 19953 0bfc FFF7FEFF 		bl	sprintf
2600:..\src/command_processing.c **** 		strcat(info_string, str);
 19954              		.loc 1 2600 0
 19955 0c00 07F11C03 		add	r3, r7, #28
 19956 0c04 1946     		mov	r1, r3
 19957 0c06 7869     		ldr	r0, [r7, #20]
 19958 0c08 FFF7FEFF 		bl	strcat
2601:..\src/command_processing.c **** 
2602:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 19959              		.loc 1 2602 0
 19960 0c0c D7F88430 		ldr	r3, [r7, #132]
 19961 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 19962 0c14 1A46     		mov	r2, r3
 19963 0c16 07F11C03 		add	r3, r7, #28
 19964 0c1a 4B49     		ldr	r1, .L781+32
 19965 0c1c 1846     		mov	r0, r3
 19966 0c1e FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c **** 		strcat(info_string, str);
 19967              		.loc 1 2603 0
 19968 0c22 07F11C03 		add	r3, r7, #28
 19969 0c26 1946     		mov	r1, r3
 19970 0c28 7869     		ldr	r0, [r7, #20]
 19971 0c2a FFF7FEFF 		bl	strcat
2604:..\src/command_processing.c **** 
2605:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 19972              		.loc 1 2605 0
 19973 0c2e D7F88430 		ldr	r3, [r7, #132]
 19974 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 19975 0c36 022B     		cmp	r3, #2
 19976 0c38 18D0     		beq	.L754
2606:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 439


 19977              		.loc 1 2606 0 discriminator 1
 19978 0c3a D7F88430 		ldr	r3, [r7, #132]
 19979 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2605:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19980              		.loc 1 2605 0 discriminator 1
 19981 0c42 032B     		cmp	r3, #3
 19982 0c44 12D0     		beq	.L754
2607:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19983              		.loc 1 2607 0
 19984 0c46 D7F88430 		ldr	r3, [r7, #132]
 19985 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2606:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 19986              		.loc 1 2606 0
 19987 0c4e 042B     		cmp	r3, #4
 19988 0c50 0CD0     		beq	.L754
2608:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19989              		.loc 1 2608 0
 19990 0c52 D7F88430 		ldr	r3, [r7, #132]
 19991 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2607:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 19992              		.loc 1 2607 0
 19993 0c5a 052B     		cmp	r3, #5
 19994 0c5c 06D0     		beq	.L754
2609:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 19995              		.loc 1 2609 0
 19996 0c5e D7F88430 		ldr	r3, [r7, #132]
 19997 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2608:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 19998              		.loc 1 2608 0
 19999 0c66 072B     		cmp	r3, #7
 20000 0c68 40F0AA80 		bne	.L755
 20001              	.L754:
2610:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 20002              		.loc 1 2610 0
 20003 0c6c D7F88C30 		ldr	r3, [r7, #140]
 20004 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 20005 0c74 1A46     		mov	r2, r3
 20006 0c76 D7F88C30 		ldr	r3, [r7, #140]
 20007 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 20008 0c7e 07F11C00 		add	r0, r7, #28
 20009 0c82 3249     		ldr	r1, .L781+36
 20010 0c84 FFF7FEFF 		bl	sprintf
2611:..\src/command_processing.c **** 			strcat(info_string, str);
 20011              		.loc 1 2611 0
 20012 0c88 07F11C03 		add	r3, r7, #28
 20013 0c8c 1946     		mov	r1, r3
 20014 0c8e 7869     		ldr	r0, [r7, #20]
 20015 0c90 FFF7FEFF 		bl	strcat
2612:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20016              		.loc 1 2612 0
 20017 0c94 7869     		ldr	r0, [r7, #20]
 20018 0c96 FFF7FEFF 		bl	strlen
 20019 0c9a 0346     		mov	r3, r0
 20020 0c9c 1A46     		mov	r2, r3
 20021 0c9e 7B69     		ldr	r3, [r7, #20]
 20022 0ca0 1344     		add	r3, r3, r2
 20023 0ca2 234A     		ldr	r2, .L781+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 440


 20024 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 20025 0ca6 9278     		ldrb	r2, [r2, #2]
 20026 0ca8 1980     		strh	r1, [r3]	@ unaligned
 20027 0caa 9A70     		strb	r2, [r3, #2]
2613:..\src/command_processing.c **** 
2614:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 20028              		.loc 1 2614 0
 20029 0cac D7F88C30 		ldr	r3, [r7, #140]
 20030 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 20031 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 20032 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 20033 0cbc 07F11C00 		add	r0, r7, #28
 20034 0cc0 2349     		ldr	r1, .L781+40
 20035 0cc2 FFF7FEFF 		bl	sprintf
2615:..\src/command_processing.c **** 			strcat(info_string, str);
 20036              		.loc 1 2615 0
 20037 0cc6 07F11C03 		add	r3, r7, #28
 20038 0cca 1946     		mov	r1, r3
 20039 0ccc 7869     		ldr	r0, [r7, #20]
 20040 0cce FFF7FEFF 		bl	strcat
2616:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20041              		.loc 1 2616 0
 20042 0cd2 7869     		ldr	r0, [r7, #20]
 20043 0cd4 FFF7FEFF 		bl	strlen
 20044 0cd8 0346     		mov	r3, r0
 20045 0cda 1A46     		mov	r2, r3
 20046 0cdc 7B69     		ldr	r3, [r7, #20]
 20047 0cde 1344     		add	r3, r3, r2
 20048 0ce0 134A     		ldr	r2, .L781+8
 20049 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 20050 0ce4 9278     		ldrb	r2, [r2, #2]
 20051 0ce6 1980     		strh	r1, [r3]	@ unaligned
 20052 0ce8 9A70     		strb	r2, [r3, #2]
2617:..\src/command_processing.c **** 
2618:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 20053              		.loc 1 2618 0
 20054 0cea D7F88C30 		ldr	r3, [r7, #140]
 20055 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 20056 0cf2 002B     		cmp	r3, #0
 20057 0cf4 30D0     		beq	.L756
2619:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 20058              		.loc 1 2619 0
 20059 0cf6 7869     		ldr	r0, [r7, #20]
 20060 0cf8 FFF7FEFF 		bl	strlen
 20061 0cfc 0346     		mov	r3, r0
 20062 0cfe 1A46     		mov	r2, r3
 20063 0d00 7B69     		ldr	r3, [r7, #20]
 20064 0d02 1344     		add	r3, r3, r2
 20065 0d04 134A     		ldr	r2, .L781+44
 20066 0d06 1D46     		mov	r5, r3
 20067 0d08 1446     		mov	r4, r2
 20068 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20069 0d0c 2860     		str	r0, [r5]	@ unaligned
 20070 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 20071 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 20072 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 20073 0d14 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 441


 20074 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 20075 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 20076 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 20077 0d1c A278     		ldrb	r2, [r4, #2]
 20078 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20079 0d20 1346     		mov	r3, r2
 20080 0d22 AB76     		strb	r3, [r5, #26]
 20081 0d24 2CE0     		b	.L757
 20082              	.L782:
 20083 0d26 00BF     		.align	2
 20084              	.L781:
 20085 0d28 10170000 		.word	.LC218
 20086 0d2c 68130000 		.word	.LC183
 20087 0d30 30110000 		.word	.LC151
 20088 0d34 001E0000 		.word	.LC288
 20089 0d38 30170000 		.word	.LC220
 20090 0d3c 101E0000 		.word	.LC289
 20091 0d40 4C1E0000 		.word	.LC290
 20092 0d44 681E0000 		.word	.LC291
 20093 0d48 D0170000 		.word	.LC226
 20094 0d4c C4180000 		.word	.LC234
 20095 0d50 E8180000 		.word	.LC235
 20096 0d54 38190000 		.word	.LC238
 20097              	.L756:
2620:..\src/command_processing.c **** 			else
2621:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 20098              		.loc 1 2621 0
 20099 0d58 7869     		ldr	r0, [r7, #20]
 20100 0d5a FFF7FEFF 		bl	strlen
 20101 0d5e 0346     		mov	r3, r0
 20102 0d60 1A46     		mov	r2, r3
 20103 0d62 7B69     		ldr	r3, [r7, #20]
 20104 0d64 1344     		add	r3, r3, r2
 20105 0d66 D04A     		ldr	r2, .L783
 20106 0d68 1D46     		mov	r5, r3
 20107 0d6a 1446     		mov	r4, r2
 20108 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20109 0d6e 2860     		str	r0, [r5]	@ unaligned
 20110 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 20111 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 20112 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 20113 0d76 03CC     		ldmia	r4!, {r0, r1}
 20114 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 20115 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 20116 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 20117 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 20118              	.L757:
2622:..\src/command_processing.c **** 
2623:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 20119              		.loc 1 2623 0
 20120 0d80 D7F88C30 		ldr	r3, [r7, #140]
 20121 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 20122 0d88 1A46     		mov	r2, r3
 20123 0d8a D7F88C30 		ldr	r3, [r7, #140]
 20124 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 20125 0d92 07F11C00 		add	r0, r7, #28
 20126 0d96 C549     		ldr	r1, .L783+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 442


 20127 0d98 FFF7FEFF 		bl	sprintf
2624:..\src/command_processing.c **** 			strcat(info_string, str);
 20128              		.loc 1 2624 0
 20129 0d9c 07F11C03 		add	r3, r7, #28
 20130 0da0 1946     		mov	r1, r3
 20131 0da2 7869     		ldr	r0, [r7, #20]
 20132 0da4 FFF7FEFF 		bl	strcat
2625:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 20133              		.loc 1 2625 0
 20134 0da8 7869     		ldr	r0, [r7, #20]
 20135 0daa FFF7FEFF 		bl	strlen
 20136 0dae 0346     		mov	r3, r0
 20137 0db0 1A46     		mov	r2, r3
 20138 0db2 7B69     		ldr	r3, [r7, #20]
 20139 0db4 1344     		add	r3, r3, r2
 20140 0db6 BE4A     		ldr	r2, .L783+8
 20141 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 20142 0dba 9278     		ldrb	r2, [r2, #2]
 20143 0dbc 1980     		strh	r1, [r3]	@ unaligned
 20144 0dbe 9A70     		strb	r2, [r3, #2]
 20145              	.L755:
 20146              	.LBE24:
2455:..\src/command_processing.c ****             
 20147              		.loc 1 2455 0 discriminator 2
 20148 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 20149 0dc4 0133     		adds	r3, r3, #1
 20150 0dc6 87F89330 		strb	r3, [r7, #147]
 20151              	.L714:
2455:..\src/command_processing.c ****             
 20152              		.loc 1 2455 0 is_stmt 0 discriminator 1
 20153 0dca D7F88C30 		ldr	r3, [r7, #140]
 20154 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20155 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 20156 0dd6 9A42     		cmp	r2, r3
 20157 0dd8 7FF69BA9 		bls	.L758
 20158              	.LBE23:
2626:..\src/command_processing.c **** 		}
2627:..\src/command_processing.c **** 	}
2628:..\src/command_processing.c **** 	 
2629:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 20159              		.loc 1 2629 0 is_stmt 1
 20160 0ddc D7F88C30 		ldr	r3, [r7, #140]
 20161 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 20162 0de4 002B     		cmp	r3, #0
 20163 0de6 63D0     		beq	.L759
2630:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 20164              		.loc 1 2630 0
 20165 0de8 D7F88C30 		ldr	r3, [r7, #140]
 20166 0dec D3F8A422 		ldr	r2, [r3, #676]
 20167 0df0 07F11C03 		add	r3, r7, #28
 20168 0df4 AF49     		ldr	r1, .L783+12
 20169 0df6 1846     		mov	r0, r3
 20170 0df8 FFF7FEFF 		bl	sprintf
2631:..\src/command_processing.c ****         strcat(info_string, str);
 20171              		.loc 1 2631 0
 20172 0dfc 07F11C03 		add	r3, r7, #28
 20173 0e00 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 443


 20174 0e02 7869     		ldr	r0, [r7, #20]
 20175 0e04 FFF7FEFF 		bl	strcat
2632:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20176              		.loc 1 2632 0
 20177 0e08 7869     		ldr	r0, [r7, #20]
 20178 0e0a FFF7FEFF 		bl	strlen
 20179 0e0e 0346     		mov	r3, r0
 20180 0e10 1A46     		mov	r2, r3
 20181 0e12 7B69     		ldr	r3, [r7, #20]
 20182 0e14 1344     		add	r3, r3, r2
 20183 0e16 A64A     		ldr	r2, .L783+8
 20184 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 20185 0e1a 9278     		ldrb	r2, [r2, #2]
 20186 0e1c 1980     		strh	r1, [r3]	@ unaligned
 20187 0e1e 9A70     		strb	r2, [r3, #2]
2633:..\src/command_processing.c ****         
2634:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 20188              		.loc 1 2634 0
 20189 0e20 D7F88C30 		ldr	r3, [r7, #140]
 20190 0e24 D3F8A822 		ldr	r2, [r3, #680]
 20191 0e28 07F11C03 		add	r3, r7, #28
 20192 0e2c A249     		ldr	r1, .L783+16
 20193 0e2e 1846     		mov	r0, r3
 20194 0e30 FFF7FEFF 		bl	sprintf
2635:..\src/command_processing.c ****         strcat(info_string, str);
 20195              		.loc 1 2635 0
 20196 0e34 07F11C03 		add	r3, r7, #28
 20197 0e38 1946     		mov	r1, r3
 20198 0e3a 7869     		ldr	r0, [r7, #20]
 20199 0e3c FFF7FEFF 		bl	strcat
2636:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 20200              		.loc 1 2636 0
 20201 0e40 7869     		ldr	r0, [r7, #20]
 20202 0e42 FFF7FEFF 		bl	strlen
 20203 0e46 0346     		mov	r3, r0
 20204 0e48 1A46     		mov	r2, r3
 20205 0e4a 7B69     		ldr	r3, [r7, #20]
 20206 0e4c 1344     		add	r3, r3, r2
 20207 0e4e 984A     		ldr	r2, .L783+8
 20208 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 20209 0e52 9278     		ldrb	r2, [r2, #2]
 20210 0e54 1980     		strh	r1, [r3]	@ unaligned
 20211 0e56 9A70     		strb	r2, [r3, #2]
2637:..\src/command_processing.c ****         
2638:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 20212              		.loc 1 2638 0
 20213 0e58 D7F88C30 		ldr	r3, [r7, #140]
 20214 0e5c D3F8A022 		ldr	r2, [r3, #672]
 20215 0e60 D7F88C30 		ldr	r3, [r7, #140]
 20216 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20217 0e68 1846     		mov	r0, r3
 20218 0e6a D7F88C10 		ldr	r1, [r7, #140]
 20219 0e6e 0346     		mov	r3, r0
 20220 0e70 5B00     		lsls	r3, r3, #1
 20221 0e72 0344     		add	r3, r3, r0
 20222 0e74 1B01     		lsls	r3, r3, #4
 20223 0e76 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 444


 20224 0e78 03F29513 		addw	r3, r3, #405
 20225 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20226 0e7e 1A41     		asrs	r2, r2, r3
 20227 0e80 07F11C03 		add	r3, r7, #28
 20228 0e84 8D49     		ldr	r1, .L783+20
 20229 0e86 1846     		mov	r0, r3
 20230 0e88 FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c ****         strcat(info_string, str);
 20231              		.loc 1 2639 0
 20232 0e8c 07F11C03 		add	r3, r7, #28
 20233 0e90 1946     		mov	r1, r3
 20234 0e92 7869     		ldr	r0, [r7, #20]
 20235 0e94 FFF7FEFF 		bl	strcat
2640:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 20236              		.loc 1 2640 0
 20237 0e98 7869     		ldr	r0, [r7, #20]
 20238 0e9a FFF7FEFF 		bl	strlen
 20239 0e9e 0346     		mov	r3, r0
 20240 0ea0 1A46     		mov	r2, r3
 20241 0ea2 7B69     		ldr	r3, [r7, #20]
 20242 0ea4 1344     		add	r3, r3, r2
 20243 0ea6 824A     		ldr	r2, .L783+8
 20244 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 20245 0eaa 9278     		ldrb	r2, [r2, #2]
 20246 0eac 1980     		strh	r1, [r3]	@ unaligned
 20247 0eae 9A70     		strb	r2, [r3, #2]
 20248              	.L759:
2641:..\src/command_processing.c ****     }
2642:..\src/command_processing.c **** 	
2643:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 20249              		.loc 1 2643 0
 20250 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 20251 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 20252 0eb8 002B     		cmp	r3, #0
 20253 0eba 00F0CB81 		beq	.L774
2644:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 20254              		.loc 1 2644 0
 20255 0ebe 804B     		ldr	r3, .L783+24
 20256 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20257 0ec2 1A46     		mov	r2, r3
 20258 0ec4 07F11C03 		add	r3, r7, #28
 20259 0ec8 7E49     		ldr	r1, .L783+28
 20260 0eca 1846     		mov	r0, r3
 20261 0ecc FFF7FEFF 		bl	sprintf
2645:..\src/command_processing.c **** 		strcat(info_string, str);
 20262              		.loc 1 2645 0
 20263 0ed0 07F11C03 		add	r3, r7, #28
 20264 0ed4 1946     		mov	r1, r3
 20265 0ed6 7869     		ldr	r0, [r7, #20]
 20266 0ed8 FFF7FEFF 		bl	strcat
2646:..\src/command_processing.c **** 		
2647:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20267              		.loc 1 2647 0
 20268 0edc 7869     		ldr	r0, [r7, #20]
 20269 0ede FFF7FEFF 		bl	strlen
 20270 0ee2 0346     		mov	r3, r0
 20271 0ee4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 445


 20272 0ee6 7B69     		ldr	r3, [r7, #20]
 20273 0ee8 1344     		add	r3, r3, r2
 20274 0eea 714A     		ldr	r2, .L783+8
 20275 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 20276 0eee 9278     		ldrb	r2, [r2, #2]
 20277 0ef0 1980     		strh	r1, [r3]	@ unaligned
 20278 0ef2 9A70     		strb	r2, [r3, #2]
2648:..\src/command_processing.c **** 		
2649:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 20279              		.loc 1 2649 0
 20280 0ef4 7869     		ldr	r0, [r7, #20]
 20281 0ef6 FFF7FEFF 		bl	strlen
 20282 0efa 0346     		mov	r3, r0
 20283 0efc 1A46     		mov	r2, r3
 20284 0efe 7B69     		ldr	r3, [r7, #20]
 20285 0f00 1344     		add	r3, r3, r2
 20286 0f02 714A     		ldr	r2, .L783+32
 20287 0f04 1D46     		mov	r5, r3
 20288 0f06 1446     		mov	r4, r2
 20289 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20290 0f0a 2860     		str	r0, [r5]	@ unaligned
 20291 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 20292 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 20293 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 20294 0f12 2068     		ldr	r0, [r4]	@ unaligned
 20295 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 20296 0f16 2379     		ldrb	r3, [r4, #4]
 20297 0f18 2B75     		strb	r3, [r5, #20]
2650:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 20298              		.loc 1 2650 0
 20299 0f1a 0023     		movs	r3, #0
 20300 0f1c C7F89430 		str	r3, [r7, #148]
 20301 0f20 84E1     		b	.L761
 20302              	.L772:
2651:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20303              		.loc 1 2651 0
 20304 0f22 6A4A     		ldr	r2, .L783+36
 20305 0f24 D7F89430 		ldr	r3, [r7, #148]
 20306 0f28 1344     		add	r3, r3, r2
 20307 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20308 0f2c 07F11C00 		add	r0, r7, #28
 20309 0f30 D7F89420 		ldr	r2, [r7, #148]
 20310 0f34 6649     		ldr	r1, .L783+40
 20311 0f36 FFF7FEFF 		bl	sprintf
2652:..\src/command_processing.c **** 			strcat(info_string, str);
 20312              		.loc 1 2652 0
 20313 0f3a 07F11C03 		add	r3, r7, #28
 20314 0f3e 1946     		mov	r1, r3
 20315 0f40 7869     		ldr	r0, [r7, #20]
 20316 0f42 FFF7FEFF 		bl	strcat
2653:..\src/command_processing.c **** 			
2654:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 20317              		.loc 1 2654 0
 20318 0f46 07F11C03 		add	r3, r7, #28
 20319 0f4a 624A     		ldr	r2, .L783+44
 20320 0f4c 1C46     		mov	r4, r3
 20321 0f4e 1546     		mov	r5, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 446


 20322 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 20323 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 20324 0f54 2B68     		ldr	r3, [r5]
 20325 0f56 2380     		strh	r3, [r4]	@ movhi
2655:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 20326              		.loc 1 2655 0
 20327 0f58 5C4A     		ldr	r2, .L783+36
 20328 0f5a D7F89430 		ldr	r3, [r7, #148]
 20329 0f5e 1344     		add	r3, r3, r2
 20330 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20331 0f62 1946     		mov	r1, r3
 20332 0f64 D7F88C20 		ldr	r2, [r7, #140]
 20333 0f68 0B46     		mov	r3, r1
 20334 0f6a 9B00     		lsls	r3, r3, #2
 20335 0f6c 0B44     		add	r3, r3, r1
 20336 0f6e 1344     		add	r3, r3, r2
 20337 0f70 03F20223 		addw	r3, r3, #514
 20338 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20339 0f76 002B     		cmp	r3, #0
 20340 0f78 0FD0     		beq	.L762
2656:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20341              		.loc 1 2656 0
 20342 0f7a 07F11C03 		add	r3, r7, #28
 20343 0f7e 1846     		mov	r0, r3
 20344 0f80 FFF7FEFF 		bl	strlen
 20345 0f84 0346     		mov	r3, r0
 20346 0f86 1A46     		mov	r2, r3
 20347 0f88 07F11C03 		add	r3, r7, #28
 20348 0f8c 1344     		add	r3, r3, r2
 20349 0f8e 524A     		ldr	r2, .L783+48
 20350 0f90 1068     		ldr	r0, [r2]	@ unaligned
 20351 0f92 1860     		str	r0, [r3]	@ unaligned
 20352 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20353 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 20354 0f98 0EE0     		b	.L763
 20355              	.L762:
2657:..\src/command_processing.c **** 			else
2658:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20356              		.loc 1 2658 0
 20357 0f9a 07F11C03 		add	r3, r7, #28
 20358 0f9e 1846     		mov	r0, r3
 20359 0fa0 FFF7FEFF 		bl	strlen
 20360 0fa4 0346     		mov	r3, r0
 20361 0fa6 1A46     		mov	r2, r3
 20362 0fa8 07F11C03 		add	r3, r7, #28
 20363 0fac 1344     		add	r3, r3, r2
 20364 0fae 4B4A     		ldr	r2, .L783+52
 20365 0fb0 1068     		ldr	r0, [r2]	@ unaligned
 20366 0fb2 1860     		str	r0, [r3]	@ unaligned
 20367 0fb4 1279     		ldrb	r2, [r2, #4]
 20368 0fb6 1A71     		strb	r2, [r3, #4]
 20369              	.L763:
2659:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 20370              		.loc 1 2659 0
 20371 0fb8 07F11C03 		add	r3, r7, #28
 20372 0fbc 1846     		mov	r0, r3
 20373 0fbe FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 447


 20374 0fc2 0346     		mov	r3, r0
 20375 0fc4 1A46     		mov	r2, r3
 20376 0fc6 07F11C03 		add	r3, r7, #28
 20377 0fca 1344     		add	r3, r3, r2
 20378 0fcc 444A     		ldr	r2, .L783+56
 20379 0fce 1C46     		mov	r4, r3
 20380 0fd0 1346     		mov	r3, r2
 20381 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 20382 0fd4 2060     		str	r0, [r4]	@ unaligned
 20383 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 20384 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 20385 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 20386 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2660:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 20387              		.loc 1 2660 0
 20388 0fde 3B4A     		ldr	r2, .L783+36
 20389 0fe0 D7F89430 		ldr	r3, [r7, #148]
 20390 0fe4 1344     		add	r3, r3, r2
 20391 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20392 0fe8 1946     		mov	r1, r3
 20393 0fea D7F88C20 		ldr	r2, [r7, #140]
 20394 0fee 0B46     		mov	r3, r1
 20395 0ff0 9B00     		lsls	r3, r3, #2
 20396 0ff2 0B44     		add	r3, r3, r1
 20397 0ff4 1344     		add	r3, r3, r2
 20398 0ff6 03F20323 		addw	r3, r3, #515
 20399 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20400 0ffc 002B     		cmp	r3, #0
 20401 0ffe 0FD0     		beq	.L764
2661:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20402              		.loc 1 2661 0
 20403 1000 07F11C03 		add	r3, r7, #28
 20404 1004 1846     		mov	r0, r3
 20405 1006 FFF7FEFF 		bl	strlen
 20406 100a 0346     		mov	r3, r0
 20407 100c 1A46     		mov	r2, r3
 20408 100e 07F11C03 		add	r3, r7, #28
 20409 1012 1344     		add	r3, r3, r2
 20410 1014 304A     		ldr	r2, .L783+48
 20411 1016 1068     		ldr	r0, [r2]	@ unaligned
 20412 1018 1860     		str	r0, [r3]	@ unaligned
 20413 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20414 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 20415 101e 0EE0     		b	.L765
 20416              	.L764:
2662:..\src/command_processing.c **** 			else
2663:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 20417              		.loc 1 2663 0
 20418 1020 07F11C03 		add	r3, r7, #28
 20419 1024 1846     		mov	r0, r3
 20420 1026 FFF7FEFF 		bl	strlen
 20421 102a 0346     		mov	r3, r0
 20422 102c 1A46     		mov	r2, r3
 20423 102e 07F11C03 		add	r3, r7, #28
 20424 1032 1344     		add	r3, r3, r2
 20425 1034 294A     		ldr	r2, .L783+52
 20426 1036 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 448


 20427 1038 1860     		str	r0, [r3]	@ unaligned
 20428 103a 1279     		ldrb	r2, [r2, #4]
 20429 103c 1A71     		strb	r2, [r3, #4]
 20430              	.L765:
2664:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 20431              		.loc 1 2664 0
 20432 103e 07F11C03 		add	r3, r7, #28
 20433 1042 1846     		mov	r0, r3
 20434 1044 FFF7FEFF 		bl	strlen
 20435 1048 0346     		mov	r3, r0
 20436 104a 1A46     		mov	r2, r3
 20437 104c 07F11C03 		add	r3, r7, #28
 20438 1050 1344     		add	r3, r3, r2
 20439 1052 244A     		ldr	r2, .L783+60
 20440 1054 1D46     		mov	r5, r3
 20441 1056 1446     		mov	r4, r2
 20442 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 20443 105a 2860     		str	r0, [r5]	@ unaligned
 20444 105c 6960     		str	r1, [r5, #4]	@ unaligned
 20445 105e AA60     		str	r2, [r5, #8]	@ unaligned
 20446 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 20447 1062 2378     		ldrb	r3, [r4]
 20448 1064 2B74     		strb	r3, [r5, #16]
2665:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 20449              		.loc 1 2665 0
 20450 1066 194A     		ldr	r2, .L783+36
 20451 1068 D7F89430 		ldr	r3, [r7, #148]
 20452 106c 1344     		add	r3, r3, r2
 20453 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20454 1070 1946     		mov	r1, r3
 20455 1072 D7F88C20 		ldr	r2, [r7, #140]
 20456 1076 0B46     		mov	r3, r1
 20457 1078 9B00     		lsls	r3, r3, #2
 20458 107a 0B44     		add	r3, r3, r1
 20459 107c 1344     		add	r3, r3, r2
 20460 107e 03F50173 		add	r3, r3, #516
 20461 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20462 1084 002B     		cmp	r3, #0
 20463 1086 2FD0     		beq	.L766
2666:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20464              		.loc 1 2666 0
 20465 1088 07F11C03 		add	r3, r7, #28
 20466 108c 1846     		mov	r0, r3
 20467 108e FFF7FEFF 		bl	strlen
 20468 1092 0346     		mov	r3, r0
 20469 1094 1A46     		mov	r2, r3
 20470 1096 07F11C03 		add	r3, r7, #28
 20471 109a 1344     		add	r3, r3, r2
 20472 109c 0E4A     		ldr	r2, .L783+48
 20473 109e 1068     		ldr	r0, [r2]	@ unaligned
 20474 10a0 1860     		str	r0, [r3]	@ unaligned
 20475 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20476 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20477 10a6 2EE0     		b	.L767
 20478              	.L784:
 20479              		.align	2
 20480              	.L783:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 449


 20481 10a8 54190000 		.word	.LC239
 20482 10ac 70190000 		.word	.LC240
 20483 10b0 30110000 		.word	.LC151
 20484 10b4 341A0000 		.word	.LC248
 20485 10b8 501A0000 		.word	.LC249
 20486 10bc 781A0000 		.word	.LC250
 20487 10c0 00000000 		.word	N_IMU_Connected
 20488 10c4 8C1A0000 		.word	.LC251
 20489 10c8 A01A0000 		.word	.LC252
 20490 10cc 00000000 		.word	IMU_connected
 20491 10d0 B81A0000 		.word	.LC253
 20492 10d4 CC1A0000 		.word	.LC254
 20493 10d8 F4120000 		.word	.LC174
 20494 10dc FC120000 		.word	.LC175
 20495 10e0 E01A0000 		.word	.LC255
 20496 10e4 F01A0000 		.word	.LC256
 20497              	.L766:
2667:..\src/command_processing.c **** 			else
2668:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20498              		.loc 1 2668 0
 20499 10e8 07F11C03 		add	r3, r7, #28
 20500 10ec 1846     		mov	r0, r3
 20501 10ee FFF7FEFF 		bl	strlen
 20502 10f2 0346     		mov	r3, r0
 20503 10f4 1A46     		mov	r2, r3
 20504 10f6 07F11C03 		add	r3, r7, #28
 20505 10fa 1344     		add	r3, r3, r2
 20506 10fc 584A     		ldr	r2, .L785
 20507 10fe 1068     		ldr	r0, [r2]	@ unaligned
 20508 1100 1860     		str	r0, [r3]	@ unaligned
 20509 1102 1279     		ldrb	r2, [r2, #4]
 20510 1104 1A71     		strb	r2, [r3, #4]
 20511              	.L767:
2669:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 20512              		.loc 1 2669 0
 20513 1106 07F11C03 		add	r3, r7, #28
 20514 110a 1846     		mov	r0, r3
 20515 110c FFF7FEFF 		bl	strlen
 20516 1110 0346     		mov	r3, r0
 20517 1112 1A46     		mov	r2, r3
 20518 1114 07F11C03 		add	r3, r7, #28
 20519 1118 1344     		add	r3, r3, r2
 20520 111a 524A     		ldr	r2, .L785+4
 20521 111c 1C46     		mov	r4, r3
 20522 111e 1346     		mov	r3, r2
 20523 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 20524 1122 2060     		str	r0, [r4]	@ unaligned
 20525 1124 6160     		str	r1, [r4, #4]	@ unaligned
 20526 1126 A260     		str	r2, [r4, #8]	@ unaligned
 20527 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 20528 112a A381     		strh	r3, [r4, #12]	@ unaligned
2670:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 20529              		.loc 1 2670 0
 20530 112c 4E4A     		ldr	r2, .L785+8
 20531 112e D7F89430 		ldr	r3, [r7, #148]
 20532 1132 1344     		add	r3, r3, r2
 20533 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 450


 20534 1136 1946     		mov	r1, r3
 20535 1138 D7F88C20 		ldr	r2, [r7, #140]
 20536 113c 0B46     		mov	r3, r1
 20537 113e 9B00     		lsls	r3, r3, #2
 20538 1140 0B44     		add	r3, r3, r1
 20539 1142 1344     		add	r3, r3, r2
 20540 1144 03F20523 		addw	r3, r3, #517
 20541 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20542 114a 002B     		cmp	r3, #0
 20543 114c 0FD0     		beq	.L768
2671:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20544              		.loc 1 2671 0
 20545 114e 07F11C03 		add	r3, r7, #28
 20546 1152 1846     		mov	r0, r3
 20547 1154 FFF7FEFF 		bl	strlen
 20548 1158 0346     		mov	r3, r0
 20549 115a 1A46     		mov	r2, r3
 20550 115c 07F11C03 		add	r3, r7, #28
 20551 1160 1344     		add	r3, r3, r2
 20552 1162 424A     		ldr	r2, .L785+12
 20553 1164 1068     		ldr	r0, [r2]	@ unaligned
 20554 1166 1860     		str	r0, [r3]	@ unaligned
 20555 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20556 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 20557 116c 0EE0     		b	.L769
 20558              	.L768:
2672:..\src/command_processing.c **** 			else
2673:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20559              		.loc 1 2673 0
 20560 116e 07F11C03 		add	r3, r7, #28
 20561 1172 1846     		mov	r0, r3
 20562 1174 FFF7FEFF 		bl	strlen
 20563 1178 0346     		mov	r3, r0
 20564 117a 1A46     		mov	r2, r3
 20565 117c 07F11C03 		add	r3, r7, #28
 20566 1180 1344     		add	r3, r3, r2
 20567 1182 374A     		ldr	r2, .L785
 20568 1184 1068     		ldr	r0, [r2]	@ unaligned
 20569 1186 1860     		str	r0, [r3]	@ unaligned
 20570 1188 1279     		ldrb	r2, [r2, #4]
 20571 118a 1A71     		strb	r2, [r3, #4]
 20572              	.L769:
2674:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 20573              		.loc 1 2674 0
 20574 118c 07F11C03 		add	r3, r7, #28
 20575 1190 1846     		mov	r0, r3
 20576 1192 FFF7FEFF 		bl	strlen
 20577 1196 0346     		mov	r3, r0
 20578 1198 1A46     		mov	r2, r3
 20579 119a 07F11C03 		add	r3, r7, #28
 20580 119e 1344     		add	r3, r3, r2
 20581 11a0 334A     		ldr	r2, .L785+16
 20582 11a2 1C46     		mov	r4, r3
 20583 11a4 1346     		mov	r3, r2
 20584 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 20585 11a8 2060     		str	r0, [r4]	@ unaligned
 20586 11aa 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 451


 20587 11ac A260     		str	r2, [r4, #8]	@ unaligned
 20588 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 20589 11b0 9B78     		ldrb	r3, [r3, #2]
 20590 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 20591 11b4 A373     		strb	r3, [r4, #14]
2675:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 20592              		.loc 1 2675 0
 20593 11b6 2C4A     		ldr	r2, .L785+8
 20594 11b8 D7F89430 		ldr	r3, [r7, #148]
 20595 11bc 1344     		add	r3, r3, r2
 20596 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20597 11c0 1946     		mov	r1, r3
 20598 11c2 D7F88C20 		ldr	r2, [r7, #140]
 20599 11c6 0B46     		mov	r3, r1
 20600 11c8 9B00     		lsls	r3, r3, #2
 20601 11ca 0B44     		add	r3, r3, r1
 20602 11cc 1344     		add	r3, r3, r2
 20603 11ce 03F20623 		addw	r3, r3, #518
 20604 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20605 11d4 002B     		cmp	r3, #0
 20606 11d6 0FD0     		beq	.L770
2676:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 20607              		.loc 1 2676 0
 20608 11d8 07F11C03 		add	r3, r7, #28
 20609 11dc 1846     		mov	r0, r3
 20610 11de FFF7FEFF 		bl	strlen
 20611 11e2 0346     		mov	r3, r0
 20612 11e4 1A46     		mov	r2, r3
 20613 11e6 07F11C03 		add	r3, r7, #28
 20614 11ea 1344     		add	r3, r3, r2
 20615 11ec 1F4A     		ldr	r2, .L785+12
 20616 11ee 1068     		ldr	r0, [r2]	@ unaligned
 20617 11f0 1860     		str	r0, [r3]	@ unaligned
 20618 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 20619 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 20620 11f6 0EE0     		b	.L771
 20621              	.L770:
2677:..\src/command_processing.c **** 			else
2678:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 20622              		.loc 1 2678 0
 20623 11f8 07F11C03 		add	r3, r7, #28
 20624 11fc 1846     		mov	r0, r3
 20625 11fe FFF7FEFF 		bl	strlen
 20626 1202 0346     		mov	r3, r0
 20627 1204 1A46     		mov	r2, r3
 20628 1206 07F11C03 		add	r3, r7, #28
 20629 120a 1344     		add	r3, r3, r2
 20630 120c 144A     		ldr	r2, .L785
 20631 120e 1068     		ldr	r0, [r2]	@ unaligned
 20632 1210 1860     		str	r0, [r3]	@ unaligned
 20633 1212 1279     		ldrb	r2, [r2, #4]
 20634 1214 1A71     		strb	r2, [r3, #4]
 20635              	.L771:
2679:..\src/command_processing.c **** 				 
2680:..\src/command_processing.c **** 			strcat(info_string, str);
 20636              		.loc 1 2680 0 discriminator 2
 20637 1216 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 452


 20638 121a 1946     		mov	r1, r3
 20639 121c 7869     		ldr	r0, [r7, #20]
 20640 121e FFF7FEFF 		bl	strcat
2650:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20641              		.loc 1 2650 0 discriminator 2
 20642 1222 D7F89430 		ldr	r3, [r7, #148]
 20643 1226 0133     		adds	r3, r3, #1
 20644 1228 C7F89430 		str	r3, [r7, #148]
 20645              	.L761:
2650:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 20646              		.loc 1 2650 0 is_stmt 0 discriminator 1
 20647 122c 114B     		ldr	r3, .L785+20
 20648 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20649 1230 1A46     		mov	r2, r3
 20650 1232 D7F89430 		ldr	r3, [r7, #148]
 20651 1236 9A42     		cmp	r2, r3
 20652 1238 3FF773AE 		bgt	.L772
2681:..\src/command_processing.c **** 		}       
2682:..\src/command_processing.c **** 		
2683:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 20653              		.loc 1 2683 0 is_stmt 1
 20654 123c 7869     		ldr	r0, [r7, #20]
 20655 123e FFF7FEFF 		bl	strlen
 20656 1242 0346     		mov	r3, r0
 20657 1244 1A46     		mov	r2, r3
 20658 1246 7B69     		ldr	r3, [r7, #20]
 20659 1248 1344     		add	r3, r3, r2
 20660 124a 0B4A     		ldr	r2, .L785+24
 20661 124c 1188     		ldrh	r1, [r2]	@ unaligned
 20662 124e 9278     		ldrb	r2, [r2, #2]
 20663 1250 1980     		strh	r1, [r3]	@ unaligned
 20664 1252 9A70     		strb	r2, [r3, #2]
 20665              	.L774:
2684:..\src/command_processing.c **** 	}
2685:..\src/command_processing.c **** }
 20666              		.loc 1 2685 0
 20667 1254 00BF     		nop
 20668 1256 9C37     		adds	r7, r7, #156
 20669              		.cfi_def_cfa_offset 36
 20670 1258 BD46     		mov	sp, r7
 20671              		.cfi_def_cfa_register 13
 20672              		@ sp needed
 20673 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 20674              	.L786:
 20675 125e 00BF     		.align	2
 20676              	.L785:
 20677 1260 FC120000 		.word	.LC175
 20678 1264 041B0000 		.word	.LC257
 20679 1268 00000000 		.word	IMU_connected
 20680 126c F4120000 		.word	.LC174
 20681 1270 141B0000 		.word	.LC258
 20682 1274 00000000 		.word	N_IMU_Connected
 20683 1278 30110000 		.word	.LC151
 20684              		.cfi_endproc
 20685              	.LFE74:
 20686              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 20687              		.section	.rodata
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 453


 20688 1e92 0000     		.align	2
 20689              	.LC292:
 20690 1e94 486F7572 		.ascii	"Hour,Min,Sec,\000"
 20690      2C4D696E 
 20690      2C536563 
 20690      2C00
 20691 1ea2 0000     		.align	2
 20692              	.LC293:
 20693 1ea4 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 20693      25645F50 
 20693      6F732C00 
 20694              		.align	2
 20695              	.LC294:
 20696 1eb0 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 20696      25645F43 
 20696      7572722C 
 20696      00
 20697 1ebd 000000   		.align	2
 20698              	.LC295:
 20699 1ec0 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 20699      315F6163 
 20699      742C454D 
 20699      475F325F 
 20699      6163742C 
 20700 1ef3 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 20700      5F74696D 
 20700      652C546F 
 20700      74616C5F 
 20700      72657374 
 20701              		.section	.text.prepare_SD_legend,"ax",%progbits
 20702              		.align	2
 20703              		.global	prepare_SD_legend
 20704              		.thumb
 20705              		.thumb_func
 20706              		.type	prepare_SD_legend, %function
 20707              	prepare_SD_legend:
 20708              	.LFB75:
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** 
2688:..\src/command_processing.c **** //==============================================================================
2689:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2690:..\src/command_processing.c **** //==============================================================================
2691:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2692:..\src/command_processing.c **** {
 20709              		.loc 1 2692 0
 20710              		.cfi_startproc
 20711              		@ args = 0, pretend = 0, frame = 112
 20712              		@ frame_needed = 1, uses_anonymous_args = 0
 20713 0000 90B5     		push	{r4, r7, lr}
 20714              		.cfi_def_cfa_offset 12
 20715              		.cfi_offset 4, -12
 20716              		.cfi_offset 7, -8
 20717              		.cfi_offset 14, -4
 20718 0002 9DB0     		sub	sp, sp, #116
 20719              		.cfi_def_cfa_offset 128
 20720 0004 00AF     		add	r7, sp, #0
 20721              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 454


 20722 0006 7860     		str	r0, [r7, #4]
2693:..\src/command_processing.c ****     char str[100];  
2694:..\src/command_processing.c ****     int i;
2695:..\src/command_processing.c ****         
2696:..\src/command_processing.c ****     // Legend
2697:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 20723              		.loc 1 2697 0
 20724 0008 7B68     		ldr	r3, [r7, #4]
 20725 000a 2A4A     		ldr	r2, .L792
 20726 000c 1C46     		mov	r4, r3
 20727 000e 1346     		mov	r3, r2
 20728 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 20729 0012 2060     		str	r0, [r4]	@ unaligned
 20730 0014 6160     		str	r1, [r4, #4]	@ unaligned
 20731 0016 A260     		str	r2, [r4, #8]	@ unaligned
 20732 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 20733 001a A381     		strh	r3, [r4, #12]	@ unaligned
2698:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20734              		.loc 1 2698 0
 20735 001c 0123     		movs	r3, #1
 20736 001e FB66     		str	r3, [r7, #108]
 20737 0020 0FE0     		b	.L788
 20738              	.L789:
2699:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 20739              		.loc 1 2699 0 discriminator 3
 20740 0022 07F10803 		add	r3, r7, #8
 20741 0026 FA6E     		ldr	r2, [r7, #108]
 20742 0028 2349     		ldr	r1, .L792+4
 20743 002a 1846     		mov	r0, r3
 20744 002c FFF7FEFF 		bl	sprintf
2700:..\src/command_processing.c ****         strcat(info_string, str);
 20745              		.loc 1 2700 0 discriminator 3
 20746 0030 07F10803 		add	r3, r7, #8
 20747 0034 1946     		mov	r1, r3
 20748 0036 7868     		ldr	r0, [r7, #4]
 20749 0038 FFF7FEFF 		bl	strcat
2698:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20750              		.loc 1 2698 0 discriminator 3
 20751 003c FB6E     		ldr	r3, [r7, #108]
 20752 003e 0133     		adds	r3, r3, #1
 20753 0040 FB66     		str	r3, [r7, #108]
 20754              	.L788:
2698:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 20755              		.loc 1 2698 0 is_stmt 0 discriminator 1
 20756 0042 FB6E     		ldr	r3, [r7, #108]
 20757 0044 0A2B     		cmp	r3, #10
 20758 0046 ECDD     		ble	.L789
2701:..\src/command_processing.c ****     }
2702:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 20759              		.loc 1 2702 0 is_stmt 1
 20760 0048 0123     		movs	r3, #1
 20761 004a FB66     		str	r3, [r7, #108]
 20762 004c 0FE0     		b	.L790
 20763              	.L791:
2703:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20764              		.loc 1 2703 0 discriminator 3
 20765 004e 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 455


 20766 0052 FA6E     		ldr	r2, [r7, #108]
 20767 0054 1949     		ldr	r1, .L792+8
 20768 0056 1846     		mov	r0, r3
 20769 0058 FFF7FEFF 		bl	sprintf
2704:..\src/command_processing.c ****         strcat(info_string, str);
 20770              		.loc 1 2704 0 discriminator 3
 20771 005c 07F10803 		add	r3, r7, #8
 20772 0060 1946     		mov	r1, r3
 20773 0062 7868     		ldr	r0, [r7, #4]
 20774 0064 FFF7FEFF 		bl	strcat
2702:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20775              		.loc 1 2702 0 discriminator 3
 20776 0068 FB6E     		ldr	r3, [r7, #108]
 20777 006a 0133     		adds	r3, r3, #1
 20778 006c FB66     		str	r3, [r7, #108]
 20779              	.L790:
2702:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 20780              		.loc 1 2702 0 is_stmt 0 discriminator 1
 20781 006e FB6E     		ldr	r3, [r7, #108]
 20782 0070 042B     		cmp	r3, #4
 20783 0072 ECDD     		ble	.L791
2705:..\src/command_processing.c ****     }
2706:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 20784              		.loc 1 2706 0 is_stmt 1
 20785 0074 07F10803 		add	r3, r7, #8
 20786 0078 114A     		ldr	r2, .L792+12
 20787 007a 1846     		mov	r0, r3
 20788 007c 1146     		mov	r1, r2
 20789 007e 4D23     		movs	r3, #77
 20790 0080 1A46     		mov	r2, r3
 20791 0082 FFF7FEFF 		bl	memcpy
2707:..\src/command_processing.c ****     strcat(info_string, str);
 20792              		.loc 1 2707 0
 20793 0086 07F10803 		add	r3, r7, #8
 20794 008a 1946     		mov	r1, r3
 20795 008c 7868     		ldr	r0, [r7, #4]
 20796 008e FFF7FEFF 		bl	strcat
2708:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20797              		.loc 1 2708 0
 20798 0092 7868     		ldr	r0, [r7, #4]
 20799 0094 FFF7FEFF 		bl	strlen
 20800 0098 0346     		mov	r3, r0
 20801 009a 1A46     		mov	r2, r3
 20802 009c 7B68     		ldr	r3, [r7, #4]
 20803 009e 1344     		add	r3, r3, r2
 20804 00a0 084A     		ldr	r2, .L792+16
 20805 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 20806 00a4 9278     		ldrb	r2, [r2, #2]
 20807 00a6 1980     		strh	r1, [r3]	@ unaligned
 20808 00a8 9A70     		strb	r2, [r3, #2]
2709:..\src/command_processing.c **** }
 20809              		.loc 1 2709 0
 20810 00aa 00BF     		nop
 20811 00ac 7437     		adds	r7, r7, #116
 20812              		.cfi_def_cfa_offset 12
 20813 00ae BD46     		mov	sp, r7
 20814              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 456


 20815              		@ sp needed
 20816 00b0 90BD     		pop	{r4, r7, pc}
 20817              	.L793:
 20818 00b2 00BF     		.align	2
 20819              	.L792:
 20820 00b4 941E0000 		.word	.LC292
 20821 00b8 A41E0000 		.word	.LC293
 20822 00bc B01E0000 		.word	.LC294
 20823 00c0 C01E0000 		.word	.LC295
 20824 00c4 30110000 		.word	.LC151
 20825              		.cfi_endproc
 20826              	.LFE75:
 20827              		.size	prepare_SD_legend, .-prepare_SD_legend
 20828              		.section	.rodata
 20829 1f0d 000000   		.align	2
 20830              	.LC296:
 20831 1f10 25303264 		.ascii	"%02d,%02d,%02d,\000"
 20831      2C253032 
 20831      642C2530 
 20831      32642C00 
 20832              		.align	2
 20833              	.LC297:
 20834 1f20 256C752C 		.ascii	"%lu,\000"
 20834      00
 20835 1f25 000000   		.align	2
 20836              	.LC298:
 20837 1f28 256C752C 		.ascii	"%lu,%lu,\000"
 20837      256C752C 
 20837      00
 20838 1f31 000000   		.align	2
 20839              	.LC299:
 20840 1f34 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 20840      256C752C 
 20840      256C752C 
 20840      256C7500 
 20841              		.section	.text.prepare_SD_info,"ax",%progbits
 20842              		.align	2
 20843              		.global	prepare_SD_info
 20844              		.thumb
 20845              		.thumb_func
 20846              		.type	prepare_SD_info, %function
 20847              	prepare_SD_info:
 20848              	.LFB76:
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** 
2712:..\src/command_processing.c **** //==============================================================================
2713:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2714:..\src/command_processing.c **** //==============================================================================
2715:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2716:..\src/command_processing.c **** {
 20849              		.loc 1 2716 0
 20850              		.cfi_startproc
 20851              		@ args = 0, pretend = 0, frame = 112
 20852              		@ frame_needed = 1, uses_anonymous_args = 0
 20853 0000 90B5     		push	{r4, r7, lr}
 20854              		.cfi_def_cfa_offset 12
 20855              		.cfi_offset 4, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 457


 20856              		.cfi_offset 7, -8
 20857              		.cfi_offset 14, -4
 20858 0002 9FB0     		sub	sp, sp, #124
 20859              		.cfi_def_cfa_offset 136
 20860 0004 02AF     		add	r7, sp, #8
 20861              		.cfi_def_cfa 7, 128
 20862 0006 7860     		str	r0, [r7, #4]
2717:..\src/command_processing.c ****     char str[100];  
2718:..\src/command_processing.c ****     int i;
2719:..\src/command_processing.c ****             
2720:..\src/command_processing.c ****     strcpy(info_string, "");
 20863              		.loc 1 2720 0
 20864 0008 7B68     		ldr	r3, [r7, #4]
 20865 000a 0022     		movs	r2, #0
 20866 000c 1A70     		strb	r2, [r3]
2721:..\src/command_processing.c ****     
2722:..\src/command_processing.c ****     // Time
2723:..\src/command_processing.c ****     strcat(info_string, "");
2724:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 20867              		.loc 1 2724 0
 20868 000e 424B     		ldr	r3, .L799
 20869 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 20870 0014 1A46     		mov	r2, r3
 20871 0016 404B     		ldr	r3, .L799
 20872 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 20873 001c 1946     		mov	r1, r3
 20874 001e 3E4B     		ldr	r3, .L799
 20875 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 20876 0024 07F10800 		add	r0, r7, #8
 20877 0028 0093     		str	r3, [sp]
 20878 002a 0B46     		mov	r3, r1
 20879 002c 3B49     		ldr	r1, .L799+4
 20880 002e FFF7FEFF 		bl	sprintf
2725:..\src/command_processing.c ****     strcat(info_string, str);
 20881              		.loc 1 2725 0
 20882 0032 07F10803 		add	r3, r7, #8
 20883 0036 1946     		mov	r1, r3
 20884 0038 7868     		ldr	r0, [r7, #4]
 20885 003a FFF7FEFF 		bl	strcat
2726:..\src/command_processing.c **** 
2727:..\src/command_processing.c ****     // Pos_Bin
2728:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 20886              		.loc 1 2728 0
 20887 003e 0123     		movs	r3, #1
 20888 0040 FB66     		str	r3, [r7, #108]
 20889 0042 14E0     		b	.L795
 20890              	.L796:
2729:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20891              		.loc 1 2729 0 discriminator 3
 20892 0044 FB6E     		ldr	r3, [r7, #108]
 20893 0046 013B     		subs	r3, r3, #1
 20894 0048 334A     		ldr	r2, .L799
 20895 004a 0633     		adds	r3, r3, #6
 20896 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20897 0050 07F10803 		add	r3, r7, #8
 20898 0054 3249     		ldr	r1, .L799+8
 20899 0056 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 458


 20900 0058 FFF7FEFF 		bl	sprintf
2730:..\src/command_processing.c ****         strcat(info_string, str);
 20901              		.loc 1 2730 0 discriminator 3
 20902 005c 07F10803 		add	r3, r7, #8
 20903 0060 1946     		mov	r1, r3
 20904 0062 7868     		ldr	r0, [r7, #4]
 20905 0064 FFF7FEFF 		bl	strcat
2728:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20906              		.loc 1 2728 0 discriminator 3
 20907 0068 FB6E     		ldr	r3, [r7, #108]
 20908 006a 0133     		adds	r3, r3, #1
 20909 006c FB66     		str	r3, [r7, #108]
 20910              	.L795:
2728:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 20911              		.loc 1 2728 0 is_stmt 0 discriminator 1
 20912 006e FB6E     		ldr	r3, [r7, #108]
 20913 0070 0A2B     		cmp	r3, #10
 20914 0072 E7DD     		ble	.L796
2731:..\src/command_processing.c ****     }
2732:..\src/command_processing.c ****     
2733:..\src/command_processing.c ****     // Curr_Bin
2734:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 20915              		.loc 1 2734 0 is_stmt 1
 20916 0074 0123     		movs	r3, #1
 20917 0076 FB66     		str	r3, [r7, #108]
 20918 0078 14E0     		b	.L797
 20919              	.L798:
2735:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20920              		.loc 1 2735 0 discriminator 3
 20921 007a FB6E     		ldr	r3, [r7, #108]
 20922 007c 013B     		subs	r3, r3, #1
 20923 007e 264A     		ldr	r2, .L799
 20924 0080 1033     		adds	r3, r3, #16
 20925 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 20926 0086 07F10803 		add	r3, r7, #8
 20927 008a 2549     		ldr	r1, .L799+8
 20928 008c 1846     		mov	r0, r3
 20929 008e FFF7FEFF 		bl	sprintf
2736:..\src/command_processing.c ****         strcat(info_string, str);
 20930              		.loc 1 2736 0 discriminator 3
 20931 0092 07F10803 		add	r3, r7, #8
 20932 0096 1946     		mov	r1, r3
 20933 0098 7868     		ldr	r0, [r7, #4]
 20934 009a FFF7FEFF 		bl	strcat
2734:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20935              		.loc 1 2734 0 discriminator 3
 20936 009e FB6E     		ldr	r3, [r7, #108]
 20937 00a0 0133     		adds	r3, r3, #1
 20938 00a2 FB66     		str	r3, [r7, #108]
 20939              	.L797:
2734:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 20940              		.loc 1 2734 0 is_stmt 0 discriminator 1
 20941 00a4 FB6E     		ldr	r3, [r7, #108]
 20942 00a6 042B     		cmp	r3, #4
 20943 00a8 E7DD     		ble	.L798
2737:..\src/command_processing.c ****     }
2738:..\src/command_processing.c ****        
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 459


2739:..\src/command_processing.c ****     // EMG_1, EMG_2
2740:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 20944              		.loc 1 2740 0 is_stmt 1
 20945 00aa 1B4B     		ldr	r3, .L799
 20946 00ac 1A69     		ldr	r2, [r3, #16]
 20947 00ae 1A4B     		ldr	r3, .L799
 20948 00b0 5B69     		ldr	r3, [r3, #20]
 20949 00b2 07F10800 		add	r0, r7, #8
 20950 00b6 1B49     		ldr	r1, .L799+12
 20951 00b8 FFF7FEFF 		bl	sprintf
2741:..\src/command_processing.c ****     strcat(info_string, str);
 20952              		.loc 1 2741 0
 20953 00bc 07F10803 		add	r3, r7, #8
 20954 00c0 1946     		mov	r1, r3
 20955 00c2 7868     		ldr	r0, [r7, #4]
 20956 00c4 FFF7FEFF 		bl	strcat
2742:..\src/command_processing.c ****     
2743:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2744:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 20957              		.loc 1 2744 0
 20958 00c8 134B     		ldr	r3, .L799
 20959 00ca 196D     		ldr	r1, [r3, #80]
 20960 00cc 124B     		ldr	r3, .L799
 20961 00ce 5C6D     		ldr	r4, [r3, #84]
 20962 00d0 114B     		ldr	r3, .L799
 20963 00d2 9B6D     		ldr	r3, [r3, #88]
 20964 00d4 104A     		ldr	r2, .L799
 20965 00d6 D26D     		ldr	r2, [r2, #92]
 20966 00d8 07F10800 		add	r0, r7, #8
 20967 00dc 0192     		str	r2, [sp, #4]
 20968 00de 0093     		str	r3, [sp]
 20969 00e0 2346     		mov	r3, r4
 20970 00e2 0A46     		mov	r2, r1
 20971 00e4 1049     		ldr	r1, .L799+16
 20972 00e6 FFF7FEFF 		bl	sprintf
2745:..\src/command_processing.c ****     strcat(info_string, str);
 20973              		.loc 1 2745 0
 20974 00ea 07F10803 		add	r3, r7, #8
 20975 00ee 1946     		mov	r1, r3
 20976 00f0 7868     		ldr	r0, [r7, #4]
 20977 00f2 FFF7FEFF 		bl	strcat
2746:..\src/command_processing.c ****     
2747:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 20978              		.loc 1 2747 0
 20979 00f6 7868     		ldr	r0, [r7, #4]
 20980 00f8 FFF7FEFF 		bl	strlen
 20981 00fc 0346     		mov	r3, r0
 20982 00fe 1A46     		mov	r2, r3
 20983 0100 7B68     		ldr	r3, [r7, #4]
 20984 0102 1344     		add	r3, r3, r2
 20985 0104 094A     		ldr	r2, .L799+20
 20986 0106 1188     		ldrh	r1, [r2]	@ unaligned
 20987 0108 9278     		ldrb	r2, [r2, #2]
 20988 010a 1980     		strh	r1, [r3]	@ unaligned
 20989 010c 9A70     		strb	r2, [r3, #2]
2748:..\src/command_processing.c **** }
 20990              		.loc 1 2748 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 460


 20991 010e 00BF     		nop
 20992 0110 7437     		adds	r7, r7, #116
 20993              		.cfi_def_cfa_offset 12
 20994 0112 BD46     		mov	sp, r7
 20995              		.cfi_def_cfa_register 13
 20996              		@ sp needed
 20997 0114 90BD     		pop	{r4, r7, pc}
 20998              	.L800:
 20999 0116 00BF     		.align	2
 21000              	.L799:
 21001 0118 00000000 		.word	g_mem
 21002 011c 101F0000 		.word	.LC296
 21003 0120 201F0000 		.word	.LC297
 21004 0124 281F0000 		.word	.LC298
 21005 0128 341F0000 		.word	.LC299
 21006 012c 30110000 		.word	.LC151
 21007              		.cfi_endproc
 21008              	.LFE76:
 21009              		.size	prepare_SD_info, .-prepare_SD_info
 21010              		.section	.rodata
 21011              		.align	2
 21012              	.LC300:
 21013 1f44 54696D65 		.ascii	"Time,EMG1,EMG2\012\000"
 21013      2C454D47 
 21013      312C454D 
 21013      47320A00 
 21014              		.section	.text.prepare_SD_EMG_History_legend,"ax",%progbits
 21015              		.align	2
 21016              		.global	prepare_SD_EMG_History_legend
 21017              		.thumb
 21018              		.thumb_func
 21019              		.type	prepare_SD_EMG_History_legend, %function
 21020              	prepare_SD_EMG_History_legend:
 21021              	.LFB77:
2749:..\src/command_processing.c **** 
2750:..\src/command_processing.c **** //==============================================================================
2751:..\src/command_processing.c **** //                                            PREPARE SD CARD EMG HISTORY LEGEND
2752:..\src/command_processing.c **** //==============================================================================
2753:..\src/command_processing.c **** void prepare_SD_EMG_History_legend(char *info_string)
2754:..\src/command_processing.c **** {
 21022              		.loc 1 2754 0
 21023              		.cfi_startproc
 21024              		@ args = 0, pretend = 0, frame = 8
 21025              		@ frame_needed = 1, uses_anonymous_args = 0
 21026              		@ link register save eliminated.
 21027 0000 B0B4     		push	{r4, r5, r7}
 21028              		.cfi_def_cfa_offset 12
 21029              		.cfi_offset 4, -12
 21030              		.cfi_offset 5, -8
 21031              		.cfi_offset 7, -4
 21032 0002 83B0     		sub	sp, sp, #12
 21033              		.cfi_def_cfa_offset 24
 21034 0004 00AF     		add	r7, sp, #0
 21035              		.cfi_def_cfa_register 7
 21036 0006 7860     		str	r0, [r7, #4]
2755:..\src/command_processing.c ****         
2756:..\src/command_processing.c ****     // Legend
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 461


2757:..\src/command_processing.c ****     strcpy(info_string, "Time,EMG1,EMG2\n");
 21037              		.loc 1 2757 0
 21038 0008 7B68     		ldr	r3, [r7, #4]
 21039 000a 064A     		ldr	r2, .L802
 21040 000c 1C46     		mov	r4, r3
 21041 000e 1546     		mov	r5, r2
 21042 0010 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 21043 0012 2060     		str	r0, [r4]	@ unaligned
 21044 0014 6160     		str	r1, [r4, #4]	@ unaligned
 21045 0016 A260     		str	r2, [r4, #8]	@ unaligned
 21046 0018 E360     		str	r3, [r4, #12]	@ unaligned
2758:..\src/command_processing.c ****     
2759:..\src/command_processing.c **** }
 21047              		.loc 1 2759 0
 21048 001a 00BF     		nop
 21049 001c 0C37     		adds	r7, r7, #12
 21050              		.cfi_def_cfa_offset 12
 21051 001e BD46     		mov	sp, r7
 21052              		.cfi_def_cfa_register 13
 21053              		@ sp needed
 21054 0020 B0BC     		pop	{r4, r5, r7}
 21055              		.cfi_restore 7
 21056              		.cfi_restore 5
 21057              		.cfi_restore 4
 21058              		.cfi_def_cfa_offset 0
 21059 0022 7047     		bx	lr
 21060              	.L803:
 21061              		.align	2
 21062              	.L802:
 21063 0024 441F0000 		.word	.LC300
 21064              		.cfi_endproc
 21065              	.LFE77:
 21066              		.size	prepare_SD_EMG_History_legend, .-prepare_SD_EMG_History_legend
 21067              		.section	.rodata
 21068              		.align	2
 21069              	.LC301:
 21070 1f54 252E3166 		.ascii	"%.1f,%u,%u\012\000"
 21070      2C25752C 
 21070      25750A00 
 21071              		.global	__aeabi_dadd
 21072              		.global	__aeabi_d2f
 21073              		.section	.text.prepare_SD_EMG_history,"ax",%progbits
 21074              		.align	2
 21075              		.global	prepare_SD_EMG_history
 21076              		.thumb
 21077              		.thumb_func
 21078              		.type	prepare_SD_EMG_history, %function
 21079              	prepare_SD_EMG_history:
 21080              	.LFB78:
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c **** //==============================================================================
2762:..\src/command_processing.c **** //                                                   PREPARE SD CARD EMG HISTORY
2763:..\src/command_processing.c **** //==============================================================================
2764:..\src/command_processing.c **** void prepare_SD_EMG_history(char *info_string)
2765:..\src/command_processing.c **** {
 21081              		.loc 1 2765 0
 21082              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 462


 21083              		@ args = 0, pretend = 0, frame = 120
 21084              		@ frame_needed = 1, uses_anonymous_args = 0
 21085 0000 B0B5     		push	{r4, r5, r7, lr}
 21086              		.cfi_def_cfa_offset 16
 21087              		.cfi_offset 4, -16
 21088              		.cfi_offset 5, -12
 21089              		.cfi_offset 7, -8
 21090              		.cfi_offset 14, -4
 21091 0002 A0B0     		sub	sp, sp, #128
 21092              		.cfi_def_cfa_offset 144
 21093 0004 02AF     		add	r7, sp, #8
 21094              		.cfi_def_cfa 7, 136
 21095 0006 7860     		str	r0, [r7, #4]
2766:..\src/command_processing.c ****     char str_data[100] = "";
 21096              		.loc 1 2766 0
 21097 0008 0023     		movs	r3, #0
 21098 000a FB60     		str	r3, [r7, #12]
 21099 000c 07F11003 		add	r3, r7, #16
 21100 0010 6022     		movs	r2, #96
 21101 0012 0021     		movs	r1, #0
 21102 0014 1846     		mov	r0, r3
 21103 0016 FFF7FEFF 		bl	memset
2767:..\src/command_processing.c ****     uint16 v_idx = 0;
 21104              		.loc 1 2767 0
 21105 001a 0023     		movs	r3, #0
 21106 001c A7F87630 		strh	r3, [r7, #118]	@ movhi
2768:..\src/command_processing.c ****     static float h_time = 0.0;
2769:..\src/command_processing.c ****                 
2770:..\src/command_processing.c ****     strcpy(info_string, "");
 21107              		.loc 1 2770 0
 21108 0020 7B68     		ldr	r3, [r7, #4]
 21109 0022 0022     		movs	r2, #0
 21110 0024 1A70     		strb	r2, [r3]
 21111              	.LBB25:
2771:..\src/command_processing.c ****     
2772:..\src/command_processing.c ****     // Oldest samples of the vector
2773:..\src/command_processing.c ****     for (int i = 0; i < SAMPLES_FOR_EMG_HISTORY; i++){
 21112              		.loc 1 2773 0
 21113 0026 0023     		movs	r3, #0
 21114 0028 3B67     		str	r3, [r7, #112]
 21115 002a 4AE0     		b	.L805
 21116              	.L807:
2774:..\src/command_processing.c ****               
2775:..\src/command_processing.c ****         // Send line per line all the history vector
2776:..\src/command_processing.c ****         // First line (oldest) is made by values of emg_history_next_idx index (they will be the ne
2777:..\src/command_processing.c ****         v_idx = emg_history_next_idx + i;
 21117              		.loc 1 2777 0
 21118 002c 2C4B     		ldr	r3, .L808+8
 21119 002e 1B68     		ldr	r3, [r3]
 21120 0030 9AB2     		uxth	r2, r3
 21121 0032 3B6F     		ldr	r3, [r7, #112]
 21122 0034 9BB2     		uxth	r3, r3
 21123 0036 1344     		add	r3, r3, r2
 21124 0038 A7F87630 		strh	r3, [r7, #118]	@ movhi
2778:..\src/command_processing.c ****         if (v_idx > SAMPLES_FOR_EMG_HISTORY){
 21125              		.loc 1 2778 0
 21126 003c B7F87630 		ldrh	r3, [r7, #118]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 463


 21127 0040 B3F5167F 		cmp	r3, #600
 21128 0044 05D9     		bls	.L806
2779:..\src/command_processing.c ****             v_idx -= SAMPLES_FOR_EMG_HISTORY;
 21129              		.loc 1 2779 0
 21130 0046 B7F87630 		ldrh	r3, [r7, #118]	@ movhi
 21131 004a A3F51673 		sub	r3, r3, #600
 21132 004e A7F87630 		strh	r3, [r7, #118]	@ movhi
 21133              	.L806:
2780:..\src/command_processing.c ****         }
2781:..\src/command_processing.c ****         
2782:..\src/command_processing.c ****         // Time vector is reconstructed setting oldest samples as t=0.0s
2783:..\src/command_processing.c ****         sprintf(str_data, "%.1f,%u,%u\n", h_time, emg_history[v_idx][0], emg_history[v_idx][1]);
 21134              		.loc 1 2783 0 discriminator 2
 21135 0052 244B     		ldr	r3, .L808+12
 21136 0054 1B68     		ldr	r3, [r3]	@ float
 21137 0056 1846     		mov	r0, r3
 21138 0058 FFF7FEFF 		bl	__aeabi_f2d
 21139 005c 0446     		mov	r4, r0
 21140 005e 0D46     		mov	r5, r1
 21141 0060 B7F87630 		ldrh	r3, [r7, #118]
 21142 0064 204A     		ldr	r2, .L808+16
 21143 0066 32F82330 		ldrh	r3, [r2, r3, lsl #2]
 21144 006a 1946     		mov	r1, r3
 21145 006c B7F87630 		ldrh	r3, [r7, #118]
 21146 0070 1D4A     		ldr	r2, .L808+16
 21147 0072 9B00     		lsls	r3, r3, #2
 21148 0074 1344     		add	r3, r3, r2
 21149 0076 5B88     		ldrh	r3, [r3, #2]
 21150 0078 07F10C00 		add	r0, r7, #12
 21151 007c 0193     		str	r3, [sp, #4]
 21152 007e 0091     		str	r1, [sp]
 21153 0080 2246     		mov	r2, r4
 21154 0082 2B46     		mov	r3, r5
 21155 0084 1949     		ldr	r1, .L808+20
 21156 0086 FFF7FEFF 		bl	sprintf
2784:..\src/command_processing.c ****         
2785:..\src/command_processing.c ****         strcat(info_string, str_data);
 21157              		.loc 1 2785 0 discriminator 2
 21158 008a 07F10C03 		add	r3, r7, #12
 21159 008e 1946     		mov	r1, r3
 21160 0090 7868     		ldr	r0, [r7, #4]
 21161 0092 FFF7FEFF 		bl	strcat
2786:..\src/command_processing.c ****         
2787:..\src/command_processing.c ****         h_time += 0.2;      // Row time interval is 200ms (5Hz)
 21162              		.loc 1 2787 0 discriminator 2
 21163 0096 134B     		ldr	r3, .L808+12
 21164 0098 1B68     		ldr	r3, [r3]	@ float
 21165 009a 1846     		mov	r0, r3
 21166 009c FFF7FEFF 		bl	__aeabi_f2d
 21167 00a0 0DA3     		adr	r3, .L808
 21168 00a2 D3E90023 		ldrd	r2, [r3]
 21169 00a6 FFF7FEFF 		bl	__aeabi_dadd
 21170 00aa 0346     		mov	r3, r0
 21171 00ac 0C46     		mov	r4, r1
 21172 00ae 1846     		mov	r0, r3
 21173 00b0 2146     		mov	r1, r4
 21174 00b2 FFF7FEFF 		bl	__aeabi_d2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 464


 21175 00b6 0246     		mov	r2, r0
 21176 00b8 0A4B     		ldr	r3, .L808+12
 21177 00ba 1A60     		str	r2, [r3]	@ float
2773:..\src/command_processing.c ****               
 21178              		.loc 1 2773 0 discriminator 2
 21179 00bc 3B6F     		ldr	r3, [r7, #112]
 21180 00be 0133     		adds	r3, r3, #1
 21181 00c0 3B67     		str	r3, [r7, #112]
 21182              	.L805:
2773:..\src/command_processing.c ****               
 21183              		.loc 1 2773 0 is_stmt 0 discriminator 1
 21184 00c2 3B6F     		ldr	r3, [r7, #112]
 21185 00c4 B3F5167F 		cmp	r3, #600
 21186 00c8 B0DB     		blt	.L807
 21187              	.LBE25:
2788:..\src/command_processing.c **** 
2789:..\src/command_processing.c ****     }
2790:..\src/command_processing.c ****     
2791:..\src/command_processing.c **** }
 21188              		.loc 1 2791 0 is_stmt 1
 21189 00ca 00BF     		nop
 21190 00cc 7837     		adds	r7, r7, #120
 21191              		.cfi_def_cfa_offset 16
 21192 00ce BD46     		mov	sp, r7
 21193              		.cfi_def_cfa_register 13
 21194              		@ sp needed
 21195 00d0 B0BD     		pop	{r4, r5, r7, pc}
 21196              	.L809:
 21197 00d2 00BFAFF3 		.align	3
 21197      0080
 21198              	.L808:
 21199 00d8 9A999999 		.word	-1717986918
 21200 00dc 9999C93F 		.word	1070176665
 21201 00e0 00000000 		.word	emg_history_next_idx
 21202 00e4 00000000 		.word	h_time.11212
 21203 00e8 00000000 		.word	emg_history
 21204 00ec 541F0000 		.word	.LC301
 21205              		.cfi_endproc
 21206              	.LFE78:
 21207              		.size	prepare_SD_EMG_history, .-prepare_SD_EMG_history
 21208              		.section	.rodata
 21209              		.align	2
 21210              	.LC302:
 21211 1f60 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 21211      4F525320 
 21211      494E464F 
 21211      0D0A00
 21212 1f6f 00       		.align	2
 21213              	.LC303:
 21214 1f70 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 21214      3A202564 
 21214      09256409 
 21214      25640D0A 
 21214      00
 21215 1f81 000000   		.align	2
 21216              	.LC304:
 21217 1f84 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 465


 21217      6F3A2025 
 21217      64092564 
 21217      0925640D 
 21217      0A00
 21218 1f96 0000     		.align	2
 21219              	.LC305:
 21220 1f98 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 21220      3A202564 
 21220      09256409 
 21220      25640D0A 
 21220      00
 21221 1fa9 000000   		.align	2
 21222              	.LC306:
 21223 1fac 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 21223      743A2025 
 21223      2E336609 
 21223      252E3366 
 21223      09252E33 
 21224 1fc9 000000   		.align	2
 21225              	.LC307:
 21226 1fcc 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 21226      70657261 
 21226      74757265 
 21226      3A202564 
 21226      0D0A00
 21227              		.section	.text.IMU_reading_info,"ax",%progbits
 21228              		.align	2
 21229              		.global	IMU_reading_info
 21230              		.thumb
 21231              		.thumb_func
 21232              		.type	IMU_reading_info, %function
 21233              	IMU_reading_info:
 21234              	.LFB79:
2792:..\src/command_processing.c **** 
2793:..\src/command_processing.c **** //==============================================================================
2794:..\src/command_processing.c **** //                                                              IMU READING INFO
2795:..\src/command_processing.c **** //==============================================================================
2796:..\src/command_processing.c **** 
2797:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2798:..\src/command_processing.c **** {
 21235              		.loc 1 2798 0
 21236              		.cfi_startproc
 21237              		@ args = 0, pretend = 0, frame = 312
 21238              		@ frame_needed = 1, uses_anonymous_args = 0
 21239 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 21240              		.cfi_def_cfa_offset 32
 21241              		.cfi_offset 4, -32
 21242              		.cfi_offset 5, -28
 21243              		.cfi_offset 7, -24
 21244              		.cfi_offset 8, -20
 21245              		.cfi_offset 9, -16
 21246              		.cfi_offset 10, -12
 21247              		.cfi_offset 11, -8
 21248              		.cfi_offset 14, -4
 21249 0004 D4B0     		sub	sp, sp, #336
 21250              		.cfi_def_cfa_offset 368
 21251 0006 06AF     		add	r7, sp, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 466


 21252              		.cfi_def_cfa 7, 344
 21253 0008 3B1D     		adds	r3, r7, #4
 21254 000a 1860     		str	r0, [r3]
2799:..\src/command_processing.c ****     char str[300];  
2800:..\src/command_processing.c ****     int i;
2801:..\src/command_processing.c ****                  
2802:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 21255              		.loc 1 2802 0
 21256 000c 3B1D     		adds	r3, r7, #4
 21257 000e 1868     		ldr	r0, [r3]
 21258 0010 FFF7FEFF 		bl	strlen
 21259 0014 0346     		mov	r3, r0
 21260 0016 1A46     		mov	r2, r3
 21261 0018 3B1D     		adds	r3, r7, #4
 21262 001a 1B68     		ldr	r3, [r3]
 21263 001c 1344     		add	r3, r3, r2
 21264 001e C94A     		ldr	r2, .L818
 21265 0020 1C46     		mov	r4, r3
 21266 0022 1346     		mov	r3, r2
 21267 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 21268 0026 2060     		str	r0, [r4]	@ unaligned
 21269 0028 6160     		str	r1, [r4, #4]	@ unaligned
 21270 002a A260     		str	r2, [r4, #8]	@ unaligned
 21271 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 21272 002e 9B78     		ldrb	r3, [r3, #2]
 21273 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 21274 0032 A373     		strb	r3, [r4, #14]
2803:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 21275              		.loc 1 2803 0
 21276 0034 0023     		movs	r3, #0
 21277 0036 C7F83431 		str	r3, [r7, #308]
 21278 003a 66E1     		b	.L811
 21279              	.L817:
2804:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21280              		.loc 1 2804 0
 21281 003c C24A     		ldr	r2, .L818+4
 21282 003e D7F83431 		ldr	r3, [r7, #308]
 21283 0042 1344     		add	r3, r3, r2
 21284 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21285 0046 07F10800 		add	r0, r7, #8
 21286 004a D7F83421 		ldr	r2, [r7, #308]
 21287 004e BF49     		ldr	r1, .L818+8
 21288 0050 FFF7FEFF 		bl	sprintf
2805:..\src/command_processing.c ****         strcat(info_string, str);
 21289              		.loc 1 2805 0
 21290 0054 07F10802 		add	r2, r7, #8
 21291 0058 3B1D     		adds	r3, r7, #4
 21292 005a 1146     		mov	r1, r2
 21293 005c 1868     		ldr	r0, [r3]
 21294 005e FFF7FEFF 		bl	strcat
2806:..\src/command_processing.c ****         
2807:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 21295              		.loc 1 2807 0
 21296 0062 B94A     		ldr	r2, .L818+4
 21297 0064 D7F83431 		ldr	r3, [r7, #308]
 21298 0068 1344     		add	r3, r3, r2
 21299 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 467


 21300 006c 1946     		mov	r1, r3
 21301 006e B84A     		ldr	r2, .L818+12
 21302 0070 0B46     		mov	r3, r1
 21303 0072 9B00     		lsls	r3, r3, #2
 21304 0074 0B44     		add	r3, r3, r1
 21305 0076 1344     		add	r3, r3, r2
 21306 0078 03F20223 		addw	r3, r3, #514
 21307 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21308 007e 002B     		cmp	r3, #0
 21309 0080 31D0     		beq	.L812
2808:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 21310              		.loc 1 2808 0
 21311 0082 B449     		ldr	r1, .L818+16
 21312 0084 D7F83421 		ldr	r2, [r7, #308]
 21313 0088 1346     		mov	r3, r2
 21314 008a 9B00     		lsls	r3, r3, #2
 21315 008c 1344     		add	r3, r3, r2
 21316 008e DB00     		lsls	r3, r3, #3
 21317 0090 0B44     		add	r3, r3, r1
 21318 0092 0233     		adds	r3, r3, #2
 21319 0094 B3F90030 		ldrsh	r3, [r3]
 21320 0098 1C46     		mov	r4, r3
 21321 009a AE49     		ldr	r1, .L818+16
 21322 009c D7F83421 		ldr	r2, [r7, #308]
 21323 00a0 1346     		mov	r3, r2
 21324 00a2 9B00     		lsls	r3, r3, #2
 21325 00a4 1344     		add	r3, r3, r2
 21326 00a6 DB00     		lsls	r3, r3, #3
 21327 00a8 0B44     		add	r3, r3, r1
 21328 00aa 0433     		adds	r3, r3, #4
 21329 00ac B3F90030 		ldrsh	r3, [r3]
 21330 00b0 1D46     		mov	r5, r3
 21331 00b2 A849     		ldr	r1, .L818+16
 21332 00b4 D7F83421 		ldr	r2, [r7, #308]
 21333 00b8 1346     		mov	r3, r2
 21334 00ba 9B00     		lsls	r3, r3, #2
 21335 00bc 1344     		add	r3, r3, r2
 21336 00be DB00     		lsls	r3, r3, #3
 21337 00c0 0B44     		add	r3, r3, r1
 21338 00c2 0633     		adds	r3, r3, #6
 21339 00c4 B3F90030 		ldrsh	r3, [r3]
 21340 00c8 07F10800 		add	r0, r7, #8
 21341 00cc 0093     		str	r3, [sp]
 21342 00ce 2B46     		mov	r3, r5
 21343 00d0 2246     		mov	r2, r4
 21344 00d2 A149     		ldr	r1, .L818+20
 21345 00d4 FFF7FEFF 		bl	sprintf
2809:..\src/command_processing.c ****             strcat(info_string, str);
 21346              		.loc 1 2809 0
 21347 00d8 07F10802 		add	r2, r7, #8
 21348 00dc 3B1D     		adds	r3, r7, #4
 21349 00de 1146     		mov	r1, r2
 21350 00e0 1868     		ldr	r0, [r3]
 21351 00e2 FFF7FEFF 		bl	strcat
 21352              	.L812:
2810:..\src/command_processing.c ****         }
2811:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 468


2812:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 21353              		.loc 1 2812 0
 21354 00e6 984A     		ldr	r2, .L818+4
 21355 00e8 D7F83431 		ldr	r3, [r7, #308]
 21356 00ec 1344     		add	r3, r3, r2
 21357 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21358 00f0 1946     		mov	r1, r3
 21359 00f2 974A     		ldr	r2, .L818+12
 21360 00f4 0B46     		mov	r3, r1
 21361 00f6 9B00     		lsls	r3, r3, #2
 21362 00f8 0B44     		add	r3, r3, r1
 21363 00fa 1344     		add	r3, r3, r2
 21364 00fc 03F20323 		addw	r3, r3, #515
 21365 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21366 0102 002B     		cmp	r3, #0
 21367 0104 31D0     		beq	.L813
2813:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 21368              		.loc 1 2813 0
 21369 0106 9349     		ldr	r1, .L818+16
 21370 0108 D7F83421 		ldr	r2, [r7, #308]
 21371 010c 1346     		mov	r3, r2
 21372 010e 9B00     		lsls	r3, r3, #2
 21373 0110 1344     		add	r3, r3, r2
 21374 0112 DB00     		lsls	r3, r3, #3
 21375 0114 0B44     		add	r3, r3, r1
 21376 0116 0833     		adds	r3, r3, #8
 21377 0118 B3F90030 		ldrsh	r3, [r3]
 21378 011c 1C46     		mov	r4, r3
 21379 011e 8D49     		ldr	r1, .L818+16
 21380 0120 D7F83421 		ldr	r2, [r7, #308]
 21381 0124 1346     		mov	r3, r2
 21382 0126 9B00     		lsls	r3, r3, #2
 21383 0128 1344     		add	r3, r3, r2
 21384 012a DB00     		lsls	r3, r3, #3
 21385 012c 0B44     		add	r3, r3, r1
 21386 012e 0A33     		adds	r3, r3, #10
 21387 0130 B3F90030 		ldrsh	r3, [r3]
 21388 0134 1D46     		mov	r5, r3
 21389 0136 8749     		ldr	r1, .L818+16
 21390 0138 D7F83421 		ldr	r2, [r7, #308]
 21391 013c 1346     		mov	r3, r2
 21392 013e 9B00     		lsls	r3, r3, #2
 21393 0140 1344     		add	r3, r3, r2
 21394 0142 DB00     		lsls	r3, r3, #3
 21395 0144 0B44     		add	r3, r3, r1
 21396 0146 0C33     		adds	r3, r3, #12
 21397 0148 B3F90030 		ldrsh	r3, [r3]
 21398 014c 07F10800 		add	r0, r7, #8
 21399 0150 0093     		str	r3, [sp]
 21400 0152 2B46     		mov	r3, r5
 21401 0154 2246     		mov	r2, r4
 21402 0156 8149     		ldr	r1, .L818+24
 21403 0158 FFF7FEFF 		bl	sprintf
2814:..\src/command_processing.c ****             strcat(info_string, str);
 21404              		.loc 1 2814 0
 21405 015c 07F10802 		add	r2, r7, #8
 21406 0160 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 469


 21407 0162 1146     		mov	r1, r2
 21408 0164 1868     		ldr	r0, [r3]
 21409 0166 FFF7FEFF 		bl	strcat
 21410              	.L813:
2815:..\src/command_processing.c ****         }
2816:..\src/command_processing.c **** 
2817:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 21411              		.loc 1 2817 0
 21412 016a 774A     		ldr	r2, .L818+4
 21413 016c D7F83431 		ldr	r3, [r7, #308]
 21414 0170 1344     		add	r3, r3, r2
 21415 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21416 0174 1946     		mov	r1, r3
 21417 0176 764A     		ldr	r2, .L818+12
 21418 0178 0B46     		mov	r3, r1
 21419 017a 9B00     		lsls	r3, r3, #2
 21420 017c 0B44     		add	r3, r3, r1
 21421 017e 1344     		add	r3, r3, r2
 21422 0180 03F50173 		add	r3, r3, #516
 21423 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21424 0186 002B     		cmp	r3, #0
 21425 0188 31D0     		beq	.L814
2818:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 21426              		.loc 1 2818 0
 21427 018a 7249     		ldr	r1, .L818+16
 21428 018c D7F83421 		ldr	r2, [r7, #308]
 21429 0190 1346     		mov	r3, r2
 21430 0192 9B00     		lsls	r3, r3, #2
 21431 0194 1344     		add	r3, r3, r2
 21432 0196 DB00     		lsls	r3, r3, #3
 21433 0198 0B44     		add	r3, r3, r1
 21434 019a 0E33     		adds	r3, r3, #14
 21435 019c B3F90030 		ldrsh	r3, [r3]
 21436 01a0 1C46     		mov	r4, r3
 21437 01a2 6C49     		ldr	r1, .L818+16
 21438 01a4 D7F83421 		ldr	r2, [r7, #308]
 21439 01a8 1346     		mov	r3, r2
 21440 01aa 9B00     		lsls	r3, r3, #2
 21441 01ac 1344     		add	r3, r3, r2
 21442 01ae DB00     		lsls	r3, r3, #3
 21443 01b0 0B44     		add	r3, r3, r1
 21444 01b2 1033     		adds	r3, r3, #16
 21445 01b4 B3F90030 		ldrsh	r3, [r3]
 21446 01b8 1D46     		mov	r5, r3
 21447 01ba 6649     		ldr	r1, .L818+16
 21448 01bc D7F83421 		ldr	r2, [r7, #308]
 21449 01c0 1346     		mov	r3, r2
 21450 01c2 9B00     		lsls	r3, r3, #2
 21451 01c4 1344     		add	r3, r3, r2
 21452 01c6 DB00     		lsls	r3, r3, #3
 21453 01c8 0B44     		add	r3, r3, r1
 21454 01ca 1233     		adds	r3, r3, #18
 21455 01cc B3F90030 		ldrsh	r3, [r3]
 21456 01d0 07F10800 		add	r0, r7, #8
 21457 01d4 0093     		str	r3, [sp]
 21458 01d6 2B46     		mov	r3, r5
 21459 01d8 2246     		mov	r2, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 470


 21460 01da 6149     		ldr	r1, .L818+28
 21461 01dc FFF7FEFF 		bl	sprintf
2819:..\src/command_processing.c ****             strcat(info_string, str);
 21462              		.loc 1 2819 0
 21463 01e0 07F10802 		add	r2, r7, #8
 21464 01e4 3B1D     		adds	r3, r7, #4
 21465 01e6 1146     		mov	r1, r2
 21466 01e8 1868     		ldr	r0, [r3]
 21467 01ea FFF7FEFF 		bl	strcat
 21468              	.L814:
2820:..\src/command_processing.c ****         }
2821:..\src/command_processing.c ****         
2822:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 21469              		.loc 1 2822 0
 21470 01ee 564A     		ldr	r2, .L818+4
 21471 01f0 D7F83431 		ldr	r3, [r7, #308]
 21472 01f4 1344     		add	r3, r3, r2
 21473 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21474 01f8 1946     		mov	r1, r3
 21475 01fa 554A     		ldr	r2, .L818+12
 21476 01fc 0B46     		mov	r3, r1
 21477 01fe 9B00     		lsls	r3, r3, #2
 21478 0200 0B44     		add	r3, r3, r1
 21479 0202 1344     		add	r3, r3, r2
 21480 0204 03F20523 		addw	r3, r3, #517
 21481 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21482 020a 002B     		cmp	r3, #0
 21483 020c 4FD0     		beq	.L815
2823:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 21484              		.loc 1 2823 0
 21485 020e 5149     		ldr	r1, .L818+16
 21486 0210 D7F83421 		ldr	r2, [r7, #308]
 21487 0214 1346     		mov	r3, r2
 21488 0216 9B00     		lsls	r3, r3, #2
 21489 0218 1344     		add	r3, r3, r2
 21490 021a DB00     		lsls	r3, r3, #3
 21491 021c 0B44     		add	r3, r3, r1
 21492 021e 1433     		adds	r3, r3, #20
 21493 0220 1B68     		ldr	r3, [r3]	@ float
 21494 0222 1846     		mov	r0, r3
 21495 0224 FFF7FEFF 		bl	__aeabi_f2d
 21496 0228 8246     		mov	r10, r0
 21497 022a 8B46     		mov	fp, r1
 21498 022c 4949     		ldr	r1, .L818+16
 21499 022e D7F83421 		ldr	r2, [r7, #308]
 21500 0232 1346     		mov	r3, r2
 21501 0234 9B00     		lsls	r3, r3, #2
 21502 0236 1344     		add	r3, r3, r2
 21503 0238 DB00     		lsls	r3, r3, #3
 21504 023a 0B44     		add	r3, r3, r1
 21505 023c 1833     		adds	r3, r3, #24
 21506 023e 1B68     		ldr	r3, [r3]	@ float
 21507 0240 1846     		mov	r0, r3
 21508 0242 FFF7FEFF 		bl	__aeabi_f2d
 21509 0246 0446     		mov	r4, r0
 21510 0248 0D46     		mov	r5, r1
 21511 024a 4249     		ldr	r1, .L818+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 471


 21512 024c D7F83421 		ldr	r2, [r7, #308]
 21513 0250 1346     		mov	r3, r2
 21514 0252 9B00     		lsls	r3, r3, #2
 21515 0254 1344     		add	r3, r3, r2
 21516 0256 DB00     		lsls	r3, r3, #3
 21517 0258 0B44     		add	r3, r3, r1
 21518 025a 1C33     		adds	r3, r3, #28
 21519 025c 1B68     		ldr	r3, [r3]	@ float
 21520 025e 1846     		mov	r0, r3
 21521 0260 FFF7FEFF 		bl	__aeabi_f2d
 21522 0264 8046     		mov	r8, r0
 21523 0266 8946     		mov	r9, r1
 21524 0268 3A49     		ldr	r1, .L818+16
 21525 026a D7F83421 		ldr	r2, [r7, #308]
 21526 026e 1346     		mov	r3, r2
 21527 0270 9B00     		lsls	r3, r3, #2
 21528 0272 1344     		add	r3, r3, r2
 21529 0274 DB00     		lsls	r3, r3, #3
 21530 0276 0B44     		add	r3, r3, r1
 21531 0278 2033     		adds	r3, r3, #32
 21532 027a 1B68     		ldr	r3, [r3]	@ float
 21533 027c 1846     		mov	r0, r3
 21534 027e FFF7FEFF 		bl	__aeabi_f2d
 21535 0282 0246     		mov	r2, r0
 21536 0284 0B46     		mov	r3, r1
 21537 0286 07F10800 		add	r0, r7, #8
 21538 028a CDE90423 		strd	r2, [sp, #16]
 21539 028e CDE90289 		strd	r8, [sp, #8]
 21540 0292 CDE90045 		strd	r4, [sp]
 21541 0296 5246     		mov	r2, r10
 21542 0298 5B46     		mov	r3, fp
 21543 029a 3249     		ldr	r1, .L818+32
 21544 029c FFF7FEFF 		bl	sprintf
2824:..\src/command_processing.c ****             strcat(info_string, str);
 21545              		.loc 1 2824 0
 21546 02a0 07F10802 		add	r2, r7, #8
 21547 02a4 3B1D     		adds	r3, r7, #4
 21548 02a6 1146     		mov	r1, r2
 21549 02a8 1868     		ldr	r0, [r3]
 21550 02aa FFF7FEFF 		bl	strcat
 21551              	.L815:
2825:..\src/command_processing.c ****         }
2826:..\src/command_processing.c ****         
2827:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 21552              		.loc 1 2827 0
 21553 02ae 264A     		ldr	r2, .L818+4
 21554 02b0 D7F83431 		ldr	r3, [r7, #308]
 21555 02b4 1344     		add	r3, r3, r2
 21556 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21557 02b8 1946     		mov	r1, r3
 21558 02ba 254A     		ldr	r2, .L818+12
 21559 02bc 0B46     		mov	r3, r1
 21560 02be 9B00     		lsls	r3, r3, #2
 21561 02c0 0B44     		add	r3, r3, r1
 21562 02c2 1344     		add	r3, r3, r2
 21563 02c4 03F20623 		addw	r3, r3, #518
 21564 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 472


 21565 02ca 002B     		cmp	r3, #0
 21566 02cc 18D0     		beq	.L816
2828:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 21567              		.loc 1 2828 0
 21568 02ce 2149     		ldr	r1, .L818+16
 21569 02d0 D7F83421 		ldr	r2, [r7, #308]
 21570 02d4 1346     		mov	r3, r2
 21571 02d6 9B00     		lsls	r3, r3, #2
 21572 02d8 1344     		add	r3, r3, r2
 21573 02da DB00     		lsls	r3, r3, #3
 21574 02dc 0B44     		add	r3, r3, r1
 21575 02de 2433     		adds	r3, r3, #36
 21576 02e0 B3F90030 		ldrsh	r3, [r3]
 21577 02e4 1A46     		mov	r2, r3
 21578 02e6 07F10803 		add	r3, r7, #8
 21579 02ea 1F49     		ldr	r1, .L818+36
 21580 02ec 1846     		mov	r0, r3
 21581 02ee FFF7FEFF 		bl	sprintf
2829:..\src/command_processing.c ****             strcat(info_string, str);
 21582              		.loc 1 2829 0
 21583 02f2 07F10802 		add	r2, r7, #8
 21584 02f6 3B1D     		adds	r3, r7, #4
 21585 02f8 1146     		mov	r1, r2
 21586 02fa 1868     		ldr	r0, [r3]
 21587 02fc FFF7FEFF 		bl	strcat
 21588              	.L816:
2803:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21589              		.loc 1 2803 0 discriminator 2
 21590 0300 D7F83431 		ldr	r3, [r7, #308]
 21591 0304 0133     		adds	r3, r3, #1
 21592 0306 C7F83431 		str	r3, [r7, #308]
 21593              	.L811:
2803:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 21594              		.loc 1 2803 0 is_stmt 0 discriminator 1
 21595 030a 184B     		ldr	r3, .L818+40
 21596 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21597 030e 1A46     		mov	r2, r3
 21598 0310 D7F83431 		ldr	r3, [r7, #308]
 21599 0314 9A42     		cmp	r2, r3
 21600 0316 3FF791AE 		bgt	.L817
2830:..\src/command_processing.c ****         }
2831:..\src/command_processing.c ****         
2832:..\src/command_processing.c ****     }
2833:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 21601              		.loc 1 2833 0 is_stmt 1
 21602 031a 3B1D     		adds	r3, r7, #4
 21603 031c 1868     		ldr	r0, [r3]
 21604 031e FFF7FEFF 		bl	strlen
 21605 0322 0346     		mov	r3, r0
 21606 0324 1A46     		mov	r2, r3
 21607 0326 3B1D     		adds	r3, r7, #4
 21608 0328 1B68     		ldr	r3, [r3]
 21609 032a 1344     		add	r3, r3, r2
 21610 032c 104A     		ldr	r2, .L818+44
 21611 032e 1188     		ldrh	r1, [r2]	@ unaligned
 21612 0330 9278     		ldrb	r2, [r2, #2]
 21613 0332 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 473


 21614 0334 9A70     		strb	r2, [r3, #2]
2834:..\src/command_processing.c **** }
 21615              		.loc 1 2834 0
 21616 0336 00BF     		nop
 21617 0338 07F59C77 		add	r7, r7, #312
 21618              		.cfi_def_cfa_offset 32
 21619 033c BD46     		mov	sp, r7
 21620              		.cfi_def_cfa_register 13
 21621              		@ sp needed
 21622 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 21623              	.L819:
 21624 0342 00BF     		.align	2
 21625              	.L818:
 21626 0344 601F0000 		.word	.LC302
 21627 0348 00000000 		.word	IMU_connected
 21628 034c B81A0000 		.word	.LC253
 21629 0350 00000000 		.word	c_mem
 21630 0354 00000000 		.word	g_imu
 21631 0358 701F0000 		.word	.LC303
 21632 035c 841F0000 		.word	.LC304
 21633 0360 981F0000 		.word	.LC305
 21634 0364 AC1F0000 		.word	.LC306
 21635 0368 CC1F0000 		.word	.LC307
 21636 036c 00000000 		.word	N_IMU_Connected
 21637 0370 30110000 		.word	.LC151
 21638              		.cfi_endproc
 21639              	.LFE79:
 21640              		.size	IMU_reading_info, .-IMU_reading_info
 21641              		.section	.text.commWrite_old_id,"ax",%progbits
 21642              		.align	2
 21643              		.global	commWrite_old_id
 21644              		.thumb
 21645              		.thumb_func
 21646              		.type	commWrite_old_id, %function
 21647              	commWrite_old_id:
 21648              	.LFB80:
2835:..\src/command_processing.c **** 
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2838:..\src/command_processing.c **** //==============================================================================
2839:..\src/command_processing.c **** 
2840:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2841:..\src/command_processing.c **** {
 21649              		.loc 1 2841 0
 21650              		.cfi_startproc
 21651              		@ args = 0, pretend = 0, frame = 16
 21652              		@ frame_needed = 1, uses_anonymous_args = 0
 21653 0000 80B5     		push	{r7, lr}
 21654              		.cfi_def_cfa_offset 8
 21655              		.cfi_offset 7, -8
 21656              		.cfi_offset 14, -4
 21657 0002 84B0     		sub	sp, sp, #16
 21658              		.cfi_def_cfa_offset 24
 21659 0004 00AF     		add	r7, sp, #0
 21660              		.cfi_def_cfa_register 7
 21661 0006 7860     		str	r0, [r7, #4]
 21662 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 474


 21663 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21664 000c 1346     		mov	r3, r2
 21665 000e 7B70     		strb	r3, [r7, #1]
2842:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c ****     // frame - start
2845:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21666              		.loc 1 2845 0
 21667 0010 3A20     		movs	r0, #58
 21668 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2846:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21669              		.loc 1 2846 0
 21670 0016 3A20     		movs	r0, #58
 21671 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2847:..\src/command_processing.c ****     // frame - ID
2848:..\src/command_processing.c ****     //if(old_id)
2849:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 21672              		.loc 1 2849 0
 21673 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21674 001e 1846     		mov	r0, r3
 21675 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2850:..\src/command_processing.c ****     //else
2851:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2852:..\src/command_processing.c ****         
2853:..\src/command_processing.c ****     // frame - length
2854:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21676              		.loc 1 2854 0
 21677 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21678 0026 DBB2     		uxtb	r3, r3
 21679 0028 1846     		mov	r0, r3
 21680 002a FFF7FEFF 		bl	UART_RS485_PutChar
2855:..\src/command_processing.c ****     // frame - packet data
2856:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21681              		.loc 1 2856 0
 21682 002e 0023     		movs	r3, #0
 21683 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21684 0032 09E0     		b	.L821
 21685              	.L822:
2857:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21686              		.loc 1 2857 0 discriminator 3
 21687 0034 FB89     		ldrh	r3, [r7, #14]
 21688 0036 7A68     		ldr	r2, [r7, #4]
 21689 0038 1344     		add	r3, r3, r2
 21690 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21691 003c 1846     		mov	r0, r3
 21692 003e FFF7FEFF 		bl	UART_RS485_PutChar
2856:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21693              		.loc 1 2856 0 discriminator 3
 21694 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21695 0044 0133     		adds	r3, r3, #1
 21696 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21697              	.L821:
2856:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21698              		.loc 1 2856 0 is_stmt 0 discriminator 1
 21699 0048 FA89     		ldrh	r2, [r7, #14]
 21700 004a 7B88     		ldrh	r3, [r7, #2]
 21701 004c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 475


 21702 004e F1D3     		bcc	.L822
2858:..\src/command_processing.c ****     }
2859:..\src/command_processing.c **** 
2860:..\src/command_processing.c ****     index = 0;
 21703              		.loc 1 2860 0 is_stmt 1
 21704 0050 0023     		movs	r3, #0
 21705 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2861:..\src/command_processing.c **** 
2862:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21706              		.loc 1 2862 0
 21707 0054 00BF     		nop
 21708              	.L824:
 21709              		.loc 1 2862 0 is_stmt 0 discriminator 2
 21710 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21711 005a 0346     		mov	r3, r0
 21712 005c 03F00103 		and	r3, r3, #1
 21713 0060 002B     		cmp	r3, #0
 21714 0062 05D1     		bne	.L823
 21715              		.loc 1 2862 0 discriminator 1
 21716 0064 FB89     		ldrh	r3, [r7, #14]
 21717 0066 5A1C     		adds	r2, r3, #1
 21718 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21719 006a B3F57A7F 		cmp	r3, #1000
 21720 006e F2D9     		bls	.L824
 21721              	.L823:
2863:..\src/command_processing.c **** 
2864:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21722              		.loc 1 2864 0 is_stmt 1
 21723 0070 0120     		movs	r0, #1
 21724 0072 FFF7FEFF 		bl	RS485_CTS_Write
2865:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21725              		.loc 1 2865 0
 21726 0076 0020     		movs	r0, #0
 21727 0078 FFF7FEFF 		bl	RS485_CTS_Write
2866:..\src/command_processing.c **** }
 21728              		.loc 1 2866 0
 21729 007c 00BF     		nop
 21730 007e 1037     		adds	r7, r7, #16
 21731              		.cfi_def_cfa_offset 8
 21732 0080 BD46     		mov	sp, r7
 21733              		.cfi_def_cfa_register 13
 21734              		@ sp needed
 21735 0082 80BD     		pop	{r7, pc}
 21736              		.cfi_endproc
 21737              	.LFE80:
 21738              		.size	commWrite_old_id, .-commWrite_old_id
 21739              		.section	.text.commWrite,"ax",%progbits
 21740              		.align	2
 21741              		.global	commWrite
 21742              		.thumb
 21743              		.thumb_func
 21744              		.type	commWrite, %function
 21745              	commWrite:
 21746              	.LFB81:
2867:..\src/command_processing.c **** 
2868:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2869:..\src/command_processing.c **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 476


 21747              		.loc 1 2869 0
 21748              		.cfi_startproc
 21749              		@ args = 0, pretend = 0, frame = 16
 21750              		@ frame_needed = 1, uses_anonymous_args = 0
 21751 0000 80B5     		push	{r7, lr}
 21752              		.cfi_def_cfa_offset 8
 21753              		.cfi_offset 7, -8
 21754              		.cfi_offset 14, -4
 21755 0002 84B0     		sub	sp, sp, #16
 21756              		.cfi_def_cfa_offset 24
 21757 0004 00AF     		add	r7, sp, #0
 21758              		.cfi_def_cfa_register 7
 21759 0006 7860     		str	r0, [r7, #4]
 21760 0008 0B46     		mov	r3, r1
 21761 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2870:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2871:..\src/command_processing.c **** 
2872:..\src/command_processing.c ****     // frame - start
2873:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21762              		.loc 1 2873 0
 21763 000c 3A20     		movs	r0, #58
 21764 000e FFF7FEFF 		bl	UART_RS485_PutChar
2874:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21765              		.loc 1 2874 0
 21766 0012 3A20     		movs	r0, #58
 21767 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2875:..\src/command_processing.c ****     // frame - ID
2876:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 21768              		.loc 1 2876 0
 21769 0018 1A4B     		ldr	r3, .L830
 21770 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21771 001e 1846     		mov	r0, r3
 21772 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2877:..\src/command_processing.c ****     // frame - length
2878:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21773              		.loc 1 2878 0
 21774 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21775 0026 DBB2     		uxtb	r3, r3
 21776 0028 1846     		mov	r0, r3
 21777 002a FFF7FEFF 		bl	UART_RS485_PutChar
2879:..\src/command_processing.c ****     // frame - packet data
2880:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 21778              		.loc 1 2880 0
 21779 002e 0023     		movs	r3, #0
 21780 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 21781 0032 09E0     		b	.L826
 21782              	.L827:
2881:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21783              		.loc 1 2881 0 discriminator 3
 21784 0034 FB89     		ldrh	r3, [r7, #14]
 21785 0036 7A68     		ldr	r2, [r7, #4]
 21786 0038 1344     		add	r3, r3, r2
 21787 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21788 003c 1846     		mov	r0, r3
 21789 003e FFF7FEFF 		bl	UART_RS485_PutChar
2880:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21790              		.loc 1 2880 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 477


 21791 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 21792 0044 0133     		adds	r3, r3, #1
 21793 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 21794              	.L826:
2880:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 21795              		.loc 1 2880 0 is_stmt 0 discriminator 1
 21796 0048 FA89     		ldrh	r2, [r7, #14]
 21797 004a 7B88     		ldrh	r3, [r7, #2]
 21798 004c 9A42     		cmp	r2, r3
 21799 004e F1D3     		bcc	.L827
2882:..\src/command_processing.c ****     }
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c ****     index = 0;
 21800              		.loc 1 2884 0 is_stmt 1
 21801 0050 0023     		movs	r3, #0
 21802 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2885:..\src/command_processing.c **** 
2886:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 21803              		.loc 1 2886 0
 21804 0054 00BF     		nop
 21805              	.L829:
 21806              		.loc 1 2886 0 is_stmt 0 discriminator 2
 21807 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21808 005a 0346     		mov	r3, r0
 21809 005c 03F00103 		and	r3, r3, #1
 21810 0060 002B     		cmp	r3, #0
 21811 0062 05D1     		bne	.L828
 21812              		.loc 1 2886 0 discriminator 1
 21813 0064 FB89     		ldrh	r3, [r7, #14]
 21814 0066 5A1C     		adds	r2, r3, #1
 21815 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 21816 006a B3F57A7F 		cmp	r3, #1000
 21817 006e F2D9     		bls	.L829
 21818              	.L828:
2887:..\src/command_processing.c **** 
2888:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21819              		.loc 1 2888 0 is_stmt 1
 21820 0070 0120     		movs	r0, #1
 21821 0072 FFF7FEFF 		bl	RS485_CTS_Write
2889:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21822              		.loc 1 2889 0
 21823 0076 0020     		movs	r0, #0
 21824 0078 FFF7FEFF 		bl	RS485_CTS_Write
2890:..\src/command_processing.c **** }
 21825              		.loc 1 2890 0
 21826 007c 00BF     		nop
 21827 007e 1037     		adds	r7, r7, #16
 21828              		.cfi_def_cfa_offset 8
 21829 0080 BD46     		mov	sp, r7
 21830              		.cfi_def_cfa_register 13
 21831              		@ sp needed
 21832 0082 80BD     		pop	{r7, pc}
 21833              	.L831:
 21834              		.align	2
 21835              	.L830:
 21836 0084 00000000 		.word	g_mem
 21837              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 478


 21838              	.LFE81:
 21839              		.size	commWrite, .-commWrite
 21840              		.section	.text.commWriteID,"ax",%progbits
 21841              		.align	2
 21842              		.global	commWriteID
 21843              		.thumb
 21844              		.thumb_func
 21845              		.type	commWriteID, %function
 21846              	commWriteID:
 21847              	.LFB82:
2891:..\src/command_processing.c **** 
2892:..\src/command_processing.c **** //==============================================================================
2893:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2894:..\src/command_processing.c **** //==============================================================================
2895:..\src/command_processing.c **** 
2896:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2897:..\src/command_processing.c **** {
 21848              		.loc 1 2897 0
 21849              		.cfi_startproc
 21850              		@ args = 0, pretend = 0, frame = 8
 21851              		@ frame_needed = 1, uses_anonymous_args = 0
 21852 0000 80B5     		push	{r7, lr}
 21853              		.cfi_def_cfa_offset 8
 21854              		.cfi_offset 7, -8
 21855              		.cfi_offset 14, -4
 21856 0002 82B0     		sub	sp, sp, #8
 21857              		.cfi_def_cfa_offset 16
 21858 0004 00AF     		add	r7, sp, #0
 21859              		.cfi_def_cfa_register 7
 21860 0006 7860     		str	r0, [r7, #4]
 21861 0008 0B46     		mov	r3, r1
 21862 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 21863 000c 1346     		mov	r3, r2
 21864 000e 7B70     		strb	r3, [r7, #1]
2898:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2899:..\src/command_processing.c **** 
2900:..\src/command_processing.c ****     // frame - start
2901:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21865              		.loc 1 2901 0
 21866 0010 3A20     		movs	r0, #58
 21867 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2902:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 21868              		.loc 1 2902 0
 21869 0016 3A20     		movs	r0, #58
 21870 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2903:..\src/command_processing.c ****     // frame - ID
2904:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 21871              		.loc 1 2904 0
 21872 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 21873 001e 1846     		mov	r0, r3
 21874 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2905:..\src/command_processing.c ****     // frame - length
2906:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 21875              		.loc 1 2906 0
 21876 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 21877 0026 DBB2     		uxtb	r3, r3
 21878 0028 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 479


 21879 002a FFF7FEFF 		bl	UART_RS485_PutChar
2907:..\src/command_processing.c ****     // frame - packet data
2908:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 21880              		.loc 1 2908 0
 21881 002e 1B4B     		ldr	r3, .L837
 21882 0030 0022     		movs	r2, #0
 21883 0032 1A80     		strh	r2, [r3]	@ movhi
 21884 0034 0EE0     		b	.L833
 21885              	.L834:
2909:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21886              		.loc 1 2909 0 discriminator 3
 21887 0036 194B     		ldr	r3, .L837
 21888 0038 1B88     		ldrh	r3, [r3]
 21889 003a 1A46     		mov	r2, r3
 21890 003c 7B68     		ldr	r3, [r7, #4]
 21891 003e 1344     		add	r3, r3, r2
 21892 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21893 0042 1846     		mov	r0, r3
 21894 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2908:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21895              		.loc 1 2908 0 discriminator 3
 21896 0048 144B     		ldr	r3, .L837
 21897 004a 1B88     		ldrh	r3, [r3]
 21898 004c 0133     		adds	r3, r3, #1
 21899 004e 9AB2     		uxth	r2, r3
 21900 0050 124B     		ldr	r3, .L837
 21901 0052 1A80     		strh	r2, [r3]	@ movhi
 21902              	.L833:
2908:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 21903              		.loc 1 2908 0 is_stmt 0 discriminator 1
 21904 0054 114B     		ldr	r3, .L837
 21905 0056 1B88     		ldrh	r3, [r3]
 21906 0058 7A88     		ldrh	r2, [r7, #2]
 21907 005a 9A42     		cmp	r2, r3
 21908 005c EBD8     		bhi	.L834
2910:..\src/command_processing.c ****     }
2911:..\src/command_processing.c **** 
2912:..\src/command_processing.c ****     i = 0;
 21909              		.loc 1 2912 0 is_stmt 1
 21910 005e 0F4B     		ldr	r3, .L837
 21911 0060 0022     		movs	r2, #0
 21912 0062 1A80     		strh	r2, [r3]	@ movhi
2913:..\src/command_processing.c **** 
2914:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 21913              		.loc 1 2914 0
 21914 0064 00BF     		nop
 21915              	.L836:
 21916              		.loc 1 2914 0 is_stmt 0 discriminator 2
 21917 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 21918 006a 0346     		mov	r3, r0
 21919 006c 03F00103 		and	r3, r3, #1
 21920 0070 002B     		cmp	r3, #0
 21921 0072 08D1     		bne	.L835
 21922              		.loc 1 2914 0 discriminator 1
 21923 0074 094B     		ldr	r3, .L837
 21924 0076 1B88     		ldrh	r3, [r3]
 21925 0078 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 480


 21926 007a 91B2     		uxth	r1, r2
 21927 007c 074A     		ldr	r2, .L837
 21928 007e 1180     		strh	r1, [r2]	@ movhi
 21929 0080 B3F57A7F 		cmp	r3, #1000
 21930 0084 EFD9     		bls	.L836
 21931              	.L835:
2915:..\src/command_processing.c ****     
2916:..\src/command_processing.c ****     RS485_CTS_Write(1);
 21932              		.loc 1 2916 0 is_stmt 1
 21933 0086 0120     		movs	r0, #1
 21934 0088 FFF7FEFF 		bl	RS485_CTS_Write
2917:..\src/command_processing.c ****     RS485_CTS_Write(0);
 21935              		.loc 1 2917 0
 21936 008c 0020     		movs	r0, #0
 21937 008e FFF7FEFF 		bl	RS485_CTS_Write
2918:..\src/command_processing.c **** }
 21938              		.loc 1 2918 0
 21939 0092 00BF     		nop
 21940 0094 0837     		adds	r7, r7, #8
 21941              		.cfi_def_cfa_offset 8
 21942 0096 BD46     		mov	sp, r7
 21943              		.cfi_def_cfa_register 13
 21944              		@ sp needed
 21945 0098 80BD     		pop	{r7, pc}
 21946              	.L838:
 21947 009a 00BF     		.align	2
 21948              	.L837:
 21949 009c 04000000 		.word	i.11253
 21950              		.cfi_endproc
 21951              	.LFE82:
 21952              		.size	commWriteID, .-commWriteID
 21953              		.section	.text.LCRChecksum,"ax",%progbits
 21954              		.align	2
 21955              		.global	LCRChecksum
 21956              		.thumb
 21957              		.thumb_func
 21958              		.type	LCRChecksum, %function
 21959              	LCRChecksum:
 21960              	.LFB83:
2919:..\src/command_processing.c **** 
2920:..\src/command_processing.c **** //==============================================================================
2921:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2922:..\src/command_processing.c **** //==============================================================================
2923:..\src/command_processing.c **** 
2924:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2925:..\src/command_processing.c **** 
2926:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 21961              		.loc 1 2926 0
 21962              		.cfi_startproc
 21963              		@ args = 0, pretend = 0, frame = 16
 21964              		@ frame_needed = 1, uses_anonymous_args = 0
 21965              		@ link register save eliminated.
 21966 0000 80B4     		push	{r7}
 21967              		.cfi_def_cfa_offset 4
 21968              		.cfi_offset 7, -4
 21969 0002 85B0     		sub	sp, sp, #20
 21970              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 481


 21971 0004 00AF     		add	r7, sp, #0
 21972              		.cfi_def_cfa_register 7
 21973 0006 7860     		str	r0, [r7, #4]
 21974 0008 0B46     		mov	r3, r1
 21975 000a FB70     		strb	r3, [r7, #3]
2927:..\src/command_processing.c ****     
2928:..\src/command_processing.c ****     uint8 CYDATA i;
2929:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 21976              		.loc 1 2929 0
 21977 000c 0023     		movs	r3, #0
 21978 000e BB73     		strb	r3, [r7, #14]
2930:..\src/command_processing.c ****     
2931:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 21979              		.loc 1 2931 0
 21980 0010 0023     		movs	r3, #0
 21981 0012 FB73     		strb	r3, [r7, #15]
 21982 0014 09E0     		b	.L840
 21983              	.L841:
2932:..\src/command_processing.c ****        checksum ^= data_array[i];
 21984              		.loc 1 2932 0 discriminator 3
 21985 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21986 0018 7A68     		ldr	r2, [r7, #4]
 21987 001a 1344     		add	r3, r3, r2
 21988 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 21989 001e BB7B     		ldrb	r3, [r7, #14]
 21990 0020 5340     		eors	r3, r3, r2
 21991 0022 BB73     		strb	r3, [r7, #14]
2931:..\src/command_processing.c ****        checksum ^= data_array[i];
 21992              		.loc 1 2931 0 discriminator 3
 21993 0024 FB7B     		ldrb	r3, [r7, #15]
 21994 0026 0133     		adds	r3, r3, #1
 21995 0028 FB73     		strb	r3, [r7, #15]
 21996              	.L840:
2931:..\src/command_processing.c ****        checksum ^= data_array[i];
 21997              		.loc 1 2931 0 is_stmt 0 discriminator 1
 21998 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21999 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 22000 002e 9A42     		cmp	r2, r3
 22001 0030 F1D3     		bcc	.L841
2933:..\src/command_processing.c ****   
2934:..\src/command_processing.c ****     return checksum;
 22002              		.loc 1 2934 0 is_stmt 1
 22003 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2935:..\src/command_processing.c **** }
 22004              		.loc 1 2935 0
 22005 0034 1846     		mov	r0, r3
 22006 0036 1437     		adds	r7, r7, #20
 22007              		.cfi_def_cfa_offset 4
 22008 0038 BD46     		mov	sp, r7
 22009              		.cfi_def_cfa_register 13
 22010              		@ sp needed
 22011 003a 80BC     		pop	{r7}
 22012              		.cfi_restore 7
 22013              		.cfi_def_cfa_offset 0
 22014 003c 7047     		bx	lr
 22015              		.cfi_endproc
 22016              	.LFE83:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 482


 22017              		.size	LCRChecksum, .-LCRChecksum
 22018 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 22019              		.align	2
 22020              		.global	sendAcknowledgment
 22021              		.thumb
 22022              		.thumb_func
 22023              		.type	sendAcknowledgment, %function
 22024              	sendAcknowledgment:
 22025              	.LFB84:
2936:..\src/command_processing.c **** 
2937:..\src/command_processing.c **** 
2938:..\src/command_processing.c **** //==============================================================================
2939:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2940:..\src/command_processing.c **** //==============================================================================
2941:..\src/command_processing.c **** 
2942:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 22026              		.loc 1 2942 0
 22027              		.cfi_startproc
 22028              		@ args = 0, pretend = 0, frame = 16
 22029              		@ frame_needed = 1, uses_anonymous_args = 0
 22030 0000 80B5     		push	{r7, lr}
 22031              		.cfi_def_cfa_offset 8
 22032              		.cfi_offset 7, -8
 22033              		.cfi_offset 14, -4
 22034 0002 84B0     		sub	sp, sp, #16
 22035              		.cfi_def_cfa_offset 24
 22036 0004 00AF     		add	r7, sp, #0
 22037              		.cfi_def_cfa_register 7
 22038 0006 0346     		mov	r3, r0
 22039 0008 FB71     		strb	r3, [r7, #7]
2943:..\src/command_processing.c ****     int packet_lenght = 2;
 22040              		.loc 1 2943 0
 22041 000a 0223     		movs	r3, #2
 22042 000c FB60     		str	r3, [r7, #12]
2944:..\src/command_processing.c ****     uint8 packet_data[2];
2945:..\src/command_processing.c **** 
2946:..\src/command_processing.c ****     packet_data[0] = value;
 22043              		.loc 1 2946 0
 22044 000e FB79     		ldrb	r3, [r7, #7]
 22045 0010 3B72     		strb	r3, [r7, #8]
2947:..\src/command_processing.c ****     packet_data[1] = value;
 22046              		.loc 1 2947 0
 22047 0012 FB79     		ldrb	r3, [r7, #7]
 22048 0014 7B72     		strb	r3, [r7, #9]
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 22049              		.loc 1 2949 0
 22050 0016 FB68     		ldr	r3, [r7, #12]
 22051 0018 9AB2     		uxth	r2, r3
 22052 001a 07F10803 		add	r3, r7, #8
 22053 001e 1146     		mov	r1, r2
 22054 0020 1846     		mov	r0, r3
 22055 0022 FFF7FEFF 		bl	commWrite
2950:..\src/command_processing.c **** }
 22056              		.loc 1 2950 0
 22057 0026 00BF     		nop
 22058 0028 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 483


 22059              		.cfi_def_cfa_offset 8
 22060 002a BD46     		mov	sp, r7
 22061              		.cfi_def_cfa_register 13
 22062              		@ sp needed
 22063 002c 80BD     		pop	{r7, pc}
 22064              		.cfi_endproc
 22065              	.LFE84:
 22066              		.size	sendAcknowledgment, .-sendAcknowledgment
 22067 002e 00BF     		.section	.text.memStore,"ax",%progbits
 22068              		.align	2
 22069              		.global	memStore
 22070              		.thumb
 22071              		.thumb_func
 22072              		.type	memStore, %function
 22073              	memStore:
 22074              	.LFB85:
2951:..\src/command_processing.c **** 
2952:..\src/command_processing.c **** //==============================================================================
2953:..\src/command_processing.c **** //                                                                  STORE MEMORY
2954:..\src/command_processing.c **** //==============================================================================
2955:..\src/command_processing.c **** 
2956:..\src/command_processing.c **** 
2957:..\src/command_processing.c **** uint8 memStore(int displacement)
2958:..\src/command_processing.c **** {
 22075              		.loc 1 2958 0
 22076              		.cfi_startproc
 22077              		@ args = 0, pretend = 0, frame = 24
 22078              		@ frame_needed = 1, uses_anonymous_args = 0
 22079 0000 80B5     		push	{r7, lr}
 22080              		.cfi_def_cfa_offset 8
 22081              		.cfi_offset 7, -8
 22082              		.cfi_offset 14, -4
 22083 0002 86B0     		sub	sp, sp, #24
 22084              		.cfi_def_cfa_offset 32
 22085 0004 00AF     		add	r7, sp, #0
 22086              		.cfi_def_cfa_register 7
 22087 0006 7860     		str	r0, [r7, #4]
2959:..\src/command_processing.c ****     int i;  // iterator
2960:..\src/command_processing.c ****     uint8 writeStatus;
2961:..\src/command_processing.c ****     int pages;
2962:..\src/command_processing.c ****     uint8 ret_val = 1;
 22088              		.loc 1 2962 0
 22089 0008 0123     		movs	r3, #1
 22090 000a FB74     		strb	r3, [r7, #19]
2963:..\src/command_processing.c **** 
2964:..\src/command_processing.c ****     // Disable Interrupt
2965:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 22091              		.loc 1 2965 0
 22092 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2966:..\src/command_processing.c **** 
2967:..\src/command_processing.c ****     // Stop motor
2968:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 22093              		.loc 1 2968 0
 22094 0010 0020     		movs	r0, #0
 22095 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2969:..\src/command_processing.c **** 
2970:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 484


2971:..\src/command_processing.c ****     CySetTemp();
 22096              		.loc 1 2971 0
 22097 0016 FFF7FEFF 		bl	CySetTemp
2972:..\src/command_processing.c **** 
2973:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 22098              		.loc 1 2973 0
 22099 001a 1D4A     		ldr	r2, .L850
 22100 001c 1D4B     		ldr	r3, .L850+4
 22101 001e 1046     		mov	r0, r2
 22102 0020 1946     		mov	r1, r3
 22103 0022 4FF43D73 		mov	r3, #756
 22104 0026 1A46     		mov	r2, r3
 22105 0028 FFF7FEFF 		bl	memcpy
2974:..\src/command_processing.c **** 
2975:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 22106              		.loc 1 2975 0
 22107 002c 3023     		movs	r3, #48
 22108 002e FB60     		str	r3, [r7, #12]
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 22109              		.loc 1 2977 0
 22110 0030 0023     		movs	r3, #0
 22111 0032 7B61     		str	r3, [r7, #20]
 22112 0034 18E0     		b	.L845
 22113              	.L848:
2978:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22114              		.loc 1 2978 0
 22115 0036 7B69     		ldr	r3, [r7, #20]
 22116 0038 1B01     		lsls	r3, r3, #4
 22117 003a 1A46     		mov	r2, r3
 22118 003c 154B     		ldr	r3, .L850+4
 22119 003e D018     		adds	r0, r2, r3
 22120 0040 7B69     		ldr	r3, [r7, #20]
 22121 0042 DAB2     		uxtb	r2, r3
 22122 0044 7B68     		ldr	r3, [r7, #4]
 22123 0046 DBB2     		uxtb	r3, r3
 22124 0048 1344     		add	r3, r3, r2
 22125 004a DBB2     		uxtb	r3, r3
 22126 004c 1946     		mov	r1, r3
 22127 004e FFF7FEFF 		bl	EEPROM_Write
 22128 0052 0346     		mov	r3, r0
 22129 0054 FB72     		strb	r3, [r7, #11]
2979:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 22130              		.loc 1 2979 0
 22131 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 22132 0058 002B     		cmp	r3, #0
 22133 005a 02D0     		beq	.L846
2980:..\src/command_processing.c ****             ret_val = 0;
 22134              		.loc 1 2980 0
 22135 005c 0023     		movs	r3, #0
 22136 005e FB74     		strb	r3, [r7, #19]
2981:..\src/command_processing.c ****             break;
 22137              		.loc 1 2981 0
 22138 0060 06E0     		b	.L847
 22139              	.L846:
2977:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22140              		.loc 1 2977 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 485


 22141 0062 7B69     		ldr	r3, [r7, #20]
 22142 0064 0133     		adds	r3, r3, #1
 22143 0066 7B61     		str	r3, [r7, #20]
 22144              	.L845:
2977:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 22145              		.loc 1 2977 0 is_stmt 0 discriminator 1
 22146 0068 7A69     		ldr	r2, [r7, #20]
 22147 006a FB68     		ldr	r3, [r7, #12]
 22148 006c 9A42     		cmp	r2, r3
 22149 006e E2DB     		blt	.L848
 22150              	.L847:
2982:..\src/command_processing.c ****         }
2983:..\src/command_processing.c ****     }
2984:..\src/command_processing.c **** 
2985:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 22151              		.loc 1 2985 0 is_stmt 1
 22152 0070 084A     		ldr	r2, .L850+4
 22153 0072 074B     		ldr	r3, .L850
 22154 0074 1046     		mov	r0, r2
 22155 0076 1946     		mov	r1, r3
 22156 0078 4FF43D73 		mov	r3, #756
 22157 007c 1A46     		mov	r2, r3
 22158 007e FFF7FEFF 		bl	memcpy
2986:..\src/command_processing.c **** 
2987:..\src/command_processing.c ****     // Re-Enable Interrupt
2988:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 22159              		.loc 1 2988 0
 22160 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2989:..\src/command_processing.c **** 
2990:..\src/command_processing.c ****     return ret_val;
 22161              		.loc 1 2990 0
 22162 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2991:..\src/command_processing.c **** }
 22163              		.loc 1 2991 0
 22164 0088 1846     		mov	r0, r3
 22165 008a 1837     		adds	r7, r7, #24
 22166              		.cfi_def_cfa_offset 8
 22167 008c BD46     		mov	sp, r7
 22168              		.cfi_def_cfa_register 13
 22169              		@ sp needed
 22170 008e 80BD     		pop	{r7, pc}
 22171              	.L851:
 22172              		.align	2
 22173              	.L850:
 22174 0090 00000000 		.word	c_mem
 22175 0094 00000000 		.word	g_mem
 22176              		.cfi_endproc
 22177              	.LFE85:
 22178              		.size	memStore, .-memStore
 22179              		.section	.text.memRecall,"ax",%progbits
 22180              		.align	2
 22181              		.global	memRecall
 22182              		.thumb
 22183              		.thumb_func
 22184              		.type	memRecall, %function
 22185              	memRecall:
 22186              	.LFB86:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 486


2992:..\src/command_processing.c **** 
2993:..\src/command_processing.c **** 
2994:..\src/command_processing.c **** //==============================================================================
2995:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2996:..\src/command_processing.c **** //==============================================================================
2997:..\src/command_processing.c **** 
2998:..\src/command_processing.c **** 
2999:..\src/command_processing.c **** void memRecall(void)
3000:..\src/command_processing.c **** {
 22187              		.loc 1 3000 0
 22188              		.cfi_startproc
 22189              		@ args = 0, pretend = 0, frame = 8
 22190              		@ frame_needed = 1, uses_anonymous_args = 0
 22191 0000 80B5     		push	{r7, lr}
 22192              		.cfi_def_cfa_offset 8
 22193              		.cfi_offset 7, -8
 22194              		.cfi_offset 14, -4
 22195 0002 82B0     		sub	sp, sp, #8
 22196              		.cfi_def_cfa_offset 16
 22197 0004 00AF     		add	r7, sp, #0
 22198              		.cfi_def_cfa_register 7
3001:..\src/command_processing.c ****     uint16 i;
3002:..\src/command_processing.c **** 
3003:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22199              		.loc 1 3003 0
 22200 0006 0023     		movs	r3, #0
 22201 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22202 000a 0CE0     		b	.L853
 22203              	.L854:
3004:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22204              		.loc 1 3004 0 discriminator 3
 22205 000c FB88     		ldrh	r3, [r7, #6]
 22206 000e 184A     		ldr	r2, .L858
 22207 0010 1344     		add	r3, r3, r2
 22208 0012 184A     		ldr	r2, .L858+4
 22209 0014 1168     		ldr	r1, [r2]
 22210 0016 FA88     		ldrh	r2, [r7, #6]
 22211 0018 0A44     		add	r2, r2, r1
 22212 001a 1278     		ldrb	r2, [r2]
 22213 001c D2B2     		uxtb	r2, r2
 22214 001e 1A70     		strb	r2, [r3]
3003:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22215              		.loc 1 3003 0 discriminator 3
 22216 0020 FB88     		ldrh	r3, [r7, #6]
 22217 0022 0133     		adds	r3, r3, #1
 22218 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 22219              	.L853:
3003:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 22220              		.loc 1 3003 0 is_stmt 0 discriminator 1
 22221 0026 FB88     		ldrh	r3, [r7, #6]
 22222 0028 B3F53D7F 		cmp	r3, #756
 22223 002c EED3     		bcc	.L854
3005:..\src/command_processing.c ****     }
3006:..\src/command_processing.c ****     
3007:..\src/command_processing.c ****     // Recall saved user_emg structure
3008:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 22224              		.loc 1 3008 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 487


 22225 002e 104B     		ldr	r3, .L858
 22226 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 22227 0034 5B01     		lsls	r3, r3, #5
 22228 0036 03F51273 		add	r3, r3, #584
 22229 003a 0D4A     		ldr	r2, .L858
 22230 003c 1344     		add	r3, r3, r2
 22231 003e 1022     		movs	r2, #16
 22232 0040 1946     		mov	r1, r3
 22233 0042 0D48     		ldr	r0, .L858+8
 22234 0044 FFF7FEFF 		bl	memcpy
3009:..\src/command_processing.c **** 
3010:..\src/command_processing.c ****     //check for initialization
3011:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22235              		.loc 1 3011 0
 22236 0048 094B     		ldr	r3, .L858
 22237 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22238 004c 002B     		cmp	r3, #0
 22239 004e 02D1     		bne	.L855
3012:..\src/command_processing.c ****         memRestore();
 22240              		.loc 1 3012 0
 22241 0050 FFF7FEFF 		bl	memRestore
3013:..\src/command_processing.c ****     } else {
3014:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
3015:..\src/command_processing.c ****     }        
3016:..\src/command_processing.c **** }
 22242              		.loc 1 3016 0
 22243 0054 08E0     		b	.L857
 22244              	.L855:
3014:..\src/command_processing.c ****     }        
 22245              		.loc 1 3014 0
 22246 0056 094A     		ldr	r2, .L858+12
 22247 0058 054B     		ldr	r3, .L858
 22248 005a 1046     		mov	r0, r2
 22249 005c 1946     		mov	r1, r3
 22250 005e 4FF43D73 		mov	r3, #756
 22251 0062 1A46     		mov	r2, r3
 22252 0064 FFF7FEFF 		bl	memcpy
 22253              	.L857:
 22254              		.loc 1 3016 0
 22255 0068 00BF     		nop
 22256 006a 0837     		adds	r7, r7, #8
 22257              		.cfi_def_cfa_offset 8
 22258 006c BD46     		mov	sp, r7
 22259              		.cfi_def_cfa_register 13
 22260              		@ sp needed
 22261 006e 80BD     		pop	{r7, pc}
 22262              	.L859:
 22263              		.align	2
 22264              	.L858:
 22265 0070 00000000 		.word	g_mem
 22266 0074 00000000 		.word	EEPROM_ADDR
 22267 0078 F0010000 		.word	g_mem+496
 22268 007c 00000000 		.word	c_mem
 22269              		.cfi_endproc
 22270              	.LFE86:
 22271              		.size	memRecall, .-memRecall
 22272              		.section	.text.memRestore,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 488


 22273              		.align	2
 22274              		.global	memRestore
 22275              		.thumb
 22276              		.thumb_func
 22277              		.type	memRestore, %function
 22278              	memRestore:
 22279              	.LFB87:
3017:..\src/command_processing.c **** 
3018:..\src/command_processing.c **** 
3019:..\src/command_processing.c **** //==============================================================================
3020:..\src/command_processing.c **** //                                                                RESTORE MEMORY
3021:..\src/command_processing.c **** //==============================================================================
3022:..\src/command_processing.c **** 
3023:..\src/command_processing.c **** 
3024:..\src/command_processing.c **** uint8 memRestore(void) {
 22280              		.loc 1 3024 0
 22281              		.cfi_startproc
 22282              		@ args = 0, pretend = 0, frame = 8
 22283              		@ frame_needed = 1, uses_anonymous_args = 0
 22284 0000 80B5     		push	{r7, lr}
 22285              		.cfi_def_cfa_offset 8
 22286              		.cfi_offset 7, -8
 22287              		.cfi_offset 14, -4
 22288 0002 82B0     		sub	sp, sp, #8
 22289              		.cfi_def_cfa_offset 16
 22290 0004 00AF     		add	r7, sp, #0
 22291              		.cfi_def_cfa_register 7
3025:..\src/command_processing.c ****     uint16 i;
3026:..\src/command_processing.c **** 
3027:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 22292              		.loc 1 3027 0
 22293 0006 0023     		movs	r3, #0
 22294 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 22295 000a 0EE0     		b	.L861
 22296              	.L862:
3028:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22297              		.loc 1 3028 0 discriminator 3
 22298 000c FB88     		ldrh	r3, [r7, #6]
 22299 000e 114A     		ldr	r2, .L865
 22300 0010 1344     		add	r3, r3, r2
 22301 0012 114A     		ldr	r2, .L865+4
 22302 0014 1168     		ldr	r1, [r2]
 22303 0016 FA88     		ldrh	r2, [r7, #6]
 22304 0018 02F54872 		add	r2, r2, #800
 22305 001c 0A44     		add	r2, r2, r1
 22306 001e 1278     		ldrb	r2, [r2]
 22307 0020 D2B2     		uxtb	r2, r2
 22308 0022 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22309              		.loc 1 3027 0 discriminator 3
 22310 0024 FB88     		ldrh	r3, [r7, #6]
 22311 0026 0133     		adds	r3, r3, #1
 22312 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 22313              	.L861:
3027:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 22314              		.loc 1 3027 0 is_stmt 0 discriminator 1
 22315 002a FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 489


 22316 002c B3F53D7F 		cmp	r3, #756
 22317 0030 ECD3     		bcc	.L862
3029:..\src/command_processing.c ****     }
3030:..\src/command_processing.c **** 
3031:..\src/command_processing.c ****     //check for initialization
3032:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 22318              		.loc 1 3032 0 is_stmt 1
 22319 0032 084B     		ldr	r3, .L865
 22320 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22321 0036 002B     		cmp	r3, #0
 22322 0038 03D1     		bne	.L863
3033:..\src/command_processing.c ****         return memInit();
 22323              		.loc 1 3033 0
 22324 003a FFF7FEFF 		bl	memInit
 22325 003e 0346     		mov	r3, r0
 22326 0040 03E0     		b	.L864
 22327              	.L863:
3034:..\src/command_processing.c ****     } else {
3035:..\src/command_processing.c ****         return memStore(0);
 22328              		.loc 1 3035 0
 22329 0042 0020     		movs	r0, #0
 22330 0044 FFF7FEFF 		bl	memStore
 22331 0048 0346     		mov	r3, r0
 22332              	.L864:
3036:..\src/command_processing.c ****     }  
3037:..\src/command_processing.c **** }
 22333              		.loc 1 3037 0
 22334 004a 1846     		mov	r0, r3
 22335 004c 0837     		adds	r7, r7, #8
 22336              		.cfi_def_cfa_offset 8
 22337 004e BD46     		mov	sp, r7
 22338              		.cfi_def_cfa_register 13
 22339              		@ sp needed
 22340 0050 80BD     		pop	{r7, pc}
 22341              	.L866:
 22342 0052 00BF     		.align	2
 22343              	.L865:
 22344 0054 00000000 		.word	g_mem
 22345 0058 00000000 		.word	EEPROM_ADDR
 22346              		.cfi_endproc
 22347              	.LFE87:
 22348              		.size	memRestore, .-memRestore
 22349              		.section	.rodata
 22350 1fdf 00       		.align	2
 22351              	.LC308:
 22352 1fe0 47454E30 		.ascii	"GEN001\000"
 22352      303100
 22353              		.section	.text.memInit,"ax",%progbits
 22354              		.align	2
 22355              		.global	memInit
 22356              		.thumb
 22357              		.thumb_func
 22358              		.type	memInit, %function
 22359              	memInit:
 22360              	.LFB88:
3038:..\src/command_processing.c **** 
3039:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 490


3040:..\src/command_processing.c **** //                                                                   MEMORY INIT
3041:..\src/command_processing.c **** //==============================================================================
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c **** uint8 memInit(void)
3044:..\src/command_processing.c **** {
 22361              		.loc 1 3044 0
 22362              		.cfi_startproc
 22363              		@ args = 0, pretend = 0, frame = 8
 22364              		@ frame_needed = 1, uses_anonymous_args = 0
 22365 0000 80B5     		push	{r7, lr}
 22366              		.cfi_def_cfa_offset 8
 22367              		.cfi_offset 7, -8
 22368              		.cfi_offset 14, -4
 22369 0002 82B0     		sub	sp, sp, #8
 22370              		.cfi_def_cfa_offset 16
 22371 0004 00AF     		add	r7, sp, #0
 22372              		.cfi_def_cfa_register 7
3045:..\src/command_processing.c ****     uint8 i, j;
3046:..\src/command_processing.c **** 
3047:..\src/command_processing.c ****     //initialize memory settings
3048:..\src/command_processing.c ****     for (i=0; i<15; i++){
 22373              		.loc 1 3048 0
 22374 0006 0023     		movs	r3, #0
 22375 0008 FB71     		strb	r3, [r7, #7]
 22376 000a 07E0     		b	.L868
 22377              	.L869:
3049:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22378              		.loc 1 3049 0 discriminator 3
 22379 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22380 000e B44A     		ldr	r2, .L894
 22381 0010 1344     		add	r3, r3, r2
 22382 0012 0022     		movs	r2, #0
 22383 0014 5A70     		strb	r2, [r3, #1]
3048:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22384              		.loc 1 3048 0 discriminator 3
 22385 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22386 0018 0133     		adds	r3, r3, #1
 22387 001a FB71     		strb	r3, [r7, #7]
 22388              	.L868:
3048:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 22389              		.loc 1 3048 0 is_stmt 0 discriminator 1
 22390 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22391 001e 0E2B     		cmp	r3, #14
 22392 0020 F4D9     		bls	.L869
3050:..\src/command_processing.c ****     }
3051:..\src/command_processing.c ****         
3052:..\src/command_processing.c ****     // DEV STRUCT
3053:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 22393              		.loc 1 3053 0 is_stmt 1
 22394 0022 AF4B     		ldr	r3, .L894
 22395 0024 0122     		movs	r2, #1
 22396 0026 83F8A020 		strb	r2, [r3, #160]
3054:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 22397              		.loc 1 3054 0
 22398 002a AD4B     		ldr	r3, .L894
 22399 002c 0022     		movs	r2, #0
 22400 002e 83F8A720 		strb	r2, [r3, #167]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 491


3055:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 22401              		.loc 1 3055 0
 22402 0032 AB4B     		ldr	r3, .L894
 22403 0034 0122     		movs	r2, #1
 22404 0036 83F8AC20 		strb	r2, [r3, #172]
3056:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 22405              		.loc 1 3056 0
 22406 003a A94B     		ldr	r3, .L894
 22407 003c 0022     		movs	r2, #0
 22408 003e 83F8A820 		strb	r2, [r3, #168]
3057:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 22409              		.loc 1 3057 0
 22410 0042 FFF7FEFF 		bl	reset_counters
3058:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22411              		.loc 1 3058 0
 22412 0046 0023     		movs	r3, #0
 22413 0048 FB71     		strb	r3, [r7, #7]
 22414 004a 08E0     		b	.L870
 22415              	.L871:
3059:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 22416              		.loc 1 3059 0 discriminator 3
 22417 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22418 004e A44A     		ldr	r2, .L894
 22419 0050 1344     		add	r3, r3, r2
 22420 0052 0022     		movs	r2, #0
 22421 0054 83F86020 		strb	r2, [r3, #96]
3058:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22422              		.loc 1 3058 0 discriminator 3
 22423 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22424 005a 0133     		adds	r3, r3, #1
 22425 005c FB71     		strb	r3, [r7, #7]
 22426              	.L870:
3058:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 22427              		.loc 1 3058 0 is_stmt 0 discriminator 1
 22428 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22429 0060 3F2B     		cmp	r3, #63
 22430 0062 F3D9     		bls	.L871
3060:..\src/command_processing.c ****     }
3061:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 22431              		.loc 1 3061 0 is_stmt 1
 22432 0064 9E4B     		ldr	r3, .L894
 22433 0066 0022     		movs	r2, #0
 22434 0068 83F8A920 		strb	r2, [r3, #169]
3062:..\src/command_processing.c **** 
3063:..\src/command_processing.c ****     // MOTOR STRUCT
3064:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22435              		.loc 1 3064 0
 22436 006c 0023     		movs	r3, #0
 22437 006e FB71     		strb	r3, [r7, #7]
 22438 0070 15E1     		b	.L872
 22439              	.L875:
3065:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22440              		.loc 1 3065 0
 22441 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22442 0074 9A49     		ldr	r1, .L894
 22443 0076 1346     		mov	r3, r2
 22444 0078 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 492


 22445 007a 9B1A     		subs	r3, r3, r2
 22446 007c 1B01     		lsls	r3, r3, #4
 22447 007e 0B44     		add	r3, r3, r1
 22448 0080 B033     		adds	r3, r3, #176
 22449 0082 40F23942 		movw	r2, #1081
 22450 0086 1A60     		str	r2, [r3]
3066:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 22451              		.loc 1 3066 0
 22452 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22453 008a 9549     		ldr	r1, .L894
 22454 008c 1346     		mov	r3, r2
 22455 008e DB00     		lsls	r3, r3, #3
 22456 0090 9B1A     		subs	r3, r3, r2
 22457 0092 1B01     		lsls	r3, r3, #4
 22458 0094 0B44     		add	r3, r3, r1
 22459 0096 B433     		adds	r3, r3, #180
 22460 0098 0022     		movs	r2, #0
 22461 009a 1A60     		str	r2, [r3]
3067:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 22462              		.loc 1 3067 0
 22463 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22464 009e 9049     		ldr	r1, .L894
 22465 00a0 1346     		mov	r3, r2
 22466 00a2 DB00     		lsls	r3, r3, #3
 22467 00a4 9B1A     		subs	r3, r3, r2
 22468 00a6 1B01     		lsls	r3, r3, #4
 22469 00a8 0B44     		add	r3, r3, r1
 22470 00aa B833     		adds	r3, r3, #184
 22471 00ac 4FF4E572 		mov	r2, #458
 22472 00b0 1A60     		str	r2, [r3]
3068:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 22473              		.loc 1 3068 0
 22474 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22475 00b4 8A49     		ldr	r1, .L894
 22476 00b6 1346     		mov	r3, r2
 22477 00b8 DB00     		lsls	r3, r3, #3
 22478 00ba 9B1A     		subs	r3, r3, r2
 22479 00bc 1B01     		lsls	r3, r3, #4
 22480 00be 0B44     		add	r3, r3, r1
 22481 00c0 BC33     		adds	r3, r3, #188
 22482 00c2 4FF48032 		mov	r2, #65536
 22483 00c6 1A60     		str	r2, [r3]
3069:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 22484              		.loc 1 3069 0
 22485 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22486 00ca 8549     		ldr	r1, .L894
 22487 00cc 1346     		mov	r3, r2
 22488 00ce DB00     		lsls	r3, r3, #3
 22489 00d0 9B1A     		subs	r3, r3, r2
 22490 00d2 1B01     		lsls	r3, r3, #4
 22491 00d4 0B44     		add	r3, r3, r1
 22492 00d6 C033     		adds	r3, r3, #192
 22493 00d8 4122     		movs	r2, #65
 22494 00da 1A60     		str	r2, [r3]
3070:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 22495              		.loc 1 3070 0
 22496 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 493


 22497 00de 8049     		ldr	r1, .L894
 22498 00e0 1346     		mov	r3, r2
 22499 00e2 DB00     		lsls	r3, r3, #3
 22500 00e4 9B1A     		subs	r3, r3, r2
 22501 00e6 1B01     		lsls	r3, r3, #4
 22502 00e8 0B44     		add	r3, r3, r1
 22503 00ea C433     		adds	r3, r3, #196
 22504 00ec 0022     		movs	r2, #0
 22505 00ee 1A60     		str	r2, [r3]
3071:..\src/command_processing.c **** 
3072:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 22506              		.loc 1 3072 0
 22507 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22508 00f2 7B49     		ldr	r1, .L894
 22509 00f4 1346     		mov	r3, r2
 22510 00f6 DB00     		lsls	r3, r3, #3
 22511 00f8 9B1A     		subs	r3, r3, r2
 22512 00fa 1B01     		lsls	r3, r3, #4
 22513 00fc 0B44     		add	r3, r3, r1
 22514 00fe C833     		adds	r3, r3, #200
 22515 0100 41F69912 		movw	r2, #6553
 22516 0104 1A60     		str	r2, [r3]
3073:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 22517              		.loc 1 3073 0
 22518 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22519 0108 7549     		ldr	r1, .L894
 22520 010a 1346     		mov	r3, r2
 22521 010c DB00     		lsls	r3, r3, #3
 22522 010e 9B1A     		subs	r3, r3, r2
 22523 0110 1B01     		lsls	r3, r3, #4
 22524 0112 0B44     		add	r3, r3, r1
 22525 0114 CC33     		adds	r3, r3, #204
 22526 0116 0022     		movs	r2, #0
 22527 0118 1A60     		str	r2, [r3]
3074:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 22528              		.loc 1 3074 0
 22529 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22530 011c 7049     		ldr	r1, .L894
 22531 011e 1346     		mov	r3, r2
 22532 0120 DB00     		lsls	r3, r3, #3
 22533 0122 9B1A     		subs	r3, r3, r2
 22534 0124 1B01     		lsls	r3, r3, #4
 22535 0126 0B44     		add	r3, r3, r1
 22536 0128 D033     		adds	r3, r3, #208
 22537 012a 0022     		movs	r2, #0
 22538 012c 1A60     		str	r2, [r3]
3075:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 22539              		.loc 1 3075 0
 22540 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22541 0130 6B49     		ldr	r1, .L894
 22542 0132 1346     		mov	r3, r2
 22543 0134 DB00     		lsls	r3, r3, #3
 22544 0136 9B1A     		subs	r3, r3, r2
 22545 0138 1B01     		lsls	r3, r3, #4
 22546 013a 0B44     		add	r3, r3, r1
 22547 013c D433     		adds	r3, r3, #212
 22548 013e 44F6CC42 		movw	r2, #19660
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 494


 22549 0142 1A60     		str	r2, [r3]
3076:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 22550              		.loc 1 3076 0
 22551 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22552 0146 6649     		ldr	r1, .L894
 22553 0148 1346     		mov	r3, r2
 22554 014a DB00     		lsls	r3, r3, #3
 22555 014c 9B1A     		subs	r3, r3, r2
 22556 014e 1B01     		lsls	r3, r3, #4
 22557 0150 0B44     		add	r3, r3, r1
 22558 0152 D833     		adds	r3, r3, #216
 22559 0154 0D22     		movs	r2, #13
 22560 0156 1A60     		str	r2, [r3]
3077:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 22561              		.loc 1 3077 0
 22562 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22563 015a 6149     		ldr	r1, .L894
 22564 015c 1346     		mov	r3, r2
 22565 015e DB00     		lsls	r3, r3, #3
 22566 0160 9B1A     		subs	r3, r3, r2
 22567 0162 1B01     		lsls	r3, r3, #4
 22568 0164 0B44     		add	r3, r3, r1
 22569 0166 DC33     		adds	r3, r3, #220
 22570 0168 0022     		movs	r2, #0
 22571 016a 1A60     		str	r2, [r3]
3078:..\src/command_processing.c **** 
3079:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 22572              		.loc 1 3079 0
 22573 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22574 016e 5C49     		ldr	r1, .L894
 22575 0170 1346     		mov	r3, r2
 22576 0172 DB00     		lsls	r3, r3, #3
 22577 0174 9B1A     		subs	r3, r3, r2
 22578 0176 1B01     		lsls	r3, r3, #4
 22579 0178 0B44     		add	r3, r3, r1
 22580 017a E033     		adds	r3, r3, #224
 22581 017c 0122     		movs	r2, #1
 22582 017e 1A70     		strb	r2, [r3]
3080:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 22583              		.loc 1 3080 0
 22584 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22585 0182 5749     		ldr	r1, .L894
 22586 0184 1346     		mov	r3, r2
 22587 0186 DB00     		lsls	r3, r3, #3
 22588 0188 9B1A     		subs	r3, r3, r2
 22589 018a 1B01     		lsls	r3, r3, #4
 22590 018c 0B44     		add	r3, r3, r1
 22591 018e E133     		adds	r3, r3, #225
 22592 0190 0022     		movs	r2, #0
 22593 0192 1A70     		strb	r2, [r3]
3081:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 22594              		.loc 1 3081 0
 22595 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22596 0196 5249     		ldr	r1, .L894
 22597 0198 1346     		mov	r3, r2
 22598 019a DB00     		lsls	r3, r3, #3
 22599 019c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 495


 22600 019e 1B01     		lsls	r3, r3, #4
 22601 01a0 0B44     		add	r3, r3, r1
 22602 01a2 E233     		adds	r3, r3, #226
 22603 01a4 0022     		movs	r2, #0
 22604 01a6 1A70     		strb	r2, [r3]
3082:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 22605              		.loc 1 3082 0
 22606 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22607 01aa 4D49     		ldr	r1, .L894
 22608 01ac 1346     		mov	r3, r2
 22609 01ae DB00     		lsls	r3, r3, #3
 22610 01b0 9B1A     		subs	r3, r3, r2
 22611 01b2 1B01     		lsls	r3, r3, #4
 22612 01b4 0B44     		add	r3, r3, r1
 22613 01b6 03F58773 		add	r3, r3, #270
 22614 01ba 0022     		movs	r2, #0
 22615 01bc 1A70     		strb	r2, [r3]
3083:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 22616              		.loc 1 3083 0
 22617 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22618 01c0 4749     		ldr	r1, .L894
 22619 01c2 1346     		mov	r3, r2
 22620 01c4 DB00     		lsls	r3, r3, #3
 22621 01c6 9B1A     		subs	r3, r3, r2
 22622 01c8 1B01     		lsls	r3, r3, #4
 22623 01ca 0B44     		add	r3, r3, r1
 22624 01cc 03F20F13 		addw	r3, r3, #271
 22625 01d0 0022     		movs	r2, #0
 22626 01d2 1A70     		strb	r2, [r3]
3084:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 22627              		.loc 1 3084 0
 22628 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22629 01d6 4249     		ldr	r1, .L894
 22630 01d8 1346     		mov	r3, r2
 22631 01da DB00     		lsls	r3, r3, #3
 22632 01dc 9B1A     		subs	r3, r3, r2
 22633 01de 1B01     		lsls	r3, r3, #4
 22634 01e0 0B44     		add	r3, r3, r1
 22635 01e2 F033     		adds	r3, r3, #240
 22636 01e4 0022     		movs	r2, #0
 22637 01e6 1A60     		str	r2, [r3]
3085:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 22638              		.loc 1 3085 0
 22639 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22640 01ea 3D49     		ldr	r1, .L894
 22641 01ec 1346     		mov	r3, r2
 22642 01ee DB00     		lsls	r3, r3, #3
 22643 01f0 9B1A     		subs	r3, r3, r2
 22644 01f2 1B01     		lsls	r3, r3, #4
 22645 01f4 0B44     		add	r3, r3, r1
 22646 01f6 EC33     		adds	r3, r3, #236
 22647 01f8 0022     		movs	r2, #0
 22648 01fa 1A60     		str	r2, [r3]
3086:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22649              		.loc 1 3086 0
 22650 01fc 0023     		movs	r3, #0
 22651 01fe BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 496


 22652 0200 10E0     		b	.L873
 22653              	.L874:
3087:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 22654              		.loc 1 3087 0 discriminator 3
 22655 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22656 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22657 0206 3648     		ldr	r0, .L894
 22658 0208 1346     		mov	r3, r2
 22659 020a DB00     		lsls	r3, r3, #3
 22660 020c 9B1A     		subs	r3, r3, r2
 22661 020e 9B00     		lsls	r3, r3, #2
 22662 0210 0B44     		add	r3, r3, r1
 22663 0212 3C33     		adds	r3, r3, #60
 22664 0214 9B00     		lsls	r3, r3, #2
 22665 0216 0344     		add	r3, r3, r0
 22666 0218 4FF00002 		mov	r2, #0
 22667 021c 5A60     		str	r2, [r3, #4]	@ float
3086:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22668              		.loc 1 3086 0 discriminator 3
 22669 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22670 0220 0133     		adds	r3, r3, #1
 22671 0222 BB71     		strb	r3, [r7, #6]
 22672              	.L873:
3086:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 22673              		.loc 1 3086 0 is_stmt 0 discriminator 1
 22674 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22675 0226 052B     		cmp	r3, #5
 22676 0228 EBD9     		bls	.L874
3088:..\src/command_processing.c ****         }
3089:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 22677              		.loc 1 3089 0 is_stmt 1 discriminator 2
 22678 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22679 022c 2C49     		ldr	r1, .L894
 22680 022e 1346     		mov	r3, r2
 22681 0230 DB00     		lsls	r3, r3, #3
 22682 0232 9B1A     		subs	r3, r3, r2
 22683 0234 1B01     		lsls	r3, r3, #4
 22684 0236 0B44     		add	r3, r3, r1
 22685 0238 03F58673 		add	r3, r3, #268
 22686 023c 40F2DC52 		movw	r2, #1500
 22687 0240 1A80     		strh	r2, [r3]	@ movhi
3090:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 22688              		.loc 1 3090 0 discriminator 2
 22689 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22690 0244 2649     		ldr	r1, .L894
 22691 0246 1346     		mov	r3, r2
 22692 0248 DB00     		lsls	r3, r3, #3
 22693 024a 9B1A     		subs	r3, r3, r2
 22694 024c 1B01     		lsls	r3, r3, #4
 22695 024e 0B44     		add	r3, r3, r1
 22696 0250 03F58873 		add	r3, r3, #272
 22697 0254 FA79     		ldrb	r2, [r7, #7]
 22698 0256 1A70     		strb	r2, [r3]
3091:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 22699              		.loc 1 3091 0 discriminator 2
 22700 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22701 025a 2149     		ldr	r1, .L894
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 497


 22702 025c 1346     		mov	r3, r2
 22703 025e DB00     		lsls	r3, r3, #3
 22704 0260 9B1A     		subs	r3, r3, r2
 22705 0262 1B01     		lsls	r3, r3, #4
 22706 0264 0B44     		add	r3, r3, r1
 22707 0266 E333     		adds	r3, r3, #227
 22708 0268 0122     		movs	r2, #1
 22709 026a 1A70     		strb	r2, [r3]
3092:..\src/command_processing.c ****         
3093:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 22710              		.loc 1 3093 0 discriminator 2
 22711 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22712 026e 1C49     		ldr	r1, .L894
 22713 0270 1346     		mov	r3, r2
 22714 0272 DB00     		lsls	r3, r3, #3
 22715 0274 9B1A     		subs	r3, r3, r2
 22716 0276 1B01     		lsls	r3, r3, #4
 22717 0278 0B44     		add	r3, r3, r1
 22718 027a 03F21113 		addw	r3, r3, #273
 22719 027e 0122     		movs	r2, #1
 22720 0280 1A70     		strb	r2, [r3]
3094:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 22721              		.loc 1 3094 0 discriminator 2
 22722 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22723 0284 1649     		ldr	r1, .L894
 22724 0286 1346     		mov	r3, r2
 22725 0288 DB00     		lsls	r3, r3, #3
 22726 028a 9B1A     		subs	r3, r3, r2
 22727 028c 1B01     		lsls	r3, r3, #4
 22728 028e 0B44     		add	r3, r3, r1
 22729 0290 03F58973 		add	r3, r3, #274
 22730 0294 0022     		movs	r2, #0
 22731 0296 1A70     		strb	r2, [r3]
3064:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22732              		.loc 1 3064 0 discriminator 2
 22733 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22734 029a 0133     		adds	r3, r3, #1
 22735 029c FB71     		strb	r3, [r7, #7]
 22736              	.L872:
3064:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 22737              		.loc 1 3064 0 is_stmt 0 discriminator 1
 22738 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22739 02a0 012B     		cmp	r3, #1
 22740 02a2 7FF6E6AE 		bls	.L875
3095:..\src/command_processing.c ****     }
3096:..\src/command_processing.c ****     
3097:..\src/command_processing.c ****     // ENC STRUCT
3098:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 22741              		.loc 1 3098 0 is_stmt 1
 22742 02a6 0023     		movs	r3, #0
 22743 02a8 FB71     		strb	r3, [r7, #7]
 22744 02aa 98E0     		b	.L876
 22745              	.L883:
3099:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22746              		.loc 1 3099 0
 22747 02ac 0023     		movs	r3, #0
 22748 02ae BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 498


 22749 02b0 0FE0     		b	.L877
 22750              	.L878:
3100:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 22751              		.loc 1 3100 0 discriminator 3
 22752 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22753 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22754 02b6 0A48     		ldr	r0, .L894
 22755 02b8 1346     		mov	r3, r2
 22756 02ba 5B00     		lsls	r3, r3, #1
 22757 02bc 1344     		add	r3, r3, r2
 22758 02be 1B01     		lsls	r3, r3, #4
 22759 02c0 0344     		add	r3, r3, r0
 22760 02c2 0B44     		add	r3, r3, r1
 22761 02c4 03F5C873 		add	r3, r3, #400
 22762 02c8 0022     		movs	r2, #0
 22763 02ca 1A70     		strb	r2, [r3]
3099:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22764              		.loc 1 3099 0 discriminator 3
 22765 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22766 02ce 0133     		adds	r3, r3, #1
 22767 02d0 BB71     		strb	r3, [r7, #6]
 22768              	.L877:
3099:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22769              		.loc 1 3099 0 is_stmt 0 discriminator 1
 22770 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22771 02d4 042B     		cmp	r3, #4
 22772 02d6 ECD9     		bls	.L878
3101:..\src/command_processing.c ****         }
3102:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22773              		.loc 1 3102 0 is_stmt 1
 22774 02d8 0023     		movs	r3, #0
 22775 02da BB71     		strb	r3, [r7, #6]
 22776 02dc 2CE0     		b	.L879
 22777              	.L895:
 22778 02de 00BF     		.align	2
 22779              	.L894:
 22780 02e0 00000000 		.word	g_mem
 22781              	.L880:
3103:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22782              		.loc 1 3103 0 discriminator 3
 22783 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22784 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22785 02e8 C748     		ldr	r0, .L896
 22786 02ea 1346     		mov	r3, r2
 22787 02ec 5B00     		lsls	r3, r3, #1
 22788 02ee 1344     		add	r3, r3, r2
 22789 02f0 1B01     		lsls	r3, r3, #4
 22790 02f2 0344     		add	r3, r3, r0
 22791 02f4 0B44     		add	r3, r3, r1
 22792 02f6 03F29513 		addw	r3, r3, #405
 22793 02fa 0322     		movs	r2, #3
 22794 02fc 1A70     		strb	r2, [r3]
3104:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 22795              		.loc 1 3104 0 discriminator 3
 22796 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22797 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22798 0302 C148     		ldr	r0, .L896
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 499


 22799 0304 1346     		mov	r3, r2
 22800 0306 5B00     		lsls	r3, r3, #1
 22801 0308 1344     		add	r3, r3, r2
 22802 030a 9B00     		lsls	r3, r3, #2
 22803 030c 0B44     		add	r3, r3, r1
 22804 030e 6833     		adds	r3, r3, #104
 22805 0310 9B00     		lsls	r3, r3, #2
 22806 0312 0344     		add	r3, r3, r0
 22807 0314 4FF07E52 		mov	r2, #1065353216
 22808 0318 5A60     		str	r2, [r3, #4]	@ float
3105:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 22809              		.loc 1 3105 0 discriminator 3
 22810 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22811 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22812 031e BA48     		ldr	r0, .L896
 22813 0320 1346     		mov	r3, r2
 22814 0322 5B00     		lsls	r3, r3, #1
 22815 0324 1344     		add	r3, r3, r2
 22816 0326 9B00     		lsls	r3, r3, #2
 22817 0328 0B44     		add	r3, r3, r1
 22818 032a 6633     		adds	r3, r3, #102
 22819 032c 0022     		movs	r2, #0
 22820 032e 40F82320 		str	r2, [r0, r3, lsl #2]
3102:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22821              		.loc 1 3102 0 discriminator 3
 22822 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22823 0334 0133     		adds	r3, r3, #1
 22824 0336 BB71     		strb	r3, [r7, #6]
 22825              	.L879:
3102:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 22826              		.loc 1 3102 0 is_stmt 0 discriminator 1
 22827 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22828 033a 022B     		cmp	r3, #2
 22829 033c D2D9     		bls	.L880
3106:..\src/command_processing.c ****         }
3107:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 22830              		.loc 1 3107 0 is_stmt 1
 22831 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22832 0340 B149     		ldr	r1, .L896
 22833 0342 1346     		mov	r3, r2
 22834 0344 5B00     		lsls	r3, r3, #1
 22835 0346 1344     		add	r3, r3, r2
 22836 0348 1B01     		lsls	r3, r3, #4
 22837 034a 0B44     		add	r3, r3, r1
 22838 034c 03F5D873 		add	r3, r3, #432
 22839 0350 0022     		movs	r2, #0
 22840 0352 1A70     		strb	r2, [r3]
3108:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 22841              		.loc 1 3108 0
 22842 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22843 0356 AC49     		ldr	r1, .L896
 22844 0358 1346     		mov	r3, r2
 22845 035a 5B00     		lsls	r3, r3, #1
 22846 035c 1344     		add	r3, r3, r2
 22847 035e 1B01     		lsls	r3, r3, #4
 22848 0360 0B44     		add	r3, r3, r1
 22849 0362 03F5DA73 		add	r3, r3, #436
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 500


 22850 0366 1622     		movs	r2, #22
 22851 0368 1A70     		strb	r2, [r3]
3109:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22852              		.loc 1 3109 0
 22853 036a 0023     		movs	r3, #0
 22854 036c BB71     		strb	r3, [r7, #6]
 22855 036e 0FE0     		b	.L881
 22856              	.L882:
3110:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 22857              		.loc 1 3110 0 discriminator 3
 22858 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22859 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 22860 0374 A448     		ldr	r0, .L896
 22861 0376 1346     		mov	r3, r2
 22862 0378 5B00     		lsls	r3, r3, #1
 22863 037a 1344     		add	r3, r3, r2
 22864 037c 1B01     		lsls	r3, r3, #4
 22865 037e 0344     		add	r3, r3, r0
 22866 0380 0B44     		add	r3, r3, r1
 22867 0382 03F2B113 		addw	r3, r3, #433
 22868 0386 BA79     		ldrb	r2, [r7, #6]
 22869 0388 1A70     		strb	r2, [r3]
3109:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22870              		.loc 1 3109 0 discriminator 3
 22871 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22872 038c 0133     		adds	r3, r3, #1
 22873 038e BB71     		strb	r3, [r7, #6]
 22874              	.L881:
3109:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 22875              		.loc 1 3109 0 is_stmt 0 discriminator 1
 22876 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 22877 0392 022B     		cmp	r3, #2
 22878 0394 ECD9     		bls	.L882
3111:..\src/command_processing.c ****         }
3112:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 22879              		.loc 1 3112 0 is_stmt 1 discriminator 2
 22880 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22881 0398 9B49     		ldr	r1, .L896
 22882 039a 1346     		mov	r3, r2
 22883 039c 5B00     		lsls	r3, r3, #1
 22884 039e 1344     		add	r3, r3, r2
 22885 03a0 1B01     		lsls	r3, r3, #4
 22886 03a2 0B44     		add	r3, r3, r1
 22887 03a4 03F2B513 		addw	r3, r3, #437
 22888 03a8 0F22     		movs	r2, #15
 22889 03aa 1A70     		strb	r2, [r3]
3113:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 22890              		.loc 1 3113 0 discriminator 2
 22891 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22892 03ae 9649     		ldr	r1, .L896
 22893 03b0 1346     		mov	r3, r2
 22894 03b2 5B00     		lsls	r3, r3, #1
 22895 03b4 1344     		add	r3, r3, r2
 22896 03b6 1B01     		lsls	r3, r3, #4
 22897 03b8 0B44     		add	r3, r3, r1
 22898 03ba 03F5DB73 		add	r3, r3, #438
 22899 03be 0E22     		movs	r2, #14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 501


 22900 03c0 1A70     		strb	r2, [r3]
3114:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 22901              		.loc 1 3114 0 discriminator 2
 22902 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22903 03c4 9049     		ldr	r1, .L896
 22904 03c6 1346     		mov	r3, r2
 22905 03c8 5B00     		lsls	r3, r3, #1
 22906 03ca 1344     		add	r3, r3, r2
 22907 03cc 1B01     		lsls	r3, r3, #4
 22908 03ce 0B44     		add	r3, r3, r1
 22909 03d0 03F2B713 		addw	r3, r3, #439
 22910 03d4 0122     		movs	r2, #1
 22911 03d6 1A70     		strb	r2, [r3]
3098:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22912              		.loc 1 3098 0 discriminator 2
 22913 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22914 03da 0133     		adds	r3, r3, #1
 22915 03dc FB71     		strb	r3, [r7, #7]
 22916              	.L876:
3098:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 22917              		.loc 1 3098 0 is_stmt 0 discriminator 1
 22918 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22919 03e0 012B     		cmp	r3, #1
 22920 03e2 7FF663AF 		bls	.L883
3115:..\src/command_processing.c ****     }
3116:..\src/command_processing.c ****     
3117:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 22921              		.loc 1 3117 0 is_stmt 1
 22922 03e6 0023     		movs	r3, #0
 22923 03e8 FB71     		strb	r3, [r7, #7]
 22924 03ea 2EE0     		b	.L884
 22925              	.L885:
3118:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22926              		.loc 1 3118 0 discriminator 3
 22927 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22928 03ee 8649     		ldr	r1, .L896
 22929 03f0 1346     		mov	r3, r2
 22930 03f2 DB00     		lsls	r3, r3, #3
 22931 03f4 9B1A     		subs	r3, r3, r2
 22932 03f6 1B01     		lsls	r3, r3, #4
 22933 03f8 0B44     		add	r3, r3, r1
 22934 03fa E433     		adds	r3, r3, #228
 22935 03fc 0022     		movs	r2, #0
 22936 03fe 1A60     		str	r2, [r3]
3119:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 22937              		.loc 1 3119 0 discriminator 3
 22938 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 22939 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 22940 0404 8048     		ldr	r0, .L896
 22941 0406 0B46     		mov	r3, r1
 22942 0408 DB00     		lsls	r3, r3, #3
 22943 040a 5B1A     		subs	r3, r3, r1
 22944 040c 1B01     		lsls	r3, r3, #4
 22945 040e 0344     		add	r3, r3, r0
 22946 0410 03F58873 		add	r3, r3, #272
 22947 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22948 0416 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 502


 22949 0418 7B49     		ldr	r1, .L896
 22950 041a 0346     		mov	r3, r0
 22951 041c 5B00     		lsls	r3, r3, #1
 22952 041e 0344     		add	r3, r3, r0
 22953 0420 1B01     		lsls	r3, r3, #4
 22954 0422 0B44     		add	r3, r3, r1
 22955 0424 03F29513 		addw	r3, r3, #405
 22956 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22957 042a 1946     		mov	r1, r3
 22958 042c 44F63823 		movw	r3, #19000
 22959 0430 03FA01F1 		lsl	r1, r3, r1
 22960 0434 7448     		ldr	r0, .L896
 22961 0436 1346     		mov	r3, r2
 22962 0438 DB00     		lsls	r3, r3, #3
 22963 043a 9B1A     		subs	r3, r3, r2
 22964 043c 1B01     		lsls	r3, r3, #4
 22965 043e 0344     		add	r3, r3, r0
 22966 0440 E833     		adds	r3, r3, #232
 22967 0442 1960     		str	r1, [r3]
3117:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22968              		.loc 1 3117 0 discriminator 3
 22969 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22970 0446 0133     		adds	r3, r3, #1
 22971 0448 FB71     		strb	r3, [r7, #7]
 22972              	.L884:
3117:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 22973              		.loc 1 3117 0 is_stmt 0 discriminator 1
 22974 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 22975 044c 012B     		cmp	r3, #1
 22976 044e CDD9     		bls	.L885
3120:..\src/command_processing.c ****     }
3121:..\src/command_processing.c ****     
3122:..\src/command_processing.c ****     // EMG STRUCT     
3123:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 22977              		.loc 1 3123 0 is_stmt 1
 22978 0450 6D4B     		ldr	r3, .L896
 22979 0452 C822     		movs	r2, #200
 22980 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
3124:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 22981              		.loc 1 3124 0
 22982 0458 6B4B     		ldr	r3, .L896
 22983 045a C822     		movs	r2, #200
 22984 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
3125:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 22985              		.loc 1 3125 0
 22986 0460 694B     		ldr	r3, .L896
 22987 0462 4FF48062 		mov	r2, #1024
 22988 0466 C3F8F421 		str	r2, [r3, #500]
3126:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 22989              		.loc 1 3126 0
 22990 046a 674B     		ldr	r3, .L896
 22991 046c 4FF48062 		mov	r2, #1024
 22992 0470 C3F8F821 		str	r2, [r3, #504]
3127:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 22993              		.loc 1 3127 0
 22994 0474 644B     		ldr	r3, .L896
 22995 0476 6422     		movs	r2, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 503


 22996 0478 83F8FC21 		strb	r2, [r3, #508]
3128:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 22997              		.loc 1 3128 0
 22998 047c 624B     		ldr	r3, .L896
 22999 047e 6422     		movs	r2, #100
 23000 0480 83F8FD21 		strb	r2, [r3, #509]
3129:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23001              		.loc 1 3129 0
 23002 0484 604B     		ldr	r3, .L896
 23003 0486 0022     		movs	r2, #0
 23004 0488 83F8FE21 		strb	r2, [r3, #510]
3130:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 23005              		.loc 1 3130 0
 23006 048c 5E4B     		ldr	r3, .L896
 23007 048e 0022     		movs	r2, #0
 23008 0490 83F8FF21 		strb	r2, [r3, #511]
3131:..\src/command_processing.c **** 
3132:..\src/command_processing.c ****     // IMU STRUCT
3133:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23009              		.loc 1 3133 0
 23010 0494 5C4B     		ldr	r3, .L896
 23011 0496 0022     		movs	r2, #0
 23012 0498 83F80022 		strb	r2, [r3, #512]
3134:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 23013              		.loc 1 3134 0
 23014 049c 5A4B     		ldr	r3, .L896
 23015 049e 0022     		movs	r2, #0
 23016 04a0 83F80122 		strb	r2, [r3, #513]
3135:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 23017              		.loc 1 3135 0
 23018 04a4 0023     		movs	r3, #0
 23019 04a6 FB71     		strb	r3, [r7, #7]
 23020 04a8 34E0     		b	.L886
 23021              	.L887:
3136:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23022              		.loc 1 3136 0 discriminator 3
 23023 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23024 04ac 5649     		ldr	r1, .L896
 23025 04ae 1346     		mov	r3, r2
 23026 04b0 9B00     		lsls	r3, r3, #2
 23027 04b2 1344     		add	r3, r3, r2
 23028 04b4 0B44     		add	r3, r3, r1
 23029 04b6 03F20223 		addw	r3, r3, #514
 23030 04ba 0122     		movs	r2, #1
 23031 04bc 1A70     		strb	r2, [r3]
3137:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 23032              		.loc 1 3137 0 discriminator 3
 23033 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23034 04c0 5149     		ldr	r1, .L896
 23035 04c2 1346     		mov	r3, r2
 23036 04c4 9B00     		lsls	r3, r3, #2
 23037 04c6 1344     		add	r3, r3, r2
 23038 04c8 0B44     		add	r3, r3, r1
 23039 04ca 03F20323 		addw	r3, r3, #515
 23040 04ce 0122     		movs	r2, #1
 23041 04d0 1A70     		strb	r2, [r3]
3138:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 504


 23042              		.loc 1 3138 0 discriminator 3
 23043 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23044 04d4 4C49     		ldr	r1, .L896
 23045 04d6 1346     		mov	r3, r2
 23046 04d8 9B00     		lsls	r3, r3, #2
 23047 04da 1344     		add	r3, r3, r2
 23048 04dc 0B44     		add	r3, r3, r1
 23049 04de 03F50173 		add	r3, r3, #516
 23050 04e2 0022     		movs	r2, #0
 23051 04e4 1A70     		strb	r2, [r3]
3139:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 23052              		.loc 1 3139 0 discriminator 3
 23053 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23054 04e8 4749     		ldr	r1, .L896
 23055 04ea 1346     		mov	r3, r2
 23056 04ec 9B00     		lsls	r3, r3, #2
 23057 04ee 1344     		add	r3, r3, r2
 23058 04f0 0B44     		add	r3, r3, r1
 23059 04f2 03F20523 		addw	r3, r3, #517
 23060 04f6 0022     		movs	r2, #0
 23061 04f8 1A70     		strb	r2, [r3]
3140:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 23062              		.loc 1 3140 0 discriminator 3
 23063 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 23064 04fc 4249     		ldr	r1, .L896
 23065 04fe 1346     		mov	r3, r2
 23066 0500 9B00     		lsls	r3, r3, #2
 23067 0502 1344     		add	r3, r3, r2
 23068 0504 0B44     		add	r3, r3, r1
 23069 0506 03F20623 		addw	r3, r3, #518
 23070 050a 0022     		movs	r2, #0
 23071 050c 1A70     		strb	r2, [r3]
3135:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23072              		.loc 1 3135 0 discriminator 3
 23073 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23074 0510 0133     		adds	r3, r3, #1
 23075 0512 FB71     		strb	r3, [r7, #7]
 23076              	.L886:
3135:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 23077              		.loc 1 3135 0 is_stmt 0 discriminator 1
 23078 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23079 0516 042B     		cmp	r3, #4
 23080 0518 C7D9     		bls	.L887
3141:..\src/command_processing.c ****     }
3142:..\src/command_processing.c ****      
3143:..\src/command_processing.c ****     // EXP STRUCT
3144:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23081              		.loc 1 3144 0 is_stmt 1
 23082 051a 3B4B     		ldr	r3, .L896
 23083 051c 0022     		movs	r2, #0
 23084 051e 83F82622 		strb	r2, [r3, #550]
3145:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 23085              		.loc 1 3145 0
 23086 0522 394B     		ldr	r3, .L896
 23087 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23088 0528 1233     		adds	r3, r3, #18
 23089 052a 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 505


 23090 052c 364A     		ldr	r2, .L896
 23091 052e 1344     		add	r3, r3, r2
 23092 0530 364A     		ldr	r2, .L896+4
 23093 0532 1068     		ldr	r0, [r2]	@ unaligned
 23094 0534 1860     		str	r0, [r3]	@ unaligned
 23095 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23096 0538 9279     		ldrb	r2, [r2, #6]
 23097 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 23098 053c 9A71     		strb	r2, [r3, #6]
3146:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 23099              		.loc 1 3146 0
 23100 053e 324B     		ldr	r3, .L896
 23101 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 23102 0544 012B     		cmp	r3, #1
 23103 0546 13D1     		bne	.L888
3147:..\src/command_processing.c ****         // Set date of maintenance from RTC
3148:..\src/command_processing.c ****         store_RTC_current_time();
 23104              		.loc 1 3148 0
 23105 0548 FFF7FEFF 		bl	store_RTC_current_time
3149:..\src/command_processing.c ****         
3150:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 23106              		.loc 1 3150 0
 23107 054c 2E4B     		ldr	r3, .L896
 23108 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 23109 0552 2D4B     		ldr	r3, .L896
 23110 0554 83F8A420 		strb	r2, [r3, #164]
3151:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 23111              		.loc 1 3151 0
 23112 0558 2B4B     		ldr	r3, .L896
 23113 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 23114 055e 2A4B     		ldr	r3, .L896
 23115 0560 83F8A520 		strb	r2, [r3, #165]
3152:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 23116              		.loc 1 3152 0
 23117 0564 284B     		ldr	r3, .L896
 23118 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 23119 056a 274B     		ldr	r3, .L896
 23120 056c 83F8A620 		strb	r2, [r3, #166]
 23121              	.L888:
3153:..\src/command_processing.c ****     }
3154:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 23122              		.loc 1 3154 0
 23123 0570 254B     		ldr	r3, .L896
 23124 0572 0022     		movs	r2, #0
 23125 0574 83F82722 		strb	r2, [r3, #551]
3155:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23126              		.loc 1 3155 0
 23127 0578 0023     		movs	r3, #0
 23128 057a FB71     		strb	r3, [r7, #7]
 23129 057c 08E0     		b	.L889
 23130              	.L890:
3156:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 23131              		.loc 1 3156 0 discriminator 3
 23132 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23133 0580 214A     		ldr	r2, .L896
 23134 0582 1344     		add	r3, r3, r2
 23135 0584 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 506


 23136 0586 83F82822 		strb	r2, [r3, #552]
3155:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23137              		.loc 1 3155 0 discriminator 3
 23138 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23139 058c 0133     		adds	r3, r3, #1
 23140 058e FB71     		strb	r3, [r7, #7]
 23141              	.L889:
3155:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 23142              		.loc 1 3155 0 is_stmt 0 discriminator 1
 23143 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 23144 0592 0B2B     		cmp	r3, #11
 23145 0594 F3D9     		bls	.L890
3157:..\src/command_processing.c ****     }
3158:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3159:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 23146              		.loc 1 3159 0 is_stmt 1
 23147 0596 1C4B     		ldr	r3, .L896
 23148 0598 0122     		movs	r2, #1
 23149 059a 83F82A22 		strb	r2, [r3, #554]
3160:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 23150              		.loc 1 3160 0
 23151 059e 1A4B     		ldr	r3, .L896
 23152 05a0 0122     		movs	r2, #1
 23153 05a2 83F82B22 		strb	r2, [r3, #555]
3161:..\src/command_processing.c ****     g_mem.exp.record_EMG_history_on_SD = FALSE;
 23154              		.loc 1 3161 0
 23155 05a6 184B     		ldr	r3, .L896
 23156 05a8 0022     		movs	r2, #0
 23157 05aa 83F83422 		strb	r2, [r3, #564]
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3164:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3165:..\src/command_processing.c ****     memInit_SoftHandPro();
3166:..\src/command_processing.c **** #endif 
3167:..\src/command_processing.c **** 
3168:..\src/command_processing.c **** #ifdef MASTER_FW
3169:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3170:..\src/command_processing.c ****     memInit_Master();
3171:..\src/command_processing.c **** #endif 
3172:..\src/command_processing.c **** 
3173:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3174:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3175:..\src/command_processing.c ****     memInit_AirChambersFb();
3176:..\src/command_processing.c **** #endif 
3177:..\src/command_processing.c **** 
3178:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3179:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3180:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3181:..\src/command_processing.c **** #endif
3182:..\src/command_processing.c **** 
3183:..\src/command_processing.c ****     // JOYSTICK STRUCT
3184:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 23158              		.loc 1 3184 0
 23159 05ae 164B     		ldr	r3, .L896
 23160 05b0 9622     		movs	r2, #150
 23161 05b2 A3F8B022 		strh	r2, [r3, #688]	@ movhi
3185:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 507


 23162              		.loc 1 3185 0
 23163 05b6 144B     		ldr	r3, .L896
 23164 05b8 6422     		movs	r2, #100
 23165 05ba A3F8B222 		strh	r2, [r3, #690]	@ movhi
3186:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 23166              		.loc 1 3186 0
 23167 05be 124B     		ldr	r3, .L896
 23168 05c0 4FF48062 		mov	r2, #1024
 23169 05c4 A3F8B422 		strh	r2, [r3, #692]	@ movhi
3187:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 23170              		.loc 1 3187 0
 23171 05c8 0F4B     		ldr	r3, .L896
 23172 05ca 4FF48062 		mov	r2, #1024
 23173 05ce A3F8B622 		strh	r2, [r3, #694]	@ movhi
3188:..\src/command_processing.c **** 
3189:..\src/command_processing.c ****     // Default generic user_id
3190:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 23174              		.loc 1 3190 0
 23175 05d2 0D4B     		ldr	r3, .L896
 23176 05d4 0022     		movs	r2, #0
 23177 05d6 83F8AB20 		strb	r2, [r3, #171]
3191:..\src/command_processing.c **** 
3192:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3193:..\src/command_processing.c ****     g_mem.flag = TRUE;
 23178              		.loc 1 3193 0
 23179 05da 0B4B     		ldr	r3, .L896
 23180 05dc 0122     		movs	r2, #1
 23181 05de 1A70     		strb	r2, [r3]
3194:..\src/command_processing.c ****     
3195:..\src/command_processing.c ****     //write that configuration to EEPROM
3196:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 23182              		.loc 1 3196 0
 23183 05e0 0020     		movs	r0, #0
 23184 05e2 FFF7FEFF 		bl	memStore
 23185 05e6 0346     		mov	r3, r0
 23186 05e8 002B     		cmp	r3, #0
 23187 05ea 07D0     		beq	.L891
 23188              		.loc 1 3196 0 is_stmt 0 discriminator 1
 23189 05ec 3220     		movs	r0, #50
 23190 05ee FFF7FEFF 		bl	memStore
 23191 05f2 0346     		mov	r3, r0
 23192 05f4 002B     		cmp	r3, #0
 23193 05f6 01D0     		beq	.L891
 23194              		.loc 1 3196 0 discriminator 3
 23195 05f8 0123     		movs	r3, #1
 23196 05fa 00E0     		b	.L892
 23197              	.L891:
 23198              		.loc 1 3196 0 discriminator 4
 23199 05fc 0023     		movs	r3, #0
 23200              	.L892:
 23201              		.loc 1 3196 0 discriminator 6
 23202 05fe DBB2     		uxtb	r3, r3
3197:..\src/command_processing.c **** }
 23203              		.loc 1 3197 0 is_stmt 1 discriminator 6
 23204 0600 1846     		mov	r0, r3
 23205 0602 0837     		adds	r7, r7, #8
 23206              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 508


 23207 0604 BD46     		mov	sp, r7
 23208              		.cfi_def_cfa_register 13
 23209              		@ sp needed
 23210 0606 80BD     		pop	{r7, pc}
 23211              	.L897:
 23212              		.align	2
 23213              	.L896:
 23214 0608 00000000 		.word	g_mem
 23215 060c E01F0000 		.word	.LC308
 23216              		.cfi_endproc
 23217              	.LFE88:
 23218              		.size	memInit, .-memInit
 23219              		.section	.rodata
 23220 1fe7 00       		.align	2
 23221              	.LC309:
 23222 1fe8 55535230 		.ascii	"USR001\000"
 23222      303100
 23223              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 23224              		.align	2
 23225              		.global	memInit_SoftHandPro
 23226              		.thumb
 23227              		.thumb_func
 23228              		.type	memInit_SoftHandPro, %function
 23229              	memInit_SoftHandPro:
 23230              	.LFB89:
3198:..\src/command_processing.c **** 
3199:..\src/command_processing.c **** //==============================================================================
3200:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3201:..\src/command_processing.c **** //==============================================================================
3202:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3203:..\src/command_processing.c **** {
 23231              		.loc 1 3203 0
 23232              		.cfi_startproc
 23233              		@ args = 0, pretend = 0, frame = 8
 23234              		@ frame_needed = 1, uses_anonymous_args = 0
 23235              		@ link register save eliminated.
 23236 0000 80B4     		push	{r7}
 23237              		.cfi_def_cfa_offset 4
 23238              		.cfi_offset 7, -4
 23239 0002 83B0     		sub	sp, sp, #12
 23240              		.cfi_def_cfa_offset 16
 23241 0004 00AF     		add	r7, sp, #0
 23242              		.cfi_def_cfa_register 7
3204:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 23243              		.loc 1 3204 0
 23244 0006 0023     		movs	r3, #0
 23245 0008 FB70     		strb	r3, [r7, #3]
3205:..\src/command_processing.c ****     
3206:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3207:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 23246              		.loc 1 3207 0
 23247 000a 894B     		ldr	r3, .L901
 23248 000c 0122     		movs	r2, #1
 23249 000e 83F8A720 		strb	r2, [r3, #167]
3208:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 23250              		.loc 1 3208 0
 23251 0012 874B     		ldr	r3, .L901
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 509


 23252 0014 0022     		movs	r2, #0
 23253 0016 83F8AC20 		strb	r2, [r3, #172]
3209:..\src/command_processing.c ****     
3210:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 23254              		.loc 1 3210 0
 23255 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23256 001c 8449     		ldr	r1, .L901
 23257 001e 1346     		mov	r3, r2
 23258 0020 DB00     		lsls	r3, r3, #3
 23259 0022 9B1A     		subs	r3, r3, r2
 23260 0024 1B01     		lsls	r3, r3, #4
 23261 0026 0B44     		add	r3, r3, r1
 23262 0028 E033     		adds	r3, r3, #224
 23263 002a 0122     		movs	r2, #1
 23264 002c 1A70     		strb	r2, [r3]
3211:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 23265              		.loc 1 3211 0
 23266 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23267 0030 7F49     		ldr	r1, .L901
 23268 0032 1346     		mov	r3, r2
 23269 0034 DB00     		lsls	r3, r3, #3
 23270 0036 9B1A     		subs	r3, r3, r2
 23271 0038 1B01     		lsls	r3, r3, #4
 23272 003a 0B44     		add	r3, r3, r1
 23273 003c 03F58773 		add	r3, r3, #270
 23274 0040 0022     		movs	r2, #0
 23275 0042 1A70     		strb	r2, [r3]
3212:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 23276              		.loc 1 3212 0
 23277 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23278 0046 7A49     		ldr	r1, .L901
 23279 0048 1346     		mov	r3, r2
 23280 004a DB00     		lsls	r3, r3, #3
 23281 004c 9B1A     		subs	r3, r3, r2
 23282 004e 1B01     		lsls	r3, r3, #4
 23283 0050 0B44     		add	r3, r3, r1
 23284 0052 03F20F13 		addw	r3, r3, #271
 23285 0056 0022     		movs	r2, #0
 23286 0058 1A70     		strb	r2, [r3]
3213:..\src/command_processing.c ****     
3214:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3215:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 23287              		.loc 1 3215 0
 23288 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23289 005c 744B     		ldr	r3, .L901
 23290 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 23291 0062 7349     		ldr	r1, .L901
 23292 0064 1346     		mov	r3, r2
 23293 0066 DB00     		lsls	r3, r3, #3
 23294 0068 9B1A     		subs	r3, r3, r2
 23295 006a 1B01     		lsls	r3, r3, #4
 23296 006c 0B44     		add	r3, r3, r1
 23297 006e 03F58873 		add	r3, r3, #272
 23298 0072 0246     		mov	r2, r0
 23299 0074 1A70     		strb	r2, [r3]
3216:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23300              		.loc 1 3216 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 510


 23301 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23302 0078 6D49     		ldr	r1, .L901
 23303 007a 1346     		mov	r3, r2
 23304 007c DB00     		lsls	r3, r3, #3
 23305 007e 9B1A     		subs	r3, r3, r2
 23306 0080 1B01     		lsls	r3, r3, #4
 23307 0082 0B44     		add	r3, r3, r1
 23308 0084 03F21113 		addw	r3, r3, #273
 23309 0088 0122     		movs	r2, #1
 23310 008a 1A70     		strb	r2, [r3]
3217:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 23311              		.loc 1 3217 0
 23312 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23313 008e 6849     		ldr	r1, .L901
 23314 0090 1346     		mov	r3, r2
 23315 0092 DB00     		lsls	r3, r3, #3
 23316 0094 9B1A     		subs	r3, r3, r2
 23317 0096 1B01     		lsls	r3, r3, #4
 23318 0098 0B44     		add	r3, r3, r1
 23319 009a 03F58973 		add	r3, r3, #274
 23320 009e 0122     		movs	r2, #1
 23321 00a0 1A70     		strb	r2, [r3]
3218:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 23322              		.loc 1 3218 0
 23323 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23324 00a4 6249     		ldr	r1, .L901
 23325 00a6 1346     		mov	r3, r2
 23326 00a8 DB00     		lsls	r3, r3, #3
 23327 00aa 9B1A     		subs	r3, r3, r2
 23328 00ac 1B01     		lsls	r3, r3, #4
 23329 00ae 0B44     		add	r3, r3, r1
 23330 00b0 E433     		adds	r3, r3, #228
 23331 00b2 0022     		movs	r2, #0
 23332 00b4 1A60     		str	r2, [r3]
3219:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 23333              		.loc 1 3219 0
 23334 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23335 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 23336 00ba 5D48     		ldr	r0, .L901
 23337 00bc 0B46     		mov	r3, r1
 23338 00be DB00     		lsls	r3, r3, #3
 23339 00c0 5B1A     		subs	r3, r3, r1
 23340 00c2 1B01     		lsls	r3, r3, #4
 23341 00c4 0344     		add	r3, r3, r0
 23342 00c6 03F58873 		add	r3, r3, #272
 23343 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23344 00cc 1846     		mov	r0, r3
 23345 00ce 5849     		ldr	r1, .L901
 23346 00d0 0346     		mov	r3, r0
 23347 00d2 5B00     		lsls	r3, r3, #1
 23348 00d4 0344     		add	r3, r3, r0
 23349 00d6 1B01     		lsls	r3, r3, #4
 23350 00d8 0B44     		add	r3, r3, r1
 23351 00da 03F29513 		addw	r3, r3, #405
 23352 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23353 00e0 1946     		mov	r1, r3
 23354 00e2 4FF47A53 		mov	r3, #16000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 511


 23355 00e6 03FA01F1 		lsl	r1, r3, r1
 23356 00ea 5148     		ldr	r0, .L901
 23357 00ec 1346     		mov	r3, r2
 23358 00ee DB00     		lsls	r3, r3, #3
 23359 00f0 9B1A     		subs	r3, r3, r2
 23360 00f2 1B01     		lsls	r3, r3, #4
 23361 00f4 0344     		add	r3, r3, r0
 23362 00f6 E833     		adds	r3, r3, #232
 23363 00f8 1960     		str	r1, [r3]
 23364              	.LBB26:
3220:..\src/command_processing.c ****     
3221:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 23365              		.loc 1 3221 0
 23366 00fa 0023     		movs	r3, #0
 23367 00fc 7B60     		str	r3, [r7, #4]
 23368 00fe 2EE0     		b	.L899
 23369              	.L900:
3222:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3223:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 23370              		.loc 1 3223 0 discriminator 3
 23371 0100 4B49     		ldr	r1, .L901
 23372 0102 7A68     		ldr	r2, [r7, #4]
 23373 0104 1346     		mov	r3, r2
 23374 0106 5B00     		lsls	r3, r3, #1
 23375 0108 1344     		add	r3, r3, r2
 23376 010a 1B01     		lsls	r3, r3, #4
 23377 010c 0B44     		add	r3, r3, r1
 23378 010e 03F5D873 		add	r3, r3, #432
 23379 0112 0122     		movs	r2, #1
 23380 0114 1A70     		strb	r2, [r3]
3224:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 23381              		.loc 1 3224 0 discriminator 3
 23382 0116 4649     		ldr	r1, .L901
 23383 0118 7A68     		ldr	r2, [r7, #4]
 23384 011a 1346     		mov	r3, r2
 23385 011c 5B00     		lsls	r3, r3, #1
 23386 011e 1344     		add	r3, r3, r2
 23387 0120 1B01     		lsls	r3, r3, #4
 23388 0122 0B44     		add	r3, r3, r1
 23389 0124 03F2B513 		addw	r3, r3, #437
 23390 0128 2322     		movs	r2, #35
 23391 012a 1A70     		strb	r2, [r3]
3225:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 23392              		.loc 1 3225 0 discriminator 3
 23393 012c 4049     		ldr	r1, .L901
 23394 012e 7A68     		ldr	r2, [r7, #4]
 23395 0130 1346     		mov	r3, r2
 23396 0132 5B00     		lsls	r3, r3, #1
 23397 0134 1344     		add	r3, r3, r2
 23398 0136 1B01     		lsls	r3, r3, #4
 23399 0138 0B44     		add	r3, r3, r1
 23400 013a 03F5DB73 		add	r3, r3, #438
 23401 013e 0322     		movs	r2, #3
 23402 0140 1A70     		strb	r2, [r3]
3226:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 23403              		.loc 1 3226 0 discriminator 3
 23404 0142 3B49     		ldr	r1, .L901
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 512


 23405 0144 7A68     		ldr	r2, [r7, #4]
 23406 0146 1346     		mov	r3, r2
 23407 0148 5B00     		lsls	r3, r3, #1
 23408 014a 1344     		add	r3, r3, r2
 23409 014c 1B01     		lsls	r3, r3, #4
 23410 014e 0B44     		add	r3, r3, r1
 23411 0150 03F2B713 		addw	r3, r3, #439
 23412 0154 FF22     		movs	r2, #255
 23413 0156 1A70     		strb	r2, [r3]
3221:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23414              		.loc 1 3221 0 discriminator 3
 23415 0158 7B68     		ldr	r3, [r7, #4]
 23416 015a 0133     		adds	r3, r3, #1
 23417 015c 7B60     		str	r3, [r7, #4]
 23418              	.L899:
3221:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 23419              		.loc 1 3221 0 is_stmt 0 discriminator 1
 23420 015e 7B68     		ldr	r3, [r7, #4]
 23421 0160 012B     		cmp	r3, #1
 23422 0162 CDDD     		ble	.L900
 23423              	.LBE26:
3227:..\src/command_processing.c ****     }
3228:..\src/command_processing.c ****     
3229:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 23424              		.loc 1 3229 0 is_stmt 1
 23425 0164 324B     		ldr	r3, .L901
 23426 0166 4FF48062 		mov	r2, #1024
 23427 016a C3F8F421 		str	r2, [r3, #500]
3230:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 23428              		.loc 1 3230 0
 23429 016e 304B     		ldr	r3, .L901
 23430 0170 4FF48062 		mov	r2, #1024
 23431 0174 C3F8F821 		str	r2, [r3, #504]
3231:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 23432              		.loc 1 3231 0
 23433 0178 2D4B     		ldr	r3, .L901
 23434 017a C822     		movs	r2, #200
 23435 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3232:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 23436              		.loc 1 3232 0
 23437 0180 2B4B     		ldr	r3, .L901
 23438 0182 C822     		movs	r2, #200
 23439 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3233:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 23440              		.loc 1 3233 0
 23441 0188 294B     		ldr	r3, .L901
 23442 018a 6422     		movs	r2, #100
 23443 018c 83F8FC21 		strb	r2, [r3, #508]
3234:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 23444              		.loc 1 3234 0
 23445 0190 274B     		ldr	r3, .L901
 23446 0192 6422     		movs	r2, #100
 23447 0194 83F8FD21 		strb	r2, [r3, #509]
3235:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 23448              		.loc 1 3235 0
 23449 0198 254B     		ldr	r3, .L901
 23450 019a 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 513


 23451 019c 83F8FE21 		strb	r2, [r3, #510]
3236:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 23452              		.loc 1 3236 0
 23453 01a0 234B     		ldr	r3, .L901
 23454 01a2 0022     		movs	r2, #0
 23455 01a4 83F8FF21 		strb	r2, [r3, #511]
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     //Initialize rest position parameters  
3239:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 23456              		.loc 1 3239 0
 23457 01a8 214B     		ldr	r3, .L901
 23458 01aa 0022     		movs	r2, #0
 23459 01ac 83F8AC22 		strb	r2, [r3, #684]
3240:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 23460              		.loc 1 3240 0
 23461 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 23462 01b2 1F49     		ldr	r1, .L901
 23463 01b4 1346     		mov	r3, r2
 23464 01b6 DB00     		lsls	r3, r3, #3
 23465 01b8 9B1A     		subs	r3, r3, r2
 23466 01ba 1B01     		lsls	r3, r3, #4
 23467 01bc 0B44     		add	r3, r3, r1
 23468 01be 03F58873 		add	r3, r3, #272
 23469 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23470 01c4 1946     		mov	r1, r3
 23471 01c6 1A4A     		ldr	r2, .L901
 23472 01c8 0B46     		mov	r3, r1
 23473 01ca 5B00     		lsls	r3, r3, #1
 23474 01cc 0B44     		add	r3, r3, r1
 23475 01ce 1B01     		lsls	r3, r3, #4
 23476 01d0 1344     		add	r3, r3, r2
 23477 01d2 03F29513 		addw	r3, r3, #405
 23478 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23479 01d8 1A46     		mov	r2, r3
 23480 01da 41F65833 		movw	r3, #7000
 23481 01de 9340     		lsls	r3, r3, r2
 23482 01e0 134A     		ldr	r2, .L901
 23483 01e2 C2F8A032 		str	r3, [r2, #672]
3241:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 23484              		.loc 1 3241 0
 23485 01e6 124B     		ldr	r3, .L901
 23486 01e8 0A22     		movs	r2, #10
 23487 01ea C3F8A422 		str	r2, [r3, #676]
3242:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 23488              		.loc 1 3242 0
 23489 01ee 104B     		ldr	r3, .L901
 23490 01f0 42F21072 		movw	r2, #10000
 23491 01f4 C3F8A822 		str	r2, [r3, #680]
3243:..\src/command_processing.c **** 	
3244:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 23492              		.loc 1 3244 0
 23493 01f8 0D4B     		ldr	r3, .L901
 23494 01fa 0022     		movs	r2, #0
 23495 01fc 83F80022 		strb	r2, [r3, #512]
3245:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 23496              		.loc 1 3245 0
 23497 0200 0B4B     		ldr	r3, .L901
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 514


 23498 0202 0022     		movs	r2, #0
 23499 0204 83F82622 		strb	r2, [r3, #550]
3246:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 23500              		.loc 1 3246 0
 23501 0208 094B     		ldr	r3, .L901
 23502 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 23503 020e 1233     		adds	r3, r3, #18
 23504 0210 5B01     		lsls	r3, r3, #5
 23505 0212 074A     		ldr	r2, .L901
 23506 0214 1344     		add	r3, r3, r2
 23507 0216 074A     		ldr	r2, .L901+4
 23508 0218 1068     		ldr	r0, [r2]	@ unaligned
 23509 021a 1860     		str	r0, [r3]	@ unaligned
 23510 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 23511 021e 9279     		ldrb	r2, [r2, #6]
 23512 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 23513 0222 9A71     		strb	r2, [r3, #6]
3247:..\src/command_processing.c **** }
 23514              		.loc 1 3247 0
 23515 0224 00BF     		nop
 23516 0226 0C37     		adds	r7, r7, #12
 23517              		.cfi_def_cfa_offset 4
 23518 0228 BD46     		mov	sp, r7
 23519              		.cfi_def_cfa_register 13
 23520              		@ sp needed
 23521 022a 80BC     		pop	{r7}
 23522              		.cfi_restore 7
 23523              		.cfi_def_cfa_offset 0
 23524 022c 7047     		bx	lr
 23525              	.L902:
 23526 022e 00BF     		.align	2
 23527              	.L901:
 23528 0230 00000000 		.word	g_mem
 23529 0234 E81F0000 		.word	.LC309
 23530              		.cfi_endproc
 23531              	.LFE89:
 23532              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 23533              		.section	.text.memInit_Master,"ax",%progbits
 23534              		.align	2
 23535              		.global	memInit_Master
 23536              		.thumb
 23537              		.thumb_func
 23538              		.type	memInit_Master, %function
 23539              	memInit_Master:
 23540              	.LFB90:
3248:..\src/command_processing.c **** 
3249:..\src/command_processing.c **** //==============================================================================
3250:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3251:..\src/command_processing.c **** //==============================================================================
3252:..\src/command_processing.c **** void memInit_Master(void)
3253:..\src/command_processing.c **** {
 23541              		.loc 1 3253 0
 23542              		.cfi_startproc
 23543              		@ args = 0, pretend = 0, frame = 0
 23544              		@ frame_needed = 1, uses_anonymous_args = 0
 23545              		@ link register save eliminated.
 23546 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 515


 23547              		.cfi_def_cfa_offset 4
 23548              		.cfi_offset 7, -4
 23549 0002 00AF     		add	r7, sp, #0
 23550              		.cfi_def_cfa_register 7
3254:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 23551              		.loc 1 3254 0
 23552 0004 074B     		ldr	r3, .L904
 23553 0006 0222     		movs	r2, #2
 23554 0008 83F8A020 		strb	r2, [r3, #160]
3255:..\src/command_processing.c ****     
3256:..\src/command_processing.c ****     // MS STRUCT
3257:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 23555              		.loc 1 3257 0
 23556 000c 054B     		ldr	r3, .L904
 23557 000e 0122     		movs	r2, #1
 23558 0010 83F8C122 		strb	r2, [r3, #705]
3258:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 23559              		.loc 1 3258 0
 23560 0014 034B     		ldr	r3, .L904
 23561 0016 0022     		movs	r2, #0
 23562 0018 83F8C022 		strb	r2, [r3, #704]
3259:..\src/command_processing.c **** }
 23563              		.loc 1 3259 0
 23564 001c 00BF     		nop
 23565 001e BD46     		mov	sp, r7
 23566              		.cfi_def_cfa_register 13
 23567              		@ sp needed
 23568 0020 80BC     		pop	{r7}
 23569              		.cfi_restore 7
 23570              		.cfi_def_cfa_offset 0
 23571 0022 7047     		bx	lr
 23572              	.L905:
 23573              		.align	2
 23574              	.L904:
 23575 0024 00000000 		.word	g_mem
 23576              		.cfi_endproc
 23577              	.LFE90:
 23578              		.size	memInit_Master, .-memInit_Master
 23579              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 23580              		.align	2
 23581              		.global	memInit_AirChambersFb
 23582              		.thumb
 23583              		.thumb_func
 23584              		.type	memInit_AirChambersFb, %function
 23585              	memInit_AirChambersFb:
 23586              	.LFB91:
3260:..\src/command_processing.c **** 
3261:..\src/command_processing.c **** //==============================================================================
3262:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3263:..\src/command_processing.c **** //==============================================================================
3264:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3265:..\src/command_processing.c **** {
 23587              		.loc 1 3265 0
 23588              		.cfi_startproc
 23589              		@ args = 0, pretend = 0, frame = 0
 23590              		@ frame_needed = 1, uses_anonymous_args = 0
 23591              		@ link register save eliminated.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 516


 23592 0000 80B4     		push	{r7}
 23593              		.cfi_def_cfa_offset 4
 23594              		.cfi_offset 7, -4
 23595 0002 00AF     		add	r7, sp, #0
 23596              		.cfi_def_cfa_register 7
3266:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3267:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 23597              		.loc 1 3267 0
 23598 0004 1A4B     		ldr	r3, .L907
 23599 0006 0222     		movs	r2, #2
 23600 0008 83F8AC20 		strb	r2, [r3, #172]
3268:..\src/command_processing.c ****     
3269:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 23601              		.loc 1 3269 0
 23602 000c 184B     		ldr	r3, .L907
 23603 000e 0122     		movs	r2, #1
 23604 0010 83F80F21 		strb	r2, [r3, #271]
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3272:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3273:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23605              		.loc 1 3273 0
 23606 0014 164B     		ldr	r3, .L907
 23607 0016 0422     		movs	r2, #4
 23608 0018 83F87E21 		strb	r2, [r3, #382]
3274:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23609              		.loc 1 3274 0
 23610 001c 144B     		ldr	r3, .L907
 23611 001e 0022     		movs	r2, #0
 23612 0020 C3F85421 		str	r2, [r3, #340]
3275:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23613              		.loc 1 3275 0
 23614 0024 124B     		ldr	r3, .L907
 23615 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23616 002a 1946     		mov	r1, r3
 23617 002c 104A     		ldr	r2, .L907
 23618 002e 0B46     		mov	r3, r1
 23619 0030 5B00     		lsls	r3, r3, #1
 23620 0032 0B44     		add	r3, r3, r1
 23621 0034 1B01     		lsls	r3, r3, #4
 23622 0036 1344     		add	r3, r3, r2
 23623 0038 03F29513 		addw	r3, r3, #405
 23624 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23625 003e 1A46     		mov	r2, r3
 23626 0040 45F2F053 		movw	r3, #22000
 23627 0044 9340     		lsls	r3, r3, r2
 23628 0046 0A4A     		ldr	r2, .L907
 23629 0048 C2F85831 		str	r3, [r2, #344]
3276:..\src/command_processing.c ****     
3277:..\src/command_processing.c ****     // FB STRUCT
3278:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 23630              		.loc 1 3278 0
 23631 004c 084B     		ldr	r3, .L907
 23632 004e 4FF4E172 		mov	r2, #450
 23633 0052 C3F8D022 		str	r2, [r3, #720]
3279:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 23634              		.loc 1 3279 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 517


 23635 0056 064B     		ldr	r3, .L907
 23636 0058 064A     		ldr	r2, .L907+4
 23637 005a C3F8D422 		str	r2, [r3, #724]	@ float
3280:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 23638              		.loc 1 3280 0
 23639 005e 044B     		ldr	r3, .L907
 23640 0060 4FF07E52 		mov	r2, #1065353216
 23641 0064 C3F8D822 		str	r2, [r3, #728]	@ float
3281:..\src/command_processing.c **** }
 23642              		.loc 1 3281 0
 23643 0068 00BF     		nop
 23644 006a BD46     		mov	sp, r7
 23645              		.cfi_def_cfa_register 13
 23646              		@ sp needed
 23647 006c 80BC     		pop	{r7}
 23648              		.cfi_restore 7
 23649              		.cfi_def_cfa_offset 0
 23650 006e 7047     		bx	lr
 23651              	.L908:
 23652              		.align	2
 23653              	.L907:
 23654 0070 00000000 		.word	g_mem
 23655 0074 0000C841 		.word	1103626240
 23656              		.cfi_endproc
 23657              	.LFE91:
 23658              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 23659              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 23660              		.align	2
 23661              		.global	memInit_OtbkActWristMs
 23662              		.thumb
 23663              		.thumb_func
 23664              		.type	memInit_OtbkActWristMs, %function
 23665              	memInit_OtbkActWristMs:
 23666              	.LFB92:
3282:..\src/command_processing.c **** 
3283:..\src/command_processing.c **** //==============================================================================
3284:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3285:..\src/command_processing.c **** //==============================================================================
3286:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3287:..\src/command_processing.c **** {
 23667              		.loc 1 3287 0
 23668              		.cfi_startproc
 23669              		@ args = 0, pretend = 0, frame = 0
 23670              		@ frame_needed = 1, uses_anonymous_args = 0
 23671              		@ link register save eliminated.
 23672 0000 80B4     		push	{r7}
 23673              		.cfi_def_cfa_offset 4
 23674              		.cfi_offset 7, -4
 23675 0002 00AF     		add	r7, sp, #0
 23676              		.cfi_def_cfa_register 7
3288:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3289:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 23677              		.loc 1 3289 0
 23678 0004 294B     		ldr	r3, .L910
 23679 0006 0322     		movs	r2, #3
 23680 0008 83F8AC20 		strb	r2, [r3, #172]
3290:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 518


 23681              		.loc 1 3290 0
 23682 000c 274B     		ldr	r3, .L910
 23683 000e 0122     		movs	r2, #1
 23684 0010 83F8A720 		strb	r2, [r3, #167]
3291:..\src/command_processing.c ****     
3292:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 23685              		.loc 1 3292 0
 23686 0014 254B     		ldr	r3, .L910
 23687 0016 0122     		movs	r2, #1
 23688 0018 83F80F21 		strb	r2, [r3, #271]
3293:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 23689              		.loc 1 3293 0
 23690 001c 234B     		ldr	r3, .L910
 23691 001e 6422     		movs	r2, #100
 23692 0020 83F81121 		strb	r2, [r3, #273]
3294:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
 23693              		.loc 1 3294 0
 23694 0024 214B     		ldr	r3, .L910
 23695 0026 0022     		movs	r2, #0
 23696 0028 83F81221 		strb	r2, [r3, #274]
3295:..\src/command_processing.c ****     
3296:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3297:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3298:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 23697              		.loc 1 3298 0
 23698 002c 1F4B     		ldr	r3, .L910
 23699 002e 0422     		movs	r2, #4
 23700 0030 83F87E21 		strb	r2, [r3, #382]
3299:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 23701              		.loc 1 3299 0
 23702 0034 1D4B     		ldr	r3, .L910
 23703 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 23704 003a 1C4B     		ldr	r3, .L910
 23705 003c 83F88021 		strb	r2, [r3, #384]
3300:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 23706              		.loc 1 3300 0
 23707 0040 1A4B     		ldr	r3, .L910
 23708 0042 0122     		movs	r2, #1
 23709 0044 83F88121 		strb	r2, [r3, #385]
3301:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 23710              		.loc 1 3301 0
 23711 0048 184B     		ldr	r3, .L910
 23712 004a 0022     		movs	r2, #0
 23713 004c 83F88221 		strb	r2, [r3, #386]
3302:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 23714              		.loc 1 3302 0
 23715 0050 164B     		ldr	r3, .L910
 23716 0052 0022     		movs	r2, #0
 23717 0054 C3F85421 		str	r2, [r3, #340]
3303:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 23718              		.loc 1 3303 0
 23719 0058 144B     		ldr	r3, .L910
 23720 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23721 005e 1946     		mov	r1, r3
 23722 0060 124A     		ldr	r2, .L910
 23723 0062 0B46     		mov	r3, r1
 23724 0064 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 519


 23725 0066 0B44     		add	r3, r3, r1
 23726 0068 1B01     		lsls	r3, r3, #4
 23727 006a 1344     		add	r3, r3, r2
 23728 006c 03F29513 		addw	r3, r3, #405
 23729 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23730 0072 1A46     		mov	r2, r3
 23731 0074 4FF47A53 		mov	r3, #16000
 23732 0078 9340     		lsls	r3, r3, r2
 23733 007a 0C4A     		ldr	r2, .L910
 23734 007c C2F85831 		str	r3, [r2, #344]
3304:..\src/command_processing.c ****     
3305:..\src/command_processing.c ****     // WR STRUCT
3306:..\src/command_processing.c ****     g_mem.WR.activation_mode = 0;                // Default Fast:wrist/syn2, Slow:hand/syn1
 23735              		.loc 1 3306 0
 23736 0080 0A4B     		ldr	r3, .L910
 23737 0082 0022     		movs	r2, #0
 23738 0084 83F8E022 		strb	r2, [r3, #736]
3307:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 23739              		.loc 1 3307 0
 23740 0088 084B     		ldr	r3, .L910
 23741 008a 4FF44872 		mov	r2, #800
 23742 008e A3F8E222 		strh	r2, [r3, #738]	@ movhi
3308:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 23743              		.loc 1 3308 0
 23744 0092 064B     		ldr	r3, .L910
 23745 0094 4FF44872 		mov	r2, #800
 23746 0098 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3309:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 23747              		.loc 1 3309 0
 23748 009c 034B     		ldr	r3, .L910
 23749 009e 0022     		movs	r2, #0
 23750 00a0 83F8E622 		strb	r2, [r3, #742]
3310:..\src/command_processing.c **** }
 23751              		.loc 1 3310 0
 23752 00a4 00BF     		nop
 23753 00a6 BD46     		mov	sp, r7
 23754              		.cfi_def_cfa_register 13
 23755              		@ sp needed
 23756 00a8 80BC     		pop	{r7}
 23757              		.cfi_restore 7
 23758              		.cfi_def_cfa_offset 0
 23759 00aa 7047     		bx	lr
 23760              	.L911:
 23761              		.align	2
 23762              	.L910:
 23763 00ac 00000000 		.word	g_mem
 23764              		.cfi_endproc
 23765              	.LFE92:
 23766              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 23767              		.section	.text.cmd_get_measurements,"ax",%progbits
 23768              		.align	2
 23769              		.global	cmd_get_measurements
 23770              		.thumb
 23771              		.thumb_func
 23772              		.type	cmd_get_measurements, %function
 23773              	cmd_get_measurements:
 23774              	.LFB93:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 520


3311:..\src/command_processing.c **** 
3312:..\src/command_processing.c **** //==============================================================================
3313:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3314:..\src/command_processing.c **** //==============================================================================
3315:..\src/command_processing.c **** /**
3316:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3317:..\src/command_processing.c **** **/
3318:..\src/command_processing.c **** 
3319:..\src/command_processing.c **** void cmd_get_measurements(){
 23775              		.loc 1 3319 0
 23776              		.cfi_startproc
 23777              		@ args = 0, pretend = 0, frame = 16
 23778              		@ frame_needed = 1, uses_anonymous_args = 0
 23779 0000 90B5     		push	{r4, r7, lr}
 23780              		.cfi_def_cfa_offset 12
 23781              		.cfi_offset 4, -12
 23782              		.cfi_offset 7, -8
 23783              		.cfi_offset 14, -4
 23784 0002 85B0     		sub	sp, sp, #20
 23785              		.cfi_def_cfa_offset 32
 23786 0004 00AF     		add	r7, sp, #0
 23787              		.cfi_def_cfa_register 7
3320:..\src/command_processing.c ****  
3321:..\src/command_processing.c ****     uint8 CYDATA index;
3322:..\src/command_processing.c ****     int16 aux_int16;
3323:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3324:..\src/command_processing.c ****     
3325:..\src/command_processing.c ****     uint8 packet_data[8]; 
3326:..\src/command_processing.c ****     
3327:..\src/command_processing.c ****     //Header package
3328:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 23788              		.loc 1 3328 0
 23789 0006 8423     		movs	r3, #132
 23790 0008 3B71     		strb	r3, [r7, #4]
3329:..\src/command_processing.c ****     
3330:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23791              		.loc 1 3330 0
 23792 000a 0323     		movs	r3, #3
 23793 000c FB73     		strb	r3, [r7, #15]
 23794 000e 38E0     		b	.L913
 23795              	.L914:
3331:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23796              		.loc 1 3331 0
 23797 0010 434B     		ldr	r3, .L916
 23798 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23799 0016 1A46     		mov	r2, r3
 23800 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23801 001a 4248     		ldr	r0, .L916+4
 23802 001c 1346     		mov	r3, r2
 23803 001e 5B00     		lsls	r3, r3, #1
 23804 0020 1344     		add	r3, r3, r2
 23805 0022 9B00     		lsls	r3, r3, #2
 23806 0024 1344     		add	r3, r3, r2
 23807 0026 0B44     		add	r3, r3, r1
 23808 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 23809 002c 3C4B     		ldr	r3, .L916
 23810 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 521


 23811 0032 1C46     		mov	r4, r3
 23812 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23813 0036 3A48     		ldr	r0, .L916
 23814 0038 2346     		mov	r3, r4
 23815 003a 5B00     		lsls	r3, r3, #1
 23816 003c 2344     		add	r3, r3, r4
 23817 003e 1B01     		lsls	r3, r3, #4
 23818 0040 0344     		add	r3, r3, r0
 23819 0042 0B44     		add	r3, r3, r1
 23820 0044 03F29513 		addw	r3, r3, #405
 23821 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23822 004a 42FA03F3 		asr	r3, r2, r3
 23823 004e 1BB2     		sxth	r3, r3
 23824 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3332:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23825              		.loc 1 3332 0
 23826 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23827 0054 5B00     		lsls	r3, r3, #1
 23828 0056 0233     		adds	r3, r3, #2
 23829 0058 07F10C02 		add	r2, r7, #12
 23830 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23831 005e 07F11001 		add	r1, r7, #16
 23832 0062 0B44     		add	r3, r3, r1
 23833 0064 03F80C2C 		strb	r2, [r3, #-12]
3333:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23834              		.loc 1 3333 0
 23835 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23836 006a 5B00     		lsls	r3, r3, #1
 23837 006c 5A1C     		adds	r2, r3, #1
 23838 006e 07F10C03 		add	r3, r7, #12
 23839 0072 0133     		adds	r3, r3, #1
 23840 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23841 0076 07F11003 		add	r3, r7, #16
 23842 007a 1344     		add	r3, r3, r2
 23843 007c 0A46     		mov	r2, r1
 23844 007e 03F80C2C 		strb	r2, [r3, #-12]
 23845              	.L913:
3330:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 23846              		.loc 1 3330 0 discriminator 1
 23847 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23848 0084 5A1E     		subs	r2, r3, #1
 23849 0086 FA73     		strb	r2, [r7, #15]
 23850 0088 002B     		cmp	r3, #0
 23851 008a C1D1     		bne	.L914
3334:..\src/command_processing.c ****     }
3335:..\src/command_processing.c **** 
3336:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE){
 23852              		.loc 1 3336 0
 23853 008c 244B     		ldr	r3, .L916
 23854 008e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 23855 0092 012B     		cmp	r3, #1
 23856 0094 34D1     		bne	.L915
3337:..\src/command_processing.c ****         //Overwrite only second measure with first encoder on second motor line (just to have a mea
3338:..\src/command_processing.c ****         index = 1;
 23857              		.loc 1 3338 0
 23858 0096 0123     		movs	r3, #1
 23859 0098 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 522


3339:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[1].encoder_line].pos[0] >> g_mem.enc[g_mem.motor[
 23860              		.loc 1 3339 0
 23861 009a 214B     		ldr	r3, .L916
 23862 009c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23863 00a0 1946     		mov	r1, r3
 23864 00a2 204A     		ldr	r2, .L916+4
 23865 00a4 3423     		movs	r3, #52
 23866 00a6 03FB01F3 		mul	r3, r3, r1
 23867 00aa 1344     		add	r3, r3, r2
 23868 00ac 1A68     		ldr	r2, [r3]
 23869 00ae 1C4B     		ldr	r3, .L916
 23870 00b0 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 23871 00b4 1846     		mov	r0, r3
 23872 00b6 1A49     		ldr	r1, .L916
 23873 00b8 0346     		mov	r3, r0
 23874 00ba 5B00     		lsls	r3, r3, #1
 23875 00bc 0344     		add	r3, r3, r0
 23876 00be 1B01     		lsls	r3, r3, #4
 23877 00c0 0B44     		add	r3, r3, r1
 23878 00c2 03F29513 		addw	r3, r3, #405
 23879 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23880 00c8 42FA03F3 		asr	r3, r2, r3
 23881 00cc 1BB2     		sxth	r3, r3
 23882 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3340:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23883              		.loc 1 3340 0
 23884 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23885 00d2 5B00     		lsls	r3, r3, #1
 23886 00d4 0233     		adds	r3, r3, #2
 23887 00d6 07F10C02 		add	r2, r7, #12
 23888 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23889 00dc 07F11001 		add	r1, r7, #16
 23890 00e0 0B44     		add	r3, r3, r1
 23891 00e2 03F80C2C 		strb	r2, [r3, #-12]
3341:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 23892              		.loc 1 3341 0
 23893 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23894 00e8 5B00     		lsls	r3, r3, #1
 23895 00ea 5A1C     		adds	r2, r3, #1
 23896 00ec 07F10C03 		add	r3, r7, #12
 23897 00f0 0133     		adds	r3, r3, #1
 23898 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23899 00f4 07F11003 		add	r3, r7, #16
 23900 00f8 1344     		add	r3, r3, r2
 23901 00fa 0A46     		mov	r2, r1
 23902 00fc 03F80C2C 		strb	r2, [r3, #-12]
 23903              	.L915:
3342:..\src/command_processing.c ****     }
3343:..\src/command_processing.c ****     
3344:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3345:..\src/command_processing.c **** 
3346:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 23904              		.loc 1 3346 0
 23905 0100 3B1D     		adds	r3, r7, #4
 23906 0102 0721     		movs	r1, #7
 23907 0104 1846     		mov	r0, r3
 23908 0106 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 523


 23909 010a 0346     		mov	r3, r0
 23910 010c FB72     		strb	r3, [r7, #11]
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c ****     commWrite(packet_data, 8);
 23911              		.loc 1 3348 0
 23912 010e 3B1D     		adds	r3, r7, #4
 23913 0110 0821     		movs	r1, #8
 23914 0112 1846     		mov	r0, r3
 23915 0114 FFF7FEFF 		bl	commWrite
3349:..\src/command_processing.c ****    
3350:..\src/command_processing.c **** }
 23916              		.loc 1 3350 0
 23917 0118 00BF     		nop
 23918 011a 1437     		adds	r7, r7, #20
 23919              		.cfi_def_cfa_offset 12
 23920 011c BD46     		mov	sp, r7
 23921              		.cfi_def_cfa_register 13
 23922              		@ sp needed
 23923 011e 90BD     		pop	{r4, r7, pc}
 23924              	.L917:
 23925              		.align	2
 23926              	.L916:
 23927 0120 00000000 		.word	g_mem
 23928 0124 00000000 		.word	g_measOld
 23929              		.cfi_endproc
 23930              	.LFE93:
 23931              		.size	cmd_get_measurements, .-cmd_get_measurements
 23932              		.section	.text.cmd_get_velocities,"ax",%progbits
 23933              		.align	2
 23934              		.global	cmd_get_velocities
 23935              		.thumb
 23936              		.thumb_func
 23937              		.type	cmd_get_velocities, %function
 23938              	cmd_get_velocities:
 23939              	.LFB94:
3351:..\src/command_processing.c **** 
3352:..\src/command_processing.c **** void cmd_get_velocities(){
 23940              		.loc 1 3352 0
 23941              		.cfi_startproc
 23942              		@ args = 0, pretend = 0, frame = 16
 23943              		@ frame_needed = 1, uses_anonymous_args = 0
 23944 0000 90B5     		push	{r4, r7, lr}
 23945              		.cfi_def_cfa_offset 12
 23946              		.cfi_offset 4, -12
 23947              		.cfi_offset 7, -8
 23948              		.cfi_offset 14, -4
 23949 0002 85B0     		sub	sp, sp, #20
 23950              		.cfi_def_cfa_offset 32
 23951 0004 00AF     		add	r7, sp, #0
 23952              		.cfi_def_cfa_register 7
3353:..\src/command_processing.c ****  
3354:..\src/command_processing.c ****     uint8 CYDATA index;
3355:..\src/command_processing.c ****     int16 aux_int16;
3356:..\src/command_processing.c ****    
3357:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3358:..\src/command_processing.c ****     
3359:..\src/command_processing.c ****     uint8 packet_data[8]; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 524


3360:..\src/command_processing.c ****     
3361:..\src/command_processing.c ****     //Header package
3362:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 23953              		.loc 1 3362 0
 23954 0006 8923     		movs	r3, #137
 23955 0008 3B71     		strb	r3, [r7, #4]
3363:..\src/command_processing.c ****     
3364:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 23956              		.loc 1 3364 0
 23957 000a 0323     		movs	r3, #3
 23958 000c FB73     		strb	r3, [r7, #15]
 23959 000e 3AE0     		b	.L919
 23960              	.L920:
3365:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 23961              		.loc 1 3365 0
 23962 0010 274B     		ldr	r3, .L921
 23963 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23964 0016 1A46     		mov	r2, r3
 23965 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23966 001a 2648     		ldr	r0, .L921+4
 23967 001c 1346     		mov	r3, r2
 23968 001e 5B00     		lsls	r3, r3, #1
 23969 0020 1344     		add	r3, r3, r2
 23970 0022 9B00     		lsls	r3, r3, #2
 23971 0024 1344     		add	r3, r3, r2
 23972 0026 0B44     		add	r3, r3, r1
 23973 0028 0633     		adds	r3, r3, #6
 23974 002a 9B00     		lsls	r3, r3, #2
 23975 002c 0344     		add	r3, r3, r0
 23976 002e 5A68     		ldr	r2, [r3, #4]
 23977 0030 1F4B     		ldr	r3, .L921
 23978 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 23979 0036 1C46     		mov	r4, r3
 23980 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 23981 003a 1D48     		ldr	r0, .L921
 23982 003c 2346     		mov	r3, r4
 23983 003e 5B00     		lsls	r3, r3, #1
 23984 0040 2344     		add	r3, r3, r4
 23985 0042 1B01     		lsls	r3, r3, #4
 23986 0044 0344     		add	r3, r3, r0
 23987 0046 0B44     		add	r3, r3, r1
 23988 0048 03F29513 		addw	r3, r3, #405
 23989 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23990 004e 42FA03F3 		asr	r3, r2, r3
 23991 0052 1BB2     		sxth	r3, r3
 23992 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3366:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 23993              		.loc 1 3366 0
 23994 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23995 0058 5B00     		lsls	r3, r3, #1
 23996 005a 0233     		adds	r3, r3, #2
 23997 005c 07F10C02 		add	r2, r7, #12
 23998 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23999 0062 07F11001 		add	r1, r7, #16
 24000 0066 0B44     		add	r3, r3, r1
 24001 0068 03F80C2C 		strb	r2, [r3, #-12]
3367:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 525


 24002              		.loc 1 3367 0
 24003 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24004 006e 5B00     		lsls	r3, r3, #1
 24005 0070 5A1C     		adds	r2, r3, #1
 24006 0072 07F10C03 		add	r3, r7, #12
 24007 0076 0133     		adds	r3, r3, #1
 24008 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24009 007a 07F11003 		add	r3, r7, #16
 24010 007e 1344     		add	r3, r3, r2
 24011 0080 0A46     		mov	r2, r1
 24012 0082 03F80C2C 		strb	r2, [r3, #-12]
 24013              	.L919:
3364:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 24014              		.loc 1 3364 0 discriminator 1
 24015 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24016 0088 5A1E     		subs	r2, r3, #1
 24017 008a FA73     		strb	r2, [r7, #15]
 24018 008c 002B     		cmp	r3, #0
 24019 008e BFD1     		bne	.L920
3368:..\src/command_processing.c ****     }
3369:..\src/command_processing.c ****             
3370:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3371:..\src/command_processing.c **** 
3372:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24020              		.loc 1 3372 0
 24021 0090 3B1D     		adds	r3, r7, #4
 24022 0092 0721     		movs	r1, #7
 24023 0094 1846     		mov	r0, r3
 24024 0096 FFF7FEFF 		bl	LCRChecksum
 24025 009a 0346     		mov	r3, r0
 24026 009c FB72     		strb	r3, [r7, #11]
3373:..\src/command_processing.c **** 
3374:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24027              		.loc 1 3374 0
 24028 009e 3B1D     		adds	r3, r7, #4
 24029 00a0 0821     		movs	r1, #8
 24030 00a2 1846     		mov	r0, r3
 24031 00a4 FFF7FEFF 		bl	commWrite
3375:..\src/command_processing.c **** }
 24032              		.loc 1 3375 0
 24033 00a8 00BF     		nop
 24034 00aa 1437     		adds	r7, r7, #20
 24035              		.cfi_def_cfa_offset 12
 24036 00ac BD46     		mov	sp, r7
 24037              		.cfi_def_cfa_register 13
 24038              		@ sp needed
 24039 00ae 90BD     		pop	{r4, r7, pc}
 24040              	.L922:
 24041              		.align	2
 24042              	.L921:
 24043 00b0 00000000 		.word	g_mem
 24044 00b4 00000000 		.word	g_measOld
 24045              		.cfi_endproc
 24046              	.LFE94:
 24047              		.size	cmd_get_velocities, .-cmd_get_velocities
 24048              		.section	.text.cmd_get_accelerations,"ax",%progbits
 24049              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 526


 24050              		.global	cmd_get_accelerations
 24051              		.thumb
 24052              		.thumb_func
 24053              		.type	cmd_get_accelerations, %function
 24054              	cmd_get_accelerations:
 24055              	.LFB95:
3376:..\src/command_processing.c **** 
3377:..\src/command_processing.c **** void cmd_get_accelerations(){
 24056              		.loc 1 3377 0
 24057              		.cfi_startproc
 24058              		@ args = 0, pretend = 0, frame = 16
 24059              		@ frame_needed = 1, uses_anonymous_args = 0
 24060 0000 90B5     		push	{r4, r7, lr}
 24061              		.cfi_def_cfa_offset 12
 24062              		.cfi_offset 4, -12
 24063              		.cfi_offset 7, -8
 24064              		.cfi_offset 14, -4
 24065 0002 85B0     		sub	sp, sp, #20
 24066              		.cfi_def_cfa_offset 32
 24067 0004 00AF     		add	r7, sp, #0
 24068              		.cfi_def_cfa_register 7
3378:..\src/command_processing.c ****  
3379:..\src/command_processing.c ****     uint8 CYDATA index;
3380:..\src/command_processing.c ****     int16 aux_int16;
3381:..\src/command_processing.c ****     
3382:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3383:..\src/command_processing.c ****     
3384:..\src/command_processing.c ****     uint8 packet_data[8]; 
3385:..\src/command_processing.c ****     
3386:..\src/command_processing.c ****     //Header package
3387:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 24069              		.loc 1 3387 0
 24070 0006 8B23     		movs	r3, #139
 24071 0008 3B71     		strb	r3, [r7, #4]
3388:..\src/command_processing.c ****     
3389:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24072              		.loc 1 3389 0
 24073 000a 0323     		movs	r3, #3
 24074 000c FB73     		strb	r3, [r7, #15]
 24075 000e 39E0     		b	.L924
 24076              	.L925:
3390:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24077              		.loc 1 3390 0
 24078 0010 274B     		ldr	r3, .L926
 24079 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24080 0016 1A46     		mov	r2, r3
 24081 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24082 001a 2648     		ldr	r0, .L926+4
 24083 001c 1346     		mov	r3, r2
 24084 001e 5B00     		lsls	r3, r3, #1
 24085 0020 1344     		add	r3, r3, r2
 24086 0022 9B00     		lsls	r3, r3, #2
 24087 0024 1344     		add	r3, r3, r2
 24088 0026 0B44     		add	r3, r3, r1
 24089 0028 0A33     		adds	r3, r3, #10
 24090 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24091 002e 204B     		ldr	r3, .L926
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 527


 24092 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24093 0034 1C46     		mov	r4, r3
 24094 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24095 0038 1D48     		ldr	r0, .L926
 24096 003a 2346     		mov	r3, r4
 24097 003c 5B00     		lsls	r3, r3, #1
 24098 003e 2344     		add	r3, r3, r4
 24099 0040 1B01     		lsls	r3, r3, #4
 24100 0042 0344     		add	r3, r3, r0
 24101 0044 0B44     		add	r3, r3, r1
 24102 0046 03F29513 		addw	r3, r3, #405
 24103 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24104 004c 42FA03F3 		asr	r3, r2, r3
 24105 0050 1BB2     		sxth	r3, r3
 24106 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3391:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 24107              		.loc 1 3391 0
 24108 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24109 0056 5B00     		lsls	r3, r3, #1
 24110 0058 0233     		adds	r3, r3, #2
 24111 005a 07F10C02 		add	r2, r7, #12
 24112 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24113 0060 07F11001 		add	r1, r7, #16
 24114 0064 0B44     		add	r3, r3, r1
 24115 0066 03F80C2C 		strb	r2, [r3, #-12]
3392:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 24116              		.loc 1 3392 0
 24117 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24118 006c 5B00     		lsls	r3, r3, #1
 24119 006e 5A1C     		adds	r2, r3, #1
 24120 0070 07F10C03 		add	r3, r7, #12
 24121 0074 0133     		adds	r3, r3, #1
 24122 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24123 0078 07F11003 		add	r3, r7, #16
 24124 007c 1344     		add	r3, r3, r2
 24125 007e 0A46     		mov	r2, r1
 24126 0080 03F80C2C 		strb	r2, [r3, #-12]
 24127              	.L924:
3389:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 24128              		.loc 1 3389 0 discriminator 1
 24129 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24130 0086 5A1E     		subs	r2, r3, #1
 24131 0088 FA73     		strb	r2, [r7, #15]
 24132 008a 002B     		cmp	r3, #0
 24133 008c C0D1     		bne	.L925
3393:..\src/command_processing.c ****     }
3394:..\src/command_processing.c ****     
3395:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3396:..\src/command_processing.c **** 
3397:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 24134              		.loc 1 3397 0
 24135 008e 3B1D     		adds	r3, r7, #4
 24136 0090 0721     		movs	r1, #7
 24137 0092 1846     		mov	r0, r3
 24138 0094 FFF7FEFF 		bl	LCRChecksum
 24139 0098 0346     		mov	r3, r0
 24140 009a FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 528


3398:..\src/command_processing.c **** 
3399:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 24141              		.loc 1 3399 0
 24142 009c 3B1D     		adds	r3, r7, #4
 24143 009e 0821     		movs	r1, #8
 24144 00a0 1846     		mov	r0, r3
 24145 00a2 FFF7FEFF 		bl	commWrite
3400:..\src/command_processing.c **** }
 24146              		.loc 1 3400 0
 24147 00a6 00BF     		nop
 24148 00a8 1437     		adds	r7, r7, #20
 24149              		.cfi_def_cfa_offset 12
 24150 00aa BD46     		mov	sp, r7
 24151              		.cfi_def_cfa_register 13
 24152              		@ sp needed
 24153 00ac 90BD     		pop	{r4, r7, pc}
 24154              	.L927:
 24155 00ae 00BF     		.align	2
 24156              	.L926:
 24157 00b0 00000000 		.word	g_mem
 24158 00b4 00000000 		.word	g_measOld
 24159              		.cfi_endproc
 24160              	.LFE95:
 24161              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 24162              		.section	.text.cmd_get_joystick,"ax",%progbits
 24163              		.align	2
 24164              		.global	cmd_get_joystick
 24165              		.thumb
 24166              		.thumb_func
 24167              		.type	cmd_get_joystick, %function
 24168              	cmd_get_joystick:
 24169              	.LFB96:
3401:..\src/command_processing.c **** 
3402:..\src/command_processing.c **** void cmd_get_joystick() {
 24170              		.loc 1 3402 0
 24171              		.cfi_startproc
 24172              		@ args = 0, pretend = 0, frame = 8
 24173              		@ frame_needed = 1, uses_anonymous_args = 0
 24174 0000 80B5     		push	{r7, lr}
 24175              		.cfi_def_cfa_offset 8
 24176              		.cfi_offset 7, -8
 24177              		.cfi_offset 14, -4
 24178 0002 82B0     		sub	sp, sp, #8
 24179              		.cfi_def_cfa_offset 16
 24180 0004 00AF     		add	r7, sp, #0
 24181              		.cfi_def_cfa_register 7
3403:..\src/command_processing.c ****  
3404:..\src/command_processing.c ****     int16 aux_int16;
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3407:..\src/command_processing.c ****     
3408:..\src/command_processing.c ****     uint8 packet_data[6];
3409:..\src/command_processing.c ****     
3410:..\src/command_processing.c ****     // Header        
3411:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 24182              		.loc 1 3411 0
 24183 0006 9223     		movs	r3, #146
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 529


 24184 0008 3B70     		strb	r3, [r7]
3412:..\src/command_processing.c ****     
3413:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 24185              		.loc 1 3413 0
 24186 000a 134B     		ldr	r3, .L929
 24187 000c 1B6A     		ldr	r3, [r3, #32]
 24188 000e 1BB2     		sxth	r3, r3
 24189 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3414:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24190              		.loc 1 3414 0
 24191 0012 BB1D     		adds	r3, r7, #6
 24192 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24193 0016 BB70     		strb	r3, [r7, #2]
3415:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24194              		.loc 1 3415 0
 24195 0018 BB1D     		adds	r3, r7, #6
 24196 001a 0133     		adds	r3, r3, #1
 24197 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24198 001e 7B70     		strb	r3, [r7, #1]
3416:..\src/command_processing.c ****     
3417:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 24199              		.loc 1 3417 0
 24200 0020 0D4B     		ldr	r3, .L929
 24201 0022 5B6A     		ldr	r3, [r3, #36]
 24202 0024 1BB2     		sxth	r3, r3
 24203 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3418:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24204              		.loc 1 3418 0
 24205 0028 BB1D     		adds	r3, r7, #6
 24206 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24207 002c 3B71     		strb	r3, [r7, #4]
3419:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24208              		.loc 1 3419 0
 24209 002e BB1D     		adds	r3, r7, #6
 24210 0030 0133     		adds	r3, r3, #1
 24211 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24212 0034 FB70     		strb	r3, [r7, #3]
3420:..\src/command_processing.c **** 
3421:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 24213              		.loc 1 3421 0
 24214 0036 3B46     		mov	r3, r7
 24215 0038 0521     		movs	r1, #5
 24216 003a 1846     		mov	r0, r3
 24217 003c FFF7FEFF 		bl	LCRChecksum
 24218 0040 0346     		mov	r3, r0
 24219 0042 7B71     		strb	r3, [r7, #5]
3422:..\src/command_processing.c **** 
3423:..\src/command_processing.c ****     commWrite(packet_data, 6);
 24220              		.loc 1 3423 0
 24221 0044 3B46     		mov	r3, r7
 24222 0046 0621     		movs	r1, #6
 24223 0048 1846     		mov	r0, r3
 24224 004a FFF7FEFF 		bl	commWrite
3424:..\src/command_processing.c **** }
 24225              		.loc 1 3424 0
 24226 004e 00BF     		nop
 24227 0050 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 530


 24228              		.cfi_def_cfa_offset 8
 24229 0052 BD46     		mov	sp, r7
 24230              		.cfi_def_cfa_register 13
 24231              		@ sp needed
 24232 0054 80BD     		pop	{r7, pc}
 24233              	.L930:
 24234 0056 00BF     		.align	2
 24235              	.L929:
 24236 0058 00000000 		.word	g_adc_measOld
 24237              		.cfi_endproc
 24238              	.LFE96:
 24239              		.size	cmd_get_joystick, .-cmd_get_joystick
 24240              		.section	.text.cmd_set_inputs,"ax",%progbits
 24241              		.align	2
 24242              		.global	cmd_set_inputs
 24243              		.thumb
 24244              		.thumb_func
 24245              		.type	cmd_set_inputs, %function
 24246              	cmd_set_inputs:
 24247              	.LFB97:
3425:..\src/command_processing.c **** 
3426:..\src/command_processing.c **** void cmd_set_inputs(){
 24248              		.loc 1 3426 0
 24249              		.cfi_startproc
 24250              		@ args = 0, pretend = 0, frame = 8
 24251              		@ frame_needed = 1, uses_anonymous_args = 0
 24252              		@ link register save eliminated.
 24253 0000 90B4     		push	{r4, r7}
 24254              		.cfi_def_cfa_offset 8
 24255              		.cfi_offset 4, -8
 24256              		.cfi_offset 7, -4
 24257 0002 82B0     		sub	sp, sp, #8
 24258              		.cfi_def_cfa_offset 16
 24259 0004 00AF     		add	r7, sp, #0
 24260              		.cfi_def_cfa_register 7
3427:..\src/command_processing.c ****     
3428:..\src/command_processing.c ****     // Store position setted in right variables
3429:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3430:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3431:..\src/command_processing.c ****     
3432:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 24261              		.loc 1 3432 0
 24262 0006 894B     		ldr	r3, .L945
 24263 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24264 000a 1B02     		lsls	r3, r3, #8
 24265 000c 1AB2     		sxth	r2, r3
 24266 000e 874B     		ldr	r3, .L945
 24267 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24268 0012 1BB2     		sxth	r3, r3
 24269 0014 1343     		orrs	r3, r3, r2
 24270 0016 1BB2     		sxth	r3, r3
 24271 0018 3B80     		strh	r3, [r7]	@ movhi
3433:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 24272              		.loc 1 3433 0
 24273 001a 844B     		ldr	r3, .L945
 24274 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24275 001e 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 531


 24276 0020 1AB2     		sxth	r2, r3
 24277 0022 824B     		ldr	r3, .L945
 24278 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24279 0026 1BB2     		sxth	r3, r3
 24280 0028 1343     		orrs	r3, r3, r2
 24281 002a 1BB2     		sxth	r3, r3
 24282 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 24283              	.LBB27:
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     // Check if last command received was the same as this 
3436:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3437:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 24284              		.loc 1 3437 0
 24285 002e 0023     		movs	r3, #0
 24286 0030 FB71     		strb	r3, [r7, #7]
 24287 0032 1DE0     		b	.L932
 24288              	.L934:
3438:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24289              		.loc 1 3438 0
 24290 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24291 0036 7E4A     		ldr	r2, .L945+4
 24292 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 24293 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24294 003e 5B00     		lsls	r3, r3, #1
 24295 0040 07F10801 		add	r1, r7, #8
 24296 0044 0B44     		add	r3, r3, r1
 24297 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 24298 004a 9A42     		cmp	r2, r3
 24299 004c 02D0     		beq	.L933
3439:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 24300              		.loc 1 3439 0
 24301 004e 794B     		ldr	r3, .L945+8
 24302 0050 0122     		movs	r2, #1
 24303 0052 1A70     		strb	r2, [r3]
 24304              	.L933:
3440:..\src/command_processing.c ****        }
3441:..\src/command_processing.c ****         // Update last command
3442:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 24305              		.loc 1 3442 0 discriminator 2
 24306 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24307 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24308 0058 5B00     		lsls	r3, r3, #1
 24309 005a 07F10801 		add	r1, r7, #8
 24310 005e 0B44     		add	r3, r3, r1
 24311 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 24312 0064 724B     		ldr	r3, .L945+4
 24313 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3437:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24314              		.loc 1 3437 0 discriminator 2
 24315 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24316 006c 0133     		adds	r3, r3, #1
 24317 006e FB71     		strb	r3, [r7, #7]
 24318              	.L932:
3437:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 24319              		.loc 1 3437 0 is_stmt 0 discriminator 1
 24320 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24321 0072 714B     		ldr	r3, .L945+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 532


 24322 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24323 0078 0133     		adds	r3, r3, #1
 24324 007a 9A42     		cmp	r2, r3
 24325 007c DADB     		blt	.L934
 24326              	.LBE27:
3443:..\src/command_processing.c ****     }
3444:..\src/command_processing.c ****     
3445:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3446:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 24327              		.loc 1 3446 0 is_stmt 1
 24328 007e 6D4B     		ldr	r3, .L945+8
 24329 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24330 0082 002B     		cmp	r3, #0
 24331 0084 00F0CC80 		beq	.L944
 24332              	.LBB28:
3447:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 24333              		.loc 1 3447 0
 24334 0088 0023     		movs	r3, #0
 24335 008a BB71     		strb	r3, [r7, #6]
 24336 008c C4E0     		b	.L936
 24337              	.L943:
3448:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24338              		.loc 1 3448 0
 24339 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24340 0090 6A49     		ldr	r1, .L945+16
 24341 0092 1346     		mov	r3, r2
 24342 0094 DB00     		lsls	r3, r3, #3
 24343 0096 9B1A     		subs	r3, r3, r2
 24344 0098 1B01     		lsls	r3, r3, #4
 24345 009a 0B44     		add	r3, r3, r1
 24346 009c 03F20F13 		addw	r3, r3, #271
 24347 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24348 00a2 022B     		cmp	r3, #2
 24349 00a4 0ED1     		bne	.L937
3449:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 24350              		.loc 1 3449 0
 24351 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24352 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24353 00aa 5B00     		lsls	r3, r3, #1
 24354 00ac 07F10801 		add	r1, r7, #8
 24355 00b0 0B44     		add	r3, r3, r1
 24356 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 24357 00b6 1846     		mov	r0, r3
 24358 00b8 6149     		ldr	r1, .L945+20
 24359 00ba 1301     		lsls	r3, r2, #4
 24360 00bc 0B44     		add	r3, r3, r1
 24361 00be 0433     		adds	r3, r3, #4
 24362 00c0 1860     		str	r0, [r3]
 24363 00c2 47E0     		b	.L938
 24364              	.L937:
3450:..\src/command_processing.c ****             }
3451:..\src/command_processing.c ****             else {
3452:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 24365              		.loc 1 3452 0
 24366 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24367 00c6 5D49     		ldr	r1, .L945+16
 24368 00c8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 533


 24369 00ca DB00     		lsls	r3, r3, #3
 24370 00cc 9B1A     		subs	r3, r3, r2
 24371 00ce 1B01     		lsls	r3, r3, #4
 24372 00d0 0B44     		add	r3, r3, r1
 24373 00d2 03F20F13 		addw	r3, r3, #271
 24374 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24375 00d8 012B     		cmp	r3, #1
 24376 00da 0ED1     		bne	.L939
3453:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 24377              		.loc 1 3453 0
 24378 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24379 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24380 00e0 5B00     		lsls	r3, r3, #1
 24381 00e2 07F10801 		add	r1, r7, #8
 24382 00e6 0B44     		add	r3, r3, r1
 24383 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 24384 00ec 1846     		mov	r0, r3
 24385 00ee 5449     		ldr	r1, .L945+20
 24386 00f0 1301     		lsls	r3, r2, #4
 24387 00f2 0B44     		add	r3, r3, r1
 24388 00f4 0833     		adds	r3, r3, #8
 24389 00f6 1860     		str	r0, [r3]
 24390 00f8 2CE0     		b	.L938
 24391              	.L939:
3454:..\src/command_processing.c ****                 }
3455:..\src/command_processing.c ****                 else {
3456:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 24392              		.loc 1 3456 0
 24393 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24394 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24395 00fe 5B00     		lsls	r3, r3, #1
 24396 0100 07F10801 		add	r1, r7, #8
 24397 0104 0B44     		add	r3, r3, r1
 24398 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 24399 010a 1846     		mov	r0, r3
 24400 010c 4C49     		ldr	r1, .L945+20
 24401 010e 1301     		lsls	r3, r2, #4
 24402 0110 0B44     		add	r3, r3, r1
 24403 0112 1860     		str	r0, [r3]
3457:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 24404              		.loc 1 3457 0
 24405 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24406 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24407 0118 494A     		ldr	r2, .L945+20
 24408 011a 1B01     		lsls	r3, r3, #4
 24409 011c 1344     		add	r3, r3, r2
 24410 011e 1868     		ldr	r0, [r3]
 24411 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24412 0122 454C     		ldr	r4, .L945+12
 24413 0124 1346     		mov	r3, r2
 24414 0126 DB00     		lsls	r3, r3, #3
 24415 0128 9B1A     		subs	r3, r3, r2
 24416 012a 1B01     		lsls	r3, r3, #4
 24417 012c 2344     		add	r3, r3, r4
 24418 012e 03F58873 		add	r3, r3, #272
 24419 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24420 0134 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 534


 24421 0136 414A     		ldr	r2, .L945+16
 24422 0138 2346     		mov	r3, r4
 24423 013a 5B00     		lsls	r3, r3, #1
 24424 013c 2344     		add	r3, r3, r4
 24425 013e 1B01     		lsls	r3, r3, #4
 24426 0140 1344     		add	r3, r3, r2
 24427 0142 03F29513 		addw	r3, r3, #405
 24428 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24429 0148 00FA03F2 		lsl	r2, r0, r3
 24430 014c 3C48     		ldr	r0, .L945+20
 24431 014e 0B01     		lsls	r3, r1, #4
 24432 0150 0344     		add	r3, r3, r0
 24433 0152 1A60     		str	r2, [r3]
 24434              	.L938:
3458:..\src/command_processing.c ****                 }
3459:..\src/command_processing.c ****             }  
3460:..\src/command_processing.c ****                
3461:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3462:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 24435              		.loc 1 3462 0
 24436 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24437 0156 3849     		ldr	r1, .L945+12
 24438 0158 1346     		mov	r3, r2
 24439 015a DB00     		lsls	r3, r3, #3
 24440 015c 9B1A     		subs	r3, r3, r2
 24441 015e 1B01     		lsls	r3, r3, #4
 24442 0160 0B44     		add	r3, r3, r1
 24443 0162 E333     		adds	r3, r3, #227
 24444 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24445 0166 002B     		cmp	r3, #0
 24446 0168 53D0     		beq	.L940
 24447              		.loc 1 3462 0 is_stmt 0 discriminator 1
 24448 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24449 016c 3349     		ldr	r1, .L945+16
 24450 016e 1346     		mov	r3, r2
 24451 0170 DB00     		lsls	r3, r3, #3
 24452 0172 9B1A     		subs	r3, r3, r2
 24453 0174 1B01     		lsls	r3, r3, #4
 24454 0176 0B44     		add	r3, r3, r1
 24455 0178 03F20F13 		addw	r3, r3, #271
 24456 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24457 017e 032B     		cmp	r3, #3
 24458 0180 0BD0     		beq	.L941
 24459              		.loc 1 3462 0 discriminator 2
 24460 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24461 0184 2D49     		ldr	r1, .L945+16
 24462 0186 1346     		mov	r3, r2
 24463 0188 DB00     		lsls	r3, r3, #3
 24464 018a 9B1A     		subs	r3, r3, r2
 24465 018c 1B01     		lsls	r3, r3, #4
 24466 018e 0B44     		add	r3, r3, r1
 24467 0190 03F20F13 		addw	r3, r3, #271
 24468 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24469 0196 002B     		cmp	r3, #0
 24470 0198 3BD1     		bne	.L940
 24471              	.L941:
3463:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 535


3464:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 24472              		.loc 1 3464 0 is_stmt 1
 24473 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24474 019c 284A     		ldr	r2, .L945+20
 24475 019e 1B01     		lsls	r3, r3, #4
 24476 01a0 1344     		add	r3, r3, r2
 24477 01a2 1968     		ldr	r1, [r3]
 24478 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24479 01a6 2448     		ldr	r0, .L945+12
 24480 01a8 1346     		mov	r3, r2
 24481 01aa DB00     		lsls	r3, r3, #3
 24482 01ac 9B1A     		subs	r3, r3, r2
 24483 01ae 1B01     		lsls	r3, r3, #4
 24484 01b0 0344     		add	r3, r3, r0
 24485 01b2 E433     		adds	r3, r3, #228
 24486 01b4 1B68     		ldr	r3, [r3]
 24487 01b6 9942     		cmp	r1, r3
 24488 01b8 0DDA     		bge	.L942
3465:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 24489              		.loc 1 3465 0
 24490 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24491 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24492 01be 1E48     		ldr	r0, .L945+12
 24493 01c0 1346     		mov	r3, r2
 24494 01c2 DB00     		lsls	r3, r3, #3
 24495 01c4 9B1A     		subs	r3, r3, r2
 24496 01c6 1B01     		lsls	r3, r3, #4
 24497 01c8 0344     		add	r3, r3, r0
 24498 01ca E433     		adds	r3, r3, #228
 24499 01cc 1A68     		ldr	r2, [r3]
 24500 01ce 1C48     		ldr	r0, .L945+20
 24501 01d0 0B01     		lsls	r3, r1, #4
 24502 01d2 0344     		add	r3, r3, r0
 24503 01d4 1A60     		str	r2, [r3]
 24504              	.L942:
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 24505              		.loc 1 3467 0
 24506 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24507 01d8 194A     		ldr	r2, .L945+20
 24508 01da 1B01     		lsls	r3, r3, #4
 24509 01dc 1344     		add	r3, r3, r2
 24510 01de 1968     		ldr	r1, [r3]
 24511 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24512 01e2 1548     		ldr	r0, .L945+12
 24513 01e4 1346     		mov	r3, r2
 24514 01e6 DB00     		lsls	r3, r3, #3
 24515 01e8 9B1A     		subs	r3, r3, r2
 24516 01ea 1B01     		lsls	r3, r3, #4
 24517 01ec 0344     		add	r3, r3, r0
 24518 01ee E833     		adds	r3, r3, #232
 24519 01f0 1B68     		ldr	r3, [r3]
 24520 01f2 9942     		cmp	r1, r3
 24521 01f4 0DDD     		ble	.L940
3468:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 24522              		.loc 1 3468 0
 24523 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 536


 24524 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24525 01fa 0F48     		ldr	r0, .L945+12
 24526 01fc 1346     		mov	r3, r2
 24527 01fe DB00     		lsls	r3, r3, #3
 24528 0200 9B1A     		subs	r3, r3, r2
 24529 0202 1B01     		lsls	r3, r3, #4
 24530 0204 0344     		add	r3, r3, r0
 24531 0206 E833     		adds	r3, r3, #232
 24532 0208 1A68     		ldr	r2, [r3]
 24533 020a 0D48     		ldr	r0, .L945+20
 24534 020c 0B01     		lsls	r3, r1, #4
 24535 020e 0344     		add	r3, r3, r0
 24536 0210 1A60     		str	r2, [r3]
 24537              	.L940:
3447:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24538              		.loc 1 3447 0 discriminator 2
 24539 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24540 0214 0133     		adds	r3, r3, #1
 24541 0216 BB71     		strb	r3, [r7, #6]
 24542              	.L936:
3447:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 24543              		.loc 1 3447 0 is_stmt 0 discriminator 1
 24544 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24545 021a 012B     		cmp	r3, #1
 24546 021c 7FF637AF 		bls	.L943
 24547              	.L944:
 24548              	.LBE28:
3469:..\src/command_processing.c ****             }
3470:..\src/command_processing.c ****         }  
3471:..\src/command_processing.c ****     }
3472:..\src/command_processing.c **** }
 24549              		.loc 1 3472 0 is_stmt 1
 24550 0220 00BF     		nop
 24551 0222 0837     		adds	r7, r7, #8
 24552              		.cfi_def_cfa_offset 8
 24553 0224 BD46     		mov	sp, r7
 24554              		.cfi_def_cfa_register 13
 24555              		@ sp needed
 24556 0226 90BC     		pop	{r4, r7}
 24557              		.cfi_restore 7
 24558              		.cfi_restore 4
 24559              		.cfi_def_cfa_offset 0
 24560 0228 7047     		bx	lr
 24561              	.L946:
 24562 022a 00BF     		.align	2
 24563              	.L945:
 24564 022c 00000000 		.word	g_rx
 24565 0230 08000000 		.word	last_aux_int16.11384
 24566 0234 00000000 		.word	change_ext_ref_flag
 24567 0238 00000000 		.word	c_mem
 24568 023c 00000000 		.word	g_mem
 24569 0240 00000000 		.word	g_refNew
 24570              		.cfi_endproc
 24571              	.LFE97:
 24572              		.size	cmd_set_inputs, .-cmd_set_inputs
 24573              		.section	.text.cmd_activate,"ax",%progbits
 24574              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 537


 24575              		.global	cmd_activate
 24576              		.thumb
 24577              		.thumb_func
 24578              		.type	cmd_activate, %function
 24579              	cmd_activate:
 24580              	.LFB98:
3473:..\src/command_processing.c **** 
3474:..\src/command_processing.c **** void cmd_activate(){
 24581              		.loc 1 3474 0
 24582              		.cfi_startproc
 24583              		@ args = 0, pretend = 0, frame = 8
 24584              		@ frame_needed = 1, uses_anonymous_args = 0
 24585 0000 80B5     		push	{r7, lr}
 24586              		.cfi_def_cfa_offset 8
 24587              		.cfi_offset 7, -8
 24588              		.cfi_offset 14, -4
 24589 0002 82B0     		sub	sp, sp, #8
 24590              		.cfi_def_cfa_offset 16
 24591 0004 00AF     		add	r7, sp, #0
 24592              		.cfi_def_cfa_register 7
3475:..\src/command_processing.c ****     
3476:..\src/command_processing.c ****     // Store new value reads
3477:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 24593              		.loc 1 3477 0
 24594 0006 294B     		ldr	r3, .L954
 24595 0008 5B78     		ldrb	r3, [r3, #1]
 24596 000a FB71     		strb	r3, [r7, #7]
3478:..\src/command_processing.c ****     
3479:..\src/command_processing.c ****     // Check type of control mode enabled
3480:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 24597              		.loc 1 3480 0
 24598 000c 284B     		ldr	r3, .L954+4
 24599 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24600 0012 002B     		cmp	r3, #0
 24601 0014 04D0     		beq	.L948
 24602              		.loc 1 3480 0 is_stmt 0 discriminator 1
 24603 0016 264B     		ldr	r3, .L954+4
 24604 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 24605 001c 032B     		cmp	r3, #3
 24606 001e 0BD1     		bne	.L949
 24607              	.L948:
3481:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 24608              		.loc 1 3481 0 is_stmt 1
 24609 0020 234B     		ldr	r3, .L954+4
 24610 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24611 0026 1946     		mov	r1, r3
 24612 0028 224A     		ldr	r2, .L954+8
 24613 002a 3423     		movs	r3, #52
 24614 002c 03FB01F3 		mul	r3, r3, r1
 24615 0030 1344     		add	r3, r3, r2
 24616 0032 1B68     		ldr	r3, [r3]
 24617 0034 204A     		ldr	r2, .L954+12
 24618 0036 1360     		str	r3, [r2]
 24619              	.L949:
3482:..\src/command_processing.c ****     }
3483:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 24620              		.loc 1 3483 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 538


 24621 0038 FB79     		ldrb	r3, [r7, #7]
 24622 003a 03F00103 		and	r3, r3, #1
 24623 003e DAB2     		uxtb	r2, r3
 24624 0040 1D4B     		ldr	r3, .L954+12
 24625 0042 1A73     		strb	r2, [r3, #12]
3484:..\src/command_processing.c ****     
3485:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3486:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3487:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3488:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3489:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3490:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3491:..\src/command_processing.c ****         }
3492:..\src/command_processing.c ****         
3493:..\src/command_processing.c ****         // Activate or deactivate the valve
3494:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3495:..\src/command_processing.c ****     }
3496:..\src/command_processing.c **** #endif
3497:..\src/command_processing.c ****     
3498:..\src/command_processing.c ****     // Activate/Deactivate motor
3499:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 24626              		.loc 1 3499 0
 24627 0044 1C4B     		ldr	r3, .L954+12
 24628 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24629 0048 1946     		mov	r1, r3
 24630 004a 0020     		movs	r0, #0
 24631 004c FFF7FEFF 		bl	enable_motor
3500:..\src/command_processing.c ****     
3501:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24632              		.loc 1 3501 0
 24633 0050 174B     		ldr	r3, .L954+4
 24634 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24635 0056 012B     		cmp	r3, #1
 24636 0058 23D1     		bne	.L953
3502:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 24637              		.loc 1 3502 0
 24638 005a 154B     		ldr	r3, .L954+4
 24639 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24640 0060 002B     		cmp	r3, #0
 24641 0062 04D0     		beq	.L951
 24642              		.loc 1 3502 0 is_stmt 0 discriminator 1
 24643 0064 124B     		ldr	r3, .L954+4
 24644 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 24645 006a 032B     		cmp	r3, #3
 24646 006c 0BD1     		bne	.L952
 24647              	.L951:
3503:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 24648              		.loc 1 3503 0 is_stmt 1
 24649 006e 104B     		ldr	r3, .L954+4
 24650 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24651 0074 1946     		mov	r1, r3
 24652 0076 0F4A     		ldr	r2, .L954+8
 24653 0078 3423     		movs	r3, #52
 24654 007a 03FB01F3 		mul	r3, r3, r1
 24655 007e 1344     		add	r3, r3, r2
 24656 0080 1B68     		ldr	r3, [r3]
 24657 0082 0D4A     		ldr	r2, .L954+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 539


 24658 0084 1361     		str	r3, [r2, #16]
 24659              	.L952:
3504:..\src/command_processing.c ****         }
3505:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 24660              		.loc 1 3505 0
 24661 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24662 0088 5B08     		lsrs	r3, r3, #1
 24663 008a DBB2     		uxtb	r3, r3
 24664 008c 03F00103 		and	r3, r3, #1
 24665 0090 DAB2     		uxtb	r2, r3
 24666 0092 094B     		ldr	r3, .L954+12
 24667 0094 1A77     		strb	r2, [r3, #28]
3506:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 24668              		.loc 1 3506 0
 24669 0096 084B     		ldr	r3, .L954+12
 24670 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24671 009a 1946     		mov	r1, r3
 24672 009c 0120     		movs	r0, #1
 24673 009e FFF7FEFF 		bl	enable_motor
 24674              	.L953:
3507:..\src/command_processing.c ****     }
3508:..\src/command_processing.c ****     
3509:..\src/command_processing.c **** }
 24675              		.loc 1 3509 0
 24676 00a2 00BF     		nop
 24677 00a4 0837     		adds	r7, r7, #8
 24678              		.cfi_def_cfa_offset 8
 24679 00a6 BD46     		mov	sp, r7
 24680              		.cfi_def_cfa_register 13
 24681              		@ sp needed
 24682 00a8 80BD     		pop	{r7, pc}
 24683              	.L955:
 24684 00aa 00BF     		.align	2
 24685              	.L954:
 24686 00ac 00000000 		.word	g_rx
 24687 00b0 00000000 		.word	g_mem
 24688 00b4 00000000 		.word	g_meas
 24689 00b8 00000000 		.word	g_refNew
 24690              		.cfi_endproc
 24691              	.LFE98:
 24692              		.size	cmd_activate, .-cmd_activate
 24693              		.section	.text.cmd_get_activate,"ax",%progbits
 24694              		.align	2
 24695              		.global	cmd_get_activate
 24696              		.thumb
 24697              		.thumb_func
 24698              		.type	cmd_get_activate, %function
 24699              	cmd_get_activate:
 24700              	.LFB99:
3510:..\src/command_processing.c **** 
3511:..\src/command_processing.c **** void cmd_get_activate(){
 24701              		.loc 1 3511 0
 24702              		.cfi_startproc
 24703              		@ args = 0, pretend = 0, frame = 8
 24704              		@ frame_needed = 1, uses_anonymous_args = 0
 24705 0000 80B5     		push	{r7, lr}
 24706              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 540


 24707              		.cfi_offset 7, -8
 24708              		.cfi_offset 14, -4
 24709 0002 82B0     		sub	sp, sp, #8
 24710              		.cfi_def_cfa_offset 16
 24711 0004 00AF     		add	r7, sp, #0
 24712              		.cfi_def_cfa_register 7
3512:..\src/command_processing.c ****     
3513:..\src/command_processing.c ****     uint8 packet_data[3];
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     // Header        
3516:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 24713              		.loc 1 3516 0
 24714 0006 8123     		movs	r3, #129
 24715 0008 3B71     		strb	r3, [r7, #4]
3517:..\src/command_processing.c ****     
3518:..\src/command_processing.c ****     // Fill payload
3519:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 24716              		.loc 1 3519 0
 24717 000a 124B     		ldr	r3, .L959
 24718 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24719 0010 012B     		cmp	r3, #1
 24720 0012 0BD1     		bne	.L957
3520:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 24721              		.loc 1 3520 0
 24722 0014 104B     		ldr	r3, .L959+4
 24723 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 24724 0018 5B00     		lsls	r3, r3, #1
 24725 001a 5AB2     		sxtb	r2, r3
 24726 001c 0E4B     		ldr	r3, .L959+4
 24727 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24728 0020 5BB2     		sxtb	r3, r3
 24729 0022 1343     		orrs	r3, r3, r2
 24730 0024 5BB2     		sxtb	r3, r3
 24731 0026 DBB2     		uxtb	r3, r3
 24732 0028 7B71     		strb	r3, [r7, #5]
 24733 002a 02E0     		b	.L958
 24734              	.L957:
3521:..\src/command_processing.c ****     } 
3522:..\src/command_processing.c ****     else {
3523:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 24735              		.loc 1 3523 0
 24736 002c 0A4B     		ldr	r3, .L959+4
 24737 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 24738 0030 7B71     		strb	r3, [r7, #5]
 24739              	.L958:
3524:..\src/command_processing.c ****     }
3525:..\src/command_processing.c ****     
3526:..\src/command_processing.c ****     // Calculate checksum
3527:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 24740              		.loc 1 3527 0
 24741 0032 3B1D     		adds	r3, r7, #4
 24742 0034 0221     		movs	r1, #2
 24743 0036 1846     		mov	r0, r3
 24744 0038 FFF7FEFF 		bl	LCRChecksum
 24745 003c 0346     		mov	r3, r0
 24746 003e BB71     		strb	r3, [r7, #6]
3528:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 541


3529:..\src/command_processing.c ****     // Send package to UART
3530:..\src/command_processing.c ****     commWrite(packet_data, 3);
 24747              		.loc 1 3530 0
 24748 0040 3B1D     		adds	r3, r7, #4
 24749 0042 0321     		movs	r1, #3
 24750 0044 1846     		mov	r0, r3
 24751 0046 FFF7FEFF 		bl	commWrite
3531:..\src/command_processing.c **** 
3532:..\src/command_processing.c **** }
 24752              		.loc 1 3532 0
 24753 004a 00BF     		nop
 24754 004c 0837     		adds	r7, r7, #8
 24755              		.cfi_def_cfa_offset 8
 24756 004e BD46     		mov	sp, r7
 24757              		.cfi_def_cfa_register 13
 24758              		@ sp needed
 24759 0050 80BD     		pop	{r7, pc}
 24760              	.L960:
 24761 0052 00BF     		.align	2
 24762              	.L959:
 24763 0054 00000000 		.word	g_mem
 24764 0058 00000000 		.word	g_ref
 24765              		.cfi_endproc
 24766              	.LFE99:
 24767              		.size	cmd_get_activate, .-cmd_get_activate
 24768              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 24769              		.align	2
 24770              		.global	cmd_get_curr_and_meas
 24771              		.thumb
 24772              		.thumb_func
 24773              		.type	cmd_get_curr_and_meas, %function
 24774              	cmd_get_curr_and_meas:
 24775              	.LFB100:
3533:..\src/command_processing.c **** 
3534:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 24776              		.loc 1 3534 0
 24777              		.cfi_startproc
 24778              		@ args = 0, pretend = 0, frame = 16
 24779              		@ frame_needed = 1, uses_anonymous_args = 0
 24780 0000 90B5     		push	{r4, r7, lr}
 24781              		.cfi_def_cfa_offset 12
 24782              		.cfi_offset 4, -12
 24783              		.cfi_offset 7, -8
 24784              		.cfi_offset 14, -4
 24785 0002 85B0     		sub	sp, sp, #20
 24786              		.cfi_def_cfa_offset 32
 24787 0004 00AF     		add	r7, sp, #0
 24788              		.cfi_def_cfa_register 7
3535:..\src/command_processing.c ****     
3536:..\src/command_processing.c ****     uint8 CYDATA index;
3537:..\src/command_processing.c ****     int16 aux_int16;
3538:..\src/command_processing.c ****    
3539:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     uint8 packet_data[12]; 
3542:..\src/command_processing.c **** 
3543:..\src/command_processing.c ****     //Header package
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 542


3544:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 24789              		.loc 1 3544 0
 24790 0006 8623     		movs	r3, #134
 24791 0008 3B70     		strb	r3, [r7]
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c ****     // Currents
3547:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 24792              		.loc 1 3547 0
 24793 000a 484B     		ldr	r3, .L966
 24794 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24795 0010 1946     		mov	r1, r3
 24796 0012 474A     		ldr	r2, .L966+4
 24797 0014 3423     		movs	r3, #52
 24798 0016 03FB01F3 		mul	r3, r3, r1
 24799 001a 1344     		add	r3, r3, r2
 24800 001c 0C33     		adds	r3, r3, #12
 24801 001e 1B68     		ldr	r3, [r3]
 24802 0020 1BB2     		sxth	r3, r3
 24803 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3548:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 24804              		.loc 1 3548 0
 24805 0024 07F10C03 		add	r3, r7, #12
 24806 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24807 002a BB70     		strb	r3, [r7, #2]
3549:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 24808              		.loc 1 3549 0
 24809 002c 07F10C03 		add	r3, r7, #12
 24810 0030 0133     		adds	r3, r3, #1
 24811 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24812 0034 7B70     		strb	r3, [r7, #1]
3550:..\src/command_processing.c ****     
3551:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 24813              		.loc 1 3551 0
 24814 0036 3F4B     		ldr	r3, .L966+8
 24815 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 24816 003c 012B     		cmp	r3, #1
 24817 003e 0DD1     		bne	.L962
3552:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 24818              		.loc 1 3552 0
 24819 0040 3A4B     		ldr	r3, .L966
 24820 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 24821 0046 1946     		mov	r1, r3
 24822 0048 394A     		ldr	r2, .L966+4
 24823 004a 3423     		movs	r3, #52
 24824 004c 03FB01F3 		mul	r3, r3, r1
 24825 0050 1344     		add	r3, r3, r2
 24826 0052 0C33     		adds	r3, r3, #12
 24827 0054 1B68     		ldr	r3, [r3]
 24828 0056 1BB2     		sxth	r3, r3
 24829 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 24830 005a 0CE0     		b	.L963
 24831              	.L962:
3553:..\src/command_processing.c ****     }
3554:..\src/command_processing.c ****     else {
3555:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 24832              		.loc 1 3555 0
 24833 005c 334B     		ldr	r3, .L966
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 543


 24834 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24835 0062 1946     		mov	r1, r3
 24836 0064 324A     		ldr	r2, .L966+4
 24837 0066 3423     		movs	r3, #52
 24838 0068 03FB01F3 		mul	r3, r3, r1
 24839 006c 1344     		add	r3, r3, r2
 24840 006e 1033     		adds	r3, r3, #16
 24841 0070 1B68     		ldr	r3, [r3]
 24842 0072 1BB2     		sxth	r3, r3
 24843 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 24844              	.L963:
3556:..\src/command_processing.c ****     }
3557:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 24845              		.loc 1 3557 0
 24846 0076 07F10C03 		add	r3, r7, #12
 24847 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24848 007c 3B71     		strb	r3, [r7, #4]
3558:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 24849              		.loc 1 3558 0
 24850 007e 07F10C03 		add	r3, r7, #12
 24851 0082 0133     		adds	r3, r3, #1
 24852 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24853 0086 FB70     		strb	r3, [r7, #3]
3559:..\src/command_processing.c **** 
3560:..\src/command_processing.c ****     // Positions
3561:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 24854              		.loc 1 3561 0
 24855 0088 0323     		movs	r3, #3
 24856 008a FB73     		strb	r3, [r7, #15]
 24857 008c 38E0     		b	.L964
 24858              	.L965:
3562:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24859              		.loc 1 3562 0
 24860 008e 274B     		ldr	r3, .L966
 24861 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24862 0094 1A46     		mov	r2, r3
 24863 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24864 0098 2548     		ldr	r0, .L966+4
 24865 009a 1346     		mov	r3, r2
 24866 009c 5B00     		lsls	r3, r3, #1
 24867 009e 1344     		add	r3, r3, r2
 24868 00a0 9B00     		lsls	r3, r3, #2
 24869 00a2 1344     		add	r3, r3, r2
 24870 00a4 0B44     		add	r3, r3, r1
 24871 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 24872 00aa 204B     		ldr	r3, .L966
 24873 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24874 00b0 1C46     		mov	r4, r3
 24875 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 24876 00b4 1D48     		ldr	r0, .L966
 24877 00b6 2346     		mov	r3, r4
 24878 00b8 5B00     		lsls	r3, r3, #1
 24879 00ba 2344     		add	r3, r3, r4
 24880 00bc 1B01     		lsls	r3, r3, #4
 24881 00be 0344     		add	r3, r3, r0
 24882 00c0 0B44     		add	r3, r3, r1
 24883 00c2 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 544


 24884 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24885 00c8 42FA03F3 		asr	r3, r2, r3
 24886 00cc 1BB2     		sxth	r3, r3
 24887 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3563:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 24888              		.loc 1 3563 0
 24889 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24890 00d2 5B00     		lsls	r3, r3, #1
 24891 00d4 0633     		adds	r3, r3, #6
 24892 00d6 07F10C02 		add	r2, r7, #12
 24893 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24894 00dc 07F11001 		add	r1, r7, #16
 24895 00e0 0B44     		add	r3, r3, r1
 24896 00e2 03F8102C 		strb	r2, [r3, #-16]
3564:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 24897              		.loc 1 3564 0
 24898 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24899 00e8 5B00     		lsls	r3, r3, #1
 24900 00ea 5A1D     		adds	r2, r3, #5
 24901 00ec 07F10C03 		add	r3, r7, #12
 24902 00f0 0133     		adds	r3, r3, #1
 24903 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24904 00f4 07F11003 		add	r3, r7, #16
 24905 00f8 1344     		add	r3, r3, r2
 24906 00fa 0A46     		mov	r2, r1
 24907 00fc 03F8102C 		strb	r2, [r3, #-16]
 24908              	.L964:
3561:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 24909              		.loc 1 3561 0 discriminator 1
 24910 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24911 0102 5A1E     		subs	r2, r3, #1
 24912 0104 FA73     		strb	r2, [r7, #15]
 24913 0106 002B     		cmp	r3, #0
 24914 0108 C1D1     		bne	.L965
3565:..\src/command_processing.c ****     }
3566:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3567:..\src/command_processing.c ****         
3568:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 24915              		.loc 1 3568 0
 24916 010a 3B46     		mov	r3, r7
 24917 010c 0B21     		movs	r1, #11
 24918 010e 1846     		mov	r0, r3
 24919 0110 FFF7FEFF 		bl	LCRChecksum
 24920 0114 0346     		mov	r3, r0
 24921 0116 FB72     		strb	r3, [r7, #11]
3569:..\src/command_processing.c ****     commWrite(packet_data, 12);
 24922              		.loc 1 3569 0
 24923 0118 3B46     		mov	r3, r7
 24924 011a 0C21     		movs	r1, #12
 24925 011c 1846     		mov	r0, r3
 24926 011e FFF7FEFF 		bl	commWrite
3570:..\src/command_processing.c ****    
3571:..\src/command_processing.c **** }
 24927              		.loc 1 3571 0
 24928 0122 00BF     		nop
 24929 0124 1437     		adds	r7, r7, #20
 24930              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 545


 24931 0126 BD46     		mov	sp, r7
 24932              		.cfi_def_cfa_register 13
 24933              		@ sp needed
 24934 0128 90BD     		pop	{r4, r7, pc}
 24935              	.L967:
 24936 012a 00BF     		.align	2
 24937              	.L966:
 24938 012c 00000000 		.word	g_mem
 24939 0130 00000000 		.word	g_measOld
 24940 0134 00000000 		.word	c_mem
 24941              		.cfi_endproc
 24942              	.LFE100:
 24943              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 24944              		.global	__aeabi_dmul
 24945              		.global	__aeabi_d2iz
 24946              		.section	.text.cmd_get_currents,"ax",%progbits
 24947              		.align	2
 24948              		.global	cmd_get_currents
 24949              		.thumb
 24950              		.thumb_func
 24951              		.type	cmd_get_currents, %function
 24952              	cmd_get_currents:
 24953              	.LFB101:
3572:..\src/command_processing.c **** 
3573:..\src/command_processing.c **** void cmd_get_currents(){
 24954              		.loc 1 3573 0
 24955              		.cfi_startproc
 24956              		@ args = 0, pretend = 0, frame = 16
 24957              		@ frame_needed = 1, uses_anonymous_args = 0
 24958 0000 90B5     		push	{r4, r7, lr}
 24959              		.cfi_def_cfa_offset 12
 24960              		.cfi_offset 4, -12
 24961              		.cfi_offset 7, -8
 24962              		.cfi_offset 14, -4
 24963 0002 85B0     		sub	sp, sp, #20
 24964              		.cfi_def_cfa_offset 32
 24965 0004 00AF     		add	r7, sp, #0
 24966              		.cfi_def_cfa_register 7
3574:..\src/command_processing.c ****     
3575:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3576:..\src/command_processing.c ****     
3577:..\src/command_processing.c ****     uint8 packet_data[6]; 
3578:..\src/command_processing.c ****     int16 aux_int16;
3579:..\src/command_processing.c ****     
3580:..\src/command_processing.c ****     //Header package
3581:..\src/command_processing.c **** 
3582:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 24967              		.loc 1 3582 0
 24968 0006 8523     		movs	r3, #133
 24969 0008 3B72     		strb	r3, [r7, #8]
3583:..\src/command_processing.c **** 
3584:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 24970              		.loc 1 3584 0
 24971 000a 334B     		ldr	r3, .L973
 24972 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 24973 0010 022B     		cmp	r3, #2
 24974 0012 0DD0     		beq	.L969
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 546


3585:..\src/command_processing.c ****         // Currents
3586:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 24975              		.loc 1 3586 0
 24976 0014 314B     		ldr	r3, .L973+4
 24977 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 24978 001a 1946     		mov	r1, r3
 24979 001c 304A     		ldr	r2, .L973+8
 24980 001e 3423     		movs	r3, #52
 24981 0020 03FB01F3 		mul	r3, r3, r1
 24982 0024 1344     		add	r3, r3, r2
 24983 0026 0C33     		adds	r3, r3, #12
 24984 0028 1B68     		ldr	r3, [r3]
 24985 002a 1BB2     		sxth	r3, r3
 24986 002c FB80     		strh	r3, [r7, #6]	@ movhi
 24987 002e 12E0     		b	.L970
 24988              	.L969:
3587:..\src/command_processing.c ****     }
3588:..\src/command_processing.c ****     else {
3589:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3590:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 24989              		.loc 1 3590 0
 24990 0030 2C4B     		ldr	r3, .L973+12
 24991 0032 1B68     		ldr	r3, [r3]	@ float
 24992 0034 1846     		mov	r0, r3
 24993 0036 FFF7FEFF 		bl	__aeabi_f2d
 24994 003a 4FF00002 		mov	r2, #0
 24995 003e 2A4B     		ldr	r3, .L973+16
 24996 0040 FFF7FEFF 		bl	__aeabi_dmul
 24997 0044 0346     		mov	r3, r0
 24998 0046 0C46     		mov	r4, r1
 24999 0048 1846     		mov	r0, r3
 25000 004a 2146     		mov	r1, r4
 25001 004c FFF7FEFF 		bl	__aeabi_d2iz
 25002 0050 0346     		mov	r3, r0
 25003 0052 1BB2     		sxth	r3, r3
 25004 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 25005              	.L970:
3591:..\src/command_processing.c ****     }
3592:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25006              		.loc 1 3592 0
 25007 0056 BB1D     		adds	r3, r7, #6
 25008 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25009 005a BB72     		strb	r3, [r7, #10]
3593:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25010              		.loc 1 3593 0
 25011 005c BB1D     		adds	r3, r7, #6
 25012 005e 0133     		adds	r3, r3, #1
 25013 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25014 0062 7B72     		strb	r3, [r7, #9]
3594:..\src/command_processing.c ****     
3595:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 25015              		.loc 1 3595 0
 25016 0064 1C4B     		ldr	r3, .L973
 25017 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 25018 006a 012B     		cmp	r3, #1
 25019 006c 0DD1     		bne	.L971
3596:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 547


 25020              		.loc 1 3596 0
 25021 006e 1B4B     		ldr	r3, .L973+4
 25022 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25023 0074 1946     		mov	r1, r3
 25024 0076 1A4A     		ldr	r2, .L973+8
 25025 0078 3423     		movs	r3, #52
 25026 007a 03FB01F3 		mul	r3, r3, r1
 25027 007e 1344     		add	r3, r3, r2
 25028 0080 0C33     		adds	r3, r3, #12
 25029 0082 1B68     		ldr	r3, [r3]
 25030 0084 1BB2     		sxth	r3, r3
 25031 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 25032 0088 0CE0     		b	.L972
 25033              	.L971:
3597:..\src/command_processing.c ****     }
3598:..\src/command_processing.c ****     else {
3599:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 25034              		.loc 1 3599 0
 25035 008a 144B     		ldr	r3, .L973+4
 25036 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25037 0090 1946     		mov	r1, r3
 25038 0092 134A     		ldr	r2, .L973+8
 25039 0094 3423     		movs	r3, #52
 25040 0096 03FB01F3 		mul	r3, r3, r1
 25041 009a 1344     		add	r3, r3, r2
 25042 009c 1033     		adds	r3, r3, #16
 25043 009e 1B68     		ldr	r3, [r3]
 25044 00a0 1BB2     		sxth	r3, r3
 25045 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 25046              	.L972:
3600:..\src/command_processing.c ****     }
3601:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25047              		.loc 1 3601 0
 25048 00a4 BB1D     		adds	r3, r7, #6
 25049 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25050 00a8 3B73     		strb	r3, [r7, #12]
3602:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25051              		.loc 1 3602 0
 25052 00aa BB1D     		adds	r3, r7, #6
 25053 00ac 0133     		adds	r3, r3, #1
 25054 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25055 00b0 FB72     		strb	r3, [r7, #11]
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3605:..\src/command_processing.c **** 
3606:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25056              		.loc 1 3606 0
 25057 00b2 07F10803 		add	r3, r7, #8
 25058 00b6 0521     		movs	r1, #5
 25059 00b8 1846     		mov	r0, r3
 25060 00ba FFF7FEFF 		bl	LCRChecksum
 25061 00be 0346     		mov	r3, r0
 25062 00c0 7B73     		strb	r3, [r7, #13]
3607:..\src/command_processing.c ****     
3608:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25063              		.loc 1 3608 0
 25064 00c2 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 548


 25065 00c6 0621     		movs	r1, #6
 25066 00c8 1846     		mov	r0, r3
 25067 00ca FFF7FEFF 		bl	commWrite
3609:..\src/command_processing.c **** }
 25068              		.loc 1 3609 0
 25069 00ce 00BF     		nop
 25070 00d0 1437     		adds	r7, r7, #20
 25071              		.cfi_def_cfa_offset 12
 25072 00d2 BD46     		mov	sp, r7
 25073              		.cfi_def_cfa_register 13
 25074              		@ sp needed
 25075 00d4 90BD     		pop	{r4, r7, pc}
 25076              	.L974:
 25077 00d6 00BF     		.align	2
 25078              	.L973:
 25079 00d8 00000000 		.word	c_mem
 25080 00dc 00000000 		.word	g_mem
 25081 00e0 00000000 		.word	g_measOld
 25082 00e4 00000000 		.word	g_fb_meas
 25083 00e8 00005940 		.word	1079574528
 25084              		.cfi_endproc
 25085              	.LFE101:
 25086              		.size	cmd_get_currents, .-cmd_get_currents
 25087              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 25088              		.align	2
 25089              		.global	cmd_get_currents_for_cuff
 25090              		.thumb
 25091              		.thumb_func
 25092              		.type	cmd_get_currents_for_cuff, %function
 25093              	cmd_get_currents_for_cuff:
 25094              	.LFB102:
3610:..\src/command_processing.c **** 
3611:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 25095              		.loc 1 3611 0
 25096              		.cfi_startproc
 25097              		@ args = 0, pretend = 0, frame = 8
 25098              		@ frame_needed = 1, uses_anonymous_args = 0
 25099 0000 80B5     		push	{r7, lr}
 25100              		.cfi_def_cfa_offset 8
 25101              		.cfi_offset 7, -8
 25102              		.cfi_offset 14, -4
 25103 0002 82B0     		sub	sp, sp, #8
 25104              		.cfi_def_cfa_offset 16
 25105 0004 00AF     		add	r7, sp, #0
 25106              		.cfi_def_cfa_register 7
3612:..\src/command_processing.c ****     
3613:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3614:..\src/command_processing.c ****     
3615:..\src/command_processing.c ****     uint8 packet_data[4]; 
3616:..\src/command_processing.c ****     int16 aux_int16;
3617:..\src/command_processing.c ****     
3618:..\src/command_processing.c ****     //Header package
3619:..\src/command_processing.c **** 
3620:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 25107              		.loc 1 3620 0
 25108 0006 8E23     		movs	r3, #142
 25109 0008 3B71     		strb	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 549


3621:..\src/command_processing.c **** 
3622:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 25110              		.loc 1 3622 0
 25111 000a 144B     		ldr	r3, .L976
 25112 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25113 0010 1946     		mov	r1, r3
 25114 0012 134A     		ldr	r2, .L976+4
 25115 0014 3423     		movs	r3, #52
 25116 0016 03FB01F3 		mul	r3, r3, r1
 25117 001a 1344     		add	r3, r3, r2
 25118 001c 1033     		adds	r3, r3, #16
 25119 001e 1B68     		ldr	r3, [r3]
 25120 0020 1BB2     		sxth	r3, r3
 25121 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3623:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25122              		.loc 1 3623 0
 25123 0024 BB1C     		adds	r3, r7, #2
 25124 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25125 0028 BB71     		strb	r3, [r7, #6]
3624:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25126              		.loc 1 3624 0
 25127 002a BB1C     		adds	r3, r7, #2
 25128 002c 0133     		adds	r3, r3, #1
 25129 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25130 0030 7B71     		strb	r3, [r7, #5]
3625:..\src/command_processing.c **** 
3626:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 25131              		.loc 1 3628 0
 25132 0032 3B1D     		adds	r3, r7, #4
 25133 0034 0321     		movs	r1, #3
 25134 0036 1846     		mov	r0, r3
 25135 0038 FFF7FEFF 		bl	LCRChecksum
 25136 003c 0346     		mov	r3, r0
 25137 003e FB71     		strb	r3, [r7, #7]
3629:..\src/command_processing.c ****     
3630:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 25138              		.loc 1 3630 0
 25139 0040 064B     		ldr	r3, .L976
 25140 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25141 0046 013B     		subs	r3, r3, #1
 25142 0048 DAB2     		uxtb	r2, r3
 25143 004a 3B1D     		adds	r3, r7, #4
 25144 004c 0421     		movs	r1, #4
 25145 004e 1846     		mov	r0, r3
 25146 0050 FFF7FEFF 		bl	commWriteID
3631:..\src/command_processing.c **** }
 25147              		.loc 1 3631 0
 25148 0054 00BF     		nop
 25149 0056 0837     		adds	r7, r7, #8
 25150              		.cfi_def_cfa_offset 8
 25151 0058 BD46     		mov	sp, r7
 25152              		.cfi_def_cfa_register 13
 25153              		@ sp needed
 25154 005a 80BD     		pop	{r7, pc}
 25155              	.L977:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 550


 25156              		.align	2
 25157              	.L976:
 25158 005c 00000000 		.word	g_mem
 25159 0060 00000000 		.word	g_measOld
 25160              		.cfi_endproc
 25161              	.LFE102:
 25162              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 25163              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 25164              		.align	2
 25165              		.global	commReadResCurrFromSH
 25166              		.thumb
 25167              		.thumb_func
 25168              		.type	commReadResCurrFromSH, %function
 25169              	commReadResCurrFromSH:
 25170              	.LFB103:
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c **** //==============================================================================
3634:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3635:..\src/command_processing.c **** //==============================================================================
3636:..\src/command_processing.c **** 
3637:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3638:..\src/command_processing.c **** {
 25171              		.loc 1 3638 0
 25172              		.cfi_startproc
 25173              		@ args = 0, pretend = 0, frame = 32
 25174              		@ frame_needed = 1, uses_anonymous_args = 0
 25175 0000 80B5     		push	{r7, lr}
 25176              		.cfi_def_cfa_offset 8
 25177              		.cfi_offset 7, -8
 25178              		.cfi_offset 14, -4
 25179 0002 88B0     		sub	sp, sp, #32
 25180              		.cfi_def_cfa_offset 40
 25181 0004 00AF     		add	r7, sp, #0
 25182              		.cfi_def_cfa_register 7
3639:..\src/command_processing.c ****     uint8 packet_data[16];
3640:..\src/command_processing.c ****     uint8 packet_lenght;
3641:..\src/command_processing.c ****     int16 curr_diff = 0;
 25183              		.loc 1 3641 0
 25184 0006 0023     		movs	r3, #0
 25185 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3642:..\src/command_processing.c ****     uint32 t_start, t_end;
3643:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 25186              		.loc 1 3643 0
 25187 000a 0123     		movs	r3, #1
 25188 000c 7B77     		strb	r3, [r7, #29]
3644:..\src/command_processing.c **** 
3645:..\src/command_processing.c ****     packet_lenght = 2;
 25189              		.loc 1 3645 0
 25190 000e 0223     		movs	r3, #2
 25191 0010 3B77     		strb	r3, [r7, #28]
3646:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 25192              		.loc 1 3646 0
 25193 0012 8C23     		movs	r3, #140
 25194 0014 3B71     		strb	r3, [r7, #4]
3647:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 25195              		.loc 1 3647 0
 25196 0016 8C23     		movs	r3, #140
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 551


 25197 0018 7B71     		strb	r3, [r7, #5]
3648:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 25198              		.loc 1 3648 0
 25199 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 25200 001c 99B2     		uxth	r1, r3
 25201 001e 1D4B     		ldr	r3, .L985
 25202 0020 93F8C122 		ldrb	r2, [r3, #705]	@ zero_extendqisi2
 25203 0024 3B1D     		adds	r3, r7, #4
 25204 0026 1846     		mov	r0, r3
 25205 0028 FFF7FEFF 		bl	commWriteID
3649:..\src/command_processing.c **** 
3650:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 25206              		.loc 1 3650 0
 25207 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25208 0030 0346     		mov	r3, r0
 25209 0032 BB61     		str	r3, [r7, #24]
3651:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 25210              		.loc 1 3651 0
 25211 0034 18E0     		b	.L979
 25212              	.L982:
3652:..\src/command_processing.c ****         if (interrupt_flag){
 25213              		.loc 1 3652 0
 25214 0036 184B     		ldr	r3, .L985+4
 25215 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25216 003a 002B     		cmp	r3, #0
 25217 003c 04D0     		beq	.L980
3653:..\src/command_processing.c ****             interrupt_flag = FALSE;
 25218              		.loc 1 3653 0
 25219 003e 164B     		ldr	r3, .L985+4
 25220 0040 0022     		movs	r2, #0
 25221 0042 1A70     		strb	r2, [r3]
3654:..\src/command_processing.c ****             interrupt_manager();
 25222              		.loc 1 3654 0
 25223 0044 FFF7FEFF 		bl	interrupt_manager
 25224              	.L980:
3655:..\src/command_processing.c ****         }
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 25225              		.loc 1 3657 0
 25226 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 25227 004c 0346     		mov	r3, r0
 25228 004e 7B61     		str	r3, [r7, #20]
3658:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 25229              		.loc 1 3658 0
 25230 0050 BA69     		ldr	r2, [r7, #24]
 25231 0052 7B69     		ldr	r3, [r7, #20]
 25232 0054 D31A     		subs	r3, r2, r3
 25233 0056 114A     		ldr	r2, .L985+8
 25234 0058 9342     		cmp	r3, r2
 25235 005a 05D9     		bls	.L979
3659:..\src/command_processing.c ****             read_flag = FALSE;
 25236              		.loc 1 3659 0
 25237 005c 0023     		movs	r3, #0
 25238 005e 7B77     		strb	r3, [r7, #29]
3660:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 25239              		.loc 1 3660 0
 25240 0060 0F4B     		ldr	r3, .L985+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 552


 25241 0062 0022     		movs	r2, #0
 25242 0064 1A70     		strb	r2, [r3]
3661:..\src/command_processing.c ****             break;
 25243              		.loc 1 3661 0
 25244 0066 03E0     		b	.L981
 25245              	.L979:
3651:..\src/command_processing.c ****         if (interrupt_flag){
 25246              		.loc 1 3651 0
 25247 0068 0E4B     		ldr	r3, .L985+16
 25248 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25249 006c 8E2B     		cmp	r3, #142
 25250 006e E2D1     		bne	.L982
 25251              	.L981:
3662:..\src/command_processing.c ****         }
3663:..\src/command_processing.c ****     }
3664:..\src/command_processing.c **** 
3665:..\src/command_processing.c ****     if (read_flag) {
 25252              		.loc 1 3665 0
 25253 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 25254 0072 002B     		cmp	r3, #0
 25255 0074 08D0     		beq	.L983
3666:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 25256              		.loc 1 3666 0
 25257 0076 0B4B     		ldr	r3, .L985+16
 25258 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25259 007a 1B02     		lsls	r3, r3, #8
 25260 007c 1AB2     		sxth	r2, r3
 25261 007e 094B     		ldr	r3, .L985+16
 25262 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 25263 0082 1BB2     		sxth	r3, r3
 25264 0084 1343     		orrs	r3, r3, r2
 25265 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 25266              	.L983:
3667:..\src/command_processing.c ****     }
3668:..\src/command_processing.c ****     
3669:..\src/command_processing.c ****     return curr_diff;
 25267              		.loc 1 3669 0
 25268 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3670:..\src/command_processing.c **** }
 25269              		.loc 1 3670 0
 25270 008c 1846     		mov	r0, r3
 25271 008e 2037     		adds	r7, r7, #32
 25272              		.cfi_def_cfa_offset 8
 25273 0090 BD46     		mov	sp, r7
 25274              		.cfi_def_cfa_register 13
 25275              		@ sp needed
 25276 0092 80BD     		pop	{r7, pc}
 25277              	.L986:
 25278              		.align	2
 25279              	.L985:
 25280 0094 00000000 		.word	c_mem
 25281 0098 00000000 		.word	interrupt_flag
 25282 009c 20AA4400 		.word	4500000
 25283 00a0 00000000 		.word	master_mode
 25284 00a4 00000000 		.word	g_rx
 25285              		.cfi_endproc
 25286              	.LFE103:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 553


 25287              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 25288              		.section	.text.cmd_set_baudrate,"ax",%progbits
 25289              		.align	2
 25290              		.global	cmd_set_baudrate
 25291              		.thumb
 25292              		.thumb_func
 25293              		.type	cmd_set_baudrate, %function
 25294              	cmd_set_baudrate:
 25295              	.LFB104:
3671:..\src/command_processing.c **** 
3672:..\src/command_processing.c **** void cmd_set_baudrate(){
 25296              		.loc 1 3672 0
 25297              		.cfi_startproc
 25298              		@ args = 0, pretend = 0, frame = 0
 25299              		@ frame_needed = 1, uses_anonymous_args = 0
 25300 0000 80B5     		push	{r7, lr}
 25301              		.cfi_def_cfa_offset 8
 25302              		.cfi_offset 7, -8
 25303              		.cfi_offset 14, -4
 25304 0002 00AF     		add	r7, sp, #0
 25305              		.cfi_def_cfa_register 7
3673:..\src/command_processing.c ****     
3674:..\src/command_processing.c ****     // Set BaudRate
3675:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 25306              		.loc 1 3675 0
 25307 0004 094B     		ldr	r3, .L992
 25308 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 25309 0008 094B     		ldr	r3, .L992+4
 25310 000a 83F8AA20 		strb	r2, [r3, #170]
3676:..\src/command_processing.c ****     
3677:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 25311              		.loc 1 3677 0
 25312 000e 074B     		ldr	r3, .L992
 25313 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 25314 0012 0D2B     		cmp	r3, #13
 25315 0014 04D1     		bne	.L991
3678:..\src/command_processing.c ****         case 13:
3679:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 25316              		.loc 1 3679 0
 25317 0016 0121     		movs	r1, #1
 25318 0018 0C20     		movs	r0, #12
 25319 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3680:..\src/command_processing.c ****             break;
 25320              		.loc 1 3680 0
 25321 001e 03E0     		b	.L990
 25322              	.L991:
3681:..\src/command_processing.c ****         default:
3682:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 25323              		.loc 1 3682 0
 25324 0020 0121     		movs	r1, #1
 25325 0022 0220     		movs	r0, #2
 25326 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 25327              	.L990:
3683:..\src/command_processing.c ****     }
3684:..\src/command_processing.c **** }
 25328              		.loc 1 3684 0
 25329 0028 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 554


 25330 002a 80BD     		pop	{r7, pc}
 25331              	.L993:
 25332              		.align	2
 25333              	.L992:
 25334 002c 00000000 		.word	g_rx
 25335 0030 00000000 		.word	c_mem
 25336              		.cfi_endproc
 25337              	.LFE104:
 25338              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 25339              		.section	.text.cmd_ping,"ax",%progbits
 25340              		.align	2
 25341              		.global	cmd_ping
 25342              		.thumb
 25343              		.thumb_func
 25344              		.type	cmd_ping, %function
 25345              	cmd_ping:
 25346              	.LFB105:
3685:..\src/command_processing.c **** 
3686:..\src/command_processing.c **** void cmd_ping(){
 25347              		.loc 1 3686 0
 25348              		.cfi_startproc
 25349              		@ args = 0, pretend = 0, frame = 8
 25350              		@ frame_needed = 1, uses_anonymous_args = 0
 25351 0000 80B5     		push	{r7, lr}
 25352              		.cfi_def_cfa_offset 8
 25353              		.cfi_offset 7, -8
 25354              		.cfi_offset 14, -4
 25355 0002 82B0     		sub	sp, sp, #8
 25356              		.cfi_def_cfa_offset 16
 25357 0004 00AF     		add	r7, sp, #0
 25358              		.cfi_def_cfa_register 7
3687:..\src/command_processing.c **** 
3688:..\src/command_processing.c ****     uint8 packet_data[2];
3689:..\src/command_processing.c **** 
3690:..\src/command_processing.c ****     // Header
3691:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 25359              		.loc 1 3691 0
 25360 0006 0023     		movs	r3, #0
 25361 0008 3B71     		strb	r3, [r7, #4]
3692:..\src/command_processing.c ****     
3693:..\src/command_processing.c ****     // Load Payload
3694:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 25362              		.loc 1 3694 0
 25363 000a 0023     		movs	r3, #0
 25364 000c 7B71     		strb	r3, [r7, #5]
3695:..\src/command_processing.c **** 
3696:..\src/command_processing.c ****     // Send Package to uart
3697:..\src/command_processing.c ****     commWrite(packet_data, 2);
 25365              		.loc 1 3697 0
 25366 000e 3B1D     		adds	r3, r7, #4
 25367 0010 0221     		movs	r1, #2
 25368 0012 1846     		mov	r0, r3
 25369 0014 FFF7FEFF 		bl	commWrite
3698:..\src/command_processing.c **** }
 25370              		.loc 1 3698 0
 25371 0018 00BF     		nop
 25372 001a 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 555


 25373              		.cfi_def_cfa_offset 8
 25374 001c BD46     		mov	sp, r7
 25375              		.cfi_def_cfa_register 13
 25376              		@ sp needed
 25377 001e 80BD     		pop	{r7, pc}
 25378              		.cfi_endproc
 25379              	.LFE105:
 25380              		.size	cmd_ping, .-cmd_ping
 25381              		.section	.text.cmd_get_inputs,"ax",%progbits
 25382              		.align	2
 25383              		.global	cmd_get_inputs
 25384              		.thumb
 25385              		.thumb_func
 25386              		.type	cmd_get_inputs, %function
 25387              	cmd_get_inputs:
 25388              	.LFB106:
3699:..\src/command_processing.c **** 
3700:..\src/command_processing.c **** void cmd_get_inputs(){
 25389              		.loc 1 3700 0
 25390              		.cfi_startproc
 25391              		@ args = 0, pretend = 0, frame = 16
 25392              		@ frame_needed = 1, uses_anonymous_args = 0
 25393 0000 80B5     		push	{r7, lr}
 25394              		.cfi_def_cfa_offset 8
 25395              		.cfi_offset 7, -8
 25396              		.cfi_offset 14, -4
 25397 0002 84B0     		sub	sp, sp, #16
 25398              		.cfi_def_cfa_offset 24
 25399 0004 00AF     		add	r7, sp, #0
 25400              		.cfi_def_cfa_register 7
3701:..\src/command_processing.c **** 
3702:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3703:..\src/command_processing.c **** 
3704:..\src/command_processing.c ****     uint8 packet_data[6]; 
3705:..\src/command_processing.c ****     int16 aux_int16;
3706:..\src/command_processing.c ****     
3707:..\src/command_processing.c ****     //Header package
3708:..\src/command_processing.c **** 
3709:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 25401              		.loc 1 3709 0
 25402 0006 8323     		movs	r3, #131
 25403 0008 3B72     		strb	r3, [r7, #8]
3710:..\src/command_processing.c ****         
3711:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 25404              		.loc 1 3711 0
 25405 000a 234B     		ldr	r3, .L996
 25406 000c 1A68     		ldr	r2, [r3]
 25407 000e 234B     		ldr	r3, .L996+4
 25408 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25409 0014 1846     		mov	r0, r3
 25410 0016 2149     		ldr	r1, .L996+4
 25411 0018 0346     		mov	r3, r0
 25412 001a 5B00     		lsls	r3, r3, #1
 25413 001c 0344     		add	r3, r3, r0
 25414 001e 1B01     		lsls	r3, r3, #4
 25415 0020 0B44     		add	r3, r3, r1
 25416 0022 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 556


 25417 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25418 0028 42FA03F3 		asr	r3, r2, r3
 25419 002c 1BB2     		sxth	r3, r3
 25420 002e FB80     		strh	r3, [r7, #6]	@ movhi
3712:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25421              		.loc 1 3712 0
 25422 0030 BB1D     		adds	r3, r7, #6
 25423 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25424 0034 BB72     		strb	r3, [r7, #10]
3713:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25425              		.loc 1 3713 0
 25426 0036 BB1D     		adds	r3, r7, #6
 25427 0038 0133     		adds	r3, r3, #1
 25428 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25429 003c 7B72     		strb	r3, [r7, #9]
3714:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[1].pos >> g_mem.enc[g_mem.motor[1].encoder_line].res[0]);
 25430              		.loc 1 3714 0
 25431 003e 164B     		ldr	r3, .L996
 25432 0040 1A69     		ldr	r2, [r3, #16]
 25433 0042 164B     		ldr	r3, .L996+4
 25434 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 25435 0048 1846     		mov	r0, r3
 25436 004a 1449     		ldr	r1, .L996+4
 25437 004c 0346     		mov	r3, r0
 25438 004e 5B00     		lsls	r3, r3, #1
 25439 0050 0344     		add	r3, r3, r0
 25440 0052 1B01     		lsls	r3, r3, #4
 25441 0054 0B44     		add	r3, r3, r1
 25442 0056 03F29513 		addw	r3, r3, #405
 25443 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25444 005c 42FA03F3 		asr	r3, r2, r3
 25445 0060 1BB2     		sxth	r3, r3
 25446 0062 FB80     		strh	r3, [r7, #6]	@ movhi
3715:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25447              		.loc 1 3715 0
 25448 0064 BB1D     		adds	r3, r7, #6
 25449 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25450 0068 3B73     		strb	r3, [r7, #12]
3716:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25451              		.loc 1 3716 0
 25452 006a BB1D     		adds	r3, r7, #6
 25453 006c 0133     		adds	r3, r3, #1
 25454 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25455 0070 FB72     		strb	r3, [r7, #11]
3717:..\src/command_processing.c ****     
3718:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3719:..\src/command_processing.c **** 
3720:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 25456              		.loc 1 3720 0
 25457 0072 07F10803 		add	r3, r7, #8
 25458 0076 0521     		movs	r1, #5
 25459 0078 1846     		mov	r0, r3
 25460 007a FFF7FEFF 		bl	LCRChecksum
 25461 007e 0346     		mov	r3, r0
 25462 0080 7B73     		strb	r3, [r7, #13]
3721:..\src/command_processing.c **** 
3722:..\src/command_processing.c ****     commWrite(packet_data, 6);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 557


 25463              		.loc 1 3722 0
 25464 0082 07F10803 		add	r3, r7, #8
 25465 0086 0621     		movs	r1, #6
 25466 0088 1846     		mov	r0, r3
 25467 008a FFF7FEFF 		bl	commWrite
3723:..\src/command_processing.c **** }
 25468              		.loc 1 3723 0
 25469 008e 00BF     		nop
 25470 0090 1037     		adds	r7, r7, #16
 25471              		.cfi_def_cfa_offset 8
 25472 0092 BD46     		mov	sp, r7
 25473              		.cfi_def_cfa_register 13
 25474              		@ sp needed
 25475 0094 80BD     		pop	{r7, pc}
 25476              	.L997:
 25477 0096 00BF     		.align	2
 25478              	.L996:
 25479 0098 00000000 		.word	g_refOld
 25480 009c 00000000 		.word	g_mem
 25481              		.cfi_endproc
 25482              	.LFE106:
 25483              		.size	cmd_get_inputs, .-cmd_get_inputs
 25484              		.section	.text.cmd_store_params,"ax",%progbits
 25485              		.align	2
 25486              		.global	cmd_store_params
 25487              		.thumb
 25488              		.thumb_func
 25489              		.type	cmd_store_params, %function
 25490              	cmd_store_params:
 25491              	.LFB107:
3724:..\src/command_processing.c **** 
3725:..\src/command_processing.c **** void cmd_store_params(){
 25492              		.loc 1 3725 0
 25493              		.cfi_startproc
 25494              		@ args = 0, pretend = 0, frame = 16
 25495              		@ frame_needed = 1, uses_anonymous_args = 0
 25496 0000 80B5     		push	{r7, lr}
 25497              		.cfi_def_cfa_offset 8
 25498              		.cfi_offset 7, -8
 25499              		.cfi_offset 14, -4
 25500 0002 84B0     		sub	sp, sp, #16
 25501              		.cfi_def_cfa_offset 24
 25502 0004 00AF     		add	r7, sp, #0
 25503              		.cfi_def_cfa_register 7
3726:..\src/command_processing.c ****     
3727:..\src/command_processing.c ****     // Check input mode enabled
3728:..\src/command_processing.c ****     uint32 off_1;
3729:..\src/command_processing.c ****     float mult_1;
3730:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 25504              		.loc 1 3730 0
 25505 0006 0223     		movs	r3, #2
 25506 0008 FB73     		strb	r3, [r7, #15]
3731:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3732:..\src/command_processing.c ****     uint8 CYDATA old_id;
3733:..\src/command_processing.c ****     
3734:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 25507              		.loc 1 3734 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 558


 25508 000a 674B     		ldr	r3, .L1009
 25509 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 25510 0010 002B     		cmp	r3, #0
 25511 0012 7CD1     		bne	.L999
3735:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 25512              		.loc 1 3735 0
 25513 0014 644B     		ldr	r3, .L1009
 25514 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25515 001a 1946     		mov	r1, r3
 25516 001c 624A     		ldr	r2, .L1009
 25517 001e 0B46     		mov	r3, r1
 25518 0020 5B00     		lsls	r3, r3, #1
 25519 0022 0B44     		add	r3, r3, r1
 25520 0024 1B01     		lsls	r3, r3, #4
 25521 0026 1344     		add	r3, r3, r2
 25522 0028 03F5CC73 		add	r3, r3, #408
 25523 002c 1B68     		ldr	r3, [r3]
 25524 002e BB60     		str	r3, [r7, #8]
3736:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 25525              		.loc 1 3736 0
 25526 0030 5D4B     		ldr	r3, .L1009
 25527 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25528 0036 1946     		mov	r1, r3
 25529 0038 5B4A     		ldr	r2, .L1009
 25530 003a 0B46     		mov	r3, r1
 25531 003c 5B00     		lsls	r3, r3, #1
 25532 003e 0B44     		add	r3, r3, r1
 25533 0040 1B01     		lsls	r3, r3, #4
 25534 0042 1344     		add	r3, r3, r2
 25535 0044 03F5D273 		add	r3, r3, #420
 25536 0048 1B68     		ldr	r3, [r3]	@ float
 25537 004a 7B60     		str	r3, [r7, #4]	@ float
3737:..\src/command_processing.c **** 
3738:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 25538              		.loc 1 3738 0
 25539 004c 574B     		ldr	r3, .L1009+4
 25540 004e 1B68     		ldr	r3, [r3]
 25541 0050 1846     		mov	r0, r3
 25542 0052 FFF7FEFF 		bl	__aeabi_i2f
 25543 0056 0346     		mov	r3, r0
 25544 0058 7968     		ldr	r1, [r7, #4]	@ float
 25545 005a 1846     		mov	r0, r3
 25546 005c FFF7FEFF 		bl	__aeabi_fdiv
 25547 0060 0346     		mov	r3, r0
 25548 0062 1846     		mov	r0, r3
 25549 0064 FFF7FEFF 		bl	__aeabi_f2iz
 25550 0068 0246     		mov	r2, r0
 25551 006a 504B     		ldr	r3, .L1009+4
 25552 006c 1A60     		str	r2, [r3]
3739:..\src/command_processing.c **** 
3740:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 25553              		.loc 1 3740 0
 25554 006e 4F4B     		ldr	r3, .L1009+4
 25555 0070 1B68     		ldr	r3, [r3]
 25556 0072 1846     		mov	r0, r3
 25557 0074 FFF7FEFF 		bl	__aeabi_i2f
 25558 0078 4B4B     		ldr	r3, .L1009
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 559


 25559 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25560 007e 1946     		mov	r1, r3
 25561 0080 4B4A     		ldr	r2, .L1009+8
 25562 0082 0B46     		mov	r3, r1
 25563 0084 5B00     		lsls	r3, r3, #1
 25564 0086 0B44     		add	r3, r3, r1
 25565 0088 1B01     		lsls	r3, r3, #4
 25566 008a 1344     		add	r3, r3, r2
 25567 008c 03F5D273 		add	r3, r3, #420
 25568 0090 1B68     		ldr	r3, [r3]	@ float
 25569 0092 1946     		mov	r1, r3
 25570 0094 FFF7FEFF 		bl	__aeabi_fmul
 25571 0098 0346     		mov	r3, r0
 25572 009a 1846     		mov	r0, r3
 25573 009c FFF7FEFF 		bl	__aeabi_f2iz
 25574 00a0 0246     		mov	r2, r0
 25575 00a2 424B     		ldr	r3, .L1009+4
 25576 00a4 1A60     		str	r2, [r3]
3741:..\src/command_processing.c **** 
3742:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 25577              		.loc 1 3742 0
 25578 00a6 414B     		ldr	r3, .L1009+4
 25579 00a8 1B68     		ldr	r3, [r3]
 25580 00aa 1846     		mov	r0, r3
 25581 00ac 3E4B     		ldr	r3, .L1009
 25582 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 25583 00b2 1946     		mov	r1, r3
 25584 00b4 3E4A     		ldr	r2, .L1009+8
 25585 00b6 0B46     		mov	r3, r1
 25586 00b8 5B00     		lsls	r3, r3, #1
 25587 00ba 0B44     		add	r3, r3, r1
 25588 00bc 1B01     		lsls	r3, r3, #4
 25589 00be 1344     		add	r3, r3, r2
 25590 00c0 03F5CC73 		add	r3, r3, #408
 25591 00c4 1B68     		ldr	r3, [r3]
 25592 00c6 1A46     		mov	r2, r3
 25593 00c8 BB68     		ldr	r3, [r7, #8]
 25594 00ca D31A     		subs	r3, r2, r3
 25595 00cc 0344     		add	r3, r3, r0
 25596 00ce 1A46     		mov	r2, r3
 25597 00d0 364B     		ldr	r3, .L1009+4
 25598 00d2 1A60     		str	r2, [r3]
3743:..\src/command_processing.c ****         
3744:..\src/command_processing.c ****         // Check position Limits
3745:..\src/command_processing.c **** 
3746:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 25599              		.loc 1 3746 0
 25600 00d4 344B     		ldr	r3, .L1009
 25601 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 25602 00da 002B     		cmp	r3, #0
 25603 00dc 17D0     		beq	.L999
3747:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 25604              		.loc 1 3747 0
 25605 00de 334B     		ldr	r3, .L1009+4
 25606 00e0 1A68     		ldr	r2, [r3]
 25607 00e2 314B     		ldr	r3, .L1009
 25608 00e4 D3F8E430 		ldr	r3, [r3, #228]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 560


 25609 00e8 9A42     		cmp	r2, r3
 25610 00ea 04DA     		bge	.L1000
3748:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 25611              		.loc 1 3748 0
 25612 00ec 2E4B     		ldr	r3, .L1009
 25613 00ee D3F8E430 		ldr	r3, [r3, #228]
 25614 00f2 2E4A     		ldr	r2, .L1009+4
 25615 00f4 1360     		str	r3, [r2]
 25616              	.L1000:
3749:..\src/command_processing.c **** 
3750:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 25617              		.loc 1 3750 0
 25618 00f6 2D4B     		ldr	r3, .L1009+4
 25619 00f8 1A68     		ldr	r2, [r3]
 25620 00fa 2B4B     		ldr	r3, .L1009
 25621 00fc D3F8E830 		ldr	r3, [r3, #232]
 25622 0100 9A42     		cmp	r2, r3
 25623 0102 04DD     		ble	.L999
3751:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 25624              		.loc 1 3751 0
 25625 0104 284B     		ldr	r3, .L1009
 25626 0106 D3F8E830 		ldr	r3, [r3, #232]
 25627 010a 284A     		ldr	r2, .L1009+4
 25628 010c 1360     		str	r3, [r2]
 25629              	.L999:
3752:..\src/command_processing.c ****         }
3753:..\src/command_processing.c ****     }
3754:..\src/command_processing.c ****     
3755:..\src/command_processing.c ****     // If SD is used, create new param and data file
3756:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 25630              		.loc 1 3756 0
 25631 010e 264B     		ldr	r3, .L1009
 25632 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 25633 0114 012B     		cmp	r3, #1
 25634 0116 06D1     		bne	.L1001
3757:..\src/command_processing.c ****         FS_FClose(pFile);
 25635              		.loc 1 3757 0
 25636 0118 264B     		ldr	r3, .L1009+12
 25637 011a 1B68     		ldr	r3, [r3]
 25638 011c 1846     		mov	r0, r3
 25639 011e FFF7FEFF 		bl	FS_FClose
3758:..\src/command_processing.c ****         
3759:..\src/command_processing.c ****         InitSD_FS();
 25640              		.loc 1 3759 0
 25641 0122 FFF7FEFF 		bl	InitSD_FS
 25642              	.L1001:
3760:..\src/command_processing.c ****     }
3761:..\src/command_processing.c ****    
3762:..\src/command_processing.c ****     // Store params 
3763:..\src/command_processing.c **** 
3764:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 25643              		.loc 1 3764 0
 25644 0126 204B     		ldr	r3, .L1009
 25645 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 25646 012c 204B     		ldr	r3, .L1009+8
 25647 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 25648 0132 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 561


 25649 0134 21D0     		beq	.L1002
3765:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 25650              		.loc 1 3765 0
 25651 0136 1C4B     		ldr	r3, .L1009
 25652 0138 93F8A030 		ldrb	r3, [r3, #160]
 25653 013c FB70     		strb	r3, [r7, #3]
3766:..\src/command_processing.c ****         if(memStore(0)) {
 25654              		.loc 1 3766 0
 25655 013e 0020     		movs	r0, #0
 25656 0140 FFF7FEFF 		bl	memStore
 25657 0144 0346     		mov	r3, r0
 25658 0146 002B     		cmp	r3, #0
 25659 0148 0BD0     		beq	.L1003
3767:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 25660              		.loc 1 3767 0
 25661 014a 0123     		movs	r3, #1
 25662 014c 3B70     		strb	r3, [r7]
3768:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 25663              		.loc 1 3768 0
 25664 014e 0123     		movs	r3, #1
 25665 0150 7B70     		strb	r3, [r7, #1]
3769:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25666              		.loc 1 3769 0
 25667 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25668 0154 99B2     		uxth	r1, r3
 25669 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25670 0158 3B46     		mov	r3, r7
 25671 015a 1846     		mov	r0, r3
 25672 015c FFF7FEFF 		bl	commWrite_old_id
 25673 0160 18E0     		b	.L1005
 25674              	.L1003:
3770:..\src/command_processing.c ****         }    
3771:..\src/command_processing.c ****         else{
3772:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 25675              		.loc 1 3772 0
 25676 0162 0023     		movs	r3, #0
 25677 0164 3B70     		strb	r3, [r7]
3773:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 25678              		.loc 1 3773 0
 25679 0166 0023     		movs	r3, #0
 25680 0168 7B70     		strb	r3, [r7, #1]
3774:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 25681              		.loc 1 3774 0
 25682 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25683 016c 99B2     		uxth	r1, r3
 25684 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 25685 0170 3B46     		mov	r3, r7
 25686 0172 1846     		mov	r0, r3
 25687 0174 FFF7FEFF 		bl	commWrite_old_id
 25688 0178 0CE0     		b	.L1005
 25689              	.L1002:
3775:..\src/command_processing.c ****         }
3776:..\src/command_processing.c ****     }    
3777:..\src/command_processing.c ****     else {
3778:..\src/command_processing.c ****         if(memStore(0))
 25690              		.loc 1 3778 0
 25691 017a 0020     		movs	r0, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 562


 25692 017c FFF7FEFF 		bl	memStore
 25693 0180 0346     		mov	r3, r0
 25694 0182 002B     		cmp	r3, #0
 25695 0184 03D0     		beq	.L1006
3779:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 25696              		.loc 1 3779 0
 25697 0186 0120     		movs	r0, #1
 25698 0188 FFF7FEFF 		bl	sendAcknowledgment
 25699 018c 02E0     		b	.L1005
 25700              	.L1006:
3780:..\src/command_processing.c ****         else
3781:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 25701              		.loc 1 3781 0
 25702 018e 0020     		movs	r0, #0
 25703 0190 FFF7FEFF 		bl	sendAcknowledgment
 25704              	.L1005:
3782:..\src/command_processing.c ****     }
3783:..\src/command_processing.c ****     
3784:..\src/command_processing.c ****     // FW reset (if necessary)
3785:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 25705              		.loc 1 3785 0
 25706 0194 084B     		ldr	r3, .L1009+16
 25707 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25708 0198 012B     		cmp	r3, #1
 25709 019a 01D1     		bne	.L1008
3786:..\src/command_processing.c ****         CySoftwareReset();
 25710              		.loc 1 3786 0
 25711 019c FFF7FEFF 		bl	CySoftwareReset
 25712              	.L1008:
3787:..\src/command_processing.c ****     }
3788:..\src/command_processing.c **** }
 25713              		.loc 1 3788 0
 25714 01a0 00BF     		nop
 25715 01a2 1037     		adds	r7, r7, #16
 25716              		.cfi_def_cfa_offset 8
 25717 01a4 BD46     		mov	sp, r7
 25718              		.cfi_def_cfa_register 13
 25719              		@ sp needed
 25720 01a6 80BD     		pop	{r7, pc}
 25721              	.L1010:
 25722              		.align	2
 25723              	.L1009:
 25724 01a8 00000000 		.word	c_mem
 25725 01ac 00000000 		.word	g_refNew
 25726 01b0 00000000 		.word	g_mem
 25727 01b4 00000000 		.word	pFile
 25728 01b8 00000000 		.word	reset_PSoC_flag
 25729              		.cfi_endproc
 25730              	.LFE107:
 25731              		.size	cmd_store_params, .-cmd_store_params
 25732              		.section	.text.cmd_get_emg,"ax",%progbits
 25733              		.align	2
 25734              		.global	cmd_get_emg
 25735              		.thumb
 25736              		.thumb_func
 25737              		.type	cmd_get_emg, %function
 25738              	cmd_get_emg:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 563


 25739              	.LFB108:
3789:..\src/command_processing.c **** 
3790:..\src/command_processing.c **** void cmd_get_emg(){
 25740              		.loc 1 3790 0
 25741              		.cfi_startproc
 25742              		@ args = 0, pretend = 0, frame = 16
 25743              		@ frame_needed = 1, uses_anonymous_args = 0
 25744 0000 80B5     		push	{r7, lr}
 25745              		.cfi_def_cfa_offset 8
 25746              		.cfi_offset 7, -8
 25747              		.cfi_offset 14, -4
 25748 0002 84B0     		sub	sp, sp, #16
 25749              		.cfi_def_cfa_offset 24
 25750 0004 00AF     		add	r7, sp, #0
 25751              		.cfi_def_cfa_register 7
3791:..\src/command_processing.c ****     
3792:..\src/command_processing.c ****     uint8 packet_data[6];
3793:..\src/command_processing.c ****     int16 aux_int16;
3794:..\src/command_processing.c ****     
3795:..\src/command_processing.c ****     // Header        
3796:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 25752              		.loc 1 3796 0
 25753 0006 8823     		movs	r3, #136
 25754 0008 3B72     		strb	r3, [r7, #8]
3797:..\src/command_processing.c ****     
3798:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 25755              		.loc 1 3798 0
 25756 000a 144B     		ldr	r3, .L1012
 25757 000c 1B68     		ldr	r3, [r3]
 25758 000e 1BB2     		sxth	r3, r3
 25759 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3799:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 25760              		.loc 1 3799 0
 25761 0012 BB1D     		adds	r3, r7, #6
 25762 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25763 0016 BB72     		strb	r3, [r7, #10]
3800:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 25764              		.loc 1 3800 0
 25765 0018 BB1D     		adds	r3, r7, #6
 25766 001a 0133     		adds	r3, r3, #1
 25767 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25768 001e 7B72     		strb	r3, [r7, #9]
3801:..\src/command_processing.c ****     
3802:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 25769              		.loc 1 3802 0
 25770 0020 0E4B     		ldr	r3, .L1012
 25771 0022 5B68     		ldr	r3, [r3, #4]
 25772 0024 1BB2     		sxth	r3, r3
 25773 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3803:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 25774              		.loc 1 3803 0
 25775 0028 BB1D     		adds	r3, r7, #6
 25776 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25777 002c 3B73     		strb	r3, [r7, #12]
3804:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 25778              		.loc 1 3804 0
 25779 002e BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 564


 25780 0030 0133     		adds	r3, r3, #1
 25781 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25782 0034 FB72     		strb	r3, [r7, #11]
3805:..\src/command_processing.c **** 
3806:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 25783              		.loc 1 3806 0
 25784 0036 07F10803 		add	r3, r7, #8
 25785 003a 0521     		movs	r1, #5
 25786 003c 1846     		mov	r0, r3
 25787 003e FFF7FEFF 		bl	LCRChecksum
 25788 0042 0346     		mov	r3, r0
 25789 0044 7B73     		strb	r3, [r7, #13]
3807:..\src/command_processing.c **** 
3808:..\src/command_processing.c ****     commWrite(packet_data, 6);
 25790              		.loc 1 3808 0
 25791 0046 07F10803 		add	r3, r7, #8
 25792 004a 0621     		movs	r1, #6
 25793 004c 1846     		mov	r0, r3
 25794 004e FFF7FEFF 		bl	commWrite
3809:..\src/command_processing.c **** 
3810:..\src/command_processing.c **** }
 25795              		.loc 1 3810 0
 25796 0052 00BF     		nop
 25797 0054 1037     		adds	r7, r7, #16
 25798              		.cfi_def_cfa_offset 8
 25799 0056 BD46     		mov	sp, r7
 25800              		.cfi_def_cfa_register 13
 25801              		@ sp needed
 25802 0058 80BD     		pop	{r7, pc}
 25803              	.L1013:
 25804 005a 00BF     		.align	2
 25805              	.L1012:
 25806 005c 00000000 		.word	g_adc_measOld
 25807              		.cfi_endproc
 25808              	.LFE108:
 25809              		.size	cmd_get_emg, .-cmd_get_emg
 25810              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 25811              		.align	2
 25812              		.global	cmd_get_imu_readings
 25813              		.thumb
 25814              		.thumb_func
 25815              		.type	cmd_get_imu_readings, %function
 25816              	cmd_get_imu_readings:
 25817              	.LFB109:
3811:..\src/command_processing.c **** 
3812:..\src/command_processing.c **** void cmd_get_imu_readings(){
 25818              		.loc 1 3812 0
 25819              		.cfi_startproc
 25820              		@ args = 0, pretend = 0, frame = 400
 25821              		@ frame_needed = 1, uses_anonymous_args = 0
 25822 0000 90B5     		push	{r4, r7, lr}
 25823              		.cfi_def_cfa_offset 12
 25824              		.cfi_offset 4, -12
 25825              		.cfi_offset 7, -8
 25826              		.cfi_offset 14, -4
 25827 0002 E5B0     		sub	sp, sp, #404
 25828              		.cfi_def_cfa_offset 416
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 565


 25829 0004 00AF     		add	r7, sp, #0
 25830              		.cfi_def_cfa_register 7
3813:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3814:..\src/command_processing.c ****     
3815:..\src/command_processing.c ****     uint8 k_imu;
3816:..\src/command_processing.c ****     uint16 c = 1;
 25831              		.loc 1 3816 0
 25832 0006 0123     		movs	r3, #1
 25833 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3817:..\src/command_processing.c ****     uint8 k = 0;
 25834              		.loc 1 3817 0
 25835 000c 0023     		movs	r3, #0
 25836 000e 87F88B31 		strb	r3, [r7, #395]
3818:..\src/command_processing.c ****     uint16 gl_c = 1;
 25837              		.loc 1 3818 0
 25838 0012 0123     		movs	r3, #1
 25839 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3819:..\src/command_processing.c ****     int16 aux_int16;
3820:..\src/command_processing.c ****     float aux_float;
3821:..\src/command_processing.c ****     
3822:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3823:..\src/command_processing.c ****     uint8 packet_data[350];
3824:..\src/command_processing.c ****     uint8 single_packet[32];
3825:..\src/command_processing.c ****     
3826:..\src/command_processing.c ****     //Header package 
3827:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 25840              		.loc 1 3827 0
 25841 0018 07F12003 		add	r3, r7, #32
 25842 001c A122     		movs	r2, #161
 25843 001e 1A70     		strb	r2, [r3]
3828:..\src/command_processing.c ****  
3829:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 25844              		.loc 1 3829 0
 25845 0020 0023     		movs	r3, #0
 25846 0022 87F88F31 		strb	r3, [r7, #399]
 25847 0026 82E2     		b	.L1015
 25848              	.L1031:
3830:..\src/command_processing.c ****     {	
3831:..\src/command_processing.c ****             
3832:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 25849              		.loc 1 3832 0
 25850 0028 3B46     		mov	r3, r7
 25851 002a 3A22     		movs	r2, #58
 25852 002c 1A70     		strb	r2, [r3]
3833:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 25853              		.loc 1 3833 0
 25854 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25855 0032 DB4A     		ldr	r2, .L1032
 25856 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25857 0036 1946     		mov	r1, r3
 25858 0038 DA4A     		ldr	r2, .L1032+4
 25859 003a 0B46     		mov	r3, r1
 25860 003c 9B00     		lsls	r3, r3, #2
 25861 003e 0B44     		add	r3, r3, r1
 25862 0040 1344     		add	r3, r3, r2
 25863 0042 03F20223 		addw	r3, r3, #514
 25864 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 566


 25865 0048 002B     		cmp	r3, #0
 25866 004a 5DD0     		beq	.L1016
3834:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 25867              		.loc 1 3834 0
 25868 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25869 0050 D549     		ldr	r1, .L1032+8
 25870 0052 1346     		mov	r3, r2
 25871 0054 9B00     		lsls	r3, r3, #2
 25872 0056 1344     		add	r3, r3, r2
 25873 0058 DB00     		lsls	r3, r3, #3
 25874 005a 0B44     		add	r3, r3, r1
 25875 005c 0233     		adds	r3, r3, #2
 25876 005e B3F90030 		ldrsh	r3, [r3]
 25877 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3835:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25878              		.loc 1 3835 0
 25879 0066 B7F88C31 		ldrh	r3, [r7, #396]
 25880 006a 0133     		adds	r3, r3, #1
 25881 006c 07F5C372 		add	r2, r7, #390
 25882 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25883 0072 3A46     		mov	r2, r7
 25884 0074 D154     		strb	r1, [r2, r3]
3836:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25885              		.loc 1 3836 0
 25886 0076 B7F88C21 		ldrh	r2, [r7, #396]
 25887 007a 07F5C373 		add	r3, r7, #390
 25888 007e 0133     		adds	r3, r3, #1
 25889 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25890 0082 3B46     		mov	r3, r7
 25891 0084 9954     		strb	r1, [r3, r2]
3837:..\src/command_processing.c **** 
3838:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 25892              		.loc 1 3838 0
 25893 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25894 008a C749     		ldr	r1, .L1032+8
 25895 008c 1346     		mov	r3, r2
 25896 008e 9B00     		lsls	r3, r3, #2
 25897 0090 1344     		add	r3, r3, r2
 25898 0092 DB00     		lsls	r3, r3, #3
 25899 0094 0B44     		add	r3, r3, r1
 25900 0096 0433     		adds	r3, r3, #4
 25901 0098 B3F90030 		ldrsh	r3, [r3]
 25902 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3839:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25903              		.loc 1 3839 0
 25904 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 25905 00a4 0333     		adds	r3, r3, #3
 25906 00a6 07F5C372 		add	r2, r7, #390
 25907 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25908 00ac 3A46     		mov	r2, r7
 25909 00ae D154     		strb	r1, [r2, r3]
3840:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 25910              		.loc 1 3840 0
 25911 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 25912 00b4 9A1C     		adds	r2, r3, #2
 25913 00b6 07F5C373 		add	r3, r7, #390
 25914 00ba 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 567


 25915 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25916 00be 3B46     		mov	r3, r7
 25917 00c0 9954     		strb	r1, [r3, r2]
3841:..\src/command_processing.c **** 
3842:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 25918              		.loc 1 3842 0
 25919 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25920 00c6 B849     		ldr	r1, .L1032+8
 25921 00c8 1346     		mov	r3, r2
 25922 00ca 9B00     		lsls	r3, r3, #2
 25923 00cc 1344     		add	r3, r3, r2
 25924 00ce DB00     		lsls	r3, r3, #3
 25925 00d0 0B44     		add	r3, r3, r1
 25926 00d2 0633     		adds	r3, r3, #6
 25927 00d4 B3F90030 		ldrsh	r3, [r3]
 25928 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3843:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 25929              		.loc 1 3843 0
 25930 00dc B7F88C31 		ldrh	r3, [r7, #396]
 25931 00e0 0533     		adds	r3, r3, #5
 25932 00e2 07F5C372 		add	r2, r7, #390
 25933 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25934 00e8 3A46     		mov	r2, r7
 25935 00ea D154     		strb	r1, [r2, r3]
3844:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 25936              		.loc 1 3844 0
 25937 00ec B7F88C31 		ldrh	r3, [r7, #396]
 25938 00f0 1A1D     		adds	r2, r3, #4
 25939 00f2 07F5C373 		add	r3, r7, #390
 25940 00f6 0133     		adds	r3, r3, #1
 25941 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25942 00fa 3B46     		mov	r3, r7
 25943 00fc 9954     		strb	r1, [r3, r2]
3845:..\src/command_processing.c **** 
3846:..\src/command_processing.c ****             c = c + 6;
 25944              		.loc 1 3846 0
 25945 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 25946 0102 0633     		adds	r3, r3, #6
 25947 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 25948              	.L1016:
3847:..\src/command_processing.c ****         }
3848:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 25949              		.loc 1 3848 0
 25950 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 25951 010c A44A     		ldr	r2, .L1032
 25952 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 25953 0110 1946     		mov	r1, r3
 25954 0112 A44A     		ldr	r2, .L1032+4
 25955 0114 0B46     		mov	r3, r1
 25956 0116 9B00     		lsls	r3, r3, #2
 25957 0118 0B44     		add	r3, r3, r1
 25958 011a 1344     		add	r3, r3, r2
 25959 011c 03F20323 		addw	r3, r3, #515
 25960 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 25961 0122 002B     		cmp	r3, #0
 25962 0124 5DD0     		beq	.L1017
3849:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 568


 25963              		.loc 1 3849 0
 25964 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25965 012a 9F49     		ldr	r1, .L1032+8
 25966 012c 1346     		mov	r3, r2
 25967 012e 9B00     		lsls	r3, r3, #2
 25968 0130 1344     		add	r3, r3, r2
 25969 0132 DB00     		lsls	r3, r3, #3
 25970 0134 0B44     		add	r3, r3, r1
 25971 0136 0833     		adds	r3, r3, #8
 25972 0138 B3F90030 		ldrsh	r3, [r3]
 25973 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3850:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 25974              		.loc 1 3850 0
 25975 0140 B7F88C31 		ldrh	r3, [r7, #396]
 25976 0144 0133     		adds	r3, r3, #1
 25977 0146 07F5C372 		add	r2, r7, #390
 25978 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 25979 014c 3A46     		mov	r2, r7
 25980 014e D154     		strb	r1, [r2, r3]
3851:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 25981              		.loc 1 3851 0
 25982 0150 B7F88C21 		ldrh	r2, [r7, #396]
 25983 0154 07F5C373 		add	r3, r7, #390
 25984 0158 0133     		adds	r3, r3, #1
 25985 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 25986 015c 3B46     		mov	r3, r7
 25987 015e 9954     		strb	r1, [r3, r2]
3852:..\src/command_processing.c **** 
3853:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 25988              		.loc 1 3853 0
 25989 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 25990 0164 9049     		ldr	r1, .L1032+8
 25991 0166 1346     		mov	r3, r2
 25992 0168 9B00     		lsls	r3, r3, #2
 25993 016a 1344     		add	r3, r3, r2
 25994 016c DB00     		lsls	r3, r3, #3
 25995 016e 0B44     		add	r3, r3, r1
 25996 0170 0A33     		adds	r3, r3, #10
 25997 0172 B3F90030 		ldrsh	r3, [r3]
 25998 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3854:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 25999              		.loc 1 3854 0
 26000 017a B7F88C31 		ldrh	r3, [r7, #396]
 26001 017e 0333     		adds	r3, r3, #3
 26002 0180 07F5C372 		add	r2, r7, #390
 26003 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26004 0186 3A46     		mov	r2, r7
 26005 0188 D154     		strb	r1, [r2, r3]
3855:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26006              		.loc 1 3855 0
 26007 018a B7F88C31 		ldrh	r3, [r7, #396]
 26008 018e 9A1C     		adds	r2, r3, #2
 26009 0190 07F5C373 		add	r3, r7, #390
 26010 0194 0133     		adds	r3, r3, #1
 26011 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26012 0198 3B46     		mov	r3, r7
 26013 019a 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 569


3856:..\src/command_processing.c **** 
3857:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 26014              		.loc 1 3857 0
 26015 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26016 01a0 8149     		ldr	r1, .L1032+8
 26017 01a2 1346     		mov	r3, r2
 26018 01a4 9B00     		lsls	r3, r3, #2
 26019 01a6 1344     		add	r3, r3, r2
 26020 01a8 DB00     		lsls	r3, r3, #3
 26021 01aa 0B44     		add	r3, r3, r1
 26022 01ac 0C33     		adds	r3, r3, #12
 26023 01ae B3F90030 		ldrsh	r3, [r3]
 26024 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3858:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26025              		.loc 1 3858 0
 26026 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 26027 01ba 0533     		adds	r3, r3, #5
 26028 01bc 07F5C372 		add	r2, r7, #390
 26029 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26030 01c2 3A46     		mov	r2, r7
 26031 01c4 D154     		strb	r1, [r2, r3]
3859:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26032              		.loc 1 3859 0
 26033 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 26034 01ca 1A1D     		adds	r2, r3, #4
 26035 01cc 07F5C373 		add	r3, r7, #390
 26036 01d0 0133     		adds	r3, r3, #1
 26037 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26038 01d4 3B46     		mov	r3, r7
 26039 01d6 9954     		strb	r1, [r3, r2]
3860:..\src/command_processing.c **** 
3861:..\src/command_processing.c ****             c = c + 6;
 26040              		.loc 1 3861 0
 26041 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26042 01dc 0633     		adds	r3, r3, #6
 26043 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26044              	.L1017:
3862:..\src/command_processing.c ****         }
3863:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 26045              		.loc 1 3863 0
 26046 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26047 01e6 6E4A     		ldr	r2, .L1032
 26048 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26049 01ea 1946     		mov	r1, r3
 26050 01ec 6D4A     		ldr	r2, .L1032+4
 26051 01ee 0B46     		mov	r3, r1
 26052 01f0 9B00     		lsls	r3, r3, #2
 26053 01f2 0B44     		add	r3, r3, r1
 26054 01f4 1344     		add	r3, r3, r2
 26055 01f6 03F50173 		add	r3, r3, #516
 26056 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26057 01fc 002B     		cmp	r3, #0
 26058 01fe 5DD0     		beq	.L1018
3864:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 26059              		.loc 1 3864 0
 26060 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26061 0204 6849     		ldr	r1, .L1032+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 570


 26062 0206 1346     		mov	r3, r2
 26063 0208 9B00     		lsls	r3, r3, #2
 26064 020a 1344     		add	r3, r3, r2
 26065 020c DB00     		lsls	r3, r3, #3
 26066 020e 0B44     		add	r3, r3, r1
 26067 0210 0E33     		adds	r3, r3, #14
 26068 0212 B3F90030 		ldrsh	r3, [r3]
 26069 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3865:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26070              		.loc 1 3865 0
 26071 021a B7F88C31 		ldrh	r3, [r7, #396]
 26072 021e 0133     		adds	r3, r3, #1
 26073 0220 07F5C372 		add	r2, r7, #390
 26074 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26075 0226 3A46     		mov	r2, r7
 26076 0228 D154     		strb	r1, [r2, r3]
3866:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26077              		.loc 1 3866 0
 26078 022a B7F88C21 		ldrh	r2, [r7, #396]
 26079 022e 07F5C373 		add	r3, r7, #390
 26080 0232 0133     		adds	r3, r3, #1
 26081 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26082 0236 3B46     		mov	r3, r7
 26083 0238 9954     		strb	r1, [r3, r2]
3867:..\src/command_processing.c **** 
3868:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 26084              		.loc 1 3868 0
 26085 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26086 023e 5A49     		ldr	r1, .L1032+8
 26087 0240 1346     		mov	r3, r2
 26088 0242 9B00     		lsls	r3, r3, #2
 26089 0244 1344     		add	r3, r3, r2
 26090 0246 DB00     		lsls	r3, r3, #3
 26091 0248 0B44     		add	r3, r3, r1
 26092 024a 1033     		adds	r3, r3, #16
 26093 024c B3F90030 		ldrsh	r3, [r3]
 26094 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3869:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 26095              		.loc 1 3869 0
 26096 0254 B7F88C31 		ldrh	r3, [r7, #396]
 26097 0258 0333     		adds	r3, r3, #3
 26098 025a 07F5C372 		add	r2, r7, #390
 26099 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26100 0260 3A46     		mov	r2, r7
 26101 0262 D154     		strb	r1, [r2, r3]
3870:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 26102              		.loc 1 3870 0
 26103 0264 B7F88C31 		ldrh	r3, [r7, #396]
 26104 0268 9A1C     		adds	r2, r3, #2
 26105 026a 07F5C373 		add	r3, r7, #390
 26106 026e 0133     		adds	r3, r3, #1
 26107 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26108 0272 3B46     		mov	r3, r7
 26109 0274 9954     		strb	r1, [r3, r2]
3871:..\src/command_processing.c **** 
3872:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 26110              		.loc 1 3872 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 571


 26111 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26112 027a 4B49     		ldr	r1, .L1032+8
 26113 027c 1346     		mov	r3, r2
 26114 027e 9B00     		lsls	r3, r3, #2
 26115 0280 1344     		add	r3, r3, r2
 26116 0282 DB00     		lsls	r3, r3, #3
 26117 0284 0B44     		add	r3, r3, r1
 26118 0286 1233     		adds	r3, r3, #18
 26119 0288 B3F90030 		ldrsh	r3, [r3]
 26120 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3873:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 26121              		.loc 1 3873 0
 26122 0290 B7F88C31 		ldrh	r3, [r7, #396]
 26123 0294 0533     		adds	r3, r3, #5
 26124 0296 07F5C372 		add	r2, r7, #390
 26125 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26126 029c 3A46     		mov	r2, r7
 26127 029e D154     		strb	r1, [r2, r3]
3874:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 26128              		.loc 1 3874 0
 26129 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 26130 02a4 1A1D     		adds	r2, r3, #4
 26131 02a6 07F5C373 		add	r3, r7, #390
 26132 02aa 0133     		adds	r3, r3, #1
 26133 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26134 02ae 3B46     		mov	r3, r7
 26135 02b0 9954     		strb	r1, [r3, r2]
3875:..\src/command_processing.c **** 
3876:..\src/command_processing.c ****             c = c + 6;
 26136              		.loc 1 3876 0
 26137 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26138 02b6 0633     		adds	r3, r3, #6
 26139 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26140              	.L1018:
3877:..\src/command_processing.c ****         }
3878:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 26141              		.loc 1 3878 0
 26142 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26143 02c0 374A     		ldr	r2, .L1032
 26144 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26145 02c4 1946     		mov	r1, r3
 26146 02c6 374A     		ldr	r2, .L1032+4
 26147 02c8 0B46     		mov	r3, r1
 26148 02ca 9B00     		lsls	r3, r3, #2
 26149 02cc 0B44     		add	r3, r3, r1
 26150 02ce 1344     		add	r3, r3, r2
 26151 02d0 03F20523 		addw	r3, r3, #517
 26152 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26153 02d6 002B     		cmp	r3, #0
 26154 02d8 00F0AF80 		beq	.L1019
3879:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 26155              		.loc 1 3879 0
 26156 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26157 02e0 3149     		ldr	r1, .L1032+8
 26158 02e2 1346     		mov	r3, r2
 26159 02e4 9B00     		lsls	r3, r3, #2
 26160 02e6 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 572


 26161 02e8 DB00     		lsls	r3, r3, #3
 26162 02ea 0B44     		add	r3, r3, r1
 26163 02ec 1433     		adds	r3, r3, #20
 26164 02ee 1B68     		ldr	r3, [r3]	@ float
 26165 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3880:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26166              		.loc 1 3880 0
 26167 02f4 0023     		movs	r3, #0
 26168 02f6 87F88B31 		strb	r3, [r7, #395]
 26169 02fa 13E0     		b	.L1020
 26170              	.L1021:
3881:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 26171              		.loc 1 3881 0 discriminator 3
 26172 02fc B7F88C31 		ldrh	r3, [r7, #396]
 26173 0300 1A1D     		adds	r2, r3, #4
 26174 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26175 0306 D31A     		subs	r3, r2, r3
 26176 0308 013B     		subs	r3, r3, #1
 26177 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26178 030e 07F5C071 		add	r1, r7, #384
 26179 0312 0A44     		add	r2, r2, r1
 26180 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26181 0316 3A46     		mov	r2, r7
 26182 0318 D154     		strb	r1, [r2, r3]
3880:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26183              		.loc 1 3880 0 discriminator 3
 26184 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26185 031e 0133     		adds	r3, r3, #1
 26186 0320 87F88B31 		strb	r3, [r7, #395]
 26187              	.L1020:
3880:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26188              		.loc 1 3880 0 is_stmt 0 discriminator 1
 26189 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26190 0328 032B     		cmp	r3, #3
 26191 032a E7D9     		bls	.L1021
3882:..\src/command_processing.c ****             }
3883:..\src/command_processing.c **** 
3884:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 26192              		.loc 1 3884 0 is_stmt 1
 26193 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26194 0330 1D49     		ldr	r1, .L1032+8
 26195 0332 1346     		mov	r3, r2
 26196 0334 9B00     		lsls	r3, r3, #2
 26197 0336 1344     		add	r3, r3, r2
 26198 0338 DB00     		lsls	r3, r3, #3
 26199 033a 0B44     		add	r3, r3, r1
 26200 033c 1833     		adds	r3, r3, #24
 26201 033e 1B68     		ldr	r3, [r3]	@ float
 26202 0340 C7F88031 		str	r3, [r7, #384]	@ float
3885:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26203              		.loc 1 3885 0
 26204 0344 0023     		movs	r3, #0
 26205 0346 87F88B31 		strb	r3, [r7, #395]
 26206 034a 14E0     		b	.L1022
 26207              	.L1023:
3886:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 26208              		.loc 1 3886 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 573


 26209 034c B7F88C31 		ldrh	r3, [r7, #396]
 26210 0350 03F10802 		add	r2, r3, #8
 26211 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26212 0358 D31A     		subs	r3, r2, r3
 26213 035a 013B     		subs	r3, r3, #1
 26214 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26215 0360 07F5C071 		add	r1, r7, #384
 26216 0364 0A44     		add	r2, r2, r1
 26217 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26218 0368 3A46     		mov	r2, r7
 26219 036a D154     		strb	r1, [r2, r3]
3885:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26220              		.loc 1 3885 0 discriminator 3
 26221 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26222 0370 0133     		adds	r3, r3, #1
 26223 0372 87F88B31 		strb	r3, [r7, #395]
 26224              	.L1022:
3885:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26225              		.loc 1 3885 0 is_stmt 0 discriminator 1
 26226 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26227 037a 032B     		cmp	r3, #3
 26228 037c E6D9     		bls	.L1023
3887:..\src/command_processing.c ****             }
3888:..\src/command_processing.c **** 
3889:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 26229              		.loc 1 3889 0 is_stmt 1
 26230 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26231 0382 0949     		ldr	r1, .L1032+8
 26232 0384 1346     		mov	r3, r2
 26233 0386 9B00     		lsls	r3, r3, #2
 26234 0388 1344     		add	r3, r3, r2
 26235 038a DB00     		lsls	r3, r3, #3
 26236 038c 0B44     		add	r3, r3, r1
 26237 038e 1C33     		adds	r3, r3, #28
 26238 0390 1B68     		ldr	r3, [r3]	@ float
 26239 0392 C7F88031 		str	r3, [r7, #384]	@ float
3890:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26240              		.loc 1 3890 0
 26241 0396 0023     		movs	r3, #0
 26242 0398 87F88B31 		strb	r3, [r7, #395]
 26243 039c 1BE0     		b	.L1024
 26244              	.L1033:
 26245 039e 00BF     		.align	2
 26246              	.L1032:
 26247 03a0 00000000 		.word	IMU_connected
 26248 03a4 00000000 		.word	c_mem
 26249 03a8 00000000 		.word	g_imu
 26250              	.L1025:
3891:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 26251              		.loc 1 3891 0 discriminator 3
 26252 03ac B7F88C31 		ldrh	r3, [r7, #396]
 26253 03b0 03F10C02 		add	r2, r3, #12
 26254 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26255 03b8 D31A     		subs	r3, r2, r3
 26256 03ba 013B     		subs	r3, r3, #1
 26257 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26258 03c0 07F5C071 		add	r1, r7, #384
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 574


 26259 03c4 0A44     		add	r2, r2, r1
 26260 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26261 03c8 3A46     		mov	r2, r7
 26262 03ca D154     		strb	r1, [r2, r3]
3890:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26263              		.loc 1 3890 0 discriminator 3
 26264 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26265 03d0 0133     		adds	r3, r3, #1
 26266 03d2 87F88B31 		strb	r3, [r7, #395]
 26267              	.L1024:
3890:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26268              		.loc 1 3890 0 is_stmt 0 discriminator 1
 26269 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26270 03da 032B     		cmp	r3, #3
 26271 03dc E6D9     		bls	.L1025
3892:..\src/command_processing.c ****             }
3893:..\src/command_processing.c **** 
3894:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 26272              		.loc 1 3894 0 is_stmt 1
 26273 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26274 03e2 6749     		ldr	r1, .L1034
 26275 03e4 1346     		mov	r3, r2
 26276 03e6 9B00     		lsls	r3, r3, #2
 26277 03e8 1344     		add	r3, r3, r2
 26278 03ea DB00     		lsls	r3, r3, #3
 26279 03ec 0B44     		add	r3, r3, r1
 26280 03ee 2033     		adds	r3, r3, #32
 26281 03f0 1B68     		ldr	r3, [r3]	@ float
 26282 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3895:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26283              		.loc 1 3895 0
 26284 03f6 0023     		movs	r3, #0
 26285 03f8 87F88B31 		strb	r3, [r7, #395]
 26286 03fc 14E0     		b	.L1026
 26287              	.L1027:
3896:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 26288              		.loc 1 3896 0 discriminator 3
 26289 03fe B7F88C31 		ldrh	r3, [r7, #396]
 26290 0402 03F11002 		add	r2, r3, #16
 26291 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26292 040a D31A     		subs	r3, r2, r3
 26293 040c 013B     		subs	r3, r3, #1
 26294 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26295 0412 07F5C071 		add	r1, r7, #384
 26296 0416 0A44     		add	r2, r2, r1
 26297 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26298 041a 3A46     		mov	r2, r7
 26299 041c D154     		strb	r1, [r2, r3]
3895:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26300              		.loc 1 3895 0 discriminator 3
 26301 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26302 0422 0133     		adds	r3, r3, #1
 26303 0424 87F88B31 		strb	r3, [r7, #395]
 26304              	.L1026:
3895:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 26305              		.loc 1 3895 0 is_stmt 0 discriminator 1
 26306 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 575


 26307 042c 032B     		cmp	r3, #3
 26308 042e E6D9     		bls	.L1027
3897:..\src/command_processing.c ****             }
3898:..\src/command_processing.c ****             c = c + 16;
 26309              		.loc 1 3898 0 is_stmt 1
 26310 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26311 0434 1033     		adds	r3, r3, #16
 26312 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26313              	.L1019:
3899:..\src/command_processing.c ****         }
3900:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 26314              		.loc 1 3900 0
 26315 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26316 043e 514A     		ldr	r2, .L1034+4
 26317 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26318 0442 1946     		mov	r1, r3
 26319 0444 504A     		ldr	r2, .L1034+8
 26320 0446 0B46     		mov	r3, r1
 26321 0448 9B00     		lsls	r3, r3, #2
 26322 044a 0B44     		add	r3, r3, r1
 26323 044c 1344     		add	r3, r3, r2
 26324 044e 03F20623 		addw	r3, r3, #518
 26325 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26326 0454 002B     		cmp	r3, #0
 26327 0456 21D0     		beq	.L1028
3901:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 26328              		.loc 1 3901 0
 26329 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26330 045c 4849     		ldr	r1, .L1034
 26331 045e 1346     		mov	r3, r2
 26332 0460 9B00     		lsls	r3, r3, #2
 26333 0462 1344     		add	r3, r3, r2
 26334 0464 DB00     		lsls	r3, r3, #3
 26335 0466 0B44     		add	r3, r3, r1
 26336 0468 2433     		adds	r3, r3, #36
 26337 046a B3F90030 		ldrsh	r3, [r3]
 26338 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3902:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 26339              		.loc 1 3902 0
 26340 0472 B7F88C31 		ldrh	r3, [r7, #396]
 26341 0476 0133     		adds	r3, r3, #1
 26342 0478 07F5C372 		add	r2, r7, #390
 26343 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 26344 047e 3A46     		mov	r2, r7
 26345 0480 D154     		strb	r1, [r2, r3]
3903:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 26346              		.loc 1 3903 0
 26347 0482 B7F88C21 		ldrh	r2, [r7, #396]
 26348 0486 07F5C373 		add	r3, r7, #390
 26349 048a 0133     		adds	r3, r3, #1
 26350 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26351 048e 3B46     		mov	r3, r7
 26352 0490 9954     		strb	r1, [r3, r2]
3904:..\src/command_processing.c ****             c = c + 2;
 26353              		.loc 1 3904 0
 26354 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 26355 0496 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 576


 26356 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 26357              	.L1028:
3905:..\src/command_processing.c ****         }
3906:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 26358              		.loc 1 3906 0
 26359 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26360 04a0 384A     		ldr	r2, .L1034+4
 26361 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26362 04a4 1A46     		mov	r2, r3
 26363 04a6 394B     		ldr	r3, .L1034+12
 26364 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26365 04ac 013B     		subs	r3, r3, #1
 26366 04ae 3A46     		mov	r2, r7
 26367 04b0 3A21     		movs	r1, #58
 26368 04b2 D154     		strb	r1, [r2, r3]
3907:..\src/command_processing.c ****         c = 1;
 26369              		.loc 1 3907 0
 26370 04b4 0123     		movs	r3, #1
 26371 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3908:..\src/command_processing.c ****                
3909:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 26372              		.loc 1 3909 0
 26373 04ba 0023     		movs	r3, #0
 26374 04bc 87F88B31 		strb	r3, [r7, #395]
 26375 04c0 10E0     		b	.L1029
 26376              	.L1030:
3910:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26377              		.loc 1 3910 0 discriminator 3
 26378 04c2 B7F88821 		ldrh	r2, [r7, #392]
 26379 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26380 04ca 1344     		add	r3, r3, r2
 26381 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26382 04d0 3946     		mov	r1, r7
 26383 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 26384 04d4 07F12002 		add	r2, r7, #32
 26385 04d8 D154     		strb	r1, [r2, r3]
3909:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26386              		.loc 1 3909 0 discriminator 3
 26387 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 26388 04de 0133     		adds	r3, r3, #1
 26389 04e0 87F88B31 		strb	r3, [r7, #395]
 26390              	.L1029:
3909:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 26391              		.loc 1 3909 0 is_stmt 0 discriminator 1
 26392 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 26393 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26394 04ec 2549     		ldr	r1, .L1034+4
 26395 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 26396 04f0 1946     		mov	r1, r3
 26397 04f2 264B     		ldr	r3, .L1034+12
 26398 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 26399 04f8 9A42     		cmp	r2, r3
 26400 04fa E2DB     		blt	.L1030
3911:..\src/command_processing.c ****         }
3912:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 26401              		.loc 1 3912 0 is_stmt 1 discriminator 2
 26402 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 577


 26403 0500 204A     		ldr	r2, .L1034+4
 26404 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26405 0504 1A46     		mov	r2, r3
 26406 0506 214B     		ldr	r3, .L1034+12
 26407 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 26408 050c 9AB2     		uxth	r2, r3
 26409 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 26410 0512 1344     		add	r3, r3, r2
 26411 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3913:..\src/command_processing.c ****         
3914:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 26412              		.loc 1 3914 0 discriminator 2
 26413 0518 3B46     		mov	r3, r7
 26414 051a 2022     		movs	r2, #32
 26415 051c 0021     		movs	r1, #0
 26416 051e 1846     		mov	r0, r3
 26417 0520 FFF7FEFF 		bl	memset
3829:..\src/command_processing.c ****     {	
 26418              		.loc 1 3829 0 discriminator 2
 26419 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 26420 0528 0133     		adds	r3, r3, #1
 26421 052a 87F88F31 		strb	r3, [r7, #399]
 26422              	.L1015:
3829:..\src/command_processing.c ****     {	
 26423              		.loc 1 3829 0 is_stmt 0 discriminator 1
 26424 052e 184B     		ldr	r3, .L1034+16
 26425 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26426 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 26427 0536 9A42     		cmp	r2, r3
 26428 0538 FFF476AD 		bcc	.L1031
3915:..\src/command_processing.c ****         
3916:..\src/command_processing.c ****     }
3917:..\src/command_processing.c **** 
3918:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3919:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 26429              		.loc 1 3919 0 is_stmt 1
 26430 053c 154B     		ldr	r3, .L1034+20
 26431 053e 1B68     		ldr	r3, [r3]
 26432 0540 5C1E     		subs	r4, r3, #1
 26433 0542 144B     		ldr	r3, .L1034+20
 26434 0544 1B68     		ldr	r3, [r3]
 26435 0546 DBB2     		uxtb	r3, r3
 26436 0548 013B     		subs	r3, r3, #1
 26437 054a DAB2     		uxtb	r2, r3
 26438 054c 07F12003 		add	r3, r7, #32
 26439 0550 1146     		mov	r1, r2
 26440 0552 1846     		mov	r0, r3
 26441 0554 FFF7FEFF 		bl	LCRChecksum
 26442 0558 0346     		mov	r3, r0
 26443 055a 1A46     		mov	r2, r3
 26444 055c 07F12003 		add	r3, r7, #32
 26445 0560 1A55     		strb	r2, [r3, r4]
3920:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 26446              		.loc 1 3920 0
 26447 0562 0C4B     		ldr	r3, .L1034+20
 26448 0564 1B68     		ldr	r3, [r3]
 26449 0566 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 578


 26450 0568 07F12003 		add	r3, r7, #32
 26451 056c 1146     		mov	r1, r2
 26452 056e 1846     		mov	r0, r3
 26453 0570 FFF7FEFF 		bl	commWrite
3921:..\src/command_processing.c **** }
 26454              		.loc 1 3921 0
 26455 0574 00BF     		nop
 26456 0576 07F5CA77 		add	r7, r7, #404
 26457              		.cfi_def_cfa_offset 12
 26458 057a BD46     		mov	sp, r7
 26459              		.cfi_def_cfa_register 13
 26460              		@ sp needed
 26461 057c 90BD     		pop	{r4, r7, pc}
 26462              	.L1035:
 26463 057e 00BF     		.align	2
 26464              	.L1034:
 26465 0580 00000000 		.word	g_imu
 26466 0584 00000000 		.word	IMU_connected
 26467 0588 00000000 		.word	c_mem
 26468 058c 00000000 		.word	single_imu_size
 26469 0590 00000000 		.word	N_IMU_Connected
 26470 0594 00000000 		.word	imus_data_size
 26471              		.cfi_endproc
 26472              	.LFE109:
 26473              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 26474              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 26475              		.align	2
 26476              		.global	cmd_get_encoder_map
 26477              		.thumb
 26478              		.thumb_func
 26479              		.type	cmd_get_encoder_map, %function
 26480              	cmd_get_encoder_map:
 26481              	.LFB110:
3922:..\src/command_processing.c **** 
3923:..\src/command_processing.c **** void cmd_get_encoder_map(){
 26482              		.loc 1 3923 0
 26483              		.cfi_startproc
 26484              		@ args = 0, pretend = 0, frame = 16
 26485              		@ frame_needed = 1, uses_anonymous_args = 0
 26486 0000 90B5     		push	{r4, r7, lr}
 26487              		.cfi_def_cfa_offset 12
 26488              		.cfi_offset 4, -12
 26489              		.cfi_offset 7, -8
 26490              		.cfi_offset 14, -4
 26491 0002 85B0     		sub	sp, sp, #20
 26492              		.cfi_def_cfa_offset 32
 26493 0004 00AF     		add	r7, sp, #0
 26494              		.cfi_def_cfa_register 7
3924:..\src/command_processing.c ****     //Retrieve Encoder map
3925:..\src/command_processing.c ****     
3926:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3927:..\src/command_processing.c ****     uint8 CYDATA i, j;
3928:..\src/command_processing.c ****     
3929:..\src/command_processing.c ****     // Header        
3930:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 26495              		.loc 1 3930 0
 26496 0006 A323     		movs	r3, #163
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 579


 26497 0008 3B70     		strb	r3, [r7]
3931:..\src/command_processing.c ****     
3932:..\src/command_processing.c ****     // Fill payload
3933:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 26498              		.loc 1 3933 0
 26499 000a 0223     		movs	r3, #2
 26500 000c 7B70     		strb	r3, [r7, #1]
3934:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 26501              		.loc 1 3934 0
 26502 000e 0523     		movs	r3, #5
 26503 0010 BB70     		strb	r3, [r7, #2]
3935:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26504              		.loc 1 3935 0
 26505 0012 0023     		movs	r3, #0
 26506 0014 FB73     		strb	r3, [r7, #15]
 26507 0016 23E0     		b	.L1037
 26508              	.L1040:
3936:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26509              		.loc 1 3936 0
 26510 0018 0023     		movs	r3, #0
 26511 001a BB73     		strb	r3, [r7, #14]
 26512 001c 1AE0     		b	.L1038
 26513              	.L1039:
3937:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 26514              		.loc 1 3937 0 discriminator 3
 26515 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26516 0020 1346     		mov	r3, r2
 26517 0022 9B00     		lsls	r3, r3, #2
 26518 0024 1344     		add	r3, r3, r2
 26519 0026 DA1C     		adds	r2, r3, #3
 26520 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26521 002a D118     		adds	r1, r2, r3
 26522 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26523 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 26524 0030 154C     		ldr	r4, .L1041
 26525 0032 1346     		mov	r3, r2
 26526 0034 5B00     		lsls	r3, r3, #1
 26527 0036 1344     		add	r3, r3, r2
 26528 0038 1B01     		lsls	r3, r3, #4
 26529 003a 2344     		add	r3, r3, r4
 26530 003c 0344     		add	r3, r3, r0
 26531 003e 03F5C873 		add	r3, r3, #400
 26532 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 26533 0044 07F11003 		add	r3, r7, #16
 26534 0048 0B44     		add	r3, r3, r1
 26535 004a 03F8102C 		strb	r2, [r3, #-16]
3936:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26536              		.loc 1 3936 0 discriminator 3
 26537 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26538 0050 0133     		adds	r3, r3, #1
 26539 0052 BB73     		strb	r3, [r7, #14]
 26540              	.L1038:
3936:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 26541              		.loc 1 3936 0 is_stmt 0 discriminator 1
 26542 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 26543 0056 042B     		cmp	r3, #4
 26544 0058 E1D9     		bls	.L1039
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 580


3935:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26545              		.loc 1 3935 0 is_stmt 1 discriminator 2
 26546 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26547 005c 0133     		adds	r3, r3, #1
 26548 005e FB73     		strb	r3, [r7, #15]
 26549              	.L1037:
3935:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26550              		.loc 1 3935 0 is_stmt 0 discriminator 1
 26551 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26552 0062 012B     		cmp	r3, #1
 26553 0064 D8D9     		bls	.L1040
3938:..\src/command_processing.c ****         }
3939:..\src/command_processing.c ****     }
3940:..\src/command_processing.c ****     
3941:..\src/command_processing.c ****     // Calculate checksum
3942:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 26554              		.loc 1 3942 0 is_stmt 1
 26555 0066 3B46     		mov	r3, r7
 26556 0068 0D21     		movs	r1, #13
 26557 006a 1846     		mov	r0, r3
 26558 006c FFF7FEFF 		bl	LCRChecksum
 26559 0070 0346     		mov	r3, r0
 26560 0072 7B73     		strb	r3, [r7, #13]
3943:..\src/command_processing.c ****     
3944:..\src/command_processing.c ****     // Send package to UART
3945:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 26561              		.loc 1 3945 0
 26562 0074 3B46     		mov	r3, r7
 26563 0076 0E21     		movs	r1, #14
 26564 0078 1846     		mov	r0, r3
 26565 007a FFF7FEFF 		bl	commWrite
3946:..\src/command_processing.c **** }
 26566              		.loc 1 3946 0
 26567 007e 00BF     		nop
 26568 0080 1437     		adds	r7, r7, #20
 26569              		.cfi_def_cfa_offset 12
 26570 0082 BD46     		mov	sp, r7
 26571              		.cfi_def_cfa_register 13
 26572              		@ sp needed
 26573 0084 90BD     		pop	{r4, r7, pc}
 26574              	.L1042:
 26575 0086 00BF     		.align	2
 26576              	.L1041:
 26577 0088 00000000 		.word	c_mem
 26578              		.cfi_endproc
 26579              	.LFE110:
 26580              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 26581              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 26582              		.align	2
 26583              		.global	cmd_get_encoder_raw
 26584              		.thumb
 26585              		.thumb_func
 26586              		.type	cmd_get_encoder_raw, %function
 26587              	cmd_get_encoder_raw:
 26588              	.LFB111:
3947:..\src/command_processing.c **** 
3948:..\src/command_processing.c **** void cmd_get_encoder_raw(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 581


 26589              		.loc 1 3948 0
 26590              		.cfi_startproc
 26591              		@ args = 0, pretend = 0, frame = 32
 26592              		@ frame_needed = 1, uses_anonymous_args = 0
 26593 0000 90B5     		push	{r4, r7, lr}
 26594              		.cfi_def_cfa_offset 12
 26595              		.cfi_offset 4, -12
 26596              		.cfi_offset 7, -8
 26597              		.cfi_offset 14, -4
 26598 0002 89B0     		sub	sp, sp, #36
 26599              		.cfi_def_cfa_offset 48
 26600 0004 00AF     		add	r7, sp, #0
 26601              		.cfi_def_cfa_register 7
3949:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3950:..\src/command_processing.c ****     
3951:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3952:..\src/command_processing.c ****     uint8 i, j, idx;
3953:..\src/command_processing.c ****     uint16 aux_uint16;
3954:..\src/command_processing.c ****     
3955:..\src/command_processing.c ****     //Header package 
3956:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 26602              		.loc 1 3956 0
 26603 0006 A423     		movs	r3, #164
 26604 0008 3B71     		strb	r3, [r7, #4]
3957:..\src/command_processing.c ****  
3958:..\src/command_processing.c ****     // Fill payload
3959:..\src/command_processing.c ****     idx = 0;
 26605              		.loc 1 3959 0
 26606 000a 0023     		movs	r3, #0
 26607 000c 7B77     		strb	r3, [r7, #29]
3960:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 26608              		.loc 1 3960 0
 26609 000e 0023     		movs	r3, #0
 26610 0010 FB77     		strb	r3, [r7, #31]
 26611 0012 3FE0     		b	.L1044
 26612              	.L1048:
3961:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26613              		.loc 1 3961 0
 26614 0014 0023     		movs	r3, #0
 26615 0016 BB77     		strb	r3, [r7, #30]
 26616 0018 33E0     		b	.L1045
 26617              	.L1047:
3962:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26618              		.loc 1 3962 0
 26619 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26620 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26621 001e 3048     		ldr	r0, .L1049
 26622 0020 1346     		mov	r3, r2
 26623 0022 5B00     		lsls	r3, r3, #1
 26624 0024 1344     		add	r3, r3, r2
 26625 0026 1B01     		lsls	r3, r3, #4
 26626 0028 0344     		add	r3, r3, r0
 26627 002a 0B44     		add	r3, r3, r1
 26628 002c 03F5C873 		add	r3, r3, #400
 26629 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26630 0032 012B     		cmp	r3, #1
 26631 0034 22D1     		bne	.L1046
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 582


3963:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 26632              		.loc 1 3963 0
 26633 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26634 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 26635 003a 2A48     		ldr	r0, .L1049+4
 26636 003c 1346     		mov	r3, r2
 26637 003e 9B00     		lsls	r3, r3, #2
 26638 0040 1344     		add	r3, r3, r2
 26639 0042 0B44     		add	r3, r3, r1
 26640 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 26641 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3964:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 26642              		.loc 1 3964 0
 26643 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26644 004c 5B00     		lsls	r3, r3, #1
 26645 004e 0233     		adds	r3, r3, #2
 26646 0050 BA1C     		adds	r2, r7, #2
 26647 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26648 0054 07F12001 		add	r1, r7, #32
 26649 0058 0B44     		add	r3, r3, r1
 26650 005a 03F81C2C 		strb	r2, [r3, #-28]
3965:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 26651              		.loc 1 3965 0
 26652 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26653 0060 5B00     		lsls	r3, r3, #1
 26654 0062 5A1C     		adds	r2, r3, #1
 26655 0064 BB1C     		adds	r3, r7, #2
 26656 0066 0133     		adds	r3, r3, #1
 26657 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26658 006a 07F12003 		add	r3, r7, #32
 26659 006e 1344     		add	r3, r3, r2
 26660 0070 0A46     		mov	r2, r1
 26661 0072 03F81C2C 		strb	r2, [r3, #-28]
3966:..\src/command_processing.c ****                 idx++;
 26662              		.loc 1 3966 0
 26663 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26664 0078 0133     		adds	r3, r3, #1
 26665 007a 7B77     		strb	r3, [r7, #29]
 26666              	.L1046:
3961:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26667              		.loc 1 3961 0 discriminator 2
 26668 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26669 007e 0133     		adds	r3, r3, #1
 26670 0080 BB77     		strb	r3, [r7, #30]
 26671              	.L1045:
3961:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 26672              		.loc 1 3961 0 is_stmt 0 discriminator 1
 26673 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26674 0084 184A     		ldr	r2, .L1049+8
 26675 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 26676 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 26677 008a 9A42     		cmp	r2, r3
 26678 008c C5D3     		bcc	.L1047
3960:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26679              		.loc 1 3960 0 is_stmt 1 discriminator 2
 26680 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26681 0090 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 583


 26682 0092 FB77     		strb	r3, [r7, #31]
 26683              	.L1044:
3960:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 26684              		.loc 1 3960 0 is_stmt 0 discriminator 1
 26685 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26686 0096 012B     		cmp	r3, #1
 26687 0098 BCD9     		bls	.L1048
3967:..\src/command_processing.c ****             }
3968:..\src/command_processing.c ****         }
3969:..\src/command_processing.c ****     }
3970:..\src/command_processing.c **** 
3971:..\src/command_processing.c ****     // Calculate checksum
3972:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26688              		.loc 1 3972 0 is_stmt 1
 26689 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26690 009c 5B00     		lsls	r3, r3, #1
 26691 009e 5C1C     		adds	r4, r3, #1
 26692 00a0 7B7F     		ldrb	r3, [r7, #29]
 26693 00a2 5B00     		lsls	r3, r3, #1
 26694 00a4 DBB2     		uxtb	r3, r3
 26695 00a6 0133     		adds	r3, r3, #1
 26696 00a8 DAB2     		uxtb	r2, r3
 26697 00aa 3B1D     		adds	r3, r7, #4
 26698 00ac 1146     		mov	r1, r2
 26699 00ae 1846     		mov	r0, r3
 26700 00b0 FFF7FEFF 		bl	LCRChecksum
 26701 00b4 0346     		mov	r3, r0
 26702 00b6 1A46     		mov	r2, r3
 26703 00b8 07F12003 		add	r3, r7, #32
 26704 00bc 2344     		add	r3, r3, r4
 26705 00be 03F81C2C 		strb	r2, [r3, #-28]
3973:..\src/command_processing.c ****     
3974:..\src/command_processing.c ****     // Send package to UART
3975:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26706              		.loc 1 3975 0
 26707 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 26708 00c4 0133     		adds	r3, r3, #1
 26709 00c6 9BB2     		uxth	r3, r3
 26710 00c8 5B00     		lsls	r3, r3, #1
 26711 00ca 9AB2     		uxth	r2, r3
 26712 00cc 3B1D     		adds	r3, r7, #4
 26713 00ce 1146     		mov	r1, r2
 26714 00d0 1846     		mov	r0, r3
 26715 00d2 FFF7FEFF 		bl	commWrite
3976:..\src/command_processing.c **** }
 26716              		.loc 1 3976 0
 26717 00d6 00BF     		nop
 26718 00d8 2437     		adds	r7, r7, #36
 26719              		.cfi_def_cfa_offset 12
 26720 00da BD46     		mov	sp, r7
 26721              		.cfi_def_cfa_register 13
 26722              		@ sp needed
 26723 00dc 90BD     		pop	{r4, r7, pc}
 26724              	.L1050:
 26725 00de 00BF     		.align	2
 26726              	.L1049:
 26727 00e0 00000000 		.word	c_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 584


 26728 00e4 00000000 		.word	Encoder_Value
 26729 00e8 00000000 		.word	N_Encoder_Line_Connected
 26730              		.cfi_endproc
 26731              	.LFE111:
 26732              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 26733              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 26734              		.align	2
 26735              		.global	cmd_get_ADC_map
 26736              		.thumb
 26737              		.thumb_func
 26738              		.type	cmd_get_ADC_map, %function
 26739              	cmd_get_ADC_map:
 26740              	.LFB112:
3977:..\src/command_processing.c **** 
3978:..\src/command_processing.c **** void cmd_get_ADC_map(){
 26741              		.loc 1 3978 0
 26742              		.cfi_startproc
 26743              		@ args = 0, pretend = 0, frame = 16
 26744              		@ frame_needed = 1, uses_anonymous_args = 0
 26745 0000 80B5     		push	{r7, lr}
 26746              		.cfi_def_cfa_offset 8
 26747              		.cfi_offset 7, -8
 26748              		.cfi_offset 14, -4
 26749 0002 84B0     		sub	sp, sp, #16
 26750              		.cfi_def_cfa_offset 24
 26751 0004 00AF     		add	r7, sp, #0
 26752              		.cfi_def_cfa_register 7
3979:..\src/command_processing.c ****     //Retrieve Encoder map
3980:..\src/command_processing.c ****     
3981:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3982:..\src/command_processing.c ****     uint8 CYDATA i;
3983:..\src/command_processing.c ****     
3984:..\src/command_processing.c ****     // Header        
3985:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 26753              		.loc 1 3985 0
 26754 0006 A523     		movs	r3, #165
 26755 0008 3B70     		strb	r3, [r7]
3986:..\src/command_processing.c ****     
3987:..\src/command_processing.c ****     // Fill payload
3988:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 26756              		.loc 1 3988 0
 26757 000a 0C23     		movs	r3, #12
 26758 000c 7B70     		strb	r3, [r7, #1]
3989:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26759              		.loc 1 3989 0
 26760 000e 0023     		movs	r3, #0
 26761 0010 FB73     		strb	r3, [r7, #15]
 26762 0012 0EE0     		b	.L1052
 26763              	.L1053:
3990:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 26764              		.loc 1 3990 0 discriminator 3
 26765 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26766 0016 0233     		adds	r3, r3, #2
 26767 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 26768 001a 0F49     		ldr	r1, .L1054
 26769 001c 0A44     		add	r2, r2, r1
 26770 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 585


 26771 0022 07F11001 		add	r1, r7, #16
 26772 0026 0B44     		add	r3, r3, r1
 26773 0028 03F8102C 		strb	r2, [r3, #-16]
3989:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26774              		.loc 1 3989 0 discriminator 3
 26775 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26776 002e 0133     		adds	r3, r3, #1
 26777 0030 FB73     		strb	r3, [r7, #15]
 26778              	.L1052:
3989:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 26779              		.loc 1 3989 0 is_stmt 0 discriminator 1
 26780 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 26781 0034 0B2B     		cmp	r3, #11
 26782 0036 EDD9     		bls	.L1053
3991:..\src/command_processing.c ****     }
3992:..\src/command_processing.c ****     
3993:..\src/command_processing.c ****     // Calculate checksum
3994:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 26783              		.loc 1 3994 0 is_stmt 1
 26784 0038 3B46     		mov	r3, r7
 26785 003a 0E21     		movs	r1, #14
 26786 003c 1846     		mov	r0, r3
 26787 003e FFF7FEFF 		bl	LCRChecksum
 26788 0042 0346     		mov	r3, r0
 26789 0044 BB73     		strb	r3, [r7, #14]
3995:..\src/command_processing.c ****     
3996:..\src/command_processing.c ****     // Send package to UART
3997:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 26790              		.loc 1 3997 0
 26791 0046 3B46     		mov	r3, r7
 26792 0048 0F21     		movs	r1, #15
 26793 004a 1846     		mov	r0, r3
 26794 004c FFF7FEFF 		bl	commWrite
3998:..\src/command_processing.c ****     
3999:..\src/command_processing.c **** }
 26795              		.loc 1 3999 0
 26796 0050 00BF     		nop
 26797 0052 1037     		adds	r7, r7, #16
 26798              		.cfi_def_cfa_offset 8
 26799 0054 BD46     		mov	sp, r7
 26800              		.cfi_def_cfa_register 13
 26801              		@ sp needed
 26802 0056 80BD     		pop	{r7, pc}
 26803              	.L1055:
 26804              		.align	2
 26805              	.L1054:
 26806 0058 00000000 		.word	c_mem
 26807              		.cfi_endproc
 26808              	.LFE112:
 26809              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 26810              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 26811              		.align	2
 26812              		.global	cmd_get_ADC_raw
 26813              		.thumb
 26814              		.thumb_func
 26815              		.type	cmd_get_ADC_raw, %function
 26816              	cmd_get_ADC_raw:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 586


 26817              	.LFB113:
4000:..\src/command_processing.c **** 
4001:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 26818              		.loc 1 4001 0
 26819              		.cfi_startproc
 26820              		@ args = 0, pretend = 0, frame = 32
 26821              		@ frame_needed = 1, uses_anonymous_args = 0
 26822 0000 90B5     		push	{r4, r7, lr}
 26823              		.cfi_def_cfa_offset 12
 26824              		.cfi_offset 4, -12
 26825              		.cfi_offset 7, -8
 26826              		.cfi_offset 14, -4
 26827 0002 89B0     		sub	sp, sp, #36
 26828              		.cfi_def_cfa_offset 48
 26829 0004 00AF     		add	r7, sp, #0
 26830              		.cfi_def_cfa_register 7
4002:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
4003:..\src/command_processing.c ****     
4004:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
4005:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 26831              		.loc 1 4005 0
 26832 0006 0023     		movs	r3, #0
 26833 0008 BB77     		strb	r3, [r7, #30]
4006:..\src/command_processing.c ****     int16 aux_int16;
4007:..\src/command_processing.c ****     
4008:..\src/command_processing.c ****     // Header        
4009:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 26834              		.loc 1 4009 0
 26835 000a A623     		movs	r3, #166
 26836 000c 3B71     		strb	r3, [r7, #4]
4010:..\src/command_processing.c ****     
4011:..\src/command_processing.c ****     // Fill payload
4012:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 26837              		.loc 1 4012 0
 26838 000e 0023     		movs	r3, #0
 26839 0010 FB77     		strb	r3, [r7, #31]
 26840 0012 27E0     		b	.L1057
 26841              	.L1059:
4013:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26842              		.loc 1 4013 0
 26843 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26844 0016 274A     		ldr	r2, .L1060
 26845 0018 1344     		add	r3, r3, r2
 26846 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 26847 001e 012B     		cmp	r3, #1
 26848 0020 1DD1     		bne	.L1058
4014:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 26849              		.loc 1 4014 0
 26850 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26851 0024 244A     		ldr	r2, .L1060+4
 26852 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 26853 002a 7B80     		strh	r3, [r7, #2]	@ movhi
4015:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 26854              		.loc 1 4015 0
 26855 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26856 002e 5B00     		lsls	r3, r3, #1
 26857 0030 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 587


 26858 0032 BA1C     		adds	r2, r7, #2
 26859 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 26860 0036 07F12001 		add	r1, r7, #32
 26861 003a 0B44     		add	r3, r3, r1
 26862 003c 03F81C2C 		strb	r2, [r3, #-28]
4016:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 26863              		.loc 1 4016 0
 26864 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26865 0042 5B00     		lsls	r3, r3, #1
 26866 0044 5A1C     		adds	r2, r3, #1
 26867 0046 BB1C     		adds	r3, r7, #2
 26868 0048 0133     		adds	r3, r3, #1
 26869 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 26870 004c 07F12003 		add	r3, r7, #32
 26871 0050 1344     		add	r3, r3, r2
 26872 0052 0A46     		mov	r2, r1
 26873 0054 03F81C2C 		strb	r2, [r3, #-28]
4017:..\src/command_processing.c ****             idx++;
 26874              		.loc 1 4017 0
 26875 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26876 005a 0133     		adds	r3, r3, #1
 26877 005c BB77     		strb	r3, [r7, #30]
 26878              	.L1058:
4012:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26879              		.loc 1 4012 0 discriminator 2
 26880 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 26881 0060 0133     		adds	r3, r3, #1
 26882 0062 FB77     		strb	r3, [r7, #31]
 26883              	.L1057:
4012:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 26884              		.loc 1 4012 0 is_stmt 0 discriminator 1
 26885 0064 154B     		ldr	r3, .L1060+8
 26886 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26887 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 26888 006a 9A42     		cmp	r2, r3
 26889 006c D2D3     		bcc	.L1059
4018:..\src/command_processing.c ****         }
4019:..\src/command_processing.c ****     }
4020:..\src/command_processing.c **** 
4021:..\src/command_processing.c ****     // Calculate checksum
4022:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 26890              		.loc 1 4022 0 is_stmt 1
 26891 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26892 0070 5B00     		lsls	r3, r3, #1
 26893 0072 5C1C     		adds	r4, r3, #1
 26894 0074 BB7F     		ldrb	r3, [r7, #30]
 26895 0076 5B00     		lsls	r3, r3, #1
 26896 0078 DBB2     		uxtb	r3, r3
 26897 007a 0133     		adds	r3, r3, #1
 26898 007c DAB2     		uxtb	r2, r3
 26899 007e 3B1D     		adds	r3, r7, #4
 26900 0080 1146     		mov	r1, r2
 26901 0082 1846     		mov	r0, r3
 26902 0084 FFF7FEFF 		bl	LCRChecksum
 26903 0088 0346     		mov	r3, r0
 26904 008a 1A46     		mov	r2, r3
 26905 008c 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 588


 26906 0090 2344     		add	r3, r3, r4
 26907 0092 03F81C2C 		strb	r2, [r3, #-28]
4023:..\src/command_processing.c ****     
4024:..\src/command_processing.c ****     // Send package to UART
4025:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 26908              		.loc 1 4025 0
 26909 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 26910 0098 0133     		adds	r3, r3, #1
 26911 009a 9BB2     		uxth	r3, r3
 26912 009c 5B00     		lsls	r3, r3, #1
 26913 009e 9AB2     		uxth	r2, r3
 26914 00a0 3B1D     		adds	r3, r7, #4
 26915 00a2 1146     		mov	r1, r2
 26916 00a4 1846     		mov	r0, r3
 26917 00a6 FFF7FEFF 		bl	commWrite
4026:..\src/command_processing.c **** }
 26918              		.loc 1 4026 0
 26919 00aa 00BF     		nop
 26920 00ac 2437     		adds	r7, r7, #36
 26921              		.cfi_def_cfa_offset 12
 26922 00ae BD46     		mov	sp, r7
 26923              		.cfi_def_cfa_register 13
 26924              		@ sp needed
 26925 00b0 90BD     		pop	{r4, r7, pc}
 26926              	.L1061:
 26927 00b2 00BF     		.align	2
 26928              	.L1060:
 26929 00b4 00000000 		.word	c_mem
 26930 00b8 00000000 		.word	ADC_buf
 26931 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 26932              		.cfi_endproc
 26933              	.LFE113:
 26934              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 26935              		.section	.rodata
 26936 1fef 00       		.align	2
 26937              	.LC310:
 26938 1ff0 00       		.ascii	"\000"
 26939              		.section	.text.cmd_get_SD_file,"ax",%progbits
 26940              		.align	2
 26941              		.global	cmd_get_SD_file
 26942              		.thumb
 26943              		.thumb_func
 26944              		.type	cmd_get_SD_file, %function
 26945              	cmd_get_SD_file:
 26946              	.LFB114:
4027:..\src/command_processing.c **** 
4028:..\src/command_processing.c **** void cmd_get_SD_file( uint16 filename_length ){
 26947              		.loc 1 4028 0
 26948              		.cfi_startproc
 26949              		@ args = 0, pretend = 0, frame = 20064
 26950              		@ frame_needed = 1, uses_anonymous_args = 0
 26951 0000 80B5     		push	{r7, lr}
 26952              		.cfi_def_cfa_offset 8
 26953              		.cfi_offset 7, -8
 26954              		.cfi_offset 14, -4
 26955 0002 ADF59C4D 		sub	sp, sp, #19968
 26956              		.cfi_def_cfa_offset 19976
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 589


 26957 0006 98B0     		sub	sp, sp, #96
 26958              		.cfi_def_cfa_offset 20072
 26959 0008 00AF     		add	r7, sp, #0
 26960              		.cfi_def_cfa_register 7
 26961 000a 0246     		mov	r2, r0
 26962 000c 07F16003 		add	r3, r7, #96
 26963 0010 5A3B     		subs	r3, r3, #90
 26964 0012 1A80     		strh	r2, [r3]	@ movhi
4029:..\src/command_processing.c ****     
4030:..\src/command_processing.c ****     uint8 i = 0;
 26965              		.loc 1 4030 0
 26966 0014 0023     		movs	r3, #0
 26967 0016 07F59C42 		add	r2, r7, #19968
 26968 001a 02F15F02 		add	r2, r2, #95
 26969 001e 1370     		strb	r3, [r2]
4031:..\src/command_processing.c ****     char CYDATA filename[50] = "";
 26970              		.loc 1 4031 0
 26971 0020 0023     		movs	r3, #0
 26972 0022 07F59C42 		add	r2, r7, #19968
 26973 0026 02F12C02 		add	r2, r2, #44
 26974 002a 1360     		str	r3, [r2]
 26975 002c 07F59C43 		add	r3, r7, #19968
 26976 0030 03F13003 		add	r3, r3, #48
 26977 0034 2E22     		movs	r2, #46
 26978 0036 0021     		movs	r1, #0
 26979 0038 1846     		mov	r0, r3
 26980 003a FFF7FEFF 		bl	memset
4032:..\src/command_processing.c ****     char CYDATA str_sd_data[20000] = "";
 26981              		.loc 1 4032 0
 26982 003e 07F16003 		add	r3, r7, #96
 26983 0042 543B     		subs	r3, r3, #84
 26984 0044 0022     		movs	r2, #0
 26985 0046 1A60     		str	r2, [r3]
 26986 0048 0433     		adds	r3, r3, #4
 26987 004a 44F61C62 		movw	r2, #19996
 26988 004e 0021     		movs	r1, #0
 26989 0050 1846     		mov	r0, r3
 26990 0052 FFF7FEFF 		bl	memset
4033:..\src/command_processing.c ****     strcpy(filename, "");
 26991              		.loc 1 4033 0
 26992 0056 3C4B     		ldr	r3, .L1067
 26993 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 26994 005a 07F59C42 		add	r2, r7, #19968
 26995 005e 02F12C02 		add	r2, r2, #44
 26996 0062 1370     		strb	r3, [r2]
4034:..\src/command_processing.c ****     strcpy(str_sd_data, "");
 26997              		.loc 1 4034 0
 26998 0064 384B     		ldr	r3, .L1067
 26999 0066 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 27000 0068 07F16003 		add	r3, r7, #96
 27001 006c 543B     		subs	r3, r3, #84
 27002 006e 1A70     		strb	r2, [r3]
4035:..\src/command_processing.c ****     
4036:..\src/command_processing.c ****     for (i=0; i<filename_length; i++){
 27003              		.loc 1 4036 0
 27004 0070 0023     		movs	r3, #0
 27005 0072 07F59C42 		add	r2, r7, #19968
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 590


 27006 0076 02F15F02 		add	r2, r2, #95
 27007 007a 1370     		strb	r3, [r2]
 27008 007c 1DE0     		b	.L1063
 27009              	.L1064:
4037:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27010              		.loc 1 4037 0 discriminator 3
 27011 007e 07F59C43 		add	r3, r7, #19968
 27012 0082 03F15F03 		add	r3, r3, #95
 27013 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27014 0088 07F59C42 		add	r2, r7, #19968
 27015 008c 02F12C02 		add	r2, r2, #44
 27016 0090 1344     		add	r3, r3, r2
 27017 0092 07F59C42 		add	r2, r7, #19968
 27018 0096 02F15F02 		add	r2, r2, #95
 27019 009a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 27020 009c 0332     		adds	r2, r2, #3
 27021 009e 2B49     		ldr	r1, .L1067+4
 27022 00a0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 27023 00a2 1A70     		strb	r2, [r3]
4036:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27024              		.loc 1 4036 0 discriminator 3
 27025 00a4 07F59C43 		add	r3, r7, #19968
 27026 00a8 03F15F03 		add	r3, r3, #95
 27027 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27028 00ae 0133     		adds	r3, r3, #1
 27029 00b0 07F59C42 		add	r2, r7, #19968
 27030 00b4 02F15F02 		add	r2, r2, #95
 27031 00b8 1370     		strb	r3, [r2]
 27032              	.L1063:
4036:..\src/command_processing.c ****         *((uint8*)filename + i) = (char)g_rx.buffer[3+i];
 27033              		.loc 1 4036 0 is_stmt 0 discriminator 1
 27034 00ba 07F59C43 		add	r3, r7, #19968
 27035 00be 03F15F03 		add	r3, r3, #95
 27036 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27037 00c4 9AB2     		uxth	r2, r3
 27038 00c6 07F16003 		add	r3, r7, #96
 27039 00ca 5A3B     		subs	r3, r3, #90
 27040 00cc 1B88     		ldrh	r3, [r3]
 27041 00ce 9342     		cmp	r3, r2
 27042 00d0 D5D8     		bhi	.L1064
4038:..\src/command_processing.c ****     }
4039:..\src/command_processing.c ****     *((uint8*)filename + i) = '\0';
 27043              		.loc 1 4039 0 is_stmt 1
 27044 00d2 07F59C43 		add	r3, r7, #19968
 27045 00d6 03F15F03 		add	r3, r3, #95
 27046 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27047 00dc 07F59C42 		add	r2, r7, #19968
 27048 00e0 02F12C02 		add	r2, r2, #44
 27049 00e4 1344     		add	r3, r3, r2
 27050 00e6 0022     		movs	r2, #0
 27051 00e8 1A70     		strb	r2, [r3]
4040:..\src/command_processing.c ****      
4041:..\src/command_processing.c ****     // Check if the file is the one currently opened or not
4042:..\src/command_processing.c ****     if (strcmp(filename, sdFile)){
 27052              		.loc 1 4042 0
 27053 00ea 07F59C43 		add	r3, r7, #19968
 27054 00ee 03F12C03 		add	r3, r3, #44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 591


 27055 00f2 1749     		ldr	r1, .L1067+8
 27056 00f4 1846     		mov	r0, r3
 27057 00f6 FFF7FEFF 		bl	strcmp
 27058 00fa 0346     		mov	r3, r0
 27059 00fc 002B     		cmp	r3, #0
 27060 00fe 0CD0     		beq	.L1065
4043:..\src/command_processing.c ****         Read_SD_Closed_File(filename, str_sd_data, sizeof(str_sd_data));
 27061              		.loc 1 4043 0
 27062 0100 07F16003 		add	r3, r7, #96
 27063 0104 543B     		subs	r3, r3, #84
 27064 0106 07F59C40 		add	r0, r7, #19968
 27065 010a 00F12C00 		add	r0, r0, #44
 27066 010e 44F62062 		movw	r2, #20000
 27067 0112 1946     		mov	r1, r3
 27068 0114 FFF7FEFF 		bl	Read_SD_Closed_File
 27069 0118 07E0     		b	.L1066
 27070              	.L1065:
4044:..\src/command_processing.c ****     }
4045:..\src/command_processing.c ****     else {
4046:..\src/command_processing.c ****         //It is the currently open working file
4047:..\src/command_processing.c ****         Read_SD_Current_Data(str_sd_data, sizeof(str_sd_data));
 27071              		.loc 1 4047 0
 27072 011a 07F16003 		add	r3, r7, #96
 27073 011e 543B     		subs	r3, r3, #84
 27074 0120 44F62061 		movw	r1, #20000
 27075 0124 1846     		mov	r0, r3
 27076 0126 FFF7FEFF 		bl	Read_SD_Current_Data
 27077              	.L1066:
4048:..\src/command_processing.c ****     }
4049:..\src/command_processing.c **** 
4050:..\src/command_processing.c ****     //itoa(filename_length, filename, 10);
4051:..\src/command_processing.c ****     // Send the file to API that receives packet as a ping string
4052:..\src/command_processing.c ****     UART_RS485_ClearTxBuffer();
 27078              		.loc 1 4052 0
 27079 012a FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
4053:..\src/command_processing.c ****     UART_RS485_PutString(str_sd_data);
 27080              		.loc 1 4053 0
 27081 012e 07F16003 		add	r3, r7, #96
 27082 0132 543B     		subs	r3, r3, #84
 27083 0134 1846     		mov	r0, r3
 27084 0136 FFF7FEFF 		bl	UART_RS485_PutString
4054:..\src/command_processing.c **** }
 27085              		.loc 1 4054 0
 27086 013a 00BF     		nop
 27087 013c 07F59C47 		add	r7, r7, #19968
 27088 0140 6037     		adds	r7, r7, #96
 27089              		.cfi_def_cfa_offset 8
 27090 0142 BD46     		mov	sp, r7
 27091              		.cfi_def_cfa_register 13
 27092              		@ sp needed
 27093 0144 80BD     		pop	{r7, pc}
 27094              	.L1068:
 27095 0146 00BF     		.align	2
 27096              	.L1067:
 27097 0148 F01F0000 		.word	.LC310
 27098 014c 00000000 		.word	g_rx
 27099 0150 00000000 		.word	sdFile
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 592


 27100              		.cfi_endproc
 27101              	.LFE114:
 27102              		.size	cmd_get_SD_file, .-cmd_get_SD_file
 27103              		.section	.text.air_chambers_control,"ax",%progbits
 27104              		.align	2
 27105              		.global	air_chambers_control
 27106              		.thumb
 27107              		.thumb_func
 27108              		.type	air_chambers_control, %function
 27109              	air_chambers_control:
 27110              	.LFB115:
4055:..\src/command_processing.c **** 
4056:..\src/command_processing.c **** //==============================================================================
4057:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
4058:..\src/command_processing.c **** //==============================================================================
4059:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
4060:..\src/command_processing.c **** 
4061:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
 27111              		.loc 1 4061 0
 27112              		.cfi_startproc
 27113              		@ args = 0, pretend = 0, frame = 8
 27114              		@ frame_needed = 1, uses_anonymous_args = 0
 27115              		@ link register save eliminated.
 27116 0000 80B4     		push	{r7}
 27117              		.cfi_def_cfa_offset 4
 27118              		.cfi_offset 7, -4
 27119 0002 83B0     		sub	sp, sp, #12
 27120              		.cfi_def_cfa_offset 16
 27121 0004 00AF     		add	r7, sp, #0
 27122              		.cfi_def_cfa_register 7
 27123 0006 7860     		str	r0, [r7, #4]
4062:..\src/command_processing.c ****     
4063:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4064:..\src/command_processing.c ****     
4065:..\src/command_processing.c ****     int16 curr_diff;
4066:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
4067:..\src/command_processing.c ****     int32 valve_command;
4068:..\src/command_processing.c ****     int16 x_value;
4069:..\src/command_processing.c **** 
4070:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
4071:..\src/command_processing.c ****     
4072:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
4073:..\src/command_processing.c ****     
4074:..\src/command_processing.c ****     // Current difference saturation old mapping
4075:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
4076:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
4077:..\src/command_processing.c **** //    }
4078:..\src/command_processing.c **** //    if(curr_diff < 0) {
4079:..\src/command_processing.c **** //        curr_diff = 0;
4080:..\src/command_processing.c **** //    }
4081:..\src/command_processing.c **** 
4082:..\src/command_processing.c ****     // Compute pressure reference
4083:..\src/command_processing.c **** 
4084:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
4085:..\src/command_processing.c ****     if (x_value < 0)
4086:..\src/command_processing.c ****         x_value = 0;
4087:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 593


4088:..\src/command_processing.c ****     // old mapping --- linear mapping
4089:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
4090:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
4091:..\src/command_processing.c ****     if (pressure_reference < 0)
4092:..\src/command_processing.c ****         pressure_reference = 0;
4093:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
4094:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
4095:..\src/command_processing.c ****     
4096:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
4097:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
4098:..\src/command_processing.c **** //    if (err_pressure < 0){
4099:..\src/command_processing.c **** //        err_pressure = 0;
4100:..\src/command_processing.c **** //    }
4101:..\src/command_processing.c ****     
4102:..\src/command_processing.c ****     if (x_value <= 0){
4103:..\src/command_processing.c ****         //i.e the hand is opening
4104:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
4105:..\src/command_processing.c ****     }
4106:..\src/command_processing.c ****     else {
4107:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
4108:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
4109:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
4110:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
4111:..\src/command_processing.c ****     }
4112:..\src/command_processing.c ****     
4113:..\src/command_processing.c ****     // Pump control
4114:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
4115:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
4116:..\src/command_processing.c ****     
4117:..\src/command_processing.c ****     // Limit output voltage
4118:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
4119:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
4120:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
4121:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4122:..\src/command_processing.c ****         
4123:..\src/command_processing.c ****     VALVE_Write(valve_command);
4124:..\src/command_processing.c ****     
4125:..\src/command_processing.c ****     
4126:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
4127:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
4128:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
4129:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
4130:..\src/command_processing.c **** #endif
4131:..\src/command_processing.c **** }
 27124              		.loc 1 4131 0
 27125 0008 00BF     		nop
 27126 000a 0C37     		adds	r7, r7, #12
 27127              		.cfi_def_cfa_offset 4
 27128 000c BD46     		mov	sp, r7
 27129              		.cfi_def_cfa_register 13
 27130              		@ sp needed
 27131 000e 80BC     		pop	{r7}
 27132              		.cfi_restore 7
 27133              		.cfi_def_cfa_offset 0
 27134 0010 7047     		bx	lr
 27135              		.cfi_endproc
 27136              	.LFE115:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 594


 27137              		.size	air_chambers_control, .-air_chambers_control
 27138 0012 00BF     		.section	.text.emg_activation_velocity_fsm,"ax",%progbits
 27139              		.align	2
 27140              		.global	emg_activation_velocity_fsm
 27141              		.thumb
 27142              		.thumb_func
 27143              		.type	emg_activation_velocity_fsm, %function
 27144              	emg_activation_velocity_fsm:
 27145              	.LFB116:
4132:..\src/command_processing.c **** 
4133:..\src/command_processing.c **** 
4134:..\src/command_processing.c **** //==============================================================================
4135:..\src/command_processing.c **** //                                                   EMG ACTIVATION VELOCITY FSM
4136:..\src/command_processing.c **** //==============================================================================
4137:..\src/command_processing.c **** /* It decides which is the current emg activation velocity.*/
4138:..\src/command_processing.c **** 
4139:..\src/command_processing.c **** uint8 emg_activation_velocity_fsm() {
 27146              		.loc 1 4139 0
 27147              		.cfi_startproc
 27148              		@ args = 0, pretend = 0, frame = 16
 27149              		@ frame_needed = 1, uses_anonymous_args = 0
 27150              		@ link register save eliminated.
 27151 0000 80B4     		push	{r7}
 27152              		.cfi_def_cfa_offset 4
 27153              		.cfi_offset 7, -4
 27154 0002 85B0     		sub	sp, sp, #20
 27155              		.cfi_def_cfa_offset 24
 27156 0004 00AF     		add	r7, sp, #0
 27157              		.cfi_def_cfa_register 7
4140:..\src/command_processing.c ****       
4141:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
4142:..\src/command_processing.c ****     static int32 cnt = 0;
4143:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
4144:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
4145:..\src/command_processing.c ****     
4146:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
 27158              		.loc 1 4146 0
 27159 0006 534B     		ldr	r3, .L1099
 27160 0008 1B68     		ldr	r3, [r3]
 27161 000a 534A     		ldr	r2, .L1099+4
 27162 000c B2F8F021 		ldrh	r2, [r2, #496]
 27163 0010 9B1A     		subs	r3, r3, r2
 27164 0012 FB60     		str	r3, [r7, #12]
4147:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
 27165              		.loc 1 4147 0
 27166 0014 4F4B     		ldr	r3, .L1099
 27167 0016 5B68     		ldr	r3, [r3, #4]
 27168 0018 4F4A     		ldr	r2, .L1099+4
 27169 001a B2F8F221 		ldrh	r2, [r2, #498]
 27170 001e 9B1A     		subs	r3, r3, r2
 27171 0020 BB60     		str	r3, [r7, #8]
4148:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
 27172              		.loc 1 4148 0
 27173 0022 4C4B     		ldr	r3, .L1099
 27174 0024 1B68     		ldr	r3, [r3]
 27175 0026 4C4A     		ldr	r2, .L1099+4
 27176 0028 B2F8E222 		ldrh	r2, [r2, #738]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 595


 27177 002c 9B1A     		subs	r3, r3, r2
 27178 002e 7B60     		str	r3, [r7, #4]
4149:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
 27179              		.loc 1 4149 0
 27180 0030 484B     		ldr	r3, .L1099
 27181 0032 5B68     		ldr	r3, [r3, #4]
 27182 0034 484A     		ldr	r2, .L1099+4
 27183 0036 B2F8E422 		ldrh	r2, [r2, #740]
 27184 003a 9B1A     		subs	r3, r3, r2
 27185 003c 3B60     		str	r3, [r7]
4150:..\src/command_processing.c ****     
4151:..\src/command_processing.c **** 
4152:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4153:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4154:..\src/command_processing.c ****     switch (fsm_state){
 27186              		.loc 1 4154 0
 27187 003e 474B     		ldr	r3, .L1099+8
 27188 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 27189 0042 032B     		cmp	r3, #3
 27190 0044 7FD8     		bhi	.L1071
 27191 0046 01A2     		adr	r2, .L1073
 27192 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 27193              		.p2align 2
 27194              	.L1073:
 27195 004c 5D000000 		.word	.L1072+1
 27196 0050 71000000 		.word	.L1074+1
 27197 0054 11010000 		.word	.L1075+1
 27198 0058 25010000 		.word	.L1076+1
 27199              		.p2align 1
 27200              	.L1072:
4155:..\src/command_processing.c ****         case RELAX_STATE:
4156:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27201              		.loc 1 4156 0
 27202 005c FB68     		ldr	r3, [r7, #12]
 27203 005e 002B     		cmp	r3, #0
 27204 0060 02DC     		bgt	.L1077
 27205              		.loc 1 4156 0 is_stmt 0 discriminator 1
 27206 0062 BB68     		ldr	r3, [r7, #8]
 27207 0064 002B     		cmp	r3, #0
 27208 0066 67DD     		ble	.L1095
 27209              	.L1077:
4157:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
 27210              		.loc 1 4157 0 is_stmt 1
 27211 0068 3C4B     		ldr	r3, .L1099+8
 27212 006a 0122     		movs	r2, #1
 27213 006c 1A70     		strb	r2, [r3]
4158:..\src/command_processing.c ****             }
4159:..\src/command_processing.c ****             
4160:..\src/command_processing.c ****             break;
 27214              		.loc 1 4160 0
 27215 006e 63E0     		b	.L1095
 27216              	.L1074:
4161:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4162:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
 27217              		.loc 1 4162 0
 27218 0070 FB68     		ldr	r3, [r7, #12]
 27219 0072 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 596


 27220 0074 02DC     		bgt	.L1079
 27221              		.loc 1 4162 0 is_stmt 0 discriminator 1
 27222 0076 BB68     		ldr	r3, [r7, #8]
 27223 0078 002B     		cmp	r3, #0
 27224 007a 05DD     		ble	.L1080
 27225              	.L1079:
4163:..\src/command_processing.c ****                 cnt = cnt +1;
 27226              		.loc 1 4163 0 is_stmt 1
 27227 007c 384B     		ldr	r3, .L1099+12
 27228 007e 1B68     		ldr	r3, [r3]
 27229 0080 0133     		adds	r3, r3, #1
 27230 0082 374A     		ldr	r2, .L1099+12
 27231 0084 1360     		str	r3, [r2]
 27232 0086 02E0     		b	.L1081
 27233              	.L1080:
4164:..\src/command_processing.c ****             }
4165:..\src/command_processing.c ****             else {
4166:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27234              		.loc 1 4166 0
 27235 0088 344B     		ldr	r3, .L1099+8
 27236 008a 0022     		movs	r2, #0
 27237 008c 1A70     		strb	r2, [r3]
 27238              	.L1081:
4167:..\src/command_processing.c ****             }
4168:..\src/command_processing.c ****             
4169:..\src/command_processing.c ****             if (cnt > 100){
 27239              		.loc 1 4169 0
 27240 008e 344B     		ldr	r3, .L1099+12
 27241 0090 1B68     		ldr	r3, [r3]
 27242 0092 642B     		cmp	r3, #100
 27243 0094 52DD     		ble	.L1096
4170:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
 27244              		.loc 1 4170 0
 27245 0096 FB68     		ldr	r3, [r7, #12]
 27246 0098 002B     		cmp	r3, #0
 27247 009a 02DD     		ble	.L1083
 27248              		.loc 1 4170 0 is_stmt 0 discriminator 1
 27249 009c 7B68     		ldr	r3, [r7, #4]
 27250 009e 002B     		cmp	r3, #0
 27251 00a0 05DC     		bgt	.L1084
 27252              	.L1083:
 27253              		.loc 1 4170 0 discriminator 3
 27254 00a2 BB68     		ldr	r3, [r7, #8]
 27255 00a4 002B     		cmp	r3, #0
 27256 00a6 0EDD     		ble	.L1085
 27257              		.loc 1 4170 0 discriminator 4
 27258 00a8 3B68     		ldr	r3, [r7]
 27259 00aa 002B     		cmp	r3, #0
 27260 00ac 0BDD     		ble	.L1085
 27261              	.L1084:
4171:..\src/command_processing.c ****                     // Fast activation
4172:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27262              		.loc 1 4172 0 is_stmt 1
 27263 00ae 2A4B     		ldr	r3, .L1099+4
 27264 00b0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27265 00b4 002B     		cmp	r3, #0
 27266 00b6 03D1     		bne	.L1086
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 597


4173:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27267              		.loc 1 4173 0
 27268 00b8 284B     		ldr	r3, .L1099+8
 27269 00ba 0222     		movs	r2, #2
 27270 00bc 1A70     		strb	r2, [r3]
 27271 00be 02E0     		b	.L1085
 27272              	.L1086:
4174:..\src/command_processing.c ****                     }
4175:..\src/command_processing.c ****                     else{
4176:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27273              		.loc 1 4176 0
 27274 00c0 264B     		ldr	r3, .L1099+8
 27275 00c2 0322     		movs	r2, #3
 27276 00c4 1A70     		strb	r2, [r3]
 27277              	.L1085:
4177:..\src/command_processing.c ****                     }
4178:..\src/command_processing.c ****                 }
4179:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
 27278              		.loc 1 4179 0
 27279 00c6 FB68     		ldr	r3, [r7, #12]
 27280 00c8 002B     		cmp	r3, #0
 27281 00ca 02DD     		ble	.L1087
 27282              		.loc 1 4179 0 is_stmt 0 discriminator 1
 27283 00cc 7B68     		ldr	r3, [r7, #4]
 27284 00ce 002B     		cmp	r3, #0
 27285 00d0 05DB     		blt	.L1088
 27286              	.L1087:
 27287              		.loc 1 4179 0 discriminator 3
 27288 00d2 BB68     		ldr	r3, [r7, #8]
 27289 00d4 002B     		cmp	r3, #0
 27290 00d6 0EDD     		ble	.L1089
 27291              		.loc 1 4179 0 discriminator 4
 27292 00d8 3B68     		ldr	r3, [r7]
 27293 00da 002B     		cmp	r3, #0
 27294 00dc 0BDA     		bge	.L1089
 27295              	.L1088:
4180:..\src/command_processing.c ****                     // Slow activation
4181:..\src/command_processing.c ****                     if (c_mem.WR.activation_mode == 0){
 27296              		.loc 1 4181 0 is_stmt 1
 27297 00de 1E4B     		ldr	r3, .L1099+4
 27298 00e0 93F8E032 		ldrb	r3, [r3, #736]	@ zero_extendqisi2
 27299 00e4 002B     		cmp	r3, #0
 27300 00e6 03D1     		bne	.L1090
4182:..\src/command_processing.c ****                         fsm_state = MOVE_SLOW_ACT;
 27301              		.loc 1 4182 0
 27302 00e8 1C4B     		ldr	r3, .L1099+8
 27303 00ea 0322     		movs	r2, #3
 27304 00ec 1A70     		strb	r2, [r3]
 27305 00ee 02E0     		b	.L1089
 27306              	.L1090:
4183:..\src/command_processing.c ****                     }
4184:..\src/command_processing.c ****                     else{
4185:..\src/command_processing.c ****                         fsm_state = MOVE_FAST_ACT;
 27307              		.loc 1 4185 0
 27308 00f0 1A4B     		ldr	r3, .L1099+8
 27309 00f2 0222     		movs	r2, #2
 27310 00f4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 598


 27311              	.L1089:
4186:..\src/command_processing.c ****                     }
4187:..\src/command_processing.c ****                 }
4188:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
 27312              		.loc 1 4188 0
 27313 00f6 FB68     		ldr	r3, [r7, #12]
 27314 00f8 002B     		cmp	r3, #0
 27315 00fa 05DA     		bge	.L1091
 27316              		.loc 1 4188 0 is_stmt 0 discriminator 1
 27317 00fc BB68     		ldr	r3, [r7, #8]
 27318 00fe 002B     		cmp	r3, #0
 27319 0100 02DA     		bge	.L1091
4189:..\src/command_processing.c ****                     // Involuntary activation
4190:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
 27320              		.loc 1 4190 0 is_stmt 1
 27321 0102 164B     		ldr	r3, .L1099+8
 27322 0104 0022     		movs	r2, #0
 27323 0106 1A70     		strb	r2, [r3]
 27324              	.L1091:
4191:..\src/command_processing.c ****                 }
4192:..\src/command_processing.c ****                 cnt = 0;
 27325              		.loc 1 4192 0
 27326 0108 154B     		ldr	r3, .L1099+12
 27327 010a 0022     		movs	r2, #0
 27328 010c 1A60     		str	r2, [r3]
4193:..\src/command_processing.c ****             }
4194:..\src/command_processing.c ****     
4195:..\src/command_processing.c ****             break;
 27329              		.loc 1 4195 0
 27330 010e 15E0     		b	.L1096
 27331              	.L1075:
4196:..\src/command_processing.c ****         case MOVE_FAST_ACT:
4197:..\src/command_processing.c ****             
4198:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27332              		.loc 1 4198 0
 27333 0110 FB68     		ldr	r3, [r7, #12]
 27334 0112 002B     		cmp	r3, #0
 27335 0114 14DA     		bge	.L1097
 27336              		.loc 1 4198 0 is_stmt 0 discriminator 1
 27337 0116 BB68     		ldr	r3, [r7, #8]
 27338 0118 002B     		cmp	r3, #0
 27339 011a 11DA     		bge	.L1097
4199:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27340              		.loc 1 4199 0 is_stmt 1
 27341 011c 0F4B     		ldr	r3, .L1099+8
 27342 011e 0022     		movs	r2, #0
 27343 0120 1A70     		strb	r2, [r3]
4200:..\src/command_processing.c ****             }
4201:..\src/command_processing.c ****         
4202:..\src/command_processing.c ****             break;
 27344              		.loc 1 4202 0
 27345 0122 0DE0     		b	.L1097
 27346              	.L1076:
4203:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
4204:..\src/command_processing.c ****           
4205:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
 27347              		.loc 1 4205 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 599


 27348 0124 FB68     		ldr	r3, [r7, #12]
 27349 0126 002B     		cmp	r3, #0
 27350 0128 0CDA     		bge	.L1098
 27351              		.loc 1 4205 0 is_stmt 0 discriminator 1
 27352 012a BB68     		ldr	r3, [r7, #8]
 27353 012c 002B     		cmp	r3, #0
 27354 012e 09DA     		bge	.L1098
4206:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
 27355              		.loc 1 4206 0 is_stmt 1
 27356 0130 0A4B     		ldr	r3, .L1099+8
 27357 0132 0022     		movs	r2, #0
 27358 0134 1A70     		strb	r2, [r3]
4207:..\src/command_processing.c ****             }
4208:..\src/command_processing.c ****             
4209:..\src/command_processing.c ****             break;
 27359              		.loc 1 4209 0
 27360 0136 05E0     		b	.L1098
 27361              	.L1095:
4160:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
 27362              		.loc 1 4160 0
 27363 0138 00BF     		nop
 27364 013a 04E0     		b	.L1071
 27365              	.L1096:
4195:..\src/command_processing.c ****         case MOVE_FAST_ACT:
 27366              		.loc 1 4195 0
 27367 013c 00BF     		nop
 27368 013e 02E0     		b	.L1071
 27369              	.L1097:
4202:..\src/command_processing.c ****         case MOVE_SLOW_ACT:
 27370              		.loc 1 4202 0
 27371 0140 00BF     		nop
 27372 0142 00E0     		b	.L1071
 27373              	.L1098:
 27374              		.loc 1 4209 0
 27375 0144 00BF     		nop
 27376              	.L1071:
4210:..\src/command_processing.c ****     }
4211:..\src/command_processing.c ****     
4212:..\src/command_processing.c ****     return fsm_state;
 27377              		.loc 1 4212 0
 27378 0146 054B     		ldr	r3, .L1099+8
 27379 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
4213:..\src/command_processing.c **** 
4214:..\src/command_processing.c **** }
 27380              		.loc 1 4214 0
 27381 014a 1846     		mov	r0, r3
 27382 014c 1437     		adds	r7, r7, #20
 27383              		.cfi_def_cfa_offset 4
 27384 014e BD46     		mov	sp, r7
 27385              		.cfi_def_cfa_register 13
 27386              		@ sp needed
 27387 0150 80BC     		pop	{r7}
 27388              		.cfi_restore 7
 27389              		.cfi_def_cfa_offset 0
 27390 0152 7047     		bx	lr
 27391              	.L1100:
 27392              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 600


 27393              	.L1099:
 27394 0154 00000000 		.word	g_adc_meas
 27395 0158 00000000 		.word	c_mem
 27396 015c 0C000000 		.word	fsm_state.11531
 27397 0160 10000000 		.word	cnt.11532
 27398              		.cfi_endproc
 27399              	.LFE116:
 27400              		.size	emg_activation_velocity_fsm, .-emg_activation_velocity_fsm
 27401              		.section	.text.otbk_act_wrist_control,"ax",%progbits
 27402              		.align	2
 27403              		.global	otbk_act_wrist_control
 27404              		.thumb
 27405              		.thumb_func
 27406              		.type	otbk_act_wrist_control, %function
 27407              	otbk_act_wrist_control:
 27408              	.LFB117:
4215:..\src/command_processing.c **** 
4216:..\src/command_processing.c **** //==============================================================================
4217:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
4218:..\src/command_processing.c **** //==============================================================================
4219:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
4220:..\src/command_processing.c **** 
4221:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 27409              		.loc 1 4221 0
 27410              		.cfi_startproc
 27411              		@ args = 0, pretend = 0, frame = 8
 27412              		@ frame_needed = 1, uses_anonymous_args = 0
 27413              		@ link register save eliminated.
 27414 0000 80B4     		push	{r7}
 27415              		.cfi_def_cfa_offset 4
 27416              		.cfi_offset 7, -4
 27417 0002 83B0     		sub	sp, sp, #12
 27418              		.cfi_def_cfa_offset 16
 27419 0004 00AF     		add	r7, sp, #0
 27420              		.cfi_def_cfa_register 7
 27421 0006 7860     		str	r0, [r7, #4]
4222:..\src/command_processing.c ****     
4223:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4224:..\src/command_processing.c ****     
4225:..\src/command_processing.c ****     uint8 fsm_state = emg_activation_velocity_fsm();
4226:..\src/command_processing.c ****         
4227:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
4228:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
4229:..\src/command_processing.c ****     switch (fsm_state){
4230:..\src/command_processing.c ****         case RELAX_STATE:
4231:..\src/command_processing.c ****             
4232:..\src/command_processing.c ****             // Wrist stop
4233:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4234:..\src/command_processing.c ****             
4235:..\src/command_processing.c ****             // Softhand stop
4236:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4237:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4238:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4239:..\src/command_processing.c ****             
4240:..\src/command_processing.c ****             break;
4241:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4242:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 601


4243:..\src/command_processing.c ****             break;
4244:..\src/command_processing.c ****         case MOVE_FAST_ACT: // Wrist movement
4245:..\src/command_processing.c ****             
4246:..\src/command_processing.c ****             // Wrist movement
4247:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4248:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4249:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4250:..\src/command_processing.c ****                 }
4251:..\src/command_processing.c ****                 else {
4252:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4253:..\src/command_processing.c ****                 }
4254:..\src/command_processing.c ****             }
4255:..\src/command_processing.c ****             else {
4256:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4257:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4258:..\src/command_processing.c ****                 }
4259:..\src/command_processing.c ****                 else {
4260:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4261:..\src/command_processing.c ****                 }
4262:..\src/command_processing.c ****             }
4263:..\src/command_processing.c ****             
4264:..\src/command_processing.c ****             // Softhand stop
4265:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4266:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4267:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4268:..\src/command_processing.c ****             
4269:..\src/command_processing.c ****             break;
4270:..\src/command_processing.c ****         case MOVE_SLOW_ACT: // Hand movement
4271:..\src/command_processing.c ****             
4272:..\src/command_processing.c ****             // Wrist stop
4273:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4274:..\src/command_processing.c ****             
4275:..\src/command_processing.c ****             // SoftHand movement
4276:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4277:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4278:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4279:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4280:..\src/command_processing.c ****             
4281:..\src/command_processing.c ****             break;
4282:..\src/command_processing.c ****     }
4283:..\src/command_processing.c ****         
4284:..\src/command_processing.c ****     // Limit output voltage
4285:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4286:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4287:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4288:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4289:..\src/command_processing.c ****     
4290:..\src/command_processing.c **** #endif
4291:..\src/command_processing.c **** }
 27422              		.loc 1 4291 0
 27423 0008 00BF     		nop
 27424 000a 0C37     		adds	r7, r7, #12
 27425              		.cfi_def_cfa_offset 4
 27426 000c BD46     		mov	sp, r7
 27427              		.cfi_def_cfa_register 13
 27428              		@ sp needed
 27429 000e 80BC     		pop	{r7}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 602


 27430              		.cfi_restore 7
 27431              		.cfi_def_cfa_offset 0
 27432 0010 7047     		bx	lr
 27433              		.cfi_endproc
 27434              	.LFE117:
 27435              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 27436 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 27437              		.align	2
 27438              		.global	drive_slave
 27439              		.thumb
 27440              		.thumb_func
 27441              		.type	drive_slave, %function
 27442              	drive_slave:
 27443              	.LFB118:
4292:..\src/command_processing.c **** 
4293:..\src/command_processing.c **** //==============================================================================
4294:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4295:..\src/command_processing.c **** //==============================================================================
4296:..\src/command_processing.c ****  
4297:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 27444              		.loc 1 4297 0
 27445              		.cfi_startproc
 27446              		@ args = 0, pretend = 0, frame = 8
 27447              		@ frame_needed = 1, uses_anonymous_args = 0
 27448              		@ link register save eliminated.
 27449 0000 80B4     		push	{r7}
 27450              		.cfi_def_cfa_offset 4
 27451              		.cfi_offset 7, -4
 27452 0002 83B0     		sub	sp, sp, #12
 27453              		.cfi_def_cfa_offset 16
 27454 0004 00AF     		add	r7, sp, #0
 27455              		.cfi_def_cfa_register 7
 27456 0006 0346     		mov	r3, r0
 27457 0008 0A46     		mov	r2, r1
 27458 000a FB71     		strb	r3, [r7, #7]
 27459 000c 1346     		mov	r3, r2
 27460 000e BB71     		strb	r3, [r7, #6]
4298:..\src/command_processing.c **** 
4299:..\src/command_processing.c **** #ifdef MASTER_FW
4300:..\src/command_processing.c ****     uint8 packet_data[6];
4301:..\src/command_processing.c ****     uint8 packet_lenght;
4302:..\src/command_processing.c ****     int16 aux_int16;
4303:..\src/command_processing.c **** 
4304:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4305:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4306:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4307:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4308:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4309:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4310:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4311:..\src/command_processing.c ****         master_mode = 0;
4312:..\src/command_processing.c ****         return;
4313:..\src/command_processing.c ****     }
4314:..\src/command_processing.c ****         
4315:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4316:..\src/command_processing.c ****         master_mode = 0;
4317:..\src/command_processing.c ****         return;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 603


4318:..\src/command_processing.c ****     }
4319:..\src/command_processing.c ****     
4320:..\src/command_processing.c ****        
4321:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4322:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4323:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4324:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4325:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4326:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4327:..\src/command_processing.c ****     
4328:..\src/command_processing.c ****     packet_lenght = 6;
4329:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4330:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4331:..\src/command_processing.c **** 
4332:..\src/command_processing.c **** #endif
4333:..\src/command_processing.c **** }
 27461              		.loc 1 4333 0
 27462 0010 00BF     		nop
 27463 0012 0C37     		adds	r7, r7, #12
 27464              		.cfi_def_cfa_offset 4
 27465 0014 BD46     		mov	sp, r7
 27466              		.cfi_def_cfa_register 13
 27467              		@ sp needed
 27468 0016 80BC     		pop	{r7}
 27469              		.cfi_restore 7
 27470              		.cfi_def_cfa_offset 0
 27471 0018 7047     		bx	lr
 27472              		.cfi_endproc
 27473              	.LFE118:
 27474              		.size	drive_slave, .-drive_slave
 27475 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 27476              		.align	2
 27477              		.global	stop_master_device
 27478              		.thumb
 27479              		.thumb_func
 27480              		.type	stop_master_device, %function
 27481              	stop_master_device:
 27482              	.LFB119:
4334:..\src/command_processing.c **** 
4335:..\src/command_processing.c **** //==============================================================================
4336:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4337:..\src/command_processing.c **** //==============================================================================
4338:..\src/command_processing.c ****  
4339:..\src/command_processing.c **** void stop_master_device() {
 27483              		.loc 1 4339 0
 27484              		.cfi_startproc
 27485              		@ args = 0, pretend = 0, frame = 0
 27486              		@ frame_needed = 1, uses_anonymous_args = 0
 27487              		@ link register save eliminated.
 27488 0000 80B4     		push	{r7}
 27489              		.cfi_def_cfa_offset 4
 27490              		.cfi_offset 7, -4
 27491 0002 00AF     		add	r7, sp, #0
 27492              		.cfi_def_cfa_register 7
4340:..\src/command_processing.c ****     
4341:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4342:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 604


4343:..\src/command_processing.c ****         // Stop pump and open valve
4344:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4345:..\src/command_processing.c ****         VALVE_Write(0);
4346:..\src/command_processing.c ****     }
4347:..\src/command_processing.c **** #endif
4348:..\src/command_processing.c **** 
4349:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4350:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4351:..\src/command_processing.c ****         //Stop wrist motor
4352:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4353:..\src/command_processing.c ****     }
4354:..\src/command_processing.c **** #endif    
4355:..\src/command_processing.c **** }
 27493              		.loc 1 4355 0
 27494 0004 00BF     		nop
 27495 0006 BD46     		mov	sp, r7
 27496              		.cfi_def_cfa_register 13
 27497              		@ sp needed
 27498 0008 80BC     		pop	{r7}
 27499              		.cfi_restore 7
 27500              		.cfi_def_cfa_offset 0
 27501 000a 7047     		bx	lr
 27502              		.cfi_endproc
 27503              	.LFE119:
 27504              		.size	stop_master_device, .-stop_master_device
 27505              		.section	.text.deactivate_slaves,"ax",%progbits
 27506              		.align	2
 27507              		.global	deactivate_slaves
 27508              		.thumb
 27509              		.thumb_func
 27510              		.type	deactivate_slaves, %function
 27511              	deactivate_slaves:
 27512              	.LFB120:
4356:..\src/command_processing.c **** 
4357:..\src/command_processing.c **** //==============================================================================
4358:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4359:..\src/command_processing.c **** //==============================================================================
4360:..\src/command_processing.c ****  
4361:..\src/command_processing.c **** void deactivate_slaves() {
 27513              		.loc 1 4361 0
 27514              		.cfi_startproc
 27515              		@ args = 0, pretend = 0, frame = 0
 27516              		@ frame_needed = 1, uses_anonymous_args = 0
 27517              		@ link register save eliminated.
 27518 0000 80B4     		push	{r7}
 27519              		.cfi_def_cfa_offset 4
 27520              		.cfi_offset 7, -4
 27521 0002 00AF     		add	r7, sp, #0
 27522              		.cfi_def_cfa_register 7
4362:..\src/command_processing.c ****     
4363:..\src/command_processing.c **** #ifdef MASTER_FW
4364:..\src/command_processing.c ****     
4365:..\src/command_processing.c ****     uint8 packet_data[10];
4366:..\src/command_processing.c ****     uint8 packet_lenght;
4367:..\src/command_processing.c ****     
4368:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4369:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 605


4370:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4371:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4372:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4373:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4374:..\src/command_processing.c ****         master_mode = 0;
4375:..\src/command_processing.c ****         return;
4376:..\src/command_processing.c ****     }
4377:..\src/command_processing.c ****    
4378:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4379:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4380:..\src/command_processing.c **** 
4381:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4382:..\src/command_processing.c ****     packet_lenght = 3;
4383:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4384:..\src/command_processing.c ****     
4385:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4386:..\src/command_processing.c ****     
4387:..\src/command_processing.c **** #endif    
4388:..\src/command_processing.c **** }
 27523              		.loc 1 4388 0
 27524 0004 00BF     		nop
 27525 0006 BD46     		mov	sp, r7
 27526              		.cfi_def_cfa_register 13
 27527              		@ sp needed
 27528 0008 80BC     		pop	{r7}
 27529              		.cfi_restore 7
 27530              		.cfi_def_cfa_offset 0
 27531 000a 7047     		bx	lr
 27532              		.cfi_endproc
 27533              	.LFE120:
 27534              		.size	deactivate_slaves, .-deactivate_slaves
 27535              		.bss
 27536              		.align	2
 27537              	h_time.11212:
 27538 0000 00000000 		.space	4
 27539              		.align	1
 27540              	i.11253:
 27541 0004 0000     		.space	2
 27542 0006 0000     		.align	2
 27543              	last_aux_int16.11384:
 27544 0008 00000000 		.space	4
 27545              	fsm_state.11531:
 27546 000c 00       		.space	1
 27547 000d 000000   		.align	2
 27548              	cnt.11532:
 27549 0010 00000000 		.space	4
 27550              		.text
 27551              	.Letext0:
 27552              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27553              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 27554              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 27555              		.file 6 "..\\src\\commands.h"
 27556              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 27557              		.file 8 "..\\src\\globals.h"
 27558              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 27559              		.section	.debug_info,"",%progbits
 27560              	.Ldebug_info0:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 606


 27561 0000 03260000 		.4byte	0x2603
 27562 0004 0400     		.2byte	0x4
 27563 0006 00000000 		.4byte	.Ldebug_abbrev0
 27564 000a 04       		.byte	0x4
 27565 000b 01       		.uleb128 0x1
 27566 000c CE090000 		.4byte	.LASF401
 27567 0010 0C       		.byte	0xc
 27568 0011 28150000 		.4byte	.LASF402
 27569 0015 1A050000 		.4byte	.LASF403
 27570 0019 00000000 		.4byte	.Ldebug_ranges0+0
 27571 001d 00000000 		.4byte	0
 27572 0021 00000000 		.4byte	.Ldebug_line0
 27573 0025 02       		.uleb128 0x2
 27574 0026 01       		.byte	0x1
 27575 0027 06       		.byte	0x6
 27576 0028 42040000 		.4byte	.LASF0
 27577 002c 02       		.uleb128 0x2
 27578 002d 01       		.byte	0x1
 27579 002e 08       		.byte	0x8
 27580 002f BC040000 		.4byte	.LASF1
 27581 0033 02       		.uleb128 0x2
 27582 0034 02       		.byte	0x2
 27583 0035 05       		.byte	0x5
 27584 0036 9B110000 		.4byte	.LASF2
 27585 003a 02       		.uleb128 0x2
 27586 003b 02       		.byte	0x2
 27587 003c 07       		.byte	0x7
 27588 003d 1A140000 		.4byte	.LASF3
 27589 0041 03       		.uleb128 0x3
 27590 0042 E6140000 		.4byte	.LASF5
 27591 0046 03       		.byte	0x3
 27592 0047 3F       		.byte	0x3f
 27593 0048 4C000000 		.4byte	0x4c
 27594 004c 02       		.uleb128 0x2
 27595 004d 04       		.byte	0x4
 27596 004e 05       		.byte	0x5
 27597 004f 08030000 		.4byte	.LASF4
 27598 0053 03       		.uleb128 0x3
 27599 0054 990A0000 		.4byte	.LASF6
 27600 0058 03       		.byte	0x3
 27601 0059 41       		.byte	0x41
 27602 005a 5E000000 		.4byte	0x5e
 27603 005e 02       		.uleb128 0x2
 27604 005f 04       		.byte	0x4
 27605 0060 07       		.byte	0x7
 27606 0061 7A080000 		.4byte	.LASF7
 27607 0065 02       		.uleb128 0x2
 27608 0066 08       		.byte	0x8
 27609 0067 05       		.byte	0x5
 27610 0068 A40A0000 		.4byte	.LASF8
 27611 006c 02       		.uleb128 0x2
 27612 006d 08       		.byte	0x8
 27613 006e 07       		.byte	0x7
 27614 006f 950E0000 		.4byte	.LASF9
 27615 0073 04       		.uleb128 0x4
 27616 0074 04       		.byte	0x4
 27617 0075 05       		.byte	0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 607


 27618 0076 696E7400 		.ascii	"int\000"
 27619 007a 02       		.uleb128 0x2
 27620 007b 04       		.byte	0x4
 27621 007c 07       		.byte	0x7
 27622 007d C70B0000 		.4byte	.LASF10
 27623 0081 03       		.uleb128 0x3
 27624 0082 B5000000 		.4byte	.LASF11
 27625 0086 04       		.byte	0x4
 27626 0087 2C       		.byte	0x2c
 27627 0088 41000000 		.4byte	0x41
 27628 008c 03       		.uleb128 0x3
 27629 008d 92130000 		.4byte	.LASF12
 27630 0091 04       		.byte	0x4
 27631 0092 30       		.byte	0x30
 27632 0093 53000000 		.4byte	0x53
 27633 0097 05       		.uleb128 0x5
 27634 0098 7D110000 		.4byte	.LASF13
 27635 009c 05       		.byte	0x5
 27636 009d E401     		.2byte	0x1e4
 27637 009f 2C000000 		.4byte	0x2c
 27638 00a3 05       		.uleb128 0x5
 27639 00a4 8B150000 		.4byte	.LASF14
 27640 00a8 05       		.byte	0x5
 27641 00a9 E501     		.2byte	0x1e5
 27642 00ab 3A000000 		.4byte	0x3a
 27643 00af 05       		.uleb128 0x5
 27644 00b0 DD000000 		.4byte	.LASF15
 27645 00b4 05       		.byte	0x5
 27646 00b5 E601     		.2byte	0x1e6
 27647 00b7 5E000000 		.4byte	0x5e
 27648 00bb 05       		.uleb128 0x5
 27649 00bc EB010000 		.4byte	.LASF16
 27650 00c0 05       		.byte	0x5
 27651 00c1 E701     		.2byte	0x1e7
 27652 00c3 25000000 		.4byte	0x25
 27653 00c7 05       		.uleb128 0x5
 27654 00c8 F2120000 		.4byte	.LASF17
 27655 00cc 05       		.byte	0x5
 27656 00cd E801     		.2byte	0x1e8
 27657 00cf 33000000 		.4byte	0x33
 27658 00d3 05       		.uleb128 0x5
 27659 00d4 74140000 		.4byte	.LASF18
 27660 00d8 05       		.byte	0x5
 27661 00d9 E901     		.2byte	0x1e9
 27662 00db 4C000000 		.4byte	0x4c
 27663 00df 05       		.uleb128 0x5
 27664 00e0 8F030000 		.4byte	.LASF19
 27665 00e4 05       		.byte	0x5
 27666 00e5 EA01     		.2byte	0x1ea
 27667 00e7 EB000000 		.4byte	0xeb
 27668 00eb 02       		.uleb128 0x2
 27669 00ec 04       		.byte	0x4
 27670 00ed 04       		.byte	0x4
 27671 00ee 8A0B0000 		.4byte	.LASF20
 27672 00f2 02       		.uleb128 0x2
 27673 00f3 08       		.byte	0x8
 27674 00f4 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 608


 27675 00f5 FC0A0000 		.4byte	.LASF21
 27676 00f9 02       		.uleb128 0x2
 27677 00fa 01       		.byte	0x1
 27678 00fb 08       		.byte	0x8
 27679 00fc B0050000 		.4byte	.LASF22
 27680 0100 05       		.uleb128 0x5
 27681 0101 8A0F0000 		.4byte	.LASF23
 27682 0105 05       		.byte	0x5
 27683 0106 8E02     		.2byte	0x28e
 27684 0108 0C010000 		.4byte	0x10c
 27685 010c 06       		.uleb128 0x6
 27686 010d 97000000 		.4byte	0x97
 27687 0111 02       		.uleb128 0x2
 27688 0112 08       		.byte	0x8
 27689 0113 04       		.byte	0x4
 27690 0114 7D0D0000 		.4byte	.LASF24
 27691 0118 02       		.uleb128 0x2
 27692 0119 04       		.byte	0x4
 27693 011a 07       		.byte	0x7
 27694 011b 29000000 		.4byte	.LASF25
 27695 011f 07       		.uleb128 0x7
 27696 0120 04       		.byte	0x4
 27697 0121 F9000000 		.4byte	0xf9
 27698 0125 07       		.uleb128 0x7
 27699 0126 04       		.byte	0x4
 27700 0127 2B010000 		.4byte	0x12b
 27701 012b 08       		.uleb128 0x8
 27702 012c F9000000 		.4byte	0xf9
 27703 0130 09       		.uleb128 0x9
 27704 0131 F9000000 		.4byte	0xf9
 27705 0135 40010000 		.4byte	0x140
 27706 0139 0A       		.uleb128 0xa
 27707 013a 18010000 		.4byte	0x118
 27708 013e 19       		.byte	0x19
 27709 013f 00       		.byte	0
 27710 0140 09       		.uleb128 0x9
 27711 0141 F9000000 		.4byte	0xf9
 27712 0145 50010000 		.4byte	0x150
 27713 0149 0A       		.uleb128 0xa
 27714 014a 18010000 		.4byte	0x118
 27715 014e 07       		.byte	0x7
 27716 014f 00       		.byte	0
 27717 0150 0B       		.uleb128 0xb
 27718 0151 270C0000 		.4byte	.LASF57
 27719 0155 01       		.byte	0x1
 27720 0156 2C000000 		.4byte	0x2c
 27721 015a 06       		.byte	0x6
 27722 015b 42       		.byte	0x42
 27723 015c 1B020000 		.4byte	0x21b
 27724 0160 0C       		.uleb128 0xc
 27725 0161 A5150000 		.4byte	.LASF26
 27726 0165 00       		.byte	0
 27727 0166 0C       		.uleb128 0xc
 27728 0167 2C120000 		.4byte	.LASF27
 27729 016b 01       		.byte	0x1
 27730 016c 0C       		.uleb128 0xc
 27731 016d 56080000 		.4byte	.LASF28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 609


 27732 0171 03       		.byte	0x3
 27733 0172 0C       		.uleb128 0xc
 27734 0173 F4040000 		.4byte	.LASF29
 27735 0177 04       		.byte	0x4
 27736 0178 0C       		.uleb128 0xc
 27737 0179 C30F0000 		.4byte	.LASF30
 27738 017d 05       		.byte	0x5
 27739 017e 0C       		.uleb128 0xc
 27740 017f 76090000 		.4byte	.LASF31
 27741 0183 06       		.byte	0x6
 27742 0184 0C       		.uleb128 0xc
 27743 0185 9A080000 		.4byte	.LASF32
 27744 0189 09       		.byte	0x9
 27745 018a 0C       		.uleb128 0xc
 27746 018b 32000000 		.4byte	.LASF33
 27747 018f 0A       		.byte	0xa
 27748 0190 0C       		.uleb128 0xc
 27749 0191 D4120000 		.4byte	.LASF34
 27750 0195 0C       		.byte	0xc
 27751 0196 0C       		.uleb128 0xc
 27752 0197 E10D0000 		.4byte	.LASF35
 27753 019b 0D       		.byte	0xd
 27754 019c 0C       		.uleb128 0xc
 27755 019d 78000000 		.4byte	.LASF36
 27756 01a1 80       		.byte	0x80
 27757 01a2 0C       		.uleb128 0xc
 27758 01a3 9F050000 		.4byte	.LASF37
 27759 01a7 81       		.byte	0x81
 27760 01a8 0C       		.uleb128 0xc
 27761 01a9 C2060000 		.4byte	.LASF38
 27762 01ad 82       		.byte	0x82
 27763 01ae 0C       		.uleb128 0xc
 27764 01af F6110000 		.4byte	.LASF39
 27765 01b3 83       		.byte	0x83
 27766 01b4 0C       		.uleb128 0xc
 27767 01b5 46110000 		.4byte	.LASF40
 27768 01b9 84       		.byte	0x84
 27769 01ba 0C       		.uleb128 0xc
 27770 01bb A7030000 		.4byte	.LASF41
 27771 01bf 85       		.byte	0x85
 27772 01c0 0C       		.uleb128 0xc
 27773 01c1 B8090000 		.4byte	.LASF42
 27774 01c5 86       		.byte	0x86
 27775 01c6 0C       		.uleb128 0xc
 27776 01c7 56090000 		.4byte	.LASF43
 27777 01cb 88       		.byte	0x88
 27778 01cc 0C       		.uleb128 0xc
 27779 01cd B5120000 		.4byte	.LASF44
 27780 01d1 89       		.byte	0x89
 27781 01d2 0C       		.uleb128 0xc
 27782 01d3 F30E0000 		.4byte	.LASF45
 27783 01d7 8B       		.byte	0x8b
 27784 01d8 0C       		.uleb128 0xc
 27785 01d9 4E0D0000 		.4byte	.LASF46
 27786 01dd 8C       		.byte	0x8c
 27787 01de 0C       		.uleb128 0xc
 27788 01df 740A0000 		.4byte	.LASF47
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 610


 27789 01e3 8E       		.byte	0x8e
 27790 01e4 0C       		.uleb128 0xc
 27791 01e5 2B0F0000 		.4byte	.LASF48
 27792 01e9 90       		.byte	0x90
 27793 01ea 0C       		.uleb128 0xc
 27794 01eb 8D020000 		.4byte	.LASF49
 27795 01ef 92       		.byte	0x92
 27796 01f0 0C       		.uleb128 0xc
 27797 01f1 F3130000 		.4byte	.LASF50
 27798 01f5 A1       		.byte	0xa1
 27799 01f6 0C       		.uleb128 0xc
 27800 01f7 FF100000 		.4byte	.LASF51
 27801 01fb A2       		.byte	0xa2
 27802 01fc 0C       		.uleb128 0xc
 27803 01fd 850C0000 		.4byte	.LASF52
 27804 0201 A3       		.byte	0xa3
 27805 0202 0C       		.uleb128 0xc
 27806 0203 1B110000 		.4byte	.LASF53
 27807 0207 A4       		.byte	0xa4
 27808 0208 0C       		.uleb128 0xc
 27809 0209 1B120000 		.4byte	.LASF54
 27810 020d A5       		.byte	0xa5
 27811 020e 0C       		.uleb128 0xc
 27812 020f B3100000 		.4byte	.LASF55
 27813 0213 A6       		.byte	0xa6
 27814 0214 0C       		.uleb128 0xc
 27815 0215 030B0000 		.4byte	.LASF56
 27816 0219 A7       		.byte	0xa7
 27817 021a 00       		.byte	0
 27818 021b 0B       		.uleb128 0xb
 27819 021c 52150000 		.4byte	.LASF58
 27820 0220 01       		.byte	0x1
 27821 0221 2C000000 		.4byte	0x2c
 27822 0225 06       		.byte	0x6
 27823 0226 8E       		.byte	0x8e
 27824 0227 5C020000 		.4byte	0x25c
 27825 022b 0C       		.uleb128 0xc
 27826 022c 5E070000 		.4byte	.LASF59
 27827 0230 00       		.byte	0
 27828 0231 0C       		.uleb128 0xc
 27829 0232 650C0000 		.4byte	.LASF60
 27830 0236 01       		.byte	0x1
 27831 0237 0C       		.uleb128 0xc
 27832 0238 9E020000 		.4byte	.LASF61
 27833 023c 02       		.byte	0x2
 27834 023d 0C       		.uleb128 0xc
 27835 023e C7010000 		.4byte	.LASF62
 27836 0242 03       		.byte	0x3
 27837 0243 0C       		.uleb128 0xc
 27838 0244 6B010000 		.4byte	.LASF63
 27839 0248 04       		.byte	0x4
 27840 0249 0C       		.uleb128 0xc
 27841 024a 60000000 		.4byte	.LASF64
 27842 024e 05       		.byte	0x5
 27843 024f 0C       		.uleb128 0xc
 27844 0250 C2080000 		.4byte	.LASF65
 27845 0254 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 611


 27846 0255 0C       		.uleb128 0xc
 27847 0256 E0100000 		.4byte	.LASF66
 27848 025a 07       		.byte	0x7
 27849 025b 00       		.byte	0
 27850 025c 0B       		.uleb128 0xb
 27851 025d B20A0000 		.4byte	.LASF67
 27852 0261 01       		.byte	0x1
 27853 0262 2C000000 		.4byte	0x2c
 27854 0266 06       		.byte	0x6
 27855 0267 A2       		.byte	0xa2
 27856 0268 85020000 		.4byte	0x285
 27857 026c 0C       		.uleb128 0xc
 27858 026d CB140000 		.4byte	.LASF68
 27859 0271 00       		.byte	0
 27860 0272 0C       		.uleb128 0xc
 27861 0273 4A090000 		.4byte	.LASF69
 27862 0277 01       		.byte	0x1
 27863 0278 0C       		.uleb128 0xc
 27864 0279 6D0D0000 		.4byte	.LASF70
 27865 027d 02       		.byte	0x2
 27866 027e 0C       		.uleb128 0xc
 27867 027f 41080000 		.4byte	.LASF71
 27868 0283 03       		.byte	0x3
 27869 0284 00       		.byte	0
 27870 0285 0B       		.uleb128 0xb
 27871 0286 84040000 		.4byte	.LASF72
 27872 028a 01       		.byte	0x1
 27873 028b 2C000000 		.4byte	0x2c
 27874 028f 06       		.byte	0x6
 27875 0290 AC       		.byte	0xac
 27876 0291 A2020000 		.4byte	0x2a2
 27877 0295 0C       		.uleb128 0xc
 27878 0296 D6100000 		.4byte	.LASF73
 27879 029a 00       		.byte	0
 27880 029b 0C       		.uleb128 0xc
 27881 029c DE0A0000 		.4byte	.LASF74
 27882 02a0 01       		.byte	0x1
 27883 02a1 00       		.byte	0
 27884 02a2 0B       		.uleb128 0xb
 27885 02a3 3A0E0000 		.4byte	.LASF75
 27886 02a7 01       		.byte	0x1
 27887 02a8 2C000000 		.4byte	0x2c
 27888 02ac 06       		.byte	0x6
 27889 02ad B1       		.byte	0xb1
 27890 02ae BF020000 		.4byte	0x2bf
 27891 02b2 0C       		.uleb128 0xc
 27892 02b3 43070000 		.4byte	.LASF76
 27893 02b7 00       		.byte	0
 27894 02b8 0C       		.uleb128 0xc
 27895 02b9 07090000 		.4byte	.LASF77
 27896 02bd 01       		.byte	0x1
 27897 02be 00       		.byte	0
 27898 02bf 0B       		.uleb128 0xb
 27899 02c0 E7120000 		.4byte	.LASF78
 27900 02c4 01       		.byte	0x1
 27901 02c5 2C000000 		.4byte	0x2c
 27902 02c9 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 612


 27903 02ca B9       		.byte	0xb9
 27904 02cb 0C030000 		.4byte	0x30c
 27905 02cf 0C       		.uleb128 0xc
 27906 02d0 0E090000 		.4byte	.LASF79
 27907 02d4 00       		.byte	0
 27908 02d5 0C       		.uleb128 0xc
 27909 02d6 60150000 		.4byte	.LASF80
 27910 02da 01       		.byte	0x1
 27911 02db 0C       		.uleb128 0xc
 27912 02dc C20A0000 		.4byte	.LASF81
 27913 02e0 02       		.byte	0x2
 27914 02e1 0C       		.uleb128 0xc
 27915 02e2 2A0D0000 		.4byte	.LASF82
 27916 02e6 03       		.byte	0x3
 27917 02e7 0C       		.uleb128 0xc
 27918 02e8 320C0000 		.4byte	.LASF83
 27919 02ec 04       		.byte	0x4
 27920 02ed 0C       		.uleb128 0xc
 27921 02ee AC0E0000 		.4byte	.LASF84
 27922 02f2 05       		.byte	0x5
 27923 02f3 0C       		.uleb128 0xc
 27924 02f4 890D0000 		.4byte	.LASF85
 27925 02f8 06       		.byte	0x6
 27926 02f9 0C       		.uleb128 0xc
 27927 02fa DC0C0000 		.4byte	.LASF86
 27928 02fe 07       		.byte	0x7
 27929 02ff 0C       		.uleb128 0xc
 27930 0300 03070000 		.4byte	.LASF87
 27931 0304 08       		.byte	0x8
 27932 0305 0C       		.uleb128 0xc
 27933 0306 35080000 		.4byte	.LASF88
 27934 030a 09       		.byte	0x9
 27935 030b 00       		.byte	0
 27936 030c 03       		.uleb128 0x3
 27937 030d AC140000 		.4byte	.LASF89
 27938 0311 07       		.byte	0x7
 27939 0312 7E       		.byte	0x7e
 27940 0313 17030000 		.4byte	0x317
 27941 0317 0D       		.uleb128 0xd
 27942 0318 AC140000 		.4byte	.LASF89
 27943 031c 07       		.uleb128 0x7
 27944 031d 04       		.byte	0x4
 27945 031e 0C030000 		.4byte	0x30c
 27946 0322 0E       		.uleb128 0xe
 27947 0323 5C0A0000 		.4byte	.LASF92
 27948 0327 10       		.byte	0x10
 27949 0328 08       		.byte	0x8
 27950 0329 E2       		.byte	0xe2
 27951 032a 5F030000 		.4byte	0x35f
 27952 032e 0F       		.uleb128 0xf
 27953 032f 706F7300 		.ascii	"pos\000"
 27954 0333 08       		.byte	0x8
 27955 0334 E3       		.byte	0xe3
 27956 0335 D3000000 		.4byte	0xd3
 27957 0339 00       		.byte	0
 27958 033a 10       		.uleb128 0x10
 27959 033b 3A090000 		.4byte	.LASF90
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 613


 27960 033f 08       		.byte	0x8
 27961 0340 E4       		.byte	0xe4
 27962 0341 D3000000 		.4byte	0xd3
 27963 0345 04       		.byte	0x4
 27964 0346 0F       		.uleb128 0xf
 27965 0347 70776D00 		.ascii	"pwm\000"
 27966 034b 08       		.byte	0x8
 27967 034c E5       		.byte	0xe5
 27968 034d D3000000 		.4byte	0xd3
 27969 0351 08       		.byte	0x8
 27970 0352 10       		.uleb128 0x10
 27971 0353 ED0E0000 		.4byte	.LASF91
 27972 0357 08       		.byte	0x8
 27973 0358 E6       		.byte	0xe6
 27974 0359 97000000 		.4byte	0x97
 27975 035d 0C       		.byte	0xc
 27976 035e 00       		.byte	0
 27977 035f 0E       		.uleb128 0xe
 27978 0360 AB100000 		.4byte	.LASF93
 27979 0364 34       		.byte	0x34
 27980 0365 08       		.byte	0x8
 27981 0366 ED       		.byte	0xed
 27982 0367 C0030000 		.4byte	0x3c0
 27983 036b 0F       		.uleb128 0xf
 27984 036c 706F7300 		.ascii	"pos\000"
 27985 0370 08       		.byte	0x8
 27986 0371 EE       		.byte	0xee
 27987 0372 C0030000 		.4byte	0x3c0
 27988 0376 00       		.byte	0
 27989 0377 10       		.uleb128 0x10
 27990 0378 3A090000 		.4byte	.LASF90
 27991 037c 08       		.byte	0x8
 27992 037d EF       		.byte	0xef
 27993 037e D3000000 		.4byte	0xd3
 27994 0382 0C       		.byte	0xc
 27995 0383 10       		.uleb128 0x10
 27996 0384 34130000 		.4byte	.LASF94
 27997 0388 08       		.byte	0x8
 27998 0389 F0       		.byte	0xf0
 27999 038a D3000000 		.4byte	0xd3
 28000 038e 10       		.byte	0x10
 28001 038f 10       		.uleb128 0x10
 28002 0390 B8080000 		.4byte	.LASF95
 28003 0394 08       		.byte	0x8
 28004 0395 F1       		.byte	0xf1
 28005 0396 D3000000 		.4byte	0xd3
 28006 039a 14       		.byte	0x14
 28007 039b 0F       		.uleb128 0xf
 28008 039c 726F7400 		.ascii	"rot\000"
 28009 03a0 08       		.byte	0x8
 28010 03a1 F2       		.byte	0xf2
 28011 03a2 D0030000 		.4byte	0x3d0
 28012 03a6 18       		.byte	0x18
 28013 03a7 0F       		.uleb128 0xf
 28014 03a8 76656C00 		.ascii	"vel\000"
 28015 03ac 08       		.byte	0x8
 28016 03ad F3       		.byte	0xf3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 614


 28017 03ae C0030000 		.4byte	0x3c0
 28018 03b2 1C       		.byte	0x1c
 28019 03b3 0F       		.uleb128 0xf
 28020 03b4 61636300 		.ascii	"acc\000"
 28021 03b8 08       		.byte	0x8
 28022 03b9 F4       		.byte	0xf4
 28023 03ba C0030000 		.4byte	0x3c0
 28024 03be 28       		.byte	0x28
 28025 03bf 00       		.byte	0
 28026 03c0 09       		.uleb128 0x9
 28027 03c1 D3000000 		.4byte	0xd3
 28028 03c5 D0030000 		.4byte	0x3d0
 28029 03c9 0A       		.uleb128 0xa
 28030 03ca 18010000 		.4byte	0x118
 28031 03ce 02       		.byte	0x2
 28032 03cf 00       		.byte	0
 28033 03d0 09       		.uleb128 0x9
 28034 03d1 BB000000 		.4byte	0xbb
 28035 03d5 E0030000 		.4byte	0x3e0
 28036 03d9 0A       		.uleb128 0xa
 28037 03da 18010000 		.4byte	0x118
 28038 03de 02       		.byte	0x2
 28039 03df 00       		.byte	0
 28040 03e0 0E       		.uleb128 0xe
 28041 03e1 A30B0000 		.4byte	.LASF96
 28042 03e5 28       		.byte	0x28
 28043 03e6 08       		.byte	0x8
 28044 03e7 F7       		.byte	0xf7
 28045 03e8 11040000 		.4byte	0x411
 28046 03ec 0F       		.uleb128 0xf
 28047 03ed 656D6700 		.ascii	"emg\000"
 28048 03f1 08       		.byte	0x8
 28049 03f2 F8       		.byte	0xf8
 28050 03f3 11040000 		.4byte	0x411
 28051 03f7 00       		.byte	0
 28052 03f8 10       		.uleb128 0x10
 28053 03f9 220D0000 		.4byte	.LASF97
 28054 03fd 08       		.byte	0x8
 28055 03fe F9       		.byte	0xf9
 28056 03ff 21040000 		.4byte	0x421
 28057 0403 08       		.byte	0x8
 28058 0404 10       		.uleb128 0x10
 28059 0405 D7110000 		.4byte	.LASF98
 28060 0409 08       		.byte	0x8
 28061 040a FA       		.byte	0xfa
 28062 040b 11040000 		.4byte	0x411
 28063 040f 20       		.byte	0x20
 28064 0410 00       		.byte	0
 28065 0411 09       		.uleb128 0x9
 28066 0412 D3000000 		.4byte	0xd3
 28067 0416 21040000 		.4byte	0x421
 28068 041a 0A       		.uleb128 0xa
 28069 041b 18010000 		.4byte	0x118
 28070 041f 01       		.byte	0x1
 28071 0420 00       		.byte	0
 28072 0421 09       		.uleb128 0x9
 28073 0422 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 615


 28074 0426 31040000 		.4byte	0x431
 28075 042a 0A       		.uleb128 0xa
 28076 042b 18010000 		.4byte	0x118
 28077 042f 05       		.byte	0x5
 28078 0430 00       		.byte	0
 28079 0431 0E       		.uleb128 0xe
 28080 0432 0E060000 		.4byte	.LASF99
 28081 0436 04       		.byte	0x4
 28082 0437 08       		.byte	0x8
 28083 0438 FD       		.byte	0xfd
 28084 0439 4A040000 		.4byte	0x44a
 28085 043d 10       		.uleb128 0x10
 28086 043e 96050000 		.4byte	.LASF100
 28087 0442 08       		.byte	0x8
 28088 0443 FE       		.byte	0xfe
 28089 0444 EB000000 		.4byte	0xeb
 28090 0448 00       		.byte	0
 28091 0449 00       		.byte	0
 28092 044a 11       		.uleb128 0x11
 28093 044b C2000000 		.4byte	.LASF101
 28094 044f 86       		.byte	0x86
 28095 0450 08       		.byte	0x8
 28096 0451 0501     		.2byte	0x105
 28097 0453 8C040000 		.4byte	0x48c
 28098 0457 12       		.uleb128 0x12
 28099 0458 D1060000 		.4byte	.LASF102
 28100 045c 08       		.byte	0x8
 28101 045d 0601     		.2byte	0x106
 28102 045f 8C040000 		.4byte	0x48c
 28103 0463 00       		.byte	0
 28104 0464 12       		.uleb128 0x12
 28105 0465 C20E0000 		.4byte	.LASF103
 28106 0469 08       		.byte	0x8
 28107 046a 0701     		.2byte	0x107
 28108 046c C7000000 		.4byte	0xc7
 28109 0470 80       		.byte	0x80
 28110 0471 13       		.uleb128 0x13
 28111 0472 696E6400 		.ascii	"ind\000"
 28112 0476 08       		.byte	0x8
 28113 0477 0801     		.2byte	0x108
 28114 0479 C7000000 		.4byte	0xc7
 28115 047d 82       		.byte	0x82
 28116 047e 12       		.uleb128 0x12
 28117 047f 6F020000 		.4byte	.LASF104
 28118 0483 08       		.byte	0x8
 28119 0484 0901     		.2byte	0x109
 28120 0486 97000000 		.4byte	0x97
 28121 048a 84       		.byte	0x84
 28122 048b 00       		.byte	0
 28123 048c 09       		.uleb128 0x9
 28124 048d 97000000 		.4byte	0x97
 28125 0491 9C040000 		.4byte	0x49c
 28126 0495 0A       		.uleb128 0xa
 28127 0496 18010000 		.4byte	0x118
 28128 049a 7F       		.byte	0x7f
 28129 049b 00       		.byte	0
 28130 049c 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 616


 28131 049d 7D030000 		.4byte	.LASF105
 28132 04a1 50       		.byte	0x50
 28133 04a2 08       		.byte	0x8
 28134 04a3 1201     		.2byte	0x112
 28135 04a5 05050000 		.4byte	0x505
 28136 04a9 12       		.uleb128 0x12
 28137 04aa CF030000 		.4byte	.LASF106
 28138 04ae 08       		.byte	0x8
 28139 04af 1301     		.2byte	0x113
 28140 04b1 05050000 		.4byte	0x505
 28141 04b5 00       		.byte	0
 28142 04b6 12       		.uleb128 0x12
 28143 04b7 28020000 		.4byte	.LASF107
 28144 04bb 08       		.byte	0x8
 28145 04bc 1401     		.2byte	0x114
 28146 04be 15050000 		.4byte	0x515
 28147 04c2 08       		.byte	0x8
 28148 04c3 12       		.uleb128 0x12
 28149 04c4 600D0000 		.4byte	.LASF108
 28150 04c8 08       		.byte	0x8
 28151 04c9 1501     		.2byte	0x115
 28152 04cb 25050000 		.4byte	0x525
 28153 04cf 30       		.byte	0x30
 28154 04d0 12       		.uleb128 0x12
 28155 04d1 8B010000 		.4byte	.LASF109
 28156 04d5 08       		.byte	0x8
 28157 04d6 1601     		.2byte	0x116
 28158 04d8 AF000000 		.4byte	0xaf
 28159 04dc 40       		.byte	0x40
 28160 04dd 12       		.uleb128 0x12
 28161 04de FF140000 		.4byte	.LASF110
 28162 04e2 08       		.byte	0x8
 28163 04e3 1701     		.2byte	0x117
 28164 04e5 AF000000 		.4byte	0xaf
 28165 04e9 44       		.byte	0x44
 28166 04ea 12       		.uleb128 0x12
 28167 04eb 8C080000 		.4byte	.LASF111
 28168 04ef 08       		.byte	0x8
 28169 04f0 1801     		.2byte	0x118
 28170 04f2 AF000000 		.4byte	0xaf
 28171 04f6 48       		.byte	0x48
 28172 04f7 12       		.uleb128 0x12
 28173 04f8 D6080000 		.4byte	.LASF112
 28174 04fc 08       		.byte	0x8
 28175 04fd 1901     		.2byte	0x119
 28176 04ff AF000000 		.4byte	0xaf
 28177 0503 4C       		.byte	0x4c
 28178 0504 00       		.byte	0
 28179 0505 09       		.uleb128 0x9
 28180 0506 AF000000 		.4byte	0xaf
 28181 050a 15050000 		.4byte	0x515
 28182 050e 0A       		.uleb128 0xa
 28183 050f 18010000 		.4byte	0x118
 28184 0513 01       		.byte	0x1
 28185 0514 00       		.byte	0
 28186 0515 09       		.uleb128 0x9
 28187 0516 AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 617


 28188 051a 25050000 		.4byte	0x525
 28189 051e 0A       		.uleb128 0xa
 28190 051f 18010000 		.4byte	0x118
 28191 0523 09       		.byte	0x9
 28192 0524 00       		.byte	0
 28193 0525 09       		.uleb128 0x9
 28194 0526 AF000000 		.4byte	0xaf
 28195 052a 35050000 		.4byte	0x535
 28196 052e 0A       		.uleb128 0xa
 28197 052f 18010000 		.4byte	0x118
 28198 0533 03       		.byte	0x3
 28199 0534 00       		.byte	0
 28200 0535 11       		.uleb128 0x11
 28201 0536 78060000 		.4byte	.LASF113
 28202 053a 10       		.byte	0x10
 28203 053b 08       		.byte	0x8
 28204 053c 2001     		.2byte	0x120
 28205 053e C4050000 		.4byte	0x5c4
 28206 0542 13       		.uleb128 0x13
 28207 0543 696400   		.ascii	"id\000"
 28208 0546 08       		.byte	0x8
 28209 0547 2101     		.2byte	0x121
 28210 0549 97000000 		.4byte	0x97
 28211 054d 00       		.byte	0
 28212 054e 12       		.uleb128 0x12
 28213 054f 05120000 		.4byte	.LASF114
 28214 0553 08       		.byte	0x8
 28215 0554 2201     		.2byte	0x122
 28216 0556 C4050000 		.4byte	0x5c4
 28217 055a 01       		.byte	0x1
 28218 055b 12       		.uleb128 0x12
 28219 055c 81120000 		.4byte	.LASF115
 28220 0560 08       		.byte	0x8
 28221 0561 2301     		.2byte	0x123
 28222 0563 C4050000 		.4byte	0x5c4
 28223 0567 04       		.byte	0x4
 28224 0568 12       		.uleb128 0x12
 28225 0569 E9040000 		.4byte	.LASF116
 28226 056d 08       		.byte	0x8
 28227 056e 2401     		.2byte	0x124
 28228 0570 97000000 		.4byte	0x97
 28229 0574 07       		.byte	0x7
 28230 0575 12       		.uleb128 0x12
 28231 0576 29030000 		.4byte	.LASF117
 28232 057a 08       		.byte	0x8
 28233 057b 2501     		.2byte	0x125
 28234 057d 97000000 		.4byte	0x97
 28235 0581 08       		.byte	0x8
 28236 0582 12       		.uleb128 0x12
 28237 0583 BA020000 		.4byte	.LASF118
 28238 0587 08       		.byte	0x8
 28239 0588 2601     		.2byte	0x126
 28240 058a 97000000 		.4byte	0x97
 28241 058e 09       		.byte	0x9
 28242 058f 12       		.uleb128 0x12
 28243 0590 C6130000 		.4byte	.LASF119
 28244 0594 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 618


 28245 0595 2701     		.2byte	0x127
 28246 0597 97000000 		.4byte	0x97
 28247 059b 0A       		.byte	0xa
 28248 059c 12       		.uleb128 0x12
 28249 059d 8A130000 		.4byte	.LASF120
 28250 05a1 08       		.byte	0x8
 28251 05a2 2801     		.2byte	0x128
 28252 05a4 97000000 		.4byte	0x97
 28253 05a8 0B       		.byte	0xb
 28254 05a9 12       		.uleb128 0x12
 28255 05aa 55100000 		.4byte	.LASF121
 28256 05ae 08       		.byte	0x8
 28257 05af 2901     		.2byte	0x129
 28258 05b1 97000000 		.4byte	0x97
 28259 05b5 0C       		.byte	0xc
 28260 05b6 12       		.uleb128 0x12
 28261 05b7 5A030000 		.4byte	.LASF122
 28262 05bb 08       		.byte	0x8
 28263 05bc 2A01     		.2byte	0x12a
 28264 05be C4050000 		.4byte	0x5c4
 28265 05c2 0D       		.byte	0xd
 28266 05c3 00       		.byte	0
 28267 05c4 09       		.uleb128 0x9
 28268 05c5 97000000 		.4byte	0x97
 28269 05c9 D4050000 		.4byte	0x5d4
 28270 05cd 0A       		.uleb128 0xa
 28271 05ce 18010000 		.4byte	0x118
 28272 05d2 02       		.byte	0x2
 28273 05d3 00       		.byte	0
 28274 05d4 11       		.uleb128 0x11
 28275 05d5 97140000 		.4byte	.LASF123
 28276 05d9 70       		.byte	0x70
 28277 05da 08       		.byte	0x8
 28278 05db 3101     		.2byte	0x131
 28279 05dd 4E070000 		.4byte	0x74e
 28280 05e1 13       		.uleb128 0x13
 28281 05e2 6B5F7000 		.ascii	"k_p\000"
 28282 05e6 08       		.byte	0x8
 28283 05e7 3201     		.2byte	0x132
 28284 05e9 D3000000 		.4byte	0xd3
 28285 05ed 00       		.byte	0
 28286 05ee 13       		.uleb128 0x13
 28287 05ef 6B5F6900 		.ascii	"k_i\000"
 28288 05f3 08       		.byte	0x8
 28289 05f4 3301     		.2byte	0x133
 28290 05f6 D3000000 		.4byte	0xd3
 28291 05fa 04       		.byte	0x4
 28292 05fb 13       		.uleb128 0x13
 28293 05fc 6B5F6400 		.ascii	"k_d\000"
 28294 0600 08       		.byte	0x8
 28295 0601 3401     		.2byte	0x134
 28296 0603 D3000000 		.4byte	0xd3
 28297 0607 08       		.byte	0x8
 28298 0608 12       		.uleb128 0x12
 28299 0609 3C0F0000 		.4byte	.LASF124
 28300 060d 08       		.byte	0x8
 28301 060e 3501     		.2byte	0x135
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 619


 28302 0610 D3000000 		.4byte	0xd3
 28303 0614 0C       		.byte	0xc
 28304 0615 12       		.uleb128 0x12
 28305 0616 2E060000 		.4byte	.LASF125
 28306 061a 08       		.byte	0x8
 28307 061b 3601     		.2byte	0x136
 28308 061d D3000000 		.4byte	0xd3
 28309 0621 10       		.byte	0x10
 28310 0622 12       		.uleb128 0x12
 28311 0623 08060000 		.4byte	.LASF126
 28312 0627 08       		.byte	0x8
 28313 0628 3701     		.2byte	0x137
 28314 062a D3000000 		.4byte	0xd3
 28315 062e 14       		.byte	0x14
 28316 062f 12       		.uleb128 0x12
 28317 0630 2D130000 		.4byte	.LASF127
 28318 0634 08       		.byte	0x8
 28319 0635 3801     		.2byte	0x138
 28320 0637 D3000000 		.4byte	0xd3
 28321 063b 18       		.byte	0x18
 28322 063c 12       		.uleb128 0x12
 28323 063d BB060000 		.4byte	.LASF128
 28324 0641 08       		.byte	0x8
 28325 0642 3901     		.2byte	0x139
 28326 0644 D3000000 		.4byte	0xd3
 28327 0648 1C       		.byte	0x1c
 28328 0649 12       		.uleb128 0x12
 28329 064a C7110000 		.4byte	.LASF129
 28330 064e 08       		.byte	0x8
 28331 064f 3A01     		.2byte	0x13a
 28332 0651 D3000000 		.4byte	0xd3
 28333 0655 20       		.byte	0x20
 28334 0656 12       		.uleb128 0x12
 28335 0657 D8060000 		.4byte	.LASF130
 28336 065b 08       		.byte	0x8
 28337 065c 3B01     		.2byte	0x13b
 28338 065e D3000000 		.4byte	0xd3
 28339 0662 24       		.byte	0x24
 28340 0663 12       		.uleb128 0x12
 28341 0664 C7070000 		.4byte	.LASF131
 28342 0668 08       		.byte	0x8
 28343 0669 3C01     		.2byte	0x13c
 28344 066b D3000000 		.4byte	0xd3
 28345 066f 28       		.byte	0x28
 28346 0670 12       		.uleb128 0x12
 28347 0671 AE150000 		.4byte	.LASF132
 28348 0675 08       		.byte	0x8
 28349 0676 3D01     		.2byte	0x13d
 28350 0678 D3000000 		.4byte	0xd3
 28351 067c 2C       		.byte	0x2c
 28352 067d 12       		.uleb128 0x12
 28353 067e F2080000 		.4byte	.LASF133
 28354 0682 08       		.byte	0x8
 28355 0683 3E01     		.2byte	0x13e
 28356 0685 97000000 		.4byte	0x97
 28357 0689 30       		.byte	0x30
 28358 068a 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 620


 28359 068b 16130000 		.4byte	.LASF134
 28360 068f 08       		.byte	0x8
 28361 0690 3F01     		.2byte	0x13f
 28362 0692 97000000 		.4byte	0x97
 28363 0696 31       		.byte	0x31
 28364 0697 12       		.uleb128 0x12
 28365 0698 5C0F0000 		.4byte	.LASF135
 28366 069c 08       		.byte	0x8
 28367 069d 4001     		.2byte	0x140
 28368 069f 97000000 		.4byte	0x97
 28369 06a3 32       		.byte	0x32
 28370 06a4 12       		.uleb128 0x12
 28371 06a5 B4140000 		.4byte	.LASF136
 28372 06a9 08       		.byte	0x8
 28373 06aa 4101     		.2byte	0x141
 28374 06ac 97000000 		.4byte	0x97
 28375 06b0 33       		.byte	0x33
 28376 06b1 12       		.uleb128 0x12
 28377 06b2 3F010000 		.4byte	.LASF137
 28378 06b6 08       		.byte	0x8
 28379 06b7 4201     		.2byte	0x142
 28380 06b9 D3000000 		.4byte	0xd3
 28381 06bd 34       		.byte	0x34
 28382 06be 12       		.uleb128 0x12
 28383 06bf 4D060000 		.4byte	.LASF138
 28384 06c3 08       		.byte	0x8
 28385 06c4 4301     		.2byte	0x143
 28386 06c6 D3000000 		.4byte	0xd3
 28387 06ca 38       		.byte	0x38
 28388 06cb 12       		.uleb128 0x12
 28389 06cc 380B0000 		.4byte	.LASF139
 28390 06d0 08       		.byte	0x8
 28391 06d1 4401     		.2byte	0x144
 28392 06d3 D3000000 		.4byte	0xd3
 28393 06d7 3C       		.byte	0x3c
 28394 06d8 12       		.uleb128 0x12
 28395 06d9 B5050000 		.4byte	.LASF140
 28396 06dd 08       		.byte	0x8
 28397 06de 4501     		.2byte	0x145
 28398 06e0 D3000000 		.4byte	0xd3
 28399 06e4 40       		.byte	0x40
 28400 06e5 12       		.uleb128 0x12
 28401 06e6 7F010000 		.4byte	.LASF141
 28402 06ea 08       		.byte	0x8
 28403 06eb 4601     		.2byte	0x146
 28404 06ed 4E070000 		.4byte	0x74e
 28405 06f1 44       		.byte	0x44
 28406 06f2 12       		.uleb128 0x12
 28407 06f3 44150000 		.4byte	.LASF142
 28408 06f7 08       		.byte	0x8
 28409 06f8 4701     		.2byte	0x147
 28410 06fa C7000000 		.4byte	0xc7
 28411 06fe 5C       		.byte	0x5c
 28412 06ff 12       		.uleb128 0x12
 28413 0700 3F090000 		.4byte	.LASF143
 28414 0704 08       		.byte	0x8
 28415 0705 4801     		.2byte	0x148
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 621


 28416 0707 97000000 		.4byte	0x97
 28417 070b 5E       		.byte	0x5e
 28418 070c 12       		.uleb128 0x12
 28419 070d 520C0000 		.4byte	.LASF144
 28420 0711 08       		.byte	0x8
 28421 0712 4901     		.2byte	0x149
 28422 0714 97000000 		.4byte	0x97
 28423 0718 5F       		.byte	0x5f
 28424 0719 12       		.uleb128 0x12
 28425 071a 0D050000 		.4byte	.LASF145
 28426 071e 08       		.byte	0x8
 28427 071f 4A01     		.2byte	0x14a
 28428 0721 97000000 		.4byte	0x97
 28429 0725 60       		.byte	0x60
 28430 0726 12       		.uleb128 0x12
 28431 0727 F7050000 		.4byte	.LASF146
 28432 072b 08       		.byte	0x8
 28433 072c 4B01     		.2byte	0x14b
 28434 072e 97000000 		.4byte	0x97
 28435 0732 61       		.byte	0x61
 28436 0733 12       		.uleb128 0x12
 28437 0734 CA040000 		.4byte	.LASF147
 28438 0738 08       		.byte	0x8
 28439 0739 4C01     		.2byte	0x14c
 28440 073b 97000000 		.4byte	0x97
 28441 073f 62       		.byte	0x62
 28442 0740 12       		.uleb128 0x12
 28443 0741 5A030000 		.4byte	.LASF122
 28444 0745 08       		.byte	0x8
 28445 0746 4D01     		.2byte	0x14d
 28446 0748 5E070000 		.4byte	0x75e
 28447 074c 63       		.byte	0x63
 28448 074d 00       		.byte	0
 28449 074e 09       		.uleb128 0x9
 28450 074f EB000000 		.4byte	0xeb
 28451 0753 5E070000 		.4byte	0x75e
 28452 0757 0A       		.uleb128 0xa
 28453 0758 18010000 		.4byte	0x118
 28454 075c 05       		.byte	0x5
 28455 075d 00       		.byte	0
 28456 075e 09       		.uleb128 0x9
 28457 075f 97000000 		.4byte	0x97
 28458 0763 6E070000 		.4byte	0x76e
 28459 0767 0A       		.uleb128 0xa
 28460 0768 18010000 		.4byte	0x118
 28461 076c 0C       		.byte	0xc
 28462 076d 00       		.byte	0
 28463 076e 11       		.uleb128 0x11
 28464 076f 2D140000 		.4byte	.LASF148
 28465 0773 30       		.byte	0x30
 28466 0774 08       		.byte	0x8
 28467 0775 5401     		.2byte	0x154
 28468 0777 F1070000 		.4byte	0x7f1
 28469 077b 12       		.uleb128 0x12
 28470 077c 1A0B0000 		.4byte	.LASF149
 28471 0780 08       		.byte	0x8
 28472 0781 5501     		.2byte	0x155
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 622


 28473 0783 F1070000 		.4byte	0x7f1
 28474 0787 00       		.byte	0
 28475 0788 13       		.uleb128 0x13
 28476 0789 72657300 		.ascii	"res\000"
 28477 078d 08       		.byte	0x8
 28478 078e 5601     		.2byte	0x156
 28479 0790 C4050000 		.4byte	0x5c4
 28480 0794 05       		.byte	0x5
 28481 0795 12       		.uleb128 0x12
 28482 0796 01090000 		.4byte	.LASF150
 28483 079a 08       		.byte	0x8
 28484 079b 5701     		.2byte	0x157
 28485 079d C0030000 		.4byte	0x3c0
 28486 07a1 08       		.byte	0x8
 28487 07a2 12       		.uleb128 0x12
 28488 07a3 27060000 		.4byte	.LASF151
 28489 07a7 08       		.byte	0x8
 28490 07a8 5801     		.2byte	0x158
 28491 07aa 01080000 		.4byte	0x801
 28492 07ae 14       		.byte	0x14
 28493 07af 12       		.uleb128 0x12
 28494 07b0 090E0000 		.4byte	.LASF152
 28495 07b4 08       		.byte	0x8
 28496 07b5 5901     		.2byte	0x159
 28497 07b7 97000000 		.4byte	0x97
 28498 07bb 20       		.byte	0x20
 28499 07bc 12       		.uleb128 0x12
 28500 07bd 75020000 		.4byte	.LASF153
 28501 07c1 08       		.byte	0x8
 28502 07c2 5A01     		.2byte	0x15a
 28503 07c4 C4050000 		.4byte	0x5c4
 28504 07c8 21       		.byte	0x21
 28505 07c9 12       		.uleb128 0x12
 28506 07ca BC0D0000 		.4byte	.LASF154
 28507 07ce 08       		.byte	0x8
 28508 07cf 5B01     		.2byte	0x15b
 28509 07d1 BB000000 		.4byte	0xbb
 28510 07d5 24       		.byte	0x24
 28511 07d6 12       		.uleb128 0x12
 28512 07d7 7C100000 		.4byte	.LASF155
 28513 07db 08       		.byte	0x8
 28514 07dc 5C01     		.2byte	0x15c
 28515 07de D0030000 		.4byte	0x3d0
 28516 07e2 25       		.byte	0x25
 28517 07e3 12       		.uleb128 0x12
 28518 07e4 5A030000 		.4byte	.LASF122
 28519 07e8 08       		.byte	0x8
 28520 07e9 5D01     		.2byte	0x15d
 28521 07eb 11080000 		.4byte	0x811
 28522 07ef 28       		.byte	0x28
 28523 07f0 00       		.byte	0
 28524 07f1 09       		.uleb128 0x9
 28525 07f2 97000000 		.4byte	0x97
 28526 07f6 01080000 		.4byte	0x801
 28527 07fa 0A       		.uleb128 0xa
 28528 07fb 18010000 		.4byte	0x118
 28529 07ff 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 623


 28530 0800 00       		.byte	0
 28531 0801 09       		.uleb128 0x9
 28532 0802 DF000000 		.4byte	0xdf
 28533 0806 11080000 		.4byte	0x811
 28534 080a 0A       		.uleb128 0xa
 28535 080b 18010000 		.4byte	0x118
 28536 080f 02       		.byte	0x2
 28537 0810 00       		.byte	0
 28538 0811 09       		.uleb128 0x9
 28539 0812 97000000 		.4byte	0x97
 28540 0816 21080000 		.4byte	0x821
 28541 081a 0A       		.uleb128 0xa
 28542 081b 18010000 		.4byte	0x118
 28543 081f 07       		.byte	0x7
 28544 0820 00       		.byte	0
 28545 0821 11       		.uleb128 0x11
 28546 0822 21020000 		.4byte	.LASF156
 28547 0826 10       		.byte	0x10
 28548 0827 08       		.byte	0x8
 28549 0828 6401     		.2byte	0x164
 28550 082a 70080000 		.4byte	0x870
 28551 082e 12       		.uleb128 0x12
 28552 082f 400D0000 		.4byte	.LASF157
 28553 0833 08       		.byte	0x8
 28554 0834 6501     		.2byte	0x165
 28555 0836 70080000 		.4byte	0x870
 28556 083a 00       		.byte	0
 28557 083b 12       		.uleb128 0x12
 28558 083c 09150000 		.4byte	.LASF158
 28559 0840 08       		.byte	0x8
 28560 0841 6601     		.2byte	0x166
 28561 0843 05050000 		.4byte	0x505
 28562 0847 04       		.byte	0x4
 28563 0848 12       		.uleb128 0x12
 28564 0849 59060000 		.4byte	.LASF159
 28565 084d 08       		.byte	0x8
 28566 084e 6701     		.2byte	0x167
 28567 0850 80080000 		.4byte	0x880
 28568 0854 0C       		.byte	0xc
 28569 0855 12       		.uleb128 0x12
 28570 0856 96100000 		.4byte	.LASF160
 28571 085a 08       		.byte	0x8
 28572 085b 6801     		.2byte	0x168
 28573 085d 97000000 		.4byte	0x97
 28574 0861 0E       		.byte	0xe
 28575 0862 12       		.uleb128 0x12
 28576 0863 0B130000 		.4byte	.LASF161
 28577 0867 08       		.byte	0x8
 28578 0868 6901     		.2byte	0x169
 28579 086a 97000000 		.4byte	0x97
 28580 086e 0F       		.byte	0xf
 28581 086f 00       		.byte	0
 28582 0870 09       		.uleb128 0x9
 28583 0871 A3000000 		.4byte	0xa3
 28584 0875 80080000 		.4byte	0x880
 28585 0879 0A       		.uleb128 0xa
 28586 087a 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 624


 28587 087e 01       		.byte	0x1
 28588 087f 00       		.byte	0
 28589 0880 09       		.uleb128 0x9
 28590 0881 97000000 		.4byte	0x97
 28591 0885 90080000 		.4byte	0x890
 28592 0889 0A       		.uleb128 0xa
 28593 088a 18010000 		.4byte	0x118
 28594 088e 01       		.byte	0x1
 28595 088f 00       		.byte	0
 28596 0890 11       		.uleb128 0x11
 28597 0891 9A0C0000 		.4byte	.LASF162
 28598 0895 20       		.byte	0x20
 28599 0896 08       		.byte	0x8
 28600 0897 7001     		.2byte	0x170
 28601 0899 D2080000 		.4byte	0x8d2
 28602 089d 12       		.uleb128 0x12
 28603 089e D5020000 		.4byte	.LASF163
 28604 08a2 08       		.byte	0x8
 28605 08a3 7101     		.2byte	0x171
 28606 08a5 97000000 		.4byte	0x97
 28607 08a9 00       		.byte	0
 28608 08aa 12       		.uleb128 0x12
 28609 08ab 2B0E0000 		.4byte	.LASF164
 28610 08af 08       		.byte	0x8
 28611 08b0 7201     		.2byte	0x172
 28612 08b2 97000000 		.4byte	0x97
 28613 08b6 01       		.byte	0x1
 28614 08b7 12       		.uleb128 0x12
 28615 08b8 900B0000 		.4byte	.LASF165
 28616 08bc 08       		.byte	0x8
 28617 08bd 7301     		.2byte	0x173
 28618 08bf D2080000 		.4byte	0x8d2
 28619 08c3 02       		.byte	0x2
 28620 08c4 12       		.uleb128 0x12
 28621 08c5 5A030000 		.4byte	.LASF122
 28622 08c9 08       		.byte	0x8
 28623 08ca 7401     		.2byte	0x174
 28624 08cc F1070000 		.4byte	0x7f1
 28625 08d0 1B       		.byte	0x1b
 28626 08d1 00       		.byte	0
 28627 08d2 09       		.uleb128 0x9
 28628 08d3 97000000 		.4byte	0x97
 28629 08d7 E8080000 		.4byte	0x8e8
 28630 08db 0A       		.uleb128 0xa
 28631 08dc 18010000 		.4byte	0x118
 28632 08e0 04       		.byte	0x4
 28633 08e1 0A       		.uleb128 0xa
 28634 08e2 18010000 		.4byte	0x118
 28635 08e6 04       		.byte	0x4
 28636 08e7 00       		.byte	0
 28637 08e8 11       		.uleb128 0x11
 28638 08e9 89100000 		.4byte	.LASF166
 28639 08ed 20       		.byte	0x20
 28640 08ee 08       		.byte	0x8
 28641 08ef 7B01     		.2byte	0x17b
 28642 08f1 44090000 		.4byte	0x944
 28643 08f5 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 625


 28644 08f6 FF0D0000 		.4byte	.LASF167
 28645 08fa 08       		.byte	0x8
 28646 08fb 7C01     		.2byte	0x17c
 28647 08fd 44090000 		.4byte	0x944
 28648 0901 00       		.byte	0
 28649 0902 12       		.uleb128 0x12
 28650 0903 F8120000 		.4byte	.LASF168
 28651 0907 08       		.byte	0x8
 28652 0908 7D01     		.2byte	0x17d
 28653 090a 97000000 		.4byte	0x97
 28654 090e 06       		.byte	0x6
 28655 090f 12       		.uleb128 0x12
 28656 0910 4D130000 		.4byte	.LASF169
 28657 0914 08       		.byte	0x8
 28658 0915 7E01     		.2byte	0x17e
 28659 0917 97000000 		.4byte	0x97
 28660 091b 07       		.byte	0x7
 28661 091c 12       		.uleb128 0x12
 28662 091d 88060000 		.4byte	.LASF170
 28663 0921 08       		.byte	0x8
 28664 0922 7F01     		.2byte	0x17f
 28665 0924 54090000 		.4byte	0x954
 28666 0928 08       		.byte	0x8
 28667 0929 12       		.uleb128 0x12
 28668 092a E3020000 		.4byte	.LASF171
 28669 092e 08       		.byte	0x8
 28670 092f 8001     		.2byte	0x180
 28671 0931 97000000 		.4byte	0x97
 28672 0935 14       		.byte	0x14
 28673 0936 12       		.uleb128 0x12
 28674 0937 5A030000 		.4byte	.LASF122
 28675 093b 08       		.byte	0x8
 28676 093c 8101     		.2byte	0x181
 28677 093e 64090000 		.4byte	0x964
 28678 0942 15       		.byte	0x15
 28679 0943 00       		.byte	0
 28680 0944 09       		.uleb128 0x9
 28681 0945 97000000 		.4byte	0x97
 28682 0949 54090000 		.4byte	0x954
 28683 094d 0A       		.uleb128 0xa
 28684 094e 18010000 		.4byte	0x118
 28685 0952 05       		.byte	0x5
 28686 0953 00       		.byte	0
 28687 0954 09       		.uleb128 0x9
 28688 0955 97000000 		.4byte	0x97
 28689 0959 64090000 		.4byte	0x964
 28690 095d 0A       		.uleb128 0xa
 28691 095e 18010000 		.4byte	0x118
 28692 0962 0B       		.byte	0xb
 28693 0963 00       		.byte	0
 28694 0964 09       		.uleb128 0x9
 28695 0965 97000000 		.4byte	0x97
 28696 0969 74090000 		.4byte	0x974
 28697 096d 0A       		.uleb128 0xa
 28698 096e 18010000 		.4byte	0x118
 28699 0972 0A       		.byte	0xa
 28700 0973 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 626


 28701 0974 11       		.uleb128 0x11
 28702 0975 5E100000 		.4byte	.LASF172
 28703 0979 20       		.byte	0x20
 28704 097a 08       		.byte	0x8
 28705 097b 8801     		.2byte	0x188
 28706 097d A9090000 		.4byte	0x9a9
 28707 0981 12       		.uleb128 0x12
 28708 0982 4E040000 		.4byte	.LASF173
 28709 0986 08       		.byte	0x8
 28710 0987 8901     		.2byte	0x189
 28711 0989 40010000 		.4byte	0x140
 28712 098d 00       		.byte	0
 28713 098e 12       		.uleb128 0x12
 28714 098f 38030000 		.4byte	.LASF174
 28715 0993 08       		.byte	0x8
 28716 0994 8A01     		.2byte	0x18a
 28717 0996 21080000 		.4byte	0x821
 28718 099a 08       		.byte	0x8
 28719 099b 12       		.uleb128 0x12
 28720 099c 5A030000 		.4byte	.LASF122
 28721 09a0 08       		.byte	0x8
 28722 09a1 8B01     		.2byte	0x18b
 28723 09a3 11080000 		.4byte	0x811
 28724 09a7 18       		.byte	0x18
 28725 09a8 00       		.byte	0
 28726 09a9 11       		.uleb128 0x11
 28727 09aa 880A0000 		.4byte	.LASF175
 28728 09ae 10       		.byte	0x10
 28729 09af 08       		.byte	0x8
 28730 09b0 9201     		.2byte	0x192
 28731 09b2 F8090000 		.4byte	0x9f8
 28732 09b6 12       		.uleb128 0x12
 28733 09b7 31090000 		.4byte	.LASF176
 28734 09bb 08       		.byte	0x8
 28735 09bc 9301     		.2byte	0x193
 28736 09be D3000000 		.4byte	0xd3
 28737 09c2 00       		.byte	0
 28738 09c3 12       		.uleb128 0x12
 28739 09c4 92150000 		.4byte	.LASF177
 28740 09c8 08       		.byte	0x8
 28741 09c9 9401     		.2byte	0x194
 28742 09cb D3000000 		.4byte	0xd3
 28743 09cf 04       		.byte	0x4
 28744 09d0 12       		.uleb128 0x12
 28745 09d1 63060000 		.4byte	.LASF178
 28746 09d5 08       		.byte	0x8
 28747 09d6 9501     		.2byte	0x195
 28748 09d8 D3000000 		.4byte	0xd3
 28749 09dc 08       		.byte	0x8
 28750 09dd 12       		.uleb128 0x12
 28751 09de 8D070000 		.4byte	.LASF179
 28752 09e2 08       		.byte	0x8
 28753 09e3 9601     		.2byte	0x196
 28754 09e5 97000000 		.4byte	0x97
 28755 09e9 0C       		.byte	0xc
 28756 09ea 12       		.uleb128 0x12
 28757 09eb 5A030000 		.4byte	.LASF122
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 627


 28758 09ef 08       		.byte	0x8
 28759 09f0 9701     		.2byte	0x197
 28760 09f2 C4050000 		.4byte	0x5c4
 28761 09f6 0D       		.byte	0xd
 28762 09f7 00       		.byte	0
 28763 09f8 11       		.uleb128 0x11
 28764 09f9 8F110000 		.4byte	.LASF180
 28765 09fd 10       		.byte	0x10
 28766 09fe 08       		.byte	0x8
 28767 09ff 9E01     		.2byte	0x19e
 28768 0a01 3A0A0000 		.4byte	0xa3a
 28769 0a05 12       		.uleb128 0x12
 28770 0a06 A0070000 		.4byte	.LASF181
 28771 0a0a 08       		.byte	0x8
 28772 0a0b 9F01     		.2byte	0x19f
 28773 0a0d A3000000 		.4byte	0xa3
 28774 0a11 00       		.byte	0
 28775 0a12 12       		.uleb128 0x12
 28776 0a13 C3100000 		.4byte	.LASF182
 28777 0a17 08       		.byte	0x8
 28778 0a18 A001     		.2byte	0x1a0
 28779 0a1a C7000000 		.4byte	0xc7
 28780 0a1e 02       		.byte	0x2
 28781 0a1f 12       		.uleb128 0x12
 28782 0a20 A9080000 		.4byte	.LASF183
 28783 0a24 08       		.byte	0x8
 28784 0a25 A101     		.2byte	0x1a1
 28785 0a27 70080000 		.4byte	0x870
 28786 0a2b 04       		.byte	0x4
 28787 0a2c 12       		.uleb128 0x12
 28788 0a2d 5A030000 		.4byte	.LASF122
 28789 0a31 08       		.byte	0x8
 28790 0a32 A201     		.2byte	0x1a2
 28791 0a34 11080000 		.4byte	0x811
 28792 0a38 08       		.byte	0x8
 28793 0a39 00       		.byte	0
 28794 0a3a 11       		.uleb128 0x11
 28795 0a3b AD010000 		.4byte	.LASF184
 28796 0a3f 10       		.byte	0x10
 28797 0a40 08       		.byte	0x8
 28798 0a41 A901     		.2byte	0x1a9
 28799 0a43 6F0A0000 		.4byte	0xa6f
 28800 0a47 12       		.uleb128 0x12
 28801 0a48 FD0F0000 		.4byte	.LASF185
 28802 0a4c 08       		.byte	0x8
 28803 0a4d AA01     		.2byte	0x1aa
 28804 0a4f 97000000 		.4byte	0x97
 28805 0a53 00       		.byte	0
 28806 0a54 12       		.uleb128 0x12
 28807 0a55 5A0B0000 		.4byte	.LASF186
 28808 0a59 08       		.byte	0x8
 28809 0a5a AB01     		.2byte	0x1ab
 28810 0a5c 97000000 		.4byte	0x97
 28811 0a60 01       		.byte	0x1
 28812 0a61 12       		.uleb128 0x12
 28813 0a62 5A030000 		.4byte	.LASF122
 28814 0a66 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 628


 28815 0a67 AC01     		.2byte	0x1ac
 28816 0a69 6F0A0000 		.4byte	0xa6f
 28817 0a6d 02       		.byte	0x2
 28818 0a6e 00       		.byte	0
 28819 0a6f 09       		.uleb128 0x9
 28820 0a70 97000000 		.4byte	0x97
 28821 0a74 7F0A0000 		.4byte	0xa7f
 28822 0a78 0A       		.uleb128 0xa
 28823 0a79 18010000 		.4byte	0x118
 28824 0a7d 0D       		.byte	0xd
 28825 0a7e 00       		.byte	0
 28826 0a7f 11       		.uleb128 0x11
 28827 0a80 950D0000 		.4byte	.LASF187
 28828 0a84 10       		.byte	0x10
 28829 0a85 08       		.byte	0x8
 28830 0a86 B301     		.2byte	0x1b3
 28831 0a88 C10A0000 		.4byte	0xac1
 28832 0a8c 12       		.uleb128 0x12
 28833 0a8d 43140000 		.4byte	.LASF188
 28834 0a91 08       		.byte	0x8
 28835 0a92 B401     		.2byte	0x1b4
 28836 0a94 D3000000 		.4byte	0xd3
 28837 0a98 00       		.byte	0
 28838 0a99 12       		.uleb128 0x12
 28839 0a9a 78070000 		.4byte	.LASF189
 28840 0a9e 08       		.byte	0x8
 28841 0a9f B501     		.2byte	0x1b5
 28842 0aa1 EB000000 		.4byte	0xeb
 28843 0aa5 04       		.byte	0x4
 28844 0aa6 12       		.uleb128 0x12
 28845 0aa7 8F0F0000 		.4byte	.LASF190
 28846 0aab 08       		.byte	0x8
 28847 0aac B601     		.2byte	0x1b6
 28848 0aae EB000000 		.4byte	0xeb
 28849 0ab2 08       		.byte	0x8
 28850 0ab3 12       		.uleb128 0x12
 28851 0ab4 5A030000 		.4byte	.LASF122
 28852 0ab8 08       		.byte	0x8
 28853 0ab9 B701     		.2byte	0x1b7
 28854 0abb C10A0000 		.4byte	0xac1
 28855 0abf 0C       		.byte	0xc
 28856 0ac0 00       		.byte	0
 28857 0ac1 09       		.uleb128 0x9
 28858 0ac2 97000000 		.4byte	0x97
 28859 0ac6 D10A0000 		.4byte	0xad1
 28860 0aca 0A       		.uleb128 0xa
 28861 0acb 18010000 		.4byte	0x118
 28862 0acf 03       		.byte	0x3
 28863 0ad0 00       		.byte	0
 28864 0ad1 11       		.uleb128 0x11
 28865 0ad2 64020000 		.4byte	.LASF191
 28866 0ad6 12       		.byte	0x12
 28867 0ad7 08       		.byte	0x8
 28868 0ad8 BE01     		.2byte	0x1be
 28869 0ada 130B0000 		.4byte	0xb13
 28870 0ade 12       		.uleb128 0x12
 28871 0adf 6A150000 		.4byte	.LASF192
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 629


 28872 0ae3 08       		.byte	0x8
 28873 0ae4 BF01     		.2byte	0x1bf
 28874 0ae6 97000000 		.4byte	0x97
 28875 0aea 00       		.byte	0
 28876 0aeb 12       		.uleb128 0x12
 28877 0aec D6130000 		.4byte	.LASF193
 28878 0af0 08       		.byte	0x8
 28879 0af1 C001     		.2byte	0x1c0
 28880 0af3 70080000 		.4byte	0x870
 28881 0af7 02       		.byte	0x2
 28882 0af8 12       		.uleb128 0x12
 28883 0af9 44000000 		.4byte	.LASF194
 28884 0afd 08       		.byte	0x8
 28885 0afe C101     		.2byte	0x1c1
 28886 0b00 97000000 		.4byte	0x97
 28887 0b04 06       		.byte	0x6
 28888 0b05 12       		.uleb128 0x12
 28889 0b06 5A030000 		.4byte	.LASF122
 28890 0b0a 08       		.byte	0x8
 28891 0b0b C201     		.2byte	0x1c2
 28892 0b0d 130B0000 		.4byte	0xb13
 28893 0b11 07       		.byte	0x7
 28894 0b12 00       		.byte	0
 28895 0b13 09       		.uleb128 0x9
 28896 0b14 97000000 		.4byte	0x97
 28897 0b18 230B0000 		.4byte	0xb23
 28898 0b1c 0A       		.uleb128 0xa
 28899 0b1d 18010000 		.4byte	0x118
 28900 0b21 09       		.byte	0x9
 28901 0b22 00       		.byte	0
 28902 0b23 14       		.uleb128 0x14
 28903 0b24 5E140000 		.4byte	.LASF195
 28904 0b28 F402     		.2byte	0x2f4
 28905 0b2a 08       		.byte	0x8
 28906 0b2b CB01     		.2byte	0x1cb
 28907 0b2d 080C0000 		.4byte	0xc08
 28908 0b31 12       		.uleb128 0x12
 28909 0b32 3E0C0000 		.4byte	.LASF196
 28910 0b36 08       		.byte	0x8
 28911 0b37 CD01     		.2byte	0x1cd
 28912 0b39 97000000 		.4byte	0x97
 28913 0b3d 00       		.byte	0
 28914 0b3e 12       		.uleb128 0x12
 28915 0b3f 5A030000 		.4byte	.LASF122
 28916 0b43 08       		.byte	0x8
 28917 0b44 CE01     		.2byte	0x1ce
 28918 0b46 080C0000 		.4byte	0xc08
 28919 0b4a 01       		.byte	0x1
 28920 0b4b 13       		.uleb128 0x13
 28921 0b4c 636E7400 		.ascii	"cnt\000"
 28922 0b50 08       		.byte	0x8
 28923 0b51 CF01     		.2byte	0x1cf
 28924 0b53 9C040000 		.4byte	0x49c
 28925 0b57 10       		.byte	0x10
 28926 0b58 12       		.uleb128 0x12
 28927 0b59 11030000 		.4byte	.LASF197
 28928 0b5d 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 630


 28929 0b5e D001     		.2byte	0x1d0
 28930 0b60 180C0000 		.4byte	0xc18
 28931 0b64 60       		.byte	0x60
 28932 0b65 13       		.uleb128 0x13
 28933 0b66 64657600 		.ascii	"dev\000"
 28934 0b6a 08       		.byte	0x8
 28935 0b6b D101     		.2byte	0x1d1
 28936 0b6d 35050000 		.4byte	0x535
 28937 0b71 A0       		.byte	0xa0
 28938 0b72 12       		.uleb128 0x12
 28939 0b73 E0110000 		.4byte	.LASF198
 28940 0b77 08       		.byte	0x8
 28941 0b78 D201     		.2byte	0x1d2
 28942 0b7a 280C0000 		.4byte	0xc28
 28943 0b7e B0       		.byte	0xb0
 28944 0b7f 15       		.uleb128 0x15
 28945 0b80 656E6300 		.ascii	"enc\000"
 28946 0b84 08       		.byte	0x8
 28947 0b85 D301     		.2byte	0x1d3
 28948 0b87 380C0000 		.4byte	0xc38
 28949 0b8b 9001     		.2byte	0x190
 28950 0b8d 15       		.uleb128 0x15
 28951 0b8e 656D6700 		.ascii	"emg\000"
 28952 0b92 08       		.byte	0x8
 28953 0b93 D401     		.2byte	0x1d4
 28954 0b95 21080000 		.4byte	0x821
 28955 0b99 F001     		.2byte	0x1f0
 28956 0b9b 15       		.uleb128 0x15
 28957 0b9c 696D7500 		.ascii	"imu\000"
 28958 0ba0 08       		.byte	0x8
 28959 0ba1 D501     		.2byte	0x1d5
 28960 0ba3 90080000 		.4byte	0x890
 28961 0ba7 0002     		.2byte	0x200
 28962 0ba9 15       		.uleb128 0x15
 28963 0baa 65787000 		.ascii	"exp\000"
 28964 0bae 08       		.byte	0x8
 28965 0baf D601     		.2byte	0x1d6
 28966 0bb1 E8080000 		.4byte	0x8e8
 28967 0bb5 2002     		.2byte	0x220
 28968 0bb7 16       		.uleb128 0x16
 28969 0bb8 85000000 		.4byte	.LASF199
 28970 0bbc 08       		.byte	0x8
 28971 0bbd D701     		.2byte	0x1d7
 28972 0bbf 480C0000 		.4byte	0xc48
 28973 0bc3 4002     		.2byte	0x240
 28974 0bc5 15       		.uleb128 0x15
 28975 0bc6 534800   		.ascii	"SH\000"
 28976 0bc9 08       		.byte	0x8
 28977 0bca D901     		.2byte	0x1d9
 28978 0bcc A9090000 		.4byte	0x9a9
 28979 0bd0 A002     		.2byte	0x2a0
 28980 0bd2 16       		.uleb128 0x16
 28981 0bd3 21010000 		.4byte	.LASF200
 28982 0bd7 08       		.byte	0x8
 28983 0bd8 DA01     		.2byte	0x1da
 28984 0bda F8090000 		.4byte	0x9f8
 28985 0bde B002     		.2byte	0x2b0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 631


 28986 0be0 15       		.uleb128 0x15
 28987 0be1 4D5300   		.ascii	"MS\000"
 28988 0be4 08       		.byte	0x8
 28989 0be5 DB01     		.2byte	0x1db
 28990 0be7 3A0A0000 		.4byte	0xa3a
 28991 0beb C002     		.2byte	0x2c0
 28992 0bed 15       		.uleb128 0x15
 28993 0bee 464200   		.ascii	"FB\000"
 28994 0bf1 08       		.byte	0x8
 28995 0bf2 DC01     		.2byte	0x1dc
 28996 0bf4 7F0A0000 		.4byte	0xa7f
 28997 0bf8 D002     		.2byte	0x2d0
 28998 0bfa 15       		.uleb128 0x15
 28999 0bfb 575200   		.ascii	"WR\000"
 29000 0bfe 08       		.byte	0x8
 29001 0bff DD01     		.2byte	0x1dd
 29002 0c01 D10A0000 		.4byte	0xad1
 29003 0c05 E002     		.2byte	0x2e0
 29004 0c07 00       		.byte	0
 29005 0c08 09       		.uleb128 0x9
 29006 0c09 97000000 		.4byte	0x97
 29007 0c0d 180C0000 		.4byte	0xc18
 29008 0c11 0A       		.uleb128 0xa
 29009 0c12 18010000 		.4byte	0x118
 29010 0c16 0E       		.byte	0xe
 29011 0c17 00       		.byte	0
 29012 0c18 09       		.uleb128 0x9
 29013 0c19 97000000 		.4byte	0x97
 29014 0c1d 280C0000 		.4byte	0xc28
 29015 0c21 0A       		.uleb128 0xa
 29016 0c22 18010000 		.4byte	0x118
 29017 0c26 3F       		.byte	0x3f
 29018 0c27 00       		.byte	0
 29019 0c28 09       		.uleb128 0x9
 29020 0c29 D4050000 		.4byte	0x5d4
 29021 0c2d 380C0000 		.4byte	0xc38
 29022 0c31 0A       		.uleb128 0xa
 29023 0c32 18010000 		.4byte	0x118
 29024 0c36 01       		.byte	0x1
 29025 0c37 00       		.byte	0
 29026 0c38 09       		.uleb128 0x9
 29027 0c39 6E070000 		.4byte	0x76e
 29028 0c3d 480C0000 		.4byte	0xc48
 29029 0c41 0A       		.uleb128 0xa
 29030 0c42 18010000 		.4byte	0x118
 29031 0c46 01       		.byte	0x1
 29032 0c47 00       		.byte	0
 29033 0c48 09       		.uleb128 0x9
 29034 0c49 74090000 		.4byte	0x974
 29035 0c4d 580C0000 		.4byte	0xc58
 29036 0c51 0A       		.uleb128 0xa
 29037 0c52 18010000 		.4byte	0x118
 29038 0c56 02       		.byte	0x2
 29039 0c57 00       		.byte	0
 29040 0c58 11       		.uleb128 0x11
 29041 0c59 D70E0000 		.4byte	.LASF201
 29042 0c5d 28       		.byte	0x28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 632


 29043 0c5e 08       		.byte	0x8
 29044 0c5f E801     		.2byte	0x1e8
 29045 0c61 B40C0000 		.4byte	0xcb4
 29046 0c65 12       		.uleb128 0x12
 29047 0c66 90050000 		.4byte	.LASF202
 29048 0c6a 08       		.byte	0x8
 29049 0c6b E901     		.2byte	0x1e9
 29050 0c6d 97000000 		.4byte	0x97
 29051 0c71 00       		.byte	0
 29052 0c72 12       		.uleb128 0x12
 29053 0c73 67030000 		.4byte	.LASF203
 29054 0c77 08       		.byte	0x8
 29055 0c78 EA01     		.2byte	0x1ea
 29056 0c7a B40C0000 		.4byte	0xcb4
 29057 0c7e 02       		.byte	0x2
 29058 0c7f 12       		.uleb128 0x12
 29059 0c80 F40D0000 		.4byte	.LASF204
 29060 0c84 08       		.byte	0x8
 29061 0c85 EB01     		.2byte	0x1eb
 29062 0c87 B40C0000 		.4byte	0xcb4
 29063 0c8b 08       		.byte	0x8
 29064 0c8c 12       		.uleb128 0x12
 29065 0c8d E30E0000 		.4byte	.LASF205
 29066 0c91 08       		.byte	0x8
 29067 0c92 EC01     		.2byte	0x1ec
 29068 0c94 B40C0000 		.4byte	0xcb4
 29069 0c98 0E       		.byte	0xe
 29070 0c99 12       		.uleb128 0x12
 29071 0c9a 18090000 		.4byte	.LASF206
 29072 0c9e 08       		.byte	0x8
 29073 0c9f ED01     		.2byte	0x1ed
 29074 0ca1 C40C0000 		.4byte	0xcc4
 29075 0ca5 14       		.byte	0x14
 29076 0ca6 12       		.uleb128 0x12
 29077 0ca7 36020000 		.4byte	.LASF207
 29078 0cab 08       		.byte	0x8
 29079 0cac EE01     		.2byte	0x1ee
 29080 0cae C7000000 		.4byte	0xc7
 29081 0cb2 24       		.byte	0x24
 29082 0cb3 00       		.byte	0
 29083 0cb4 09       		.uleb128 0x9
 29084 0cb5 C7000000 		.4byte	0xc7
 29085 0cb9 C40C0000 		.4byte	0xcc4
 29086 0cbd 0A       		.uleb128 0xa
 29087 0cbe 18010000 		.4byte	0x118
 29088 0cc2 02       		.byte	0x2
 29089 0cc3 00       		.byte	0
 29090 0cc4 09       		.uleb128 0x9
 29091 0cc5 EB000000 		.4byte	0xeb
 29092 0cc9 D40C0000 		.4byte	0xcd4
 29093 0ccd 0A       		.uleb128 0xa
 29094 0cce 18010000 		.4byte	0x118
 29095 0cd2 03       		.byte	0x3
 29096 0cd3 00       		.byte	0
 29097 0cd4 11       		.uleb128 0x11
 29098 0cd5 5F040000 		.4byte	.LASF208
 29099 0cd9 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 633


 29100 0cda 08       		.byte	0x8
 29101 0cdb FE01     		.2byte	0x1fe
 29102 0cdd 160D0000 		.4byte	0xd16
 29103 0ce1 12       		.uleb128 0x12
 29104 0ce2 72080000 		.4byte	.LASF209
 29105 0ce6 08       		.byte	0x8
 29106 0ce7 FF01     		.2byte	0x1ff
 29107 0ce9 97000000 		.4byte	0x97
 29108 0ced 00       		.byte	0
 29109 0cee 12       		.uleb128 0x12
 29110 0cef B7150000 		.4byte	.LASF210
 29111 0cf3 08       		.byte	0x8
 29112 0cf4 0002     		.2byte	0x200
 29113 0cf6 97000000 		.4byte	0x97
 29114 0cfa 01       		.byte	0x1
 29115 0cfb 12       		.uleb128 0x12
 29116 0cfc F6060000 		.4byte	.LASF211
 29117 0d00 08       		.byte	0x8
 29118 0d01 0102     		.2byte	0x201
 29119 0d03 C7000000 		.4byte	0xc7
 29120 0d07 02       		.byte	0x2
 29121 0d08 12       		.uleb128 0x12
 29122 0d09 2C0B0000 		.4byte	.LASF212
 29123 0d0d 08       		.byte	0x8
 29124 0d0e 0202     		.2byte	0x202
 29125 0d10 C7000000 		.4byte	0xc7
 29126 0d14 04       		.byte	0x4
 29127 0d15 00       		.byte	0
 29128 0d16 17       		.uleb128 0x17
 29129 0d17 34100000 		.4byte	.LASF404
 29130 0d1b 02       		.byte	0x2
 29131 0d1c 1403     		.2byte	0x314
 29132 0d1e 8C000000 		.4byte	0x8c
 29133 0d22 03       		.byte	0x3
 29134 0d23 400D0000 		.4byte	0xd40
 29135 0d27 18       		.uleb128 0x18
 29136 0d28 8A050000 		.4byte	.LASF298
 29137 0d2c 02       		.byte	0x2
 29138 0d2d 1403     		.2byte	0x314
 29139 0d2f 8C000000 		.4byte	0x8c
 29140 0d33 19       		.uleb128 0x19
 29141 0d34 4A020000 		.4byte	.LASF405
 29142 0d38 02       		.byte	0x2
 29143 0d39 1603     		.2byte	0x316
 29144 0d3b 8C000000 		.4byte	0x8c
 29145 0d3f 00       		.byte	0
 29146 0d40 1A       		.uleb128 0x1a
 29147 0d41 83110000 		.4byte	.LASF213
 29148 0d45 01       		.byte	0x1
 29149 0d46 3D       		.byte	0x3d
 29150 0d47 00000000 		.4byte	.LFB64
 29151 0d4b 00050000 		.4byte	.LFE64-.LFB64
 29152 0d4f 01       		.uleb128 0x1
 29153 0d50 9C       		.byte	0x9c
 29154 0d51 1A0E0000 		.4byte	0xe1a
 29155 0d55 1B       		.uleb128 0x1b
 29156 0d56 FC060000 		.4byte	.LASF215
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 634


 29157 0d5a 01       		.byte	0x1
 29158 0d5b 3F       		.byte	0x3f
 29159 0d5c 97000000 		.4byte	0x97
 29160 0d60 02       		.uleb128 0x2
 29161 0d61 91       		.byte	0x91
 29162 0d62 77       		.sleb128 -9
 29163 0d63 1C       		.uleb128 0x1c
 29164 0d64 160D0000 		.4byte	0xd16
 29165 0d68 44030000 		.4byte	.LBB10
 29166 0d6c 08000000 		.4byte	.LBE10-.LBB10
 29167 0d70 01       		.byte	0x1
 29168 0d71 9C       		.byte	0x9c
 29169 0d72 910D0000 		.4byte	0xd91
 29170 0d76 1D       		.uleb128 0x1d
 29171 0d77 270D0000 		.4byte	0xd27
 29172 0d7b 02       		.uleb128 0x2
 29173 0d7c 91       		.byte	0x91
 29174 0d7d 64       		.sleb128 -28
 29175 0d7e 1E       		.uleb128 0x1e
 29176 0d7f 44030000 		.4byte	.LBB11
 29177 0d83 08000000 		.4byte	.LBE11-.LBB11
 29178 0d87 1F       		.uleb128 0x1f
 29179 0d88 330D0000 		.4byte	0xd33
 29180 0d8c 02       		.uleb128 0x2
 29181 0d8d 91       		.byte	0x91
 29182 0d8e 60       		.sleb128 -32
 29183 0d8f 00       		.byte	0
 29184 0d90 00       		.byte	0
 29185 0d91 1C       		.uleb128 0x1c
 29186 0d92 160D0000 		.4byte	0xd16
 29187 0d96 62030000 		.4byte	.LBB12
 29188 0d9a 08000000 		.4byte	.LBE12-.LBB12
 29189 0d9e 01       		.byte	0x1
 29190 0d9f A8       		.byte	0xa8
 29191 0da0 BF0D0000 		.4byte	0xdbf
 29192 0da4 1D       		.uleb128 0x1d
 29193 0da5 270D0000 		.4byte	0xd27
 29194 0da9 02       		.uleb128 0x2
 29195 0daa 91       		.byte	0x91
 29196 0dab 70       		.sleb128 -16
 29197 0dac 1E       		.uleb128 0x1e
 29198 0dad 62030000 		.4byte	.LBB13
 29199 0db1 08000000 		.4byte	.LBE13-.LBB13
 29200 0db5 1F       		.uleb128 0x1f
 29201 0db6 330D0000 		.4byte	0xd33
 29202 0dba 02       		.uleb128 0x2
 29203 0dbb 91       		.byte	0x91
 29204 0dbc 5C       		.sleb128 -36
 29205 0dbd 00       		.byte	0
 29206 0dbe 00       		.byte	0
 29207 0dbf 20       		.uleb128 0x20
 29208 0dc0 160D0000 		.4byte	0xd16
 29209 0dc4 A4040000 		.4byte	.LBB14
 29210 0dc8 08000000 		.4byte	.LBE14-.LBB14
 29211 0dcc 01       		.byte	0x1
 29212 0dcd 0401     		.2byte	0x104
 29213 0dcf EE0D0000 		.4byte	0xdee
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 635


 29214 0dd3 1D       		.uleb128 0x1d
 29215 0dd4 270D0000 		.4byte	0xd27
 29216 0dd8 02       		.uleb128 0x2
 29217 0dd9 91       		.byte	0x91
 29218 0dda 6C       		.sleb128 -20
 29219 0ddb 1E       		.uleb128 0x1e
 29220 0ddc A4040000 		.4byte	.LBB15
 29221 0de0 08000000 		.4byte	.LBE15-.LBB15
 29222 0de4 1F       		.uleb128 0x1f
 29223 0de5 330D0000 		.4byte	0xd33
 29224 0de9 02       		.uleb128 0x2
 29225 0dea 91       		.byte	0x91
 29226 0deb 58       		.sleb128 -40
 29227 0dec 00       		.byte	0
 29228 0ded 00       		.byte	0
 29229 0dee 21       		.uleb128 0x21
 29230 0def 160D0000 		.4byte	0xd16
 29231 0df3 D4040000 		.4byte	.LBB16
 29232 0df7 08000000 		.4byte	.LBE16-.LBB16
 29233 0dfb 01       		.byte	0x1
 29234 0dfc 2201     		.2byte	0x122
 29235 0dfe 1D       		.uleb128 0x1d
 29236 0dff 270D0000 		.4byte	0xd27
 29237 0e03 02       		.uleb128 0x2
 29238 0e04 91       		.byte	0x91
 29239 0e05 68       		.sleb128 -24
 29240 0e06 1E       		.uleb128 0x1e
 29241 0e07 D4040000 		.4byte	.LBB17
 29242 0e0b 08000000 		.4byte	.LBE17-.LBB17
 29243 0e0f 1F       		.uleb128 0x1f
 29244 0e10 330D0000 		.4byte	0xd33
 29245 0e14 02       		.uleb128 0x2
 29246 0e15 91       		.byte	0x91
 29247 0e16 54       		.sleb128 -44
 29248 0e17 00       		.byte	0
 29249 0e18 00       		.byte	0
 29250 0e19 00       		.byte	0
 29251 0e1a 22       		.uleb128 0x22
 29252 0e1b 00000000 		.4byte	.LASF214
 29253 0e1f 01       		.byte	0x1
 29254 0e20 3101     		.2byte	0x131
 29255 0e22 00000000 		.4byte	.LFB65
 29256 0e26 22000000 		.4byte	.LFE65-.LFB65
 29257 0e2a 01       		.uleb128 0x1
 29258 0e2b 9C       		.byte	0x9c
 29259 0e2c 410E0000 		.4byte	0xe41
 29260 0e30 23       		.uleb128 0x23
 29261 0e31 19060000 		.4byte	.LASF216
 29262 0e35 01       		.byte	0x1
 29263 0e36 3201     		.2byte	0x132
 29264 0e38 410E0000 		.4byte	0xe41
 29265 0e3c 03       		.uleb128 0x3
 29266 0e3d 91       		.byte	0x91
 29267 0e3e 9C74     		.sleb128 -1508
 29268 0e40 00       		.byte	0
 29269 0e41 09       		.uleb128 0x9
 29270 0e42 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 636


 29271 0e46 520E0000 		.4byte	0xe52
 29272 0e4a 24       		.uleb128 0x24
 29273 0e4b 18010000 		.4byte	0x118
 29274 0e4f DB05     		.2byte	0x5db
 29275 0e51 00       		.byte	0
 29276 0e52 22       		.uleb128 0x22
 29277 0e53 8F140000 		.4byte	.LASF217
 29278 0e57 01       		.byte	0x1
 29279 0e58 3D01     		.2byte	0x13d
 29280 0e5a 00000000 		.4byte	.LFB66
 29281 0e5e 34010000 		.4byte	.LFE66-.LFB66
 29282 0e62 01       		.uleb128 0x1
 29283 0e63 9C       		.byte	0x9c
 29284 0e64 9B0E0000 		.4byte	0xe9b
 29285 0e68 25       		.uleb128 0x25
 29286 0e69 E9130000 		.4byte	.LASF220
 29287 0e6d 01       		.byte	0x1
 29288 0e6e 3D01     		.2byte	0x13d
 29289 0e70 A3000000 		.4byte	0xa3
 29290 0e74 04       		.uleb128 0x4
 29291 0e75 91       		.byte	0x91
 29292 0e76 B6C47E   		.sleb128 -24010
 29293 0e79 23       		.uleb128 0x23
 29294 0e7a 19060000 		.4byte	.LASF216
 29295 0e7e 01       		.byte	0x1
 29296 0e7f 3E01     		.2byte	0x13e
 29297 0e81 9B0E0000 		.4byte	0xe9b
 29298 0e85 03       		.uleb128 0x3
 29299 0e86 91       		.byte	0x91
 29300 0e87 D860     		.sleb128 -4008
 29301 0e89 23       		.uleb128 0x23
 29302 0e8a E6080000 		.4byte	.LASF218
 29303 0e8e 01       		.byte	0x1
 29304 0e8f 3F01     		.2byte	0x13f
 29305 0e91 AC0E0000 		.4byte	0xeac
 29306 0e95 04       		.uleb128 0x4
 29307 0e96 91       		.byte	0x91
 29308 0e97 B8C47E   		.sleb128 -24008
 29309 0e9a 00       		.byte	0
 29310 0e9b 09       		.uleb128 0x9
 29311 0e9c F9000000 		.4byte	0xf9
 29312 0ea0 AC0E0000 		.4byte	0xeac
 29313 0ea4 24       		.uleb128 0x24
 29314 0ea5 18010000 		.4byte	0x118
 29315 0ea9 9F0F     		.2byte	0xf9f
 29316 0eab 00       		.byte	0
 29317 0eac 09       		.uleb128 0x9
 29318 0ead F9000000 		.4byte	0xf9
 29319 0eb1 BD0E0000 		.4byte	0xebd
 29320 0eb5 24       		.uleb128 0x24
 29321 0eb6 18010000 		.4byte	0x118
 29322 0eba 1F4E     		.2byte	0x4e1f
 29323 0ebc 00       		.byte	0
 29324 0ebd 22       		.uleb128 0x22
 29325 0ebe F0010000 		.4byte	.LASF219
 29326 0ec2 01       		.byte	0x1
 29327 0ec3 6901     		.2byte	0x169
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 637


 29328 0ec5 00000000 		.4byte	.LFB67
 29329 0ec9 2C320000 		.4byte	.LFE67-.LFB67
 29330 0ecd 01       		.uleb128 0x1
 29331 0ece 9C       		.byte	0x9c
 29332 0ecf 61100000 		.4byte	0x1061
 29333 0ed3 25       		.uleb128 0x25
 29334 0ed4 A00D0000 		.4byte	.LASF221
 29335 0ed8 01       		.byte	0x1
 29336 0ed9 6901     		.2byte	0x169
 29337 0edb 61100000 		.4byte	0x1061
 29338 0edf 03       		.uleb128 0x3
 29339 0ee0 91       		.byte	0x91
 29340 0ee1 DC53     		.sleb128 -5668
 29341 0ee3 25       		.uleb128 0x25
 29342 0ee4 68140000 		.4byte	.LASF222
 29343 0ee8 01       		.byte	0x1
 29344 0ee9 6901     		.2byte	0x169
 29345 0eeb 67100000 		.4byte	0x1067
 29346 0eef 03       		.uleb128 0x3
 29347 0ef0 91       		.byte	0x91
 29348 0ef1 D853     		.sleb128 -5672
 29349 0ef3 25       		.uleb128 0x25
 29350 0ef4 73030000 		.4byte	.LASF223
 29351 0ef8 01       		.byte	0x1
 29352 0ef9 6A01     		.2byte	0x16a
 29353 0efb 67100000 		.4byte	0x1067
 29354 0eff 03       		.uleb128 0x3
 29355 0f00 91       		.byte	0x91
 29356 0f01 D453     		.sleb128 -5676
 29357 0f03 25       		.uleb128 0x25
 29358 0f04 FD0C0000 		.4byte	.LASF224
 29359 0f08 01       		.byte	0x1
 29360 0f09 6A01     		.2byte	0x16a
 29361 0f0b 67100000 		.4byte	0x1067
 29362 0f0f 03       		.uleb128 0x3
 29363 0f10 91       		.byte	0x91
 29364 0f11 D053     		.sleb128 -5680
 29365 0f13 25       		.uleb128 0x25
 29366 0f14 B3130000 		.4byte	.LASF225
 29367 0f18 01       		.byte	0x1
 29368 0f19 6B01     		.2byte	0x16b
 29369 0f1b 67100000 		.4byte	0x1067
 29370 0f1f 02       		.uleb128 0x2
 29371 0f20 91       		.byte	0x91
 29372 0f21 00       		.sleb128 0
 29373 0f22 25       		.uleb128 0x25
 29374 0f23 67080000 		.4byte	.LASF226
 29375 0f27 01       		.byte	0x1
 29376 0f28 6B01     		.2byte	0x16b
 29377 0f2a 6D100000 		.4byte	0x106d
 29378 0f2e 02       		.uleb128 0x2
 29379 0f2f 91       		.byte	0x91
 29380 0f30 04       		.sleb128 4
 29381 0f31 25       		.uleb128 0x25
 29382 0f32 790B0000 		.4byte	.LASF227
 29383 0f36 01       		.byte	0x1
 29384 0f37 6C01     		.2byte	0x16c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 638


 29385 0f39 67100000 		.4byte	0x1067
 29386 0f3d 02       		.uleb128 0x2
 29387 0f3e 91       		.byte	0x91
 29388 0f3f 08       		.sleb128 8
 29389 0f40 25       		.uleb128 0x25
 29390 0f41 F8080000 		.4byte	.LASF228
 29391 0f45 01       		.byte	0x1
 29392 0f46 6C01     		.2byte	0x16c
 29393 0f48 6D100000 		.4byte	0x106d
 29394 0f4c 02       		.uleb128 0x2
 29395 0f4d 91       		.byte	0x91
 29396 0f4e 0C       		.sleb128 12
 29397 0f4f 23       		.uleb128 0x23
 29398 0f50 6C060000 		.4byte	.LASF229
 29399 0f54 01       		.byte	0x1
 29400 0f55 6F01     		.2byte	0x16f
 29401 0f57 73100000 		.4byte	0x1073
 29402 0f5b 03       		.uleb128 0x3
 29403 0f5c 91       		.byte	0x91
 29404 0f5d A454     		.sleb128 -5596
 29405 0f5f 23       		.uleb128 0x23
 29406 0f60 ED0B0000 		.4byte	.LASF230
 29407 0f64 01       		.byte	0x1
 29408 0f65 7001     		.2byte	0x170
 29409 0f67 A3000000 		.4byte	0xa3
 29410 0f6b 02       		.uleb128 0x2
 29411 0f6c 91       		.byte	0x91
 29412 0f6d 60       		.sleb128 -32
 29413 0f6e 26       		.uleb128 0x26
 29414 0f6f 6900     		.ascii	"i\000"
 29415 0f71 01       		.byte	0x1
 29416 0f72 7301     		.2byte	0x173
 29417 0f74 97000000 		.4byte	0x97
 29418 0f78 02       		.uleb128 0x2
 29419 0f79 91       		.byte	0x91
 29420 0f7a 67       		.sleb128 -25
 29421 0f7b 26       		.uleb128 0x26
 29422 0f7c 6A00     		.ascii	"j\000"
 29423 0f7e 01       		.byte	0x1
 29424 0f7f 7301     		.2byte	0x173
 29425 0f81 97000000 		.4byte	0x97
 29426 0f85 02       		.uleb128 0x2
 29427 0f86 91       		.byte	0x91
 29428 0f87 66       		.sleb128 -26
 29429 0f88 26       		.uleb128 0x26
 29430 0f89 69647800 		.ascii	"idx\000"
 29431 0f8d 01       		.byte	0x1
 29432 0f8e 7401     		.2byte	0x174
 29433 0f90 97000000 		.4byte	0x97
 29434 0f94 02       		.uleb128 0x2
 29435 0f95 91       		.byte	0x91
 29436 0f96 65       		.sleb128 -27
 29437 0f97 23       		.uleb128 0x23
 29438 0f98 CE110000 		.4byte	.LASF231
 29439 0f9c 01       		.byte	0x1
 29440 0f9d 7501     		.2byte	0x175
 29441 0f9f 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 639


 29442 0fa3 02       		.uleb128 0x2
 29443 0fa4 91       		.byte	0x91
 29444 0fa5 64       		.sleb128 -28
 29445 0fa6 26       		.uleb128 0x26
 29446 0fa7 736F6400 		.ascii	"sod\000"
 29447 0fab 01       		.byte	0x1
 29448 0fac 7601     		.2byte	0x176
 29449 0fae 97000000 		.4byte	0x97
 29450 0fb2 02       		.uleb128 0x2
 29451 0fb3 91       		.byte	0x91
 29452 0fb4 63       		.sleb128 -29
 29453 0fb5 23       		.uleb128 0x23
 29454 0fb6 CE0C0000 		.4byte	.LASF232
 29455 0fba 01       		.byte	0x1
 29456 0fbb 7701     		.2byte	0x177
 29457 0fbd 97000000 		.4byte	0x97
 29458 0fc1 02       		.uleb128 0x2
 29459 0fc2 91       		.byte	0x91
 29460 0fc3 62       		.sleb128 -30
 29461 0fc4 23       		.uleb128 0x23
 29462 0fc5 9D150000 		.4byte	.LASF233
 29463 0fc9 01       		.byte	0x1
 29464 0fca 7801     		.2byte	0x178
 29465 0fcc 84100000 		.4byte	0x1084
 29466 0fd0 03       		.uleb128 0x3
 29467 0fd1 91       		.byte	0x91
 29468 0fd2 F053     		.sleb128 -5648
 29469 0fd4 23       		.uleb128 0x23
 29470 0fd5 9B130000 		.4byte	.LASF234
 29471 0fd9 01       		.byte	0x1
 29472 0fda 7901     		.2byte	0x179
 29473 0fdc EB000000 		.4byte	0xeb
 29474 0fe0 03       		.uleb128 0x3
 29475 0fe1 91       		.byte	0x91
 29476 0fe2 EC53     		.sleb128 -5652
 29477 0fe4 23       		.uleb128 0x23
 29478 0fe5 5F120000 		.4byte	.LASF235
 29479 0fe9 01       		.byte	0x1
 29480 0fea 7A01     		.2byte	0x17a
 29481 0fec C7000000 		.4byte	0xc7
 29482 0ff0 03       		.uleb128 0x3
 29483 0ff1 91       		.byte	0x91
 29484 0ff2 EA53     		.sleb128 -5654
 29485 0ff4 23       		.uleb128 0x23
 29486 0ff5 350D0000 		.4byte	.LASF236
 29487 0ff9 01       		.byte	0x1
 29488 0ffa 7B01     		.2byte	0x17b
 29489 0ffc A3000000 		.4byte	0xa3
 29490 1000 03       		.uleb128 0x3
 29491 1001 91       		.byte	0x91
 29492 1002 E853     		.sleb128 -5656
 29493 1004 23       		.uleb128 0x23
 29494 1005 BC130000 		.4byte	.LASF237
 29495 1009 01       		.byte	0x1
 29496 100a 7C01     		.2byte	0x17c
 29497 100c D3000000 		.4byte	0xd3
 29498 1010 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 640


 29499 1011 91       		.byte	0x91
 29500 1012 E453     		.sleb128 -5660
 29501 1014 23       		.uleb128 0x23
 29502 1015 B70E0000 		.4byte	.LASF238
 29503 1019 01       		.byte	0x1
 29504 101a 7D01     		.2byte	0x17d
 29505 101c AF000000 		.4byte	0xaf
 29506 1020 03       		.uleb128 0x3
 29507 1021 91       		.byte	0x91
 29508 1022 E053     		.sleb128 -5664
 29509 1024 23       		.uleb128 0x23
 29510 1025 500E0000 		.4byte	.LASF239
 29511 1029 01       		.byte	0x1
 29512 102a 7F01     		.2byte	0x17f
 29513 102c 97000000 		.4byte	0x97
 29514 1030 02       		.uleb128 0x2
 29515 1031 91       		.byte	0x91
 29516 1032 5F       		.sleb128 -33
 29517 1033 23       		.uleb128 0x23
 29518 1034 4B010000 		.4byte	.LASF240
 29519 1038 01       		.byte	0x1
 29520 1039 8001     		.2byte	0x180
 29521 103b 97000000 		.4byte	0x97
 29522 103f 02       		.uleb128 0x2
 29523 1040 91       		.byte	0x91
 29524 1041 5E       		.sleb128 -34
 29525 1042 23       		.uleb128 0x23
 29526 1043 AF0B0000 		.4byte	.LASF241
 29527 1047 01       		.byte	0x1
 29528 1048 8201     		.2byte	0x182
 29529 104a 67100000 		.4byte	0x1067
 29530 104e 02       		.uleb128 0x2
 29531 104f 91       		.byte	0x91
 29532 1050 58       		.sleb128 -40
 29533 1051 23       		.uleb128 0x23
 29534 1052 DF010000 		.4byte	.LASF242
 29535 1056 01       		.byte	0x1
 29536 1057 8301     		.2byte	0x183
 29537 1059 67100000 		.4byte	0x1067
 29538 105d 02       		.uleb128 0x2
 29539 105e 91       		.byte	0x91
 29540 105f 54       		.sleb128 -44
 29541 1060 00       		.byte	0
 29542 1061 07       		.uleb128 0x7
 29543 1062 04       		.byte	0x4
 29544 1063 67100000 		.4byte	0x1067
 29545 1067 07       		.uleb128 0x7
 29546 1068 04       		.byte	0x4
 29547 1069 97000000 		.4byte	0x97
 29548 106d 07       		.uleb128 0x7
 29549 106e 04       		.byte	0x4
 29550 106f 25010000 		.4byte	0x125
 29551 1073 09       		.uleb128 0x9
 29552 1074 97000000 		.4byte	0x97
 29553 1078 84100000 		.4byte	0x1084
 29554 107c 24       		.uleb128 0x24
 29555 107d 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 641


 29556 1081 AD15     		.2byte	0x15ad
 29557 1083 00       		.byte	0
 29558 1084 09       		.uleb128 0x9
 29559 1085 F9000000 		.4byte	0xf9
 29560 1089 94100000 		.4byte	0x1094
 29561 108d 0A       		.uleb128 0xa
 29562 108e 18010000 		.4byte	0x118
 29563 1092 31       		.byte	0x31
 29564 1093 00       		.byte	0
 29565 1094 22       		.uleb128 0x22
 29566 1095 B10F0000 		.4byte	.LASF243
 29567 1099 01       		.byte	0x1
 29568 109a 6C03     		.2byte	0x36c
 29569 109c 00000000 		.4byte	.LFB68
 29570 10a0 40190000 		.4byte	.LFE68-.LFB68
 29571 10a4 01       		.uleb128 0x1
 29572 10a5 9C       		.byte	0x9c
 29573 10a6 72120000 		.4byte	0x1272
 29574 10aa 25       		.uleb128 0x25
 29575 10ab 72070000 		.4byte	.LASF244
 29576 10af 01       		.byte	0x1
 29577 10b0 6C03     		.2byte	0x36c
 29578 10b2 A3000000 		.4byte	0xa3
 29579 10b6 03       		.uleb128 0x3
 29580 10b7 91       		.byte	0x91
 29581 10b8 EE74     		.sleb128 -1426
 29582 10ba 26       		.uleb128 0x26
 29583 10bb 6900     		.ascii	"i\000"
 29584 10bd 01       		.byte	0x1
 29585 10be 6D03     		.2byte	0x36d
 29586 10c0 97000000 		.4byte	0x97
 29587 10c4 02       		.uleb128 0x2
 29588 10c5 91       		.byte	0x91
 29589 10c6 6F       		.sleb128 -17
 29590 10c7 26       		.uleb128 0x26
 29591 10c8 6A00     		.ascii	"j\000"
 29592 10ca 01       		.byte	0x1
 29593 10cb 6D03     		.2byte	0x36d
 29594 10cd 97000000 		.4byte	0x97
 29595 10d1 02       		.uleb128 0x2
 29596 10d2 91       		.byte	0x91
 29597 10d3 6E       		.sleb128 -18
 29598 10d4 26       		.uleb128 0x26
 29599 10d5 736F6400 		.ascii	"sod\000"
 29600 10d9 01       		.byte	0x1
 29601 10da 6E03     		.2byte	0x36e
 29602 10dc 97000000 		.4byte	0x97
 29603 10e0 02       		.uleb128 0x2
 29604 10e1 91       		.byte	0x91
 29605 10e2 6D       		.sleb128 -19
 29606 10e3 23       		.uleb128 0x23
 29607 10e4 990B0000 		.4byte	.LASF245
 29608 10e8 01       		.byte	0x1
 29609 10e9 6F03     		.2byte	0x36f
 29610 10eb 97000000 		.4byte	0x97
 29611 10ef 02       		.uleb128 0x2
 29612 10f0 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 642


 29613 10f1 62       		.sleb128 -30
 29614 10f2 23       		.uleb128 0x23
 29615 10f3 5F120000 		.4byte	.LASF235
 29616 10f7 01       		.byte	0x1
 29617 10f8 7003     		.2byte	0x370
 29618 10fa C7000000 		.4byte	0xc7
 29619 10fe 02       		.uleb128 0x2
 29620 10ff 91       		.byte	0x91
 29621 1100 60       		.sleb128 -32
 29622 1101 23       		.uleb128 0x23
 29623 1102 350D0000 		.4byte	.LASF236
 29624 1106 01       		.byte	0x1
 29625 1107 7103     		.2byte	0x371
 29626 1109 A3000000 		.4byte	0xa3
 29627 110d 02       		.uleb128 0x2
 29628 110e 91       		.byte	0x91
 29629 110f 5E       		.sleb128 -34
 29630 1110 23       		.uleb128 0x23
 29631 1111 BC130000 		.4byte	.LASF237
 29632 1115 01       		.byte	0x1
 29633 1116 7203     		.2byte	0x372
 29634 1118 D3000000 		.4byte	0xd3
 29635 111c 02       		.uleb128 0x2
 29636 111d 91       		.byte	0x91
 29637 111e 58       		.sleb128 -40
 29638 111f 23       		.uleb128 0x23
 29639 1120 B70E0000 		.4byte	.LASF238
 29640 1124 01       		.byte	0x1
 29641 1125 7303     		.2byte	0x373
 29642 1127 AF000000 		.4byte	0xaf
 29643 112b 02       		.uleb128 0x2
 29644 112c 91       		.byte	0x91
 29645 112d 54       		.sleb128 -44
 29646 112e 23       		.uleb128 0x23
 29647 112f 9B130000 		.4byte	.LASF234
 29648 1133 01       		.byte	0x1
 29649 1134 7403     		.2byte	0x374
 29650 1136 EB000000 		.4byte	0xeb
 29651 113a 02       		.uleb128 0x2
 29652 113b 91       		.byte	0x91
 29653 113c 50       		.sleb128 -48
 29654 113d 23       		.uleb128 0x23
 29655 113e 500E0000 		.4byte	.LASF239
 29656 1142 01       		.byte	0x1
 29657 1143 7603     		.2byte	0x376
 29658 1145 97000000 		.4byte	0x97
 29659 1149 02       		.uleb128 0x2
 29660 114a 91       		.byte	0x91
 29661 114b 65       		.sleb128 -27
 29662 114c 23       		.uleb128 0x23
 29663 114d 4B010000 		.4byte	.LASF240
 29664 1151 01       		.byte	0x1
 29665 1152 7703     		.2byte	0x377
 29666 1154 97000000 		.4byte	0x97
 29667 1158 02       		.uleb128 0x2
 29668 1159 91       		.byte	0x91
 29669 115a 64       		.sleb128 -28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 643


 29670 115b 23       		.uleb128 0x23
 29671 115c 89030000 		.4byte	.LASF246
 29672 1160 01       		.byte	0x1
 29673 1161 7A03     		.2byte	0x37a
 29674 1163 72120000 		.4byte	0x1272
 29675 1167 02       		.uleb128 0x2
 29676 1168 91       		.byte	0x91
 29677 1169 68       		.sleb128 -24
 29678 116a 23       		.uleb128 0x23
 29679 116b A00D0000 		.4byte	.LASF221
 29680 116f 01       		.byte	0x1
 29681 1170 8203     		.2byte	0x382
 29682 1172 78120000 		.4byte	0x1278
 29683 1176 03       		.uleb128 0x3
 29684 1177 91       		.byte	0x91
 29685 1178 847D     		.sleb128 -380
 29686 117a 23       		.uleb128 0x23
 29687 117b 68140000 		.4byte	.LASF222
 29688 117f 01       		.byte	0x1
 29689 1180 E003     		.2byte	0x3e0
 29690 1182 88120000 		.4byte	0x1288
 29691 1186 03       		.uleb128 0x3
 29692 1187 91       		.byte	0x91
 29693 1188 B07C     		.sleb128 -464
 29694 118a 23       		.uleb128 0x23
 29695 118b 73030000 		.4byte	.LASF223
 29696 118f 01       		.byte	0x1
 29697 1190 FC03     		.2byte	0x3fc
 29698 1192 88120000 		.4byte	0x1288
 29699 1196 03       		.uleb128 0x3
 29700 1197 91       		.byte	0x91
 29701 1198 DC7B     		.sleb128 -548
 29702 119a 23       		.uleb128 0x23
 29703 119b FD0C0000 		.4byte	.LASF224
 29704 119f 01       		.byte	0x1
 29705 11a0 1804     		.2byte	0x418
 29706 11a2 88120000 		.4byte	0x1288
 29707 11a6 03       		.uleb128 0x3
 29708 11a7 91       		.byte	0x91
 29709 11a8 887B     		.sleb128 -632
 29710 11aa 23       		.uleb128 0x23
 29711 11ab 67080000 		.4byte	.LASF226
 29712 11af 01       		.byte	0x1
 29713 11b0 3504     		.2byte	0x435
 29714 11b2 98120000 		.4byte	0x1298
 29715 11b6 03       		.uleb128 0x3
 29716 11b7 91       		.byte	0x91
 29717 11b8 BC78     		.sleb128 -964
 29718 11ba 23       		.uleb128 0x23
 29719 11bb F0140000 		.4byte	.LASF247
 29720 11bf 01       		.byte	0x1
 29721 11c0 5204     		.2byte	0x452
 29722 11c2 A8120000 		.4byte	0x12a8
 29723 11c6 03       		.uleb128 0x3
 29724 11c7 91       		.byte	0x91
 29725 11c8 C477     		.sleb128 -1084
 29726 11ca 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 644


 29727 11cb 10000000 		.4byte	.LASF248
 29728 11cf 01       		.byte	0x1
 29729 11d0 5504     		.2byte	0x455
 29730 11d2 B8120000 		.4byte	0x12b8
 29731 11d6 03       		.uleb128 0x3
 29732 11d7 91       		.byte	0x91
 29733 11d8 8C77     		.sleb128 -1140
 29734 11da 23       		.uleb128 0x23
 29735 11db F8080000 		.4byte	.LASF228
 29736 11df 01       		.byte	0x1
 29737 11e0 5D04     		.2byte	0x45d
 29738 11e2 C8120000 		.4byte	0x12c8
 29739 11e6 03       		.uleb128 0x3
 29740 11e7 91       		.byte	0x91
 29741 11e8 DC76     		.sleb128 -1188
 29742 11ea 23       		.uleb128 0x23
 29743 11eb B3130000 		.4byte	.LASF225
 29744 11ef 01       		.byte	0x1
 29745 11f0 6C04     		.2byte	0x46c
 29746 11f2 D8120000 		.4byte	0x12d8
 29747 11f6 03       		.uleb128 0x3
 29748 11f7 91       		.byte	0x91
 29749 11f8 BC76     		.sleb128 -1220
 29750 11fa 23       		.uleb128 0x23
 29751 11fb A60D0000 		.4byte	.LASF249
 29752 11ff 01       		.byte	0x1
 29753 1200 6D04     		.2byte	0x46d
 29754 1202 E8120000 		.4byte	0x12e8
 29755 1206 03       		.uleb128 0x3
 29756 1207 91       		.byte	0x91
 29757 1208 B076     		.sleb128 -1232
 29758 120a 23       		.uleb128 0x23
 29759 120b E70C0000 		.4byte	.LASF250
 29760 120f 01       		.byte	0x1
 29761 1210 6E04     		.2byte	0x46e
 29762 1212 F8120000 		.4byte	0x12f8
 29763 1216 03       		.uleb128 0x3
 29764 1217 91       		.byte	0x91
 29765 1218 9C76     		.sleb128 -1252
 29766 121a 23       		.uleb128 0x23
 29767 121b C90E0000 		.4byte	.LASF251
 29768 121f 01       		.byte	0x1
 29769 1220 6F04     		.2byte	0x46f
 29770 1222 97000000 		.4byte	0x97
 29771 1226 02       		.uleb128 0x2
 29772 1227 91       		.byte	0x91
 29773 1228 63       		.sleb128 -29
 29774 1229 23       		.uleb128 0x23
 29775 122a 790B0000 		.4byte	.LASF227
 29776 122e 01       		.byte	0x1
 29777 122f 7804     		.2byte	0x478
 29778 1231 88120000 		.4byte	0x1288
 29779 1235 03       		.uleb128 0x3
 29780 1236 91       		.byte	0x91
 29781 1237 C875     		.sleb128 -1336
 29782 1239 23       		.uleb128 0x23
 29783 123a 17150000 		.4byte	.LASF252
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 645


 29784 123e 01       		.byte	0x1
 29785 123f 8304     		.2byte	0x483
 29786 1241 88120000 		.4byte	0x1288
 29787 1245 03       		.uleb128 0x3
 29788 1246 91       		.byte	0x91
 29789 1247 F474     		.sleb128 -1420
 29790 1249 1E       		.uleb128 0x1e
 29791 124a AA180000 		.4byte	.LBB18
 29792 124e 86000000 		.4byte	.LBE18-.LBB18
 29793 1252 26       		.uleb128 0x26
 29794 1253 69647800 		.ascii	"idx\000"
 29795 1257 01       		.byte	0x1
 29796 1258 EC04     		.2byte	0x4ec
 29797 125a 97000000 		.4byte	0x97
 29798 125e 02       		.uleb128 0x2
 29799 125f 91       		.byte	0x91
 29800 1260 67       		.sleb128 -25
 29801 1261 23       		.uleb128 0x23
 29802 1262 D0050000 		.4byte	.LASF253
 29803 1266 01       		.byte	0x1
 29804 1267 EC04     		.2byte	0x4ec
 29805 1269 97000000 		.4byte	0x97
 29806 126d 02       		.uleb128 0x2
 29807 126e 91       		.byte	0x91
 29808 126f 66       		.sleb128 -26
 29809 1270 00       		.byte	0
 29810 1271 00       		.byte	0
 29811 1272 07       		.uleb128 0x7
 29812 1273 04       		.byte	0x4
 29813 1274 230B0000 		.4byte	0xb23
 29814 1278 09       		.uleb128 0x9
 29815 1279 67100000 		.4byte	0x1067
 29816 127d 88120000 		.4byte	0x1288
 29817 1281 0A       		.uleb128 0xa
 29818 1282 18010000 		.4byte	0x118
 29819 1286 52       		.byte	0x52
 29820 1287 00       		.byte	0
 29821 1288 09       		.uleb128 0x9
 29822 1289 97000000 		.4byte	0x97
 29823 128d 98120000 		.4byte	0x1298
 29824 1291 0A       		.uleb128 0xa
 29825 1292 18010000 		.4byte	0x118
 29826 1296 52       		.byte	0x52
 29827 1297 00       		.byte	0
 29828 1298 09       		.uleb128 0x9
 29829 1299 25010000 		.4byte	0x125
 29830 129d A8120000 		.4byte	0x12a8
 29831 12a1 0A       		.uleb128 0xa
 29832 12a2 18010000 		.4byte	0x118
 29833 12a6 52       		.byte	0x52
 29834 12a7 00       		.byte	0
 29835 12a8 09       		.uleb128 0x9
 29836 12a9 F9000000 		.4byte	0xf9
 29837 12ad B8120000 		.4byte	0x12b8
 29838 12b1 0A       		.uleb128 0xa
 29839 12b2 18010000 		.4byte	0x118
 29840 12b6 75       		.byte	0x75
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 646


 29841 12b7 00       		.byte	0
 29842 12b8 09       		.uleb128 0x9
 29843 12b9 F9000000 		.4byte	0xf9
 29844 12bd C8120000 		.4byte	0x12c8
 29845 12c1 0A       		.uleb128 0xa
 29846 12c2 18010000 		.4byte	0x118
 29847 12c6 37       		.byte	0x37
 29848 12c7 00       		.byte	0
 29849 12c8 09       		.uleb128 0x9
 29850 12c9 25010000 		.4byte	0x125
 29851 12cd D8120000 		.4byte	0x12d8
 29852 12d1 0A       		.uleb128 0xa
 29853 12d2 18010000 		.4byte	0x118
 29854 12d6 0B       		.byte	0xb
 29855 12d7 00       		.byte	0
 29856 12d8 09       		.uleb128 0x9
 29857 12d9 97000000 		.4byte	0x97
 29858 12dd E8120000 		.4byte	0x12e8
 29859 12e1 0A       		.uleb128 0xa
 29860 12e2 18010000 		.4byte	0x118
 29861 12e6 1F       		.byte	0x1f
 29862 12e7 00       		.byte	0
 29863 12e8 09       		.uleb128 0x9
 29864 12e9 97000000 		.4byte	0x97
 29865 12ed F8120000 		.4byte	0x12f8
 29866 12f1 0A       		.uleb128 0xa
 29867 12f2 18010000 		.4byte	0x118
 29868 12f6 08       		.byte	0x8
 29869 12f7 00       		.byte	0
 29870 12f8 09       		.uleb128 0x9
 29871 12f9 97000000 		.4byte	0x97
 29872 12fd 08130000 		.4byte	0x1308
 29873 1301 0A       		.uleb128 0xa
 29874 1302 18010000 		.4byte	0x118
 29875 1306 11       		.byte	0x11
 29876 1307 00       		.byte	0
 29877 1308 22       		.uleb128 0x22
 29878 1309 1A040000 		.4byte	.LASF254
 29879 130d 01       		.byte	0x1
 29880 130e FD04     		.2byte	0x4fd
 29881 1310 00000000 		.4byte	.LFB69
 29882 1314 90140000 		.4byte	.LFE69-.LFB69
 29883 1318 01       		.uleb128 0x1
 29884 1319 9C       		.byte	0x9c
 29885 131a AA130000 		.4byte	0x13aa
 29886 131e 25       		.uleb128 0x25
 29887 131f 72070000 		.4byte	.LASF244
 29888 1323 01       		.byte	0x1
 29889 1324 FD04     		.2byte	0x4fd
 29890 1326 A3000000 		.4byte	0xa3
 29891 132a 02       		.uleb128 0x2
 29892 132b 91       		.byte	0x91
 29893 132c 56       		.sleb128 -42
 29894 132d 26       		.uleb128 0x26
 29895 132e 6900     		.ascii	"i\000"
 29896 1330 01       		.byte	0x1
 29897 1331 FF04     		.2byte	0x4ff
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 647


 29898 1333 97000000 		.4byte	0x97
 29899 1337 02       		.uleb128 0x2
 29900 1338 91       		.byte	0x91
 29901 1339 67       		.sleb128 -25
 29902 133a 26       		.uleb128 0x26
 29903 133b 6A00     		.ascii	"j\000"
 29904 133d 01       		.byte	0x1
 29905 133e FF04     		.2byte	0x4ff
 29906 1340 97000000 		.4byte	0x97
 29907 1344 02       		.uleb128 0x2
 29908 1345 91       		.byte	0x91
 29909 1346 66       		.sleb128 -26
 29910 1347 23       		.uleb128 0x23
 29911 1348 180D0000 		.4byte	.LASF255
 29912 134c 01       		.byte	0x1
 29913 134d 0005     		.2byte	0x500
 29914 134f 97000000 		.4byte	0x97
 29915 1353 02       		.uleb128 0x2
 29916 1354 91       		.byte	0x91
 29917 1355 62       		.sleb128 -30
 29918 1356 23       		.uleb128 0x23
 29919 1357 9B130000 		.4byte	.LASF234
 29920 135b 01       		.byte	0x1
 29921 135c 0105     		.2byte	0x501
 29922 135e EB000000 		.4byte	0xeb
 29923 1362 02       		.uleb128 0x2
 29924 1363 91       		.byte	0x91
 29925 1364 5C       		.sleb128 -36
 29926 1365 23       		.uleb128 0x23
 29927 1366 F3030000 		.4byte	.LASF256
 29928 136a 01       		.byte	0x1
 29929 136b 0105     		.2byte	0x501
 29930 136d EB000000 		.4byte	0xeb
 29931 1371 02       		.uleb128 0x2
 29932 1372 91       		.byte	0x91
 29933 1373 58       		.sleb128 -40
 29934 1374 23       		.uleb128 0x23
 29935 1375 500E0000 		.4byte	.LASF239
 29936 1379 01       		.byte	0x1
 29937 137a 0305     		.2byte	0x503
 29938 137c 97000000 		.4byte	0x97
 29939 1380 02       		.uleb128 0x2
 29940 1381 91       		.byte	0x91
 29941 1382 64       		.sleb128 -28
 29942 1383 23       		.uleb128 0x23
 29943 1384 4B010000 		.4byte	.LASF240
 29944 1388 01       		.byte	0x1
 29945 1389 0405     		.2byte	0x504
 29946 138b 97000000 		.4byte	0x97
 29947 138f 02       		.uleb128 0x2
 29948 1390 91       		.byte	0x91
 29949 1391 63       		.sleb128 -29
 29950 1392 1E       		.uleb128 0x1e
 29951 1393 040B0000 		.4byte	.LBB19
 29952 1397 26000000 		.4byte	.LBE19-.LBB19
 29953 139b 26       		.uleb128 0x26
 29954 139c 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 648


 29955 139e 01       		.byte	0x1
 29956 139f AB05     		.2byte	0x5ab
 29957 13a1 97000000 		.4byte	0x97
 29958 13a5 02       		.uleb128 0x2
 29959 13a6 91       		.byte	0x91
 29960 13a7 65       		.sleb128 -27
 29961 13a8 00       		.byte	0
 29962 13a9 00       		.byte	0
 29963 13aa 22       		.uleb128 0x22
 29964 13ab 83090000 		.4byte	.LASF257
 29965 13af 01       		.byte	0x1
 29966 13b0 4B06     		.2byte	0x64b
 29967 13b2 00000000 		.4byte	.LFB70
 29968 13b6 F40D0000 		.4byte	.LFE70-.LFB70
 29969 13ba 01       		.uleb128 0x1
 29970 13bb 9C       		.byte	0x9c
 29971 13bc 39150000 		.4byte	0x1539
 29972 13c0 25       		.uleb128 0x25
 29973 13c1 72070000 		.4byte	.LASF244
 29974 13c5 01       		.byte	0x1
 29975 13c6 4B06     		.2byte	0x64b
 29976 13c8 A3000000 		.4byte	0xa3
 29977 13cc 03       		.uleb128 0x3
 29978 13cd 91       		.byte	0x91
 29979 13ce CE72     		.sleb128 -1714
 29980 13d0 23       		.uleb128 0x23
 29981 13d1 6C060000 		.4byte	.LASF229
 29982 13d5 01       		.byte	0x1
 29983 13d6 4E06     		.2byte	0x64e
 29984 13d8 39150000 		.4byte	0x1539
 29985 13dc 03       		.uleb128 0x3
 29986 13dd 91       		.byte	0x91
 29987 13de DC74     		.sleb128 -1444
 29988 13e0 23       		.uleb128 0x23
 29989 13e1 4C120000 		.4byte	.LASF258
 29990 13e5 01       		.byte	0x1
 29991 13e6 5506     		.2byte	0x655
 29992 13e8 A3000000 		.4byte	0xa3
 29993 13ec 02       		.uleb128 0x2
 29994 13ed 91       		.byte	0x91
 29995 13ee 62       		.sleb128 -30
 29996 13ef 23       		.uleb128 0x23
 29997 13f0 E4050000 		.4byte	.LASF259
 29998 13f4 01       		.byte	0x1
 29999 13f5 5606     		.2byte	0x656
 30000 13f7 A3000000 		.4byte	0xa3
 30001 13fb 02       		.uleb128 0x2
 30002 13fc 91       		.byte	0x91
 30003 13fd 6E       		.sleb128 -18
 30004 13fe 23       		.uleb128 0x23
 30005 13ff A4090000 		.4byte	.LASF260
 30006 1403 01       		.byte	0x1
 30007 1404 5706     		.2byte	0x657
 30008 1406 A3000000 		.4byte	0xa3
 30009 140a 02       		.uleb128 0x2
 30010 140b 91       		.byte	0x91
 30011 140c 60       		.sleb128 -32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 649


 30012 140d 23       		.uleb128 0x23
 30013 140e 23090000 		.4byte	.LASF261
 30014 1412 01       		.byte	0x1
 30015 1413 5806     		.2byte	0x658
 30016 1415 A3000000 		.4byte	0xa3
 30017 1419 02       		.uleb128 0x2
 30018 141a 91       		.byte	0x91
 30019 141b 5E       		.sleb128 -34
 30020 141c 26       		.uleb128 0x26
 30021 141d 6900     		.ascii	"i\000"
 30022 141f 01       		.byte	0x1
 30023 1420 6006     		.2byte	0x660
 30024 1422 A3000000 		.4byte	0xa3
 30025 1426 02       		.uleb128 0x2
 30026 1427 91       		.byte	0x91
 30027 1428 6C       		.sleb128 -20
 30028 1429 26       		.uleb128 0x26
 30029 142a 6A00     		.ascii	"j\000"
 30030 142c 01       		.byte	0x1
 30031 142d 6006     		.2byte	0x660
 30032 142f A3000000 		.4byte	0xa3
 30033 1433 02       		.uleb128 0x2
 30034 1434 91       		.byte	0x91
 30035 1435 6A       		.sleb128 -22
 30036 1436 26       		.uleb128 0x26
 30037 1437 6B00     		.ascii	"k\000"
 30038 1439 01       		.byte	0x1
 30039 143a 6006     		.2byte	0x660
 30040 143c A3000000 		.4byte	0xa3
 30041 1440 02       		.uleb128 0x2
 30042 1441 91       		.byte	0x91
 30043 1442 68       		.sleb128 -24
 30044 1443 26       		.uleb128 0x26
 30045 1444 6800     		.ascii	"h\000"
 30046 1446 01       		.byte	0x1
 30047 1447 6006     		.2byte	0x660
 30048 1449 A3000000 		.4byte	0xa3
 30049 144d 02       		.uleb128 0x2
 30050 144e 91       		.byte	0x91
 30051 144f 66       		.sleb128 -26
 30052 1450 23       		.uleb128 0x23
 30053 1451 D9050000 		.4byte	.LASF262
 30054 1455 01       		.byte	0x1
 30055 1456 6106     		.2byte	0x661
 30056 1458 A3000000 		.4byte	0xa3
 30057 145c 02       		.uleb128 0x2
 30058 145d 91       		.byte	0x91
 30059 145e 5C       		.sleb128 -36
 30060 145f 23       		.uleb128 0x23
 30061 1460 650E0000 		.4byte	.LASF263
 30062 1464 01       		.byte	0x1
 30063 1465 6406     		.2byte	0x664
 30064 1467 30010000 		.4byte	0x130
 30065 146b 03       		.uleb128 0x3
 30066 146c 91       		.byte	0x91
 30067 146d C074     		.sleb128 -1472
 30068 146f 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 650


 30069 1470 13120000 		.4byte	.LASF264
 30070 1474 01       		.byte	0x1
 30071 1475 6506     		.2byte	0x665
 30072 1477 4A150000 		.4byte	0x154a
 30073 147b 03       		.uleb128 0x3
 30074 147c 91       		.byte	0x91
 30075 147d B474     		.sleb128 -1484
 30076 147f 23       		.uleb128 0x23
 30077 1480 00080000 		.4byte	.LASF265
 30078 1484 01       		.byte	0x1
 30079 1485 6606     		.2byte	0x666
 30080 1487 5A150000 		.4byte	0x155a
 30081 148b 03       		.uleb128 0x3
 30082 148c 91       		.byte	0x91
 30083 148d A074     		.sleb128 -1504
 30084 148f 23       		.uleb128 0x23
 30085 1490 09000000 		.4byte	.LASF266
 30086 1494 01       		.byte	0x1
 30087 1495 6706     		.2byte	0x667
 30088 1497 6A150000 		.4byte	0x156a
 30089 149b 03       		.uleb128 0x3
 30090 149c 91       		.byte	0x91
 30091 149d 9074     		.sleb128 -1520
 30092 149f 23       		.uleb128 0x23
 30093 14a0 420F0000 		.4byte	.LASF267
 30094 14a4 01       		.byte	0x1
 30095 14a5 6806     		.2byte	0x668
 30096 14a7 7A150000 		.4byte	0x157a
 30097 14ab 03       		.uleb128 0x3
 30098 14ac 91       		.byte	0x91
 30099 14ad E473     		.sleb128 -1564
 30100 14af 23       		.uleb128 0x23
 30101 14b0 51020000 		.4byte	.LASF268
 30102 14b4 01       		.byte	0x1
 30103 14b5 6906     		.2byte	0x669
 30104 14b7 30010000 		.4byte	0x130
 30105 14bb 03       		.uleb128 0x3
 30106 14bc 91       		.byte	0x91
 30107 14bd C873     		.sleb128 -1592
 30108 14bf 23       		.uleb128 0x23
 30109 14c0 BC010000 		.4byte	.LASF269
 30110 14c4 01       		.byte	0x1
 30111 14c5 6C06     		.2byte	0x66c
 30112 14c7 97000000 		.4byte	0x97
 30113 14cb 02       		.uleb128 0x2
 30114 14cc 91       		.byte	0x91
 30115 14cd 5B       		.sleb128 -37
 30116 14ce 23       		.uleb128 0x23
 30117 14cf 6A050000 		.4byte	.LASF270
 30118 14d3 01       		.byte	0x1
 30119 14d4 6D06     		.2byte	0x66d
 30120 14d6 97000000 		.4byte	0x97
 30121 14da 02       		.uleb128 0x2
 30122 14db 91       		.byte	0x91
 30123 14dc 5A       		.sleb128 -38
 30124 14dd 23       		.uleb128 0x23
 30125 14de BB110000 		.4byte	.LASF271
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 651


 30126 14e2 01       		.byte	0x1
 30127 14e3 6E06     		.2byte	0x66e
 30128 14e5 97000000 		.4byte	0x97
 30129 14e9 02       		.uleb128 0x2
 30130 14ea 91       		.byte	0x91
 30131 14eb 59       		.sleb128 -39
 30132 14ec 23       		.uleb128 0x23
 30133 14ed 3A120000 		.4byte	.LASF272
 30134 14f1 01       		.byte	0x1
 30135 14f2 6F06     		.2byte	0x66f
 30136 14f4 97000000 		.4byte	0x97
 30137 14f8 02       		.uleb128 0x2
 30138 14f9 91       		.byte	0x91
 30139 14fa 58       		.sleb128 -40
 30140 14fb 23       		.uleb128 0x23
 30141 14fc 78050000 		.4byte	.LASF273
 30142 1500 01       		.byte	0x1
 30143 1501 7006     		.2byte	0x670
 30144 1503 97000000 		.4byte	0x97
 30145 1507 02       		.uleb128 0x2
 30146 1508 91       		.byte	0x91
 30147 1509 57       		.sleb128 -41
 30148 150a 23       		.uleb128 0x23
 30149 150b 0A010000 		.4byte	.LASF274
 30150 150f 01       		.byte	0x1
 30151 1510 7106     		.2byte	0x671
 30152 1512 97000000 		.4byte	0x97
 30153 1516 02       		.uleb128 0x2
 30154 1517 91       		.byte	0x91
 30155 1518 65       		.sleb128 -27
 30156 1519 23       		.uleb128 0x23
 30157 151a F0140000 		.4byte	.LASF247
 30158 151e 01       		.byte	0x1
 30159 151f 7306     		.2byte	0x673
 30160 1521 A8120000 		.4byte	0x12a8
 30161 1525 03       		.uleb128 0x3
 30162 1526 91       		.byte	0x91
 30163 1527 D072     		.sleb128 -1712
 30164 1529 23       		.uleb128 0x23
 30165 152a 07040000 		.4byte	.LASF275
 30166 152e 01       		.byte	0x1
 30167 152f 7406     		.2byte	0x674
 30168 1531 97000000 		.4byte	0x97
 30169 1535 02       		.uleb128 0x2
 30170 1536 91       		.byte	0x91
 30171 1537 56       		.sleb128 -42
 30172 1538 00       		.byte	0
 30173 1539 09       		.uleb128 0x9
 30174 153a 97000000 		.4byte	0x97
 30175 153e 4A150000 		.4byte	0x154a
 30176 1542 24       		.uleb128 0x24
 30177 1543 18010000 		.4byte	0x118
 30178 1547 7805     		.2byte	0x578
 30179 1549 00       		.byte	0
 30180 154a 09       		.uleb128 0x9
 30181 154b F9000000 		.4byte	0xf9
 30182 154f 5A150000 		.4byte	0x155a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 652


 30183 1553 0A       		.uleb128 0xa
 30184 1554 18010000 		.4byte	0x118
 30185 1558 0A       		.byte	0xa
 30186 1559 00       		.byte	0
 30187 155a 09       		.uleb128 0x9
 30188 155b F9000000 		.4byte	0xf9
 30189 155f 6A150000 		.4byte	0x156a
 30190 1563 0A       		.uleb128 0xa
 30191 1564 18010000 		.4byte	0x118
 30192 1568 13       		.byte	0x13
 30193 1569 00       		.byte	0
 30194 156a 09       		.uleb128 0x9
 30195 156b F9000000 		.4byte	0xf9
 30196 156f 7A150000 		.4byte	0x157a
 30197 1573 0A       		.uleb128 0xa
 30198 1574 18010000 		.4byte	0x118
 30199 1578 0F       		.byte	0xf
 30200 1579 00       		.byte	0
 30201 157a 09       		.uleb128 0x9
 30202 157b F9000000 		.4byte	0xf9
 30203 157f 8A150000 		.4byte	0x158a
 30204 1583 0A       		.uleb128 0xa
 30205 1584 18010000 		.4byte	0x118
 30206 1588 29       		.byte	0x29
 30207 1589 00       		.byte	0
 30208 158a 27       		.uleb128 0x27
 30209 158b 51030000 		.4byte	.LASF312
 30210 158f 01       		.byte	0x1
 30211 1590 3A07     		.2byte	0x73a
 30212 1592 00000000 		.4byte	.LFB71
 30213 1596 90000000 		.4byte	.LFE71-.LFB71
 30214 159a 01       		.uleb128 0x1
 30215 159b 9C       		.byte	0x9c
 30216 159c BB150000 		.4byte	0x15bb
 30217 15a0 26       		.uleb128 0x26
 30218 15a1 6900     		.ascii	"i\000"
 30219 15a3 01       		.byte	0x1
 30220 15a4 3C07     		.2byte	0x73c
 30221 15a6 97000000 		.4byte	0x97
 30222 15aa 02       		.uleb128 0x2
 30223 15ab 91       		.byte	0x91
 30224 15ac 6F       		.sleb128 -17
 30225 15ad 26       		.uleb128 0x26
 30226 15ae 6A00     		.ascii	"j\000"
 30227 15b0 01       		.byte	0x1
 30228 15b1 3C07     		.2byte	0x73c
 30229 15b3 97000000 		.4byte	0x97
 30230 15b7 02       		.uleb128 0x2
 30231 15b8 91       		.byte	0x91
 30232 15b9 6E       		.sleb128 -18
 30233 15ba 00       		.byte	0
 30234 15bb 22       		.uleb128 0x22
 30235 15bc 2A010000 		.4byte	.LASF276
 30236 15c0 01       		.byte	0x1
 30237 15c1 4D07     		.2byte	0x74d
 30238 15c3 00000000 		.4byte	.LFB72
 30239 15c7 60210000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 653


 30240 15cb 01       		.uleb128 0x1
 30241 15cc 9C       		.byte	0x9c
 30242 15cd 74160000 		.4byte	0x1674
 30243 15d1 25       		.uleb128 0x25
 30244 15d2 6F0E0000 		.4byte	.LASF277
 30245 15d6 01       		.byte	0x1
 30246 15d7 4D07     		.2byte	0x74d
 30247 15d9 1F010000 		.4byte	0x11f
 30248 15dd 03       		.uleb128 0x3
 30249 15de 91       		.byte	0x91
 30250 15df D47E     		.sleb128 -172
 30251 15e1 26       		.uleb128 0x26
 30252 15e2 6900     		.ascii	"i\000"
 30253 15e4 01       		.byte	0x1
 30254 15e5 4F07     		.2byte	0x74f
 30255 15e7 73000000 		.4byte	0x73
 30256 15eb 02       		.uleb128 0x2
 30257 15ec 91       		.byte	0x91
 30258 15ed 54       		.sleb128 -44
 30259 15ee 23       		.uleb128 0x23
 30260 15ef 89030000 		.4byte	.LASF246
 30261 15f3 01       		.byte	0x1
 30262 15f4 5107     		.2byte	0x751
 30263 15f6 72120000 		.4byte	0x1272
 30264 15fa 02       		.uleb128 0x2
 30265 15fb 91       		.byte	0x91
 30266 15fc 48       		.sleb128 -56
 30267 15fd 1E       		.uleb128 0x1e
 30268 15fe 1C000000 		.4byte	.LBB20
 30269 1602 00210000 		.4byte	.LBE20-.LBB20
 30270 1606 26       		.uleb128 0x26
 30271 1607 73747200 		.ascii	"str\000"
 30272 160b 01       		.byte	0x1
 30273 160c 5407     		.2byte	0x754
 30274 160e 74160000 		.4byte	0x1674
 30275 1612 03       		.uleb128 0x3
 30276 1613 91       		.byte	0x91
 30277 1614 D87E     		.sleb128 -168
 30278 1616 26       		.uleb128 0x26
 30279 1617 6A00     		.ascii	"j\000"
 30280 1619 01       		.byte	0x1
 30281 161a 0D09     		.2byte	0x90d
 30282 161c 73000000 		.4byte	0x73
 30283 1620 02       		.uleb128 0x2
 30284 1621 91       		.byte	0x91
 30285 1622 4C       		.sleb128 -52
 30286 1623 1E       		.uleb128 0x1e
 30287 1624 1C030000 		.4byte	.LBB21
 30288 1628 CE130000 		.4byte	.LBE21-.LBB21
 30289 162c 26       		.uleb128 0x26
 30290 162d 6B00     		.ascii	"k\000"
 30291 162f 01       		.byte	0x1
 30292 1630 8807     		.2byte	0x788
 30293 1632 97000000 		.4byte	0x97
 30294 1636 02       		.uleb128 0x2
 30295 1637 91       		.byte	0x91
 30296 1638 53       		.sleb128 -45
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 654


 30297 1639 1E       		.uleb128 0x1e
 30298 163a 6C030000 		.4byte	.LBB22
 30299 163e 62130000 		.4byte	.LBE22-.LBB22
 30300 1642 23       		.uleb128 0x23
 30301 1643 500E0000 		.4byte	.LASF239
 30302 1647 01       		.byte	0x1
 30303 1648 8A07     		.2byte	0x78a
 30304 164a 97000000 		.4byte	0x97
 30305 164e 02       		.uleb128 0x2
 30306 164f 91       		.byte	0x91
 30307 1650 47       		.sleb128 -57
 30308 1651 26       		.uleb128 0x26
 30309 1652 4D4F5400 		.ascii	"MOT\000"
 30310 1656 01       		.byte	0x1
 30311 1657 8B07     		.2byte	0x78b
 30312 1659 84160000 		.4byte	0x1684
 30313 165d 02       		.uleb128 0x2
 30314 165e 91       		.byte	0x91
 30315 165f 40       		.sleb128 -64
 30316 1660 23       		.uleb128 0x23
 30317 1661 58140000 		.4byte	.LASF278
 30318 1665 01       		.byte	0x1
 30319 1666 8C07     		.2byte	0x78c
 30320 1668 97000000 		.4byte	0x97
 30321 166c 03       		.uleb128 0x3
 30322 166d 91       		.byte	0x91
 30323 166e BF7F     		.sleb128 -65
 30324 1670 00       		.byte	0
 30325 1671 00       		.byte	0
 30326 1672 00       		.byte	0
 30327 1673 00       		.byte	0
 30328 1674 09       		.uleb128 0x9
 30329 1675 F9000000 		.4byte	0xf9
 30330 1679 84160000 		.4byte	0x1684
 30331 167d 0A       		.uleb128 0xa
 30332 167e 18010000 		.4byte	0x118
 30333 1682 63       		.byte	0x63
 30334 1683 00       		.byte	0
 30335 1684 07       		.uleb128 0x7
 30336 1685 04       		.byte	0x4
 30337 1686 D4050000 		.4byte	0x5d4
 30338 168a 22       		.uleb128 0x22
 30339 168b 750F0000 		.4byte	.LASF279
 30340 168f 01       		.byte	0x1
 30341 1690 3709     		.2byte	0x937
 30342 1692 00000000 		.4byte	.LFB73
 30343 1696 BC030000 		.4byte	.LFE73-.LFB73
 30344 169a 01       		.uleb128 0x1
 30345 169b 9C       		.byte	0x9c
 30346 169c 0A170000 		.4byte	0x170a
 30347 16a0 25       		.uleb128 0x25
 30348 16a1 6F0E0000 		.4byte	.LASF277
 30349 16a5 01       		.byte	0x1
 30350 16a6 3709     		.2byte	0x937
 30351 16a8 1F010000 		.4byte	0x11f
 30352 16ac 03       		.uleb128 0x3
 30353 16ad 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 655


 30354 16ae EC7E     		.sleb128 -148
 30355 16b0 26       		.uleb128 0x26
 30356 16b1 73747200 		.ascii	"str\000"
 30357 16b5 01       		.byte	0x1
 30358 16b6 3909     		.2byte	0x939
 30359 16b8 74160000 		.4byte	0x1674
 30360 16bc 03       		.uleb128 0x3
 30361 16bd 91       		.byte	0x91
 30362 16be F07E     		.sleb128 -144
 30363 16c0 26       		.uleb128 0x26
 30364 16c1 6900     		.ascii	"i\000"
 30365 16c3 01       		.byte	0x1
 30366 16c4 3A09     		.2byte	0x93a
 30367 16c6 73000000 		.4byte	0x73
 30368 16ca 02       		.uleb128 0x2
 30369 16cb 91       		.byte	0x91
 30370 16cc 64       		.sleb128 -28
 30371 16cd 23       		.uleb128 0x23
 30372 16ce B7040000 		.4byte	.LASF280
 30373 16d2 01       		.byte	0x1
 30374 16d3 3B09     		.2byte	0x93b
 30375 16d5 73000000 		.4byte	0x73
 30376 16d9 02       		.uleb128 0x2
 30377 16da 91       		.byte	0x91
 30378 16db 54       		.sleb128 -44
 30379 16dc 23       		.uleb128 0x23
 30380 16dd 89030000 		.4byte	.LASF246
 30381 16e1 01       		.byte	0x1
 30382 16e2 3D09     		.2byte	0x93d
 30383 16e4 72120000 		.4byte	0x1272
 30384 16e8 02       		.uleb128 0x2
 30385 16e9 91       		.byte	0x91
 30386 16ea 60       		.sleb128 -32
 30387 16eb 26       		.uleb128 0x26
 30388 16ec 4D4F5400 		.ascii	"MOT\000"
 30389 16f0 01       		.byte	0x1
 30390 16f1 3E09     		.2byte	0x93e
 30391 16f3 84160000 		.4byte	0x1684
 30392 16f7 02       		.uleb128 0x2
 30393 16f8 91       		.byte	0x91
 30394 16f9 5C       		.sleb128 -36
 30395 16fa 23       		.uleb128 0x23
 30396 16fb 58140000 		.4byte	.LASF278
 30397 16ff 01       		.byte	0x1
 30398 1700 3F09     		.2byte	0x93f
 30399 1702 97000000 		.4byte	0x97
 30400 1706 02       		.uleb128 0x2
 30401 1707 91       		.byte	0x91
 30402 1708 5B       		.sleb128 -37
 30403 1709 00       		.byte	0
 30404 170a 22       		.uleb128 0x22
 30405 170b DD0F0000 		.4byte	.LASF281
 30406 170f 01       		.byte	0x1
 30407 1710 7B09     		.2byte	0x97b
 30408 1712 00000000 		.4byte	.LFB74
 30409 1716 7C120000 		.4byte	.LFE74-.LFB74
 30410 171a 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 656


 30411 171b 9C       		.byte	0x9c
 30412 171c AB170000 		.4byte	0x17ab
 30413 1720 25       		.uleb128 0x25
 30414 1721 6F0E0000 		.4byte	.LASF277
 30415 1725 01       		.byte	0x1
 30416 1726 7B09     		.2byte	0x97b
 30417 1728 1F010000 		.4byte	0x11f
 30418 172c 03       		.uleb128 0x3
 30419 172d 91       		.byte	0x91
 30420 172e D47E     		.sleb128 -172
 30421 1730 26       		.uleb128 0x26
 30422 1731 73747200 		.ascii	"str\000"
 30423 1735 01       		.byte	0x1
 30424 1736 7D09     		.2byte	0x97d
 30425 1738 74160000 		.4byte	0x1674
 30426 173c 03       		.uleb128 0x3
 30427 173d 91       		.byte	0x91
 30428 173e DC7E     		.sleb128 -164
 30429 1740 26       		.uleb128 0x26
 30430 1741 6900     		.ascii	"i\000"
 30431 1743 01       		.byte	0x1
 30432 1744 7E09     		.2byte	0x97e
 30433 1746 73000000 		.4byte	0x73
 30434 174a 02       		.uleb128 0x2
 30435 174b 91       		.byte	0x91
 30436 174c 54       		.sleb128 -44
 30437 174d 23       		.uleb128 0x23
 30438 174e 89030000 		.4byte	.LASF246
 30439 1752 01       		.byte	0x1
 30440 1753 8209     		.2byte	0x982
 30441 1755 72120000 		.4byte	0x1272
 30442 1759 02       		.uleb128 0x2
 30443 175a 91       		.byte	0x91
 30444 175b 4C       		.sleb128 -52
 30445 175c 1E       		.uleb128 0x1e
 30446 175d 08010000 		.4byte	.LBB23
 30447 1761 D40C0000 		.4byte	.LBE23-.LBB23
 30448 1765 26       		.uleb128 0x26
 30449 1766 6B00     		.ascii	"k\000"
 30450 1768 01       		.byte	0x1
 30451 1769 9709     		.2byte	0x997
 30452 176b 97000000 		.4byte	0x97
 30453 176f 02       		.uleb128 0x2
 30454 1770 91       		.byte	0x91
 30455 1771 53       		.sleb128 -45
 30456 1772 1E       		.uleb128 0x1e
 30457 1773 12010000 		.4byte	.LBB24
 30458 1777 AE0C0000 		.4byte	.LBE24-.LBB24
 30459 177b 23       		.uleb128 0x23
 30460 177c 500E0000 		.4byte	.LASF239
 30461 1780 01       		.byte	0x1
 30462 1781 9909     		.2byte	0x999
 30463 1783 97000000 		.4byte	0x97
 30464 1787 02       		.uleb128 0x2
 30465 1788 91       		.byte	0x91
 30466 1789 4B       		.sleb128 -53
 30467 178a 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 657


 30468 178b 4D4F5400 		.ascii	"MOT\000"
 30469 178f 01       		.byte	0x1
 30470 1790 9A09     		.2byte	0x99a
 30471 1792 84160000 		.4byte	0x1684
 30472 1796 02       		.uleb128 0x2
 30473 1797 91       		.byte	0x91
 30474 1798 44       		.sleb128 -60
 30475 1799 23       		.uleb128 0x23
 30476 179a 58140000 		.4byte	.LASF278
 30477 179e 01       		.byte	0x1
 30478 179f 9B09     		.2byte	0x99b
 30479 17a1 97000000 		.4byte	0x97
 30480 17a5 02       		.uleb128 0x2
 30481 17a6 91       		.byte	0x91
 30482 17a7 43       		.sleb128 -61
 30483 17a8 00       		.byte	0
 30484 17a9 00       		.byte	0
 30485 17aa 00       		.byte	0
 30486 17ab 22       		.uleb128 0x22
 30487 17ac 0E0C0000 		.4byte	.LASF282
 30488 17b0 01       		.byte	0x1
 30489 17b1 830A     		.2byte	0xa83
 30490 17b3 00000000 		.4byte	.LFB75
 30491 17b7 C8000000 		.4byte	.LFE75-.LFB75
 30492 17bb 01       		.uleb128 0x1
 30493 17bc 9C       		.byte	0x9c
 30494 17bd EF170000 		.4byte	0x17ef
 30495 17c1 25       		.uleb128 0x25
 30496 17c2 6F0E0000 		.4byte	.LASF277
 30497 17c6 01       		.byte	0x1
 30498 17c7 830A     		.2byte	0xa83
 30499 17c9 1F010000 		.4byte	0x11f
 30500 17cd 03       		.uleb128 0x3
 30501 17ce 91       		.byte	0x91
 30502 17cf 847F     		.sleb128 -124
 30503 17d1 26       		.uleb128 0x26
 30504 17d2 73747200 		.ascii	"str\000"
 30505 17d6 01       		.byte	0x1
 30506 17d7 850A     		.2byte	0xa85
 30507 17d9 74160000 		.4byte	0x1674
 30508 17dd 03       		.uleb128 0x3
 30509 17de 91       		.byte	0x91
 30510 17df 887F     		.sleb128 -120
 30511 17e1 26       		.uleb128 0x26
 30512 17e2 6900     		.ascii	"i\000"
 30513 17e4 01       		.byte	0x1
 30514 17e5 860A     		.2byte	0xa86
 30515 17e7 73000000 		.4byte	0x73
 30516 17eb 02       		.uleb128 0x2
 30517 17ec 91       		.byte	0x91
 30518 17ed 6C       		.sleb128 -20
 30519 17ee 00       		.byte	0
 30520 17ef 22       		.uleb128 0x22
 30521 17f0 7B0E0000 		.4byte	.LASF283
 30522 17f4 01       		.byte	0x1
 30523 17f5 9B0A     		.2byte	0xa9b
 30524 17f7 00000000 		.4byte	.LFB76
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 658


 30525 17fb 30010000 		.4byte	.LFE76-.LFB76
 30526 17ff 01       		.uleb128 0x1
 30527 1800 9C       		.byte	0x9c
 30528 1801 33180000 		.4byte	0x1833
 30529 1805 25       		.uleb128 0x25
 30530 1806 6F0E0000 		.4byte	.LASF277
 30531 180a 01       		.byte	0x1
 30532 180b 9B0A     		.2byte	0xa9b
 30533 180d 1F010000 		.4byte	0x11f
 30534 1811 03       		.uleb128 0x3
 30535 1812 91       		.byte	0x91
 30536 1813 847F     		.sleb128 -124
 30537 1815 26       		.uleb128 0x26
 30538 1816 73747200 		.ascii	"str\000"
 30539 181a 01       		.byte	0x1
 30540 181b 9D0A     		.2byte	0xa9d
 30541 181d 74160000 		.4byte	0x1674
 30542 1821 03       		.uleb128 0x3
 30543 1822 91       		.byte	0x91
 30544 1823 887F     		.sleb128 -120
 30545 1825 26       		.uleb128 0x26
 30546 1826 6900     		.ascii	"i\000"
 30547 1828 01       		.byte	0x1
 30548 1829 9E0A     		.2byte	0xa9e
 30549 182b 73000000 		.4byte	0x73
 30550 182f 02       		.uleb128 0x2
 30551 1830 91       		.byte	0x91
 30552 1831 6C       		.sleb128 -20
 30553 1832 00       		.byte	0
 30554 1833 28       		.uleb128 0x28
 30555 1834 0F100000 		.4byte	.LASF284
 30556 1838 01       		.byte	0x1
 30557 1839 C10A     		.2byte	0xac1
 30558 183b 00000000 		.4byte	.LFB77
 30559 183f 28000000 		.4byte	.LFE77-.LFB77
 30560 1843 01       		.uleb128 0x1
 30561 1844 9C       		.byte	0x9c
 30562 1845 59180000 		.4byte	0x1859
 30563 1849 25       		.uleb128 0x25
 30564 184a 6F0E0000 		.4byte	.LASF277
 30565 184e 01       		.byte	0x1
 30566 184f C10A     		.2byte	0xac1
 30567 1851 1F010000 		.4byte	0x11f
 30568 1855 02       		.uleb128 0x2
 30569 1856 91       		.byte	0x91
 30570 1857 6C       		.sleb128 -20
 30571 1858 00       		.byte	0
 30572 1859 22       		.uleb128 0x22
 30573 185a B8030000 		.4byte	.LASF285
 30574 185e 01       		.byte	0x1
 30575 185f CC0A     		.2byte	0xacc
 30576 1861 00000000 		.4byte	.LFB78
 30577 1865 F0000000 		.4byte	.LFE78-.LFB78
 30578 1869 01       		.uleb128 0x1
 30579 186a 9C       		.byte	0x9c
 30580 186b C8180000 		.4byte	0x18c8
 30581 186f 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 659


 30582 1870 6F0E0000 		.4byte	.LASF277
 30583 1874 01       		.byte	0x1
 30584 1875 CC0A     		.2byte	0xacc
 30585 1877 1F010000 		.4byte	0x11f
 30586 187b 03       		.uleb128 0x3
 30587 187c 91       		.byte	0x91
 30588 187d FC7E     		.sleb128 -132
 30589 187f 23       		.uleb128 0x23
 30590 1880 41020000 		.4byte	.LASF286
 30591 1884 01       		.byte	0x1
 30592 1885 CE0A     		.2byte	0xace
 30593 1887 74160000 		.4byte	0x1674
 30594 188b 03       		.uleb128 0x3
 30595 188c 91       		.byte	0x91
 30596 188d 847F     		.sleb128 -124
 30597 188f 23       		.uleb128 0x23
 30598 1890 E5010000 		.4byte	.LASF287
 30599 1894 01       		.byte	0x1
 30600 1895 CF0A     		.2byte	0xacf
 30601 1897 A3000000 		.4byte	0xa3
 30602 189b 02       		.uleb128 0x2
 30603 189c 91       		.byte	0x91
 30604 189d 6E       		.sleb128 -18
 30605 189e 23       		.uleb128 0x23
 30606 189f CA000000 		.4byte	.LASF288
 30607 18a3 01       		.byte	0x1
 30608 18a4 D00A     		.2byte	0xad0
 30609 18a6 EB000000 		.4byte	0xeb
 30610 18aa 05       		.uleb128 0x5
 30611 18ab 03       		.byte	0x3
 30612 18ac 00000000 		.4byte	h_time.11212
 30613 18b0 1E       		.uleb128 0x1e
 30614 18b1 26000000 		.4byte	.LBB25
 30615 18b5 A4000000 		.4byte	.LBE25-.LBB25
 30616 18b9 26       		.uleb128 0x26
 30617 18ba 6900     		.ascii	"i\000"
 30618 18bc 01       		.byte	0x1
 30619 18bd D50A     		.2byte	0xad5
 30620 18bf 73000000 		.4byte	0x73
 30621 18c3 02       		.uleb128 0x2
 30622 18c4 91       		.byte	0x91
 30623 18c5 68       		.sleb128 -24
 30624 18c6 00       		.byte	0
 30625 18c7 00       		.byte	0
 30626 18c8 22       		.uleb128 0x22
 30627 18c9 7A150000 		.4byte	.LASF289
 30628 18cd 01       		.byte	0x1
 30629 18ce ED0A     		.2byte	0xaed
 30630 18d0 00000000 		.4byte	.LFB79
 30631 18d4 74030000 		.4byte	.LFE79-.LFB79
 30632 18d8 01       		.uleb128 0x1
 30633 18d9 9C       		.byte	0x9c
 30634 18da 0C190000 		.4byte	0x190c
 30635 18de 25       		.uleb128 0x25
 30636 18df 6F0E0000 		.4byte	.LASF277
 30637 18e3 01       		.byte	0x1
 30638 18e4 ED0A     		.2byte	0xaed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 660


 30639 18e6 1F010000 		.4byte	0x11f
 30640 18ea 03       		.uleb128 0x3
 30641 18eb 91       		.byte	0x91
 30642 18ec AC7D     		.sleb128 -340
 30643 18ee 26       		.uleb128 0x26
 30644 18ef 73747200 		.ascii	"str\000"
 30645 18f3 01       		.byte	0x1
 30646 18f4 EF0A     		.2byte	0xaef
 30647 18f6 0C190000 		.4byte	0x190c
 30648 18fa 03       		.uleb128 0x3
 30649 18fb 91       		.byte	0x91
 30650 18fc B07D     		.sleb128 -336
 30651 18fe 26       		.uleb128 0x26
 30652 18ff 6900     		.ascii	"i\000"
 30653 1901 01       		.byte	0x1
 30654 1902 F00A     		.2byte	0xaf0
 30655 1904 73000000 		.4byte	0x73
 30656 1908 02       		.uleb128 0x2
 30657 1909 91       		.byte	0x91
 30658 190a 5C       		.sleb128 -36
 30659 190b 00       		.byte	0
 30660 190c 09       		.uleb128 0x9
 30661 190d F9000000 		.4byte	0xf9
 30662 1911 1D190000 		.4byte	0x191d
 30663 1915 24       		.uleb128 0x24
 30664 1916 18010000 		.4byte	0x118
 30665 191a 2B01     		.2byte	0x12b
 30666 191c 00       		.byte	0
 30667 191d 22       		.uleb128 0x22
 30668 191e A00F0000 		.4byte	.LASF290
 30669 1922 01       		.byte	0x1
 30670 1923 180B     		.2byte	0xb18
 30671 1925 00000000 		.4byte	.LFB80
 30672 1929 84000000 		.4byte	.LFE80-.LFB80
 30673 192d 01       		.uleb128 0x1
 30674 192e 9C       		.byte	0x9c
 30675 192f 70190000 		.4byte	0x1970
 30676 1933 25       		.uleb128 0x25
 30677 1934 6C060000 		.4byte	.LASF229
 30678 1938 01       		.byte	0x1
 30679 1939 180B     		.2byte	0xb18
 30680 193b 67100000 		.4byte	0x1067
 30681 193f 02       		.uleb128 0x2
 30682 1940 91       		.byte	0x91
 30683 1941 6C       		.sleb128 -20
 30684 1942 25       		.uleb128 0x25
 30685 1943 ED0B0000 		.4byte	.LASF230
 30686 1947 01       		.byte	0x1
 30687 1948 180B     		.2byte	0xb18
 30688 194a A3000000 		.4byte	0xa3
 30689 194e 02       		.uleb128 0x2
 30690 194f 91       		.byte	0x91
 30691 1950 6A       		.sleb128 -22
 30692 1951 25       		.uleb128 0x25
 30693 1952 2D100000 		.4byte	.LASF291
 30694 1956 01       		.byte	0x1
 30695 1957 180B     		.2byte	0xb18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 661


 30696 1959 97000000 		.4byte	0x97
 30697 195d 02       		.uleb128 0x2
 30698 195e 91       		.byte	0x91
 30699 195f 69       		.sleb128 -23
 30700 1960 23       		.uleb128 0x23
 30701 1961 72070000 		.4byte	.LASF244
 30702 1965 01       		.byte	0x1
 30703 1966 1A0B     		.2byte	0xb1a
 30704 1968 A3000000 		.4byte	0xa3
 30705 196c 02       		.uleb128 0x2
 30706 196d 91       		.byte	0x91
 30707 196e 76       		.sleb128 -10
 30708 196f 00       		.byte	0
 30709 1970 22       		.uleb128 0x22
 30710 1971 91060000 		.4byte	.LASF292
 30711 1975 01       		.byte	0x1
 30712 1976 340B     		.2byte	0xb34
 30713 1978 00000000 		.4byte	.LFB81
 30714 197c 88000000 		.4byte	.LFE81-.LFB81
 30715 1980 01       		.uleb128 0x1
 30716 1981 9C       		.byte	0x9c
 30717 1982 B4190000 		.4byte	0x19b4
 30718 1986 25       		.uleb128 0x25
 30719 1987 6C060000 		.4byte	.LASF229
 30720 198b 01       		.byte	0x1
 30721 198c 340B     		.2byte	0xb34
 30722 198e 67100000 		.4byte	0x1067
 30723 1992 02       		.uleb128 0x2
 30724 1993 91       		.byte	0x91
 30725 1994 6C       		.sleb128 -20
 30726 1995 25       		.uleb128 0x25
 30727 1996 ED0B0000 		.4byte	.LASF230
 30728 199a 01       		.byte	0x1
 30729 199b 340B     		.2byte	0xb34
 30730 199d A3000000 		.4byte	0xa3
 30731 19a1 02       		.uleb128 0x2
 30732 19a2 91       		.byte	0x91
 30733 19a3 6A       		.sleb128 -22
 30734 19a4 23       		.uleb128 0x23
 30735 19a5 72070000 		.4byte	.LASF244
 30736 19a9 01       		.byte	0x1
 30737 19aa 360B     		.2byte	0xb36
 30738 19ac A3000000 		.4byte	0xa3
 30739 19b0 02       		.uleb128 0x2
 30740 19b1 91       		.byte	0x91
 30741 19b2 76       		.sleb128 -10
 30742 19b3 00       		.byte	0
 30743 19b4 22       		.uleb128 0x22
 30744 19b5 790C0000 		.4byte	.LASF293
 30745 19b9 01       		.byte	0x1
 30746 19ba 500B     		.2byte	0xb50
 30747 19bc 00000000 		.4byte	.LFB82
 30748 19c0 A0000000 		.4byte	.LFE82-.LFB82
 30749 19c4 01       		.uleb128 0x1
 30750 19c5 9C       		.byte	0x9c
 30751 19c6 071A0000 		.4byte	0x1a07
 30752 19ca 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 662


 30753 19cb 6C060000 		.4byte	.LASF229
 30754 19cf 01       		.byte	0x1
 30755 19d0 500B     		.2byte	0xb50
 30756 19d2 67100000 		.4byte	0x1067
 30757 19d6 02       		.uleb128 0x2
 30758 19d7 91       		.byte	0x91
 30759 19d8 74       		.sleb128 -12
 30760 19d9 25       		.uleb128 0x25
 30761 19da ED0B0000 		.4byte	.LASF230
 30762 19de 01       		.byte	0x1
 30763 19df 500B     		.2byte	0xb50
 30764 19e1 A3000000 		.4byte	0xa3
 30765 19e5 02       		.uleb128 0x2
 30766 19e6 91       		.byte	0x91
 30767 19e7 72       		.sleb128 -14
 30768 19e8 29       		.uleb128 0x29
 30769 19e9 696400   		.ascii	"id\000"
 30770 19ec 01       		.byte	0x1
 30771 19ed 500B     		.2byte	0xb50
 30772 19ef 97000000 		.4byte	0x97
 30773 19f3 02       		.uleb128 0x2
 30774 19f4 91       		.byte	0x91
 30775 19f5 71       		.sleb128 -15
 30776 19f6 26       		.uleb128 0x26
 30777 19f7 6900     		.ascii	"i\000"
 30778 19f9 01       		.byte	0x1
 30779 19fa 520B     		.2byte	0xb52
 30780 19fc A3000000 		.4byte	0xa3
 30781 1a00 05       		.uleb128 0x5
 30782 1a01 03       		.byte	0x3
 30783 1a02 04000000 		.4byte	i.11253
 30784 1a06 00       		.byte	0
 30785 1a07 2A       		.uleb128 0x2a
 30786 1a08 08140000 		.4byte	.LASF299
 30787 1a0c 01       		.byte	0x1
 30788 1a0d 6E0B     		.2byte	0xb6e
 30789 1a0f 97000000 		.4byte	0x97
 30790 1a13 00000000 		.4byte	.LFB83
 30791 1a17 3E000000 		.4byte	.LFE83-.LFB83
 30792 1a1b 01       		.uleb128 0x1
 30793 1a1c 9C       		.byte	0x9c
 30794 1a1d 5C1A0000 		.4byte	0x1a5c
 30795 1a21 25       		.uleb128 0x25
 30796 1a22 BC0B0000 		.4byte	.LASF294
 30797 1a26 01       		.byte	0x1
 30798 1a27 6E0B     		.2byte	0xb6e
 30799 1a29 67100000 		.4byte	0x1067
 30800 1a2d 02       		.uleb128 0x2
 30801 1a2e 91       		.byte	0x91
 30802 1a2f 6C       		.sleb128 -20
 30803 1a30 25       		.uleb128 0x25
 30804 1a31 41060000 		.4byte	.LASF295
 30805 1a35 01       		.byte	0x1
 30806 1a36 6E0B     		.2byte	0xb6e
 30807 1a38 97000000 		.4byte	0x97
 30808 1a3c 02       		.uleb128 0x2
 30809 1a3d 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 663


 30810 1a3e 6B       		.sleb128 -21
 30811 1a3f 26       		.uleb128 0x26
 30812 1a40 6900     		.ascii	"i\000"
 30813 1a42 01       		.byte	0x1
 30814 1a43 700B     		.2byte	0xb70
 30815 1a45 97000000 		.4byte	0x97
 30816 1a49 02       		.uleb128 0x2
 30817 1a4a 91       		.byte	0x91
 30818 1a4b 77       		.sleb128 -9
 30819 1a4c 23       		.uleb128 0x23
 30820 1a4d CF0D0000 		.4byte	.LASF296
 30821 1a51 01       		.byte	0x1
 30822 1a52 710B     		.2byte	0xb71
 30823 1a54 97000000 		.4byte	0x97
 30824 1a58 02       		.uleb128 0x2
 30825 1a59 91       		.byte	0x91
 30826 1a5a 76       		.sleb128 -10
 30827 1a5b 00       		.byte	0
 30828 1a5c 22       		.uleb128 0x22
 30829 1a5d FB0B0000 		.4byte	.LASF297
 30830 1a61 01       		.byte	0x1
 30831 1a62 7E0B     		.2byte	0xb7e
 30832 1a64 00000000 		.4byte	.LFB84
 30833 1a68 2E000000 		.4byte	.LFE84-.LFB84
 30834 1a6c 01       		.uleb128 0x1
 30835 1a6d 9C       		.byte	0x9c
 30836 1a6e A01A0000 		.4byte	0x1aa0
 30837 1a72 25       		.uleb128 0x25
 30838 1a73 8A050000 		.4byte	.LASF298
 30839 1a77 01       		.byte	0x1
 30840 1a78 7E0B     		.2byte	0xb7e
 30841 1a7a 97000000 		.4byte	0x97
 30842 1a7e 02       		.uleb128 0x2
 30843 1a7f 91       		.byte	0x91
 30844 1a80 6F       		.sleb128 -17
 30845 1a81 23       		.uleb128 0x23
 30846 1a82 ED0B0000 		.4byte	.LASF230
 30847 1a86 01       		.byte	0x1
 30848 1a87 7F0B     		.2byte	0xb7f
 30849 1a89 73000000 		.4byte	0x73
 30850 1a8d 02       		.uleb128 0x2
 30851 1a8e 91       		.byte	0x91
 30852 1a8f 74       		.sleb128 -12
 30853 1a90 23       		.uleb128 0x23
 30854 1a91 6C060000 		.4byte	.LASF229
 30855 1a95 01       		.byte	0x1
 30856 1a96 800B     		.2byte	0xb80
 30857 1a98 80080000 		.4byte	0x880
 30858 1a9c 02       		.uleb128 0x2
 30859 1a9d 91       		.byte	0x91
 30860 1a9e 70       		.sleb128 -16
 30861 1a9f 00       		.byte	0
 30862 1aa0 2B       		.uleb128 0x2b
 30863 1aa1 72040000 		.4byte	.LASF300
 30864 1aa5 01       		.byte	0x1
 30865 1aa6 8D0B     		.2byte	0xb8d
 30866 1aa8 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 664


 30867 1aac 00000000 		.4byte	.LFB85
 30868 1ab0 98000000 		.4byte	.LFE85-.LFB85
 30869 1ab4 01       		.uleb128 0x1
 30870 1ab5 9C       		.byte	0x9c
 30871 1ab6 041B0000 		.4byte	0x1b04
 30872 1aba 25       		.uleb128 0x25
 30873 1abb 34060000 		.4byte	.LASF301
 30874 1abf 01       		.byte	0x1
 30875 1ac0 8D0B     		.2byte	0xb8d
 30876 1ac2 73000000 		.4byte	0x73
 30877 1ac6 02       		.uleb128 0x2
 30878 1ac7 91       		.byte	0x91
 30879 1ac8 64       		.sleb128 -28
 30880 1ac9 26       		.uleb128 0x26
 30881 1aca 6900     		.ascii	"i\000"
 30882 1acc 01       		.byte	0x1
 30883 1acd 8F0B     		.2byte	0xb8f
 30884 1acf 73000000 		.4byte	0x73
 30885 1ad3 02       		.uleb128 0x2
 30886 1ad4 91       		.byte	0x91
 30887 1ad5 74       		.sleb128 -12
 30888 1ad6 23       		.uleb128 0x23
 30889 1ad7 D1000000 		.4byte	.LASF302
 30890 1adb 01       		.byte	0x1
 30891 1adc 900B     		.2byte	0xb90
 30892 1ade 97000000 		.4byte	0x97
 30893 1ae2 02       		.uleb128 0x2
 30894 1ae3 91       		.byte	0x91
 30895 1ae4 6B       		.sleb128 -21
 30896 1ae5 23       		.uleb128 0x23
 30897 1ae6 AD060000 		.4byte	.LASF303
 30898 1aea 01       		.byte	0x1
 30899 1aeb 910B     		.2byte	0xb91
 30900 1aed 73000000 		.4byte	0x73
 30901 1af1 02       		.uleb128 0x2
 30902 1af2 91       		.byte	0x91
 30903 1af3 6C       		.sleb128 -20
 30904 1af4 23       		.uleb128 0x23
 30905 1af5 C8050000 		.4byte	.LASF304
 30906 1af9 01       		.byte	0x1
 30907 1afa 920B     		.2byte	0xb92
 30908 1afc 97000000 		.4byte	0x97
 30909 1b00 02       		.uleb128 0x2
 30910 1b01 91       		.byte	0x91
 30911 1b02 73       		.sleb128 -13
 30912 1b03 00       		.byte	0
 30913 1b04 22       		.uleb128 0x22
 30914 1b05 140F0000 		.4byte	.LASF305
 30915 1b09 01       		.byte	0x1
 30916 1b0a B70B     		.2byte	0xbb7
 30917 1b0c 00000000 		.4byte	.LFB86
 30918 1b10 80000000 		.4byte	.LFE86-.LFB86
 30919 1b14 01       		.uleb128 0x1
 30920 1b15 9C       		.byte	0x9c
 30921 1b16 281B0000 		.4byte	0x1b28
 30922 1b1a 26       		.uleb128 0x26
 30923 1b1b 6900     		.ascii	"i\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 665


 30924 1b1d 01       		.byte	0x1
 30925 1b1e B90B     		.2byte	0xbb9
 30926 1b20 A3000000 		.4byte	0xa3
 30927 1b24 02       		.uleb128 0x2
 30928 1b25 91       		.byte	0x91
 30929 1b26 76       		.sleb128 -10
 30930 1b27 00       		.byte	0
 30931 1b28 2B       		.uleb128 0x2b
 30932 1b29 5A0E0000 		.4byte	.LASF306
 30933 1b2d 01       		.byte	0x1
 30934 1b2e D00B     		.2byte	0xbd0
 30935 1b30 97000000 		.4byte	0x97
 30936 1b34 00000000 		.4byte	.LFB87
 30937 1b38 5C000000 		.4byte	.LFE87-.LFB87
 30938 1b3c 01       		.uleb128 0x1
 30939 1b3d 9C       		.byte	0x9c
 30940 1b3e 501B0000 		.4byte	0x1b50
 30941 1b42 26       		.uleb128 0x26
 30942 1b43 6900     		.ascii	"i\000"
 30943 1b45 01       		.byte	0x1
 30944 1b46 D10B     		.2byte	0xbd1
 30945 1b48 A3000000 		.4byte	0xa3
 30946 1b4c 02       		.uleb128 0x2
 30947 1b4d 91       		.byte	0x91
 30948 1b4e 76       		.sleb128 -10
 30949 1b4f 00       		.byte	0
 30950 1b50 2B       		.uleb128 0x2b
 30951 1b51 B3060000 		.4byte	.LASF307
 30952 1b55 01       		.byte	0x1
 30953 1b56 E30B     		.2byte	0xbe3
 30954 1b58 97000000 		.4byte	0x97
 30955 1b5c 00000000 		.4byte	.LFB88
 30956 1b60 10060000 		.4byte	.LFE88-.LFB88
 30957 1b64 01       		.uleb128 0x1
 30958 1b65 9C       		.byte	0x9c
 30959 1b66 851B0000 		.4byte	0x1b85
 30960 1b6a 26       		.uleb128 0x26
 30961 1b6b 6900     		.ascii	"i\000"
 30962 1b6d 01       		.byte	0x1
 30963 1b6e E50B     		.2byte	0xbe5
 30964 1b70 97000000 		.4byte	0x97
 30965 1b74 02       		.uleb128 0x2
 30966 1b75 91       		.byte	0x91
 30967 1b76 77       		.sleb128 -9
 30968 1b77 26       		.uleb128 0x26
 30969 1b78 6A00     		.ascii	"j\000"
 30970 1b7a 01       		.byte	0x1
 30971 1b7b E50B     		.2byte	0xbe5
 30972 1b7d 97000000 		.4byte	0x97
 30973 1b81 02       		.uleb128 0x2
 30974 1b82 91       		.byte	0x91
 30975 1b83 76       		.sleb128 -10
 30976 1b84 00       		.byte	0
 30977 1b85 28       		.uleb128 0x28
 30978 1b86 62090000 		.4byte	.LASF308
 30979 1b8a 01       		.byte	0x1
 30980 1b8b 820C     		.2byte	0xc82
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 666


 30981 1b8d 00000000 		.4byte	.LFB89
 30982 1b91 38020000 		.4byte	.LFE89-.LFB89
 30983 1b95 01       		.uleb128 0x1
 30984 1b96 9C       		.byte	0x9c
 30985 1b97 C21B0000 		.4byte	0x1bc2
 30986 1b9b 23       		.uleb128 0x23
 30987 1b9c 500E0000 		.4byte	.LASF239
 30988 1ba0 01       		.byte	0x1
 30989 1ba1 840C     		.2byte	0xc84
 30990 1ba3 97000000 		.4byte	0x97
 30991 1ba7 02       		.uleb128 0x2
 30992 1ba8 91       		.byte	0x91
 30993 1ba9 73       		.sleb128 -13
 30994 1baa 1E       		.uleb128 0x1e
 30995 1bab FA000000 		.4byte	.LBB26
 30996 1baf 6A000000 		.4byte	.LBE26-.LBB26
 30997 1bb3 26       		.uleb128 0x26
 30998 1bb4 6900     		.ascii	"i\000"
 30999 1bb6 01       		.byte	0x1
 31000 1bb7 950C     		.2byte	0xc95
 31001 1bb9 73000000 		.4byte	0x73
 31002 1bbd 02       		.uleb128 0x2
 31003 1bbe 91       		.byte	0x91
 31004 1bbf 74       		.sleb128 -12
 31005 1bc0 00       		.byte	0
 31006 1bc1 00       		.byte	0
 31007 1bc2 2C       		.uleb128 0x2c
 31008 1bc3 DE0B0000 		.4byte	.LASF309
 31009 1bc7 01       		.byte	0x1
 31010 1bc8 B40C     		.2byte	0xcb4
 31011 1bca 00000000 		.4byte	.LFB90
 31012 1bce 28000000 		.4byte	.LFE90-.LFB90
 31013 1bd2 01       		.uleb128 0x1
 31014 1bd3 9C       		.byte	0x9c
 31015 1bd4 2C       		.uleb128 0x2c
 31016 1bd5 A5110000 		.4byte	.LASF310
 31017 1bd9 01       		.byte	0x1
 31018 1bda C00C     		.2byte	0xcc0
 31019 1bdc 00000000 		.4byte	.LFB91
 31020 1be0 78000000 		.4byte	.LFE91-.LFB91
 31021 1be4 01       		.uleb128 0x1
 31022 1be5 9C       		.byte	0x9c
 31023 1be6 2C       		.uleb128 0x2c
 31024 1be7 2B040000 		.4byte	.LASF311
 31025 1beb 01       		.byte	0x1
 31026 1bec D60C     		.2byte	0xcd6
 31027 1bee 00000000 		.4byte	.LFB92
 31028 1bf2 B0000000 		.4byte	.LFE92-.LFB92
 31029 1bf6 01       		.uleb128 0x1
 31030 1bf7 9C       		.byte	0x9c
 31031 1bf8 27       		.uleb128 0x27
 31032 1bf9 E1060000 		.4byte	.LASF313
 31033 1bfd 01       		.byte	0x1
 31034 1bfe F70C     		.2byte	0xcf7
 31035 1c00 00000000 		.4byte	.LFB93
 31036 1c04 28010000 		.4byte	.LFE93-.LFB93
 31037 1c08 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 667


 31038 1c09 9C       		.byte	0x9c
 31039 1c0a 3C1C0000 		.4byte	0x1c3c
 31040 1c0e 23       		.uleb128 0x23
 31041 1c0f 72070000 		.4byte	.LASF244
 31042 1c13 01       		.byte	0x1
 31043 1c14 F90C     		.2byte	0xcf9
 31044 1c16 97000000 		.4byte	0x97
 31045 1c1a 02       		.uleb128 0x2
 31046 1c1b 91       		.byte	0x91
 31047 1c1c 6F       		.sleb128 -17
 31048 1c1d 23       		.uleb128 0x23
 31049 1c1e 5F120000 		.4byte	.LASF235
 31050 1c22 01       		.byte	0x1
 31051 1c23 FA0C     		.2byte	0xcfa
 31052 1c25 C7000000 		.4byte	0xc7
 31053 1c29 02       		.uleb128 0x2
 31054 1c2a 91       		.byte	0x91
 31055 1c2b 6C       		.sleb128 -20
 31056 1c2c 23       		.uleb128 0x23
 31057 1c2d 6C060000 		.4byte	.LASF229
 31058 1c31 01       		.byte	0x1
 31059 1c32 FD0C     		.2byte	0xcfd
 31060 1c34 11080000 		.4byte	0x811
 31061 1c38 02       		.uleb128 0x2
 31062 1c39 91       		.byte	0x91
 31063 1c3a 64       		.sleb128 -28
 31064 1c3b 00       		.byte	0
 31065 1c3c 27       		.uleb128 0x27
 31066 1c3d 010F0000 		.4byte	.LASF314
 31067 1c41 01       		.byte	0x1
 31068 1c42 180D     		.2byte	0xd18
 31069 1c44 00000000 		.4byte	.LFB94
 31070 1c48 B8000000 		.4byte	.LFE94-.LFB94
 31071 1c4c 01       		.uleb128 0x1
 31072 1c4d 9C       		.byte	0x9c
 31073 1c4e 801C0000 		.4byte	0x1c80
 31074 1c52 23       		.uleb128 0x23
 31075 1c53 72070000 		.4byte	.LASF244
 31076 1c57 01       		.byte	0x1
 31077 1c58 1A0D     		.2byte	0xd1a
 31078 1c5a 97000000 		.4byte	0x97
 31079 1c5e 02       		.uleb128 0x2
 31080 1c5f 91       		.byte	0x91
 31081 1c60 6F       		.sleb128 -17
 31082 1c61 23       		.uleb128 0x23
 31083 1c62 5F120000 		.4byte	.LASF235
 31084 1c66 01       		.byte	0x1
 31085 1c67 1B0D     		.2byte	0xd1b
 31086 1c69 C7000000 		.4byte	0xc7
 31087 1c6d 02       		.uleb128 0x2
 31088 1c6e 91       		.byte	0x91
 31089 1c6f 6C       		.sleb128 -20
 31090 1c70 23       		.uleb128 0x23
 31091 1c71 6C060000 		.4byte	.LASF229
 31092 1c75 01       		.byte	0x1
 31093 1c76 1F0D     		.2byte	0xd1f
 31094 1c78 11080000 		.4byte	0x811
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 668


 31095 1c7c 02       		.uleb128 0x2
 31096 1c7d 91       		.byte	0x91
 31097 1c7e 64       		.sleb128 -28
 31098 1c7f 00       		.byte	0
 31099 1c80 27       		.uleb128 0x27
 31100 1c81 FF010000 		.4byte	.LASF315
 31101 1c85 01       		.byte	0x1
 31102 1c86 310D     		.2byte	0xd31
 31103 1c88 00000000 		.4byte	.LFB95
 31104 1c8c B8000000 		.4byte	.LFE95-.LFB95
 31105 1c90 01       		.uleb128 0x1
 31106 1c91 9C       		.byte	0x9c
 31107 1c92 C41C0000 		.4byte	0x1cc4
 31108 1c96 23       		.uleb128 0x23
 31109 1c97 72070000 		.4byte	.LASF244
 31110 1c9b 01       		.byte	0x1
 31111 1c9c 330D     		.2byte	0xd33
 31112 1c9e 97000000 		.4byte	0x97
 31113 1ca2 02       		.uleb128 0x2
 31114 1ca3 91       		.byte	0x91
 31115 1ca4 6F       		.sleb128 -17
 31116 1ca5 23       		.uleb128 0x23
 31117 1ca6 5F120000 		.4byte	.LASF235
 31118 1caa 01       		.byte	0x1
 31119 1cab 340D     		.2byte	0xd34
 31120 1cad C7000000 		.4byte	0xc7
 31121 1cb1 02       		.uleb128 0x2
 31122 1cb2 91       		.byte	0x91
 31123 1cb3 6C       		.sleb128 -20
 31124 1cb4 23       		.uleb128 0x23
 31125 1cb5 6C060000 		.4byte	.LASF229
 31126 1cb9 01       		.byte	0x1
 31127 1cba 380D     		.2byte	0xd38
 31128 1cbc 11080000 		.4byte	0x811
 31129 1cc0 02       		.uleb128 0x2
 31130 1cc1 91       		.byte	0x91
 31131 1cc2 64       		.sleb128 -28
 31132 1cc3 00       		.byte	0
 31133 1cc4 27       		.uleb128 0x27
 31134 1cc5 630A0000 		.4byte	.LASF316
 31135 1cc9 01       		.byte	0x1
 31136 1cca 4A0D     		.2byte	0xd4a
 31137 1ccc 00000000 		.4byte	.LFB96
 31138 1cd0 5C000000 		.4byte	.LFE96-.LFB96
 31139 1cd4 01       		.uleb128 0x1
 31140 1cd5 9C       		.byte	0x9c
 31141 1cd6 F91C0000 		.4byte	0x1cf9
 31142 1cda 23       		.uleb128 0x23
 31143 1cdb 5F120000 		.4byte	.LASF235
 31144 1cdf 01       		.byte	0x1
 31145 1ce0 4C0D     		.2byte	0xd4c
 31146 1ce2 C7000000 		.4byte	0xc7
 31147 1ce6 02       		.uleb128 0x2
 31148 1ce7 91       		.byte	0x91
 31149 1ce8 76       		.sleb128 -10
 31150 1ce9 23       		.uleb128 0x23
 31151 1cea 6C060000 		.4byte	.LASF229
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 669


 31152 1cee 01       		.byte	0x1
 31153 1cef 500D     		.2byte	0xd50
 31154 1cf1 44090000 		.4byte	0x944
 31155 1cf5 02       		.uleb128 0x2
 31156 1cf6 91       		.byte	0x91
 31157 1cf7 70       		.sleb128 -16
 31158 1cf8 00       		.byte	0
 31159 1cf9 2D       		.uleb128 0x2d
 31160 1cfa 430C0000 		.4byte	.LASF317
 31161 1cfe 01       		.byte	0x1
 31162 1cff 620D     		.2byte	0xd62
 31163 1d01 00000000 		.4byte	.LFB97
 31164 1d05 44020000 		.4byte	.LFE97-.LFB97
 31165 1d09 01       		.uleb128 0x1
 31166 1d0a 9C       		.byte	0x9c
 31167 1d0b 631D0000 		.4byte	0x1d63
 31168 1d0f 23       		.uleb128 0x23
 31169 1d10 5F120000 		.4byte	.LASF235
 31170 1d14 01       		.byte	0x1
 31171 1d15 650D     		.2byte	0xd65
 31172 1d17 631D0000 		.4byte	0x1d63
 31173 1d1b 02       		.uleb128 0x2
 31174 1d1c 91       		.byte	0x91
 31175 1d1d 70       		.sleb128 -16
 31176 1d1e 23       		.uleb128 0x23
 31177 1d1f 34070000 		.4byte	.LASF318
 31178 1d23 01       		.byte	0x1
 31179 1d24 660D     		.2byte	0xd66
 31180 1d26 631D0000 		.4byte	0x1d63
 31181 1d2a 05       		.uleb128 0x5
 31182 1d2b 03       		.byte	0x3
 31183 1d2c 08000000 		.4byte	last_aux_int16.11384
 31184 1d30 2E       		.uleb128 0x2e
 31185 1d31 2E000000 		.4byte	.LBB27
 31186 1d35 50000000 		.4byte	.LBE27-.LBB27
 31187 1d39 4B1D0000 		.4byte	0x1d4b
 31188 1d3d 26       		.uleb128 0x26
 31189 1d3e 6900     		.ascii	"i\000"
 31190 1d40 01       		.byte	0x1
 31191 1d41 6D0D     		.2byte	0xd6d
 31192 1d43 97000000 		.4byte	0x97
 31193 1d47 02       		.uleb128 0x2
 31194 1d48 91       		.byte	0x91
 31195 1d49 77       		.sleb128 -9
 31196 1d4a 00       		.byte	0
 31197 1d4b 1E       		.uleb128 0x1e
 31198 1d4c 88000000 		.4byte	.LBB28
 31199 1d50 98010000 		.4byte	.LBE28-.LBB28
 31200 1d54 26       		.uleb128 0x26
 31201 1d55 6900     		.ascii	"i\000"
 31202 1d57 01       		.byte	0x1
 31203 1d58 770D     		.2byte	0xd77
 31204 1d5a 97000000 		.4byte	0x97
 31205 1d5e 02       		.uleb128 0x2
 31206 1d5f 91       		.byte	0x91
 31207 1d60 76       		.sleb128 -10
 31208 1d61 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 670


 31209 1d62 00       		.byte	0
 31210 1d63 09       		.uleb128 0x9
 31211 1d64 C7000000 		.4byte	0xc7
 31212 1d68 731D0000 		.4byte	0x1d73
 31213 1d6c 0A       		.uleb128 0xa
 31214 1d6d 18010000 		.4byte	0x118
 31215 1d71 01       		.byte	0x1
 31216 1d72 00       		.byte	0
 31217 1d73 27       		.uleb128 0x27
 31218 1d74 D9140000 		.4byte	.LASF319
 31219 1d78 01       		.byte	0x1
 31220 1d79 920D     		.2byte	0xd92
 31221 1d7b 00000000 		.4byte	.LFB98
 31222 1d7f BC000000 		.4byte	.LFE98-.LFB98
 31223 1d83 01       		.uleb128 0x1
 31224 1d84 9C       		.byte	0x9c
 31225 1d85 991D0000 		.4byte	0x1d99
 31226 1d89 26       		.uleb128 0x26
 31227 1d8a 61757800 		.ascii	"aux\000"
 31228 1d8e 01       		.byte	0x1
 31229 1d8f 950D     		.2byte	0xd95
 31230 1d91 97000000 		.4byte	0x97
 31231 1d95 02       		.uleb128 0x2
 31232 1d96 91       		.byte	0x91
 31233 1d97 77       		.sleb128 -9
 31234 1d98 00       		.byte	0
 31235 1d99 27       		.uleb128 0x27
 31236 1d9a A10C0000 		.4byte	.LASF320
 31237 1d9e 01       		.byte	0x1
 31238 1d9f B70D     		.2byte	0xdb7
 31239 1da1 00000000 		.4byte	.LFB99
 31240 1da5 5C000000 		.4byte	.LFE99-.LFB99
 31241 1da9 01       		.uleb128 0x1
 31242 1daa 9C       		.byte	0x9c
 31243 1dab BF1D0000 		.4byte	0x1dbf
 31244 1daf 23       		.uleb128 0x23
 31245 1db0 6C060000 		.4byte	.LASF229
 31246 1db4 01       		.byte	0x1
 31247 1db5 B90D     		.2byte	0xdb9
 31248 1db7 C4050000 		.4byte	0x5c4
 31249 1dbb 02       		.uleb128 0x2
 31250 1dbc 91       		.byte	0x91
 31251 1dbd 74       		.sleb128 -12
 31252 1dbe 00       		.byte	0
 31253 1dbf 27       		.uleb128 0x27
 31254 1dc0 66100000 		.4byte	.LASF321
 31255 1dc4 01       		.byte	0x1
 31256 1dc5 CE0D     		.2byte	0xdce
 31257 1dc7 00000000 		.4byte	.LFB100
 31258 1dcb 38010000 		.4byte	.LFE100-.LFB100
 31259 1dcf 01       		.uleb128 0x1
 31260 1dd0 9C       		.byte	0x9c
 31261 1dd1 031E0000 		.4byte	0x1e03
 31262 1dd5 23       		.uleb128 0x23
 31263 1dd6 72070000 		.4byte	.LASF244
 31264 1dda 01       		.byte	0x1
 31265 1ddb D00D     		.2byte	0xdd0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 671


 31266 1ddd 97000000 		.4byte	0x97
 31267 1de1 02       		.uleb128 0x2
 31268 1de2 91       		.byte	0x91
 31269 1de3 6F       		.sleb128 -17
 31270 1de4 23       		.uleb128 0x23
 31271 1de5 5F120000 		.4byte	.LASF235
 31272 1de9 01       		.byte	0x1
 31273 1dea D10D     		.2byte	0xdd1
 31274 1dec C7000000 		.4byte	0xc7
 31275 1df0 02       		.uleb128 0x2
 31276 1df1 91       		.byte	0x91
 31277 1df2 6C       		.sleb128 -20
 31278 1df3 23       		.uleb128 0x23
 31279 1df4 6C060000 		.4byte	.LASF229
 31280 1df8 01       		.byte	0x1
 31281 1df9 D50D     		.2byte	0xdd5
 31282 1dfb 54090000 		.4byte	0x954
 31283 1dff 02       		.uleb128 0x2
 31284 1e00 91       		.byte	0x91
 31285 1e01 60       		.sleb128 -32
 31286 1e02 00       		.byte	0
 31287 1e03 27       		.uleb128 0x27
 31288 1e04 CD0A0000 		.4byte	.LASF322
 31289 1e08 01       		.byte	0x1
 31290 1e09 F50D     		.2byte	0xdf5
 31291 1e0b 00000000 		.4byte	.LFB101
 31292 1e0f EC000000 		.4byte	.LFE101-.LFB101
 31293 1e13 01       		.uleb128 0x1
 31294 1e14 9C       		.byte	0x9c
 31295 1e15 381E0000 		.4byte	0x1e38
 31296 1e19 23       		.uleb128 0x23
 31297 1e1a 6C060000 		.4byte	.LASF229
 31298 1e1e 01       		.byte	0x1
 31299 1e1f F90D     		.2byte	0xdf9
 31300 1e21 44090000 		.4byte	0x944
 31301 1e25 02       		.uleb128 0x2
 31302 1e26 91       		.byte	0x91
 31303 1e27 68       		.sleb128 -24
 31304 1e28 23       		.uleb128 0x23
 31305 1e29 5F120000 		.4byte	.LASF235
 31306 1e2d 01       		.byte	0x1
 31307 1e2e FA0D     		.2byte	0xdfa
 31308 1e30 C7000000 		.4byte	0xc7
 31309 1e34 02       		.uleb128 0x2
 31310 1e35 91       		.byte	0x91
 31311 1e36 66       		.sleb128 -26
 31312 1e37 00       		.byte	0
 31313 1e38 27       		.uleb128 0x27
 31314 1e39 E6070000 		.4byte	.LASF323
 31315 1e3d 01       		.byte	0x1
 31316 1e3e 1B0E     		.2byte	0xe1b
 31317 1e40 00000000 		.4byte	.LFB102
 31318 1e44 64000000 		.4byte	.LFE102-.LFB102
 31319 1e48 01       		.uleb128 0x1
 31320 1e49 9C       		.byte	0x9c
 31321 1e4a 6D1E0000 		.4byte	0x1e6d
 31322 1e4e 23       		.uleb128 0x23
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 672


 31323 1e4f 6C060000 		.4byte	.LASF229
 31324 1e53 01       		.byte	0x1
 31325 1e54 1F0E     		.2byte	0xe1f
 31326 1e56 C10A0000 		.4byte	0xac1
 31327 1e5a 02       		.uleb128 0x2
 31328 1e5b 91       		.byte	0x91
 31329 1e5c 74       		.sleb128 -12
 31330 1e5d 23       		.uleb128 0x23
 31331 1e5e 5F120000 		.4byte	.LASF235
 31332 1e62 01       		.byte	0x1
 31333 1e63 200E     		.2byte	0xe20
 31334 1e65 C7000000 		.4byte	0xc7
 31335 1e69 02       		.uleb128 0x2
 31336 1e6a 91       		.byte	0x91
 31337 1e6b 72       		.sleb128 -14
 31338 1e6c 00       		.byte	0
 31339 1e6d 2F       		.uleb128 0x2f
 31340 1e6e D0070000 		.4byte	.LASF324
 31341 1e72 01       		.byte	0x1
 31342 1e73 350E     		.2byte	0xe35
 31343 1e75 C7000000 		.4byte	0xc7
 31344 1e79 00000000 		.4byte	.LFB103
 31345 1e7d A8000000 		.4byte	.LFE103-.LFB103
 31346 1e81 01       		.uleb128 0x1
 31347 1e82 9C       		.byte	0x9c
 31348 1e83 E21E0000 		.4byte	0x1ee2
 31349 1e87 23       		.uleb128 0x23
 31350 1e88 6C060000 		.4byte	.LASF229
 31351 1e8c 01       		.byte	0x1
 31352 1e8d 370E     		.2byte	0xe37
 31353 1e8f E21E0000 		.4byte	0x1ee2
 31354 1e93 02       		.uleb128 0x2
 31355 1e94 91       		.byte	0x91
 31356 1e95 5C       		.sleb128 -36
 31357 1e96 23       		.uleb128 0x23
 31358 1e97 ED0B0000 		.4byte	.LASF230
 31359 1e9b 01       		.byte	0x1
 31360 1e9c 380E     		.2byte	0xe38
 31361 1e9e 97000000 		.4byte	0x97
 31362 1ea2 02       		.uleb128 0x2
 31363 1ea3 91       		.byte	0x91
 31364 1ea4 74       		.sleb128 -12
 31365 1ea5 23       		.uleb128 0x23
 31366 1ea6 F30F0000 		.4byte	.LASF325
 31367 1eaa 01       		.byte	0x1
 31368 1eab 390E     		.2byte	0xe39
 31369 1ead C7000000 		.4byte	0xc7
 31370 1eb1 02       		.uleb128 0x2
 31371 1eb2 91       		.byte	0x91
 31372 1eb3 76       		.sleb128 -10
 31373 1eb4 23       		.uleb128 0x23
 31374 1eb5 CD020000 		.4byte	.LASF326
 31375 1eb9 01       		.byte	0x1
 31376 1eba 3A0E     		.2byte	0xe3a
 31377 1ebc AF000000 		.4byte	0xaf
 31378 1ec0 02       		.uleb128 0x2
 31379 1ec1 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 673


 31380 1ec2 70       		.sleb128 -16
 31381 1ec3 23       		.uleb128 0x23
 31382 1ec4 D0130000 		.4byte	.LASF327
 31383 1ec8 01       		.byte	0x1
 31384 1ec9 3A0E     		.2byte	0xe3a
 31385 1ecb AF000000 		.4byte	0xaf
 31386 1ecf 02       		.uleb128 0x2
 31387 1ed0 91       		.byte	0x91
 31388 1ed1 6C       		.sleb128 -20
 31389 1ed2 23       		.uleb128 0x23
 31390 1ed3 96040000 		.4byte	.LASF328
 31391 1ed7 01       		.byte	0x1
 31392 1ed8 3B0E     		.2byte	0xe3b
 31393 1eda 97000000 		.4byte	0x97
 31394 1ede 02       		.uleb128 0x2
 31395 1edf 91       		.byte	0x91
 31396 1ee0 75       		.sleb128 -11
 31397 1ee1 00       		.byte	0
 31398 1ee2 09       		.uleb128 0x9
 31399 1ee3 97000000 		.4byte	0x97
 31400 1ee7 F21E0000 		.4byte	0x1ef2
 31401 1eeb 0A       		.uleb128 0xa
 31402 1eec 18010000 		.4byte	0x118
 31403 1ef0 0F       		.byte	0xf
 31404 1ef1 00       		.byte	0
 31405 1ef2 30       		.uleb128 0x30
 31406 1ef3 E4000000 		.4byte	.LASF357
 31407 1ef7 01       		.byte	0x1
 31408 1ef8 580E     		.2byte	0xe58
 31409 1efa 00000000 		.4byte	.LFB104
 31410 1efe 34000000 		.4byte	.LFE104-.LFB104
 31411 1f02 01       		.uleb128 0x1
 31412 1f03 9C       		.byte	0x9c
 31413 1f04 27       		.uleb128 0x27
 31414 1f05 FE030000 		.4byte	.LASF329
 31415 1f09 01       		.byte	0x1
 31416 1f0a 660E     		.2byte	0xe66
 31417 1f0c 00000000 		.4byte	.LFB105
 31418 1f10 20000000 		.4byte	.LFE105-.LFB105
 31419 1f14 01       		.uleb128 0x1
 31420 1f15 9C       		.byte	0x9c
 31421 1f16 2A1F0000 		.4byte	0x1f2a
 31422 1f1a 23       		.uleb128 0x23
 31423 1f1b 6C060000 		.4byte	.LASF229
 31424 1f1f 01       		.byte	0x1
 31425 1f20 680E     		.2byte	0xe68
 31426 1f22 80080000 		.4byte	0x880
 31427 1f26 02       		.uleb128 0x2
 31428 1f27 91       		.byte	0x91
 31429 1f28 74       		.sleb128 -12
 31430 1f29 00       		.byte	0
 31431 1f2a 27       		.uleb128 0x27
 31432 1f2b 5C010000 		.4byte	.LASF330
 31433 1f2f 01       		.byte	0x1
 31434 1f30 740E     		.2byte	0xe74
 31435 1f32 00000000 		.4byte	.LFB106
 31436 1f36 A0000000 		.4byte	.LFE106-.LFB106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 674


 31437 1f3a 01       		.uleb128 0x1
 31438 1f3b 9C       		.byte	0x9c
 31439 1f3c 5F1F0000 		.4byte	0x1f5f
 31440 1f40 23       		.uleb128 0x23
 31441 1f41 6C060000 		.4byte	.LASF229
 31442 1f45 01       		.byte	0x1
 31443 1f46 780E     		.2byte	0xe78
 31444 1f48 44090000 		.4byte	0x944
 31445 1f4c 02       		.uleb128 0x2
 31446 1f4d 91       		.byte	0x91
 31447 1f4e 70       		.sleb128 -16
 31448 1f4f 23       		.uleb128 0x23
 31449 1f50 5F120000 		.4byte	.LASF235
 31450 1f54 01       		.byte	0x1
 31451 1f55 790E     		.2byte	0xe79
 31452 1f57 C7000000 		.4byte	0xc7
 31453 1f5b 02       		.uleb128 0x2
 31454 1f5c 91       		.byte	0x91
 31455 1f5d 6E       		.sleb128 -18
 31456 1f5e 00       		.byte	0
 31457 1f5f 27       		.uleb128 0x27
 31458 1f60 2F110000 		.4byte	.LASF331
 31459 1f64 01       		.byte	0x1
 31460 1f65 8D0E     		.2byte	0xe8d
 31461 1f67 00000000 		.4byte	.LFB107
 31462 1f6b BC010000 		.4byte	.LFE107-.LFB107
 31463 1f6f 01       		.uleb128 0x1
 31464 1f70 9C       		.byte	0x9c
 31465 1f71 C11F0000 		.4byte	0x1fc1
 31466 1f75 23       		.uleb128 0x23
 31467 1f76 5F0C0000 		.4byte	.LASF332
 31468 1f7a 01       		.byte	0x1
 31469 1f7b 900E     		.2byte	0xe90
 31470 1f7d AF000000 		.4byte	0xaf
 31471 1f81 02       		.uleb128 0x2
 31472 1f82 91       		.byte	0x91
 31473 1f83 70       		.sleb128 -16
 31474 1f84 23       		.uleb128 0x23
 31475 1f85 6E0F0000 		.4byte	.LASF333
 31476 1f89 01       		.byte	0x1
 31477 1f8a 910E     		.2byte	0xe91
 31478 1f8c EB000000 		.4byte	0xeb
 31479 1f90 02       		.uleb128 0x2
 31480 1f91 91       		.byte	0x91
 31481 1f92 6C       		.sleb128 -20
 31482 1f93 23       		.uleb128 0x23
 31483 1f94 ED0B0000 		.4byte	.LASF230
 31484 1f98 01       		.byte	0x1
 31485 1f99 920E     		.2byte	0xe92
 31486 1f9b 97000000 		.4byte	0x97
 31487 1f9f 02       		.uleb128 0x2
 31488 1fa0 91       		.byte	0x91
 31489 1fa1 77       		.sleb128 -9
 31490 1fa2 23       		.uleb128 0x23
 31491 1fa3 6C060000 		.4byte	.LASF229
 31492 1fa7 01       		.byte	0x1
 31493 1fa8 930E     		.2byte	0xe93
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 675


 31494 1faa 80080000 		.4byte	0x880
 31495 1fae 02       		.uleb128 0x2
 31496 1faf 91       		.byte	0x91
 31497 1fb0 68       		.sleb128 -24
 31498 1fb1 23       		.uleb128 0x23
 31499 1fb2 2D100000 		.4byte	.LASF291
 31500 1fb6 01       		.byte	0x1
 31501 1fb7 940E     		.2byte	0xe94
 31502 1fb9 97000000 		.4byte	0x97
 31503 1fbd 02       		.uleb128 0x2
 31504 1fbe 91       		.byte	0x91
 31505 1fbf 6B       		.sleb128 -21
 31506 1fc0 00       		.byte	0
 31507 1fc1 27       		.uleb128 0x27
 31508 1fc2 15020000 		.4byte	.LASF334
 31509 1fc6 01       		.byte	0x1
 31510 1fc7 CE0E     		.2byte	0xece
 31511 1fc9 00000000 		.4byte	.LFB108
 31512 1fcd 60000000 		.4byte	.LFE108-.LFB108
 31513 1fd1 01       		.uleb128 0x1
 31514 1fd2 9C       		.byte	0x9c
 31515 1fd3 F61F0000 		.4byte	0x1ff6
 31516 1fd7 23       		.uleb128 0x23
 31517 1fd8 6C060000 		.4byte	.LASF229
 31518 1fdc 01       		.byte	0x1
 31519 1fdd D00E     		.2byte	0xed0
 31520 1fdf 44090000 		.4byte	0x944
 31521 1fe3 02       		.uleb128 0x2
 31522 1fe4 91       		.byte	0x91
 31523 1fe5 70       		.sleb128 -16
 31524 1fe6 23       		.uleb128 0x23
 31525 1fe7 5F120000 		.4byte	.LASF235
 31526 1feb 01       		.byte	0x1
 31527 1fec D10E     		.2byte	0xed1
 31528 1fee C7000000 		.4byte	0xc7
 31529 1ff2 02       		.uleb128 0x2
 31530 1ff3 91       		.byte	0x91
 31531 1ff4 6E       		.sleb128 -18
 31532 1ff5 00       		.byte	0
 31533 1ff6 27       		.uleb128 0x27
 31534 1ff7 98010000 		.4byte	.LASF335
 31535 1ffb 01       		.byte	0x1
 31536 1ffc E40E     		.2byte	0xee4
 31537 1ffe 00000000 		.4byte	.LFB109
 31538 2002 98050000 		.4byte	.LFE109-.LFB109
 31539 2006 01       		.uleb128 0x1
 31540 2007 9C       		.byte	0x9c
 31541 2008 83200000 		.4byte	0x2083
 31542 200c 23       		.uleb128 0x23
 31543 200d 14140000 		.4byte	.LASF336
 31544 2011 01       		.byte	0x1
 31545 2012 E70E     		.2byte	0xee7
 31546 2014 97000000 		.4byte	0x97
 31547 2018 02       		.uleb128 0x2
 31548 2019 91       		.byte	0x91
 31549 201a 6F       		.sleb128 -17
 31550 201b 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 676


 31551 201c 6300     		.ascii	"c\000"
 31552 201e 01       		.byte	0x1
 31553 201f E80E     		.2byte	0xee8
 31554 2021 A3000000 		.4byte	0xa3
 31555 2025 02       		.uleb128 0x2
 31556 2026 91       		.byte	0x91
 31557 2027 6C       		.sleb128 -20
 31558 2028 26       		.uleb128 0x26
 31559 2029 6B00     		.ascii	"k\000"
 31560 202b 01       		.byte	0x1
 31561 202c E90E     		.2byte	0xee9
 31562 202e 97000000 		.4byte	0x97
 31563 2032 02       		.uleb128 0x2
 31564 2033 91       		.byte	0x91
 31565 2034 6B       		.sleb128 -21
 31566 2035 23       		.uleb128 0x23
 31567 2036 3F000000 		.4byte	.LASF337
 31568 203a 01       		.byte	0x1
 31569 203b EA0E     		.2byte	0xeea
 31570 203d A3000000 		.4byte	0xa3
 31571 2041 02       		.uleb128 0x2
 31572 2042 91       		.byte	0x91
 31573 2043 68       		.sleb128 -24
 31574 2044 23       		.uleb128 0x23
 31575 2045 5F120000 		.4byte	.LASF235
 31576 2049 01       		.byte	0x1
 31577 204a EB0E     		.2byte	0xeeb
 31578 204c C7000000 		.4byte	0xc7
 31579 2050 02       		.uleb128 0x2
 31580 2051 91       		.byte	0x91
 31581 2052 66       		.sleb128 -26
 31582 2053 23       		.uleb128 0x23
 31583 2054 9B130000 		.4byte	.LASF234
 31584 2058 01       		.byte	0x1
 31585 2059 EC0E     		.2byte	0xeec
 31586 205b EB000000 		.4byte	0xeb
 31587 205f 02       		.uleb128 0x2
 31588 2060 91       		.byte	0x91
 31589 2061 60       		.sleb128 -32
 31590 2062 23       		.uleb128 0x23
 31591 2063 6C060000 		.4byte	.LASF229
 31592 2067 01       		.byte	0x1
 31593 2068 EF0E     		.2byte	0xeef
 31594 206a 83200000 		.4byte	0x2083
 31595 206e 03       		.uleb128 0x3
 31596 206f 91       		.byte	0x91
 31597 2070 807D     		.sleb128 -384
 31598 2072 23       		.uleb128 0x23
 31599 2073 96090000 		.4byte	.LASF338
 31600 2077 01       		.byte	0x1
 31601 2078 F00E     		.2byte	0xef0
 31602 207a D8120000 		.4byte	0x12d8
 31603 207e 03       		.uleb128 0x3
 31604 207f 91       		.byte	0x91
 31605 2080 E07C     		.sleb128 -416
 31606 2082 00       		.byte	0
 31607 2083 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 677


 31608 2084 97000000 		.4byte	0x97
 31609 2088 94200000 		.4byte	0x2094
 31610 208c 24       		.uleb128 0x24
 31611 208d 18010000 		.4byte	0x118
 31612 2091 5D01     		.2byte	0x15d
 31613 2093 00       		.byte	0
 31614 2094 27       		.uleb128 0x27
 31615 2095 76130000 		.4byte	.LASF339
 31616 2099 01       		.byte	0x1
 31617 209a 530F     		.2byte	0xf53
 31618 209c 00000000 		.4byte	.LFB110
 31619 20a0 8C000000 		.4byte	.LFE110-.LFB110
 31620 20a4 01       		.uleb128 0x1
 31621 20a5 9C       		.byte	0x9c
 31622 20a6 D4200000 		.4byte	0x20d4
 31623 20aa 23       		.uleb128 0x23
 31624 20ab 6C060000 		.4byte	.LASF229
 31625 20af 01       		.byte	0x1
 31626 20b0 560F     		.2byte	0xf56
 31627 20b2 6F0A0000 		.4byte	0xa6f
 31628 20b6 02       		.uleb128 0x2
 31629 20b7 91       		.byte	0x91
 31630 20b8 60       		.sleb128 -32
 31631 20b9 26       		.uleb128 0x26
 31632 20ba 6900     		.ascii	"i\000"
 31633 20bc 01       		.byte	0x1
 31634 20bd 570F     		.2byte	0xf57
 31635 20bf 97000000 		.4byte	0x97
 31636 20c3 02       		.uleb128 0x2
 31637 20c4 91       		.byte	0x91
 31638 20c5 6F       		.sleb128 -17
 31639 20c6 26       		.uleb128 0x26
 31640 20c7 6A00     		.ascii	"j\000"
 31641 20c9 01       		.byte	0x1
 31642 20ca 570F     		.2byte	0xf57
 31643 20cc 97000000 		.4byte	0x97
 31644 20d0 02       		.uleb128 0x2
 31645 20d1 91       		.byte	0x91
 31646 20d2 6E       		.sleb128 -18
 31647 20d3 00       		.byte	0
 31648 20d4 27       		.uleb128 0x27
 31649 20d5 69110000 		.4byte	.LASF340
 31650 20d9 01       		.byte	0x1
 31651 20da 6C0F     		.2byte	0xf6c
 31652 20dc 00000000 		.4byte	.LFB111
 31653 20e0 EC000000 		.4byte	.LFE111-.LFB111
 31654 20e4 01       		.uleb128 0x1
 31655 20e5 9C       		.byte	0x9c
 31656 20e6 32210000 		.4byte	0x2132
 31657 20ea 23       		.uleb128 0x23
 31658 20eb 6C060000 		.4byte	.LASF229
 31659 20ef 01       		.byte	0x1
 31660 20f0 6F0F     		.2byte	0xf6f
 31661 20f2 32210000 		.4byte	0x2132
 31662 20f6 02       		.uleb128 0x2
 31663 20f7 91       		.byte	0x91
 31664 20f8 54       		.sleb128 -44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 678


 31665 20f9 26       		.uleb128 0x26
 31666 20fa 6900     		.ascii	"i\000"
 31667 20fc 01       		.byte	0x1
 31668 20fd 700F     		.2byte	0xf70
 31669 20ff 97000000 		.4byte	0x97
 31670 2103 02       		.uleb128 0x2
 31671 2104 91       		.byte	0x91
 31672 2105 6F       		.sleb128 -17
 31673 2106 26       		.uleb128 0x26
 31674 2107 6A00     		.ascii	"j\000"
 31675 2109 01       		.byte	0x1
 31676 210a 700F     		.2byte	0xf70
 31677 210c 97000000 		.4byte	0x97
 31678 2110 02       		.uleb128 0x2
 31679 2111 91       		.byte	0x91
 31680 2112 6E       		.sleb128 -18
 31681 2113 26       		.uleb128 0x26
 31682 2114 69647800 		.ascii	"idx\000"
 31683 2118 01       		.byte	0x1
 31684 2119 700F     		.2byte	0xf70
 31685 211b 97000000 		.4byte	0x97
 31686 211f 02       		.uleb128 0x2
 31687 2120 91       		.byte	0x91
 31688 2121 6D       		.sleb128 -19
 31689 2122 23       		.uleb128 0x23
 31690 2123 350D0000 		.4byte	.LASF236
 31691 2127 01       		.byte	0x1
 31692 2128 710F     		.2byte	0xf71
 31693 212a A3000000 		.4byte	0xa3
 31694 212e 02       		.uleb128 0x2
 31695 212f 91       		.byte	0x91
 31696 2130 52       		.sleb128 -46
 31697 2131 00       		.byte	0
 31698 2132 09       		.uleb128 0x9
 31699 2133 97000000 		.4byte	0x97
 31700 2137 42210000 		.4byte	0x2142
 31701 213b 0A       		.uleb128 0xa
 31702 213c 18010000 		.4byte	0x118
 31703 2140 15       		.byte	0x15
 31704 2141 00       		.byte	0
 31705 2142 27       		.uleb128 0x27
 31706 2143 97030000 		.4byte	.LASF341
 31707 2147 01       		.byte	0x1
 31708 2148 8A0F     		.2byte	0xf8a
 31709 214a 00000000 		.4byte	.LFB112
 31710 214e 5C000000 		.4byte	.LFE112-.LFB112
 31711 2152 01       		.uleb128 0x1
 31712 2153 9C       		.byte	0x9c
 31713 2154 75210000 		.4byte	0x2175
 31714 2158 23       		.uleb128 0x23
 31715 2159 6C060000 		.4byte	.LASF229
 31716 215d 01       		.byte	0x1
 31717 215e 8D0F     		.2byte	0xf8d
 31718 2160 080C0000 		.4byte	0xc08
 31719 2164 02       		.uleb128 0x2
 31720 2165 91       		.byte	0x91
 31721 2166 68       		.sleb128 -24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 679


 31722 2167 26       		.uleb128 0x26
 31723 2168 6900     		.ascii	"i\000"
 31724 216a 01       		.byte	0x1
 31725 216b 8E0F     		.2byte	0xf8e
 31726 216d 97000000 		.4byte	0x97
 31727 2171 02       		.uleb128 0x2
 31728 2172 91       		.byte	0x91
 31729 2173 77       		.sleb128 -9
 31730 2174 00       		.byte	0
 31731 2175 27       		.uleb128 0x27
 31732 2176 DB030000 		.4byte	.LASF342
 31733 217a 01       		.byte	0x1
 31734 217b A10F     		.2byte	0xfa1
 31735 217d 00000000 		.4byte	.LFB113
 31736 2181 C0000000 		.4byte	.LFE113-.LFB113
 31737 2185 01       		.uleb128 0x1
 31738 2186 9C       		.byte	0x9c
 31739 2187 C6210000 		.4byte	0x21c6
 31740 218b 23       		.uleb128 0x23
 31741 218c 6C060000 		.4byte	.LASF229
 31742 2190 01       		.byte	0x1
 31743 2191 A40F     		.2byte	0xfa4
 31744 2193 C6210000 		.4byte	0x21c6
 31745 2197 02       		.uleb128 0x2
 31746 2198 91       		.byte	0x91
 31747 2199 54       		.sleb128 -44
 31748 219a 26       		.uleb128 0x26
 31749 219b 6900     		.ascii	"i\000"
 31750 219d 01       		.byte	0x1
 31751 219e A50F     		.2byte	0xfa5
 31752 21a0 97000000 		.4byte	0x97
 31753 21a4 02       		.uleb128 0x2
 31754 21a5 91       		.byte	0x91
 31755 21a6 6F       		.sleb128 -17
 31756 21a7 26       		.uleb128 0x26
 31757 21a8 69647800 		.ascii	"idx\000"
 31758 21ac 01       		.byte	0x1
 31759 21ad A50F     		.2byte	0xfa5
 31760 21af 97000000 		.4byte	0x97
 31761 21b3 02       		.uleb128 0x2
 31762 21b4 91       		.byte	0x91
 31763 21b5 6E       		.sleb128 -18
 31764 21b6 23       		.uleb128 0x23
 31765 21b7 5F120000 		.4byte	.LASF235
 31766 21bb 01       		.byte	0x1
 31767 21bc A60F     		.2byte	0xfa6
 31768 21be C7000000 		.4byte	0xc7
 31769 21c2 02       		.uleb128 0x2
 31770 21c3 91       		.byte	0x91
 31771 21c4 52       		.sleb128 -46
 31772 21c5 00       		.byte	0
 31773 21c6 09       		.uleb128 0x9
 31774 21c7 97000000 		.4byte	0x97
 31775 21cb D6210000 		.4byte	0x21d6
 31776 21cf 0A       		.uleb128 0xa
 31777 21d0 18010000 		.4byte	0x118
 31778 21d4 19       		.byte	0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 680


 31779 21d5 00       		.byte	0
 31780 21d6 22       		.uleb128 0x22
 31781 21d7 41030000 		.4byte	.LASF343
 31782 21db 01       		.byte	0x1
 31783 21dc BC0F     		.2byte	0xfbc
 31784 21de 00000000 		.4byte	.LFB114
 31785 21e2 54010000 		.4byte	.LFE114-.LFB114
 31786 21e6 01       		.uleb128 0x1
 31787 21e7 9C       		.byte	0x9c
 31788 21e8 2B220000 		.4byte	0x222b
 31789 21ec 25       		.uleb128 0x25
 31790 21ed B7070000 		.4byte	.LASF344
 31791 21f1 01       		.byte	0x1
 31792 21f2 BC0F     		.2byte	0xfbc
 31793 21f4 A3000000 		.4byte	0xa3
 31794 21f8 04       		.uleb128 0x4
 31795 21f9 91       		.byte	0x91
 31796 21fa 9EE37E   		.sleb128 -20066
 31797 21fd 26       		.uleb128 0x26
 31798 21fe 6900     		.ascii	"i\000"
 31799 2200 01       		.byte	0x1
 31800 2201 BE0F     		.2byte	0xfbe
 31801 2203 97000000 		.4byte	0x97
 31802 2207 02       		.uleb128 0x2
 31803 2208 91       		.byte	0x91
 31804 2209 77       		.sleb128 -9
 31805 220a 23       		.uleb128 0x23
 31806 220b 7B040000 		.4byte	.LASF345
 31807 220f 01       		.byte	0x1
 31808 2210 BF0F     		.2byte	0xfbf
 31809 2212 84100000 		.4byte	0x1084
 31810 2216 02       		.uleb128 0x2
 31811 2217 91       		.byte	0x91
 31812 2218 44       		.sleb128 -60
 31813 2219 23       		.uleb128 0x23
 31814 221a E6080000 		.4byte	.LASF218
 31815 221e 01       		.byte	0x1
 31816 221f C00F     		.2byte	0xfc0
 31817 2221 AC0E0000 		.4byte	0xeac
 31818 2225 04       		.uleb128 0x4
 31819 2226 91       		.byte	0x91
 31820 2227 A4E37E   		.sleb128 -20060
 31821 222a 00       		.byte	0
 31822 222b 28       		.uleb128 0x28
 31823 222c F5000000 		.4byte	.LASF346
 31824 2230 01       		.byte	0x1
 31825 2231 DD0F     		.2byte	0xfdd
 31826 2233 00000000 		.4byte	.LFB115
 31827 2237 12000000 		.4byte	.LFE115-.LFB115
 31828 223b 01       		.uleb128 0x1
 31829 223c 9C       		.byte	0x9c
 31830 223d 51220000 		.4byte	0x2251
 31831 2241 25       		.uleb128 0x25
 31832 2242 0F070000 		.4byte	.LASF347
 31833 2246 01       		.byte	0x1
 31834 2247 DD0F     		.2byte	0xfdd
 31835 2249 73000000 		.4byte	0x73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 681


 31836 224d 02       		.uleb128 0x2
 31837 224e 91       		.byte	0x91
 31838 224f 74       		.sleb128 -12
 31839 2250 00       		.byte	0
 31840 2251 31       		.uleb128 0x31
 31841 2252 B20C0000 		.4byte	.LASF348
 31842 2256 01       		.byte	0x1
 31843 2257 2B10     		.2byte	0x102b
 31844 2259 97000000 		.4byte	0x97
 31845 225d 00000000 		.4byte	.LFB116
 31846 2261 64010000 		.4byte	.LFE116-.LFB116
 31847 2265 01       		.uleb128 0x1
 31848 2266 9C       		.byte	0x9c
 31849 2267 CC220000 		.4byte	0x22cc
 31850 226b 23       		.uleb128 0x23
 31851 226c 8B0E0000 		.4byte	.LASF349
 31852 2270 01       		.byte	0x1
 31853 2271 2D10     		.2byte	0x102d
 31854 2273 97000000 		.4byte	0x97
 31855 2277 05       		.uleb128 0x5
 31856 2278 03       		.byte	0x3
 31857 2279 0C000000 		.4byte	fsm_state.11531
 31858 227d 26       		.uleb128 0x26
 31859 227e 636E7400 		.ascii	"cnt\000"
 31860 2282 01       		.byte	0x1
 31861 2283 2E10     		.2byte	0x102e
 31862 2285 D3000000 		.4byte	0xd3
 31863 2289 05       		.uleb128 0x5
 31864 228a 03       		.byte	0x3
 31865 228b 10000000 		.4byte	cnt.11532
 31866 228f 23       		.uleb128 0x23
 31867 2290 68040000 		.4byte	.LASF350
 31868 2294 01       		.byte	0x1
 31869 2295 2F10     		.2byte	0x102f
 31870 2297 D3000000 		.4byte	0xd3
 31871 229b 02       		.uleb128 0x2
 31872 229c 91       		.byte	0x91
 31873 229d 74       		.sleb128 -12
 31874 229e 23       		.uleb128 0x23
 31875 229f D40B0000 		.4byte	.LASF351
 31876 22a3 01       		.byte	0x1
 31877 22a4 2F10     		.2byte	0x102f
 31878 22a6 D3000000 		.4byte	0xd3
 31879 22aa 02       		.uleb128 0x2
 31880 22ab 91       		.byte	0x91
 31881 22ac 70       		.sleb128 -16
 31882 22ad 23       		.uleb128 0x23
 31883 22ae 8A000000 		.4byte	.LASF352
 31884 22b2 01       		.byte	0x1
 31885 22b3 3010     		.2byte	0x1030
 31886 22b5 D3000000 		.4byte	0xd3
 31887 22b9 02       		.uleb128 0x2
 31888 22ba 91       		.byte	0x91
 31889 22bb 6C       		.sleb128 -20
 31890 22bc 23       		.uleb128 0x23
 31891 22bd 96000000 		.4byte	.LASF353
 31892 22c1 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 682


 31893 22c2 3010     		.2byte	0x1030
 31894 22c4 D3000000 		.4byte	0xd3
 31895 22c8 02       		.uleb128 0x2
 31896 22c9 91       		.byte	0x91
 31897 22ca 68       		.sleb128 -24
 31898 22cb 00       		.byte	0
 31899 22cc 28       		.uleb128 0x28
 31900 22cd 1E080000 		.4byte	.LASF354
 31901 22d1 01       		.byte	0x1
 31902 22d2 7D10     		.2byte	0x107d
 31903 22d4 00000000 		.4byte	.LFB117
 31904 22d8 12000000 		.4byte	.LFE117-.LFB117
 31905 22dc 01       		.uleb128 0x1
 31906 22dd 9C       		.byte	0x9c
 31907 22de F2220000 		.4byte	0x22f2
 31908 22e2 25       		.uleb128 0x25
 31909 22e3 0F070000 		.4byte	.LASF347
 31910 22e7 01       		.byte	0x1
 31911 22e8 7D10     		.2byte	0x107d
 31912 22ea 73000000 		.4byte	0x73
 31913 22ee 02       		.uleb128 0x2
 31914 22ef 91       		.byte	0x91
 31915 22f0 74       		.sleb128 -12
 31916 22f1 00       		.byte	0
 31917 22f2 28       		.uleb128 0x28
 31918 22f3 1F0E0000 		.4byte	.LASF355
 31919 22f7 01       		.byte	0x1
 31920 22f8 C910     		.2byte	0x10c9
 31921 22fa 00000000 		.4byte	.LFB118
 31922 22fe 1A000000 		.4byte	.LFE118-.LFB118
 31923 2302 01       		.uleb128 0x1
 31924 2303 9C       		.byte	0x9c
 31925 2304 27230000 		.4byte	0x2327
 31926 2308 25       		.uleb128 0x25
 31927 2309 1F030000 		.4byte	.LASF356
 31928 230d 01       		.byte	0x1
 31929 230e C910     		.2byte	0x10c9
 31930 2310 97000000 		.4byte	0x97
 31931 2314 02       		.uleb128 0x2
 31932 2315 91       		.byte	0x91
 31933 2316 77       		.sleb128 -9
 31934 2317 25       		.uleb128 0x25
 31935 2318 5A0B0000 		.4byte	.LASF186
 31936 231c 01       		.byte	0x1
 31937 231d C910     		.2byte	0x10c9
 31938 231f 97000000 		.4byte	0x97
 31939 2323 02       		.uleb128 0x2
 31940 2324 91       		.byte	0x91
 31941 2325 76       		.sleb128 -10
 31942 2326 00       		.byte	0
 31943 2327 32       		.uleb128 0x32
 31944 2328 A2000000 		.4byte	.LASF358
 31945 232c 01       		.byte	0x1
 31946 232d F310     		.2byte	0x10f3
 31947 232f 00000000 		.4byte	.LFB119
 31948 2333 0C000000 		.4byte	.LFE119-.LFB119
 31949 2337 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 683


 31950 2338 9C       		.byte	0x9c
 31951 2339 32       		.uleb128 0x32
 31952 233a 9B060000 		.4byte	.LASF359
 31953 233e 01       		.byte	0x1
 31954 233f 0911     		.2byte	0x1109
 31955 2341 00000000 		.4byte	.LFB120
 31956 2345 0C000000 		.4byte	.LFE120-.LFB120
 31957 2349 01       		.uleb128 0x1
 31958 234a 9C       		.byte	0x9c
 31959 234b 33       		.uleb128 0x33
 31960 234c A8120000 		.4byte	.LASF360
 31961 2350 09       		.byte	0x9
 31962 2351 1207     		.2byte	0x712
 31963 2353 57230000 		.4byte	0x2357
 31964 2357 06       		.uleb128 0x6
 31965 2358 81000000 		.4byte	0x81
 31966 235c 09       		.uleb128 0x9
 31967 235d 22030000 		.4byte	0x322
 31968 2361 6C230000 		.4byte	0x236c
 31969 2365 0A       		.uleb128 0xa
 31970 2366 18010000 		.4byte	0x118
 31971 236a 01       		.byte	0x1
 31972 236b 00       		.byte	0
 31973 236c 33       		.uleb128 0x33
 31974 236d 6E140000 		.4byte	.LASF361
 31975 2371 08       		.byte	0x8
 31976 2372 1B02     		.2byte	0x21b
 31977 2374 5C230000 		.4byte	0x235c
 31978 2378 33       		.uleb128 0x33
 31979 2379 E0040000 		.4byte	.LASF362
 31980 237d 08       		.byte	0x8
 31981 237e 1B02     		.2byte	0x21b
 31982 2380 5C230000 		.4byte	0x235c
 31983 2384 33       		.uleb128 0x33
 31984 2385 D80D0000 		.4byte	.LASF363
 31985 2389 08       		.byte	0x8
 31986 238a 1B02     		.2byte	0x21b
 31987 238c 5C230000 		.4byte	0x235c
 31988 2390 09       		.uleb128 0x9
 31989 2391 5F030000 		.4byte	0x35f
 31990 2395 A0230000 		.4byte	0x23a0
 31991 2399 0A       		.uleb128 0xa
 31992 239a 18010000 		.4byte	0x118
 31993 239e 01       		.byte	0x1
 31994 239f 00       		.byte	0
 31995 23a0 33       		.uleb128 0x33
 31996 23a1 1F070000 		.4byte	.LASF364
 31997 23a5 08       		.byte	0x8
 31998 23a6 1C02     		.2byte	0x21c
 31999 23a8 90230000 		.4byte	0x2390
 32000 23ac 33       		.uleb128 0x33
 32001 23ad C1140000 		.4byte	.LASF365
 32002 23b1 08       		.byte	0x8
 32003 23b2 1C02     		.2byte	0x21c
 32004 23b4 90230000 		.4byte	0x2390
 32005 23b8 33       		.uleb128 0x33
 32006 23b9 38140000 		.4byte	.LASF366
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 684


 32007 23bd 08       		.byte	0x8
 32008 23be 1D02     		.2byte	0x21d
 32009 23c0 E0030000 		.4byte	0x3e0
 32010 23c4 33       		.uleb128 0x33
 32011 23c5 5B110000 		.4byte	.LASF367
 32012 23c9 08       		.byte	0x8
 32013 23ca 1D02     		.2byte	0x21d
 32014 23cc E0030000 		.4byte	0x3e0
 32015 23d0 33       		.uleb128 0x33
 32016 23d1 11110000 		.4byte	.LASF368
 32017 23d5 08       		.byte	0x8
 32018 23d6 1E02     		.2byte	0x21e
 32019 23d8 31040000 		.4byte	0x431
 32020 23dc 33       		.uleb128 0x33
 32021 23dd BD000000 		.4byte	.LASF369
 32022 23e1 08       		.byte	0x8
 32023 23e2 1F02     		.2byte	0x21f
 32024 23e4 4A040000 		.4byte	0x44a
 32025 23e8 33       		.uleb128 0x33
 32026 23e9 40110000 		.4byte	.LASF370
 32027 23ed 08       		.byte	0x8
 32028 23ee 2002     		.2byte	0x220
 32029 23f0 230B0000 		.4byte	0xb23
 32030 23f4 33       		.uleb128 0x33
 32031 23f5 B60B0000 		.4byte	.LASF371
 32032 23f9 08       		.byte	0x8
 32033 23fa 2002     		.2byte	0x220
 32034 23fc 230B0000 		.4byte	0xb23
 32035 2400 33       		.uleb128 0x33
 32036 2401 930A0000 		.4byte	.LASF372
 32037 2405 08       		.byte	0x8
 32038 2406 2102     		.2byte	0x221
 32039 2408 D40C0000 		.4byte	0xcd4
 32040 240c 33       		.uleb128 0x33
 32041 240d FC020000 		.4byte	.LASF373
 32042 2411 08       		.byte	0x8
 32043 2412 2602     		.2byte	0x226
 32044 2414 A3000000 		.4byte	0xa3
 32045 2418 33       		.uleb128 0x33
 32046 2419 1E0F0000 		.4byte	.LASF374
 32047 241d 08       		.byte	0x8
 32048 241e 2702     		.2byte	0x227
 32049 2420 A3000000 		.4byte	0xa3
 32050 2424 33       		.uleb128 0x33
 32051 2425 500F0000 		.4byte	.LASF375
 32052 2429 08       		.byte	0x8
 32053 242a 2A02     		.2byte	0x22a
 32054 242c 11040000 		.4byte	0x411
 32055 2430 33       		.uleb128 0x33
 32056 2431 3F130000 		.4byte	.LASF376
 32057 2435 08       		.byte	0x8
 32058 2436 2B02     		.2byte	0x22b
 32059 2438 80080000 		.4byte	0x880
 32060 243c 33       		.uleb128 0x33
 32061 243d C8120000 		.4byte	.LASF377
 32062 2441 08       		.byte	0x8
 32063 2442 2E02     		.2byte	0x22e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 685


 32064 2444 11040000 		.4byte	0x411
 32065 2448 33       		.uleb128 0x33
 32066 2449 630B0000 		.4byte	.LASF378
 32067 244d 08       		.byte	0x8
 32068 244e 3702     		.2byte	0x237
 32069 2450 97000000 		.4byte	0x97
 32070 2454 33       		.uleb128 0x33
 32071 2455 A8040000 		.4byte	.LASF379
 32072 2459 08       		.byte	0x8
 32073 245a 3902     		.2byte	0x239
 32074 245c 97000000 		.4byte	0x97
 32075 2460 33       		.uleb128 0x33
 32076 2461 E80A0000 		.4byte	.LASF380
 32077 2465 08       		.byte	0x8
 32078 2466 4002     		.2byte	0x240
 32079 2468 97000000 		.4byte	0x97
 32080 246c 33       		.uleb128 0x33
 32081 246d 0E080000 		.4byte	.LASF381
 32082 2471 08       		.byte	0x8
 32083 2472 4102     		.2byte	0x241
 32084 2474 97000000 		.4byte	0x97
 32085 2478 09       		.uleb128 0x9
 32086 2479 C7000000 		.4byte	0xc7
 32087 247d 88240000 		.4byte	0x2488
 32088 2481 0A       		.uleb128 0xa
 32089 2482 18010000 		.4byte	0x118
 32090 2486 0B       		.byte	0xb
 32091 2487 00       		.byte	0
 32092 2488 33       		.uleb128 0x33
 32093 2489 A0040000 		.4byte	.LASF382
 32094 248d 08       		.byte	0x8
 32095 248e 4402     		.2byte	0x244
 32096 2490 78240000 		.4byte	0x2478
 32097 2494 33       		.uleb128 0x33
 32098 2495 7A140000 		.4byte	.LASF383
 32099 2499 08       		.byte	0x8
 32100 249a 4502     		.2byte	0x245
 32101 249c 97000000 		.4byte	0x97
 32102 24a0 09       		.uleb128 0x9
 32103 24a1 AF000000 		.4byte	0xaf
 32104 24a5 B6240000 		.4byte	0x24b6
 32105 24a9 0A       		.uleb128 0xa
 32106 24aa 18010000 		.4byte	0x118
 32107 24ae 01       		.byte	0x1
 32108 24af 0A       		.uleb128 0xa
 32109 24b0 18010000 		.4byte	0x118
 32110 24b4 04       		.byte	0x4
 32111 24b5 00       		.byte	0
 32112 24b6 33       		.uleb128 0x33
 32113 24b7 4D070000 		.4byte	.LASF384
 32114 24bb 08       		.byte	0x8
 32115 24bc 4B02     		.2byte	0x24b
 32116 24be A0240000 		.4byte	0x24a0
 32117 24c2 33       		.uleb128 0x33
 32118 24c3 3C100000 		.4byte	.LASF385
 32119 24c7 08       		.byte	0x8
 32120 24c8 4C02     		.2byte	0x24c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 686


 32121 24ca 80080000 		.4byte	0x880
 32122 24ce 09       		.uleb128 0x9
 32123 24cf A3000000 		.4byte	0xa3
 32124 24d3 E4240000 		.4byte	0x24e4
 32125 24d7 0A       		.uleb128 0xa
 32126 24d8 18010000 		.4byte	0x118
 32127 24dc 01       		.byte	0x1
 32128 24dd 0A       		.uleb128 0xa
 32129 24de 18010000 		.4byte	0x118
 32130 24e2 04       		.byte	0x4
 32131 24e3 00       		.byte	0
 32132 24e4 33       		.uleb128 0x33
 32133 24e5 68130000 		.4byte	.LASF386
 32134 24e9 08       		.byte	0x8
 32135 24ea 4D02     		.2byte	0x24d
 32136 24ec CE240000 		.4byte	0x24ce
 32137 24f0 09       		.uleb128 0x9
 32138 24f1 97000000 		.4byte	0x97
 32139 24f5 06250000 		.4byte	0x2506
 32140 24f9 0A       		.uleb128 0xa
 32141 24fa 18010000 		.4byte	0x118
 32142 24fe 01       		.byte	0x1
 32143 24ff 0A       		.uleb128 0xa
 32144 2500 18010000 		.4byte	0x118
 32145 2504 04       		.byte	0x4
 32146 2505 00       		.byte	0
 32147 2506 33       		.uleb128 0x33
 32148 2507 26070000 		.4byte	.LASF387
 32149 250b 08       		.byte	0x8
 32150 250c 4E02     		.2byte	0x24e
 32151 250e F0240000 		.4byte	0x24f0
 32152 2512 33       		.uleb128 0x33
 32153 2513 82060000 		.4byte	.LASF388
 32154 2517 08       		.byte	0x8
 32155 2518 5402     		.2byte	0x254
 32156 251a 1C030000 		.4byte	0x31c
 32157 251e 33       		.uleb128 0x33
 32158 251f D60F0000 		.4byte	.LASF389
 32159 2523 08       		.byte	0x8
 32160 2524 5502     		.2byte	0x255
 32161 2526 74160000 		.4byte	0x1674
 32162 252a 33       		.uleb128 0x33
 32163 252b EB030000 		.4byte	.LASF390
 32164 252f 08       		.byte	0x8
 32165 2530 5602     		.2byte	0x256
 32166 2532 74160000 		.4byte	0x1674
 32167 2536 33       		.uleb128 0x33
 32168 2537 E6110000 		.4byte	.LASF391
 32169 253b 08       		.byte	0x8
 32170 253c 5B02     		.2byte	0x25b
 32171 253e 97000000 		.4byte	0x97
 32172 2542 33       		.uleb128 0x33
 32173 2543 A5130000 		.4byte	.LASF392
 32174 2547 08       		.byte	0x8
 32175 2548 5C02     		.2byte	0x25c
 32176 254a F1070000 		.4byte	0x7f1
 32177 254e 33       		.uleb128 0x33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 687


 32178 254f 99120000 		.4byte	.LASF393
 32179 2553 08       		.byte	0x8
 32180 2554 5D02     		.2byte	0x25d
 32181 2556 73000000 		.4byte	0x73
 32182 255a 09       		.uleb128 0x9
 32183 255b 73000000 		.4byte	0x73
 32184 255f 6A250000 		.4byte	0x256a
 32185 2563 0A       		.uleb128 0xa
 32186 2564 18010000 		.4byte	0x118
 32187 2568 04       		.byte	0x4
 32188 2569 00       		.byte	0
 32189 256a 33       		.uleb128 0x33
 32190 256b 080D0000 		.4byte	.LASF394
 32191 256f 08       		.byte	0x8
 32192 2570 5E02     		.2byte	0x25e
 32193 2572 5A250000 		.4byte	0x255a
 32194 2576 09       		.uleb128 0x9
 32195 2577 580C0000 		.4byte	0xc58
 32196 257b 86250000 		.4byte	0x2586
 32197 257f 0A       		.uleb128 0xa
 32198 2580 18010000 		.4byte	0x118
 32199 2584 04       		.byte	0x4
 32200 2585 00       		.byte	0
 32201 2586 33       		.uleb128 0x33
 32202 2587 C2050000 		.4byte	.LASF395
 32203 258b 08       		.byte	0x8
 32204 258c 5F02     		.2byte	0x25f
 32205 258e 76250000 		.4byte	0x2576
 32206 2592 09       		.uleb128 0x9
 32207 2593 97000000 		.4byte	0x97
 32208 2597 A8250000 		.4byte	0x25a8
 32209 259b 0A       		.uleb128 0xa
 32210 259c 18010000 		.4byte	0x118
 32211 25a0 04       		.byte	0x4
 32212 25a1 0A       		.uleb128 0xa
 32213 25a2 18010000 		.4byte	0x118
 32214 25a6 02       		.byte	0x2
 32215 25a7 00       		.byte	0
 32216 25a8 33       		.uleb128 0x33
 32217 25a9 200C0000 		.4byte	.LASF396
 32218 25ad 08       		.byte	0x8
 32219 25ae 6302     		.2byte	0x263
 32220 25b0 92250000 		.4byte	0x2592
 32221 25b4 33       		.uleb128 0x33
 32222 25b5 A0140000 		.4byte	.LASF397
 32223 25b9 08       		.byte	0x8
 32224 25ba 6802     		.2byte	0x268
 32225 25bc 97000000 		.4byte	0x97
 32226 25c0 09       		.uleb128 0x9
 32227 25c1 A3000000 		.4byte	0xa3
 32228 25c5 D7250000 		.4byte	0x25d7
 32229 25c9 24       		.uleb128 0x24
 32230 25ca 18010000 		.4byte	0x118
 32231 25ce 5702     		.2byte	0x257
 32232 25d0 0A       		.uleb128 0xa
 32233 25d1 18010000 		.4byte	0x118
 32234 25d5 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 688


 32235 25d6 00       		.byte	0
 32236 25d7 33       		.uleb128 0x33
 32237 25d8 69120000 		.4byte	.LASF398
 32238 25dc 08       		.byte	0x8
 32239 25dd 6B02     		.2byte	0x26b
 32240 25df C0250000 		.4byte	0x25c0
 32241 25e3 33       		.uleb128 0x33
 32242 25e4 450B0000 		.4byte	.LASF399
 32243 25e8 08       		.byte	0x8
 32244 25e9 6C02     		.2byte	0x26c
 32245 25eb AF000000 		.4byte	0xaf
 32246 25ef 34       		.uleb128 0x34
 32247 25f0 75120000 		.4byte	.LASF400
 32248 25f4 01       		.byte	0x1
 32249 25f5 33       		.byte	0x33
 32250 25f6 00260000 		.4byte	0x2600
 32251 25fa 05       		.uleb128 0x5
 32252 25fb 03       		.byte	0x3
 32253 25fc 00000000 		.4byte	EEPROM_ADDR
 32254 2600 07       		.uleb128 0x7
 32255 2601 04       		.byte	0x4
 32256 2602 00010000 		.4byte	0x100
 32257 2606 00       		.byte	0
 32258              		.section	.debug_abbrev,"",%progbits
 32259              	.Ldebug_abbrev0:
 32260 0000 01       		.uleb128 0x1
 32261 0001 11       		.uleb128 0x11
 32262 0002 01       		.byte	0x1
 32263 0003 25       		.uleb128 0x25
 32264 0004 0E       		.uleb128 0xe
 32265 0005 13       		.uleb128 0x13
 32266 0006 0B       		.uleb128 0xb
 32267 0007 03       		.uleb128 0x3
 32268 0008 0E       		.uleb128 0xe
 32269 0009 1B       		.uleb128 0x1b
 32270 000a 0E       		.uleb128 0xe
 32271 000b 55       		.uleb128 0x55
 32272 000c 17       		.uleb128 0x17
 32273 000d 11       		.uleb128 0x11
 32274 000e 01       		.uleb128 0x1
 32275 000f 10       		.uleb128 0x10
 32276 0010 17       		.uleb128 0x17
 32277 0011 00       		.byte	0
 32278 0012 00       		.byte	0
 32279 0013 02       		.uleb128 0x2
 32280 0014 24       		.uleb128 0x24
 32281 0015 00       		.byte	0
 32282 0016 0B       		.uleb128 0xb
 32283 0017 0B       		.uleb128 0xb
 32284 0018 3E       		.uleb128 0x3e
 32285 0019 0B       		.uleb128 0xb
 32286 001a 03       		.uleb128 0x3
 32287 001b 0E       		.uleb128 0xe
 32288 001c 00       		.byte	0
 32289 001d 00       		.byte	0
 32290 001e 03       		.uleb128 0x3
 32291 001f 16       		.uleb128 0x16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 689


 32292 0020 00       		.byte	0
 32293 0021 03       		.uleb128 0x3
 32294 0022 0E       		.uleb128 0xe
 32295 0023 3A       		.uleb128 0x3a
 32296 0024 0B       		.uleb128 0xb
 32297 0025 3B       		.uleb128 0x3b
 32298 0026 0B       		.uleb128 0xb
 32299 0027 49       		.uleb128 0x49
 32300 0028 13       		.uleb128 0x13
 32301 0029 00       		.byte	0
 32302 002a 00       		.byte	0
 32303 002b 04       		.uleb128 0x4
 32304 002c 24       		.uleb128 0x24
 32305 002d 00       		.byte	0
 32306 002e 0B       		.uleb128 0xb
 32307 002f 0B       		.uleb128 0xb
 32308 0030 3E       		.uleb128 0x3e
 32309 0031 0B       		.uleb128 0xb
 32310 0032 03       		.uleb128 0x3
 32311 0033 08       		.uleb128 0x8
 32312 0034 00       		.byte	0
 32313 0035 00       		.byte	0
 32314 0036 05       		.uleb128 0x5
 32315 0037 16       		.uleb128 0x16
 32316 0038 00       		.byte	0
 32317 0039 03       		.uleb128 0x3
 32318 003a 0E       		.uleb128 0xe
 32319 003b 3A       		.uleb128 0x3a
 32320 003c 0B       		.uleb128 0xb
 32321 003d 3B       		.uleb128 0x3b
 32322 003e 05       		.uleb128 0x5
 32323 003f 49       		.uleb128 0x49
 32324 0040 13       		.uleb128 0x13
 32325 0041 00       		.byte	0
 32326 0042 00       		.byte	0
 32327 0043 06       		.uleb128 0x6
 32328 0044 35       		.uleb128 0x35
 32329 0045 00       		.byte	0
 32330 0046 49       		.uleb128 0x49
 32331 0047 13       		.uleb128 0x13
 32332 0048 00       		.byte	0
 32333 0049 00       		.byte	0
 32334 004a 07       		.uleb128 0x7
 32335 004b 0F       		.uleb128 0xf
 32336 004c 00       		.byte	0
 32337 004d 0B       		.uleb128 0xb
 32338 004e 0B       		.uleb128 0xb
 32339 004f 49       		.uleb128 0x49
 32340 0050 13       		.uleb128 0x13
 32341 0051 00       		.byte	0
 32342 0052 00       		.byte	0
 32343 0053 08       		.uleb128 0x8
 32344 0054 26       		.uleb128 0x26
 32345 0055 00       		.byte	0
 32346 0056 49       		.uleb128 0x49
 32347 0057 13       		.uleb128 0x13
 32348 0058 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 690


 32349 0059 00       		.byte	0
 32350 005a 09       		.uleb128 0x9
 32351 005b 01       		.uleb128 0x1
 32352 005c 01       		.byte	0x1
 32353 005d 49       		.uleb128 0x49
 32354 005e 13       		.uleb128 0x13
 32355 005f 01       		.uleb128 0x1
 32356 0060 13       		.uleb128 0x13
 32357 0061 00       		.byte	0
 32358 0062 00       		.byte	0
 32359 0063 0A       		.uleb128 0xa
 32360 0064 21       		.uleb128 0x21
 32361 0065 00       		.byte	0
 32362 0066 49       		.uleb128 0x49
 32363 0067 13       		.uleb128 0x13
 32364 0068 2F       		.uleb128 0x2f
 32365 0069 0B       		.uleb128 0xb
 32366 006a 00       		.byte	0
 32367 006b 00       		.byte	0
 32368 006c 0B       		.uleb128 0xb
 32369 006d 04       		.uleb128 0x4
 32370 006e 01       		.byte	0x1
 32371 006f 03       		.uleb128 0x3
 32372 0070 0E       		.uleb128 0xe
 32373 0071 0B       		.uleb128 0xb
 32374 0072 0B       		.uleb128 0xb
 32375 0073 49       		.uleb128 0x49
 32376 0074 13       		.uleb128 0x13
 32377 0075 3A       		.uleb128 0x3a
 32378 0076 0B       		.uleb128 0xb
 32379 0077 3B       		.uleb128 0x3b
 32380 0078 0B       		.uleb128 0xb
 32381 0079 01       		.uleb128 0x1
 32382 007a 13       		.uleb128 0x13
 32383 007b 00       		.byte	0
 32384 007c 00       		.byte	0
 32385 007d 0C       		.uleb128 0xc
 32386 007e 28       		.uleb128 0x28
 32387 007f 00       		.byte	0
 32388 0080 03       		.uleb128 0x3
 32389 0081 0E       		.uleb128 0xe
 32390 0082 1C       		.uleb128 0x1c
 32391 0083 0B       		.uleb128 0xb
 32392 0084 00       		.byte	0
 32393 0085 00       		.byte	0
 32394 0086 0D       		.uleb128 0xd
 32395 0087 13       		.uleb128 0x13
 32396 0088 00       		.byte	0
 32397 0089 03       		.uleb128 0x3
 32398 008a 0E       		.uleb128 0xe
 32399 008b 3C       		.uleb128 0x3c
 32400 008c 19       		.uleb128 0x19
 32401 008d 00       		.byte	0
 32402 008e 00       		.byte	0
 32403 008f 0E       		.uleb128 0xe
 32404 0090 13       		.uleb128 0x13
 32405 0091 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 691


 32406 0092 03       		.uleb128 0x3
 32407 0093 0E       		.uleb128 0xe
 32408 0094 0B       		.uleb128 0xb
 32409 0095 0B       		.uleb128 0xb
 32410 0096 3A       		.uleb128 0x3a
 32411 0097 0B       		.uleb128 0xb
 32412 0098 3B       		.uleb128 0x3b
 32413 0099 0B       		.uleb128 0xb
 32414 009a 01       		.uleb128 0x1
 32415 009b 13       		.uleb128 0x13
 32416 009c 00       		.byte	0
 32417 009d 00       		.byte	0
 32418 009e 0F       		.uleb128 0xf
 32419 009f 0D       		.uleb128 0xd
 32420 00a0 00       		.byte	0
 32421 00a1 03       		.uleb128 0x3
 32422 00a2 08       		.uleb128 0x8
 32423 00a3 3A       		.uleb128 0x3a
 32424 00a4 0B       		.uleb128 0xb
 32425 00a5 3B       		.uleb128 0x3b
 32426 00a6 0B       		.uleb128 0xb
 32427 00a7 49       		.uleb128 0x49
 32428 00a8 13       		.uleb128 0x13
 32429 00a9 38       		.uleb128 0x38
 32430 00aa 0B       		.uleb128 0xb
 32431 00ab 00       		.byte	0
 32432 00ac 00       		.byte	0
 32433 00ad 10       		.uleb128 0x10
 32434 00ae 0D       		.uleb128 0xd
 32435 00af 00       		.byte	0
 32436 00b0 03       		.uleb128 0x3
 32437 00b1 0E       		.uleb128 0xe
 32438 00b2 3A       		.uleb128 0x3a
 32439 00b3 0B       		.uleb128 0xb
 32440 00b4 3B       		.uleb128 0x3b
 32441 00b5 0B       		.uleb128 0xb
 32442 00b6 49       		.uleb128 0x49
 32443 00b7 13       		.uleb128 0x13
 32444 00b8 38       		.uleb128 0x38
 32445 00b9 0B       		.uleb128 0xb
 32446 00ba 00       		.byte	0
 32447 00bb 00       		.byte	0
 32448 00bc 11       		.uleb128 0x11
 32449 00bd 13       		.uleb128 0x13
 32450 00be 01       		.byte	0x1
 32451 00bf 03       		.uleb128 0x3
 32452 00c0 0E       		.uleb128 0xe
 32453 00c1 0B       		.uleb128 0xb
 32454 00c2 0B       		.uleb128 0xb
 32455 00c3 3A       		.uleb128 0x3a
 32456 00c4 0B       		.uleb128 0xb
 32457 00c5 3B       		.uleb128 0x3b
 32458 00c6 05       		.uleb128 0x5
 32459 00c7 01       		.uleb128 0x1
 32460 00c8 13       		.uleb128 0x13
 32461 00c9 00       		.byte	0
 32462 00ca 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 692


 32463 00cb 12       		.uleb128 0x12
 32464 00cc 0D       		.uleb128 0xd
 32465 00cd 00       		.byte	0
 32466 00ce 03       		.uleb128 0x3
 32467 00cf 0E       		.uleb128 0xe
 32468 00d0 3A       		.uleb128 0x3a
 32469 00d1 0B       		.uleb128 0xb
 32470 00d2 3B       		.uleb128 0x3b
 32471 00d3 05       		.uleb128 0x5
 32472 00d4 49       		.uleb128 0x49
 32473 00d5 13       		.uleb128 0x13
 32474 00d6 38       		.uleb128 0x38
 32475 00d7 0B       		.uleb128 0xb
 32476 00d8 00       		.byte	0
 32477 00d9 00       		.byte	0
 32478 00da 13       		.uleb128 0x13
 32479 00db 0D       		.uleb128 0xd
 32480 00dc 00       		.byte	0
 32481 00dd 03       		.uleb128 0x3
 32482 00de 08       		.uleb128 0x8
 32483 00df 3A       		.uleb128 0x3a
 32484 00e0 0B       		.uleb128 0xb
 32485 00e1 3B       		.uleb128 0x3b
 32486 00e2 05       		.uleb128 0x5
 32487 00e3 49       		.uleb128 0x49
 32488 00e4 13       		.uleb128 0x13
 32489 00e5 38       		.uleb128 0x38
 32490 00e6 0B       		.uleb128 0xb
 32491 00e7 00       		.byte	0
 32492 00e8 00       		.byte	0
 32493 00e9 14       		.uleb128 0x14
 32494 00ea 13       		.uleb128 0x13
 32495 00eb 01       		.byte	0x1
 32496 00ec 03       		.uleb128 0x3
 32497 00ed 0E       		.uleb128 0xe
 32498 00ee 0B       		.uleb128 0xb
 32499 00ef 05       		.uleb128 0x5
 32500 00f0 3A       		.uleb128 0x3a
 32501 00f1 0B       		.uleb128 0xb
 32502 00f2 3B       		.uleb128 0x3b
 32503 00f3 05       		.uleb128 0x5
 32504 00f4 01       		.uleb128 0x1
 32505 00f5 13       		.uleb128 0x13
 32506 00f6 00       		.byte	0
 32507 00f7 00       		.byte	0
 32508 00f8 15       		.uleb128 0x15
 32509 00f9 0D       		.uleb128 0xd
 32510 00fa 00       		.byte	0
 32511 00fb 03       		.uleb128 0x3
 32512 00fc 08       		.uleb128 0x8
 32513 00fd 3A       		.uleb128 0x3a
 32514 00fe 0B       		.uleb128 0xb
 32515 00ff 3B       		.uleb128 0x3b
 32516 0100 05       		.uleb128 0x5
 32517 0101 49       		.uleb128 0x49
 32518 0102 13       		.uleb128 0x13
 32519 0103 38       		.uleb128 0x38
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 693


 32520 0104 05       		.uleb128 0x5
 32521 0105 00       		.byte	0
 32522 0106 00       		.byte	0
 32523 0107 16       		.uleb128 0x16
 32524 0108 0D       		.uleb128 0xd
 32525 0109 00       		.byte	0
 32526 010a 03       		.uleb128 0x3
 32527 010b 0E       		.uleb128 0xe
 32528 010c 3A       		.uleb128 0x3a
 32529 010d 0B       		.uleb128 0xb
 32530 010e 3B       		.uleb128 0x3b
 32531 010f 05       		.uleb128 0x5
 32532 0110 49       		.uleb128 0x49
 32533 0111 13       		.uleb128 0x13
 32534 0112 38       		.uleb128 0x38
 32535 0113 05       		.uleb128 0x5
 32536 0114 00       		.byte	0
 32537 0115 00       		.byte	0
 32538 0116 17       		.uleb128 0x17
 32539 0117 2E       		.uleb128 0x2e
 32540 0118 01       		.byte	0x1
 32541 0119 03       		.uleb128 0x3
 32542 011a 0E       		.uleb128 0xe
 32543 011b 3A       		.uleb128 0x3a
 32544 011c 0B       		.uleb128 0xb
 32545 011d 3B       		.uleb128 0x3b
 32546 011e 05       		.uleb128 0x5
 32547 011f 27       		.uleb128 0x27
 32548 0120 19       		.uleb128 0x19
 32549 0121 49       		.uleb128 0x49
 32550 0122 13       		.uleb128 0x13
 32551 0123 20       		.uleb128 0x20
 32552 0124 0B       		.uleb128 0xb
 32553 0125 01       		.uleb128 0x1
 32554 0126 13       		.uleb128 0x13
 32555 0127 00       		.byte	0
 32556 0128 00       		.byte	0
 32557 0129 18       		.uleb128 0x18
 32558 012a 05       		.uleb128 0x5
 32559 012b 00       		.byte	0
 32560 012c 03       		.uleb128 0x3
 32561 012d 0E       		.uleb128 0xe
 32562 012e 3A       		.uleb128 0x3a
 32563 012f 0B       		.uleb128 0xb
 32564 0130 3B       		.uleb128 0x3b
 32565 0131 05       		.uleb128 0x5
 32566 0132 49       		.uleb128 0x49
 32567 0133 13       		.uleb128 0x13
 32568 0134 00       		.byte	0
 32569 0135 00       		.byte	0
 32570 0136 19       		.uleb128 0x19
 32571 0137 34       		.uleb128 0x34
 32572 0138 00       		.byte	0
 32573 0139 03       		.uleb128 0x3
 32574 013a 0E       		.uleb128 0xe
 32575 013b 3A       		.uleb128 0x3a
 32576 013c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 694


 32577 013d 3B       		.uleb128 0x3b
 32578 013e 05       		.uleb128 0x5
 32579 013f 49       		.uleb128 0x49
 32580 0140 13       		.uleb128 0x13
 32581 0141 00       		.byte	0
 32582 0142 00       		.byte	0
 32583 0143 1A       		.uleb128 0x1a
 32584 0144 2E       		.uleb128 0x2e
 32585 0145 01       		.byte	0x1
 32586 0146 3F       		.uleb128 0x3f
 32587 0147 19       		.uleb128 0x19
 32588 0148 03       		.uleb128 0x3
 32589 0149 0E       		.uleb128 0xe
 32590 014a 3A       		.uleb128 0x3a
 32591 014b 0B       		.uleb128 0xb
 32592 014c 3B       		.uleb128 0x3b
 32593 014d 0B       		.uleb128 0xb
 32594 014e 27       		.uleb128 0x27
 32595 014f 19       		.uleb128 0x19
 32596 0150 11       		.uleb128 0x11
 32597 0151 01       		.uleb128 0x1
 32598 0152 12       		.uleb128 0x12
 32599 0153 06       		.uleb128 0x6
 32600 0154 40       		.uleb128 0x40
 32601 0155 18       		.uleb128 0x18
 32602 0156 9642     		.uleb128 0x2116
 32603 0158 19       		.uleb128 0x19
 32604 0159 01       		.uleb128 0x1
 32605 015a 13       		.uleb128 0x13
 32606 015b 00       		.byte	0
 32607 015c 00       		.byte	0
 32608 015d 1B       		.uleb128 0x1b
 32609 015e 34       		.uleb128 0x34
 32610 015f 00       		.byte	0
 32611 0160 03       		.uleb128 0x3
 32612 0161 0E       		.uleb128 0xe
 32613 0162 3A       		.uleb128 0x3a
 32614 0163 0B       		.uleb128 0xb
 32615 0164 3B       		.uleb128 0x3b
 32616 0165 0B       		.uleb128 0xb
 32617 0166 49       		.uleb128 0x49
 32618 0167 13       		.uleb128 0x13
 32619 0168 02       		.uleb128 0x2
 32620 0169 18       		.uleb128 0x18
 32621 016a 00       		.byte	0
 32622 016b 00       		.byte	0
 32623 016c 1C       		.uleb128 0x1c
 32624 016d 1D       		.uleb128 0x1d
 32625 016e 01       		.byte	0x1
 32626 016f 31       		.uleb128 0x31
 32627 0170 13       		.uleb128 0x13
 32628 0171 11       		.uleb128 0x11
 32629 0172 01       		.uleb128 0x1
 32630 0173 12       		.uleb128 0x12
 32631 0174 06       		.uleb128 0x6
 32632 0175 58       		.uleb128 0x58
 32633 0176 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 695


 32634 0177 59       		.uleb128 0x59
 32635 0178 0B       		.uleb128 0xb
 32636 0179 01       		.uleb128 0x1
 32637 017a 13       		.uleb128 0x13
 32638 017b 00       		.byte	0
 32639 017c 00       		.byte	0
 32640 017d 1D       		.uleb128 0x1d
 32641 017e 05       		.uleb128 0x5
 32642 017f 00       		.byte	0
 32643 0180 31       		.uleb128 0x31
 32644 0181 13       		.uleb128 0x13
 32645 0182 02       		.uleb128 0x2
 32646 0183 18       		.uleb128 0x18
 32647 0184 00       		.byte	0
 32648 0185 00       		.byte	0
 32649 0186 1E       		.uleb128 0x1e
 32650 0187 0B       		.uleb128 0xb
 32651 0188 01       		.byte	0x1
 32652 0189 11       		.uleb128 0x11
 32653 018a 01       		.uleb128 0x1
 32654 018b 12       		.uleb128 0x12
 32655 018c 06       		.uleb128 0x6
 32656 018d 00       		.byte	0
 32657 018e 00       		.byte	0
 32658 018f 1F       		.uleb128 0x1f
 32659 0190 34       		.uleb128 0x34
 32660 0191 00       		.byte	0
 32661 0192 31       		.uleb128 0x31
 32662 0193 13       		.uleb128 0x13
 32663 0194 02       		.uleb128 0x2
 32664 0195 18       		.uleb128 0x18
 32665 0196 00       		.byte	0
 32666 0197 00       		.byte	0
 32667 0198 20       		.uleb128 0x20
 32668 0199 1D       		.uleb128 0x1d
 32669 019a 01       		.byte	0x1
 32670 019b 31       		.uleb128 0x31
 32671 019c 13       		.uleb128 0x13
 32672 019d 11       		.uleb128 0x11
 32673 019e 01       		.uleb128 0x1
 32674 019f 12       		.uleb128 0x12
 32675 01a0 06       		.uleb128 0x6
 32676 01a1 58       		.uleb128 0x58
 32677 01a2 0B       		.uleb128 0xb
 32678 01a3 59       		.uleb128 0x59
 32679 01a4 05       		.uleb128 0x5
 32680 01a5 01       		.uleb128 0x1
 32681 01a6 13       		.uleb128 0x13
 32682 01a7 00       		.byte	0
 32683 01a8 00       		.byte	0
 32684 01a9 21       		.uleb128 0x21
 32685 01aa 1D       		.uleb128 0x1d
 32686 01ab 01       		.byte	0x1
 32687 01ac 31       		.uleb128 0x31
 32688 01ad 13       		.uleb128 0x13
 32689 01ae 11       		.uleb128 0x11
 32690 01af 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 696


 32691 01b0 12       		.uleb128 0x12
 32692 01b1 06       		.uleb128 0x6
 32693 01b2 58       		.uleb128 0x58
 32694 01b3 0B       		.uleb128 0xb
 32695 01b4 59       		.uleb128 0x59
 32696 01b5 05       		.uleb128 0x5
 32697 01b6 00       		.byte	0
 32698 01b7 00       		.byte	0
 32699 01b8 22       		.uleb128 0x22
 32700 01b9 2E       		.uleb128 0x2e
 32701 01ba 01       		.byte	0x1
 32702 01bb 3F       		.uleb128 0x3f
 32703 01bc 19       		.uleb128 0x19
 32704 01bd 03       		.uleb128 0x3
 32705 01be 0E       		.uleb128 0xe
 32706 01bf 3A       		.uleb128 0x3a
 32707 01c0 0B       		.uleb128 0xb
 32708 01c1 3B       		.uleb128 0x3b
 32709 01c2 05       		.uleb128 0x5
 32710 01c3 27       		.uleb128 0x27
 32711 01c4 19       		.uleb128 0x19
 32712 01c5 11       		.uleb128 0x11
 32713 01c6 01       		.uleb128 0x1
 32714 01c7 12       		.uleb128 0x12
 32715 01c8 06       		.uleb128 0x6
 32716 01c9 40       		.uleb128 0x40
 32717 01ca 18       		.uleb128 0x18
 32718 01cb 9642     		.uleb128 0x2116
 32719 01cd 19       		.uleb128 0x19
 32720 01ce 01       		.uleb128 0x1
 32721 01cf 13       		.uleb128 0x13
 32722 01d0 00       		.byte	0
 32723 01d1 00       		.byte	0
 32724 01d2 23       		.uleb128 0x23
 32725 01d3 34       		.uleb128 0x34
 32726 01d4 00       		.byte	0
 32727 01d5 03       		.uleb128 0x3
 32728 01d6 0E       		.uleb128 0xe
 32729 01d7 3A       		.uleb128 0x3a
 32730 01d8 0B       		.uleb128 0xb
 32731 01d9 3B       		.uleb128 0x3b
 32732 01da 05       		.uleb128 0x5
 32733 01db 49       		.uleb128 0x49
 32734 01dc 13       		.uleb128 0x13
 32735 01dd 02       		.uleb128 0x2
 32736 01de 18       		.uleb128 0x18
 32737 01df 00       		.byte	0
 32738 01e0 00       		.byte	0
 32739 01e1 24       		.uleb128 0x24
 32740 01e2 21       		.uleb128 0x21
 32741 01e3 00       		.byte	0
 32742 01e4 49       		.uleb128 0x49
 32743 01e5 13       		.uleb128 0x13
 32744 01e6 2F       		.uleb128 0x2f
 32745 01e7 05       		.uleb128 0x5
 32746 01e8 00       		.byte	0
 32747 01e9 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 697


 32748 01ea 25       		.uleb128 0x25
 32749 01eb 05       		.uleb128 0x5
 32750 01ec 00       		.byte	0
 32751 01ed 03       		.uleb128 0x3
 32752 01ee 0E       		.uleb128 0xe
 32753 01ef 3A       		.uleb128 0x3a
 32754 01f0 0B       		.uleb128 0xb
 32755 01f1 3B       		.uleb128 0x3b
 32756 01f2 05       		.uleb128 0x5
 32757 01f3 49       		.uleb128 0x49
 32758 01f4 13       		.uleb128 0x13
 32759 01f5 02       		.uleb128 0x2
 32760 01f6 18       		.uleb128 0x18
 32761 01f7 00       		.byte	0
 32762 01f8 00       		.byte	0
 32763 01f9 26       		.uleb128 0x26
 32764 01fa 34       		.uleb128 0x34
 32765 01fb 00       		.byte	0
 32766 01fc 03       		.uleb128 0x3
 32767 01fd 08       		.uleb128 0x8
 32768 01fe 3A       		.uleb128 0x3a
 32769 01ff 0B       		.uleb128 0xb
 32770 0200 3B       		.uleb128 0x3b
 32771 0201 05       		.uleb128 0x5
 32772 0202 49       		.uleb128 0x49
 32773 0203 13       		.uleb128 0x13
 32774 0204 02       		.uleb128 0x2
 32775 0205 18       		.uleb128 0x18
 32776 0206 00       		.byte	0
 32777 0207 00       		.byte	0
 32778 0208 27       		.uleb128 0x27
 32779 0209 2E       		.uleb128 0x2e
 32780 020a 01       		.byte	0x1
 32781 020b 3F       		.uleb128 0x3f
 32782 020c 19       		.uleb128 0x19
 32783 020d 03       		.uleb128 0x3
 32784 020e 0E       		.uleb128 0xe
 32785 020f 3A       		.uleb128 0x3a
 32786 0210 0B       		.uleb128 0xb
 32787 0211 3B       		.uleb128 0x3b
 32788 0212 05       		.uleb128 0x5
 32789 0213 11       		.uleb128 0x11
 32790 0214 01       		.uleb128 0x1
 32791 0215 12       		.uleb128 0x12
 32792 0216 06       		.uleb128 0x6
 32793 0217 40       		.uleb128 0x40
 32794 0218 18       		.uleb128 0x18
 32795 0219 9642     		.uleb128 0x2116
 32796 021b 19       		.uleb128 0x19
 32797 021c 01       		.uleb128 0x1
 32798 021d 13       		.uleb128 0x13
 32799 021e 00       		.byte	0
 32800 021f 00       		.byte	0
 32801 0220 28       		.uleb128 0x28
 32802 0221 2E       		.uleb128 0x2e
 32803 0222 01       		.byte	0x1
 32804 0223 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 698


 32805 0224 19       		.uleb128 0x19
 32806 0225 03       		.uleb128 0x3
 32807 0226 0E       		.uleb128 0xe
 32808 0227 3A       		.uleb128 0x3a
 32809 0228 0B       		.uleb128 0xb
 32810 0229 3B       		.uleb128 0x3b
 32811 022a 05       		.uleb128 0x5
 32812 022b 27       		.uleb128 0x27
 32813 022c 19       		.uleb128 0x19
 32814 022d 11       		.uleb128 0x11
 32815 022e 01       		.uleb128 0x1
 32816 022f 12       		.uleb128 0x12
 32817 0230 06       		.uleb128 0x6
 32818 0231 40       		.uleb128 0x40
 32819 0232 18       		.uleb128 0x18
 32820 0233 9742     		.uleb128 0x2117
 32821 0235 19       		.uleb128 0x19
 32822 0236 01       		.uleb128 0x1
 32823 0237 13       		.uleb128 0x13
 32824 0238 00       		.byte	0
 32825 0239 00       		.byte	0
 32826 023a 29       		.uleb128 0x29
 32827 023b 05       		.uleb128 0x5
 32828 023c 00       		.byte	0
 32829 023d 03       		.uleb128 0x3
 32830 023e 08       		.uleb128 0x8
 32831 023f 3A       		.uleb128 0x3a
 32832 0240 0B       		.uleb128 0xb
 32833 0241 3B       		.uleb128 0x3b
 32834 0242 05       		.uleb128 0x5
 32835 0243 49       		.uleb128 0x49
 32836 0244 13       		.uleb128 0x13
 32837 0245 02       		.uleb128 0x2
 32838 0246 18       		.uleb128 0x18
 32839 0247 00       		.byte	0
 32840 0248 00       		.byte	0
 32841 0249 2A       		.uleb128 0x2a
 32842 024a 2E       		.uleb128 0x2e
 32843 024b 01       		.byte	0x1
 32844 024c 3F       		.uleb128 0x3f
 32845 024d 19       		.uleb128 0x19
 32846 024e 03       		.uleb128 0x3
 32847 024f 0E       		.uleb128 0xe
 32848 0250 3A       		.uleb128 0x3a
 32849 0251 0B       		.uleb128 0xb
 32850 0252 3B       		.uleb128 0x3b
 32851 0253 05       		.uleb128 0x5
 32852 0254 27       		.uleb128 0x27
 32853 0255 19       		.uleb128 0x19
 32854 0256 49       		.uleb128 0x49
 32855 0257 13       		.uleb128 0x13
 32856 0258 11       		.uleb128 0x11
 32857 0259 01       		.uleb128 0x1
 32858 025a 12       		.uleb128 0x12
 32859 025b 06       		.uleb128 0x6
 32860 025c 40       		.uleb128 0x40
 32861 025d 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 699


 32862 025e 9742     		.uleb128 0x2117
 32863 0260 19       		.uleb128 0x19
 32864 0261 01       		.uleb128 0x1
 32865 0262 13       		.uleb128 0x13
 32866 0263 00       		.byte	0
 32867 0264 00       		.byte	0
 32868 0265 2B       		.uleb128 0x2b
 32869 0266 2E       		.uleb128 0x2e
 32870 0267 01       		.byte	0x1
 32871 0268 3F       		.uleb128 0x3f
 32872 0269 19       		.uleb128 0x19
 32873 026a 03       		.uleb128 0x3
 32874 026b 0E       		.uleb128 0xe
 32875 026c 3A       		.uleb128 0x3a
 32876 026d 0B       		.uleb128 0xb
 32877 026e 3B       		.uleb128 0x3b
 32878 026f 05       		.uleb128 0x5
 32879 0270 27       		.uleb128 0x27
 32880 0271 19       		.uleb128 0x19
 32881 0272 49       		.uleb128 0x49
 32882 0273 13       		.uleb128 0x13
 32883 0274 11       		.uleb128 0x11
 32884 0275 01       		.uleb128 0x1
 32885 0276 12       		.uleb128 0x12
 32886 0277 06       		.uleb128 0x6
 32887 0278 40       		.uleb128 0x40
 32888 0279 18       		.uleb128 0x18
 32889 027a 9642     		.uleb128 0x2116
 32890 027c 19       		.uleb128 0x19
 32891 027d 01       		.uleb128 0x1
 32892 027e 13       		.uleb128 0x13
 32893 027f 00       		.byte	0
 32894 0280 00       		.byte	0
 32895 0281 2C       		.uleb128 0x2c
 32896 0282 2E       		.uleb128 0x2e
 32897 0283 00       		.byte	0
 32898 0284 3F       		.uleb128 0x3f
 32899 0285 19       		.uleb128 0x19
 32900 0286 03       		.uleb128 0x3
 32901 0287 0E       		.uleb128 0xe
 32902 0288 3A       		.uleb128 0x3a
 32903 0289 0B       		.uleb128 0xb
 32904 028a 3B       		.uleb128 0x3b
 32905 028b 05       		.uleb128 0x5
 32906 028c 27       		.uleb128 0x27
 32907 028d 19       		.uleb128 0x19
 32908 028e 11       		.uleb128 0x11
 32909 028f 01       		.uleb128 0x1
 32910 0290 12       		.uleb128 0x12
 32911 0291 06       		.uleb128 0x6
 32912 0292 40       		.uleb128 0x40
 32913 0293 18       		.uleb128 0x18
 32914 0294 9742     		.uleb128 0x2117
 32915 0296 19       		.uleb128 0x19
 32916 0297 00       		.byte	0
 32917 0298 00       		.byte	0
 32918 0299 2D       		.uleb128 0x2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 700


 32919 029a 2E       		.uleb128 0x2e
 32920 029b 01       		.byte	0x1
 32921 029c 3F       		.uleb128 0x3f
 32922 029d 19       		.uleb128 0x19
 32923 029e 03       		.uleb128 0x3
 32924 029f 0E       		.uleb128 0xe
 32925 02a0 3A       		.uleb128 0x3a
 32926 02a1 0B       		.uleb128 0xb
 32927 02a2 3B       		.uleb128 0x3b
 32928 02a3 05       		.uleb128 0x5
 32929 02a4 11       		.uleb128 0x11
 32930 02a5 01       		.uleb128 0x1
 32931 02a6 12       		.uleb128 0x12
 32932 02a7 06       		.uleb128 0x6
 32933 02a8 40       		.uleb128 0x40
 32934 02a9 18       		.uleb128 0x18
 32935 02aa 9742     		.uleb128 0x2117
 32936 02ac 19       		.uleb128 0x19
 32937 02ad 01       		.uleb128 0x1
 32938 02ae 13       		.uleb128 0x13
 32939 02af 00       		.byte	0
 32940 02b0 00       		.byte	0
 32941 02b1 2E       		.uleb128 0x2e
 32942 02b2 0B       		.uleb128 0xb
 32943 02b3 01       		.byte	0x1
 32944 02b4 11       		.uleb128 0x11
 32945 02b5 01       		.uleb128 0x1
 32946 02b6 12       		.uleb128 0x12
 32947 02b7 06       		.uleb128 0x6
 32948 02b8 01       		.uleb128 0x1
 32949 02b9 13       		.uleb128 0x13
 32950 02ba 00       		.byte	0
 32951 02bb 00       		.byte	0
 32952 02bc 2F       		.uleb128 0x2f
 32953 02bd 2E       		.uleb128 0x2e
 32954 02be 01       		.byte	0x1
 32955 02bf 3F       		.uleb128 0x3f
 32956 02c0 19       		.uleb128 0x19
 32957 02c1 03       		.uleb128 0x3
 32958 02c2 0E       		.uleb128 0xe
 32959 02c3 3A       		.uleb128 0x3a
 32960 02c4 0B       		.uleb128 0xb
 32961 02c5 3B       		.uleb128 0x3b
 32962 02c6 05       		.uleb128 0x5
 32963 02c7 49       		.uleb128 0x49
 32964 02c8 13       		.uleb128 0x13
 32965 02c9 11       		.uleb128 0x11
 32966 02ca 01       		.uleb128 0x1
 32967 02cb 12       		.uleb128 0x12
 32968 02cc 06       		.uleb128 0x6
 32969 02cd 40       		.uleb128 0x40
 32970 02ce 18       		.uleb128 0x18
 32971 02cf 9642     		.uleb128 0x2116
 32972 02d1 19       		.uleb128 0x19
 32973 02d2 01       		.uleb128 0x1
 32974 02d3 13       		.uleb128 0x13
 32975 02d4 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 701


 32976 02d5 00       		.byte	0
 32977 02d6 30       		.uleb128 0x30
 32978 02d7 2E       		.uleb128 0x2e
 32979 02d8 00       		.byte	0
 32980 02d9 3F       		.uleb128 0x3f
 32981 02da 19       		.uleb128 0x19
 32982 02db 03       		.uleb128 0x3
 32983 02dc 0E       		.uleb128 0xe
 32984 02dd 3A       		.uleb128 0x3a
 32985 02de 0B       		.uleb128 0xb
 32986 02df 3B       		.uleb128 0x3b
 32987 02e0 05       		.uleb128 0x5
 32988 02e1 11       		.uleb128 0x11
 32989 02e2 01       		.uleb128 0x1
 32990 02e3 12       		.uleb128 0x12
 32991 02e4 06       		.uleb128 0x6
 32992 02e5 40       		.uleb128 0x40
 32993 02e6 18       		.uleb128 0x18
 32994 02e7 9642     		.uleb128 0x2116
 32995 02e9 19       		.uleb128 0x19
 32996 02ea 00       		.byte	0
 32997 02eb 00       		.byte	0
 32998 02ec 31       		.uleb128 0x31
 32999 02ed 2E       		.uleb128 0x2e
 33000 02ee 01       		.byte	0x1
 33001 02ef 3F       		.uleb128 0x3f
 33002 02f0 19       		.uleb128 0x19
 33003 02f1 03       		.uleb128 0x3
 33004 02f2 0E       		.uleb128 0xe
 33005 02f3 3A       		.uleb128 0x3a
 33006 02f4 0B       		.uleb128 0xb
 33007 02f5 3B       		.uleb128 0x3b
 33008 02f6 05       		.uleb128 0x5
 33009 02f7 49       		.uleb128 0x49
 33010 02f8 13       		.uleb128 0x13
 33011 02f9 11       		.uleb128 0x11
 33012 02fa 01       		.uleb128 0x1
 33013 02fb 12       		.uleb128 0x12
 33014 02fc 06       		.uleb128 0x6
 33015 02fd 40       		.uleb128 0x40
 33016 02fe 18       		.uleb128 0x18
 33017 02ff 9742     		.uleb128 0x2117
 33018 0301 19       		.uleb128 0x19
 33019 0302 01       		.uleb128 0x1
 33020 0303 13       		.uleb128 0x13
 33021 0304 00       		.byte	0
 33022 0305 00       		.byte	0
 33023 0306 32       		.uleb128 0x32
 33024 0307 2E       		.uleb128 0x2e
 33025 0308 00       		.byte	0
 33026 0309 3F       		.uleb128 0x3f
 33027 030a 19       		.uleb128 0x19
 33028 030b 03       		.uleb128 0x3
 33029 030c 0E       		.uleb128 0xe
 33030 030d 3A       		.uleb128 0x3a
 33031 030e 0B       		.uleb128 0xb
 33032 030f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 702


 33033 0310 05       		.uleb128 0x5
 33034 0311 11       		.uleb128 0x11
 33035 0312 01       		.uleb128 0x1
 33036 0313 12       		.uleb128 0x12
 33037 0314 06       		.uleb128 0x6
 33038 0315 40       		.uleb128 0x40
 33039 0316 18       		.uleb128 0x18
 33040 0317 9742     		.uleb128 0x2117
 33041 0319 19       		.uleb128 0x19
 33042 031a 00       		.byte	0
 33043 031b 00       		.byte	0
 33044 031c 33       		.uleb128 0x33
 33045 031d 34       		.uleb128 0x34
 33046 031e 00       		.byte	0
 33047 031f 03       		.uleb128 0x3
 33048 0320 0E       		.uleb128 0xe
 33049 0321 3A       		.uleb128 0x3a
 33050 0322 0B       		.uleb128 0xb
 33051 0323 3B       		.uleb128 0x3b
 33052 0324 05       		.uleb128 0x5
 33053 0325 49       		.uleb128 0x49
 33054 0326 13       		.uleb128 0x13
 33055 0327 3F       		.uleb128 0x3f
 33056 0328 19       		.uleb128 0x19
 33057 0329 3C       		.uleb128 0x3c
 33058 032a 19       		.uleb128 0x19
 33059 032b 00       		.byte	0
 33060 032c 00       		.byte	0
 33061 032d 34       		.uleb128 0x34
 33062 032e 34       		.uleb128 0x34
 33063 032f 00       		.byte	0
 33064 0330 03       		.uleb128 0x3
 33065 0331 0E       		.uleb128 0xe
 33066 0332 3A       		.uleb128 0x3a
 33067 0333 0B       		.uleb128 0xb
 33068 0334 3B       		.uleb128 0x3b
 33069 0335 0B       		.uleb128 0xb
 33070 0336 49       		.uleb128 0x49
 33071 0337 13       		.uleb128 0x13
 33072 0338 3F       		.uleb128 0x3f
 33073 0339 19       		.uleb128 0x19
 33074 033a 02       		.uleb128 0x2
 33075 033b 18       		.uleb128 0x18
 33076 033c 00       		.byte	0
 33077 033d 00       		.byte	0
 33078 033e 00       		.byte	0
 33079              		.section	.debug_aranges,"",%progbits
 33080 0000 DC010000 		.4byte	0x1dc
 33081 0004 0200     		.2byte	0x2
 33082 0006 00000000 		.4byte	.Ldebug_info0
 33083 000a 04       		.byte	0x4
 33084 000b 00       		.byte	0
 33085 000c 0000     		.2byte	0
 33086 000e 0000     		.2byte	0
 33087 0010 00000000 		.4byte	.LFB64
 33088 0014 00050000 		.4byte	.LFE64-.LFB64
 33089 0018 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 703


 33090 001c 22000000 		.4byte	.LFE65-.LFB65
 33091 0020 00000000 		.4byte	.LFB66
 33092 0024 34010000 		.4byte	.LFE66-.LFB66
 33093 0028 00000000 		.4byte	.LFB67
 33094 002c 2C320000 		.4byte	.LFE67-.LFB67
 33095 0030 00000000 		.4byte	.LFB68
 33096 0034 40190000 		.4byte	.LFE68-.LFB68
 33097 0038 00000000 		.4byte	.LFB69
 33098 003c 90140000 		.4byte	.LFE69-.LFB69
 33099 0040 00000000 		.4byte	.LFB70
 33100 0044 F40D0000 		.4byte	.LFE70-.LFB70
 33101 0048 00000000 		.4byte	.LFB71
 33102 004c 90000000 		.4byte	.LFE71-.LFB71
 33103 0050 00000000 		.4byte	.LFB72
 33104 0054 60210000 		.4byte	.LFE72-.LFB72
 33105 0058 00000000 		.4byte	.LFB73
 33106 005c BC030000 		.4byte	.LFE73-.LFB73
 33107 0060 00000000 		.4byte	.LFB74
 33108 0064 7C120000 		.4byte	.LFE74-.LFB74
 33109 0068 00000000 		.4byte	.LFB75
 33110 006c C8000000 		.4byte	.LFE75-.LFB75
 33111 0070 00000000 		.4byte	.LFB76
 33112 0074 30010000 		.4byte	.LFE76-.LFB76
 33113 0078 00000000 		.4byte	.LFB77
 33114 007c 28000000 		.4byte	.LFE77-.LFB77
 33115 0080 00000000 		.4byte	.LFB78
 33116 0084 F0000000 		.4byte	.LFE78-.LFB78
 33117 0088 00000000 		.4byte	.LFB79
 33118 008c 74030000 		.4byte	.LFE79-.LFB79
 33119 0090 00000000 		.4byte	.LFB80
 33120 0094 84000000 		.4byte	.LFE80-.LFB80
 33121 0098 00000000 		.4byte	.LFB81
 33122 009c 88000000 		.4byte	.LFE81-.LFB81
 33123 00a0 00000000 		.4byte	.LFB82
 33124 00a4 A0000000 		.4byte	.LFE82-.LFB82
 33125 00a8 00000000 		.4byte	.LFB83
 33126 00ac 3E000000 		.4byte	.LFE83-.LFB83
 33127 00b0 00000000 		.4byte	.LFB84
 33128 00b4 2E000000 		.4byte	.LFE84-.LFB84
 33129 00b8 00000000 		.4byte	.LFB85
 33130 00bc 98000000 		.4byte	.LFE85-.LFB85
 33131 00c0 00000000 		.4byte	.LFB86
 33132 00c4 80000000 		.4byte	.LFE86-.LFB86
 33133 00c8 00000000 		.4byte	.LFB87
 33134 00cc 5C000000 		.4byte	.LFE87-.LFB87
 33135 00d0 00000000 		.4byte	.LFB88
 33136 00d4 10060000 		.4byte	.LFE88-.LFB88
 33137 00d8 00000000 		.4byte	.LFB89
 33138 00dc 38020000 		.4byte	.LFE89-.LFB89
 33139 00e0 00000000 		.4byte	.LFB90
 33140 00e4 28000000 		.4byte	.LFE90-.LFB90
 33141 00e8 00000000 		.4byte	.LFB91
 33142 00ec 78000000 		.4byte	.LFE91-.LFB91
 33143 00f0 00000000 		.4byte	.LFB92
 33144 00f4 B0000000 		.4byte	.LFE92-.LFB92
 33145 00f8 00000000 		.4byte	.LFB93
 33146 00fc 28010000 		.4byte	.LFE93-.LFB93
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 704


 33147 0100 00000000 		.4byte	.LFB94
 33148 0104 B8000000 		.4byte	.LFE94-.LFB94
 33149 0108 00000000 		.4byte	.LFB95
 33150 010c B8000000 		.4byte	.LFE95-.LFB95
 33151 0110 00000000 		.4byte	.LFB96
 33152 0114 5C000000 		.4byte	.LFE96-.LFB96
 33153 0118 00000000 		.4byte	.LFB97
 33154 011c 44020000 		.4byte	.LFE97-.LFB97
 33155 0120 00000000 		.4byte	.LFB98
 33156 0124 BC000000 		.4byte	.LFE98-.LFB98
 33157 0128 00000000 		.4byte	.LFB99
 33158 012c 5C000000 		.4byte	.LFE99-.LFB99
 33159 0130 00000000 		.4byte	.LFB100
 33160 0134 38010000 		.4byte	.LFE100-.LFB100
 33161 0138 00000000 		.4byte	.LFB101
 33162 013c EC000000 		.4byte	.LFE101-.LFB101
 33163 0140 00000000 		.4byte	.LFB102
 33164 0144 64000000 		.4byte	.LFE102-.LFB102
 33165 0148 00000000 		.4byte	.LFB103
 33166 014c A8000000 		.4byte	.LFE103-.LFB103
 33167 0150 00000000 		.4byte	.LFB104
 33168 0154 34000000 		.4byte	.LFE104-.LFB104
 33169 0158 00000000 		.4byte	.LFB105
 33170 015c 20000000 		.4byte	.LFE105-.LFB105
 33171 0160 00000000 		.4byte	.LFB106
 33172 0164 A0000000 		.4byte	.LFE106-.LFB106
 33173 0168 00000000 		.4byte	.LFB107
 33174 016c BC010000 		.4byte	.LFE107-.LFB107
 33175 0170 00000000 		.4byte	.LFB108
 33176 0174 60000000 		.4byte	.LFE108-.LFB108
 33177 0178 00000000 		.4byte	.LFB109
 33178 017c 98050000 		.4byte	.LFE109-.LFB109
 33179 0180 00000000 		.4byte	.LFB110
 33180 0184 8C000000 		.4byte	.LFE110-.LFB110
 33181 0188 00000000 		.4byte	.LFB111
 33182 018c EC000000 		.4byte	.LFE111-.LFB111
 33183 0190 00000000 		.4byte	.LFB112
 33184 0194 5C000000 		.4byte	.LFE112-.LFB112
 33185 0198 00000000 		.4byte	.LFB113
 33186 019c C0000000 		.4byte	.LFE113-.LFB113
 33187 01a0 00000000 		.4byte	.LFB114
 33188 01a4 54010000 		.4byte	.LFE114-.LFB114
 33189 01a8 00000000 		.4byte	.LFB115
 33190 01ac 12000000 		.4byte	.LFE115-.LFB115
 33191 01b0 00000000 		.4byte	.LFB116
 33192 01b4 64010000 		.4byte	.LFE116-.LFB116
 33193 01b8 00000000 		.4byte	.LFB117
 33194 01bc 12000000 		.4byte	.LFE117-.LFB117
 33195 01c0 00000000 		.4byte	.LFB118
 33196 01c4 1A000000 		.4byte	.LFE118-.LFB118
 33197 01c8 00000000 		.4byte	.LFB119
 33198 01cc 0C000000 		.4byte	.LFE119-.LFB119
 33199 01d0 00000000 		.4byte	.LFB120
 33200 01d4 0C000000 		.4byte	.LFE120-.LFB120
 33201 01d8 00000000 		.4byte	0
 33202 01dc 00000000 		.4byte	0
 33203              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 705


 33204              	.Ldebug_ranges0:
 33205 0000 00000000 		.4byte	.LFB64
 33206 0004 00050000 		.4byte	.LFE64
 33207 0008 00000000 		.4byte	.LFB65
 33208 000c 22000000 		.4byte	.LFE65
 33209 0010 00000000 		.4byte	.LFB66
 33210 0014 34010000 		.4byte	.LFE66
 33211 0018 00000000 		.4byte	.LFB67
 33212 001c 2C320000 		.4byte	.LFE67
 33213 0020 00000000 		.4byte	.LFB68
 33214 0024 40190000 		.4byte	.LFE68
 33215 0028 00000000 		.4byte	.LFB69
 33216 002c 90140000 		.4byte	.LFE69
 33217 0030 00000000 		.4byte	.LFB70
 33218 0034 F40D0000 		.4byte	.LFE70
 33219 0038 00000000 		.4byte	.LFB71
 33220 003c 90000000 		.4byte	.LFE71
 33221 0040 00000000 		.4byte	.LFB72
 33222 0044 60210000 		.4byte	.LFE72
 33223 0048 00000000 		.4byte	.LFB73
 33224 004c BC030000 		.4byte	.LFE73
 33225 0050 00000000 		.4byte	.LFB74
 33226 0054 7C120000 		.4byte	.LFE74
 33227 0058 00000000 		.4byte	.LFB75
 33228 005c C8000000 		.4byte	.LFE75
 33229 0060 00000000 		.4byte	.LFB76
 33230 0064 30010000 		.4byte	.LFE76
 33231 0068 00000000 		.4byte	.LFB77
 33232 006c 28000000 		.4byte	.LFE77
 33233 0070 00000000 		.4byte	.LFB78
 33234 0074 F0000000 		.4byte	.LFE78
 33235 0078 00000000 		.4byte	.LFB79
 33236 007c 74030000 		.4byte	.LFE79
 33237 0080 00000000 		.4byte	.LFB80
 33238 0084 84000000 		.4byte	.LFE80
 33239 0088 00000000 		.4byte	.LFB81
 33240 008c 88000000 		.4byte	.LFE81
 33241 0090 00000000 		.4byte	.LFB82
 33242 0094 A0000000 		.4byte	.LFE82
 33243 0098 00000000 		.4byte	.LFB83
 33244 009c 3E000000 		.4byte	.LFE83
 33245 00a0 00000000 		.4byte	.LFB84
 33246 00a4 2E000000 		.4byte	.LFE84
 33247 00a8 00000000 		.4byte	.LFB85
 33248 00ac 98000000 		.4byte	.LFE85
 33249 00b0 00000000 		.4byte	.LFB86
 33250 00b4 80000000 		.4byte	.LFE86
 33251 00b8 00000000 		.4byte	.LFB87
 33252 00bc 5C000000 		.4byte	.LFE87
 33253 00c0 00000000 		.4byte	.LFB88
 33254 00c4 10060000 		.4byte	.LFE88
 33255 00c8 00000000 		.4byte	.LFB89
 33256 00cc 38020000 		.4byte	.LFE89
 33257 00d0 00000000 		.4byte	.LFB90
 33258 00d4 28000000 		.4byte	.LFE90
 33259 00d8 00000000 		.4byte	.LFB91
 33260 00dc 78000000 		.4byte	.LFE91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 706


 33261 00e0 00000000 		.4byte	.LFB92
 33262 00e4 B0000000 		.4byte	.LFE92
 33263 00e8 00000000 		.4byte	.LFB93
 33264 00ec 28010000 		.4byte	.LFE93
 33265 00f0 00000000 		.4byte	.LFB94
 33266 00f4 B8000000 		.4byte	.LFE94
 33267 00f8 00000000 		.4byte	.LFB95
 33268 00fc B8000000 		.4byte	.LFE95
 33269 0100 00000000 		.4byte	.LFB96
 33270 0104 5C000000 		.4byte	.LFE96
 33271 0108 00000000 		.4byte	.LFB97
 33272 010c 44020000 		.4byte	.LFE97
 33273 0110 00000000 		.4byte	.LFB98
 33274 0114 BC000000 		.4byte	.LFE98
 33275 0118 00000000 		.4byte	.LFB99
 33276 011c 5C000000 		.4byte	.LFE99
 33277 0120 00000000 		.4byte	.LFB100
 33278 0124 38010000 		.4byte	.LFE100
 33279 0128 00000000 		.4byte	.LFB101
 33280 012c EC000000 		.4byte	.LFE101
 33281 0130 00000000 		.4byte	.LFB102
 33282 0134 64000000 		.4byte	.LFE102
 33283 0138 00000000 		.4byte	.LFB103
 33284 013c A8000000 		.4byte	.LFE103
 33285 0140 00000000 		.4byte	.LFB104
 33286 0144 34000000 		.4byte	.LFE104
 33287 0148 00000000 		.4byte	.LFB105
 33288 014c 20000000 		.4byte	.LFE105
 33289 0150 00000000 		.4byte	.LFB106
 33290 0154 A0000000 		.4byte	.LFE106
 33291 0158 00000000 		.4byte	.LFB107
 33292 015c BC010000 		.4byte	.LFE107
 33293 0160 00000000 		.4byte	.LFB108
 33294 0164 60000000 		.4byte	.LFE108
 33295 0168 00000000 		.4byte	.LFB109
 33296 016c 98050000 		.4byte	.LFE109
 33297 0170 00000000 		.4byte	.LFB110
 33298 0174 8C000000 		.4byte	.LFE110
 33299 0178 00000000 		.4byte	.LFB111
 33300 017c EC000000 		.4byte	.LFE111
 33301 0180 00000000 		.4byte	.LFB112
 33302 0184 5C000000 		.4byte	.LFE112
 33303 0188 00000000 		.4byte	.LFB113
 33304 018c C0000000 		.4byte	.LFE113
 33305 0190 00000000 		.4byte	.LFB114
 33306 0194 54010000 		.4byte	.LFE114
 33307 0198 00000000 		.4byte	.LFB115
 33308 019c 12000000 		.4byte	.LFE115
 33309 01a0 00000000 		.4byte	.LFB116
 33310 01a4 64010000 		.4byte	.LFE116
 33311 01a8 00000000 		.4byte	.LFB117
 33312 01ac 12000000 		.4byte	.LFE117
 33313 01b0 00000000 		.4byte	.LFB118
 33314 01b4 1A000000 		.4byte	.LFE118
 33315 01b8 00000000 		.4byte	.LFB119
 33316 01bc 0C000000 		.4byte	.LFE119
 33317 01c0 00000000 		.4byte	.LFB120
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 707


 33318 01c4 0C000000 		.4byte	.LFE120
 33319 01c8 00000000 		.4byte	0
 33320 01cc 00000000 		.4byte	0
 33321              		.section	.debug_line,"",%progbits
 33322              	.Ldebug_line0:
 33323 0000 8B1E0000 		.section	.debug_str,"MS",%progbits,1
 33323      0200C001 
 33323      00000201 
 33323      FB0E0D00 
 33323      01010101 
 33324              	.LASF214:
 33325 0000 696E666F 		.ascii	"infoSend\000"
 33325      53656E64 
 33325      00
 33326              	.LASF266:
 33327 0009 69645F73 		.ascii	"id_str\000"
 33327      747200
 33328              	.LASF248:
 33329 0010 66736D5F 		.ascii	"fsm_activation_mode_menu\000"
 33329      61637469 
 33329      76617469 
 33329      6F6E5F6D 
 33329      6F64655F 
 33330              	.LASF25:
 33331 0029 73697A65 		.ascii	"sizetype\000"
 33331      74797065 
 33331      00
 33332              	.LASF33:
 33333 0032 434D445F 		.ascii	"CMD_INIT_MEM\000"
 33333      494E4954 
 33333      5F4D454D 
 33333      00
 33334              	.LASF337:
 33335 003f 676C5F63 		.ascii	"gl_c\000"
 33335      00
 33336              	.LASF194:
 33337 0044 77726973 		.ascii	"wrist_direction_association\000"
 33337      745F6469 
 33337      72656374 
 33337      696F6E5F 
 33337      6173736F 
 33338              	.LASF64:
 33339 0060 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 33339      545F4D4F 
 33339      44455F45 
 33339      4D475F46 
 33339      4346535F 
 33340              	.LASF36:
 33341 0078 434D445F 		.ascii	"CMD_ACTIVATE\000"
 33341      41435449 
 33341      56415445 
 33341      00
 33342              	.LASF199:
 33343 0085 75736572 		.ascii	"user\000"
 33343      00
 33344              	.LASF352:
 33345 008a 665F6572 		.ascii	"f_err_emg_1\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 708


 33345      725F656D 
 33345      675F3100 
 33346              	.LASF353:
 33347 0096 665F6572 		.ascii	"f_err_emg_2\000"
 33347      725F656D 
 33347      675F3200 
 33348              	.LASF358:
 33349 00a2 73746F70 		.ascii	"stop_master_device\000"
 33349      5F6D6173 
 33349      7465725F 
 33349      64657669 
 33349      636500
 33350              	.LASF11:
 33351 00b5 696E7433 		.ascii	"int32_t\000"
 33351      325F7400 
 33352              	.LASF369:
 33353 00bd 675F7278 		.ascii	"g_rx\000"
 33353      00
 33354              	.LASF101:
 33355 00c2 73745F64 		.ascii	"st_data\000"
 33355      61746100 
 33356              	.LASF288:
 33357 00ca 685F7469 		.ascii	"h_time\000"
 33357      6D6500
 33358              	.LASF302:
 33359 00d1 77726974 		.ascii	"writeStatus\000"
 33359      65537461 
 33359      74757300 
 33360              	.LASF15:
 33361 00dd 75696E74 		.ascii	"uint32\000"
 33361      333200
 33362              	.LASF357:
 33363 00e4 636D645F 		.ascii	"cmd_set_baudrate\000"
 33363      7365745F 
 33363      62617564 
 33363      72617465 
 33363      00
 33364              	.LASF346:
 33365 00f5 6169725F 		.ascii	"air_chambers_control\000"
 33365      6368616D 
 33365      62657273 
 33365      5F636F6E 
 33365      74726F6C 
 33366              	.LASF274:
 33367 010a 7370695F 		.ascii	"spi_read_delay_str_len\000"
 33367      72656164 
 33367      5F64656C 
 33367      61795F73 
 33367      74725F6C 
 33368              	.LASF200:
 33369 0121 4A4F595F 		.ascii	"JOY_spec\000"
 33369      73706563 
 33369      00
 33370              	.LASF276:
 33371 012a 70726570 		.ascii	"prepare_generic_info\000"
 33371      6172655F 
 33371      67656E65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 709


 33371      7269635F 
 33371      696E666F 
 33372              	.LASF137:
 33373 013f 706F735F 		.ascii	"pos_lim_inf\000"
 33373      6C696D5F 
 33373      696E6600 
 33374              	.LASF240:
 33375 014b 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 33375      4E445F4D 
 33375      4F544F52 
 33375      5F494458 
 33375      00
 33376              	.LASF330:
 33377 015c 636D645F 		.ascii	"cmd_get_inputs\000"
 33377      6765745F 
 33377      696E7075 
 33377      747300
 33378              	.LASF63:
 33379 016b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 33379      545F4D4F 
 33379      44455F45 
 33379      4D475F46 
 33379      43465300 
 33380              	.LASF141:
 33381 017f 63757272 		.ascii	"curr_lookup\000"
 33381      5F6C6F6F 
 33381      6B757000 
 33382              	.LASF109:
 33383 018b 72657374 		.ascii	"rest_counter\000"
 33383      5F636F75 
 33383      6E746572 
 33383      00
 33384              	.LASF335:
 33385 0198 636D645F 		.ascii	"cmd_get_imu_readings\000"
 33385      6765745F 
 33385      696D755F 
 33385      72656164 
 33385      696E6773 
 33386              	.LASF184:
 33387 01ad 73745F4D 		.ascii	"st_MASTER_spec\000"
 33387      41535445 
 33387      525F7370 
 33387      656300
 33388              	.LASF269:
 33389 01bc 69645F73 		.ascii	"id_str_len\000"
 33389      74725F6C 
 33389      656E00
 33390              	.LASF62:
 33391 01c7 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 33391      545F4D4F 
 33391      44455F45 
 33391      4D475F49 
 33391      4E544547 
 33392              	.LASF242:
 33393 01df 6D5F746D 		.ascii	"m_tmp\000"
 33393      7000
 33394              	.LASF287:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 710


 33395 01e5 765F6964 		.ascii	"v_idx\000"
 33395      7800
 33396              	.LASF16:
 33397 01eb 696E7438 		.ascii	"int8\000"
 33397      00
 33398              	.LASF219:
 33399 01f0 6765745F 		.ascii	"get_param_list\000"
 33399      70617261 
 33399      6D5F6C69 
 33399      737400
 33400              	.LASF315:
 33401 01ff 636D645F 		.ascii	"cmd_get_accelerations\000"
 33401      6765745F 
 33401      61636365 
 33401      6C657261 
 33401      74696F6E 
 33402              	.LASF334:
 33403 0215 636D645F 		.ascii	"cmd_get_emg\000"
 33403      6765745F 
 33403      656D6700 
 33404              	.LASF156:
 33405 0221 73745F65 		.ascii	"st_emg\000"
 33405      6D6700
 33406              	.LASF107:
 33407 0228 706F7369 		.ascii	"position_hist\000"
 33407      74696F6E 
 33407      5F686973 
 33407      7400
 33408              	.LASF207:
 33409 0236 74656D70 		.ascii	"temp_value\000"
 33409      5F76616C 
 33409      756500
 33410              	.LASF286:
 33411 0241 7374725F 		.ascii	"str_data\000"
 33411      64617461 
 33411      00
 33412              	.LASF405:
 33413 024a 72657375 		.ascii	"result\000"
 33413      6C7400
 33414              	.LASF268:
 33415 0251 7370695F 		.ascii	"spi_read_delay_str\000"
 33415      72656164 
 33415      5F64656C 
 33415      61795F73 
 33415      747200
 33416              	.LASF191:
 33417 0264 73745F57 		.ascii	"st_WR_spec\000"
 33417      525F7370 
 33417      656300
 33418              	.LASF104:
 33419 026f 72656164 		.ascii	"ready\000"
 33419      7900
 33420              	.LASF153:
 33421 0275 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 33421      6964785F 
 33421      7573655F 
 33421      666F725F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 711


 33421      636F6E74 
 33422              	.LASF49:
 33423 028d 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 33423      4745545F 
 33423      4A4F5953 
 33423      5449434B 
 33423      00
 33424              	.LASF61:
 33425 029e 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 33425      545F4D4F 
 33425      44455F45 
 33425      4D475F50 
 33425      524F504F 
 33426              	.LASF118:
 33427 02ba 7573655F 		.ascii	"use_2nd_motor_flag\000"
 33427      326E645F 
 33427      6D6F746F 
 33427      725F666C 
 33427      616700
 33428              	.LASF326:
 33429 02cd 745F7374 		.ascii	"t_start\000"
 33429      61727400 
 33430              	.LASF163:
 33431 02d5 72656164 		.ascii	"read_imu_flag\000"
 33431      5F696D75 
 33431      5F666C61 
 33431      6700
 33432              	.LASF171:
 33433 02e3 7265636F 		.ascii	"record_EMG_history_on_SD\000"
 33433      72645F45 
 33433      4D475F68 
 33433      6973746F 
 33433      72795F6F 
 33434              	.LASF373:
 33435 02fc 74696D65 		.ascii	"timer_value\000"
 33435      725F7661 
 33435      6C756500 
 33436              	.LASF4:
 33437 0308 6C6F6E67 		.ascii	"long int\000"
 33437      20696E74 
 33437      00
 33438              	.LASF197:
 33439 0311 756E7573 		.ascii	"unused_bytes1\000"
 33439      65645F62 
 33439      79746573 
 33439      3100
 33440              	.LASF356:
 33441 031f 6D6F746F 		.ascii	"motor_idx\000"
 33441      725F6964 
 33441      7800
 33442              	.LASF117:
 33443 0329 72657365 		.ascii	"reset_counters\000"
 33443      745F636F 
 33443      756E7465 
 33443      727300
 33444              	.LASF174:
 33445 0338 75736572 		.ascii	"user_emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 712


 33445      5F656D67 
 33445      00
 33446              	.LASF343:
 33447 0341 636D645F 		.ascii	"cmd_get_SD_file\000"
 33447      6765745F 
 33447      53445F66 
 33447      696C6500 
 33448              	.LASF312:
 33449 0351 7365745A 		.ascii	"setZeros\000"
 33449      65726F73 
 33449      00
 33450              	.LASF122:
 33451 035a 756E7573 		.ascii	"unused_bytes\000"
 33451      65645F62 
 33451      79746573 
 33451      00
 33452              	.LASF203:
 33453 0367 61636365 		.ascii	"accel_value\000"
 33453      6C5F7661 
 33453      6C756500 
 33454              	.LASF223:
 33455 0373 4E554D5F 		.ascii	"NUM_ITEMS\000"
 33455      4954454D 
 33455      5300
 33456              	.LASF105:
 33457 037d 73745F63 		.ascii	"st_counters\000"
 33457      6F756E74 
 33457      65727300 
 33458              	.LASF246:
 33459 0389 4D454D5F 		.ascii	"MEM_P\000"
 33459      5000
 33460              	.LASF19:
 33461 038f 666C6F61 		.ascii	"float32\000"
 33461      74333200 
 33462              	.LASF341:
 33463 0397 636D645F 		.ascii	"cmd_get_ADC_map\000"
 33463      6765745F 
 33463      4144435F 
 33463      6D617000 
 33464              	.LASF41:
 33465 03a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 33465      4745545F 
 33465      43555252 
 33465      454E5453 
 33465      00
 33466              	.LASF285:
 33467 03b8 70726570 		.ascii	"prepare_SD_EMG_history\000"
 33467      6172655F 
 33467      53445F45 
 33467      4D475F68 
 33467      6973746F 
 33468              	.LASF106:
 33469 03cf 656D675F 		.ascii	"emg_counter\000"
 33469      636F756E 
 33469      74657200 
 33470              	.LASF342:
 33471 03db 636D645F 		.ascii	"cmd_get_ADC_raw\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 713


 33471      6765745F 
 33471      4144435F 
 33471      72617700 
 33472              	.LASF390:
 33473 03eb 73645061 		.ascii	"sdParam\000"
 33473      72616D00 
 33474              	.LASF256:
 33475 03f3 6175785F 		.ascii	"aux_float2\000"
 33475      666C6F61 
 33475      743200
 33476              	.LASF329:
 33477 03fe 636D645F 		.ascii	"cmd_ping\000"
 33477      70696E67 
 33477      00
 33478              	.LASF275:
 33479 0407 7370695F 		.ascii	"spi_delay_menu_len\000"
 33479      64656C61 
 33479      795F6D65 
 33479      6E755F6C 
 33479      656E00
 33480              	.LASF254:
 33481 041a 7365745F 		.ascii	"set_custom_param\000"
 33481      63757374 
 33481      6F6D5F70 
 33481      6172616D 
 33481      00
 33482              	.LASF311:
 33483 042b 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 33483      6E69745F 
 33483      4F74626B 
 33483      41637457 
 33483      72697374 
 33484              	.LASF0:
 33485 0442 7369676E 		.ascii	"signed char\000"
 33485      65642063 
 33485      68617200 
 33486              	.LASF173:
 33487 044e 75736572 		.ascii	"user_code_string\000"
 33487      5F636F64 
 33487      655F7374 
 33487      72696E67 
 33487      00
 33488              	.LASF208:
 33489 045f 73745F63 		.ascii	"st_calib\000"
 33489      616C6962 
 33489      00
 33490              	.LASF350:
 33491 0468 6572725F 		.ascii	"err_emg_1\000"
 33491      656D675F 
 33491      3100
 33492              	.LASF300:
 33493 0472 6D656D53 		.ascii	"memStore\000"
 33493      746F7265 
 33493      00
 33494              	.LASF345:
 33495 047b 66696C65 		.ascii	"filename\000"
 33495      6E616D65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 714


 33495      00
 33496              	.LASF72:
 33497 0484 6D6F746F 		.ascii	"motor_supply_type\000"
 33497      725F7375 
 33497      70706C79 
 33497      5F747970 
 33497      6500
 33498              	.LASF328:
 33499 0496 72656164 		.ascii	"read_flag\000"
 33499      5F666C61 
 33499      6700
 33500              	.LASF382:
 33501 04a0 4144435F 		.ascii	"ADC_buf\000"
 33501      62756600 
 33502              	.LASF379:
 33503 04a8 696E7465 		.ascii	"interrupt_flag\000"
 33503      72727570 
 33503      745F666C 
 33503      616700
 33504              	.LASF280:
 33505 04b7 73746570 		.ascii	"step\000"
 33505      00
 33506              	.LASF1:
 33507 04bc 756E7369 		.ascii	"unsigned char\000"
 33507      676E6564 
 33507      20636861 
 33507      7200
 33508              	.LASF147:
 33509 04ca 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 33509      72657665 
 33509      72735F6D 
 33509      6F746F72 
 33509      5F666C61 
 33510              	.LASF362:
 33511 04e0 675F7265 		.ascii	"g_refNew\000"
 33511      664E6577 
 33511      00
 33512              	.LASF116:
 33513 04e9 72696768 		.ascii	"right_left\000"
 33513      745F6C65 
 33513      667400
 33514              	.LASF29:
 33515 04f4 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 33515      53544F52 
 33515      455F4445 
 33515      4641554C 
 33515      545F5041 
 33516              	.LASF145:
 33517 050d 656E636F 		.ascii	"encoder_line\000"
 33517      6465725F 
 33517      6C696E65 
 33517      00
 33518              	.LASF403:
 33519 051a 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 33519      73657273 
 33519      5C4D6174 
 33519      7469615C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 715


 33519      446F6375 
 33520 0548 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\Generic.cydsn\000"
 33520      656E6572 
 33520      69632D46 
 33520      572D5053 
 33520      6F43355C 
 33521              	.LASF270:
 33522 056a 6E5F696D 		.ascii	"n_imu_str_len\000"
 33522      755F7374 
 33522      725F6C65 
 33522      6E00
 33523              	.LASF273:
 33524 0578 696D755F 		.ascii	"imu_table_str_len\000"
 33524      7461626C 
 33524      655F7374 
 33524      725F6C65 
 33524      6E00
 33525              	.LASF298:
 33526 058a 76616C75 		.ascii	"value\000"
 33526      6500
 33527              	.LASF202:
 33528 0590 666C6167 		.ascii	"flags\000"
 33528      7300
 33529              	.LASF100:
 33530 0596 70726573 		.ascii	"pressure\000"
 33530      73757265 
 33530      00
 33531              	.LASF37:
 33532 059f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 33532      4745545F 
 33532      41435449 
 33532      56415445 
 33532      00
 33533              	.LASF22:
 33534 05b0 63686172 		.ascii	"char\000"
 33534      00
 33535              	.LASF140:
 33536 05b5 6D61785F 		.ascii	"max_step_pos\000"
 33536      73746570 
 33536      5F706F73 
 33536      00
 33537              	.LASF395:
 33538 05c2 675F696D 		.ascii	"g_imu\000"
 33538      7500
 33539              	.LASF304:
 33540 05c8 7265745F 		.ascii	"ret_val\000"
 33540      76616C00 
 33541              	.LASF253:
 33542 05d0 6D656E75 		.ascii	"menu_idx\000"
 33542      5F696478 
 33542      00
 33543              	.LASF262:
 33544 05d9 73746172 		.ascii	"start_byte\000"
 33544      745F6279 
 33544      746500
 33545              	.LASF259:
 33546 05e4 6E756D5F 		.ascii	"num_mag_cal_params\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 716


 33546      6D61675F 
 33546      63616C5F 
 33546      70617261 
 33546      6D7300
 33547              	.LASF146:
 33548 05f7 70776D5F 		.ascii	"pwm_rate_limiter\000"
 33548      72617465 
 33548      5F6C696D 
 33548      69746572 
 33548      00
 33549              	.LASF126:
 33550 0608 6B5F645F 		.ascii	"k_d_c\000"
 33550      6300
 33551              	.LASF99:
 33552 060e 73745F66 		.ascii	"st_fb_meas\000"
 33552      625F6D65 
 33552      617300
 33553              	.LASF216:
 33554 0619 7061636B 		.ascii	"packet_string\000"
 33554      65745F73 
 33554      7472696E 
 33554      6700
 33555              	.LASF151:
 33556 0627 6D5F6D75 		.ascii	"m_mult\000"
 33556      6C7400
 33557              	.LASF125:
 33558 062e 6B5F695F 		.ascii	"k_i_c\000"
 33558      6300
 33559              	.LASF301:
 33560 0634 64697370 		.ascii	"displacement\000"
 33560      6C616365 
 33560      6D656E74 
 33560      00
 33561              	.LASF295:
 33562 0641 64617461 		.ascii	"data_length\000"
 33562      5F6C656E 
 33562      67746800 
 33563              	.LASF138:
 33564 064d 706F735F 		.ascii	"pos_lim_sup\000"
 33564      6C696D5F 
 33564      73757000 
 33565              	.LASF159:
 33566 0659 656D675F 		.ascii	"emg_speed\000"
 33566      73706565 
 33566      6400
 33567              	.LASF178:
 33568 0663 72657374 		.ascii	"rest_vel\000"
 33568      5F76656C 
 33568      00
 33569              	.LASF229:
 33570 066c 7061636B 		.ascii	"packet_data\000"
 33570      65745F64 
 33570      61746100 
 33571              	.LASF113:
 33572 0678 73745F64 		.ascii	"st_device\000"
 33572      65766963 
 33572      6500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 717


 33573              	.LASF388:
 33574 0682 7046696C 		.ascii	"pFile\000"
 33574      6500
 33575              	.LASF170:
 33576 0688 4144435F 		.ascii	"ADC_conf\000"
 33576      636F6E66 
 33576      00
 33577              	.LASF292:
 33578 0691 636F6D6D 		.ascii	"commWrite\000"
 33578      57726974 
 33578      6500
 33579              	.LASF359:
 33580 069b 64656163 		.ascii	"deactivate_slaves\000"
 33580      74697661 
 33580      74655F73 
 33580      6C617665 
 33580      7300
 33581              	.LASF303:
 33582 06ad 70616765 		.ascii	"pages\000"
 33582      7300
 33583              	.LASF307:
 33584 06b3 6D656D49 		.ascii	"memInit\000"
 33584      6E697400 
 33585              	.LASF128:
 33586 06bb 6B5F695F 		.ascii	"k_i_dl\000"
 33586      646C00
 33587              	.LASF38:
 33588 06c2 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 33588      5345545F 
 33588      494E5055 
 33588      545300
 33589              	.LASF102:
 33590 06d1 62756666 		.ascii	"buffer\000"
 33590      657200
 33591              	.LASF130:
 33592 06d8 6B5F705F 		.ascii	"k_p_c_dl\000"
 33592      635F646C 
 33592      00
 33593              	.LASF313:
 33594 06e1 636D645F 		.ascii	"cmd_get_measurements\000"
 33594      6765745F 
 33594      6D656173 
 33594      7572656D 
 33594      656E7473 
 33595              	.LASF211:
 33596 06f6 73706565 		.ascii	"speed\000"
 33596      6400
 33597              	.LASF215:
 33598 06fc 72785F63 		.ascii	"rx_cmd\000"
 33598      6D6400
 33599              	.LASF87:
 33600 0703 54595045 		.ascii	"TYPE_DOUBLE\000"
 33600      5F444F55 
 33600      424C4500 
 33601              	.LASF347:
 33602 070f 736C6176 		.ascii	"slave_motor_idx\000"
 33602      655F6D6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 718


 33602      746F725F 
 33602      69647800 
 33603              	.LASF364:
 33604 071f 675F6D65 		.ascii	"g_meas\000"
 33604      617300
 33605              	.LASF387:
 33606 0726 456E636F 		.ascii	"Encoder_Check\000"
 33606      6465725F 
 33606      43686563 
 33606      6B00
 33607              	.LASF318:
 33608 0734 6C617374 		.ascii	"last_aux_int16\000"
 33608      5F617578 
 33608      5F696E74 
 33608      313600
 33609              	.LASF76:
 33610 0743 41434B5F 		.ascii	"ACK_ERROR\000"
 33610      4552524F 
 33610      5200
 33611              	.LASF384:
 33612 074d 64617461 		.ascii	"data_encoder_raw\000"
 33612      5F656E63 
 33612      6F646572 
 33612      5F726177 
 33612      00
 33613              	.LASF59:
 33614 075e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 33614      545F4D4F 
 33614      44455F45 
 33614      58544552 
 33614      4E414C00 
 33615              	.LASF244:
 33616 0772 696E6465 		.ascii	"index\000"
 33616      7800
 33617              	.LASF189:
 33618 0778 6D617869 		.ascii	"maximum_pressure_kPa\000"
 33618      6D756D5F 
 33618      70726573 
 33618      73757265 
 33618      5F6B5061 
 33619              	.LASF179:
 33620 078d 72657374 		.ascii	"rest_position_flag\000"
 33620      5F706F73 
 33620      6974696F 
 33620      6E5F666C 
 33620      616700
 33621              	.LASF181:
 33622 07a0 6A6F7973 		.ascii	"joystick_closure_speed\000"
 33622      7469636B 
 33622      5F636C6F 
 33622      73757265 
 33622      5F737065 
 33623              	.LASF344:
 33624 07b7 66696C65 		.ascii	"filename_length\000"
 33624      6E616D65 
 33624      5F6C656E 
 33624      67746800 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 719


 33625              	.LASF131:
 33626 07c7 6B5F695F 		.ascii	"k_i_c_dl\000"
 33626      635F646C 
 33626      00
 33627              	.LASF324:
 33628 07d0 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 33628      52656164 
 33628      52657343 
 33628      75727246 
 33628      726F6D53 
 33629              	.LASF323:
 33630 07e6 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 33630      6765745F 
 33630      63757272 
 33630      656E7473 
 33630      5F666F72 
 33631              	.LASF265:
 33632 0800 6D61675F 		.ascii	"mag_param_str\000"
 33632      70617261 
 33632      6D5F7374 
 33632      7200
 33633              	.LASF381:
 33634 080e 72657365 		.ascii	"reset_PSoC_flag\000"
 33634      745F5053 
 33634      6F435F66 
 33634      6C616700 
 33635              	.LASF354:
 33636 081e 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 33636      5F616374 
 33636      5F777269 
 33636      73745F63 
 33636      6F6E7472 
 33637              	.LASF88:
 33638 0835 54595045 		.ascii	"TYPE_STRING\000"
 33638      5F535452 
 33638      494E4700 
 33639              	.LASF71:
 33640 0841 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 33640      5F414E44 
 33640      5F504F53 
 33640      5F434F4E 
 33640      54524F4C 
 33641              	.LASF28:
 33642 0856 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 33642      53544F52 
 33642      455F5041 
 33642      52414D53 
 33642      00
 33643              	.LASF226:
 33644 0867 50415241 		.ascii	"PARAMS_STR\000"
 33644      4D535F53 
 33644      545200
 33645              	.LASF209:
 33646 0872 656E6162 		.ascii	"enabled\000"
 33646      6C656400 
 33647              	.LASF7:
 33648 087a 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 720


 33648      20756E73 
 33648      69676E65 
 33648      6420696E 
 33648      7400
 33649              	.LASF111:
 33650 088c 746F7461 		.ascii	"total_time_on\000"
 33650      6C5F7469 
 33650      6D655F6F 
 33650      6E00
 33651              	.LASF32:
 33652 089a 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 33652      424F4F54 
 33652      4C4F4144 
 33652      455200
 33653              	.LASF183:
 33654 08a9 6A6F7973 		.ascii	"joystick_gains\000"
 33654      7469636B 
 33654      5F676169 
 33654      6E7300
 33655              	.LASF95:
 33656 08b8 686F6C64 		.ascii	"hold_curr\000"
 33656      5F637572 
 33656      7200
 33657              	.LASF65:
 33658 08c2 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 33658      545F4D4F 
 33658      44455F4A 
 33658      4F595354 
 33658      49434B00 
 33659              	.LASF112:
 33660 08d6 746F7461 		.ascii	"total_time_rest\000"
 33660      6C5F7469 
 33660      6D655F72 
 33660      65737400 
 33661              	.LASF218:
 33662 08e6 7374725F 		.ascii	"str_sd_data\000"
 33662      73645F64 
 33662      61746100 
 33663              	.LASF133:
 33664 08f2 61637469 		.ascii	"activ\000"
 33664      7600
 33665              	.LASF228:
 33666 08f8 4D454E55 		.ascii	"MENU_STR\000"
 33666      5F535452 
 33666      00
 33667              	.LASF150:
 33668 0901 6D5F6F66 		.ascii	"m_off\000"
 33668      6600
 33669              	.LASF77:
 33670 0907 41434B5F 		.ascii	"ACK_OK\000"
 33670      4F4B00
 33671              	.LASF79:
 33672 090e 54595045 		.ascii	"TYPE_FLAG\000"
 33672      5F464C41 
 33672      4700
 33673              	.LASF206:
 33674 0918 71756174 		.ascii	"quat_value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 721


 33674      5F76616C 
 33674      756500
 33675              	.LASF261:
 33676 0923 7061636B 		.ascii	"packet_length\000"
 33676      65745F6C 
 33676      656E6774 
 33676      6800
 33677              	.LASF176:
 33678 0931 72657374 		.ascii	"rest_pos\000"
 33678      5F706F73 
 33678      00
 33679              	.LASF90:
 33680 093a 63757272 		.ascii	"curr\000"
 33680      00
 33681              	.LASF143:
 33682 093f 696E7075 		.ascii	"input_mode\000"
 33682      745F6D6F 
 33682      646500
 33683              	.LASF69:
 33684 094a 434F4E54 		.ascii	"CONTROL_PWM\000"
 33684      524F4C5F 
 33684      50574D00 
 33685              	.LASF43:
 33686 0956 434D445F 		.ascii	"CMD_GET_EMG\000"
 33686      4745545F 
 33686      454D4700 
 33687              	.LASF308:
 33688 0962 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 33688      6E69745F 
 33688      536F6674 
 33688      48616E64 
 33688      50726F00 
 33689              	.LASF31:
 33690 0976 434D445F 		.ascii	"CMD_GET_INFO\000"
 33690      4745545F 
 33690      494E464F 
 33690      00
 33691              	.LASF257:
 33692 0983 6765745F 		.ascii	"get_IMU_param_list\000"
 33692      494D555F 
 33692      70617261 
 33692      6D5F6C69 
 33692      737400
 33693              	.LASF338:
 33694 0996 73696E67 		.ascii	"single_packet\000"
 33694      6C655F70 
 33694      61636B65 
 33694      7400
 33695              	.LASF260:
 33696 09a4 66697273 		.ascii	"first_imu_parameter\000"
 33696      745F696D 
 33696      755F7061 
 33696      72616D65 
 33696      74657200 
 33697              	.LASF42:
 33698 09b8 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 33698      4745545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 722


 33698      43555252 
 33698      5F414E44 
 33698      5F4D4541 
 33699              	.LASF401:
 33700 09ce 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 33700      43313120 
 33700      352E342E 
 33700      31203230 
 33700      31363036 
 33701 0a01 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 33701      20726576 
 33701      6973696F 
 33701      6E203233 
 33701      37373135 
 33702 0a34 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 33702      66756E63 
 33702      74696F6E 
 33702      2D736563 
 33702      74696F6E 
 33703              	.LASF92:
 33704 0a5c 73745F72 		.ascii	"st_ref\000"
 33704      656600
 33705              	.LASF316:
 33706 0a63 636D645F 		.ascii	"cmd_get_joystick\000"
 33706      6765745F 
 33706      6A6F7973 
 33706      7469636B 
 33706      00
 33707              	.LASF47:
 33708 0a74 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 33708      5345545F 
 33708      43554646 
 33708      5F494E50 
 33708      55545300 
 33709              	.LASF175:
 33710 0a88 73745F53 		.ascii	"st_SH_spec\000"
 33710      485F7370 
 33710      656300
 33711              	.LASF372:
 33712 0a93 63616C69 		.ascii	"calib\000"
 33712      6200
 33713              	.LASF6:
 33714 0a99 5F5F7569 		.ascii	"__uint32_t\000"
 33714      6E743332 
 33714      5F7400
 33715              	.LASF8:
 33716 0aa4 6C6F6E67 		.ascii	"long long int\000"
 33716      206C6F6E 
 33716      6720696E 
 33716      7400
 33717              	.LASF67:
 33718 0ab2 53485F63 		.ascii	"SH_control_mode\000"
 33718      6F6E7472 
 33718      6F6C5F6D 
 33718      6F646500 
 33719              	.LASF81:
 33720 0ac2 54595045 		.ascii	"TYPE_UINT8\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 723


 33720      5F55494E 
 33720      543800
 33721              	.LASF322:
 33722 0acd 636D645F 		.ascii	"cmd_get_currents\000"
 33722      6765745F 
 33722      63757272 
 33722      656E7473 
 33722      00
 33723              	.LASF74:
 33724 0ade 4D41584F 		.ascii	"MAXON_12V\000"
 33724      4E5F3132 
 33724      5600
 33725              	.LASF380:
 33726 0ae8 6368616E 		.ascii	"change_ext_ref_flag\000"
 33726      67655F65 
 33726      78745F72 
 33726      65665F66 
 33726      6C616700 
 33727              	.LASF21:
 33728 0afc 646F7562 		.ascii	"double\000"
 33728      6C6500
 33729              	.LASF56:
 33730 0b03 434D445F 		.ascii	"CMD_GET_SD_SINGLE_FILE\000"
 33730      4745545F 
 33730      53445F53 
 33730      494E474C 
 33730      455F4649 
 33731              	.LASF149:
 33732 0b1a 456E635F 		.ascii	"Enc_raw_read_conf\000"
 33732      7261775F 
 33732      72656164 
 33732      5F636F6E 
 33732      6600
 33733              	.LASF212:
 33734 0b2c 72657065 		.ascii	"repetitions\000"
 33734      74697469 
 33734      6F6E7300 
 33735              	.LASF139:
 33736 0b38 6D61785F 		.ascii	"max_step_neg\000"
 33736      73746570 
 33736      5F6E6567 
 33736      00
 33737              	.LASF399:
 33738 0b45 656D675F 		.ascii	"emg_history_next_idx\000"
 33738      68697374 
 33738      6F72795F 
 33738      6E657874 
 33738      5F696478 
 33739              	.LASF186:
 33740 0b5a 736C6176 		.ascii	"slave_ID\000"
 33740      655F4944 
 33740      00
 33741              	.LASF378:
 33742 0b63 72657365 		.ascii	"reset_last_value_flag\000"
 33742      745F6C61 
 33742      73745F76 
 33742      616C7565 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 724


 33742      5F666C61 
 33743              	.LASF227:
 33744 0b79 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 33744      4F4D5F50 
 33744      4152414D 
 33744      5F474554 
 33744      00
 33745              	.LASF20:
 33746 0b8a 666C6F61 		.ascii	"float\000"
 33746      7400
 33747              	.LASF165:
 33748 0b90 494D555F 		.ascii	"IMU_conf\000"
 33748      636F6E66 
 33748      00
 33749              	.LASF245:
 33750 0b99 50415241 		.ascii	"PARAM_IDX\000"
 33750      4D5F4944 
 33750      5800
 33751              	.LASF96:
 33752 0ba3 73745F61 		.ascii	"st_adc_meas\000"
 33752      64635F6D 
 33752      65617300 
 33753              	.LASF241:
 33754 0baf 6D5F6164 		.ascii	"m_addr\000"
 33754      647200
 33755              	.LASF371:
 33756 0bb6 635F6D65 		.ascii	"c_mem\000"
 33756      6D00
 33757              	.LASF294:
 33758 0bbc 64617461 		.ascii	"data_array\000"
 33758      5F617272 
 33758      617900
 33759              	.LASF10:
 33760 0bc7 756E7369 		.ascii	"unsigned int\000"
 33760      676E6564 
 33760      20696E74 
 33760      00
 33761              	.LASF351:
 33762 0bd4 6572725F 		.ascii	"err_emg_2\000"
 33762      656D675F 
 33762      3200
 33763              	.LASF309:
 33764 0bde 6D656D49 		.ascii	"memInit_Master\000"
 33764      6E69745F 
 33764      4D617374 
 33764      657200
 33765              	.LASF230:
 33766 0bed 7061636B 		.ascii	"packet_lenght\000"
 33766      65745F6C 
 33766      656E6768 
 33766      7400
 33767              	.LASF297:
 33768 0bfb 73656E64 		.ascii	"sendAcknowledgment\000"
 33768      41636B6E 
 33768      6F776C65 
 33768      64676D65 
 33768      6E7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 725


 33769              	.LASF282:
 33770 0c0e 70726570 		.ascii	"prepare_SD_legend\000"
 33770      6172655F 
 33770      53445F6C 
 33770      6567656E 
 33770      6400
 33771              	.LASF396:
 33772 0c20 4D616743 		.ascii	"MagCal\000"
 33772      616C00
 33773              	.LASF57:
 33774 0c27 53485F63 		.ascii	"SH_command\000"
 33774      6F6D6D61 
 33774      6E6400
 33775              	.LASF83:
 33776 0c32 54595045 		.ascii	"TYPE_UINT16\000"
 33776      5F55494E 
 33776      54313600 
 33777              	.LASF196:
 33778 0c3e 666C6167 		.ascii	"flag\000"
 33778      00
 33779              	.LASF317:
 33780 0c43 636D645F 		.ascii	"cmd_set_inputs\000"
 33780      7365745F 
 33780      696E7075 
 33780      747300
 33781              	.LASF144:
 33782 0c52 636F6E74 		.ascii	"control_mode\000"
 33782      726F6C5F 
 33782      6D6F6465 
 33782      00
 33783              	.LASF332:
 33784 0c5f 6F66665F 		.ascii	"off_1\000"
 33784      3100
 33785              	.LASF60:
 33786 0c65 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 33786      545F4D4F 
 33786      44455F45 
 33786      4E434F44 
 33786      45523300 
 33787              	.LASF293:
 33788 0c79 636F6D6D 		.ascii	"commWriteID\000"
 33788      57726974 
 33788      65494400 
 33789              	.LASF52:
 33790 0c85 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 33790      4745545F 
 33790      454E434F 
 33790      4445525F 
 33790      434F4E46 
 33791              	.LASF162:
 33792 0c9a 73745F69 		.ascii	"st_imu\000"
 33792      6D7500
 33793              	.LASF320:
 33794 0ca1 636D645F 		.ascii	"cmd_get_activate\000"
 33794      6765745F 
 33794      61637469 
 33794      76617465 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 726


 33794      00
 33795              	.LASF348:
 33796 0cb2 656D675F 		.ascii	"emg_activation_velocity_fsm\000"
 33796      61637469 
 33796      76617469 
 33796      6F6E5F76 
 33796      656C6F63 
 33797              	.LASF232:
 33798 0cce 73747269 		.ascii	"string_lenght\000"
 33798      6E675F6C 
 33798      656E6768 
 33798      7400
 33799              	.LASF86:
 33800 0cdc 54595045 		.ascii	"TYPE_FLOAT\000"
 33800      5F464C4F 
 33800      415400
 33801              	.LASF250:
 33802 0ce7 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 33802      4F4D5F50 
 33802      4152414D 
 33802      5F534554 
 33802      5F4C4953 
 33803              	.LASF224:
 33804 0cfd 4E554D5F 		.ascii	"NUM_STRUCT\000"
 33804      53545255 
 33804      435400
 33805              	.LASF394:
 33806 0d08 73696E67 		.ascii	"single_imu_size\000"
 33806      6C655F69 
 33806      6D755F73 
 33806      697A6500 
 33807              	.LASF255:
 33808 0d18 6175785F 		.ascii	"aux_uchar\000"
 33808      75636861 
 33808      7200
 33809              	.LASF97:
 33810 0d22 6164645F 		.ascii	"add_emg\000"
 33810      656D6700 
 33811              	.LASF82:
 33812 0d2a 54595045 		.ascii	"TYPE_INT16\000"
 33812      5F494E54 
 33812      313600
 33813              	.LASF236:
 33814 0d35 6175785F 		.ascii	"aux_uint16\000"
 33814      75696E74 
 33814      313600
 33815              	.LASF157:
 33816 0d40 656D675F 		.ascii	"emg_threshold\000"
 33816      74687265 
 33816      73686F6C 
 33816      6400
 33817              	.LASF46:
 33818 0d4e 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 33818      4745545F 
 33818      43555252 
 33818      5F444946 
 33818      4600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 727


 33819              	.LASF108:
 33820 0d60 63757272 		.ascii	"current_hist\000"
 33820      656E745F 
 33820      68697374 
 33820      00
 33821              	.LASF70:
 33822 0d6d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 33822      524F4C5F 
 33822      43555252 
 33822      454E5400 
 33823              	.LASF24:
 33824 0d7d 6C6F6E67 		.ascii	"long double\000"
 33824      20646F75 
 33824      626C6500 
 33825              	.LASF85:
 33826 0d89 54595045 		.ascii	"TYPE_UINT32\000"
 33826      5F55494E 
 33826      54333200 
 33827              	.LASF187:
 33828 0d95 73745F46 		.ascii	"st_FB_spec\000"
 33828      425F7370 
 33828      656300
 33829              	.LASF221:
 33830 0da0 5641525F 		.ascii	"VAR_P\000"
 33830      5000
 33831              	.LASF249:
 33832 0da6 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 33832      4F4D5F50 
 33832      4152414D 
 33832      5F474554 
 33832      5F4C4953 
 33833              	.LASF154:
 33834 0dbc 6D6F746F 		.ascii	"motor_handle_ratio\000"
 33834      725F6861 
 33834      6E646C65 
 33834      5F726174 
 33834      696F00
 33835              	.LASF296:
 33836 0dcf 63686563 		.ascii	"checksum\000"
 33836      6B73756D 
 33836      00
 33837              	.LASF363:
 33838 0dd8 675F7265 		.ascii	"g_refOld\000"
 33838      664F6C64 
 33838      00
 33839              	.LASF35:
 33840 0de1 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 33840      48414E44 
 33840      5F43414C 
 33840      49425241 
 33840      544500
 33841              	.LASF204:
 33842 0df4 6779726F 		.ascii	"gyro_value\000"
 33842      5F76616C 
 33842      756500
 33843              	.LASF167:
 33844 0dff 63757272 		.ascii	"curr_time\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 728


 33844      5F74696D 
 33844      6500
 33845              	.LASF152:
 33846 0e09 646F7562 		.ascii	"double_encoder_on_off\000"
 33846      6C655F65 
 33846      6E636F64 
 33846      65725F6F 
 33846      6E5F6F66 
 33847              	.LASF355:
 33848 0e1f 64726976 		.ascii	"drive_slave\000"
 33848      655F736C 
 33848      61766500 
 33849              	.LASF164:
 33850 0e2b 5350495F 		.ascii	"SPI_read_delay\000"
 33850      72656164 
 33850      5F64656C 
 33850      617900
 33851              	.LASF75:
 33852 0e3a 61636B6E 		.ascii	"acknowledgment_values\000"
 33852      6F776C65 
 33852      64676D65 
 33852      6E745F76 
 33852      616C7565 
 33853              	.LASF239:
 33854 0e50 4D4F544F 		.ascii	"MOTOR_IDX\000"
 33854      525F4944 
 33854      5800
 33855              	.LASF306:
 33856 0e5a 6D656D52 		.ascii	"memRestore\000"
 33856      6573746F 
 33856      726500
 33857              	.LASF263:
 33858 0e65 6E5F696D 		.ascii	"n_imu_str\000"
 33858      755F7374 
 33858      7200
 33859              	.LASF277:
 33860 0e6f 696E666F 		.ascii	"info_string\000"
 33860      5F737472 
 33860      696E6700 
 33861              	.LASF283:
 33862 0e7b 70726570 		.ascii	"prepare_SD_info\000"
 33862      6172655F 
 33862      53445F69 
 33862      6E666F00 
 33863              	.LASF349:
 33864 0e8b 66736D5F 		.ascii	"fsm_state\000"
 33864      73746174 
 33864      6500
 33865              	.LASF9:
 33866 0e95 6C6F6E67 		.ascii	"long long unsigned int\000"
 33866      206C6F6E 
 33866      6720756E 
 33866      7369676E 
 33866      65642069 
 33867              	.LASF84:
 33868 0eac 54595045 		.ascii	"TYPE_INT32\000"
 33868      5F494E54 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 729


 33868      333200
 33869              	.LASF238:
 33870 0eb7 6175785F 		.ascii	"aux_uint32\000"
 33870      75696E74 
 33870      333200
 33871              	.LASF103:
 33872 0ec2 6C656E67 		.ascii	"length\000"
 33872      746800
 33873              	.LASF251:
 33874 0ec9 55534552 		.ascii	"USER_ID_PARAM\000"
 33874      5F49445F 
 33874      50415241 
 33874      4D00
 33875              	.LASF201:
 33876 0ed7 73745F69 		.ascii	"st_imu_data\000"
 33876      6D755F64 
 33876      61746100 
 33877              	.LASF205:
 33878 0ee3 6D61675F 		.ascii	"mag_value\000"
 33878      76616C75 
 33878      6500
 33879              	.LASF91:
 33880 0eed 6F6E6F66 		.ascii	"onoff\000"
 33880      6600
 33881              	.LASF45:
 33882 0ef3 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 33882      4745545F 
 33882      41434345 
 33882      4C00
 33883              	.LASF314:
 33884 0f01 636D645F 		.ascii	"cmd_get_velocities\000"
 33884      6765745F 
 33884      76656C6F 
 33884      63697469 
 33884      657300
 33885              	.LASF305:
 33886 0f14 6D656D52 		.ascii	"memRecall\000"
 33886      6563616C 
 33886      6C00
 33887              	.LASF374:
 33888 0f1e 74696D65 		.ascii	"timer_value0\000"
 33888      725F7661 
 33888      6C756530 
 33888      00
 33889              	.LASF48:
 33890 0f2b 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 33890      5345545F 
 33890      42415544 
 33890      52415445 
 33890      00
 33891              	.LASF124:
 33892 0f3c 6B5F705F 		.ascii	"k_p_c\000"
 33892      6300
 33893              	.LASF267:
 33894 0f42 696D755F 		.ascii	"imu_table_str\000"
 33894      7461626C 
 33894      655F7374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 730


 33894      7200
 33895              	.LASF375:
 33896 0f50 6465765F 		.ascii	"dev_tension\000"
 33896      74656E73 
 33896      696F6E00 
 33897              	.LASF135:
 33898 0f5c 6D6F746F 		.ascii	"motor_driver_type\000"
 33898      725F6472 
 33898      69766572 
 33898      5F747970 
 33898      6500
 33899              	.LASF333:
 33900 0f6e 6D756C74 		.ascii	"mult_1\000"
 33900      5F3100
 33901              	.LASF279:
 33902 0f75 70726570 		.ascii	"prepare_counter_info\000"
 33902      6172655F 
 33902      636F756E 
 33902      7465725F 
 33902      696E666F 
 33903              	.LASF23:
 33904 0f8a 72656738 		.ascii	"reg8\000"
 33904      00
 33905              	.LASF190:
 33906 0f8f 70726F70 		.ascii	"prop_err_fb_gain\000"
 33906      5F657272 
 33906      5F66625F 
 33906      6761696E 
 33906      00
 33907              	.LASF290:
 33908 0fa0 636F6D6D 		.ascii	"commWrite_old_id\000"
 33908      57726974 
 33908      655F6F6C 
 33908      645F6964 
 33908      00
 33909              	.LASF243:
 33910 0fb1 6D616E61 		.ascii	"manage_param_list\000"
 33910      67655F70 
 33910      6172616D 
 33910      5F6C6973 
 33910      7400
 33911              	.LASF30:
 33912 0fc3 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 33912      52455354 
 33912      4F52455F 
 33912      50415241 
 33912      4D5300
 33913              	.LASF389:
 33914 0fd6 73644669 		.ascii	"sdFile\000"
 33914      6C6500
 33915              	.LASF281:
 33916 0fdd 70726570 		.ascii	"prepare_SD_param_info\000"
 33916      6172655F 
 33916      53445F70 
 33916      6172616D 
 33916      5F696E66 
 33917              	.LASF325:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 731


 33918 0ff3 63757272 		.ascii	"curr_diff\000"
 33918      5F646966 
 33918      6600
 33919              	.LASF185:
 33920 0ffd 736C6176 		.ascii	"slave_comm_active\000"
 33920      655F636F 
 33920      6D6D5F61 
 33920      63746976 
 33920      6500
 33921              	.LASF284:
 33922 100f 70726570 		.ascii	"prepare_SD_EMG_History_legend\000"
 33922      6172655F 
 33922      53445F45 
 33922      4D475F48 
 33922      6973746F 
 33923              	.LASF291:
 33924 102d 6F6C645F 		.ascii	"old_id\000"
 33924      696400
 33925              	.LASF404:
 33926 1034 5F5F5245 		.ascii	"__REV16\000"
 33926      56313600 
 33927              	.LASF385:
 33928 103c 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 33928      636F6465 
 33928      725F4C69 
 33928      6E655F43 
 33928      6F6E6E65 
 33929              	.LASF121:
 33930 1055 6465765F 		.ascii	"dev_type\000"
 33930      74797065 
 33930      00
 33931              	.LASF172:
 33932 105e 73745F75 		.ascii	"st_user\000"
 33932      73657200 
 33933              	.LASF321:
 33934 1066 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 33934      6765745F 
 33934      63757272 
 33934      5F616E64 
 33934      5F6D6561 
 33935              	.LASF155:
 33936 107c 67656172 		.ascii	"gears_params\000"
 33936      735F7061 
 33936      72616D73 
 33936      00
 33937              	.LASF166:
 33938 1089 73745F65 		.ascii	"st_expansion\000"
 33938      7870616E 
 33938      73696F6E 
 33938      00
 33939              	.LASF160:
 33940 1096 656D675F 		.ascii	"emg_calibration_flag\000"
 33940      63616C69 
 33940      62726174 
 33940      696F6E5F 
 33940      666C6167 
 33941              	.LASF93:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 732


 33942 10ab 73745F6D 		.ascii	"st_meas\000"
 33942      65617300 
 33943              	.LASF55:
 33944 10b3 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 33944      4745545F 
 33944      4144435F 
 33944      52415700 
 33945              	.LASF182:
 33946 10c3 6A6F7973 		.ascii	"joystick_threshold\000"
 33946      7469636B 
 33946      5F746872 
 33946      6573686F 
 33946      6C6400
 33947              	.LASF73:
 33948 10d6 4D41584F 		.ascii	"MAXON_24V\000"
 33948      4E5F3234 
 33948      5600
 33949              	.LASF66:
 33950 10e0 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 33950      545F4D4F 
 33950      44455F45 
 33950      4D475F50 
 33950      524F504F 
 33951              	.LASF51:
 33952 10ff 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 33952      4745545F 
 33952      494D555F 
 33952      50415241 
 33952      4D00
 33953              	.LASF368:
 33954 1111 675F6662 		.ascii	"g_fb_meas\000"
 33954      5F6D6561 
 33954      7300
 33955              	.LASF53:
 33956 111b 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 33956      4745545F 
 33956      454E434F 
 33956      4445525F 
 33956      52415700 
 33957              	.LASF331:
 33958 112f 636D645F 		.ascii	"cmd_store_params\000"
 33958      73746F72 
 33958      655F7061 
 33958      72616D73 
 33958      00
 33959              	.LASF370:
 33960 1140 675F6D65 		.ascii	"g_mem\000"
 33960      6D00
 33961              	.LASF40:
 33962 1146 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 33962      4745545F 
 33962      4D454153 
 33962      5552454D 
 33962      454E5453 
 33963              	.LASF367:
 33964 115b 675F6164 		.ascii	"g_adc_measOld\000"
 33964      635F6D65 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 733


 33964      61734F6C 
 33964      6400
 33965              	.LASF340:
 33966 1169 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 33966      6765745F 
 33966      656E636F 
 33966      6465725F 
 33966      72617700 
 33967              	.LASF13:
 33968 117d 75696E74 		.ascii	"uint8\000"
 33968      3800
 33969              	.LASF213:
 33970 1183 636F6D6D 		.ascii	"commProcess\000"
 33970      50726F63 
 33970      65737300 
 33971              	.LASF180:
 33972 118f 73745F4A 		.ascii	"st_JOY_spec\000"
 33972      4F595F73 
 33972      70656300 
 33973              	.LASF2:
 33974 119b 73686F72 		.ascii	"short int\000"
 33974      7420696E 
 33974      7400
 33975              	.LASF310:
 33976 11a5 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 33976      6E69745F 
 33976      41697243 
 33976      68616D62 
 33976      65727346 
 33977              	.LASF271:
 33978 11bb 6964735F 		.ascii	"ids_str_len\000"
 33978      7374725F 
 33978      6C656E00 
 33979              	.LASF129:
 33980 11c7 6B5F645F 		.ascii	"k_d_dl\000"
 33980      646C00
 33981              	.LASF231:
 33982 11ce 6964785F 		.ascii	"idx_menu\000"
 33982      6D656E75 
 33982      00
 33983              	.LASF98:
 33984 11d7 6A6F7973 		.ascii	"joystick\000"
 33984      7469636B 
 33984      00
 33985              	.LASF198:
 33986 11e0 6D6F746F 		.ascii	"motor\000"
 33986      7200
 33987              	.LASF391:
 33988 11e6 4E5F494D 		.ascii	"N_IMU_Connected\000"
 33988      555F436F 
 33988      6E6E6563 
 33988      74656400 
 33989              	.LASF39:
 33990 11f6 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 33990      4745545F 
 33990      494E5055 
 33990      545300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 734


 33991              	.LASF114:
 33992 1205 68775F6D 		.ascii	"hw_maint_date\000"
 33992      61696E74 
 33992      5F646174 
 33992      6500
 33993              	.LASF264:
 33994 1213 6964735F 		.ascii	"ids_str\000"
 33994      73747200 
 33995              	.LASF54:
 33996 121b 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 33996      4745545F 
 33996      4144435F 
 33996      434F4E46 
 33996      00
 33997              	.LASF27:
 33998 122c 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 33998      5345545F 
 33998      5A45524F 
 33998      5300
 33999              	.LASF272:
 34000 123a 6D61675F 		.ascii	"mag_param_str_len\000"
 34000      70617261 
 34000      6D5F7374 
 34000      725F6C65 
 34000      6E00
 34001              	.LASF258:
 34002 124c 6E756D5F 		.ascii	"num_imus_id_params\000"
 34002      696D7573 
 34002      5F69645F 
 34002      70617261 
 34002      6D7300
 34003              	.LASF235:
 34004 125f 6175785F 		.ascii	"aux_int16\000"
 34004      696E7431 
 34004      3600
 34005              	.LASF398:
 34006 1269 656D675F 		.ascii	"emg_history\000"
 34006      68697374 
 34006      6F727900 
 34007              	.LASF400:
 34008 1275 45455052 		.ascii	"EEPROM_ADDR\000"
 34008      4F4D5F41 
 34008      44445200 
 34009              	.LASF115:
 34010 1281 73746174 		.ascii	"stats_period_begin_date\000"
 34010      735F7065 
 34010      72696F64 
 34010      5F626567 
 34010      696E5F64 
 34011              	.LASF393:
 34012 1299 696D7573 		.ascii	"imus_data_size\000"
 34012      5F646174 
 34012      615F7369 
 34012      7A6500
 34013              	.LASF360:
 34014 12a8 49544D5F 		.ascii	"ITM_RxBuffer\000"
 34014      52784275 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 735


 34014      66666572 
 34014      00
 34015              	.LASF44:
 34016 12b5 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 34016      4745545F 
 34016      56454C4F 
 34016      43495449 
 34016      455300
 34017              	.LASF377:
 34018 12c8 706F775F 		.ascii	"pow_tension\000"
 34018      74656E73 
 34018      696F6E00 
 34019              	.LASF34:
 34020 12d4 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 34020      4745545F 
 34020      50415241 
 34020      4D5F4C49 
 34020      535400
 34021              	.LASF78:
 34022 12e7 64617461 		.ascii	"data_types\000"
 34022      5F747970 
 34022      657300
 34023              	.LASF17:
 34024 12f2 696E7431 		.ascii	"int16\000"
 34024      3600
 34025              	.LASF168:
 34026 12f8 72656164 		.ascii	"read_exp_port_flag\000"
 34026      5F657870 
 34026      5F706F72 
 34026      745F666C 
 34026      616700
 34027              	.LASF161:
 34028 130b 73776974 		.ascii	"switch_emg\000"
 34028      63685F65 
 34028      6D6700
 34029              	.LASF134:
 34030 1316 61637469 		.ascii	"activate_pwm_rescaling\000"
 34030      76617465 
 34030      5F70776D 
 34030      5F726573 
 34030      63616C69 
 34031              	.LASF127:
 34032 132d 6B5F705F 		.ascii	"k_p_dl\000"
 34032      646C00
 34033              	.LASF94:
 34034 1334 65737469 		.ascii	"estim_curr\000"
 34034      6D5F6375 
 34034      727200
 34035              	.LASF376:
 34036 133f 6465765F 		.ascii	"dev_pwm_limit\000"
 34036      70776D5F 
 34036      6C696D69 
 34036      7400
 34037              	.LASF169:
 34038 134d 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 34038      5F414443 
 34038      5F73656E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 736


 34038      736F7273 
 34038      5F706F72 
 34039              	.LASF386:
 34040 1368 456E636F 		.ascii	"Encoder_Value\000"
 34040      6465725F 
 34040      56616C75 
 34040      6500
 34041              	.LASF339:
 34042 1376 636D645F 		.ascii	"cmd_get_encoder_map\000"
 34042      6765745F 
 34042      656E636F 
 34042      6465725F 
 34042      6D617000 
 34043              	.LASF120:
 34044 138a 75736572 		.ascii	"user_id\000"
 34044      5F696400 
 34045              	.LASF12:
 34046 1392 75696E74 		.ascii	"uint32_t\000"
 34046      33325F74 
 34046      00
 34047              	.LASF234:
 34048 139b 6175785F 		.ascii	"aux_float\000"
 34048      666C6F61 
 34048      7400
 34049              	.LASF392:
 34050 13a5 494D555F 		.ascii	"IMU_connected\000"
 34050      636F6E6E 
 34050      65637465 
 34050      6400
 34051              	.LASF225:
 34052 13b3 4E554D5F 		.ascii	"NUM_MENU\000"
 34052      4D454E55 
 34052      00
 34053              	.LASF237:
 34054 13bc 6175785F 		.ascii	"aux_int32\000"
 34054      696E7433 
 34054      3200
 34055              	.LASF119:
 34056 13c6 62617564 		.ascii	"baud_rate\000"
 34056      5F726174 
 34056      6500
 34057              	.LASF327:
 34058 13d0 745F656E 		.ascii	"t_end\000"
 34058      6400
 34059              	.LASF193:
 34060 13d6 66617374 		.ascii	"fast_act_threshold\000"
 34060      5F616374 
 34060      5F746872 
 34060      6573686F 
 34060      6C6400
 34061              	.LASF220:
 34062 13e9 696E666F 		.ascii	"info_type\000"
 34062      5F747970 
 34062      6500
 34063              	.LASF50:
 34064 13f3 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 34064      4745545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 737


 34064      494D555F 
 34064      52454144 
 34064      494E4753 
 34065              	.LASF299:
 34066 1408 4C435243 		.ascii	"LCRChecksum\000"
 34066      6865636B 
 34066      73756D00 
 34067              	.LASF336:
 34068 1414 6B5F696D 		.ascii	"k_imu\000"
 34068      7500
 34069              	.LASF3:
 34070 141a 73686F72 		.ascii	"short unsigned int\000"
 34070      7420756E 
 34070      7369676E 
 34070      65642069 
 34070      6E7400
 34071              	.LASF148:
 34072 142d 73745F65 		.ascii	"st_encoder\000"
 34072      6E636F64 
 34072      657200
 34073              	.LASF366:
 34074 1438 675F6164 		.ascii	"g_adc_meas\000"
 34074      635F6D65 
 34074      617300
 34075              	.LASF188:
 34076 1443 6D61785F 		.ascii	"max_residual_current\000"
 34076      72657369 
 34076      6475616C 
 34076      5F637572 
 34076      72656E74 
 34077              	.LASF278:
 34078 1458 454E435F 		.ascii	"ENC_L\000"
 34078      4C00
 34079              	.LASF195:
 34080 145e 73745F65 		.ascii	"st_eeprom\000"
 34080      6570726F 
 34080      6D00
 34081              	.LASF222:
 34082 1468 54595045 		.ascii	"TYPES\000"
 34082      5300
 34083              	.LASF361:
 34084 146e 675F7265 		.ascii	"g_ref\000"
 34084      6600
 34085              	.LASF18:
 34086 1474 696E7433 		.ascii	"int32\000"
 34086      3200
 34087              	.LASF383:
 34088 147a 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 34088      4F465F41 
 34088      4E414C4F 
 34088      475F494E 
 34088      50555453 
 34089              	.LASF217:
 34090 148f 696E666F 		.ascii	"infoGet\000"
 34090      47657400 
 34091              	.LASF123:
 34092 1497 73745F6D 		.ascii	"st_motor\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 738


 34092      6F746F72 
 34092      00
 34093              	.LASF397:
 34094 14a0 6D617374 		.ascii	"master_mode\000"
 34094      65725F6D 
 34094      6F646500 
 34095              	.LASF89:
 34096 14ac 46535F46 		.ascii	"FS_FILE\000"
 34096      494C4500 
 34097              	.LASF136:
 34098 14b4 706F735F 		.ascii	"pos_lim_flag\000"
 34098      6C696D5F 
 34098      666C6167 
 34098      00
 34099              	.LASF365:
 34100 14c1 675F6D65 		.ascii	"g_measOld\000"
 34100      61734F6C 
 34100      6400
 34101              	.LASF68:
 34102 14cb 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 34102      524F4C5F 
 34102      414E474C 
 34102      4500
 34103              	.LASF319:
 34104 14d9 636D645F 		.ascii	"cmd_activate\000"
 34104      61637469 
 34104      76617465 
 34104      00
 34105              	.LASF5:
 34106 14e6 5F5F696E 		.ascii	"__int32_t\000"
 34106      7433325F 
 34106      7400
 34107              	.LASF247:
 34108 14f0 7370695F 		.ascii	"spi_delay_menu\000"
 34108      64656C61 
 34108      795F6D65 
 34108      6E7500
 34109              	.LASF110:
 34110 14ff 77697265 		.ascii	"wire_disp\000"
 34110      5F646973 
 34110      7000
 34111              	.LASF158:
 34112 1509 656D675F 		.ascii	"emg_max_value\000"
 34112      6D61785F 
 34112      76616C75 
 34112      6500
 34113              	.LASF252:
 34114 1517 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 34114      4F4D5F50 
 34114      4152414D 
 34114      5F534554 
 34114      00
 34115              	.LASF402:
 34116 1528 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 34116      72635C63 
 34116      6F6D6D61 
 34116      6E645F70 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccv9zWDg.s 			page 739


 34116      726F6365 
 34117              	.LASF142:
 34118 1544 63757272 		.ascii	"current_limit\000"
 34118      656E745F 
 34118      6C696D69 
 34118      7400
 34119              	.LASF58:
 34120 1552 53485F69 		.ascii	"SH_input_mode\000"
 34120      6E707574 
 34120      5F6D6F64 
 34120      6500
 34121              	.LASF80:
 34122 1560 54595045 		.ascii	"TYPE_INT8\000"
 34122      5F494E54 
 34122      3800
 34123              	.LASF192:
 34124 156a 61637469 		.ascii	"activation_mode\000"
 34124      76617469 
 34124      6F6E5F6D 
 34124      6F646500 
 34125              	.LASF289:
 34126 157a 494D555F 		.ascii	"IMU_reading_info\000"
 34126      72656164 
 34126      696E675F 
 34126      696E666F 
 34126      00
 34127              	.LASF14:
 34128 158b 75696E74 		.ascii	"uint16\000"
 34128      313600
 34129              	.LASF177:
 34130 1592 72657374 		.ascii	"rest_delay\000"
 34130      5F64656C 
 34130      617900
 34131              	.LASF233:
 34132 159d 6175785F 		.ascii	"aux_str\000"
 34132      73747200 
 34133              	.LASF26:
 34134 15a5 434D445F 		.ascii	"CMD_PING\000"
 34134      50494E47 
 34134      00
 34135              	.LASF132:
 34136 15ae 6B5F645F 		.ascii	"k_d_c_dl\000"
 34136      635F646C 
 34136      00
 34137              	.LASF210:
 34138 15b7 64697265 		.ascii	"direction\000"
 34138      6374696F 
 34138      6E00
 34139              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
